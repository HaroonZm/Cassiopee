================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:08:22
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
sys.setrecursionlimit(10**7)

# 0-9, A-Z, a-z : total 62 characters, mapped to values 0-61
digits = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz"
char_to_val = {c: i for i, c in enumerate(digits)}

def base_to_int(s, base):
    res = 0
    for c in s:
        res = res * base + char_to_val[c]
    return res

def split_into_powers_of_two(x):
    # split x (binary) into segments of consecutive 1 bits starting at least bit
    # actually, from binary string, split by '0's, each segment is a number with consecutive 1s
    # We just get the binary str of x, split by '0', filter nonempty parts, convert each run of 1's into int
    # runs of length k are (2^k -1)
    # We return list of these integers
    bin_str = bin(x)[2:]
    segs = bin_str.strip('0').split('0')
    res = []
    for seg in segs:
        if seg:
            length = len(seg)
            val = (1 << length) - 1
            res.append(val)
    return res

def grundy(x, memo):
    if x == 0:
        return 0
    if x in memo:
        return memo[x]
    # According to the operation:
    # Step1: from x, split into run-length segments of consecutive 1's in binary, get list L = split_into_powers_of_two(x)
    # Then XOR of the nimbers of resulting elements after step1 + step3 moves define the grundy.
    # The game as described works on multiset. For a single pile x:
    # The next state is to take the split piles L after step 1,
    # and then subtract from one pile by 1<=x<=a possible move.
    # So we consider all moves: For each segment v in L,
    # from v, remove y (1<=y<=v), then compute XOR of grundy of all piles but v plus grundy(v-y)
    # However, this is heavy.
    # But we can use observation:
    # The rules, after step1, from x, we move to the XOR over the Grundy of each run of 1 bits.
    # Since the operation is linear and the splitting is forcing the state to be the XOR of the segments' grundies.
    # This problem reduces to compute the Grundy for a pile x = XOR of grundy of each run in split.
    # Actually the game is equivalent to a Nim pile where pile x transitions to XOR of grundy of runs in binary representation.
    # So the function g(x) satisfy g(x) = mex of set of g(next states)
    # And next states come from subtracting any positive value <= x from one run in the split, after split
    # We can memoize by recursion over splitting.

    segs = split_into_powers_of_two(x)
    if len(segs) == 1 and segs[0] == x:
        # x is a number with all bits set: (2^k)-1 form
        # For such pile, moves = subtracting 1..x, which goes to any smaller number < x
        # We can compute grundy by mex of grundy(y) for y in [0,x-1]
        # To optimize: For (2^k)-1 numbers, grundy is k (proved by experiment)
        # check if x+1 is power of two
        if (x+1)&x == 0:
            res = x.bit_length()
            memo[x] = res
            return res

    # Evaluate grundies of segments and XOR them
    xor_val = 0
    for v in segs:
        xor_val ^= grundy(v,memo)

    mex_set = set()
    # Try moves:
    # from current x, step1 decomposes into segs, we select one run v,
    # subtract y in [1..v], then recombine the grundies
    # So for each seg index i and y in [1..v]:
    # next grundy = XOR over all grundy for segs except i xor grundy(v - y)
    for i,v in enumerate(segs):
        for y in range(1,v+1):
            g = 0
            for j,s in enumerate(segs):
                if j==i:
                    g ^= grundy(s - y, memo)
                else:
                    g ^= grundy(s, memo)
            mex_set.add(g)

    res = 0
    while res in mex_set:
        res += 1
    memo[x] = res
    return res

input = sys.stdin.readline
n = int(input())
memo = dict()
xor_all = 0
for _ in range(n):
    p,s = input().split()
    p = int(p)
    val = base_to_int(s, p)
    g = grundy(val, memo)
    xor_all ^= g

print("win" if xor_all != 0 else "lose")
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'sys' (ID: 17324)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.20001201331615448
    2. '.' → logprob: -2.450011968612671
    3. '<|end|>' → logprob: -2.825011968612671
    4. '\' → logprob: -4.70001220703125
    5. 'newline' → logprob: -5.07501220703125
    6. 'import' → logprob: -5.07501220703125
    7. '' → logprob: -5.82501220703125
    8. '
' → logprob: -5.82501220703125
    9. '<|end|>' → logprob: -5.82501220703125
    10. '\r' → logprob: -6.32501220703125

Token 4: '.set' (ID: 1230)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -5.240481914370321e-05
    2. ' .' → logprob: -10.750052452087402
    3. '[' → logprob: -12.375052452087402
    4. '.user' → logprob: -13.000052452087402
    5. '.​' → logprob: -13.000052452087402
    6. '.`' → logprob: -13.125052452087402
    7. '."""' → logprob: -13.250052452087402
    8. '.[' → logprob: -13.500052452087402
    9. '.import' → logprob: -13.500052452087402
    10. '.readline' → logprob: -13.875052452087402

Token 5: 'rec' (ID: 9285)
  Prédit: 'trace'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'trace' → logprob: -0.7622331976890564
    2. 's' → logprob: -1.1372332572937012
    3. 't' → logprob: -2.887233257293701
    4. 'sys' → logprob: -3.262233257293701
    5. 'set' → logprob: -3.637233257293701
    6. 'soft' → logprob: -4.012233257293701
    7. 'default' → logprob: -4.262233257293701
    8. '_' → logprob: -5.012233257293701
    9. 'ex' → logprob: -5.012233257293701
    10. 'suffix' → logprob: -5.137233257293701

Token 6: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.0037507908418774605
    2. 'ursive' → logprob: -6.378750801086426
    3. 'limit' → logprob: -7.003750801086426
    4. 'ur' → logprob: -7.503750801086426
    5. 'urse' → logprob: -9.253750801086426
    6. 'urs' → logprob: -9.503750801086426
    7. '_limit' → logprob: -9.628750801086426
    8. 'ut' → logprob: -9.753750801086426
    9. 'u' → logprob: -10.003750801086426
    10. 't' → logprob: -10.128750801086426

Token 7: 'limit' (ID: 19698)
  Prédit: 'limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -0.28154218196868896
    2. '_limit' → logprob: -1.531542181968689
    3. '_depth' → logprob: -3.7815423011779785
    4. 'depth' → logprob: -5.1565423011779785
    5. 'error' → logprob: -9.53154182434082
    6. '('_' → logprob: -9.53154182434082
    7. '_' → logprob: -9.65654182434082
    8. ' limit' → logprob: -9.78154182434082
    9. '(' → logprob: -10.03154182434082
    10. '_limits' → logprob: -10.15654182434082

Token 8: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.8193366486229934e-05
    2. '(
' → logprob: -11.625018119812012
    3. ' (' → logprob: -12.375018119812012
    4. '(

' → logprob: -13.250018119812012
    5. '(.' → logprob: -14.000018119812012
    6. '("("' → logprob: -14.500018119812012
    7. '((' → logprob: -14.750018119812012
    8. '('' → logprob: -15.000018119812012
    9. '```' → logprob: -15.000018119812012
    10. '(()' → logprob: -15.875018119812012

Token 9: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.6965333223342896
    2. '100' → logprob: -0.6965333223342896
    3. ' ' → logprob: -5.821533203125
    4. '300' → logprob: -8.696533203125
    5. '500' → logprob: -8.696533203125
    6. '1' → logprob: -10.571533203125
    7. '250' → logprob: -10.696533203125
    8. '999' → logprob: -11.196533203125
    9. '  ' → logprob: -12.196533203125
    10. '200' → logprob: -12.321533203125

Token 10: '**' (ID: 410)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005634739995002747
    2. '00' → logprob: -6.005634784698486
    3. '000' → logprob: -6.005634784698486
    4. '4' → logprob: -7.505634784698486
    5. '6' → logprob: -9.130634307861328
    6. '5' → logprob: -11.755634307861328
    7. '```' → logprob: -12.255634307861328
    8. ')' → logprob: -12.505634307861328
    9. '3' → logprob: -12.630634307861328
    10. '**' → logprob: -12.630634307861328

Token 11: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.0047303494065999985
    2. '9' → logprob: -6.004730224609375
    3. '6' → logprob: -6.129730224609375
    4. '8' → logprob: -9.504730224609375
    5. '```' → logprob: -15.254730224609375
    6. ' ' → logprob: -15.629730224609375
    7. '(' → logprob: -16.754730224609375
    8. '``' → logprob: -17.879730224609375
    9. ')' → logprob: -18.129730224609375
    10. '5' → logprob: -18.254730224609375

Token 12: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3663626305060461e-05
    2. '))' → logprob: -11.75001335144043
    3. ' )' → logprob: -12.12501335144043
    4. ')
' → logprob: -15.62501335144043
    5. ')))' → logprob: -16.75001335144043
    6. ')`' → logprob: -17.00001335144043
    7. ' ' → logprob: -17.25001335144043
    8. '）' → logprob: -18.12501335144043
    9. '`)' → logprob: -18.12501335144043
    10. '```' → logprob: -18.37501335144043

Token 13: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.08865281194448471
    2. '\' → logprob: -3.0886528491973877
    3. '```' → logprob: -4.338652610778809
    4. '\n' → logprob: -4.713652610778809
    5. '
' → logprob: -4.838652610778809
    6. '

' → logprob: -5.838652610778809
    7. '#' → logprob: -6.588652610778809
    8. '`' → logprob: -6.838652610778809
    9. 'import' → logprob: -6.963652610778809
    10. ')' → logprob: -7.463652610778809

Token 14: ' ' (ID: 220)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6963527798652649
    2. 'd' → logprob: -0.9463527798652649
    3. ' def' → logprob: -2.44635272026062
    4. 'rec' → logprob: -5.196352958679199
    5. 'de' → logprob: -5.446352958679199
    6. ' d' → logprob: -5.571352958679199
    7. 'import' → logprob: -6.071352958679199
    8. 'stack' → logprob: -6.696352958679199
    9. ' recursion' → logprob: -6.821352958679199
    10. ' sys' → logprob: -6.946352958679199

Token 15: '0' (ID: 15)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.16257084906101227
    2. 'import' → logprob: -2.5375709533691406
    3. 'input' → logprob: -4.287570953369141
    4. 'd' → logprob: -4.662570953369141
    5. 'n' → logprob: -4.912570953369141
    6. 'sys' → logprob: -4.912570953369141
    7. '#' → logprob: -5.037570953369141
    8. 'max' → logprob: -5.037570953369141
    9. 's' → logprob: -6.037570953369141
    10. 'i' → logprob: -6.037570953369141

Token 16: '-' (ID: 12)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.35868704319000244
    2. '#' → logprob: -2.608686923980713
    3. '\' → logprob: -2.983686923980713
    4. ')' → logprob: -2.983686923980713
    5. '0' → logprob: -3.733686923980713
    6. ':' → logprob: -4.608686923980713
    7. '.' → logprob: -4.608686923980713
    8. ' 
' → logprob: -4.733686923980713
    9. ',' → logprob: -4.983686923980713
    10. '2' → logprob: -5.108686923980713

Token 17: '9' (ID: 24)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.8029876947402954
    2. 'indexed' → logprob: -1.4279876947402954
    3. 'index' → logprob: -2.052987575531006
    4. 'based' → logprob: -2.302987575531006
    5. 's' → logprob: -3.052987575531006
    6. '9' → logprob: -3.927987575531006
    7. 'inf' → logprob: -5.427987575531006
    8. 'in' → logprob: -6.302987575531006
    9. '6' → logprob: -6.677987575531006
    10. 'n' → logprob: -7.177987575531006

Token 18: ',' (ID: 11)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3127494752407074
    2. '#' → logprob: -3.1877493858337402
    3. ' ' → logprob: -3.1877493858337402
    4. '[' → logprob: -3.4377493858337402
    5. ':' → logprob: -3.4377493858337402
    6. ')' → logprob: -3.4377493858337402
    7. 'digits' → logprob: -3.9377493858337402
    8. '```' → logprob: -4.06274938583374
    9. ',' → logprob: -4.68774938583374
    10. '.' → logprob: -5.18774938583374

Token 19: ' A' (ID: 355)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.036312460899353
    2. ' a' → logprob: -1.161312460899353
    3. 'A' → logprob: -2.0363125801086426
    4. ' A' → logprob: -2.6613125801086426
    5. 'abcdefghijklmnopqrstuvwxyz' → logprob: -2.6613125801086426
    6. ' ' → logprob: -3.6613125801086426
    7. 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' → logprob: -4.161312580108643
    8. '.' → logprob: -4.786312580108643
    9. ':' → logprob: -6.661312580108643
    10. 'import' → logprob: -6.661312580108643

Token 20: '-Z' (ID: 17216)
  Prédit: '-Z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-Z' → logprob: -0.13109369575977325
    2. 'Z' → logprob: -3.006093740463257
    3. '-' → logprob: -3.381093740463257
    4. '-F' → logprob: -3.506093740463257
    5. 'F' → logprob: -5.881093502044678
    6. '-Za' → logprob: -6.131093502044678
    7. '-z' → logprob: -6.506093502044678
    8. 'z' → logprob: -7.006093502044678
    9. '~' → logprob: -7.756093502044678
    10. ' -' → logprob: -8.506093978881836

Token 21: ',' (ID: 11)
  Prédit: 'abcdefghijklmnopqrstuvwxyz'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abcdefghijklmnopqrstuvwxyz' → logprob: -0.8019359111785889
    2. ',' → logprob: -0.9269359111785889
    3. 'a' → logprob: -2.801935911178589
    4. '0' → logprob: -3.426935911178589
    5. '_' → logprob: -3.801935911178589
    6. ' ,' → logprob: -4.926936149597168
    7. '```' → logprob: -5.051936149597168
    8. ' ' → logprob: -5.051936149597168
    9. 'import' → logprob: -5.176936149597168
    10. 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' → logprob: -5.426936149597168

Token 22: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3502122759819031
    2. ' a' → logprob: -1.4752123355865479
    3. '_' → logprob: -3.225212335586548
    4. ' ' → logprob: -3.850212335586548
    5. ' _' → logprob: -5.975212097167969
    6. '0' → logprob: -7.475212097167969
    7. '_a' → logprob: -7.725212097167969
    8. '```' → logprob: -7.850212097167969
    9. '_,' → logprob: -8.100212097167969
    10. '  ' → logprob: -8.600212097167969

Token 23: '-z' (ID: 16826)
  Prédit: '-z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-z' → logprob: -0.13208064436912537
    2. 'z' → logprob: -2.132080554962158
    3. 'a' → logprob: -6.132080554962158
    4. '-Z' → logprob: -7.257080554962158
    5. '_z' → logprob: -7.257080554962158
    6. '-' → logprob: -7.382080554962158
    7. 'Z' → logprob: -7.382080554962158
    8. '-Za' → logprob: -8.882081031799316
    9. '```' → logprob: -10.257081031799316
    10. 'l' → logprob: -10.257081031799316

Token 24: ' :' (ID: 712)
  Prédit: 'abcdefghijklmnopqrstuvwxyz'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abcdefghijklmnopqrstuvwxyz' → logprob: -0.37027162313461304
    2. '
' → logprob: -2.745271682739258
    3. 'import' → logprob: -3.245271682739258
    4. 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' → logprob: -3.370271682739258
    5. '```' → logprob: -3.870271682739258
    6. '012' → logprob: -3.870271682739258
    7. ',' → logprob: -3.870271682739258
    8. 'chars' → logprob: -4.120271682739258
    9. '0' → logprob: -4.245271682739258
    10. 'characters' → logprob: -4.370271682739258

Token 25: ' total' (ID: 3609)
  Prédit: 'abcdefghijklmnopqrstuvwxyz'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abcdefghijklmnopqrstuvwxyz' → logprob: -1.4243285655975342
    2. ' ' → logprob: -1.7993285655975342
    3. '012' → logprob: -1.7993285655975342
    4. '0' → logprob: -1.9243285655975342
    5. '_' → logprob: -2.174328565597534
    6. ' _' → logprob: -3.674328565597534
    7. ''' → logprob: -4.174328804016113
    8. '[' → logprob: -4.424328804016113
    9. 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' → logprob: -4.549328804016113
    10. '`' → logprob: -4.549328804016113

Token 26: ' ' (ID: 220)
  Prédit: '62'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '62' → logprob: -0.19834619760513306
    2. ' ' → logprob: -2.0733461380004883
    3. '=' → logprob: -3.0733461380004883
    4. ' =' → logprob: -6.448346138000488
    5. '```' → logprob: -6.573346138000488
    6. '6' → logprob: -6.698346138000488
    7. ':' → logprob: -7.198346138000488
    8. '61' → logprob: -7.823346138000488
    9. '`' → logprob: -7.948346138000488
    10. '7' → logprob: -8.448346138000488

Token 27: '62' (ID: 8947)
  Prédit: '62'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '62' → logprob: -0.0033761460799723864
    2. ' ' → logprob: -6.378376007080078
    3. '=' → logprob: -6.753376007080078
    4. '6' → logprob: -8.253376007080078
    5. '```' → logprob: -9.378376007080078
    6. ' =' → logprob: -10.628376007080078
    7. '`' → logprob: -10.628376007080078
    8. '61' → logprob: -11.003376007080078
    9. '7' → logprob: -11.503376007080078
    10. '``' → logprob: -11.628376007080078

Token 28: ' characters' (ID: 9862)
  Prédit: 'chars'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'chars' → logprob: -1.0402805805206299
    2. 'characters' → logprob: -1.0402805805206299
    3. '```' → logprob: -1.9152805805206299
    4. 'abcdefghijklmnopqrstuvwxyz' → logprob: -2.91528058052063
    5. ')' → logprob: -4.290280342102051
    6. '
' → logprob: -4.665280342102051
    7. 'char' → logprob: -4.790280342102051
    8. '#' → logprob: -4.915280342102051
    9. 'possible' → logprob: -5.165280342102051
    10. 'digits' → logprob: -5.290280342102051

Token 29: ',' (ID: 11)
  Prédit: 'characters'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'characters' → logprob: -0.7021034955978394
    2. 'chars' → logprob: -1.5771034955978394
    3. 'char' → logprob: -2.202103614807129
    4. 'abcdefghijklmnopqrstuvwxyz' → logprob: -3.077103614807129
    5. 'charset' → logprob: -3.327103614807129
    6. '```' → logprob: -3.577103614807129
    7. 'character' → logprob: -4.202103614807129
    8. '\n' → logprob: -4.952103614807129
    9. 'valid' → logprob: -5.077103614807129
    10. '_chars' → logprob: -5.202103614807129

Token 30: ' mapped' (ID: 47205)
  Prédit: 'characters'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'characters' → logprob: -1.2172412872314453
    2. 'chars' → logprob: -1.3422412872314453
    3. 'char' → logprob: -1.4672412872314453
    4. 'charset' → logprob: -2.8422412872314453
    5. 'base' → logprob: -3.9672412872314453
    6. ' char' → logprob: -4.092241287231445
    7. 'character' → logprob: -4.342241287231445
    8. '#' → logprob: -4.717241287231445
    9. 'CHAR' → logprob: -4.717241287231445
    10. 'allowed' → logprob: -4.717241287231445

Token 31: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.9380990862846375
    2. ' to' → logprob: -1.3130991458892822
    3. '_' → logprob: -1.8130991458892822
    4. ' ' → logprob: -3.3130991458892822
    5. ' =' → logprob: -4.063098907470703
    6. '```' → logprob: -4.063098907470703
    7. ')' → logprob: -4.563098907470703
    8. 'char' → logprob: -4.688098907470703
    9. '<|end|>' → logprob: -4.688098907470703
    10. '0' → logprob: -4.688098907470703

Token 32: ' values' (ID: 4824)
  Prédit: '012'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '012' → logprob: -1.2966934442520142
    2. '"' → logprob: -1.5466934442520142
    3. ' ' → logprob: -2.1716933250427246
    4. '0' → logprob: -2.4216933250427246
    5. ''' → logprob: -2.5466933250427246
    6. 'abcdefghijklmnopqrstuvwxyz' → logprob: -2.7966933250427246
    7. 'string' → logprob: -3.2966933250427246
    8. 'index' → logprob: -3.7966933250427246
    9. ' '' → logprob: -4.171693325042725
    10. ' a' → logprob: -4.171693325042725

Token 33: ' ' (ID: 220)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3653281033039093
    2. '0' → logprob: -2.240328073501587
    3. ' =' → logprob: -2.865328073501587
    4. ' _' → logprob: -3.490328073501587
    5. '```' → logprob: -3.615328073501587
    6. ' ' → logprob: -4.490328311920166
    7. '[' → logprob: -4.865328311920166
    8. '=' → logprob: -4.865328311920166
    9. ':' → logprob: -4.990328311920166
    10. ',' → logprob: -5.240328311920166

Token 34: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.650603175163269
    2. '=' → logprob: -1.025603175163269
    3. 'range' → logprob: -3.0256032943725586
    4. 'from' → logprob: -3.4006032943725586
    5. ' =' → logprob: -4.025603294372559
    6. '{' → logprob: -4.900603294372559
    7. 'r' → logprob: -5.650603294372559
    8. '[' → logprob: -6.275603294372559
    9. ' ' → logprob: -6.650603294372559
    10. '```' → logprob: -7.025603294372559

Token 35: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.05324582755565643
    2. 'to' → logprob: -3.678245782852173
    3. '..' → logprob: -4.678246021270752
    4. ' to' → logprob: -4.678246021270752
    5. '...' → logprob: -5.553246021270752
    6. '~' → logprob: -6.803246021270752
    7. ' through' → logprob: -7.178246021270752
    8. '.' → logprob: -7.553246021270752
    9. '```' → logprob: -8.053245544433594
    10. '<|end|>' → logprob: -8.303245544433594

Token 36: '61' (ID: 8954)
  Prédit: '61'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '61' → logprob: -0.0022659937385469675
    2. ' ' → logprob: -6.252265930175781
    3. '9' → logprob: -8.502265930175781
    4. '62' → logprob: -9.752265930175781
    5. '```' → logprob: -10.502265930175781
    6. '1' → logprob: -11.564765930175781
    7. '6' → logprob: -12.002265930175781
    8. '`' → logprob: -12.252265930175781
    9. '60' → logprob: -12.814765930175781
    10. '5' → logprob: -13.002265930175781

Token 37: '
' (ID: 198)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -1.3158460855484009
    2. '\n' → logprob: -1.6908460855484009
    3. 'a' → logprob: -1.9408460855484009
    4. 'def' → logprob: -2.0658459663391113
    5. '
' → logprob: -2.5658459663391113
    6. '\' → logprob: -2.8158459663391113
    7. '0' → logprob: -3.0658459663391113
    8. 'chars' → logprob: -3.6908459663391113
    9. 'char' → logprob: -4.690845966339111
    10. 'mapping' → logprob: -4.690845966339111

Token 38: 'digits' (ID: 135574)
  Prédit: 'char'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'char' → logprob: -0.3745318055152893
    2. 'def' → logprob: -2.7495317459106445
    3. 'chars' → logprob: -2.7495317459106445
    4. 'CHAR' → logprob: -3.3745317459106445
    5. 'mapping' → logprob: -3.4995317459106445
    6. 'characters' → logprob: -3.6245317459106445
    7. 'base' → logprob: -3.9995317459106445
    8. '```' → logprob: -4.3745317459106445
    9. '_char' → logprob: -4.6245317459106445
    10. 'digits' → logprob: -4.9995317459106445

Token 39: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08897001296281815
    2. '=' → logprob: -2.4639699459075928
    3. ' ' → logprob: -11.338970184326172
    4. '_' → logprob: -12.088970184326172
    5. '[' → logprob: -13.088970184326172
    6. '_map' → logprob: -13.713970184326172
    7. 's' → logprob: -13.713970184326172
    8. '_mapping' → logprob: -14.088970184326172
    9. ',' → logprob: -14.338970184326172
    10. 'import' → logprob: -14.338970184326172

Token 40: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.20683550834655762
    2. ''' → logprob: -1.7068355083465576
    3. ' "' → logprob: -5.456835746765137
    4. ' '' → logprob: -7.706835746765137
    5. '['' → logprob: -8.206835746765137
    6. ''b' → logprob: -8.831835746765137
    7. ''d' → logprob: -9.331835746765137
    8. ''int' → logprob: -10.331835746765137
    9. ''import' → logprob: -10.706835746765137
    10. '"strconv' → logprob: -10.956835746765137

Token 41: '012' (ID: 19267)
  Prédit: '012'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '012' → logprob: -9.729906196298543e-06
    2. '0' → logprob: -11.875009536743164
    3. 'abcdefghijklmnopqrstuvwxyz' → logprob: -13.500009536743164
    4. 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' → logprob: -14.250009536743164
    5. ' ' → logprob: -15.250009536743164
    6. '000' → logprob: -15.375009536743164
    7. '"' → logprob: -15.500009536743164
    8. '```' → logprob: -17.875009536743164
    9. ''' → logprob: -18.000009536743164
    10. '123' → logprob: -19.125009536743164

Token 42: '345' (ID: 22901)
  Prédit: '345'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '345' → logprob: -2.2723104848410003e-05
    2. '3' → logprob: -10.750022888183594
    3. '346' → logprob: -14.250022888183594
    4. 'abcdefghijklmnopqrstuvwxyz' → logprob: -15.250022888183594
    5. '012' → logprob: -16.250022888183594
    6. '234' → logprob: -16.500022888183594
    7. '344' → logprob: -16.500022888183594
    8. '34' → logprob: -16.500022888183594
    9. '356' → logprob: -17.875022888183594
    10. '348' → logprob: -18.500022888183594

Token 43: '678' (ID: 30833)
  Prédit: '678'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '678' → logprob: -5.512236498361744e-07
    2. '67' → logprob: -15.250000953674316
    3. '679' → logprob: -15.625000953674316
    4. '789' → logprob: -17.125
    5. 'abcdefghijklmnopqrstuvwxyz' → logprob: -17.375
    6. '9' → logprob: -18.75
    7. '6' → logprob: -19.75
    8. '687' → logprob: -20.25
    9. '69' → logprob: -20.75
    10. '567' → logprob: -20.75

Token 44: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: 0.0
    2. '９' → logprob: -19.25
    3. 'abcdefghijklmnopqrstuvwxyz' → logprob: -19.625
    4. '90' → logprob: -21.0
    5. '۹' → logprob: -21.125
    6. '912' → logprob: -21.5
    7. '901' → logprob: -21.5
    8. '```' → logprob: -21.875
    9. '987' → logprob: -22.25
    10. '91' → logprob: -23.25

Token 45: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' (ID: 184150)
  Prédit: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' → logprob: -5.908022285439074e-05
    2. 'abcdefghijklmnopqrstuvwxyz' → logprob: -9.750059127807617
    3. 'ABCDEFGHIJKLMNOP' → logprob: -14.625059127807617
    4. 'ABC' → logprob: -15.875059127807617
    5. 'ABCDEFGHI' → logprob: -16.000059127807617
    6. '
' → logprob: -17.750059127807617
    7. 'QRSTUVWXYZ' → logprob: -19.125059127807617
    8. '```' → logprob: -19.875059127807617
    9. 'ABCDEFG' → logprob: -20.125059127807617
    10. '

' → logprob: -20.125059127807617

Token 46: 'abcdefghijklmnopqrstuvwxyz' (ID: 161518)
  Prédit: 'abcdefghijklmnopqrstuvwxyz'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abcdefghijklmnopqrstuvwxyz' → logprob: -2.641841820150148e-05
    2. 'abcdefghijkl' → logprob: -11.00002670288086
    3. 'mnopqrstuvwxyz' → logprob: -11.87502670288086
    4. 'bc' → logprob: -14.25002670288086
    5. 'abcdefgh' → logprob: -14.37502670288086
    6. 'abcdef' → logprob: -15.12502670288086
    7. 'ijkl' → logprob: -15.25002670288086
    8. 'qrst' → logprob: -15.50002670288086
    9. 'uvwxyz' → logprob: -15.87502670288086
    10. 'def' → logprob: -16.00002670288086

Token 47: '"
' (ID: 1092)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -2.0339031834737398e-05
    2. '"
' → logprob: -11.125020027160645
    3. '"

' → logprob: -13.250020027160645
    4. '"`' → logprob: -13.750020027160645
    5. '"""' → logprob: -14.000020027160645
    6. ' "' → logprob: -14.875020027160645
    7. '```' → logprob: -14.875020027160645
    8. 'def' → logprob: -15.000020027160645
    9. ''"' → logprob: -15.375020027160645
    10. '")' → logprob: -15.500020027160645

Token 48: 'char' (ID: 3257)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.004967612214386463
    2. '#' → logprob: -5.87996768951416
    3. '
' → logprob: -7.12996768951416
    4. ')' → logprob: -8.00496768951416
    5. '```' → logprob: -8.87996768951416
    6. 'import' → logprob: -9.25496768951416
    7. '<|end|>' → logprob: -9.50496768951416
    8. '\' → logprob: -9.75496768951416
    9. 'char' → logprob: -10.00496768951416
    10. 'index' → logprob: -10.00496768951416

Token 49: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -0.017160853371024132
    2. '_map' → logprob: -4.392160892486572
    3. '2' → logprob: -6.267160892486572
    4. 's' → logprob: -6.767160892486572
    5. '_index' → logprob: -7.892160892486572
    6. 'map' → logprob: -8.017160415649414
    7. '_indices' → logprob: -8.142160415649414
    8. 'to' → logprob: -8.517160415649414
    9. '_idx' → logprob: -8.892160415649414
    10. '_mapping' → logprob: -9.517160415649414

Token 50: '_val' (ID: 13694)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.1318501979112625
    2. '_value' → logprob: -2.131850242614746
    3. 'val' → logprob: -6.131850242614746
    4. 'v' → logprob: -6.506850242614746
    5. '_val' → logprob: -6.881850242614746
    6. 'index' → logprob: -9.631850242614746
    7. 'int' → logprob: -9.631850242614746
    8. ' value' → logprob: -10.131850242614746
    9. 'valu' → logprob: -11.256850242614746
    10. 'digit' → logprob: -11.256850242614746

Token 51: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10045111179351807
    2. '=' → logprob: -2.3504509925842285
    3. '[' → logprob: -8.475451469421387
    4. ' ={' → logprob: -11.225451469421387
    5. '={}' → logprob: -11.600451469421387
    6. ' ' → logprob: -12.475451469421387
    7. '={' → logprob: -12.975451469421387
    8. '={"' → logprob: -13.100451469421387
    9. 's' → logprob: -13.350451469421387
    10. '{' → logprob: -13.850451469421387

Token 52: ' {' (ID: 354)
  Prédit: ' {'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' {' → logprob: -0.029624348506331444
    2. ' {}' → logprob: -3.7796244621276855
    3. '{' → logprob: -5.4046244621276855
    4. ' dict' → logprob: -7.2796244621276855
    5. 'dict' → logprob: -7.4046244621276855
    6. '{}' → logprob: -7.5296244621276855
    7. ' ' → logprob: -11.404623985290527
    8. ' {
' → logprob: -12.279623985290527
    9. ' {"' → logprob: -12.529623985290527
    10. ' defaultdict' → logprob: -13.279623985290527

Token 53: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.06649038940668106
    2. 'char' → logprob: -3.566490411758423
    3. 'ch' → logprob: -4.191490173339844
    4. '}' → logprob: -4.191490173339844
    5. 'd' → logprob: -5.441490173339844
    6. 'k' → logprob: -7.066490173339844
    7. ' c' → logprob: -7.941490173339844
    8. 'chars' → logprob: -9.566490173339844
    9. '   ' → logprob: -9.941490173339844
    10. ' ch' → logprob: -10.066490173339844

Token 54: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.20169740915298462
    2. ':i' → logprob: -1.7016973495483398
    3. ':c' → logprob: -8.70169734954834
    4. ' :' → logprob: -9.70169734954834
    5. ':index' → logprob: -10.32669734954834
    6. ':k' → logprob: -11.45169734954834
    7. ':v' → logprob: -12.45169734954834
    8. ':d' → logprob: -12.82669734954834
    9. ':value' → logprob: -12.95169734954834
    10. ':int' → logprob: -13.45169734954834

Token 55: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.20294244587421417
    2. 'i' → logprob: -1.7029424905776978
    3. ' idx' → logprob: -6.702942371368408
    4. 'idx' → logprob: -9.077942848205566
    5. ' v' → logprob: -9.202942848205566
    6. 'v' → logprob: -10.202942848205566
    7. ' index' → logprob: -11.202942848205566
    8. ' ' → logprob: -11.327942848205566
    9. 'index' → logprob: -11.577942848205566
    10. '0' → logprob: -11.827942848205566

Token 56: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.38687366247177124
    2. 'for' → logprob: -1.136873722076416
    3. ' ' → logprob: -13.261873245239258
    4. '	for' → logprob: -14.886873245239258
    5. '
' → logprob: -15.511873245239258
    6. 'or' → logprob: -16.386873245239258
    7. '   ' → logprob: -16.511873245239258
    8. ')' → logprob: -16.636873245239258
    9. '```' → logprob: -17.386873245239258
    10. '+' → logprob: -17.761873245239258

Token 57: ' i' (ID: 575)
  Prédit: ' digits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' digits' → logprob: -0.2954808175563812
    2. ' c' → logprob: -1.4204808473587036
    3. ' ' → logprob: -4.545480728149414
    4. 'digits' → logprob: -6.170480728149414
    5. ' range' → logprob: -7.420480728149414
    6. ' i' → logprob: -8.045480728149414
    7. 'c' → logprob: -8.420480728149414
    8. '  ' → logprob: -9.045480728149414
    9. ' d' → logprob: -9.420480728149414
    10. ' char' → logprob: -10.170480728149414

Token 58: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.22054003179073334
    2. 'in' → logprob: -1.8455400466918945
    3. 'n' → logprob: -3.9705400466918945
    4. ',' → logprob: -4.0955400466918945
    5. 'c' → logprob: -6.5955400466918945
    6. ',c' → logprob: -6.8455400466918945
    7. ' c' → logprob: -7.2205400466918945
    8. ' ,' → logprob: -7.5955400466918945
    9. ' n' → logprob: -8.095540046691895
    10. ',n' → logprob: -8.845540046691895

Token 59: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.003615870140492916
    2. ' c' → logprob: -5.628615856170654
    3. ' in' → logprob: -11.503616333007812
    4. 'in' → logprob: -12.378616333007812
    5. '<|end|>' → logprob: -14.378616333007812
    6. '```' → logprob: -15.128616333007812
    7. '_c' → logprob: -15.503616333007812
    8. '(c' → logprob: -16.003616333007812
    9. 'enumer' → logprob: -16.503616333007812
    10. '	c' → logprob: -16.753616333007812

Token 60: ' in' (ID: 306)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3520800769329071
    2. ' in' → logprob: -1.6020801067352295
    3. 'in' → logprob: -2.3520801067352295
    4. 's' → logprob: -10.477080345153809
    5. ' ' → logprob: -10.852080345153809
    6. ' n' → logprob: -11.102080345153809
    7. ')' → logprob: -11.727080345153809
    8. ',' → logprob: -11.852080345153809
    9. 'd' → logprob: -12.102080345153809
    10. 'i' → logprob: -12.602080345153809

Token 61: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.5759657621383667
    2. ' enumerate' → logprob: -0.8259657621383667
    3. 'en' → logprob: -11.200965881347656
    4. '(en' → logprob: -11.575965881347656
    5. '```' → logprob: -13.575965881347656
    6. 'digits' → logprob: -13.700965881347656
    7. 'd' → logprob: -15.200965881347656
    8. 'enum' → logprob: -15.825965881347656
    9. 'e' → logprob: -16.325965881347656
    10. '.enumer' → logprob: -16.575965881347656

Token 62: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.0015881775179877877
    2. 'digits' → logprob: -6.751588344573975
    3. 'd' → logprob: -8.376587867736816
    4. '(' → logprob: -8.751587867736816
    5. ' digits' → logprob: -10.626587867736816
    6. ' d' → logprob: -13.126587867736816
    7. ' (' → logprob: -13.626587867736816
    8. '(chars' → logprob: -14.626587867736816
    9. '}' → logprob: -14.751587867736816
    10. ')d' → logprob: -15.376587867736816

Token 63: 'igits' (ID: 64824)
  Prédit: 'igits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'igits' → logprob: -0.0013840439496561885
    2. 'digits' → logprob: -6.626384258270264
    3. 'ig' → logprob: -10.251383781433105
    4. 'igit' → logprob: -11.751383781433105
    5. ')' → logprob: -12.126383781433105
    6. 'igts' → logprob: -12.751383781433105
    7. 'd' → logprob: -13.626383781433105
    8. ')}' → logprob: -13.626383781433105
    9. '}' → logprob: -14.126383781433105
    10. 'i' → logprob: -14.126383781433105

Token 64: ')}

' (ID: 184554)
  Prédit: ')}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')}' → logprob: -2.522638169466518e-05
    2. '}' → logprob: -11.250024795532227
    3. ')' → logprob: -11.500024795532227
    4. ')}
' → logprob: -13.625024795532227
    5. '")}' → logprob: -15.500024795532227
    6. ');}' → logprob: -15.625024795532227
    7. '})' → logprob: -15.750024795532227
    8. ')}

' → logprob: -16.000024795532227
    9. ' )' → logprob: -16.125024795532227
    10. '))' → logprob: -16.625024795532227

Token 65: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0037219305522739887
    2. '```' → logprob: -6.503721714019775
    3. '
' → logprob: -6.628721714019775
    4. ')' → logprob: -8.253722190856934
    5. '#' → logprob: -8.503722190856934
    6. '\' → logprob: -9.378722190856934
    7. '\n' → logprob: -9.503722190856934
    8. ' def' → logprob: -10.128722190856934
    9. 'newline' → logprob: -10.503722190856934
    10. 'd' → logprob: -10.628722190856934

Token 66: ' base' (ID: 3611)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5301768779754639
    2. ' encode' → logprob: -1.4051768779754639
    3. ' decode' → logprob: -2.030176877975464
    4. ' convert' → logprob: -3.780176877975464
    5. ' base' → logprob: -4.780177116394043
    6. ' space' → logprob: -6.530177116394043
    7. ' val' → logprob: -8.155177116394043
    8. ' char' → logprob: -8.155177116394043
    9. ' parse' → logprob: -8.530177116394043
    10. ' s' → logprob: -8.530177116394043

Token 67: '_to' (ID: 5089)
  Prédit: '_convert'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_convert' → logprob: -0.6121931076049805
    2. '62' → logprob: -1.2371931076049805
    3. '_encode' → logprob: -2.3621931076049805
    4. 'convert' → logprob: -3.6121931076049805
    5. '_n' → logprob: -3.8621931076049805
    6. '_decode' → logprob: -4.6121931076049805
    7. '_' → logprob: -4.8621931076049805
    8. 'n' → logprob: -6.6121931076049805
    9. '_conversion' → logprob: -6.6121931076049805
    10. 'encode' → logprob: -7.1121931076049805

Token 68: '_int' (ID: 12285)
  Prédit: '_int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_int' → logprob: -0.15387068688869476
    2. '_decimal' → logprob: -2.1538705825805664
    3. '_dec' → logprob: -3.9038705825805664
    4. 'int' → logprob: -5.653870582580566
    5. '10' → logprob: -7.278870582580566
    6. 'decimal' → logprob: -7.528870582580566
    7. '_str' → logprob: -7.653870582580566
    8. '_num' → logprob: -7.653870582580566
    9. '_' → logprob: -7.653870582580566
    10. '_i' → logprob: -9.653870582580566

Token 69: '(s' (ID: 1858)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5383912920951843
    2. '(s' → logprob: -1.038391351699829
    3. '(base' → logprob: -2.913391351699829
    4. '(string' → logprob: -5.66339111328125
    5. '(code' → logprob: -6.41339111328125
    6. '(input' → logprob: -7.16339111328125
    7. '(x' → logprob: -7.91339111328125
    8. 's' → logprob: -8.16339111328125
    9. '(text' → logprob: -8.28839111328125
    10. '(line' → logprob: -8.41339111328125

Token 70: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.025292832404375076
    2. ',' → logprob: -3.9002928733825684
    3. ')' → logprob: -5.400292873382568
    4. ':' → logprob: -9.52529239654541
    5. '):
' → logprob: -10.02529239654541
    6. 's' → logprob: -10.27529239654541
    7. ' ):' → logprob: -10.27529239654541
    8. ' ,' → logprob: -11.52529239654541
    9. '[' → logprob: -12.15029239654541
    10. ',s' → logprob: -12.40029239654541

Token 71: ' base' (ID: 3611)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.11094755679368973
    2. 'b' → logprob: -2.610947608947754
    3. ' base' → logprob: -3.485947608947754
    4. ' b' → logprob: -7.610947608947754
    5. 'k' → logprob: -8.610947608947754
    6. ')' → logprob: -9.235947608947754
    7. '):' → logprob: -10.485947608947754
    8. 'rad' → logprob: -10.610947608947754
    9. ' ' → logprob: -11.235947608947754
    10. '```' → logprob: -11.360947608947754

Token 72: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0003243798855692148
    2. ')' → logprob: -8.125324249267578
    3. ':' → logprob: -11.875324249267578
    4. ',' → logprob: -12.000324249267578
    5. ' ):' → logprob: -12.125324249267578
    6. '):
' → logprob: -12.375324249267578
    7. '=' → logprob: -13.125324249267578
    8. 's' → logprob: -13.875324249267578
    9. '}:' → logprob: -14.500324249267578
    10. ' ' → logprob: -14.750324249267578

Token 73: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003123406320810318
    2. ' i' → logprob: -6.5031232833862305
    3. 'n' → logprob: -7.5031232833862305
    4. 'i' → logprob: -7.7531232833862305
    5. ' ' → logprob: -8.25312328338623
    6. '  ' → logprob: -9.25312328338623
    7. ':' → logprob: -9.62812328338623
    8. '    ' → logprob: -10.25312328338623
    9. ' n' → logprob: -10.37812328338623
    10. ' result' → logprob: -10.62812328338623

Token 74: ' res' (ID: 694)
  Prédit: ' val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' result' → logprob: -1.4645453691482544
    2. ' val' → logprob: -1.4645453691482544
    3. 'result' → logprob: -1.4645453691482544
    4. ' res' → logprob: -2.089545249938965
    5. '   ' → logprob: -2.714545249938965
    6. 'val' → logprob: -3.089545249938965
    7. 'res' (adapté à ' res') → logprob: -3.339545249938965
    8. 'value' → logprob: -4.464545249938965
    9. 'n' → logprob: -4.964545249938965
    10. ' value' → logprob: -5.214545249938965

Token 75: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.021288111805915833
    2. '=' → logprob: -4.02128791809082
    3. ' ' → logprob: -5.77128791809082
    4. ' +=' → logprob: -12.02128791809082
    5. '  ' → logprob: -13.39628791809082
    6. ' |=' → logprob: -13.64628791809082
    7. ' *=' → logprob: -13.77128791809082
    8. '    ' → logprob: -14.14628791809082
    9. '_' → logprob: -14.14628791809082
    10. ')' → logprob: -14.14628791809082

Token 76: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.012510590255260468
    2. ' ' → logprob: -4.387510776519775
    3. '   ' → logprob: -14.137510299682617
    4. ' ' → logprob: -16.387510299682617
    5. '  ' → logprob: -17.762510299682617
    6. 's' → logprob: -17.950010299682617
    7. '۰' → logprob: -18.012510299682617
    8. '```' → logprob: -18.637510299682617
    9. '000' → logprob: -19.387510299682617
    10. '00' → logprob: -19.387510299682617

Token 77: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.625000953674316
    3. '```' → logprob: -20.125001907348633
    4. '۰' → logprob: -20.375001907348633
    5. '   ' → logprob: -20.750001907348633
    6. '000' → logprob: -21.625001907348633
    7. 'int' → logprob: -21.750001907348633
    8. '00' → logprob: -21.750001907348633
    9. '０' → logprob: -22.187501907348633
    10. '`' → logprob: -22.375001907348633

Token 78: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06490367650985718
    2. ' for' → logprob: -3.314903736114502
    3. '
' → logprob: -4.564903736114502
    4. '    
' → logprob: -5.314903736114502
    5. '<|end|>' → logprob: -5.564903736114502
    6. 'for' → logprob: -6.314903736114502
    7. ' ' → logprob: -6.564903736114502
    8. '	for' → logprob: -7.439903736114502
    9. ')' → logprob: -7.564903736114502
    10. '  ' → logprob: -7.689903736114502

Token 79: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.024670321494340897
    2. ' for' → logprob: -3.774670362472534
    3. 'for' → logprob: -6.774670124053955
    4. '    
' → logprob: -8.524670600891113
    5. '
' → logprob: -10.649670600891113
    6. ')' → logprob: -11.024670600891113
    7. ' ' → logprob: -11.649670600891113
    8. '	for' → logprob: -11.649670600891113
    9. '    ' → logprob: -11.899670600891113
    10. ':' → logprob: -12.774670600891113

Token 80: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3870803117752075
    2. 'for' (adapté à ' for') → logprob: -1.1370803117752075
    3. '   ' → logprob: -8.512080192565918
    4. '	for' → logprob: -12.512080192565918
    5. ' ' → logprob: -14.012080192565918
    6. ':' → logprob: -14.137080192565918
    7. ')' → logprob: -14.262080192565918
    8. '```' → logprob: -14.262080192565918
    9. ' 
' → logprob: -14.387080192565918
    10. '    
' → logprob: -14.637080192565918

Token 81: ' c' (ID: 274)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6461575627326965
    2. ' c' → logprob: -0.7711575627326965
    3. ' s' → logprob: -4.521157741546631
    4. 'c' → logprob: -6.146157741546631
    5. ' ch' → logprob: -8.271157264709473
    6. '_' → logprob: -10.021157264709473
    7. ' char' → logprob: -10.396157264709473
    8. 's' → logprob: -10.521157264709473
    9. 'ch' → logprob: -10.521157264709473
    10. ' in' → logprob: -11.146157264709473

Token 82: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.007363945245742798
    2. 'in' → logprob: -5.132363796234131
    3. ' ' → logprob: -6.632363796234131
    4. ' i' → logprob: -10.507364273071289
    5. '  ' → logprob: -10.632364273071289
    6. 's' → logprob: -10.882364273071289
    7. '   ' → logprob: -11.507364273071289
    8. '    ' → logprob: -12.132364273071289
    9. ' s' → logprob: -12.382364273071289
    10. 'n' → logprob: -12.382364273071289

Token 83: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.009787374176084995
    2. 's' → logprob: -4.634787559509277
    3. ' ' → logprob: -10.384787559509277
    4. '<|end|>' → logprob: -15.759787559509277
    5. ' ' → logprob: -16.00978660583496
    6. '	s' → logprob: -17.13478660583496
    7. ')' → logprob: -17.25978660583496
    8. '_s' → logprob: -18.07228660583496
    9. ' 
' → logprob: -18.32228660583496
    10. ' )' → logprob: -18.44728660583496

Token 84: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3474418520927429
    2. '):' → logprob: -1.4724419116973877
    3. ')' → logprob: -3.0974419116973877
    4. '   ' → logprob: -5.222441673278809
    5. '):
' → logprob: -5.597441673278809
    6. '       ' → logprob: -5.722441673278809
    7. ' in' → logprob: -6.597441673278809
    8. ':
' → logprob: -6.722441673278809
    9. ',' → logprob: -6.847441673278809
    10. '    ' → logprob: -6.847441673278809

Token 85: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03393854945898056
    2. ' ' → logprob: -3.9089386463165283
    3. '    ' → logprob: -5.408938407897949
    4. ' 
' → logprob: -5.908938407897949
    5. '     
' → logprob: -6.033938407897949
    6. '        
' → logprob: -6.533938407897949
    7. '   ' → logprob: -7.283938407897949
    8. '        ' → logprob: -7.658938407897949
    9. '    
' → logprob: -8.40893840789795
    10. '       
' → logprob: -8.78393840789795

Token 86: ' res' (ID: 694)
  Prédit: ' res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' res' → logprob: -0.31045904755592346
    2. 'res' (adapté à ' res') → logprob: -1.435459017753601
    3. ' ' → logprob: -3.5604591369628906
    4. ' 
' → logprob: -8.43545913696289
    5. ')' → logprob: -8.81045913696289
    6. ' )' → logprob: -11.18545913696289
    7. ' ' → logprob: -11.31045913696289
    8. '     
' → logprob: -11.68545913696289
    9. 's' → logprob: -11.93545913696289
    10. ''' → logprob: -11.93545913696289

Token 87: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3991764485836029
    2. '=' → logprob: -1.1491764783859253
    3. '*' → logprob: -5.149176597595215
    4. ' *=' → logprob: -5.399176597595215
    5. '*=' → logprob: -6.899176597595215
    6. ' ' → logprob: -7.274176597595215
    7. ' *' → logprob: -8.899176597595215
    8. ' <<=' → logprob: -10.524176597595215
    9. '`' → logprob: -11.899176597595215
    10. ')' → logprob: -12.024176597595215

Token 88: ' res' (ID: 694)
  Prédit: ' res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' res' → logprob: -0.006798259913921356
    2. 'res' → logprob: -5.006798267364502
    3. ' ' → logprob: -9.506797790527344
    4. '	res' → logprob: -12.506797790527344
    5. ' ' → logprob: -12.631797790527344
    6. '10' → logprob: -15.256797790527344
    7. '(res' → logprob: -15.506797790527344
    8. '`' → logprob: -16.006797790527344
    9. '"' → logprob: -16.131797790527344
    10. 's' → logprob: -16.256797790527344

Token 89: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.17979401350021362
    2. ' *' → logprob: -1.8047940731048584
    3. ' ' → logprob: -10.054794311523438
    4. ' ' → logprob: -13.179794311523438
    5. '**' → logprob: -13.304794311523438
    6. ' **' → logprob: -13.554794311523438
    7. '"' → logprob: -15.179794311523438
    8. '`' → logprob: -15.554794311523438
    9. '*object' → logprob: -16.179794311523438
    10. ''' → logprob: -16.554794311523438

Token 90: ' base' (ID: 3611)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.01416350994259119
    2. ' base' → logprob: -4.264163494110107
    3. '(base' → logprob: -17.514163970947266
    4. 'b' → logprob: -18.764163970947266
    5. 'bas' → logprob: -19.139163970947266
    6. '_base' → logprob: -19.764163970947266
    7. '	base' → logprob: -20.014163970947266
    8. 'bases' → logprob: -20.264163970947266
    9. ' ' → logprob: -20.389163970947266
    10. 'int' → logprob: -20.389163970947266

Token 91: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.38687655329704285
    2. ' +' → logprob: -1.1368765830993652
    3. '+c' → logprob: -12.636876106262207
    4. ' ' → logprob: -13.886876106262207
    5. ' +
' → logprob: -14.386876106262207
    6. '+r' → logprob: -15.386876106262207
    7. '+
' → logprob: -16.636877059936523
    8. '+d' → logprob: -16.636877059936523
    9. ' plus' → logprob: -17.011877059936523
    10. ' ' → logprob: -17.136877059936523

Token 92: ' char' (ID: 1826)
  Prédit: 'char'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'char' → logprob: -0.12692862749099731
    2. ' char' → logprob: -2.1269285678863525
    3. '(char' → logprob: -14.626928329467773
    4. '<char' → logprob: -16.876928329467773
    5. ',char' → logprob: -17.001928329467773
    6. '	char' → logprob: -17.751928329467773
    7. 'c' → logprob: -17.876928329467773
    8. '_char' → logprob: -17.876928329467773
    9. '.char' → logprob: -19.126928329467773
    10. ' ' → logprob: -19.626928329467773

Token 93: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -3.7697225252486533e-06
    2. '_' → logprob: -12.625003814697266
    3. '_t' → logprob: -15.375003814697266
    4. 'To' → logprob: -17.000003814697266
    5. '_TO' → logprob: -17.750003814697266
    6. '_c' → logprob: -17.875003814697266
    7. '__' → logprob: -18.625003814697266
    8. 'c' → logprob: -18.750003814697266
    9. ''_' → logprob: -18.875003814697266
    10. ')_' → logprob: -19.000003814697266

Token 94: '_val' (ID: 13694)
  Prédit: '_val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -0.0001645644661039114
    2. '_' → logprob: -9.125164985656738
    3. 'val' → logprob: -10.250164985656738
    4. '_v' → logprob: -11.250164985656738
    5. 'v' → logprob: -13.250164985656738
    6. '[c' → logprob: -13.750164985656738
    7. '_va' → logprob: -13.750164985656738
    8. 'c' → logprob: -14.000164985656738
    9. '[val' → logprob: -14.000164985656738
    10. '_c' → logprob: -14.250164985656738

Token 95: '[c' (ID: 22840)
  Prédit: '[c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -0.009395372122526169
    2. '(c' → logprob: -5.259395599365234
    3. '[' → logprob: -5.509395599365234
    4. '(' → logprob: -9.259395599365234
    5. '[
' → logprob: -12.259395599365234
    6. 'c' → logprob: -12.634395599365234
    7. '[(' → logprob: -14.634395599365234
    8. '```' → logprob: -15.134395599365234
    9. ')c' → logprob: -15.509395599365234
    10. '\[' → logprob: -16.759395599365234

Token 96: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005695947329513729
    2. ']' → logprob: -7.500569820404053
    3. '}' → logprob: -11.500569343566895
    4. ' )' → logprob: -12.375569343566895
    5. ')
' → logprob: -13.375569343566895
    6. '）' → logprob: -15.500569343566895
    7. ')]' → logprob: -15.625569343566895
    8. '])' → logprob: -16.12557029724121
    9. '))' → logprob: -16.62557029724121
    10. ')}' → logprob: -16.75057029724121

Token 97: '   ' (ID: 271)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.9140465259552002
    2. '
' → logprob: -1.6640465259552002
    3. 'return' → logprob: -1.6640465259552002
    4. '   ' → logprob: -1.7890465259552002
    5. ':return' → logprob: -3.5390465259552
    6. ' ' → logprob: -4.914046287536621
    7. '\n' → logprob: -5.039046287536621
    8. '	return' → logprob: -5.664046287536621
    9. '    
' → logprob: -6.414046287536621
    10. ')' → logprob: -7.289046287536621

Token 98: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.2978624701499939
    2. ' return' → logprob: -1.4228625297546387
    3. '
' → logprob: -4.922862529754639
    4. '   ' → logprob: -5.047862529754639
    5. ' ' → logprob: -6.797862529754639
    6. ':return' → logprob: -7.297862529754639
    7. ')' → logprob: -7.672862529754639
    8. '	return' → logprob: -8.79786205291748
    9. '    
' → logprob: -9.29786205291748
    10. ' 
' → logprob: -9.42286205291748

Token 99: ' res' (ID: 694)
  Prédit: ' res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' res' → logprob: -0.0019297054968774319
    2. 'res' → logprob: -6.251929759979248
    3. '(res' → logprob: -13.87692928314209
    4. ' ' → logprob: -16.376930236816406
    5. '	res' → logprob: -17.251930236816406
    6. ' ' → logprob: -17.376930236816406
    7. ' ress' → logprob: -17.876930236816406
    8. 's' → logprob: -19.126930236816406
    9. '_res' → logprob: -19.501930236816406
    10. '$res' → logprob: -19.501930236816406

Token 100: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 101: 'def' (ID: 1314)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5653457045555115
    2. '
' → logprob: -1.5653457641601562
    3. '<|end|>' → logprob: -3.3153457641601562
    4. '\n' → logprob: -3.4403457641601562
    5. '(' → logprob: -3.5653457641601562
    6. '_' → logprob: -3.6903457641601562
    7. ')' → logprob: -3.9403457641601562
    8. '```' → logprob: -4.440345764160156
    9. 'newline' → logprob: -4.565345764160156
    10. '[' → logprob: -4.565345764160156

Token 102: ' split' (ID: 12648)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.329142302274704
    2. 'int' → logprob: -1.9541423320770264
    3. '_int' → logprob: -2.2041423320770264
    4. '_' → logprob: -4.204142093658447
    5. ' ' → logprob: -4.954142093658447
    6. ' _' → logprob: -5.579142093658447
    7. ' space' → logprob: -7.204142093658447
    8. ' ' → logprob: -8.579142570495605
    9. 'I' → logprob: -8.704142570495605
    10. ' convert' → logprob: -8.829142570495605

Token 103: '_into' (ID: 109569)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.21541833877563477
    2. '_string' → logprob: -2.7154183387756348
    3. '(' → logprob: -4.090418338775635
    4. '_numbers' → logprob: -4.090418338775635
    5. '('_' → logprob: -4.215418338775635
    6. '_code' → logprob: -4.465418338775635
    7. '_parts' → logprob: -4.715418338775635
    8. '_tokens' → logprob: -4.840418338775635
    9. '_str' → logprob: -5.090418338775635
    10. '_list' → logprob: -5.340418338775635

Token 104: '_p' (ID: 1359)
  Prédit: '_tokens'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_tokens' → logprob: -0.6387478709220886
    2. '_chunks' → logprob: -1.7637479305267334
    3. 'tokens' → logprob: -2.1387479305267334
    4. '_parts' → logprob: -3.1387479305267334
    5. '_words' → logprob: -3.5137479305267334
    6. '_numbers' → logprob: -3.6387479305267334
    7. 'parts' → logprob: -4.263747692108154
    8. 'chunks' → logprob: -4.388747692108154
    9. '_digits' → logprob: -5.138747692108154
    10. '_token' → logprob: -5.263747692108154

Token 105: 'owers' (ID: 23882)
  Prédit: 'arts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arts' → logprob: -0.08460476249456406
    2. 'ieces' → logprob: -3.3346047401428223
    3. 'art' → logprob: -3.9596047401428223
    4. 'r' → logprob: -4.584604740142822
    5. 'ar' → logprob: -4.959604740142822
    6. 'refix' → logprob: -6.084604740142822
    7. 'al' → logprob: -7.084604740142822
    8. 'owers' → logprob: -7.459604740142822
    9. 'airs' → logprob: -7.584604740142822
    10. 'er' → logprob: -7.959604740142822

Token 106: '_of' (ID: 8023)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04725812003016472
    2. '_of' → logprob: -3.547258138656616
    3. '("("' → logprob: -5.547257900238037
    4. '('' → logprob: -5.672257900238037
    5. '2' → logprob: -6.297257900238037
    6. '_' → logprob: -6.422257900238037
    7. 'of' → logprob: -6.422257900238037
    8. 'Of' → logprob: -6.672257900238037
    9. '(s' → logprob: -6.672257900238037
    10. ' (' → logprob: -7.297257900238037

Token 107: '_two' (ID: 54305)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.48642948269844055
    2. 'two' → logprob: -1.2364294528961182
    3. '_two' → logprob: -3.736429452896118
    4. '10' → logprob: -3.861429452896118
    5. 'k' → logprob: -4.111429691314697
    6. '3' → logprob: -4.236429691314697
    7. '62' → logprob: -4.861429691314697
    8. 'ten' → logprob: -5.361429691314697
    9. '```' → logprob: -6.361429691314697
    10. 'three' → logprob: -7.111429691314697

Token 108: '(x' (ID: 4061)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.007370573002845049
    2. '(s' → logprob: -5.007370471954346
    3. ' (' → logprob: -7.757370471954346
    4. '(n' → logprob: -9.757370948791504
    5. 's' → logprob: -10.257370948791504
    6. '("("' → logprob: -10.632370948791504
    7. '():' → logprob: -11.007370948791504
    8. '_' → logprob: -11.007370948791504
    9. '(x' → logprob: -11.382370948791504
    10. '_(' → logprob: -11.757370948791504

Token 109: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.021024806424975395
    2. ',' → logprob: -4.521024703979492
    3. ')' → logprob: -4.646024703979492
    4. ':' → logprob: -9.021024703979492
    5. ' ):' → logprob: -9.021024703979492
    6. '):
' → logprob: -10.021024703979492
    7. '(' → logprob: -12.271024703979492
    8. ' ,' → logprob: -12.396024703979492
    9. ',n' → logprob: -12.646024703979492
    10. ' ' → logprob: -12.896024703979492

Token 110: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03001265972852707
    2. ':' → logprob: -3.905012607574463
    3. ' ' → logprob: -6.155012607574463
    4. '    ' → logprob: -6.155012607574463
    5. ' :' → logprob: -6.155012607574463
    6. '```' → logprob: -7.280012607574463
    7. '(' → logprob: -7.780012607574463
    8. ' []' → logprob: -8.280013084411621
    9. '
' → logprob: -8.405013084411621
    10. ' 
' → logprob: -8.405013084411621

Token 111: ' #' (ID: 1069)
  Prédit: ' res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' res' → logprob: -0.6374319195747375
    2. ' parts' → logprob: -1.2624318599700928
    3. ' powers' → logprob: -2.5124318599700928
    4. ' result' → logprob: -3.1374318599700928
    5. ' results' → logprob: -4.137432098388672
    6. 'res' → logprob: -4.887432098388672
    7. 'powers' → logprob: -4.887432098388672
    8. ' bits' → logprob: -5.137432098388672
    9. 'result' → logprob: -5.137432098388672
    10. ' []' → logprob: -5.512432098388672

Token 112: ' split' (ID: 12648)
  Prédit: ' parts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' parts' → logprob: -0.2221432328224182
    2. ' powers' → logprob: -2.3471431732177734
    3. ' res' → logprob: -2.7221431732177734
    4. ' result' → logprob: -4.097143173217773
    5. 'powers' → logprob: -4.472143173217773
    6. 'parts' → logprob: -6.097143173217773
    7. 'res' → logprob: -6.222143173217773
    8. 'result' → logprob: -6.347143173217773
    9. ' bits' → logprob: -6.597143173217773
    10. '   ' → logprob: -7.222143173217773

Token 113: ' x' (ID: 1215)
  Prédit: 'ed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ed' → logprob: -0.8904596567153931
    2. 'd' → logprob: -1.390459656715393
    3. ' =' → logprob: -1.640459656715393
    4. '_' → logprob: -2.1404595375061035
    5. ' ' → logprob: -4.6404595375061035
    6. 's' → logprob: -4.8904595375061035
    7. '=' → logprob: -6.0154595375061035
    8. '   ' → logprob: -6.1404595375061035
    9. '_tokens' → logprob: -6.2654595375061035
    10. 'int' → logprob: -7.3904595375061035

Token 114: ' (' (ID: 350)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.49648502469062805
    2. ' ' → logprob: -1.8714849948883057
    3. '=' → logprob: -2.1214849948883057
    4. ':' → logprob: -3.3714849948883057
    5. '_' → logprob: -4.371485233306885
    6. ' >>=' → logprob: -4.496485233306885
    7. ' &=' → logprob: -4.746485233306885
    8. ')' → logprob: -4.746485233306885
    9. ' &' → logprob: -5.121485233306885
    10. ' into' → logprob: -5.371485233306885

Token 115: 'binary' (ID: 57009)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.47812938690185547
    2. ' )' → logprob: -2.3531293869018555
    3. ' x' → logprob: -2.4781293869018555
    4. 'int' → logprob: -2.7281293869018555
    5. ' ,' → logprob: -3.4781293869018555
    6. 'x' → logprob: -4.1031293869018555
    7. ' ' → logprob: -4.2281293869018555
    8. ' :' → logprob: -4.2281293869018555
    9. ',' → logprob: -4.2281293869018555
    10. ' int' → logprob: -4.3531293869018555

Token 116: ')' (ID: 8)
  Prédit: ' representation'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' representation' → logprob: -0.6101991534233093
    2. ')' → logprob: -1.110199213027954
    3. ' )' → logprob: -2.360199213027954
    4. 'representation' → logprob: -3.610199213027954
    5. ' into' → logprob: -6.360198974609375
    6. 'represented' → logprob: -7.610198974609375
    7. ' ' → logprob: -7.735198974609375
    8. ' integer' → logprob: -7.860198974609375
    9. ' represented' → logprob: -7.985198974609375
    10. ',' → logprob: -8.235198974609375

Token 117: ' into' (ID: 1511)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7037906050682068
    2. ' =' → logprob: -0.9537906050682068
    3. ' :' → logprob: -3.2037906646728516
    4. '=' → logprob: -3.7037906646728516
    5. '):' → logprob: -4.203790664672852
    6. '_list' → logprob: -4.703790664672852
    7. '_bits' → logprob: -4.828790664672852
    8. ' ' → logprob: -4.953790664672852
    9. ')' → logprob: -5.953790664672852
    10. '):
' → logprob: -6.203790664672852

Token 118: ' segments' (ID: 33749)
  Prédit: ' powers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' powers' → logprob: -0.2715478539466858
    2. 'powers' → logprob: -2.271547794342041
    3. ' a' → logprob: -3.771547794342041
    4. ' the' → logprob: -3.771547794342041
    5. '[]' → logprob: -4.021547794342041
    6. ' [' → logprob: -4.271547794342041
    7. ' []' → logprob: -4.271547794342041
    8. '[' → logprob: -4.271547794342041
    9. ' list' → logprob: -4.646547794342041
    10. 'a' → logprob: -5.146547794342041

Token 119: ' of' (ID: 328)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06161143258213997
    2. ':' → logprob: -3.5616114139556885
    3. ' ' → logprob: -4.686611652374268
    4. ' :' → logprob: -5.061611652374268
    5. '=' → logprob: -5.936611652374268
    6. '=[]' → logprob: -6.186611652374268
    7. '   ' → logprob: -6.311611652374268
    8. 'def' → logprob: -6.311611652374268
    9. ',' → logprob: -6.311611652374268
    10. '_list' → logprob: -7.061611652374268

Token 120: ' consecutive' (ID: 40840)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7451252341270447
    2. ' powers' → logprob: -1.9951252937316895
    3. '1' → logprob: -2.3701252937316895
    4. ' x' → logprob: -2.7451252937316895
    5. ' lengths' → logprob: -3.2451252937316895
    6. 'powers' → logprob: -3.3701252937316895
    7. 'length' → logprob: -3.7451252937316895
    8. '2' → logprob: -3.8701252937316895
    9. ' length' → logprob: -3.8701252937316895
    10. ' the' → logprob: -3.9951252937316895

Token 121: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.4352814555168152
    2. ' ' → logprob: -1.06028151512146
    3. ' ones' → logprob: -5.685281276702881
    4. ' '' → logprob: -5.935281276702881
    5. '_' → logprob: -8.810281753540039
    6. ''' → logprob: -9.310281753540039
    7. ' bits' → logprob: -9.435281753540039
    8. ''s' → logprob: -10.060281753540039
    9. ' one' → logprob: -10.435281753540039
    10. ' `' → logprob: -10.435281753540039

Token 122: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03821315988898277
    2. ''' → logprob: -3.2882132530212402
    3. ''s' → logprob: -9.663212776184082
    4. 'ones' → logprob: -10.288212776184082
    5. ' ' → logprob: -10.538212776184082
    6. 'set' → logprob: -11.538212776184082
    7. 'bits' → logprob: -11.788212776184082
    8. ' '' → logprob: -11.788212776184082
    9. '`' → logprob: -11.913212776184082
    10. ''on' → logprob: -12.538212776184082

Token 123: ' bits' (ID: 18189)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.015611264854669571
    2. ''s' → logprob: -4.640611171722412
    3. '_' → logprob: -5.515611171722412
    4. ' s' → logprob: -6.890611171722412
    5. '_s' → logprob: -7.765611171722412
    6. ',' → logprob: -9.14061164855957
    7. '_bits' → logprob: -9.51561164855957
    8. '`s' → logprob: -9.89061164855957
    9. ')' → logprob: -10.39061164855957
    10. ' _' → logprob: -10.89061164855957

Token 124: ' starting' (ID: 8601)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.23050908744335175
    2. '
' → logprob: -2.480509042739868
    3. ',' → logprob: -2.730509042739868
    4. ':
' → logprob: -3.980509042739868
    5. '   ' → logprob: -4.605509281158447
    6. 'def' → logprob: -5.230509281158447
    7. '(' → logprob: -5.605509281158447
    8. '(x' → logprob: -5.730509281158447
    9. 's' → logprob: -5.855509281158447
    10. '[' → logprob: -6.230509281158447

Token 125: ' at' (ID: 540)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.1081639528274536
    2. ' ' → logprob: -1.6081639528274536
    3. ' =' → logprob: -2.233163833618164
    4. ',' → logprob: -2.483163833618164
    5. ' with' → logprob: -2.608163833618164
    6. ' at' → logprob: -3.483163833618164
    7. '<|end|>' → logprob: -3.733163833618164
    8. 'from' → logprob: -3.858163833618164
    9. '   ' → logprob: -3.983163833618164
    10. ' in' → logprob: -4.108163833618164

Token 126: ' least' (ID: 5153)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.19623519480228424
    2. 'the' → logprob: -2.446235179901123
    3. ' ' → logprob: -2.946235179901123
    4. '1' → logprob: -4.071235179901123
    5. '0' → logprob: -4.571235179901123
    6. ' least' → logprob: -5.821235179901123
    7. 'least' → logprob: -6.196235179901123
    8. 'positions' → logprob: -6.696235179901123
    9. 'x' → logprob: -6.696235179901123
    10. ' positions' → logprob: -6.821235179901123

Token 127: ' bit' (ID: 3546)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3253231942653656
    2. ' ' → logprob: -2.2003231048583984
    3. '0' → logprob: -3.2003231048583984
    4. ',' → logprob: -3.3253231048583984
    5. ')' → logprob: -4.075323104858398
    6. '   ' → logprob: -4.200323104858398
    7. '2' → logprob: -4.325323104858398
    8. '_' → logprob: -4.575323104858398
    9. '+' → logprob: -5.075323104858398
    10. ' one' → logprob: -5.200323104858398

Token 128: '
' (ID: 198)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.7775078415870667
    2. 's' → logprob: -0.9025078415870667
    3. ' ' → logprob: -2.527507781982422
    4. '1' → logprob: -3.402507781982422
    5. '   ' → logprob: -5.902507781982422
    6. '_' → logprob: -6.027507781982422
    7. ')' → logprob: -6.277507781982422
    8. ''s' → logprob: -6.527507781982422
    9. ' position' → logprob: -6.652507781982422
    10. ',' → logprob: -6.902507781982422

Token 129: '   ' (ID: 271)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.3938190937042236
    2. ':' → logprob: -1.5188190937042236
    3. '=' → logprob: -1.7688190937042236
    4. '0' → logprob: -2.6438190937042236
    5. ' :' → logprob: -2.7688190937042236
    6. '   ' → logprob: -3.2688190937042236
    7. ' ' → logprob: -3.2688190937042236
    8. ')' → logprob: -3.3938190937042236
    9. ',' → logprob: -3.7688190937042236
    10. '):' → logprob: -4.2688188552856445

Token 130: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5758602023124695
    2. ' :' → logprob: -1.9508602619171143
    3. ' ' → logprob: -2.0758602619171143
    4. ' =' → logprob: -2.7008602619171143
    5. ':' → logprob: -3.0758602619171143
    6. '=' → logprob: -4.325860023498535
    7. ')' → logprob: -4.700860023498535
    8. '  ' → logprob: -5.075860023498535
    9. '    ' → logprob: -5.325860023498535
    10. '):' → logprob: -5.450860023498535

Token 131: ' actually' (ID: 4771)
  Prédit: ' :'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' :' → logprob: -0.6021572947502136
    2. ' ' → logprob: -0.9771572947502136
    3. ':' → logprob: -2.9771573543548584
    4. '   ' → logprob: -4.977157115936279
    5. ')' → logprob: -5.602157115936279
    6. ' =' → logprob: -5.727157115936279
    7. ' ,' → logprob: -6.227157115936279
    8. ' )' → logprob: -6.727157115936279
    9. '  ' → logprob: -6.852157115936279
    10. '    ' → logprob: -7.102157115936279

Token 132: ',' (ID: 11)
  Prédit: ' :'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' :' → logprob: -1.0373164415359497
    2. ' ' → logprob: -1.4123164415359497
    3. ':' → logprob: -2.03731632232666
    4. ' x' → logprob: -2.28731632232666
    5. ' =' → logprob: -2.41231632232666
    6. ',' → logprob: -3.66231632232666
    7. ' ,' → logprob: -4.16231632232666
    8. 'x' → logprob: -4.53731632232666
    9. '   ' → logprob: -4.78731632232666
    10. '=' → logprob: -5.03731632232666

Token 133: ' from' (ID: 591)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -1.2216651439666748
    2. ' n' → logprob: -1.4716651439666748
    3. ' res' → logprob: -1.4716651439666748
    4. 'n' → logprob: -2.846665143966675
    5. ' i' → logprob: -3.346665143966675
    6. ' result' → logprob: -3.346665143966675
    7. ' parts' → logprob: -3.971665143966675
    8. ' ' → logprob: -4.096665382385254
    9. ' return' → logprob: -4.221665382385254
    10. 'x' → logprob: -4.346665382385254

Token 134: ' binary' (ID: 15600)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.22866804897785187
    2. ' x' → logprob: -2.478667974472046
    3. ' least' → logprob: -2.978667974472046
    4. ' right' → logprob: -3.853667974472046
    5. 'x' → logprob: -4.228668212890625
    6. 'the' → logprob: -4.728668212890625
    7. ' lowest' → logprob: -4.853668212890625
    8. ' ' → logprob: -4.978668212890625
    9. 'least' → logprob: -5.728668212890625
    10. '0' → logprob: -5.728668212890625

Token 135: ' string' (ID: 1621)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8067185878753662
    2. ' ' → logprob: -1.6817185878753662
    3. '(x' → logprob: -2.056718587875366
    4. '(' → logprob: -2.931718587875366
    5. '<|end|>' → logprob: -3.181718587875366
    6. ' :' → logprob: -3.181718587875366
    7. '
' → logprob: -3.681718587875366
    8. '):' → logprob: -4.306718826293945
    9. ' x' → logprob: -4.556718826293945
    10. ')' → logprob: -4.681718826293945

Token 136: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6221984028816223
    2. ' ' → logprob: -1.8721983432769775
    3. ' :' → logprob: -2.7471983432769775
    4. '   ' → logprob: -2.7471983432769775
    5. ')' → logprob: -3.2471983432769775
    6. '(' → logprob: -3.8721983432769775
    7. '_' → logprob: -3.9971983432769775
    8. 'def' → logprob: -4.247198581695557
    9. '):' → logprob: -4.247198581695557
    10. '[' → logprob: -4.747198581695557

Token 137: ' split' (ID: 12648)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.10372713953256607
    2. ' x' → logprob: -3.103727102279663
    3. ' s' → logprob: -4.478727340698242
    4. ' '' → logprob: -4.728727340698242
    5. ' "' → logprob: -5.103727340698242
    6. '   ' → logprob: -5.103727340698242
    7. '"' → logprob: -6.103727340698242
    8. '    ' → logprob: -6.478727340698242
    9. ' def' → logprob: -6.478727340698242
    10. ' n' → logprob: -6.478727340698242

Token 138: ' by' (ID: 656)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8770217895507812
    2. '_' → logprob: -1.2520217895507812
    3. '(' → logprob: -2.0020217895507812
    4. ' _' → logprob: -3.5020217895507812
    5. ' (' → logprob: -3.5020217895507812
    6. '(s' → logprob: -3.7520217895507812
    7. '(x' → logprob: -4.002021789550781
    8. 's' → logprob: -4.252021789550781
    9. ')' → logprob: -4.502021789550781
    10. '<|end|>' → logprob: -4.877021789550781

Token 139: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.06343428790569305
    2. ' '' → logprob: -3.563434362411499
    3. '"' → logprob: -3.813434362411499
    4. '0' → logprob: -5.31343412399292
    5. 'x' → logprob: -7.06343412399292
    6. '1' → logprob: -7.18843412399292
    7. ''s' → logprob: -7.18843412399292
    8. ' zeros' → logprob: -7.56343412399292
    9. ' ' → logprob: -7.68843412399292
    10. 'str' → logprob: -8.313434600830078

Token 140: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.006407923996448517
    2. '1' → logprob: -5.131407737731934
    3. ' ' → logprob: -8.256407737731934
    4. ''' → logprob: -9.006407737731934
    5. '01' → logprob: -9.881407737731934
    6. '')' → logprob: -10.631407737731934
    7. '10' → logprob: -12.006407737731934
    8. ''s' → logprob: -13.006407737731934
    9. '11' → logprob: -13.131407737731934
    10. ')' → logprob: -13.256407737731934

Token 141: ''s' (ID: 885)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.004125061444938183
    2. ''s' → logprob: -5.879125118255615
    3. '0' → logprob: -7.379125118255615
    4. '1' → logprob: -8.254124641418457
    5. '')' → logprob: -8.629124641418457
    6. ''.' → logprob: -9.754124641418457
    7. ''''' → logprob: -10.129124641418457
    8. '"' → logprob: -10.379124641418457
    9. 's' → logprob: -10.504124641418457
    10. ''"' → logprob: -11.004124641418457

Token 142: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6447215676307678
    2. 'def' → logprob: -1.394721508026123
    3. '
' → logprob: -2.144721508026123
    4. '_' → logprob: -3.519721508026123
    5. ':
' → logprob: -4.019721508026123
    6. '   ' → logprob: -4.394721508026123
    7. ')' → logprob: -4.769721508026123
    8. ',' → logprob: -5.394721508026123
    9. ' ' → logprob: -5.394721508026123
    10. '  
' → logprob: -5.394721508026123

Token 143: ' each' (ID: 2454)
  Prédit: ' ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' '' → logprob: -0.6147714257240295
    2. ' ' → logprob: -1.2397713661193848
    3. ' x' → logprob: -3.2397713661193848
    4. ''' → logprob: -3.4897713661193848
    5. ''s' → logprob: -3.8647713661193848
    6. ' s' → logprob: -4.114771366119385
    7. 's' → logprob: -4.364771366119385
    8. ')' → logprob: -5.114771366119385
    9. '   ' → logprob: -5.239771366119385
    10. 'x' → logprob: -5.239771366119385

Token 144: ' segment' (ID: 14806)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.1833034753799438
    2. ' segment' → logprob: -1.4333034753799438
    3. '_' → logprob: -1.6833034753799438
    4. 'segment' → logprob: -2.3083033561706543
    5. '<|end|>' → logprob: -2.3083033561706543
    6. '_segment' → logprob: -4.933303356170654
    7. ' _' → logprob: -5.058303356170654
    8. '<|end|>' → logprob: -5.183303356170654
    9. 'segments' → logprob: -5.308303356170654
    10. ')' → logprob: -5.308303356170654

Token 145: ' is' (ID: 382)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.151348352432251
    2. ' =' → logprob: -2.026348352432251
    3. '
' → logprob: -2.276348352432251
    4. 's' → logprob: -2.401348352432251
    5. 'def' → logprob: -2.776348352432251
    6. '<|end|>' → logprob: -3.026348352432251
    7. '):' → logprob: -3.026348352432251
    8. '=' → logprob: -3.276348352432251
    9. '   ' → logprob: -3.401348352432251
    10. '(s' → logprob: -3.651348352432251

Token 146: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.10208466649055481
    2. 'a' → logprob: -3.1020846366882324
    3. ' an' → logprob: -3.9770846366882324
    4. '1' → logprob: -4.227084636688232
    5. ''' → logprob: -5.352084636688232
    6. ''s' → logprob: -5.852084636688232
    7. ' '' → logprob: -5.852084636688232
    8. ' the' → logprob: -6.227084636688232
    9. ' ' → logprob: -6.227084636688232
    10. 'length' → logprob: -7.352084636688232

Token 147: ' number' (ID: 2086)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.7864654660224915
    2. ''' → logprob: -1.6614654064178467
    3. 'string' → logprob: -2.2864654064178467
    4. ''s' → logprob: -2.4114654064178467
    5. 'substring' → logprob: -3.0364654064178467
    6. 'sequence' → logprob: -4.036465644836426
    7. 'con' → logprob: -4.161465644836426
    8. 'segment' → logprob: -4.411465644836426
    9. ' string' → logprob: -4.536465644836426
    10. ' substring' → logprob: -4.536465644836426

Token 148: ' with' (ID: 483)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8029634952545166
    2. 'def' → logprob: -1.3029634952545166
    3. '   ' → logprob: -2.1779634952545166
    4. '
' → logprob: -2.5529634952545166
    5. ' ' → logprob: -3.6779634952545166
    6. ':
' → logprob: -4.0529632568359375
    7. ' def' → logprob: -4.8029632568359375
    8. '_' → logprob: -5.1779632568359375
    9. ' :' → logprob: -5.3029632568359375
    10. '\' → logprob: -5.6779632568359375

Token 149: ' consecutive' (ID: 40840)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.352278470993042
    2. ' ' → logprob: -1.852278470993042
    3. '<|end|>' → logprob: -2.852278470993042
    4. ''' → logprob: -4.227278709411621
    5. 'value' → logprob: -4.602278709411621
    6. ' '' → logprob: -4.852278709411621
    7. 'length' → logprob: -5.102278709411621
    8. 's' → logprob: -5.227278709411621
    9. 'int' → logprob: -5.352278709411621
    10. ' value' → logprob: -5.477278709411621

Token 150: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.07780726999044418
    2. '_' → logprob: -2.9528071880340576
    3. ' ' → logprob: -4.202807426452637
    4. '<|end|>' → logprob: -5.452807426452637
    5. ' ones' → logprob: -6.077807426452637
    6. ''' → logprob: -8.202807426452637
    7. ''s' → logprob: -8.827807426452637
    8. ' _' → logprob: -8.952807426452637
    9. '<|end|>' → logprob: -9.077807426452637
    10. ' '' → logprob: -9.702807426452637

Token 151: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.009333607740700245
    2. ''' → logprob: -4.759333610534668
    3. ' ' → logprob: -7.759333610534668
    4. ' ones' → logprob: -9.009333610534668
    5. '`' → logprob: -9.884333610534668
    6. 'ones' → logprob: -10.509333610534668
    7. ''s' → logprob: -10.634333610534668
    8. ' '' → logprob: -10.759333610534668
    9. '_' → logprob: -11.134333610534668
    10. '"' → logprob: -11.634333610534668

Token 152: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5716714262962341
    2. '_' → logprob: -0.9466714262962341
    3. '_bits' → logprob: -3.696671485900879
    4. ')' → logprob: -4.696671485900879
    5. ' s' → logprob: -5.821671485900879
    6. ' _' → logprob: -6.321671485900879
    7. '_s' → logprob: -6.446671485900879
    8. ' ' → logprob: -6.821671485900879
    9. '<|end|>' → logprob: -7.196671485900879
    10. ' bits' → logprob: -7.321671485900879

Token 153: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.0020407438278198
    2. '
' → logprob: -1.3770407438278198
    3. ':' → logprob: -1.5020407438278198
    4. '   ' → logprob: -2.2520408630371094
    5. 's' → logprob: -4.877040863037109
    6. ')' → logprob: -4.877040863037109
    7. ' ' → logprob: -4.877040863037109
    8. '):' → logprob: -5.127040863037109
    9. ' def' → logprob: -5.502040863037109
    10. ':
' → logprob: -5.752040863037109

Token 154: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5841578245162964
    2. '
' → logprob: -1.3341578245162964
    3. 'def' → logprob: -2.209157943725586
    4. ':
' → logprob: -3.209157943725586
    5. '   ' → logprob: -4.334157943725586
    6. '  
' → logprob: -5.584157943725586
    7. ')' → logprob: -6.584157943725586
    8. ' 
' → logprob: -6.709157943725586
    9. '```' → logprob: -6.834157943725586
    10. ' ' → logprob: -6.959157943725586

Token 155: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17380541563034058
    2. '
' → logprob: -2.9238054752349854
    3. 'def' → logprob: -3.2988054752349854
    4. ':' → logprob: -4.548805236816406
    5. '    
' → logprob: -4.548805236816406
    6. 'return' → logprob: -4.923805236816406
    7. ' 
' → logprob: -5.048805236816406
    8. 's' → logprob: -5.298805236816406
    9. 'segments' → logprob: -5.298805236816406
    10. ' ' → logprob: -5.798805236816406

Token 156: ' We' (ID: 1416)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2630019783973694
    2. ' return' → logprob: -2.7630019187927246
    3. 'def' → logprob: -3.0130019187927246
    4. 'return' → logprob: -3.1380019187927246
    5. ' parts' → logprob: -3.8880019187927246
    6. 's' → logprob: -4.388001918792725
    7. ' segments' → logprob: -4.638001918792725
    8. 'segments' → logprob: -5.013001918792725
    9. ' ' → logprob: -5.263001918792725
    10. ' s' → logprob: -5.513001918792725

Token 157: ' just' (ID: 1327)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.02405964583158493
    2. ' =' → logprob: -4.774059772491455
    3. '_' → logprob: -5.274059772491455
    4. '=' → logprob: -6.274059772491455
    5. ''' → logprob: -6.524059772491455
    6. 'n' → logprob: -6.774059772491455
    7. 's' → logprob: -6.899059772491455
    8. 'r' → logprob: -7.274059772491455
    9. ' need' → logprob: -7.399059772491455
    10. ' continue' → logprob: -7.649059772491455

Token 158: ' get' (ID: 717)
  Prédit: ' need'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' need' → logprob: -0.2477046698331833
    2. ' continue' → logprob: -2.4977047443389893
    3. 'need' → logprob: -3.3727047443389893
    4. ' return' → logprob: -3.6227047443389893
    5. ' ' → logprob: -3.9977047443389893
    6. 'continue' → logprob: -4.49770450592041
    7. ' want' → logprob: -4.74770450592041
    8. ' =' → logprob: -5.12270450592041
    9. ' split' → logprob: -5.37270450592041
    10. 'return' → logprob: -5.49770450592041

Token 159: ' the' (ID: 290)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.0331649780273438
    2. ' s' → logprob: -1.0331649780273438
    3. ' the' → logprob: -3.0331649780273438
    4. ' x' → logprob: -3.0331649780273438
    5. ' ' → logprob: -3.1581649780273438
    6. 'x' → logprob: -3.2831649780273438
    7. ''' → logprob: -3.6581649780273438
    8. ''s' → logprob: -4.158164978027344
    9. '[]' → logprob: -4.283164978027344
    10. ' []' → logprob: -4.658164978027344

Token 160: ' binary' (ID: 15600)
  Prédit: 'segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'segments' → logprob: -1.3481980562210083
    2. ''' → logprob: -1.5981980562210083
    3. ' segments' → logprob: -2.0981979370117188
    4. '[' → logprob: -2.5981979370117188
    5. ' '' → logprob: -2.8481979370117188
    6. ''s' → logprob: -2.9731979370117188
    7. ' s' → logprob: -3.3481979370117188
    8. ' [' → logprob: -3.4731979370117188
    9. 's' → logprob: -3.5981979370117188
    10. ' parts' → logprob: -4.098197937011719

Token 161: ' str' (ID: 989)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5590260028839111
    2. ' ' → logprob: -1.8090260028839111
    3. ' string' → logprob: -2.934026002883911
    4. 'string' → logprob: -2.934026002883911
    5. ' representation' → logprob: -3.184026002883911
    6. '_string' → logprob: -3.684026002883911
    7. 's' → logprob: -3.934026002883911
    8. '<|end|>' → logprob: -4.059025764465332
    9. ')' → logprob: -4.309025764465332
    10. ''' → logprob: -4.934025764465332

Token 162: ' of' (ID: 328)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7444117069244385
    2. ' =' → logprob: -1.4944117069244385
    3. ')' → logprob: -2.1194117069244385
    4. ' ' → logprob: -2.3694117069244385
    5. ' (' → logprob: -4.494411468505859
    6. '(x' → logprob: -4.494411468505859
    7. ',' → logprob: -4.619411468505859
    8. 'x' → logprob: -4.869411468505859
    9. '=' → logprob: -4.994411468505859
    10. '_' → logprob: -4.994411468505859

Token 163: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.496593713760376
    2. ' x' → logprob: -1.371593713760376
    3. ' bin' → logprob: -2.371593713760376
    4. 'bin' → logprob: -3.121593713760376
    5. ' format' → logprob: -8.871593475341797
    6. 'format' → logprob: -9.496593475341797
    7. ' ' → logprob: -11.371593475341797
    8. '`' → logprob: -11.371593475341797
    9. '```' → logprob: -11.371593475341797
    10. '   ' → logprob: -11.871593475341797

Token 164: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5388148427009583
    2. ',' → logprob: -2.0388147830963135
    3. ' ' → logprob: -2.2888147830963135
    4. '
' → logprob: -2.7888147830963135
    5. ')' → logprob: -3.7888147830963135
    6. 'x' → logprob: -4.288815021514893
    7. ',
' → logprob: -4.413815021514893
    8. ':' → logprob: -4.663815021514893
    9. ' 
' → logprob: -4.788815021514893
    10. '[' → logprob: -4.788815021514893

Token 165: ' split' (ID: 12648)
  Prédit: ' bin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' bin' → logprob: -0.09960073977708817
    2. ' x' → logprob: -3.8496007919311523
    3. 'bin' → logprob: -3.8496007919311523
    4. ' ' → logprob: -4.099600791931152
    5. ' '' → logprob: -4.599600791931152
    6. ' s' → logprob: -5.224600791931152
    7. ' b' → logprob: -5.224600791931152
    8. ' binary' → logprob: -5.474600791931152
    9. ' then' → logprob: -5.849600791931152
    10. ''' → logprob: -6.724600791931152

Token 166: ' by' (ID: 656)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6086362600326538
    2. '('' → logprob: -0.8586362600326538
    3. '("("' → logprob: -4.983636379241943
    4. '(x' → logprob: -5.358636379241943
    5. 'by' → logprob: -5.483636379241943
    6. '("' → logprob: -5.858636379241943
    7. 'x' → logprob: -5.858636379241943
    8. '('_' → logprob: -5.983636379241943
    9. '[' → logprob: -6.483636379241943
    10. '('\' → logprob: -6.483636379241943

Token 167: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0032208492048084736
    2. '"' → logprob: -6.253221035003662
    3. ' '' → logprob: -6.753221035003662
    4. '0' → logprob: -9.253220558166504
    5. '`' → logprob: -11.753220558166504
    6. ''o' → logprob: -12.128220558166504
    7. '('' → logprob: -13.003220558166504
    8. ' ' → logprob: -13.128220558166504
    9. ''value' → logprob: -14.315720558166504
    10. ''O' → logprob: -14.503220558166504

Token 168: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.955703818472102e-05
    2. ''' → logprob: -9.750059127807617
    3. '')' → logprob: -14.625059127807617
    4. ' ' → logprob: -15.125059127807617
    5. '1' → logprob: -15.750059127807617
    6. ''s' → logprob: -16.250059127807617
    7. '00' → logprob: -16.500059127807617
    8. '000' → logprob: -17.125059127807617
    9. '"' → logprob: -17.625059127807617
    10. '```' → logprob: -18.000059127807617

Token 169: '',' (ID: 787)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.040794696658849716
    2. ''s' → logprob: -3.415794610977173
    3. '')' → logprob: -5.790794849395752
    4. ''.' → logprob: -6.040794849395752
    5. 's' → logprob: -6.540794849395752
    6. '').' → logprob: -8.665794372558594
    7. ''''' → logprob: -11.165794372558594
    8. '',' → logprob: -11.290794372558594
    9. '')"' → logprob: -11.790794372558594
    10. 'b' → logprob: -12.290794372558594

Token 170: ' filter' (ID: 6690)
  Prédit: ' ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' '' → logprob: -0.6147615909576416
    2. ' and' → logprob: -1.6147615909576416
    3. ' then' → logprob: -2.4897615909576416
    4. ' s' → logprob: -3.2397615909576416
    5. ' x' → logprob: -3.4897615909576416
    6. ' ' → logprob: -3.9897615909576416
    7. ' parts' → logprob: -4.1147613525390625
    8. ''' → logprob: -4.2397613525390625
    9. '   ' → logprob: -4.4897613525390625
    10. ' "' → logprob: -4.6147613525390625

Token 171: ' non' (ID: 2893)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.7275352478027344
    2. 'None' → logprob: -0.9775352478027344
    3. '(lambda' → logprob: -2.1025352478027344
    4. '(None' → logprob: -4.727535247802734
    5. '(' → logprob: -5.727535247802734
    6. ' None' → logprob: -5.852535247802734
    7. '(
' → logprob: -6.977535247802734
    8. 'list' → logprob: -6.977535247802734
    9. 'none' → logprob: -7.227535247802734
    10. ' lambda' → logprob: -8.102535247802734

Token 172: 'empty' (ID: 6857)
  Prédit: '-empty'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-empty' → logprob: -0.49036428332328796
    2. 'empty' → logprob: -0.9903643131256104
    3. 'e' → logprob: -4.990364074707031
    4. '-' → logprob: -5.365364074707031
    5. ' empty' → logprob: -5.740364074707031
    6. 'empt' → logprob: -8.240364074707031
    7. 'em' → logprob: -8.490364074707031
    8. 'None' → logprob: -8.865364074707031
    9. '_empty' → logprob: -8.990364074707031
    10. 'er' → logprob: -9.240364074707031

Token 173: ' parts' (ID: 7881)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7078123092651367
    2. ',' → logprob: -2.2078123092651367
    3. ':' → logprob: -2.4578123092651367
    4. '   ' → logprob: -2.7078123092651367
    5. '(' → logprob: -3.2078123092651367
    6. '(
' → logprob: -3.3328123092651367
    7. ':
' → logprob: -3.5828123092651367
    8. 's' → logprob: -3.7078123092651367
    9. ',
' → logprob: -3.7078123092651367
    10. ')
' → logprob: -4.082812309265137

Token 174: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.43001607060432434
    2. ':' → logprob: -1.305016040802002
    3. ':
' → logprob: -3.430016040802002
    4. ',' → logprob: -3.680016040802002
    5. ',
' → logprob: -5.430016040802002
    6. '.' → logprob: -5.805016040802002
    7. '[' → logprob: -6.305016040802002
    8. 'x' → logprob: -6.430016040802002
    9. ')' → logprob: -6.680016040802002
    10. 's' → logprob: -6.805016040802002

Token 175: ' convert' (ID: 8452)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.3425821363925934
    2. '   ' → logprob: -2.4675822257995605
    3. ' then' → logprob: -2.9675822257995605
    4. ' parts' → logprob: -3.5925822257995605
    5. ' return' → logprob: -3.8425822257995605
    6. 'and' → logprob: -4.2175822257995605
    7. ' x' → logprob: -4.2175822257995605
    8. ')' → logprob: -4.2175822257995605
    9. 'return' → logprob: -4.5925822257995605
    10. ' 
' → logprob: -4.9675822257995605

Token 176: ' each' (ID: 2454)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5326589941978455
    2. 'to' → logprob: -1.4076590538024902
    3. '(x' → logprob: -3.2826590538024902
    4. ' to' → logprob: -3.5326590538024902
    5. 'x' → logprob: -4.28265905380249
    6. 'each' → logprob: -4.40765905380249
    7. '(
' → logprob: -4.53265905380249
    8. ')' → logprob: -4.78265905380249
    9. 'def' → logprob: -5.15765905380249
    10. '_' → logprob: -5.53265905380249

Token 177: ' run' (ID: 2461)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4850279986858368
    2. '_' → logprob: -1.8600280284881592
    3. '(
' → logprob: -2.610028028488159
    4. ' to' → logprob: -2.735028028488159
    5. 'to' → logprob: -3.735028028488159
    6. 'def' → logprob: -4.36002779006958
    7. '[' → logprob: -4.98502779006958
    8. ' ' → logprob: -5.11002779006958
    9. ' (' → logprob: -5.11002779006958
    10. '_to' → logprob: -5.23502779006958

Token 178: ' of' (ID: 328)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.29501357674598694
    2. '_' → logprob: -1.4200135469436646
    3. 'to' → logprob: -5.670013427734375
    4. ',' → logprob: -5.920013427734375
    5. ')' → logprob: -6.170013427734375
    6. '_to' → logprob: -6.795013427734375
    7. '(
' → logprob: -6.795013427734375
    8. '[' → logprob: -7.170013427734375
    9. '(int' → logprob: -7.920013427734375
    10. ']' → logprob: -8.420013427734375

Token 179: ' ' (ID: 220)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.03318949416279793
    2. '1' → logprob: -3.658189535140991
    3. ' '' → logprob: -5.158189296722412
    4. ' ones' → logprob: -7.283189296722412
    5. '"' → logprob: -8.65818977355957
    6. 'ones' → logprob: -9.40818977355957
    7. ''s' → logprob: -9.65818977355957
    8. 's' → logprob: -10.90818977355957
    9. ' ' → logprob: -11.15818977355957
    10. ''l' → logprob: -11.15818977355957

Token 180: '1' (ID: 16)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.012512356042861938
    2. '1' → logprob: -4.51251220703125
    3. ' '' → logprob: -7.01251220703125
    4. '"' → logprob: -7.76251220703125
    5. 'ones' → logprob: -9.63751220703125
    6. ' ones' → logprob: -10.63751220703125
    7. '`' → logprob: -11.51251220703125
    8. ''s' → logprob: -11.76251220703125
    9. '```' → logprob: -12.01251220703125
    10. ' ' → logprob: -12.51251220703125

Token 181: ''s' (ID: 885)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.2915463447570801
    2. 's' → logprob: -1.41654634475708
    3. '_to' → logprob: -5.41654634475708
    4. ')' → logprob: -5.91654634475708
    5. 'to' → logprob: -6.79154634475708
    6. ' _' → logprob: -7.29154634475708
    7. ' to' → logprob: -7.54154634475708
    8. ' ' → logprob: -8.666545867919922
    9. '(' → logprob: -8.791545867919922
    10. ''s' → logprob: -9.541545867919922

Token 182: ' into' (ID: 1511)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.329771488904953
    2. '_' → logprob: -2.5797715187072754
    3. '   ' → logprob: -2.8297715187072754
    4. ',' → logprob: -3.5797715187072754
    5. ' ' → logprob: -4.079771518707275
    6. '[' → logprob: -4.204771518707275
    7. ' to' → logprob: -4.454771518707275
    8. ']' → logprob: -4.579771518707275
    9. 'def' → logprob: -4.579771518707275
    10. 's' → logprob: -4.829771518707275

Token 183: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.7796292901039124
    2. '1' → logprob: -1.2796292304992676
    3. 'len' → logprob: -1.7796292304992676
    4. ' int' → logprob: -3.4046292304992676
    5. '2' → logprob: -3.6546292304992676
    6. ' ' → logprob: -4.279629230499268
    7. ' len' → logprob: -5.404629230499268
    8. '(' → logprob: -5.404629230499268
    9. ' (' → logprob: -5.529629230499268
    10. '```' → logprob: -6.904629230499268

Token 184: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3098895251750946
    2. '   ' → logprob: -1.559889554977417
    3. '(
' → logprob: -3.809889554977417
    4. ',' → logprob: -4.309889316558838
    5. ')' → logprob: -5.559889316558838
    6. '_' → logprob: -5.559889316558838
    7. '[' → logprob: -6.184889316558838
    8. '(x' → logprob: -6.434889316558838
    9. '('' → logprob: -6.684889316558838
    10. ' (' → logprob: -6.684889316558838

Token 185: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7684234976768494
    2. ':' → logprob: -1.1434235572814941
    3. '
' → logprob: -2.893423557281494
    4. ')' → logprob: -2.893423557281494
    5. ',' → logprob: -3.643423557281494
    6. ' ' → logprob: -4.268423557281494
    7. '[' → logprob: -4.393423557281494
    8. ':
' → logprob: -4.393423557281494
    9. '(' → logprob: -4.643423557281494
    10. '.' → logprob: -5.018423557281494

Token 186: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2824496924877167
    2. ':' → logprob: -1.907449722290039
    3. ')' → logprob: -3.157449722290039
    4. '):' → logprob: -4.407449722290039
    5. ',' → logprob: -4.782449722290039
    6. ' ' → logprob: -4.907449722290039
    7. ' :' → logprob: -5.032449722290039
    8. ':
' → logprob: -5.657449722290039
    9. '
' → logprob: -6.157449722290039
    10. '.' → logprob: -6.157449722290039

Token 187: ' runs' (ID: 13719)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05279236659407616
    2. 'b' → logprob: -4.927792549133301
    3. ' binary' → logprob: -4.927792549133301
    4. '    ' → logprob: -5.302792549133301
    5. 'binary' → logprob: -5.552792549133301
    6. '    
' → logprob: -5.552792549133301
    7. ' ' → logprob: -5.677792549133301
    8. ' 
' → logprob: -5.802792549133301
    9. ' parts' → logprob: -6.052792549133301
    10. 'def' → logprob: -6.052792549133301

Token 188: ' of' (ID: 328)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7426511645317078
    2. '_' → logprob: -1.1176512241363525
    3. '=' → logprob: -1.9926512241363525
    4. '(' → logprob: -2.9926512241363525
    5. 's' → logprob: -5.617650985717773
    6. ')' → logprob: -6.742650985717773
    7. ',' → logprob: -6.992650985717773
    8. '_of' → logprob: -7.117650985717773
    9. '()' → logprob: -7.617650985717773
    10. ':' → logprob: -7.617650985717773

Token 189: ' length' (ID: 5517)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.1177702397108078
    2. '1' → logprob: -2.367770195007324
    3. ' '' → logprob: -4.617770195007324
    4. '"' → logprob: -5.242770195007324
    5. ' ones' → logprob: -6.742770195007324
    6. ''s' → logprob: -8.242770195007324
    7. 'ones' → logprob: -8.242770195007324
    8. ' ' → logprob: -8.492770195007324
    9. '`' → logprob: -8.992770195007324
    10. ' "' → logprob: -10.367770195007324

Token 190: ' k' (ID: 372)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5103591680526733
    2. ' =' → logprob: -2.010359287261963
    3. '(' → logprob: -3.510359287261963
    4. '=' → logprob: -3.760359287261963
    5. 's' → logprob: -4.135359287261963
    6. '1' → logprob: -4.260359287261963
    7. '   ' → logprob: -4.385359287261963
    8. ')' → logprob: -4.385359287261963
    9. ' (' → logprob: -4.385359287261963
    10. ' x' → logprob: -4.510359287261963

Token 191: ' are' (ID: 553)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.0076451301574707
    2. ' ' → logprob: -1.2576451301574707
    3. '   ' → logprob: -2.5076451301574707
    4. '_' → logprob: -3.3826451301574707
    5. ' =' → logprob: -3.3826451301574707
    6. ' :' → logprob: -3.3826451301574707
    7. ',' → logprob: -3.7576451301574707
    8. '(' → logprob: -3.7576451301574707
    9. ')' → logprob: -3.8826451301574707
    10. '[' → logprob: -4.007645130157471

Token 192: ' (' (ID: 350)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6474633812904358
    2. '2' → logprob: -1.397463321685791
    3. ' (' → logprob: -2.022463321685791
    4. ' k' → logprob: -3.022463321685791
    5. '(' → logprob: -3.897463321685791
    6. '1' → logprob: -4.397463321685791
    7. 'k' → logprob: -4.522463321685791
    8. '"' → logprob: -6.647463321685791
    9. ' '' → logprob: -7.522463321685791
    10. ' "' → logprob: -7.647463321685791

Token 193: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.27919381856918335
    2. '(' → logprob: -1.6541938781738281
    3. '2' → logprob: -3.279193878173828
    4. ' (' → logprob: -4.529193878173828
    5. ' ' → logprob: -6.154193878173828
    6. ')' → logprob: -6.529193878173828
    7. '"' → logprob: -9.154193878173828
    8. '[' → logprob: -9.529193878173828
    9. '   ' → logprob: -10.279193878173828
    10. '
' → logprob: -10.404193878173828

Token 194: '^' (ID: 61)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -2.7848862373502925e-05
    2. ' **' → logprob: -10.875027656555176
    3. '*k' → logprob: -12.375027656555176
    4. ')**' → logprob: -13.250027656555176
    5. 'k' → logprob: -14.000027656555176
    6. '*' → logprob: -14.250027656555176
    7. ')' → logprob: -14.375027656555176
    8. '**)' → logprob: -14.500027656555176
    9. '^' → logprob: -15.250027656555176
    10. '
' → logprob: -17.000028610229492

Token 195: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0016505412058904767
    2. ' k' → logprob: -7.001650333404541
    3. '**' → logprob: -8.1266508102417
    4. ')' → logprob: -8.3766508102417
    5. '1' → logprob: -9.7516508102417
    6. '^' → logprob: -10.2516508102417
    7. '
' → logprob: -10.7516508102417
    8. '(k' → logprob: -11.0016508102417
    9. '*k' → logprob: -11.3766508102417
    10. ' ' → logprob: -11.6266508102417

Token 196: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09194517135620117
    2. ')-' → logprob: -2.591945171356201
    3. ' -' → logprob: -5.466945171356201
    4. '**' → logprob: -5.591945171356201
    5. ' )' → logprob: -6.216945171356201
    6. '-' → logprob: -6.591945171356201
    7. ')**' → logprob: -6.716945171356201
    8. ' ' → logprob: -9.09194564819336
    9. 's' → logprob: -10.09194564819336
    10. '}-' → logprob: -10.09194564819336

Token 197: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.005235767923295498
    2. ' ' → logprob: -5.25523567199707
    3. ')' → logprob: -13.50523567199707
    4. '```' → logprob: -15.88023567199707
    5. ' ' → logprob: -16.00523567199707
    6. '0' → logprob: -16.75523567199707
    7. '<|end|>' → logprob: -17.69273567199707
    8. ' )' → logprob: -17.81773567199707
    9. '2' → logprob: -17.94273567199707
    10. '   ' → logprob: -18.00523567199707

Token 198: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0014801019569858909
    2. ' )' → logprob: -7.2514801025390625
    3. ')+' → logprob: -7.8764801025390625
    4. '+' → logprob: -8.376480102539062
    5. ')<<' → logprob: -10.251480102539062
    6. ')>>' → logprob: -10.751480102539062
    7. ' +' → logprob: -11.001480102539062
    8. ')*' → logprob: -11.626480102539062
    9. ')
' → logprob: -11.626480102539062
    10. 's' → logprob: -12.126480102539062

Token 199: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.2813702821731567
    2. '
' → logprob: -1.4063702821731567
    3. ')' → logprob: -1.7813702821731567
    4. '   ' → logprob: -2.156370162963867
    5. ' ' → logprob: -2.531370162963867
    6. '<|end|>' → logprob: -3.656370162963867
    7. ',' → logprob: -4.156370162963867
    8. '):' → logprob: -4.281370162963867
    9. 'def' → logprob: -4.531370162963867
    10. '  
' → logprob: -4.781370162963867

Token 200: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06565873324871063
    2. '
' → logprob: -4.3156585693359375
    3. ' 
' → logprob: -4.3156585693359375
    4. ' ' → logprob: -4.4406585693359375
    5. '    
' → logprob: -4.9406585693359375
    6. ':' → logprob: -5.0656585693359375
    7. ')' → logprob: -5.9406585693359375
    8. 'def' → logprob: -6.3156585693359375
    9. '  
' → logprob: -6.6906585693359375
    10. ' :' → logprob: -6.9406585693359375

Token 201: ' We' (ID: 1416)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5919773578643799
    2. 'def' → logprob: -1.3419773578643799
    3. ' def' → logprob: -1.7169773578643799
    4. '    ' → logprob: -6.466977119445801
    5. ' ' → logprob: -6.841977119445801
    6. ' 
' → logprob: -6.966977119445801
    7. ' x' → logprob: -7.716977119445801
    8. '
' → logprob: -7.966977119445801
    9. ' return' → logprob: -8.2169771194458
    10. ')' → logprob: -8.5919771194458

Token 202: ' return' (ID: 622)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.10787813365459442
    2. ' =' → logprob: -2.4828782081604004
    3. '_' → logprob: -5.2328782081604
    4. '=' → logprob: -5.6078782081604
    5. ' continue' → logprob: -5.7328782081604
    6. ' def' → logprob: -6.6078782081604
    7. ' need' → logprob: -7.1078782081604
    8. 'n' → logprob: -7.2328782081604
    9. ' want' → logprob: -7.7328782081604
    10. ''' → logprob: -8.107877731323242

Token 203: ' list' (ID: 1562)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.6543785333633423
    2. '[' → logprob: -0.7793785333633423
    3. ' [(' → logprob: -5.154378414154053
    4. ' [
' → logprob: -5.654378414154053
    5. '[(' → logprob: -5.654378414154053
    6. '[
' → logprob: -5.779378414154053
    7. '[int' → logprob: -6.404378414154053
    8. ' []' → logprob: -6.904378414154053
    9. '[]' → logprob: -7.029378414154053
    10. '[len' → logprob: -7.654378414154053

Token 204: ' of' (ID: 328)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3662736713886261
    2. ' of' → logprob: -2.3662736415863037
    3. '(' → logprob: -2.6162736415863037
    4. '[]' → logprob: -3.4912736415863037
    5. 'def' → logprob: -3.4912736415863037
    6. '   ' → logprob: -4.116273880004883
    7. ' ' → logprob: -4.366273880004883
    8. '[
' → logprob: -4.866273880004883
    9. ' =' → logprob: -4.991273880004883
    10. ',' → logprob: -5.241273880004883

Token 205: ' these' (ID: 1879)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2996062636375427
    2. ' (' → logprob: -1.5496063232421875
    3. 'ints' → logprob: -4.4246063232421875
    4. 'int' → logprob: -4.6746063232421875
    5. '[' → logprob: -4.9246063232421875
    6. '2' → logprob: -5.1746063232421875
    7. '[(' → logprob: -6.0496063232421875
    8. 'inte' → logprob: -6.4246063232421875
    9. ' [' → logprob: -6.4246063232421875
    10. 'x' → logprob: -6.7996063232421875

Token 206: ' integers' (ID: 54912)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.0337570905685425
    2. '[' → logprob: -1.4087570905685425
    3. ':' → logprob: -1.6587570905685425
    4. ']' → logprob: -3.033757209777832
    5. ')' → logprob: -3.533757209777832
    6. '[
' → logprob: -3.658757209777832
    7. '(' → logprob: -3.908757209777832
    8. 's' → logprob: -4.033757209777832
    9. ',' → logprob: -4.158757209777832
    10. ':
' → logprob: -4.533757209777832

Token 207: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.38319581747055054
    2. 'def' → logprob: -1.3831958770751953
    3. '   ' → logprob: -4.008195877075195
    4. ',' → logprob: -4.133195877075195
    5. ':
' → logprob: -4.508195877075195
    6. '[' → logprob: -5.008195877075195
    7. '(x' → logprob: -5.633195877075195
    8. ':def' → logprob: -6.133195877075195
    9. '(' → logprob: -6.383195877075195
    10. ' def' → logprob: -6.508195877075195

Token 208: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7714768052101135
    2. ':' → logprob: -1.1464767456054688
    3. '   ' → logprob: -1.7714767456054688
    4. ':
' → logprob: -3.6464767456054688
    5. '(x' → logprob: -4.771476745605469
    6. ':def' → logprob: -5.896476745605469
    7. '(' → logprob: -6.146476745605469
    8. ' def' → logprob: -6.271476745605469
    9. '(s' → logprob: -6.396476745605469
    10. '
' → logprob: -6.521476745605469

Token 209: ' bin' (ID: 6958)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09512970596551895
    2. 'def' → logprob: -2.8451297283172607
    3. '
' → logprob: -3.8451297283172607
    4. ' def' → logprob: -5.845129489898682
    5. '    
' → logprob: -5.845129489898682
    6. ' 
' → logprob: -6.595129489898682
    7. 'b' → logprob: -7.220129489898682
    8. 'x' → logprob: -7.720129489898682
    9. '    ' → logprob: -7.970129489898682
    10. ' s' → logprob: -8.47012996673584

Token 210: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -0.2449619024991989
    2. '_' → logprob: -1.7449618577957153
    3. '_repr' → logprob: -3.994961977005005
    4. '_x' → logprob: -4.744961738586426
    5. '_val' → logprob: -4.744961738586426
    6. 'str' → logprob: -5.619961738586426
    7. '_string' → logprob: -6.744961738586426
    8. 'ary' → logprob: -6.869961738586426
    9. '_s' → logprob: -8.119961738586426
    10. 's' → logprob: -8.869961738586426

Token 211: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.023246178403496742
    2. '=' → logprob: -3.7732462882995605
    3. '_' → logprob: -15.648245811462402
    4. ' ' → logprob: -15.898245811462402
    5. ',' → logprob: -16.02324676513672
    6. 'x' → logprob: -16.77324676513672
    7. 's' → logprob: -16.77324676513672
    8. ' =
' → logprob: -17.27324676513672
    9. ' ' → logprob: -17.64824676513672
    10. ' ="' → logprob: -17.77324676513672

Token 212: ' bin' (ID: 6958)
  Prédit: 'bin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bin' → logprob: -0.04858794063329697
    2. ' bin' → logprob: -3.0485880374908447
    3. '(bin' → logprob: -14.923587799072266
    4. 'b' → logprob: -16.298587799072266
    5. 'format' → logprob: -16.298587799072266
    6. ' format' → logprob: -17.548587799072266
    7. '/bin' → logprob: -17.923587799072266
    8. ' ' → logprob: -18.298587799072266
    9. '_bin' → logprob: -19.673587799072266
    10. '-bin' → logprob: -20.173587799072266

Token 213: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.03804631531238556
    2. '(' → logprob: -3.288046360015869
    3. '(
' → logprob: -12.413045883178711
    4. 'x' → logprob: -15.288045883178711
    5. ' (' → logprob: -15.413045883178711
    6. '("("' → logprob: -16.41304588317871
    7. '((' → logprob: -16.66304588317871
    8. '(abs' → logprob: -17.16304588317871
    9. '<|end|>' → logprob: -17.53804588317871
    10. '(int' → logprob: -17.78804588317871

Token 214: ')[' (ID: 13637)
  Prédit: ')['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')[' → logprob: -0.0040952586568892
    2. '())[' → logprob: -6.129095077514648
    3. '(x' → logprob: -6.504095077514648
    4. '(' → logprob: -8.004095077514648
    5. '()[' → logprob: -10.629095077514648
    6. ')' → logprob: -10.754095077514648
    7. ' )[' → logprob: -11.004095077514648
    8. '[' → logprob: -12.004095077514648
    9. 'x' → logprob: -12.629095077514648
    10. ')(' → logprob: -13.004095077514648

Token 215: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.1054253011243418e-05
    2. '3' → logprob: -11.375020980834961
    3. '
' → logprob: -12.125020980834961
    4. ':' → logprob: -13.125020980834961
    5. '][' → logprob: -14.000020980834961
    6. ')[' → logprob: -15.000020980834961
    7. '```' → logprob: -15.500020980834961
    8. '

' → logprob: -15.625020980834961
    9. ' ' → logprob: -16.12502098083496
    10. '   ' → logprob: -16.25002098083496

Token 216: ':]
' (ID: 61598)
  Prédit: ':]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':]' → logprob: -0.28909537196159363
    2. ':].' → logprob: -1.414095401763916
    3. ']' → logprob: -4.914095401763916
    4. '].' → logprob: -7.789095401763916
    5. ':' → logprob: -9.539094924926758
    6. ':]
' → logprob: -10.414094924926758
    7. ' :]' → logprob: -10.539094924926758
    8. ':]

' → logprob: -12.164094924926758
    9. ' ]' → logprob: -12.414094924926758
    10. ':],' → logprob: -12.414094924926758

Token 217: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08707178384065628
    2. '
' → logprob: -3.2120718955993652
    3. '.split' → logprob: -4.212071895599365
    4. '    
' → logprob: -4.337071895599365
    5. ')' → logprob: -5.337071895599365
    6. '  
' → logprob: -5.962071895599365
    7. '[' → logprob: -7.087071895599365
    8. ' ' → logprob: -7.087071895599365
    9. ' 
' → logprob: -7.212071895599365
    10. ',' → logprob: -7.337071895599365

Token 218: ' seg' (ID: 3055)
  Prédit: 'parts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'parts' → logprob: -0.47203579545021057
    2. 'runs' → logprob: -1.0970357656478882
    3. 'segments' → logprob: -3.2220358848571777
    4. '   ' → logprob: -6.847035884857178
    5. 'ones' → logprob: -7.222035884857178
    6. 'return' → logprob: -8.84703540802002
    7. ' parts' → logprob: -8.97203540802002
    8. 'pieces' → logprob: -9.09703540802002
    9. 'run' → logprob: -9.47203540802002
    10. ' runs' → logprob: -9.97203540802002

Token 219: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5760942101478577
    2. 'ments' → logprob: -0.8260942101478577
    3. ' =' → logprob: -9.201094627380371
    4. 'ements' → logprob: -10.576094627380371
    5. '=' → logprob: -10.951094627380371
    6. 'r' → logprob: -12.701094627380371
    7. 'parts' → logprob: -13.576094627380371
    8. 'm' → logprob: -14.076094627380371
    9. 'ment' → logprob: -14.076094627380371
    10. 'ents' → logprob: -14.201094627380371

Token 220: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.020543403923511505
    2. '=' → logprob: -3.895543336868286
    3. 's' → logprob: -14.395543098449707
    4. ',' → logprob: -14.645543098449707
    5. ' =
' → logprob: -15.895543098449707
    6. ' ' → logprob: -15.895543098449707
    7. '_' → logprob: -16.020544052124023
    8. ' ' → logprob: -16.645544052124023
    9. ')' → logprob: -17.145544052124023
    10. '	' → logprob: -17.520544052124023

Token 221: ' bin' (ID: 6958)
  Prédit: 'bin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bin' → logprob: -0.25319820642471313
    2. '[' → logprob: -1.6281981468200684
    3. 'list' → logprob: -4.003198146820068
    4. ' [' → logprob: -5.878198146820068
    5. ' bin' → logprob: -6.253198146820068
    6. '[b' → logprob: -6.378198146820068
    7. '[i' → logprob: -6.753198146820068
    8. '[list' → logprob: -7.253198146820068
    9. '[x' → logprob: -7.753198146820068
    10. ' list' → logprob: -9.003198623657227

Token 222: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -1.0280383548888494e-06
    2. 'str' → logprob: -14.500000953674316
    3. '(' → logprob: -15.500000953674316
    4. '(x' → logprob: -16.375001907348633
    5. '(_' → logprob: -16.625001907348633
    6. ')' → logprob: -17.125001907348633
    7. '_STR' → logprob: -17.750001907348633
    8. '('_' → logprob: -18.000001907348633
    9. '_' → logprob: -18.125001907348633
    10. '```' → logprob: -18.250001907348633

Token 223: '.strip' (ID: 40613)
  Prédit: '.split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.split' → logprob: -0.002500748261809349
    2. '.' → logprob: -6.002500534057617
    3. '.strip' → logprob: -11.502500534057617
    4. ' .' → logprob: -12.002500534057617
    5. '.replace' → logprob: -12.127500534057617
    6. '.rstrip' → logprob: -13.002500534057617
    7. 'split' → logprob: -14.377500534057617
    8. '.Split' → logprob: -14.877500534057617
    9. '.s' → logprob: -16.002500534057617
    10. ').' → logprob: -16.877500534057617

Token 224: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.0003896815178450197
    2. '("' → logprob: -7.875389575958252
    3. '(' → logprob: -11.75039005279541
    4. ''' → logprob: -14.25039005279541
    5. '().' → logprob: -14.37539005279541
    6. '()' → logprob: -15.00039005279541
    7. '0' → logprob: -16.625389099121094
    8. '"' → logprob: -17.375389099121094
    9. '   ' → logprob: -18.250389099121094
    10. ' ('' → logprob: -18.500389099121094

Token 225: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001037815964082256
    2. ''' → logprob: -9.250103950500488
    3. ' ' → logprob: -12.000103950500488
    4. '')' → logprob: -14.125103950500488
    5. '"' → logprob: -15.937603950500488
    6. ')' → logprob: -16.000102996826172
    7. ' '' → logprob: -16.187602996826172
    8. '00' → logprob: -16.250102996826172
    9. '('' → logprob: -16.562602996826172
    10. '1' → logprob: -16.875102996826172

Token 226: '').' (ID: 3426)
  Prédit: '').'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '').' → logprob: -0.0012084494810551405
    2. ').' → logprob: -6.876208305358887
    3. ''' → logprob: -9.376208305358887
    4. ' ').' → logprob: -10.126208305358887
    5. '").' → logprob: -10.376208305358887
    6. ')').' → logprob: -11.876208305358887
    7. '')' → logprob: -12.751208305358887
    8. '('' → logprob: -13.251208305358887
    9. '0' → logprob: -13.251208305358887
    10. ']').' → logprob: -13.751208305358887

Token 227: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: 0.0
    2. ' split' → logprob: -17.0
    3. 'strip' → logprob: -17.625
    4. 'replace' → logprob: -19.875
    5. 'spl' → logprob: -20.0
    6. '.split' → logprob: -20.375
    7. '(split' → logprob: -22.0
    8. 'rstrip' → logprob: -22.375
    9. 'Split' → logprob: -23.125
    10. 'plit' → logprob: -23.375

Token 228: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -2.9875325708417222e-05
    2. '(' → logprob: -11.125029563903809
    3. ''' → logprob: -11.250029563903809
    4. '("' → logprob: -13.125029563903809
    5. '('.')' → logprob: -18.000030517578125
    6. '"' → logprob: -18.250030517578125
    7. ''s' → logprob: -18.250030517578125
    8. '(
' → logprob: -18.500030517578125
    9. '(',' → logprob: -18.625030517578125
    10. ' ('' → logprob: -19.000030517578125

Token 229: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.5941604690160602e-05
    2. ''' → logprob: -10.625025749206543
    3. '')' → logprob: -13.500025749206543
    4. '1' → logprob: -15.875025749206543
    5. ' ' → logprob: -17.12502670288086
    6. '"' → logprob: -18.75002670288086
    7. '00' → logprob: -19.25002670288086
    8. '000' → logprob: -19.37502670288086
    9. ''s' → logprob: -19.50002670288086
    10. '')
' → logprob: -19.62502670288086

Token 230: '')
' (ID: 2515)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.0002141458389814943
    2. '')
' → logprob: -9.125214576721191
    3. '")' → logprob: -9.750214576721191
    4. '')[' → logprob: -11.000214576721191
    5. ''' → logprob: -11.500214576721191
    6. ')' → logprob: -11.500214576721191
    7. '['' → logprob: -12.625214576721191
    8. '')"' → logprob: -12.875214576721191
    9. '')]' → logprob: -14.125214576721191
    10. '')['' → logprob: -14.375214576721191

Token 231: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09260726720094681
    2. '
' → logprob: -2.967607259750366
    3. ')' → logprob: -4.967607498168945
    4. '    
' → logprob: -5.467607498168945
    5. ' =' → logprob: -5.592607498168945
    6. 'if' → logprob: -5.592607498168945
    7. ' if' → logprob: -5.592607498168945
    8. 'return' → logprob: -5.842607498168945
    9. 'def' → logprob: -6.092607498168945
    10. '=' → logprob: -6.592607498168945

Token 232: ' res' (ID: 694)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.22129470109939575
    2. 'return' → logprob: -2.721294641494751
    3. '   ' → logprob: -3.596294641494751
    4. 'result' → logprob: -3.721294641494751
    5. 'res' (adapté à ' res') → logprob: -3.846294641494751
    6. 'segments' → logprob: -4.22129487991333
    7. 'se' → logprob: -4.34629487991333
    8. 'parts' → logprob: -4.97129487991333
    9. 'seg' → logprob: -4.97129487991333
    10. '[i' → logprob: -5.22129487991333

Token 233: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3868914544582367
    2. '=' → logprob: -1.136891484260559
    3. '=[]' → logprob: -10.88689136505127
    4. ' =[' → logprob: -14.13689136505127
    5. '=[' → logprob: -15.13689136505127
    6. '[' → logprob: -15.76189136505127
    7. '[:]' → logprob: -15.88689136505127
    8. '[]' → logprob: -16.136892318725586
    9. ',' → logprob: -16.261892318725586
    10. '=[]
' → logprob: -17.136892318725586

Token 234: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.06292185187339783
    2. '[' → logprob: -2.8129217624664307
    3. ' []' → logprob: -7.56292200088501
    4. '[(' → logprob: -8.562921524047852
    5. '[]
' → logprob: -8.687921524047852
    6. ' [' → logprob: -10.187921524047852
    7. '[int' → logprob: -10.937921524047852
    8. '[]}' → logprob: -12.062921524047852
    9. '[
' → logprob: -12.562921524047852
    10. '[]

' → logprob: -13.437921524047852

Token 235: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5786489844322205
    2. ' for' → logprob: -0.9536489844322205
    3. '	for' → logprob: -3.4536490440368652
    4. 'for' → logprob: -3.8286490440368652
    5. '    
' → logprob: -8.453648567199707
    6. ' ' → logprob: -8.828648567199707
    7. '    ' → logprob: -9.453648567199707
    8. '<|end|>' → logprob: -9.953648567199707
    9. '\t' → logprob: -10.453648567199707
    10. '[' → logprob: -11.078648567199707

Token 236: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.011964780278503895
    2. ' for' → logprob: -4.511964797973633
    3. '   ' → logprob: -7.011964797973633
    4. '	for' → logprob: -11.136964797973633
    5. '
' → logprob: -15.011964797973633
    6. ' ' → logprob: -15.261964797973633
    7. '    
' → logprob: -15.511964797973633
    8. '  ' → logprob: -16.386964797973633
    9. '    ' → logprob: -18.136964797973633
    10. '```' → logprob: -18.511964797973633

Token 237: ' seg' (ID: 3055)
  Prédit: 'seg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seg' → logprob: -0.00511256093159318
    2. 'run' → logprob: -6.130112648010254
    3. 'part' → logprob: -6.755112648010254
    4. 'segment' → logprob: -7.380112648010254
    5. ' seg' → logprob: -7.505112648010254
    6. 's' → logprob: -7.505112648010254
    7. 'k' → logprob: -11.130112648010254
    8. 'seq' → logprob: -11.255112648010254
    9. ' run' → logprob: -13.380112648010254
    10. ' part' → logprob: -13.755112648010254

Token 238: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0037607743870466948
    2. '   ' → logprob: -6.378760814666748
    3. ' ' → logprob: -6.628760814666748
    4. 'in' → logprob: -8.12876033782959
    5. '  ' → logprob: -8.50376033782959
    6. ':' → logprob: -10.00376033782959
    7. 's' → logprob: -10.00376033782959
    8. 'ent' → logprob: -10.50376033782959
    9. '_' → logprob: -10.75376033782959
    10. '    ' → logprob: -10.87876033782959

Token 239: ' seg' (ID: 3055)
  Prédit: 'seg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seg' → logprob: -0.6521310210227966
    2. 'se' → logprob: -0.7771310210227966
    3. ' seg' → logprob: -4.027131080627441
    4. 'filter' → logprob: -6.777131080627441
    5. '[' → logprob: -8.652131080627441
    6. ' filter' → logprob: -9.652131080627441
    7. '(seg' → logprob: -10.027131080627441
    8. 's' → logprob: -10.402131080627441
    9. '[s' → logprob: -11.027131080627441
    10. ' ' → logprob: -11.652131080627441

Token 240: 's' (ID: 82)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3574821949005127
    2. 's' → logprob: -1.2324821949005127
    3. ':
' → logprob: -4.982481956481934
    4. '):' → logprob: -6.732481956481934
    5. 'res' → logprob: -7.232481956481934
    6. '):
' → logprob: -9.482481956481934
    7. ' ' → logprob: -10.607481956481934
    8. ')' → logprob: -10.607481956481934
    9. ' :' → logprob: -11.107481956481934
    10. '   ' → logprob: -11.357481956481934

Token 241: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04438551887869835
    2. ':
' → logprob: -3.1693854331970215
    3. '       ' → logprob: -6.6693854331970215
    4. ' :' → logprob: -10.04438591003418
    5. ',' → logprob: -10.79438591003418
    6. '   ' → logprob: -11.29438591003418
    7. ' if' → logprob: -11.54438591003418
    8. '):
' → logprob: -11.79438591003418
    9. '[' → logprob: -11.91938591003418
    10. ' :
' → logprob: -12.29438591003418

Token 242: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0033931334037333727
    2. ' if' → logprob: -6.253393173217773
    3. 'if' → logprob: -6.628393173217773
    4. 'res' → logprob: -9.503393173217773
    5. '   ' → logprob: -10.503393173217773
    6. '[' → logprob: -11.503393173217773
    7. '        
' → logprob: -12.003393173217773
    8. '      ' → logprob: -12.503393173217773
    9. '
' → logprob: -13.003393173217773
    10. '    ' → logprob: -13.128393173217773

Token 243: ' if' (ID: 538)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.7716537117958069
    2. 'res' → logprob: -1.396653652191162
    3. 'if' (adapté à ' if') → logprob: -1.771653652191162
    4. 'length' → logprob: -2.771653652191162
    5. ' if' → logprob: -4.146653652191162
    6. '   ' → logprob: -4.521653652191162
    7. 'l' → logprob: -4.646653652191162
    8. ' res' → logprob: -5.146653652191162
    9. '       ' → logprob: -5.146653652191162
    10. ' k' → logprob: -5.521653652191162

Token 244: ' seg' (ID: 3055)
  Prédit: 'seg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seg' → logprob: -0.4759012758731842
    2. ' seg' → logprob: -0.9759012460708618
    3. ' len' → logprob: -6.850901126861572
    4. 'len' → logprob: -7.350901126861572
    5. ' not' → logprob: -9.47590160369873
    6. '(seg' → logprob: -10.85090160369873
    7. ' ' → logprob: -12.35090160369873
    8. ''' → logprob: -12.47590160369873
    9. 'segment' → logprob: -12.60090160369873
    10. ' segment' → logprob: -12.60090160369873

Token 245: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.27113062143325806
    2. '!=' → logprob: -2.1461305618286133
    3. '=' → logprob: -2.7711305618286133
    4. '==' → logprob: -3.1461305618286133
    5. '):' → logprob: -4.646130561828613
    6. '+=' → logprob: -6.646130561828613
    7. '!='' → logprob: -6.771130561828613
    8. ' !=' → logprob: -7.646130561828613
    9. ')' → logprob: -7.896130561828613
    10. '>' → logprob: -8.146130561828613

Token 246: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005809105467051268
    2. 'res' → logprob: -6.130809307098389
    3. ' =' → logprob: -6.630809307098389
    4. ':' → logprob: -6.755809307098389
    5. ' res' → logprob: -7.630809307098389
    6. ':
' → logprob: -7.755809307098389
    7. ',' → logprob: -10.13080883026123
    8. '=' → logprob: -10.38080883026123
    9. ' :' → logprob: -10.75580883026123
    10. '       ' → logprob: -10.88080883026123

Token 247: ' length' (ID: 5517)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.0022721777204424143
    2. 'k' → logprob: -6.752272129058838
    3. 'length' (adapté à ' length') → logprob: -7.377272129058838
    4. '           ' → logprob: -8.127272605895996
    5. 'l' → logprob: -9.502272605895996
    6. 'n' → logprob: -10.252272605895996
    7. '               ' → logprob: -10.502272605895996
    8. ' res' → logprob: -10.627272605895996
    9. 'r' → logprob: -12.502272605895996
    10. '   ' → logprob: -12.502272605895996

Token 248: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07255971431732178
    2. '=' → logprob: -2.9475598335266113
    3. '=len' → logprob: -4.072559833526611
    4. 'len' → logprob: -8.697559356689453
    5. '(len' → logprob: -9.197559356689453
    6. ' ' → logprob: -9.322559356689453
    7. ' +=' → logprob: -9.822559356689453
    8. '_len' → logprob: -10.822559356689453
    9. '_length' → logprob: -11.697559356689453
    10. ' len' → logprob: -11.822559356689453

Token 249: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.061967913061380386
    2. ' len' → logprob: -2.8119678497314453
    3. '(len' → logprob: -15.436967849731445
    4. '[len' → logprob: -18.686967849731445
    5. '	len' → logprob: -18.936967849731445
    6. 'seg' → logprob: -19.186967849731445
    7. '=len' → logprob: -19.311967849731445
    8. ' seg' → logprob: -19.811967849731445
    9. ',len' → logprob: -19.936967849731445
    10. ' ' → logprob: -20.686967849731445

Token 250: '(seg' (ID: 140462)
  Prédit: '(seg'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(seg' → logprob: -5.512236498361744e-07
    2. '(' → logprob: -15.250000953674316
    3. 'seg' → logprob: -15.375000953674316
    4. '(segment' → logprob: -17.125
    5. '(se' → logprob: -18.75
    6. '(sel' → logprob: -21.375
    7. '(
' → logprob: -21.875
    8. '(seq' → logprob: -21.875
    9. '(sig' → logprob: -22.125
    10. 'Seg' → logprob: -22.125

Token 251: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.4741112291812897
    2. ')' → logprob: -0.9741111993789673
    3. ')
' → logprob: -10.974111557006836
    4. '           ' → logprob: -11.724111557006836
    5. ')

' → logprob: -11.974111557006836
    6. ' )
' → logprob: -14.099111557006836
    7. ')#' → logprob: -15.224111557006836
    8. ')
/' → logprob: -15.349111557006836
    9. '
' → logprob: -15.724111557006836
    10. ' )' → logprob: -15.724111557006836

Token 252: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0006173660513013601
    2. '
' → logprob: -7.875617504119873
    3. ',' → logprob: -9.250617027282715
    4. ' res' → logprob: -9.500617027282715
    5. '            
' → logprob: -10.875617027282715
    6. 'res' → logprob: -11.250617027282715
    7. ',
' → logprob: -12.125617027282715
    8. '       ' → logprob: -12.250617027282715
    9. ' 
' → logprob: -12.375617027282715
    10. '   ' → logprob: -12.875617027282715

Token 253: ' val' (ID: 1459)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.2588777244091034
    2. ' res' → logprob: -1.5088777542114258
    3. '           ' → logprob: -5.258877754211426
    4. 'val' (adapté à ' val') → logprob: -7.383877754211426
    5. ' val' → logprob: -8.133877754211426
    6. 'value' → logprob: -8.508877754211426
    7. '   ' → logprob: -8.758877754211426
    8. 'num' → logprob: -8.883877754211426
    9. ' value' → logprob: -9.008877754211426
    10. '       ' → logprob: -9.508877754211426

Token 254: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3868730664253235
    2. ' =' → logprob: -1.1368730068206787
    3. ')' → logprob: -13.761873245239258
    4. ' ' → logprob: -14.511873245239258
    5. ' =(' → logprob: -15.886873245239258
    6. '=(' → logprob: -16.011873245239258
    7. ' =
' → logprob: -16.386873245239258
    8. '=
' → logprob: -16.386873245239258
    9. ',' → logprob: -17.136873245239258
    10. '=}' → logprob: -17.261873245239258

Token 255: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0049468474462628365
    2. '2' → logprob: -6.004946708679199
    3. ' (' → logprob: -6.004946708679199
    4. ' ' → logprob: -13.5049467086792
    5. '   ' → logprob: -16.379947662353516
    6. 'pow' → logprob: -16.629947662353516
    7. '1' → logprob: -16.879947662353516
    8. '
' → logprob: -17.129947662353516
    9. '((' → logprob: -17.379947662353516
    10. '[' → logprob: -18.254947662353516

Token 256: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.006398326717317104
    2. '2' → logprob: -5.2563982009887695
    3. '(' → logprob: -6.7563982009887695
    4. ' ' → logprob: -15.50639820098877
    5. 'pow' → logprob: -16.256399154663086
    6. ' (' → logprob: -16.756399154663086
    7. '
' → logprob: -18.506399154663086
    8. ')' → logprob: -18.756399154663086
    9. '   ' → logprob: -18.881399154663086
    10. '```' → logprob: -19.881399154663086

Token 257: ' <<' (ID: 2256)
  Prédit: ' <<'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <<' → logprob: -0.3869014084339142
    2. '<<' → logprob: -1.1369013786315918
    3. '<' → logprob: -10.51190185546875
    4. ' <' → logprob: -14.01190185546875
    5. ')<<' → logprob: -14.26190185546875
    6. ' <<
' → logprob: -14.51190185546875
    7. '<<(' → logprob: -14.63690185546875
    8. '
' → logprob: -15.51190185546875
    9. ' <<=' → logprob: -15.63690185546875
    10. ')' → logprob: -16.01190185546875

Token 258: ' length' (ID: 5517)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -4.5491004129871726e-05
    2. ' length' → logprob: -10.000045776367188
    3. '(length' → logprob: -18.625045776367188
    4. 'ength' → logprob: -21.250045776367188
    5. '_length' → logprob: -21.750045776367188
    6. '[length' → logprob: -21.750045776367188
    7. 'Length' → logprob: -21.875045776367188
    8. '	length' → logprob: -21.875045776367188
    9. 'leng' → logprob: -22.500045776367188
    10. ')' → logprob: -22.750045776367188

Token 259: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.196732960641384e-05
    2. ' )' → logprob: -9.500082015991211
    3. ')-' → logprob: -11.875082015991211
    4. '1' → logprob: -18.75008201599121
    5. '")' → logprob: -18.87508201599121
    6. ')
' → logprob: -19.37508201599121
    7. '')' → logprob: -19.50008201599121
    8. ']' → logprob: -19.50008201599121
    9. '}' → logprob: -20.00008201599121
    10. '）' → logprob: -20.12508201599121

Token 260: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.8657499551773071
    2. '-' → logprob: -1.2407499551773071
    3. ')' → logprob: -1.4907499551773071
    4. ')-' → logprob: -2.7407498359680176
    5. ' ' → logprob: -8.865750312805176
    6. ' )' → logprob: -9.615750312805176
    7. '-)' → logprob: -10.365750312805176
    8. ')-(' → logprob: -10.490750312805176
    9. '}-' → logprob: -10.865750312805176
    10. '()-' → logprob: -10.990750312805176

Token 261: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.0126840758603066e-05
    2. ' ' → logprob: -10.125040054321289
    3. '   ' → logprob: -21.25004005432129
    4. '```' → logprob: -21.50004005432129
    5. '           ' → logprob: -21.87504005432129
    6. ')' → logprob: -21.87504005432129
    7. '<|end|>' → logprob: -22.50004005432129
    8. '
' → logprob: -22.50004005432129
    9. '0' → logprob: -23.37504005432129
    10. '۱' → logprob: -23.50004005432129

Token 262: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.935296834039036e-06
    2. ' ' → logprob: -12.75000286102295
    3. '
' → logprob: -19.500003814697266
    4. '   ' → logprob: -20.875003814697266
    5. ')' → logprob: -21.125003814697266
    6. '```' → logprob: -21.125003814697266
    7. '<|end|>' → logprob: -21.750003814697266
    8. '

' → logprob: -21.937503814697266
    9. '{' → logprob: -22.375003814697266
    10. '۱' → logprob: -22.375003814697266

Token 263: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0013290488859638572
    2. '
' → logprob: -6.876328945159912
    3. ',' → logprob: -9.50132942199707
    4. ')
' → logprob: -9.50132942199707
    5. ')' → logprob: -9.62632942199707
    6. '       ' → logprob: -10.25132942199707
    7. ',
' → logprob: -11.00132942199707
    8. '   ' → logprob: -11.12632942199707
    9. '<|end|>' → logprob: -12.62632942199707
    10. '		' → logprob: -13.00132942199707

Token 264: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -6.110668618930504e-05
    2. '       ' → logprob: -10.37506103515625
    3. '
' → logprob: -11.50006103515625
    4. ',' → logprob: -12.25006103515625
    5. '            
' → logprob: -12.62506103515625
    6. '   ' → logprob: -13.00006103515625
    7. '		' → logprob: -13.12506103515625
    8. '               ' → logprob: -13.25006103515625
    9. '          ' → logprob: -13.37506103515625
    10. ')' → logprob: -13.37506103515625

Token 265: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -0.3885630667209625
    2. ' res' → logprob: -1.1385630369186401
    3. '
' → logprob: -6.63856315612793
    4. '           ' → logprob: -8.38856315612793
    5. '       ' → logprob: -9.26356315612793
    6. '   ' → logprob: -10.88856315612793
    7. '	res' → logprob: -11.26356315612793
    8. ',res' → logprob: -11.38856315612793
    9. '               ' → logprob: -12.38856315612793
    10. '(res' → logprob: -13.01356315612793

Token 266: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00525154173374176
    2. '.' → logprob: -5.255251407623291
    3. '.ap' → logprob: -11.63025188446045
    4. '.app' → logprob: -12.13025188446045
    5. '.extend' → logprob: -13.63025188446045
    6. '.add' → logprob: -13.88025188446045
    7. '.push' → logprob: -14.38025188446045
    8. ' .' → logprob: -15.00525188446045
    9. '.Append' → logprob: -15.63025188446045
    10. 'append' → logprob: -16.130250930786133

Token 267: '(val' (ID: 17391)
  Prédit: '(val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(val' → logprob: -1.6240566083070007e-06
    2. 'val' → logprob: -13.750001907348633
    3. '(' → logprob: -14.750001907348633
    4. ',val' → logprob: -16.625001907348633
    5. '[val' → logprob: -17.125001907348633
    6. ' val' → logprob: -17.375001907348633
    7. ' (' → logprob: -18.250001907348633
    8. '	val' → logprob: -20.750001907348633
    9. '(v' → logprob: -20.750001907348633
    10. '(
' → logprob: -21.125001907348633

Token 268: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0013023802312090993
    2. ')
' → logprob: -6.876302242279053
    3. '   ' → logprob: -9.126302719116211
    4. ' )' → logprob: -9.376302719116211
    5. ')return' → logprob: -9.626302719116211
    6. '<|end|>' → logprob: -12.501302719116211
    7. ',' → logprob: -13.876302719116211
    8. ' )
' → logprob: -14.001302719116211
    9. ' ' → logprob: -14.126302719116211
    10. '
' → logprob: -14.376302719116211

Token 269: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012034744024276733
    2. ' return' → logprob: -4.637034893035889
    3. 'return' → logprob: -6.762034893035889
    4. '	return' → logprob: -7.012034893035889
    5. ',' → logprob: -9.76203441619873
    6. '    
' → logprob: -9.76203441619873
    7. '
' → logprob: -10.38703441619873
    8. ':return' → logprob: -11.13703441619873
    9. '<|end|>' → logprob: -11.51203441619873
    10. ' ' → logprob: -12.01203441619873

Token 270: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.644718587398529
    2. 'return' (adapté à ' return') → logprob: -0.769718587398529
    3. '   ' → logprob: -4.644718647003174
    4. '	return' → logprob: -6.269718647003174
    5. ':return' → logprob: -8.019718170166016
    6. '
' → logprob: -10.019718170166016
    7. ' ' → logprob: -10.644718170166016
    8. ')' → logprob: -10.644718170166016
    9. 'eturn' → logprob: -11.019718170166016
    10. ' 
' → logprob: -11.144718170166016

Token 271: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.0002613358374219388
    2. ' res' → logprob: -8.250261306762695
    3. 're' → logprob: -22.250261306762695
    4. '(res' → logprob: -22.375261306762695
    5. '	res' → logprob: -23.375261306762695
    6. 'r' → logprob: -24.000261306762695
    7. '$res' → logprob: -24.875261306762695
    8. '[' → logprob: -25.750261306762695
    9. ' ' → logprob: -26.000261306762695
    10. 'ress' → logprob: -26.250261306762695

Token 272: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 273: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.1890079826116562
    2. '<|end|>' → logprob: -1.8140079975128174
    3. '
' → logprob: -5.439007759094238
    4. '#' → logprob: -6.689007759094238
    5. '<|end|>' → logprob: -7.064007759094238
    6. ' def' → logprob: -7.064007759094238
    7. '\' → logprob: -7.814007759094238
    8. ')' → logprob: -8.189007759094238
    9. '```' → logprob: -8.189007759094238
    10. '\n' → logprob: -8.689007759094238

Token 274: ' grund' (ID: 34475)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -1.2939543724060059
    2. 'int' → logprob: -2.418954372406006
    3. ' int' → logprob: -3.043954372406006
    4. 'main' → logprob: -3.043954372406006
    5. 'pow' → logprob: -3.043954372406006
    6. ' solve' → logprob: -3.168954372406006
    7. ' pow' → logprob: -3.543954372406006
    8. ' multiply' → logprob: -3.668954372406006
    9. ' base' → logprob: -3.793954372406006
    10. ' count' → logprob: -3.918954372406006

Token 275: 'y' (ID: 88)
  Prédit: 'iel'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iel' → logprob: -0.7835702300071716
    2. 'el' → logprob: -2.4085702896118164
    3. '_' → logprob: -3.5335702896118164
    4. '__' → logprob: -3.7835702896118164
    5. '_value' → logprob: -3.9085702896118164
    6. 'ier' → logprob: -4.033570289611816
    7. '```' → logprob: -4.033570289611816
    8. 'ei' → logprob: -4.158570289611816
    9. 'er' → logprob: -4.158570289611816
    10. 'y' → logprob: -4.283570289611816

Token 276: '(x' (ID: 4061)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04201484099030495
    2. '(x' → logprob: -3.6670148372650146
    3. '_value' → logprob: -5.542015075683594
    4. '_' → logprob: -6.167015075683594
    5. '_number' → logprob: -6.292015075683594
    6. '(n' → logprob: -6.292015075683594
    7. '(number' → logprob: -6.667015075683594
    8. 'def' → logprob: -6.792015075683594
    9. '(value' → logprob: -7.542015075683594
    10. '(num' → logprob: -7.792015075683594

Token 277: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.03808211907744408
    2. '):
' → logprob: -3.2880821228027344
    3. ')' → logprob: -10.288082122802734
    4. '):
' → logprob: -12.788082122802734
    5. ' ):' → logprob: -13.038082122802734
    6. '):

' → logprob: -13.913082122802734
    7. ':' → logprob: -14.663082122802734
    8. ',' → logprob: -16.413082122802734
    9. ' ):
' → logprob: -17.163082122802734
    10. ')：' → logprob: -17.288082122802734

Token 278: ' memo' (ID: 46393)
  Prédit: 'memo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'memo' → logprob: -0.4519980251789093
    2. ' memo' → logprob: -1.076997995376587
    3. 'cache' → logprob: -4.951998233795166
    4. 'm' → logprob: -5.826998233795166
    5. 'dp' → logprob: -5.951998233795166
    6. ')' → logprob: -5.951998233795166
    7. 'mem' → logprob: -6.201998233795166
    8. ' cache' → logprob: -6.326998233795166
    9. ' mem' → logprob: -7.201998233795166
    10. 'y' → logprob: -7.951998233795166

Token 279: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.12708957493305206
    2. '):
' → logprob: -2.127089500427246
    3. '):
' → logprob: -9.627089500427246
    4. '):

' → logprob: -10.127089500427246
    5. ':' → logprob: -10.877089500427246
    6. '=' → logprob: -11.002089500427246
    7. ')' → logprob: -11.377089500427246
    8. '={}' → logprob: -12.377089500427246
    9. ' ):' → logprob: -13.002089500427246
    10. ',' → logprob: -14.127089500427246

Token 280: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1008511334657669
    2. ':' → logprob: -2.475851058959961
    3. '(' → logprob: -5.350851058959961
    4. ' if' → logprob: -5.475851058959961
    5. '[' → logprob: -6.600851058959961
    6. '{' → logprob: -7.975851058959961
    7. '	if' → logprob: -7.975851058959961
    8. ' :' → logprob: -8.600851058959961
    9. ',' → logprob: -9.475851058959961
    10. '    
' → logprob: -9.600851058959961

Token 281: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3896543085575104
    2. 'if' (adapté à ' if') → logprob: -1.139654278755188
    3. '   ' → logprob: -5.889654159545898
    4. '	if' → logprob: -11.514654159545898
    5. '    
' → logprob: -14.514654159545898
    6. ' 
' → logprob: -14.764654159545898
    7. '
' → logprob: -16.2646541595459
    8. ',' → logprob: -16.3896541595459
    9. ':' → logprob: -16.3896541595459
    10. ' ' → logprob: -16.5146541595459

Token 282: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.474086731672287
    2. 'x' → logprob: -0.9740867614746094
    3. ' ' → logprob: -11.84908676147461
    4. ' not' → logprob: -13.47408676147461
    5. '	x' → logprob: -14.59908676147461
    6. '0' → logprob: -15.09908676147461
    7. '(x' → logprob: -15.84908676147461
    8. ' ' → logprob: -16.47408676147461
    9. '   ' → logprob: -16.84908676147461
    10. 'not' → logprob: -17.34908676147461

Token 283: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.5412830114364624
    2. ' ==' → logprob: -0.9162830114364624
    3. ' in' → logprob: -4.166283130645752
    4. 'in' → logprob: -6.291283130645752
    5. '=' → logprob: -8.166282653808594
    6. '0' → logprob: -8.291282653808594
    7. ')' → logprob: -11.166282653808594
    8. '[' → logprob: -11.291282653808594
    9. '<' → logprob: -11.541282653808594
    10. ' =' → logprob: -11.541282653808594

Token 284: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00020354038861114532
    2. ' ' → logprob: -8.500203132629395
    3. '1' → logprob: -18.00020408630371
    4. '00' → logprob: -19.87520408630371
    5. 'None' → logprob: -20.12520408630371
    6. '۰' → logprob: -20.75020408630371
    7. '-' → logprob: -21.00020408630371
    8. ' 
' → logprob: -21.00020408630371
    9. '000' → logprob: -21.12520408630371
    10. '   ' → logprob: -21.12520408630371

Token 285: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.2842308680992573e-05
    2. ' ' → logprob: -10.750022888183594
    3. '1' → logprob: -14.375022888183594
    4. '(' → logprob: -16.250022888183594
    5. '000' → logprob: -16.437522888183594
    6. '00' → logprob: -16.625022888183594
    7. '-' → logprob: -16.750022888183594
    8. 'None' → logprob: -17.125022888183594
    9. '   ' → logprob: -17.187522888183594
    10. ')' → logprob: -17.375022888183594

Token 286: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.009798707440495491
    2. ':
' → logprob: -4.759798526763916
    3. ':return' → logprob: -6.759798526763916
    4. '   ' → logprob: -11.384799003601074
    5. ' :' → logprob: -11.759799003601074
    6. ' or' → logprob: -13.634799003601074
    7. ',' → logprob: -14.009799003601074
    8. '):' → logprob: -14.259799003601074
    9. ':

' → logprob: -15.259799003601074
    10. ' :
' → logprob: -15.259799003601074

Token 287: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08968362212181091
    2. ' return' → logprob: -2.9646835327148438
    3. '   ' → logprob: -4.089683532714844
    4. ':' → logprob: -4.839683532714844
    5. ':return' → logprob: -5.089683532714844
    6. 'return' → logprob: -6.214683532714844
    7. '0' → logprob: -7.589683532714844
    8. ':
' → logprob: -7.839683532714844
    9. '	return' → logprob: -8.589683532714844
    10. ' :' → logprob: -9.339683532714844

Token 288: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.32156693935394287
    2. ' return' → logprob: -1.3215669393539429
    3. '0' → logprob: -4.821567058563232
    4. '   ' → logprob: -9.071566581726074
    5. ' ' → logprob: -9.446566581726074
    6. '
' → logprob: -11.821566581726074
    7. '	return' → logprob: -12.071566581726074
    8. '1' → logprob: -12.321566581726074
    9. ' 
' → logprob: -12.821566581726074
    10. ':return' → logprob: -13.571566581726074

Token 289: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001398929744027555
    2. ' ' → logprob: -8.875140190124512
    3. ' ' → logprob: -18.375139236450195
    4. '   ' → logprob: -18.687639236450195
    5. 'None' → logprob: -18.937639236450195
    6. '-' → logprob: -18.937639236450195
    7. '۰' → logprob: -19.000139236450195
    8. '000' → logprob: -19.062639236450195
    9. '[' → logprob: -19.437639236450195
    10. '{' → logprob: -19.562639236450195

Token 290: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.75
    3. '۰' → logprob: -19.5
    4. '[' → logprob: -19.75
    5. 'None' → logprob: -20.4375
    6. '{' → logprob: -20.875
    7. '-' → logprob: -20.9375
    8. '1' → logprob: -21.1875
    9. '000' → logprob: -21.25
    10. 'x' → logprob: -21.25

Token 291: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6727972626686096
    2. '
' → logprob: -1.4227972030639648
    3. '\n' → logprob: -1.7977972030639648
    4. '    
' → logprob: -3.297797203063965
    5. '<|end|>' → logprob: -3.422797203063965
    6. '  
' → logprob: -5.547797203063965
    7. ' 
' → logprob: -6.297797203063965
    8. '```' → logprob: -6.547797203063965
    9. ')' → logprob: -6.797797203063965
    10. '<|end|>' → logprob: -6.922797203063965

Token 292: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11591162532567978
    2. '<|end|>' → logprob: -3.1159117221832275
    3. '    
' → logprob: -3.3659117221832275
    4. ' ' → logprob: -4.490911483764648
    5. '\n' → logprob: -5.240911483764648
    6. ' 
' → logprob: -5.490911483764648
    7. '
' → logprob: -5.490911483764648
    8. '  
' → logprob: -6.865911483764648
    9. '```' → logprob: -7.365911483764648
    10. '<|end|>' → logprob: -7.490911483764648

Token 293: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -1.7432603272027336e-06
    2. ' if' → logprob: -13.750001907348633
    3. '   ' → logprob: -14.375001907348633
    4. '
' → logprob: -16.875001907348633
    5. 'key' → logprob: -18.125001907348633
    6. '    
' → logprob: -19.375001907348633
    7. 'i' → logprob: -20.875001907348633
    8. '	if' → logprob: -21.000001907348633
    9. '```' → logprob: -22.000001907348633
    10. '

' → logprob: -22.500001907348633

Token 294: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.04302111268043518
    2. 'x' → logprob: -3.1680212020874023
    3. ' (' → logprob: -11.168021202087402
    4. ' ' → logprob: -12.418021202087402
    5. '(x' → logprob: -13.168021202087402
    6. '(' → logprob: -13.418021202087402
    7. ' not' → logprob: -15.418021202087402
    8. '	x' → logprob: -15.668021202087402
    9. ')x' → logprob: -17.293020248413086
    10. 'not' → logprob: -17.793020248413086

Token 295: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.4755527377128601
    2. ' in' → logprob: -0.9755527377128601
    3. ' ' → logprob: -6.975552558898926
    4. ' not' → logprob: -8.600552558898926
    5. '[' → logprob: -9.100552558898926
    6. 'n' → logprob: -9.850552558898926
    7. 'not' → logprob: -9.975552558898926
    8. '	in' → logprob: -10.475552558898926
    9. '   ' → logprob: -10.600552558898926
    10. ')' → logprob: -11.225552558898926

Token 296: ' memo' (ID: 46393)
  Prédit: 'memo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'memo' → logprob: -0.12693557143211365
    2. ' memo' → logprob: -2.1269354820251465
    3. 'memory' → logprob: -13.001935958862305
    4. 'mem' → logprob: -13.126935958862305
    5. 'm' → logprob: -13.501935958862305
    6. ' memoir' → logprob: -14.001935958862305
    7. '.memo' → logprob: -15.251935958862305
    8. ' meme' → logprob: -15.376935958862305
    9. '
' → logprob: -15.626935958862305
    10. ' memory' → logprob: -15.751935958862305

Token 297: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0023719624150544405
    2. ':return' → logprob: -6.127371788024902
    3. ':
' → logprob: -8.627371788024902
    4. '):' → logprob: -12.627371788024902
    5. ' :' → logprob: -13.752371788024902
    6. '=' → logprob: -14.752371788024902
    7. '<|end|>' → logprob: -14.752371788024902
    8. ':**' → logprob: -14.877371788024902
    9. '[' → logprob: -14.877371788024902
    10. '   ' → logprob: -15.252371788024902

Token 298: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005492602940648794
    2. '   ' → logprob: -5.380492687225342
    3. ':' → logprob: -8.255492210388184
    4. ':return' → logprob: -8.505492210388184
    5. '	' → logprob: -9.130492210388184
    6. 'return' → logprob: -9.380492210388184
    7. ' return' → logprob: -9.630492210388184
    8. '	   ' → logprob: -10.255492210388184
    9. ':
' → logprob: -10.380492210388184
    10. '    ' → logprob: -10.880492210388184

Token 299: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.06212587282061577
    2. ' return' → logprob: -2.8121259212493896
    3. '   ' → logprob: -9.312126159667969
    4. '       ' → logprob: -10.062126159667969
    5. ':return' → logprob: -11.687126159667969
    6. '	return' → logprob: -12.187126159667969
    7. '{return' → logprob: -12.312126159667969
    8. '
' → logprob: -13.062126159667969
    9. '    ' → logprob: -13.062126159667969
    10. '    
' → logprob: -14.437126159667969

Token 300: ' memo' (ID: 46393)
  Prédit: 'memo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'memo' → logprob: -7.755678961984813e-05
    2. ' memo' → logprob: -9.500077247619629
    3. 'm' → logprob: -13.000077247619629
    4. 'mem' → logprob: -15.250077247619629
    5. '[m' → logprob: -16.250078201293945
    6. 'memor' → logprob: -17.500078201293945
    7. 'memory' → logprob: -18.000078201293945
    8. '.memo' → logprob: -18.750078201293945
    9. 'mint' → logprob: -19.000078201293945
    10. 'mnop' → logprob: -19.250078201293945

Token 301: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.003827271983027458
    2. 'x' → logprob: -6.253827095031738
    3. '   ' → logprob: -6.503827095031738
    4. '[
' → logprob: -8.753827095031738
    5. '[' → logprob: -9.003827095031738
    6. '(x' → logprob: -10.128827095031738
    7. '    
' → logprob: -10.878827095031738
    8. '```' → logprob: -11.128827095031738
    9. ']' → logprob: -11.253827095031738
    10. ' ' → logprob: -11.878827095031738

Token 302: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -6.988221684878226e-06
    2. ']
' → logprob: -12.375006675720215
    3. ')' → logprob: -13.375006675720215
    4. '])' → logprob: -14.000006675720215
    5. ' ]' → logprob: -15.375006675720215
    6. ')]' → logprob: -16.87500762939453
    7. '}' → logprob: -17.25000762939453
    8. ']

' → logprob: -17.25000762939453
    9. ']=' → logprob: -17.87500762939453
    10. ']
' → logprob: -18.12500762939453

Token 303: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.032599132508039474
    2. '    
' → logprob: -3.6575992107391357
    3. '```' → logprob: -5.907598972320557
    4. ':' → logprob: -6.657598972320557
    5. '[' → logprob: -8.032599449157715
    6. ' 
' → logprob: -8.657599449157715
    7. ',' → logprob: -8.657599449157715
    8. '[:]' → logprob: -8.782599449157715
    9. '<|end|>' → logprob: -8.782599449157715
    10. '#' → logprob: -9.032599449157715

Token 304: ' #' (ID: 1069)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.37257301807403564
    2. 'moves' → logprob: -1.9975730180740356
    3. 'vals' → logprob: -2.372572898864746
    4. 'mex' → logprob: -3.872572898864746
    5. 'sg' → logprob: -4.122572898864746
    6. 'g' → logprob: -4.997572898864746
    7. 'grund' → logprob: -5.247572898864746
    8. 's' → logprob: -5.372572898864746
    9. 'next' → logprob: -5.497572898864746
    10. 'xor' → logprob: -5.622572898864746

Token 305: ' According' (ID: 16344)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.19044828414916992
    2. 'parts' → logprob: -2.56544828414917
    3. 'moves' → logprob: -3.81544828414917
    4. 'segments' → logprob: -4.44044828414917
    5. 'se' → logprob: -4.44044828414917
    6. 'p' → logprob: -4.56544828414917
    7. 'seg' → logprob: -4.56544828414917
    8. 'vals' → logprob: -5.06544828414917
    9. 'total' → logprob: -5.06544828414917
    10. 'spl' → logprob: -5.69044828414917

Token 306: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.3134310245513916
    2. ' to' → logprob: -1.3134310245513916
    3. ' ' → logprob: -9.188430786132812
    4. '_to' → logprob: -10.438430786132812
    5. '   ' → logprob: -11.563430786132812
    6. '#' → logprob: -11.813430786132812
    7. ' #' → logprob: -12.188430786132812
    8. '=' → logprob: -12.563430786132812
    9. 't' → logprob: -12.688430786132812
    10. ':' → logprob: -12.813430786132812

Token 307: ' the' (ID: 290)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.2349601984024048
    2. 'the' → logprob: -1.2349601984024048
    3. 'len' → logprob: -2.1099600791931152
    4. 'split' → logprob: -2.1099600791931152
    5. 'def' → logprob: -2.6099600791931152
    6. '#' → logprob: -2.6099600791931152
    7. '[' → logprob: -5.609960079193115
    8. 'code' → logprob: -5.859960079193115
    9. 'grund' → logprob: -5.859960079193115
    10. 'problem' → logprob: -6.359960079193115

Token 308: ' operation' (ID: 9506)
  Prédit: 'problem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'problem' → logprob: -0.0716848373413086
    2. 'split' → logprob: -3.8216848373413086
    3. 'comment' → logprob: -4.071684837341309
    4. 'name' → logprob: -5.196684837341309
    5. 'code' → logprob: -5.196684837341309
    6. 'description' → logprob: -5.321684837341309
    7. 'spr' → logprob: -5.696684837341309
    8. 'game' → logprob: -5.821684837341309
    9. 'definition' → logprob: -6.696684837341309
    10. '#' → logprob: -6.946684837341309

Token 309: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5105488300323486
    2. ',' → logprob: -1.0105488300323486
    3. 's' → logprob: -3.6355488300323486
    4. '=' → logprob: -6.3855485916137695
    5. '_' → logprob: -6.7605485916137695
    6. ' =' → logprob: -6.8855485916137695
    7. ''s' → logprob: -7.0105485916137695
    8. ' ,' → logprob: -7.1355485916137695
    9. '#' → logprob: -7.3855485916137695
    10. '_,' → logprob: -7.5105485916137695

Token 310: '   ' (ID: 271)
  Prédit: ' moves'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' moves' → logprob: -0.44846272468566895
    2. ' res' → logprob: -1.448462724685669
    3. 'moves' → logprob: -3.073462724685669
    4. '   ' → logprob: -3.448462724685669
    5. ' next' → logprob: -4.19846248626709
    6. 'res' → logprob: -5.19846248626709
    7. ' nxt' → logprob: -5.44846248626709
    8. ' move' → logprob: -5.69846248626709
    9. ' parts' → logprob: -5.82346248626709
    10. ' options' → logprob: -5.94846248626709

Token 311: ' #' (ID: 1069)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.54030841588974
    2. 'moves' → logprob: -1.2903084754943848
    3. 'vals' → logprob: -2.9153084754943848
    4. ' res' → logprob: -4.415308475494385
    5. 's' → logprob: -4.665308475494385
    6. 'seg' → logprob: -4.790308475494385
    7. 'se' → logprob: -4.790308475494385
    8. 'parts' → logprob: -4.915308475494385
    9. 'mex' → logprob: -5.165308475494385
    10. 'next' → logprob: -5.290308475494385

Token 312: ' Step' (ID: 22291)
  Prédit: ' res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' res' → logprob: -1.256368637084961
    2. 'moves' → logprob: -1.381368637084961
    3. ' moves' → logprob: -1.881368637084961
    4. 'res' → logprob: -2.006368637084961
    5. 'vals' → logprob: -3.006368637084961
    6. 'mex' → logprob: -3.631368637084961
    7. ' seg' → logprob: -4.131368637084961
    8. 'seg' → logprob: -4.506368637084961
    9. ' next' → logprob: -5.006368637084961
    10. 's' → logprob: -5.131368637084961

Token 313: '1' (ID: 16)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9118634462356567
    2. '=' → logprob: -1.0368634462356567
    3. '   ' → logprob: -1.7868634462356567
    4. ':' → logprob: -3.286863327026367
    5. 's' → logprob: -3.536863327026367
    6. '1' → logprob: -6.286863327026367
    7. ' ' → logprob: -6.536863327026367
    8. ')' → logprob: -6.911863327026367
    9. '_tokens' → logprob: -6.911863327026367
    10. ',' → logprob: -7.036863327026367

Token 314: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.1506922245025635
    2. ' =' → logprob: -1.2756922245025635
    3. '   ' → logprob: -1.4006922245025635
    4. '=' → logprob: -2.1506922245025635
    5. ',' → logprob: -3.7756922245025635
    6. ' ' → logprob: -5.400691986083984
    7. '    ' → logprob: -5.775691986083984
    8. '<|end|>' → logprob: -6.275691986083984
    9. ')' → logprob: -6.650691986083984
    10. '<|end|>' → logprob: -6.775691986083984

Token 315: ' from' (ID: 591)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.848666250705719
    2. 'moves' → logprob: -1.8486661911010742
    3. ' res' → logprob: -2.598666191101074
    4. 'se' → logprob: -2.723666191101074
    5. 'parts' → logprob: -3.098666191101074
    6. 'vals' → logprob: -3.098666191101074
    7. 'segments' → logprob: -3.223666191101074
    8. 'seg' → logprob: -4.098666191101074
    9. 'spl' → logprob: -4.223666191101074
    10. 's' → logprob: -4.473666191101074

Token 316: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.1127687469124794
    2. 'split' → logprob: -2.4877686500549316
    3. ' x' → logprob: -4.862768650054932
    4. 'grund' → logprob: -5.112768650054932
    5. ' split' → logprob: -5.862768650054932
    6. '0' → logprob: -6.987768650054932
    7. 'each' → logprob: -7.487768650054932
    8. 'bin' → logprob: -7.487768650054932
    9. 'base' → logprob: -7.612768650054932
    10. ' grund' → logprob: -7.737768650054932

Token 317: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.32447004318237305
    2. ':' → logprob: -1.449470043182373
    3. ' ,' → logprob: -5.074470043182373
    4. ':
' → logprob: -5.199470043182373
    5. '   ' → logprob: -5.574470043182373
    6. ' =' → logprob: -5.574470043182373
    7. ')' → logprob: -5.824470043182373
    8. '=' → logprob: -6.074470043182373
    9. '
' → logprob: -6.199470043182373
    10. '):
' → logprob: -6.199470043182373

Token 318: ' split' (ID: 12648)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -1.0405279397964478
    2. 'moves' → logprob: -1.7905279397964478
    3. ' res' → logprob: -2.165527820587158
    4. 'seg' → logprob: -2.540527820587158
    5. 'vals' → logprob: -3.165527820587158
    6. 'spl' → logprob: -3.665527820587158
    7. ' moves' → logprob: -3.665527820587158
    8. 's' → logprob: -3.915527820587158
    9. ' seg' → logprob: -4.040527820587158
    10. 'mex' → logprob: -4.165527820587158

Token 319: ' into' (ID: 1511)
  Prédit: '_into'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_into' → logprob: -0.07224248349666595
    2. 'into' → logprob: -3.447242498397827
    3. ' into' → logprob: -3.572242498397827
    4. '   ' → logprob: -4.947242259979248
    5. ')' → logprob: -7.822242259979248
    6. '_' → logprob: -8.072242736816406
    7. 'int' → logprob: -8.072242736816406
    8. ' =' → logprob: -8.322242736816406
    9. '=' → logprob: -8.572242736816406
    10. '(x' → logprob: -8.697242736816406

Token 320: ' run' (ID: 2461)
  Prédit: 'split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.29029372334480286
    2. 'powers' → logprob: -1.6652936935424805
    3. ' split' → logprob: -3.2902936935424805
    4. ' powers' → logprob: -4.0402936935424805
    5. 'segments' → logprob: -5.6652936935424805
    6. 'spl' → logprob: -7.0402936935424805
    7. 'power' → logprob: -7.4152936935424805
    8. 'p' → logprob: -7.5402936935424805
    9. 'pow' → logprob: -8.29029369354248
    10. 'base' → logprob: -8.29029369354248

Token 321: '-length' (ID: 53970)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0020974453072994947
    2. '_' → logprob: -7.1270976066589355
    3. ')' → logprob: -8.627097129821777
    4. ' s' → logprob: -8.752097129821777
    5. ',' → logprob: -8.877097129821777
    6. '   ' → logprob: -8.877097129821777
    7. ' =' → logprob: -9.127097129821777
    8. '_of' → logprob: -9.252097129821777
    9. 'length' → logprob: -9.252097129821777
    10. '=' → logprob: -9.752097129821777

Token 322: ' segments' (ID: 33749)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.04107676446437836
    2. ' segments' → logprob: -4.29107666015625
    3. 'encoded' → logprob: -4.79107666015625
    4. 'segments' → logprob: -4.79107666015625
    5. '-' → logprob: -5.91607666015625
    6. ' of' → logprob: -6.66607666015625
    7. 'of' → logprob: -6.79107666015625
    8. '_' → logprob: -7.16607666015625
    9. ' encoded' → logprob: -7.29107666015625
    10. ' s' → logprob: -7.66607666015625

Token 323: ' of' (ID: 328)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14531083405017853
    2. ',' → logprob: -2.770310878753662
    3. 's' → logprob: -3.395310878753662
    4. ' of' → logprob: -4.145310878753662
    5. ' =' → logprob: -5.020310878753662
    6. '_of' → logprob: -5.770310878753662
    7. 'of' → logprob: -6.020310878753662
    8. '=' → logprob: -6.020310878753662
    9. ',
' → logprob: -6.270310878753662
    10. ':' → logprob: -6.520310878753662

Token 324: ' consecutive' (ID: 40840)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3191003203392029
    2. 'con' → logprob: -1.3191003799438477
    3. 'ones' → logprob: -5.444100379943848
    4. ' consecutive' → logprob: -7.694100379943848
    5. ' ones' → logprob: -7.819100379943848
    6. ' ' → logprob: -8.069100379943848
    7. 'one' → logprob: -9.319100379943848
    8. ')' → logprob: -9.694100379943848
    9. '`' → logprob: -10.569100379943848
    10. ''' → logprob: -10.944100379943848

Token 325: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00730264512822032
    2. 'ones' → logprob: -5.632302761077881
    3. ' ' → logprob: -6.257302761077881
    4. ' ones' → logprob: -6.507302761077881
    5. '`' → logprob: -9.007302284240723
    6. '_' → logprob: -9.882302284240723
    7. '```' → logprob: -9.882302284240723
    8. 'one' → logprob: -11.132302284240723
    9. ''s' → logprob: -12.007302284240723
    10. ')' → logprob: -12.007302284240723

Token 326: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004401036538183689
    2. 'ones' → logprob: -5.504401206970215
    3. ' ones' → logprob: -9.504401206970215
    4. '```' → logprob: -9.754401206970215
    5. 'one' → logprob: -9.879401206970215
    6. '`' → logprob: -10.254401206970215
    7. '_' → logprob: -10.629401206970215
    8. ' ' → logprob: -10.879401206970215
    9. 'segments' → logprob: -11.754401206970215
    10. ''s' → logprob: -12.129401206970215

Token 327: ''s' (ID: 885)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.8365380764007568
    2. ' bits' → logprob: -0.8365380764007568
    3. 'bits' → logprob: -2.586538076400757
    4. '   ' → logprob: -3.211538076400757
    5. ' s' → logprob: -4.461538314819336
    6. ''s' → logprob: -5.461538314819336
    7. ' ' → logprob: -6.961538314819336
    8. '_bits' → logprob: -7.211538314819336
    9. '-b' → logprob: -9.086538314819336
    10. ' segments' → logprob: -9.461538314819336

Token 328: ' in' (ID: 306)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08109663426876068
    2. ',' → logprob: -3.206096649169922
    3. '
' → logprob: -4.081096649169922
    4. 's' → logprob: -5.081096649169922
    5. '    
' → logprob: -5.206096649169922
    6. ',
' → logprob: -5.456096649169922
    7. ' in' → logprob: -6.706096649169922
    8. '.' → logprob: -7.706096649169922
    9. ' ,' → logprob: -7.706096649169922
    10. '  
' → logprob: -7.706096649169922

Token 329: ' binary' (ID: 15600)
  Prédit: 'binary'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'binary' → logprob: -0.09045371413230896
    2. 'bin' → logprob: -2.840453624725342
    3. ' binary' → logprob: -4.340453624725342
    4. 'x' → logprob: -4.590453624725342
    5. 'the' → logprob: -6.590453624725342
    6. 'def' → logprob: -7.215453624725342
    7. 'base' → logprob: -7.465453624725342
    8. ' x' → logprob: -7.715453624725342
    9. ' bin' → logprob: -8.0904541015625
    10. ' the' → logprob: -8.2154541015625

Token 330: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.354764461517334
    2. ',' → logprob: -2.104764461517334
    3. '
' → logprob: -2.104764461517334
    4. ',
' → logprob: -3.354764461517334
    5. 's' → logprob: -5.104764461517334
    6. '    
' → logprob: -6.104764461517334
    7. '.' → logprob: -6.354764461517334
    8. '  
' → logprob: -6.854764461517334
    9. '<|end|>' → logprob: -6.979764461517334
    10. ':' → logprob: -7.229764461517334

Token 331: ' get' (ID: 717)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.45136547088623047
    2. 'moves' → logprob: -1.4513654708862305
    3. 'mex' → logprob: -3.3263654708862305
    4. '
' → logprob: -3.9513654708862305
    5. 'res' → logprob: -4.0763654708862305
    6. 'grund' → logprob: -4.3263654708862305
    7. ' moves' → logprob: -4.9513654708862305
    8. 'next' → logprob: -5.2013654708862305
    9. '    
' → logprob: -5.3263654708862305
    10. 'move' → logprob: -6.0763654708862305

Token 332: ' list' (ID: 1562)
  Prédit: 'vals'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vals' → logprob: -0.8204511404037476
    2. 'the' → logprob: -1.9454511404037476
    3. 'res' → logprob: -2.570451259613037
    4. 'segments' → logprob: -2.820451259613037
    5. 'seg' → logprob: -2.945451259613037
    6. 'sub' → logprob: -3.195451259613037
    7. 'moves' → logprob: -3.570451259613037
    8. 'all' → logprob: -3.820451259613037
    9. 'se' → logprob: -3.945451259613037
    10. 'grund' → logprob: -4.070451259613037

Token 333: ' L' (ID: 451)
  Prédit: ' of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.454013854265213
    2. '   ' → logprob: -2.0790138244628906
    3. ' =' → logprob: -2.5790138244628906
    4. '=' → logprob: -2.7040138244628906
    5. 'of' → logprob: -2.7040138244628906
    6. ',' → logprob: -4.329013824462891
    7. 's' → logprob: -5.829013824462891
    8. '[' → logprob: -6.079013824462891
    9. '_' → logprob: -6.329013824462891
    10. '_of' → logprob: -6.454013824462891

Token 334: ' =' (ID: 314)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.036706842482089996
    2. ',' → logprob: -3.6617069244384766
    3. '
' → logprob: -5.161706924438477
    4. ',
' → logprob: -6.911706924438477
    5. '    
' → logprob: -7.786706924438477
    6. '.' → logprob: -7.786706924438477
    7. 's' → logprob: -7.786706924438477
    8. '<|end|>' → logprob: -7.911706924438477
    9. '<|end|>' → logprob: -8.661706924438477
    10. ' ,' → logprob: -8.661706924438477

Token 335: ' split' (ID: 12648)
  Prédit: 'split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.1495143473148346
    2. ' split' → logprob: -2.0245144367218018
    3. '[]' → logprob: -6.149514198303223
    4. '[' → logprob: -6.649514198303223
    5. ' x' → logprob: -7.149514198303223
    6. ' [' → logprob: -7.524514198303223
    7. 'x' → logprob: -7.899514198303223
    8. '[x' → logprob: -8.024514198303223
    9. '(split' → logprob: -8.274514198303223
    10. 'base' → logprob: -8.274514198303223

Token 336: '_into' (ID: 109569)
  Prédit: '_into'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_into' → logprob: -4.60414821645827e-06
    2. '_' → logprob: -13.625004768371582
    3. '_segments' → logprob: -14.000004768371582
    4. 's' → logprob: -14.500004768371582
    5. '_to' → logprob: -14.750004768371582
    6. '```' → logprob: -14.875004768371582
    7. 'Into' → logprob: -15.750004768371582
    8. '_of' → logprob: -15.750004768371582
    9. '_in' → logprob: -16.000003814697266
    10. 'into' → logprob: -16.375003814697266

Token 337: '_p' (ID: 1359)
  Prédit: '_p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_p' → logprob: -0.00010211274639004841
    2. 'powers' → logprob: -9.625102043151855
    3. '
' → logprob: -12.625102043151855
    4. 'x' → logprob: -12.625102043151855
    5. '_' → logprob: -12.750102043151855
    6. 'run' → logprob: -12.875102043151855
    7. 'def' → logprob: -12.875102043151855
    8. 'pow' → logprob: -13.000102043151855
    9. 's' → logprob: -13.125102043151855
    10. 'seg' → logprob: -13.250102043151855

Token 338: 'owers' (ID: 23882)
  Prédit: 'owers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'owers' → logprob: -0.000536232371814549
    2. 'powers' → logprob: -7.7505364418029785
    3. 'ow' → logprob: -9.75053596496582
    4. 'ower' → logprob: -10.87553596496582
    5. 'ows' → logprob: -11.75053596496582
    6. '```' → logprob: -12.37553596496582
    7. 'wers' → logprob: -13.12553596496582
    8. '(x' → logprob: -13.37553596496582
    9. '[' → logprob: -13.62553596496582
    10. '   ' → logprob: -13.75053596496582

Token 339: '_of' (ID: 8023)
  Prédit: '_of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_of' → logprob: -0.00016873658751137555
    2. '   ' → logprob: -9.250168800354004
    3. 'of' → logprob: -10.875168800354004
    4. '('_' → logprob: -11.750168800354004
    5. '```' → logprob: -11.750168800354004
    6. '(' → logprob: -12.000168800354004
    7. ' _' → logprob: -12.500168800354004
    8. ' of' → logprob: -12.500168800354004
    9. '
' → logprob: -12.750168800354004
    10. '`' → logprob: -12.875168800354004

Token 340: '_two' (ID: 54305)
  Prédit: 'two'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'two' → logprob: -0.003041885793209076
    2. '_two' → logprob: -5.878041744232178
    3. ' two' → logprob: -9.378042221069336
    4. '2' → logprob: -9.753042221069336
    5. 'Two' → logprob: -10.628042221069336
    6. '
' → logprob: -11.128042221069336
    7. 'tw' → logprob: -11.253042221069336
    8. 'x' → logprob: -11.378042221069336
    9. 't' → logprob: -11.503042221069336
    10. '(two' → logprob: -11.878042221069336

Token 341: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.007858584634959698
    2. '   ' → logprob: -5.132858753204346
    3. '(' → logprob: -7.132858753204346
    4. '
' → logprob: -8.007858276367188
    5. 'x' → logprob: -8.257858276367188
    6. ',' → logprob: -8.882858276367188
    7. '```' → logprob: -9.007858276367188
    8. 'def' → logprob: -9.882858276367188
    9. 's' → logprob: -10.257858276367188
    10. '(s' → logprob: -10.632858276367188

Token 342: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.4768228828907013
    2. ')' → logprob: -0.9768228530883789
    3. '   ' → logprob: -6.226822853088379
    4. ')
' → logprob: -7.601822853088379
    5. ')

' → logprob: -9.601822853088379
    6. '())
' → logprob: -10.351822853088379
    7. ' )
' → logprob: -10.476822853088379
    8. '))
' → logprob: -10.726822853088379
    9. '
' → logprob: -10.851822853088379
    10. '))' → logprob: -11.226822853088379

Token 343: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0023805228993296623
    2. ',' → logprob: -6.75238037109375
    3. '    
' → logprob: -7.50238037109375
    4. '
' → logprob: -8.12738037109375
    5. 'm' → logprob: -9.12738037109375
    6. 'moves' → logprob: -10.12738037109375
    7. ')' → logprob: -10.50238037109375
    8. ',
' → logprob: -10.50238037109375
    9. 's' → logprob: -11.00238037109375
    10. 'import' → logprob: -11.50238037109375

Token 344: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.059231001883745193
    2. '
' → logprob: -3.3092310428619385
    3. '    
' → logprob: -4.559230804443359
    4. ',' → logprob: -5.184230804443359
    5. 'next' → logprob: -6.809230804443359
    6. 'moves' → logprob: -7.309230804443359
    7. ',
' → logprob: -7.684230804443359
    8. 'm' → logprob: -7.934230804443359
    9. ')
' → logprob: -8.18423080444336
    10. 's' → logprob: -8.18423080444336

Token 345: ' Then' (ID: 7801)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0121132135391235
    2. 'moves' → logprob: -1.1371132135391235
    3. 'next' → logprob: -2.137113094329834
    4. 'mex' → logprob: -2.262113094329834
    5. 'move' → logprob: -4.262113094329834
    6. ' next' → logprob: -4.387113094329834
    7. 'm' → logprob: -4.637113094329834
    8. ' moves' → logprob: -4.887113094329834
    9. 's' → logprob: -4.887113094329834
    10. 'vals' → logprob: -5.012113094329834

Token 346: ' XOR' (ID: 147209)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.36577939987182617
    2. 'mex' → logprob: -1.8657793998718262
    3. 'moves' → logprob: -2.990779399871826
    4. 'next' → logprob: -3.365779399871826
    5. 'grund' → logprob: -4.365779399871826
    6. 'res' → logprob: -4.365779399871826
    7. '
' → logprob: -4.490779399871826
    8. 'vals' → logprob: -5.240779399871826
    9. 'nim' → logprob: -5.365779399871826
    10. ' next' → logprob: -5.740779399871826

Token 347: ' of' (ID: 328)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.699137806892395
    2. 'res' → logprob: -2.3241376876831055
    3. 'of' → logprob: -2.6991376876831055
    4. 'L' → logprob: -2.9491376876831055
    5. ' =' → logprob: -2.9491376876831055
    6. 's' → logprob: -3.0741376876831055
    7. '_x' → logprob: -4.1991376876831055
    8. ' of' → logprob: -4.3241376876831055
    9. '_val' → logprob: -4.3241376876831055
    10. 'val' → logprob: -4.5741376876831055

Token 348: ' the' (ID: 290)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.36609694361686707
    2. 'all' → logprob: -1.7410969734191895
    3. 'grund' → logprob: -3.3660969734191895
    4. 'val' → logprob: -3.9910969734191895
    5. ' all' → logprob: -4.4910969734191895
    6. ' L' → logprob: -4.4910969734191895
    7. 'vals' → logprob: -4.4910969734191895
    8. 'res' → logprob: -4.7410969734191895
    9. 'elem' → logprob: -4.8660969734191895
    10. 'ele' → logprob: -4.9910969734191895

Token 349: ' nim' (ID: 26845)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'L' → logprob: -1.0138037204742432
    2. 'val' → logprob: -1.2638037204742432
    3. 'elem' → logprob: -2.513803720474243
    4. 'seg' → logprob: -2.888803720474243
    5. 'l' → logprob: -3.388803720474243
    6. 'v' → logprob: -3.513803720474243
    7. '[val' → logprob: -3.763803720474243
    8. 'i' → logprob: -3.763803720474243
    9. '[i' → logprob: -4.013803482055664
    10. ' val' → logprob: -4.513803482055664

Token 350: 'bers' (ID: 7008)
  Prédit: 'vals'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vals' → logprob: -1.0925567150115967
    2. 'ber' → logprob: -1.7175567150115967
    3. 'xor' → logprob: -2.0925567150115967
    4. 'bers' → logprob: -2.5925567150115967
    5. '_vals' → logprob: -3.0925567150115967
    6. 's' → logprob: -3.2175567150115967
    7. '_values' → logprob: -3.2175567150115967
    8. 'pile' → logprob: -3.3425567150115967
    9. 'res' → logprob: -3.7175567150115967
    10. 'val' → logprob: -3.7175567150115967

Token 351: ' of' (ID: 328)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12641379237174988
    2. '=' → logprob: -2.5014138221740723
    3. '   ' → logprob: -4.501413822174072
    4. '_' → logprob: -4.626413822174072
    5. '(' → logprob: -6.001413822174072
    6. '_val' → logprob: -6.251413822174072
    7. '_x' → logprob: -6.501413822174072
    8. 's' → logprob: -6.751413822174072
    9. 'val' → logprob: -7.126413822174072
    10. ' of' → logprob: -7.126413822174072

Token 352: ' resulting' (ID: 20547)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.06012265756726265
    2. 'each' → logprob: -4.435122489929199
    3. 'the' → logprob: -4.560122489929199
    4. 'val' → logprob: -4.935122489929199
    5. ' L' → logprob: -5.060122489929199
    6. 'all' → logprob: -5.310122489929199
    7. 'sub' → logprob: -6.185122489929199
    8. '[' → logprob: -6.560122489929199
    9. 'these' → logprob: -6.560122489929199
    10. 'seg' → logprob: -6.560122489929199

Token 353: ' elements' (ID: 8632)
  Prédit: 'vals'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vals' → logprob: -1.666613221168518
    2. 'segments' → logprob: -1.791613221168518
    3. ' segments' → logprob: -2.4166131019592285
    4. ' states' → logprob: -2.6666131019592285
    5. 'states' → logprob: -2.6666131019592285
    6. 'values' → logprob: -3.2916131019592285
    7. 's' → logprob: -3.5416131019592285
    8. 'L' → logprob: -3.7916131019592285
    9. 'numbers' → logprob: -3.7916131019592285
    10. 'sub' → logprob: -4.0416131019592285

Token 354: ' after' (ID: 1934)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02512543648481369
    2. '
' → logprob: -4.150125503540039
    3. '    
' → logprob: -6.150125503540039
    4. ')
' → logprob: -6.275125503540039
    5. ')' → logprob: -6.775125503540039
    6. ',' → logprob: -6.900125503540039
    7. 's' → logprob: -7.900125503540039
    8. '):
' → logprob: -7.900125503540039
    9. ' =' → logprob: -8.150125503540039
    10. ':' → logprob: -8.400125503540039

Token 355: ' step' (ID: 5983)
  Prédit: 'spl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'spl' → logprob: -1.476577877998352
    2. 'split' → logprob: -1.851577877998352
    3. 'app' → logprob: -1.976577877998352
    4. 'each' → logprob: -2.1015777587890625
    5. 'the' → logprob: -2.8515777587890625
    6. 'xor' → logprob: -2.8515777587890625
    7. 'rem' → logprob: -3.1015777587890625
    8. 'L' → logprob: -3.4765777587890625
    9. ')' → logprob: -4.2265777587890625
    10. 'segment' → logprob: -4.4765777587890625

Token 356: '1' (ID: 16)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6809278130531311
    2. '1' → logprob: -1.0559277534484863
    3. '_' → logprob: -2.4309277534484863
    4. 's' → logprob: -4.305927753448486
    5. '=' → logprob: -4.555927753448486
    6. '_
' → logprob: -4.930927753448486
    7. ')' → logprob: -5.680927753448486
    8. '^' → logprob: -5.930927753448486
    9. ':' → logprob: -5.930927753448486
    10. ' =' → logprob: -6.430927753448486

Token 357: ' +' (ID: 659)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03174896538257599
    2. '
' → logprob: -4.0317487716674805
    3. ',' → logprob: -5.4067487716674805
    4. '    
' → logprob: -5.4067487716674805
    5. ':' → logprob: -7.0317487716674805
    6. ')' → logprob: -7.2817487716674805
    7. ',
' → logprob: -7.4067487716674805
    8. ')
' → logprob: -7.9067487716674805
    9. ':
' → logprob: -8.15674877166748
    10. '.' → logprob: -8.15674877166748

Token 358: ' step' (ID: 5983)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.034380823373794556
    2. 'grund' → logprob: -4.159380912780762
    3. ' ' → logprob: -5.284380912780762
    4. 'xor' → logprob: -5.784380912780762
    5. 'step' → logprob: -6.284380912780762
    6. '   ' → logprob: -7.034380912780762
    7. 'base' → logprob: -7.159380912780762
    8. ' grund' → logprob: -7.159380912780762
    9. '#' → logprob: -7.284380912780762
    10. '0' → logprob: -7.534380912780762

Token 359: '3' (ID: 18)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.08349593728780746
    2. '_' → logprob: -2.958495855331421
    3. '=' → logprob: -5.20849609375
    4. '0' → logprob: -5.20849609375
    5. '   ' → logprob: -5.20849609375
    6. ':' → logprob: -6.70849609375
    7. 's' → logprob: -6.83349609375
    8. '2' → logprob: -6.95849609375
    9. ' =' → logprob: -6.95849609375
    10. ')' → logprob: -7.08349609375

Token 360: ' moves' (ID: 19523)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.44787830114364624
    2. '   ' → logprob: -1.572878360748291
    3. '=' → logprob: -3.072878360748291
    4. '_' → logprob: -3.572878360748291
    5. ')' → logprob: -3.822878360748291
    6. '
' → logprob: -4.072878360748291
    7. 'def' → logprob: -5.072878360748291
    8. ':' → logprob: -5.322878360748291
    9. ',' → logprob: -5.322878360748291
    10. ')
' → logprob: -5.572878360748291

Token 361: ' define' (ID: 13174)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20317254960536957
    2. ':' → logprob: -2.453172445297241
    3. ' =' → logprob: -3.078172445297241
    4. ':
' → logprob: -3.953172445297241
    5. '
' → logprob: -5.07817268371582
    6. ',' → logprob: -5.70317268371582
    7. '=' → logprob: -5.82817268371582
    8. ')
' → logprob: -5.82817268371582
    9. ')' → logprob: -5.95317268371582
    10. '(' → logprob: -5.95317268371582

Token 362: ' the' (ID: 290)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6791169047355652
    2. ' the' → logprob: -2.30411696434021
    3. ')' → logprob: -2.67911696434021
    4. ' ' → logprob: -2.92911696434021
    5. 'the' → logprob: -3.05411696434021
    6. '(' → logprob: -3.17911696434021
    7. 'memo' → logprob: -3.55411696434021
    8. '(
' → logprob: -3.80411696434021
    9. '
' → logprob: -4.054116725921631
    10. ' memo' → logprob: -4.554116725921631

Token 363: ' grund' (ID: 34475)
  Prédit: 'mex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mex' → logprob: -0.6122164726257324
    2. 'grund' → logprob: -1.3622164726257324
    3. 'result' → logprob: -3.2372164726257324
    4. 'next' → logprob: -3.3622164726257324
    5. 'moves' → logprob: -3.4872164726257324
    6. 'nim' → logprob: -3.8622164726257324
    7. 'value' → logprob: -4.112216472625732
    8. 'move' → logprob: -4.612216472625732
    9. 'xor' → logprob: -4.987216472625732
    10. ' next' → logprob: -5.112216472625732

Token 364: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.00319375516846776
    2. '_' → logprob: -6.2531938552856445
    3. '   ' → logprob: -7.1281938552856445
    4. '_y' → logprob: -8.128193855285645
    5. ')' → logprob: -10.003193855285645
    6. '_
' → logprob: -10.503193855285645
    7. 'ity' → logprob: -10.628193855285645
    8. ' ' → logprob: -12.253193855285645
    9. '
' → logprob: -12.253193855285645
    10. '_value' → logprob: -12.378193855285645

Token 365: '.
' (ID: 558)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.0494557619094849
    2. '(x' → logprob: -1.4244557619094849
    3. ':' → logprob: -2.2994556427001953
    4. '   ' → logprob: -2.6744556427001953
    5. '(
' → logprob: -2.7994556427001953
    6. ')' → logprob: -3.0494556427001953
    7. '(' → logprob: -3.5494556427001953
    8. '[' → logprob: -4.299455642700195
    9. '=' → logprob: -4.549455642700195
    10. '_
' → logprob: -4.799455642700195

Token 366: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.024324951693415642
    2. '    
' → logprob: -4.649324893951416
    3. '
' → logprob: -4.774324893951416
    4. ' 
' → logprob: -7.149324893951416
    5. ' moves' → logprob: -7.149324893951416
    6. ' s' → logprob: -8.024325370788574
    7. ' x' → logprob: -8.149325370788574
    8. '   
' → logprob: -8.149325370788574
    9. ' next' → logprob: -8.274325370788574
    10. ' res' → logprob: -8.274325370788574

Token 367: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.037191666662693024
    2. 'moves' → logprob: -4.537191867828369
    3. 'mex' → logprob: -5.162191867828369
    4. 'm' → logprob: -5.662191867828369
    5. ' moves' → logprob: -5.912191867828369
    6. '    
' → logprob: -6.162191867828369
    7. ' res' → logprob: -6.412191867828369
    8. 'mx' → logprob: -6.537191867828369
    9. '
' → logprob: -6.537191867828369
    10. 's' → logprob: -6.662191867828369

Token 368: ' The' (ID: 623)
  Prédit: 'moves'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'moves' → logprob: -0.6678156852722168
    2. '   ' → logprob: -1.2928156852722168
    3. 'mex' → logprob: -2.542815685272217
    4. 'move' → logprob: -3.542815685272217
    5. 'next' → logprob: -3.667815685272217
    6. 'vals' → logprob: -4.542815685272217
    7. ' moves' → logprob: -4.667815685272217
    8. 'xor' → logprob: -4.792815685272217
    9. 'mx' → logprob: -5.042815685272217
    10. 'm' → logprob: -5.042815685272217

Token 369: ' game' (ID: 2813)
  Prédit: 'moves'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'moves' → logprob: -1.1982382535934448
    2. 'next' → logprob: -1.8232382535934448
    3. '   ' → logprob: -2.4482383728027344
    4. '#' → logprob: -2.4482383728027344
    5. 'mex' → logprob: -2.5732383728027344
    6. 'mx' → logprob: -2.6982383728027344
    7. 'xor' → logprob: -3.0732383728027344
    8. 'res' → logprob: -3.5732383728027344
    9. 'step' → logprob: -3.9482383728027344
    10. 'm' → logprob: -4.198238372802734

Token 370: ' as' (ID: 472)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9950712323188782
    2. '=' → logprob: -1.4950711727142334
    3. '   ' → logprob: -1.9950711727142334
    4. ')' → logprob: -2.2450711727142334
    5. '_' → logprob: -2.4950711727142334
    6. ' is' → logprob: -2.9950711727142334
    7. ':' → logprob: -4.8700714111328125
    8. ' ' → logprob: -5.2450714111328125
    9. ' continues' → logprob: -5.6200714111328125
    10. 'def' → logprob: -6.1200714111328125

Token 371: ' described' (ID: 13394)
  Prédit: ' described'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' described' → logprob: -0.21328672766685486
    2. ' defined' → logprob: -2.5882866382598877
    3. 'def' → logprob: -2.8382866382598877
    4. '#' → logprob: -3.5882866382598877
    5. ' follows' → logprob: -5.088286876678467
    6. 's' → logprob: -5.463286876678467
    7. ' is' → logprob: -5.588286876678467
    8. '   ' → logprob: -5.963286876678467
    9. 'defined' → logprob: -5.963286876678467
    10. ' explained' → logprob: -6.213286876678467

Token 372: ' works' (ID: 5882)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19292032718658447
    2. ')' → logprob: -2.817920207977295
    3. '<|end|>' → logprob: -2.942920207977295
    4. '<|end|>' → logprob: -4.192920207977295
    5. ' =' → logprob: -4.442920207977295
    6. ' ' → logprob: -4.567920207977295
    7. '
' → logprob: -4.817920207977295
    8. ',' → logprob: -5.442920207977295
    9. ':' → logprob: -5.942920207977295
    10. ' is' → logprob: -5.942920207977295

Token 373: ' on' (ID: 402)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06504454463720322
    2. ':' → logprob: -3.690044641494751
    3. ' =' → logprob: -3.815044641494751
    4. '=' → logprob: -5.190044403076172
    5. ' for' → logprob: -6.565044403076172
    6. ',' → logprob: -6.690044403076172
    7. '    
' → logprob: -6.690044403076172
    8. '\t' → logprob: -6.815044403076172
    9. ')' → logprob: -6.940044403076172
    10. ' ' → logprob: -7.440044403076172

Token 374: ' mult' (ID: 3469)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.11277268081903458
    2. 'the' → logprob: -3.4877727031707764
    3. ' x' → logprob: -3.8627727031707764
    4. 'segments' → logprob: -4.487772464752197
    5. ' the' → logprob: -4.737772464752197
    6. 'each' → logprob: -5.112772464752197
    7. '   ' → logprob: -5.987772464752197
    8. ' each' → logprob: -5.987772464752197
    9. 'grund' → logprob: -5.987772464752197
    10. ' segments' → logprob: -6.112772464752197

Token 375: 'iset' (ID: 39097)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.10026048123836517
    2. 'iset' → logprob: -2.4752604961395264
    3. 'is' → logprob: -5.350260257720947
    4. '
' → logprob: -6.225260257720947
    5. 'ip' → logprob: -6.725260257720947
    6. 'ise' → logprob: -7.850260257720947
    7. 'iplier' → logprob: -7.975260257720947
    8. '[i' → logprob: -8.100260734558105
    9. 'imap' → logprob: -8.100260734558105
    10. ' i' → logprob: -8.225260734558105

Token 376: '.' (ID: 13)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.39019477367401123
    2. ':' → logprob: -2.265194892883301
    3. ' of' → logprob: -2.640194892883301
    4. ',' → logprob: -3.265194892883301
    5. ')' → logprob: -3.515194892883301
    6. ' =' → logprob: -3.890194892883301
    7. '=' → logprob: -4.140194892883301
    8. ':
' → logprob: -4.890194892883301
    9. '_' → logprob: -5.140194892883301
    10. '):
' → logprob: -5.265194892883301

Token 377: ' For' (ID: 2214)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.025404060259461403
    2. 'moves' → logprob: -4.27540397644043
    3. 'mx' → logprob: -6.27540397644043
    4. 'mex' → logprob: -6.40040397644043
    5. 'm' → logprob: -6.52540397644043
    6. ')' → logprob: -6.65040397644043
    7. '    
' → logprob: -6.65040397644043
    8. 'next' → logprob: -7.02540397644043
    9. ' moves' → logprob: -7.27540397644043
    10. 's' → logprob: -8.40040397644043

Token 378: ' a' (ID: 261)
  Prédit: 'each'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'each' → logprob: -1.7970608472824097
    2. 'elem' → logprob: -1.7970608472824097
    3. 'seg' → logprob: -1.9220608472824097
    4. 'x' → logprob: -2.172060966491699
    5. 'y' → logprob: -2.172060966491699
    6. 'val' → logprob: -3.297060966491699
    7. 'key' → logprob: -3.547060966491699
    8. 'step' → logprob: -3.797060966491699
    9. 'segment' → logprob: -4.047060966491699
    10. 'move' → logprob: -4.172060966491699

Token 379: ' single' (ID: 4590)
  Prédit: 'll'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'll' → logprob: -0.09117598831653595
    2. 'l' → logprob: -3.7161760330200195
    3. 'x' → logprob: -4.5911760330200195
    4. 'n' → logprob: -5.0911760330200195
    5. 'b' → logprob: -5.2161760330200195
    6. 'def' → logprob: -5.2161760330200195
    7. 'nd' → logprob: -5.5911760330200195
    8. 'given' → logprob: -5.7161760330200195
    9. ' ' → logprob: -5.9661760330200195
    10. '_' → logprob: -5.9661760330200195

Token 380: ' pile' (ID: 39732)
  Prédit: ' number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' number' → logprob: -1.3926740884780884
    2. 'number' → logprob: -2.017673969268799
    3. ' element' → logprob: -2.392673969268799
    4. 'x' → logprob: -2.517673969268799
    5. ' integer' → logprob: -2.517673969268799
    6. 'element' → logprob: -2.767673969268799
    7. ')' → logprob: -2.892673969268799
    8. ',' → logprob: -3.017673969268799
    9. '=' → logprob: -3.767673969268799
    10. ' x' → logprob: -3.892673969268799

Token 381: ' x' (ID: 1215)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8971496224403381
    2. ',' → logprob: -1.2721495628356934
    3. '   ' → logprob: -1.8971495628356934
    4. ':
' → logprob: -2.5221495628356934
    5. '):' → logprob: -3.7721495628356934
    6. ')' → logprob: -3.8971495628356934
    7. '):
' → logprob: -4.397149562835693
    8. ',
' → logprob: -4.647149562835693
    9. '=' → logprob: -5.522149562835693
    10. '.' → logprob: -6.147149562835693

Token 382: ':
' (ID: 734)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.773054301738739
    2. ',' → logprob: -0.898054301738739
    3. ':' → logprob: -2.273054361343384
    4. ':
' → logprob: -4.398054122924805
    5. '):' → logprob: -5.773054122924805
    6. '):
' → logprob: -5.898054122924805
    7. ')' → logprob: -6.023054122924805
    8. ',
' → logprob: -6.273054122924805
    9. '.' → logprob: -6.523054122924805
    10. '),' → logprob: -7.148054122924805

Token 383: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006558229215443134
    2. ' moves' → logprob: -6.506558418273926
    3. 'moves' → logprob: -6.881558418273926
    4. '    
' → logprob: -7.256558418273926
    5. 'm' → logprob: -7.381558418273926
    6. ' next' → logprob: -7.506558418273926
    7. ' s' → logprob: -7.756558418273926
    8. ' nxt' → logprob: -8.006558418273926
    9. ' res' → logprob: -8.256558418273926
    10. 's' → logprob: -8.631558418273926

Token 384: ' #' (ID: 1069)
  Prédit: 'moves'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'moves' → logprob: -0.3269422948360443
    2. '   ' → logprob: -2.076942205429077
    3. 'res' → logprob: -3.701942205429077
    4. 'next' → logprob: -3.826942205429077
    5. 'mex' → logprob: -3.951942205429077
    6. 'm' → logprob: -4.076942443847656
    7. ' moves' → logprob: -4.326942443847656
    8. 'vals' → logprob: -4.576942443847656
    9. 'move' → logprob: -4.826942443847656
    10. 'mx' → logprob: -5.076942443847656

Token 385: ' The' (ID: 623)
  Prédit: 'moves'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'moves' → logprob: -0.8148537278175354
    2. 'next' → logprob: -1.8148536682128906
    3. 'vals' → logprob: -2.1898536682128906
    4. 'res' → logprob: -2.6898536682128906
    5. 'mex' → logprob: -3.1898536682128906
    6. '#' → logprob: -3.8148536682128906
    7. 'sub' → logprob: -4.189853668212891
    8. '   ' → logprob: -4.314853668212891
    9. 's' → logprob: -4.564853668212891
    10. 'move' → logprob: -4.689853668212891

Token 386: ' next' (ID: 2613)
  Prédit: 'moves'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'moves' → logprob: -0.07921472191810608
    2. 'next' → logprob: -4.079214572906494
    3. 'mex' → logprob: -4.079214572906494
    4. ' moves' → logprob: -4.079214572906494
    5. 'res' → logprob: -5.079214572906494
    6. '#' → logprob: -5.454214572906494
    7. 'move' → logprob: -5.704214572906494
    8. 'if' → logprob: -5.829214572906494
    9. ' next' → logprob: -6.579214572906494
    10. 'mx' → logprob: -6.954214572906494

Token 387: ' state' (ID: 2608)
  Prédit: '_moves'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_moves' → logprob: -0.03361942246556282
    2. '_' → logprob: -4.158619403839111
    3. '_tokens' → logprob: -4.783619403839111
    4. '_move' → logprob: -5.533619403839111
    5. '_token' → logprob: -5.658619403839111
    6. '_x' → logprob: -7.783619403839111
    7. 'moves' → logprob: -8.28361988067627
    8. '_states' → logprob: -8.40861988067627
    9. '_line' → logprob: -8.90861988067627
    10. '_val' → logprob: -9.28361988067627

Token 388: ' is' (ID: 382)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.18737418949604034
    2. '=' → logprob: -2.5623741149902344
    3. ' =' → logprob: -2.5623741149902344
    4. ' is' → logprob: -5.562374114990234
    5. '_' → logprob: -5.937374114990234
    6. ' s' → logprob: -6.187374114990234
    7. ',' → logprob: -6.312374114990234
    8. '_states' → logprob: -6.687374114990234
    9. '_moves' → logprob: -6.687374114990234
    10. ')' → logprob: -7.187374114990234

Token 389: ' to' (ID: 316)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.49074026942253113
    2. '[]' → logprob: -1.6157402992248535
    3. '[]
' → logprob: -1.8657402992248535
    4. 'grund' → logprob: -4.1157402992248535
    5. ' set' → logprob: -4.2407402992248535
    6. 'split' → logprob: -7.2407402992248535
    7. ' []' → logprob: -7.6157402992248535
    8. ' []
' → logprob: -7.6157402992248535
    9. ' grund' → logprob: -7.7407402992248535
    10. 'x' → logprob: -7.9907402992248535

Token 390: ' take' (ID: 2304)
  Prédit: 'grund'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'grund' → logprob: -0.7745010256767273
    2. '[]' → logprob: -1.774501085281372
    3. ' grund' → logprob: -1.774501085281372
    4. '[]
' → logprob: -2.274501085281372
    5. 'split' → logprob: -2.899501085281372
    6. ' split' → logprob: -4.399500846862793
    7. ' []' → logprob: -5.524500846862793
    8. 'x' → logprob: -5.524500846862793
    9. ' get' → logprob: -5.524500846862793
    10. ' []
' → logprob: -5.774500846862793

Token 391: ' the' (ID: 290)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.21263304352760315
    2. 'split' → logprob: -2.9626331329345703
    3. 'seg' → logprob: -3.8376331329345703
    4. 'segments' → logprob: -4.08763313293457
    5. 'L' → logprob: -4.21263313293457
    6. 'se' → logprob: -4.83763313293457
    7. '[' → logprob: -4.96263313293457
    8. ' x' → logprob: -5.08763313293457
    9. 'from' → logprob: -5.08763313293457
    10. 'any' → logprob: -5.08763313293457

Token 392: ' split' (ID: 12648)
  Prédit: 'xor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'xor' → logprob: -1.5298333168029785
    2. 'x' → logprob: -1.9048333168029785
    3. 'seg' → logprob: -2.2798333168029785
    4. 'grund' → logprob: -2.7798333168029785
    5. 'split' → logprob: -2.9048333168029785
    6. 'run' → logprob: -2.9048333168029785
    7. 'pile' → logprob: -2.9048333168029785
    8. 'i' → logprob: -3.6548333168029785
    9. 'val' → logprob: -3.6548333168029785
    10. 'L' → logprob: -3.7798333168029785

Token 393: ' piles' (ID: 90498)
  Prédit: '_into'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_into' → logprob: -0.10358431190252304
    2. '_' → logprob: -2.4785842895507812
    3. ')' → logprob: -5.228584289550781
    4. '   ' → logprob: -5.478584289550781
    5. '_of' → logprob: -7.103584289550781
    6. 's' → logprob: -7.228584289550781
    7. '_in' → logprob: -7.353584289550781
    8. ' into' → logprob: -7.353584289550781
    9. 'into' → logprob: -7.853584289550781
    10. '+' → logprob: -8.728584289550781

Token 394: ' L' (ID: 451)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8539829254150391
    2. ',' → logprob: -0.8539829254150391
    3. '_' → logprob: -3.103982925415039
    4. '   ' → logprob: -3.603982925415039
    5. '[' → logprob: -4.228982925415039
    6. '+' → logprob: -4.353982925415039
    7. ' +' → logprob: -4.353982925415039
    8. ' ,' → logprob: -5.353982925415039
    9. 'from' → logprob: -5.603982925415039
    10. ',
' → logprob: -5.853982925415039

Token 395: ' after' (ID: 1934)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6683966517448425
    2. ')' → logprob: -1.9183967113494873
    3. ',' → logprob: -1.9183967113494873
    4. ' +' → logprob: -2.0433967113494873
    5. '+' → logprob: -3.9183967113494873
    6. '[' → logprob: -5.043396472930908
    7. '
' → logprob: -5.168396472930908
    8. ':' → logprob: -5.293396472930908
    9. ' and' → logprob: -5.543396472930908
    10. '.' → logprob: -5.793396472930908

Token 396: ' step' (ID: 5983)
  Prédit: 'grund'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'grund' → logprob: -1.3282617330551147
    2. 'split' → logprob: -1.7032617330551147
    3. 'step' → logprob: -1.7032617330551147
    4. 'xor' → logprob: -1.9532617330551147
    5. 'spl' → logprob: -2.3282618522644043
    6. 'x' → logprob: -2.8282618522644043
    7. 'app' → logprob: -4.203261852264404
    8. 'calcul' → logprob: -4.703261852264404
    9. 'the' → logprob: -4.828261852264404
    10. 'rem' → logprob: -5.078261852264404

Token 397: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0010349531657993793
    2. '3' → logprob: -7.626034736633301
    3. '_' → logprob: -8.1260347366333
    4. '2' → logprob: -8.8760347366333
    5. ')' → logprob: -10.7510347366333
    6. ' ' → logprob: -10.8760347366333
    7. ',' → logprob: -11.0010347366333
    8. '   ' → logprob: -11.0010347366333
    9. '#' → logprob: -11.8760347366333
    10. '_into' → logprob: -12.2510347366333

Token 398: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001017551330733113
    2. '3' → logprob: -9.500102043151855
    3. ' ' → logprob: -11.625102043151855
    4. '2' → logprob: -12.125102043151855
    5. '   ' → logprob: -12.375102043151855
    6. '_' → logprob: -13.500102043151855
    7. ',' → logprob: -13.750102043151855
    8. '#' → logprob: -13.750102043151855
    9. ')' → logprob: -13.875102043151855
    10. 'x' → logprob: -14.000102043151855

Token 399: ',
' (ID: 412)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.609733521938324
    2. ',' → logprob: -0.859733521938324
    3. ' and' → logprob: -4.109733581542969
    4. ')' → logprob: -5.109733581542969
    5. '<|end|>' → logprob: -5.984733581542969
    6. ',
' → logprob: -6.109733581542969
    7. '.' → logprob: -6.734733581542969
    8. ' ,' → logprob: -6.734733581542969
    9. '
' → logprob: -7.859733581542969
    10. ' ' → logprob: -7.859733581542969

Token 400: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.40645986795425415
    2. '#' → logprob: -1.9064598083496094
    3. ' and' → logprob: -2.6564598083496094
    4. ' then' → logprob: -2.7814598083496094
    5. '    ' → logprob: -4.156459808349609
    6. ' #' → logprob: -4.406459808349609
    7. ')' → logprob: -4.656459808349609
    8. ' ' → logprob: -5.031459808349609
    9. ',' → logprob: -6.156459808349609
    10. 'and' → logprob: -7.031459808349609

Token 401: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.161688208580017
    2. '#' (adapté à ' #') → logprob: -1.286688208580017
    3. ' and' → logprob: -1.661688208580017
    4. ' then' → logprob: -1.911688208580017
    5. 'and' → logprob: -3.2866883277893066
    6. ' #' → logprob: -4.036688327789307
    7. '    ' → logprob: -5.161688327789307
    8. ',' → logprob: -5.536688327789307
    9. ' ' → logprob: -6.411688327789307
    10. ')' → logprob: -6.786688327789307

Token 402: ' and' (ID: 326)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5827433466911316
    2. '#' → logprob: -1.8327434062957764
    3. 'next' → logprob: -2.9577434062957764
    4. 'moves' → logprob: -3.0827434062957764
    5. 'res' → logprob: -3.3327434062957764
    6. 'mex' → logprob: -3.7077434062957764
    7. 'grund' → logprob: -4.207743167877197
    8. ' res' → logprob: -4.207743167877197
    9. 'and' → logprob: -4.332743167877197
    10. ' #' → logprob: -4.832743167877197

Token 403: ' then' (ID: 1815)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4824328124523163
    2. '#' → logprob: -1.6074328422546387
    3. '
' → logprob: -2.6074328422546387
    4. '   ' → logprob: -3.4824328422546387
    5. ' for' → logprob: -4.107432842254639
    6. 'xor' → logprob: -4.107432842254639
    7. ' then' → logprob: -4.982432842254639
    8. 'then' → logprob: -4.982432842254639
    9. 'compute' → logprob: -5.107432842254639
    10. 'calculate' → logprob: -5.232432842254639

Token 404: ' subtract' (ID: 71973)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.9283038973808289
    2. '#' → logprob: -1.4283039569854736
    3. 'xor' → logprob: -1.8033039569854736
    4. '   ' → logprob: -2.0533039569854736
    5. 'mex' → logprob: -3.6783039569854736
    6. '
' → logprob: -4.4283037185668945
    7. 'res' → logprob: -5.0533037185668945
    8. 'moves' → logprob: -5.8033037185668945
    9. 'm' → logprob: -5.9283037185668945
    10. 'calculate' → logprob: -6.0533037185668945

Token 405: ' from' (ID: 591)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.7456901669502258
    2. ' ' → logprob: -0.8706901669502258
    3. ' one' → logprob: -2.620690107345581
    4. 'one' → logprob: -4.87069034576416
    5. ' any' → logprob: -5.37069034576416
    6. 'from' → logprob: -5.87069034576416
    7. ' s' → logprob: -6.12069034576416
    8. 'val' → logprob: -6.12069034576416
    9. ' val' → logprob: -6.12069034576416
    10. 'any' → logprob: -6.62069034576416

Token 406: ' one' (ID: 1001)
  Prédit: 'each'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'each' → logprob: -0.2204010933637619
    2. 'one' → logprob: -2.2204010486602783
    3. 'any' → logprob: -3.4704010486602783
    4. '1' → logprob: -3.8454010486602783
    5. 'x' → logprob: -4.595401287078857
    6. ' each' → logprob: -4.720401287078857
    7. 'the' → logprob: -5.595401287078857
    8. ' one' → logprob: -5.970401287078857
    9. 'L' → logprob: -6.220401287078857
    10. 'all' → logprob: -6.470401287078857

Token 407: ' pile' (ID: 39732)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6485618352890015
    2. ' of' → logprob: -1.3985618352890015
    3. ')' → logprob: -2.273561954498291
    4. 'of' → logprob: -3.273561954498291
    5. ' _' → logprob: -3.773561954498291
    6. ' ' → logprob: -4.398561954498291
    7. ' <<' → logprob: -5.273561954498291
    8. '[' → logprob: -5.523561954498291
    9. '   ' → logprob: -5.648561954498291
    10. '1' → logprob: -5.648561954498291

Token 408: ' by' (ID: 656)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5315136313438416
    2. '[' → logprob: -2.4065136909484863
    3. ' _' → logprob: -2.5315136909484863
    4. ' ' → logprob: -2.6565136909484863
    5. ')' → logprob: -3.4065136909484863
    6. '   ' → logprob: -3.5315136909484863
    7. ',' → logprob: -3.6565136909484863
    8. ' x' → logprob: -4.656513690948486
    9. ' ^' → logprob: -4.656513690948486
    10. 'x' → logprob: -4.781513690948486

Token 409: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03112032823264599
    2. ' ' → logprob: -3.7811203002929688
    3. 'one' → logprob: -5.781120300292969
    4. ' one' → logprob: -6.281120300292969
    5. 'any' → logprob: -7.406120300292969
    6. '
' → logprob: -8.031120300292969
    7. 'val' → logprob: -8.281120300292969
    8. 'some' → logprob: -8.531120300292969
    9. 'a' → logprob: -8.656120300292969
    10. 's' → logprob: -9.031120300292969

Token 410: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.14860986173152924
    2. 'one' → logprob: -2.7736098766326904
    3. 'any' → logprob: -3.6486098766326904
    4. 'val' → logprob: -4.648609638214111
    5. 'some' → logprob: -4.898609638214111
    6. 'taking' → logprob: -5.023609638214111
    7. 'spl' → logprob: -5.648609638214111
    8. 'rem' → logprob: -5.773609638214111
    9. 'k' → logprob: -5.773609638214111
    10. 'a' → logprob: -6.398609638214111

Token 411: '<=' (ID: 16672)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09861958771944046
    2. '
' → logprob: -2.5986196994781494
    3. '    
' → logprob: -4.47361946105957
    4. ',' → logprob: -5.84861946105957
    5. ')' → logprob: -6.84861946105957
    6. ')
' → logprob: -7.22361946105957
    7. ',
' → logprob: -7.59861946105957
    8. '.' → logprob: -7.72361946105957
    9. '   
' → logprob: -7.97361946105957
    10. 's' → logprob: -8.47361946105957

Token 412: 'x' (ID: 87)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -1.2914363145828247
    2. 'val' → logprob: -1.5414363145828247
    3. 'i' → logprob: -1.6664363145828247
    4. ' val' → logprob: -2.166436195373535
    5. 'length' → logprob: -2.791436195373535
    6. '1' → logprob: -3.041436195373535
    7. ' length' → logprob: -3.541436195373535
    8. ' k' → logprob: -4.041436195373535
    9. ' i' → logprob: -4.166436195373535
    10. 'seg' → logprob: -4.791436195373535

Token 413: '<=' (ID: 16672)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9435296058654785
    2. '_' → logprob: -1.0685296058654785
    3. ')' → logprob: -2.1935296058654785
    4. '+' → logprob: -3.4435296058654785
    5. ',' → logprob: -3.9435296058654785
    6. '<|end|>' → logprob: -3.9435296058654785
    7. '}' → logprob: -4.4435296058654785
    8. '>' → logprob: -4.5685296058654785
    9. ' ,' → logprob: -4.6935296058654785
    10. '=' → logprob: -4.8185296058654785

Token 414: 'a' (ID: 64)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.505699872970581
    2. 'length' → logprob: -1.630699872970581
    3. 'L' → logprob: -2.505699872970581
    4. 'seg' → logprob: -3.130699872970581
    5. 'se' → logprob: -3.505699872970581
    6. 'res' → logprob: -3.755699872970581
    7. 'len' → logprob: -4.50570011138916
    8. '(' → logprob: -6.25570011138916
    9. 'max' → logprob: -6.50570011138916
    10. '(val' → logprob: -6.75570011138916

Token 415: ' possible' (ID: 4149)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2747056782245636
    2. '   ' → logprob: -1.7747056484222412
    3. ')
' → logprob: -4.02470588684082
    4. ')' → logprob: -4.27470588684082
    5. ' ' → logprob: -4.64970588684082
    6. '    
' → logprob: -4.89970588684082
    7. '  
' → logprob: -5.64970588684082
    8. ' 
' → logprob: -5.77470588684082
    9. ',' → logprob: -6.14970588684082
    10. 's' → logprob: -6.39970588684082

Token 416: ' move' (ID: 5275)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.3287618160247803
    2. '1' → logprob: -1.7037618160247803
    3. ')' → logprob: -2.3287618160247803
    4. ' val' → logprob: -2.7037618160247803
    5. '_val' → logprob: -2.9537618160247803
    6. 'val' → logprob: -3.5787618160247803
    7. '_' → logprob: -3.5787618160247803
    8. ' )' → logprob: -3.7037618160247803
    9. ' space' → logprob: -3.8287618160247803
    10. '
' → logprob: -3.8287618160247803

Token 417: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08470902591943741
    2. '
' → logprob: -2.7097089290618896
    3. '    
' → logprob: -4.459709167480469
    4. ',' → logprob: -7.709709167480469
    5. ',
' → logprob: -7.834709167480469
    6. ')
' → logprob: -7.834709167480469
    7. 's' → logprob: -8.084709167480469
    8. '  
' → logprob: -8.459709167480469
    9. '   
' → logprob: -9.084709167480469
    10. 'import' → logprob: -9.209709167480469

Token 418: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6674807667732239
    2. ':' → logprob: -1.667480707168579
    3. '
' → logprob: -2.667480707168579
    4. ' 
' → logprob: -2.792480707168579
    5. ' ' → logprob: -3.042480707168579
    6. ')' → logprob: -3.542480707168579
    7. '[' → logprob: -4.417480945587158
    8. ',' → logprob: -4.542480945587158
    9. '    
' → logprob: -4.542480945587158
    10. '  
' → logprob: -4.542480945587158

Token 419: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0372084379196167
    2. '    
' → logprob: -4.162208557128906
    3. '
' → logprob: -5.037208557128906
    4. ' moves' → logprob: -6.037208557128906
    5. 'moves' → logprob: -6.287208557128906
    6. ' 
' → logprob: -6.537208557128906
    7. ' memo' → logprob: -6.662208557128906
    8. ')' → logprob: -7.162208557128906
    9. '  
' → logprob: -7.412208557128906
    10. '   
' → logprob: -7.537208557128906

Token 420: ' So' (ID: 2632)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1326083391904831
    2. '    
' → logprob: -3.882608413696289
    3. ' memo' → logprob: -4.257608413696289
    4. ' 
' → logprob: -4.382608413696289
    5. ' moves' → logprob: -4.382608413696289
    6. '
' → logprob: -4.507608413696289
    7. ' next' → logprob: -4.507608413696289
    8. '  
' → logprob: -4.882608413696289
    9. '   
' → logprob: -5.382608413696289
    10. 'moves' → logprob: -5.382608413696289

Token 421: ' we' (ID: 581)
  Prédit: 'moves'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'moves' → logprob: -0.8164315223693848
    2. '   ' → logprob: -1.1914315223693848
    3. 'mex' → logprob: -2.6914315223693848
    4. ' moves' → logprob: -3.0664315223693848
    5. 'next' → logprob: -3.5664315223693848
    6. 'res' → logprob: -4.066431522369385
    7. ' res' → logprob: -4.191431522369385
    8. ' next' → logprob: -4.441431522369385
    9. 'm' → logprob: -4.691431522369385
    10. 'nim' → logprob: -4.816431522369385

Token 422: ' consider' (ID: 3331)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.04299554228782654
    2. '   ' → logprob: -4.792995452880859
    3. 'continue' → logprob: -4.917995452880859
    4. ' return' → logprob: -4.917995452880859
    5. ' =' → logprob: -5.542995452880859
    6. ' need' → logprob: -5.667995452880859
    7. ':' → logprob: -5.917995452880859
    8. ' have' → logprob: -6.042995452880859
    9. ' ' → logprob: -6.292995452880859
    10. ' :' → logprob: -7.167995452880859

Token 423: ' all' (ID: 722)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.6586833596229553
    2. 'moves' → logprob: -1.2836833000183105
    3. '   ' → logprob: -1.9086833000183105
    4. 'mex' → logprob: -3.4086833000183105
    5. 'grund' → logprob: -5.2836833000183105
    6. ' next' → logprob: -5.7836833000183105
    7. 'move' → logprob: -5.7836833000183105
    8. 'nim' → logprob: -5.9086833000183105
    9. 'm' → logprob: -6.2836833000183105
    10. 'res' → logprob: -6.2836833000183105

Token 424: ' moves' (ID: 19523)
  Prédit: ' val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' val' → logprob: -1.2119661569595337
    2. ' i' → logprob: -1.9619661569595337
    3. 'a' → logprob: -2.211966037750244
    4. '_' → logprob: -2.336966037750244
    5. ' _' → logprob: -2.961966037750244
    6. ' a' → logprob: -3.086966037750244
    7. ' x' → logprob: -3.211966037750244
    8. 'i' → logprob: -3.211966037750244
    9. 'val' → logprob: -3.461966037750244
    10. '   ' → logprob: -3.461966037750244

Token 425: ':' (ID: 25)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.1260766983032227
    2. ':' → logprob: -1.6260766983032227
    3. '   ' → logprob: -2.1260766983032227
    4. ',' → logprob: -2.3760766983032227
    5. '<|end|>' → logprob: -2.3760766983032227
    6. ')' → logprob: -2.5010766983032227
    7. '<|end|>' → logprob: -4.751076698303223
    8. '_' → logprob: -4.876076698303223
    9. ' for' → logprob: -4.876076698303223
    10. ' ,' → logprob: -4.876076698303223

Token 426: ' For' (ID: 2214)
  Prédit: ' res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' res' → logprob: -1.674934983253479
    2. ' next' → logprob: -1.674934983253479
    3. ' grund' → logprob: -2.2999348640441895
    4. ' moves' → logprob: -2.9249348640441895
    5. ' result' → logprob: -3.0499348640441895
    6. ' n' → logprob: -3.4249348640441895
    7. ' new' → logprob: -3.4249348640441895
    8. ' for' → logprob: -3.4249348640441895
    9. 'n' → logprob: -3.5499348640441895
    10. 'res' → logprob: -3.6749348640441895

Token 427: ' each' (ID: 2454)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.33625084161758423
    2. 'i' → logprob: -1.9612507820129395
    3. 'pile' → logprob: -2.9612507820129395
    4. ' a' → logprob: -3.7112507820129395
    5. ' pile' → logprob: -4.0862507820129395
    6. 'val' → logprob: -4.3362507820129395
    7. ' i' → logprob: -4.3362507820129395
    8. 'seg' → logprob: -4.9612507820129395
    9. ' seg' → logprob: -5.2112507820129395
    10. 'each' → logprob: -5.8362507820129395

Token 428: ' segment' (ID: 14806)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.8477727770805359
    2. 'pile' → logprob: -1.0977728366851807
    3. 'a' → logprob: -1.8477728366851807
    4. 'seg' → logprob: -3.7227728366851807
    5. ' pile' → logprob: -4.472772598266602
    6. 'idx' → logprob: -4.472772598266602
    7. 'p' → logprob: -4.722772598266602
    8. ' i' → logprob: -4.722772598266602
    9. 'val' → logprob: -4.972772598266602
    10. 'segment' → logprob: -5.847772598266602

Token 429: ' v' (ID: 323)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.07162125408649445
    2. ':' → logprob: -3.4466211795806885
    3. ',' → logprob: -3.9466211795806885
    4. ' _' → logprob: -4.821621417999268
    5. ' in' → logprob: -6.071621417999268
    6. '[' → logprob: -6.071621417999268
    7. ' ,' → logprob: -6.946621417999268
    8. ''' → logprob: -7.321621417999268
    9. 's' → logprob: -7.321621417999268
    10. ')' → logprob: -7.696621417999268

Token 430: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.5290404558181763
    2. ':' → logprob: -1.2790404558181763
    3. ',' → logprob: -2.7790403366088867
    4. 'in' → logprob: -2.9040403366088867
    5. ':
' → logprob: -4.654040336608887
    6. '=' → logprob: -6.279040336608887
    7. ')' → logprob: -7.029040336608887
    8. 's' → logprob: -7.529040336608887
    9. '):
' → logprob: -7.904040336608887
    10. '):' → logprob: -7.904040336608887

Token 431: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.8586547374725342
    2. 'res' → logprob: -0.8586547374725342
    3. 'range' → logprob: -2.483654737472534
    4. 'grund' → logprob: -3.233654737472534
    5. ' L' → logprob: -4.483654975891113
    6. 'se' → logprob: -4.983654975891113
    7. ' range' → logprob: -5.733654975891113
    8. ' res' → logprob: -6.858654975891113
    9. 'seg' → logprob: -6.983654975891113
    10. 'split' → logprob: -6.983654975891113

Token 432: ',
' (ID: 412)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10116340219974518
    2. ',' → logprob: -2.726163387298584
    3. ':
' → logprob: -3.601163387298584
    4. '   ' → logprob: -6.101163387298584
    5. ',
' → logprob: -7.601163387298584
    6. '):' → logprob: -8.476163864135742
    7. 's' → logprob: -9.101163864135742
    8. '[' → logprob: -9.476163864135742
    9. ' :' → logprob: -9.976163864135742
    10. ')' → logprob: -10.226163864135742

Token 433: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.587170422077179
    2. '       ' → logprob: -1.5871703624725342
    3. ' ' → logprob: -2.462170362472534
    4. ' for' → logprob: -2.462170362472534
    5. '<|end|>' → logprob: -3.462170362472534
    6. '    ' → logprob: -3.587170362472534
    7. ',' → logprob: -6.212170600891113
    8. ' ,' → logprob: -6.712170600891113
    9. ')' → logprob: -6.712170600891113
    10. ' and' → logprob: -7.087170600891113

Token 434: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22774916887283325
    2. ' for' → logprob: -1.7277491092681885
    3. '   ' → logprob: -3.7277491092681885
    4. 'for' → logprob: -7.352749347686768
    5. ',' → logprob: -7.977749347686768
    6. '	' → logprob: -8.97774887084961
    7. ' and' → logprob: -9.10274887084961
    8. '    ' → logprob: -9.22774887084961
    9. '	for' → logprob: -9.22774887084961
    10. '	   ' → logprob: -9.22774887084961

Token 435: ' from' (ID: 591)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.29782262444496155
    2. ' ' → logprob: -1.7978225946426392
    3. '   ' → logprob: -2.7978227138519287
    4. ' 
' → logprob: -4.79782247543335
    5. '<|end|>' → logprob: -5.29782247543335
    6. 'for' → logprob: -5.54782247543335
    7. ' ' → logprob: -5.79782247543335
    8. '    ' → logprob: -5.79782247543335
    9. '
' → logprob: -7.17282247543335
    10. ')' → logprob: -7.42282247543335

Token 436: ' v' (ID: 323)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.011936742812395096
    2. 'v' → logprob: -4.886936664581299
    3. '0' → logprob: -5.511936664581299
    4. ' ' → logprob: -9.011937141418457
    5. 'range' → logprob: -9.261937141418457
    6. 'val' → logprob: -10.261937141418457
    7. ' v' → logprob: -12.511937141418457
    8. '
' → logprob: -12.636937141418457
    9. '   ' → logprob: -12.761937141418457
    10. 'value' → logprob: -12.761937141418457

Token 437: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.20707830786705017
    2. '+' → logprob: -2.957078218460083
    3. ' -' → logprob: -3.207078218460083
    4. ' in' → logprob: -3.707078218460083
    5. ')' → logprob: -4.582078456878662
    6. ' for' → logprob: -4.582078456878662
    7. '):' → logprob: -4.707078456878662
    8. '-' → logprob: -4.832078456878662
    9. ' :' → logprob: -5.207078456878662
    10. ':
' → logprob: -5.207078456878662

Token 438: ' remove' (ID: 6234)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3870004117488861
    2. ' for' → logprob: -1.1370004415512085
    3. '   ' → logprob: -10.51200008392334
    4. 'length' → logprob: -11.01200008392334
    5. 'v' → logprob: -11.51200008392334
    6. 'val' → logprob: -11.76200008392334
    7. ' ' → logprob: -12.01200008392334
    8. 'new' → logprob: -12.01200008392334
    9. ' new' → logprob: -12.26200008392334
    10. 'to' → logprob: -12.26200008392334

Token 439: ' y' (ID: 342)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3009645938873291
    2. 'k' → logprob: -1.925964593887329
    3. 'x' → logprob: -3.800964593887329
    4. 'i' → logprob: -4.55096435546875
    5. ' ' → logprob: -4.55096435546875
    6. 'length' → logprob: -4.80096435546875
    7. 'm' → logprob: -4.92596435546875
    8. 'y' → logprob: -4.92596435546875
    9. 'one' → logprob: -5.05096435546875
    10. 'any' → logprob: -5.30096435546875

Token 440: ' (' (ID: 350)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0018114368431270123
    2. 'in' → logprob: -7.001811504364014
    3. ' =' → logprob: -8.001811027526855
    4. '=' → logprob: -8.501811027526855
    5. ' range' → logprob: -9.126811027526855
    6. 'range' → logprob: -9.626811027526855
    7. ' ranging' → logprob: -9.626811027526855
    8. ' ' → logprob: -10.376811027526855
    9. ' for' → logprob: -10.751811027526855
    10. '
' → logprob: -11.501811027526855

Token 441: '1' (ID: 16)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10318948328495026
    2. '=' → logprob: -3.353189468383789
    3. ' )' → logprob: -3.728189468383789
    4. ' ' → logprob: -3.978189468383789
    5. ' >' → logprob: -5.478189468383789
    6. '>' → logprob: -5.978189468383789
    7. ' <=' → logprob: -6.478189468383789
    8. ' for' → logprob: -6.728189468383789
    9. 'y' → logprob: -6.728189468383789
    10. '
' → logprob: -6.728189468383789

Token 442: '<=' (ID: 16672)
  Prédit: '<='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.44549211859703064
    2. ' <=' → logprob: -1.820492148399353
    3. '<<' → logprob: -2.0704920291900635
    4. ')' → logprob: -3.5704920291900635
    5. '
' → logprob: -3.6954920291900635
    6. ' <<' → logprob: -4.820492267608643
    7. ',' → logprob: -6.195492267608643
    8. '):
' → logprob: -6.195492267608643
    9. '=' → logprob: -6.320492267608643
    10. '≤' → logprob: -6.945492267608643

Token 443: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.006955957971513271
    2. ' y' → logprob: -5.006956100463867
    3. 'v' → logprob: -8.381956100463867
    4. '1' → logprob: -12.881956100463867
    5. 'x' → logprob: -12.881956100463867
    6. 'yv' → logprob: -13.381956100463867
    7. '<=' → logprob: -13.756956100463867
    8. ' v' → logprob: -14.131956100463867
    9. '	y' → logprob: -14.131956100463867
    10. ' ' → logprob: -14.631956100463867

Token 444: '<=' (ID: 16672)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8202341198921204
    2. '<=' → logprob: -1.3202340602874756
    3. ' <=' → logprob: -1.6952340602874756
    4. 'y' → logprob: -3.1952340602874756
    5. '=' → logprob: -3.6952340602874756
    6. ' <' → logprob: -5.070234298706055
    7. ' y' → logprob: -5.070234298706055
    8. '<' → logprob: -5.195234298706055
    9. ' )' → logprob: -5.820234298706055
    10. '+' → logprob: -5.945234298706055

Token 445: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.007656557951122522
    2. 'val' → logprob: -4.882656574249268
    3. ' v' → logprob: -10.38265609741211
    4. 'seg' → logprob: -11.13265609741211
    5. ' val' → logprob: -13.13265609741211
    6. 'res' → logprob: -14.13265609741211
    7. 'va' → logprob: -14.63265609741211
    8. '(v' → logprob: -15.25765609741211
    9. 'segment' → logprob: -15.38265609741211
    10. 'value' → logprob: -15.88265609741211

Token 446: '),' (ID: 936)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.48385193943977356
    2. ')' → logprob: -1.4838519096374512
    3. '):' → logprob: -2.108851909637451
    4. '),' → logprob: -3.483851909637451
    5. ':' → logprob: -7.483851909637451
    6. '   ' → logprob: -7.608851909637451
    7. '):
' → logprob: -7.733851909637451
    8. '):

' → logprob: -7.733851909637451
    9. ',' → logprob: -7.858851909637451
    10. ':
' → logprob: -7.858851909637451

Token 447: ' then' (ID: 1815)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6486609578132629
    2. '           ' → logprob: -2.398660898208618
    3. ' and' → logprob: -2.398660898208618
    4. '
' → logprob: -2.648660898208618
    5. ' for' → logprob: -2.773660898208618
    6. ' 
' → logprob: -4.148661136627197
    7. '    ' → logprob: -4.523661136627197
    8. ',' → logprob: -4.523661136627197
    9. ' with' → logprob: -4.523661136627197
    10. '       ' → logprob: -4.648661136627197

Token 448: ' compute' (ID: 23864)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.9451056718826294
    2. ' new' → logprob: -1.8201056718826294
    3. '   ' → logprob: -2.57010555267334
    4. 'new' → logprob: -2.82010555267334
    5. 'for' → logprob: -2.94510555267334
    6. ' compute' → logprob: -3.19510555267334
    7. '           ' → logprob: -3.44510555267334
    8. 'grund' → logprob: -3.44510555267334
    9. ' calculate' → logprob: -4.07010555267334
    10. ' next' → logprob: -4.32010555267334

Token 449: ' XOR' (ID: 147209)
  Prédit: 'grund'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'grund' → logprob: -0.028796439990401268
    2. ' grund' → logprob: -3.903796434402466
    3. '   ' → logprob: -5.903796672821045
    4. 'new' → logprob: -6.278796672821045
    5. '(' → logprob: -7.528796672821045
    6. ' ' → logprob: -7.903796672821045
    7. 'the' → logprob: -8.153796195983887
    8. ' new' → logprob: -8.278796195983887
    9. 'xor' → logprob: -8.778796195983887
    10. ' the' → logprob: -9.028796195983887

Token 450: ' of' (ID: 328)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.2557952404022217
    2. ' _' → logprob: -2.3807952404022217
    3. '   ' → logprob: -2.8807952404022217
    4. ' ' → logprob: -4.255795478820801
    5. ' of' → logprob: -4.255795478820801
    6. '[' → logprob: -5.255795478820801
    7. ')' → logprob: -5.380795478820801
    8. '{' → logprob: -5.505795478820801
    9. 'of' → logprob: -5.630795478820801
    10. '  ' → logprob: -5.880795478820801

Token 451: ' grund' (ID: 34475)
  Prédit: 'grund'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grund' → logprob: -0.575776994228363
    2. '[v' → logprob: -2.075777053833008
    3. '[' → logprob: -2.450777053833008
    4. ' grund' → logprob: -3.075777053833008
    5. ' [' → logprob: -3.950777053833008
    6. '[(' → logprob: -3.950777053833008
    7. '[x' → logprob: -4.075777053833008
    8. '[p' → logprob: -4.575777053833008
    9. '[val' → logprob: -4.575777053833008
    10. '(v' → logprob: -4.825777053833008

Token 452: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.11603868752717972
    2. '(' → logprob: -2.7410387992858887
    3. '(y' → logprob: -3.8660387992858887
    4. '_' → logprob: -4.616038799285889
    5. '(
' → logprob: -4.866038799285889
    6. '(v' → logprob: -5.866038799285889
    7. ')' → logprob: -6.741038799285889
    8. ' (' → logprob: -7.741038799285889
    9. '((' → logprob: -7.991038799285889
    10. '(x' → logprob: -8.24103832244873

Token 453: ' of' (ID: 328)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7641178965568542
    2. '[' → logprob: -1.264117956161499
    3. '(' → logprob: -1.514117956161499
    4. 's' → logprob: -3.889117956161499
    5. ''' → logprob: -6.26411771774292
    6. '[
' → logprob: -6.26411771774292
    7. ' (' → logprob: -6.51411771774292
    8. '(x' → logprob: -7.01411771774292
    9. '(s' → logprob: -7.13911771774292
    10. 'v' → logprob: -7.13911771774292

Token 454: ' all' (ID: 722)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -1.5463539361953735
    2. 'seg' → logprob: -1.9213539361953735
    3. 'segments' → logprob: -2.421353816986084
    4. 'L' → logprob: -2.421353816986084
    5. '[' → logprob: -3.171353816986084
    6. '[p' → logprob: -3.421353816986084
    7. '[v' → logprob: -3.421353816986084
    8. 'other' → logprob: -3.421353816986084
    9. '[val' → logprob: -3.421353816986084
    10. 'the' → logprob: -3.546353816986084

Token 455: ' piles' (ID: 90498)
  Prédit: ' segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' segments' → logprob: -0.8946976065635681
    2. 'segments' → logprob: -1.394697666168213
    3. ' piles' → logprob: -1.769697666168213
    4. ' elements' → logprob: -2.644697666168213
    5. ' seg' → logprob: -4.144697666168213
    6. 'elements' → logprob: -4.394697666168213
    7. '_' → logprob: -4.769697666168213
    8. 'seg' → logprob: -5.019697666168213
    9. 'vals' → logprob: -5.269697666168213
    10. ' other' → logprob: -5.269697666168213

Token 456: ' but' (ID: 889)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.3205859661102295
    2. '   ' → logprob: -1.4455859661102295
    3. ' _' → logprob: -1.8205859661102295
    4. ')' → logprob: -2.6955859661102295
    5. ' =' → logprob: -3.1955859661102295
    6. '=' → logprob: -3.5705859661102295
    7. ',' → logprob: -3.5705859661102295
    8. ' +' → logprob: -3.6955859661102295
    9. 's' → logprob: -4.320586204528809
    10. '[' → logprob: -4.445586204528809

Token 457: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.5035545229911804
    2. ' v' → logprob: -1.0035545825958252
    3. '	v' → logprob: -4.378554344177246
    4. '[v' → logprob: -4.878554344177246
    5. 'the' → logprob: -5.378554344177246
    6. ' the' → logprob: -6.628554344177246
    7. ' one' → logprob: -8.003554344177246
    8. 'that' → logprob: -8.253554344177246
    9. '(v' → logprob: -8.378554344177246
    10. '   ' → logprob: -8.503554344177246

Token 458: ' plus' (ID: 2932)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.47736626863479614
    2. ')' → logprob: -2.2273662090301514
    3. ',' → logprob: -2.9773662090301514
    4. ' +' → logprob: -3.1023662090301514
    5. ' and' → logprob: -3.6023662090301514
    6. 's' → logprob: -3.7273662090301514
    7. '+' → logprob: -3.8523662090301514
    8. '_' → logprob: -4.2273664474487305
    9. '[' → logprob: -4.4773664474487305
    10. 'v' → logprob: -5.1023664474487305

Token 459: ' grund' (ID: 34475)
  Prédit: 'grund'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grund' → logprob: -0.03397461026906967
    2. ' grund' → logprob: -3.4089746475219727
    3. '(' → logprob: -8.783974647521973
    4. 'y' → logprob: -10.658974647521973
    5. '   ' → logprob: -10.658974647521973
    6. 'grond' → logprob: -11.408974647521973
    7. ' (' → logprob: -11.533974647521973
    8. ' ' → logprob: -11.783974647521973
    9. ' ' → logprob: -11.783974647521973
    10. '(v' → logprob: -11.908974647521973

Token 460: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -3.47626737493556e-05
    2. '[y' → logprob: -11.87503433227539
    3. '   ' → logprob: -12.12503433227539
    4. 'x' → logprob: -12.25003433227539
    5. '^' → logprob: -12.25003433227539
    6. 'v' → logprob: -12.62503433227539
    7. '
' → logprob: -13.25003433227539
    8. '(y' → logprob: -13.75003433227539
    9. ' y' → logprob: -14.37503433227539
    10. '       ' → logprob: -14.62503433227539

Token 461: '(v' (ID: 6932)
  Prédit: '_of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_of' → logprob: -1.3752855062484741
    2. ' of' → logprob: -1.7502855062484741
    3. 'of' → logprob: -1.8752855062484741
    4. '[v' → logprob: -2.0002856254577637
    5. '(v' → logprob: -2.6252856254577637
    6. '[' → logprob: -2.8752856254577637
    7. '_' → logprob: -3.2502856254577637
    8. '[(' → logprob: -3.7502856254577637
    9. 's' → logprob: -3.8752856254577637
    10. '[val' → logprob: -3.8752856254577637

Token 462: '-y' (ID: 18102)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.48216041922569275
    2. '-' → logprob: -0.9821604490280151
    3. '-y' → logprob: -5.107160568237305
    4. '   ' → logprob: -7.357160568237305
    5. ')' → logprob: -7.482160568237305
    6. '-x' → logprob: -7.982160568237305
    7. 'y' → logprob: -9.982160568237305
    8. '  ' → logprob: -10.107160568237305
    9. '-v' → logprob: -10.232160568237305
    10. '+' → logprob: -10.232160568237305

Token 463: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005933186039328575
    2. ')
' → logprob: -5.3809332847595215
    3. ')`' → logprob: -7.8809332847595215
    4. ')`
' → logprob: -8.255932807922363
    5. '[' → logprob: -8.380932807922363
    6. '   ' → logprob: -9.005932807922363
    7. '),' → logprob: -9.755932807922363
    8. ')')
' → logprob: -10.630932807922363
    9. '))' → logprob: -10.755932807922363
    10. ']' → logprob: -10.755932807922363

Token 464: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.043803904205560684
    2. ':' → logprob: -3.5438039302825928
    3. ',' → logprob: -5.043803691864014
    4. ')' → logprob: -6.293803691864014
    5. '
' → logprob: -6.543803691864014
    6. '.' → logprob: -6.918803691864014
    7. '    
' → logprob: -7.543803691864014
    8. ':
' → logprob: -8.293804168701172
    9. '       ' → logprob: -8.293804168701172
    10. '	' → logprob: -8.418804168701172

Token 465: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0966239795088768
    2. ':' → logprob: -2.8466238975524902
    3. ',' → logprob: -4.09662389755249
    4. ' ' → logprob: -5.34662389755249
    5. '.' → logprob: -5.59662389755249
    6. ')' → logprob: -6.72162389755249
    7. '    
' → logprob: -6.97162389755249
    8. '\t' → logprob: -6.97162389755249
    9. '
' → logprob: -7.34662389755249
    10. '	' → logprob: -7.34662389755249

Token 466: ' However' (ID: 5551)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10675358772277832
    2. '
' → logprob: -2.4817535877227783
    3. '\n' → logprob: -4.731753349304199
    4. '    
' → logprob: -5.606753349304199
    5. '\' → logprob: -6.231753349304199
    6. ' memo' → logprob: -7.356753349304199
    7. '  
' → logprob: -8.2317533493042
    8. ' 
' → logprob: -8.2317533493042
    9. ',' → logprob: -8.4817533493042
    10. ' for' → logprob: -8.6067533493042

Token 467: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6575084924697876
    2. ',' → logprob: -0.9075084924697876
    3. ' for' → logprob: -3.282508373260498
    4. ')' → logprob: -4.782508373260498
    5. ' we' → logprob: -4.782508373260498
    6. ':' → logprob: -4.907508373260498
    7. '    ' → logprob: -6.157508373260498
    8. ' ,' → logprob: -6.407508373260498
    9. '    
' → logprob: -6.532508373260498
    10. '
' → logprob: -6.657508373260498

Token 468: ' this' (ID: 495)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.9486115574836731
    2. ' for' → logprob: -1.4486114978790283
    3. ' #' → logprob: -1.9486114978790283
    4. '   ' → logprob: -2.8236114978790283
    5. ' x' → logprob: -3.3236114978790283
    6. ' if' → logprob: -4.073611736297607
    7. ' res' → logprob: -4.448611736297607
    8. ' seg' → logprob: -4.573611736297607
    9. 'for' → logprob: -4.698611736297607
    10. ' ' → logprob: -4.698611736297607

Token 469: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.19202129542827606
    2. ' continues' → logprob: -2.817021369934082
    3. ' seems' → logprob: -3.317021369934082
    4. ' def' → logprob: -4.317021369934082
    5. 'def' → logprob: -4.692021369934082
    6. ':' → logprob: -5.067021369934082
    7. ' means' → logprob: -5.317021369934082
    8. ' code' → logprob: -5.442021369934082
    9. ' can' → logprob: -5.567021369934082
    10. '#' → logprob: -5.567021369934082

Token 470: ' heavy' (ID: 12914)
  Prédit: ' incomplete'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' incomplete' → logprob: -1.0085039138793945
    2. '   ' → logprob: -1.8835039138793945
    3. 'not' → logprob: -2.1335039138793945
    4. ' complicated' → logprob: -2.3835039138793945
    5. ' quite' → logprob: -2.6335039138793945
    6. ' not' → logprob: -3.1335039138793945
    7. ' tricky' → logprob: -3.2585039138793945
    8. 'in' → logprob: -3.7585039138793945
    9. ' very' → logprob: -4.6335039138793945
    10. 'comp' → logprob: -4.8835039138793945

Token 471: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2821718752384186
    2. ',' → logprob: -2.4071719646453857
    3. '
' → logprob: -2.9071719646453857
    4. '<|end|>' → logprob: -3.2821719646453857
    5. '.' → logprob: -3.5321719646453857
    6. ')' → logprob: -4.657171726226807
    7. '<|end|>' → logprob: -4.907171726226807
    8. ',
' → logprob: -5.407171726226807
    9. '...' → logprob: -5.532171726226807
    10. '    
' → logprob: -6.032171726226807

Token 472: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03844995051622391
    2. '<|end|>' → logprob: -3.788450002670288
    3. ')' → logprob: -5.163449764251709
    4. ',' → logprob: -5.913449764251709
    5. '#' → logprob: -6.163449764251709
    6. '[' → logprob: -7.163449764251709
    7. '
' → logprob: -7.788449764251709
    8. '...' → logprob: -8.038450241088867
    9. '<|end|>' → logprob: -8.038450241088867
    10. ' 
' → logprob: -8.038450241088867

Token 473: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07573221623897552
    2. ' #' → logprob: -3.7007322311401367
    3. '#' (adapté à ' #') → logprob: -3.9507322311401367
    4. ' memo' → logprob: -4.575732231140137
    5. ' x' → logprob: -6.200732231140137
    6. ' mem' → logprob: -6.575732231140137
    7. '    ' → logprob: -6.825732231140137
    8. ' from' → logprob: -6.825732231140137
    9. ' res' → logprob: -6.950732231140137
    10. ' moves' → logprob: -7.075732231140137

Token 474: ' But' (ID: 3072)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6865513324737549
    2. '#' → logprob: -1.5615513324737549
    3. 'moves' → logprob: -2.936551332473755
    4. ' #' → logprob: -3.311551332473755
    5. 'mex' → logprob: -3.561551332473755
    6. 'n' → logprob: -3.686551332473755
    7. ' moves' → logprob: -3.936551332473755
    8. 'memo' → logprob: -3.936551332473755
    9. 'm' → logprob: -4.186551094055176
    10. 'from' → logprob: -4.311551094055176

Token 475: ' we' (ID: 581)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -1.5663533210754395
    2. ' memo' → logprob: -1.6913533210754395
    3. ' #' → logprob: -2.1913533210754395
    4. '   ' → logprob: -2.4413533210754395
    5. ' x' → logprob: -2.6913533210754395
    6. 'memo' → logprob: -2.9413533210754395
    7. ' we' → logprob: -3.1913533210754395
    8. ' the' → logprob: -3.4413533210754395
    9. ' res' → logprob: -3.4413533210754395
    10. ' n' → logprob: -4.0663533210754395

Token 476: ' can' (ID: 665)
  Prédit: ' can'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.5076342821121216
    2. ' have' → logprob: -2.257634162902832
    3. ''ll' → logprob: -2.632634162902832
    4. ' continue' → logprob: -2.882634162902832
    5. ' know' → logprob: -3.507634162902832
    6. 'can' → logprob: -3.507634162902832
    7. ''' → logprob: -4.632634162902832
    8. 'continue' → logprob: -4.632634162902832
    9. ' return' → logprob: -4.757634162902832
    10. '#' → logprob: -5.132634162902832

Token 477: ' use' (ID: 1199)
  Prédit: 'use'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'use' → logprob: -0.718129575252533
    2. 'return' → logprob: -1.4681296348571777
    3. 'observe' → logprob: -2.9681296348571777
    4. 'try' → logprob: -3.0931296348571777
    5. 'continue' → logprob: -3.3431296348571777
    6. 'see' → logprob: -3.4681296348571777
    7. ' use' → logprob: -3.5931296348571777
    8. 'reuse' → logprob: -4.468129634857178
    9. 'do' → logprob: -4.593129634857178
    10. 'expl' → logprob: -4.843129634857178

Token 478: ' observation' (ID: 37276)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.17724047601222992
    2. 'memo' → logprob: -2.4272403717041016
    3. 'len' → logprob: -3.1772403717041016
    4. 'xor' → logprob: -4.927240371704102
    5. 'x' → logprob: -5.177240371704102
    6. 'linear' → logprob: -5.302240371704102
    7. ' the' → logprob: -5.927240371704102
    8. 'l' → logprob: -6.302240371704102
    9. ' memo' → logprob: -6.427240371704102
    10. 'split' → logprob: -6.927240371704102

Token 479: ':
' (ID: 734)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8175364136695862
    2. '_' → logprob: -1.6925363540649414
    3. '[' → logprob: -2.1925363540649414
    4. ' ' → logprob: -2.5675363540649414
    5. ':' → logprob: -2.9425363540649414
    6. ',' → logprob: -3.4425363540649414
    7. ' =' → logprob: -3.8175363540649414
    8. '<|end|>' → logprob: -3.8175363540649414
    9. '<|end|>' → logprob: -4.942536354064941
    10. '=' → logprob: -4.942536354064941

Token 480: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.30086877942085266
    2. '   ' → logprob: -1.9258687496185303
    3. '<|end|>' → logprob: -3.1758687496185303
    4. ')' → logprob: -4.175868988037109
    5. '    ' → logprob: -4.300868988037109
    6. ' 
' → logprob: -4.675868988037109
    7. '#' → logprob: -4.675868988037109
    8. ' x' → logprob: -4.675868988037109
    9. ' #' → logprob: -5.925868988037109
    10. ' )' → logprob: -6.050868988037109

Token 481: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18246549367904663
    2. ' 
' → logprob: -3.4324655532836914
    3. ' memo' → logprob: -3.5574655532836914
    4. '#' (adapté à ' #') → logprob: -3.8074655532836914
    5. ' x' → logprob: -4.182465553283691
    6. ' ' → logprob: -4.182465553283691
    7. ' #' → logprob: -4.807465553283691
    8. ' res' → logprob: -5.432465553283691
    9. 'x' → logprob: -5.432465553283691
    10. '    
' → logprob: -5.557465553283691

Token 482: ' The' (ID: 623)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.3326473236083984
    2. ' memo' → logprob: -1.9576473236083984
    3. 'm' → logprob: -2.3326473236083984
    4. ' ' → logprob: -2.7076473236083984
    5. ')' → logprob: -2.7076473236083984
    6. ' x' → logprob: -2.8326473236083984
    7. 'memo' → logprob: -3.3326473236083984
    8. 'x' → logprob: -3.4576473236083984
    9. ' m' → logprob: -3.4576473236083984
    10. ' res' → logprob: -3.9576473236083984

Token 483: ' rules' (ID: 9607)
  Prédit: ' next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' next' → logprob: -1.1265792846679688
    2. 'def' → logprob: -1.6265792846679688
    3. ' ' → logprob: -2.2515792846679688
    4. '#' → logprob: -2.7515792846679688
    5. ' memo' → logprob: -2.8765792846679688
    6. ' segments' → logprob: -3.8765792846679688
    7. ' code' → logprob: -4.001579284667969
    8. ' #' → logprob: -4.126579284667969
    9. 'x' → logprob: -4.376579284667969
    10. 'memo' → logprob: -4.376579284667969

Token 484: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 485: ' after' (ID: 1934)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.850629985332489
    2. '<|end|>' → logprob: -1.2256300449371338
    3. ')' → logprob: -2.100630044937134
    4. '   ' → logprob: -2.350630044937134
    5. '    ' → logprob: -3.975630044937134
    6. ' 
' → logprob: -4.975629806518555
    7. ' )' → logprob: -4.975629806518555
    8. '#' → logprob: -5.475629806518555
    9. '<|end|>' → logprob: -5.475629806518555
    10. '       ' → logprob: -5.725629806518555

Token 486: ' step' (ID: 5983)
  Prédit: 'step'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'step' → logprob: -0.9511229395866394
    2. 'split' → logprob: -1.4511229991912842
    3. 'spl' → logprob: -1.8261229991912842
    4. 'the' → logprob: -3.076122999191284
    5. ' splitting' → logprob: -3.701122999191284
    6. 'x' → logprob: -3.826122999191284
    7. 'all' → logprob: -3.826122999191284
    8. 'some' → logprob: -4.326122760772705
    9. ' step' → logprob: -4.576122760772705
    10. '#' → logprob: -4.701122760772705

Token 487: '1' (ID: 16)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.2135377675294876
    2. '1' → logprob: -2.7135376930236816
    3. ':' → logprob: -3.2135376930236816
    4. '=' → logprob: -3.3385376930236816
    5. '   ' → logprob: -3.4635376930236816
    6. ' _' → logprob: -5.213537693023682
    7. ' =' → logprob: -5.463537693023682
    8. '_:' → logprob: -6.463537693023682
    9. ')' → logprob: -6.588537693023682
    10. ' ' → logprob: -6.963537693023682

Token 488: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.28749120235443115
    2. ',' → logprob: -1.5374912023544312
    3. ':
' → logprob: -4.537491321563721
    4. '   ' → logprob: -5.412491321563721
    5. ' and' → logprob: -5.537491321563721
    6. ' are' → logprob: -5.787491321563721
    7. ' ,' → logprob: -6.037491321563721
    8. ')' → logprob: -6.412491321563721
    9. '):' → logprob: -6.537491321563721
    10. '#' → logprob: -6.912491321563721

Token 489: ' from' (ID: 591)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8728647828102112
    2. '   ' → logprob: -1.1228647232055664
    3. ' are' → logprob: -2.1228647232055664
    4. ' #' → logprob: -3.3728647232055664
    5. ' and' → logprob: -3.6228647232055664
    6. ' the' → logprob: -3.8728647232055664
    7. 'are' → logprob: -4.497864723205566
    8. ' for' → logprob: -4.997864723205566
    9. ' we' → logprob: -5.247864723205566
    10. '...' → logprob: -5.372864723205566

Token 490: ' x' (ID: 1215)
  Prédit: 'each'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'each' → logprob: -0.8368043303489685
    2. 'a' → logprob: -2.2118043899536133
    3. 'the' → logprob: -2.4618043899536133
    4. 'x' → logprob: -2.4618043899536133
    5. 'v' → logprob: -2.5868043899536133
    6. 'any' → logprob: -2.7118043899536133
    7. 'seg' → logprob: -3.0868043899536133
    8. ' each' → logprob: -3.8368043899536133
    9. 'here' → logprob: -4.211804389953613
    10. 'segment' → logprob: -4.336804389953613

Token 491: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9429070949554443
    2. ':' → logprob: -1.1929070949554443
    3. ')' → logprob: -2.1929070949554443
    4. '),' → logprob: -3.4429070949554443
    5. ''s' → logprob: -3.4429070949554443
    6. '):' → logprob: -3.8179070949554443
    7. '=' → logprob: -4.192907333374023
    8. '#' → logprob: -4.442907333374023
    9. ' ,' → logprob: -4.567907333374023
    10. ' =' → logprob: -4.817907333374023

Token 492: ' we' (ID: 581)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.9733250737190247
    2. ' the' → logprob: -1.8483250141143799
    3. ' we' → logprob: -2.22332501411438
    4. ' can' → logprob: -2.97332501411438
    5. 'the' → logprob: -2.97332501411438
    6. 'we' → logprob: -3.34832501411438
    7. ' x' → logprob: -3.47332501411438
    8. ' #' → logprob: -3.97332501411438
    9. 'x' → logprob: -4.098325252532959
    10. ' are' → logprob: -4.223325252532959

Token 493: ' move' (ID: 5275)
  Prédit: ' can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.41050174832344055
    2. 'can' → logprob: -1.6605017185211182
    3. ' continue' → logprob: -3.785501718521118
    4. ' split' → logprob: -4.035501956939697
    5. 'continue' → logprob: -4.160501956939697
    6. ' have' → logprob: -4.410501956939697
    7. 'split' → logprob: -4.535501956939697
    8. 'have' → logprob: -5.160501956939697
    9. ' use' → logprob: -5.285501956939697
    10. 'xor' → logprob: -5.410501956939697

Token 494: ' to' (ID: 316)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.1405843496322632
    2. ' =' → logprob: -1.1405843496322632
    3. '_' → logprob: -1.6405843496322632
    4. ' to' → logprob: -3.2655844688415527
    5. ' by' → logprob: -3.6405844688415527
    6. ')' → logprob: -3.7655844688415527
    7. '=' → logprob: -3.8905844688415527
    8. ' x' → logprob: -4.765584468841553
    9. ' _' → logprob: -4.765584468841553
    10. ' ,' → logprob: -4.890584468841553

Token 495: ' the' (ID: 290)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.40627795457839966
    2. ' x' → logprob: -2.656277894973755
    3. 'segments' → logprob: -2.781277894973755
    4. ')' → logprob: -3.031277894973755
    5. ' segments' → logprob: -3.406277894973755
    6. '0' → logprob: -4.156278133392334
    7. 'v' → logprob: -4.406278133392334
    8. '[' → logprob: -4.656278133392334
    9. 'seg' → logprob: -4.906278133392334
    10. 'm' → logprob: -5.031278133392334

Token 496: ' XOR' (ID: 147209)
  Prédit: 'xor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'xor' → logprob: -0.7753687500953674
    2. 'grund' → logprob: -1.5253686904907227
    3. 'x' → logprob: -2.2753686904907227
    4. 'next' → logprob: -2.7753686904907227
    5. 'split' → logprob: -3.4003686904907227
    6. 'segments' → logprob: -3.5253686904907227
    7. 'state' → logprob: -4.275368690490723
    8. 'X' → logprob: -4.650368690490723
    9. 'spl' → logprob: -5.150368690490723
    10. 'segment' → logprob: -5.275368690490723

Token 497: ' over' (ID: 1072)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.1682881861925125
    2. ' _' → logprob: -2.418288230895996
    3. ' of' → logprob: -3.293288230895996
    4. ' ' → logprob: -4.418288230895996
    5. 's' → logprob: -5.668288230895996
    6. 'of' → logprob: -6.043288230895996
    7. '<|end|>' → logprob: -6.168288230895996
    8. ''' → logprob: -6.293288230895996
    9. ')' → logprob: -6.793288230895996
    10. '(' → logprob: -7.043288230895996

Token 498: ' the' (ID: 290)
  Prédit: 'se'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'se' → logprob: -0.8244686722755432
    2. 'res' → logprob: -1.5744686126708984
    3. 'segments' → logprob: -1.9494686126708984
    4. 'L' → logprob: -2.4494686126708984
    5. 'seg' → logprob: -3.3244686126708984
    6. ' segments' → logprob: -3.4494686126708984
    7. ' L' → logprob: -4.199468612670898
    8. ' seg' → logprob: -4.324468612670898
    9. 'x' → logprob: -4.949468612670898
    10. ' res' → logprob: -5.074468612670898

Token 499: ' Grund' (ID: 22449)
  Prédit: 'segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'segments' → logprob: -0.675473690032959
    2. 'split' → logprob: -1.925473690032959
    3. 'seg' → logprob: -2.550473690032959
    4. 'se' → logprob: -2.550473690032959
    5. '[' → logprob: -3.425473690032959
    6. 'L' → logprob: -3.675473690032959
    7. 'grund' → logprob: -3.925473690032959
    8. 'spl' → logprob: -4.050473690032959
    9. 'v' → logprob: -4.175473690032959
    10. ' segments' → logprob: -4.800473690032959

Token 500: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0015370006440207362
    2. ')' → logprob: -7.876536846160889
    3. '}' → logprob: -7.876536846160889
    4. 'ny' → logprob: -8.126537322998047
    5. 'ies' → logprob: -8.751537322998047
    6. 'x' → logprob: -9.376537322998047
    7. ']' → logprob: -9.876537322998047
    8. 's' → logprob: -10.501537322998047
    9. 'ney' → logprob: -10.876537322998047
    10. 'n' → logprob: -11.501537322998047

Token 501: ' of' (ID: 328)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.342160701751709
    2. '_' → logprob: -1.467160701751709
    3. '{' → logprob: -2.717160701751709
    4. '(' → logprob: -2.842160701751709
    5. ')' → logprob: -2.967160701751709
    6. 'values' → logprob: -2.967160701751709
    7. '_values' → logprob: -3.217160701751709
    8. '(
' → logprob: -3.217160701751709
    9. ' values' → logprob: -3.342160701751709
    10. '[' → logprob: -3.467160701751709

Token 502: ' each' (ID: 2454)
  Prédit: 'each'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'each' → logprob: -1.020007610321045
    2. 'segments' → logprob: -1.020007610321045
    3. 'se' → logprob: -2.145007610321045
    4. 'all' → logprob: -2.395007610321045
    5. 'seg' → logprob: -3.770007610321045
    6. 'the' → logprob: -3.895007610321045
    7. ' segments' → logprob: -5.145007610321045
    8. 'split' → logprob: -6.020007610321045
    9. 'L' → logprob: -6.145007610321045
    10. 'val' → logprob: -6.145007610321045

Token 503: ' run' (ID: 2461)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.8140561580657959
    2. ' segment' → logprob: -1.814056158065796
    3. 'seg' → logprob: -2.189056158065796
    4. '_' → logprob: -2.439056158065796
    5. ')' → logprob: -2.939056158065796
    6. 'val' → logprob: -3.939056158065796
    7. ' seg' → logprob: -3.939056158065796
    8. '(' → logprob: -4.064056396484375
    9. 'se' → logprob: -4.439056396484375
    10. '(seg' → logprob: -4.689056396484375

Token 504: ' of' (ID: 328)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7706030011177063
    2. ')' → logprob: -1.1456029415130615
    3. 's' → logprob: -2.3956029415130615
    4. '   ' → logprob: -2.7706029415130615
    5. '_of' → logprob: -4.145603179931641
    6. ')_' → logprob: -4.770603179931641
    7. '[' → logprob: -5.020603179931641
    8. '}' → logprob: -5.145603179931641
    9. ')
' → logprob: -5.395603179931641
    10. ',' → logprob: -5.895603179931641

Token 505: ' ' (ID: 220)
  Prédit: 'ones'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ones' → logprob: -0.4468293786048889
    2. '1' → logprob: -1.0718293190002441
    3. 'con' → logprob: -5.321829319000244
    4. '2' → logprob: -5.321829319000244
    5. 'one' → logprob: -5.571829319000244
    6. ' ones' → logprob: -6.196829319000244
    7. 'two' → logprob: -7.321829319000244
    8. '```' → logprob: -7.821829319000244
    9. ' ' → logprob: -8.571829795837402
    10. '`' → logprob: -8.571829795837402

Token 506: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1977214217185974
    2. 'ones' → logprob: -1.8227214813232422
    3. 'con' → logprob: -4.947721481323242
    4. 'one' → logprob: -5.572721481323242
    5. '2' → logprob: -5.697721481323242
    6. ' ones' → logprob: -7.072721481323242
    7. 'two' → logprob: -7.322721481323242
    8. '```' → logprob: -7.447721481323242
    9. '`' → logprob: -8.447721481323242
    10. 'bits' → logprob: -8.447721481323242

Token 507: ' bits' (ID: 18189)
  Prédit: ''s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''s' → logprob: -0.2560965418815613
    2. 's' → logprob: -1.506096601486206
    3. ''' → logprob: -5.881096363067627
    4. '')' → logprob: -8.131096839904785
    5. ' s' → logprob: -8.256096839904785
    6. ')' → logprob: -8.881096839904785
    7. ''-' → logprob: -9.256096839904785
    8. '_s' → logprob: -9.506096839904785
    9. '_bits' → logprob: -9.756096839904785
    10. '`s' → logprob: -9.756096839904785

Token 508: '.
' (ID: 558)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 509: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14667543768882751
    2. ')' → logprob: -2.3966753482818604
    3. '}' → logprob: -4.6466755867004395
    4. ',' → logprob: -5.2716755867004395
    5. '<|end|>' → logprob: -5.5216755867004395
    6. ':' → logprob: -5.6466755867004395
    7. '_' → logprob: -5.6466755867004395
    8. '[' → logprob: -5.8966755867004395
    9. '
' → logprob: -6.0216755867004395
    10. '    
' → logprob: -6.1466755867004395

Token 510: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.036354802548885345
    2. ')' → logprob: -4.286355018615723
    3. ' 
' → logprob: -5.036355018615723
    4. ' ' → logprob: -5.786355018615723
    5. ',' → logprob: -6.036355018615723
    6. '#' (adapté à ' #') → logprob: -6.411355018615723
    7. '    
' → logprob: -6.536355018615723
    8. '\n' → logprob: -6.786355018615723
    9. '
' → logprob: -7.036355018615723
    10. '  
' → logprob: -7.536355018615723

Token 511: ' Since' (ID: 12265)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4463738799095154
    2. '
' → logprob: -2.69637393951416
    3. ' memo' → logprob: -2.82137393951416
    4. 'memo' → logprob: -3.07137393951416
    5. '#' → logprob: -3.69637393951416
    6. 'm' → logprob: -3.94637393951416
    7. 'x' → logprob: -4.07137393951416
    8. ' res' → logprob: -4.32137393951416
    9. 'res' → logprob: -4.69637393951416
    10. ' ' → logprob: -4.69637393951416

Token 512: ' the' (ID: 290)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.4409388303756714
    2. ' x' → logprob: -1.5659388303756714
    3. ' each' → logprob: -1.9409388303756714
    4. 'each' → logprob: -1.9409388303756714
    5. ' res' → logprob: -3.190938949584961
    6. ' all' → logprob: -3.815938949584961
    7. ' the' → logprob: -3.940938949584961
    8. 'digits' → logprob: -3.940938949584961
    9. ' ' → logprob: -4.190938949584961
    10. 'res' → logprob: -4.190938949584961

Token 513: ' operation' (ID: 9506)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.1895887702703476
    2. 'x' → logprob: -3.564588785171509
    3. '#' → logprob: -3.939588785171509
    4. ' ' → logprob: -4.43958854675293
    5. 'res' → logprob: -4.56458854675293
    6. 'v' → logprob: -4.81458854675293
    7. ')' → logprob: -4.93958854675293
    8. 'segments' → logprob: -4.93958854675293
    9. '_' → logprob: -5.06458854675293
    10. '[' → logprob: -5.06458854675293

Token 514: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.9217033982276917
    2. '_' → logprob: -1.2967033386230469
    3. 's' → logprob: -2.546703338623047
    4. ')' → logprob: -2.671703338623047
    5. ' ' → logprob: -3.421703338623047
    6. '=' → logprob: -3.921703338623047
    7. ' continues' → logprob: -3.921703338623047
    8. '<|end|>' → logprob: -3.921703338623047
    9. '<|end|>' → logprob: -4.296703338623047
    10. '}' → logprob: -4.921703338623047

Token 515: ' linear' (ID: 23876)
  Prédit: 'xor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'xor' → logprob: -0.13349765539169312
    2. 'defined' → logprob: -2.633497714996338
    3. ' xor' → logprob: -4.383497714996338
    4. 'split' → logprob: -4.508497714996338
    5. '   ' → logprob: -5.133497714996338
    6. 'mex' → logprob: -5.883497714996338
    7. 'exclusive' → logprob: -6.383497714996338
    8. 'add' → logprob: -6.383497714996338
    9. 'nim' → logprob: -6.508497714996338
    10. ' defined' → logprob: -6.633497714996338

Token 516: ' and' (ID: 326)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6206355690956116
    2. '<|end|>' → logprob: -1.9956355094909668
    3. ')' → logprob: -2.120635509490967
    4. '_' → logprob: -2.495635509490967
    5. ':' → logprob: -2.870635509490967
    6. ' ' → logprob: -4.370635509490967
    7. '   ' → logprob: -4.370635509490967
    8. '.' → logprob: -4.995635509490967
    9. '<|end|>' → logprob: -5.120635509490967
    10. ' ,' → logprob: -5.245635509490967

Token 517: ' the' (ID: 290)
  Prédit: ' additive'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' additive' → logprob: -1.2708897590637207
    2. 'memo' → logprob: -1.8958897590637207
    3. 'add' → logprob: -2.0208897590637207
    4. ' memo' → logprob: -2.2708897590637207
    5. 'each' → logprob: -2.6458897590637207
    6. 'xor' → logprob: -2.7708897590637207
    7. 'the' → logprob: -3.0208897590637207
    8. 'segments' → logprob: -3.7708897590637207
    9. 'seg' → logprob: -4.145889759063721
    10. ' segments' → logprob: -4.145889759063721

Token 518: ' splitting' (ID: 87130)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.545201301574707
    2. ' next' → logprob: -2.170201301574707
    3. ' def' → logprob: -2.670201301574707
    4. ' segments' → logprob: -2.795201301574707
    5. ' code' → logprob: -2.795201301574707
    6. ' problem' → logprob: -3.045201301574707
    7. ' memo' → logprob: -3.045201301574707
    8. ')' → logprob: -3.420201301574707
    9. ' grund' → logprob: -3.920201301574707
    10. ' result' → logprob: -4.045201301574707

Token 519: ' is' (ID: 382)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8226802349090576
    2. ' of' → logprob: -1.4476802349090576
    3. '_' → logprob: -1.9476802349090576
    4. ' is' → logprob: -2.5726802349090576
    5. ' continues' → logprob: -3.5726802349090576
    6. '   ' → logprob: -3.9476802349090576
    7. 'of' → logprob: -4.822680473327637
    8. ' occurs' → logprob: -4.947680473327637
    9. ',' → logprob: -5.197680473327637
    10. ':' → logprob: -5.322680473327637

Token 520: ' forcing' (ID: 55991)
  Prédit: 'unique'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'unique' → logprob: -1.720871090888977
    2. 'done' → logprob: -2.0958709716796875
    3. 'stable' → logprob: -2.5958709716796875
    4. ' invariant' → logprob: -2.7208709716796875
    5. ' guaranteed' → logprob: -2.9708709716796875
    6. ' preserved' → logprob: -3.0958709716796875
    7. 'consistent' → logprob: -3.0958709716796875
    8. 'det' → logprob: -3.2208709716796875
    9. ' deterministic' → logprob: -3.2208709716796875
    10. ' done' → logprob: -3.3458709716796875

Token 521: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.19001077115535736
    2. ' us' → logprob: -2.4400107860565186
    3. 'the' → logprob: -3.4400107860565186
    4. ' on' → logprob: -4.0650105476379395
    5. ' to' → logprob: -4.5650105476379395
    6. ' them' → logprob: -5.5650105476379395
    7. ' of' → logprob: -5.9400105476379395
    8. ' a' → logprob: -6.0650105476379395
    9. '<|end|>' → logprob: -6.4400105476379395
    10. ' that' → logprob: -6.5650105476379395

Token 522: ' state' (ID: 2608)
  Prédit: 'xor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'xor' → logprob: -0.9107546806335449
    2. 'X' → logprob: -1.660754680633545
    3. 'segments' → logprob: -2.160754680633545
    4. 'game' → logprob: -2.660754680633545
    5. 'grund' → logprob: -3.660754680633545
    6. 'code' → logprob: -3.785754680633545
    7. 'pile' → logprob: -4.160754680633545
    8. 'next' → logprob: -4.535754680633545
    9. 'nim' → logprob: -4.660754680633545
    10. 'def' → logprob: -4.660754680633545

Token 523: ' to' (ID: 316)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4788959324359894
    2. ' ' → logprob: -1.353895902633667
    3. ' _' → logprob: -3.478895902633667
    4. ')' → logprob: -3.978895902633667
    5. ' 
' → logprob: -4.103896141052246
    6. ' )' → logprob: -4.853896141052246
    7. ' of' → logprob: -4.978896141052246
    8. ' to' → logprob: -5.103896141052246
    9. ',' → logprob: -5.103896141052246
    10. ' ,' → logprob: -5.603896141052246

Token 524: ' be' (ID: 413)
  Prédit: 'be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'be' → logprob: -0.11368632316589355
    2. 'split' → logprob: -3.2386863231658936
    3. 'xor' → logprob: -4.238686561584473
    4. ' be' → logprob: -4.488686561584473
    5. 'always' → logprob: -5.113686561584473
    6. 'the' → logprob: -5.488686561584473
    7. 'grund' → logprob: -5.488686561584473
    8. 'remain' → logprob: -5.863686561584473
    9. 'have' → logprob: -6.113686561584473
    10. 'a' → logprob: -6.238686561584473

Token 525: ' the' (ID: 290)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.4352325201034546
    2. 'immutable' → logprob: -1.6852325201034546
    3. 'xor' → logprob: -1.6852325201034546
    4. 'split' → logprob: -2.185232639312744
    5. 'stable' → logprob: -3.310232639312744
    6. 'a' → logprob: -3.685232639312744
    7. '0' → logprob: -3.935232639312744
    8. '[' → logprob: -4.060232639312744
    9. 'seg' → logprob: -4.185232639312744
    10. 'consistent' → logprob: -4.310232639312744

Token 526: ' XOR' (ID: 147209)
  Prédit: 'xor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xor' → logprob: -0.1958131641149521
    2. 'X' → logprob: -2.0708131790161133
    3. 'same' → logprob: -3.5708131790161133
    4. 'nim' → logprob: -4.070813179016113
    5. 'x' → logprob: -6.070813179016113
    6. ' XOR' → logprob: -6.945813179016113
    7. 'grund' → logprob: -7.570813179016113
    8. ' xor' → logprob: -7.695813179016113
    9. 'split' → logprob: -7.945813179016113
    10. '0' → logprob: -8.320813179016113

Token 527: ' of' (ID: 328)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.2625828981399536
    2. ' _' → logprob: -2.012582778930664
    3. ' of' → logprob: -3.012582778930664
    4. ')' → logprob: -4.012582778930664
    5. ',' → logprob: -4.637582778930664
    6. ' )' → logprob: -5.512582778930664
    7. ' ' → logprob: -5.762582778930664
    8. ' ,' → logprob: -6.137582778930664
    9. 'of' → logprob: -6.387582778930664
    10. 's' → logprob: -6.887582778930664

Token 528: ' the' (ID: 290)
  Prédit: 'segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'segments' → logprob: -0.8436994552612305
    2. 'the' → logprob: -1.4686994552612305
    3. 'each' → logprob: -2.3436994552612305
    4. 'grund' → logprob: -2.3436994552612305
    5. 'components' → logprob: -3.0936994552612305
    6. 'segment' → logprob: -3.9686994552612305
    7. 'vals' → logprob: -4.2186994552612305
    8. ' segments' → logprob: -4.7186994552612305
    9. 'val' → logprob: -4.8436994552612305
    10. 'parts' → logprob: -4.9686994552612305

Token 529: ' segments' (ID: 33749)
  Prédit: 'grund'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'grund' → logprob: -0.38846147060394287
    2. 'segments' → logprob: -1.5134614706039429
    3. 'runs' → logprob: -4.138461589813232
    4. 'res' → logprob: -4.513461589813232
    5. 'segment' → logprob: -4.513461589813232
    6. 'components' → logprob: -4.513461589813232
    7. 'run' → logprob: -4.763461589813232
    8. 'values' → logprob: -5.013461589813232
    9. 'seg' → logprob: -5.138461589813232
    10. 'parts' → logprob: -5.388461589813232

Token 530: ''' (ID: 6)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.511607825756073
    2. ')' → logprob: -1.2616078853607178
    3. '   ' → logprob: -3.2616078853607178
    4. '.' → logprob: -3.7616078853607178
    5. ',' → logprob: -3.8866078853607178
    6. '[' → logprob: -4.511607646942139
    7. '}' → logprob: -4.886607646942139
    8. '_' → logprob: -5.636607646942139
    9. 'def' → logprob: -6.136607646942139
    10. '):' → logprob: -6.261607646942139

Token 531: ' grund' (ID: 34475)
  Prédit: ' grund'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' grund' → logprob: -0.24344757199287415
    2. 'grund' → logprob: -1.6184475421905518
    3. ')' → logprob: -5.243447780609131
    4. ' values' → logprob: -5.618447780609131
    5. ' Grund' → logprob: -5.868447780609131
    6. ' nim' → logprob: -7.618447780609131
    7. 'Gr' → logprob: -7.618447780609131
    8. 'values' → logprob: -7.930947780609131
    9. '\n' → logprob: -8.118447303771973
    10. '_' → logprob: -8.118447303771973

Token 532: 'ies' (ID: 566)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.014176673255860806
    2. 'ies' → logprob: -4.264176845550537
    3. ')' → logprob: -12.264176368713379
    4. '#' → logprob: -13.014176368713379
    5. '```' → logprob: -13.264176368713379
    6. 's' → logprob: -14.264176368713379
    7. 'ying' → logprob: -14.764176368713379
    8. '``' → logprob: -14.889176368713379
    9. 'ys' → logprob: -14.889176368713379
    10. '}' → logprob: -15.014176368713379

Token 533: '.
' (ID: 558)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8697081804275513
    2. ')' → logprob: -1.3697081804275513
    3. '   ' → logprob: -1.3697081804275513
    4. ',' → logprob: -3.8697080612182617
    5. '):' → logprob: -3.8697080612182617
    6. '}' → logprob: -4.369708061218262
    7. '.' → logprob: -4.994708061218262
    8. ':
' → logprob: -5.494708061218262
    9. '[' → logprob: -5.619708061218262
    10. '):
' → logprob: -7.369708061218262

Token 534: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3861611485481262
    2. ')' → logprob: -1.2611610889434814
    3. '[' → logprob: -4.2611613273620605
    4. ',' → logprob: -4.6361613273620605
    5. '    
' → logprob: -6.2611613273620605
    6. '.' → logprob: -6.6361613273620605
    7. '#' → logprob: -6.6361613273620605
    8. ')
' → logprob: -6.8861613273620605
    9. '}' → logprob: -6.8861613273620605
    10. ':' → logprob: -6.8861613273620605

Token 535: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -1.3634501695632935
    2. 'm' → logprob: -1.8634501695632935
    3. '   ' → logprob: -1.8634501695632935
    4. 'mex' → logprob: -2.613450050354004
    5. 'moves' → logprob: -2.613450050354004
    6. ')' → logprob: -3.488450050354004
    7. 'mask' → logprob: -3.488450050354004
    8. 'length' → logprob: -3.613450050354004
    9. 'res' → logprob: -3.738450050354004
    10. 'x' → logprob: -3.988450050354004

Token 536: ' This' (ID: 1328)
  Prédit: 'mex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mex' → logprob: -0.8565957546234131
    2. 'm' → logprob: -1.856595754623413
    3. 'moves' → logprob: -1.856595754623413
    4. '#' → logprob: -2.481595754623413
    5. 'res' → logprob: -3.981595754623413
    6. 'length' → logprob: -3.981595754623413
    7. 'if' → logprob: -4.106595993041992
    8. 'all' → logprob: -4.106595993041992
    9. 'move' → logprob: -4.606595993041992
    10. 'seg' → logprob: -4.606595993041992

Token 537: ' problem' (ID: 4792)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.25934636592865
    2. '=' → logprob: -1.38434636592865
    3. 'is' → logprob: -2.1343464851379395
    4. ' =' → logprob: -2.2593464851379395
    5. ' is' → logprob: -2.5093464851379395
    6. '#' → logprob: -3.1343464851379395
    7. 'means' → logprob: -4.0093464851379395
    8. ':' → logprob: -4.1343464851379395
    9. ')' → logprob: -4.3843464851379395
    10. 'res' → logprob: -5.0093464851379395

Token 538: ' reduces' (ID: 38566)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6344779133796692
    2. '=' → logprob: -1.8844778537750244
    3. '   ' → logprob: -2.2594778537750244
    4. ' =' → logprob: -2.5094778537750244
    5. 'def' → logprob: -3.0094778537750244
    6. '[' → logprob: -4.1344780921936035
    7. '#' → logprob: -4.2594780921936035
    8. ' is' → logprob: -4.2594780921936035
    9. ' continues' → logprob: -4.7594780921936035
    10. '.' → logprob: -5.3844780921936035

Token 539: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.3820315897464752
    2. 'to' → logprob: -1.2570315599441528
    3. '   ' → logprob: -3.5070316791534424
    4. '=' → logprob: -6.882031440734863
    5. '_to' → logprob: -7.257031440734863
    6. ')' → logprob: -8.007031440734863
    7. 'def' → logprob: -8.257031440734863
    8. ' =' → logprob: -8.382031440734863
    9. ':' → logprob: -9.132031440734863
    10. '(' → logprob: -9.257031440734863

Token 540: ' compute' (ID: 23864)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.680262565612793
    2. 'grund' → logprob: -1.430262565612793
    3. 'def' → logprob: -1.680262565612793
    4. 'lambda' → logprob: -4.055262565612793
    5. 'the' → logprob: -4.805262565612793
    6. '0' → logprob: -4.805262565612793
    7. '(' → logprob: -5.055262565612793
    8. 'len' → logprob: -5.055262565612793
    9. 'val' → logprob: -5.930262565612793
    10. 'pow' → logprob: -6.305262565612793

Token 541: ' the' (ID: 290)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.4204055070877075
    2. 'the' → logprob: -1.2954055070877075
    3. 'grund' → logprob: -3.545405387878418
    4. ' the' → logprob: -4.670405387878418
    5. 'xor' → logprob: -5.295405387878418
    6. '(' → logprob: -5.295405387878418
    7. '0' → logprob: -6.170405387878418
    8. 'val' → logprob: -6.295405387878418
    9. '(x' → logprob: -6.295405387878418
    10. ' grund' → logprob: -6.420405387878418

Token 542: ' Grund' (ID: 22449)
  Prédit: 'grund'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'grund' → logprob: -0.12275407463312149
    2. 'xor' → logprob: -2.7477540969848633
    3. 'x' → logprob: -3.9977540969848633
    4. 'value' → logprob: -4.622754096984863
    5. 'mex' → logprob: -5.122754096984863
    6. 'nim' → logprob: -5.372754096984863
    7. 'Gr' → logprob: -5.997754096984863
    8. 'segment' → logprob: -6.497754096984863
    9. 'def' → logprob: -6.622754096984863
    10. ' grund' → logprob: -6.997754096984863

Token 543: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -8.061054359131958e-06
    2. ')' → logprob: -13.375007629394531
    3. '(' → logprob: -13.750007629394531
    4. '{
' → logprob: -13.750007629394531
    5. '   ' → logprob: -13.750007629394531
    6. '#' → logprob: -14.750007629394531
    7. '```' → logprob: -15.000007629394531
    8. '{' → logprob: -15.125007629394531
    9. 'value' → logprob: -15.250007629394531
    10. ' ' → logprob: -15.250007629394531

Token 544: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5646709203720093
    2. '(x' → logprob: -1.9396709203720093
    3. '(' → logprob: -2.064671039581299
    4. '[' → logprob: -3.189671039581299
    5. '=' → logprob: -4.064671039581299
    6. '_value' → logprob: -4.189671039581299
    7. ',' → logprob: -4.314671039581299
    8. ';' → logprob: -4.439671039581299
    9. '}' → logprob: -4.564671039581299
    10. ']' → logprob: -5.064671039581299

Token 545: ' a' (ID: 261)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.12654152512550354
    2. 'val' → logprob: -3.2515416145324707
    3. 'each' → logprob: -3.5015416145324707
    4. ' x' → logprob: -4.001541614532471
    5. 'v' → logprob: -4.876541614532471
    6. ' val' → logprob: -5.376541614532471
    7. ' each' → logprob: -5.501541614532471
    8. 'the' → logprob: -5.501541614532471
    9. 'a' → logprob: -5.626541614532471
    10. 'segments' → logprob: -6.501541614532471

Token 546: ' pile' (ID: 39732)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.7184893488883972
    2. 'segment' → logprob: -1.343489408493042
    3. 'single' → logprob: -2.093489408493042
    4. 'run' → logprob: -3.343489408493042
    5. 'number' → logprob: -3.968489408493042
    6. 'def' → logprob: -3.968489408493042
    7. 'val' → logprob: -4.343489170074463
    8. 'v' → logprob: -4.718489170074463
    9. 'seg' → logprob: -4.843489170074463
    10. 'pow' → logprob: -5.093489170074463

Token 547: ' x' (ID: 1215)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.34246018528938293
    2. '(x' → logprob: -2.2174601554870605
    3. '(' → logprob: -2.7174601554870605
    4. '=' → logprob: -3.3424601554870605
    5. ' =' → logprob: -4.2174601554870605
    6. 'x' → logprob: -4.9674601554870605
    7. ':' → logprob: -5.0924601554870605
    8. ',' → logprob: -5.0924601554870605
    9. '_x' → logprob: -5.2174601554870605
    10. '   ' → logprob: -5.2174601554870605

Token 548: ' =' (ID: 314)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7219034433364868
    2. '=' → logprob: -1.8469034433364868
    3. ':' → logprob: -1.9719034433364868
    4. ')' → logprob: -2.4719033241271973
    5. ' =' → logprob: -2.9719033241271973
    6. '[' → logprob: -3.2219033241271973
    7. 'def' → logprob: -4.471903324127197
    8. ',' → logprob: -4.846903324127197
    9. '#' → logprob: -5.471903324127197
    10. '_' → logprob: -5.846903324127197

Token 549: ' XOR' (ID: 147209)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.05767935514450073
    2. '(' → logprob: -3.3076794147491455
    3. '(x' → logprob: -4.682679176330566
    4. 'grund' → logprob: -6.182679176330566
    5. 'val' → logprob: -6.432679176330566
    6. '((' → logprob: -6.557679176330566
    7. '0' → logprob: -6.807679176330566
    8. 'split' → logprob: -7.057679176330566
    9. ' x' → logprob: -7.682679176330566
    10. 'bin' → logprob: -7.682679176330566

Token 550: ' of' (ID: 328)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.18877375125885
    2. ' ^' → logprob: -1.31377375125885
    3. '^' → logprob: -1.93877375125885
    4. '(x' → logprob: -2.4387736320495605
    5. '_' → logprob: -2.9387736320495605
    6. '(' → logprob: -2.9387736320495605
    7. '[' → logprob: -3.4387736320495605
    8. ' ' → logprob: -4.4387736320495605
    9. '[x' → logprob: -4.6887736320495605
    10. '   ' → logprob: -4.6887736320495605

Token 551: ' grund' (ID: 34475)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.6169466972351074
    2. 'segments' → logprob: -1.4919466972351074
    3. 'seg' → logprob: -2.8669466972351074
    4. 'se' → logprob: -3.4919466972351074
    5. 'split' → logprob: -3.6169466972351074
    6. 'val' → logprob: -3.6169466972351074
    7. ')' → logprob: -3.8669466972351074
    8. 'the' → logprob: -4.241946697235107
    9. ' segments' → logprob: -4.741946697235107
    10. '[' → logprob: -4.991946697235107

Token 552: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.10126025974750519
    2. 'ies' → logprob: -2.351260185241699
    3. ')' → logprob: -8.1012601852417
    4. '(' → logprob: -8.6012601852417
    5. 'gies' → logprob: -9.2262601852417
    6. 'x' → logprob: -9.4762601852417
    7. '(x' → logprob: -9.9762601852417
    8. ']' → logprob: -9.9762601852417
    9. '{' → logprob: -9.9762601852417
    10. '(y' → logprob: -10.2262601852417

Token 553: ' of' (ID: 328)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6592464447021484
    2. '(x' → logprob: -1.2842464447021484
    3. '[x' → logprob: -3.0342464447021484
    4. '_' → logprob: -3.1592464447021484
    5. 's' → logprob: -3.5342464447021484
    6. '(' → logprob: -3.5342464447021484
    7. '[' → logprob: -4.034246444702148
    8. '(s' → logprob: -4.534246444702148
    9. ',' → logprob: -5.034246444702148
    10. '_x' → logprob: -5.659246444702148

Token 554: ' each' (ID: 2454)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.7759939432144165
    2. 'segments' → logprob: -1.7759939432144165
    3. 'each' → logprob: -1.9009939432144165
    4. 'val' → logprob: -1.9009939432144165
    5. 'seg' → logprob: -2.150993824005127
    6. 'v' → logprob: -2.650993824005127
    7. 'run' → logprob: -3.900993824005127
    8. 'runs' → logprob: -4.025993824005127
    9. 'segment' → logprob: -4.150993824005127
    10. 'parts' → logprob: -4.400993824005127

Token 555: ' run' (ID: 2461)
  Prédit: 'seg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'seg' → logprob: -0.40284261107444763
    2. 'segment' → logprob: -1.52784264087677
    3. '(seg' → logprob: -3.1528425216674805
    4. 'val' → logprob: -3.6528425216674805
    5. 'run' → logprob: -4.6528425216674805
    6. '(' → logprob: -4.6528425216674805
    7. 'v' → logprob: -4.9028425216674805
    8. 'part' → logprob: -5.0278425216674805
    9. '(val' → logprob: -5.6528425216674805
    10. '(v' → logprob: -6.1528425216674805

Token 556: ' in' (ID: 306)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.294629454612732
    2. '_' → logprob: -1.669629454612732
    3. ':' → logprob: -1.919629454612732
    4. '   ' → logprob: -2.4196295738220215
    5. '[x' → logprob: -2.6696295738220215
    6. '=' → logprob: -2.7946295738220215
    7. ' =' → logprob: -3.5446295738220215
    8. '(x' → logprob: -3.5446295738220215
    9. '[' → logprob: -3.6696295738220215
    10. 's' → logprob: -4.5446295738220215

Token 557: ' split' (ID: 12648)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.08807401359081268
    2. 'x' → logprob: -3.338073968887329
    3. 'se' → logprob: -3.963073968887329
    4. 'seg' → logprob: -4.463074207305908
    5. 'split' → logprob: -5.088074207305908
    6. 'L' → logprob: -5.338074207305908
    7. 'segments' → logprob: -6.088074207305908
    8. 'val' → logprob: -6.713074207305908
    9. ')' → logprob: -7.088074207305908
    10. '[' → logprob: -7.088074207305908

Token 558: '.
' (ID: 558)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.4236706495285034
    2. '_' → logprob: -1.5486706495285034
    3. '(x' → logprob: -1.6736706495285034
    4. '   ' → logprob: -2.048670768737793
    5. '_x' → logprob: -3.423670768737793
    6. ')
' → logprob: -3.923670768737793
    7. ':' → logprob: -3.923670768737793
    8. 's' → logprob: -3.923670768737793
    9. '[x' → logprob: -3.923670768737793
    10. '_of' → logprob: -4.173670768737793

Token 559: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3441210687160492
    2. ')' → logprob: -1.4691210985183716
    3. 'val' → logprob: -4.344120979309082
    4. 'x' → logprob: -4.844120979309082
    5. 'res' → logprob: -5.344120979309082
    6. '#' → logprob: -5.469120979309082
    7. 'key' → logprob: -5.969120979309082
    8. ')
' → logprob: -6.219120979309082
    9. 'segments' → logprob: -6.219120979309082
    10. 'state' → logprob: -6.344120979309082

Token 560: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.39053890109062195
    2. 'if' → logprob: -1.8905389308929443
    3. ')' → logprob: -3.1405389308929443
    4. 'x' → logprob: -3.6405389308929443
    5. 'val' → logprob: -4.140538692474365
    6. 'm' → logprob: -4.265538692474365
    7. '#' (adapté à ' #') → logprob: -4.515538692474365
    8. 'res' → logprob: -4.765538692474365
    9. 'xor' → logprob: -4.890538692474365
    10. 'length' → logprob: -5.015538692474365

Token 561: ' Actually' (ID: 50557)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.14848460257053375
    2. 'length' → logprob: -3.523484706878662
    3. 'run' → logprob: -4.398484706878662
    4. 'res' → logprob: -4.523484706878662
    5. 'm' → logprob: -4.648484706878662
    6. 'val' → logprob: -4.773484706878662
    7. 'k' → logprob: -4.773484706878662
    8. '#' → logprob: -4.773484706878662
    9. 'n' → logprob: -4.898484706878662
    10. 'seg' → logprob: -5.148484706878662

Token 562: ' the' (ID: 290)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.32213765382766724
    2. 'memo' → logprob: -2.5721375942230225
    3. ' if' → logprob: -2.8221375942230225
    4. 'if' → logprob: -3.5721375942230225
    5. 'res' → logprob: -3.8221375942230225
    6. ' memo' → logprob: -3.9471375942230225
    7. ' res' → logprob: -4.197137832641602
    8. 'def' → logprob: -4.197137832641602
    9. '
' → logprob: -4.822137832641602
    10. 'm' → logprob: -4.947137832641602

Token 563: ' game' (ID: 2813)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6687874794006348
    2. 'def' → logprob: -1.2937874794006348
    3. 'if' → logprob: -2.1687874794006348
    4. 'memo' → logprob: -3.0437874794006348
    5. 'key' → logprob: -5.043787479400635
    6. 'segments' → logprob: -5.043787479400635
    7. 'x' → logprob: -5.168787479400635
    8. 'res' → logprob: -5.168787479400635
    9. 'runs' → logprob: -5.668787479400635
    10. 'return' → logprob: -6.043787479400635

Token 564: ' is' (ID: 382)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8014331459999084
    2. 'def' → logprob: -2.0514330863952637
    3. ' =' → logprob: -2.1764330863952637
    4. ')' → logprob: -2.3014330863952637
    5. ':' → logprob: -2.3014330863952637
    6. '   ' → logprob: -2.8014330863952637
    7. ' is' → logprob: -5.301433086395264
    8. ',' → logprob: -5.426433086395264
    9. ']' → logprob: -5.551433086395264
    10. '_states' → logprob: -6.051433086395264

Token 565: ' equivalent' (ID: 23458)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.23913468420505524
    2. 'x' → logprob: -2.2391347885131836
    3. 'not' → logprob: -3.2391347885131836
    4. 'split' → logprob: -4.614134788513184
    5. 'import' → logprob: -4.989134788513184
    6. '0' → logprob: -5.364134788513184
    7. '   ' → logprob: -5.614134788513184
    8. '@' → logprob: -5.864134788513184
    9. 'memo' → logprob: -5.864134788513184
    10. 'linear' → logprob: -6.114134788513184

Token 566: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.2237047404050827
    2. 'to' → logprob: -2.0987048149108887
    3. '   ' → logprob: -3.5987048149108887
    4. ':' → logprob: -4.723704814910889
    5. 'def' → logprob: -4.848704814910889
    6. ')' → logprob: -4.973704814910889
    7. '=' → logprob: -4.973704814910889
    8. '(' → logprob: -5.348704814910889
    9. '[' → logprob: -5.723704814910889
    10. '(x' → logprob: -5.848704814910889

Token 567: ' a' (ID: 261)
  Prédit: 'grund'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'grund' → logprob: -0.19385279715061188
    2. 'x' → logprob: -2.4438529014587402
    3. 'def' → logprob: -3.3188529014587402
    4. 'lambda' → logprob: -3.6938529014587402
    5. '0' → logprob: -5.31885290145874
    6. 'split' → logprob: -5.44385290145874
    7. '{}' → logprob: -5.69385290145874
    8. 'sum' → logprob: -6.19385290145874
    9. '(' → logprob: -6.19385290145874
    10. '{' → logprob: -6.56885290145874

Token 568: ' Nim' (ID: 117458)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7314997911453247
    2. 'mex' → logprob: -1.9814997911453247
    3. 'pile' → logprob: -2.356499671936035
    4. 'xor' → logprob: -2.606499671936035
    5. 'single' → logprob: -3.106499671936035
    6. 'com' → logprob: -3.731499671936035
    7. 'nim' → logprob: -4.106499671936035
    8. 'sub' → logprob: -4.231499671936035
    9. 'split' → logprob: -4.356499671936035
    10. 'game' → logprob: -4.481499671936035

Token 569: ' pile' (ID: 39732)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4244002401828766
    2. ')' → logprob: -1.4244002103805542
    3. '.' → logprob: -2.9244003295898438
    4. '}' → logprob: -3.9244003295898438
    5. '   ' → logprob: -4.549400329589844
    6. '[' → logprob: -4.924400329589844
    7. 'return' → logprob: -6.174400329589844
    8. ':
' → logprob: -6.424400329589844
    9. '()' → logprob: -6.549400329589844
    10. '(' → logprob: -6.674400329589844

Token 570: ' where' (ID: 1919)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8773068785667419
    2. '[' → logprob: -2.2523069381713867
    3. '.' → logprob: -2.3773069381713867
    4. '=' → logprob: -2.3773069381713867
    5. ')' → logprob: -2.6273069381713867
    6. '[x' → logprob: -2.7523069381713867
    7. '   ' → logprob: -3.3773069381713867
    8. ',' → logprob: -3.5023069381713867
    9. '{' → logprob: -4.252306938171387
    10. '(' → logprob: -4.627306938171387

Token 571: ' pile' (ID: 39732)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.09924587607383728
    2. 'the' → logprob: -2.84924578666687
    3. 'res' → logprob: -4.849246025085449
    4. '1' → logprob: -5.099246025085449
    5. 'segments' → logprob: -5.349246025085449
    6. 'val' → logprob: -5.474246025085449
    7. 'each' → logprob: -5.724246025085449
    8. ' the' → logprob: -6.474246025085449
    9. ')' → logprob: -6.599246025085449
    10. ' x' → logprob: -6.974246025085449

Token 572: ' x' (ID: 1215)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7009767293930054
    2. 's' → logprob: -1.2009767293930054
    3. 'sizes' → logprob: -2.200976848602295
    4. ' sizes' → logprob: -3.075976848602295
    5. '_sizes' → logprob: -3.950976848602295
    6. 'size' → logprob: -4.575976848602295
    7. ' =' → logprob: -4.700976848602295
    8. ' size' → logprob: -6.575976848602295
    9. '_size' → logprob: -6.950976848602295
    10. ' is' → logprob: -6.950976848602295

Token 573: ' transitions' (ID: 59824)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.3075909614562988
    2. ')' → logprob: -1.4325909614562988
    3. ' is' → logprob: -1.4325909614562988
    4. ' can' → logprob: -2.557590961456299
    5. ' =' → logprob: -2.682590961456299
    6. ' represents' → logprob: -3.182590961456299
    7. ''s' → logprob: -4.182590961456299
    8. 's' → logprob: -4.307590961456299
    9. ':' → logprob: -4.557590961456299
    10. ' has' → logprob: -5.307590961456299

Token 574: ' to' (ID: 316)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.408294677734375
    2. ' to' → logprob: -1.783294677734375
    3. ' =' → logprob: -2.158294677734375
    4. ')' → logprob: -2.158294677734375
    5. ' ' → logprob: -2.658294677734375
    6. '[' → logprob: -2.908294677734375
    7. '   ' → logprob: -3.033294677734375
    8. ':' → logprob: -3.158294677734375
    9. '_' → logprob: -3.408294677734375
    10. ' x' → logprob: -3.783294677734375

Token 575: ' XOR' (ID: 147209)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.02855943888425827
    2. ' x' → logprob: -4.27855920791626
    3. '[x' → logprob: -5.65355920791626
    4. '[' → logprob: -6.02855920791626
    5. '{x' → logprob: -6.02855920791626
    6. '(x' → logprob: -6.15355920791626
    7. '{' → logprob: -6.52855920791626
    8. '0' → logprob: -7.65355920791626
    9. 'range' → logprob: -8.028559684753418
    10. '[(' → logprob: -8.903559684753418

Token 576: ' of' (ID: 328)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8873108625411987
    2. '_' → logprob: -2.0123109817504883
    3. '[' → logprob: -2.2623109817504883
    4. '<|end|>' → logprob: -2.6373109817504883
    5. '(' → logprob: -2.7623109817504883
    6. ' (' → logprob: -2.8873109817504883
    7. '<|end|>' → logprob: -3.3873109817504883
    8. '(x' → logprob: -3.7623109817504883
    9. '   ' → logprob: -4.137310981750488
    10. ' ' → logprob: -4.262310981750488

Token 577: ' grund' (ID: 34475)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.2327523231506348
    2. 'x' → logprob: -1.7327523231506348
    3. 'segments' → logprob: -1.9827523231506348
    4. 'grund' → logprob: -2.6077523231506348
    5. 'sub' → logprob: -3.3577523231506348
    6. 'val' → logprob: -3.4827523231506348
    7. '[x' → logprob: -3.7327523231506348
    8. 'split' → logprob: -3.7327523231506348
    9. '[(' → logprob: -3.8577523231506348
    10. '(x' → logprob: -3.8577523231506348

Token 578: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.22559452056884766
    2. 'ies' → logprob: -1.6005945205688477
    3. 'x' → logprob: -9.975594520568848
    4. 'y's' → logprob: -9.975594520568848
    5. 'gies' → logprob: -10.475594520568848
    6. 'ys' → logprob: -11.600594520568848
    7. 'ie' → logprob: -11.725594520568848
    8. ')' → logprob: -12.225594520568848
    9. '```' → logprob: -12.725594520568848
    10. 'ying' → logprob: -13.100594520568848

Token 579: ' of' (ID: 328)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(x' → logprob: -1.2606182098388672
    2. '_' → logprob: -1.3856182098388672
    3. ')' → logprob: -1.7606182098388672
    4. '[' → logprob: -2.510618209838867
    5. 's' → logprob: -2.885618209838867
    6. '(' → logprob: -3.135618209838867
    7. '[x' → logprob: -3.510618209838867
    8. '(
' → logprob: -4.260618209838867
    9. '}' → logprob: -4.385618209838867
    10. '(s' → logprob: -4.510618209838867

Token 580: ' runs' (ID: 13719)
  Prédit: 'split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.7725471258163452
    2. 'segments' → logprob: -1.7725471258163452
    3. 'sub' → logprob: -2.3975472450256348
    4. '[x' → logprob: -2.5225472450256348
    5. '[' → logprob: -2.6475472450256348
    6. 'x' → logprob: -3.1475472450256348
    7. 'each' → logprob: -3.1475472450256348
    8. '(x' → logprob: -3.2725472450256348
    9. '(s' → logprob: -3.5225472450256348
    10. '[p' → logprob: -3.6475472450256348

Token 581: ' in' (ID: 306)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.0192062854766846
    2. '[' → logprob: -1.0192062854766846
    3. '_' → logprob: -2.0192062854766846
    4. ')' → logprob: -3.2692062854766846
    5. '=' → logprob: -3.6442062854766846
    6. '}' → logprob: -4.1442060470581055
    7. '[x' → logprob: -4.2692060470581055
    8. '.' → logprob: -4.3942060470581055
    9. ',' → logprob: -4.6442060470581055
    10. '{' → logprob: -4.8942060470581055

Token 582: ' binary' (ID: 15600)
  Prédit: 'split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.6566697955131531
    2. 'x' → logprob: -1.2816698551177979
    3. 'seg' → logprob: -3.156669855117798
    4. 'res' → logprob: -3.156669855117798
    5. 'segments' → logprob: -3.156669855117798
    6. '[' → logprob: -3.906669855117798
    7. '[x' → logprob: -4.656669616699219
    8. 'se' → logprob: -5.031669616699219
    9. 'spl' → logprob: -5.031669616699219
    10. 'runs' → logprob: -5.031669616699219

Token 583: ' representation' (ID: 22311)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7855696678161621
    2. ')' → logprob: -1.160569667816162
    3. '   ' → logprob: -2.035569667816162
    4. '[' → logprob: -3.660569667816162
    5. '[x' → logprob: -3.910569667816162
    6. ':
' → logprob: -4.285569667816162
    7. '}' → logprob: -4.410569667816162
    8. ',' → logprob: -4.910569667816162
    9. '.' → logprob: -4.910569667816162
    10. '):' → logprob: -5.910569667816162

Token 584: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3306594789028168
    2. ')' → logprob: -1.7056595087051392
    3. ':' → logprob: -2.8306593894958496
    4. '.' → logprob: -4.08065938949585
    5. ',' → logprob: -5.33065938949585
    6. '[' → logprob: -5.83065938949585
    7. 'def' → logprob: -5.83065938949585
    8. '):' → logprob: -6.08065938949585
    9. '}' → logprob: -6.20565938949585
    10. '{' → logprob: -6.45565938949585

Token 585: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.40869492292404175
    2. ')' → logprob: -1.9086949825286865
    3. 'moves' → logprob: -2.2836949825286865
    4. 'mask' → logprob: -3.6586949825286865
    5. '#' → logprob: -4.408694744110107
    6. 'm' → logprob: -4.658694744110107
    7. 'if' → logprob: -4.783694744110107
    8. 'x' → logprob: -5.533694744110107
    9. ')
' → logprob: -6.033694744110107
    10. 'val' → logprob: -6.033694744110107

Token 586: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22071698307991028
    2. 'moves' → logprob: -2.345716953277588
    3. ' moves' → logprob: -3.720716953277588
    4. ')' → logprob: -4.345716953277588
    5. 'x' → logprob: -4.470716953277588
    6. 'm' → logprob: -4.595716953277588
    7. 'memo' → logprob: -5.345716953277588
    8. ',' → logprob: -5.470716953277588
    9. '#' (adapté à ' #') → logprob: -5.595716953277588
    10. 'mex' → logprob: -5.845716953277588

Token 587: ' So' (ID: 2632)
  Prédit: 'moves'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'moves' → logprob: -1.2125935554504395
    2. 'mex' → logprob: -1.8375935554504395
    3. 'if' → logprob: -1.9625935554504395
    4. 'm' → logprob: -2.4625935554504395
    5. 'mask' → logprob: -3.0875935554504395
    6. 'res' → logprob: -3.2125935554504395
    7. 'x' → logprob: -3.3375935554504395
    8. 'n' → logprob: -3.4625935554504395
    9. '   ' → logprob: -3.5875935554504395
    10. 'memo' → logprob: -3.7125935554504395

Token 588: ' the' (ID: 290)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0995459109544754
    2. 'memo' → logprob: -3.349545955657959
    3. 'def' → logprob: -4.099545955657959
    4. 'length' → logprob: -4.599545955657959
    5. 'runs' → logprob: -4.599545955657959
    6. 'res' → logprob: -5.224545955657959
    7. '#' → logprob: -5.349545955657959
    8. 'n' → logprob: -5.974545955657959
    9. 'run' → logprob: -6.099545955657959
    10. 'm' → logprob: -6.349545955657959

Token 589: ' function' (ID: 1114)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5478623509407043
    2. 'if' → logprob: -1.1728622913360596
    3. '#' → logprob: -2.7978622913360596
    4. 'memo' → logprob: -4.172862529754639
    5. 'length' → logprob: -4.547862529754639
    6. 'res' → logprob: -4.547862529754639
    7. 'return' → logprob: -5.547862529754639
    8. 'n' → logprob: -6.047862529754639
    9. 'runs' → logprob: -6.797862529754639
    10. 'run' → logprob: -6.797862529754639

Token 590: ' g' (ID: 329)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.049861449748277664
    2. 'grund' → logprob: -4.049861431121826
    3. 'x' → logprob: -4.924861431121826
    4. 'returns' → logprob: -5.174861431121826
    5. 'contin' → logprob: -5.424861431121826
    6. '=' → logprob: -5.799861431121826
    7. 's' → logprob: -6.674861431121826
    8. 'return' → logprob: -7.174861431121826
    9. 'is' → logprob: -7.174861431121826
    10. 'for' → logprob: -7.424861431121826

Token 591: '(x' (ID: 4061)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6278855204582214
    2. 'def' → logprob: -2.002885580062866
    3. 'val' → logprob: -2.127885580062866
    4. 'x' → logprob: -2.127885580062866
    5. '=' → logprob: -3.002885580062866
    6. 'u' → logprob: -4.627885341644287
    7. '_val' → logprob: -4.752885341644287
    8. '(x' → logprob: -5.377885341644287
    9. 'r' → logprob: -5.502885341644287
    10. 'round' → logprob: -5.752885341644287

Token 592: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.14620941877365112
    2. '):' → logprob: -2.021209478378296
    3. '):
' → logprob: -6.646209239959717
    4. ')=' → logprob: -6.896209239959717
    5. 'def' → logprob: -7.521209239959717
    6. '(x' → logprob: -7.771209239959717
    7. '=' → logprob: -9.271209716796875
    8. '   ' → logprob: -10.021209716796875
    9. '):

' → logprob: -10.646209716796875
    10. ')
' → logprob: -11.271209716796875

Token 593: ' satisfy' (ID: 35441)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.08202594518661499
    2. ' =' → logprob: -2.8320260047912598
    3. 'def' → logprob: -3.9570260047912598
    4. '   ' → logprob: -8.832025527954102
    5. '=
' → logprob: -9.332025527954102
    6. ':' → logprob: -9.582025527954102
    7. 's' → logprob: -9.582025527954102
    8. ' def' → logprob: -9.582025527954102
    9. ',' → logprob: -10.082025527954102
    10. ')' → logprob: -10.082025527954102

Token 594: ' g' (ID: 329)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2449970841407776
    2. ' =' → logprob: -2.244997024536133
    3. '(' → logprob: -2.494997024536133
    4. '(x' → logprob: -4.369997024536133
    5. ':' → logprob: -4.994997024536133
    6. 's' → logprob: -4.994997024536133
    7. '   ' → logprob: -6.994997024536133
    8. 'def' → logprob: -7.869997024536133
    9. '(
' → logprob: -7.869997024536133
    10. '=
' → logprob: -8.244997024536133

Token 595: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.002636534161865711
    2. '(' → logprob: -6.877636432647705
    3. 'x' → logprob: -7.252636432647705
    4. '=' → logprob: -7.877636432647705
    5. ' =' → logprob: -8.252636909484863
    6. 'def' → logprob: -9.252636909484863
    7. ')' → logprob: -9.752636909484863
    8. 'g' → logprob: -11.002636909484863
    9. '```' → logprob: -11.377636909484863
    10. '(u' → logprob: -11.627636909484863

Token 596: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004806991666555405
    2. ')=' → logprob: -5.504806995391846
    3. '):' → logprob: -7.754806995391846
    4. '=' → logprob: -8.754806518554688
    5. '(x' → logprob: -9.129806518554688
    6. '):
' → logprob: -11.504806518554688
    7. 'def' → logprob: -12.254806518554688
    8. ' )' → logprob: -12.754806518554688
    9. '()' → logprob: -12.879806518554688
    10. ')==' → logprob: -13.254806518554688

Token 597: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.007007336709648371
    2. ' =' → logprob: -5.132007122039795
    3. 'def' → logprob: -7.257007122039795
    4. '(' → logprob: -9.757007598876953
    5. '   ' → logprob: -9.882007598876953
    6. ':' → logprob: -10.007007598876953
    7. ')' → logprob: -10.132007598876953
    8. '[' → logprob: -10.257007598876953
    9. '=
' → logprob: -10.257007598876953
    10. ' ' → logprob: -11.132007598876953

Token 598: ' mex' (ID: 32410)
  Prédit: 'grund'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'grund' → logprob: -0.691400408744812
    2. 'x' → logprob: -0.941400408744812
    3. '0' → logprob: -3.1914005279541016
    4. 'min' → logprob: -3.9414005279541016
    5. 'mex' → logprob: -4.191400527954102
    6. 'xor' → logprob: -4.316400527954102
    7. '(' → logprob: -5.441400527954102
    8. 'g' → logprob: -5.691400527954102
    9. 'max' → logprob: -5.941400527954102
    10. '
' → logprob: -6.191400527954102

Token 599: ' of' (ID: 328)
  Prédit: '({'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '({' → logprob: -0.7266904711723328
    2. '{' → logprob: -0.8516904711723328
    3. '(' → logprob: -2.4766905307769775
    4. '([' → logprob: -5.976690292358398
    5. '[' → logprob: -6.726690292358398
    6. '([{' → logprob: -7.476690292358398
    7. '(
' → logprob: -7.726690292358398
    8. '({
' → logprob: -8.351690292358398
    9. '[{' → logprob: -8.851690292358398
    10. ')' → logprob: -8.851690292358398

Token 600: ' set' (ID: 920)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{' → logprob: -0.00227693491615355
    2. ' {' → logprob: -6.25227689743042
    3. '{x' → logprob: -8.502277374267578
    4. '{s' → logprob: -9.627277374267578
    5. '{
' → logprob: -9.877277374267578
    6. '{sub' → logprob: -11.502277374267578
    7. '{i' → logprob: -12.002277374267578
    8. ' ' → logprob: -12.877277374267578
    9. 'set' → logprob: -13.002277374267578
    10. '{k' → logprob: -13.377277374267578

Token 601: ' of' (ID: 328)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.045782189816236496
    2. '{' → logprob: -3.5457820892333984
    3. '({' → logprob: -5.170782089233398
    4. '([' → logprob: -6.045782089233398
    5. '(
' → logprob: -6.295782089233398
    6. 's' → logprob: -6.420782089233398
    7. '_' → logprob: -6.795782089233398
    8. '[' → logprob: -7.045782089233398
    9. ' (' → logprob: -7.170782089233398
    10. '([(' → logprob: -7.670782089233398

Token 602: ' g' (ID: 329)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{' → logprob: -0.010222526267170906
    2. 'grund' → logprob: -5.135222434997559
    3. '[' → logprob: -5.760222434997559
    4. '[g' → logprob: -7.510222434997559
    5. '{
' → logprob: -8.385222434997559
    6. ' {' → logprob: -9.010222434997559
    7. ' grund' → logprob: -9.510222434997559
    8. '```' → logprob: -9.760222434997559
    9. '(' → logprob: -10.635222434997559
    10. '[
' → logprob: -11.010222434997559

Token 603: '(next' (ID: 28757)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{' → logprob: -0.4918029010295868
    2. '({' → logprob: -1.3668029308319092
    3. '(' → logprob: -2.491802930831909
    4. '([' → logprob: -4.61680269241333
    5. '(
' → logprob: -4.86680269241333
    6. 'y' → logprob: -4.86680269241333
    7. '((' → logprob: -5.24180269241333
    8. '(y' → logprob: -5.24180269241333
    9. '{
' → logprob: -5.36680269241333
    10. '{x' → logprob: -6.49180269241333

Token 604: ' states' (ID: 9407)
  Prédit: '_states'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_states' → logprob: -1.120830774307251
    2. '(x' → logprob: -1.495830774307251
    3. ')' → logprob: -2.370830774307251
    4. 'x' → logprob: -2.745830774307251
    5. '_x' → logprob: -2.870830774307251
    6. '(' → logprob: -3.245830774307251
    7. ' for' → logprob: -3.370830774307251
    8. '_state' → logprob: -3.620830774307251
    9. ' states' → logprob: -3.995830774307251
    10. '_val' → logprob: -4.120830535888672

Token 605: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.22926312685012817
    2. 's' → logprob: -2.4792630672454834
    3. '):' → logprob: -2.7292630672454834
    4. '(' → logprob: -3.4792630672454834
    5. '{' → logprob: -4.9792633056640625
    6. '(s' → logprob: -5.2292633056640625
    7. '({' → logprob: -6.2292633056640625
    8. '[' → logprob: -6.6042633056640625
    9. '):
' → logprob: -6.7292633056640625
    10. '(
' → logprob: -6.9792633056640625

Token 606: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.22551345825195312
    2. '   ' → logprob: -1.9755134582519531
    3. '(' → logprob: -3.850513458251953
    4. '{' → logprob: -4.475513458251953
    5. ':
' → logprob: -4.725513458251953
    6. '(
' → logprob: -5.225513458251953
    7. ',' → logprob: -5.600513458251953
    8. 's' → logprob: -6.225513458251953
    9. '_' → logprob: -6.350513458251953
    10. '.' → logprob: -6.725513458251953

Token 607: ' #' (ID: 1069)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.05083223804831505
    2. ':
' → logprob: -4.050832271575928
    3. '{' → logprob: -4.800832271575928
    4. '(' → logprob: -5.050832271575928
    5. '_' → logprob: -5.175832271575928
    6. '   ' → logprob: -5.675832271575928
    7. '(
' → logprob: -6.050832271575928
    8. ',' → logprob: -6.300832271575928
    9. '.' → logprob: -6.550832271575928
    10. ' ' → logprob: -7.925832271575928

Token 608: ' And' (ID: 1958)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.36552923917770386
    2. ':' → logprob: -1.8655292987823486
    3. 'moves' → logprob: -2.4905292987823486
    4. 'm' → logprob: -4.3655290603637695
    5. ' moves' → logprob: -4.4905290603637695
    6. ':
' → logprob: -4.4905290603637695
    7. ',' → logprob: -4.6155290603637695
    8. '{' → logprob: -5.7405290603637695
    9. '\n' → logprob: -5.7405290603637695
    10. 'states' → logprob: -6.4905290603637695

Token 609: ' next' (ID: 2613)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0854289531707764
    2. 'for' → logprob: -1.9604289531707764
    3. ' for' → logprob: -1.9604289531707764
    4. 'moves' → logprob: -1.9604289531707764
    5. ' moves' → logprob: -3.4604289531707764
    6. ' states' → logprob: -3.7104289531707764
    7. 'def' → logprob: -3.7104289531707764
    8. ' x' → logprob: -4.0854291915893555
    9. 'm' → logprob: -4.0854291915893555
    10. 'states' → logprob: -4.2104291915893555

Token 610: ' states' (ID: 9407)
  Prédit: '_states'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_states' → logprob: -0.15852290391921997
    2. '_' → logprob: -2.033522844314575
    3. '_moves' → logprob: -4.408523082733154
    4. '_state' → logprob: -6.783523082733154
    5. 'states' → logprob: -7.658523082733154
    6. ' states' → logprob: -7.658523082733154
    7. '_token' → logprob: -8.033522605895996
    8. 's' → logprob: -8.533522605895996
    9. ' _' → logprob: -8.533522605895996
    10. '_tokens' → logprob: -9.033522605895996

Token 611: ' come' (ID: 3063)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.27870479226112366
    2. '=' → logprob: -1.7787047624588013
    3. ':' → logprob: -2.778704881668091
    4. '(' → logprob: -5.528704643249512
    5. ',' → logprob: -6.153704643249512
    6. ')' → logprob: -6.653704643249512
    7. '.' → logprob: -6.778704643249512
    8. 's' → logprob: -7.153704643249512
    9. ' in' → logprob: -7.153704643249512
    10. '   ' → logprob: -7.653704643249512

Token 612: ' from' (ID: 591)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.3982498347759247
    2. ' from' → logprob: -1.148249864578247
    3. '=' → logprob: -4.648249626159668
    4. '_from' → logprob: -7.273249626159668
    5. ' =' → logprob: -7.273249626159668
    6. '_' → logprob: -9.398249626159668
    7. 's' → logprob: -9.648249626159668
    8. ')' → logprob: -10.023249626159668
    9. ':' → logprob: -10.273249626159668
    10. 'f' → logprob: -10.898249626159668

Token 613: ' subtract' (ID: 71973)
  Prédit: 'grund'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'grund' → logprob: -0.7763298153877258
    2. 'v' → logprob: -1.901329755783081
    3. 'seg' → logprob: -2.151329755783081
    4. 'x' → logprob: -2.276329755783081
    5. 'range' → logprob: -3.026329755783081
    6. ' grund' → logprob: -3.401329755783081
    7. 'run' → logprob: -4.02632999420166
    8. 'i' → logprob: -4.77632999420166
    9. 'val' → logprob: -5.15132999420166
    10. 'the' → logprob: -5.27632999420166

Token 614: 'ing' (ID: 289)
  Prédit: 'ing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ing' → logprob: -0.18180206418037415
    2. 'i' → logprob: -2.4318020343780518
    3. '1' → logprob: -2.8068020343780518
    4. ' ' → logprob: -5.181802272796631
    5. ' i' → logprob: -5.306802272796631
    6. '<|end|>' → logprob: -6.681802272796631
    7. ' ing' → logprob: -6.806802272796631
    8. '   ' → logprob: -7.556802272796631
    9. 'from' → logprob: -7.806802272796631
    10. ' one' → logprob: -7.806802272796631

Token 615: ' any' (ID: 1062)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.4768649637699127
    2. ' ' → logprob: -0.9768649339675903
    3. 'from' → logprob: -6.601864814758301
    4. ' y' → logprob: -7.976864814758301
    5. ' from' → logprob: -8.1018648147583
    6. ' v' → logprob: -8.7268648147583
    7. 'v' → logprob: -8.8518648147583
    8. 'y' → logprob: -8.9768648147583
    9. ' val' → logprob: -10.1018648147583
    10. '`' → logprob: -10.1018648147583

Token 616: ' positive' (ID: 8841)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1682005375623703
    2. '1' → logprob: -2.5432004928588867
    3. ' y' → logprob: -2.9182004928588867
    4. ' v' → logprob: -4.418200492858887
    5. ' one' → logprob: -6.543200492858887
    6. ' val' → logprob: -6.543200492858887
    7. ' i' → logprob: -6.668200492858887
    8. 'y' → logprob: -6.793200492858887
    9. 'v' → logprob: -7.168200492858887
    10. ' value' → logprob: -7.543200492858887

Token 617: ' value' (ID: 1432)
  Prédit: ' integer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' integer' → logprob: -0.4076040983200073
    2. ' ' → logprob: -2.032604217529297
    3. 'integer' → logprob: -2.157604217529297
    4. '1' → logprob: -4.032604217529297
    5. 'int' → logprob: -4.532604217529297
    6. 'i' → logprob: -5.032604217529297
    7. ')' → logprob: -5.032604217529297
    8. ' 
' → logprob: -5.157604217529297
    9. ' i' → logprob: -5.282604217529297
    10. '
' → logprob: -5.407604217529297

Token 618: ' <=' (ID: 5017)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5776015520095825
    2. ')' → logprob: -1.2026015520095825
    3. '[' → logprob: -3.577601432800293
    4. ' from' → logprob: -3.702601432800293
    5. ' ' → logprob: -3.952601432800293
    6. '<|end|>' → logprob: -4.077601432800293
    7. 'from' → logprob: -4.327601432800293
    8. ',' → logprob: -4.827601432800293
    9. ' )' → logprob: -5.452601432800293
    10. 's' → logprob: -5.577601432800293

Token 619: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.11534763127565384
    2. 'v' → logprob: -2.3653476238250732
    3. 'val' → logprob: -4.740347862243652
    4. ' x' → logprob: -5.240347862243652
    5. ' v' → logprob: -7.615347862243652
    6. ' val' → logprob: -7.990347862243652
    7. 'seg' → logprob: -9.740347862243652
    8. '1' → logprob: -11.240347862243652
    9. ' ' → logprob: -11.615347862243652
    10. ')' → logprob: -11.615347862243652

Token 620: ' from' (ID: 591)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07166397571563721
    2. '_' → logprob: -3.0716638565063477
    3. '   ' → logprob: -4.821663856506348
    4. ':
' → logprob: -5.696663856506348
    5. ')' → logprob: -5.821663856506348
    6. '[' → logprob: -6.321663856506348
    7. ',' → logprob: -6.696663856506348
    8. '.' → logprob: -6.821663856506348
    9. '(x' → logprob: -7.071663856506348
    10. '=' → logprob: -7.446663856506348

Token 621: ' one' (ID: 1001)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.005467824637889862
    2. 'v' → logprob: -5.755467891693115
    3. 'val' → logprob: -6.505467891693115
    4. ' x' → logprob: -7.630467891693115
    5. 'seg' → logprob: -9.005467414855957
    6. 'a' → logprob: -10.005467414855957
    7. 'each' → logprob: -10.380467414855957
    8. 'the' → logprob: -10.755467414855957
    9. 'segment' → logprob: -11.255467414855957
    10. ')' → logprob: -11.505467414855957

Token 622: ' run' (ID: 2461)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.053615935146808624
    2. ')' → logprob: -3.0536160469055176
    3. ' _' → logprob: -6.178616046905518
    4. ' ' → logprob: -6.803616046905518
    5. ',' → logprob: -7.553616046905518
    6. '+' → logprob: -8.55361557006836
    7. ' )' → logprob: -8.67861557006836
    8. '
' → logprob: -9.17861557006836
    9. '=' → logprob: -9.30361557006836
    10. '_
' → logprob: -9.42861557006836

Token 623: ' in' (ID: 306)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4005580544471741
    2. '   ' → logprob: -1.2755579948425293
    3. ':
' → logprob: -3.6505579948425293
    4. ' ' → logprob: -5.525557994842529
    5. ' =' → logprob: -5.900557994842529
    6. '{' → logprob: -6.025557994842529
    7. '=' → logprob: -6.025557994842529
    8. ')' → logprob: -6.275557994842529
    9. '_' → logprob: -6.275557994842529
    10. ',' → logprob: -6.275557994842529

Token 624: ' the' (ID: 290)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.14008823037147522
    2. 'seg' → logprob: -3.3900883197784424
    3. ' L' → logprob: -3.3900883197784424
    4. 'se' → logprob: -3.8900883197784424
    5. 'x' → logprob: -4.515088081359863
    6. 'res' → logprob: -4.640088081359863
    7. ' seg' → logprob: -5.015088081359863
    8. 'split' → logprob: -5.140088081359863
    9. 'segments' → logprob: -5.515088081359863
    10. 'val' → logprob: -6.265088081359863

Token 625: ' split' (ID: 12648)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'L' → logprob: -1.4344658851623535
    2. 'res' → logprob: -1.5594658851623535
    3. 'split' → logprob: -1.6844658851623535
    4. 'seg' → logprob: -2.3094658851623535
    5. 'segments' → logprob: -2.5594658851623535
    6. 'se' → logprob: -2.9344658851623535
    7. 'list' → logprob: -3.6844658851623535
    8. 'x' → logprob: -4.0594658851623535
    9. ' segments' → logprob: -4.3094658851623535
    10. ' L' → logprob: -4.5594658851623535

Token 626: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13670268654823303
    2. ':' → logprob: -2.3867027759552
    3. ')' → logprob: -4.011702537536621
    4. '{' → logprob: -5.761702537536621
    5. ',' → logprob: -6.511702537536621
    6. '.' → logprob: -6.761702537536621
    7. '_' → logprob: -6.886702537536621
    8. '):' → logprob: -6.886702537536621
    9. ':
' → logprob: -6.886702537536621
    10. ' ' → logprob: -7.011702537536621

Token 627: ' after' (ID: 1934)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13051050901412964
    2. ')' → logprob: -3.3805105686187744
    3. ' ' → logprob: -3.8805105686187744
    4. ':' → logprob: -4.255510330200195
    5. '    ' → logprob: -4.380510330200195
    6. ''' → logprob: -4.755510330200195
    7. ',' → logprob: -4.880510330200195
    8. ' )' → logprob: -5.505510330200195
    9. ' :' → logprob: -5.755510330200195
    10. '.' → logprob: -5.880510330200195

Token 628: ' split' (ID: 12648)
  Prédit: 'step'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'step' → logprob: -0.22278651595115662
    2. 'split' → logprob: -1.847786545753479
    3. 'the' → logprob: -4.2227864265441895
    4. 'spl' → logprob: -4.5977864265441895
    5. 'x' → logprob: -4.8477864265441895
    6. 'xor' → logprob: -5.8477864265441895
    7. 'app' → logprob: -6.4727864265441895
    8. '1' → logprob: -6.9727864265441895
    9. 'def' → logprob: -7.0977864265441895
    10. ' step' → logprob: -7.4727864265441895

Token 629: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10516689717769623
    2. ':' → logprob: -2.7301669120788574
    3. ')' → logprob: -4.105166912078857
    4. '):' → logprob: -4.605166912078857
    5. ':
' → logprob: -6.605166912078857
    6. '):
' → logprob: -6.730166912078857
    7. ' =' → logprob: -7.480166912078857
    8. '
' → logprob: -7.605166912078857
    9. '=' → logprob: -7.605166912078857
    10. ')
' → logprob: -7.730166912078857

Token 630: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11425049602985382
    2. ':' → logprob: -2.739250421524048
    3. ')' → logprob: -3.489250421524048
    4. '):' → logprob: -6.364250659942627
    5. ',' → logprob: -6.489250659942627
    6. '[' → logprob: -6.489250659942627
    7. ' ' → logprob: -6.614250659942627
    8. '{' → logprob: -6.739250659942627
    9. '_' → logprob: -7.114250659942627
    10. '       ' → logprob: -7.239250659942627

Token 631: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0583786778151989
    2. ')' → logprob: -4.18337869644165
    3. ':' → logprob: -4.43337869644165
    4. '{' → logprob: -5.43337869644165
    5. '#' (adapté à ' #') → logprob: -5.68337869644165
    6. ' ' → logprob: -5.80837869644165
    7. '\n' → logprob: -6.30837869644165
    8. '  
' → logprob: -6.43337869644165
    9. '    
' → logprob: -6.55837869644165
    10. ',' → logprob: -6.68337869644165

Token 632: ' We' (ID: 1416)
  Prédit: 'moves'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'moves' → logprob: -0.4472056031227112
    2. '   ' → logprob: -1.3222055435180664
    3. 'next' → logprob: -3.0722055435180664
    4. 'mex' → logprob: -3.1972055435180664
    5. ')' → logprob: -6.197205543518066
    6. 'move' → logprob: -6.572205543518066
    7. ' moves' → logprob: -7.197205543518066
    8. 'states' → logprob: -7.197205543518066
    9. ' next' → logprob: -8.322205543518066
    10. 'mov' → logprob: -8.447205543518066

Token 633: ' can' (ID: 665)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.4997016191482544
    2. ' need' → logprob: -1.9997016191482544
    3. 'need' → logprob: -2.374701499938965
    4. ' continue' → logprob: -2.874701499938965
    5. '   ' → logprob: -2.999701499938965
    6. 'return' → logprob: -3.624701499938965
    7. 'def' → logprob: -5.624701499938965
    8. '#' → logprob: -5.749701499938965
    9. ' can' → logprob: -5.749701499938965
    10. 'import' → logprob: -5.999701499938965

Token 634: ' memo' (ID: 46393)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.7834075093269348
    2. 'return' → logprob: -1.15840744972229
    3. '   ' → logprob: -2.40840744972229
    4. 'use' → logprob: -3.53340744972229
    5. 'def' → logprob: -4.033407688140869
    6. ' continue' → logprob: -4.658407688140869
    7. ' return' → logprob: -4.658407688140869
    8. ' use' → logprob: -4.783407688140869
    9. 'write' → logprob: -4.908407688140869
    10. 'consider' → logprob: -5.408407688140869

Token 635: 'ize' (ID: 750)
  Prédit: 'ize'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ize' → logprob: -8.2994620242971e-06
    2. 'IZE' → logprob: -12.750008583068848
    3. 'imize' → logprob: -13.000008583068848
    4. ' =' → logprob: -13.625008583068848
    5. '=' → logprob: -14.625008583068848
    6. 'ized' → logprob: -15.000008583068848
    7. 'itize' → logprob: -16.00000762939453
    8. '   ' → logprob: -16.00000762939453
    9. 'ialize' → logprob: -16.00000762939453
    10. 'ze' → logprob: -16.12500762939453

Token 636: ' by' (ID: 656)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.36745554208755493
    2. ')' → logprob: -1.4924554824829102
    3. ':' → logprob: -3.24245548248291
    4. '(' → logprob: -4.61745548248291
    5. ' ' → logprob: -5.24245548248291
    6. '{' → logprob: -5.36745548248291
    7. ',' → logprob: -5.49245548248291
    8. '.' → logprob: -5.86745548248291
    9. 'def' → logprob: -6.11745548248291
    10. '(x' → logprob: -6.11745548248291

Token 637: ' recursion' (ID: 122185)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.003454668214544654
    2. 'memo' → logprob: -7.003454685211182
    3. '[x' → logprob: -7.878454685211182
    4. 'm' → logprob: -8.128454208374023
    5. '{}' → logprob: -8.503454208374023
    6. 'def' → logprob: -8.628454208374023
    7. 'return' → logprob: -8.753454208374023
    8. 'res' → logprob: -8.878454208374023
    9. '(x' → logprob: -9.128454208374023
    10. ' x' → logprob: -9.253454208374023

Token 638: ' over' (ID: 1072)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2338981330394745
    2. '   ' → logprob: -1.7338981628417969
    3. ')' → logprob: -4.858898162841797
    4. '(' → logprob: -4.858898162841797
    5. '{' → logprob: -5.108898162841797
    6. ',' → logprob: -5.983898162841797
    7. ' ' → logprob: -6.608898162841797
    8. 'def' → logprob: -6.608898162841797
    9. '):' → logprob: -7.108898162841797
    10. '.' → logprob: -7.358898162841797

Token 639: ' splitting' (ID: 87130)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0015320050297304988
    2. ' x' → logprob: -7.876532077789307
    3. 'val' → logprob: -8.001531600952148
    4. 'seg' → logprob: -8.376531600952148
    5. 'bin' → logprob: -9.001531600952148
    6. 'segments' → logprob: -9.126531600952148
    7. '(x' → logprob: -9.626531600952148
    8. ')' → logprob: -10.251531600952148
    9. '```' → logprob: -10.501531600952148
    10. 'res' → logprob: -10.501531600952148

Token 640: '.

' (ID: 364)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7568042874336243
    2. ':' → logprob: -0.8818042874336243
    3. ')' → logprob: -2.3818042278289795
    4. '=' → logprob: -5.506804466247559
    5. '):' → logprob: -5.506804466247559
    6. '.' → logprob: -5.631804466247559
    7. ' =' → logprob: -5.881804466247559
    8. ':
' → logprob: -5.881804466247559
    9. 'def' → logprob: -6.131804466247559
    10. ',' → logprob: -6.631804466247559

Token 641: '   ' (ID: 271)
  Prédit: 'moves'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'moves' → logprob: -0.1584143489599228
    2. '   ' → logprob: -2.658414363861084
    3. 'mex' → logprob: -3.658414363861084
    4. 'mask' → logprob: -4.408414363861084
    5. 'grund' → logprob: -4.533414363861084
    6. 'next' → logprob: -4.908414363861084
    7. ')' → logprob: -5.283414363861084
    8. 'move' → logprob: -5.908414363861084
    9. 'sub' → logprob: -6.658414363861084
    10. ' moves' → logprob: -6.658414363861084

Token 642: ' seg' (ID: 3055)
  Prédit: 'moves'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'moves' → logprob: -0.13456302881240845
    2. 'mex' → logprob: -3.3845629692077637
    3. 'next' → logprob: -3.8845629692077637
    4. 'mask' → logprob: -4.384562969207764
    5. 'move' → logprob: -4.634562969207764
    6. 'm' → logprob: -4.759562969207764
    7. 'seg' (adapté à ' seg') → logprob: -4.884562969207764
    8. '   ' → logprob: -5.009562969207764
    9. 'res' → logprob: -5.259562969207764
    10. 'x' → logprob: -5.884562969207764

Token 643: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.008867934346199036
    2. 'ments' → logprob: -4.7588677406311035
    3. '=' → logprob: -8.383868217468262
    4. ' =' → logprob: -11.133868217468262
    5. 'm' → logprob: -12.633868217468262
    6. 'ements' → logprob: -12.883868217468262
    7. 'ment' → logprob: -13.383868217468262
    8. 'MENTS' → logprob: -14.133868217468262
    9. 'ms' → logprob: -14.383868217468262
    10. '_' → logprob: -14.633868217468262

Token 644: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1603953242301941
    2. '=' → logprob: -1.9103953838348389
    3. ',' → logprob: -8.785395622253418
    4. '   ' → logprob: -11.410395622253418
    5. ' ' → logprob: -13.285395622253418
    6. '(' → logprob: -13.660395622253418
    7. '_' → logprob: -14.035395622253418
    8. ' =
' → logprob: -14.160395622253418
    9. '[' → logprob: -14.660395622253418
    10. 's' → logprob: -14.660395622253418

Token 645: ' split' (ID: 12648)
  Prédit: 'split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -3.4121114822482923e-06
    2. ' split' → logprob: -12.625003814697266
    3. 'spl' → logprob: -17.375003814697266
    4. '(split' → logprob: -17.625003814697266
    5. '[' → logprob: -19.875003814697266
    6. 'strip' → logprob: -20.125003814697266
    7. 'spread' → logprob: -20.625003814697266
    8. '
' → logprob: -21.500003814697266
    9. '   ' → logprob: -21.750003814697266
    10. 'sp' → logprob: -21.750003814697266

Token 646: '_into' (ID: 109569)
  Prédit: '_into'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_into' → logprob: -1.9361264946837764e-07
    2. '_of' → logprob: -16.875
    3. '_to' → logprob: -17.0
    4. '_segments' → logprob: -17.75
    5. '```' → logprob: -18.125
    6. '_' → logprob: -18.625
    7. '_from' → logprob: -18.625
    8. 's' → logprob: -19.25
    9. '(x' → logprob: -19.375
    10. 'into' → logprob: -19.5

Token 647: '_p' (ID: 1359)
  Prédit: '_p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_p' → logprob: -0.1435881108045578
    2. 'powers' → logprob: -2.018588066101074
    3. 'pow' → logprob: -7.143588066101074
    4. 'p' → logprob: -10.143588066101074
    5. 'x' → logprob: -10.643588066101074
    6. '2' → logprob: -11.518588066101074
    7. 'two' → logprob: -11.768588066101074
    8. '_pow' → logprob: -12.018588066101074
    9. '```' → logprob: -12.268588066101074
    10. 'se' → logprob: -12.768588066101074

Token 648: 'owers' (ID: 23882)
  Prédit: 'owers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'owers' → logprob: -2.1888679839321412e-05
    2. 'ows' → logprob: -11.875021934509277
    3. 'powers' → logprob: -11.875021934509277
    4. 'ow' → logprob: -12.250021934509277
    5. 'ower' → logprob: -13.375021934509277
    6. 'wers' → logprob: -14.125021934509277
    7. 'oters' → logprob: -14.750021934509277
    8. '2' → logprob: -15.875021934509277
    9. 'owels' → logprob: -16.37502098083496
    10. 'wo' → logprob: -16.62502098083496

Token 649: '_of' (ID: 8023)
  Prédit: '_of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_of' → logprob: -1.3544423381972592e-05
    2. 'of' → logprob: -11.50001335144043
    3. '   ' → logprob: -13.37501335144043
    4. '_' → logprob: -14.62501335144043
    5. ' of' → logprob: -14.62501335144043
    6. 'Of' → logprob: -15.37501335144043
    7. ' _' → logprob: -15.62501335144043
    8. '[' → logprob: -16.25001335144043
    9. '_OF' → logprob: -16.37501335144043
    10. '`' → logprob: -16.75001335144043

Token 650: '_two' (ID: 54305)
  Prédit: 'two'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'two' → logprob: -0.000264315924141556
    2. 'x' → logprob: -8.625264167785645
    3. '_two' → logprob: -9.750264167785645
    4. '2' → logprob: -11.375264167785645
    5. 'Two' → logprob: -11.875264167785645
    6. ' two' → logprob: -12.250264167785645
    7. '(x' → logprob: -13.375264167785645
    8. '(two' → logprob: -14.125264167785645
    9. 'tw' → logprob: -15.625264167785645
    10. 'to' → logprob: -16.12526512145996

Token 651: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.00017541198758408427
    2. '(' → logprob: -9.875175476074219
    3. 's' → logprob: -10.000175476074219
    4. 'def' → logprob: -10.500175476074219
    5. '
' → logprob: -10.750175476074219
    6. ' (' → logprob: -11.000175476074219
    7. '   ' → logprob: -12.500175476074219
    8. '(s' → logprob: -13.250175476074219
    9. ',' → logprob: -13.750175476074219
    10. 'x' → logprob: -14.125175476074219

Token 652: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0009153862483799458
    2. ')
' → logprob: -7.00091552734375
    3. '   ' → logprob: -13.62591552734375
    4. ' )' → logprob: -13.62591552734375
    5. ')
' → logprob: -13.75091552734375
    6. ')`' → logprob: -16.00091552734375
    7. ')

' → logprob: -16.75091552734375
    8. '())' → logprob: -16.75091552734375
    9. '[])' → logprob: -17.37591552734375
    10. '))' → logprob: -17.50091552734375

Token 653: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12519831955432892
    2. 'moves' → logprob: -2.2501983642578125
    3. 'next' → logprob: -5.1251983642578125
    4. 'mex' → logprob: -5.8751983642578125
    5. 'move' → logprob: -6.3751983642578125
    6. 'm' → logprob: -7.0001983642578125
    7. 'grund' → logprob: -8.625198364257812
    8. 'mov' → logprob: -9.000198364257812
    9. 's' → logprob: -9.000198364257812
    10. 'ms' → logprob: -9.375198364257812

Token 654: ' if' (ID: 538)
  Prédit: 'moves'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'moves' → logprob: -0.283122181892395
    2. 'next' → logprob: -1.658122181892395
    3. 'mex' → logprob: -3.5331220626831055
    4. 'move' → logprob: -3.9081220626831055
    5. 'vals' → logprob: -6.0331220626831055
    6. 'res' → logprob: -7.1581220626831055
    7. 'nim' → logprob: -7.5331220626831055
    8. 'grund' → logprob: -7.6581220626831055
    9. '   ' → logprob: -7.7831220626831055
    10. 'xor' → logprob: -7.7831220626831055

Token 655: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.006432798691093922
    2. 'x' → logprob: -5.506433010101318
    3. 'not' → logprob: -6.506433010101318
    4. ' len' → logprob: -7.881433010101318
    5. 'all' → logprob: -8.75643253326416
    6. 'se' → logprob: -9.13143253326416
    7. ' not' → logprob: -9.50643253326416
    8. '1' → logprob: -10.00643253326416
    9. 'le' → logprob: -10.75643253326416
    10. '(len' → logprob: -10.75643253326416

Token 656: '(se' (ID: 19430)
  Prédit: '(se'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(se' → logprob: -8.41866585687967e-06
    2. '(' → logprob: -12.125008583068848
    3. 'se' → logprob: -13.125008583068848
    4. '	se' → logprob: -14.625008583068848
    5. ')' → logprob: -15.750008583068848
    6. '(
' → logprob: -16.12500762939453
    7. '(seg' → logprob: -16.25000762939453
    8. ',se' → logprob: -16.87500762939453
    9. '(s' → logprob: -17.25000762939453
    10. ' (' → logprob: -17.75000762939453

Token 657: 'gs' (ID: 9233)
  Prédit: 'gs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gs' → logprob: -0.008622493594884872
    2. 'g' → logprob: -4.758622646331787
    3. 's' → logprob: -12.758622169494629
    4. '>' → logprob: -13.258622169494629
    5. '```' → logprob: -13.883622169494629
    6. ')' → logprob: -14.758622169494629
    7. 'gments' → logprob: -14.758622169494629
    8. '==' → logprob: -15.383622169494629
    9. 'г' → logprob: -15.883622169494629
    10. 'egs' → logprob: -15.883622169494629

Token 658: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008028535172343254
    2. '==' → logprob: -5.508028507232666
    3. ')==' → logprob: -5.883028507232666
    4. ' ==' → logprob: -7.258028507232666
    5. ')>' → logprob: -8.633028984069824
    6. '>' → logprob: -9.508028984069824
    7. ' )' → logprob: -9.508028984069824
    8. '[' → logprob: -9.883028984069824
    9. ')<' → logprob: -11.133028984069824
    10. '=' → logprob: -11.383028984069824

Token 659: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.28859660029411316
    2. ' ==' → logprob: -1.4135966300964355
    3. '<=' → logprob: -5.4135966300964355
    4. ' <=' → logprob: -6.5385966300964355
    5. '<' → logprob: -7.5385966300964355
    6. '>' → logprob: -7.6635966300964355
    7. '=' → logprob: -8.413596153259277
    8. ' <' → logprob: -8.913596153259277
    9. ')' → logprob: -9.663596153259277
    10. ' >' → logprob: -9.913596153259277

Token 660: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.008622847497463226
    2. '0' → logprob: -4.758622646331787
    3. ' ' → logprob: -11.758623123168945
    4. '   ' → logprob: -16.071123123168945
    5. '```' → logprob: -16.383623123168945
    6. '=' → logprob: -16.821123123168945
    7. '
' → logprob: -17.258623123168945
    8. '`' → logprob: -17.696123123168945
    9. '۱' → logprob: -17.883623123168945
    10. '#' → logprob: -18.071123123168945

Token 661: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9504606825648807e-05
    2. '0' → logprob: -10.875019073486328
    3. ' ' → logprob: -14.625019073486328
    4. '```' → logprob: -17.250019073486328
    5. '
' → logprob: -17.375019073486328
    6. '2' → logprob: -17.500019073486328
    7. '=' → logprob: -17.625019073486328
    8. '`' → logprob: -18.312519073486328
    9. '==' → logprob: -18.812519073486328
    10. '' → logprob: -19.375019073486328

Token 662: ' and' (ID: 326)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.005981766153126955
    2. ' and' → logprob: -5.505981922149658
    3. ':
' → logprob: -6.380981922149658
    4. 'and' → logprob: -9.6309814453125
    5. '):' → logprob: -9.8809814453125
    6. '==' → logprob: -10.6309814453125
    7. '{' → logprob: -11.0059814453125
    8. ' ==' → logprob: -11.2559814453125
    9. '):
' → logprob: -11.8809814453125
    10. '   ' → logprob: -12.0059814453125

Token 663: ' seg' (ID: 3055)
  Prédit: 'se'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'se' → logprob: -0.00046141279744915664
    2. 'x' → logprob: -8.00046157836914
    3. '(' → logprob: -10.12546157836914
    4. 'seg' → logprob: -10.25046157836914
    5. '(se' → logprob: -10.25046157836914
    6. '0' → logprob: -12.50046157836914
    7. 'list' → logprob: -13.25046157836914
    8. '
' → logprob: -13.62546157836914
    9. '(x' → logprob: -13.62546157836914
    10. '1' → logprob: -13.62546157836914

Token 664: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0007442336063832045
    2. 'ments' → logprob: -8.625743865966797
    3. '[' → logprob: -9.000743865966797
    4. '>' → logprob: -9.250743865966797
    5. '==' → logprob: -9.500743865966797
    6. 'ents' → logprob: -9.875743865966797
    7. 'se' → logprob: -10.250743865966797
    8. '<' → logprob: -11.250743865966797
    9. '   ' → logprob: -11.250743865966797
    10. '[]' → logprob: -11.500743865966797

Token 665: '[' (ID: 58)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.7579628229141235
    2. '[' → logprob: -0.8829628229141235
    3. ' ==' → logprob: -2.257962703704834
    4. '>' → logprob: -4.757962703704834
    5. ' >' → logprob: -6.757962703704834
    6. '!=' → logprob: -7.007962703704834
    7. ' !=' → logprob: -7.132962703704834
    8. '[-' → logprob: -7.757962703704834
    9. ')' → logprob: -8.257963180541992
    10. '=' → logprob: -8.507963180541992

Token 666: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.5776860184123507e-06
    2. '-' → logprob: -14.25000286102295
    3. ' ' → logprob: -14.75000286102295
    4. '   ' → logprob: -15.00000286102295
    5. '#' → logprob: -15.12500286102295
    6. '[' → logprob: -15.50000286102295
    7. 'se' → logprob: -15.68750286102295
    8. '1' → logprob: -16.062501907348633
    9. 'x' → logprob: -16.062501907348633
    10. '
' → logprob: -16.062501907348633

Token 667: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.20016787946224213
    2. ')' → logprob: -2.3251678943634033
    3. ']==' → logprob: -2.9501678943634033
    4. '==' → logprob: -3.9501678943634033
    5. ' ==' → logprob: -5.075167655944824
    6. ')==' → logprob: -5.950167655944824
    7. ')]' → logprob: -6.700167655944824
    8. '[' → logprob: -7.950167655944824
    9. ']>' → logprob: -8.450167655944824
    10. '>' → logprob: -8.575167655944824

Token 668: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.34859612584114075
    2. '==' → logprob: -1.2235960960388184
    3. '>' → logprob: -9.973596572875977
    4. ' >' → logprob: -10.473596572875977
    5. '=' → logprob: -11.098596572875977
    6. ' <' → logprob: -11.473596572875977
    7. ' !=' → logprob: -11.723596572875977
    8. ')' → logprob: -11.973596572875977
    9. '<' → logprob: -11.973596572875977
    10. '[' → logprob: -12.473596572875977

Token 669: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.00015407454338856041
    2. '1' → logprob: -8.875154495239258
    3. '0' → logprob: -11.500154495239258
    4. ' x' → logprob: -13.000154495239258
    5. '
' → logprob: -14.000154495239258
    6. '(x' → logprob: -14.875154495239258
    7. '63' → logprob: -15.875154495239258
    8. '(' → logprob: -16.125154495239258
    9. 'res' → logprob: -16.375154495239258
    10. '62' → logprob: -16.875154495239258

Token 670: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.005357552319765091
    2. ':
' → logprob: -5.25535774230957
    3. ':return' → logprob: -9.38035774230957
    4. '):' → logprob: -11.13035774230957
    5. '   ' → logprob: -11.13035774230957
    6. '):
' → logprob: -12.88035774230957
    7. ' and' → logprob: -13.00535774230957
    8. ':
' → logprob: -13.38035774230957
    9. '       ' → logprob: -14.13035774230957
    10. ',' → logprob: -14.13035774230957

Token 671: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.058275677263736725
    2. '   ' → logprob: -2.9332756996154785
    3. ':' → logprob: -6.3082756996154785
    4. ':
' → logprob: -7.5582756996154785
    5. '):
' → logprob: -7.9332756996154785
    6. '```' → logprob: -8.30827522277832
    7. '):' → logprob: -9.18327522277832
    8. 'if' → logprob: -9.80827522277832
    9. 'for' → logprob: -10.05827522277832
    10. '#' → logprob: -10.18327522277832

Token 672: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.097058966755867
    2. 'moves' → logprob: -3.5970590114593506
    3. 'memo' → logprob: -3.8470590114593506
    4. 'res' → logprob: -4.2220587730407715
    5. '#' (adapté à ' #') → logprob: -4.3470587730407715
    6. 'val' → logprob: -5.2220587730407715
    7. 'mex' → logprob: -5.4720587730407715
    8. '   ' → logprob: -5.5970587730407715
    9. 'ans' → logprob: -7.0970587730407715
    10. 'move' → logprob: -7.8470587730407715

Token 673: ' x' (ID: 1215)
  Prédit: 'memo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'memo' → logprob: -0.6287019848823547
    2. 'if' → logprob: -0.8787019848823547
    3. 'res' → logprob: -4.003702163696289
    4. 'return' → logprob: -4.128702163696289
    5. '#' → logprob: -4.878702163696289
    6. 'val' → logprob: -5.503702163696289
    7. 'for' → logprob: -6.753702163696289
    8. 'm' → logprob: -7.003702163696289
    9. 'mex' → logprob: -7.253702163696289
    10. 'result' → logprob: -7.503702163696289

Token 674: ' is' (ID: 382)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.11623746901750565
    2. ' =' → logprob: -3.3662374019622803
    3. '==' → logprob: -3.4912374019622803
    4. '#' → logprob: -5.241237640380859
    5. ')' → logprob: -5.241237640380859
    6. '   ' → logprob: -5.366237640380859
    7. '<' → logprob: -5.491237640380859
    8. ',' → logprob: -5.741237640380859
    9. ' ==' → logprob: -5.741237640380859
    10. '<=' → logprob: -5.741237640380859

Token 675: ' a' (ID: 261)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.27048438787460327
    2. '1' → logprob: -2.270484447479248
    3. 'x' → logprob: -2.395484447479248
    4. 'se' → logprob: -4.145484447479248
    5. '(' → logprob: -4.770484447479248
    6. '(x' → logprob: -5.145484447479248
    7. 'seg' → logprob: -5.270484447479248
    8. '(se' → logprob: -5.895484447479248
    9. ' ' → logprob: -6.395484447479248
    10. '(seg' → logprob: -6.520484447479248

Token 676: ' number' (ID: 2086)
  Prédit: 'power'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'power' → logprob: -0.022879932075738907
    2. 'run' → logprob: -4.0228800773620605
    3. 'pow' → logprob: -6.3978800773620605
    4. ' power' → logprob: -6.8978800773620605
    5. '1' → logprob: -7.5228800773620605
    6. 'con' → logprob: -7.6478800773620605
    7. 'segment' → logprob: -7.7728800773620605
    8. ' run' → logprob: -8.647879600524902
    9. 'number' → logprob: -9.647879600524902
    10. 'sequence' → logprob: -9.772879600524902

Token 677: ' with' (ID: 483)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5813326835632324
    2. ':' → logprob: -1.5813326835632324
    3. ' =' → logprob: -2.8313326835632324
    4. ',' → logprob: -3.3313326835632324
    5. ')' → logprob: -3.8313326835632324
    6. ' +' → logprob: -3.8313326835632324
    7. '=' → logprob: -4.206332683563232
    8. '
' → logprob: -4.581332683563232
    9. ':
' → logprob: -4.706332683563232
    10. '       ' → logprob: -5.206332683563232

Token 678: ' all' (ID: 722)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.11146052181720734
    2. 'one' → logprob: -2.8614604473114014
    3. 'only' → logprob: -3.7364604473114014
    4. 'x' → logprob: -4.4864606857299805
    5. 'a' → logprob: -5.3614606857299805
    6. ' all' → logprob: -6.2364606857299805
    7. 'con' → logprob: -6.9864606857299805
    8. 'binary' → logprob: -7.2364606857299805
    9. '1' → logprob: -7.3614606857299805
    10. 'val' → logprob: -7.3614606857299805

Token 679: ' bits' (ID: 18189)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.014854812994599342
    2. 'ones' → logprob: -4.639854907989502
    3. ' ones' → logprob: -5.389854907989502
    4. ' ' → logprob: -8.264854431152344
    5. 'bits' → logprob: -9.639854431152344
    6. 'one' → logprob: -9.639854431152344
    7. '`' → logprob: -10.014854431152344
    8. ')' → logprob: -10.139854431152344
    9. ''' → logprob: -11.139854431152344
    10. '```' → logprob: -12.139854431152344

Token 680: ' set' (ID: 920)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000605933484621346
    2. ' set' → logprob: -7.875606060028076
    3. ' ' → logprob: -8.750605583190918
    4. 'set' → logprob: -9.750605583190918
    5. '=' → logprob: -13.125605583190918
    6. ' ones' → logprob: -13.125605583190918
    7. '_set' → logprob: -13.500605583190918
    8. '```' → logprob: -13.500605583190918
    9. ' one' → logprob: -13.875605583190918
    10. 'one' → logprob: -14.875605583190918

Token 681: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.11154720932245255
    2. '   ' → logprob: -2.7365472316741943
    3. ':
' → logprob: -3.7365472316741943
    4. ',' → logprob: -4.111546993255615
    5. '.' → logprob: -8.986547470092773
    6. '       ' → logprob: -9.111547470092773
    7. ',
' → logprob: -9.736547470092773
    8. ':return' → logprob: -9.736547470092773
    9. '):' → logprob: -10.486547470092773
    10. '):
' → logprob: -10.736547470092773

Token 682: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0461971759796143
    2. 'm' → logprob: -1.4211971759796143
    3. 'val' → logprob: -2.9211971759796143
    4. 'mask' → logprob: -2.9211971759796143
    5. 'memo' → logprob: -3.0461971759796143
    6. 'length' → logprob: -3.0461971759796143
    7. 'res' → logprob: -3.0461971759796143
    8. 'n' → logprob: -3.1711971759796143
    9. 'mex' → logprob: -3.2961971759796143
    10. 'if' → logprob: -4.046196937561035

Token 683: '2' (ID: 17)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.004769614897668362
    2. '1' → logprob: -6.129769802093506
    3. '(' → logprob: -6.504769802093506
    4. '(x' → logprob: -7.754769802093506
    5. 'se' → logprob: -8.254769325256348
    6. 'seg' → logprob: -9.129769325256348
    7. ')' → logprob: -9.504769325256348
    8. ' x' → logprob: -10.254769325256348
    9. 'return' → logprob: -10.629769325256348
    10. '   ' → logprob: -10.629769325256348

Token 684: '^' (ID: 61)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.06433195620775223
    2. ' **' → logprob: -2.8143320083618164
    3. ')' → logprob: -6.189332008361816
    4. '*' → logprob: -9.064332008361816
    5. '<<' → logprob: -9.814332008361816
    6. '^' → logprob: -10.189332008361816
    7. ')**' → logprob: -11.189332008361816
    8. ' *' → logprob: -11.189332008361816
    9. '**)' → logprob: -11.314332008361816
    10. '
' → logprob: -11.439332008361816

Token 685: 'k' (ID: 74)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.2576586604118347
    2. 'x' → logprob: -2.3826587200164795
    3. 'len' → logprob: -2.6326587200164795
    4. '(length' → logprob: -3.1326587200164795
    5. '(x' → logprob: -5.1326584815979
    6. '(len' → logprob: -5.5076584815979
    7. ')' → logprob: -5.6326584815979
    8. '(' → logprob: -6.5076584815979
    9. '
' → logprob: -6.5076584815979
    10. 'se' → logprob: -7.5076584815979

Token 686: ')-' (ID: 14080)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.018394459038972855
    2. ' )' → logprob: -4.768394470214844
    3. ')-' → logprob: -4.893394470214844
    4. ' -' → logprob: -6.268394470214844
    5. '-' → logprob: -8.768394470214844
    6. '
' → logprob: -9.143394470214844
    7. ' ' → logprob: -11.143394470214844
    8. ')+' → logprob: -11.393394470214844
    9. '}' → logprob: -11.768394470214844
    10. '=' → logprob: -12.143394470214844

Token 687: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0026401029899716377
    2. 'x' → logprob: -6.252640247344971
    3. 'k' → logprob: -7.377640247344971
    4. 'seg' → logprob: -10.377639770507812
    5. ' ' → logprob: -11.002639770507812
    6. '(' → logprob: -11.627639770507812
    7. '
' → logprob: -12.127639770507812
    8. 'val' → logprob: -12.127639770507812
    9. '```' → logprob: -12.627639770507812
    10. '(x' → logprob: -13.127639770507812

Token 688: ' form' (ID: 1625)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.207886815071106
    2. ':
' → logprob: -1.207886815071106
    3. '   ' → logprob: -1.332886815071106
    4. '       ' → logprob: -2.4578866958618164
    5. ',' → logprob: -4.082886695861816
    6. '):
' → logprob: -4.082886695861816
    7. '
' → logprob: -4.832886695861816
    8. '):' → logprob: -5.457886695861816
    9. ')' → logprob: -5.832886695861816
    10. '    
' → logprob: -7.457886695861816

Token 689: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4282805025577545
    2. ':' → logprob: -1.9282804727554321
    3. '   ' → logprob: -2.0532805919647217
    4. ':
' → logprob: -3.4282805919647217
    5. '):' → logprob: -4.553280353546143
    6. ',' → logprob: -4.553280353546143
    7. '):
' → logprob: -4.678280353546143
    8. 'k' → logprob: -5.803280353546143
    9. ')' → logprob: -6.303280353546143
    10. '
' → logprob: -6.428280353546143

Token 690: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09767119586467743
    2. '   ' → logprob: -2.5976712703704834
    3. '
' → logprob: -5.097671031951904
    4. ':' → logprob: -5.347671031951904
    5. ':
' → logprob: -5.972671031951904
    6. '```' → logprob: -7.097671031951904
    7. ',' → logprob: -7.722671031951904
    8. '\n' → logprob: -8.097671508789062
    9. '    
' → logprob: -8.222671508789062
    10. '):
' → logprob: -8.347671508789062

Token 691: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.731608510017395
    2. 'k' → logprob: -0.856608510017395
    3. 'length' → logprob: -2.8566083908081055
    4. 'res' → logprob: -4.3566083908081055
    5. 'm' → logprob: -4.8566083908081055
    6. 'memo' → logprob: -5.7316083908081055
    7. 'val' → logprob: -6.1066083908081055
    8. '   ' → logprob: -6.2316083908081055
    9. 'ans' → logprob: -6.3566083908081055
    10. 'mex' → logprob: -6.7316083908081055

Token 692: ' For' (ID: 2214)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.06465853750705719
    2. 'n' → logprob: -4.0646586418151855
    3. 'length' → logprob: -4.0646586418151855
    4. 'res' → logprob: -4.5646586418151855
    5. 'if' → logprob: -5.3146586418151855
    6. '   ' → logprob: -5.8146586418151855
    7. 'mask' → logprob: -6.0646586418151855
    8. 'mex' → logprob: -6.0646586418151855
    9. 'val' → logprob: -6.6896586418151855
    10. 'ans' → logprob: -7.0646586418151855

Token 693: ' such' (ID: 2238)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.013448788784444332
    2. 'i' → logprob: -4.638448715209961
    3. 'length' → logprob: -6.513448715209961
    4. ' k' → logprob: -6.888448715209961
    5. 'l' → logprob: -7.888448715209961
    6. 'val' → logprob: -8.013448715209961
    7. 'n' → logprob: -8.513448715209961
    8. ' length' → logprob: -9.888448715209961
    9. ' i' → logprob: -9.888448715209961
    10. 'v' → logprob: -10.013448715209961

Token 694: ' pile' (ID: 39732)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.3526610732078552
    2. 'x' → logprob: -1.2276611328125
    3. '(' → logprob: -6.7276611328125
    4. 'val' → logprob: -7.1026611328125
    5. ' x' → logprob: -7.6026611328125
    6. 'def' → logprob: -7.8526611328125
    7. ' k' → logprob: -8.2276611328125
    8. 'n' → logprob: -8.7276611328125
    9. 'i' → logprob: -9.1026611328125
    10. '   ' → logprob: -9.1026611328125

Token 695: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.19798003137111664
    2. ':
' → logprob: -2.8229799270629883
    3. 'k' → logprob: -2.9479799270629883
    4. ',' → logprob: -3.1979799270629883
    5. '=' → logprob: -4.822979927062988
    6. 's' → logprob: -5.322979927062988
    7. ' =' → logprob: -5.822979927062988
    8. ' k' → logprob: -6.072979927062988
    9. 'n' → logprob: -6.572979927062988
    10. '   ' → logprob: -6.572979927062988

Token 696: ' moves' (ID: 19523)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.22069700062274933
    2. 'if' → logprob: -2.3456969261169434
    3. '   ' → logprob: -3.7206969261169434
    4. ' k' → logprob: -4.220696926116943
    5. ' if' → logprob: -4.345696926116943
    6. 'n' → logprob: -4.720696926116943
    7. 'res' → logprob: -4.845696926116943
    8. 'length' → logprob: -4.845696926116943
    9. 'val' → logprob: -5.220696926116943
    10. 'm' → logprob: -5.220696926116943

Token 697: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03864746913313866
    2. ' =' → logprob: -3.288647413253784
    3. '   ' → logprob: -7.913647651672363
    4. ' are' → logprob: -9.788647651672363
    5. '=set' → logprob: -10.163647651672363
    6. ':' → logprob: -10.288647651672363
    7. '=
' → logprob: -10.288647651672363
    8. ',' → logprob: -11.413647651672363
    9. ' ' → logprob: -11.538647651672363
    10. '=[]' → logprob: -11.788647651672363

Token 698: ' subtract' (ID: 71973)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.038783032447099686
    2. '{' → logprob: -3.288783073425293
    3. '{
' → logprob: -7.663783073425293
    4. '{x' → logprob: -9.413783073425293
    5. '
' → logprob: -9.788783073425293
    6. ' set' → logprob: -10.038783073425293
    7. '(set' → logprob: -10.663783073425293
    8. 'grund' → logprob: -11.038783073425293
    9. ' {' → logprob: -11.288783073425293
    10. '=set' → logprob: -12.163783073425293

Token 699: 'ing' (ID: 289)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7360478639602661
    2. '1' → logprob: -0.9860478639602661
    3. 'from' → logprob: -2.2360477447509766
    4. 'y' → logprob: -4.736047744750977
    5. 'val' → logprob: -5.236047744750977
    6. 's' → logprob: -5.611047744750977
    7. ' from' → logprob: -5.736047744750977
    8. '   ' → logprob: -6.111047744750977
    9. '    ' → logprob: -6.236047744750977
    10. '=' → logprob: -6.611047744750977

Token 700: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03585830703377724
    2. ' ' → logprob: -3.660858392715454
    3. 'from' → logprob: -5.535858154296875
    4. 'y' → logprob: -6.160858154296875
    5. ' y' → logprob: -7.160858154296875
    6. '```' → logprob: -7.535858154296875
    7. 'val' → logprob: -7.910858154296875
    8. ' from' → logprob: -8.035858154296875
    9. 'any' → logprob: -8.285858154296875
    10. ' val' → logprob: -8.660858154296875

Token 701: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.006325720809400082
    2. 'y' → logprob: -6.381325721740723
    3. 'val' → logprob: -6.506325721740723
    4. 'i' → logprob: -7.381325721740723
    5. 'from' → logprob: -7.381325721740723
    6. ' ' → logprob: -7.756325721740723
    7. 'v' → logprob: -7.756325721740723
    8. 'k' → logprob: -8.631325721740723
    9. '```' → logprob: -8.756325721740723
    10. 's' → logprob: -9.006325721740723

Token 702: '..' (ID: 485)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 703: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.32183387875556946
    2. ')' → logprob: -2.321833848953247
    3. '1' → logprob: -2.571833848953247
    4. 'val' → logprob: -3.196833848953247
    5. '<|end|>' → logprob: -3.821833848953247
    6. '```' → logprob: -5.071834087371826
    7. ' )' → logprob: -5.571834087371826
    8. 'seg' → logprob: -5.946834087371826
    9. 'se' → logprob: -6.196834087371826
    10. ' x' → logprob: -6.196834087371826

Token 704: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23020930588245392
    2. '
' → logprob: -2.6052093505859375
    3. ':
' → logprob: -2.8552093505859375
    4. ',' → logprob: -3.8552093505859375
    5. ':' → logprob: -4.2302093505859375
    6. '       ' → logprob: -4.3552093505859375
    7. ',
' → logprob: -4.8552093505859375
    8. 'from' → logprob: -5.1052093505859375
    9. ' from' → logprob: -5.9802093505859375
    10. '.' → logprob: -6.6052093505859375

Token 705: ' which' (ID: 1118)
  Prédit: 'mex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mex' → logprob: -1.328073501586914
    2. 'res' → logprob: -1.703073501586914
    3. '   ' → logprob: -1.953073501586914
    4. 'm' → logprob: -1.953073501586914
    5. ' res' → logprob: -2.828073501586914
    6. 'memo' → logprob: -3.078073501586914
    7. 'return' → logprob: -3.703073501586914
    8. 'result' → logprob: -3.828073501586914
    9. 'next' → logprob: -4.078073501586914
    10. 'moves' → logprob: -4.203073501586914

Token 706: ' goes' (ID: 8805)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8872223496437073
    2. 'means' → logprob: -1.8872222900390625
    3. 'is' → logprob: -2.0122222900390625
    4. 'return' → logprob: -2.6372222900390625
    5. '=' → logprob: -2.7622222900390625
    6. ' is' → logprob: -3.3872222900390625
    7. '#' → logprob: -3.5122222900390625
    8. 'results' → logprob: -4.3872222900390625
    9. ' means' → logprob: -4.3872222900390625
    10. 'returns' → logprob: -4.6372222900390625

Token 707: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.4951176941394806
    2. ' to' → logprob: -1.7451176643371582
    3. '=' → logprob: -2.245117664337158
    4. 'up' → logprob: -3.495117664337158
    5. ' =' → logprob: -4.370117664337158
    6. '+=' → logprob: -4.370117664337158
    7. '_to' → logprob: -4.870117664337158
    8. 'from' → logprob: -4.870117664337158
    9. 'down' → logprob: -5.370117664337158
    10. '[' → logprob: -5.495117664337158

Token 708: ' any' (ID: 1062)
  Prédit: 'grund'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'grund' → logprob: -0.14591050148010254
    2. '{' → logprob: -3.6459105014801025
    3. '[' → logprob: -3.7709105014801025
    4. '0' → logprob: -3.7709105014801025
    5. 'seg' → logprob: -4.270910263061523
    6. 'x' → logprob: -4.270910263061523
    7. 'set' → logprob: -4.520910263061523
    8. '[x' → logprob: -5.020910263061523
    9. '{x' → logprob: -5.270910263061523
    10. 'se' → logprob: -6.020910263061523

Token 709: ' smaller' (ID: 13679)
  Prédit: 'number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'number' → logprob: -0.5906849503517151
    2. 'subset' → logprob: -2.8406848907470703
    3. 'grund' → logprob: -2.8406848907470703
    4. 'value' → logprob: -3.0906848907470703
    5. 'sm' → logprob: -3.0906848907470703
    6. 'x' → logprob: -3.2156848907470703
    7. 'state' → logprob: -3.4656848907470703
    8. 'val' → logprob: -3.4656848907470703
    9. '0' → logprob: -4.21568489074707
    10. ' number' → logprob: -4.21568489074707

Token 710: ' number' (ID: 2086)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.7017467021942139
    2. ')' → logprob: -1.8267467021942139
    3. '(' → logprob: -2.076746702194214
    4. 'se' → logprob: -2.701746702194214
    5. 'seg' → logprob: -3.576746702194214
    6. '_' → logprob: -3.826746702194214
    7. 'val' → logprob: -4.451746940612793
    8. 'value' → logprob: -4.451746940612793
    9. '<|end|>' → logprob: -4.951746940612793
    10. 'segment' → logprob: -5.076746940612793

Token 711: ' <' (ID: 464)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09789291769266129
    2. '       ' → logprob: -3.472892999649048
    3. ':' → logprob: -3.972892999649048
    4. '
' → logprob: -4.097892761230469
    5. ',' → logprob: -4.472892761230469
    6. ':
' → logprob: -4.597892761230469
    7. ',
' → logprob: -6.597892761230469
    8. '.' → logprob: -7.722892761230469
    9. '{' → logprob: -8.222892761230469
    10. '(' → logprob: -8.222892761230469

Token 712: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -5.145118848304264e-05
    2. ' x' → logprob: -10.125051498413086
    3. '=' → logprob: -12.500051498413086
    4. 'se' → logprob: -12.625051498413086
    5. '<|end|>' → logprob: -13.375051498413086
    6. 'seg' → logprob: -13.875051498413086
    7. 'val' → logprob: -14.625051498413086
    8. '```' → logprob: -15.000051498413086
    9. 's' → logprob: -15.750051498413086
    10. '>x' → logprob: -16.000051498413086

Token 713: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0876653715968132
    2. '   ' → logprob: -2.837665319442749
    3. ',' → logprob: -4.587665557861328
    4. ':
' → logprob: -4.712665557861328
    5. '.' → logprob: -6.212665557861328
    6. '):' → logprob: -6.212665557861328
    7. ')' → logprob: -7.462665557861328
    8. '       ' → logprob: -7.962665557861328
    9. '{' → logprob: -8.212665557861328
    10. '):
' → logprob: -8.587665557861328

Token 714: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005305266007781029
    2. ':
' → logprob: -6.005305290222168
    3. ':' → logprob: -6.630305290222168
    4. ',' → logprob: -7.130305290222168
    5. '       ' → logprob: -8.380305290222168
    6. '
' → logprob: -8.630305290222168
    7. '):
' → logprob: -9.630305290222168
    8. ',
' → logprob: -10.130305290222168
    9. '    
' → logprob: -10.255305290222168
    10. '.' → logprob: -10.755305290222168

Token 715: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.052387796342372894
    2. 'moves' → logprob: -3.4273877143859863
    3. 'mex' → logprob: -4.552387714385986
    4. 's' → logprob: -6.302387714385986
    5. 'if' → logprob: -6.802387714385986
    6. 'next' → logprob: -6.927387714385986
    7. 'vals' → logprob: -7.052387714385986
    8. '       ' → logprob: -7.552387714385986
    9. ' moves' → logprob: -8.052388191223145
    10. 'm' → logprob: -8.177388191223145

Token 716: ' We' (ID: 1416)
  Prédit: 'moves'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'moves' → logprob: -1.2265594005584717
    2. 'next' → logprob: -1.6015594005584717
    3. '   ' → logprob: -1.9765594005584717
    4. 's' → logprob: -2.2265594005584717
    5. 'mex' → logprob: -2.2265594005584717
    6. 'vals' → logprob: -2.4765594005584717
    7. 'm' → logprob: -4.226559638977051
    8. 'move' → logprob: -4.351559638977051
    9. 'nim' → logprob: -4.476559638977051
    10. 'sg' → logprob: -5.101559638977051

Token 717: ' can' (ID: 665)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.3504396975040436
    2. '   ' → logprob: -1.6004396677017212
    3. 'continue' → logprob: -3.4754397869110107
    4. ' return' → logprob: -3.9754397869110107
    5. '       ' → logprob: -4.725439548492432
    6. '=' → logprob: -5.100439548492432
    7. '```' → logprob: -5.350439548492432
    8. 'can' → logprob: -5.850439548492432
    9. 'have' → logprob: -5.850439548492432
    10. '
' → logprob: -5.850439548492432

Token 718: ' compute' (ID: 23864)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.1793610006570816
    2. 'res' → logprob: -2.42936110496521
    3. 'memo' → logprob: -3.92936110496521
    4. 'val' → logprob: -4.054360866546631
    5. '   ' → logprob: -4.554360866546631
    6. 'cache' → logprob: -5.304360866546631
    7. 'm' → logprob: -5.429360866546631
    8. 'try' → logprob: -5.429360866546631
    9. 'vals' → logprob: -5.679360866546631
    10. 'compute' → logprob: -6.054360866546631

Token 719: ' grund' (ID: 34475)
  Prédit: 'mex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mex' → logprob: -0.42101016640663147
    2. 'next' → logprob: -2.4210102558135986
    3. 'moves' → logprob: -2.4210102558135986
    4. 'grund' → logprob: -2.9210102558135986
    5. 'res' → logprob: -3.4210102558135986
    6. 'sub' → logprob: -3.9210102558135986
    7. 's' → logprob: -4.2960100173950195
    8. 'm' → logprob: -4.4210100173950195
    9. 'vals' → logprob: -4.9210100173950195
    10. 'move' → logprob: -5.0460100173950195

Token 720: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -1.4855663721391466e-05
    2. '   ' → logprob: -12.000015258789062
    3. '       ' → logprob: -13.250015258789062
    4. 'py' → logprob: -14.000015258789062
    5. 'gy' → logprob: -14.000015258789062
    6. 'y's' → logprob: -14.000015258789062
    7. ' ' → logprob: -14.375015258789062
    8. '[y' → logprob: -14.750015258789062
    9. 'ky' → logprob: -15.000015258789062
    10. 'by' → logprob: -15.125015258789062

Token 721: ' by' (ID: 656)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4490415155887604
    2. ' =' → logprob: -1.449041485786438
    3. '_values' → logprob: -2.8240416049957275
    4. '_vals' → logprob: -4.074041366577148
    5. '_x' → logprob: -4.949041366577148
    6. '(x' → logprob: -5.074041366577148
    7. '[' → logprob: -5.199041366577148
    8. '(' → logprob: -5.199041366577148
    9. '_val' → logprob: -5.199041366577148
    10. 's' → logprob: -5.324041366577148

Token 722: ' mex' (ID: 32410)
  Prédit: 'memo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'memo' → logprob: -0.3295905590057373
    2. 'def' → logprob: -1.7045905590057373
    3. 'res' → logprob: -3.2045905590057373
    4. 'return' → logprob: -3.5795905590057373
    5. '   ' → logprob: -4.829590797424316
    6. '
' → logprob: -5.829590797424316
    7. 'mex' → logprob: -5.954590797424316
    8. 'm' → logprob: -5.954590797424316
    9. 'if' → logprob: -6.204590797424316
    10. '0' → logprob: -6.454590797424316

Token 723: ' of' (ID: 328)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.46031859517097473
    2. '   ' → logprob: -1.5853185653686523
    3. '{' → logprob: -2.5853185653686523
    4. '=' → logprob: -2.8353185653686523
    5. 's' → logprob: -5.085318565368652
    6. '(
' → logprob: -5.585318565368652
    7. '=set' → logprob: -5.710318565368652
    8. '({' → logprob: -5.960318565368652
    9. '_set' → logprob: -6.085318565368652
    10. '={' → logprob: -6.210318565368652

Token 724: ' grund' (ID: 34475)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{' → logprob: -0.0039316448383033276
    2. '{s' → logprob: -5.753931522369385
    3. '{
' → logprob: -7.878931522369385
    4. 'set' → logprob: -8.753931999206543
    5. '{i' → logprob: -9.378931999206543
    6. '{sub' → logprob: -9.503931999206543
    7. '{x' → logprob: -9.878931999206543
    8. '{k' → logprob: -12.503931999206543
    9. ' {' → logprob: -13.753931999206543
    10. '{return' → logprob: -14.003931999206543

Token 725: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.004381705541163683
    2. 'ies' → logprob: -5.6293816566467285
    3. '{' → logprob: -7.3793816566467285
    4. '{
' → logprob: -9.129382133483887
    5. 's' → logprob: -11.754382133483887
    6. '(' → logprob: -12.379382133483887
    7. '[' → logprob: -12.629382133483887
    8. '[y' → logprob: -12.629382133483887
    9. '(
' → logprob: -12.879382133483887
    10. '   ' → logprob: -12.879382133483887

Token 726: '(y' (ID: 14684)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.7338170409202576
    2. '_values' → logprob: -1.8588171005249023
    3. '_set' → logprob: -1.9838171005249023
    4. '{' → logprob: -2.3588171005249023
    5. 'set' → logprob: -2.4838171005249023
    6. '_vals' → logprob: -3.6088171005249023
    7. 'values' → logprob: -5.233817100524902
    8. '{
' → logprob: -5.483817100524902
    9. '{s' → logprob: -5.733817100524902
    10. 'vals' → logprob: -5.858817100524902

Token 727: ')' (ID: 8)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5195959210395813
    2. ' for' → logprob: -1.1445958614349365
    3. ')' → logprob: -2.6445958614349365
    4. 's' → logprob: -4.269596099853516
    5. ' ' → logprob: -7.519596099853516
    6. '
' → logprob: -8.269596099853516
    7. '+' → logprob: -8.519596099853516
    8. ',' → logprob: -8.894596099853516
    9. ')+' → logprob: -9.144596099853516
    10. 'y' → logprob: -9.144596099853516

Token 728: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.5497380495071411
    2. '(' → logprob: -1.7997380495071411
    3. '   ' → logprob: -1.7997380495071411
    4. ' =' → logprob: -2.5497379302978516
    5. '=' → logprob: -2.9247379302978516
    6. 's' → logprob: -3.0497379302978516
    7. 'from' → logprob: -3.1747379302978516
    8. ' for' → logprob: -3.1747379302978516
    9. '(
' → logprob: -3.4247379302978516
    10. '{' → logprob: -3.5497379302978516

Token 729: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.00018006093159783632
    2. ' y' → logprob: -8.6251802444458
    3. '	y' → logprob: -15.3751802444458
    4. '```' → logprob: -16.000179290771484
    5. 'y's' → logprob: -17.250179290771484
    6. 'all' → logprob: -17.500179290771484
    7. 'x' → logprob: -17.625179290771484
    8. ' ' → logprob: -17.750179290771484
    9. '`' → logprob: -18.250179290771484
    10. 'Y' → logprob: -18.625179290771484

Token 730: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.023287521675229073
    2. ' in' → logprob: -3.773287534713745
    3. 'y' → logprob: -10.898287773132324
    4. 'i' → logprob: -11.148287773132324
    5. ' ' → logprob: -13.023287773132324
    6. ',' → logprob: -13.148287773132324
    7. 'from' → logprob: -13.898287773132324
    8. ' i' → logprob: -14.023287773132324
    9. ')' → logprob: -14.523287773132324
    10. 'n' → logprob: -14.773287773132324

Token 731: ' [' (ID: 723)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -1.0921942703134846e-05
    2. ' range' → logprob: -11.50001049041748
    3. '
' → logprob: -15.25001049041748
    4. 'se' → logprob: -15.25001049041748
    5. '(range' → logprob: -15.25001049041748
    6. '`' → logprob: -18.625011444091797
    7. '```' → logprob: -18.625011444091797
    8. '	range' → logprob: -18.625011444091797
    9. 'rang' → logprob: -18.875011444091797
    10. 'x' → logprob: -19.500011444091797

Token 732: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.05940231308341026
    2. '1' → logprob: -3.3094022274017334
    3. 'x' → logprob: -4.4344024658203125
    4. 'range' → logprob: -4.6844024658203125
    5. ' range' → logprob: -11.684402465820312
    6. '
' → logprob: -12.059402465820312
    7. '   ' → logprob: -12.934402465820312
    8. '```' → logprob: -13.059402465820312
    9. '`' → logprob: -13.309402465820312
    10. ')' → logprob: -13.434402465820312

Token 733: ',x' (ID: 29748)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02192404866218567
    2. ',x' → logprob: -3.8969240188598633
    3. ',
' → logprob: -6.896924018859863
    4. ' ,' → logprob: -8.521924018859863
    5. '1' → logprob: -9.646924018859863
    6. '+' → logprob: -9.896924018859863
    7. 'x' → logprob: -10.146924018859863
    8. '<x' → logprob: -12.896924018859863
    9. ',y' → logprob: -13.146924018859863
    10. ',<' → logprob: -13.521924018859863

Token 734: '-' (ID: 12)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1304944008588791
    2. '):
' → logprob: -3.0054943561553955
    3. ')' → logprob: -3.1304943561553955
    4. '+' → logprob: -3.8804943561553955
    5. '-' → logprob: -6.130494594573975
    6. ']:' → logprob: -6.630494594573975
    7. ' ):' → logprob: -6.755494594573975
    8. ']):' → logprob: -6.880494594573975
    9. ']' → logprob: -7.005494594573975
    10. ':' → logprob: -8.130494117736816

Token 735: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0087516784551553e-05
    2. ']' → logprob: -12.50001049041748
    3. ' ' → logprob: -12.75001049041748
    4. ')' → logprob: -13.00001049041748
    5. 'x' → logprob: -15.00001049041748
    6. '```' → logprob: -15.12501049041748
    7. '])' → logprob: -15.62501049041748
    8. '
' → logprob: -16.125009536743164
    9. '`' → logprob: -17.625009536743164
    10. '+' → logprob: -18.500009536743164

Token 736: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.523347795009613
    2. ']:
' → logprob: -1.7733478546142578
    3. ']:' → logprob: -2.273347854614258
    4. '   ' → logprob: -2.523347854614258
    5. ']
' → logprob: -3.648347854614258
    6. '):
' → logprob: -4.148347854614258
    7. '       ' → logprob: -5.523347854614258
    8. '):' → logprob: -5.523347854614258
    9. ')' → logprob: -6.148347854614258
    10. ':' → logprob: -6.898347854614258

Token 737: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009890780784189701
    2. ':' → logprob: -4.759890556335449
    3. '
' → logprob: -7.759890556335449
    4. ':
' → logprob: -8.00989055633545
    5. '    
' → logprob: -8.50989055633545
    6. '{' → logprob: -9.75989055633545
    7. '```' → logprob: -10.00989055633545
    8. ',' → logprob: -10.38489055633545
    9. '\n' → logprob: -10.63489055633545
    10. '       ' → logprob: -10.63489055633545

Token 738: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03932448849081993
    2. 's' → logprob: -4.0393242835998535
    3. 'mex' → logprob: -4.5393242835998535
    4. 'vals' → logprob: -5.9143242835998535
    5. 'moves' → logprob: -6.1643242835998535
    6. 'sg' → logprob: -6.6643242835998535
    7. 'm' → logprob: -6.9143242835998535
    8. 'g' → logprob: -7.1643242835998535
    9. 'res' → logprob: -7.7893242835998535
    10. 'next' → logprob: -7.9143242835998535

Token 739: ' To' (ID: 2514)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.032536596059799194
    2. 'mex' → logprob: -3.782536506652832
    3. 's' → logprob: -5.657536506652832
    4. 'm' → logprob: -6.532536506652832
    5. 'vals' → logprob: -7.157536506652832
    6. 'memo' → logprob: -7.532536506652832
    7. 'moves' → logprob: -7.532536506652832
    8. 'res' → logprob: -7.532536506652832
    9. 'g' → logprob: -7.907536506652832
    10. 'if' → logprob: -8.032536506652832

Token 740: ' optimize' (ID: 40398)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'val' → logprob: -1.0752930641174316
    2. '
' → logprob: -1.9502930641174316
    3. 'res' → logprob: -1.9502930641174316
    4. 'memo' → logprob: -2.5752930641174316
    5. 'def' → logprob: -2.8252930641174316
    6. '   ' → logprob: -2.9502930641174316
    7. ' res' → logprob: -3.2002930641174316
    8. ' val' → logprob: -3.5752930641174316
    9. 'if' → logprob: -3.7002930641174316
    10. 'm' → logprob: -4.450293064117432

Token 741: ':' (ID: 25)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08553354442119598
    2. '       ' → logprob: -3.335533618927002
    3. ' if' → logprob: -4.335533618927002
    4. '
' → logprob: -4.710533618927002
    5. ' for' → logprob: -5.585533618927002
    6. ':
' → logprob: -5.585533618927002
    7. 'if' → logprob: -5.960533618927002
    8. ':' → logprob: -6.710533618927002
    9. ' memo' → logprob: -6.710533618927002
    10. 'memo' → logprob: -6.710533618927002

Token 742: ' For' (ID: 2214)
  Prédit: 'mex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mex' → logprob: -1.1577932834625244
    2. 'vals' → logprob: -1.4077932834625244
    3. 'if' → logprob: -2.4077932834625244
    4. 'res' → logprob: -2.5327932834625244
    5. 'memo' → logprob: -2.9077932834625244
    6. '   ' → logprob: -2.9077932834625244
    7. 'm' → logprob: -3.0327932834625244
    8. 'g' → logprob: -3.0327932834625244
    9. 'grund' → logprob: -4.407793045043945
    10. 'val' → logprob: -4.782793045043945

Token 743: ' (' (ID: 350)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.6554818749427795
    2. 'k' → logprob: -0.9054818749427795
    3. 'v' → logprob: -4.030481815338135
    4. 'val' → logprob: -4.155481815338135
    5. 'y' → logprob: -4.280481815338135
    6. 'seg' → logprob: -4.780481815338135
    7. 'length' → logprob: -5.905481815338135
    8. 'i' → logprob: -6.155481815338135
    9. 'l' → logprob: -6.405481815338135
    10. 'n' → logprob: -6.530481815338135

Token 744: '2' (ID: 17)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.008610676042735577
    2. 'seg' → logprob: -5.883610725402832
    3. 'se' → logprob: -6.508610725402832
    4. ')' → logprob: -7.008610725402832
    5. 'k' → logprob: -7.258610725402832
    6. '(' → logprob: -7.258610725402832
    7. '(x' → logprob: -7.508610725402832
    8. 'len' → logprob: -8.258610725402832
    9. 'length' → logprob: -8.508610725402832
    10. '1' → logprob: -8.633610725402832

Token 745: '^' (ID: 61)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.028414957225322723
    2. ')' → logprob: -3.9034149646759033
    3. ' **' → logprob: -5.528414726257324
    4. '**)' → logprob: -6.278414726257324
    5. ')**' → logprob: -7.403414726257324
    6. '*' → logprob: -8.153414726257324
    7. '^' → logprob: -8.528414726257324
    8. '
' → logprob: -8.653414726257324
    9. '#' → logprob: -9.403414726257324
    10. '))' → logprob: -9.778414726257324

Token 746: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.002617989666759968
    2. 'x' → logprob: -6.877617835998535
    3. ')' → logprob: -7.127617835998535
    4. '(' → logprob: -8.252617835998535
    5. 'length' → logprob: -8.877617835998535
    6. '
' → logprob: -9.502617835998535
    7. '**' → logprob: -10.002617835998535
    8. '31' → logprob: -10.752617835998535
    9. '63' → logprob: -10.877617835998535
    10. '64' → logprob: -11.127617835998535

Token 747: ')-' (ID: 14080)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.15946325659751892
    2. ')-' → logprob: -2.1594631671905518
    3. '-' → logprob: -3.9094631671905518
    4. ' -' → logprob: -4.909463405609131
    5. ' )' → logprob: -6.034463405609131
    6. 'k' → logprob: -7.034463405609131
    7. '_' → logprob: -8.284462928771973
    8. '+' → logprob: -9.034462928771973
    9. ' ' → logprob: -9.034462928771973
    10. '-)' → logprob: -9.159462928771973

Token 748: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00631210021674633
    2. 'k' → logprob: -5.506311893463135
    3. 'x' → logprob: -6.381311893463135
    4. 'val' → logprob: -8.631312370300293
    5. ')' → logprob: -9.131312370300293
    6. '
' → logprob: -9.506312370300293
    7. 'length' → logprob: -10.256312370300293
    8. '(' → logprob: -10.881312370300293
    9. '```' → logprob: -10.881312370300293
    10. '#' → logprob: -11.006312370300293

Token 749: ' numbers' (ID: 8663)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.43737027049064636
    2. ':' → logprob: -1.1873703002929688
    3. ',' → logprob: -3.6873703002929688
    4. '):
' → logprob: -4.687370300292969
    5. '   ' → logprob: -5.562370300292969
    6. '
' → logprob: -6.312370300292969
    7. '):' → logprob: -6.437370300292969
    8. 'val' → logprob: -7.062370300292969
    9. ' :' → logprob: -7.437370300292969
    10. ' =' → logprob: -7.437370300292969

Token 750: ',' (ID: 11)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.09445256739854813
    2. ':' → logprob: -3.2194526195526123
    3. '       ' → logprob: -3.8444526195526123
    4. '   ' → logprob: -3.8444526195526123
    5. '):
' → logprob: -5.594452381134033
    6. '
' → logprob: -6.469452381134033
    7. ',' → logprob: -6.844452381134033
    8. ' =' → logprob: -8.594452857971191
    9. '=' → logprob: -8.719452857971191
    10. 'def' → logprob: -8.969452857971191

Token 751: ' grund' (ID: 34475)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.4561400413513184
    2. 'if' → logprob: -1.7061400413513184
    3. 'g' → logprob: -1.9561400413513184
    4. 'res' → logprob: -1.9561400413513184
    5. 'grund' → logprob: -2.5811400413513184
    6. 'memo' → logprob: -2.9561400413513184
    7. 'm' → logprob: -3.5811400413513184
    8. '#' → logprob: -3.9561400413513184
    9. 'mex' → logprob: -4.081140041351318
    10. 'val' → logprob: -4.081140041351318

Token 752: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -8.41866585687967e-06
    2. '_y' → logprob: -13.500008583068848
    3. 'ies' → logprob: -13.500008583068848
    4. '_' → logprob: -14.000008583068848
    5. 'y's' → logprob: -14.000008583068848
    6. ')' → logprob: -14.500008583068848
    7. '```' → logprob: -14.625008583068848
    8. ' y' → logprob: -14.875008583068848
    9. '{' → logprob: -14.875008583068848
    10. '   ' → logprob: -15.250008583068848

Token 753: ' is' (ID: 382)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9875277876853943
    2. '_values' → logprob: -1.487527847290039
    3. '=' → logprob: -1.987527847290039
    4. '_cache' → logprob: -2.237527847290039
    5. 's' → logprob: -2.362527847290039
    6. '_vals' → logprob: -3.862527847290039
    7. 'cache' → logprob: -4.862527847290039
    8. '_val' → logprob: -4.987527847290039
    9. 'values' → logprob: -5.487527847290039
    10. '[' → logprob: -5.737527847290039

Token 754: ' k' (ID: 372)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.9387760162353516
    2. 'k' → logprob: -1.4387760162353516
    3. 'x' → logprob: -1.6887760162353516
    4. 'len' → logprob: -2.9387760162353516
    5. 'se' → logprob: -3.4387760162353516
    6. '(x' → logprob: -3.9387760162353516
    7. '(lambda' → logprob: -4.188776016235352
    8. '(' → logprob: -4.563776016235352
    9. 'lambda' → logprob: -4.563776016235352
    10. '(length' → logprob: -4.813776016235352

Token 755: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8964117169380188
    2. ':' → logprob: -1.021411657333374
    3. '
' → logprob: -2.646411657333374
    4. ':
' → logprob: -2.771411657333374
    5. '       ' → logprob: -3.896411657333374
    6. ' +' → logprob: -4.771411895751953
    7. '[' → logprob: -4.771411895751953
    8. ')' → logprob: -4.771411895751953
    9. '**' → logprob: -4.896411895751953
    10. '+' → logprob: -5.021411895751953

Token 756: 'proved' (ID: 160598)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05661304295063019
    2. ')
' → logprob: -3.056612968444824
    3. '+' → logprob: -5.431612968444824
    4. '   ' → logprob: -5.806612968444824
    5. ')
' → logprob: -8.181612968444824
    6. ' +' → logprob: -9.056612968444824
    7. '       ' → logprob: -10.056612968444824
    8. ' )' → logprob: -10.306612968444824
    9. '):' → logprob: -10.931612968444824
    10. '
' → logprob: -10.931612968444824

Token 757: ' by' (ID: 656)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008386445231735706
    2. '   ' → logprob: -5.633386611938477
    3. '+' → logprob: -6.258386611938477
    4. ')
' → logprob: -6.758386611938477
    5. ' by' → logprob: -7.758386611938477
    6. ' +' → logprob: -8.008386611938477
    7. '
' → logprob: -8.633386611938477
    8. 'def' → logprob: -8.758386611938477
    9. '       ' → logprob: -9.258386611938477
    10. ' )' → logprob: -9.258386611938477

Token 758: ' experiment' (ID: 12527)
  Prédit: 'ind'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ind' → logprob: -0.03453366458415985
    2. ' induction' → logprob: -3.409533739089966
    3. '
' → logprob: -7.909533500671387
    4. 'def' → logprob: -8.534533500671387
    5. 'len' → logprob: -9.284533500671387
    6. 'k' → logprob: -9.659533500671387
    7. 'indent' → logprob: -10.284533500671387
    8. 'return' → logprob: -10.534533500671387
    9. ')' → logprob: -10.659533500671387
    10. '(ind' → logprob: -11.159533500671387

Token 759: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4009983241558075
    2. ')
' → logprob: -1.2759983539581299
    3. '   ' → logprob: -3.02599835395813
    4. '       ' → logprob: -6.775998115539551
    5. '):' → logprob: -7.275998115539551
    6. '):
' → logprob: -7.650998115539551
    7. ')
' → logprob: -8.77599811553955
    8. ':' → logprob: -9.77599811553955
    9. 'def' → logprob: -10.27599811553955
    10. '
' → logprob: -10.27599811553955

Token 760: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08974497020244598
    2. ':' → logprob: -2.714745044708252
    3. ')' → logprob: -4.839745044708252
    4. '       ' → logprob: -6.089745044708252
    5. ':
' → logprob: -6.214745044708252
    6. '
' → logprob: -6.589745044708252
    7. '(' → logprob: -6.964745044708252
    8. ' ' → logprob: -7.089745044708252
    9. '	return' → logprob: -7.839745044708252
    10. ' return' → logprob: -7.839745044708252

Token 761: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.16544057428836823
    2. '   ' → logprob: -2.290440559387207
    3. '       ' → logprob: -3.165440559387207
    4. ' return' → logprob: -4.790440559387207
    5. '
' → logprob: -8.165440559387207
    6. '	return' → logprob: -8.415440559387207
    7. 'k' → logprob: -10.040440559387207
    8. 'ret' → logprob: -10.415440559387207
    9. '           ' → logprob: -10.540440559387207
    10. ' ' → logprob: -10.915440559387207

Token 762: ' check' (ID: 2371)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4098541736602783
    2. 'return' → logprob: -1.2848541736602783
    3. '       ' → logprob: -2.9098541736602783
    4. ' return' → logprob: -5.659853935241699
    5. '```' → logprob: -7.409853935241699
    6. 'k' → logprob: -8.4098539352417
    7. 'if' → logprob: -8.6598539352417
    8. '
' → logprob: -8.9098539352417
    9. ' ' → logprob: -9.4098539352417
    10. '	return' → logprob: -9.6598539352417

Token 763: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5918708443641663
    2. ' if' → logprob: -1.0918707847595215
    3. 'len' → logprob: -2.7168707847595215
    4. '   ' → logprob: -3.4668707847595215
    5. ' len' → logprob: -5.5918707847595215
    6. 'x' → logprob: -5.7168707847595215
    7. ' x' → logprob: -6.4668707847595215
    8. 'length' → logprob: -6.5918707847595215
    9. 'return' → logprob: -6.7168707847595215
    10. ' return' → logprob: -6.9668707847595215

Token 764: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.4715551435947418
    2. '(x' → logprob: -1.0965551137924194
    3. ' (' → logprob: -4.221555233001709
    4. ' x' → logprob: -4.596555233001709
    5. '(bin' → logprob: -5.096555233001709
    6. '(se' → logprob: -5.596555233001709
    7. '(' → logprob: -5.971555233001709
    8. 'bin' → logprob: -6.471555233001709
    9. '(seg' → logprob: -7.221555233001709
    10. 'all' → logprob: -7.721555233001709

Token 765: '+' (ID: 10)
  Prédit: '&'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '&' → logprob: -0.3008492588996887
    2. '+' → logprob: -2.050849199295044
    3. '==' → logprob: -2.300849199295044
    4. ' &' → logprob: -3.675849199295044
    5. '&(' → logprob: -5.800849437713623
    6. ' ==' → logprob: -6.550849437713623
    7. '.bit' → logprob: -7.800849437713623
    8. ' +' → logprob: -8.175848960876465
    9. 'bit' → logprob: -8.550848960876465
    10. 'and' → logprob: -9.050848960876465

Token 766: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.36574100604048e-06
    2. ' ' → logprob: -12.875004768371582
    3. '=' → logprob: -13.500004768371582
    4. '```' → logprob: -15.625004768371582
    5. '+' → logprob: -17.375003814697266
    6. '==' → logprob: -17.500003814697266
    7. '`' → logprob: -18.000003814697266
    8. 's' → logprob: -18.000003814697266
    9. '   ' → logprob: -18.250003814697266
    10. '#' → logprob: -18.375003814697266

Token 767: ' is' (ID: 382)
  Prédit: '&'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '&' → logprob: -0.07225025445222855
    2. '&(' → logprob: -3.1972503662109375
    3. ' &' → logprob: -3.5722503662109375
    4. '==' → logprob: -8.447250366210938
    5. '&amp' → logprob: -8.822250366210938
    6. 'and' → logprob: -9.072250366210938
    7. ' &(' → logprob: -9.197250366210938
    8. '&type' → logprob: -10.822250366210938
    9. '&a' → logprob: -11.072250366210938
    10. '&p' → logprob: -11.072250366210938

Token 768: ' power' (ID: 3470)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.11870307475328445
    2. ' (' → logprob: -2.8687031269073486
    3. '1' → logprob: -3.2437031269073486
    4. 'pow' → logprob: -5.1187028884887695
    5. '((' → logprob: -5.8687028884887695
    6. '(x' → logprob: -6.3687028884887695
    7. '2' → logprob: -6.7437028884887695
    8. '(pow' → logprob: -6.8687028884887695
    9. '0' → logprob: -7.2437028884887695
    10. '(int' → logprob: -7.8687028884887695

Token 769: ' of' (ID: 328)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.028415309265255928
    2. 'of' → logprob: -4.528415203094482
    3. '_of' → logprob: -4.653415203094482
    4. '   ' → logprob: -5.653415203094482
    5. ' _' → logprob: -6.278415203094482
    6. '(' → logprob: -7.153415203094482
    7. ' of' → logprob: -7.278415203094482
    8. '=' → logprob: -8.27841567993164
    9. ' ' → logprob: -9.02841567993164
    10. ')' → logprob: -9.27841567993164

Token 770: ' two' (ID: 1920)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00020067949662916362
    2. 'two' → logprob: -9.125200271606445
    3. ' ' → logprob: -9.875200271606445
    4. ' two' → logprob: -10.250200271606445
    5. 'Two' → logprob: -12.625200271606445
    6. '_two' → logprob: -14.125200271606445
    7. '```' → logprob: -14.750200271606445
    8. '-two' → logprob: -16.375200271606445
    9. '(' → logprob: -16.500200271606445
    10. '۲' → logprob: -16.625200271606445

Token 771: '
' (ID: 198)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.2869506776332855
    2. '   ' → logprob: -2.6619505882263184
    3. 'and' → logprob: -3.0369505882263184
    4. '(' → logprob: -3.6619505882263184
    5. ':' → logprob: -3.6619505882263184
    6. ' ==' → logprob: -4.036950588226318
    7. ':
' → logprob: -4.036950588226318
    8. 'if' → logprob: -4.161950588226318
    9. '[' → logprob: -5.286950588226318
    10. ' ' → logprob: -5.536950588226318

Token 772: '       ' (ID: 309)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.17270734906196594
    2. '   ' → logprob: -2.1727073192596436
    3. 'and' → logprob: -3.7977073192596436
    4. ':
' → logprob: -4.672707557678223
    5. ':' → logprob: -5.797707557678223
    6. 'if' → logprob: -5.922707557678223
    7. ' ==' → logprob: -6.047707557678223
    8. ' if' → logprob: -6.547707557678223
    9. ' =' → logprob: -7.422707557678223
    10. ' ' → logprob: -7.422707557678223

Token 773: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.5894736051559448
    2. ' if' → logprob: -0.8394736051559448
    3. '   ' → logprob: -4.339473724365234
    4. ' nxt' → logprob: -8.964473724365234
    5. '    ' → logprob: -10.089473724365234
    6. '       ' → logprob: -10.464473724365234
    7. ' n' → logprob: -10.589473724365234
    8. 'n' → logprob: -10.839473724365234
    9. 't' → logprob: -11.089473724365234
    10. ' x' → logprob: -11.214473724365234

Token 774: ' (' (ID: 350)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.009065714664757252
    2. 'x' → logprob: -5.009065628051758
    3. ' (' → logprob: -6.384065628051758
    4. '((' → logprob: -7.384065628051758
    5. '(bin' → logprob: -11.259065628051758
    6. ' x' → logprob: -11.384065628051758
    7. '(' → logprob: -11.509065628051758
    8. 'bin' → logprob: -13.759065628051758
    9. ' ((' → logprob: -14.759065628051758
    10. ' ' → logprob: -15.009065628051758

Token 775: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0005533903022296727
    2. '(x' → logprob: -7.500553607940674
    3. ' x' → logprob: -14.750553131103516
    4. ' (' → logprob: -17.625553131103516
    5. '(' → logprob: -18.000553131103516
    6. '{x' → logprob: -19.500553131103516
    7. '((' → logprob: -20.000553131103516
    8. '	x' → logprob: -20.500553131103516
    9. '"x' → logprob: -20.625553131103516
    10. ')x' → logprob: -20.875553131103516

Token 776: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6380227208137512
    2. '&' → logprob: -0.7630227208137512
    3. ' &' → logprob: -5.6380228996276855
    4. ' +' → logprob: -7.0130228996276855
    5. '+x' → logprob: -8.138022422790527
    6. '(x' → logprob: -8.388022422790527
    7. ')' → logprob: -8.888022422790527
    8. 'x' → logprob: -8.888022422790527
    9. '&(' → logprob: -10.513022422790527
    10. ')&' → logprob: -10.763022422790527

Token 777: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.125
    3. '&' → logprob: -17.375
    4. '(' → logprob: -18.375
    5. '0' → logprob: -19.0
    6. '   ' → logprob: -19.25
    7. '```' → logprob: -19.625
    8. ')' → logprob: -20.5
    9. '=' → logprob: -20.5
    10. '  ' → logprob: -20.875

Token 778: ')&' (ID: 34370)
  Prédit: '&'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '&' → logprob: -0.030310258269309998
    2. ' &' → logprob: -3.5303101539611816
    3. ')' → logprob: -7.780310153961182
    4. ')&' → logprob: -9.03031063079834
    5. '&amp' → logprob: -11.53031063079834
    6. '&(' → logprob: -11.90531063079834
    7. '&a' → logprob: -13.78031063079834
    8. '&
' → logprob: -14.03031063079834
    9. '&A' → logprob: -14.28031063079834
    10. '&gt' → logprob: -14.40531063079834

Token 779: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -9.317247167928144e-05
    2. ' x' → logprob: -9.375093460083008
    3. '(x' → logprob: -12.000093460083008
    4. '(' → logprob: -15.000093460083008
    5. '_x' → logprob: -15.000093460083008
    6. '```' → logprob: -15.000093460083008
    7. '	x' → logprob: -15.125093460083008
    8. '"x' → logprob: -15.750093460083008
    9. ')x' → logprob: -16.000093460083008
    10. '`' → logprob: -16.000093460083008

Token 780: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.014184308238327503
    2. ' ==' → logprob: -4.264184474945068
    3. '=' → logprob: -11.38918399810791
    4. ')==' → logprob: -12.01418399810791
    5. ']==' → logprob: -13.38918399810791
    6. '==
' → logprob: -14.13918399810791
    7. '===' → logprob: -14.51418399810791
    8. '0' → logprob: -15.38918399810791
    9. ')' → logprob: -15.76418399810791
    10. '()==' → logprob: -15.88918399810791

Token 781: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.625000953674316
    3. '000' → logprob: -19.75
    4. '۰' → logprob: -19.875
    5. '   ' → logprob: -21.0
    6. '00' → logprob: -21.375
    7. '```' → logprob: -22.0
    8. '٠' → logprob: -22.25
    9. '০' → logprob: -22.5
    10. '=' → logprob: -22.625

Token 782: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.250000953674316
    3. 'x' → logprob: -17.0
    4. '۰' → logprob: -20.25
    5. '(x' → logprob: -20.75
    6. '000' → logprob: -20.875
    7. '(' → logprob: -21.0
    8. '   ' → logprob: -21.625
    9. '=' → logprob: -22.125
    10. '00' → logprob: -22.25

Token 783: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10030360519886017
    2. ':
' → logprob: -2.3503036499023438
    3. ':return' → logprob: -9.725303649902344
    4. '       ' → logprob: -11.225303649902344
    5. ':
' → logprob: -12.100303649902344
    6. '):
' → logprob: -12.100303649902344
    7. '   ' → logprob: -12.225303649902344
    8. '):' → logprob: -12.725303649902344
    9. ' and' → logprob: -13.725303649902344
    10. ' :' → logprob: -13.850303649902344

Token 784: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006778373382985592
    2. '           ' → logprob: -5.256778240203857
    3. ' return' → logprob: -7.256778240203857
    4. 'return' → logprob: -7.381778240203857
    5. '
' → logprob: -9.006778717041016
    6. '   ' → logprob: -10.131778717041016
    7. ':' → logprob: -11.631778717041016
    8. ':
' → logprob: -12.006778717041016
    9. '      ' → logprob: -12.256778717041016
    10. ',' → logprob: -12.506778717041016

Token 785: ' res' (ID: 694)
  Prédit: 'memo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'memo' → logprob: -0.6989908218383789
    2. 'length' → logprob: -1.073990821838379
    3. '           ' → logprob: -3.198990821838379
    4. 'return' → logprob: -3.448990821838379
    5. 'val' → logprob: -3.948990821838379
    6. 'k' → logprob: -4.073990821838379
    7. 'import' → logprob: -4.448990821838379
    8. 'res' (adapté à ' res') → logprob: -4.823990821838379
    9. 'mem' → logprob: -5.698990821838379
    10. 'm' → logprob: -5.698990821838379

Token 786: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.693149983882904
    2. ' =' → logprob: -0.693149983882904
    3. ' ' → logprob: -13.19314956665039
    4. '   ' → logprob: -14.56814956665039
    5. '=
' → logprob: -16.06814956665039
    6. '	' → logprob: -16.31814956665039
    7. '    ' → logprob: -16.69314956665039
    8. ' =
' → logprob: -17.06814956665039
    9. ')' → logprob: -17.44314956665039
    10. ' ' → logprob: -17.44314956665039

Token 787: ' x' (ID: 1215)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.7331626415252686
    2. 'x' → logprob: -1.1081626415252686
    3. 'len' → logprob: -2.2331626415252686
    4. 'bin' → logprob: -3.4831626415252686
    5. 'res' → logprob: -4.233162879943848
    6. 'se' → logprob: -4.608162879943848
    7. '(bin' → logprob: -4.733162879943848
    8. '(se' → logprob: -5.608162879943848
    9. '(len' → logprob: -5.608162879943848
    10. 'length' → logprob: -5.983162879943848

Token 788: '.bit' (ID: 61866)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.02131880261003971
    2. ' +' → logprob: -4.2713189125061035
    3. '.bit' → logprob: -5.1463189125061035
    4. ')+' → logprob: -7.7713189125061035
    5. '   ' → logprob: -7.7713189125061035
    6. '
' → logprob: -9.646318435668945
    7. ')' → logprob: -9.896318435668945
    8. 'bit' → logprob: -10.271318435668945
    9. ' ' → logprob: -10.396318435668945
    10. '=' → logprob: -10.521318435668945

Token 789: '_length' (ID: 11514)
  Prédit: '_length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -7.922563963802531e-05
    2. 'length' → logprob: -10.125079154968262
    3. '_count' → logprob: -10.250079154968262
    4. '_' → logprob: -13.125079154968262
    5. 'ength' → logprob: -13.875079154968262
    6. '
' → logprob: -15.250079154968262
    7. 'count' → logprob: -16.250080108642578
    8. '_l' → logprob: -16.375080108642578
    9. '_LENGTH' → logprob: -16.500080108642578
    10. '```' → logprob: -16.500080108642578

Token 790: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0012973772827535868
    2. '()-' → logprob: -6.751297473907471
    3. '-' → logprob: -9.501296997070312
    4. ' ()' → logprob: -10.501296997070312
    5. '()
' → logprob: -11.376296997070312
    6. '(' → logprob: -12.126296997070312
    7. ' -' → logprob: -12.251296997070312
    8. '#' → logprob: -14.876296997070312
    9. '()>' → logprob: -15.001296997070312
    10. '()`' → logprob: -15.001296997070312

Token 791: '           ' (ID: 352)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6148601770401001
    2. '   ' → logprob: -0.9898601770401001
    3. '       ' → logprob: -2.9898600578308105
    4. '           ' → logprob: -4.2398600578308105
    5. '<|end|>' → logprob: -5.1148600578308105
    6. '    
' → logprob: -5.4898600578308105
    7. '\n' → logprob: -5.8648600578308105
    8. ' ' → logprob: -6.1148600578308105
    9. ')' → logprob: -6.4898600578308105
    10. 'return' → logprob: -6.6148600578308105

Token 792: ' memo' (ID: 46393)
  Prédit: 'memo'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'memo' (adapté à ' memo') → logprob: -0.1982029676437378
    2. '   ' → logprob: -2.1982030868530273
    3. ' memo' → logprob: -2.6982030868530273
    4. '       ' → logprob: -6.948203086853027
    5. 'return' → logprob: -7.823203086853027
    6. ' return' → logprob: -10.698203086853027
    7. 'm' → logprob: -11.198203086853027
    8. '
' → logprob: -11.448203086853027
    9. '	m' → logprob: -11.698203086853027
    10. 'memory' → logprob: -11.698203086853027

Token 793: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.018158841878175735
    2. '[' → logprob: -4.018158912658691
    3. '[
' → logprob: -12.018158912658691
    4. ' [' → logprob: -14.393158912658691
    5. '[c' → logprob: -14.518158912658691
    6. '[...]' → logprob: -14.768158912658691
    7. '[key' → logprob: -15.143158912658691
    8. '[s' → logprob: -15.643158912658691
    9. '[`' → logprob: -15.768158912658691
    10. '```' → logprob: -15.893158912658691

Token 794: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0003961185284424573
    2. ']=' → logprob: -8.000395774841309
    3. '=' → logprob: -9.875395774841309
    4. ' ]' → logprob: -11.625395774841309
    5. ' =' → logprob: -15.625395774841309
    6. ')' → logprob: -16.875396728515625
    7. '   ' → logprob: -18.250396728515625
    8. ' ' → logprob: -18.625396728515625
    9. ']
' → logprob: -19.000396728515625
    10. '[' → logprob: -20.500396728515625

Token 795: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.014163747429847717
    2. ' =' → logprob: -4.264163970947266
    3. '=
' → logprob: -15.514163970947266
    4. ' =
' → logprob: -16.764163970947266
    5. '=

' → logprob: -17.139163970947266
    6. ' ' → logprob: -17.764163970947266
    7. '=}' → logprob: -18.014163970947266
    8. '   ' → logprob: -19.389163970947266
    9. ',' → logprob: -19.764163970947266
    10. ' =
' → logprob: -20.014163970947266

Token 796: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -4.320199877838604e-07
    2. ' res' → logprob: -14.75
    3. 're' → logprob: -24.5
    4. 'r' → logprob: -24.625
    5. '	res' → logprob: -25.0
    6. '(res' → logprob: -25.625
    7. 'resi' → logprob: -25.75
    8. '_res' → logprob: -25.875
    9. 'ress' → logprob: -26.375
    10. '$res' → logprob: -26.375

Token 797: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.34397149085998535
    2. '
' → logprob: -2.0939714908599854
    3. '   ' → logprob: -2.4689714908599854
    4. '       ' → logprob: -3.2189714908599854
    5. 'return' → logprob: -4.843971252441406
    6. '<|end|>' → logprob: -4.843971252441406
    7. '\n' → logprob: -5.218971252441406
    8. '    
' → logprob: -5.218971252441406
    9. ')' → logprob: -5.593971252441406
    10. ' ' → logprob: -6.093971252441406

Token 798: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7159654498100281
    2. '
' → logprob: -1.0909655094146729
    3. '   ' → logprob: -2.840965509414673
    4. '       ' → logprob: -3.840965509414673
    5. '<|end|>' → logprob: -3.840965509414673
    6. 'return' → logprob: -4.090965270996094
    7. '	return' → logprob: -4.340965270996094
    8. '\n' → logprob: -4.590965270996094
    9. '\t' → logprob: -4.715965270996094
    10. '    
' → logprob: -4.840965270996094

Token 799: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.006806553341448307
    2. '   ' → logprob: -5.506806373596191
    3. ' return' → logprob: -6.006806373596191
    4. '	return' → logprob: -8.756806373596191
    5. '       ' → logprob: -10.006806373596191
    6. ':return' → logprob: -10.131806373596191
    7. '           ' → logprob: -11.131806373596191
    8. '    ' → logprob: -13.506806373596191
    9. '    
' → logprob: -14.131806373596191
    10. '
' → logprob: -14.131806373596191

Token 800: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.0009114635176956654
    2. ' res' → logprob: -7.000911235809326
    3. '	res' → logprob: -21.625911712646484
    4. 'r' → logprob: -21.625911712646484
    5. 're' → logprob: -22.250911712646484
    6. '(res' → logprob: -22.750911712646484
    7. 'ress' → logprob: -22.875911712646484
    8. '   ' → logprob: -23.500911712646484
    9. 'resi' → logprob: -23.500911712646484
    10. '$res' → logprob: -24.250911712646484

Token 801: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08542026579380035
    2. '    
' → logprob: -3.5854203701019287
    3. '
' → logprob: -3.8354203701019287
    4. '\n' → logprob: -3.8354203701019287
    5. '.' → logprob: -5.46042013168335
    6. '#' → logprob: -7.33542013168335
    7. ' 
' → logprob: -7.46042013168335
    8. ' ' → logprob: -7.46042013168335
    9. '<|end|>' → logprob: -7.46042013168335
    10. '  
' → logprob: -7.58542013168335

Token 802: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.019238166511058807
    2. '    
' → logprob: -4.644237995147705
    3. '
' → logprob: -4.769237995147705
    4. 'm' → logprob: -7.769237995147705
    5. '#' → logprob: -9.269238471984863
    6. '  
' → logprob: -9.394238471984863
    7. 's' → logprob: -9.519238471984863
    8. '\n' → logprob: -9.769238471984863
    9. 'n' → logprob: -10.019238471984863
    10. '```' → logprob: -10.894238471984863

Token 803: ' #' (ID: 1069)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.23675990104675293
    2. 'moves' → logprob: -1.736759901046753
    3. '   ' → logprob: -3.736759901046753
    4. 'mex' → logprob: -4.986760139465332
    5. 'move' → logprob: -6.236760139465332
    6. 'reachable' → logprob: -7.611760139465332
    7. 's' → logprob: -7.986760139465332
    8. 'm' → logprob: -7.986760139465332
    9. 'states' → logprob: -8.111760139465332
    10. 'mov' → logprob: -8.361760139465332

Token 804: ' Evaluate' (ID: 95819)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.03163602575659752
    2. 'moves' → logprob: -3.6566359996795654
    3. '   ' → logprob: -6.6566362380981445
    4. 'states' → logprob: -6.9066362380981445
    5. 'move' → logprob: -7.0316362380981445
    6. 'mex' → logprob: -7.5316362380981445
    7. 'reachable' → logprob: -8.031636238098145
    8. 'vals' → logprob: -8.281636238098145
    9. 's' → logprob: -8.281636238098145
    10. 'n' → logprob: -8.281636238098145

Token 805: ' grund' (ID: 34475)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.6807212233543396
    2. '   ' → logprob: -1.4307212829589844
    3. ' next' → logprob: -2.1807212829589844
    4. 'moves' → logprob: -2.3057212829589844
    5. 'states' → logprob: -4.555721282958984
    6. ' moves' → logprob: -4.930721282958984
    7. ' nxt' → logprob: -5.055721282958984
    8. 's' → logprob: -5.430721282958984
    9. 'mex' → logprob: -5.430721282958984
    10. ' states' → logprob: -5.930721282958984

Token 806: 'ies' (ID: 566)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.22928379476070404
    2. 'ies' → logprob: -1.8542838096618652
    3. '   ' → logprob: -3.1042838096618652
    4. ' =' → logprob: -6.604283809661865
    5. '=' → logprob: -7.354283809661865
    6. 's' → logprob: -7.604283809661865
    7. ' ' → logprob: -8.229283332824707
    8. 'values' → logprob: -8.854283332824707
    9. '_values' → logprob: -9.229283332824707
    10. '    ' → logprob: -9.729283332824707

Token 807: ' of' (ID: 328)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31624123454093933
    2. '   ' → logprob: -2.0662412643432617
    3. '=' → logprob: -2.9412412643432617
    4. 's' → logprob: -2.9412412643432617
    5. '_set' → logprob: -5.191241264343262
    6. '_states' → logprob: -5.691241264343262
    7. '_of' → logprob: -5.816241264343262
    8. '(' → logprob: -5.816241264343262
    9. '=set' → logprob: -5.816241264343262
    10. '_moves' → logprob: -5.816241264343262

Token 808: ' segments' (ID: 33749)
  Prédit: 'se'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'se' → logprob: -1.2554377317428589
    2. 'seg' → logprob: -1.2554377317428589
    3. 'next' → logprob: -1.5054377317428589
    4. '[next' → logprob: -2.5054378509521484
    5. '[n' → logprob: -4.005437850952148
    6. 'v' → logprob: -4.130437850952148
    7. 'sub' → logprob: -4.255437850952148
    8. '[v' → logprob: -4.380437850952148
    9. 'child' → logprob: -4.630437850952148
    10. 's' → logprob: -4.755437850952148

Token 809: ' and' (ID: 326)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.39577123522758484
    2. ' =' → logprob: -1.7707712650299072
    3. '=' → logprob: -2.6457712650299072
    4. ':' → logprob: -3.3957712650299072
    5. '_' → logprob: -4.520771026611328
    6. 's' → logprob: -4.520771026611328
    7. ',' → logprob: -4.895771026611328
    8. '(' → logprob: -5.520771026611328
    9. '
' → logprob: -5.770771026611328
    10. 'res' → logprob: -5.895771026611328

Token 810: ' XOR' (ID: 147209)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0706751346588135
    2. ' res' → logprob: -1.3206751346588135
    3. 'res' → logprob: -1.6956751346588135
    4. ' ' → logprob: -2.9456751346588135
    5. ' for' → logprob: -3.3206751346588135
    6. 'for' → logprob: -4.070674896240234
    7. ' xor' → logprob: -4.320674896240234
    8. 'xor' → logprob: -4.570674896240234
    9. ' next' → logprob: -4.820674896240234
    10. ' seg' → logprob: -5.320674896240234

Token 811: ' them' (ID: 1373)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.832541286945343
    2. ' =' → logprob: -0.832541286945343
    3. 'res' → logprob: -2.5825412273406982
    4. 'g' → logprob: -4.707541465759277
    5. '   ' → logprob: -4.707541465759277
    6. '_' → logprob: -4.832541465759277
    7. 'r' → logprob: -5.082541465759277
    8. '^' → logprob: -5.582541465759277
    9. 'val' → logprob: -5.707541465759277
    10. ' ^=' → logprob: -5.957541465759277

Token 812: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16451387107372284
    2. '
' → logprob: -3.0395138263702393
    3. 'res' → logprob: -3.0395138263702393
    4. ':' → logprob: -4.289514064788818
    5. '    
' → logprob: -4.289514064788818
    6. ' =' → logprob: -5.414514064788818
    7. '=' → logprob: -5.664514064788818
    8. ':
' → logprob: -6.039514064788818
    9. '  
' → logprob: -6.164514064788818
    10. ',' → logprob: -6.289514064788818

Token 813: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2536168098449707
    2. '^' → logprob: -2.2536168098449707
    3. 'res' → logprob: -3.1286168098449707
    4. ':' → logprob: -4.503616809844971
    5. '
' → logprob: -4.503616809844971
    6. '    
' → logprob: -4.503616809844971
    7. ' ^' → logprob: -5.253616809844971
    8. ',' → logprob: -5.253616809844971
    9. ' ' → logprob: -5.878616809844971
    10. 'xor' → logprob: -5.878616809844971

Token 814: ' xor' (ID: 106402)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.28709766268730164
    2. 'xor' (adapté à ' xor') → logprob: -1.537097692489624
    3. 'g' → logprob: -4.412097454071045
    4. 'next' → logprob: -5.662097454071045
    5. 'vals' → logprob: -6.037097454071045
    6. 'x' → logprob: -6.162097454071045
    7. 'grund' → logprob: -6.287097454071045
    8. 'val' → logprob: -6.412097454071045
    9. 'moves' → logprob: -6.662097454071045
    10. 'result' → logprob: -6.787097454071045

Token 815: '_val' (ID: 13694)
  Prédit: '_val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -0.16857032477855682
    2. '_' → logprob: -2.5435702800750732
    3. '=' → logprob: -2.9185702800750732
    4. ' =' → logprob: -4.168570518493652
    5. '_value' → logprob: -5.418570518493652
    6. '_res' → logprob: -6.793570518493652
    7. 'val' → logprob: -7.543570518493652
    8. '_=' → logprob: -7.918570518493652
    9. 'res' → logprob: -8.168570518493652
    10. '_sum' → logprob: -9.043570518493652

Token 816: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47407791018486023
    2. ' =' → logprob: -0.9740779399871826
    3. '   ' → logprob: -14.724078178405762
    4. ' ^=' → logprob: -15.349078178405762
    5. ' ' → logprob: -15.974078178405762
    6. '_' → logprob: -17.599077224731445
    7. '_=' → logprob: -18.349077224731445
    8. ',' → logprob: -18.349077224731445
    9. '	' → logprob: -18.849077224731445
    10. ')' → logprob: -18.974077224731445

Token 817: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.676981345459353e-06
    2. ' ' → logprob: -12.125005722045898
    3. '   ' → logprob: -16.6250057220459
    4. '۰' → logprob: -18.5000057220459
    5. ' ' → logprob: -19.2500057220459
    6. '
' → logprob: -19.3125057220459
    7. '```' → logprob: -19.3750057220459
    8. '０' → logprob: -20.2500057220459
    9. '  ' → logprob: -20.3750057220459
    10. '1' → logprob: -20.6250057220459

Token 818: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -17.25
    3. '۰' → logprob: -18.5
    4. 'grund' → logprob: -18.875
    5. '```' → logprob: -19.875
    6. '０' → logprob: -20.0
    7. '000' → logprob: -20.5625
    8. '00' → logprob: -20.75
    9. '[' → logprob: -20.8125
    10. '   ' → logprob: -21.0625

Token 819: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6657561659812927
    2. ' for' → logprob: -0.9157561659812927
    3. '   ' → logprob: -3.2907562255859375
    4. ':' → logprob: -3.9157562255859375
    5. '<|end|>' → logprob: -4.4157562255859375
    6. ' ' → logprob: -5.1657562255859375
    7. '
' → logprob: -5.2907562255859375
    8. '	for' → logprob: -6.6657562255859375
    9. '[:]' → logprob: -7.4157562255859375
    10. '[' → logprob: -7.6657562255859375

Token 820: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.8664467930793762
    2. 'for' → logprob: -0.8664467930793762
    3. '   ' → logprob: -2.3664467334747314
    4. ':' → logprob: -3.9914467334747314
    5. '
' → logprob: -4.2414469718933105
    6. '[' → logprob: -4.2414469718933105
    7. '<|end|>' → logprob: -4.8664469718933105
    8. '	for' → logprob: -6.1164469718933105
    9. ' ' → logprob: -6.8664469718933105
    10. '[:]' → logprob: -6.9914469718933105

Token 821: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.07898441702127457
    2. ' for' → logprob: -2.578984498977661
    3. '	for' → logprob: -9.328984260559082
    4. '   ' → logprob: -12.203984260559082
    5. '
' → logprob: -15.078984260559082
    6. '```' → logprob: -16.2039852142334
    7. ' ' → logprob: -16.4539852142334
    8. '_for' → logprob: -16.8289852142334
    9. ' 
' → logprob: -16.8289852142334
    10. '    
' → logprob: -17.0789852142334

Token 822: ' v' (ID: 323)
  Prédit: 'seg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'seg' → logprob: -0.014816991053521633
    2. 'v' → logprob: -4.264816761016846
    3. 's' → logprob: -8.014817237854004
    4. 'val' → logprob: -8.264817237854004
    5. 'segment' → logprob: -10.014817237854004
    6. ' seg' → logprob: -10.889817237854004
    7. 'sg' → logprob: -13.764817237854004
    8. 'se' → logprob: -15.514817237854004
    9. '(seg' → logprob: -15.639817237854004
    10. 'g' → logprob: -15.639817237854004

Token 823: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.4740976393222809
    2. ' in' → logprob: -0.9740976095199585
    3. '	in' → logprob: -12.47409725189209
    4. ' ' → logprob: -13.09909725189209
    5. 'import' → logprob: -13.09909725189209
    6. '_in' → logprob: -13.22409725189209
    7. 'v' → logprob: -13.34909725189209
    8. ',' → logprob: -13.47409725189209
    9. '   ' → logprob: -13.84909725189209
    10. ':' → logprob: -13.84909725189209

Token 824: ' seg' (ID: 3055)
  Prédit: 'se'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'se' → logprob: -0.0015280749648809433
    2. 'seg' → logprob: -6.501528263092041
    3. ' seg' → logprob: -10.626527786254883
    4. '[' → logprob: -14.501527786254883
    5. 'segments' → logprob: -14.626527786254883
    6. '	se' → logprob: -15.626527786254883
    7. 'Seg' → logprob: -16.626527786254883
    8. '
' → logprob: -16.876527786254883
    9. 'map' → logprob: -17.001527786254883
    10. 's' → logprob: -17.001527786254883

Token 825: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0003396343090571463
    2. 'se' → logprob: -8.00033950805664
    3. 'ments' → logprob: -13.00033950805664
    4. 'res' → logprob: -14.37533950805664
    5. 'gs' → logprob: -15.12533950805664
    6. 'ms' → logprob: -15.25033950805664
    7. 'seg' → logprob: -15.25033950805664
    8. 'vals' → logprob: -15.75033950805664
    9. 'v' → logprob: -16.50033950805664
    10. 'secs' → logprob: -16.87533950805664

Token 826: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.012376843951642513
    2. ' ^=' → logprob: -5.38737678527832
    3. ':
' → logprob: -5.76237678527832
    4. ',' → logprob: -6.51237678527832
    5. ' :' → logprob: -6.76237678527832
    6. '^' → logprob: -7.26237678527832
    7. '=' → logprob: -7.76237678527832
    8. '   ' → logprob: -8.01237678527832
    9. 'xor' → logprob: -8.76237678527832
    10. ' =' → logprob: -9.51237678527832

Token 827: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07028862833976746
    2. 'xor' → logprob: -3.19528865814209
    3. '
' → logprob: -4.32028865814209
    4. '   ' → logprob: -4.57028865814209
    5. '```' → logprob: -6.82028865814209
    6. 'x' → logprob: -6.82028865814209
    7. ' xor' → logprob: -7.94528865814209
    8. '        
' → logprob: -9.19528865814209
    9. '	' → logprob: -9.32028865814209
    10. '	   ' → logprob: -9.32028865814209

Token 828: ' xor' (ID: 106402)
  Prédit: 'xor'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xor' (adapté à ' xor') → logprob: -0.00784699060022831
    2. '   ' → logprob: -5.507846832275391
    3. 'x' → logprob: -6.382846832275391
    4. 'g' → logprob: -6.382846832275391
    5. 'gx' → logprob: -9.13284683227539
    6. 'gv' → logprob: -9.13284683227539
    7. ' xor' → logprob: -9.50784683227539
    8. 'val' → logprob: -10.50784683227539
    9. '       ' → logprob: -10.50784683227539
    10. 'res' → logprob: -11.88284683227539

Token 829: '_val' (ID: 13694)
  Prédit: '_val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -0.00013536323967855424
    2. '_' → logprob: -9.00013542175293
    3. 'Val' → logprob: -12.12513542175293
    4. '_VAL' → logprob: -12.62513542175293
    5. 'val' → logprob: -14.12513542175293
    6. '=' → logprob: -14.37513542175293
    7. '_=' → logprob: -14.75013542175293
    8. '_v' → logprob: -15.00013542175293
    9. '_x' → logprob: -15.62513542175293
    10. '```' → logprob: -15.62513542175293

Token 830: ' ^=' (ID: 79665)
  Prédit: '^'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '^' → logprob: -0.4743064045906067
    2. ' ^=' → logprob: -0.9743064045906067
    3. '=' → logprob: -8.474306106567383
    4. '_^' → logprob: -11.224306106567383
    5. ' ^' → logprob: -13.099306106567383
    6. '^^' → logprob: -13.974306106567383
    7. ''^' → logprob: -14.224306106567383
    8. 'ˆ' → logprob: -14.224306106567383
    9. '^)' → logprob: -14.599306106567383
    10. ')^' → logprob: -14.849306106567383

Token 831: ' grund' (ID: 34475)
  Prédit: 'grund'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grund' → logprob: -2.45848218582978e-06
    2. ' grund' → logprob: -13.62500286102295
    3. 'grunt' → logprob: -14.75000286102295
    4. 'grond' → logprob: -15.37500286102295
    5. 'gr' → logprob: -16.125001907348633
    6. '(' → logprob: -16.250001907348633
    7. 'grunn' → logprob: -16.375001907348633
    8. 'gründ' → logprob: -16.625001907348633
    9. 'ground' → logprob: -17.500001907348633
    10. 'griff' → logprob: -17.625001907348633

Token 832: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -4.320199877838604e-07
    2. '(v' → logprob: -15.25
    3. '(y' → logprob: -16.25
    4. 'gy' → logprob: -17.0
    5. 'yv' → logprob: -17.5
    6. 'v' → logprob: -18.0
    7. 'y's' → logprob: -18.25
    8. '[y' → logprob: -19.0
    9. '[v' → logprob: -19.375
    10. '(' → logprob: -19.625

Token 833: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -2.081584716506768e-05
    2. '(' → logprob: -11.500020980834961
    3. 'v' → logprob: -11.500020980834961
    4. ' (' → logprob: -15.875020980834961
    5. '(
' → logprob: -15.875020980834961
    6. '```' → logprob: -16.50002098083496
    7. '(value' → logprob: -17.00002098083496
    8. '(val' → logprob: -17.37502098083496
    9. '[v' → logprob: -17.37502098083496
    10. ')v' → logprob: -17.75002098083496

Token 834: ',m' (ID: 26648)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005569627974182367
    2. ',m' → logprob: -7.500556945800781
    3. 'm' → logprob: -13.375556945800781
    4. ' ,' → logprob: -14.250556945800781
    5. ')' → logprob: -14.750556945800781
    6. '(m' → logprob: -14.875556945800781
    7. 'memo' → logprob: -14.875556945800781
    8. ',
' → logprob: -15.250556945800781
    9. '(' → logprob: -15.875556945800781
    10. '```' → logprob: -16.62555694580078

Token 835: 'emo' (ID: 7196)
  Prédit: 'emo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'emo' → logprob: -1.2233183042553719e-05
    2. 'memo' → logprob: -12.375012397766113
    3. 'emory' → logprob: -12.625012397766113
    4. 'em' → logprob: -12.750012397766113
    5. 'e' → logprob: -15.375012397766113
    6. '{
' → logprob: -15.625012397766113
    7. 'емо' → logprob: -15.625012397766113
    8. '```' → logprob: -15.625012397766113
    9. 'emu' → logprob: -15.750012397766113
    10. '`' → logprob: -15.750012397766113

Token 836: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00023846338444855064
    2. ')
' → logprob: -8.375238418579102
    3. ' )' → logprob: -12.625238418579102
    4. ',' → logprob: -13.375238418579102
    5. '))' → logprob: -13.625238418579102
    6. ')m' → logprob: -14.625238418579102
    7. ')`' → logprob: -14.750238418579102
    8. ',)' → logprob: -14.875238418579102
    9. ')
' → logprob: -15.625238418579102
    10. ' ' → logprob: -16.2502384185791

Token 837: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4811457693576813
    2. '   ' → logprob: -0.9811457395553589
    3. ' ' → logprob: -6.106145858764648
    4. '  
' → logprob: -6.231145858764648
    5. '    
' → logprob: -7.106145858764648
    6. '
' → logprob: -7.856145858764648
    7. ' 
' → logprob: -8.106145858764648
    8. '```' → logprob: -8.106145858764648
    9. '  ' → logprob: -8.231145858764648
    10. '   
' → logprob: -8.981145858764648

Token 838: ' mex' (ID: 32410)
  Prédit: 'moves'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'moves' → logprob: -0.05969737470149994
    2. 'mex' (adapté à ' mex') → logprob: -4.184697151184082
    3. '   ' → logprob: -4.309697151184082
    4. 'res' → logprob: -4.684697151184082
    5. 'move' → logprob: -5.184697151184082
    6. 'possible' → logprob: -5.309697151184082
    7. 'next' → logprob: -6.184697151184082
    8. 's' → logprob: -6.559697151184082
    9. 'memo' → logprob: -6.684697151184082
    10. 'vals' → logprob: -6.934697151184082

Token 839: '_set' (ID: 5451)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.9037213325500488
    2. '_val' → logprob: -1.2787213325500488
    3. '_set' → logprob: -1.6537213325500488
    4. ' =' → logprob: -2.278721332550049
    5. '_' → logprob: -5.528721332550049
    6. '=' → logprob: -5.653721332550049
    7. '({' → logprob: -5.903721332550049
    8. '{' → logprob: -6.528721332550049
    9. '   ' → logprob: -6.528721332550049
    10. ' ' → logprob: -6.528721332550049

Token 840: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01816023886203766
    2. '=' → logprob: -4.018160343170166
    3. '   ' → logprob: -12.768159866333008
    4. '(' → logprob: -12.893159866333008
    5. '()' → logprob: -13.393159866333008
    6. ' ' → logprob: -13.393159866333008
    7. '	' → logprob: -14.893159866333008
    8. ' ={' → logprob: -14.893159866333008
    9. '=set' → logprob: -15.268159866333008
    10. ' ' → logprob: -15.643159866333008

Token 841: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.004098585341125727
    2. '{' → logprob: -5.504098415374756
    3. '{}' → logprob: -11.129098892211914
    4. '(set' → logprob: -12.629098892211914
    5. ' set' → logprob: -13.379098892211914
    6. '=set' → logprob: -14.629098892211914
    7. ')set' → logprob: -16.254098892211914
    8. '{
' → logprob: -17.004098892211914
    9. '	set' → logprob: -17.254098892211914
    10. '```' → logprob: -18.504098892211914

Token 842: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00852604117244482
    2. '(' → logprob: -5.508525848388672
    3. '()
' → logprob: -6.258525848388672
    4. '([' → logprob: -6.758525848388672
    5. '(x' → logprob: -7.508525848388672
    6. '(range' → logprob: -7.883525848388672
    7. '(m' → logprob: -8.508525848388672
    8. '(
' → logprob: -8.883525848388672
    9. '{' → logprob: -10.383525848388672
    10. '[' → logprob: -11.133525848388672

Token 843: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014162804931402206
    2. ' for' → logprob: -4.639163017272949
    3. 'for' → logprob: -5.639163017272949
    4. '	for' → logprob: -7.639163017272949
    5. '<|end|>' → logprob: -8.63916301727295
    6. '    
' → logprob: -9.38916301727295
    7. ' ' → logprob: -11.38916301727295
    8. ' 
' → logprob: -11.51416301727295
    9. '[' → logprob: -11.51416301727295
    10. '	
' → logprob: -11.76416301727295

Token 844: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.023423198610544205
    2. '   ' → logprob: -3.773423194885254
    3. ' for' → logprob: -8.648423194885254
    4. '```' → logprob: -14.648423194885254
    5. '	for' → logprob: -14.773423194885254
    6. 'while' → logprob: -15.273423194885254
    7. 'i' → logprob: -15.523423194885254
    8. '
' → logprob: -15.773423194885254
    9. 'moves' → logprob: -15.773423194885254
    10. '#' (adapté à ' #') → logprob: -15.898423194885254

Token 845: ' Try' (ID: 14720)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.030543258413672447
    2. ' for' → logprob: -3.530543327331543
    3. '   ' → logprob: -7.155543327331543
    4. '```' → logprob: -11.530543327331543
    5. '	for' → logprob: -14.780543327331543
    6. '
' → logprob: -14.780543327331543
    7. 'i' → logprob: -15.405543327331543
    8. 'from' → logprob: -15.405543327331543
    9. 'max' → logprob: -15.530543327331543
    10. 'n' → logprob: -15.530543327331543

Token 846: ' moves' (ID: 19523)
  Prédit: ' y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.42507997155189514
    2. ' v' → logprob: -1.8000799417495728
    3. 'y' → logprob: -2.3000800609588623
    4. 'v' → logprob: -3.5500800609588623
    5. '   ' → logprob: -3.8000800609588623
    6. ' for' → logprob: -4.300079822540283
    7. ' in' → logprob: -5.425079822540283
    8. ' i' → logprob: -5.925079822540283
    9. 'for' → logprob: -6.175079822540283
    10. 'i' → logprob: -6.300079822540283

Token 847: ':
' (ID: 734)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.11222193390130997
    2. 'for' → logprob: -3.1122219562530518
    3. ' in' → logprob: -3.8622219562530518
    4. '   ' → logprob: -4.237221717834473
    5. ':' → logprob: -4.487221717834473
    6. ' =' → logprob: -4.612221717834473
    7. '=' → logprob: -5.862221717834473
    8. ' on' → logprob: -7.237221717834473
    9. ' from' → logprob: -7.612221717834473
    10. 'from' → logprob: -8.487221717834473

Token 848: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3063644766807556
    2. 'for' → logprob: -1.8063645362854004
    3. '   ' → logprob: -2.3063645362854004
    4. '	for' → logprob: -12.431364059448242
    5. '```' → logprob: -12.681364059448242
    6. ' ' → logprob: -15.056364059448242
    7. '
' → logprob: -15.306364059448242
    8. '  ' → logprob: -15.681364059448242
    9. 'from' → logprob: -15.931364059448242
    10. '    
' → logprob: -15.931364059448242

Token 849: ' #' (ID: 1069)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4740821421146393
    2. 'for' → logprob: -0.9740821123123169
    3. '   ' → logprob: -12.349081993103027
    4. '```' → logprob: -15.349081993103027
    5. '
' → logprob: -15.724081993103027
    6. 'from' → logprob: -16.474082946777344
    7. 'v' → logprob: -16.474082946777344
    8. ' 
' → logprob: -16.474082946777344
    9. '	for' → logprob: -16.974082946777344
    10. '    
' → logprob: -17.099082946777344

Token 850: ' from' (ID: 591)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00032950565218925476
    2. ' for' → logprob: -8.250329971313477
    3. '   ' → logprob: -9.625329971313477
    4. 'from' → logprob: -13.875329971313477
    5. 'n' → logprob: -15.125329971313477
    6. 'moves' → logprob: -15.875329971313477
    7. '```' → logprob: -16.375329971313477
    8. 'length' → logprob: -16.750329971313477
    9. 'i' → logprob: -16.750329971313477
    10. 'possible' → logprob: -16.750329971313477

Token 851: ' current' (ID: 2208)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.09109415858983994
    2. ' v' → logprob: -2.5910942554473877
    3. 'seg' → logprob: -5.216094017028809
    4. 'i' → logprob: -5.841094017028809
    5. ' seg' → logprob: -6.216094017028809
    6. ' i' → logprob: -7.841094017028809
    7. '   ' → logprob: -8.591094017028809
    8. 's' → logprob: -8.966094017028809
    9. 'val' → logprob: -8.966094017028809
    10. 'segment' → logprob: -8.966094017028809

Token 852: ' x' (ID: 1215)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.7779403924942017
    2. 'xor' → logprob: -1.5279403924942017
    3. 'seg' → logprob: -2.027940273284912
    4. 'val' → logprob: -3.027940273284912
    5. 'segment' → logprob: -3.902940273284912
    6. ' v' → logprob: -3.902940273284912
    7. ' xor' → logprob: -3.902940273284912
    8. 'x' → logprob: -3.902940273284912
    9. ' seg' → logprob: -4.152940273284912
    10. 'pile' → logprob: -5.027940273284912

Token 853: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.330814927816391
    2. ' in' → logprob: -2.080814838409424
    3. ',' → logprob: -2.705814838409424
    4. ' =' → logprob: -3.205814838409424
    5. '=' → logprob: -4.330814838409424
    6. 'in' → logprob: -4.580814838409424
    7. ':
' → logprob: -4.955814838409424
    8. ' :' → logprob: -5.205814838409424
    9. ' ,' → logprob: -5.455814838409424
    10. ' for' → logprob: -6.080814838409424

Token 854: ' step' (ID: 5983)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.043685585260391235
    2. 'for' → logprob: -3.1686856746673584
    3. '   ' → logprob: -8.043685913085938
    4. ' v' → logprob: -9.418685913085938
    5. 'v' → logprob: -9.793685913085938
    6. ' in' → logprob: -9.918685913085938
    7. ' y' → logprob: -10.793685913085938
    8. ' from' → logprob: -10.918685913085938
    9. ' ' → logprob: -11.293685913085938
    10. ' seg' → logprob: -11.418685913085938

Token 855: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6204549074172974
    2. '=' → logprob: -1.4954549074172974
    3. '   ' → logprob: -1.9954549074172974
    4. '_' → logprob: -3.370454788208008
    5. 's' → logprob: -3.995454788208008
    6. ' ' → logprob: -4.745454788208008
    7. ' =' → logprob: -4.745454788208008
    8. '[' → logprob: -5.745454788208008
    9. 'v' → logprob: -5.870454788208008
    10. '_val' → logprob: -5.870454788208008

Token 856: ' decom' (ID: 57661)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07204130291938782
    2. ' =' → logprob: -3.4470412731170654
    3. '=' → logprob: -3.6970412731170654
    4. ',' → logprob: -5.5720415115356445
    5. ' in' → logprob: -5.6970415115356445
    6. 'v' → logprob: -6.6970415115356445
    7. 's' → logprob: -7.3220415115356445
    8. '   ' → logprob: -7.4470415115356445
    9. ' :' → logprob: -7.4470415115356445
    10. 'for' → logprob: -7.6970415115356445

Token 857: 'poses' (ID: 13406)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.694350004196167
    2. '=' → logprob: -1.444350004196167
    3. ' =' → logprob: -1.944350004196167
    4. ' into' → logprob: -3.319350004196167
    5. ')' → logprob: -3.694350004196167
    6. ':' → logprob: -3.694350004196167
    7. '   ' → logprob: -4.319350242614746
    8. ' ' → logprob: -4.819350242614746
    9. 's' → logprob: -6.069350242614746
    10. '_into' → logprob: -6.194350242614746

Token 858: ' into' (ID: 1511)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.9218705892562866
    2. 'se' → logprob: -0.9218705892562866
    3. 'into' → logprob: -2.671870708465576
    4. 'x' → logprob: -3.546870708465576
    5. 'segments' → logprob: -3.671870708465576
    6. ' =' → logprob: -4.171870708465576
    7. ':' → logprob: -4.421870708465576
    8. ' into' → logprob: -4.671870708465576
    9. 'seg' → logprob: -5.046870708465576
    10. ' segments' → logprob: -5.171870708465576

Token 859: ' seg' (ID: 3055)
  Prédit: 'se'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'se' → logprob: -0.02829294465482235
    2. 'v' → logprob: -4.028293132781982
    3. 'seg' → logprob: -4.903293132781982
    4. 'segments' → logprob: -7.028293132781982
    5. 'x' → logprob: -7.403293132781982
    6. '[' → logprob: -7.778293132781982
    7. 'xor' → logprob: -9.028292655944824
    8. 'range' → logprob: -9.028292655944824
    9. '   ' → logprob: -9.653292655944824
    10. '[x' → logprob: -9.778292655944824

Token 860: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.15836001932621002
    2. '_' → logprob: -2.408360004425049
    3. 'm' → logprob: -3.783360004425049
    4. 'ments' → logprob: -4.408360004425049
    5. 'v' → logprob: -4.783360004425049
    6. '=' → logprob: -5.408360004425049
    7. ' =' → logprob: -6.533360004425049
    8. '_v' → logprob: -6.783360004425049
    9. '   ' → logprob: -7.158360004425049
    10. ' _' → logprob: -7.283360004425049

Token 861: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2867584824562073
    2. '
' → logprob: -2.4117584228515625
    3. ':' → logprob: -3.2867584228515625
    4. 'for' → logprob: -3.5367584228515625
    5. ' for' → logprob: -3.7867584228515625
    6. '=' → logprob: -3.7867584228515625
    7. '   ' → logprob: -4.4117584228515625
    8. ' 
' → logprob: -4.9117584228515625
    9. '  
' → logprob: -5.0367584228515625
    10. ',' → logprob: -5.5367584228515625

Token 862: ' we' (ID: 581)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.18627934157848358
    2. 'for' → logprob: -1.936279296875
    3. '   ' → logprob: -4.436279296875
    4. '    
' → logprob: -5.561279296875
    5. '
' → logprob: -5.936279296875
    6. ' ' → logprob: -6.061279296875
    7. ' 
' → logprob: -6.436279296875
    8. '	for' → logprob: -7.436279296875
    9. '    ' → logprob: -8.061279296875
    10. '       ' → logprob: -8.311279296875

Token 863: ' select' (ID: 4736)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.18121151626110077
    2. 'for' → logprob: -1.8062114715576172
    3. '   ' → logprob: -6.931211471557617
    4. ' can' → logprob: -8.431211471557617
    5. ' do' → logprob: -9.931211471557617
    6. '
' → logprob: -10.181211471557617
    7. ' try' → logprob: -10.306211471557617
    8. ' have' → logprob: -11.056211471557617
    9. ' continue' → logprob: -11.056211471557617
    10. ' ' → logprob: -11.306211471557617

Token 864: ' one' (ID: 1001)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.9055961966514587
    2. 'i' → logprob: -1.1555962562561035
    3. 'for' → logprob: -2.6555962562561035
    4. 'seg' → logprob: -2.9055962562561035
    5. 'each' → logprob: -3.2805962562561035
    6. ' v' → logprob: -3.6555962562561035
    7. ' for' → logprob: -3.6555962562561035
    8. ' i' → logprob: -4.0305962562561035
    9. ' each' → logprob: -4.4055962562561035
    10. 'idx' → logprob: -4.6555962562561035

Token 865: ' run' (ID: 2461)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.8409661650657654
    2. ' of' → logprob: -2.09096622467041
    3. ' =' → logprob: -2.59096622467041
    4. ' for' → logprob: -2.71596622467041
    5. ' ' → logprob: -3.09096622467041
    6. '<|end|>' → logprob: -3.21596622467041
    7. 'v' → logprob: -3.34096622467041
    8. 'se' → logprob: -3.46596622467041
    9. '=' → logprob: -3.71596622467041
    10. ':' → logprob: -4.34096622467041

Token 866: ' v' (ID: 323)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2876780033111572
    2. ' for' → logprob: -1.7876780033111572
    3. ':' → logprob: -4.037677764892578
    4. ',' → logprob: -4.162677764892578
    5. 'for' → logprob: -4.662677764892578
    6. ' of' → logprob: -4.912677764892578
    7. '   ' → logprob: -5.162677764892578
    8. ' ,' → logprob: -5.287677764892578
    9. ' ' → logprob: -5.537677764892578
    10. 'in' → logprob: -5.787677764892578

Token 867: ',
' (ID: 412)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.910559356212616
    2. ' in' → logprob: -1.4105594158172607
    3. ',' → logprob: -1.5355594158172607
    4. 'for' → logprob: -2.4105594158172607
    5. ':' → logprob: -3.6605594158172607
    6. ' ,' → logprob: -4.660559177398682
    7. '<|end|>' → logprob: -6.285559177398682
    8. ',
' → logprob: -6.410559177398682
    9. ' of' → logprob: -6.410559177398682
    10. 'in' → logprob: -6.535559177398682

Token 868: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3167343735694885
    2. 'for' → logprob: -1.5667343139648438
    3. '   ' → logprob: -3.1917343139648438
    4. ' and' → logprob: -4.691734313964844
    5. '    ' → logprob: -5.816734313964844
    6. '#' → logprob: -5.941734313964844
    7. ' v' → logprob: -6.566734313964844
    8. '       ' → logprob: -6.941734313964844
    9. ' ' → logprob: -7.191734313964844
    10. 'v' → logprob: -7.191734313964844

Token 869: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.21543888747692108
    2. ' for' → logprob: -1.7154388427734375
    3. '#' (adapté à ' #') → logprob: -4.5904388427734375
    4. '   ' → logprob: -5.7154388427734375
    5. 'v' → logprob: -9.090438842773438
    6. ' #' → logprob: -9.340438842773438
    7. ' ' → logprob: -9.590438842773438
    8. 'and' → logprob: -9.840438842773438
    9. ' and' → logprob: -9.965438842773438
    10. '	for' → logprob: -10.590438842773438

Token 870: ' subtract' (ID: 71973)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5759588479995728
    2. 'for' → logprob: -0.8259588479995728
    3. '   ' → logprob: -11.075959205627441
    4. '
' → logprob: -13.075959205627441
    5. '	for' → logprob: -13.950959205627441
    6. ' 
' → logprob: -15.325959205627441
    7. ' ' → logprob: -15.700959205627441
    8. 'v' → logprob: -16.200958251953125
    9. 'from' → logprob: -16.450958251953125
    10. '```' → logprob: -16.700958251953125

Token 871: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.05719592794775963
    2. 'y' → logprob: -3.8071959018707275
    3. ' ' → logprob: -3.9321959018707275
    4. '1' → logprob: -5.182196140289307
    5. ' from' → logprob: -5.682196140289307
    6. 'from' → logprob: -6.432196140289307
    7. ' i' → logprob: -6.557196140289307
    8. ' v' → logprob: -7.432196140289307
    9. ' x' → logprob: -8.807195663452148
    10. 'i' → logprob: -8.807195663452148

Token 872: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0501193106174469
    2. ' from' → logprob: -3.800119400024414
    3. 'in' → logprob: -4.550119400024414
    4. 'from' → logprob: -4.800119400024414
    5. ' for' → logprob: -5.425119400024414
    6. '=' → logprob: -6.925119400024414
    7. ' i' → logprob: -7.425119400024414
    8. ' ' → logprob: -8.050119400024414
    9. 'for' → logprob: -8.050119400024414
    10. ' range' → logprob: -8.550119400024414

Token 873: ' [' (ID: 723)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.006739646662026644
    2. ' range' → logprob: -5.006739616394043
    3. '1' → logprob: -10.881739616394043
    4. '
' → logprob: -12.631739616394043
    5. '(range' → logprob: -13.881739616394043
    6. '	range' → logprob: -14.381739616394043
    7. '[' → logprob: -15.131739616394043
    8. '`' → logprob: -15.881739616394043
    9. '```' → logprob: -16.00674057006836
    10. ' ' → logprob: -16.63174057006836

Token 874: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1756367712223437e-05
    2. ' ' → logprob: -11.375011444091797
    3. 'v' → logprob: -15.250011444091797
    4. '
' → logprob: -17.750011444091797
    5. 'range' → logprob: -18.125011444091797
    6. '```' → logprob: -18.375011444091797
    7. ',' → logprob: -18.625011444091797
    8. '   ' → logprob: -19.125011444091797
    9. ' v' → logprob: -20.125011444091797
    10. '0' → logprob: -20.500011444091797

Token 875: '..' (ID: 485)
  Prédit: ',v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',v' → logprob: -0.3140697777271271
    2. ',' → logprob: -1.3140697479248047
    3. ' ,' → logprob: -7.439069747924805
    4. ',
' → logprob: -9.189069747924805
    5. '
' → logprob: -10.189069747924805
    6. ',len' → logprob: -10.564069747924805
    7. ',x' → logprob: -11.064069747924805
    8. 'v' → logprob: -12.064069747924805
    9. ',value' → logprob: -12.064069747924805
    10. ',y' → logprob: -12.064069747924805

Token 876: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -4.704065213445574e-05
    2. ' v' → logprob: -10.125046730041504
    3. '   ' → logprob: -13.625046730041504
    4. '
' → logprob: -13.625046730041504
    5. '(v' → logprob: -13.750046730041504
    6. '```' → logprob: -13.875046730041504
    7. '1' → logprob: -14.500046730041504
    8. '	v' → logprob: -14.625046730041504
    9. 'val' → logprob: -15.375046730041504
    10. ',' → logprob: -15.750046730041504

Token 877: '],' (ID: 2155)
  Prédit: ']:
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.11970998346805573
    2. ']' → logprob: -2.6197099685668945
    3. '],' → logprob: -3.7447099685668945
    4. ']
' → logprob: -4.7447099685668945
    5. ']:' → logprob: -5.2447099685668945
    6. '   ' → logprob: -6.9947099685668945
    7. ']:

' → logprob: -7.8697099685668945
    8. ']:
' → logprob: -8.369709968566895
    9. '):
' → logprob: -8.494709968566895
    10. ',' → logprob: -8.744709968566895

Token 878: ' then' (ID: 1815)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.11817171424627304
    2. 'for' → logprob: -2.8681716918945312
    3. '   ' → logprob: -3.9931716918945312
    4. ' 
' → logprob: -4.243171691894531
    5. ' ' → logprob: -4.868171691894531
    6. '    ' → logprob: -5.368171691894531
    7. ' y' → logprob: -6.118171691894531
    8. '    
' → logprob: -6.243171691894531
    9. '
' → logprob: -6.368171691894531
    10. '       ' → logprob: -6.993171691894531

Token 879: ' recom' (ID: 19119)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6312203407287598
    2. ' for' → logprob: -1.1312203407287598
    3. '   ' → logprob: -2.3812203407287598
    4. '
' → logprob: -3.3812203407287598
    5. '       ' → logprob: -5.50622034072876
    6. '#' → logprob: -5.88122034072876
    7. 'from' → logprob: -6.00622034072876
    8. '           ' → logprob: -6.25622034072876
    9. 'continue' → logprob: -7.13122034072876
    10. 'new' → logprob: -7.25622034072876

Token 880: 'bine' (ID: 22066)
  Prédit: 'pute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pute' → logprob: -0.00025680975522845984
    2. 'pose' → logprob: -9.250256538391113
    3. 'bine' → logprob: -9.375256538391113
    4. '
' → logprob: -10.000256538391113
    5. 'put' → logprob: -11.750256538391113
    6. '#' → logprob: -12.125256538391113
    7. 'putate' → logprob: -12.500256538391113
    8. '   ' → logprob: -12.875256538391113
    9. '```' → logprob: -13.000256538391113
    10. 'ute' → logprob: -14.125256538391113

Token 881: ' the' (ID: 290)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4599440097808838
    2. ' for' → logprob: -2.209944009780884
    3. ' from' → logprob: -2.834944009780884
    4. 'from' → logprob: -2.959944009780884
    5. ',' → logprob: -3.459944009780884
    6. ':' → logprob: -3.709944009780884
    7. ' ' → logprob: -4.334943771362305
    8. '
' → logprob: -4.459943771362305
    9. ' =' → logprob: -4.584943771362305
    10. ':
' → logprob: -4.584943771362305

Token 882: ' grund' (ID: 34475)
  Prédit: 'segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'segments' → logprob: -1.400059461593628
    2. 'xor' → logprob: -1.650059461593628
    3. 'remaining' → logprob: -1.775059461593628
    4. 'se' → logprob: -2.275059461593628
    5. 'seg' → logprob: -2.900059461593628
    6. 'runs' → logprob: -2.900059461593628
    7. 'rest' → logprob: -3.275059461593628
    8. 'new' → logprob: -3.525059461593628
    9. 'result' → logprob: -4.025059700012207
    10. 'spl' → logprob: -4.025059700012207

Token 883: 'ies' (ID: 566)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.003635826986283064
    2. 'ies' → logprob: -5.628635883331299
    3. '   ' → logprob: -11.37863540649414
    4. 'val' → logprob: -11.62863540649414
    5. 'value' → logprob: -12.75363540649414
    6. 'gies' → logprob: -12.87863540649414
    7. '_val' → logprob: -13.00363540649414
    8. 'values' → logprob: -13.87863540649414
    9. 'xy' → logprob: -14.00363540649414
    10. '       ' → logprob: -14.25363540649414

Token 884: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6720361709594727
    2. ' for' → logprob: -1.0470361709594727
    3. ',' → logprob: -3.2970361709594727
    4. 'for' → logprob: -3.4220361709594727
    5. '
' → logprob: -3.9220361709594727
    6. ':' → logprob: -4.547036170959473
    7. ' =' → logprob: -5.422036170959473
    8. ' ' → logprob: -5.797036170959473
    9. '<|end|>' → logprob: -5.797036170959473
    10. '    
' → logprob: -5.922036170959473

Token 885: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.024873018264770508
    2. ' for' → logprob: -4.149872779846191
    3. ',' → logprob: -5.899872779846191
    4. 'for' → logprob: -6.524872779846191
    5. ':' → logprob: -7.024872779846191
    6. ' ' → logprob: -7.274872779846191
    7. '    
' → logprob: -7.274872779846191
    8. '
' → logprob: -7.774872779846191
    9. '{' → logprob: -8.649872779846191
    10. '  
' → logprob: -8.774872779846191

Token 886: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20575612783432007
    2. ' for' → logprob: -1.8307561874389648
    3. 'for' → logprob: -4.080756187438965
    4. '
' → logprob: -5.830756187438965
    5. '    
' → logprob: -5.955756187438965
    6. ' 
' → logprob: -6.330756187438965
    7. '	for' → logprob: -7.330756187438965
    8. ' ' → logprob: -8.455756187438965
    9. '  
' → logprob: -8.455756187438965
    10. '   
' → logprob: -9.330756187438965

Token 887: ' So' (ID: 2632)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.19951970875263214
    2. ' for' → logprob: -1.8245197534561157
    3. '   ' → logprob: -3.949519634246826
    4. '
' → logprob: -8.574520111083984
    5. '```' → logprob: -9.199520111083984
    6. '	for' → logprob: -11.324520111083984
    7. '    
' → logprob: -12.199520111083984
    8. '``' → logprob: -12.449520111083984
    9. 'from' → logprob: -13.824520111083984
    10. ' ' → logprob: -13.824520111083984

Token 888: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.0792226493358612
    2. 'for' → logprob: -2.5792226791381836
    3. '   ' → logprob: -8.329222679138184
    4. '
' → logprob: -9.579222679138184
    5. ' i' → logprob: -12.954222679138184
    6. '	for' → logprob: -13.079222679138184
    7. ' ' → logprob: -13.204222679138184
    8. '    
' → logprob: -13.329222679138184
    9. ' from' → logprob: -13.329222679138184
    10. ' 
' → logprob: -13.329222679138184

Token 889: ' each' (ID: 2454)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.022796034812927246
    2. 'i' → logprob: -4.147796154022217
    3. ' v' → logprob: -5.647796154022217
    4. 'seg' → logprob: -6.022796154022217
    5. ' i' → logprob: -8.897795677185059
    6. 'run' → logprob: -9.022795677185059
    7. '   ' → logprob: -9.272795677185059
    8. 'idx' → logprob: -9.522795677185059
    9. '_i' → logprob: -9.897795677185059
    10. ' seg' → logprob: -9.897795677185059

Token 890: ' seg' (ID: 3055)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.5265825390815735
    2. ' v' → logprob: -0.9015825390815735
    3. ' seg' → logprob: -6.651582717895508
    4. 'seg' → logprob: -7.901582717895508
    5. 'i' → logprob: -8.026582717895508
    6. ' i' → logprob: -8.151582717895508
    7. '_' → logprob: -8.151582717895508
    8. ' y' → logprob: -9.151582717895508
    9. '`' → logprob: -9.276582717895508
    10. '```' → logprob: -9.276582717895508

Token 891: ' index' (ID: 3472)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5461915731430054
    2. 's' → logprob: -2.046191692352295
    3. ' in' → logprob: -2.171191692352295
    4. 'm' → logprob: -2.546191692352295
    5. ' =' → logprob: -3.296191692352295
    6. '=' → logprob: -4.421191692352295
    7. '_val' → logprob: -4.546191692352295
    8. ' _' → logprob: -4.921191692352295
    9. '_v' → logprob: -5.796191692352295
    10. 'mentation' → logprob: -5.796191692352295

Token 892: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.7342947125434875
    2. ',' → logprob: -1.3592946529388428
    3. ' in' → logprob: -1.8592946529388428
    4. ' ,' → logprob: -2.4842946529388428
    5. 'i' → logprob: -4.609294891357422
    6. ':' → logprob: -5.984294891357422
    7. ' =' → logprob: -5.984294891357422
    8. '_' → logprob: -6.234294891357422
    9. 's' → logprob: -6.734294891357422
    10. ' ' → logprob: -7.109294891357422

Token 893: ' and' (ID: 326)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3537316620349884
    2. ':' → logprob: -1.603731632232666
    3. ' in' → logprob: -2.478731632232666
    4. 'in' → logprob: -5.228731632232666
    5. ':
' → logprob: -6.353731632232666
    6. ' ,' → logprob: -6.603731632232666
    7. '=' → logprob: -6.728731632232666
    8. ' =' → logprob: -7.103731632232666
    9. ' :' → logprob: -7.353731632232666
    10. 's' → logprob: -8.228732109069824

Token 894: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.4239850640296936
    2. ' y' → logprob: -1.5489850044250488
    3. 'v' → logprob: -2.423985004425049
    4. 'value' → logprob: -4.173985004425049
    5. ' v' → logprob: -4.423985004425049
    6. ' value' → logprob: -5.173985004425049
    7. 'val' → logprob: -5.548985004425049
    8. ' val' → logprob: -5.548985004425049
    9. 'for' → logprob: -6.673985004425049
    10. 'length' → logprob: -7.173985004425049

Token 895: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.06201642006635666
    2. 'in' → logprob: -2.812016487121582
    3. 'v' → logprob: -11.312016487121582
    4. '```' → logprob: -11.687016487121582
    5. ' ' → logprob: -12.187016487121582
    6. 'n' → logprob: -12.687016487121582
    7. '_in' → logprob: -12.812016487121582
    8. ',' → logprob: -13.187016487121582
    9. 'y' → logprob: -13.187016487121582
    10. 's' → logprob: -13.187016487121582

Token 896: ' [' (ID: 723)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.05507048964500427
    2. ' range' → logprob: -2.930070400238037
    3. '1' → logprob: -9.055070877075195
    4. 'v' → logprob: -10.555070877075195
    5. '[' → logprob: -11.055070877075195
    6. '(range' → logprob: -11.680070877075195
    7. ' v' → logprob: -11.930070877075195
    8. ' ' → logprob: -12.555070877075195
    9. '
' → logprob: -12.805070877075195
    10. '	range' → logprob: -13.430070877075195

Token 897: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.5716304410016164e-05
    2. 'v' → logprob: -11.250035285949707
    3. ' ' → logprob: -11.250035285949707
    4. '
' → logprob: -12.250035285949707
    5. 'range' → logprob: -13.000035285949707
    6. '   ' → logprob: -13.250035285949707
    7. '0' → logprob: -15.250035285949707
    8. '```' → logprob: -16.000036239624023
    9. '`' → logprob: -16.875036239624023
    10. '(' → logprob: -17.062536239624023

Token 898: '..' (ID: 485)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5826486349105835
    2. ',v' → logprob: -1.4576486349105835
    3. '..' → logprob: -1.5826486349105835
    4. '...' → logprob: -7.207648754119873
    5. '(v' → logprob: -7.332648754119873
    6. ':v' → logprob: -7.707648754119873
    7. ' ,' → logprob: -7.832648754119873
    8. ',se' → logprob: -8.207648277282715
    9. ',
' → logprob: -8.582648277282715
    10. 'se' → logprob: -8.957648277282715

Token 899: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.36356115341186523
    2. 'se' → logprob: -1.2385611534118652
    3. 'seg' → logprob: -4.238561153411865
    4. ' seg' → logprob: -8.363561630249023
    5. ' v' → logprob: -8.488561630249023
    6. '   ' → logprob: -10.613561630249023
    7. 'segments' → logprob: -10.863561630249023
    8. '
' → logprob: -11.113561630249023
    9. '```' → logprob: -11.363561630249023
    10. 'val' → logprob: -11.363561630249023

Token 900: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.2571999132633209
    2. ']:' → logprob: -2.132200002670288
    3. '[i' → logprob: -2.382200002670288
    4. '],' → logprob: -4.507199764251709
    5. '+' → logprob: -6.507199764251709
    6. ']' → logprob: -6.757199764251709
    7. ']:

' → logprob: -7.507199764251709
    8. '   ' → logprob: -8.007200241088867
    9. '[' → logprob: -8.382200241088867
    10. ']:
' → logprob: -8.507200241088867

Token 901: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17664211988449097
    2. '       ' → logprob: -1.9266421794891357
    3. ' for' → logprob: -4.676641941070557
    4. '    ' → logprob: -5.676641941070557
    5. '           ' → logprob: -7.176641941070557
    6. '```' → logprob: -7.301641941070557
    7. '
' → logprob: -7.926641941070557
    8. '    
' → logprob: -8.051642417907715
    9. ' 
' → logprob: -8.176642417907715
    10. ' ' → logprob: -8.426642417907715

Token 902: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8956214189529419
    2. ' for' → logprob: -0.8956214189529419
    3. 'for' → logprob: -2.2706212997436523
    4. ' ' → logprob: -3.5206212997436523
    5. '       ' → logprob: -4.395621299743652
    6. '    ' → logprob: -4.395621299743652
    7. ' 
' → logprob: -4.520621299743652
    8. ' i' → logprob: -5.645621299743652
    9. '    
' → logprob: -6.520621299743652
    10. '(' → logprob: -6.895621299743652

Token 903: ' next' (ID: 2613)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3990318477153778
    2. 'for' → logprob: -1.2740318775177002
    3. '   ' → logprob: -3.0240318775177
    4. '       ' → logprob: -7.774031639099121
    5. '
' → logprob: -9.149031639099121
    6. '           ' → logprob: -9.774031639099121
    7. '    ' → logprob: -10.149031639099121
    8. '	for' → logprob: -10.399031639099121
    9. '```' → logprob: -11.024031639099121
    10. ' i' → logprob: -11.024031639099121

Token 904: ' grund' (ID: 34475)
  Prédit: '_states'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_states' → logprob: -0.5071402788162231
    2. '_state' → logprob: -1.7571402788162231
    3. '_' → logprob: -2.7571401596069336
    4. '_val' → logprob: -3.2571401596069336
    5. 'state' → logprob: -3.8821401596069336
    6. 'states' → logprob: -4.007140159606934
    7. ' states' → logprob: -4.132140159606934
    8. '_se' → logprob: -4.132140159606934
    9. '   ' → logprob: -4.507140159606934
    10. '_x' → logprob: -5.007140159606934

Token 905: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.004484239034354687
    2. 'ies' → logprob: -5.504484176635742
    3. '   ' → logprob: -8.129484176635742
    4. '_val' → logprob: -10.129484176635742
    5. 'val' → logprob: -10.504484176635742
    6. 'x' → logprob: -11.004484176635742
    7. '       ' → logprob: -12.129484176635742
    8. 'xy' → logprob: -12.254484176635742
    9. ' ' → logprob: -13.004484176635742
    10. '```' → logprob: -13.379484176635742

Token 906: ' =' (ID: 314)
  Prédit: '_val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -0.9384635090827942
    2. ' =' → logprob: -1.3134634494781494
    3. '=' → logprob: -1.6884634494781494
    4. 's' → logprob: -2.6884634494781494
    5. '   ' → logprob: -3.6884634494781494
    6. '_' → logprob: -3.9384634494781494
    7. 'val' → logprob: -4.4384636878967285
    8. '_set' → logprob: -4.8134636878967285
    9. '_vals' → logprob: -5.0634636878967285
    10. '_values' → logprob: -5.4384636878967285

Token 907: ' XOR' (ID: 147209)
  Prédit: 'xor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'xor' → logprob: -0.050874270498752594
    2. ' xor' → logprob: -3.6758742332458496
    3. '0' → logprob: -3.9258742332458496
    4. ' ' → logprob: -5.92587423324585
    5. '   ' → logprob: -6.92587423324585
    6. '  ' → logprob: -8.738374710083008
    7. 'grund' → logprob: -9.238374710083008
    8. '(x' → logprob: -9.550874710083008
    9. '```' → logprob: -9.613374710083008
    10. '    ' → logprob: -10.488374710083008

Token 908: ' over' (ID: 1072)
  Prédit: '_val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_val' → logprob: -0.391571044921875
    2. 'xor' → logprob: -1.391571044921875
    3. '^' → logprob: -3.391571044921875
    4. '(x' → logprob: -4.266571044921875
    5. 'val' → logprob: -5.141571044921875
    6. '   ' → logprob: -5.891571044921875
    7. '_x' → logprob: -5.891571044921875
    8. ' ^' → logprob: -6.016571044921875
    9. ' ^=' → logprob: -6.141571044921875
    10. '^(' → logprob: -6.266571044921875

Token 909: ' all' (ID: 722)
  Prédit: 'seg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'seg' → logprob: -1.2494155168533325
    2. 'se' → logprob: -1.3744155168533325
    3. 'range' → logprob: -1.6244155168533325
    4. 'j' → logprob: -1.6244155168533325
    5. 'v' → logprob: -3.374415397644043
    6. 'xor' → logprob: -4.499415397644043
    7. 'i' → logprob: -6.124415397644043
    8. 'len' → logprob: -6.249415397644043
    9. '(v' → logprob: -6.249415397644043
    10. ' seg' → logprob: -6.249415397644043

Token 910: ' grund' (ID: 34475)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.8386319279670715
    2. 'se' → logprob: -1.9636318683624268
    3. 'i' → logprob: -2.2136318683624268
    4. 'v' → logprob: -2.3386318683624268
    5. 'seg' → logprob: -2.8386318683624268
    6. 'segments' → logprob: -3.0886318683624268
    7. 'xor' → logprob: -3.5886318683624268
    8. '^' → logprob: -4.088632106781006
    9. 'vals' → logprob: -4.088632106781006
    10. 'val' → logprob: -4.713632106781006

Token 911: 'y' (ID: 88)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.38201117515563965
    2. '_val' → logprob: -2.2570111751556396
    3. '[i' → logprob: -3.0070111751556396
    4. '   ' → logprob: -3.0070111751556396
    5. 'i' → logprob: -4.007011413574219
    6. '[' → logprob: -4.507011413574219
    7. 'segments' → logprob: -4.757011413574219
    8. '       ' → logprob: -4.882011413574219
    9. '_i' → logprob: -4.882011413574219
    10. '_' → logprob: -5.007011413574219

Token 912: ' for' (ID: 395)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.4916691780090332
    2. '(se' → logprob: -2.241669178009033
    3. '(i' → logprob: -2.241669178009033
    4. '^' → logprob: -2.616669178009033
    5. '(seg' → logprob: -2.866669178009033
    6. 's' → logprob: -3.116669178009033
    7. '(' → logprob: -3.116669178009033
    8. 'se' → logprob: -3.241669178009033
    9. 'of' → logprob: -3.616669178009033
    10. '_se' → logprob: -3.866669178009033

Token 913: ' seg' (ID: 3055)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.03680647164583206
    2. 'seg' → logprob: -4.161806583404541
    3. 'se' → logprob: -5.036806583404541
    4. ' j' → logprob: -5.786806583404541
    5. '```' → logprob: -5.786806583404541
    6. 'v' → logprob: -6.161806583404541
    7. '[j' → logprob: -6.911806583404541
    8. ' seg' → logprob: -7.286806583404541
    9. 'range' → logprob: -7.286806583404541
    10. 'segments' → logprob: -7.286806583404541

Token 914: 's' (ID: 82)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.13449226319789886
    2. 's' → logprob: -2.8844921588897705
    3. '_i' → logprob: -4.63449239730835
    4. '[' → logprob: -5.00949239730835
    5. '_val' → logprob: -5.13449239730835
    6. ' i' → logprob: -5.25949239730835
    7. '_' → logprob: -5.25949239730835
    8. '=' → logprob: -5.50949239730835
    9. ' _' → logprob: -5.50949239730835
    10. 'i' → logprob: -5.75949239730835

Token 915: ' except' (ID: 6384)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.6952399611473083
    2. '^' → logprob: -1.8202400207519531
    3. '
' → logprob: -2.570240020751953
    4. '_except' → logprob: -3.320240020751953
    5. ' ^' → logprob: -3.445240020751953
    6. '[:' → logprob: -3.695240020751953
    7. '[' → logprob: -3.945240020751953
    8. 'def' → logprob: -3.945240020751953
    9. '   ' → logprob: -4.320240020751953
    10. 'except' → logprob: -4.445240020751953

Token 916: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.05809526890516281
    2. ' i' → logprob: -3.1830952167510986
    3. '```' → logprob: -4.933095455169678
    4. '[i' → logprob: -5.808095455169678
    5. 'se' → logprob: -7.058095455169678
    6. ' seg' → logprob: -7.433095455169678
    7. 'segments' → logprob: -7.433095455169678
    8. '`' → logprob: -7.683095455169678
    9. 'seg' → logprob: -7.808095455169678
    10. 'v' → logprob: -7.808095455169678

Token 917: ' xor' (ID: 106402)
  Prédit: ' ^'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ^' → logprob: -0.09868396073579788
    2. '^' → logprob: -2.473684072494507
    3. ' ^=' → logprob: -6.348683834075928
    4. '   ' → logprob: -6.348683834075928
    5. ' ^
' → logprob: -6.598683834075928
    6. '_^' → logprob: -6.723683834075928
    7. ' xor' → logprob: -6.848683834075928
    8. ',' → logprob: -7.348683834075928
    9. '_' → logprob: -7.598683834075928
    10. 'xor' → logprob: -8.348684310913086

Token 918: ' grund' (ID: 34475)
  Prédit: 'grund'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grund' → logprob: -0.0015442610019817948
    2. ' grund' → logprob: -6.50154447555542
    3. '   ' → logprob: -11.126543998718262
    4. '(' → logprob: -11.501543998718262
    5. 'grond' → logprob: -11.751543998718262
    6. ' ' → logprob: -13.126543998718262
    7. '``' → logprob: -13.751543998718262
    8. '```' → logprob: -13.751543998718262
    9. '  ' → logprob: -14.126543998718262
    10. '       ' → logprob: -14.501543998718262

Token 919: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.014767316170036793
    2. '_val' → logprob: -4.639767169952393
    3. 'val' → logprob: -6.014767169952393
    4. 'v' → logprob: -6.889767169952393
    5. 'u' → logprob: -8.26476764678955
    6. '   ' → logprob: -8.38976764678955
    7. '       ' → logprob: -9.01476764678955
    8. '```' → logprob: -9.26476764678955
    9. 'value' → logprob: -9.76476764678955
    10. ' ' → logprob: -9.88976764678955

Token 920: '(v' (ID: 6932)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7718325257301331
    2. '(v' → logprob: -0.7718325257301331
    3. '(seg' → logprob: -3.1468324661254883
    4. '(se' → logprob: -3.8968324661254883
    5. '(
' → logprob: -4.646832466125488
    6. '(s' → logprob: -6.771832466125488
    7. '((' → logprob: -6.896832466125488
    8. '(y' → logprob: -8.771832466125488
    9. '```' → logprob: -9.396832466125488
    10. '(val' → logprob: -9.771832466125488

Token 921: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.42529746890068054
    2. '(y' → logprob: -1.675297498703003
    3. ' -' → logprob: -2.425297498703003
    4. '-y' → logprob: -3.050297498703003
    5. '(' → logprob: -4.175297260284424
    6. '(v' → logprob: -5.925297260284424
    7. ')' → logprob: -6.550297260284424
    8. '[y' → logprob: -6.925297260284424
    9. '[' → logprob: -7.425297260284424
    10. '-v' → logprob: -7.800297260284424

Token 922: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.00012368128227535635
    2. ' y' → logprob: -9.000123977661133
    3. '   ' → logprob: -15.750123977661133
    4. '	y' → logprob: -17.500123977661133
    5. '
' → logprob: -18.125123977661133
    6. '1' → logprob: -18.375123977661133
    7. '```' → logprob: -18.375123977661133
    8. '       ' → logprob: -19.000123977661133
    9. '[y' → logprob: -19.625123977661133
    10. '           ' → logprob: -19.750123977661133

Token 923: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.28436383605003357
    2. ')
' → logprob: -1.409363865852356
    3. '[i' → logprob: -6.534363746643066
    4. '   ' → logprob: -7.034363746643066
    5. '[' → logprob: -7.909363746643066
    6. ')+' → logprob: -9.659363746643066
    7. ')
' → logprob: -9.659363746643066
    8. 'for' → logprob: -10.159363746643066
    9. ']' → logprob: -10.409363746643066
    10. '       ' → logprob: -10.534363746643066

Token 924: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1423497200012207
    2. '    
' → logprob: -3.3923497200012207
    3. ' 
' → logprob: -3.6423497200012207
    4. '
' → logprob: -4.017349720001221
    5. '  
' → logprob: -4.017349720001221
    6. '\' → logprob: -4.517349720001221
    7. '\n' → logprob: -5.142349720001221
    8. ' ' → logprob: -5.642349720001221
    9. '   
' → logprob: -5.642349720001221
    10. '     
' → logprob: -6.392349720001221

Token 925: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.017278142273426056
    2. '
' → logprob: -5.64227819442749
    3. ' for' → logprob: -5.64227819442749
    4. '```' → logprob: -5.89227819442749
    5. 'for' (adapté à ' for') → logprob: -6.26727819442749
    6. '    
' → logprob: -6.64227819442749
    7. ' ' → logprob: -7.14227819442749
    8. '  
' → logprob: -7.39227819442749
    9. ' 
' → logprob: -7.64227819442749
    10. '\' → logprob: -7.64227819442749

Token 926: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.05488927662372589
    2. ' i' → logprob: -2.92988920211792
    3. 'v' → logprob: -12.929889678955078
    4. '```' → logprob: -13.929889678955078
    5. '_i' → logprob: -14.179889678955078
    6. '	i' → logprob: -14.304889678955078
    7. '`' → logprob: -14.679889678955078
    8. 'idx' → logprob: -14.679889678955078
    9. ' v' → logprob: -14.804889678955078
    10. '   ' → logprob: -15.054889678955078

Token 927: ',v' (ID: 30680)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.4014813303947449
    2. 'in' → logprob: -1.1514813899993896
    3. ' ' → logprob: -4.2764811515808105
    4. ',' → logprob: -7.7764811515808105
    5. '	in' → logprob: -9.901481628417969
    6. ' ,' → logprob: -10.401481628417969
    7. '  ' → logprob: -11.151481628417969
    8. '=' → logprob: -11.526481628417969
    9. '   ' → logprob: -11.651481628417969
    10. '_' → logprob: -11.651481628417969

Token 928: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.6958048939704895
    2. ' in' → logprob: -0.6958048939704895
    3. ',' → logprob: -6.320805072784424
    4. ' ' → logprob: -7.320805072784424
    5. ' ,' → logprob: -9.320804595947266
    6. '	in' → logprob: -9.820804595947266
    7. 'i' → logprob: -11.820804595947266
    8. ' i' → logprob: -11.820804595947266
    9. 'import' → logprob: -12.320804595947266
    10. '  ' → logprob: -12.445804595947266

Token 929: ' enumerate' (ID: 29671)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -3.297462171758525e-05
    2. 'se' → logprob: -10.750033378601074
    3. ' range' → logprob: -11.375033378601074
    4. '(range' → logprob: -17.875032424926758
    5. 'seg' → logprob: -17.875032424926758
    6. '```' → logprob: -17.875032424926758
    7. 'rang' → logprob: -18.375032424926758
    8. 'in' → logprob: -18.500032424926758
    9. 'enumer' → logprob: -18.625032424926758
    10. '	range' → logprob: -18.750032424926758

Token 930: '(se' (ID: 19430)
  Prédit: '(se'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(se' → logprob: -0.07890543341636658
    2. 'se' → logprob: -2.5789053440093994
    3. ',se' → logprob: -11.95390510559082
    4. '	se' → logprob: -12.45390510559082
    5. ')' → logprob: -13.82890510559082
    6. '(' → logprob: -13.82890510559082
    7. '_se' → logprob: -13.95390510559082
    8. '(seg' → logprob: -14.57890510559082
    9. ' (' → logprob: -14.95390510559082
    10. '   ' → logprob: -14.95390510559082

Token 931: 'gs' (ID: 9233)
  Prédit: 'gs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gs' → logprob: -0.016131849959492683
    2. 's' → logprob: -4.14113187789917
    3. 'cs' → logprob: -10.516131401062012
    4. 'ts' → logprob: -10.516131401062012
    5. 'g' → logprob: -11.016131401062012
    6. '   ' → logprob: -11.891131401062012
    7. 'ps' → logprob: -12.391131401062012
    8. 'qs' → logprob: -12.766131401062012
    9. '       ' → logprob: -13.266131401062012
    10. '```' → logprob: -13.266131401062012

Token 932: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.3551560640335083
    2. '):' → logprob: -1.2301560640335083
    3. ':' → logprob: -5.230155944824219
    4. '   ' → logprob: -7.605155944824219
    5. '):
' → logprob: -8.230155944824219
    6. ')' → logprob: -8.480155944824219
    7. ',' → logprob: -8.605155944824219
    8. ':
' → logprob: -8.855155944824219
    9. '):

' → logprob: -11.730155944824219
    10. ' ):
' → logprob: -12.230155944824219

Token 933: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13025519251823425
    2. '   ' → logprob: -2.2552552223205566
    3. ' for' → logprob: -4.505255222320557
    4. '<|end|>' → logprob: -6.130255222320557
    5. '```' → logprob: -6.755255222320557
    6. '    ' → logprob: -6.755255222320557
    7. '	   ' → logprob: -8.005254745483398
    8. ',' → logprob: -8.630254745483398
    9. '     ' → logprob: -8.880254745483398
    10. ' ' → logprob: -8.880254745483398

Token 934: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.1633814126253128
    2. ' for' → logprob: -1.9133814573287964
    3. '   ' → logprob: -5.913381576538086
    4. '       ' → logprob: -7.913381576538086
    5. '	for' → logprob: -9.413381576538086
    6. '```' → logprob: -14.413381576538086
    7. '
' → logprob: -14.913381576538086
    8. ' ' → logprob: -15.288381576538086
    9. 'range' → logprob: -15.413381576538086
    10. '           ' → logprob: -15.913381576538086

Token 935: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.023247340694069862
    2. ' y' → logprob: -3.773247241973877
    3. '   ' → logprob: -13.523247718811035
    4. '	y' → logprob: -14.648247718811035
    5. ' ' → logprob: -17.64824676513672
    6. '  ' → logprob: -18.64824676513672
    7. 'yv' → logprob: -18.64824676513672
    8. '`' → logprob: -18.64824676513672
    9. '1' → logprob: -19.02324676513672
    10. ' ' → logprob: -19.14824676513672

Token 936: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.009773205034434795
    2. 'in' → logprob: -4.634773254394531
    3. ' ' → logprob: -11.884773254394531
    4. '1' → logprob: -12.134773254394531
    5. '<|end|>' → logprob: -14.384773254394531
    6. 'import' → logprob: -14.509773254394531
    7. '	in' → logprob: -14.509773254394531
    8. ')' → logprob: -15.009773254394531
    9. 'y' → logprob: -15.134773254394531
    10. '```' → logprob: -15.259773254394531

Token 937: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.029758360236883163
    2. ' range' → logprob: -3.5297584533691406
    3. '1' → logprob: -11.77975845336914
    4. ' ' → logprob: -15.52975845336914
    5. '	range' → logprob: -16.77975845336914
    6. '(range' → logprob: -17.15475845336914
    7. '   ' → logprob: -18.65475845336914
    8. 'Range' → logprob: -19.15475845336914
    9. '  ' → logprob: -19.40475845336914
    10. 'ange' → logprob: -19.65475845336914

Token 938: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.006715370807796717
    2. '1' → logprob: -5.006715297698975
    3. '[' → logprob: -17.881715774536133
    4. '   ' → logprob: -18.131715774536133
    5. '(
' → logprob: -18.506715774536133
    6. '```' → logprob: -18.506715774536133
    7. ' (' → logprob: -18.756715774536133
    8. ' ' → logprob: -18.756715774536133
    9. '
' → logprob: -19.006715774536133
    10. '{
' → logprob: -20.131715774536133

Token 939: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.000000953674316
    3. '   ' → logprob: -17.375
    4. '```' → logprob: -18.0
    5. '
' → logprob: -18.875
    6. 'v' → logprob: -18.875
    7. '(' → logprob: -19.0
    8. '`' → logprob: -19.75
    9. '۱' → logprob: -20.5
    10. '{' → logprob: -20.625

Token 940: ',v' (ID: 30680)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005020632408559322
    2. ',v' → logprob: -5.505020618438721
    3. ' ,' → logprob: -7.005020618438721
    4. ',y' → logprob: -10.755021095275879
    5. ',
' → logprob: -11.505021095275879
    6. ',len' → logprob: -14.505021095275879
    7. '```' → logprob: -14.630021095275879
    8. ',value' → logprob: -14.880021095275879
    9. 'v' → logprob: -15.755021095275879
    10. ',n' → logprob: -16.130020141601562

Token 941: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.022286808118224144
    2. ' +' → logprob: -3.897286891937256
    3. '):' → logprob: -6.647286891937256
    4. '):
' → logprob: -7.772286891937256
    5. '   ' → logprob: -12.147286415100098
    6. '+
' → logprob: -12.397286415100098
    7. ' ):' → logprob: -12.772286415100098
    8. ')' → logprob: -13.022286415100098
    9. '       ' → logprob: -13.272286415100098
    10. ',' → logprob: -13.272286415100098

Token 942: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.2729995988775045e-06
    2. ' ' → logprob: -12.125006675720215
    3. '):
' → logprob: -14.250006675720215
    4. '
' → logprob: -16.3750057220459
    5. '```' → logprob: -17.2500057220459
    6. '0' → logprob: -17.5000057220459
    7. '   ' → logprob: -17.6250057220459
    8. ')' → logprob: -18.6250057220459
    9. '):' → logprob: -19.1250057220459
    10. '``' → logprob: -19.7500057220459

Token 943: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.39020612835884094
    2. '):' → logprob: -1.1402060985565186
    3. ':' → logprob: -5.890206336975098
    4. '):
' → logprob: -8.515206336975098
    5. ':
' → logprob: -9.015206336975098
    6. ')' → logprob: -9.015206336975098
    7. '       ' → logprob: -9.765206336975098
    8. '   ' → logprob: -10.890206336975098
    9. ' ):
' → logprob: -11.515206336975098
    10. ',' → logprob: -11.765206336975098

Token 944: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0025382055900990963
    2. '```' → logprob: -6.627538204193115
    3. '       ' → logprob: -6.877538204193115
    4. '{
' → logprob: -10.252538681030273
    5. '{' → logprob: -10.377538681030273
    6. '   ' → logprob: -10.502538681030273
    7. '``' → logprob: -10.627538681030273
    8. '               ' → logprob: -10.627538681030273
    9. '`' → logprob: -10.877538681030273
    10. '#' → logprob: -12.127538681030273

Token 945: ' g' (ID: 329)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.05453725904226303
    2. 'new' → logprob: -3.804537296295166
    3. '           ' → logprob: -4.054537296295166
    4. '   ' → logprob: -5.554537296295166
    5. 'nx' → logprob: -6.304537296295166
    6. 'mex' → logprob: -6.304537296295166
    7. ' next' → logprob: -6.929537296295166
    8. '               ' → logprob: -7.304537296295166
    9. 'tmp' → logprob: -7.429537296295166
    10. 'm' → logprob: -7.429537296295166

Token 946: ' =' (ID: 314)
  Prédit: '_next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_next' → logprob: -0.2068639099597931
    2. '_val' → logprob: -2.5818638801574707
    3. ' =' → logprob: -2.9568638801574707
    4. 'next' → logprob: -3.5818638801574707
    5. '=' → logprob: -3.9568638801574707
    6. '(next' → logprob: -5.831863880157471
    7. '_' → logprob: -5.956863880157471
    8. '_n' → logprob: -6.331863880157471
    9. 'val' → logprob: -6.581863880157471
    10. '_new' → logprob: -6.706863880157471

Token 947: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.7496943473815918
    2. 'xor' → logprob: -0.7496943473815918
    3. 'grund' → logprob: -2.999694347381592
    4. '(x' → logprob: -6.499694347381592
    5. '(' → logprob: -6.874694347381592
    6. ' ' → logprob: -6.999694347381592
    7. ' xor' → logprob: -8.24969482421875
    8. ' grund' → logprob: -9.06219482421875
    9. '[x' → logprob: -9.37469482421875
    10. '   ' → logprob: -9.43719482421875

Token 948: '0' (ID: 15)
  Prédit: 'xor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xor' → logprob: -0.32521313428878784
    2. 'grund' → logprob: -1.3252131938934326
    3. '0' → logprob: -5.0752129554748535
    4. '(x' → logprob: -6.0752129554748535
    5. '(' → logprob: -6.5752129554748535
    6. 'mex' → logprob: -8.887713432312012
    7. 'grond' → logprob: -9.012713432312012
    8. 'xer' → logprob: -9.387713432312012
    9. 'grunt' → logprob: -9.512713432312012
    10. '(m' → logprob: -9.637713432312012

Token 949: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 950: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4797547459602356
    2. ' for' → logprob: -1.6047546863555908
    3. 'for' → logprob: -1.7297546863555908
    4. 'xor' → logprob: -7.10475492477417
    5. '   ' → logprob: -7.22975492477417
    6. '               ' → logprob: -8.104754447937012
    7. '                   ' → logprob: -8.229754447937012
    8. '       ' → logprob: -9.104754447937012
    9. '	for' → logprob: -9.229754447937012
    10. '```' → logprob: -9.354754447937012

Token 951: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.014243659563362598
    2. '           ' → logprob: -4.7642436027526855
    3. 'xor' → logprob: -5.8892436027526855
    4. ' for' → logprob: -6.1392436027526855
    5. 'g' → logprob: -7.3892436027526855
    6. '   ' → logprob: -10.139244079589844
    7. '```' → logprob: -12.264244079589844
    8. '^' → logprob: -12.264244079589844
    9. '               ' → logprob: -12.514244079589844
    10. ' xor' → logprob: -12.514244079589844

Token 952: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -8.537868779967539e-06
    2. ' j' → logprob: -12.250008583068848
    3. '_j' → logprob: -13.625008583068848
    4. 'k' → logprob: -14.375008583068848
    5. '   ' → logprob: -14.750008583068848
    6. 'jj' → logprob: -14.875008583068848
    7. '```' → logprob: -15.000008583068848
    8. 'idx' → logprob: -15.000008583068848
    9. '	j' → logprob: -15.125008583068848
    10. '
' → logprob: -16.00000762939453

Token 953: ',s' (ID: 20379)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3910681903362274
    2. 'in' → logprob: -1.3910682201385498
    3. '<|end|>' → logprob: -3.76606822013855
    4. '!=' → logprob: -4.141067981719971
    5. '```' → logprob: -5.016067981719971
    6. '=' → logprob: -5.516067981719971
    7. 'if' → logprob: -5.641067981719971
    8. '<|end|>' → logprob: -6.266067981719971
    9. ' j' → logprob: -6.391067981719971
    10. ',' → logprob: -6.391067981719971

Token 954: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1583113670349121
    2. 'in' → logprob: -2.283311367034912
    3. 'eg' → logprob: -3.658311367034912
    4. 'e' → logprob: -4.033311367034912
    5. 'i' → logprob: -8.28331184387207
    6. '=' → logprob: -9.03331184387207
    7. 'egs' → logprob: -9.28331184387207
    8. 'j' → logprob: -9.65831184387207
    9. ':' → logprob: -9.78331184387207
    10. 'g' → logprob: -9.90831184387207

Token 955: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.00014251544780563563
    2. ' enumerate' → logprob: -9.125142097473145
    3. 'enum' → logprob: -11.125142097473145
    4. 'en' → logprob: -11.625142097473145
    5. 'em' → logprob: -12.125142097473145
    6. 'range' → logprob: -13.250142097473145
    7. '(en' → logprob: -13.750142097473145
    8. '```' → logprob: -14.500142097473145
    9. '[(' → logprob: -15.375142097473145
    10. 'enu' → logprob: -15.750142097473145

Token 956: '(se' (ID: 19430)
  Prédit: 'se'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'se' → logprob: -1.664371848164592e-05
    2. '(se' → logprob: -11.125016212463379
    3. 'range' → logprob: -13.750016212463379
    4. 'enumer' → logprob: -14.875016212463379
    5. '	se' → logprob: -16.000017166137695
    6. '[' → logprob: -16.250017166137695
    7. '_se' → logprob: -17.250017166137695
    8. '
' → logprob: -17.375017166137695
    9. ',se' → logprob: -17.875017166137695
    10. '   ' → logprob: -18.000017166137695

Token 957: 'gs' (ID: 9233)
  Prédit: 'gs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gs' → logprob: -4.320199877838604e-07
    2. 'qs' → logprob: -15.75
    3. ' gs' → logprob: -16.0
    4. 'egs' → logprob: -16.25
    5. 'ps' → logprob: -16.75
    6. '.gs' → logprob: -18.25
    7. 'vs' → logprob: -19.0
    8. 'cs' → logprob: -19.25
    9. '(gs' → logprob: -19.25
    10. 'GS' → logprob: -19.5

Token 958: '):
' (ID: 1883)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.0636204406619072
    2. ':' → logprob: -4.063620567321777
    3. '               ' → logprob: -4.063620567321777
    4. ' if' → logprob: -4.063620567321777
    5. '):
' → logprob: -4.938620567321777
    6. 'if' → logprob: -7.063620567321777
    7. '():
' → logprob: -7.813620567321777
    8. '{
' → logprob: -8.063620567321777
    9. '           ' → logprob: -8.313620567321777
    10. '<|end|>' → logprob: -8.938620567321777

Token 959: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.02708400785923004
    2. ' ' → logprob: -4.152083873748779
    3. ' if' → logprob: -5.652083873748779
    4. '           ' → logprob: -6.777083873748779
    5. '			' → logprob: -6.777083873748779
    6. '<|end|>' → logprob: -6.902083873748779
    7. '                ' → logprob: -7.152083873748779
    8. '            ' → logprob: -7.527083873748779
    9. '	           ' → logprob: -7.527083873748779
    10. '              ' → logprob: -8.152084350585938

Token 960: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.2767103314399719
    2. ' if' → logprob: -1.6517102718353271
    3. '^' → logprob: -3.401710271835327
    4. '               ' → logprob: -5.401710510253906
    5. 'xor' → logprob: -5.526710510253906
    6. ' ' → logprob: -6.401710510253906
    7. ' ^=' → logprob: -6.401710510253906
    8. ' ^' → logprob: -6.651710510253906
    9. 'x' → logprob: -7.776710510253906
    10. '0' → logprob: -7.776710510253906

Token 961: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0031057035084813833
    2. ' j' → logprob: -6.253105640411377
    3. 'i' → logprob: -6.753105640411377
    4. 'not' → logprob: -12.753106117248535
    5. ' i' → logprob: -12.878106117248535
    6. '                   ' → logprob: -13.128106117248535
    7. ' not' → logprob: -14.503106117248535
    8. '```' → logprob: -14.503106117248535
    9. '$j' → logprob: -14.878106117248535
    10. '	j' → logprob: -15.878106117248535

Token 962: '==' (ID: 560)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.009278452955186367
    2. ' !=' → logprob: -5.009278297424316
    3. '==' → logprob: -6.009278297424316
    4. '```' → logprob: -10.884278297424316
    5. '!==' → logprob: -11.134278297424316
    6. ')!=' → logprob: -11.509278297424316
    7. '[i' → logprob: -11.509278297424316
    8. ' ==' → logprob: -11.884278297424316
    9. ']!=' → logprob: -11.884278297424316
    10. 'i' → logprob: -12.134278297424316

Token 963: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -4.320199877838604e-07
    2. ' i' → logprob: -14.75
    3. '   ' → logprob: -18.375
    4. '	i' → logprob: -18.875
    5. '```' → logprob: -19.375
    6. '<|end|>' → logprob: -19.5
    7. 'j' → logprob: -19.75
    8. '<|end|>' → logprob: -20.125
    9. ' ' → logprob: -20.375
    10. ''i' → logprob: -21.0

Token 964: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.09633538126945496
    2. ':' → logprob: -2.4713354110717773
    3. 'continue' → logprob: -5.221335411071777
    4. ' continue' → logprob: -7.221335411071777
    5. ':g' → logprob: -7.346335411071777
    6. '               ' → logprob: -8.596335411071777
    7. ':return' → logprob: -8.846335411071777
    8. '):
' → logprob: -9.846335411071777
    9. '                   ' → logprob: -10.221335411071777
    10. '	continue' → logprob: -10.346335411071777

Token 965: '                   ' (ID: 699)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -1.2446231842041016
    2. '                   ' → logprob: -1.3696231842041016
    3. ' ^=' → logprob: -1.4946231842041016
    4. '^' → logprob: -2.2446231842041016
    5. 'xor' → logprob: -2.4946231842041016
    6. '               ' → logprob: -3.8696231842041016
    7. ' ^' → logprob: -5.119623184204102
    8. '                       ' → logprob: -5.744623184204102
    9. ' xor' → logprob: -6.119623184204102
    10. '=' → logprob: -6.244623184204102

Token 966: ' g' (ID: 329)
  Prédit: '^'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '^' → logprob: -0.5564322471618652
    2. 'xor' → logprob: -1.6814322471618652
    3. 'g' (adapté à ' g') → logprob: -1.9314322471618652
    4. 'grund' → logprob: -2.6814322471618652
    5. ' ^=' → logprob: -3.8064322471618652
    6. '^(' → logprob: -6.806432247161865
    7. ' ^' → logprob: -7.306432247161865
    8. '^{' → logprob: -8.056432723999023
    9. '=' → logprob: -8.056432723999023
    10. 'gx' → logprob: -8.306432723999023

Token 967: ' ^=' (ID: 79665)
  Prédit: '^'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '^' → logprob: -0.004638149403035641
    2. ' ^=' → logprob: -5.379638195037842
    3. '=' → logprob: -11.129637718200684
    4. '^^' → logprob: -13.879637718200684
    5. 'xor' → logprob: -14.254637718200684
    6. '_^' → logprob: -14.504637718200684
    7. ''^' → logprob: -14.629637718200684
    8. '^(' → logprob: -15.629637718200684
    9. '^

' → logprob: -15.629637718200684
    10. '+=' → logprob: -15.879637718200684

Token 968: ' grund' (ID: 34475)
  Prédit: 'grund'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grund' → logprob: -3.173704271830502e-06
    2. ' grund' → logprob: -13.00000286102295
    3. 'grond' → logprob: -14.87500286102295
    4. 'grunt' → logprob: -16.250003814697266
    5. 'gründ' → logprob: -16.500003814697266
    6. 'grunn' → logprob: -17.000003814697266
    7. '```' → logprob: -17.000003814697266
    8. '(' → logprob: -17.125003814697266
    9. 'ground' → logprob: -17.125003814697266
    10. 'Grund' → logprob: -17.625003814697266

Token 969: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.00011415231710998341
    2. 'g' → logprob: -9.250114440917969
    3. '(g' → logprob: -12.000114440917969
    4. 'gy' → logprob: -12.625114440917969
    5. '(y' → logprob: -12.625114440917969
    6. '(v' → logprob: -13.000114440917969
    7. '```' → logprob: -14.625114440917969
    8. '[y' → logprob: -15.125114440917969
    9. 'yv' → logprob: -15.250114440917969
    10. 'sy' → logprob: -15.625114440917969

Token 970: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.0002756366156972945
    2. '(v' → logprob: -8.500275611877441
    3. 's' → logprob: -9.875275611877441
    4. '(' → logprob: -11.000275611877441
    5. ' (' → logprob: -13.250275611877441
    6. 'v' → logprob: -13.625275611877441
    7. '((' → logprob: -14.750275611877441
    8. '(
' → logprob: -15.000275611877441
    9. ')' → logprob: -16.500276565551758
    10. '```' → logprob: -16.625276565551758

Token 971: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.5043123364448547
    2. '-' → logprob: -1.37931227684021
    3. '-y' → logprob: -2.00431227684021
    4. ',y' → logprob: -5.379312515258789
    5. ',' → logprob: -5.504312515258789
    6. ')' → logprob: -8.379312515258789
    7. ' ,' → logprob: -8.754312515258789
    8. '),' → logprob: -9.004312515258789
    9. 'y' → logprob: -9.379312515258789
    10. ')-' → logprob: -9.754312515258789

Token 972: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -7.493430894101039e-05
    2. ' y' → logprob: -9.500075340270996
    3. '	y' → logprob: -17.75007438659668
    4. ''y' → logprob: -20.00007438659668
    5. '   ' → logprob: -20.50007438659668
    6. 'yb' → logprob: -21.00007438659668
    7. 'yac' → logprob: -21.50007438659668
    8. ' ' → logprob: -21.50007438659668
    9. '*y' → logprob: -21.50007438659668
    10. ')y' → logprob: -21.50007438659668

Token 973: ',' (ID: 11)
  Prédit: ',m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',m' → logprob: -0.5242406725883484
    2. ',' → logprob: -1.1492407321929932
    3. ')' → logprob: -2.399240732192993
    4. ')
' → logprob: -9.649240493774414
    5. ' ,' → logprob: -10.149240493774414
    6. ',None' → logprob: -10.149240493774414
    7. ')m' → logprob: -10.274240493774414
    8. ',n' → logprob: -10.649240493774414
    9. ',)' → logprob: -10.774240493774414
    10. ',M' → logprob: -11.024240493774414

Token 974: ' memo' (ID: 46393)
  Prédit: 'memo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'memo' → logprob: -1.8624639324116288e-06
    2. ' memo' → logprob: -13.250001907348633
    3. 'mem' → logprob: -20.000001907348633
    4. 'memory' → logprob: -20.250001907348633
    5. 'm' → logprob: -20.375001907348633
    6. 'mime' → logprob: -21.875001907348633
    7. '.memo' → logprob: -22.500001907348633
    8. 'mutex' → logprob: -22.875001907348633
    9. 'memor' → logprob: -23.375001907348633
    10. '   ' → logprob: -23.375001907348633

Token 975: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.061996035277843475
    2. ')
' → logprob: -2.8119959831237793
    3. '                   ' → logprob: -11.561996459960938
    4. ')
' → logprob: -11.561996459960938
    5. '               ' → logprob: -12.061996459960938
    6. ')

' → logprob: -13.311996459960938
    7. '           ' → logprob: -14.436996459960938
    8. ')#' → logprob: -15.311996459960938
    9. ' )' → logprob: -15.311996459960938
    10. ')return' → logprob: -15.811996459960938

Token 976: '               ' (ID: 506)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.8269112706184387
    2. '               ' → logprob: -1.201911211013794
    3. ' else' → logprob: -1.701911211013794
    4. '           ' → logprob: -2.826911211013794
    5. '                   ' → logprob: -4.326911449432373
    6. '<|end|>' → logprob: -5.826911449432373
    7. '       ' → logprob: -7.326911449432373
    8. ' ' → logprob: -7.576911449432373
    9. '```' → logprob: -7.701911449432373
    10. '            ' → logprob: -8.201910972595215

Token 977: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.13082368671894073
    2. '               ' → logprob: -2.3808236122131348
    3. ' else' → logprob: -3.5058236122131348
    4. '	else' → logprob: -10.005824089050293
    5. '           ' → logprob: -10.380824089050293
    6. '                   ' → logprob: -11.130824089050293
    7. '```' → logprob: -11.880824089050293
    8. '              ' → logprob: -12.630824089050293
    9. 'elif' → logprob: -12.630824089050293
    10. '       ' → logprob: -12.630824089050293

Token 978: ':
' (ID: 734)
  Prédit: ' g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' g' → logprob: -0.4142305254936218
    2. ' ^=' → logprob: -1.7892305850982666
    3. ' ' → logprob: -2.7892305850982666
    4. ' ^' → logprob: -3.0392305850982666
    5. 'g' → logprob: -3.1642305850982666
    6. ' XOR' → logprob: -5.5392303466796875
    7. '^' → logprob: -5.7892303466796875
    8. ' xor' → logprob: -5.9142303466796875
    9. '                   ' → logprob: -6.0392303466796875
    10. '                    ' → logprob: -6.6642303466796875

Token 979: '                   ' (ID: 699)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.0010653206845745444
    2. ' g' → logprob: -7.126065254211426
    3. '```' → logprob: -8.501065254211426
    4. 'xor' → logprob: -10.501065254211426
    5. '                   ' → logprob: -11.126065254211426
    6. '`' → logprob: -12.251065254211426
    7. ' ' → logprob: -12.876065254211426
    8. '	g' → logprob: -13.751065254211426
    9. '``' → logprob: -14.126065254211426
    10. '0' → logprob: -14.251065254211426

Token 980: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' (adapté à ' g') → logprob: -0.006869882810860872
    2. 'grund' → logprob: -5.006869792938232
    3. 'xor' → logprob: -9.38187026977539
    4. ' grund' → logprob: -10.25687026977539
    5. ' g' → logprob: -10.88187026977539
    6. 'grond' → logprob: -11.88187026977539
    7. '```' → logprob: -13.25687026977539
    8. 'grunn' → logprob: -13.38187026977539
    9. '	g' → logprob: -14.75687026977539
    10. '   ' → logprob: -15.00687026977539

Token 981: ' ^=' (ID: 79665)
  Prédit: '^'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '^' → logprob: -0.008676734752953053
    2. ' ^=' → logprob: -4.758676528930664
    3. '_^' → logprob: -10.008676528930664
    4. '=' → logprob: -11.508676528930664
    5. ''^' → logprob: -12.883676528930664
    6. ' ^' → logprob: -13.758676528930664
    7. '^^' → logprob: -13.758676528930664
    8. '^)' → logprob: -14.383676528930664
    9. ':^' → logprob: -14.383676528930664
    10. ' ' → logprob: -14.758676528930664

Token 982: ' grund' (ID: 34475)
  Prédit: 'grund'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grund' → logprob: -2.4391956685576588e-05
    2. ' grund' → logprob: -10.750024795532227
    3. 'grond' → logprob: -13.750024795532227
    4. 'grunn' → logprob: -14.875024795532227
    5. 'memo' → logprob: -15.500024795532227
    6. 'Grund' → logprob: -15.625024795532227
    7. 'grunt' → logprob: -15.750024795532227
    8. 'g' → logprob: -16.000024795532227
    9. 'gründ' → logprob: -16.250024795532227
    10. 'ground' → logprob: -16.375024795532227

Token 983: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -2.0100624169572257e-05
    2. 'g' → logprob: -11.750020027160645
    3. 'ay' → logprob: -12.750020027160645
    4. 'gy' → logprob: -12.750020027160645
    5. 'y's' → logprob: -13.625020027160645
    6. '[y' → logprob: -14.250020027160645
    7. 'val' → logprob: -14.375020027160645
    8. '```' → logprob: -14.625020027160645
    9. 'value' → logprob: -14.750020027160645
    10. 'yard' → logprob: -15.375020027160645

Token 984: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.0004107732092961669
    2. 's' → logprob: -8.125411033630371
    3. '(se' → logprob: -9.750411033630371
    4. '(' → logprob: -10.125411033630371
    5. '(v' → logprob: -11.500411033630371
    6. ' (' → logprob: -12.250411033630371
    7. '(
' → logprob: -15.000411033630371
    8. '```' → logprob: -15.250411033630371
    9. 'se' → logprob: -15.750411033630371
    10. ')' → logprob: -15.875411033630371

Token 985: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4308565557003021
    2. ',m' → logprob: -1.0558565855026245
    3. '[m' → logprob: -6.555856704711914
    4. '^' → logprob: -8.555856704711914
    5. '```' → logprob: -9.305856704711914
    6. ' ,' → logprob: -9.430856704711914
    7. ')' → logprob: -9.430856704711914
    8. ',y' → logprob: -9.430856704711914
    9. '(m' → logprob: -10.555856704711914
    10. ',v' → logprob: -10.680856704711914

Token 986: ' memo' (ID: 46393)
  Prédit: 'memo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'memo' → logprob: -1.5213274309644476e-05
    2. ' memo' → logprob: -11.625015258789062
    3. 'm' → logprob: -12.000015258789062
    4. 'mem' → logprob: -17.375015258789062
    5. 'memory' → logprob: -18.250015258789062
    6. '```' → logprob: -18.500015258789062
    7. '[m' → logprob: -18.625015258789062
    8. 'mutex' → logprob: -18.750015258789062
    9. '.memo' → logprob: -18.750015258789062
    10. 'mime' → logprob: -19.500015258789062

Token 987: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.9160102712921798e-05
    2. ')
' → logprob: -10.500029563903809
    3. '<|end|>' → logprob: -14.500029563903809
    4. ')return' → logprob: -15.250029563903809
    5. ' )' → logprob: -15.625029563903809
    6. ')#' → logprob: -16.000028610229492
    7. '[' → logprob: -16.500028610229492
    8. '           ' → logprob: -16.750028610229492
    9. '))' → logprob: -17.000028610229492
    10. ')x' → logprob: -17.250028610229492

Token 988: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00016635251813568175
    2. '```' → logprob: -9.500165939331055
    3. '               ' → logprob: -10.875165939331055
    4. '                   ' → logprob: -11.125165939331055
    5. '<m' → logprob: -11.250165939331055
    6. '<|end|>' → logprob: -11.375165939331055
    7. '   ' → logprob: -11.500165939331055
    8. '       ' → logprob: -11.625165939331055
    9. '          ' → logprob: -12.375165939331055
    10. ',m' → logprob: -13.125165939331055

Token 989: ' mex' (ID: 32410)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08191084861755371
    2. 'mex' (adapté à ' mex') → logprob: -2.7069108486175537
    3. '   ' → logprob: -5.081911087036133
    4. '       ' → logprob: -6.456911087036133
    5. '```' → logprob: -6.456911087036133
    6. ' mex' → logprob: -6.706911087036133
    7. '               ' → logprob: -7.081911087036133
    8. '                   ' → logprob: -8.331911087036133
    9. '``' → logprob: -10.081911087036133
    10. '          ' → logprob: -10.456911087036133

Token 990: '_set' (ID: 5451)
  Prédit: '_set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_set' → logprob: -0.005243952851742506
    2. '_' → logprob: -5.50524377822876
    3. '_add' → logprob: -7.13024377822876
    4. '.add' → logprob: -8.880244255065918
    5. '_val' → logprob: -9.380244255065918
    6. '.' → logprob: -10.505244255065918
    7. '._' → logprob: -10.880244255065918
    8. '_.' → logprob: -11.130244255065918
    9. '```' → logprob: -11.630244255065918
    10. '_value' → logprob: -11.755244255065918

Token 991: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.12701137363910675
    2. '.' → logprob: -2.127011299133301
    3. ' .' → logprob: -9.5020112991333
    4. '.append' → logprob: -12.0020112991333
    5. '.update' → logprob: -14.1270112991333
    6. '.dis' → logprob: -14.7520112991333
    7. '().' → logprob: -15.1270112991333
    8. '   ' → logprob: -15.2520112991333
    9. '.remove' → logprob: -15.8770112991333
    10. '.setdefault' → logprob: -16.002012252807617

Token 992: '(g' (ID: 7791)
  Prédit: '(g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(g' → logprob: -0.0003360582049936056
    2. '(' → logprob: -8.000335693359375
    3. '((' → logprob: -15.125335693359375
    4. ' (' → logprob: -15.125335693359375
    5. 'g' → logprob: -16.375335693359375
    6. '(
' → logprob: -17.875335693359375
    7. '("("' → logprob: -19.375335693359375
    8. '(f' → logprob: -19.750335693359375
    9. '(s' → logprob: -20.000335693359375
    10. '(G' → logprob: -20.000335693359375

Token 993: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.2855416066013277e-05
    2. ')
' → logprob: -11.000032424926758
    3. ' )' → logprob: -12.250032424926758
    4. '   ' → logprob: -13.000032424926758
    5. '))' → logprob: -13.375032424926758
    6. '           ' → logprob: -13.500032424926758
    7. ')}' → logprob: -13.625032424926758
    8. '}' → logprob: -14.000032424926758
    9. '+' → logprob: -14.000032424926758
    10. '       ' → logprob: -14.000032424926758

Token 994: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005936621222645044
    2. '```' → logprob: -5.505936622619629
    3. '
' → logprob: -7.130936622619629
    4. 'res' → logprob: -8.005936622619629
    5. '    
' → logprob: -8.255936622619629
    6. 'm' → logprob: -8.630936622619629
    7. '``' → logprob: -8.755936622619629
    8. 'for' → logprob: -10.505936622619629
    9. 'mex' → logprob: -11.130936622619629
    10. 'def' → logprob: -11.380936622619629

Token 995: ' res' (ID: 694)
  Prédit: 'mex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mex' → logprob: -0.4188674986362457
    2. 'res' (adapté à ' res') → logprob: -1.4188674688339233
    3. 'm' → logprob: -3.043867588043213
    4. '   ' → logprob: -3.168867588043213
    5. 'g' → logprob: -4.668867588043213
    6. '    
' → logprob: -7.543867588043213
    7. '
' → logprob: -8.543867111206055
    8. 'for' → logprob: -9.043867111206055
    9. 'r' → logprob: -9.668867111206055
    10. 'ans' → logprob: -10.043867111206055

Token 996: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03456082567572594
    2. ' =' → logprob: -3.4095609188079834
    3. '[' → logprob: -7.534560680389404
    4. '   ' → logprob: -8.034561157226562
    5. '=
' → logprob: -10.659561157226562
    6. '_' → logprob: -11.534561157226562
    7. '```' → logprob: -12.534561157226562
    8. ' =
' → logprob: -12.784561157226562
    9. ' ' → logprob: -12.784561157226562
    10. ']' → logprob: -13.034561157226562

Token 997: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.012790623120963573
    2. 'min' → logprob: -4.637790679931641
    3. ' ' → logprob: -6.512790679931641
    4. 'mex' → logprob: -6.512790679931641
    5. '   ' → logprob: -10.01279067993164
    6. 'm' → logprob: -12.13779067993164
    7. '  ' → logprob: -12.76279067993164
    8. 'len' → logprob: -13.26279067993164
    9. 'max' → logprob: -13.51279067993164
    10. 'next' → logprob: -14.01279067993164

Token 998: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0009140860638581216
    2. 'min' → logprob: -7.000914096832275
    3. ' ' → logprob: -13.500913619995117
    4. 'next' → logprob: -14.500913619995117
    5. 'mex' → logprob: -15.125913619995117
    6. '(min' → logprob: -15.625913619995117
    7. '-min' → logprob: -16.000913619995117
    8. '
' → logprob: -16.250913619995117
    9. 'm' → logprob: -17.500913619995117
    10. '-' → logprob: -17.500913619995117

Token 999: '
' (ID: 198)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.23132100701332092
    2. ' while' → logprob: -2.106321096420288
    3. '
' → logprob: -2.481321096420288
    4. '   ' → logprob: -7.606320858001709
    5. '	while' → logprob: -7.856320858001709
    6. 'While' → logprob: -9.231321334838867
    7. '<|end|>' → logprob: -9.731321334838867
    8. '  
' → logprob: -9.981321334838867
    9. '    
' → logprob: -10.481321334838867
    10. '```' → logprob: -10.856321334838867

Token 1000: '   ' (ID: 271)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.028206834569573402
    2. ' while' → logprob: -3.9032068252563477
    3. '
' → logprob: -4.903206825256348
    4. '   ' → logprob: -9.903206825256348
    5. '```' → logprob: -10.153206825256348
    6. '	while' → logprob: -10.278206825256348
    7. '+
' → logprob: -10.903206825256348
    8. '    
' → logprob: -10.903206825256348
    9. 'While' → logprob: -11.028206825256348
    10. '  
' → logprob: -11.528206825256348

Token 1001: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.006728991866111755
    2. ' while' → logprob: -5.0067291259765625
    3. '
' → logprob: -12.006729125976562
    4. '   ' → logprob: -12.131729125976562
    5. '	while' → logprob: -13.756729125976562
    6. 'While' → logprob: -14.506729125976562
    7. '```' → logprob: -15.006729125976562
    8. '    
' → logprob: -15.881729125976562
    9. ' 
' → logprob: -16.381729125976562
    10. '{
' → logprob: -17.256729125976562

Token 1002: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.16022422909736633
    2. ' res' → logprob: -1.910224199295044
    3. '(res' → logprob: -16.41022491455078
    4. '	res' → logprob: -18.91022491455078
    5. ' ' → logprob: -19.03522491455078
    6. '_res' → logprob: -19.66022491455078
    7. '   ' → logprob: -19.66022491455078
    8. '$res' → logprob: -20.66022491455078
    9. ' ' → logprob: -20.91022491455078
    10. 'r' → logprob: -20.91022491455078

Token 1003: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.7204999923706055
    2. ' in' → logprob: -0.7204999923706055
    3. ' not' → logprob: -3.9704999923706055
    4. 'not' → logprob: -4.8454999923706055
    5. '<' → logprob: -9.970499992370605
    6. '<int' → logprob: -10.345499992370605
    7. '[' → logprob: -10.470499992370605
    8. '```' → logprob: -10.470499992370605
    9. '_in' → logprob: -10.720499992370605
    10. '
' → logprob: -10.970499992370605

Token 1004: ' mex' (ID: 32410)
  Prédit: 'mex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mex' → logprob: -5.200166469876422e-06
    2. ' mex' → logprob: -13.000004768371582
    3. '_mex' → logprob: -13.250004768371582
    4. '`' → logprob: -15.000004768371582
    5. '   ' → logprob: -15.500004768371582
    6. '```' → logprob: -15.875004768371582
    7. 'mx' → logprob: -16.1250057220459
    8. '
' → logprob: -16.5000057220459
    9. '(m' → logprob: -17.1250057220459
    10. 'memo' → logprob: -17.2500057220459

Token 1005: '_set' (ID: 5451)
  Prédit: '_set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_set' → logprob: -7.896309739408025e-07
    2. '_' → logprob: -15.250000953674316
    3. 'set' → logprob: -15.625000953674316
    4. '_SET' → logprob: -16.375
    5. '_sets' → logprob: -16.625
    6. '_Set' → logprob: -17.625
    7. 'Set' → logprob: -17.75
    8. 'et' → logprob: -18.25
    9. ':' → logprob: -19.5
    10. '\' → logprob: -19.5

Token 1006: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.22619055211544037
    2. ':' → logprob: -1.6011905670166016
    3. '+' → logprob: -8.101190567016602
    4. '   ' → logprob: -8.351190567016602
    5. 'res' → logprob: -8.726190567016602
    6. '+=' → logprob: -10.226190567016602
    7. '):
' → logprob: -11.476190567016602
    8. '```' → logprob: -12.476190567016602
    9. ' +=' → logprob: -12.601190567016602
    10. ':
' → logprob: -12.976190567016602

Token 1007: '       ' (ID: 309)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.2051071971654892
    2. '   ' → logprob: -2.2051072120666504
    3. '       ' → logprob: -2.7051072120666504
    4. ' res' → logprob: -5.33010721206665
    5. '```' → logprob: -5.70510721206665
    6. '``' → logprob: -9.205106735229492
    7. '	res' → logprob: -9.955106735229492
    8. '`' → logprob: -12.330106735229492
    9. '(res' → logprob: -12.955106735229492
    10. '
' → logprob: -13.205106735229492

Token 1008: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -1.580929347255733e-05
    2. '   ' → logprob: -11.750016212463379
    3. ' res' → logprob: -11.750016212463379
    4. '	res' → logprob: -19.375015258789062
    5. '```' → logprob: -20.375015258789062
    6. '       ' → logprob: -20.750015258789062
    7. '
' → logprob: -21.250015258789062
    8. '_res' → logprob: -21.875015258789062
    9. '$res' → logprob: -22.875015258789062
    10. '``' → logprob: -23.500015258789062

Token 1009: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0009132515988312662
    2. ' +=' → logprob: -7.000913143157959
    3. '=' → logprob: -13.875913619995117
    4. ']+=' → logprob: -14.250913619995117
    5. '   ' → logprob: -16.750913619995117
    6. '+' → logprob: -17.125913619995117
    7. '```' → logprob: -17.375913619995117
    8. '+='' → logprob: -17.625913619995117
    9. '+="' → logprob: -17.875913619995117
    10. 'res' → logprob: -18.125913619995117

Token 1010: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.75
    3. '   ' → logprob: -21.0
    4. '```' → logprob: -21.5
    5. '
' → logprob: -23.375
    6. '۱' → logprob: -24.25
    7. '`' → logprob: -24.5
    8. '１' → logprob: -24.5
    9. '१' → logprob: -25.0
    10. '  ' → logprob: -25.0

Token 1011: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.625
    3. '```' → logprob: -21.75
    4. '   ' → logprob: -22.25
    5. '
' → logprob: -23.25
    6. '`' → logprob: -24.0
    7. '0' → logprob: -24.0
    8. '۱' → logprob: -24.875
    9. '１' → logprob: -25.25
    10. '१' → logprob: -25.375

Token 1012: '
' (ID: 198)
  Prédit: ' memo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' memo' → logprob: -0.7104530930519104
    2. 'memo' → logprob: -1.2104530334472656
    3. '   ' → logprob: -1.8354530334472656
    4. '
' → logprob: -3.4604530334472656
    5. '```' → logprob: -4.335453033447266
    6. '[m' → logprob: -5.335453033447266
    7. '    
' → logprob: -7.835453033447266
    8. '``' → logprob: -8.210453033447266
    9. '.memo' → logprob: -8.210453033447266
    10. 'm' → logprob: -8.835453033447266

Token 1013: '   ' (ID: 271)
  Prédit: 'memo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'memo' → logprob: -0.3018149137496948
    2. ' memo' → logprob: -1.9268149137496948
    3. '   ' → logprob: -2.1768150329589844
    4. '
' → logprob: -6.676815032958984
    5. '```' → logprob: -9.676815032958984
    6. '[m' → logprob: -9.801815032958984
    7. '    
' → logprob: -10.176815032958984
    8. 'm' → logprob: -10.426815032958984
    9. 'mem' → logprob: -11.051815032958984
    10. '	m' → logprob: -11.426815032958984

Token 1014: ' memo' (ID: 46393)
  Prédit: 'memo'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'memo' (adapté à ' memo') → logprob: -0.004085758700966835
    2. ' memo' → logprob: -5.504085540771484
    3. '   ' → logprob: -12.004085540771484
    4. '
' → logprob: -14.629085540771484
    5. 'memory' → logprob: -15.254085540771484
    6. '```' → logprob: -15.504085540771484
    7. '.memo' → logprob: -15.629085540771484
    8. 'return' → logprob: -16.379085540771484
    9. 'mem' → logprob: -17.004085540771484
    10. 'm' → logprob: -17.504085540771484

Token 1015: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.0015054593095555902
    2. '[' → logprob: -6.501505374908447
    3. '```' → logprob: -14.126505851745605
    4. '[...]' → logprob: -14.251505851745605
    5. '\[' → logprob: -14.751505851745605
    6. '[
' → logprob: -15.126505851745605
    7. 'x' → logprob: -15.626505851745605
    8. '[s' → logprob: -15.626505851745605
    9. '[m' → logprob: -16.12650489807129
    10. '[]' → logprob: -16.12650489807129

Token 1016: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.20442937314510345
    2. '=' → logprob: -1.7044293880462646
    3. ']=' → logprob: -5.8294291496276855
    4. ' =' → logprob: -9.704429626464844
    5. '[' → logprob: -11.579429626464844
    6. '[x' → logprob: -14.204429626464844
    7. ' ]' → logprob: -15.079429626464844
    8. '=
' → logprob: -16.204429626464844
    9. '[m' → logprob: -16.329429626464844
    10. ']
' → logprob: -16.454429626464844

Token 1017: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.001170225441455841
    2. ' =' → logprob: -6.7511701583862305
    3. '=
' → logprob: -18.626171112060547
    4. '＝' → logprob: -19.876171112060547
    5. '=

' → logprob: -21.376171112060547
    6. '=res' → logprob: -22.001171112060547
    7. '=}' → logprob: -22.251171112060547
    8. '=m' → logprob: -22.376171112060547
    9. ' =
' → logprob: -22.376171112060547
    10. '.=' → logprob: -22.376171112060547

Token 1018: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: 0.0
    2. ' res' → logprob: -20.75
    3. '	res' → logprob: -28.875
    4. '$res' → logprob: -28.875
    5. '(res' → logprob: -29.875
    6. '_res' → logprob: -29.875
    7. 'ress' → logprob: -31.375
    8. 'resi' → logprob: -31.375
    9. 'ret' → logprob: -31.5
    10. 're' → logprob: -31.5

Token 1019: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08482982963323593
    2. 'return' → logprob: -3.334829807281494
    3. ' return' → logprob: -3.834829807281494
    4. '
' → logprob: -4.334829807281494
    5. '	return' → logprob: -4.834829807281494
    6. '```' → logprob: -6.709829807281494
    7. ':return' → logprob: -7.334829807281494
    8. '    
' → logprob: -7.584829807281494
    9. '\n' → logprob: -9.084830284118652
    10. '\' → logprob: -9.334830284118652

Token 1020: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12421765178442001
    2. '
' → logprob: -3.4992177486419678
    3. '	return' → logprob: -3.7492177486419678
    4. ' return' → logprob: -3.9992177486419678
    5. '```' → logprob: -4.249217510223389
    6. 'return' → logprob: -4.499217510223389
    7. '<|end|>' → logprob: -4.499217510223389
    8. '    
' → logprob: -6.249217510223389
    9. ')' → logprob: -6.374217510223389
    10. ':return' → logprob: -6.499217510223389

Token 1021: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0068361409939825535
    2. ' return' → logprob: -5.2568359375
    3. '   ' → logprob: -6.5068359375
    4. '
' → logprob: -9.5068359375
    5. '	return' → logprob: -11.0068359375
    6. '```' → logprob: -11.3818359375
    7. '    
' → logprob: -12.7568359375
    8. ':return' → logprob: -13.3818359375
    9. '(return' → logprob: -15.2568359375
    10. '{return' → logprob: -15.3818359375

Token 1022: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -1.9361264946837764e-07
    2. ' res' → logprob: -15.75
    3. '(res' → logprob: -25.625
    4. '	res' → logprob: -26.125
    5. '$res' → logprob: -26.5
    6. '   ' → logprob: -27.375
    7. '_res' → logprob: -28.5
    8. 'r' → logprob: -29.0
    9. 'ress' → logprob: -29.625
    10. 'result' → logprob: -29.625

Token 1023: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1024: 'input' (ID: 2586)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1025: ' =' (ID: 314)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.7134386301040649
    2. '_line' → logprob: -0.7134386301040649
    3. '_data' → logprob: -5.213438510894775
    4. '_' → logprob: -5.213438510894775
    5. '_str' → logprob: -5.838438510894775
    6. '_text' → logprob: -6.463438510894775
    7. '().' → logprob: -6.963438510894775
    8. 's' → logprob: -6.963438510894775
    9. ' =' → logprob: -7.463438510894775
    10. '=' → logprob: -7.588438510894775

Token 1026: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.055242858827114105
    2. 'input' → logprob: -3.0552427768707275
    3. ' sys' → logprob: -5.055243015289307
    4. ' input' → logprob: -8.430242538452148
    5. 'lambda' → logprob: -10.430242538452148
    6. 'open' → logprob: -12.305242538452148
    7. '=sys' → logprob: -13.305242538452148
    8. 'stdin' → logprob: -13.930242538452148
    9. '	sys' → logprob: -14.055242538452148
    10. ' lambda' → logprob: -14.805242538452148

Token 1027: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.0008043874404393137
    2. '.stdout' → logprob: -8.25080394744873
    3. '.' → logprob: -8.62580394744873
    4. '.argv' → logprob: -9.00080394744873
    5. '.std' → logprob: -9.25080394744873
    6. 'stdin' → logprob: -9.37580394744873
    7. '.readline' → logprob: -10.87580394744873
    8. '._' → logprob: -11.25080394744873
    9. '(stdin' → logprob: -11.87580394744873
    10. '().' → logprob: -12.00080394744873

Token 1028: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.00016551809676457196
    2. '.read' → logprob: -9.625165939331055
    3. '.' → logprob: -10.250165939331055
    4. '.readlines' → logprob: -10.250165939331055
    5. 'read' → logprob: -11.375165939331055
    6. 'buffer' → logprob: -11.625165939331055
    7. '.buffer' → logprob: -12.375165939331055
    8. '=' → logprob: -13.500165939331055
    9. '.stdin' → logprob: -13.875165939331055
    10. 'input' → logprob: -15.000165939331055

Token 1029: '
' (ID: 198)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.20278699696063995
    2. '()' → logprob: -2.952786922454834
    3. '(n' → logprob: -3.327786922454834
    4. '
' → logprob: -3.327786922454834
    5. 'def' → logprob: -3.952786922454834
    6. 'for' → logprob: -4.702786922454834
    7. 'while' → logprob: -5.327786922454834
    8. '(' → logprob: -5.827786922454834
    9. 'x' → logprob: -5.952786922454834
    10. 'N' → logprob: -5.952786922454834

Token 1030: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.014567255973815918
    2. 'def' → logprob: -4.6395673751831055
    3. 'N' → logprob: -5.7645673751831055
    4. '
' → logprob: -7.1395673751831055
    5. 't' → logprob: -7.3895673751831055
    6. '```' → logprob: -8.889567375183105
    7. 'T' → logprob: -10.514567375183105
    8. 'Q' → logprob: -10.514567375183105
    9. 'q' → logprob: -11.514567375183105
    10. '\' → logprob: -11.764567375183105

Token 1031: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4671250581741333
    2. '=' → logprob: -1.2171250581741333
    3. ' ' → logprob: -2.7171249389648438
    4. ',' → logprob: -5.217124938964844
    5. '_' → logprob: -6.217124938964844
    6. '  ' → logprob: -6.717124938964844
    7. '   ' → logprob: -7.342124938964844
    8. '()' → logprob: -7.842124938964844
    9. ')' → logprob: -8.342124938964844
    10. '.' → logprob: -8.717124938964844

Token 1032: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.02733701840043068
    2. ' int' → logprob: -3.777337074279785
    3. 'base' → logprob: -5.527337074279785
    4. ' base' → logprob: -9.152337074279785
    5. ' ' → logprob: -15.652337074279785
    6. 'len' → logprob: -16.77733612060547
    7. '(int' → logprob: -16.90233612060547
    8. '1' → logprob: -17.02733612060547
    9. '[int' → logprob: -17.15233612060547
    10. '```' → logprob: -17.27733612060547

Token 1033: '(input' (ID: 10054)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.35076645016670227
    2. '(input' → logprob: -1.3507664203643799
    3. '(' → logprob: -3.35076642036438
    4. 'input' → logprob: -6.600766658782959
    5. '()
' → logprob: -8.4757661819458
    6. ' ()' → logprob: -9.3507661819458
    7. '('' → logprob: -10.1007661819458
    8. '(
' → logprob: -10.6007661819458
    9. '(sys' → logprob: -12.6007661819458
    10. ' (' → logprob: -12.7257661819458

Token 1034: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.023494118824601173
    2. '()' → logprob: -4.023494243621826
    3. '().' → logprob: -5.273494243621826
    4. ')' → logprob: -8.648493766784668
    5. '(' → logprob: -11.398493766784668
    6. '())
' → logprob: -11.523493766784668
    7. '()
' → logprob: -12.023493766784668
    8. ' ())' → logprob: -13.773493766784668
    9. '();)' → logprob: -15.648493766784668
    10. '(),' → logprob: -15.773493766784668

Token 1035: 'memo' (ID: 113822)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.611705482006073
    2. 'arr' → logprob: -0.986705482006073
    3. 'a' → logprob: -3.1117055416107178
    4. 's' → logprob: -3.6117055416107178
    5. 'pile' → logprob: -5.236705303192139
    6. 'x' → logprob: -6.611705303192139
    7. 'vals' → logprob: -6.986705303192139
    8. 'S' → logprob: -7.111705303192139
    9. 'nums' → logprob: -7.236705303192139
    10. 'numbers' → logprob: -7.361705303192139

Token 1036: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2548079192638397
    2. ' =' → logprob: -1.504807949066162
    3. '={}' → logprob: -5.879807949066162
    4. '={' → logprob: -10.004807472229004
    5. '[' → logprob: -11.254807472229004
    6. ' ={' → logprob: -11.879807472229004
    7. '={}
' → logprob: -12.629807472229004
    8. '=[]' → logprob: -12.754807472229004
    9. '{}' → logprob: -12.879807472229004
    10. '{' → logprob: -13.379807472229004

Token 1037: ' dict' (ID: 11878)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -3.054500666621607e-06
    2. 'dict' → logprob: -12.75000286102295
    3. '{}
' → logprob: -16.625003814697266
    4. '{}

' → logprob: -18.125003814697266
    5. '{})' → logprob: -18.250003814697266
    6. '{' → logprob: -18.250003814697266
    7. ' {}' → logprob: -20.625003814697266
    8. '{}\' → logprob: -20.750003814697266
    9. '{},' → logprob: -21.000003814697266
    10. '={}' → logprob: -22.125003814697266

Token 1038: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.001447737100534141
    2. '()
' → logprob: -6.626447677612305
    3. '{}' → logprob: -9.876447677612305
    4. '[]' → logprob: -10.376447677612305
    5. '()]' → logprob: -11.626447677612305
    6. '()\' → logprob: -11.626447677612305
    7. '()

' → logprob: -12.126447677612305
    8. '(' → logprob: -12.501447677612305
    9. '{' → logprob: -13.126447677612305
    10. '()<' → logprob: -13.751447677612305

Token 1039: 'xor' (ID: 114252)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.7336493134498596
    2. 'ans' → logprob: -1.4836492538452148
    3. 'result' → logprob: -1.7336492538452148
    4. 'xor' → logprob: -3.233649253845215
    5. 'res' → logprob: -3.608649253845215
    6. 'total' → logprob: -3.983649253845215
    7. 'x' → logprob: -4.608649253845215
    8. 'answer' → logprob: -5.358649253845215
    9. 'grund' → logprob: -5.358649253845215
    10. 'for' → logprob: -5.608649253845215

Token 1040: '_all' (ID: 13305)
  Prédit: '_val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_val' → logprob: -0.0018004849553108215
    2. '_' → logprob: -7.001800537109375
    3. '=' → logprob: -7.751800537109375
    4. '_value' → logprob: -7.876800537109375
    5. '_sum' → logprob: -9.876800537109375
    6. 'val' → logprob: -11.876800537109375
    7. 'Val' → logprob: -12.251800537109375
    8. '_=' → logprob: -12.251800537109375
    9. '_total' → logprob: -12.376800537109375
    10. ' =' → logprob: -12.876800537109375

Token 1041: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0705709308385849
    2. ' =' → logprob: -2.695570945739746
    3. '_' → logprob: -7.945570945739746
    4. ' ^=' → logprob: -8.445570945739746
    5. '_=' → logprob: -10.945570945739746
    6. '_val' → logprob: -11.445570945739746
    7. 'xor' → logprob: -11.570570945739746
    8. '(' → logprob: -11.945570945739746
    9. ' ' → logprob: -12.070570945739746
    10. '_x' → logprob: -12.195570945739746

Token 1042: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00017970333283301443
    2. ' ' → logprob: -8.625179290771484
    3. '=' → logprob: -17.750179290771484
    4. ' ' → logprob: -17.875179290771484
    5. 'xor' → logprob: -19.125179290771484
    6. '```' → logprob: -19.250179290771484
    7. '1' → logprob: -19.312679290771484
    8. 'n' → logprob: -19.312679290771484
    9. ' =' → logprob: -19.437679290771484
    10. '۰' → logprob: -19.687679290771484

Token 1043: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.7432603272027336e-06
    2. 'grund' → logprob: -13.875001907348633
    3. ' ' → logprob: -14.750001907348633
    4. '۰' → logprob: -16.750001907348633
    5. '```' → logprob: -17.312501907348633
    6. '1' → logprob: -17.437501907348633
    7. '０' → logprob: -18.187501907348633
    8. '00' → logprob: -18.437501907348633
    9. '000' → logprob: -18.750001907348633
    10. '=' → logprob: -19.000001907348633

Token 1044: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -4.246537173457909e-06
    2. ' for' → logprob: -12.625003814697266
    3. '
' → logprob: -14.000003814697266
    4. '```' → logprob: -16.750003814697266
    5. '	for' → logprob: -18.000003814697266
    6. '<|end|>' → logprob: -19.250003814697266
    7. ' 
' → logprob: -19.750003814697266
    8. 'while' → logprob: -20.375003814697266
    9. '    
' → logprob: -20.750003814697266
    10. '``' → logprob: -20.750003814697266

Token 1045: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.5048530030981055e-06
    2. '
' → logprob: -13.875001907348633
    3. ' for' → logprob: -14.625001907348633
    4. '```' → logprob: -16.500001907348633
    5. '	for' → logprob: -17.750001907348633
    6. '    
' → logprob: -19.625001907348633
    7. ' 
' → logprob: -20.000001907348633
    8. '<|end|>' → logprob: -20.250001907348633
    9. '``' → logprob: -20.625001907348633
    10. '  
' → logprob: -21.000001907348633

Token 1046: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -2.935296834039036e-06
    2. '_i' → logprob: -13.00000286102295
    3. ' _' → logprob: -14.87500286102295
    4. '_=' → logprob: -16.000003814697266
    5. '_
' → logprob: -16.375003814697266
    6. '_
' → logprob: -17.500003814697266
    7. 'i' → logprob: -18.000003814697266
    8. '_in' → logprob: -18.750003814697266
    9. '_range' → logprob: -18.875003814697266
    10. '_

' → logprob: -20.125003814697266

Token 1047: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.10310863703489304
    2. ' in' → logprob: -2.3531086444854736
    3. 'range' → logprob: -6.6031084060668945
    4. 'i' → logprob: -7.2281084060668945
    5. '_' → logprob: -7.3531084060668945
    6. 'n' → logprob: -9.228108406066895
    7. ' ' → logprob: -9.728108406066895
    8. ' range' → logprob: -12.728108406066895
    9. '
' → logprob: -12.853108406066895
    10. 'x' → logprob: -13.353108406066895

Token 1048: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -2.696889623621246e-06
    2. ' range' → logprob: -12.87500286102295
    3. 'n' → logprob: -16.500001907348633
    4. '(range' → logprob: -18.875001907348633
    5. '	range' → logprob: -18.875001907348633
    6. '
' → logprob: -19.625001907348633
    7. 'r' → logprob: -20.000001907348633
    8. '```' → logprob: -20.375001907348633
    9. 'input' → logprob: -20.500001907348633
    10. ' ' → logprob: -20.625001907348633

Token 1049: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.03759221360087395
    2. '(' → logprob: -3.6625921726226807
    3. 'n' → logprob: -4.66259241104126
    4. ' (' → logprob: -6.53759241104126
    5. ' n' → logprob: -8.162591934204102
    6. '(int' → logprob: -11.037591934204102
    7. '(
' → logprob: -11.037591934204102
    8. '()' → logprob: -11.537591934204102
    9. '   ' → logprob: -13.162591934204102
    10. ' ' → logprob: -13.287591934204102

Token 1050: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.0807725265622139
    2. '):' → logprob: -2.580772638320923
    3. '():
' → logprob: -6.830772399902344
    4. ':
' → logprob: -7.705772399902344
    5. ':' → logprob: -8.830772399902344
    6. '   ' → logprob: -9.205772399902344
    7. ',' → logprob: -10.580772399902344
    8. ')' → logprob: -10.580772399902344
    9. ' ):
' → logprob: -11.705772399902344
    10. '
' → logprob: -11.830772399902344

Token 1051: '   ' (ID: 271)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.3386647701263428
    2. '   ' → logprob: -1.7136647701263428
    3. 's' → logprob: -2.7136647701263428
    4. 'a' → logprob: -3.8386647701263428
    5. 'num' → logprob: -4.463665008544922
    6. 'v' → logprob: -5.838665008544922
    7. 'val' → logprob: -6.213665008544922
    8. 'number' → logprob: -7.088665008544922
    9. 'value' → logprob: -7.213665008544922
    10. 'code' → logprob: -7.588665008544922

Token 1052: ' p' (ID: 275)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.008901957422494888
    2. 'x' → logprob: -5.508902072906494
    3. 'val' → logprob: -6.633902072906494
    4. 'a' → logprob: -6.633902072906494
    5. 'num' → logprob: -6.883902072906494
    6. 'line' → logprob: -7.508902072906494
    7. '   ' → logprob: -8.508901596069336
    8. 'v' → logprob: -9.258901596069336
    9. '    
' → logprob: -10.008901596069336
    10. 'k' → logprob: -10.008901596069336

Token 1053: ',s' (ID: 20379)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03734775260090828
    2. ' =' → logprob: -3.5373477935791016
    3. '=int' → logprob: -5.412347793579102
    4. '=input' → logprob: -6.537347793579102
    5. '=p' → logprob: -7.037347793579102
    6. 's' → logprob: -8.537347793579102
    7. 'p' → logprob: -9.162347793579102
    8. '=
' → logprob: -9.162347793579102
    9. '=line' → logprob: -9.912347793579102
    10. '=sys' → logprob: -10.037347793579102

Token 1054: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03804631531238556
    2. ' =' → logprob: -3.288046360015869
    3. '=line' → logprob: -13.163045883178711
    4. '=input' → logprob: -13.538045883178711
    5. '=p' → logprob: -13.913045883178711
    6. 'p' → logprob: -15.538045883178711
    7. '=sys' → logprob: -15.538045883178711
    8. '=int' → logprob: -15.913045883178711
    9. ' ' → logprob: -16.91304588317871
    10. ' p' → logprob: -17.28804588317871

Token 1055: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0009149204124696553
    2. ' input' → logprob: -7.000915050506592
    3. 'map' → logprob: -12.625914573669434
    4. 'base' → logprob: -17.12591552734375
    5. '(input' → logprob: -19.00091552734375
    6. ' map' → logprob: -19.62591552734375
    7. '   ' → logprob: -19.75091552734375
    8. ' ' → logprob: -20.12591552734375
    9. '=input' → logprob: -20.12591552734375
    10. '	input' → logprob: -20.37591552734375

Token 1056: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00015288250870071352
    2. '.strip' → logprob: -9.500152587890625
    3. '.split' → logprob: -10.125152587890625
    4. '()' → logprob: -11.250152587890625
    5. '.rstrip' → logprob: -11.500152587890625
    6. '=' → logprob: -11.875152587890625
    7. 'split' → logprob: -13.375152587890625
    8. ' =' → logprob: -13.500152587890625
    9. '.readline' → logprob: -13.625152587890625
    10. ' ().' → logprob: -13.875152587890625

Token 1057: 'split' (ID: 13627)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.4027213156223297
    2. 'split' → logprob: -1.1527212858200073
    3. 'rstrip' → logprob: -4.152721405029297
    4. ' strip' → logprob: -13.652721405029297
    5. ' split' → logprob: -14.402721405029297
    6. '_split' → logprob: -14.527721405029297
    7. '_strip' → logprob: -14.527721405029297
    8. 'read' → logprob: -14.902721405029297
    9. '(strip' → logprob: -15.402721405029297
    10. '(split' → logprob: -15.777721405029297

Token 1058: '()
' (ID: 1234)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6339595913887024
    2. '   ' → logprob: -0.8839595913887024
    3. 'p' → logprob: -3.5089595317840576
    4. ',p' → logprob: -4.008959770202637
    5. 'val' → logprob: -6.383959770202637
    6. 'base' → logprob: -6.758959770202637
    7. 'x' → logprob: -7.133959770202637
    8. ' ,' → logprob: -7.383959770202637
    9. '
' → logprob: -7.758959770202637
    10. '```' → logprob: -7.758959770202637

Token 1059: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4810248613357544
    2. 'val' → logprob: -1.4810248613357544
    3. 'x' → logprob: -2.856024742126465
    4. 'num' → logprob: -3.356024742126465
    5. 'xor' → logprob: -4.106024742126465
    6. 'v' → logprob: -4.231024742126465
    7. '```' → logprob: -4.231024742126465
    8. 'value' → logprob: -5.231024742126465
    9. 'base' → logprob: -5.481024742126465
    10. 'p' → logprob: -6.106024742126465

Token 1060: ' p' (ID: 275)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0793623998761177
    2. 'val' → logprob: -3.079362392425537
    3. 'num' → logprob: -4.454362392425537
    4. 'v' → logprob: -4.579362392425537
    5. 'xor' → logprob: -5.704362392425537
    6. '   ' → logprob: -5.829362392425537
    7. 'value' → logprob: -7.079362392425537
    8. 'base' → logprob: -7.579362392425537
    9. 'a' → logprob: -7.829362392425537
    10. 'p' (adapté à ' p') → logprob: -9.954362869262695

Token 1061: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.02137843146920204
    2. '_val' → logprob: -4.396378517150879
    3. ' =' → logprob: -5.271378517150879
    4. 'val' → logprob: -6.396378517150879
    5. '=int' → logprob: -7.146378517150879
    6. 'int' → logprob: -8.146378517150879
    7. '=p' → logprob: -8.646378517150879
    8. ',' → logprob: -9.021378517150879
    9. '_base' → logprob: -9.146378517150879
    10. 'p' → logprob: -9.271378517150879

Token 1062: ' int' (ID: 677)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.0015322434483096004
    2. 'int' → logprob: -6.501532077789307
    3. '10' → logprob: -11.251532554626465
    4. ' base' → logprob: -11.376532554626465
    5. '62' → logprob: -12.876532554626465
    6. 'p' → logprob: -14.126532554626465
    7. '(base' → logprob: -14.501532554626465
    8. 'b' → logprob: -15.376532554626465
    9. 'bases' → logprob: -15.376532554626465
    10. 'pow' → logprob: -15.751532554626465

Token 1063: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.00014978687977418303
    2. 'p' → logprob: -8.875149726867676
    3. '(s' → logprob: -11.625149726867676
    4. '(' → logprob: -14.125149726867676
    5. 's' → logprob: -15.875149726867676
    6. '()' → logprob: -17.500150680541992
    7. '
' → logprob: -18.125150680541992
    8. ' p' → logprob: -18.375150680541992
    9. '[p' → logprob: -18.375150680541992
    10. '(
' → logprob: -18.625150680541992

Token 1064: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06277016550302505
    2. ')
' → logprob: -2.812770128250122
    3. ')p' → logprob: -7.812770366668701
    4. '(p' → logprob: -8.437769889831543
    5. ',' → logprob: -10.437769889831543
    6. 'p' → logprob: -10.687769889831543
    7. ',p' → logprob: -10.937769889831543
    8. '(' → logprob: -11.312769889831543
    9. '()' → logprob: -11.437769889831543
    10. '())' → logprob: -11.812769889831543

Token 1065: '   ' (ID: 271)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.18890339136123657
    2. 'val' → logprob: -2.563903331756592
    3. 'v' → logprob: -3.188903331756592
    4. 'xor' → logprob: -3.438903331756592
    5. 'num' → logprob: -4.813903331756592
    6. '   ' → logprob: -5.063903331756592
    7. 'a' → logprob: -5.563903331756592
    8. 'base' → logprob: -6.563903331756592
    9. 'value' → logprob: -7.688903331756592
    10. 'b' → logprob: -7.813903331756592

Token 1066: ' val' (ID: 1459)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.08824679255485535
    2. 'val' (adapté à ' val') → logprob: -2.9632468223571777
    3. 'xor' → logprob: -4.213246822357178
    4. 'v' → logprob: -4.838246822357178
    5. 'num' → logprob: -5.338246822357178
    6. 'base' → logprob: -6.213246822357178
    7. 's' → logprob: -6.838246822357178
    8. 'b' → logprob: -7.213246822357178
    9. 'a' → logprob: -7.463246822357178
    10. 'value' → logprob: -7.838246822357178

Token 1067: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931576132774353
    2. ' =' → logprob: -0.6931576132774353
    3. ' ' → logprob: -11.693157196044922
    4. '=int' → logprob: -14.568157196044922
    5. ')' → logprob: -15.068157196044922
    6. '```' → logprob: -15.818157196044922
    7. '＝' → logprob: -16.068157196044922
    8. '   ' → logprob: -16.068157196044922
    9. ',' → logprob: -16.068157196044922
    10. '  ' → logprob: -16.318157196044922

Token 1068: ' base' (ID: 3611)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'base' → logprob: -2.2200749754119897e-06
    2. ' base' → logprob: -13.250001907348633
    3. '   ' → logprob: -15.500001907348633
    4. '(base' → logprob: -16.375001907348633
    5. 'bas' → logprob: -18.000001907348633
    6. '
' → logprob: -18.500001907348633
    7. '0' → logprob: -18.750001907348633
    8. '	base' → logprob: -18.875001907348633
    9. 'basis' → logprob: -20.000001907348633
    10. 'b' → logprob: -20.125001907348633

Token 1069: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -2.339278580620885e-06
    2. '_val' → logprob: -13.125001907348633
    3. 'to' → logprob: -16.000001907348633
    4. 'val' → logprob: -16.000001907348633
    5. '```' → logprob: -17.000001907348633
    6. '_TO' → logprob: -19.250001907348633
    7. '_' → logprob: -19.500001907348633
    8. '[val' → logprob: -19.875001907348633
    9. '   ' → logprob: -20.000001907348633
    10. 'To' → logprob: -20.000001907348633

Token 1070: '_int' (ID: 12285)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.1615009307861328
    2. '_int' → logprob: -1.9115009307861328
    3. 's' → logprob: -7.161500930786133
    4. 'val' → logprob: -7.661500930786133
    5. 'str' → logprob: -11.536500930786133
    6. 'Int' → logprob: -12.161500930786133
    7. 'string' → logprob: -12.286500930786133
    8. ' int' → logprob: -13.161500930786133
    9. 'ints' → logprob: -13.411500930786133
    10. '_val' → logprob: -13.661500930786133

Token 1071: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.0004462812503334135
    2. 's' → logprob: -7.750446319580078
    3. ' (' → logprob: -11.625446319580078
    4. '(' → logprob: -12.000446319580078
    5. ' s' → logprob: -15.125446319580078
    6. '(
' → logprob: -16.000446319580078
    7. '```' → logprob: -16.750446319580078
    8. ' ' → logprob: -18.375446319580078
    9. '{s' → logprob: -18.500446319580078
    10. '(p' → logprob: -18.875446319580078

Token 1072: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006039070431143045
    2. ',p' → logprob: -7.875603675842285
    3. '62' → logprob: -8.875603675842285
    4. ' ,' → logprob: -9.750603675842285
    5. '(' → logprob: -11.625603675842285
    6. '36' → logprob: -12.625603675842285
    7. '   ' → logprob: -12.750603675842285
    8. ')' → logprob: -13.000603675842285
    9. ',val' → logprob: -13.000603675842285
    10. 'p' → logprob: -13.500603675842285

Token 1073: ' p' (ID: 275)
  Prédit: '62'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '62' → logprob: -0.0002135534887202084
    2. 'p' → logprob: -8.500213623046875
    3. '
' → logprob: -12.000213623046875
    4. '61' → logprob: -13.625213623046875
    5. '64' → logprob: -13.750213623046875
    6. '```' → logprob: -15.000213623046875
    7. 'base' → logprob: -15.000213623046875
    8. '   ' → logprob: -15.375213623046875
    9. '``' → logprob: -15.375213623046875
    10. '58' → logprob: -16.000213623046875

Token 1074: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.386874258518219
    2. ')' → logprob: -1.1368741989135742
    3. ')
' → logprob: -13.261874198913574
    4. ')

' → logprob: -14.386874198913574
    5. '   ' → logprob: -14.761874198913574
    6. ' )
' → logprob: -16.13687515258789
    7. ')`
' → logprob: -16.26187515258789
    8. ')**' → logprob: -16.76187515258789
    9. ');' → logprob: -17.13687515258789
    10. ')#' → logprob: -17.13687515258789

Token 1075: '   ' (ID: 271)
  Prédit: 'xor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xor' → logprob: -0.23460040986537933
    2. '   ' → logprob: -1.9846004247665405
    3. '
' → logprob: -2.984600305557251
    4. '```' → logprob: -3.984600305557251
    5. '``' → logprob: -7.10960054397583
    6. ' xor' → logprob: -7.10960054397583
    7. ' ' → logprob: -8.484600067138672
    8. '    
' → logprob: -8.609600067138672
    9. '  
' → logprob: -9.109600067138672
    10. ' 
' → logprob: -9.359600067138672

Token 1076: ' g' (ID: 329)
  Prédit: 'xor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xor' → logprob: -0.010900197550654411
    2. 'g' (adapté à ' g') → logprob: -5.010900020599365
    3. 'grund' → logprob: -5.510900020599365
    4. 'gx' → logprob: -9.635900497436523
    5. 'gr' → logprob: -10.885900497436523
    6. 'res' → logprob: -11.510900497436523
    7. 'x' → logprob: -11.510900497436523
    8. '
' → logprob: -12.260900497436523
    9. 'val' → logprob: -12.760900497436523
    10. '    
' → logprob: -12.760900497436523

Token 1077: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4634193480014801
    2. '=' → logprob: -1.0884193181991577
    3. 'val' → logprob: -3.8384194374084473
    4. '_val' → logprob: -4.588419437408447
    5. '=g' → logprob: -6.463419437408447
    6. '[val' → logprob: -8.588418960571289
    7. '_value' → logprob: -9.463418960571289
    8. 'xor' → logprob: -9.588418960571289
    9. 'rey' → logprob: -10.088418960571289
    10. 'g' → logprob: -10.213418960571289

Token 1078: ' grund' (ID: 34475)
  Prédit: 'grund'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grund' → logprob: -2.2127087504486553e-05
    2. ' grund' → logprob: -10.750021934509277
    3. 'grond' → logprob: -15.625021934509277
    4. 'grunt' → logprob: -15.625021934509277
    5. '
' → logprob: -16.500022888183594
    6. 'ground' → logprob: -16.625022888183594
    7. 'gründ' → logprob: -17.125022888183594
    8. '   ' → logprob: -17.375022888183594
    9. ' ' → logprob: -17.875022888183594
    10. 'grunn' → logprob: -18.250022888183594

Token 1079: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -8.537868779967539e-06
    2. 'g' → logprob: -12.750008583068848
    3. '(y' → logprob: -12.750008583068848
    4. 'val' → logprob: -13.375008583068848
    5. 'y's' → logprob: -14.750008583068848
    6. '(g' → logprob: -15.750008583068848
    7. 'yg' → logprob: -16.00000762939453
    8. '```' → logprob: -16.87500762939453
    9. '(val' → logprob: -17.00000762939453
    10. 'gy' → logprob: -17.00000762939453

Token 1080: '(val' (ID: 17391)
  Prédit: '(val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(val' → logprob: -7.111979357432574e-05
    2. '(' → logprob: -10.25007152557373
    3. 'val' → logprob: -11.25007152557373
    4. '(x' → logprob: -11.50007152557373
    5. '[val' → logprob: -12.25007152557373
    6. '(value' → logprob: -12.50007152557373
    7. '(g' → logprob: -13.25007152557373
    8. '(valor' → logprob: -14.00007152557373
    9. ',val' → logprob: -14.50007152557373
    10. '(v' → logprob: -15.37507152557373

Token 1081: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.23477396368980408
    2. ')
' → logprob: -1.6097739934921265
    3. ',' → logprob: -5.359774112701416
    4. 'xor' → logprob: -6.484774112701416
    5. '   ' → logprob: -6.859774112701416
    6. ' xor' → logprob: -7.109774112701416
    7. '^' → logprob: -7.609774112701416
    8. '
' → logprob: -7.984774112701416
    9. ',
' → logprob: -9.234773635864258
    10. ' ' → logprob: -9.984773635864258

Token 1082: ' memo' (ID: 46393)
  Prédit: 'memo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'memo' → logprob: -1.1041145626222715e-05
    2. ' memo' → logprob: -11.500011444091797
    3. 'm' → logprob: -15.000011444091797
    4. 'mem' → logprob: -15.000011444091797
    5. 'memory' → logprob: -16.250011444091797
    6. 'mutex' → logprob: -20.500011444091797
    7. '   ' → logprob: -20.500011444091797
    8. '
' → logprob: -20.625011444091797
    9. 'memor' → logprob: -21.500011444091797
    10. ' ' → logprob: -21.750011444091797

Token 1083: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.6392164826393127
    2. ')' → logprob: -1.014216423034668
    3. '   ' → logprob: -2.514216423034668
    4. '
' → logprob: -4.389216423034668
    5. '^' → logprob: -4.389216423034668
    6. 'xor' → logprob: -7.264216423034668
    7. '    
' → logprob: -7.514216423034668
    8. ')^' → logprob: -7.514216423034668
    9. ' xor' → logprob: -7.889216423034668
    10. ' 
' → logprob: -8.139216423034668

Token 1084: '   ' (ID: 271)
  Prédit: 'xor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xor' → logprob: -0.16439907252788544
    2. '   ' → logprob: -2.4143991470336914
    3. '```' → logprob: -3.2893991470336914
    4. '
' → logprob: -4.164399147033691
    5. '``' → logprob: -5.539399147033691
    6. ' xor' → logprob: -5.664399147033691
    7. ' ' → logprob: -7.039399147033691
    8. 'x' → logprob: -7.789399147033691
    9. '	x' → logprob: -8.664399147033691
    10. '    
' → logprob: -8.914399147033691

Token 1085: ' xor' (ID: 106402)
  Prédit: 'xor'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xor' (adapté à ' xor') → logprob: -2.5776860184123507e-06
    2. ' xor' → logprob: -13.25000286102295
    3. '
' → logprob: -14.37500286102295
    4. '```' → logprob: -16.125001907348633
    5. '   ' → logprob: -17.250001907348633
    6. 'xo' → logprob: -18.000001907348633
    7. 'x' → logprob: -18.625001907348633
    8. '``' → logprob: -19.250001907348633
    9. ' ' → logprob: -19.625001907348633
    10. '    
' → logprob: -19.750001907348633

Token 1086: '_all' (ID: 13305)
  Prédit: '_all'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_all' → logprob: -8.77627644513268e-06
    2. '_' → logprob: -13.000008583068848
    3. 'all' → logprob: -13.625008583068848
    4. '```' → logprob: -13.625008583068848
    5. 'xor' → logprob: -14.250008583068848
    6. '_
' → logprob: -14.250008583068848
    7. '
' → logprob: -14.375008583068848
    8. '=' → logprob: -14.500008583068848
    9. 'All' → logprob: -14.750008583068848
    10. '__' → logprob: -15.625008583068848

Token 1087: ' ^=' (ID: 79665)
  Prédit: '^'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '^' → logprob: -0.005234952084720135
    2. ' ^=' → logprob: -5.255234718322754
    3. 'xor' → logprob: -15.255234718322754
    4. ''^' → logprob: -15.255234718322754
    5. '_^' → logprob: -15.505234718322754
    6. '=' → logprob: -16.00523567199707
    7. '```' → logprob: -16.13023567199707
    8. '^{' → logprob: -16.75523567199707
    9. '^

' → logprob: -16.88023567199707
    10. '^)' → logprob: -16.88023567199707

Token 1088: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: 0.0
    2. ' g' → logprob: -17.5
    3. '	g' → logprob: -24.0
    4. '```' → logprob: -24.125
    5. '_g' → logprob: -24.25
    6. ''g' → logprob: -25.25
    7. '[g' → logprob: -25.75
    8. 'г' → logprob: -25.875
    9. '#g' → logprob: -25.875
    10. '*g' → logprob: -26.75

Token 1089: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.4121035933494568
    2. '
' → logprob: -1.6621036529541016
    3. 'if' → logprob: -1.9121036529541016
    4. ' if' → logprob: -9.412103652954102
    5. '```' → logprob: -9.537103652954102
    6. ' print' → logprob: -10.662103652954102
    7. '\n' → logprob: -11.162103652954102
    8. '
' → logprob: -11.412103652954102
    9. ' 
' → logprob: -11.412103652954102
    10. '  
' → logprob: -11.662103652954102

Token 1090: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.014179613441228867
    2. 'if' → logprob: -4.264179706573486
    3. '```' → logprob: -11.764179229736328
    4. 'result' → logprob: -12.264179229736328
    5. '
' → logprob: -13.264179229736328
    6. ' print' → logprob: -15.014179229736328
    7. '``' → logprob: -15.139179229736328
    8. '"\' → logprob: -15.389179229736328
    9. ''\' → logprob: -15.389179229736328
    10. ' if' → logprob: -15.764179229736328

Token 1091: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.10251738876104355
    2. '('' → logprob: -2.3525173664093018
    3. '(' → logprob: -6.102517604827881
    4. '"' → logprob: -9.977517127990723
    5. '(
' → logprob: -11.727517127990723
    6. '(("' → logprob: -11.852517127990723
    7. ''' → logprob: -12.227517127990723
    8. '(""' → logprob: -13.477517127990723
    9. '(('' → logprob: -13.727517127990723
    10. '("("' → logprob: -14.477517127990723

Token 1092: 'win' (ID: 11668)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0028363727033138275
    2. '"W' → logprob: -6.252836227416992
    3. ''' → logprob: -7.627836227416992
    4. '("' → logprob: -9.627836227416992
    5. '"B' → logprob: -9.877836227416992
    6. 'YES' → logprob: -10.002836227416992
    7. '"A' → logprob: -10.127836227416992
    8. '"No' → logprob: -10.252836227416992
    9. '"D' → logprob: -10.377836227416992
    10. '"I' → logprob: -10.627836227416992

Token 1093: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.10133533924818039
    2. '")' → logprob: -2.351335287094116
    3. '\n' → logprob: -7.101335525512695
    4. 'n' → logprob: -8.851335525512695
    5. '")
' → logprob: -9.101335525512695
    6. '()' → logprob: -10.476335525512695
    7. 's' → logprob: -12.351335525512695
    8. 'if' → logprob: -12.726335525512695
    9. '")

' → logprob: -13.101335525512695
    10. '()"' → logprob: -13.101335525512695

Token 1094: ' if' (ID: 538)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6415393352508545
    2. ' if' → logprob: -0.8915393352508545
    3. 'if' → logprob: -2.7665393352508545
    4. '()' → logprob: -8.141539573669434
    5. '[' → logprob: -9.516539573669434
    6. ',' → logprob: -9.641539573669434
    7. '```' → logprob: -10.641539573669434
    8. ')
' → logprob: -10.891539573669434
    9. '")' → logprob: -10.891539573669434
    10. ' ' → logprob: -11.016539573669434

Token 1095: ' xor' (ID: 106402)
  Prédit: 'xor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xor' → logprob: -0.25192955136299133
    2. ' xor' → logprob: -1.501929521560669
    3. ' ' → logprob: -15.50192928314209
    4. ' XOR' → logprob: -16.376930236816406
    5. '(x' → logprob: -16.626930236816406
    6. ' ' → logprob: -16.626930236816406
    7. '`' → logprob: -18.251930236816406
    8. '```' → logprob: -19.001930236816406
    9. 'xo' → logprob: -19.251930236816406
    10. '\x' → logprob: -19.501930236816406

Token 1096: '_all' (ID: 13305)
  Prédit: '_all'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_all' → logprob: -2.339278580620885e-06
    2. 'All' → logprob: -13.375001907348633
    3. 'all' → logprob: -15.125001907348633
    4. '_al' → logprob: -15.125001907348633
    5. '_ALL' → logprob: -16.625001907348633
    6. '_' → logprob: -17.000001907348633
    7. '
' → logprob: -17.625001907348633
    8. '\' → logprob: -17.750001907348633
    9. ' _' → logprob: -17.875001907348633
    10. '__' → logprob: -18.000001907348633

Token 1097: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.010122348554432392
    2. ' !=' → logprob: -4.635122299194336
    3. 'else' → logprob: -8.510122299194336
    4. ' else' → logprob: -8.885122299194336
    5. '>' → logprob: -11.885122299194336
    6. ' ' → logprob: -12.385122299194336
    7. '!="' → logprob: -12.635122299194336
    8. '()!=' → logprob: -12.885122299194336
    9. ')!=' → logprob: -13.135122299194336
    10. '!='' → logprob: -13.510122299194336

Token 1098: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0005530327325686812
    2. ' ' → logprob: -7.500553131103516
    3. ' ' → logprob: -19.125553131103516
    4. '
' → logprob: -20.750553131103516
    5. ' 
' → logprob: -21.125553131103516
    6. '=' → logprob: -22.250553131103516
    7. '０' → logprob: -22.375553131103516
    8. '00' → logprob: -22.375553131103516
    9. '۰' → logprob: -22.500553131103516
    10. ' ' → logprob: -22.625553131103516

Token 1099: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.438573680294212e-06
    2. ' ' → logprob: -12.125005722045898
    3. '
' → logprob: -19.2500057220459
    4. '=' → logprob: -20.8750057220459
    5. 'zero' → logprob: -21.1250057220459
    6. '```' → logprob: -21.3750057220459
    7. ' ' → logprob: -21.6250057220459
    8. '０' → logprob: -22.0000057220459
    9. '۰' → logprob: -22.1250057220459
    10. '00' → logprob: -22.2500057220459

Token 1100: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.3132627606391907
    2. 'else' → logprob: -1.313262701034546
    3. '	else' → logprob: -14.688262939453125
    4. '```' → logprob: -15.063262939453125
    5. '
' → logprob: -16.313262939453125
    6. ' ' → logprob: -16.438262939453125
    7. ' 
' → logprob: -17.063262939453125
    8. '_else' → logprob: -17.688262939453125
    9. ')' → logprob: -17.938262939453125
    10. ' ' → logprob: -17.938262939453125

Token 1101: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.000627610192168504
    2. ' "' → logprob: -7.375627517700195
    3. '("' → logprob: -15.250627517700195
    4. ''' → logprob: -15.500627517700195
    5. '   ' → logprob: -15.750627517700195
    6. '
' → logprob: -16.250627517700195
    7. ' ' → logprob: -16.250627517700195
    8. ' ' → logprob: -16.625627517700195
    9. '"L' → logprob: -17.000627517700195
    10. ' 
' → logprob: -17.125627517700195

Token 1102: 'lose' (ID: 6719)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.694616973400116
    2. 'lose' → logprob: -0.694616973400116
    3. 'loss' → logprob: -6.819616794586182
    4. 'draw' → logprob: -8.44461727142334
    5. ' lose' → logprob: -8.94461727142334
    6. ''' → logprob: -11.31961727142334
    7. 'Lose' → logprob: -12.56961727142334
    8. 'los' → logprob: -12.69461727142334
    9. 'LOSE' → logprob: -12.94461727142334
    10. 'lost' → logprob: -13.06961727142334

Token 1103: '")' (ID: 1405)
  Prédit: '")'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.0015425959136337042
    2. ')' → logprob: -6.501542568206787
    3. ')")' → logprob: -10.126543045043945
    4. '}")' → logprob: -16.251543045043945
    5. '')' → logprob: -17.001543045043945
    6. '!")' → logprob: -17.251543045043945
    7. ')"' → logprob: -17.751543045043945
    8. '"' → logprob: -18.001543045043945
    9. '")
' → logprob: -18.251543045043945
    10. '`)' → logprob: -18.376543045043945


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1101
Tokens correctement prédits (1ère position, stricte): 281
Tokens correctement prédits (1ère position, avec adaptation): 303
Tokens correctement prédits (top 10): 687
Précision stricte (1ère position): 25.52%
Précision adaptée (1ère position): 27.52%
Précision (top 10): 62.40%
================================================================================
