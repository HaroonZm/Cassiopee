================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:13:49
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
while True:
    N = int(input())
    if N == 0:
        break
    crops = []
    for _ in range(N):
        data = input().split()
        L = data[0]
        P, A, B, C, D, E, F, S, M = map(int, data[1:])
        total_time = A + B + C + D + E * M
        income = F * S * M - P
        efficiency = income / total_time
        crops.append(( -efficiency, L))
    crops.sort(key=lambda x: (x[0], x[1]))
    for _, name in crops:
        print(name)
    print("#")
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'while' (ID: 7032)
  → Token d'amorce (pas de prédiction)

Token 1: ' True' (ID: 6432)
  → Token d'amorce (pas de prédiction)

Token 2: ':
' (ID: 734)
  → Token d'amorce (pas de prédiction)

Token 3: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5137425661087036
    2. '    ' → logprob: -2.013742446899414
    3. ' ' → logprob: -2.638742446899414
    4. '    
' → logprob: -3.013742446899414
    5. '\n' → logprob: -3.138742446899414
    6. '\' → logprob: -3.388742446899414
    7. ' 
' → logprob: -4.013742446899414
    8. '```' → logprob: -4.388742446899414
    9. '  
' → logprob: -4.888742446899414
    10. '     
' → logprob: -5.013742446899414

Token 4: ' N' (ID: 478)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4779955744743347
    2. '    ' → logprob: -1.7279956340789795
    3. ' ' → logprob: -1.9779956340789795
    4. '```' → logprob: -3.6029956340789795
    5. '       ' → logprob: -4.7279953956604
    6. '  ' → logprob: -5.3529953956604
    7. '    
' → logprob: -5.6029953956604
    8. '        
' → logprob: -6.6029953956604
    9. 'pass' → logprob: -6.7279953956604
    10. '`' → logprob: -6.7279953956604

Token 5: ' =' (ID: 314)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 6: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.08695802837610245
    2. ' input' → logprob: -3.0869579315185547
    3. 'int' → logprob: -3.4619579315185547
    4. 'input' → logprob: -5.086957931518555
    5. ' ' → logprob: -10.336957931518555
    6. ' eval' → logprob: -11.461957931518555
    7. ' randint' → logprob: -11.711957931518555
    8. 'eval' → logprob: -12.086957931518555
    9. '<int' → logprob: -12.461957931518555
    10. '=int' → logprob: -12.461957931518555

Token 7: '(input' (ID: 10054)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 8: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9293091297149658
    2. '(' → logprob: -1.3043091297149658
    3. '()' → logprob: -1.3043091297149658
    4. '())' → logprob: -2.929309129714966
    5. '))' → logprob: -4.929308891296387
    6. '()))' → logprob: -6.679308891296387
    7. '(
' → logprob: -9.179308891296387
    8. '('' → logprob: -9.679308891296387
    9. '```' → logprob: -9.679308891296387
    10. '')' → logprob: -10.179308891296387

Token 9: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9660837650299072
    2. ' ' → logprob: -1.3410837650299072
    3. '<|end|>' → logprob: -2.0910837650299072
    4. ' if' → logprob: -2.8410837650299072
    5. ')' → logprob: -3.0910837650299072
    6. '    ' → logprob: -3.2160837650299072
    7. '  ' → logprob: -3.7160837650299072
    8. '    
' → logprob: -4.216083526611328
    9. 'if' → logprob: -4.341083526611328
    10. ':' → logprob: -4.341083526611328

Token 10: ' if' (ID: 538)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4918716251850128
    2. '<|end|>' → logprob: -1.8668715953826904
    3. ' if' → logprob: -2.3668715953826904
    4. ')' → logprob: -3.1168715953826904
    5. '  ' → logprob: -3.7418715953826904
    6. '   ' → logprob: -4.1168718338012695
    7. 'if' (adapté à ' if') → logprob: -4.3668718338012695
    8. '+' → logprob: -4.3668718338012695
    9. '    ' → logprob: -4.9918718338012695
    10. '%' → logprob: -5.3668718338012695

Token 11: ' N' (ID: 478)
  Prédit: ' N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.022280504927039146
    2. ' ' → logprob: -3.89728045463562
    3. ' not' → logprob: -6.772280693054199
    4. 'N' → logprob: -7.522280693054199
    5. '  ' → logprob: -10.2722806930542
    6. ' ' → logprob: -11.6472806930542
    7. 'not' → logprob: -13.0222806930542
    8. ')' → logprob: -13.3972806930542
    9. '<|end|>' → logprob: -13.5222806930542
    10. ' )' → logprob: -14.5222806930542

Token 12: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.6320152878761292
    2. ' >' → logprob: -1.0070152282714844
    3. ' <=' → logprob: -2.8820152282714844
    4. ' <' → logprob: -4.007015228271484
    5. '>' → logprob: -4.507015228271484
    6. '==' → logprob: -4.507015228271484
    7. ' ' → logprob: -5.382015228271484
    8. ' >=' → logprob: -7.257015228271484
    9. '<=' → logprob: -7.882015228271484
    10. '  ' → logprob: -8.382015228271484

Token 13: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.10021033883094788
    2. '0' → logprob: -2.350210428237915
    3. ' -' → logprob: -13.475210189819336
    4. '1' → logprob: -14.475210189819336
    5. '  ' → logprob: -14.975210189819336
    6. '-' → logprob: -15.225210189819336
    7. '=' → logprob: -15.600210189819336
    8. ' ' → logprob: -16.225210189819336
    9. '100' → logprob: -16.287710189819336
    10. '<|end|>' → logprob: -16.350210189819336

Token 14: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.018185412511229515
    2. ' ' → logprob: -4.018185615539551
    3. '-' → logprob: -10.64318561553955
    4. ' -' → logprob: -12.26818561553955
    5. '1' → logprob: -12.89318561553955
    6. '42' → logprob: -14.01818561553955
    7. '   ' → logprob: -14.26818561553955
    8. '  ' → logprob: -14.26818561553955
    9. '```' → logprob: -14.39318561553955
    10. '4' → logprob: -15.39318561553955

Token 15: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0010616290383040905
    2. '       ' → logprob: -7.50106143951416
    3. '   ' → logprob: -8.37606143951416
    4. ':
' → logprob: -8.37606143951416
    5. ' :' → logprob: -10.62606143951416
    6. '    ' → logprob: -11.25106143951416
    7. '      ' → logprob: -12.75106143951416
    8. ':\' → logprob: -13.37606143951416
    9. ' break' → logprob: -13.50106143951416
    10. '     ' → logprob: -13.87606143951416

Token 16: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005953280488029122
    2. '   ' → logprob: -8.000595092773438
    3. ' break' → logprob: -8.500595092773438
    4. '\n' → logprob: -10.750595092773438
    5. ':' → logprob: -12.000595092773438
    6. '	break' → logprob: -12.000595092773438
    7. '      ' → logprob: -12.250595092773438
    8. '    ' → logprob: -12.375595092773438
    9. '     ' → logprob: -12.875595092773438
    10. '\t' → logprob: -13.125595092773438

Token 17: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.020219387486577034
    2. '       ' → logprob: -4.020219326019287
    3. 'break' (adapté à ' break') → logprob: -6.270219326019287
    4. '   ' → logprob: -10.020219802856445
    5. '\n' → logprob: -10.020219802856445
    6. '	break' → logprob: -10.145219802856445
    7. '_break' → logprob: -10.895219802856445
    8. '```' → logprob: -11.395219802856445
    9. ' \' → logprob: -12.520219802856445
    10. '    ' → logprob: -13.270219802856445

Token 18: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.47211572527885437
    2. '\n' → logprob: -1.3471157550811768
    3. '    
' → logprob: -3.2221157550811768
    4. '\' → logprob: -3.5971157550811768
    5. '```' → logprob: -4.347115516662598
    6. '<|end|>' → logprob: -4.347115516662598
    7. '
' → logprob: -5.097115516662598
    8. '\r' → logprob: -5.472115516662598
    9. ')' → logprob: -5.847115516662598
    10. '#' → logprob: -6.222115516662598

Token 19: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.029547398909926414
    2. '<|end|>' → logprob: -4.279547214508057
    3. '    
' → logprob: -4.654547214508057
    4. ')' → logprob: -6.654547214508057
    5. '```' → logprob: -6.779547214508057
    6. '\n' → logprob: -7.279547214508057
    7. '\' → logprob: -7.529547214508057
    8. '#' → logprob: -7.904547214508057
    9. ':' → logprob: -8.154547691345215
    10. '<|end|>' → logprob: -8.404547691345215

Token 20: ' crops' (ID: 52264)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 21: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08925874531269073
    2. '[' → logprob: -2.9642586708068848
    3. '=' → logprob: -3.5892586708068848
    4. '_' → logprob: -6.214258670806885
    5. '_count' → logprob: -7.214258670806885
    6. '   ' → logprob: -7.214258670806885
    7. '[]' → logprob: -7.589258670806885
    8. '.' → logprob: -7.839258670806885
    9. '[:]' → logprob: -8.589259147644043
    10. '_counts' → logprob: -8.839259147644043

Token 22: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.7749131321907043
    2. ' []' → logprob: -0.7749131321907043
    3. ' list' → logprob: -3.2749130725860596
    4. 'list' → logprob: -3.6499130725860596
    5. ' [' → logprob: -4.899913311004639
    6. '[' → logprob: -5.399913311004639
    7. '{}' → logprob: -6.649913311004639
    8. '[input' → logprob: -7.899913311004639
    9. 'input' → logprob: -8.02491283416748
    10. ' {}' → logprob: -8.77491283416748

Token 23: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15100358426570892
    2. '<|end|>' → logprob: -2.15100359916687
    3. ' for' → logprob: -5.401003360748291
    4. 'for' → logprob: -5.401003360748291
    5. '    
' → logprob: -5.651003360748291
    6. '\' → logprob: -5.901003360748291
    7. '<|end|>' → logprob: -6.526003360748291
    8. '    ' → logprob: -6.651003360748291
    9. '\n' → logprob: -6.901003360748291
    10. '
' → logprob: -6.901003360748291

Token 24: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.500629186630249
    2. ' for' → logprob: -1.375629186630249
    3. '   ' → logprob: -2.000629186630249
    4. '	for' → logprob: -5.250629425048828
    5. '<|end|>' → logprob: -8.625629425048828
    6. ' ' → logprob: -8.875629425048828
    7. '    ' → logprob: -8.875629425048828
    8. '    
' → logprob: -9.500629425048828
    9. '```' → logprob: -10.500629425048828
    10. '\t' → logprob: -10.875629425048828

Token 25: ' _' (ID: 1175)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.41069960594177246
    2. ' _' → logprob: -1.2856996059417725
    3. ' ' → logprob: -3.2856996059417725
    4. '_' → logprob: -3.7856996059417725
    5. 'i' → logprob: -9.035699844360352
    6. ' ‌' → logprob: -9.785699844360352
    7. ' I' → logprob: -10.660699844360352
    8. ' ' → logprob: -11.160699844360352
    9. '  ' → logprob: -11.535699844360352
    10. ' ▁' → logprob: -11.785699844360352

Token 26: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0023138110991567373
    2. 'in' → logprob: -6.252313613891602
    3. ' ' → logprob: -7.877313613891602
    4. ' i' → logprob: -13.252313613891602
    5. '	in' → logprob: -13.627313613891602
    6. 'range' → logprob: -14.252313613891602
    7. '  ' → logprob: -14.252313613891602
    8. '_' → logprob: -15.502313613891602
    9. '```' → logprob: -15.627313613891602
    10. '<|end|>' → logprob: -15.627313613891602

Token 27: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.25193271040916443
    2. 'range' → logprob: -1.5019327402114868
    3. '	range' → logprob: -13.001933097839355
    4. '(range' → logprob: -15.001933097839355
    5. 'rang' → logprob: -15.376933097839355
    6. ' xrange' → logprob: -15.501933097839355
    7. ' ' → logprob: -15.626933097839355
    8. 'ran' → logprob: -16.37693214416504
    9. '_range' → logprob: -16.50193214416504
    10. ' ran' → logprob: -16.75193214416504

Token 28: '(N' (ID: 10564)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 29: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.003253765869885683
    2. ')' → logprob: -6.128253936767578
    3. ' ):' → logprob: -7.253253936767578
    4. ':' → logprob: -8.378253936767578
    5. '   ' → logprob: -9.378253936767578
    6. '):
' → logprob: -10.503253936767578
    7. ' )' → logprob: -12.253253936767578
    8. ',' → logprob: -12.753253936767578
    9. '    ' → logprob: -13.753253936767578
    10. '+' → logprob: -13.878253936767578

Token 30: '       ' (ID: 309)
  Prédit: '    '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '    ' → logprob: -0.44086164236068726
    2. '   ' → logprob: -1.190861701965332
    3. '       ' → logprob: -3.815861701965332
    4. ' ' → logprob: -4.315861701965332
    5. ' crops' → logprob: -4.690861701965332
    6. 'c' → logprob: -5.940861701965332
    7. '<|end|>' → logprob: -6.065861701965332
    8. '        ' → logprob: -7.815861701965332
    9. ' 
' → logprob: -7.940861701965332
    10. '  ' → logprob: -8.065861701965332

Token 31: ' data' (ID: 1238)
  Prédit: ' crops'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' crops' → logprob: -0.22115568816661835
    2. ' crop' → logprob: -2.2211556434631348
    3. 'c' → logprob: -3.5961556434631348
    4. ' data' → logprob: -3.9711556434631348
    5. ' line' → logprob: -4.221155643463135
    6. 'crop' → logprob: -5.346155643463135
    7. '   ' → logprob: -5.346155643463135
    8. ' input' → logprob: -5.846155643463135
    9. ' x' → logprob: -5.846155643463135
    10. 'data' (adapté à ' data') → logprob: -6.221155643463135

Token 32: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02326202020049095
    2. '=' → logprob: -3.7732620239257812
    3. '=input' → logprob: -12.523262023925781
    4. ',' → logprob: -12.898262023925781
    5. 's' → logprob: -13.398262023925781
    6. ')' → logprob: -13.398262023925781
    7. 'input' → logprob: -13.648262023925781
    8. '.append' → logprob: -13.648262023925781
    9. '[' → logprob: -14.273262023925781
    10. '   ' → logprob: -14.398262023925781

Token 33: ' input' (ID: 3422)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.6134828925132751
    2. 'list' → logprob: -1.61348295211792
    3. ' input' → logprob: -1.73848295211792
    4. 'input' → logprob: -2.48848295211792
    5. ' tuple' → logprob: -8.488482475280762
    6. '[' → logprob: -9.363482475280762
    7. ' [' → logprob: -9.738482475280762
    8. 'tuple' → logprob: -9.988482475280762
    9. '[input' → logprob: -10.363482475280762
    10. ' ' → logprob: -10.863482475280762

Token 34: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.003946129232645035
    2. '().' → logprob: -5.628946304321289
    3. '())' → logprob: -8.003946304321289
    4. ' ()' → logprob: -12.878946304321289
    5. '()`' → logprob: -13.003946304321289
    6. '(' → logprob: -13.128946304321289
    7. '()>' → logprob: -13.128946304321289
    8. ')' → logprob: -15.003946304321289
    9. '（）' → logprob: -15.003946304321289
    10. '()
' → logprob: -15.128946304321289

Token 35: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.003213841700926423
    2. 'strip' → logprob: -5.753213882446289
    3. 'rstrip' → logprob: -10.253213882446289
    4. ' split' → logprob: -14.628213882446289
    5. 'spl' → logprob: -14.753213882446289
    6. 'rs' → logprob: -16.62821388244629
    7. 'replace' → logprob: -17.50321388244629
    8. 'sp' → logprob: -17.62821388244629
    9. 's' → logprob: -17.75321388244629
    10. '(split' → logprob: -18.12821388244629

Token 36: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.2682826817035675
    2. '('' → logprob: -1.5182826519012451
    3. '(' → logprob: -4.143282890319824
    4. '("("' → logprob: -8.518282890319824
    5. '())' → logprob: -9.768282890319824
    6. '("' → logprob: -10.393282890319824
    7. '()]' → logprob: -11.393282890319824
    8. ')' → logprob: -12.268282890319824
    9. '('.')' → logprob: -12.393282890319824
    10. '(`' → logprob: -12.643282890319824

Token 37: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.89922034740448
    2. '    ' → logprob: -1.27422034740448
    3. '       ' → logprob: -2.0242204666137695
    4. ' ' → logprob: -2.1492204666137695
    5. '[' → logprob: -3.8992204666137695
    6. ' crops' → logprob: -4.1492204666137695
    7. 'c' → logprob: -5.3992204666137695
    8. '     
' → logprob: -5.7742204666137695
    9. ',' → logprob: -6.2742204666137695
    10. '    
' → logprob: -6.3992204666137695

Token 38: ' L' (ID: 451)
  Prédit: ' crops'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' crops' → logprob: -0.546236515045166
    2. 'c' → logprob: -0.921236515045166
    3. 'crop' → logprob: -5.171236515045166
    4. ' crop' → logprob: -5.296236515045166
    5. ' c' → logprob: -6.171236515045166
    6. '   ' → logprob: -6.296236515045166
    7. 'name' → logprob: -6.796236515045166
    8. 'x' → logprob: -7.296236515045166
    9. ' name' → logprob: -7.608736515045166
    10. 'cro' → logprob: -8.233736038208008

Token 39: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.26777908205986023
    2. '=' → logprob: -2.2677791118621826
    3. ',' → logprob: -2.3927791118621826
    4. 'ength' → logprob: -4.2677788734436035
    5. ' ,' → logprob: -5.0177788734436035
    6. '   ' → logprob: -5.6427788734436035
    7. ' ' → logprob: -5.8927788734436035
    8. 'eng' → logprob: -6.1427788734436035
    9. 'c' → logprob: -6.3927788734436035
    10. 'en' → logprob: -6.5177788734436035

Token 40: ' data' (ID: 1238)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 41: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0004299540014471859
    2. ' [' → logprob: -8.6254301071167
    3. '[:]' → logprob: -9.3754301071167
    4. '[-' → logprob: -9.8754301071167
    5. '[:' → logprob: -10.2504301071167
    6. '[int' → logprob: -10.5004301071167
    7. '[]' → logprob: -10.8754301071167
    8. '```' → logprob: -12.6254301071167
    9. '0' → logprob: -12.7504301071167
    10. '[len' → logprob: -12.8754301071167

Token 42: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0004932218580506742
    2. '1' → logprob: -7.875493049621582
    3. ' ' → logprob: -9.375493049621582
    4. '-' → logprob: -11.000493049621582
    5. '2' → logprob: -11.750493049621582
    6. '3' → logprob: -13.812993049621582
    7. ']' → logprob: -14.000493049621582
    8. ')' → logprob: -15.375493049621582
    9. '  ' → logprob: -15.375493049621582
    10. '   ' → logprob: -15.562993049621582

Token 43: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.04556923732161522
    2. ')' → logprob: -3.4205691814422607
    3. '])' → logprob: -5.79556941986084
    4. ' ]' → logprob: -6.04556941986084
    5. ',' → logprob: -6.17056941986084
    6. '<|end|>' → logprob: -7.04556941986084
    7. '[' → logprob: -7.17056941986084
    8. ']
' → logprob: -7.54556941986084
    9. ']int' → logprob: -7.67056941986084
    10. ' )' → logprob: -8.17056941986084

Token 44: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 45: ' P' (ID: 398)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'W' → logprob: -1.9342231750488281
    2. 'C' → logprob: -2.309223175048828
    3. 'Q' → logprob: -2.434223175048828
    4. 'A' → logprob: -2.684223175048828
    5. 'H' → logprob: -2.809223175048828
    6. 'R' → logprob: -3.184223175048828
    7. 'c' → logprob: -3.309223175048828
    8. 'D' → logprob: -3.309223175048828
    9. 'V' → logprob: -3.309223175048828
    10. 'M' → logprob: -3.434223175048828

Token 46: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05802767351269722
    2. '=' → logprob: -2.933027744293213
    3. '=int' → logprob: -5.933027744293213
    4. ',' → logprob: -8.058027267456055
    5. ' ' → logprob: -9.433027267456055
    6. 'int' → logprob: -10.808027267456055
    7. 'r' → logprob: -11.308027267456055
    8. '   ' → logprob: -11.558027267456055
    9. '=float' → logprob: -12.058027267456055
    10. 'oints' → logprob: -12.308027267456055

Token 47: ' A' (ID: 355)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 48: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.18044404685497284
    2. '=' → logprob: -1.8054440021514893
    3. ',' → logprob: -7.430444240570068
    4. ' ' → logprob: -9.93044376373291
    5. '=int' → logprob: -10.05544376373291
    6. '   ' → logprob: -13.30544376373291
    7. '=data' → logprob: -13.43044376373291
    8. ' ,' → logprob: -13.55544376373291
    9. ')' → logprob: -13.55544376373291
    10. '  ' → logprob: -13.68044376373291

Token 49: ' B' (ID: 418)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.33001986145973206
    2. 'I' → logprob: -2.080019950866699
    3. '=int' → logprob: -3.705019950866699
    4. ' int' → logprob: -3.705019950866699
    5. ' =' → logprob: -3.955019950866699
    6. 'V' → logprob: -4.330019950866699
    7. ' ' → logprob: -4.455019950866699
    8. '=' → logprob: -4.455019950866699
    9. ' I' → logprob: -4.580019950866699
    10. 'i' → logprob: -5.080019950866699

Token 50: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03955770283937454
    2. '=' → logprob: -3.289557695388794
    3. ',' → logprob: -6.539557933807373
    4. ' ' → logprob: -10.414557456970215
    5. '=int' → logprob: -10.789557456970215
    6. ' ,' → logprob: -11.539557456970215
    7. '   ' → logprob: -12.664557456970215
    8. '  ' → logprob: -13.289557456970215
    9. ')' → logprob: -13.664557456970215
    10. '    ' → logprob: -14.039557456970215

Token 51: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.9919771552085876
    2. 'int' → logprob: -1.2419772148132324
    3. ' C' → logprob: -1.9919772148132324
    4. ' int' → logprob: -2.4919772148132324
    5. ' ' → logprob: -2.9919772148132324
    6. ' data' → logprob: -3.4919772148132324
    7. 'data' → logprob: -3.9919772148132324
    8. '  ' → logprob: -5.366977214813232
    9. ' =' → logprob: -5.866977214813232
    10. '   ' → logprob: -6.116977214813232

Token 52: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2818428575992584
    2. '=' → logprob: -1.656842827796936
    3. ',' → logprob: -2.9068429470062256
    4. ' ,' → logprob: -8.906843185424805
    5. ' ' → logprob: -10.281843185424805
    6. '=int' → logprob: -11.031843185424805
    7. '   ' → logprob: -11.656843185424805
    8. '  ' → logprob: -12.156843185424805
    9. ')' → logprob: -12.531843185424805
    10. '<|end|>' → logprob: -12.656843185424805

Token 53: ' D' (ID: 415)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.043841440230607986
    2. ' D' → logprob: -3.5438413619995117
    3. ' ' → logprob: -5.793841361999512
    4. '=' → logprob: -5.793841361999512
    5. ' and' → logprob: -5.918841361999512
    6. ' =' → logprob: -6.168841361999512
    7. 'and' → logprob: -6.418841361999512
    8. '  ' → logprob: -8.043841361999512
    9. 's' → logprob: -8.168841361999512
    10. '_' → logprob: -8.543841361999512

Token 54: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1297868937253952
    2. '=' → logprob: -2.129786968231201
    3. ',' → logprob: -5.879786968231201
    4. '=int' → logprob: -10.879786491394043
    5. ' ' → logprob: -11.004786491394043
    6. ' ,' → logprob: -11.254786491394043
    7. ')' → logprob: -12.879786491394043
    8. '   ' → logprob: -13.504786491394043
    9. '=data' → logprob: -13.629786491394043
    10. '  ' → logprob: -14.129786491394043

Token 55: ' E' (ID: 457)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5845052599906921
    2. '=' → logprob: -1.084505319595337
    3. 'E' → logprob: -2.959505319595337
    4. ' ' → logprob: -4.209505081176758
    5. 'int' → logprob: -4.334505081176758
    6. 'data' → logprob: -4.709505081176758
    7. ' E' → logprob: -4.959505081176758
    8. '=int' → logprob: -6.209505081176758
    9. 's' → logprob: -6.709505081176758
    10. ' data' → logprob: -6.834505081176758

Token 56: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07230336964130402
    2. '=' → logprob: -2.697303295135498
    3. ',' → logprob: -6.072303295135498
    4. '=int' → logprob: -10.822303771972656
    5. ' ' → logprob: -11.072303771972656
    6. ' ,' → logprob: -11.572303771972656
    7. '   ' → logprob: -12.572303771972656
    8. ')' → logprob: -12.697303771972656
    9. '    ' → logprob: -13.822303771972656
    10. '  ' → logprob: -13.947303771972656

Token 57: ' F' (ID: 454)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'F' → logprob: -0.29253947734832764
    2. ' F' → logprob: -2.167539596557617
    3. ' =' → logprob: -2.292539596557617
    4. '=' → logprob: -4.167539596557617
    5. 'f' → logprob: -5.292539596557617
    6. ' ' → logprob: -5.292539596557617
    7. 'int' → logprob: -5.542539596557617
    8. 'data' → logprob: -5.792539596557617
    9. 's' → logprob: -7.167539596557617
    10. ' data' → logprob: -7.292539596557617

Token 58: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08958141505718231
    2. '=' → logprob: -2.4645814895629883
    3. ',' → logprob: -7.464581489562988
    4. ' ' → logprob: -10.589581489562988
    5. '=int' → logprob: -10.714581489562988
    6. '   ' → logprob: -11.964581489562988
    7. ' ,' → logprob: -12.589581489562988
    8. ')' → logprob: -12.714581489562988
    9. '  ' → logprob: -13.089581489562988
    10. '    ' → logprob: -13.214581489562988

Token 59: ' S' (ID: 336)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3946922719478607
    2. 'int' → logprob: -1.894692301750183
    3. '=' → logprob: -2.6446921825408936
    4. ' ' → logprob: -3.7696921825408936
    5. 'data' → logprob: -3.8946921825408936
    6. ' int' → logprob: -4.269692420959473
    7. 'G' → logprob: -5.019692420959473
    8. ' data' → logprob: -5.019692420959473
    9. '=int' → logprob: -5.019692420959473
    10. '   ' → logprob: -5.394692420959473

Token 60: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11516407132148743
    2. '=' → logprob: -2.240164041519165
    3. ',' → logprob: -6.115164279937744
    4. '=int' → logprob: -9.990163803100586
    5. ' ' → logprob: -10.115163803100586
    6. ' ,' → logprob: -11.740163803100586
    7. '   ' → logprob: -11.740163803100586
    8. '  ' → logprob: -11.865163803100586
    9. '=data' → logprob: -12.740163803100586
    10. ')' → logprob: -12.740163803100586

Token 61: ' M' (ID: 391)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.18530987203121185
    2. '=' → logprob: -2.435309886932373
    3. 'int' → logprob: -3.810309886932373
    4. ' ' → logprob: -4.310309886932373
    5. 'data' → logprob: -4.810309886932373
    6. 'I' → logprob: -5.060309886932373
    7. ' int' → logprob: -5.560309886932373
    8. '_' → logprob: -5.560309886932373
    9. '   ' → logprob: -5.560309886932373
    10. ' data' → logprob: -6.060309886932373

Token 62: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20594125986099243
    2. '=' → logprob: -1.7059412002563477
    3. ',' → logprob: -5.455941200256348
    4. '=int' → logprob: -8.955941200256348
    5. ' ' → logprob: -9.955941200256348
    6. '  ' → logprob: -11.455941200256348
    7. ' ,' → logprob: -11.580941200256348
    8. '   ' → logprob: -11.705941200256348
    9. ')' → logprob: -11.830941200256348
    10. '<|end|>' → logprob: -12.080941200256348

Token 63: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.0631822943687439
    2. 'map' → logprob: -2.8131823539733887
    3. ' list' → logprob: -6.813182353973389
    4. 'list' → logprob: -9.81318187713623
    5. 'int' → logprob: -11.06318187713623
    6. ' int' → logprob: -11.06318187713623
    7. '(map' → logprob: -11.93818187713623
    8. ' data' → logprob: -12.06318187713623
    9. ' [' → logprob: -12.31318187713623
    10. '   ' → logprob: -12.43818187713623

Token 64: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0010622250847518444
    2. '(' → logprob: -7.001062393188477
    3. '(lambda' → logprob: -9.001062393188477
    4. 'int' → logprob: -11.501062393188477
    5. '(str' → logprob: -11.626062393188477
    6. '[int' → logprob: -12.626062393188477
    7. '<int' → logprob: -13.001062393188477
    8. '(float' → logprob: -13.251062393188477
    9. '(
' → logprob: -15.001062393188477
    10. '=int' → logprob: -15.626062393188477

Token 65: ',' (ID: 11)
  Prédit: '(data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(data' → logprob: -0.1509351134300232
    2. ')' → logprob: -3.025935173034668
    3. ',data' → logprob: -3.525935173034668
    4. ')data' → logprob: -3.525935173034668
    5. ',' → logprob: -3.650935173034668
    6. ' data' → logprob: -5.775935173034668
    7. 'data' → logprob: -6.275935173034668
    8. ')(' → logprob: -7.025935173034668
    9. '(' → logprob: -7.525935173034668
    10. ' ,' → logprob: -9.275935173034668

Token 66: ' data' (ID: 1238)
  Prédit: ' data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' data' → logprob: -0.1428411304950714
    2. 'data' → logprob: -2.017841100692749
    3. '[data' → logprob: -9.767841339111328
    4. ')data' → logprob: -10.017841339111328
    5. ')' → logprob: -10.642841339111328
    6. '	data' → logprob: -11.517841339111328
    7. ' ' → logprob: -11.642841339111328
    8. '(data' → logprob: -12.267841339111328
    9. ' dat' → logprob: -12.767841339111328
    10. '    ' → logprob: -12.892841339111328

Token 67: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -9.674858301877975e-05
    2. '(' → logprob: -10.000096321105957
    3. ')' → logprob: -10.250096321105957
    4. ' [' → logprob: -11.375096321105957
    5. ')[' → logprob: -13.750096321105957
    6. '```' → logprob: -14.125096321105957
    7. '([' → logprob: -14.750096321105957
    8. '[
' → logprob: -14.875096321105957
    9. '	' → logprob: -15.000096321105957
    10. '   ' → logprob: -15.250096321105957

Token 68: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002931558701675385
    2. ' ' → logprob: -9.000292778015137
    3. '[' → logprob: -9.000292778015137
    4. '```' → logprob: -11.687792778015137
    5. '   ' → logprob: -11.937792778015137
    6. '(' → logprob: -12.125292778015137
    7. '2' → logprob: -12.562792778015137
    8. ':' → logprob: -13.062792778015137
    9. ')' → logprob: -13.125292778015137
    10. '  ' → logprob: -13.187792778015137

Token 69: ':])
' (ID: 109592)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 70: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22879381477832794
    2. '   ' → logprob: -1.9787938594818115
    3. ')' → logprob: -3.2287938594818115
    4. '<|end|>' → logprob: -4.228793621063232
    5. '
' → logprob: -4.853793621063232
    6. ')
' → logprob: -6.478793621063232
    7. '    
' → logprob: -7.228793621063232
    8. '        
' → logprob: -7.353793621063232
    9. ',' → logprob: -7.978793621063232
    10. '<|end|>' → logprob: -8.72879409790039

Token 71: ' total' (ID: 3609)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12495700269937515
    2. '
' → logprob: -3.9999570846557617
    3. '    
' → logprob: -3.9999570846557617
    4. '       ' → logprob: -5.249957084655762
    5. ' total' → logprob: -5.249957084655762
    6. ' crop' → logprob: -5.374957084655762
    7. ' crops' → logprob: -5.374957084655762
    8. '```' → logprob: -5.374957084655762
    9. 'score' → logprob: -5.499957084655762
    10. ' if' → logprob: -5.624957084655762

Token 72: '_time' (ID: 6425)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5138182044029236
    2. '_y' → logprob: -1.6388182640075684
    3. '_' → logprob: -2.1388182640075684
    4. ' =' → logprob: -3.6388182640075684
    5. '_c' → logprob: -4.138818264007568
    6. '_weight' → logprob: -4.388818264007568
    7. '_area' → logprob: -5.013818264007568
    8. '_points' → logprob: -5.138818264007568
    9. '_profit' → logprob: -5.638818264007568
    10. '_score' → logprob: -6.013818264007568

Token 73: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25197067856788635
    2. '=' → logprob: -1.501970648765564
    3. 's' → logprob: -10.501970291137695
    4. ' +=' → logprob: -12.251970291137695
    5. ')' → logprob: -12.626970291137695
    6. ',' → logprob: -13.501970291137695
    7. ' ' → logprob: -13.626970291137695
    8. '<|end|>' → logprob: -14.001970291137695
    9. '=sum' → logprob: -14.501970291137695
    10. '_' → logprob: -14.876970291137695

Token 74: ' A' (ID: 355)
  Prédit: ' A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.9267891645431519
    2. ' P' → logprob: -1.4267891645431519
    3. 'A' → logprob: -2.0517892837524414
    4. 'P' → logprob: -2.5517892837524414
    5. '0' → logprob: -3.1767892837524414
    6. ' S' → logprob: -3.5517892837524414
    7. ' (' → logprob: -3.8017892837524414
    8. 'S' → logprob: -4.051789283752441
    9. ' ' → logprob: -4.676789283752441
    10. '(A' → logprob: -5.051789283752441

Token 75: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.42152243852615356
    2. ' +' → logprob: -1.1715223789215088
    3. '*' → logprob: -3.671522378921509
    4. ' *' → logprob: -4.921522617340088
    5. '+B' → logprob: -7.546522617340088
    6. '<|end|>' → logprob: -7.671522617340088
    7. '+A' → logprob: -8.79652214050293
    8. '+C' → logprob: -9.92152214050293
    9. '*A' → logprob: -10.04652214050293
    10. '+D' → logprob: -11.04652214050293

Token 76: ' B' (ID: 418)
  Prédit: ' B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' B' → logprob: -0.4834921061992645
    2. 'B' → logprob: -0.9834921360015869
    3. ' P' → logprob: -5.733491897583008
    4. 'P' → logprob: -6.108491897583008
    5. ' ' → logprob: -6.358491897583008
    6. ' (' → logprob: -7.108491897583008
    7. '(' → logprob: -8.233491897583008
    8. ' S' → logprob: -8.483491897583008
    9. 'S' → logprob: -9.045991897583008
    10. 'C' → logprob: -9.170991897583008

Token 77: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.8126795291900635
    2. '<|end|>' → logprob: -1.0626795291900635
    3. '+' → logprob: -1.5626795291900635
    4. '<|end|>' → logprob: -7.312679290771484
    5. '+C' → logprob: -8.562679290771484
    6. ' ' → logprob: -8.812679290771484
    7. ')' → logprob: -9.437679290771484
    8. '*' → logprob: -10.312679290771484
    9. ' +
' → logprob: -10.687679290771484
    10. '    ' → logprob: -11.062679290771484

Token 78: ' C' (ID: 363)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 79: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.20747129619121552
    2. '+' → logprob: -1.707471251487732
    3. '<|end|>' → logprob: -5.3324713706970215
    4. '+D' → logprob: -7.0824713706970215
    5. ' +
' → logprob: -9.082470893859863
    6. ' ' → logprob: -9.207470893859863
    7. '<|end|>' → logprob: -9.832470893859863
    8. ')' → logprob: -9.957470893859863
    9. '   ' → logprob: -11.332470893859863
    10. '  ' → logprob: -12.082470893859863

Token 80: ' D' (ID: 415)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.28155216574668884
    2. ' D' → logprob: -1.4065521955490112
    3. ' ' → logprob: -8.5315523147583
    4. '(' → logprob: -10.1565523147583
    5. ' (' → logprob: -10.9065523147583
    6. '"' → logprob: -11.0315523147583
    7. 'E' → logprob: -11.1565523147583
    8. ')' → logprob: -11.1565523147583
    9. ' +' → logprob: -11.1565523147583
    10. ''' → logprob: -11.6565523147583

Token 81: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.026447294279932976
    2. '+' → logprob: -3.651447296142578
    3. '<|end|>' → logprob: -9.026447296142578
    4. ' +
' → logprob: -11.151447296142578
    5. ' ' → logprob: -11.526447296142578
    6. ')' → logprob: -14.026447296142578
    7. '<|end|>' → logprob: -14.651447296142578
    8. ' +
' → logprob: -16.026447296142578
    9. '+C' → logprob: -16.151447296142578
    10. '```' → logprob: -16.151447296142578

Token 82: ' E' (ID: 457)
  Prédit: ' E'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' E' → logprob: -0.10046739876270294
    2. 'E' → logprob: -2.3504674434661865
    3. ' ' → logprob: -9.350467681884766
    4. ''' → logprob: -10.225467681884766
    5. '"' → logprob: -10.475467681884766
    6. ')' → logprob: -11.100467681884766
    7. ' (' → logprob: -11.350467681884766
    8. ' '' → logprob: -11.725467681884766
    9. '(' → logprob: -11.850467681884766
    10. ' S' → logprob: -11.850467681884766

Token 83: ' *' (ID: 425)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.07893087714910507
    2. '+' → logprob: -2.5789308547973633
    3. ' ' → logprob: -11.328930854797363
    4. 'F' → logprob: -11.953930854797363
    5. ' F' → logprob: -12.703930854797363
    6. '```' → logprob: -12.828930854797363
    7. ')' → logprob: -13.078930854797363
    8. ' +
' → logprob: -13.203930854797363
    9. '[' → logprob: -13.328930854797363
    10. '`' → logprob: -13.453930854797363

Token 84: ' M' (ID: 391)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'F' → logprob: -0.5002868175506592
    2. ' F' → logprob: -1.0002868175506592
    3. ' ' → logprob: -4.625287055969238
    4. 'S' → logprob: -5.000287055969238
    5. ' S' → logprob: -5.250287055969238
    6. ' M' → logprob: -7.000287055969238
    7. 'M' → logprob: -7.125287055969238
    8. 'P' → logprob: -7.750287055969238
    9. ' P' → logprob: -7.750287055969238
    10. ' (' → logprob: -8.000287055969238

Token 85: '
' (ID: 198)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4346240162849426
    2. ' +' → logprob: -1.0596239566802979
    3. '<|end|>' → logprob: -5.934624195098877
    4. ' ' → logprob: -6.684624195098877
    5. '*' → logprob: -7.059624195098877
    6. '-' → logprob: -8.559623718261719
    7. ' +
' → logprob: -8.684623718261719
    8. ')' → logprob: -9.309623718261719
    9. '+
' → logprob: -9.309623718261719
    10. '
' → logprob: -9.434623718261719

Token 86: '       ' (ID: 309)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.5287548899650574
    2. '+' → logprob: -0.9037548899650574
    3. 'F' → logprob: -5.778754711151123
    4. '-' → logprob: -7.278754711151123
    5. ' -' → logprob: -7.403754711151123
    6. '*' → logprob: -7.778754711151123
    7. ' F' → logprob: -8.278755187988281
    8. ' ' → logprob: -8.778755187988281
    9. ' *' → logprob: -9.653755187988281
    10. '<|end|>' → logprob: -9.903755187988281

Token 87: ' income' (ID: 11583)
  Prédit: ' crops'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' crops' → logprob: -0.5296798944473267
    2. ' if' → logprob: -1.5296798944473267
    3. 'if' → logprob: -2.154679775238037
    4. 'F' → logprob: -3.529679775238037
    5. 'S' → logprob: -4.654679775238037
    6. 's' → logprob: -4.654679775238037
    7. 'c' → logprob: -5.592179775238037
    8. ' F' → logprob: -5.904679775238037
    9. ' +' → logprob: -5.967179775238037
    10. '+' → logprob: -6.092179775238037

Token 88: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06207580119371414
    2. '=' → logprob: -2.8120758533477783
    3. 's' → logprob: -9.1870756149292
    4. '_' → logprob: -13.5620756149292
    5. ' ' → logprob: -13.6870756149292
    6. ' +=' → logprob: -13.8120756149292
    7. ',' → logprob: -14.0620756149292
    8. '<|end|>' → logprob: -15.9370756149292
    9. '＝' → logprob: -15.9370756149292
    10. '_per' → logprob: -16.062076568603516

Token 89: ' F' (ID: 454)
  Prédit: ' P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' P' → logprob: -0.5612773299217224
    2. 'P' → logprob: -1.9362773895263672
    3. ' F' → logprob: -2.436277389526367
    4. ' S' → logprob: -2.436277389526367
    5. 'F' → logprob: -2.811277389526367
    6. 'S' → logprob: -3.311277389526367
    7. ' (' → logprob: -5.186277389526367
    8. ' ' → logprob: -5.936277389526367
    9. '(P' → logprob: -6.936277389526367
    10. ' M' → logprob: -7.061277389526367

Token 90: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.038143157958984375
    2. '*' → logprob: -3.2881431579589844
    3. ' ' → logprob: -10.538143157958984
    4. ' -' → logprob: -10.913143157958984
    5. '*S' → logprob: -11.663143157958984
    6. '-' → logprob: -11.788143157958984
    7. '<|end|>' → logprob: -11.788143157958984
    8. '*M' → logprob: -12.288143157958984
    9. ')' → logprob: -12.288143157958984
    10. ' /' → logprob: -12.413143157958984

Token 91: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.29070499539375305
    2. ' S' → logprob: -1.6657049655914307
    3. 'M' → logprob: -3.1657049655914307
    4. ' M' → logprob: -3.9157049655914307
    5. 'P' → logprob: -7.79070520401001
    6. ' ' → logprob: -8.540704727172852
    7. ' P' → logprob: -8.790704727172852
    8. ' (' → logprob: -8.915704727172852
    9. '(' → logprob: -9.790704727172852
    10. '(S' → logprob: -10.040704727172852

Token 92: ' *' (ID: 425)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 93: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.10141731053590775
    2. ' M' → logprob: -2.726417303085327
    3. 'P' → logprob: -3.601417303085327
    4. ' P' → logprob: -6.476417541503906
    5. ' ' → logprob: -7.226417541503906
    6. 'total' → logprob: -8.101417541503906
    7. 'A' → logprob: -8.476417541503906
    8. ' (' → logprob: -8.851417541503906
    9. '100' → logprob: -8.851417541503906
    10. '(' → logprob: -8.976417541503906

Token 94: ' -' (ID: 533)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.048862699419260025
    2. '
' → logprob: -3.5488626956939697
    3. '<|end|>' → logprob: -4.798862934112549
    4. ' crops' → logprob: -5.048862934112549
    5. ')' → logprob: -6.048862934112549
    6. '       ' → logprob: -6.798862934112549
    7. 'c' → logprob: -8.92386245727539
    8. '    
' → logprob: -9.29886245727539
    9. ',' → logprob: -9.42386245727539
    10. '<|end|>' → logprob: -9.67386245727539

Token 95: ' P' (ID: 398)
  Prédit: ' total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.1270633488893509
    2. 'total' → logprob: -2.127063274383545
    3. '(total' → logprob: -9.877063751220703
    4. '	total' → logprob: -9.877063751220703
    5. ' ' → logprob: -11.627063751220703
    6. ' tot' → logprob: -12.252063751220703
    7. ' ' → logprob: -12.502063751220703
    8. ' (' → logprob: -12.627063751220703
    9. 't' → logprob: -13.627063751220703
    10. '0' → logprob: -13.877063751220703

Token 96: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7698317170143127
    2. '<|end|>' → logprob: -1.019831657409668
    3. '   ' → logprob: -1.769831657409668
    4. ')' → logprob: -5.894831657409668
    5. ' crops' → logprob: -7.269831657409668
    6. '       ' → logprob: -7.394831657409668
    7. '<|end|>' → logprob: -7.394831657409668
    8. '*' → logprob: -8.144831657409668
    9. ' *' → logprob: -8.644831657409668
    10. ',' → logprob: -9.144831657409668

Token 97: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011146266013383865
    2. ' crops' → logprob: -5.011146068572998
    3. '<|end|>' → logprob: -5.636146068572998
    4. 'c' → logprob: -7.761146068572998
    5. ')' → logprob: -9.011146545410156
    6. ' if' → logprob: -9.136146545410156
    7. '
' → logprob: -9.261146545410156
    8. '```' → logprob: -10.136146545410156
    9. '	c' → logprob: -11.636146545410156
    10. '  ' → logprob: -11.761146545410156

Token 98: ' efficiency' (ID: 17456)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4029120206832886
    2. ' crops' → logprob: -1.1529120206832886
    3. 'c' → logprob: -4.527912139892578
    4. '<|end|>' → logprob: -5.902912139892578
    5. ' if' → logprob: -6.777912139892578
    6. ')' → logprob: -8.402912139892578
    7. '```' → logprob: -8.527912139892578
    8. ' total' → logprob: -9.027912139892578
    9. 'if' → logprob: -9.652912139892578
    10. '	c' → logprob: -9.777912139892578

Token 99: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07894652336835861
    2. '=' → logprob: -2.578946590423584
    3. 's' → logprob: -9.828946113586426
    4. '_' → logprob: -13.578946113586426
    5. ',' → logprob: -14.828946113586426
    6. '＝' → logprob: -15.078946113586426
    7. ' ' → logprob: -15.203946113586426
    8. ' =
' → logprob: -15.453946113586426
    9. '  ' → logprob: -15.828946113586426
    10. ')' → logprob: -15.953946113586426

Token 100: ' income' (ID: 11583)
  Prédit: ' income'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' income' → logprob: -0.02978532575070858
    2. 'income' → logprob: -3.529785394668579
    3. ' (' → logprob: -11.40478515625
    4. 'in' → logprob: -12.40478515625
    5. '(in' → logprob: -12.52978515625
    6. ' ' → logprob: -12.90478515625
    7. ' incomes' → logprob: -13.02978515625
    8. ' crops' → logprob: -13.65478515625
    9. '0' → logprob: -13.65478515625
    10. '[in' → logprob: -13.96728515625

Token 101: ' /' (ID: 820)
  Prédit: ' /'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.4740900695323944
    2. '/' → logprob: -0.9740900993347168
    3. '*' → logprob: -11.349089622497559
    4. ' ' → logprob: -14.724089622497559
    5. ' ' → logprob: -15.099089622497559
    6. ' *' → logprob: -15.099089622497559
    7. ' /
' → logprob: -16.599090576171875
    8. '   ' → logprob: -17.224090576171875
    9. '.' → logprob: -17.349090576171875
    10. 'total' → logprob: -17.349090576171875

Token 102: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.02324792370200157
    2. ' total' → logprob: -3.7732479572296143
    3. '(total' → logprob: -13.773247718811035
    4. ' ' → logprob: -14.648247718811035
    5. 'time' → logprob: -14.898247718811035
    6. '	total' → logprob: -15.773247718811035
    7. 'tot' → logprob: -16.02324867248535
    8. 'max' → logprob: -16.14824867248535
    9. 't' → logprob: -16.39824867248535
    10. '$total' → logprob: -16.89824867248535

Token 103: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.00015050210640765727
    2. '_' → logprob: -8.875150680541992
    3. ' _' → logprob: -12.625150680541992
    4. '_t' → logprob: -13.000150680541992
    5. '_times' → logprob: -13.375150680541992
    6. '_token' → logprob: -13.875150680541992
    7. '_tim' → logprob: -14.250150680541992
    8. '_total' → logprob: -14.875150680541992
    9. '_cost' → logprob: -15.125150680541992
    10. 'time' → logprob: -15.500150680541992

Token 104: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.40299054980278015
    2. '
' → logprob: -1.6529905796051025
    3. '<|end|>' → logprob: -2.2779905796051025
    4. '       ' → logprob: -3.4029905796051025
    5. ')' → logprob: -6.277990341186523
    6. '    
' → logprob: -6.902990341186523
    7. '<|end|>' → logprob: -8.277990341186523
    8. '  
' → logprob: -8.277990341186523
    9. '  ' → logprob: -8.652990341186523
    10. '        
' → logprob: -9.027990341186523

Token 105: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00038384052459150553
    2. '<|end|>' → logprob: -8.375383377075195
    3. ' crops' → logprob: -9.625383377075195
    4. 'c' → logprob: -10.250383377075195
    5. '
' → logprob: -10.500383377075195
    6. ')' → logprob: -12.125383377075195
    7. '    
' → logprob: -12.250383377075195
    8. '       ' → logprob: -12.375383377075195
    9. '	c' → logprob: -12.875383377075195
    10. '```' → logprob: -13.125383377075195

Token 106: ' crops' (ID: 52264)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.22718504071235657
    2. '   ' → logprob: -2.227185010910034
    3. ' crops' → logprob: -2.352185010910034
    4. 'if' → logprob: -10.602185249328613
    5. 'crop' → logprob: -10.602185249328613
    6. ' if' → logprob: -10.602185249328613
    7. ' ' → logprob: -10.727185249328613
    8. 'cro' → logprob: -10.852185249328613
    9. '
' → logprob: -10.977185249328613
    10. '	c' → logprob: -11.039685249328613

Token 107: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.002198313595727086
    2. '.' → logprob: -6.127198219299316
    3. ' .' → logprob: -11.877198219299316
    4. '.app' → logprob: -13.377198219299316
    5. '.push' → logprob: -14.002198219299316
    6. '.extend' → logprob: -14.002198219299316
    7. '.add' → logprob: -14.127198219299316
    8. '.ap' → logprob: -14.502198219299316
    9. '<|end|>' → logprob: -14.752198219299316
    10. '.setdefault' → logprob: -14.877198219299316

Token 108: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -5.908022285439074e-05
    2. '(' → logprob: -9.750059127807617
    3. '(('' → logprob: -15.000059127807617
    4. '(c' → logprob: -15.625059127807617
    5. '([' → logprob: -15.875059127807617
    6. '(("' → logprob: -16.875059127807617
    7. '(([' → logprob: -17.125059127807617
    8. '(((' → logprob: -17.875059127807617
    9. ' ((' → logprob: -18.250059127807617
    10. '(
' → logprob: -19.000059127807617

Token 109: ' -' (ID: 533)
  Prédit: 'eff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eff' → logprob: -0.003219899022951722
    2. ' efficiency' → logprob: -6.378220081329346
    3. '-eff' → logprob: -6.503220081329346
    4. '   ' → logprob: -12.003219604492188
    5. 'L' → logprob: -12.378219604492188
    6. ' -' → logprob: -13.503219604492188
    7. '_eff' → logprob: -13.878219604492188
    8. 'ef' → logprob: -14.128219604492188
    9. 'efficient' → logprob: -14.378219604492188
    10. '       ' → logprob: -14.628219604492188

Token 110: 'eff' (ID: 13933)
  Prédit: 'eff'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eff' → logprob: -0.0007136239437386394
    2. ' efficiency' → logprob: -7.25071382522583
    3. '_eff' → logprob: -13.875713348388672
    4. '-eff' → logprob: -14.500713348388672
    5. '   ' → logprob: -14.875713348388672
    6. 'efficient' → logprob: -15.000713348388672
    7. '1' → logprob: -15.125713348388672
    8. ' ' → logprob: -15.500713348388672
    9. 'int' → logprob: -15.750713348388672
    10. ')' → logprob: -15.750713348388672

Token 111: 'iciency' (ID: 12895)
  Prédit: 'iciency'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iciency' → logprob: -4.096126576769166e-05
    2. 'ficiency' → logprob: -10.250041007995605
    3. 'iency' → logprob: -12.375041007995605
    4. 'c' → logprob: -14.625041007995605
    5. 'ici' → logprob: -15.000041007995605
    6. 'icien' → logprob: -15.875041007995605
    7. ' ' → logprob: -16.12504005432129
    8. ')' → logprob: -16.25004005432129
    9. '   ' → logprob: -16.62504005432129
    10. 'ic' → logprob: -16.75004005432129

Token 112: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00023333763238042593
    2. ' ,' → logprob: -8.37523365020752
    3. ')' → logprob: -14.25023365020752
    4. ',n' → logprob: -14.50023365020752
    5. '   ' → logprob: -14.62523365020752
    6. ',
' → logprob: -15.50023365020752
    7. ',index' → logprob: -15.75023365020752
    8. '))' → logprob: -15.87523365020752
    9. ',i' → logprob: -16.625232696533203
    10. ',N' → logprob: -16.625232696533203

Token 113: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.2568058967590332
    2. ' L' → logprob: -2.131805896759033
    3. 'S' → logprob: -3.381805896759033
    4. 'total' → logprob: -4.006805896759033
    5. 'M' → logprob: -4.131805896759033
    6. ' total' → logprob: -4.506805896759033
    7. ' S' → logprob: -5.131805896759033
    8. 'N' → logprob: -5.131805896759033
    9. 'P' → logprob: -5.381805896759033
    10. ' M' → logprob: -5.756805896759033

Token 114: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.007800741121172905
    2. ' ))' → logprob: -5.007800579071045
    3. ',' → logprob: -6.882800579071045
    4. ')' → logprob: -10.757801055908203
    5. '))
' → logprob: -11.132801055908203
    6. ' ' → logprob: -11.507801055908203
    7. '   ' → logprob: -12.007801055908203
    8. ' )' → logprob: -13.007801055908203
    9. ' ,' → logprob: -13.257801055908203
    10. '))

' → logprob: -14.507801055908203

Token 115: '   ' (ID: 271)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.5343836545944214
    2. '   ' → logprob: -1.1593836545944214
    3. ' crops' → logprob: -2.409383773803711
    4. '
' → logprob: -5.034383773803711
    5. '    
' → logprob: -6.659383773803711
    6. '```' → logprob: -6.784383773803711
    7. '<|end|>' → logprob: -8.784383773803711
    8. '	c' → logprob: -8.909383773803711
    9. ',c' → logprob: -8.909383773803711
    10. 'cro' → logprob: -9.034383773803711

Token 116: ' crops' (ID: 52264)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.02113301493227482
    2. '   ' → logprob: -4.271132946014404
    3. ' crops' → logprob: -5.271132946014404
    4. 'cro' → logprob: -7.896132946014404
    5. ')' → logprob: -8.146133422851562
    6. 'crop' → logprob: -8.396133422851562
    7. 'import' → logprob: -8.771133422851562
    8. 'sorted' → logprob: -8.771133422851562
    9. '    
' → logprob: -9.146133422851562
    10. ')c' → logprob: -9.896133422851562

Token 117: '.sort' (ID: 19551)
  Prédit: '.sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -4.847109812544659e-05
    2. '.' → logprob: -10.000048637390137
    3. '<|end|>' → logprob: -13.625048637390137
    4. 'sort' → logprob: -13.875048637390137
    5. ')' → logprob: -14.625048637390137
    6. '_sorted' → logprob: -16.37504768371582
    7. '.Sort' → logprob: -16.75004768371582
    8. '.pop' → logprob: -16.75004768371582
    9. '.clear' → logprob: -16.75004768371582
    10. ').' → logprob: -16.87504768371582

Token 118: '(key' (ID: 8932)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00024203950306400657
    2. '(reverse' → logprob: -8.750242233276367
    3. '(key' → logprob: -10.500242233276367
    4. '(' → logprob: -11.250242233276367
    5. '();' → logprob: -11.375242233276367
    6. '()
' → logprob: -12.000242233276367
    7. '<|end|>' → logprob: -12.125242233276367
    8. '()>' → logprob: -12.750242233276367
    9. '()[' → logprob: -12.750242233276367
    10. '(inplace' → logprob: -12.875242233276367

Token 119: '=lambda' (ID: 64865)
  Prédit: '=lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=lambda' → logprob: -0.02975187823176384
    2. '=' → logprob: -3.529751777648926
    3. '=len' → logprob: -14.154751777648926
    4. ' =' → logprob: -15.154751777648926
    5. '=str' → logprob: -15.904751777648926
    6. '=None' → logprob: -16.154752731323242
    7. '=
' → logprob: -16.404752731323242
    8. '=

' → logprob: -16.654752731323242
    9. '=item' → logprob: -17.529752731323242
    10. '=_' → logprob: -17.779752731323242

Token 120: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.48068422079086304
    2. 'x' → logprob: -0.980684220790863
    3. ' crop' → logprob: -5.480684280395508
    4. 'c' → logprob: -6.605684280395508
    5. 'crop' → logprob: -7.230684280395508
    6. ' c' → logprob: -8.480684280395508
    7. ' crops' → logprob: -9.730684280395508
    8. 't' → logprob: -11.480684280395508
    9. 'lambda' → logprob: -11.605684280395508
    10. ' lambda' → logprob: -11.605684280395508

Token 121: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.001976691884920001
    2. ' :' → logprob: -6.876976490020752
    3. ':x' → logprob: -7.001976490020752
    4. 'x' → logprob: -10.75197696685791
    5. '[' → logprob: -11.75197696685791
    6. ' x' → logprob: -12.75197696685791
    7. ':
' → logprob: -15.00197696685791
    8. ' ' → logprob: -15.62697696685791
    9. ':int' → logprob: -15.87697696685791
    10. '   ' → logprob: -15.87697696685791

Token 122: ' (' (ID: 350)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.03370114043354988
    2. ' x' → logprob: -3.408701181411743
    3. '(' → logprob: -11.283700942993164
    4. '(x' → logprob: -11.408700942993164
    5. ' (' → logprob: -11.533700942993164
    6. '-' → logprob: -12.158700942993164
    7. '(-' → logprob: -12.533700942993164
    8. ' -' → logprob: -12.533700942993164
    9. 'abs' → logprob: -12.908700942993164
    10. ' ' → logprob: -13.408700942993164

Token 123: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.048588961362838745
    2. ' x' → logprob: -3.048588991165161
    3. '(x' → logprob: -14.798588752746582
    4. '-' → logprob: -15.298588752746582
    5. ' ' → logprob: -15.673588752746582
    6. ')x' → logprob: -15.923588752746582
    7. ')' → logprob: -16.0485897064209
    8. ' (' → logprob: -16.0485897064209
    9. ' -' → logprob: -16.4235897064209
    10. 'abs' → logprob: -16.5485897064209

Token 124: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0005131178768351674
    2. '))' → logprob: -7.625513076782227
    3. ' [' → logprob: -12.125513076782227
    4. ')' → logprob: -12.125513076782227
    5. '[
' → logprob: -12.375513076782227
    6. ' ))' → logprob: -12.500513076782227
    7. ':' → logprob: -13.250513076782227
    8. '0' → logprob: -13.625513076782227
    9. '
' → logprob: -14.625513076782227
    10. ' ' → logprob: -14.750513076782227

Token 125: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0020207129418849945
    2. '1' → logprob: -6.877020835876465
    3. 'x' → logprob: -7.002020835876465
    4. '[' → logprob: -10.002020835876465
    5. ' ' → logprob: -11.127020835876465
    6. ' x' → logprob: -11.877020835876465
    7. '-' → logprob: -12.752020835876465
    8. 'abs' → logprob: -12.877020835876465
    9. '
' → logprob: -14.314520835876465
    10. ')' → logprob: -14.314520835876465

Token 126: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0032500813249498606
    2. ',x' → logprob: -5.7532501220703125
    3. ' ,' → logprob: -10.378250122070312
    4. '))' → logprob: -10.878250122070312
    5. '[' → logprob: -10.878250122070312
    6. ',c' → logprob: -13.753250122070312
    7. ',
' → logprob: -13.878250122070312
    8. ' ))' → logprob: -14.753250122070312
    9. 'x' → logprob: -15.253250122070312
    10. '   ' → logprob: -16.128250122070312

Token 127: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.023248042911291122
    2. ' x' → logprob: -3.7732479572296143
    3. '   ' → logprob: -14.273247718811035
    4. ' ' → logprob: -14.898247718811035
    5. ' crops' → logprob: -15.273247718811035
    6. ')' → logprob: -15.773247718811035
    7. ')x' → logprob: -15.773247718811035
    8. '	x' → logprob: -15.898247718811035
    9. '
' → logprob: -16.14824867248535
    10. 'c' → logprob: -16.27324867248535

Token 128: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0802738870552275e-05
    2. ',' → logprob: -12.25001049041748
    3. '1' → logprob: -12.75001049041748
    4. '[
' → logprob: -13.50001049041748
    5. '.' → logprob: -14.62501049041748
    6. ' [' → logprob: -15.00001049041748
    7. ')' → logprob: -15.87501049041748
    8. ':' → logprob: -16.125011444091797
    9. '
' → logprob: -16.250011444091797
    10. '))' → logprob: -16.250011444091797

Token 129: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0015297401696443558
    2. '[' → logprob: -6.501529693603516
    3. 'x' → logprob: -10.751529693603516
    4. ' ' → logprob: -12.501529693603516
    5. '-' → logprob: -14.626529693603516
    6. '0' → logprob: -15.001529693603516
    7. ')' → logprob: -15.126529693603516
    8. '
' → logprob: -15.251529693603516
    9. '   ' → logprob: -15.501529693603516
    10. '

' → logprob: -15.939029693603516

Token 130: ']))
' (ID: 24801)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -4.954393079970032e-05
    2. ')' → logprob: -10.625049591064453
    3. '))
' → logprob: -11.375049591064453
    4. ' ))' → logprob: -11.750049591064453
    5. ')))' → logprob: -12.875049591064453
    6. '()))' → logprob: -13.875049591064453
    7. '),' → logprob: -14.375049591064453
    8. '[' → logprob: -14.875049591064453
    9. '))

' → logprob: -15.250049591064453
    10. '__))' → logprob: -15.625049591064453

Token 131: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.565503716468811
    2. 'print' → logprob: -1.065503716468811
    3. 'for' → logprob: -3.0655035972595215
    4. ' for' → logprob: -3.6905035972595215
    5. ' print' → logprob: -4.1905035972595215
    6. '    
' → logprob: -8.69050407409668
    7. 'if' → logprob: -8.94050407409668
    8. ',' → logprob: -9.56550407409668
    9. '
' → logprob: -10.06550407409668
    10. ' if' → logprob: -10.19050407409668

Token 132: ' for' (ID: 395)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.10484224557876587
    2. '   ' → logprob: -3.229842185974121
    3. ' print' → logprob: -3.354842185974121
    4. 'for' (adapté à ' for') → logprob: -4.354842185974121
    5. 'if' → logprob: -4.729842185974121
    6. ' for' → logprob: -6.354842185974121
    7. ' if' → logprob: -6.854842185974121
    8. 'result' → logprob: -8.604842185974121
    9. 'import' → logprob: -9.354842185974121
    10. 'best' → logprob: -9.729842185974121

Token 133: ' _,' (ID: 18042)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.8487552404403687
    2. ' crop' → logprob: -1.0987552404403687
    3. ' _,' → logprob: -2.223755359649658
    4. 'i' → logprob: -3.098755359649658
    5. ' efficiency' → logprob: -3.473755359649658
    6. 'crop' → logprob: -3.848755359649658
    7. '_,' → logprob: -4.598755359649658
    8. ' _' → logprob: -5.223755359649658
    9. 'eff' → logprob: -5.348755359649658
    10. ' name' → logprob: -6.223755359649658

Token 134: ' name' (ID: 1308)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.3512711524963379
    2. 'name' → logprob: -1.851271152496338
    3. 'c' → logprob: -2.976271152496338
    4. 'crop' → logprob: -3.351271152496338
    5. 'label' → logprob: -3.851271152496338
    6. ' L' → logprob: -4.226271152496338
    7. ' name' → logprob: -4.726271152496338
    8. 'l' → logprob: -5.601271152496338
    9. 'letter' → logprob: -6.851271152496338
    10. ' crop' → logprob: -7.476271152496338

Token 135: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03804768621921539
    2. 'in' → logprob: -3.2880477905273438
    3. 'name' → logprob: -13.413047790527344
    4. 'print' → logprob: -13.788047790527344
    5. ' ' → logprob: -14.288047790527344
    6. '   ' → logprob: -14.788047790527344
    7. '	in' → logprob: -14.788047790527344
    8. 'In' → logprob: -15.288047790527344
    9. '  ' → logprob: -15.288047790527344
    10. ',' → logprob: -15.413047790527344

Token 136: ' crops' (ID: 52264)
  Prédit: ' crops'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' crops' → logprob: -0.5231505632400513
    2. 'c' → logprob: -0.8981505632400513
    3. 'cro' → logprob: -11.023150444030762
    4. ' ' → logprob: -12.523150444030762
    5. '   ' → logprob: -13.648150444030762
    6. 'crop' → logprob: -13.648150444030762
    7. '(c' → logprob: -13.773150444030762
    8. '[c' → logprob: -14.148150444030762
    9. '	c' → logprob: -14.273150444030762
    10. 'enumer' → logprob: -14.648150444030762

Token 137: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4292050004005432
    2. ':
' → logprob: -1.0542049407958984
    3. '   ' → logprob: -8.429204940795898
    4. '[::-' → logprob: -9.304204940795898
    5. '[' → logprob: -9.429204940795898
    6. '[:-' → logprob: -9.804204940795898
    7. '[:' → logprob: -10.804204940795898
    8. '       ' → logprob: -11.054204940795898
    9. '):
' → logprob: -11.429204940795898
    10. ':

' → logprob: -12.304204940795898

Token 138: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11733856052160263
    2. '   ' → logprob: -2.2423386573791504
    3. ' print' → logprob: -5.49233865737915
    4. 'print' → logprob: -8.992338180541992
    5. '
' → logprob: -9.742338180541992
    6. '    
' → logprob: -9.867338180541992
    7. '        
' → logprob: -10.117338180541992
    8. ',' → logprob: -10.742338180541992
    9. '     ' → logprob: -11.367338180541992
    10. ':
' → logprob: -11.367338180541992

Token 139: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.01983192376792431
    2. ' print' → logprob: -4.019832134246826
    3. '   ' → logprob: -6.394832134246826
    4. '       ' → logprob: -11.769831657409668
    5. '	print' → logprob: -13.269831657409668
    6. '
' → logprob: -15.269831657409668
    7. ' ' → logprob: -15.269831657409668
    8. '  ' → logprob: -15.394831657409668
    9. '```' → logprob: -15.769831657409668
    10. '    ' → logprob: -16.644832611083984

Token 140: '(name' (ID: 5587)
  Prédit: '(name'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(name' → logprob: -0.001117711653932929
    2. '(' → logprob: -7.001117706298828
    3. 'name' → logprob: -8.751117706298828
    4. '(f' → logprob: -10.001117706298828
    5. '('' → logprob: -13.376117706298828
    6. ' name' → logprob: -14.751117706298828
    7. '("' → logprob: -14.876117706298828
    8. ' (' → logprob: -15.376117706298828
    9. '()' → logprob: -17.251117706298828
    10. '(
' → logprob: -17.626117706298828

Token 141: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.292907877039397e-06
    2. ')
' → logprob: -13.00000286102295
    3. ' )' → logprob: -15.12500286102295
    4. '))' → logprob: -15.50000286102295
    5. '())' → logprob: -15.87500286102295
    6. ')`' → logprob: -16.000003814697266
    7. '   ' → logprob: -16.125003814697266
    8. ')}' → logprob: -16.375003814697266
    9. '<|end|>' → logprob: -16.875003814697266
    10. ');' → logprob: -17.250003814697266

Token 142: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 143: ' print' (ID: 2123)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 144: '("#' (ID: 6783)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 145: '")' (ID: 1405)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 143
Tokens correctement prédits (1ère position, stricte): 59
Tokens correctement prédits (1ère position, avec adaptation): 61
Tokens correctement prédits (top 10): 110
Précision stricte (1ère position): 41.26%
Précision adaptée (1ère position): 42.66%
Précision (top 10): 76.92%
================================================================================
