================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:59:50
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
while True:
    z = int(input())
    if z == 0:
        break
    z_cube = z ** 3
    max_sum = 0
    for x in range(1, z):
        for y in range(1, z):
            s = x**3 + y**3
            if s <= z_cube and s > max_sum:
                max_sum = s
    print(z_cube - max_sum)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'while' (ID: 7032)
  → Token d'amorce (pas de prédiction)

Token 1: ' True' (ID: 6432)
  → Token d'amorce (pas de prédiction)

Token 2: ':
' (ID: 734)
  → Token d'amorce (pas de prédiction)

Token 3: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.143191397190094
    2. ' ' → logprob: -3.018191337585449
    3. '    ' → logprob: -4.143191337585449
    4. '\' → logprob: -4.268191337585449
    5. ' 
' → logprob: -4.518191337585449
    6. '    
' → logprob: -4.518191337585449
    7. '\n' → logprob: -4.893191337585449
    8. '```' → logprob: -5.018191337585449
    9. ':' → logprob: -5.143191337585449
    10. ' :' → logprob: -6.518191337585449

Token 4: ' z' (ID: 579)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010238341055810452
    2. '    ' → logprob: -4.760238170623779
    3. '```' → logprob: -7.260238170623779
    4. 'print' → logprob: -9.260238647460938
    5. 'pass' → logprob: -9.385238647460938
    6. '   ' → logprob: -9.385238647460938
    7. 'i' → logprob: -9.385238647460938
    8. 's' → logprob: -9.510238647460938
    9. 'a' → logprob: -9.510238647460938
    10. 'try' → logprob: -9.760238647460938

Token 5: ' =' (ID: 314)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6709742546081543
    2. '=' → logprob: -1.0459742546081543
    3. '   ' → logprob: -2.9209742546081543
    4. ' =' → logprob: -3.5459742546081543
    5. ' ' → logprob: -3.6709742546081543
    6. ' +=' → logprob: -5.170974254608154
    7. '    ' → logprob: -5.420974254608154
    8. '.' → logprob: -5.545974254608154
    9. '  ' → logprob: -6.045974254608154
    10. 'z' → logprob: -6.170974254608154

Token 6: ' int' (ID: 677)
  Prédit: ' z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' z' → logprob: -0.31714221835136414
    2. ' input' → logprob: -1.9421422481536865
    3. 'z' → logprob: -3.1921422481536865
    4. ' ' → logprob: -3.6921422481536865
    5. '0' → logprob: -4.192142009735107
    6. 'input' → logprob: -4.317142009735107
    7. ' True' → logprob: -4.692142009735107
    8. '1' → logprob: -4.817142009735107
    9. ' x' → logprob: -5.442142009735107
    10. ' i' → logprob: -5.942142009735107

Token 7: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.016084929928183556
    2. '(input' → logprob: -4.141085147857666
    3. '('' → logprob: -10.891084671020508
    4. 'input' → logprob: -11.391084671020508
    5. '(
' → logprob: -11.891084671020508
    6. ' (' → logprob: -12.391084671020508
    7. '()' → logprob: -12.891084671020508
    8. ''' → logprob: -13.641084671020508
    9. ' ' → logprob: -13.891084671020508
    10. '("' → logprob: -14.391084671020508

Token 8: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03455379977822304
    2. '()' → logprob: -4.1595540046691895
    3. ')' → logprob: -4.5345540046691895
    4. '())' → logprob: -5.6595540046691895
    5. '('' → logprob: -6.5345540046691895
    6. '(
' → logprob: -7.6595540046691895
    7. '```' → logprob: -7.6595540046691895
    8. '("("' → logprob: -7.7845540046691895
    9. '(()' → logprob: -8.034553527832031
    10. '(""))' → logprob: -8.409553527832031

Token 9: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.2443246841430664
    2. ')' → logprob: -1.7443246841430664
    3. '<|end|>' → logprob: -1.9943246841430664
    4. '   ' → logprob: -2.2443246841430664
    5. '%' → logprob: -2.2443246841430664
    6. '+' → logprob: -2.7443246841430664
    7. ' if' → logprob: -2.9943246841430664
    8. '  ' → logprob: -3.4943246841430664
    9. '    ' → logprob: -4.494324684143066
    10. '==' → logprob: -5.119324684143066

Token 10: ' if' (ID: 538)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7170178890228271
    2. '+' → logprob: -1.5920178890228271
    3. '<|end|>' → logprob: -2.717017889022827
    4. ' if' → logprob: -2.842017889022827
    5. '%' → logprob: -2.842017889022827
    6. ')' → logprob: -3.092017889022827
    7. '   ' → logprob: -3.342017889022827
    8. '  ' → logprob: -4.092018127441406
    9. '    ' → logprob: -4.717018127441406
    10. 'if' (adapté à ' if') → logprob: -5.717018127441406

Token 11: ' z' (ID: 579)
  Prédit: ' z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' z' → logprob: -0.013357041403651237
    2. ' ' → logprob: -4.388357162475586
    3. 'z' → logprob: -7.138357162475586
    4. ' not' → logprob: -10.638357162475586
    5. '  ' → logprob: -10.763357162475586
    6. ' ' → logprob: -12.888357162475586
    7. ' (' → logprob: -13.263357162475586
    8. ' )' → logprob: -14.513357162475586
    9. '	z' → logprob: -14.638357162475586
    10. ' x' → logprob: -15.013357162475586

Token 12: ' ==' (ID: 951)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.4000754654407501
    2. ' <' → logprob: -2.1500754356384277
    3. ' ==' → logprob: -2.1500754356384277
    4. '>' → logprob: -3.7750754356384277
    5. ' ' → logprob: -3.7750754356384277
    6. ' <=' → logprob: -3.7750754356384277
    7. ' >=' → logprob: -4.025075435638428
    8. '==' → logprob: -5.525075435638428
    9. '<' → logprob: -6.150075435638428
    10. ' %' → logprob: -6.650075435638428

Token 13: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.05517225340008736
    2. '0' → logprob: -2.9301722049713135
    3. '1' → logprob: -8.555171966552734
    4. '32' → logprob: -10.305171966552734
    5. '10' → logprob: -11.805171966552734
    6. '  ' → logprob: -12.305171966552734
    7. ' )' → logprob: -12.305171966552734
    8. '3' → logprob: -12.430171966552734
    9. '20' → logprob: -12.555171966552734
    10. '4' → logprob: -12.680171966552734

Token 14: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.021286126226186752
    2. ' ' → logprob: -3.8962860107421875
    3. '42' → logprob: -8.021286010742188
    4. '1' → logprob: -8.396286010742188
    5. '7' → logprob: -10.021286010742188
    6. '-' → logprob: -10.146286010742188
    7. '4' → logprob: -11.021286010742188
    8. '5' → logprob: -11.271286010742188
    9. '100' → logprob: -11.396286010742188
    10. '10' → logprob: -11.521286010742188

Token 15: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00010545044642640278
    2. ':
' → logprob: -9.375105857849121
    3. '   ' → logprob: -11.875105857849121
    4. ':\' → logprob: -12.500105857849121
    5. '       ' → logprob: -12.625105857849121
    6. ' :' → logprob: -12.625105857849121
    7. ':return' → logprob: -13.500105857849121
    8. '):' → logprob: -14.125105857849121
    9. '    ' → logprob: -15.125105857849121
    10. '':' → logprob: -15.750105857849121

Token 16: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00013047587708570063
    2. '   ' → logprob: -10.000130653381348
    3. ' break' → logprob: -10.125130653381348
    4. '      ' → logprob: -11.625130653381348
    5. '	break' → logprob: -11.750130653381348
    6. '        ' → logprob: -12.375130653381348
    7. '\n' → logprob: -12.500130653381348
    8. '    ' → logprob: -12.625130653381348
    9. '<|end|>' → logprob: -12.750130653381348
    10. ':' → logprob: -12.875130653381348

Token 17: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.4753042161464691
    2. '       ' → logprob: -0.9753042459487915
    3. 'break' (adapté à ' break') → logprob: -7.100304126739502
    4. '   ' → logprob: -8.60030460357666
    5. '	break' → logprob: -9.10030460357666
    6. '```' → logprob: -10.60030460357666
    7. '_break' → logprob: -11.10030460357666
    8. ' ' → logprob: -11.35030460357666
    9. '           ' → logprob: -11.35030460357666
    10. ' ' → logprob: -11.60030460357666

Token 18: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19942957162857056
    2. '\n' → logprob: -2.949429512023926
    3. '
' → logprob: -3.074429512023926
    4. '    
' → logprob: -3.449429512023926
    5. '```' → logprob: -3.949429512023926
    6. '<|end|>' → logprob: -4.824429512023926
    7. '  
' → logprob: -4.949429512023926
    8. '\' → logprob: -5.574429512023926
    9. 'n' → logprob: -5.824429512023926
    10. ' ' → logprob: -6.574429512023926

Token 19: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013296938501298428
    2. '    
' → logprob: -4.888297080993652
    3. '\n' → logprob: -6.638297080993652
    4. '<|end|>' → logprob: -6.888297080993652
    5. '```' → logprob: -7.138297080993652
    6. '\' → logprob: -7.388297080993652
    7. ' ' → logprob: -7.638297080993652
    8. ')' → logprob: -8.138297080993652
    9. '  
' → logprob: -8.263297080993652
    10. 'print' → logprob: -8.888297080993652

Token 20: ' z' (ID: 579)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014643627218902111
    2. ' ' → logprob: -6.014643669128418
    3. 'n' → logprob: -6.389643669128418
    4. '       ' → logprob: -6.389643669128418
    5. '    ' → logprob: -6.389643669128418
    6. '```' → logprob: -6.514643669128418
    7. ')' → logprob: -6.639643669128418
    8. '    
' → logprob: -7.139643669128418
    9. 'print' → logprob: -7.514643669128418
    10. ':' → logprob: -7.889643669128418

Token 21: '_cube' (ID: 171900)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.1694313883781433
    2. '<|end|>' → logprob: -2.919431447982788
    3. '%' → logprob: -3.544431447982788
    4. ')' → logprob: -4.044431209564209
    5. '*' → logprob: -4.169431209564209
    6. '```' → logprob: -4.669431209564209
    7. '   ' → logprob: -4.794431209564209
    8. '#' → logprob: -5.294431209564209
    9. ':' → logprob: -5.544431209564209
    10. ' ' → logprob: -5.919431209564209

Token 22: ' =' (ID: 314)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.2055893838405609
    2. ' =' → logprob: -2.0805892944335938
    3. '=' → logprob: -3.4555892944335938
    4. ' **' → logprob: -3.5805892944335938
    5. ' ' → logprob: -7.330589294433594
    6. '   ' → logprob: -8.205589294433594
    7. '_' → logprob: -8.580589294433594
    8. '*' → logprob: -9.330589294433594
    9. '  ' → logprob: -9.455589294433594
    10. ')' → logprob: -9.830589294433594

Token 23: ' z' (ID: 579)
  Prédit: ' z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' z' → logprob: -0.08898243308067322
    2. 'z' → logprob: -2.463982343673706
    3. ' ' → logprob: -11.088982582092285
    4. '   ' → logprob: -11.213982582092285
    5. 'pow' → logprob: -12.588982582092285
    6. ' (' → logprob: -13.463982582092285
    7. '	z' → logprob: -13.463982582092285
    8. ' ' → logprob: -13.713982582092285
    9. '  ' → logprob: -13.838982582092285
    10. '```' → logprob: -13.838982582092285

Token 24: ' **' (ID: 6240)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.38733527064323425
    2. ' **' → logprob: -1.1373353004455566
    3. ' *' → logprob: -8.262334823608398
    4. '*' → logprob: -8.637334823608398
    5. '*z' → logprob: -11.512334823608398
    6. '```' → logprob: -12.387334823608398
    7. '***' → logprob: -12.512334823608398
    8. ' ***' → logprob: -12.762334823608398
    9. ' ' → logprob: -12.887334823608398
    10. '3' → logprob: -13.887334823608398

Token 25: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0011709370883181691
    2. ' ' → logprob: -6.751171112060547
    3. '  ' → logprob: -15.001171112060547
    4. '```' → logprob: -15.501171112060547
    5. '   ' → logprob: -15.876171112060547
    6. '2' → logprob: -18.001171112060547
    7. '6' → logprob: -18.001171112060547
    8. '`' → logprob: -18.063671112060547
    9. ')' → logprob: -18.063671112060547
    10. '³' → logprob: -18.126171112060547

Token 26: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -3.225939872208983e-05
    2. ' ' → logprob: -10.375032424926758
    3. '```' → logprob: -15.000032424926758
    4. '  ' → logprob: -15.125032424926758
    5. '   ' → logprob: -15.875032424926758
    6. '6' → logprob: -16.812532424926758
    7. '2' → logprob: -17.125032424926758
    8. '³' → logprob: -17.312532424926758
    9. '`' → logprob: -17.375032424926758
    10. '(' → logprob: -17.625032424926758

Token 27: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11639050394296646
    2. ')' → logprob: -2.9913904666900635
    3. '+' → logprob: -3.3663904666900635
    4. '<|end|>' → logprob: -4.366390705108643
    5. 'print' → logprob: -5.866390705108643
    6. ' ' → logprob: -6.491390705108643
    7. '    
' → logprob: -6.741390705108643
    8. '#' → logprob: -6.866390705108643
    9. ',' → logprob: -7.116390705108643
    10. '*' → logprob: -7.116390705108643

Token 28: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011493740603327751
    2. '<|end|>' → logprob: -5.136493682861328
    3. '    
' → logprob: -5.761493682861328
    4. ')' → logprob: -6.886493682861328
    5. '  
' → logprob: -8.511493682861328
    6. '
' → logprob: -8.761493682861328
    7. ' ' → logprob: -8.761493682861328
    8. '   
' → logprob: -9.011493682861328
    9. '+' → logprob: -9.136493682861328
    10. '  ' → logprob: -9.261493682861328

Token 29: ' max' (ID: 2999)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003875731024891138
    2. 'print' → logprob: -5.628875732421875
    3. '    
' → logprob: -9.753875732421875
    4. '<|end|>' → logprob: -9.753875732421875
    5. ')' → logprob: -9.878875732421875
    6. ' print' → logprob: -10.253875732421875
    7. '```' → logprob: -11.128875732421875
    8. '
' → logprob: -11.628875732421875
    9. ' ' → logprob: -12.128875732421875
    10. '    ' → logprob: -12.503875732421875

Token 30: '_sum' (ID: 29859)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.039657387882471085
    2. '_val' → logprob: -3.6646573543548584
    3. '_value' → logprob: -5.0396575927734375
    4. '_len' → logprob: -6.2896575927734375
    5. '_length' → logprob: -6.5396575927734375
    6. '_sum' → logprob: -7.4146575927734375
    7. '_num' → logprob: -7.4146575927734375
    8. '_factor' → logprob: -7.9146575927734375
    9. '_digit' → logprob: -8.289657592773438
    10. '_l' → logprob: -8.414657592773438

Token 31: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10151585191488266
    2. '=' → logprob: -2.976515769958496
    3. '_' → logprob: -3.101515769958496
    4. ',' → logprob: -9.351515769958496
    5. '_sum' → logprob: -9.351515769958496
    6. '   ' → logprob: -9.726515769958496
    7. ' +=' → logprob: -9.976515769958496
    8. ' ' → logprob: -10.101515769958496
    9. '(' → logprob: -10.101515769958496
    10. '_val' → logprob: -10.476515769958496

Token 32: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5167697668075562
    2. '0' → logprob: -1.1417697668075562
    3. ' -' → logprob: -3.5167698860168457
    4. ' z' → logprob: -3.7667698860168457
    5. '-' → logprob: -4.391769886016846
    6. ' float' → logprob: -5.141769886016846
    7. ' max' → logprob: -5.891769886016846
    8. 'z' → logprob: -6.266769886016846
    9. ' sum' → logprob: -6.266769886016846
    10. '1' → logprob: -6.391769886016846

Token 33: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.16344822943210602
    2. '-' → logprob: -2.4134483337402344
    3. 'z' → logprob: -3.0384483337402344
    4. 'float' → logprob: -5.288448333740234
    5. '(z' → logprob: -6.538448333740234
    6. '(' → logprob: -6.663448333740234
    7. 'int' → logprob: -6.788448333740234
    8. '6' → logprob: -7.413448333740234
    9. ' ' → logprob: -7.663448333740234
    10. '1' → logprob: -7.663448333740234

Token 34: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 35: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1545649617910385
    2. '<|end|>' → logprob: -2.52956485748291
    3. ' ' → logprob: -3.02956485748291
    4. '  ' → logprob: -6.02956485748291
    5. ' 
' → logprob: -6.15456485748291
    6. '    ' → logprob: -6.15456485748291
    7. '    
' → logprob: -6.15456485748291
    8. ' for' → logprob: -6.27956485748291
    9. '<|end|>' → logprob: -6.90456485748291
    10. 'for' → logprob: -7.02956485748291

Token 36: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7075825929641724
    2. ' ' → logprob: -2.082582473754883
    3. 'for' (adapté à ' for') → logprob: -2.582582473754883
    4. ' 
' → logprob: -2.582582473754883
    5. '
' → logprob: -3.082582473754883
    6. ' for' → logprob: -3.207582473754883
    7. '<|end|>' → logprob: -3.332582473754883
    8. '    
' → logprob: -3.582582473754883
    9. '\n' → logprob: -3.832582473754883
    10. '   
' → logprob: -3.957582473754883

Token 37: ' x' (ID: 1215)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.043717872351408005
    2. ' ' → logprob: -3.293717861175537
    3. 'i' → logprob: -6.668717861175537
    4. ' x' → logprob: -6.668717861175537
    5. ' a' → logprob: -6.793717861175537
    6. ' n' → logprob: -7.043717861175537
    7. ' _' → logprob: -8.293718338012695
    8. '_' → logprob: -8.418718338012695
    9. ' s' → logprob: -8.543718338012695
    10. ' j' → logprob: -9.418718338012695

Token 38: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.011543353088200092
    2. 'in' → logprob: -4.511543273925781
    3. ' ' → logprob: -7.761543273925781
    4. ' i' → logprob: -11.011543273925781
    5. '  ' → logprob: -11.511543273925781
    6. '1' → logprob: -12.261543273925781
    7. 'space' → logprob: -12.386543273925781
    8. ' =' → logprob: -12.636543273925781
    9. '_' → logprob: -12.761543273925781
    10. '0' → logprob: -12.761543273925781

Token 39: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.001415473292581737
    2. 'range' → logprob: -6.626415252685547
    3. ' ' → logprob: -9.501415252685547
    4. '	range' → logprob: -12.376415252685547
    5. ' xrange' → logprob: -12.501415252685547
    6. '  ' → logprob: -12.501415252685547
    7. '(range' → logprob: -14.001415252685547
    8. '   ' → logprob: -14.376415252685547
    9. '[' → logprob: -15.501415252685547
    10. '.range' → logprob: -15.626415252685547

Token 40: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0699763372540474
    2. '(z' → logprob: -2.694976329803467
    3. '(-' → logprob: -11.194976806640625
    4. '(x' → logprob: -11.819976806640625
    5. '(abs' → logprob: -12.569976806640625
    6. ' (' → logprob: -12.694976806640625
    7. '(int' → logprob: -12.944976806640625
    8. '(s' → logprob: -13.194976806640625
    9. '(n' → logprob: -13.444976806640625
    10. 'z' → logprob: -13.569976806640625

Token 41: '1' (ID: 16)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.1498296558856964
    2. '1' → logprob: -2.149829626083374
    3. ' z' → logprob: -4.024829864501953
    4. '(z' → logprob: -6.399829864501953
    5. ' ' → logprob: -6.524829864501953
    6. '0' → logprob: -7.899829864501953
    7. '(' → logprob: -8.149829864501953
    8. '   ' → logprob: -8.399829864501953
    9. '100' → logprob: -8.774829864501953
    10. 'abs' → logprob: -9.149829864501953

Token 42: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02071589045226574
    2. ' ,' → logprob: -3.8957159519195557
    3. ',z' → logprob: -8.895715713500977
    4. '   ' → logprob: -11.020715713500977
    5. '(' → logprob: -11.770715713500977
    6. ' ' → logprob: -13.020715713500977
    7. '1' → logprob: -13.395715713500977
    8. 'z' → logprob: -13.645715713500977
    9. '(z' → logprob: -13.770715713500977
    10. ',int' → logprob: -13.770715713500977

Token 43: ' z' (ID: 579)
  Prédit: ' z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' z' → logprob: -0.062342073768377304
    2. 'z' → logprob: -2.8123421669006348
    3. ' ' → logprob: -8.187341690063477
    4. '   ' → logprob: -10.687341690063477
    5. '    ' → logprob: -11.187341690063477
    6. ' int' → logprob: -11.312341690063477
    7. '100' → logprob: -11.937341690063477
    8. '10' → logprob: -12.062341690063477
    9. '	z' → logprob: -12.437341690063477
    10. '  ' → logprob: -12.562341690063477

Token 44: '):
' (ID: 1883)
  Prédit: ' ):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ):' → logprob: -0.8948382139205933
    2. '):' → logprob: -1.0198382139205933
    3. '+' → logprob: -1.7698382139205933
    4. ' +' → logprob: -2.894838333129883
    5. ' ' → logprob: -6.269838333129883
    6. '):
' → logprob: -7.019838333129883
    7. ' ):
' → logprob: -7.394838333129883
    8. ' )' → logprob: -8.019838333129883
    9. '**' → logprob: -8.394838333129883
    10. ' -' → logprob: -8.769838333129883

Token 45: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.1482255458831787
    2. '       ' → logprob: -1.2732255458831787
    3. '    ' → logprob: -1.3982255458831787
    4. ' ' → logprob: -2.8982255458831787
    5. '   ' → logprob: -2.8982255458831787
    6. '+' → logprob: -3.7732255458831787
    7. ' :' → logprob: -4.773225784301758
    8. '):' → logprob: -5.398225784301758
    9. '     ' → logprob: -6.273225784301758
    10. ',' → logprob: -6.773225784301758

Token 46: ' for' (ID: 395)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.11114673316478729
    2. ' for' → logprob: -2.4861466884613037
    3. '<|end|>' → logprob: -4.736146926879883
    4. '    ' → logprob: -4.986146926879883
    5. 'for' (adapté à ' for') → logprob: -6.111146926879883
    6. '   ' → logprob: -6.861146926879883
    7. '+' → logprob: -6.861146926879883
    8. ' max' → logprob: -7.361146926879883
    9. '  ' → logprob: -8.361146926879883
    10. ' 
' → logprob: -8.611146926879883

Token 47: ' y' (ID: 342)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.5836183428764343
    2. ' y' → logprob: -1.458618402481079
    3. 'x' → logprob: -1.833618402481079
    4. ' z' → logprob: -3.958618402481079
    5. 'y' → logprob: -3.958618402481079
    6. 'z' → logprob: -5.5836181640625
    7. ' ' → logprob: -5.9586181640625
    8. ' range' → logprob: -6.2086181640625
    9. '1' → logprob: -6.3336181640625
    10. 'range' → logprob: -7.2086181640625

Token 48: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.010040323249995708
    2. 'in' → logprob: -4.635040283203125
    3. ' ' → logprob: -8.385040283203125
    4. '(' → logprob: -10.885040283203125
    5. ')' → logprob: -11.760040283203125
    6. '<|end|>' → logprob: -11.760040283203125
    7. '    ' → logprob: -12.635040283203125
    8. '+' → logprob: -12.885040283203125
    9. '=' → logprob: -13.010040283203125
    10. '   ' → logprob: -13.135040283203125

Token 49: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.08877106755971909
    2. 'range' → logprob: -2.588771104812622
    3. '(' → logprob: -5.588770866394043
    4. '(range' → logprob: -5.713770866394043
    5. ' x' → logprob: -6.713770866394043
    6. '(x' → logprob: -7.463770866394043
    7. ' ' → logprob: -7.838770866394043
    8. ' (' → logprob: -8.463770866394043
    9. 'x' → logprob: -8.588770866394043
    10. '1' → logprob: -8.963770866394043

Token 50: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0013736842665821314
    2. ' (' → logprob: -7.001373767852783
    3. '(x' → logprob: -7.751373767852783
    4. '(range' → logprob: -10.751373291015625
    5. ')' → logprob: -12.626373291015625
    6. '(s' → logprob: -13.376373291015625
    7. '(
' → logprob: -13.501373291015625
    8. '<|end|>' → logprob: -13.626373291015625
    9. '(space' → logprob: -14.251373291015625
    10. '((' → logprob: -14.376373291015625

Token 51: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2549816071987152
    2. 'x' → logprob: -1.5049816370010376
    3. ' x' → logprob: -6.629981517791748
    4. ' ' → logprob: -6.879981517791748
    5. '   ' → logprob: -7.879981517791748
    6. 'z' → logprob: -8.379981994628906
    7. '(x' → logprob: -10.629981994628906
    8. '0' → logprob: -10.879981994628906
    9. '(' → logprob: -12.129981994628906
    10. '    ' → logprob: -12.129981994628906

Token 52: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0015575934667140245
    2. ' ,' → logprob: -6.50155782699585
    3. ',x' → logprob: -10.626557350158691
    4. '   ' → logprob: -11.126557350158691
    5. ',z' → logprob: -12.126557350158691
    6. ',y' → logprob: -12.251557350158691
    7. '(' → logprob: -13.251557350158691
    8. '+,' → logprob: -14.376557350158691
    9. '       ' → logprob: -14.501557350158691
    10. '‌,' → logprob: -14.751557350158691

Token 53: ' z' (ID: 579)
  Prédit: ' z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' z' → logprob: -0.6968293786048889
    2. 'z' → logprob: -0.8218293786048889
    3. ' x' → logprob: -3.446829319000244
    4. 'x' → logprob: -3.571829319000244
    5. ' ' → logprob: -6.821829319000244
    6. '   ' → logprob: -6.946829319000244
    7. '    ' → logprob: -9.071829795837402
    8. '  ' → logprob: -10.071829795837402
    9. '	z' → logprob: -11.946829795837402
    10. '       ' → logprob: -12.071829795837402

Token 54: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.02190970443189144
    2. '):
' → logprob: -4.396909713745117
    3. '+' → logprob: -4.896909713745117
    4. ')' → logprob: -6.896909713745117
    5. ' ):' → logprob: -8.021909713745117
    6. ' +' → logprob: -8.271909713745117
    7. '       ' → logprob: -9.021909713745117
    8. '   ' → logprob: -9.896909713745117
    9. '-' → logprob: -10.021909713745117
    10. ' -' → logprob: -11.021909713745117

Token 55: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4878305196762085
    2. ':' → logprob: -0.9878305196762085
    3. ' :' → logprob: -5.362830638885498
    4. '       ' → logprob: -5.987830638885498
    5. '            ' → logprob: -6.112830638885498
    6. '<|end|>' → logprob: -6.737830638885498
    7. '        ' → logprob: -7.362830638885498
    8. '):' → logprob: -7.987830638885498
    9. ':
' → logprob: -8.11283016204834
    10. '               ' → logprob: -8.11283016204834

Token 56: ' s' (ID: 265)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.47907814383506775
    2. ' :' → logprob: -1.8540781736373901
    3. ':' → logprob: -2.1040780544281006
    4. '            ' → logprob: -3.4790780544281006
    5. '               ' → logprob: -3.8540780544281006
    6. '           ' → logprob: -4.10407829284668
    7. '+' → logprob: -4.60407829284668
    8. ' if' → logprob: -5.10407829284668
    9. ' +' → logprob: -6.10407829284668
    10. '                ' → logprob: -6.35407829284668

Token 57: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.432320237159729
    2. ' =' → logprob: -1.057320237159729
    3. 'um' → logprob: -5.8073201179504395
    4. ' ' → logprob: -7.6823201179504395
    5. '_' → logprob: -10.182320594787598
    6. '+=' → logprob: -11.182320594787598
    7. 'u' → logprob: -11.307320594787598
    8. '=x' → logprob: -11.307320594787598
    9. '+' → logprob: -11.557320594787598
    10. ' ==' → logprob: -11.932320594787598

Token 58: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.20166699588298798
    2. 'x' → logprob: -1.7016669511795044
    3. ' (' → logprob: -8.951666831970215
    4. '(x' → logprob: -9.451666831970215
    5. ' ' → logprob: -10.451666831970215
    6. '(' → logprob: -11.576666831970215
    7. '	x' → logprob: -13.451666831970215
    8. ' y' → logprob: -13.451666831970215
    9. ' ' → logprob: -15.076666831970215
    10. '1' → logprob: -15.201666831970215

Token 59: '**' (ID: 410)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.8963877558708191
    2. '**' → logprob: -1.1463878154754639
    3. ' **' → logprob: -1.8963878154754639
    4. '3' → logprob: -2.896387815475464
    5. '+' → logprob: -3.396387815475464
    6. ' ' → logprob: -3.521387815475464
    7. '³' → logprob: -5.896387577056885
    8. '*' → logprob: -6.896387577056885
    9. ' *' → logprob: -7.521387577056885
    10. '```' → logprob: -8.271388053894043

Token 60: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0010226861340925097
    2. '2' → logprob: -7.126022815704346
    3. ' ' → logprob: -8.751022338867188
    4. '4' → logprob: -11.126022338867188
    5. '```' → logprob: -11.751022338867188
    6. '6' → logprob: -11.876022338867188
    7. '   ' → logprob: -11.938522338867188
    8. '1' → logprob: -12.001022338867188
    9. '5' → logprob: -12.126022338867188
    10. '+' → logprob: -12.938522338867188

Token 61: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.06996788829565048
    2. '+' → logprob: -2.6949679851531982
    3. '+y' → logprob: -10.819968223571777
    4. '<|end|>' → logprob: -11.694968223571777
    5. ' ' → logprob: -14.194968223571777
    6. '+x' → logprob: -14.944968223571777
    7. ')' → logprob: -15.069968223571777
    8. ')+' → logprob: -15.319968223571777
    9. ' +
' → logprob: -15.444968223571777
    10. ' ' → logprob: -15.444968223571777

Token 62: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.4740805923938751
    2. 'y' → logprob: -0.9740805625915527
    3. ' ' → logprob: -13.224081039428711
    4. '	y' → logprob: -14.224081039428711
    5. '<|end|>' → logprob: -14.849081039428711
    6. '   ' → logprob: -15.349081039428711
    7. '    ' → logprob: -15.599081039428711
    8. '  ' → logprob: -16.72408103942871
    9. '           ' → logprob: -17.09908103942871
    10. '(y' → logprob: -17.09908103942871

Token 63: '**' (ID: 410)
  Prédit: '**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.00031520487391389906
    2. '3' → logprob: -8.62531566619873
    3. ' **' → logprob: -9.87531566619873
    4. '³' → logprob: -10.12531566619873
    5. '```' → logprob: -10.87531566619873
    6. '<|end|>' → logprob: -11.12531566619873
    7. ' ' → logprob: -12.62531566619873
    8. '*' → logprob: -13.25031566619873
    9. '^' → logprob: -13.37531566619873
    10. ')**' → logprob: -14.25031566619873

Token 64: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -6.153795766294934e-06
    2. ' ' → logprob: -12.125005722045898
    3. '```' → logprob: -15.750005722045898
    4. '³' → logprob: -16.1250057220459
    5. '۳' → logprob: -16.3750057220459
    6. '  ' → logprob: -16.5000057220459
    7. '   ' → logprob: -16.8750057220459
    8. '३' → logprob: -17.6875057220459
    9. '<|end|>' → logprob: -17.7500057220459
    10. '৩' → logprob: -17.8125057220459

Token 65: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 66: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 67: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.183375284075737
    2. ' if' → logprob: -2.308375358581543
    3. ' ' → logprob: -3.058375358581543
    4. 'if' (adapté à ' if') → logprob: -5.683375358581543
    5. '            ' → logprob: -5.808375358581543
    6. '<|end|>' → logprob: -5.808375358581543
    7. '=' → logprob: -5.933375358581543
    8. '   ' → logprob: -6.433375358581543
    9. '               ' → logprob: -6.683375358581543
    10. '          ' → logprob: -6.808375358581543

Token 68: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.0052414643578231335
    2. 's' → logprob: -5.255241394042969
    3. ' ' → logprob: -12.130241394042969
    4. ' ' → logprob: -13.380241394042969
    5. '<|end|>' → logprob: -15.505241394042969
    6. ' (' → logprob: -16.00524139404297
    7. '	s' → logprob: -16.25524139404297
    8. '            ' → logprob: -16.25524139404297
    9. '```' → logprob: -16.88024139404297
    10. '(s' → logprob: -16.88024139404297

Token 69: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.13849970698356628
    2. ' ==' → logprob: -2.1384997367858887
    3. '<=' → logprob: -5.638499736785889
    4. '==' → logprob: -5.763499736785889
    5. ' >' → logprob: -6.138499736785889
    6. ' <' → logprob: -6.513499736785889
    7. ' ' → logprob: -7.513499736785889
    8. '<|end|>' → logprob: -7.763499736785889
    9. ' >=' → logprob: -9.88849925994873
    10. '>' → logprob: -9.88849925994873

Token 70: ' z' (ID: 579)
  Prédit: ' z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' z' → logprob: -0.02328147180378437
    2. 'z' → logprob: -3.7732815742492676
    3. ' ' → logprob: -10.77328109741211
    4. '	z' → logprob: -11.52328109741211
    5. '    ' → logprob: -13.27328109741211
    6. ' ' → logprob: -14.27328109741211
    7. '<|end|>' → logprob: -14.27328109741211
    8. '   ' → logprob: -14.39828109741211
    9. ' max' → logprob: -14.96078109741211
    10. '  ' → logprob: -15.02328109741211

Token 71: '_cube' (ID: 171900)
  Prédit: '_cube'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cube' → logprob: -0.0027349782176315784
    2. '_' → logprob: -6.002735137939453
    3. '_c' → logprob: -9.377735137939453
    4. '**' → logprob: -9.502735137939453
    5. ':' → logprob: -9.627735137939453
    6. '_:' → logprob: -11.252735137939453
    7. ' _' → logprob: -12.002735137939453
    8. ' ' → logprob: -13.502735137939453
    9. ' and' → logprob: -13.502735137939453
    10. '__' → logprob: -13.877735137939453

Token 72: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.013276464305818081
    2. 'and' → logprob: -4.38827657699585
    3. ':' → logprob: -7.26327657699585
    4. ' ' → logprob: -10.013276100158691
    5. '           ' → logprob: -11.638276100158691
    6. ':
' → logprob: -12.763276100158691
    7. '   ' → logprob: -13.513276100158691
    8. '            ' → logprob: -13.513276100158691
    9. '	and' → logprob: -13.638276100158691
    10. ' :' → logprob: -13.763276100158691

Token 73: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.0010877089807763696
    2. 's' → logprob: -6.876087665557861
    3. ' ' → logprob: -11.00108814239502
    4. ' (' → logprob: -11.25108814239502
    5. ' ' → logprob: -12.00108814239502
    6. '            ' → logprob: -12.12608814239502
    7. ' max' → logprob: -12.87608814239502
    8. ' abs' → logprob: -12.87608814239502
    9. '           ' → logprob: -14.18858814239502
    10. ' x' → logprob: -14.31358814239502

Token 74: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.0403025858104229
    2. '>' → logprob: -3.2903025150299072
    3. ' ' → logprob: -6.165302753448486
    4. '   ' → logprob: -10.290302276611328
    5. '  ' → logprob: -10.915302276611328
    6. ' ==' → logprob: -11.040302276611328
    7. '<|end|>' → logprob: -11.040302276611328
    8. '    ' → logprob: -11.165302276611328
    9. ' >
' → logprob: -11.665302276611328
    10. ' ' → logprob: -12.290302276611328

Token 75: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.00862414762377739
    2. 'max' → logprob: -4.758624076843262
    3. '	max' → logprob: -12.883624076843262
    4. ' ' → logprob: -12.883624076843262
    5. '=max' → logprob: -13.133624076843262
    6. '(max' → logprob: -14.258624076843262
    7. '<|end|>' → logprob: -14.633624076843262
    8. '_max' → logprob: -15.258624076843262
    9. '[max' → logprob: -15.383624076843262
    10. '   ' → logprob: -15.633624076843262

Token 76: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.0002882721892092377
    2. '_' → logprob: -8.375288009643555
    3. '_s' → logprob: -10.500288009643555
    4. '_max' → logprob: -10.625288009643555
    5. ' _' → logprob: -12.250288009643555
    6. ')_' → logprob: -15.625288009643555
    7. '__' → logprob: -15.750288009643555
    8. '```' → logprob: -16.125288009643555
    9. '._' → logprob: -16.875288009643555
    10. '_val' → logprob: -17.000288009643555

Token 77: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.000835120037663728
    2. ':
' → logprob: -7.250834941864014
    3. ' :' → logprob: -9.375835418701172
    4. ' and' → logprob: -11.375835418701172
    5. '):' → logprob: -11.500835418701172
    6. '           ' → logprob: -11.625835418701172
    7. '       ' → logprob: -13.250835418701172
    8. '=' → logprob: -13.250835418701172
    9. ',' → logprob: -13.750835418701172
    10. ':

' → logprob: -14.125835418701172

Token 78: '               ' (ID: 506)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7377150058746338
    2. '               ' → logprob: -0.8627150058746338
    3. '           ' → logprob: -2.487715005874634
    4. '<|end|>' → logprob: -5.237714767456055
    5. ' max' → logprob: -6.612714767456055
    6. '):' → logprob: -6.612714767456055
    7. ':
' → logprob: -6.987714767456055
    8. '            ' → logprob: -7.112714767456055
    9. '                       ' → logprob: -7.487714767456055
    10. ',' → logprob: -7.487714767456055

Token 79: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.28125715255737305
    2. '               ' → logprob: -2.281257152557373
    3. '                   ' → logprob: -2.656257152557373
    4. '                ' → logprob: -3.781257152557373
    5. ' ' → logprob: -4.031257152557373
    6. ' 
' → logprob: -4.406257152557373
    7. 'max' (adapté à ' max') → logprob: -4.906257152557373
    8. '(max' → logprob: -4.906257152557373
    9. '           ' → logprob: -7.281257152557373
    10. '<|end|>' → logprob: -7.406257152557373

Token 80: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -9.615255839889869e-05
    2. '_s' → logprob: -9.375096321105957
    3. '_' → logprob: -12.875096321105957
    4. ' _' → logprob: -13.125096321105957
    5. '_max' → logprob: -13.125096321105957
    6. '```' → logprob: -13.125096321105957
    7. 'sum' → logprob: -14.125096321105957
    8. '=_' → logprob: -15.375096321105957
    9. ')_' → logprob: -15.750096321105957
    10. '_answer' → logprob: -15.875096321105957

Token 81: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04858975484967232
    2. '=' → logprob: -3.0485897064208984
    3. '=s' → logprob: -13.298589706420898
    4. ' ' → logprob: -15.548589706420898
    5. 's' → logprob: -15.673589706420898
    6. ' s' → logprob: -16.6735897064209
    7. '＝' → logprob: -16.6735897064209
    8. ' =
' → logprob: -17.0485897064209
    9. '<|end|>' → logprob: -17.6735897064209
    10. ',' → logprob: -17.9235897064209

Token 82: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.47407785058021545
    2. ' s' → logprob: -0.9740778207778931
    3. ' ' → logprob: -15.474078178405762
    4. '	s' → logprob: -15.599078178405762
    5. '           ' → logprob: -15.974078178405762
    6. '               ' → logprob: -16.974077224731445
    7. '<s' → logprob: -16.974077224731445
    8. '_s' → logprob: -17.099077224731445
    9. '(s' → logprob: -17.349077224731445
    10. '                   ' → logprob: -17.349077224731445

Token 83: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 84: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.169860377907753
    2. '<|end|>' → logprob: -3.169860363006592
    3. 'print' → logprob: -3.419860363006592
    4. '    
' → logprob: -4.044860363006592
    5. '               ' → logprob: -4.044860363006592
    6. '
' → logprob: -4.794860363006592
    7. '           ' → logprob: -4.794860363006592
    8. '\n' → logprob: -5.044860363006592
    9. ')' → logprob: -5.169860363006592
    10. ',' → logprob: -5.919860363006592

Token 85: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0674033910036087
    2. '   ' → logprob: -2.9424033164978027
    3. '
' → logprob: -4.692403316497803
    4. ' print' → logprob: -6.317403316497803
    5. ')' → logprob: -7.317403316497803
    6. '<|end|>' → logprob: -7.942403316497803
    7. '    
' → logprob: -8.817403793334961
    8. '```' → logprob: -9.567403793334961
    9. '\n' → logprob: -9.692403793334961
    10. '  
' → logprob: -10.692403793334961

Token 86: '(z' (ID: 27674)
  Prédit: '(max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(max' → logprob: -0.576879620552063
    2. '(' → logprob: -0.826879620552063
    3. '(f' → logprob: -7.451879501342773
    4. '('' → logprob: -8.451879501342773
    5. '()' → logprob: -9.951879501342773
    6. '("("' → logprob: -10.326879501342773
    7. ' (' → logprob: -10.451879501342773
    8. '("' → logprob: -10.701879501342773
    9. '((' → logprob: -12.576879501342773
    10. '(`' → logprob: -12.951879501342773

Token 87: '_cube' (ID: 171900)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.009853832423686981
    2. ' )' → logprob: -4.759853839874268
    3. ',' → logprob: -7.009853839874268
    4. '))' → logprob: -8.88485336303711
    5. ',)' → logprob: -10.38485336303711
    6. '**' → logprob: -10.50985336303711
    7. ' ,' → logprob: -10.88485336303711
    8. '-' → logprob: -11.00985336303711
    9. '   ' → logprob: -11.25985336303711
    10. '')' → logprob: -11.50985336303711

Token 88: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.176947600673884e-05
    2. ' )' → logprob: -10.875021934509277
    3. '))' → logprob: -13.750021934509277
    4. ')
' → logprob: -14.000021934509277
    5. '   ' → logprob: -15.375021934509277
    6. ')}' → logprob: -16.50002098083496
    7. ')`' → logprob: -16.50002098083496
    8. ',' → logprob: -16.62502098083496
    9. '**' → logprob: -16.75002098083496
    10. '*' → logprob: -17.12502098083496

Token 89: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.03365030884742737
    2. 'max' → logprob: -3.4086503982543945
    3. '(max' → logprob: -13.408650398254395
    4. ' ' → logprob: -13.783650398254395
    5. '	max' → logprob: -14.533650398254395
    6. ')' → logprob: -14.658650398254395
    7. '[max' → logprob: -15.283650398254395
    8. '=max' → logprob: -15.283650398254395
    9. ',max' → logprob: -15.533650398254395
    10. '_max' → logprob: -15.658650398254395

Token 90: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.0002712297427933663
    2. '_' → logprob: -8.37527084350586
    3. '_s' → logprob: -10.25027084350586
    4. ' _' → logprob: -13.25027084350586
    5. '_max' → logprob: -13.62527084350586
    6. ')_' → logprob: -14.25027084350586
    7. 'sum' → logprob: -14.37527084350586
    8. '__' → logprob: -14.62527084350586
    9. ''_' → logprob: -16.37527084350586
    10. '```' → logprob: -16.62527084350586

Token 91: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.282920129597187e-05
    2. ' )' → logprob: -11.375012397766113
    3. ')
' → logprob: -14.000012397766113
    4. '))' → logprob: -15.250012397766113
    5. '```' → logprob: -17.50001335144043
    6. '`)' → logprob: -17.62501335144043
    7. ')`' → logprob: -17.87501335144043
    8. '')' → logprob: -18.00001335144043
    9. '**' → logprob: -18.25001335144043
    10. '}' → logprob: -18.25001335144043


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 89
Tokens correctement prédits (1ère position, stricte): 48
Tokens correctement prédits (1ère position, avec adaptation): 49
Tokens correctement prédits (top 10): 74
Précision stricte (1ère position): 53.93%
Précision adaptée (1ère position): 55.06%
Précision (top 10): 83.15%
================================================================================
