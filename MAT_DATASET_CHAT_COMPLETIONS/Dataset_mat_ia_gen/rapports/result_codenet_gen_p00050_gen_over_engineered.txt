================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:09:38
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
class FruitWordSwapper:
    def __init__(self, swap_map):
        self.swap_map = swap_map
        self._compile_patterns()
    
    def _compile_patterns(self):
        import re
        # Create a regex pattern to match any of the keys as whole words
        pattern_words = map(lambda w: r'\b' + w + r'\b', self.swap_map.keys())
        self.pattern = re.compile('|'.join(pattern_words))
    
    def swap(self, text):
        return self.pattern.sub(self._replacer, text)
    
    def _replacer(self, match):
        word = match.group(0)
        return self.swap_map[word]

class FruitWordSwapFactory:
    @staticmethod
    def create_apple_peach_swapper():
        # Define mapping to swap both ways
        return FruitWordSwapper({
            'apple': 'peach',
            'peach': 'apple'
        })

class FruitWordSwapFacade:
    def __init__(self):
        self.swapper = FruitWordSwapFactory.create_apple_peach_swapper()
    
    def process(self, text):
        return self.swapper.swap(text)

if __name__ == '__main__':
    import sys
    input_text = sys.stdin.readline().rstrip('\n')
    facade = FruitWordSwapFacade()
    output_text = facade.process(input_text)
    print(output_text)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'class' (ID: 1444)
  → Token d'amorce (pas de prédiction)

Token 1: ' Fruit' (ID: 61182)
  → Token d'amorce (pas de prédiction)

Token 2: 'Word' (ID: 12929)
  → Token d'amorce (pas de prédiction)

Token 3: 'Sw' (ID: 15254)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.42789605259895325
    2. '(' → logprob: -1.1778960227966309
    3. '{' → logprob: -3.302896022796631
    4. 's' → logprob: -6.552896022796631
    5. '.' → logprob: -7.302896022796631
    6. '(:' → logprob: -8.052896499633789
    7. ' {' → logprob: -8.177896499633789
    8. ' :' → logprob: -8.177896499633789
    9. '```' → logprob: -8.677896499633789
    10. '[' → logprob: -9.427896499633789

Token 4: 'apper' (ID: 47156)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3317428231239319
    2. 'ap' → logprob: -1.581742763519287
    3. 'apper' → logprob: -2.956742763519287
    4. 's' → logprob: -4.581742763519287
    5. '{' → logprob: -5.956742763519287
    6. 'z' → logprob: -5.956742763519287
    7. 'apping' → logprob: -6.456742763519287
    8. 'aper' → logprob: -6.581742763519287
    9. '```' → logprob: -6.706742763519287
    10. 'i' → logprob: -6.956742763519287

Token 5: ':
' (ID: 734)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7445032596588135
    2. ':' → logprob: -0.7445032596588135
    3. '{' → logprob: -3.1195032596588135
    4. '.' → logprob: -5.369503021240234
    5. '(:' → logprob: -7.119503021240234
    6. '```' → logprob: -9.119503021240234
    7. '[' → logprob: -9.494503021240234
    8. ' {' → logprob: -9.869503021240234
    9. '():' → logprob: -10.369503021240234
    10. ' :' → logprob: -10.369503021240234

Token 6: '   ' (ID: 271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7656107544898987
    2. ':' → logprob: -0.7656107544898987
    3. '   ' → logprob: -3.640610694885254
    4. '```' → logprob: -4.015610694885254
    5. ' ' → logprob: -4.640610694885254
    6. '.' → logprob: -5.640610694885254
    7. '\' → logprob: -6.140610694885254
    8. ''' → logprob: -6.265610694885254
    9. ':
' → logprob: -6.265610694885254
    10. ' (' → logprob: -6.515610694885254

Token 7: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8363357186317444
    2. ' ' → logprob: -1.2113356590270996
    3. '(' → logprob: -2.0863356590270996
    4. ' def' → logprob: -3.2113356590270996
    5. '```' → logprob: -3.4613356590270996
    6. ' (' → logprob: -4.4613356590271
    7. '\' → logprob: -4.5863356590271
    8. '_' → logprob: -4.5863356590271
    9. '    ' → logprob: -5.3363356590271
    10. ''' → logprob: -5.3363356590271

Token 8: ' __' (ID: 2516)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.30641525983810425
    2. ' __' → logprob: -1.556415319442749
    3. '__' → logprob: -3.431415319442749
    4. '_' → logprob: -4.30641508102417
    5. '  ' → logprob: -6.18141508102417
    6. ' ' → logprob: -7.05641508102417
    7. ' process' → logprob: -7.93141508102417
    8. ' def' → logprob: -8.056415557861328
    9. ' add' → logprob: -8.181415557861328
    10. ' _' → logprob: -8.181415557861328

Token 9: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -5.157039049663581e-05
    2. ' init' → logprob: -10.000051498413086
    3. '_init' → logprob: -12.125051498413086
    4. 'ini' → logprob: -15.125051498413086
    5. 'i' → logprob: -15.500051498413086
    6. '	init' → logprob: -16.125051498413086
    7. '_' → logprob: -16.875051498413086
    8. '_i' → logprob: -18.500051498413086
    9. 'in' → logprob: -18.750051498413086
    10. 'int' → logprob: -19.000051498413086

Token 10: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.2281099557876587
    2. '__' → logprob: -1.6031099557876587
    3. '(' → logprob: -6.728109836578369
    4. '__(
' → logprob: -6.853109836578369
    5. '(self' → logprob: -8.603110313415527
    6. '__((' → logprob: -9.478110313415527
    7. '_' → logprob: -9.603110313415527
    8. '___' → logprob: -10.353110313415527
    9. '__('' → logprob: -10.353110313415527
    10. '__(*' → logprob: -11.353110313415527

Token 11: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.004686326254159212
    2. ' self' → logprob: -5.37968635559082
    3. ')' → logprob: -10.25468635559082
    4. '(self' → logprob: -11.00468635559082
    5. 'fruit' → logprob: -11.50468635559082
    6. ' )' → logprob: -14.25468635559082
    7. ' fruit' → logprob: -14.50468635559082
    8. '_self' → logprob: -14.62968635559082
    9. 's' → logprob: -15.12968635559082
    10. '[self' → logprob: -15.37968635559082

Token 12: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02713180147111416
    2. 'self' → logprob: -4.277132034301758
    3. ')' → logprob: -5.152132034301758
    4. ' ,' → logprob: -5.277132034301758
    5. ' self' → logprob: -7.402132034301758
    6. '<|end|>' → logprob: -8.027132034301758
    7. ',self' → logprob: -8.527132034301758
    8. '(self' → logprob: -8.527132034301758
    9. '_' → logprob: -9.027132034301758
    10. '):' → logprob: -9.152132034301758

Token 13: ' swap' (ID: 25489)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.21779954433441162
    2. 'self' → logprob: -1.7177995443344116
    3. ' fruit' → logprob: -5.092799663543701
    4. ' fruits' → logprob: -5.342799663543701
    5. ' word' → logprob: -6.967799663543701
    6. ' original' → logprob: -7.092799663543701
    7. 'fruit' → logprob: -7.092799663543701
    8. ' text' → logprob: -7.217799663543701
    9. ' words' → logprob: -7.467799663543701
    10. ' )' → logprob: -7.717799663543701

Token 14: '_map' (ID: 11824)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.039612889289856
    2. '_map' → logprob: -1.289612889289856
    3. 'per' → logprob: -1.914612889289856
    4. 's' → logprob: -2.5396127700805664
    5. ')' → logprob: -3.4146127700805664
    6. '_p' → logprob: -3.7896127700805664
    7. '_space' → logprob: -4.164612770080566
    8. '_mapping' → logprob: -4.164612770080566
    9. '_pairs' → logprob: -4.539612770080566
    10. 'ping' → logprob: -5.039612770080566

Token 15: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.007753437850624323
    2. '=' → logprob: -5.257753372192383
    3. ')' → logprob: -6.507753372192383
    4. ':' → logprob: -7.132753372192383
    5. '):
' → logprob: -9.382753372192383
    6. ' ):' → logprob: -9.757753372192383
    7. '={}' → logprob: -10.507753372192383
    8. ',' → logprob: -11.007753372192383
    9. '{' → logprob: -11.882753372192383
    10. ' ' → logprob: -12.132753372192383

Token 16: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0037066121585667133
    2. '<|end|>' → logprob: -6.378706455230713
    3. '        
' → logprob: -8.253706932067871
    4. '   ' → logprob: -8.253706932067871
    5. '```' → logprob: -8.253706932067871
    6. 'self' → logprob: -8.253706932067871
    7. '(' → logprob: -8.753706932067871
    8. ':' → logprob: -9.003706932067871
    9. '(self' → logprob: -9.378706932067871
    10. '        ' → logprob: -9.503706932067871

Token 17: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.40859147906303406
    2. '       ' → logprob: -1.1585915088653564
    3. ' self' → logprob: -4.158591270446777
    4. '```' → logprob: -5.783591270446777
    5. '<|end|>' → logprob: -7.283591270446777
    6. '           ' → logprob: -7.908591270446777
    7. '   ' → logprob: -8.283591270446777
    8. ' ' → logprob: -8.408591270446777
    9. ' ' → logprob: -8.408591270446777
    10. '\' → logprob: -8.908591270446777

Token 18: '.swap' (ID: 111356)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.11899913847446442
    2. '.swap' → logprob: -2.2439992427825928
    3. ' .' → logprob: -5.993999004364014
    4. '.s' → logprob: -6.368999004364014
    5. '.sw' → logprob: -6.618999004364014
    6. '   ' → logprob: -9.368999481201172
    7. '.f' → logprob: -9.743999481201172
    8. '.token' → logprob: -9.993999481201172
    9. '._' → logprob: -10.243999481201172
    10. '.next' → logprob: -10.493999481201172

Token 19: '_map' (ID: 11824)
  Prédit: '_map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_map' → logprob: -4.370294846012257e-05
    2. '_' → logprob: -10.500043869018555
    3. '_mapping' → logprob: -12.000043869018555
    4. 's' → logprob: -12.250043869018555
    5. ' _' → logprob: -12.875043869018555
    6. 'Map' → logprob: -15.000043869018555
    7. '_Map' → logprob: -15.000043869018555
    8. 'map' → logprob: -15.000043869018555
    9. '_maps' → logprob: -15.125043869018555
    10. '_m' → logprob: -15.875043869018555

Token 20: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2824224531650543
    2. '=' → logprob: -1.407422423362732
    3. '[' → logprob: -6.7824225425720215
    4. '   ' → logprob: -9.782422065734863
    5. '.' → logprob: -10.782422065734863
    6. ' ' → logprob: -11.407422065734863
    7. '  ' → logprob: -11.657422065734863
    8. '<|end|>' → logprob: -11.782422065734863
    9. '.setdefault' → logprob: -12.157422065734863
    10. ',' → logprob: -12.282422065734863

Token 21: ' swap' (ID: 25489)
  Prédit: ' swap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' swap' → logprob: -0.07890179008245468
    2. 'swap' → logprob: -2.578901767730713
    3. '	swap' → logprob: -11.703902244567871
    4. '.swap' → logprob: -13.453902244567871
    5. '{}' → logprob: -13.953902244567871
    6. ' {}' → logprob: -14.578902244567871
    7. ' ' → logprob: -14.703902244567871
    8. '_swap' → logprob: -15.703902244567871
    9. 'sw' → logprob: -16.828901290893555
    10. ' ' → logprob: -17.078901290893555

Token 22: '_map' (ID: 11824)
  Prédit: 'ap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ap' → logprob: -0.006651191506534815
    2. 'a' → logprob: -5.381651401519775
    3. '_map' → logprob: -6.256651401519775
    4. '_ap' → logprob: -9.381650924682617
    5. '_' → logprob: -11.631650924682617
    6. 'ап' → logprob: -11.881650924682617
    7. '_a' → logprob: -12.631650924682617
    8. 'app' → logprob: -13.881650924682617
    9. '   ' → logprob: -14.006650924682617
    10. '\' → logprob: -14.131650924682617

Token 23: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.529096245765686
    2. '\n' → logprob: -2.0290961265563965
    3. '   ' → logprob: -2.1540961265563965
    4. '```' → logprob: -3.1540961265563965
    5. '\' → logprob: -3.2790961265563965
    6. '    
' → logprob: -3.2790961265563965
    7. '  
' → logprob: -3.7790961265563965
    8. '' → logprob: -5.9040961265563965
    9. ' 
' → logprob: -5.9040961265563965
    10. ' ' → logprob: -5.9040961265563965

Token 24: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17805759608745575
    2. '\n' → logprob: -3.0530576705932617
    3. '    
' → logprob: -3.4280576705932617
    4. '
' → logprob: -3.6780576705932617
    5. '```' → logprob: -3.6780576705932617
    6. '\' → logprob: -4.053057670593262
    7. '<|end|>' → logprob: -6.303057670593262
    8. '  
' → logprob: -6.428057670593262
    9. '[' → logprob: -6.428057670593262
    10. '' → logprob: -6.553057670593262

Token 25: ' self' (ID: 1051)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10953684151172638
    2. '    
' → logprob: -3.23453688621521
    3. '
' → logprob: -3.35953688621521
    4. '\n' → logprob: -4.484536647796631
    5. '```' → logprob: -4.859536647796631
    6. '\' → logprob: -5.859536647796631
    7. '       ' → logprob: -6.609536647796631
    8. '        
' → logprob: -6.984536647796631
    9. '  
' → logprob: -7.234536647796631
    10. ' ' → logprob: -7.359536647796631

Token 26: '._' (ID: 2697)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.10772871971130371
    2. '.swap' → logprob: -3.1077287197113037
    3. '.reverse' → logprob: -4.232728958129883
    4. '.words' → logprob: -4.357728958129883
    5. '._' → logprob: -4.482728958129883
    6. '.current' → logprob: -5.482728958129883
    7. '.word' → logprob: -6.482728958129883
    8. '.original' → logprob: -6.607728958129883
    9. '.tokens' → logprob: -6.607728958129883
    10. '.history' → logprob: -6.982728958129883

Token 27: 'compile' (ID: 42925)
  Prédit: 'cache'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cache' → logprob: -0.661166787147522
    2. 'sw' → logprob: -2.1611666679382324
    3. 'fruit' → logprob: -2.4111666679382324
    4. 'swap' → logprob: -2.5361666679382324
    5. 'word' → logprob: -2.6611666679382324
    6. 'words' → logprob: -3.0361666679382324
    7. 'compiled' → logprob: -4.786166667938232
    8. 'visited' → logprob: -5.161166667938232
    9. 're' → logprob: -5.286166667938232
    10. 'fr' → logprob: -5.286166667938232

Token 28: '_patterns' (ID: 161400)
  Prédit: '_pattern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pattern' → logprob: -0.6929476261138916
    2. '_regex' → logprob: -1.0679476261138916
    3. '_map' → logprob: -2.4429476261138916
    4. '_patterns' → logprob: -3.9429476261138916
    5. '_word' → logprob: -4.3179473876953125
    6. '_' → logprob: -4.4429473876953125
    7. 'er' → logprob: -5.3179473876953125
    8. '_swap' → logprob: -5.3179473876953125
    9. '_words' → logprob: -6.0679473876953125
    10. '_re' → logprob: -6.3179473876953125

Token 29: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00875037256628275
    2. '(' → logprob: -4.8837504386901855
    3. '_' → logprob: -7.5087504386901855
    4. '<|end|>' → logprob: -8.008749961853027
    5. ' ()' → logprob: -9.133749961853027
    6. ')' → logprob: -10.508749961853027
    7. '```' → logprob: -11.008749961853027
    8. '(
' → logprob: -11.133749961853027
    9. '()
' → logprob: -11.508749961853027
    10. '()

' → logprob: -11.633749961853027

Token 30: '    
' (ID: 1944)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2532806694507599
    2. '<|end|>' → logprob: -2.6282806396484375
    3. '   ' → logprob: -2.7532806396484375
    4. '\n' → logprob: -3.3782806396484375
    5. '    
' → logprob: -4.1282806396484375
    6. '\' → logprob: -4.2532806396484375
    7. '```' → logprob: -5.1282806396484375
    8. ' 
' → logprob: -5.6282806396484375
    9. '  
' → logprob: -6.1282806396484375
    10. 'newline' → logprob: -6.2532806396484375

Token 31: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3502306044101715
    2. '   ' → logprob: -1.4752305746078491
    3. ' def' → logprob: -3.8502306938171387
    4. ' ' → logprob: -3.8502306938171387
    5. 'd' → logprob: -3.9752306938171387
    6. '    
' → logprob: -6.100230693817139
    7. '
' → logprob: -6.975230693817139
    8. '    ' → logprob: -7.600230693817139
    9. ' 
' → logprob: -7.600230693817139
    10. '```' → logprob: -8.72523021697998

Token 32: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0001785112835932523
    2. ' def' → logprob: -8.875178337097168
    3. '   ' → logprob: -10.375178337097168
    4. '```' → logprob: -12.500178337097168
    5. 'd' → logprob: -13.125178337097168
    6. '	def' → logprob: -14.750178337097168
    7. ' ' → logprob: -15.000178337097168
    8. '@' → logprob: -15.125178337097168
    9. 'de' → logprob: -15.500178337097168
    10. '    
' → logprob: -16.500179290771484

Token 33: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6247955560684204
    2. ' _' → logprob: -0.8747955560684204
    3. '_swap' → logprob: -3.124795436859131
    4. ' ' → logprob: -6.249795436859131
    5. '_compile' → logprob: -7.124795436859131
    6. '_replace' → logprob: -8.374795913696289
    7. '_find' → logprob: -8.874795913696289
    8. '_apply' → logprob: -9.249795913696289
    9. ' swap' → logprob: -9.249795913696289
    10. '_space' → logprob: -9.749795913696289

Token 34: 'compile' (ID: 42925)
  Prédit: 'compile'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compile' → logprob: -6.869017852295656e-06
    2. 'com' → logprob: -13.000006675720215
    3. 'comp' → logprob: -13.000006675720215
    4. '_compile' → logprob: -14.125006675720215
    5. 'compl' → logprob: -14.625006675720215
    6. 'c' → logprob: -15.000006675720215
    7. ' compile' → logprob: -15.125006675720215
    8. 'co' → logprob: -15.250006675720215
    9. 'compiled' → logprob: -16.37500762939453
    10. '.compile' → logprob: -16.50000762939453

Token 35: '_patterns' (ID: 161400)
  Prédit: '_patterns'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_patterns' → logprob: -0.0005015624337829649
    2. '_pattern' → logprob: -7.75050163269043
    3. '_pat' → logprob: -10.25050163269043
    4. '_' → logprob: -10.62550163269043
    5. '_p' → logprob: -11.62550163269043
    6. '_regex' → logprob: -14.50050163269043
    7. ' _' → logprob: -15.12550163269043
    8. '_PAT' → logprob: -15.62550163269043
    9. 'patterns' → logprob: -16.00050163269043
    10. '```' → logprob: -16.50050163269043

Token 36: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.05686444044113159
    2. '(' → logprob: -2.9318645000457764
    3. ' (' → logprob: -6.431864261627197
    4. 'self' → logprob: -8.681864738464355
    5. '(s' → logprob: -8.681864738464355
    6. '   ' → logprob: -11.931864738464355
    7. ' ' → logprob: -12.431864738464355
    8. '(
' → logprob: -12.681864738464355
    9. ' self' → logprob: -12.931864738464355
    10. '<|end|>' → logprob: -13.056864738464355

Token 37: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0017970389453694224
    2. ',' → logprob: -7.001797199249268
    3. 'self' → logprob: -7.376797199249268
    4. ')' → logprob: -9.00179672241211
    5. ' ):' → logprob: -9.37679672241211
    6. '):
' → logprob: -10.75179672241211
    7. ':' → logprob: -11.12679672241211
    8. '():' → logprob: -12.00179672241211
    9. '(self' → logprob: -13.37679672241211
    10. ',self' → logprob: -13.50179672241211

Token 38: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.000694919959641993
    2. '<|end|>' → logprob: -8.37569522857666
    3. '
' → logprob: -9.12569522857666
    4. ':' → logprob: -9.62569522857666
    5. 'newline' → logprob: -10.00069522857666
    6. '\' → logprob: -10.00069522857666
    7. 'self' → logprob: -10.12569522857666
    8. '        
' → logprob: -10.12569522857666
    9. '```' → logprob: -10.50069522857666
    10. '\n' → logprob: -10.62569522857666

Token 39: ' import' (ID: 1588)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012580170296132565
    2. 'self' → logprob: -4.637580394744873
    3. 'import' (adapté à ' import') → logprob: -6.137580394744873
    4. ' self' → logprob: -8.387579917907715
    5. '```' → logprob: -9.137579917907715
    6. '\' → logprob: -10.012579917907715
    7. '   ' → logprob: -10.012579917907715
    8. ' import' → logprob: -10.262579917907715
    9. '\b' → logprob: -10.387579917907715
    10. '(self' → logprob: -10.762579917907715

Token 40: ' re' (ID: 322)
  Prédit: ' re'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' re' → logprob: -0.0003032881941180676
    2. 're' → logprob: -8.125303268432617
    3. '_re' → logprob: -12.750303268432617
    4. ' ' → logprob: -13.500303268432617
    5. '	re' → logprob: -13.625303268432617
    6. ' ' → logprob: -14.000303268432617
    7. ' r' → logprob: -14.750303268432617
    8. ' regex' → logprob: -15.375303268432617
    9. ' space' → logprob: -17.250303268432617
    10. ' rere' → logprob: -17.375303268432617

Token 41: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.08587503433227539
    2. '<|end|>' → logprob: -2.7108750343322754
    3. '       ' → logprob: -4.210875034332275
    4. '<|end|>' → logprob: -7.835875034332275
    5. '        
' → logprob: -7.960875034332275
    6. 'self' → logprob: -9.460874557495117
    7. ' 
' → logprob: -9.835874557495117
    8. '

' → logprob: -10.460874557495117
    9. '  
' → logprob: -10.835874557495117
    10. '
' → logprob: -11.460874557495117

Token 42: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.06748541444540024
    2. '       ' → logprob: -2.9424853324890137
    3. '<|end|>' → logprob: -4.442485332489014
    4. '<|end|>' → logprob: -8.567485809326172
    5. '        
' → logprob: -8.692485809326172
    6. 'self' → logprob: -8.942485809326172
    7. '

' → logprob: -9.442485809326172
    8. ' 
' → logprob: -9.442485809326172
    9. '  
' → logprob: -11.192485809326172
    10. '
' → logprob: -11.442485809326172

Token 43: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003641407238319516
    2. 'self' → logprob: -5.753641605377197
    3. '
' → logprob: -8.628641128540039
    4. ' self' → logprob: -9.128641128540039
    5. '        
' → logprob: -9.503641128540039
    6. 'newline' → logprob: -11.128641128540039
    7. 'import' → logprob: -11.253641128540039
    8. '   ' → logprob: -11.378641128540039
    9. 'n' → logprob: -11.503641128540039
    10. '<|end|>' → logprob: -11.628641128540039

Token 44: ' Create' (ID: 6585)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.1517571061849594
    2. ' self' → logprob: -2.276757001876831
    3. '       ' → logprob: -3.276757001876831
    4. '      ' → logprob: -9.15175724029541
    5. '        ' → logprob: -9.65175724029541
    6. '   ' → logprob: -10.02675724029541
    7. 'def' → logprob: -10.27675724029541
    8. ' ' → logprob: -10.27675724029541
    9. 'for' → logprob: -10.77675724029541
    10. '     ' → logprob: -11.02675724029541

Token 45: ' a' (ID: 261)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.8392400145530701
    2. ' a' → logprob: -1.2142400741577148
    3. 'self' → logprob: -2.089240074157715
    4. ' patterns' → logprob: -2.714240074157715
    5. ' an' → logprob: -2.839240074157715
    6. 'patterns' → logprob: -5.589240074157715
    7. '_patterns' → logprob: -5.714240074157715
    8. ' the' → logprob: -5.964240074157715
    9. '       ' → logprob: -6.464240074157715
    10. ' pattern' → logprob: -6.714240074157715

Token 46: ' regex' (ID: 42588)
  Prédit: '|'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '|' → logprob: -1.096667766571045
    2. 'self' → logprob: -1.346667766571045
    3. ' self' → logprob: -2.471667766571045
    4. ' pattern' → logprob: -2.721667766571045
    5. ' combined' → logprob: -3.096667766571045
    6. ')' → logprob: -3.221667766571045
    7. 'pattern' → logprob: -3.471667766571045
    8. ' list' → logprob: -3.721667766571045
    9. 'combined' → logprob: -4.221667766571045
    10. ' dictionary' → logprob: -4.596667766571045

Token 47: ' pattern' (ID: 8302)
  Prédit: ' pattern'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pattern' → logprob: -0.04294461011886597
    2. 'pattern' → logprob: -3.4179446697235107
    3. '_pattern' → logprob: -5.292944431304932
    4. ' =' → logprob: -6.292944431304932
    5. '       ' → logprob: -7.917944431304932
    6. ' self' → logprob: -8.29294490814209
    7. '.Pattern' → logprob: -8.29294490814209
    8. '_patterns' → logprob: -8.66794490814209
    9. ' for' → logprob: -8.91794490814209
    10. '   ' → logprob: -8.91794490814209

Token 48: ' to' (ID: 316)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.006476622074842453
    2. '=' → logprob: -5.381476402282715
    3. '<|end|>' → logprob: -6.881476402282715
    4. 's' → logprob: -8.006476402282715
    5. '       ' → logprob: -9.256476402282715
    6. ' that' → logprob: -9.381476402282715
    7. 'token' → logprob: -9.756476402282715
    8. '_token' → logprob: -10.006476402282715
    9. ' to' → logprob: -10.381476402282715
    10. 'self' → logprob: -10.381476402282715

Token 49: ' match' (ID: 3981)
  Prédit: ' match'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' match' → logprob: -0.09230555593967438
    2. 'match' → logprob: -3.0923056602478027
    3. '|' → logprob: -3.3423056602478027
    4. 're' → logprob: -6.092305660247803
    5. 'r' → logprob: -6.467305660247803
    6. 'combine' → logprob: -7.342305660247803
    7. '\b' → logprob: -7.592305660247803
    8. 'replace' → logprob: -7.592305660247803
    9. ' re' → logprob: -8.217305183410645
    10. '	match' → logprob: -8.467305183410645

Token 50: ' any' (ID: 1062)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.242933452129364
    2. '|' → logprob: -1.9929335117340088
    3. ' r' → logprob: -2.742933511734009
    4. ''' → logprob: -4.74293327331543
    5. '\b' → logprob: -6.74293327331543
    6. '   ' → logprob: -6.86793327331543
    7. '(r' → logprob: -6.86793327331543
    8. 'the' → logprob: -7.61793327331543
    9. 'fr' → logprob: -7.74293327331543
    10. ' the' → logprob: -7.86793327331543

Token 51: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.7067264318466187
    2. ' fruit' → logprob: -1.5817264318466187
    3. '\b' → logprob: -1.7067264318466187
    4. '|' → logprob: -3.331726551055908
    5. 'fruit' → logprob: -3.706726551055908
    6. '(' → logprob: -4.331726551055908
    7. '(?:' → logprob: -4.331726551055908
    8. ' (' → logprob: -4.581726551055908
    9. '\' → logprob: -4.831726551055908
    10. '(f' → logprob: -6.081726551055908

Token 52: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.16216476261615753
    2. 'the' → logprob: -1.9121648073196411
    3. 'self' → logprob: -6.912164688110352
    4. '|' → logprob: -7.412164688110352
    5. ' self' → logprob: -8.787164688110352
    6. 're' → logprob: -9.662164688110352
    7. '\b' → logprob: -10.037164688110352
    8. 'r' → logprob: -11.537164688110352
    9. '\' → logprob: -11.537164688110352
    10. '   ' → logprob: -11.912164688110352

Token 53: ' keys' (ID: 12994)
  Prédit: ' keys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' keys' → logprob: -0.6762372255325317
    2. ' fruits' → logprob: -1.4262372255325317
    3. 'fr' → logprob: -2.801237106323242
    4. 'keys' → logprob: -2.801237106323242
    5. '|' → logprob: -3.301237106323242
    6. 'fruit' → logprob: -3.551237106323242
    7. ' words' → logprob: -3.676237106323242
    8. ' fruit' → logprob: -3.801237106323242
    9. 're' → logprob: -5.176237106323242
    10. 'self' → logprob: -5.801237106323242

Token 54: ' as' (ID: 472)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07758545875549316
    2. '       ' → logprob: -2.952585458755493
    3. '|' → logprob: -4.952585220336914
    4. ' from' → logprob: -5.452585220336914
    5. ' of' → logprob: -6.077585220336914
    6. '\b' → logprob: -6.202585220336914
    7. 'from' → logprob: -6.327585220336914
    8. '```' → logprob: -7.077585220336914
    9. '(' → logprob: -7.827585220336914
    10. ' or' → logprob: -7.827585220336914

Token 55: ' whole' (ID: 6062)
  Prédit: ' words'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' words' → logprob: -0.6121683716773987
    2. ' whole' → logprob: -1.862168312072754
    3. ' word' → logprob: -2.362168312072754
    4. '\b' → logprob: -2.362168312072754
    5. '|' → logprob: -2.862168312072754
    6. ' a' → logprob: -4.237168312072754
    7. ' r' → logprob: -4.612168312072754
    8. 'r' → logprob: -4.612168312072754
    9. 'whole' → logprob: -4.862168312072754
    10. 'word' → logprob: -5.612168312072754

Token 56: ' words' (ID: 6391)
  Prédit: ' words'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' words' → logprob: -0.7017268538475037
    2. 'word' → logprob: -1.7017269134521484
    3. '\b' → logprob: -1.7017269134521484
    4. ' word' → logprob: -2.7017269134521484
    5. 'words' → logprob: -2.7017269134521484
    6. '\r' → logprob: -6.451726913452148
    7. '\' → logprob: -6.576726913452148
    8. '_word' → logprob: -6.576726913452148
    9. '_words' → logprob: -7.951726913452148
    10. '   ' → logprob: -9.201726913452148

Token 57: '
' (ID: 198)
  Prédit: '\b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\b' → logprob: -0.3534723222255707
    2. '       ' → logprob: -1.228472352027893
    3. '\' → logprob: -6.6034722328186035
    4. '\r' → logprob: -6.8534722328186035
    5. '\s' → logprob: -7.3534722328186035
    6. 'r' → logprob: -7.4784722328186035
    7. ',' → logprob: -8.103472709655762
    8. '\x' → logprob: -8.228472709655762
    9. '\n' → logprob: -9.103472709655762
    10. '[' → logprob: -9.228472709655762

Token 58: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3197823464870453
    2. '\b' → logprob: -1.3197823762893677
    3. '\' → logprob: -6.444782257080078
    4. '\s' → logprob: -6.944782257080078
    5. '\r' → logprob: -7.319782257080078
    6. '[' → logprob: -7.569782257080078
    7. '\n' → logprob: -7.569782257080078
    8. '\t' → logprob: -7.944782257080078
    9. ':' → logprob: -7.944782257080078
    10. '\x' → logprob: -8.194782257080078

Token 59: ' pattern' (ID: 8302)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4645135998725891
    2. '\b' → logprob: -1.4645135402679443
    3. 'self' → logprob: -2.2145135402679443
    4. ' self' → logprob: -3.7145135402679443
    5. 'pattern' (adapté à ' pattern') → logprob: -6.089513778686523
    6. '\' → logprob: -6.214513778686523
    7. 'word' → logprob: -7.839513778686523
    8. ' pattern' → logprob: -7.839513778686523
    9. 'r' → logprob: -8.339513778686523
    10. '\\' → logprob: -8.464513778686523

Token 60: '_words' (ID: 45077)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0011743901995941997
    2. '=' → logprob: -6.751174449920654
    3. 's' → logprob: -12.876173973083496
    4. ' ' → logprob: -13.501173973083496
    5. ' =
' → logprob: -16.376174926757812
    6. '_' → logprob: -17.001174926757812
    7. ' =)' → logprob: -17.001174926757812
    8. '=self' → logprob: -18.001174926757812
    9. ' =[' → logprob: -18.001174926757812
    10. '<|end|>' → logprob: -18.126174926757812

Token 61: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.000488110730657354
    2. '=' → logprob: -7.62548828125
    3. ' =[' → logprob: -17.00048828125
    4. ' ' → logprob: -17.87548828125
    5. ' =
' → logprob: -18.00048828125
    6. ')' → logprob: -19.00048828125
    7. ' =)' → logprob: -19.75048828125
    8. ' |=' → logprob: -20.12548828125
    9. ' ='' → logprob: -20.50048828125
    10. ' =(' → logprob: -20.62548828125

Token 62: ' map' (ID: 4014)
  Prédit: '[r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[r' → logprob: -0.8513512015342712
    2. '[' → logprob: -1.601351261138916
    3. 'r' → logprob: -1.726351261138916
    4. ''' → logprob: -2.476351261138916
    5. 'list' → logprob: -3.601351261138916
    6. ' [' → logprob: -3.726351261138916
    7. ' r' → logprob: -3.851351261138916
    8. ' list' → logprob: -4.101351261138916
    9. '|' → logprob: -4.601351261138916
    10. '   ' → logprob: -6.226351261138916

Token 63: '(lambda' (ID: 43341)
  Prédit: '(re'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(re' → logprob: -0.578574538230896
    2. '(lambda' → logprob: -0.828574538230896
    3. '(' → logprob: -6.2035746574401855
    4. '(r' → logprob: -7.8285746574401855
    5. '(self' → logprob: -8.953574180603027
    6. 're' → logprob: -9.953574180603027
    7. '(
' → logprob: -11.078574180603027
    8. '(str' → logprob: -11.328574180603027
    9. 'lambda' → logprob: -13.078574180603027
    10. '(fr' → logprob: -13.578574180603027

Token 64: ' w' (ID: 286)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 're' → logprob: -0.21631741523742676
    2. ' re' → logprob: -1.9663174152374268
    3. ' lambda' → logprob: -3.2163174152374268
    4. 'lambda' → logprob: -4.341317176818848
    5. '(lambda' → logprob: -7.966317176818848
    6. 'r' → logprob: -8.216317176818848
    7. '   ' → logprob: -8.591317176818848
    8. '	re' → logprob: -8.591317176818848
    9. ' ' → logprob: -9.091317176818848
    10. '  ' → logprob: -9.466317176818848

Token 65: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01277626771479845
    2. ' :' → logprob: -4.3877763748168945
    3. 're' → logprob: -8.887776374816895
    4. 'r' → logprob: -10.262776374816895
    5. 'w' → logprob: -10.637776374816895
    6. ':
' → logprob: -11.262776374816895
    7. '   ' → logprob: -11.387776374816895
    8. 'lambda' → logprob: -12.012776374816895
    9. '       ' → logprob: -12.387776374816895
    10. ',' → logprob: -12.512776374816895

Token 66: ' r' (ID: 428)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -0.11526180058717728
    2. 'r' → logprob: -2.7402617931365967
    3. 'fr' → logprob: -3.4902617931365967
    4. 'rf' → logprob: -4.490262031555176
    5. 'f' → logprob: -7.115262031555176
    6. ' r' → logprob: -7.615262031555176
    7. ' rf' → logprob: -7.615262031555176
    8. ' re' → logprob: -7.990262031555176
    9. '   ' → logprob: -8.240262031555176
    10. '       ' → logprob: -9.990262031555176

Token 67: ''\' (ID: 36853)
  Prédit: ''\'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''\' → logprob: -0.2721731662750244
    2. 'f' → logprob: -1.7721731662750244
    3. '\b' → logprob: -3.1471731662750244
    4. '"\' → logprob: -4.397172927856445
    5. '\f' → logprob: -5.022172927856445
    6. '\' → logprob: -5.397172927856445
    7. ''' → logprob: -7.147172927856445
    8. 'fr' → logprob: -8.397172927856445
    9. ' \' → logprob: -8.647172927856445
    10. '`\' → logprob: -8.897172927856445

Token 68: 'b' (ID: 65)
  Prédit: '\b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\b' → logprob: -0.007706126663833857
    2. 'b' → logprob: -4.882706165313721
    3. '\' → logprob: -9.382705688476562
    4. '\\' → logprob: -11.757705688476562
    5. '\f' → logprob: -13.132705688476562
    6. '(?' → logprob: -13.382705688476562
    7. '\d' → logprob: -13.507705688476562
    8. ''\' → logprob: -14.507705688476562
    9. '(?:' → logprob: -14.632705688476562
    10. '\S' → logprob: -14.632705688476562

Token 69: ''' (ID: 6)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 're' → logprob: -0.0067167943343520164
    2. '(re' → logprob: -5.256716728210449
    3. 'w' → logprob: -6.881716728210449
    4. ' re' → logprob: -8.50671672821045
    5. '\' → logprob: -8.75671672821045
    6. '(?:' → logprob: -10.13171672821045
    7. '{}\' → logprob: -11.25671672821045
    8. '{' → logprob: -11.50671672821045
    9. 'import' → logprob: -11.50671672821045
    10. '(w' → logprob: -12.38171672821045

Token 70: ' +' (ID: 659)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -0.6294240355491638
    2. 'w' → logprob: -1.1294240951538086
    3. ' +' → logprob: -3.0044240951538086
    4. '+' → logprob: -3.5044240951538086
    5. '(re' → logprob: -3.8794240951538086
    6. '{}\' → logprob: -4.504424095153809
    7. '+w' → logprob: -4.754424095153809
    8. '\' → logprob: -5.379424095153809
    9. '{' → logprob: -5.629424095153809
    10. '{}' → logprob: -6.004424095153809

Token 71: ' w' (ID: 286)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -0.1805090308189392
    2. 'w' → logprob: -1.805509090423584
    3. ' re' → logprob: -7.305509090423584
    4. ' w' → logprob: -10.555508613586426
    5. '   ' → logprob: -10.930508613586426
    6. '(re' → logprob: -11.180508613586426
    7. '       ' → logprob: -11.430508613586426
    8. 'r' → logprob: -12.180508613586426
    9. '           ' → logprob: -13.055508613586426
    10. 'str' → logprob: -13.555508613586426

Token 72: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.585560142993927
    2. '\b' → logprob: -1.4605600833892822
    3. '+r' → logprob: -2.0855600833892822
    4. 'r' → logprob: -2.9605600833892822
    5. '+' → logprob: -4.085560321807861
    6. '+\' → logprob: -4.960560321807861
    7. ')\' → logprob: -5.960560321807861
    8. ''\' → logprob: -6.335560321807861
    9. '\' → logprob: -6.710560321807861
    10. ')' → logprob: -6.960560321807861

Token 73: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.01261618547141552
    2. ' r' → logprob: -4.387616157531738
    3. '   ' → logprob: -10.262616157531738
    4. ''\' → logprob: -10.762616157531738
    5. '\b' → logprob: -11.512616157531738
    6. '  ' → logprob: -11.512616157531738
    7. '	r' → logprob: -11.887616157531738
    8. '       ' → logprob: -12.762616157531738
    9. '(r' → logprob: -12.887616157531738
    10. '+r' → logprob: -12.887616157531738

Token 74: ''\' (ID: 36853)
  Prédit: ''\'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''\' → logprob: -0.428879052400589
    2. '\b' → logprob: -1.0538790225982666
    3. ')\' → logprob: -8.928878784179688
    4. '')' → logprob: -11.553878784179688
    5. '\x' → logprob: -12.053878784179688
    6. ''s' → logprob: -12.053878784179688
    7. ''' → logprob: -12.053878784179688
    8. '\' → logprob: -12.428878784179688
    9. '"\' → logprob: -12.928878784179688
    10. '}\' → logprob: -12.928878784179688

Token 75: 'b' (ID: 65)
  Prédit: '\b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\b' → logprob: -6.76628842484206e-05
    2. 'b' → logprob: -9.625067710876465
    3. ''\' → logprob: -13.625067710876465
    4. ')\' → logprob: -14.875067710876465
    5. ''b' → logprob: -17.12506675720215
    6. '}\' → logprob: -18.50006675720215
    7. 'w' → logprob: -18.62506675720215
    8. '?\' → logprob: -18.75006675720215
    9. '\x' → logprob: -19.25006675720215
    10. '\' → logprob: -19.50006675720215

Token 76: '',' (ID: 787)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004238073714077473
    2. ' ,' → logprob: -6.004238128662109
    3. '',' → logprob: -6.879238128662109
    4. '       ' → logprob: -8.25423812866211
    5. '','' → logprob: -8.50423812866211
    6. ',
' → logprob: -9.50423812866211
    7. '<|end|>' → logprob: -9.75423812866211
    8. ')' → logprob: -9.87923812866211
    9. ',list' → logprob: -10.50423812866211
    10. '),' → logprob: -11.37923812866211

Token 77: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.03422762453556061
    2. ' self' → logprob: -3.4092276096343994
    3. 'list' → logprob: -7.6592278480529785
    4. ' list' → logprob: -9.15922737121582
    5. '       ' → logprob: -13.40922737121582
    6. '(self' → logprob: -13.90922737121582
    7. '[self' → logprob: -14.15922737121582
    8. '	self' → logprob: -14.65922737121582
    9. '           ' → logprob: -14.65922737121582
    10. ')' → logprob: -15.15922737121582

Token 78: '.swap' (ID: 111356)
  Prédit: '.swap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.swap' → logprob: -6.110668618930504e-05
    2. '.' → logprob: -9.87506103515625
    3. '.sw' → logprob: -12.37506103515625
    4. ' .' → logprob: -12.50006103515625
    5. 'swap' → logprob: -13.50006103515625
    6. '.s' → logprob: -16.00006103515625
    7. '	swap' → logprob: -16.87506103515625
    8. '.swing' → logprob: -17.12506103515625
    9. '\.' → logprob: -18.37506103515625
    10. '​.' → logprob: -18.50006103515625

Token 79: '_map' (ID: 11824)
  Prédit: '_map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_map' → logprob: -3.128163257315464e-07
    2. 'map' → logprob: -15.875
    3. 'er' → logprob: -16.75
    4. '_' → logprob: -17.25
    5. 'Map' → logprob: -17.875
    6. 's' → logprob: -18.625
    7. '   ' → logprob: -19.0
    8. 'ermap' → logprob: -19.125
    9. '_maps' → logprob: -19.875
    10. '_words' → logprob: -20.0

Token 80: '.keys' (ID: 18392)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11622155457735062
    2. '.keys' → logprob: -2.2412216663360596
    3. '))' → logprob: -5.8662214279174805
    4. ' )' → logprob: -8.11622142791748
    5. 'keys' → logprob: -8.99122142791748
    6. '   ' → logprob: -9.61622142791748
    7. ')
' → logprob: -11.49122142791748
    8. ')))' → logprob: -11.61622142791748
    9. ' keys' → logprob: -11.74122142791748
    10. '.key' → logprob: -12.61622142791748

Token 81: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.003996477462351322
    2. ')' → logprob: -5.7539963722229
    3. '()' → logprob: -7.3789963722229
    4. '()))' → logprob: -8.628996849060059
    5. ' ())' → logprob: -12.503996849060059
    6. '())
' → logprob: -12.628996849060059
    7. '))' → logprob: -12.878996849060059
    8. '()]' → logprob: -13.253996849060059
    9. '();)' → logprob: -13.878996849060059
    10. '()),' → logprob: -14.003996849060059

Token 82: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.48909327387809753
    2. ')' → logprob: -0.9890933036804199
    3. ',' → logprob: -4.61409330368042
    4. ')
' → logprob: -5.86409330368042
    5. '),' → logprob: -8.114092826843262
    6. 'pattern' → logprob: -8.114092826843262
    7. ' )' → logprob: -8.239092826843262
    8. '')' → logprob: -8.239092826843262
    9. ']' → logprob: -8.989092826843262
    10. ',
' → logprob: -9.239092826843262

Token 83: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006319800857454538
    2. 'self' (adapté à ' self') → logprob: -6.131319999694824
    3. ')' → logprob: -6.756319999694824
    4. ')
' → logprob: -6.881319999694824
    5. '
' → logprob: -7.881319999694824
    6. 'pattern' → logprob: -7.881319999694824
    7. 'import' → logprob: -8.131319999694824
    8. ' self' → logprob: -8.256319999694824
    9. '        
' → logprob: -8.506319999694824
    10. ',' → logprob: -10.256319999694824

Token 84: '.pattern' (ID: 76901)
  Prédit: '.pattern'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pattern' → logprob: -0.5000422596931458
    2. '._' → logprob: -1.000042200088501
    3. '.swap' → logprob: -4.12504243850708
    4. '_pattern' → logprob: -5.75004243850708
    5. '.' → logprob: -5.75004243850708
    6. '.comp' → logprob: -6.87504243850708
    7. '.sw' → logprob: -7.50004243850708
    8. '.regex' → logprob: -8.125041961669922
    9. '_swap' → logprob: -8.625041961669922
    10. 'pattern' → logprob: -8.625041961669922

Token 85: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.005931401159614325
    2. '=' → logprob: -5.130931377410889
    3. '_' → logprob: -13.505931854248047
    4. 's' → logprob: -13.880931854248047
    5. ' ' → logprob: -15.005931854248047
    6. ' =
' → logprob: -16.130931854248047
    7. '<|end|>' → logprob: -17.005931854248047
    8. ')' → logprob: -17.880931854248047
    9. '  ' → logprob: -17.880931854248047
    10. '_=' → logprob: -18.005931854248047

Token 86: ' re' (ID: 322)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -0.5759839415550232
    2. ' re' → logprob: -0.8259839415550232
    3. 'import' → logprob: -10.950984001159668
    4. '   ' → logprob: -11.575984001159668
    5. '       ' → logprob: -12.200984001159668
    6. '	re' → logprob: -12.450984001159668
    7. 'r' → logprob: -12.700984001159668
    8. ' ' → logprob: -12.950984001159668
    9. '  ' → logprob: -14.575984001159668
    10. '    ' → logprob: -14.575984001159668

Token 87: '.compile' (ID: 38900)
  Prédit: '.compile'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.compile' → logprob: -0.007538844831287861
    2. 'compile' → logprob: -5.382538795471191
    3. '.' → logprob: -6.132538795471191
    4. '_compile' → logprob: -7.757538795471191
    5. '.comp' → logprob: -9.757538795471191
    6. '.com' → logprob: -10.132538795471191
    7. ' compile' → logprob: -10.132538795471191
    8. '\.' → logprob: -10.382538795471191
    9. '.Comp' → logprob: -10.382538795471191
    10. '_comp' → logprob: -10.382538795471191

Token 88: '('|' (ID: 118566)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.8905178308486938
    2. '('|' → logprob: -1.0155178308486938
    3. '(r' → logprob: -2.2655177116394043
    4. '(' → logprob: -2.6405177116394043
    5. '("("' → logprob: -3.2655177116394043
    6. '("|' → logprob: -4.765517711639404
    7. ''' → logprob: -5.890517711639404
    8. '(next' → logprob: -7.390517711639404
    9. '(
' → logprob: -7.390517711639404
    10. '|' → logprob: -7.765517711639404

Token 89: ''.' (ID: 6120)
  Prédit: ''.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''.' → logprob: -0.24035948514938354
    2. 'join' → logprob: -1.8653595447540283
    3. '|' → logprob: -3.6153595447540283
    4. '.join' → logprob: -3.6153595447540283
    5. ''' → logprob: -6.365359306335449
    6. '''.' → logprob: -6.490359306335449
    7. 'pattern' → logprob: -7.240359306335449
    8. '('|' → logprob: -7.865359306335449
    9. ')' → logprob: -8.24035930633545
    10. '')' → logprob: -9.11535930633545

Token 90: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -0.004350605886429548
    2. 'pattern' → logprob: -5.879350662231445
    3. '|' → logprob: -7.254350662231445
    4. '(join' → logprob: -7.754350662231445
    5. '(pattern' → logprob: -8.754350662231445
    6. '('|' → logprob: -9.879350662231445
    7. 'escape' → logprob: -10.004350662231445
    8. 'sub' → logprob: -10.254350662231445
    9. 'choice' → logprob: -10.504350662231445
    10. '(' → logprob: -10.629350662231445

Token 91: '(pattern' (ID: 62660)
  Prédit: '(pattern'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pattern' → logprob: -0.3133363723754883
    2. '(list' → logprob: -1.3133363723754883
    3. 'pattern' → logprob: -10.063336372375488
    4. '(' → logprob: -11.063336372375488
    5. 'list' → logprob: -11.938336372375488
    6. '(tuple' → logprob: -12.188336372375488
    7. ' (' → logprob: -13.188336372375488
    8. '([' → logprob: -13.438336372375488
    9. ')' → logprob: -15.063336372375488
    10. ' pattern' → logprob: -15.313336372375488

Token 92: '_words' (ID: 45077)
  Prédit: '_words'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_words' → logprob: -5.908022285439074e-05
    2. 's' → logprob: -10.750059127807617
    3. '_patterns' → logprob: -10.750059127807617
    4. ')' → logprob: -12.750059127807617
    5. 'Words' → logprob: -12.875059127807617
    6. '(pattern' → logprob: -13.375059127807617
    7. 'words' → logprob: -14.000059127807617
    8. '   ' → logprob: -14.250059127807617
    9. '(words' → logprob: -14.250059127807617
    10. '_' → logprob: -14.500059127807617

Token 93: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.029910387471318245
    2. '))' → logprob: -3.5299103260040283
    3. ')))' → logprob: -9.02991008758545
    4. ' )' → logprob: -10.77991008758545
    5. '       ' → logprob: -11.52991008758545
    6. '   ' → logprob: -13.02991008758545
    7. ')
' → logprob: -13.27991008758545
    8. ' ))' → logprob: -13.52991008758545
    9. '),' → logprob: -13.65491008758545
    10. ')}' → logprob: -13.77991008758545

Token 94: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8071610331535339
    2. ')' → logprob: -1.5571610927581787
    3. '<|end|>' → logprob: -2.0571610927581787
    4. '\n' → logprob: -2.6821610927581787
    5. '\' → logprob: -3.0571610927581787
    6. '    
' → logprob: -3.3071610927581787
    7. ' 
' → logprob: -4.5571608543396
    8. '
' → logprob: -4.8071608543396
    9. '\r' → logprob: -4.8071608543396
    10. 'def' → logprob: -4.8071608543396

Token 95: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012022378854453564
    2. 'def' → logprob: -5.137022495269775
    3. '    
' → logprob: -5.762022495269775
    4. ' def' → logprob: -6.512022495269775
    5. '
' → logprob: -6.762022495269775
    6. '<|end|>' → logprob: -8.637022018432617
    7. '  
' → logprob: -10.262022018432617
    8. ' ' → logprob: -10.887022018432617
    9. '  ' → logprob: -10.887022018432617
    10. ' 
' → logprob: -11.512022018432617

Token 96: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.012070080265402794
    2. '   ' → logprob: -4.512070178985596
    3. ' def' → logprob: -6.887070178985596
    4. '    
' → logprob: -14.512069702148438
    5. '	def' → logprob: -16.012069702148438
    6. ' ' → logprob: -16.137069702148438
    7. '```' → logprob: -16.762069702148438
    8. '
' → logprob: -17.262069702148438
    9. '  ' → logprob: -17.637069702148438
    10. '        
' → logprob: -18.512069702148438

Token 97: ' swap' (ID: 25489)
  Prédit: ' swap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' swap' → logprob: -0.00989160779863596
    2. ' replace' → logprob: -4.759891510009766
    3. 'swap' → logprob: -6.884891510009766
    4. ' word' → logprob: -10.009891510009766
    5. ' transform' → logprob: -10.009891510009766
    6. 'replace' → logprob: -10.134891510009766
    7. ' apply' → logprob: -10.384891510009766
    8. ' def' → logprob: -10.759891510009766
    9. ' substitute' → logprob: -10.884891510009766
    10. ' fruit' → logprob: -11.134891510009766

Token 98: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.565444827079773
    2. '(' → logprob: -1.440444827079773
    3. '_words' → logprob: -2.1904449462890625
    4. '_word' → logprob: -3.0654449462890625
    5. '_' → logprob: -4.0654449462890625
    6. '_text' → logprob: -4.1904449462890625
    7. '_(' → logprob: -5.9404449462890625
    8. '_tokens' → logprob: -7.5654449462890625
    9. '_self' → logprob: -8.440444946289062
    10. '_token' → logprob: -8.440444946289062

Token 99: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07700507342815399
    2. ',text' → logprob: -2.70200514793396
    3. '_text' → logprob: -5.577004909515381
    4. ',_' → logprob: -6.952004909515381
    5. 'text' → logprob: -7.327004909515381
    6. ' ,' → logprob: -8.202005386352539
    7. '_words' → logprob: -8.702005386352539
    8. 's' → logprob: -8.702005386352539
    9. 'self' → logprob: -8.827005386352539
    10. ',s' → logprob: -8.952005386352539

Token 100: ' text' (ID: 2201)
  Prédit: ' text'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' text' → logprob: -0.2413223832845688
    2. 'text' → logprob: -1.61632239818573
    3. ' self' → logprob: -4.4913225173950195
    4. 'self' → logprob: -5.4913225173950195
    5. ' sentence' → logprob: -8.61632251739502
    6. 'sentence' → logprob: -8.86632251739502
    7. ' s' → logprob: -10.11632251739502
    8. '   ' → logprob: -10.24132251739502
    9. 's' → logprob: -10.86632251739502
    10. ' input' → logprob: -11.74132251739502

Token 101: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0013640470569953322
    2. '):
' → logprob: -6.626364231109619
    3. ':' → logprob: -11.126363754272461
    4. ')' → logprob: -11.626363754272461
    5. ',' → logprob: -11.876363754272461
    6. '   ' → logprob: -12.751363754272461
    7. ' ):' → logprob: -13.376363754272461
    8. '       ' → logprob: -13.501363754272461
    9. '):
' → logprob: -14.626363754272461
    10. '):

' → logprob: -14.626363754272461

Token 102: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.759734732331708e-05
    2. '        
' → logprob: -12.500017166137695
    3. ' return' → logprob: -12.875017166137695
    4. ' def' → logprob: -13.000017166137695
    5. 'def' → logprob: -13.000017166137695
    6. '        ' → logprob: -13.250017166137695
    7. '    ' → logprob: -13.375017166137695
    8. '   ' → logprob: -14.125017166137695
    9. '```' → logprob: -14.250017166137695
    10. '      ' → logprob: -14.375017166137695

Token 103: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.059991877526044846
    2. ' def' → logprob: -3.3099918365478516
    3. 'def' → logprob: -3.9349918365478516
    4. ' return' → logprob: -6.559991836547852
    5. '```' → logprob: -8.184991836547852
    6. '
' → logprob: -8.559991836547852
    7. 'return' (adapté à ' return') → logprob: -8.684991836547852
    8. 'import' → logprob: -10.184991836547852
    9. '        
' → logprob: -10.684991836547852
    10. '   ' → logprob: -11.184991836547852

Token 104: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.07888989895582199
    2. 'self' → logprob: -2.578889846801758
    3. '(self' → logprob: -16.578889846801758
    4. '	self' → logprob: -17.328889846801758
    5. ' ' → logprob: -17.578889846801758
    6. '_self' → logprob: -17.828889846801758
    7. '`' → logprob: -18.078889846801758
    8. ' ' → logprob: -18.328889846801758
    9. 's' → logprob: -18.453889846801758
    10. ' 
' → logprob: -19.203889846801758

Token 105: '.pattern' (ID: 76901)
  Prédit: '.pattern'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pattern' → logprob: -0.00028159678913652897
    2. 'pattern' → logprob: -8.50028133392334
    3. '.' → logprob: -9.50028133392334
    4. ' .' → logprob: -13.25028133392334
    5. 'self' → logprob: -14.25028133392334
    6. '.text' → logprob: -14.75028133392334
    7. ' pattern' → logprob: -15.12528133392334
    8. '._' → logprob: -16.625282287597656
    9. '_pattern' → logprob: -17.125282287597656
    10. '.Pattern' → logprob: -18.000282287597656

Token 106: '.sub' (ID: 7619)
  Prédit: '.sub'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sub' → logprob: -5.371605948312208e-05
    2. 'sub' → logprob: -9.875053405761719
    3. '.findall' → logprob: -13.375053405761719
    4. '.' → logprob: -14.250053405761719
    5. '.replace' → logprob: -17.37505340576172
    6. ' .' → logprob: -17.50005340576172
    7. '.gsub' → logprob: -17.50005340576172
    8. '.search' → logprob: -18.12505340576172
    9. '_sub' → logprob: -19.12505340576172
    10. '	sub' → logprob: -19.25005340576172

Token 107: '(self' (ID: 2402)
  Prédit: '(lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.004122092388570309
    2. '(self' → logprob: -5.879122257232666
    3. '(' → logprob: -6.754122257232666
    4. '(
' → logprob: -8.879121780395508
    5. 'lambda' → logprob: -11.754121780395508
    6. ' lambda' → logprob: -14.004121780395508
    7. ' (' → logprob: -14.379121780395508
    8. '((' → logprob: -14.754121780395508
    9. 'self' → logprob: -15.254121780395508
    10. '<|end|>' → logprob: -15.629121780395508

Token 108: '._' (ID: 2697)
  Prédit: '.swap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.swap' → logprob: -0.484354704618454
    2. '._' → logprob: -1.7343547344207764
    3. '.' → logprob: -2.4843547344207764
    4. '_swap' → logprob: -3.4843547344207764
    5. 'lambda' → logprob: -3.6093547344207764
    6. '=lambda' → logprob: -4.109354496002197
    7. '.lambda' → logprob: -4.234354496002197
    8. 'swap' → logprob: -4.859354496002197
    9. '.replace' → logprob: -5.234354496002197
    10. 's' → logprob: -6.234354496002197

Token 109: 're' (ID: 264)
  Prédit: 'replace'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'replace' → logprob: -0.0789509266614914
    2. 'swap' → logprob: -3.453950881958008
    3. 'replacement' → logprob: -3.578950881958008
    4. 're' → logprob: -4.328950881958008
    5. '_replace' → logprob: -6.078950881958008
    6. '_re' → logprob: -7.453950881958008
    7. '_swap' → logprob: -8.203950881958008
    8. 'sub' → logprob: -10.578950881958008
    9. 'sw' → logprob: -11.328950881958008
    10. ' replac' → logprob: -12.078950881958008

Token 110: 'placer' (ID: 58807)
  Prédit: 'place'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'place' → logprob: -0.21314695477485657
    2. 'placer' → logprob: -1.8381469249725342
    3. 'pl' → logprob: -3.463146924972534
    4. 'placement' → logprob: -6.588147163391113
    5. 'p' → logprob: -10.213147163391113
    6. '_place' → logprob: -10.338147163391113
    7. 'plac' → logprob: -10.463147163391113
    8. 's' → logprob: -11.838147163391113
    9. 'replace' → logprob: -11.963147163391113
    10. 'sub' → logprob: -11.963147163391113

Token 111: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.779520092299208e-05
    2. ' ,' → logprob: -9.875078201293945
    3. ',self' → logprob: -11.500078201293945
    4. '   ' → logprob: -11.750078201293945
    5. '       ' → logprob: -13.000078201293945
    6. ',text' → logprob: -13.000078201293945
    7. 'self' → logprob: -13.500078201293945
    8. '<|end|>' → logprob: -14.625078201293945
    9. ')' → logprob: -14.875078201293945
    10. 'text' → logprob: -15.250078201293945

Token 112: ' text' (ID: 2201)
  Prédit: ' text'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' text' → logprob: -0.5759420990943909
    2. 'text' → logprob: -0.8259420990943909
    3. ' ' → logprob: -13.450942039489746
    4. '	text' → logprob: -14.825942039489746
    5. '   ' → logprob: -15.075942039489746
    6. '    ' → logprob: -15.825942039489746
    7. '{text' → logprob: -16.200942993164062
    8. ')' → logprob: -16.450942993164062
    9. 'self' → logprob: -16.825942993164062
    10. '       ' → logprob: -16.825942993164062

Token 113: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.963691804325208e-05
    2. '   ' → logprob: -10.750029563903809
    3. '       ' → logprob: -12.625029563903809
    4. ')
' → logprob: -12.750029563903809
    5. ')

' → logprob: -14.000029563903809
    6. ' )' → logprob: -14.500029563903809
    7. ' ' → logprob: -14.625029563903809
    8. '	' → logprob: -17.000030517578125
    9. '  ' → logprob: -17.375030517578125
    10. '    ' → logprob: -17.375030517578125

Token 114: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18653440475463867
    2. '
' → logprob: -2.4365344047546387
    3. '    
' → logprob: -2.8115344047546387
    4. '<|end|>' → logprob: -4.311534404754639
    5. 'def' → logprob: -6.061534404754639
    6. '  
' → logprob: -6.186534404754639
    7. ' 
' → logprob: -7.061534404754639
    8. '    ' → logprob: -7.311534404754639
    9. '  ' → logprob: -7.561534404754639
    10. '\n' → logprob: -7.561534404754639

Token 115: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0005716211744584143
    2. 'def' → logprob: -7.5005717277526855
    3. '    
' → logprob: -11.375571250915527
    4. ' def' → logprob: -12.000571250915527
    5. '	def' → logprob: -14.250571250915527
    6. '
' → logprob: -16.375572204589844
    7. '       ' → logprob: -17.000572204589844
    8. '        
' → logprob: -17.000572204589844
    9. '   ' → logprob: -17.250572204589844
    10. '    ' → logprob: -17.375572204589844

Token 116: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0033384794369339943
    2. '   ' → logprob: -5.75333833694458
    3. ' def' → logprob: -8.753338813781738
    4. '	def' → logprob: -13.628338813781738
    5. ' ' → logprob: -13.753338813781738
    6. '  ' → logprob: -15.128338813781738
    7. '    
' → logprob: -16.003337860107422
    8. '
' → logprob: -16.003337860107422
    9. '       ' → logprob: -18.253337860107422
    10. '_def' → logprob: -18.628337860107422

Token 117: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.5779288411140442
    2. '_re' → logprob: -0.8279288411140442
    3. '_' → logprob: -6.3279290199279785
    4. '_replace' → logprob: -9.20292854309082
    5. '__' → logprob: -10.57792854309082
    6. ' ' → logprob: -10.82792854309082
    7. '_swap' → logprob: -11.57792854309082
    8. ' ' → logprob: -12.07792854309082
    9. '_r' → logprob: -12.20292854309082
    10. '_f' → logprob: -12.45292854309082

Token 118: 're' (ID: 264)
  Prédit: 're'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -1.9361264946837764e-07
    2. '_re' → logprob: -16.125
    3. 'replacement' → logprob: -19.5
    4. 'replace' → logprob: -20.5
    5. '-re' → logprob: -20.875
    6. '	re' → logprob: -21.125
    7. 'sw' → logprob: -21.875
    8. 'r' → logprob: -22.125
    9. ' replac' → logprob: -22.25
    10. 'repr' → logprob: -22.75

Token 119: 'placer' (ID: 58807)
  Prédit: 'placer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'placer' → logprob: -0.0002681304467841983
    2. 'pl' → logprob: -8.50026798248291
    3. 'place' → logprob: -10.37526798248291
    4. 'plac' → logprob: -10.62526798248291
    5. '_pl' → logprob: -13.00026798248291
    6. 're' → logprob: -13.62526798248291
    7. 'pla' → logprob: -13.75026798248291
    8. 'placement' → logprob: -13.87526798248291
    9. '_' → logprob: -14.12526798248291
    10. '_re' → logprob: -14.12526798248291

Token 120: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.004898685030639172
    2. '(match' → logprob: -5.629898548126221
    3. '(' → logprob: -6.879898548126221
    4. ' (' → logprob: -8.254899024963379
    5. '(s' → logprob: -12.379899024963379
    6. 'self' → logprob: -13.254899024963379
    7. '(matches' → logprob: -14.254899024963379
    8. ' match' → logprob: -14.504899024963379
    9. ' self' → logprob: -14.629899024963379
    10. '(m' → logprob: -14.879899024963379

Token 121: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003804353531450033
    2. ' ,' → logprob: -5.7538042068481445
    3. ' match' → logprob: -7.5038042068481445
    4. 'match' → logprob: -10.253804206848145
    5. ',m' → logprob: -10.628804206848145
    6. '(match' → logprob: -11.253804206848145
    7. '_match' → logprob: -14.378804206848145
    8. '	match' → logprob: -14.878804206848145
    9. '   ' → logprob: -15.003804206848145
    10. ')' → logprob: -15.128804206848145

Token 122: ' match' (ID: 3981)
  Prédit: 'match'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'match' → logprob: -0.03874541074037552
    2. ' match' → logprob: -3.288745403289795
    3. 'm' → logprob: -7.288745403289795
    4. ' m' → logprob: -11.413745880126953
    5. '	match' → logprob: -12.913745880126953
    6. ')' → logprob: -13.038745880126953
    7. ' ' → logprob: -13.788745880126953
    8. '   ' → logprob: -13.913745880126953
    9. '(match' → logprob: -14.288745880126953
    10. '```' → logprob: -14.288745880126953

Token 123: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.001045551267452538
    2. '):
' → logprob: -6.8760457038879395
    3. ')' → logprob: -11.626045227050781
    4. ':' → logprob: -13.126045227050781
    5. '):
' → logprob: -13.751045227050781
    6. '):

' → logprob: -14.626045227050781
    7. ' ):' → logprob: -15.376045227050781
    8. '}:' → logprob: -17.00104522705078
    9. '>:' → logprob: -18.25104522705078
    10. '   ' → logprob: -18.25104522705078

Token 124: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05340462177991867
    2. ' match' → logprob: -4.053404808044434
    3. ' self' → logprob: -4.553404808044434
    4. 'match' → logprob: -5.053404808044434
    5. 'self' → logprob: -5.178404808044434
    6. ' return' → logprob: -5.553404808044434
    7. '        
' → logprob: -6.303404808044434
    8. 'return' → logprob: -6.428404808044434
    9. '{' → logprob: -7.303404808044434
    10. ':' → logprob: -7.303404808044434

Token 125: ' word' (ID: 2195)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.25753122568130493
    2. 'word' (adapté à ' word') → logprob: -2.13253116607666
    3. ' return' → logprob: -2.63253116607666
    4. 'self' → logprob: -4.13253116607666
    5. '       ' → logprob: -5.25753116607666
    6. 'fruit' → logprob: -5.38253116607666
    7. 'original' → logprob: -5.63253116607666
    8. ' word' → logprob: -5.88253116607666
    9. 'match' → logprob: -6.63253116607666
    10. 'matched' → logprob: -7.13253116607666

Token 126: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.020571202039718628
    2. '=' → logprob: -3.895571231842041
    3. '_text' → logprob: -11.020570755004883
    4. '<|end|>' → logprob: -12.270570755004883
    5. 'text' → logprob: -12.645570755004883
    6. ' ' → logprob: -13.395570755004883
    7. ')' → logprob: -13.520570755004883
    8. '<|end|>' → logprob: -15.020570755004883
    9. ' =)' → logprob: -15.270570755004883
    10. ' =
' → logprob: -15.520570755004883

Token 127: ' match' (ID: 3981)
  Prédit: 'match'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'match' → logprob: -0.07889066636562347
    2. ' match' → logprob: -2.578890562057495
    3. '(match' → logprob: -14.328890800476074
    4. '	match' → logprob: -15.328890800476074
    5. 'self' → logprob: -17.078889846801758
    6. '_match' → logprob: -17.328889846801758
    7. '.match' → logprob: -17.453889846801758
    8. ' ' → logprob: -17.703889846801758
    9. 'matches' → logprob: -20.203889846801758
    10. 'm' → logprob: -20.203889846801758

Token 128: '.group' (ID: 13456)
  Prédit: '.group'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.group' → logprob: -9.610702363715973e-06
    2. 'group' → logprob: -12.125009536743164
    3. ' group' → logprob: -13.375009536743164
    4. '.' → logprob: -13.375009536743164
    5. '.text' → logprob: -15.125009536743164
    6. '.span' → logprob: -15.250009536743164
    7. '.value' → logprob: -15.375009536743164
    8. '.word' → logprob: -16.000009536743164
    9. '[' → logprob: -16.875009536743164
    10. ' .' → logprob: -17.625009536743164

Token 129: '(' (ID: 7)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.2014402449131012
    2. '(' → logprob: -1.7014402151107788
    3. '()
' → logprob: -11.32643985748291
    4. '()(' → logprob: -12.07643985748291
    5. '0' → logprob: -13.45143985748291
    6. '().' → logprob: -13.57643985748291
    7. '(),' → logprob: -14.07643985748291
    8. ' ()' → logprob: -14.07643985748291
    9. '()

' → logprob: -14.45143985748291
    10. '()+' → logprob: -14.45143985748291

Token 130: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.9153885558771435e-06
    2. ')' → logprob: -12.125005722045898
    3. ' ' → logprob: -14.875005722045898
    4. '1' → logprob: -18.0000057220459
    5. '(' → logprob: -19.5000057220459
    6. '۰' → logprob: -20.1250057220459
    7. '()' → logprob: -20.5000057220459
    8. '０' → logprob: -21.7500057220459
    9. '[' → logprob: -21.8750057220459
    10. '())' → logprob: -22.1250057220459

Token 131: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.048597365617752075
    2. ')
' → logprob: -3.0485973358154297
    3. ')

' → logprob: -12.79859733581543
    4. ' )' → logprob: -12.79859733581543
    5. ')
' → logprob: -13.04859733581543
    6. ' )
' → logprob: -14.04859733581543
    7. '       ' → logprob: -14.54859733581543
    8. '<|end|>' → logprob: -15.42359733581543
    9. ')return' → logprob: -15.54859733581543
    10. '
' → logprob: -15.67359733581543

Token 132: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3648946285247803
    2. '
' → logprob: -1.2398946285247803
    3. 'return' → logprob: -4.864894866943359
    4. '<|end|>' → logprob: -5.614894866943359
    5. ' return' → logprob: -6.114894866943359
    6. '        
' → logprob: -6.239894866943359
    7. ')' → logprob: -8.61489486694336
    8. '<|end|>' → logprob: -8.86489486694336
    9. '
' → logprob: -9.48989486694336
    10. ' if' → logprob: -9.86489486694336

Token 133: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.012254147790372372
    2. ' return' → logprob: -4.512254238128662
    3. '       ' → logprob: -7.012254238128662
    4. 'if' → logprob: -8.637253761291504
    5. 'replacement' → logprob: -9.262253761291504
    6. ' if' → logprob: -10.637253761291504
    7. '
' → logprob: -12.637253761291504
    8. 'swap' → logprob: -13.762253761291504
    9. ' swapped' → logprob: -13.887253761291504
    10. ' replacement' → logprob: -14.012253761291504

Token 134: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.5759403109550476
    2. ' self' → logprob: -0.8259403109550476
    3. ''' → logprob: -14.950940132141113
    4. '"' → logprob: -15.200940132141113
    5. ' ' → logprob: -16.45094108581543
    6. ' ' → logprob: -16.70094108581543
    7. ' '' → logprob: -17.07594108581543
    8. '	self' → logprob: -17.07594108581543
    9. '`' → logprob: -17.82594108581543
    10. ' "' → logprob: -17.95094108581543

Token 135: '.swap' (ID: 111356)
  Prédit: '.swap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.swap' → logprob: -1.1756367712223437e-05
    2. '.' → logprob: -11.625011444091797
    3. '.sw' → logprob: -13.000011444091797
    4. ' .' → logprob: -14.625011444091797
    5. 'swap' → logprob: -17.000011444091797
    6. '.s' → logprob: -17.125011444091797
    7. '.swing' → logprob: -17.250011444091797
    8. '.flip' → logprob: -17.500011444091797
    9. '.switch' → logprob: -18.500011444091797
    10. '	swap' → logprob: -18.625011444091797

Token 136: '_map' (ID: 11824)
  Prédit: '_map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_map' → logprob: 0.0
    2. 'map' → logprob: -16.75
    3. 'Map' → logprob: -16.875
    4. 'self' → logprob: -18.75
    5. 'ermap' → logprob: -18.75
    6. '_MAP' → logprob: -19.25
    7. '_Map' → logprob: -20.375
    8. '_maps' → logprob: -20.625
    9. '_m' → logprob: -21.0
    10. '   ' → logprob: -21.25

Token 137: '[word' (ID: 125964)
  Prédit: '[word'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[word' → logprob: -0.03804275393486023
    2. '.get' → logprob: -3.2880427837371826
    3. '[' → logprob: -14.038043022155762
    4. '[get' → logprob: -15.288043022155762
    5. 'get' → logprob: -16.788042068481445
    6. '[token' → logprob: -17.163042068481445
    7. '.word' → logprob: -18.038042068481445
    8. '[user' → logprob: -18.163042068481445
    9. '.setdefault' → logprob: -18.163042068481445
    10. 'word' → logprob: -18.413042068481445

Token 138: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00020926215802319348
    2. '}' → logprob: -8.750208854675293
    3. ')' → logprob: -10.875208854675293
    4. '<|end|>' → logprob: -11.625208854675293
    5. ' ]' → logprob: -11.750208854675293
    6. ']}' → logprob: -12.375208854675293
    7. ']
' → logprob: -12.375208854675293
    8. '])' → logprob: -12.875208854675293
    9. '']' → logprob: -13.250208854675293
    10. ')]' → logprob: -14.625208854675293

Token 139: 'class' (ID: 1444)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 140: ' Fruit' (ID: 61182)
  Prédit: ' Fruit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Fruit' → logprob: -0.48777467012405396
    2. ' Vegetable' → logprob: -1.2377746105194092
    3. ' Sentence' → logprob: -3.237774610519409
    4. ' ' → logprob: -4.112774848937988
    5. ' Space' → logprob: -4.612774848937988
    6. ' Apple' → logprob: -5.362774848937988
    7. ' Banana' → logprob: -5.862774848937988
    8. ' Smooth' → logprob: -5.987774848937988
    9. ' Juice' → logprob: -5.987774848937988
    10. ' Text' → logprob: -6.362774848937988

Token 141: 'Word' (ID: 12929)
  Prédit: 'Word'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Word' → logprob: -0.004509038757532835
    2. 'Basket' → logprob: -6.129508972167969
    3. 'Sentence' → logprob: -8.254508972167969
    4. 'Name' → logprob: -8.379508972167969
    5. 'Sal' → logprob: -8.629508972167969
    6. 'Sw' → logprob: -8.754508972167969
    7. 'Picker' → logprob: -8.879508972167969
    8. ' Word' → logprob: -8.879508972167969
    9. 'Fruit' → logprob: -9.379508972167969
    10. 'Processor' → logprob: -9.629508972167969

Token 142: 'Swap' (ID: 48241)
  Prédit: 'Sw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Sw' → logprob: -0.0003246183041483164
    2. 'Re' → logprob: -9.250324249267578
    3. 'Swap' → logprob: -9.375324249267578
    4. ' Sw' → logprob: -10.125324249267578
    5. 'Mapper' → logprob: -11.375324249267578
    6. 'S' → logprob: -12.000324249267578
    7. '   ' → logprob: -12.125324249267578
    8. 'Swiper' → logprob: -12.125324249267578
    9. 'Changer' → logprob: -12.250324249267578
    10. '```' → logprob: -12.500324249267578

Token 143: 'Factory' (ID: 4870)
  Prédit: 'per'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'per' → logprob: -1.306760805164231e-05
    2. 'pers' → logprob: -11.62501335144043
    3. ' per' → logprob: -14.12501335144043
    4. 'Per' → logprob: -14.12501335144043
    5. 'p' → logprob: -14.50001335144043
    6. 'er' → logprob: -14.62501335144043
    7. 'pper' → logprob: -15.25001335144043
    8. '_per' → logprob: -15.37501335144043
    9. 'ber' → logprob: -15.50001335144043
    10. 'ping' → logprob: -15.75001335144043

Token 144: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.000635235570371151
    2. ':
' → logprob: -7.375635147094727
    3. ' :' → logprob: -12.375635147094727
    4. '(' → logprob: -13.500635147094727
    5. '():' → logprob: -13.750635147094727
    6. ':

' → logprob: -14.000635147094727
    7. ':def' → logprob: -14.250635147094727
    8. '):' → logprob: -16.250635147094727
    9. ':**' → logprob: -16.500635147094727
    10. ',' → logprob: -16.750635147094727

Token 145: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0013586864806711674
    2. ' def' → logprob: -6.751358509063721
    3. 'def' → logprob: -8.626358985900879
    4. '    
' → logprob: -11.876358985900879
    5. '```' → logprob: -14.501358985900879
    6. '   ' → logprob: -14.751358985900879
    7. '	def' → logprob: -15.126358985900879
    8. '
' → logprob: -15.251358985900879
    9. ':' → logprob: -15.626358985900879
    10. 'class' → logprob: -16.501358032226562

Token 146: ' @' (ID: 759)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.08760257065296173
    2. 'def' → logprob: -2.5876026153564453
    3. '   ' → logprob: -5.212602615356445
    4. ' @' → logprob: -6.087602615356445
    5. '@' (adapté à ' @') → logprob: -6.962602615356445
    6. ' ' → logprob: -12.212602615356445
    7. '	def' → logprob: -13.712602615356445
    8. 'staticmethod' → logprob: -14.087602615356445
    9. '    ' → logprob: -14.212602615356445
    10. '    
' → logprob: -14.462602615356445

Token 147: 'staticmethod' (ID: 53164)
  Prédit: 'staticmethod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'staticmethod' → logprob: -0.04016517847776413
    2. 'classmethod' → logprob: -3.2901651859283447
    3. 'property' → logprob: -6.165164947509766
    4. 'static' → logprob: -11.040164947509766
    5. 'dat' → logprob: -12.540164947509766
    6. ' static' → logprob: -15.915164947509766
    7. 'l' → logprob: -16.415164947509766
    8. 'class' → logprob: -16.540164947509766
    9. 'cached' → logprob: -17.665164947509766
    10. 'st' → logprob: -17.790164947509766

Token 148: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3081815838813782
    2. ' def' → logprob: -1.4331815242767334
    3. '   ' → logprob: -3.6831815242767334
    4. '
' → logprob: -7.0581817626953125
    5. '	def' → logprob: -7.4331817626953125
    6. '(' → logprob: -10.683181762695312
    7. '(def' → logprob: -11.183181762695312
    8. '    
' → logprob: -11.558181762695312
    9. ' ' → logprob: -11.683181762695312
    10. '<|end|>' → logprob: -12.058181762695312

Token 149: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.004108084831386805
    2. ' def' → logprob: -5.50410795211792
    3. '   ' → logprob: -10.504108428955078
    4. '
' → logprob: -13.379108428955078
    5. '	def' → logprob: -14.254108428955078
    6. 'class' → logprob: -16.754108428955078
    7. '    
' → logprob: -17.004108428955078
    8. ' ' → logprob: -17.129108428955078
    9. '```' → logprob: -18.254108428955078
    10. '  ' → logprob: -18.379108428955078

Token 150: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0006273718317970634
    2. ' def' → logprob: -7.375627517700195
    3. 'class' → logprob: -15.125627517700195
    4. '   ' → logprob: -15.500627517700195
    5. 'classmethod' → logprob: -15.750627517700195
    6. ' ' → logprob: -16.000627517700195
    7. '
' → logprob: -16.875627517700195
    8. '    
' → logprob: -17.875627517700195
    9. 'de' → logprob: -17.875627517700195
    10. 'Def' → logprob: -18.000627517700195

Token 151: ' create' (ID: 2501)
  Prédit: ' create'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' create' → logprob: -0.1212380900979042
    2. 'create' → logprob: -2.2462379932403564
    3. ' get' → logprob: -6.1212382316589355
    4. ' from' → logprob: -6.4962382316589355
    5. ' build' → logprob: -6.6212382316589355
    6. ' make' → logprob: -6.7462382316589355
    7. 'from' → logprob: -7.2462382316589355
    8. 'make' → logprob: -8.121237754821777
    9. 'build' → logprob: -8.371237754821777
    10. 'get' → logprob: -8.371237754821777

Token 152: '_' (ID: 62)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.004002415109425783
    2. '(f' → logprob: -6.504002571105957
    3. ' (' → logprob: -7.254002571105957
    4. '_swap' → logprob: -7.254002571105957
    5. 'swap' → logprob: -7.379002571105957
    6. '_f' → logprob: -8.629002571105957
    7. '(' → logprob: -8.754002571105957
    8. ' swap' → logprob: -11.004002571105957
    9. '(name' → logprob: -11.004002571105957
    10. '(cls' → logprob: -11.254002571105957

Token 153: 'apple' (ID: 34058)
  Prédit: 'sw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sw' → logprob: -1.0458135604858398
    2. 'swap' → logprob: -1.1708135604858398
    3. 'fruit' → logprob: -1.4208135604858398
    4. 'instance' → logprob: -3.29581356048584
    5. 'word' → logprob: -3.92081356048584
    6. 's' → logprob: -4.54581356048584
    7. 'fr' → logprob: -5.04581356048584
    8. '(F' → logprob: -5.54581356048584
    9. 'map' → logprob: -6.29581356048584
    10. 'mapper' → logprob: -6.42081356048584

Token 154: '_pe' (ID: 76313)
  Prédit: '_swap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_swap' → logprob: -0.22556589543819427
    2. '():' → logprob: -2.2255659103393555
    3. '_to' → logprob: -3.2255659103393555
    4. '(s' → logprob: -4.4755659103393555
    5. '_f' → logprob: -4.8505659103393555
    6. '_s' → logprob: -4.9755659103393555
    7. '_p' → logprob: -5.6005659103393555
    8. '():
' → logprob: -5.6005659103393555
    9. '_sw' → logprob: -5.6005659103393555
    10. 'swap' → logprob: -5.8505659103393555

Token 155: 'ach' (ID: 678)
  Prédit: 'pper'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pper' → logprob: -1.3963888883590698
    2. 'ar' → logprob: -1.7713888883590698
    3. 'ach' → logprob: -1.7713888883590698
    4. 'el' → logprob: -1.7713888883590698
    5. 'eler' → logprob: -1.8963888883590698
    6. 'r' → logprob: -3.0213890075683594
    7. 'anut' → logprob: -4.896389007568359
    8. 'e' → logprob: -5.271389007568359
    9. 'er' → logprob: -5.896389007568359
    10. 'a' → logprob: -6.021389007568359

Token 156: '_swap' (ID: 103784)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.03756052255630493
    2. '_swap' → logprob: -3.66256046295166
    3. '():
' → logprob: -4.66256046295166
    4. 'swap' → logprob: -7.28756046295166
    5. '_s' → logprob: -8.53756046295166
    6. '_sw' → logprob: -8.66256046295166
    7. '()' → logprob: -8.78756046295166
    8. '_map' → logprob: -8.91256046295166
    9. ' ():' → logprob: -9.28756046295166
    10. '(s' → logprob: -9.41256046295166

Token 157: 'per' (ID: 543)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.4747277796268463
    2. '():
' → logprob: -0.9747277498245239
    3. 'per' → logprob: -7.974727630615234
    4. 'er' → logprob: -9.349727630615234
    5. '()' → logprob: -9.724727630615234
    6. '():

' → logprob: -10.474727630615234
    7. '():
' → logprob: -10.474727630615234
    8. ' ():' → logprob: -10.599727630615234
    9. '_map' → logprob: -11.349727630615234
    10. '(cls' → logprob: -11.474727630615234

Token 158: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0005070421029813588
    2. ' ():' → logprob: -7.87550687789917
    3. '(' → logprob: -9.750507354736328
    4. '():
' → logprob: -9.875507354736328
    5. '()' → logprob: -11.375507354736328
    6. '(s' → logprob: -12.500507354736328
    7. ' ()' → logprob: -14.875507354736328
    8. '(name' → logprob: -15.500507354736328
    9. '():
' → logprob: -15.625507354736328
    10. '(parent' → logprob: -15.750507354736328

Token 159: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007924780366010964
    2. ' return' → logprob: -7.625792503356934
    3. 'return' → logprob: -8.125792503356934
    4. '
' → logprob: -12.875792503356934
    5. '```' → logprob: -13.375792503356934
    6. '        
' → logprob: -13.750792503356934
    7. '   ' → logprob: -13.875792503356934
    8. ':
' → logprob: -15.000792503356934
    9. '  
' → logprob: -15.750792503356934
    10. '    
' → logprob: -15.750792503356934

Token 160: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.12571652233600616
    2. ' return' → logprob: -2.3757164478302
    3. '       ' → logprob: -4.125716686248779
    4. 'swap' → logprob: -4.750716686248779
    5. ' swap' → logprob: -7.875716686248779
    6. '   ' → logprob: -12.500716209411621
    7. 'sw' → logprob: -13.750716209411621
    8. '        ' → logprob: -14.500716209411621
    9. 'mapping' → logprob: -14.500716209411621
    10. '```' → logprob: -14.625716209411621

Token 161: ' Define' (ID: 38966)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.9873613715171814
    2. ' return' → logprob: -1.2373614311218262
    3. 'swap' → logprob: -1.6123614311218262
    4. ' swap' → logprob: -1.9873614311218262
    5. '       ' → logprob: -7.237361431121826
    6. '        ' → logprob: -10.862360954284668
    7. '   ' → logprob: -11.362360954284668
    8. '```' → logprob: -11.612360954284668
    9. '#' → logprob: -11.987360954284668
    10. 'map' → logprob: -12.112360954284668

Token 162: ' mapping' (ID: 22573)
  Prédit: 'swap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'swap' → logprob: -0.2088499218225479
    2. ' swap' → logprob: -1.7088499069213867
    3. '       ' → logprob: -4.958849906921387
    4. '{
' → logprob: -8.833849906921387
    5. 'return' → logprob: -9.208849906921387
    6. '           ' → logprob: -10.583849906921387
    7. '{' → logprob: -10.708849906921387
    8. ' return' → logprob: -10.708849906921387
    9. 'apple' → logprob: -11.208849906921387
    10. '	swap' → logprob: -11.458849906921387

Token 163: ' to' (ID: 316)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01373301725834608
    2. 'swap' → logprob: -5.26373291015625
    3. '{' → logprob: -5.51373291015625
    4. ' =' → logprob: -6.38873291015625
    5. '{
' → logprob: -6.76373291015625
    6. 'return' → logprob: -7.88873291015625
    7. '{"' → logprob: -8.38873291015625
    8. ' swap' → logprob: -8.63873291015625
    9. '={'' → logprob: -8.76373291015625
    10. ' {' → logprob: -8.88873291015625

Token 164: ' swap' (ID: 25489)
  Prédit: 'swap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'swap' → logprob: -0.32352617383003235
    2. '{'' → logprob: -2.32352614402771
    3. '{
' → logprob: -3.07352614402771
    4. '{' → logprob: -3.19852614402771
    5. '{"' → logprob: -3.19852614402771
    6. 'replace' → logprob: -3.69852614402771
    7. ' swap' → logprob: -3.82352614402771
    8. ' {'' → logprob: -6.323526382446289
    9. ' replace' → logprob: -8.198526382446289
    10. ' {' → logprob: -8.198526382446289

Token 165: ' both' (ID: 2973)
  Prédit: '{"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{"' → logprob: -1.1141111850738525
    2. '{
' → logprob: -1.2391111850738525
    3. '{'' → logprob: -1.6141111850738525
    4. ''' → logprob: -2.7391111850738525
    5. '{' → logprob: -2.9891111850738525
    6. '"' → logprob: -3.9891111850738525
    7. ' {'' → logprob: -4.114110946655273
    8. '   ' → logprob: -4.614110946655273
    9. '       ' → logprob: -4.864110946655273
    10. ''ap' → logprob: -5.239110946655273

Token 166: ' ways' (ID: 6984)
  Prédit: ''ap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''ap' → logprob: -0.17268036305904388
    2. '"' → logprob: -2.172680377960205
    3. ''' → logprob: -3.172680377960205
    4. ' '' → logprob: -6.297680377960205
    5. 'apple' → logprob: -8.422679901123047
    6. ' "' → logprob: -8.422679901123047
    7. ''s' → logprob: -8.547679901123047
    8. ''app' → logprob: -9.047679901123047
    9. '   ' → logprob: -10.047679901123047
    10. ''in' → logprob: -10.547679901123047

Token 167: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.020595723763108253
    2. '{
' → logprob: -4.770595550537109
    3. '{' → logprob: -4.895595550537109
    4. ' {' → logprob: -6.520595550537109
    5. 'return' → logprob: -7.395595550537109
    6. ' {'' → logprob: -7.520595550537109
    7. ' return' → logprob: -7.895595550537109
    8. ' {
' → logprob: -8.14559555053711
    9. ' =' → logprob: -8.27059555053711
    10. '{"' → logprob: -8.39559555053711

Token 168: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02588603086769581
    2. '{' → logprob: -4.150886058807373
    3. '{
' → logprob: -5.025886058807373
    4. '{"' → logprob: -6.525886058807373
    5. ' {' → logprob: -7.525886058807373
    6. 'return' → logprob: -7.525886058807373
    7. '{'' → logprob: -8.025885581970215
    8. ' {'' → logprob: -9.400885581970215
    9. 'swap' → logprob: -9.400885581970215
    10. ' return' → logprob: -9.775885581970215

Token 169: ' return' (ID: 622)
  Prédit: 'swap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'swap' → logprob: -0.23221969604492188
    2. '{
' → logprob: -2.232219696044922
    3. '       ' → logprob: -3.107219696044922
    4. 'return' (adapté à ' return') → logprob: -3.982219696044922
    5. '{' → logprob: -4.482219696044922
    6. '{'' → logprob: -4.732219696044922
    7. ' swap' → logprob: -5.107219696044922
    8. 'mapping' → logprob: -5.357219696044922
    9. '{"' → logprob: -6.107219696044922
    10. 'map' → logprob: -6.357219696044922

Token 170: ' Fruit' (ID: 61182)
  Prédit: 'Fruit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Fruit' → logprob: -0.16022473573684692
    2. ' Fruit' → logprob: -1.9102246761322021
    3. 'F' → logprob: -14.910224914550781
    4. ' Fru' → logprob: -16.28522491455078
    5. ' fruit' → logprob: -17.53522491455078
    6. '   ' → logprob: -17.66022491455078
    7. 'Fish' → logprob: -18.28522491455078
    8. ' ' → logprob: -18.66022491455078
    9. 'Food' → logprob: -18.78522491455078
    10. ' ' → logprob: -19.03522491455078

Token 171: 'Word' (ID: 12929)
  Prédit: 'Word'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Word' → logprob: -3.128163257315464e-07
    2. 'Fruit' → logprob: -16.0
    3. 'word' → logprob: -16.625
    4. '_word' → logprob: -17.25
    5. 'World' → logprob: -17.5
    6. 'W' → logprob: -18.125
    7. ' Word' → logprob: -18.375
    8. 'WORD' → logprob: -18.75
    9. 'Words' → logprob: -20.125
    10. '_WORD' → logprob: -20.125

Token 172: 'Sw' (ID: 15254)
  Prédit: 'Sw'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Sw' → logprob: -0.31760862469673157
    2. 'Word' → logprob: -1.3176085948944092
    3. 'Swap' → logprob: -5.442608833312988
    4. 'S' → logprob: -13.442608833312988
    5. 'sw' → logprob: -13.442608833312988
    6. 'Words' → logprob: -13.442608833312988
    7. 'swap' → logprob: -13.567608833312988
    8. 'W' → logprob: -14.067608833312988
    9. 'word' → logprob: -14.067608833312988
    10. 'SW' → logprob: -15.067608833312988

Token 173: 'apper' (ID: 47156)
  Prédit: 'apper'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'apper' → logprob: -0.00016599490481894463
    2. 'ap' → logprob: -8.875165939331055
    3. 'aper' → logprob: -10.875165939331055
    4. 'app' → logprob: -13.500165939331055
    5. 'rapper' → logprob: -13.500165939331055
    6. 'APPER' → logprob: -13.750165939331055
    7. 'opper' → logprob: -14.125165939331055
    8. 'apped' → logprob: -14.625165939331055
    9. 'apter' → logprob: -14.625165939331055
    10. 'appers' → logprob: -15.125165939331055

Token 174: '({
' (ID: 3961)
  Prédit: '({''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '({'' → logprob: -0.6641843318939209
    2. '({' → logprob: -1.164184331893921
    3. '({
' → logprob: -1.914184331893921
    4. '({"' → logprob: -3.664184331893921
    5. '({

' → logprob: -10.9141845703125
    6. '(' → logprob: -11.9141845703125
    7. '({...' → logprob: -12.0391845703125
    8. '   ' → logprob: -12.2891845703125
    9. '({
' → logprob: -12.4141845703125
    10. ' ({
' → logprob: -14.0391845703125

Token 175: '           ' (ID: 352)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.5509716868400574
    2. '   ' → logprob: -1.6759717464447021
    3. '           ' → logprob: -2.050971746444702
    4. '       ' → logprob: -2.550971746444702
    5. '"' → logprob: -4.300971508026123
    6. ''ap' → logprob: -4.800971508026123
    7. ' '' → logprob: -5.050971508026123
    8. ''A' → logprob: -6.550971508026123
    9. ''app' → logprob: -9.425971984863281
    10. ''Ar' → logprob: -10.175971984863281

Token 176: ' '' (ID: 461)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.978988528251648
    2. ''ap' → logprob: -1.103988528251648
    3. ''' (adapté à ' '') → logprob: -1.353988528251648
    4. '       ' → logprob: -4.2289886474609375
    5. '   ' → logprob: -4.6039886474609375
    6. '               ' → logprob: -5.1039886474609375
    7. ' '' → logprob: -5.9789886474609375
    8. '           ' → logprob: -7.3539886474609375
    9. ''app' → logprob: -8.353988647460938
    10. ''A' → logprob: -8.603988647460938

Token 177: 'apple' (ID: 34058)
  Prédit: 'apple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'apple' → logprob: -0.012552625499665737
    2. 'Apple' → logprob: -4.387552738189697
    3. ''ap' → logprob: -10.637552261352539
    4. ''' → logprob: -11.637552261352539
    5. 'ap' → logprob: -12.387552261352539
    6. ' apple' → logprob: -13.262552261352539
    7. '"' → logprob: -13.762552261352539
    8. 'APPLE' → logprob: -13.887552261352539
    9. '   ' → logprob: -14.887552261352539
    10. '.apple' → logprob: -15.012552261352539

Token 178: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.00017565040616318583
    2. ''' → logprob: -8.750175476074219
    3. '':'' → logprob: -11.000175476074219
    4. '":' → logprob: -15.625175476074219
    5. ' ':' → logprob: -15.625175476074219
    6. ':' → logprob: -16.25017547607422
    7. 'apple' → logprob: -17.25017547607422
    8. '',' → logprob: -19.37517547607422
    9. '':
' → logprob: -19.62517547607422
    10. ''
' → logprob: -19.75017547607422

Token 179: ' '' (ID: 461)
  Prédit: ' ''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' '' → logprob: -0.0723687931895256
    2. ''' → logprob: -2.822368860244751
    3. '            ' → logprob: -5.197368621826172
    4. ''ap' → logprob: -5.697368621826172
    5. '           ' → logprob: -6.697368621826172
    6. ''s' → logprob: -9.197368621826172
    7. '       ' → logprob: -10.697368621826172
    8. '        ' → logprob: -10.947368621826172
    9. '               ' → logprob: -11.572368621826172
    10. '          ' → logprob: -11.572368621826172

Token 180: 'pe' (ID: 424)
  Prédit: 'pe'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pe' → logprob: -0.007678911089897156
    2. ''' → logprob: -4.882678985595703
    3. ' peach' → logprob: -9.882678985595703
    4. '   ' → logprob: -12.007678985595703
    5. 'pea' → logprob: -12.507678985595703
    6. 'pear' → logprob: -12.882678985595703
    7. 'p' → logprob: -13.257678985595703
    8. ' pe' → logprob: -13.757678985595703
    9. 'Pe' → logprob: -13.757678985595703
    10. ''p' → logprob: -13.882678985595703

Token 181: 'ach' (ID: 678)
  Prédit: 'ach'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ach' → logprob: -3.2855416066013277e-05
    2. 'a' → logprob: -11.625032424926758
    3. '   ' → logprob: -11.750032424926758
    4. ''' → logprob: -13.375032424926758
    5. '
' → logprob: -13.500032424926758
    6. '"' → logprob: -13.625032424926758
    7. '     ' → logprob: -14.250032424926758
    8. '>' → logprob: -14.375032424926758
    9. '**' → logprob: -14.375032424926758
    10. '  ' → logprob: -14.687532424926758

Token 182: '',
' (ID: 1214)
  Prédit: '','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.6934897899627686
    2. '',
' → logprob: -0.6934897899627686
    3. ''' → logprob: -8.568490028381348
    4. '',
' → logprob: -9.193490028381348
    5. '',

' → logprob: -10.568490028381348
    6. ',' → logprob: -11.318490028381348
    7. 'apple' → logprob: -11.693490028381348
    8. '           ' → logprob: -13.318490028381348
    9. '','' → logprob: -14.068490028381348
    10. '       ' → logprob: -14.318490028381348

Token 183: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05331725999712944
    2. ''' → logprob: -3.1783173084259033
    3. ' '' → logprob: -4.803317070007324
    4. ''ap' → logprob: -6.678317070007324
    5. '            ' → logprob: -7.303317070007324
    6. '          ' → logprob: -10.053317070007324
    7. '       ' → logprob: -10.178317070007324
    8. '   ' → logprob: -11.178317070007324
    9. ''app' → logprob: -11.303317070007324
    10. ''s' → logprob: -11.803317070007324

Token 184: ' '' (ID: 461)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.800499677658081
    2. ' '' → logprob: -1.050499677658081
    3. ''' (adapté à ' '') → logprob: -1.675499677658081
    4. ''ap' → logprob: -4.42549991607666
    5. '            ' → logprob: -6.42549991607666
    6. '          ' → logprob: -9.42549991607666
    7. ' pe' → logprob: -9.80049991607666
    8. ''app' → logprob: -9.80049991607666
    9. '       ' → logprob: -10.42549991607666
    10. ''p' → logprob: -10.67549991607666

Token 185: 'pe' (ID: 424)
  Prédit: 'pe'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pe' → logprob: -0.01116336602717638
    2. ''' → logprob: -4.511163234710693
    3. ' peach' → logprob: -10.011163711547852
    4. 'pear' → logprob: -10.636163711547852
    5. 'p' → logprob: -11.511163711547852
    6. 'pea' → logprob: -11.511163711547852
    7. ' pe' → logprob: -12.011163711547852
    8. ''p' → logprob: -12.386163711547852
    9. ' '' → logprob: -13.011163711547852
    10. 'pee' → logprob: -13.011163711547852

Token 186: 'ach' (ID: 678)
  Prédit: 'ach'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ach' → logprob: -9.221884101862088e-05
    2. '   ' → logprob: -10.375092506408691
    3. 'a' → logprob: -10.750092506408691
    4. ''' → logprob: -11.625092506408691
    5. 'ac' → logprob: -12.875092506408691
    6. '     ' → logprob: -13.125092506408691
    7. ' ' → logprob: -13.250092506408691
    8. '```' → logprob: -13.250092506408691
    9. ' ach' → logprob: -13.250092506408691
    10. '  ' → logprob: -13.562592506408691

Token 187: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -9.829823102336377e-05
    2. ''' → logprob: -9.37509822845459
    3. ':' → logprob: -11.37509822845459
    4. ' ':' → logprob: -13.87509822845459
    5. '':'' → logprob: -14.37509822845459
    6. 'apple' → logprob: -15.25009822845459
    7. '":' → logprob: -15.87509822845459
    8. ''ap' → logprob: -17.875099182128906
    9. ''s' → logprob: -18.125099182128906
    10. '   ' → logprob: -18.375099182128906

Token 188: ' '' (ID: 461)
  Prédit: ' ''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' '' → logprob: -0.41307252645492554
    2. ''ap' → logprob: -1.1630725860595703
    3. ''' → logprob: -3.6630725860595703
    4. ''app' → logprob: -9.41307258605957
    5. ''s' → logprob: -10.28807258605957
    6. ' apple' → logprob: -10.66307258605957
    7. 'apple' → logprob: -10.78807258605957
    8. '"' → logprob: -10.91307258605957
    9. '            ' → logprob: -11.66307258605957
    10. '           ' → logprob: -12.03807258605957

Token 189: 'apple' (ID: 34058)
  Prédit: 'apple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'apple' → logprob: -0.023783903568983078
    2. ''ap' → logprob: -3.7737839221954346
    3. ''' → logprob: -7.8987836837768555
    4. ' apple' → logprob: -8.898783683776855
    5. ''app' → logprob: -10.898783683776855
    6. 'ap' → logprob: -11.648783683776855
    7. ' '' → logprob: -14.023783683776855
    8. 'app' → logprob: -14.148783683776855
    9. '   ' → logprob: -14.773783683776855
    10. ''application' → logprob: -15.273783683776855

Token 190: ''
' (ID: 2207)
  Prédit: ''})'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''})' → logprob: -0.045122552663087845
    2. ''' → logprob: -3.2951226234436035
    3. '       ' → logprob: -5.9201226234436035
    4. '})' → logprob: -6.4201226234436035
    5. ''}' → logprob: -6.4201226234436035
    6. '',
' → logprob: -8.295122146606445
    7. '',' → logprob: -8.420122146606445
    8. '')' → logprob: -8.420122146606445
    9. ''
' → logprob: -8.545122146606445
    10. '   ' → logprob: -9.045122146606445

Token 191: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.048777781426906586
    2. '})' → logprob: -3.0487778186798096
    3. ' })' → logprob: -9.54877758026123
    4. '   ' → logprob: -9.92377758026123
    5. ')' → logprob: -10.29877758026123
    6. ',' → logprob: -10.79877758026123
    7. ',
' → logprob: -12.42377758026123
    8. '});' → logprob: -13.17377758026123
    9. '           ' → logprob: -13.29877758026123
    10. '})
' → logprob: -13.42377758026123

Token 192: ' })

' (ID: 17571)
  Prédit: '})'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '})' → logprob: -0.28219613432884216
    2. '       ' → logprob: -1.5321961641311646
    3. '   ' → logprob: -3.532196044921875
    4. ')' → logprob: -8.032196044921875
    5. ' })' → logprob: -8.407196044921875
    6. '})
' → logprob: -11.532196044921875
    7. '}' → logprob: -12.407196044921875
    8. '           ' → logprob: -13.157196044921875
    9. '});' → logprob: -13.532196044921875
    10. '    ' → logprob: -13.907196044921875

Token 193: 'class' (ID: 1444)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.317671000957489
    2. 'sw' → logprob: -2.817671060562134
    3. 'fruit' → logprob: -2.942671060562134
    4. '<|end|>' → logprob: -3.317671060562134
    5. 'swap' → logprob: -3.692671060562134
    6. 'f' → logprob: -3.692671060562134
    7. '<|end|>' → logprob: -4.192670822143555
    8. 'class' → logprob: -4.192670822143555
    9. 'def' → logprob: -4.317670822143555
    10. '   ' → logprob: -5.067670822143555

Token 194: ' Fruit' (ID: 61182)
  Prédit: ' Fruit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Fruit' → logprob: -0.3595568537712097
    2. ' Banana' → logprob: -1.4845569133758545
    3. ' Orange' → logprob: -3.6095569133758545
    4. ' Pear' → logprob: -4.234556674957275
    5. ' ' → logprob: -5.109556674957275
    6. 'Fruit' → logprob: -5.359556674957275
    7. ' Strawberry' → logprob: -5.859556674957275
    8. ' Vegetable' → logprob: -5.984556674957275
    9. ' Test' → logprob: -6.359556674957275
    10. ' Lemon' → logprob: -6.484556674957275

Token 195: 'Word' (ID: 12929)
  Prédit: 'Word'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Word' → logprob: -0.0018379644025117159
    2. 'Basket' → logprob: -7.251837730407715
    3. 'Sal' → logprob: -9.126837730407715
    4. 'Tree' → logprob: -9.501837730407715
    5. ' Word' → logprob: -9.626837730407715
    6. 'Sentence' → logprob: -9.626837730407715
    7. 'Words' → logprob: -9.876837730407715
    8. 'List' → logprob: -10.064337730407715
    9. 'Pe' → logprob: -10.189337730407715
    10. 'Phrase' → logprob: -10.251837730407715

Token 196: 'Swap' (ID: 48241)
  Prédit: 'Sw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Sw' → logprob: -0.43207070231437683
    2. 'Swap' → logprob: -1.0570707321166992
    3. 'Pe' → logprob: -7.557070732116699
    4. 'Double' → logprob: -7.807070732116699
    5. 'Re' → logprob: -8.6820707321167
    6. 'Reverse' → logprob: -8.8070707321167
    7. 'Multi' → logprob: -8.8070707321167
    8. 'Pair' → logprob: -9.3695707321167
    9. 'Rev' → logprob: -9.6195707321167
    10. 'Switcher' → logprob: -10.0570707321167

Token 197: 'Facade' (ID: 46826)
  Prédit: 'Factory'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Factory' → logprob: -0.5264442563056946
    2. 'per' → logprob: -0.9014442563056946
    3. 'Sw' → logprob: -6.151444435119629
    4. 'er' → logprob: -7.526444435119629
    5. '_factory' → logprob: -8.901444435119629
    6. 'apper' → logprob: -9.276444435119629
    7. 'factory' → logprob: -9.401444435119629
    8. 'Swap' → logprob: -9.401444435119629
    9. 'Mapper' → logprob: -10.401444435119629
    10. 'sw' → logprob: -10.901444435119629

Token 198: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0002338144404347986
    2. ':
' → logprob: -8.37523365020752
    3. ':def' → logprob: -14.00023365020752
    4. ' :' → logprob: -14.12523365020752
    5. '():' → logprob: -14.50023365020752
    6. '(' → logprob: -14.87523365020752
    7. ':

' → logprob: -15.12523365020752
    8. '(F' → logprob: -15.87523365020752
    9. '   ' → logprob: -16.375234603881836
    10. '(object' → logprob: -16.500234603881836

Token 199: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -4.6087021473795176e-05
    2. ' def' → logprob: -10.500045776367188
    3. 'def' → logprob: -11.000045776367188
    4. '    
' → logprob: -14.125045776367188
    5. 'class' → logprob: -14.875045776367188
    6. '
' → logprob: -15.125045776367188
    7. '   ' → logprob: -15.500045776367188
    8. '    ' → logprob: -16.250045776367188
    9. '	def' → logprob: -17.000045776367188
    10. '  ' → logprob: -17.375045776367188

Token 200: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.0018739051884040236
    2. 'def' (adapté à ' def') → logprob: -6.501873970031738
    3. '   ' → logprob: -8.126873970031738
    4. '    ' → logprob: -9.626873970031738
    5. ' @' → logprob: -12.376873970031738
    6. 'class' → logprob: -13.001873970031738
    7. ' ' → logprob: -13.001873970031738
    8. ' class' → logprob: -14.251873970031738
    9. '@' → logprob: -14.501873970031738
    10. '	def' → logprob: -16.126873016357422

Token 201: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.00732193561270833
    2. '__' → logprob: -5.007321834564209
    3. ' def' → logprob: -8.257322311401367
    4. ' init' → logprob: -8.507322311401367
    5. 'init' → logprob: -9.382322311401367
    6. ' create' → logprob: -10.382322311401367
    7. 'def' → logprob: -11.132322311401367
    8. ' ' → logprob: -12.132322311401367
    9. '   ' → logprob: -12.632322311401367
    10. '_init' → logprob: -13.132322311401367

Token 202: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: 0.0
    2. 'ini' → logprob: -17.625
    3. '_init' → logprob: -17.75
    4. ' init' → logprob: -18.125
    5. 'new' → logprob: -18.875
    6. '   ' → logprob: -19.75
    7. 'in' → logprob: -19.875
    8. 'i' → logprob: -20.25
    9. '	init' → logprob: -20.375
    10. '```' → logprob: -20.5

Token 203: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.010008691810071468
    2. '(self' → logprob: -4.635008811950684
    3. '__(
' → logprob: -9.260008811950684
    4. '(' → logprob: -9.510008811950684
    5. 'self' → logprob: -10.135008811950684
    6. '_(' → logprob: -10.885008811950684
    7. ' (' → logprob: -11.260008811950684
    8. '__' → logprob: -12.010008811950684
    9. '   ' → logprob: -13.510008811950684
    10. '>(' → logprob: -14.510008811950684

Token 204: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.005379841662943363
    2. '):
' → logprob: -5.255379676818848
    3. ')' → logprob: -9.755379676818848
    4. '
' → logprob: -10.005379676818848
    5. '       ' → logprob: -11.380379676818848
    6. ' self' → logprob: -11.380379676818848
    7. '   ' → logprob: -11.505379676818848
    8. '):

' → logprob: -12.130379676818848
    9. '(self' → logprob: -13.005379676818848
    10. '):' → logprob: -14.380379676818848

Token 205: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1906086802482605
    2. 'self' → logprob: -2.1906087398529053
    3. '):
' → logprob: -2.9406087398529053
    4. '):' → logprob: -5.690608501434326
    5. '       ' → logprob: -5.940608501434326
    6. ' self' → logprob: -7.190608501434326
    7. '   ' → logprob: -7.190608501434326
    8. '(self' → logprob: -7.315608501434326
    9. ',self' → logprob: -7.940608501434326
    10. ' ,' → logprob: -9.440608978271484

Token 206: '       ' (ID: 309)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.003346443874761462
    2. '   ' → logprob: -6.5033464431762695
    3. '       ' → logprob: -7.0033464431762695
    4. '
' → logprob: -7.2533464431762695
    5. 'swap' → logprob: -8.87834644317627
    6. ' self' → logprob: -10.00334644317627
    7. '```' → logprob: -11.00334644317627
    8. '):
' → logprob: -11.87834644317627
    9. 'pe' → logprob: -12.87834644317627
    10. ')' → logprob: -13.00334644317627

Token 207: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.13950493931770325
    2. '       ' → logprob: -2.139504909515381
    3. ' self' → logprob: -4.389504909515381
    4. '   ' → logprob: -9.639505386352539
    5. '
' → logprob: -11.389505386352539
    6. ' ' → logprob: -12.139505386352539
    7. '           ' → logprob: -12.889505386352539
    8. '	self' → logprob: -13.389505386352539
    9. '(self' → logprob: -13.764505386352539
    10. 'super' → logprob: -13.889505386352539

Token 208: '.sw' (ID: 19635)
  Prédit: '.apple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.apple' → logprob: -0.5646079182624817
    2. '.sw' → logprob: -1.189607858657837
    3. '.swap' → logprob: -2.814607858657837
    4. '._' → logprob: -3.189607858657837
    5. '.factory' → logprob: -3.939607858657837
    6. '.ap' → logprob: -5.314608097076416
    7. 'apple' → logprob: -7.189608097076416
    8. '.app' → logprob: -8.189607620239258
    9. '.pe' → logprob: -8.814607620239258
    10. '.f' → logprob: -9.564607620239258

Token 209: 'apper' (ID: 47156)
  Prédit: 'apper'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'apper' → logprob: -0.5262439846992493
    2. 'appers' → logprob: -0.9012439846992493
    3. 'ap' → logprob: -6.401244163513184
    4. 'app' → logprob: -7.526244163513184
    5. '_' → logprob: -7.901244163513184
    6. '_app' → logprob: -8.901244163513184
    7. 'apping' → logprob: -9.901244163513184
    8. '   ' → logprob: -10.151244163513184
    9. '_ap' → logprob: -10.526244163513184
    10. 'aper' → logprob: -10.651244163513184

Token 210: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759557485580444
    2. '=' → logprob: -0.8259557485580444
    3. 's' → logprob: -11.075955390930176
    4. 'apple' → logprob: -14.700955390930176
    5. '_factory' → logprob: -15.700955390930176
    6. 'Apple' → logprob: -16.075956344604492
    7. '=create' → logprob: -16.200956344604492
    8. '_' → logprob: -16.575956344604492
    9. '   ' → logprob: -17.575956344604492
    10. '＝' → logprob: -17.825956344604492

Token 211: ' Fruit' (ID: 61182)
  Prédit: 'Fruit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Fruit' → logprob: -0.01416350994259119
    2. ' Fruit' → logprob: -4.264163494110107
    3. 'F' → logprob: -17.014163970947266
    4. ' fruit' → logprob: -18.514163970947266
    5. 'Food' → logprob: -18.764163970947266
    6. 'fruit' → logprob: -18.764163970947266
    7. 'Fish' → logprob: -19.889163970947266
    8. '   ' → logprob: -20.264163970947266
    9. ' ' → logprob: -20.514163970947266
    10. 'Apple' → logprob: -21.514163970947266

Token 212: 'Word' (ID: 12929)
  Prédit: 'Word'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Word' → logprob: -5.512236498361744e-07
    2. ' Word' → logprob: -15.625000953674316
    3. 'W' → logprob: -16.25
    4. 'World' → logprob: -16.25
    5. 'word' → logprob: -16.875
    6. 'Words' → logprob: -18.125
    7. '_word' → logprob: -18.375
    8. 'Swap' → logprob: -18.375
    9. 'Way' → logprob: -18.875
    10. 'Apple' → logprob: -19.125

Token 213: 'Swap' (ID: 48241)
  Prédit: 'Swap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Swap' → logprob: -0.0042865038849413395
    2. 'Word' → logprob: -5.504286289215088
    3. 'Sw' → logprob: -8.754286766052246
    4. 'swap' → logprob: -10.129286766052246
    5. ' swap' → logprob: -13.004286766052246
    6. '_swap' → logprob: -13.004286766052246
    7. 'Apple' → logprob: -13.629286766052246
    8. '.swap' → logprob: -14.004286766052246
    9. ' Swap' → logprob: -14.254286766052246
    10. 'Swipe' → logprob: -14.754286766052246

Token 214: 'Factory' (ID: 4870)
  Prédit: 'Sw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Sw' → logprob: -0.2573097050189972
    2. 'Factory' → logprob: -1.5073096752166748
    3. 'Fac' → logprob: -5.882309913635254
    4. 'er' → logprob: -6.882309913635254
    5. 'sw' → logprob: -7.257309913635254
    6. 'Swap' → logprob: -7.757309913635254
    7. 'Facade' → logprob: -8.007309913635254
    8. '   ' → logprob: -10.882309913635254
    9. 'swap' → logprob: -11.132309913635254
    10. 'S' → logprob: -12.382309913635254

Token 215: '.create' (ID: 3916)
  Prédit: '.create'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.create' → logprob: -0.007616679649800062
    2. '.' → logprob: -4.8826165199279785
    3. ' .' → logprob: -12.507616996765137
    4. '().' → logprob: -12.507616996765137
    5. '   ' → logprob: -13.757616996765137
    6. 'create' → logprob: -14.007616996765137
    7. ' ' → logprob: -15.507616996765137
    8. '._' → logprob: -15.757616996765137
    9. '```' → logprob: -15.757616996765137
    10. '(create' → logprob: -16.25761604309082

Token 216: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: 0.0
    2. 'apple' → logprob: -21.75
    3. 'Apple' → logprob: -22.25
    4. '_

' → logprob: -22.875
    5. '_
' → logprob: -23.875
    6. '.apple' → logprob: -24.125
    7. '```' → logprob: -25.0
    8. '_ap' → logprob: -25.375
    9. '_a' → logprob: -25.875
    10. '_app' → logprob: -25.875

Token 217: 'apple' (ID: 34058)
  Prédit: 'apple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'apple' → logprob: -5.1689596148207784e-05
    2. '_' → logprob: -9.875051498413086
    3. 'Apple' → logprob: -16.375051498413086
    4. 'a' → logprob: -16.625051498413086
    5. ' apple' → logprob: -17.500051498413086
    6. '```' → logprob: -17.750051498413086
    7. '.apple' → logprob: -18.000051498413086
    8. 'fruit' → logprob: -18.375051498413086
    9. 'app' → logprob: -18.750051498413086
    10. 'pe' → logprob: -19.125051498413086

Token 218: '_pe' (ID: 76313)
  Prédit: '_pe'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pe' → logprob: -3.128163257315464e-07
    2. 'Pe' → logprob: -15.875
    3. '_p' → logprob: -16.75
    4. '_' → logprob: -17.125
    5. 'pe' → logprob: -17.5
    6. '_po' → logprob: -18.25
    7. '_P' → logprob: -19.125
    8. '_pal' → logprob: -19.5
    9. '_pa' → logprob: -19.625
    10. '_peer' → logprob: -20.5

Token 219: 'ach' (ID: 678)
  Prédit: 'ach'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ach' → logprob: -0.00013250234769657254
    2. 'a' → logprob: -9.62513256072998
    3. 'ac' → logprob: -11.37513256072998
    4. 'arch' → logprob: -11.50013256072998
    5. 'achs' → logprob: -11.75013256072998
    6. '   ' → logprob: -12.56263256072998
    7. '
' → logprob: -13.00013256072998
    8. 'ch' → logprob: -13.00013256072998
    9. '\' → logprob: -13.56263256072998
    10. 'ач' → logprob: -13.75013256072998

Token 220: '_swap' (ID: 103784)
  Prédit: 'sw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sw' → logprob: -0.07043840736150742
    2. '_swap' → logprob: -2.9454383850097656
    3. 'swap' → logprob: -4.195438385009766
    4. '_sw' → logprob: -8.820438385009766
    5. 's' → logprob: -9.695438385009766
    6. 'Sw' → logprob: -9.820438385009766
    7. '_s' → logprob: -10.695438385009766
    8. ' swap' → logprob: -10.945438385009766
    9. '_' → logprob: -11.445438385009766
    10. 'wap' → logprob: -11.570438385009766

Token 221: 'per' (ID: 543)
  Prédit: 'apper'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'apper' → logprob: -0.43282750248908997
    2. 'per' → logprob: -1.6828274726867676
    3. 'er' → logprob: -1.8078274726867676
    4. 'ap' → logprob: -7.557827472686768
    5. 'pper' → logprob: -8.057827949523926
    6. 'ar' → logprob: -8.307827949523926
    7. 'aper' → logprob: -9.057827949523926
    8. 'app' → logprob: -9.682827949523926
    9. 'a' → logprob: -10.057827949523926
    10. '_' → logprob: -10.432827949523926

Token 222: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -2.939851037808694e-05
    2. '()
' → logprob: -10.625029563903809
    3. '()

' → logprob: -12.875029563903809
    4. '(' → logprob: -13.750029563903809
    5. '())' → logprob: -15.250029563903809
    6. '()"' → logprob: -15.500029563903809
    7. ' ()' → logprob: -15.750029563903809
    8. '()`' → logprob: -15.750029563903809
    9. '()]' → logprob: -15.875029563903809
    10. '()</' → logprob: -16.250028610229492

Token 223: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0006950391689315438
    2. 'def' → logprob: -8.00069522857666
    3. ' def' → logprob: -8.50069522857666
    4. '    
' → logprob: -8.87569522857666
    5. '
' → logprob: -11.37569522857666
    6. '<|end|>' → logprob: -13.00069522857666
    7. '        
' → logprob: -13.75069522857666
    8. '  
' → logprob: -15.00069522857666
    9. '  ' → logprob: -15.37569522857666
    10. ' ' → logprob: -15.50069522857666

Token 224: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2521321773529053
    2. '   ' → logprob: -1.5021321773529053
    3. ' def' → logprob: -8.502132415771484
    4. '	def' → logprob: -17.377132415771484
    5. ' ' → logprob: -18.377132415771484
    6. '  ' → logprob: -19.752132415771484
    7. '
' → logprob: -20.127132415771484
    8. 'Def' → logprob: -20.752132415771484
    9. '       ' → logprob: -20.877132415771484
    10. '    
' → logprob: -20.877132415771484

Token 225: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -6.2729995988775045e-06
    2. ' def' → logprob: -12.000006675720215
    3. '   ' → logprob: -18.1250057220459
    4. 'de' → logprob: -22.1250057220459
    5. '	def' → logprob: -22.6250057220459
    6. '
' → logprob: -23.1250057220459
    7. 'Def' → logprob: -24.7500057220459
    8. 'class' → logprob: -25.0000057220459
    9. ' ' → logprob: -25.1250057220459
    10. 'd' → logprob: -25.2500057220459

Token 226: ' process' (ID: 2273)
  Prédit: ' swap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' swap' → logprob: -0.523378849029541
    2. 'swap' → logprob: -0.898378849029541
    3. 'replace' → logprob: -8.648378372192383
    4. ' replace' → logprob: -10.148378372192383
    5. ' get' → logprob: -12.648378372192383
    6. ' process' → logprob: -12.773378372192383
    7. ' def' → logprob: -12.898378372192383
    8. 'process' → logprob: -12.898378372192383
    9. '	swap' → logprob: -12.898378372192383
    10. ' perform' → logprob: -13.023378372192383

Token 227: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.009174268692731857
    2. '(' → logprob: -4.759174346923828
    3. '_text' → logprob: -8.134174346923828
    4. '(text' → logprob: -8.759174346923828
    5. ' (' → logprob: -9.259174346923828
    6. 'text' → logprob: -11.759174346923828
    7. '(
' → logprob: -12.884174346923828
    8. 'self' → logprob: -13.134174346923828
    9. '(s' → logprob: -14.884174346923828
    10. '_(' → logprob: -15.009174346923828

Token 228: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001544321421533823
    2. ',text' → logprob: -9.000154495239258
    3. ' ,' → logprob: -10.500154495239258
    4. 'self' → logprob: -13.000154495239258
    5. 'text' → logprob: -14.000154495239258
    6. '_text' → logprob: -15.250154495239258
    7. ',self' → logprob: -16.750154495239258
    8. '_,' → logprob: -17.875154495239258
    9. ',
' → logprob: -18.000154495239258
    10. '   ' → logprob: -18.125154495239258

Token 229: ' text' (ID: 2201)
  Prédit: ' text'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' text' → logprob: -0.4001215696334839
    2. 'text' → logprob: -1.1501215696334839
    3. ' self' → logprob: -5.025121688842773
    4. 'self' → logprob: -5.025121688842773
    5. '   ' → logprob: -11.775121688842773
    6. ' input' → logprob: -12.775121688842773
    7. '       ' → logprob: -12.900121688842773
    8. 'input' → logprob: -13.025121688842773
    9. '    ' → logprob: -13.275121688842773
    10. 'sentence' → logprob: -13.775121688842773

Token 230: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.003718723077327013
    2. '):
' → logprob: -5.628718852996826
    3. ')' → logprob: -9.378718376159668
    4. '):
' → logprob: -11.253718376159668
    5. '       ' → logprob: -11.753718376159668
    6. '   ' → logprob: -12.253718376159668
    7. ',' → logprob: -12.253718376159668
    8. ':' → logprob: -13.628718376159668
    9. ' ):' → logprob: -13.878718376159668
    10. 'self' → logprob: -14.003718376159668

Token 231: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013209416531026363
    2. ' return' → logprob: -4.513209342956543
    3. 'return' → logprob: -6.138209342956543
    4. '	return' → logprob: -15.763209342956543
    5. '   ' → logprob: -15.888209342956543
    6. '{return' → logprob: -16.38821029663086
    7. '```' → logprob: -16.51321029663086
    8. ' ' → logprob: -17.01321029663086
    9. '      ' → logprob: -17.88821029663086
    10. ':return' → logprob: -18.26321029663086

Token 232: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.5239193439483643
    2. ' return' → logprob: -1.0239193439483643
    3. '       ' → logprob: -3.0239193439483643
    4. '   ' → logprob: -11.648919105529785
    5. '	return' → logprob: -14.273919105529785
    6. 'text' → logprob: -14.773919105529785
    7. ' ' → logprob: -15.648919105529785
    8. '```' → logprob: -15.648919105529785
    9. '{return' → logprob: -17.1489200592041
    10. '
' → logprob: -17.2739200592041

Token 233: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.3132616877555847
    2. 'self' → logprob: -1.3132617473602295
    3. '(self' → logprob: -19.438261032104492
    4. ' ' → logprob: -20.063261032104492
    5. '   ' → logprob: -20.563261032104492
    6. '	self' → logprob: -20.938261032104492
    7. '       ' → logprob: -21.188261032104492
    8. '[self' → logprob: -21.438261032104492
    9. '
' → logprob: -21.938261032104492
    10. ' ' → logprob: -22.688261032104492

Token 234: '.sw' (ID: 19635)
  Prédit: '.sw'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sw' → logprob: -0.0012185708619654179
    2. '.swap' → logprob: -7.251218795776367
    3. 'sw' → logprob: -7.626218795776367
    4. '.snap' → logprob: -11.501218795776367
    5. '.' → logprob: -12.001218795776367
    6. 'Sw' → logprob: -13.751218795776367
    7. '.process' → logprob: -14.626218795776367
    8. ' .' → logprob: -14.751218795776367
    9. '.w' → logprob: -14.876218795776367
    10. '.text' → logprob: -15.251218795776367

Token 235: 'apper' (ID: 47156)
  Prédit: 'apper'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'apper' → logprob: -0.0013367896899580956
    2. 'ap' → logprob: -6.626336574554443
    3. 'aper' → logprob: -12.501337051391602
    4. 'app' → logprob: -12.626337051391602
    5. 'apped' → logprob: -13.376337051391602
    6. 'ап' → logprob: -14.626337051391602
    7. 'APPER' → logprob: -14.876337051391602
    8. 'a' → logprob: -15.251337051391602
    9. 'appear' → logprob: -15.376337051391602
    10. 'apter' → logprob: -15.501337051391602

Token 236: '.swap' (ID: 111356)
  Prédit: '.swap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.swap' → logprob: -4.961759259458631e-06
    2. '.' → logprob: -12.375004768371582
    3. ' .' → logprob: -14.625004768371582
    4. '.sw' → logprob: -15.875004768371582
    5. '.swing' → logprob: -17.7500057220459
    6. 'swap' → logprob: -18.7500057220459
    7. '	swap' → logprob: -19.1250057220459
    8. '.swt' → logprob: -20.3750057220459
    9. ' swap' → logprob: -20.5000057220459
    10. '.flip' → logprob: -20.7500057220459

Token 237: '(text' (ID: 13414)
  Prédit: '(text'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(text' → logprob: -0.00012439649435691535
    2. '(' → logprob: -9.000123977661133
    3. '(txt' → logprob: -15.625123977661133
    4. ' (' → logprob: -15.875123977661133
    5. '(
' → logprob: -16.500123977661133
    6. '{text' → logprob: -16.500123977661133
    7. '(Text' → logprob: -16.750123977661133
    8. 'text' → logprob: -17.000123977661133
    9. ',text' → logprob: -17.000123977661133
    10. '(line' → logprob: -17.375123977661133

Token 238: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -6.704273118884885e-07
    2. ' )' → logprob: -15.000000953674316
    3. '       ' → logprob: -16.125
    4. ')
' → logprob: -16.25
    5. '   ' → logprob: -17.75
    6. '))' → logprob: -18.625
    7. ')`' → logprob: -19.5
    8. '}' → logprob: -19.875
    9. ')}' → logprob: -20.25
    10. ')return' → logprob: -20.375

Token 239: 'if' (ID: 366)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.0934857651591301
    2. 'fruit' → logprob: -3.4684858322143555
    3. 'f' → logprob: -3.8434858322143555
    4. 'text' → logprob: -4.2184858322143555
    5. 'fw' → logprob: -5.3434858322143555
    6. 'if' → logprob: -5.4684858322143555
    7. 'sw' → logprob: -5.7184858322143555
    8. '```' → logprob: -5.9684858322143555
    9. '>>>' → logprob: -6.2184858322143555
    10. 'swap' → logprob: -6.7184858322143555

Token 240: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.0052377874962985516
    2. '__' → logprob: -5.255237579345703
    3. 'name' → logprob: -13.130237579345703
    4. '_name' → logprob: -13.755237579345703
    5. ' ' → logprob: -14.755237579345703
    6. ' ' → logprob: -15.505237579345703
    7. ' name' → logprob: -16.130237579345703
    8. ' True' → logprob: -16.755237579345703
    9. 'Name' → logprob: -17.130237579345703
    10. '___' → logprob: -17.130237579345703

Token 241: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.39072415232658386
    2. ' __' → logprob: -1.1407241821289062
    3. ' ==' → logprob: -5.640724182128906
    4. 'name' → logprob: -8.515724182128906
    5. '==' → logprob: -10.515724182128906
    6. '.__' → logprob: -11.015724182128906
    7. '_name' → logprob: -11.765724182128906
    8. ' if' → logprob: -11.890724182128906
    9. 'if' → logprob: -12.390724182128906
    10. ' ' → logprob: -12.390724182128906

Token 242: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -1.1041145626222715e-05
    2. '==' → logprob: -11.500011444091797
    3. '__.__' → logprob: -14.750011444091797
    4. ' ==' → logprob: -15.125011444091797
    5. '=="' → logprob: -16.625011444091797
    6. ' __' → logprob: -16.750011444091797
    7. '____' → logprob: -17.375011444091797
    8. 'name' → logprob: -18.000011444091797
    9. '___' → logprob: -18.125011444091797
    10. '"' → logprob: -18.875011444091797

Token 243: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.011413480155169964
    2. ' ==' → logprob: -5.13641357421875
    3. '==' → logprob: -5.26141357421875
    4. '=="' → logprob: -8.26141357421875
    5. ' ' → logprob: -11.76141357421875
    6. '__.__' → logprob: -12.26141357421875
    7. '___' → logprob: -13.26141357421875
    8. '_' → logprob: -13.38641357421875
    9. '__":
' → logprob: -13.76141357421875
    10. '=='' → logprob: -13.88641357421875

Token 244: ' '__' (ID: 28278)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.004103573504835367
    2. ''' → logprob: -5.504103660583496
    3. ' "__' → logprob: -10.629103660583496
    4. '__' → logprob: -14.504103660583496
    5. ' '__' → logprob: -15.504103660583496
    6. '"name' → logprob: -16.62910270690918
    7. ''"' → logprob: -17.75410270690918
    8. '"class' → logprob: -18.00410270690918
    9. '("__' → logprob: -18.12910270690918
    10. '"'' → logprob: -18.37910270690918

Token 245: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.003186147892847657
    2. 'name' → logprob: -6.003186225891113
    3. '__' → logprob: -7.253186225891113
    4. 'm' → logprob: -13.128186225891113
    5. ' main' → logprob: -16.003185272216797
    6. '_main' → logprob: -16.753185272216797
    7. '```' → logprob: -16.878185272216797
    8. 'ma' → logprob: -17.003185272216797
    9. 'python' → logprob: -17.128185272216797
    10. '-main' → logprob: -17.503185272216797

Token 246: '__':
' (ID: 39314)
  Prédit: '__':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__':
' → logprob: -0.01815345324575901
    2. '__' → logprob: -4.018153667449951
    3. '__":
' → logprob: -13.393153190612793
    4. '__:' → logprob: -14.018153190612793
    5. '':' → logprob: -14.143153190612793
    6. '_' → logprob: -15.143153190612793
    7. '':
' → logprob: -16.01815414428711
    8. '___' → logprob: -17.39315414428711
    9. ''' → logprob: -17.51815414428711
    10. '__('' → logprob: -18.89315414428711

Token 247: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0011729635298252106
    2. '    
' → logprob: -7.37617301940918
    3. 'import' → logprob: -8.50117301940918
    4. ' text' → logprob: -8.87617301940918
    5. 'text' → logprob: -9.62617301940918
    6. ' import' → logprob: -10.25117301940918
    7. '    ' → logprob: -10.62617301940918
    8. '<|end|>' → logprob: -11.37617301940918
    9. ' input' → logprob: -11.62617301940918
    10. 'input' → logprob: -11.75117301940918

Token 248: ' import' (ID: 1588)
  Prédit: ' facade'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' facade' → logprob: -0.14854544401168823
    2. 'fac' → logprob: -2.148545503616333
    3. 'fw' → logprob: -4.648545265197754
    4. 'f' → logprob: -6.023545265197754
    5. 'import' (adapté à ' import') → logprob: -6.023545265197754
    6. 'text' → logprob: -6.148545265197754
    7. '   ' → logprob: -6.273545265197754
    8. ' text' → logprob: -6.898545265197754
    9. ' fw' → logprob: -7.898545265197754
    10. ' import' → logprob: -8.148545265197754

Token 249: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.008676734752953053
    2. 'sys' → logprob: -4.758676528930664
    3. ' re' → logprob: -9.758676528930664
    4. 're' → logprob: -13.008676528930664
    5. ' ' → logprob: -14.133676528930664
    6. ' unittest' → logprob: -14.508676528930664
    7. '	sys' → logprob: -14.758676528930664
    8. ' argparse' → logprob: -14.883676528930664
    9. '=sys' → logprob: -16.258676528930664
    10. '```' → logprob: -16.258676528930664

Token 250: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0036893896758556366
    2. '    
' → logprob: -6.503689289093018
    3. 'text' → logprob: -7.003689289093018
    4. 'input' → logprob: -7.628689289093018
    5. '
' → logprob: -8.503689765930176
    6. '    ' → logprob: -9.253689765930176
    7. ',' → logprob: -9.253689765930176
    8. ' text' → logprob: -9.378689765930176
    9. 'if' → logprob: -9.628689765930176
    10. 'print' → logprob: -10.128689765930176

Token 251: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012281945906579494
    2. ' text' → logprob: -5.637281894683838
    3. ' if' → logprob: -6.012281894683838
    4. 'text' → logprob: -6.137281894683838
    5. ' input' → logprob: -6.262281894683838
    6. 'input' → logprob: -6.762281894683838
    7. 'if' → logprob: -7.387281894683838
    8. ' for' → logprob: -8.637282371520996
    9. '    
' → logprob: -9.762282371520996
    10. 'for' → logprob: -10.262282371520996

Token 252: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' (adapté à ' input') → logprob: -1.1018620729446411
    2. 'text' → logprob: -1.3518620729446411
    3. 'fac' → logprob: -1.9768620729446411
    4. ' input' → logprob: -2.3518619537353516
    5. '   ' → logprob: -2.6018619537353516
    6. ' text' → logprob: -2.9768619537353516
    7. 'if' → logprob: -4.351861953735352
    8. 'for' → logprob: -4.476861953735352
    9. ' facade' → logprob: -4.476861953735352
    10. 'f' → logprob: -5.101861953735352

Token 253: '_text' (ID: 9118)
  Prédit: '_text'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_text' → logprob: -0.0378415584564209
    2. '_' → logprob: -3.412841558456421
    3. ' =' → logprob: -5.912841796875
    4. '=' → logprob: -7.287841796875
    5. 'text' → logprob: -7.787841796875
    6. '_line' → logprob: -8.162841796875
    7. '_=' → logprob: -10.287841796875
    8. '_txt' → logprob: -10.537841796875
    9. '_string' → logprob: -11.787841796875
    10. '_str' → logprob: -12.287841796875

Token 254: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.201422318816185
    2. '=' → logprob: -1.7014223337173462
    3. ' ' → logprob: -11.701422691345215
    4. '=sys' → logprob: -14.951422691345215
    5. '   ' → logprob: -15.076422691345215
    6. '_' → logprob: -16.9514217376709
    7. '  ' → logprob: -16.9514217376709
    8. ' =
' → logprob: -17.8264217376709
    9. ' ' → logprob: -17.9514217376709
    10. '=input' → logprob: -18.2014217376709

Token 255: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.3871162533760071
    2. 'sys' → logprob: -1.1371161937713623
    3. ''' → logprob: -8.512116432189941
    4. ' '' → logprob: -11.012116432189941
    5. '(sys' → logprob: -12.012116432189941
    6. 'input' → logprob: -12.137116432189941
    7. '	sys' → logprob: -12.512116432189941
    8. '=sys' → logprob: -12.512116432189941
    9. ''s' → logprob: -12.637116432189941
    10. '"' → logprob: -12.762116432189941

Token 256: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.011774166487157345
    2. '.argv' → logprob: -4.511774063110352
    3. '.' → logprob: -7.386774063110352
    4. '.stdout' → logprob: -9.261774063110352
    5. '.stderr' → logprob: -12.761774063110352
    6. '.version' → logprob: -12.761774063110352
    7. '.std' → logprob: -13.386774063110352
    8. '.readline' → logprob: -13.761774063110352
    9. 'stdin' → logprob: -14.511774063110352
    10. '.__' → logprob: -14.636774063110352

Token 257: '.readline' (ID: 74673)
  Prédit: '.read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.read' → logprob: -0.2014971524477005
    2. '.readline' → logprob: -1.701497197151184
    3. 'read' → logprob: -9.451497077941895
    4. '.readlines' → logprob: -12.326497077941895
    5. '.' → logprob: -13.951497077941895
    6. '.Read' → logprob: -18.20149803161621
    7. '_read' → logprob: -18.57649803161621
    8. ' readline' → logprob: -19.07649803161621
    9. ' .' → logprob: -19.45149803161621
    10. 'Read' → logprob: -19.57649803161621

Token 258: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.014169861562550068
    2. '().' → logprob: -4.264169692993164
    3. '()
' → logprob: -13.014169692993164
    4. ' ()' → logprob: -13.389169692993164
    5. '()`' → logprob: -14.139169692993164
    6. '())' → logprob: -14.264169692993164
    7. '(' → logprob: -14.889169692993164
    8. '（）' → logprob: -15.139169692993164
    9. '()

' → logprob: -16.014169692993164
    10. '()(' → logprob: -16.514169692993164

Token 259: 'rstrip' (ID: 180429)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.0485873706638813
    2. 'rstrip' → logprob: -3.0485873222351074
    3. ' strip' → logprob: -16.798587799072266
    4. '_strip' → logprob: -16.923587799072266
    5. 'decode' → logprob: -19.673587799072266
    6. '.rstrip' → logprob: -20.298587799072266
    7. '-strip' → logprob: -20.673587799072266
    8. 'replace' → logprob: -21.048587799072266
    9. 'str' → logprob: -21.298587799072266
    10. '.strip' → logprob: -21.673587799072266

Token 260: '('\' (ID: 24345)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.01429490465670824
    2. '()
' → logprob: -4.2642951011657715
    3. '(' → logprob: -9.764294624328613
    4. '()\' → logprob: -10.139294624328613
    5. '()
' → logprob: -11.264294624328613
    6. '('\' → logprob: -11.264294624328613
    7. '()

' → logprob: -12.764294624328613
    8. '(
' → logprob: -13.389294624328613
    9. '()`' → logprob: -13.514294624328613
    10. ' ()' → logprob: -13.639294624328613

Token 261: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.0206720617134124e-05
    2. '\n' → logprob: -11.50001049041748
    3. ' n' → logprob: -18.750009536743164
    4. 'newline' → logprob: -19.375009536743164
    5. 'r' → logprob: -21.375009536743164
    6. 'ndef' → logprob: -21.750009536743164
    7. '
' → logprob: -22.000009536743164
    8. '\' → logprob: -22.375009536743164
    9. ')' → logprob: -22.500009536743164
    10. 'nl' → logprob: -22.625009536743164

Token 262: '')
' (ID: 2515)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.008648726157844067
    2. ')' → logprob: -4.758648872375488
    3. '')
' → logprob: -10.633648872375488
    4. ''' → logprob: -12.008648872375488
    5. '")' → logprob: -12.758648872375488
    6. ')'' → logprob: -15.258648872375488
    7. ''))' → logprob: -15.508648872375488
    8. '')"' → logprob: -15.508648872375488
    9. ' ')' → logprob: -15.633648872375488
    10. '')

' → logprob: -16.258647918701172

Token 263: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8348669409751892
    2. 'output' → logprob: -0.9598669409751892
    3. 'print' → logprob: -1.834867000579834
    4. 'result' → logprob: -4.334867000579834
    5. ' output' → logprob: -4.834867000579834
    6. ' print' → logprob: -6.334867000579834
    7. 'processed' → logprob: -8.334866523742676
    8. '    
' → logprob: -8.709866523742676
    9. ' result' → logprob: -8.834866523742676
    10. '
' → logprob: -10.334866523742676

Token 264: ' facade' (ID: 110108)
  Prédit: 'fac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fac' → logprob: -0.12326478958129883
    2. 'print' → logprob: -2.998264789581299
    3. ' facade' → logprob: -3.748264789581299
    4. '   ' → logprob: -3.873264789581299
    5. 'output' → logprob: -4.248264789581299
    6. 'fw' → logprob: -6.123264789581299
    7. 'result' → logprob: -6.373264789581299
    8. 'swap' → logprob: -6.748264789581299
    9. 'sw' → logprob: -6.998264789581299
    10. 'fruit' → logprob: -8.12326431274414

Token 265: ' =' (ID: 314)
  Prédit: '.process'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.process' → logprob: -0.09502184391021729
    2. '.' → logprob: -2.4700217247009277
    3. ' =' → logprob: -5.470021724700928
    4. '=' → logprob: -6.345021724700928
    5. '.output' → logprob: -10.595022201538086
    6. 'process' → logprob: -10.845022201538086
    7. ' .' → logprob: -10.970022201538086
    8. '.=' → logprob: -11.720022201538086
    9. '(process' → logprob: -12.595022201538086
    10. '.Process' → logprob: -12.720022201538086

Token 266: ' Fruit' (ID: 61182)
  Prédit: ' Fruit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Fruit' → logprob: -0.5759395956993103
    2. 'Fruit' → logprob: -0.8259395956993103
    3. ' Fru' → logprob: -16.700939178466797
    4. ' fruit' → logprob: -17.450939178466797
    5. ' ' → logprob: -17.825939178466797
    6. ' Fruits' → logprob: -18.200939178466797
    7. ' ' → logprob: -18.575939178466797
    8. 'F' → logprob: -18.825939178466797
    9. 'Food' → logprob: -19.450939178466797
    10. '```' → logprob: -21.075939178466797

Token 267: 'Word' (ID: 12929)
  Prédit: 'Word'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Word' → logprob: -1.2664456789934775e-06
    2. ' Word' → logprob: -14.500000953674316
    3. 'Swap' → logprob: -15.250000953674316
    4. 'Words' → logprob: -15.875000953674316
    5. 'word' → logprob: -16.000001907348633
    6. 'W' → logprob: -16.250001907348633
    7. '_word' → logprob: -16.625001907348633
    8. 'WORD' → logprob: -18.000001907348633
    9. 'World' → logprob: -18.250001907348633
    10. 'Name' → logprob: -18.625001907348633

Token 268: 'Swap' (ID: 48241)
  Prédit: 'Swap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Swap' → logprob: -0.00010151672904612496
    2. 'swap' → logprob: -9.875101089477539
    3. 'Sw' → logprob: -10.250101089477539
    4. '_swap' → logprob: -11.875101089477539
    5. '_SWAP' → logprob: -13.125101089477539
    6. '.swap' → logprob: -13.375101089477539
    7. ' swap' → logprob: -14.000101089477539
    8. ' Swap' → logprob: -14.250101089477539
    9. '	swap' → logprob: -14.625101089477539
    10. 'Facade' → logprob: -14.750101089477539

Token 269: 'Facade' (ID: 46826)
  Prédit: 'Facade'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Facade' → logprob: -1.9862216504407115e-05
    2. 'Fac' → logprob: -11.375020027160645
    3. 'Factory' → logprob: -12.500020027160645
    4. 'Facet' → logprob: -12.500020027160645
    5. '\Fac' → logprob: -15.125020027160645
    6. 'fac' → logprob: -15.750020027160645
    7. ' facade' → logprob: -16.000019073486328
    8. 'er' → logprob: -16.250019073486328
    9. 'Decorator' → logprob: -16.750019073486328
    10. 'F' → logprob: -17.875019073486328

Token 270: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07361690700054169
    2. '
' → logprob: -2.8236169815063477
    3. 'print' → logprob: -4.948616981506348
    4. '    
' → logprob: -5.823616981506348
    5. 'output' → logprob: -7.198616981506348
    6. 'result' → logprob: -7.323616981506348
    7. ' print' → logprob: -10.198616981506348
    8. '<|end|>' → logprob: -11.073616981506348
    9. '  
' → logprob: -11.198616981506348
    10. ' output' → logprob: -11.323616981506348

Token 271: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5776023864746094
    2. 'print' → logprob: -0.8276023864746094
    3. 'output' → logprob: -6.577602386474609
    4. 'result' → logprob: -8.45260238647461
    5. ' print' → logprob: -9.82760238647461
    6. ' output' → logprob: -13.45260238647461
    7. '```' → logprob: -14.45260238647461
    8. '    
' → logprob: -15.07760238647461
    9. 'response' → logprob: -15.32760238647461
    10. '	print' → logprob: -15.45260238647461

Token 272: ' output' (ID: 4733)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.1612364649772644
    2. 'output' (adapté à ' output') → logprob: -1.9112365245819092
    3. 'result' → logprob: -6.91123628616333
    4. ' output' → logprob: -11.911236763000488
    5. ' print' → logprob: -12.036236763000488
    6. 'processed' → logprob: -13.161236763000488
    7. 'out' → logprob: -14.786236763000488
    8. '   ' → logprob: -15.411236763000488
    9. 'converted' → logprob: -17.036235809326172
    10. '    
' → logprob: -17.286235809326172

Token 273: '_text' (ID: 9118)
  Prédit: '_text'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_text' → logprob: -0.08482895791530609
    2. '=' → logprob: -2.8348288536071777
    3. ' =' → logprob: -3.8348288536071777
    4. '_' → logprob: -6.959828853607178
    5. 'text' → logprob: -10.459829330444336
    6. 'Text' → logprob: -11.584829330444336
    7. '_TEXT' → logprob: -12.709829330444336
    8. '_Text' → logprob: -12.959829330444336
    9. '_=' → logprob: -13.459829330444336
    10. '_txt' → logprob: -14.209829330444336

Token 274: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10020678490400314
    2. '=' → logprob: -2.3502068519592285
    3. '=f' → logprob: -17.22520637512207
    4. ' =
' → logprob: -17.47520637512207
    5. ' =)' → logprob: -17.47520637512207
    6. ')' → logprob: -17.97520637512207
    7. '=input' → logprob: -17.97520637512207
    8. '   ' → logprob: -18.60020637512207
    9. ' ' → logprob: -18.85020637512207
    10. '.' → logprob: -19.22520637512207

Token 275: ' facade' (ID: 110108)
  Prédit: 'fac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fac' → logprob: -0.6329789757728577
    2. ' facade' → logprob: -0.7579789757728577
    3. ' fac' → logprob: -8.007979393005371
    4. 'Facade' → logprob: -11.382979393005371
    5. 'facet' → logprob: -11.632979393005371
    6. '_fac' → logprob: -12.132979393005371
    7. '.fac' → logprob: -12.382979393005371
    8. ' fachada' → logprob: -12.632979393005371
    9. ' façade' → logprob: -12.882979393005371
    10. 'f' → logprob: -13.257979393005371

Token 276: '.process' (ID: 28604)
  Prédit: '.process'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.process' → logprob: -4.513339445111342e-05
    2. '.' → logprob: -10.500044822692871
    3. 'process' → logprob: -11.000044822692871
    4. ' .' → logprob: -14.125044822692871
    5. ' process' → logprob: -16.250045776367188
    6. '.
' → logprob: -17.750045776367188
    7. '.swap' → logprob: -18.500045776367188
    8. '	process' → logprob: -19.125045776367188
    9. '   ' → logprob: -20.125045776367188
    10. '.Process' → logprob: -20.375045776367188

Token 277: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0031934010330587626
    2. '(' → logprob: -5.753193378448486
    3. '(output' → logprob: -11.253193855285645
    4. '(
' → logprob: -13.628193855285645
    5. ' (' → logprob: -13.753193855285645
    6. '(open' → logprob: -16.253192901611328
    7. '(inp' → logprob: -16.628192901611328
    8. '(text' → logprob: -16.753192901611328
    9. '(user' → logprob: -17.503192901611328
    10. '(in' → logprob: -17.503192901611328

Token 278: '_text' (ID: 9118)
  Prédit: '_text'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_text' → logprob: -1.6240566083070007e-06
    2. '_' → logprob: -13.750001907348633
    3. 'text' → logprob: -14.625001907348633
    4. '_TEXT' → logprob: -18.375001907348633
    5. '_txt' → logprob: -18.500001907348633
    6. '```' → logprob: -18.625001907348633
    7. '_Text' → logprob: -19.250001907348633
    8. 'Text' → logprob: -19.500001907348633
    9. '_t' → logprob: -19.625001907348633
    10. ')' → logprob: -19.625001907348633

Token 279: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.31328263878822327
    2. ')' → logprob: -1.3132826089859009
    3. ')
' → logprob: -10.81328296661377
    4. ' )
' → logprob: -14.68828296661377
    5. '   ' → logprob: -15.43828296661377
    6. ')

' → logprob: -15.81328296661377
    7. ' )' → logprob: -17.313282012939453
    8. ')`
' → logprob: -17.313282012939453
    9. '),' → logprob: -18.688282012939453
    10. ')`' → logprob: -18.813282012939453

Token 280: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.023341447114944458
    2. '   ' → logprob: -3.773341417312622
    3. '
' → logprob: -9.523341178894043
    4. ' print' → logprob: -10.773341178894043
    5. '```' → logprob: -14.023341178894043
    6. '	print' → logprob: -14.898341178894043
    7. '    
' → logprob: -15.273341178894043
    8. '.print' → logprob: -16.39834213256836
    9. '<|end|>' → logprob: -16.52334213256836
    10. 'import' → logprob: -16.52334213256836

Token 281: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -4.320199877838604e-07
    2. '   ' → logprob: -15.0
    3. ' print' → logprob: -17.0
    4. 'import' → logprob: -20.0
    5. '```' → logprob: -23.25
    6. '	print' → logprob: -23.875
    7. '
' → logprob: -24.5
    8. 'sys' → logprob: -24.625
    9. '#print' → logprob: -25.75
    10. 'printf' → logprob: -25.875

Token 282: '(output' (ID: 22485)
  Prédit: '(output'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(output' → logprob: -9.674858301877975e-05
    2. '(' → logprob: -9.250096321105957
    3. '()' → logprob: -15.625096321105957
    4. '('' → logprob: -15.625096321105957
    5. ' (' → logprob: -16.375097274780273
    6. '(input' → logprob: -16.625097274780273
    7. '(f' → logprob: -18.250097274780273
    8. '(out' → logprob: -18.875097274780273
    9. '((' → logprob: -19.000097274780273
    10. '(outputs' → logprob: -19.125097274780273

Token 283: '_text' (ID: 9118)
  Prédit: '_text'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_text' → logprob: -1.0280383548888494e-06
    2. 'text' → logprob: -14.375000953674316
    3. '_' → logprob: -15.625000953674316
    4. ')_' → logprob: -16.375001907348633
    5. ')' → logprob: -16.625001907348633
    6. '_txt' → logprob: -17.500001907348633
    7. '_tex' → logprob: -17.500001907348633
    8. '_t' → logprob: -18.000001907348633
    9. '_te' → logprob: -18.250001907348633
    10. ' _' → logprob: -19.125001907348633

Token 284: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.320199877838604e-07
    2. ' )' → logprob: -15.5
    3. ')
' → logprob: -17.0
    4. '')' → logprob: -18.0
    5. '()' → logprob: -18.875
    6. '())' → logprob: -19.125
    7. '))' → logprob: -19.625
    8. ')`' → logprob: -19.625
    9. '")' → logprob: -20.375
    10. '`)' → logprob: -20.5


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 282
Tokens correctement prédits (1ère position, stricte): 137
Tokens correctement prédits (1ère position, avec adaptation): 148
Tokens correctement prédits (top 10): 248
Précision stricte (1ère position): 48.58%
Précision adaptée (1ère position): 52.48%
Précision (top 10): 87.94%
================================================================================
