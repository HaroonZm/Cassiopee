================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:04:55
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def main():
    while True:
        line = input()
        if line == "":
            break
        n, m, k = map(int, line.split())
        if n == 0 and m == 0 and k == 0:
            break

        # Initialize list for counts of sums, index from n to n*m
        # counts[s] = number of ways to get sum s
        counts = [0]*(n*m+1)

        # Base case for one die
        for i in range(1, m+1):
            counts[i] = 1

        # For more than 1 die, calculate counts iteratively
        for dice in range(2, n+1):
            new_counts = [0]*(n*m+1)
            for s in range(dice-1, (dice-1)*m+1):
                if counts[s] != 0:
                    for face in range(1, m+1):
                        new_counts[s+face] += counts[s]
            counts = new_counts

        total = m**n
        expected = 0.0
        # sum of spots s runs from n to n*m
        for s in range(n, n*m+1):
            val = s - k
            if val < 1:
                val = 1
            prob = counts[s]/total
            expected += val*prob

        print(expected)

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' main' (ID: 2758)
  → Token d'amorce (pas de prédiction)

Token 2: '():
' (ID: 8595)
  → Token d'amorce (pas de prédiction)

Token 3: '   ' (ID: 271)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\' → logprob: -0.27129265666007996
    2. '\n' → logprob: -1.6462926864624023
    3. '   ' → logprob: -3.8962926864624023
    4. '    
' → logprob: -5.021292686462402
    5. '    ' → logprob: -5.646292686462402
    6. ''' → logprob: -5.896292686462402
    7. '```' → logprob: -6.146292686462402
    8. '(' → logprob: -6.396292686462402
    9. ' 
' → logprob: -6.521292686462402
    10. '\r' → logprob: -6.896292686462402

Token 4: ' while' (ID: 2049)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.7860245108604431
    2. '   ' → logprob: -1.536024570465088
    3. 'pass' → logprob: -2.286024570465088
    4. 'p' → logprob: -2.911024570465088
    5. 'r' → logprob: -2.911024570465088
    6. 'return' → logprob: -3.161024570465088
    7. '#' → logprob: -3.786024570465088
    8. 'a' → logprob: -4.161024570465088
    9. 'i' → logprob: -4.411024570465088
    10. '```' → logprob: -5.411024570465088

Token 5: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.49563348293304443
    2. ' ' → logprob: -0.9956334829330444
    3. '  ' → logprob: -4.245633602142334
    4. ' not' → logprob: -5.995633602142334
    5. '    ' → logprob: -6.370633602142334
    6. ' (' → logprob: -6.995633602142334
    7. 'True' → logprob: -7.245633602142334
    8. '"' → logprob: -8.495633125305176
    9. ' )' → logprob: -8.870633125305176
    10. '<|end|>' → logprob: -9.245633125305176

Token 6: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0010210209293290973
    2. '():' → logprob: -7.501020908355713
    3. ':
' → logprob: -8.626021385192871
    4. '       ' → logprob: -9.126021385192871
    5. '):' → logprob: -10.251021385192871
    6. ' :' → logprob: -10.501021385192871
    7. '(:' → logprob: -10.626021385192871
    8. '`:' → logprob: -10.751021385192871
    9. '```' → logprob: -11.501021385192871
    10. ':**' → logprob: -11.876021385192871

Token 7: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14521589875221252
    2. '        
' → logprob: -2.3952159881591797
    3. '\n' → logprob: -4.64521598815918
    4. '```' → logprob: -4.77021598815918
    5. '\' → logprob: -5.64521598815918
    6. '   ' → logprob: -5.89521598815918
    7. '    ' → logprob: -6.02021598815918
    8. '    
' → logprob: -6.14521598815918
    9. '`' → logprob: -6.14521598815918
    10. '        
        
' → logprob: -6.27021598815918

Token 8: ' line' (ID: 2543)
  Prédit: '    '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '    ' → logprob: -1.2855125665664673
    2. '   ' → logprob: -1.4105125665664673
    3. 'i' → logprob: -1.9105125665664673
    4. ' ' → logprob: -2.6605124473571777
    5. '       ' → logprob: -2.7855124473571777
    6. 'input' → logprob: -3.0355124473571777
    7. 'user' → logprob: -3.5355124473571777
    8. 'pass' → logprob: -4.035512447357178
    9. '        ' → logprob: -4.160512447357178
    10. 'c' → logprob: -4.160512447357178

Token 9: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.029435819014906883
    2. '=' → logprob: -3.654435873031616
    3. 's' → logprob: -6.404435634613037
    4. '.' → logprob: -7.154435634613037
    5. ' ' → logprob: -8.279436111450195
    6. '[:]' → logprob: -8.904436111450195
    7. '_' → logprob: -9.404436111450195
    8. ' s' → logprob: -10.154436111450195
    9. '[' → logprob: -10.529436111450195
    10. ')' → logprob: -10.654436111450195

Token 10: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.16023315489292145
    2. 'input' → logprob: -1.9102331399917603
    3. ' ' → logprob: -12.160233497619629
    4. '=input' → logprob: -13.285233497619629
    5. '   ' → logprob: -14.035233497619629
    6. '(input' → logprob: -15.160233497619629
    7. '<input' → logprob: -15.160233497619629
    8. '	input' → logprob: -16.285232543945312
    9. ' s' → logprob: -17.035232543945312
    10. '    ' → logprob: -17.035232543945312

Token 11: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0048989239148795605
    2. '('' → logprob: -5.629899024963379
    3. '("("' → logprob: -7.254899024963379
    4. ''' → logprob: -7.754899024963379
    5. '()' → logprob: -9.754899024963379
    6. '"' → logprob: -10.379899024963379
    7. '```' → logprob: -10.879899024963379
    8. '`' → logprob: -11.504899024963379
    9. '("")' → logprob: -12.129899024963379
    10. ')' → logprob: -12.504899024963379

Token 12: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01748749054968357
    2. ' if' → logprob: -4.642487525939941
    3. '```' → logprob: -5.767487525939941
    4. '        
' → logprob: -7.142487525939941
    5. 'if' → logprob: -7.267487525939941
    6. '.' → logprob: -7.642487525939941
    7. '        ' → logprob: -8.017487525939941
    8. ' ' → logprob: -8.517487525939941
    9. ''' → logprob: -8.642487525939941
    10. '   ' → logprob: -8.642487525939941

Token 13: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6991280913352966
    2. ' if' → logprob: -1.4491281509399414
    3. 'if' (adapté à ' if') → logprob: -1.5741281509399414
    4. 'i' → logprob: -3.0741281509399414
    5. ' ' → logprob: -5.199128150939941
    6. ' i' → logprob: -5.574128150939941
    7. '        ' → logprob: -5.824128150939941
    8. '```' → logprob: -7.574128150939941
    9. '    ' → logprob: -7.699128150939941
    10. '   ' → logprob: -7.824128150939941

Token 14: ' line' (ID: 2543)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.010623176582157612
    2. ' line' → logprob: -4.635622978210449
    3. ' ' → logprob: -7.510622978210449
    4. 'not' → logprob: -8.13562297821045
    5. 'line' → logprob: -11.01062297821045
    6. ' lines' → logprob: -12.38562297821045
    7. '<|end|>' → logprob: -13.38562297821045
    8. '  ' → logprob: -14.26062297821045
    9. '#line' → logprob: -14.26062297821045
    10. ' len' → logprob: -14.63562297821045

Token 15: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.26109716296195984
    2. '.' → logprob: -1.7610971927642822
    3. ' .' → logprob: -3.6360971927642822
    4. '.startswith' → logprob: -3.6360971927642822
    5. '.strip' → logprob: -6.011096954345703
    6. '==' → logprob: -6.761096954345703
    7. ' ' → logprob: -7.761096954345703
    8. '<|end|>' → logprob: -7.886096954345703
    9. '.endswith' → logprob: -8.386096954345703
    10. '<|end|>' → logprob: -8.636096954345703

Token 16: ' "":
' (ID: 132826)
  Prédit: '""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '""' → logprob: -0.4035791754722595
    2. '"' → logprob: -2.0285792350769043
    3. ' ""' → logprob: -2.4035792350769043
    4. ''' → logprob: -2.7785792350769043
    5. '''' → logprob: -3.1535792350769043
    6. ' ''' → logprob: -5.778579235076904
    7. ' "' → logprob: -6.403579235076904
    8. ' '' → logprob: -8.028578758239746
    9. '"":' → logprob: -9.028578758239746
    10. ' ' → logprob: -10.528578758239746

Token 17: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.013022570870816708
    2. '       ' → logprob: -5.138022422790527
    3. ' break' → logprob: -5.138022422790527
    4. '<|end|>' → logprob: -7.888022422790527
    5. '            ' → logprob: -8.388022422790527
    6. ':' → logprob: -8.888022422790527
    7. 'break' → logprob: -9.263022422790527
    8. '   ' → logprob: -9.388022422790527
    9. '        ' → logprob: -10.013022422790527
    10. '          ' → logprob: -10.138022422790527

Token 18: ' break' (ID: 2338)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09004940837621689
    2. ' break' → logprob: -3.0900495052337646
    3. 'break' (adapté à ' break') → logprob: -3.3400495052337646
    4. '       ' → logprob: -5.3400492668151855
    5. '\n' → logprob: -8.840049743652344
    6. '_break' → logprob: -9.590049743652344
    7. '               ' → logprob: -9.840049743652344
    8. '	break' → logprob: -10.465049743652344
    9. '   ' → logprob: -10.965049743652344
    10. '```' → logprob: -11.215049743652344

Token 19: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012538257986307144
    2. '
' → logprob: -5.137538433074951
    3. '        
' → logprob: -5.762538433074951
    4. '   ' → logprob: -6.887538433074951
    5. '\' → logprob: -7.512538433074951
    6. '\n' → logprob: -7.637538433074951
    7. '    
' → logprob: -7.887538433074951
    8. '<|end|>' → logprob: -8.012537956237793
    9. '    ' → logprob: -8.762537956237793
    10. '' → logprob: -8.887537956237793

Token 20: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.020695921033620834
    2. '
' → logprob: -4.770695686340332
    3. '<|end|>' → logprob: -5.520695686340332
    4. '        
' → logprob: -5.645695686340332
    5. '   ' → logprob: -5.895695686340332
    6. '    
' → logprob: -8.020695686340332
    7. '```' → logprob: -8.020695686340332
    8. '\' → logprob: -8.145695686340332
    9. '\n' → logprob: -8.145695686340332
    10. '    ' → logprob: -9.645695686340332

Token 21: ' n' (ID: 297)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3118635416030884
    2. 'print' → logprob: -1.5618635416030884
    3. ' print' → logprob: -3.811863422393799
    4. '   ' → logprob: -3.936863422393799
    5. ' try' → logprob: -4.686863422393799
    6. 'try' → logprob: -5.436863422393799
    7. 'p' → logprob: -7.436863422393799
    8. '    ' → logprob: -7.936863422393799
    9. ' if' → logprob: -8.061863899230957
    10. '           ' → logprob: -8.311863899230957

Token 22: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08477803319692612
    2. '=' → logprob: -3.084778070449829
    3. ' ' → logprob: -4.08477783203125
    4. 'um' → logprob: -4.95977783203125
    5. 'u' → logprob: -6.08477783203125
    6. ',' → logprob: -6.20977783203125
    7. '.' → logprob: -6.45977783203125
    8. 'umber' → logprob: -6.70977783203125
    9. '   ' → logprob: -6.70977783203125
    10. 'o' → logprob: -7.33477783203125

Token 23: ' m' (ID: 284)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.2900784909725189
    2. 'line' → logprob: -1.6650785207748413
    3. ' ' → logprob: -3.2900784015655518
    4. '=line' → logprob: -5.165078639984131
    5. ' =' → logprob: -5.915078639984131
    6. '"' → logprob: -6.040078639984131
    7. ''' → logprob: -6.290078639984131
    8. ' s' → logprob: -6.415078639984131
    9. 'space' → logprob: -7.040078639984131
    10. '<|end|>' → logprob: -7.040078639984131

Token 24: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01051866915076971
    2. '=' → logprob: -4.635518550872803
    3. ',' → logprob: -7.260518550872803
    4. ' ,' → logprob: -10.385519027709961
    5. ' ' → logprob: -11.010519027709961
    6. '<|end|>' → logprob: -12.135519027709961
    7. ')' → logprob: -12.635519027709961
    8. ' =
' → logprob: -13.760519027709961
    9. '  ' → logprob: -14.135519027709961
    10. '.' → logprob: -15.135519027709961

Token 25: ' k' (ID: 372)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.14899888634681702
    2. ' =' → logprob: -2.523998975753784
    3. ' line' → logprob: -3.148998975753784
    4. 'line' → logprob: -5.398998737335205
    5. '<|end|>' → logprob: -5.898998737335205
    6. '=line' → logprob: -6.273998737335205
    7. '=' → logprob: -6.523998737335205
    8. ' n' → logprob: -7.023998737335205
    9. '<|end|>' → logprob: -7.148998737335205
    10. ' "' → logprob: -7.773998737335205

Token 26: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.011059731245040894
    2. '=' → logprob: -4.511059761047363
    3. ',' → logprob: -11.636059761047363
    4. ' ' → logprob: -13.136059761047363
    5. ' ,' → logprob: -14.761059761047363
    6. ')' → logprob: -15.011059761047363
    7. ' =
' → logprob: -16.261058807373047
    8. '  ' → logprob: -16.511058807373047
    9. '<|end|>' → logprob: -16.511058807373047
    10. ' =)' → logprob: -17.011058807373047

Token 27: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.2528863847255707
    2. ' line' → logprob: -1.502886414527893
    3. 'line' → logprob: -7.6278862953186035
    4. 'map' → logprob: -7.7528862953186035
    5. ' ' → logprob: -11.377886772155762
    6. ' [' → logprob: -11.502886772155762
    7. ' list' → logprob: -12.252886772155762
    8. '[line' → logprob: -12.752886772155762
    9. ' tuple' → logprob: -13.127886772155762
    10. '[' → logprob: -13.502886772155762

Token 28: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.505868136882782
    2. '(int' → logprob: -1.0058681964874268
    3. '(str' → logprob: -3.5058681964874268
    4. '(lambda' → logprob: -6.755867958068848
    5. '(
' → logprob: -10.005867958068848
    6. '(input' → logprob: -10.755867958068848
    7. '(list' → logprob: -11.630867958068848
    8. '(eval' → logprob: -12.005867958068848
    9. '(len' → logprob: -12.505867958068848
    10. ' (' → logprob: -12.630867958068848

Token 29: ',' (ID: 11)
  Prédit: '(line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.1457277238368988
    2. '(input' → logprob: -2.5207276344299316
    3. '(' → logprob: -3.2707276344299316
    4. ',' → logprob: -4.520727634429932
    5. ')' → logprob: -5.395727634429932
    6. ',line' → logprob: -7.145727634429932
    7. ',input' → logprob: -7.145727634429932
    8. '#line' → logprob: -10.89572811126709
    9. '[line' → logprob: -11.02072811126709
    10. 'input' → logprob: -11.14572811126709

Token 30: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.005940532311797142
    2. 'line' → logprob: -5.1309404373168945
    3. '(line' → logprob: -12.505940437316895
    4. ')' → logprob: -12.630940437316895
    5. '	line' → logprob: -12.880940437316895
    6. '[line' → logprob: -14.005940437316895
    7. '#line' → logprob: -14.505940437316895
    8. ' ' → logprob: -15.255940437316895
    9. ' ' → logprob: -15.380940437316895
    10. ' )' → logprob: -15.505940437316895

Token 31: '.split' (ID: 10347)
  Prédit: '.split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.split' → logprob: -0.05705103278160095
    2. '.' → logprob: -3.057050943374634
    3. '.strip' → logprob: -4.807051181793213
    4. '().' → logprob: -9.432050704956055
    5. '.readline' → logprob: -9.557050704956055
    6. '.rstrip' → logprob: -9.557050704956055
    7. ')' → logprob: -10.932050704956055
    8. ' .' → logprob: -11.182050704956055
    9. 'split' → logprob: -14.057050704956055
    10. ').' → logprob: -14.057050704956055

Token 32: '())
' (ID: 4574)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.6980926990509033
    2. '())' → logprob: -0.6980926990509033
    3. '()' → logprob: -5.823092460632324
    4. '("' → logprob: -6.448092460632324
    5. '(' → logprob: -8.698092460632324
    6. '()))' → logprob: -9.323092460632324
    7. ')' → logprob: -9.823092460632324
    8. '(','' → logprob: -10.573092460632324
    9. '("("' → logprob: -10.823092460632324
    10. '())
' → logprob: -11.073092460632324

Token 33: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.196249008178711
    2. '<|end|>' → logprob: -1.321249008178711
    3. ':' → logprob: -2.196249008178711
    4. ' ' → logprob: -2.321249008178711
    5. '\n' → logprob: -2.696249008178711
    6. ')' → logprob: -2.946249008178711
    7. '#' → logprob: -3.946249008178711
    8. ' 
' → logprob: -4.071249008178711
    9. '\' → logprob: -4.571249008178711
    10. ',' → logprob: -4.571249008178711

Token 34: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7812929749488831
    2. ' ' → logprob: -1.1562929153442383
    3. '[' → logprob: -3.6562929153442383
    4. '\' → logprob: -3.9062929153442383
    5. 'n' → logprob: -3.9062929153442383
    6. '   ' → logprob: -4.031292915344238
    7. '\n' → logprob: -4.031292915344238
    8. 'r' → logprob: -4.281292915344238
    9. 'p' → logprob: -4.406292915344238
    10. 'i' → logprob: -4.406292915344238

Token 35: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.0075743235647678375
    2. ' k' → logprob: -5.382574558258057
    3. 'n' → logprob: -6.132574558258057
    4. ' m' → logprob: -7.382574558258057
    5. ' ' → logprob: -9.882574081420898
    6. ' (' → logprob: -10.007574081420898
    7. 'k' → logprob: -10.257574081420898
    8. '(n' → logprob: -11.507574081420898
    9. ' ' → logprob: -12.382574081420898
    10. 'm' → logprob: -12.632574081420898

Token 36: ' ==' (ID: 951)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -1.3367748260498047
    2. ' >' → logprob: -1.7117748260498047
    3. ' <=' → logprob: -1.8367748260498047
    4. ' ==' → logprob: -1.9617748260498047
    5. ' >=' → logprob: -1.9617748260498047
    6. ' ' → logprob: -2.9617748260498047
    7. ' %' → logprob: -3.3367748260498047
    8. '[' → logprob: -4.586774826049805
    9. '>' → logprob: -5.836774826049805
    10. '   ' → logprob: -5.961774826049805

Token 37: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6120310425758362
    2. '0' → logprob: -1.1120309829711914
    3. ' m' → logprob: -2.7370309829711914
    4. 'm' → logprob: -2.9870309829711914
    5. '1' → logprob: -4.862030982971191
    6. ' k' → logprob: -5.737030982971191
    7. 'k' → logprob: -6.112030982971191
    8. '2' → logprob: -8.987030982971191
    9. '3' → logprob: -9.674530982971191
    10. '100' → logprob: -9.737030982971191

Token 38: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0938221737742424
    2. 'm' → logprob: -2.5938222408294678
    3. '1' → logprob: -4.593822002410889
    4. ' ' → logprob: -5.968822002410889
    5. 'k' → logprob: -6.343822002410889
    6. ' m' → logprob: -8.968822479248047
    7. '-' → logprob: -9.468822479248047
    8. '2' → logprob: -10.093822479248047
    9. '100' → logprob: -10.468822479248047
    10. '3' → logprob: -10.718822479248047

Token 39: ' and' (ID: 326)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9755734205245972
    2. ' and' → logprob: -0.9755734205245972
    3. ' or' → logprob: -1.4755734205245972
    4. ' ' → logprob: -4.600573539733887
    5. 'and' → logprob: -5.850573539733887
    6. ' :' → logprob: -6.225573539733887
    7. '<|end|>' → logprob: -6.225573539733887
    8. '  ' → logprob: -8.975573539733887
    9. '   ' → logprob: -9.475573539733887
    10. '       ' → logprob: -10.225573539733887

Token 40: ' m' (ID: 284)
  Prédit: ' m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.012313034385442734
    2. ' ' → logprob: -4.512312889099121
    3. 'm' → logprob: -6.887312889099121
    4. '<|end|>' → logprob: -8.512312889099121
    5. ' ' → logprob: -11.012312889099121
    6. ' n' → logprob: -11.637312889099121
    7. '  ' → logprob: -12.262312889099121
    8. '<|end|>' → logprob: -12.262312889099121
    9. '	m' → logprob: -12.762312889099121
    10. ' ‌' → logprob: -14.262312889099121

Token 41: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.005091799423098564
    2. '==' → logprob: -5.380091667175293
    3. '<|end|>' → logprob: -7.755091667175293
    4. ' ' → logprob: -10.505091667175293
    5. '<|end|>' → logprob: -12.130091667175293
    6. ' =' → logprob: -12.255091667175293
    7. ' and' → logprob: -13.130091667175293
    8. '  ' → logprob: -14.130091667175293
    9. ' ===' → logprob: -14.630091667175293
    10. '0' → logprob: -14.755091667175293

Token 42: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.38691291213035583
    2. ' ' → logprob: -1.1369129419326782
    3. ' k' → logprob: -10.761913299560547
    4. 'k' → logprob: -11.011913299560547
    5. ' and' → logprob: -13.011913299560547
    6. '  ' → logprob: -14.699413299560547
    7. 'and' → logprob: -15.011913299560547
    8. ' ' → logprob: -15.261913299560547
    9. '<|end|>' → logprob: -15.261913299560547
    10. '   ' → logprob: -16.074413299560547

Token 43: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.011050177738070488
    2. ' ' → logprob: -4.511050224304199
    3. ' and' → logprob: -14.6360502243042
    4. '<|end|>' → logprob: -14.6360502243042
    5. 'and' → logprob: -14.7610502243042
    6. 'k' → logprob: -15.1985502243042
    7. '  ' → logprob: -15.5110502243042
    8. '   ' → logprob: -16.386049270629883
    9. ' ' → logprob: -16.448549270629883
    10. ' k' → logprob: -16.636049270629883

Token 44: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.004439136013388634
    2. 'and' → logprob: -5.504439353942871
    3. '<|end|>' → logprob: -8.004439353942871
    4. '<|end|>' → logprob: -11.379439353942871
    5. ' ' → logprob: -11.504439353942871
    6. '	and' → logprob: -12.629439353942871
    7. ' ' → logprob: -15.379439353942871
    8. ' и' → logprob: -15.504439353942871
    9. ':' → logprob: -15.504439353942871
    10. '0' → logprob: -15.879439353942871

Token 45: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.0002776630863081664
    2. 'k' → logprob: -8.250277519226074
    3. ' ' → logprob: -11.625277519226074
    4. ' ' → logprob: -12.250277519226074
    5. '<|end|>' → logprob: -13.125277519226074
    6. '	k' → logprob: -15.375277519226074
    7. '  ' → logprob: -15.875277519226074
    8. '<|end|>' → logprob: -16.00027847290039
    9. '0' → logprob: -16.50027847290039
    10. ' ' → logprob: -17.00027847290039

Token 46: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.018656115978956223
    2. '==' → logprob: -4.018656253814697
    3. '<|end|>' → logprob: -8.143655776977539
    4. ' ' → logprob: -9.143655776977539
    5. '0' → logprob: -10.518655776977539
    6. '<|end|>' → logprob: -10.893655776977539
    7. ' ' → logprob: -11.018655776977539
    8. ' =' → logprob: -11.268655776977539
    9. ')' → logprob: -11.768655776977539
    10. '=' → logprob: -11.893655776977539

Token 47: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0788937583565712
    2. ' ' → logprob: -2.5788936614990234
    3. '1' → logprob: -13.578893661499023
    4. '  ' → logprob: -13.703893661499023
    5. '   ' → logprob: -14.203893661499023
    6. '<|end|>' → logprob: -15.953893661499023
    7. ' ' → logprob: -16.453893661499023
    8. '<|end|>' → logprob: -16.703893661499023
    9. '```' → logprob: -16.891393661499023
    10. '۰' → logprob: -17.078893661499023

Token 48: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.001171056181192398
    2. ' ' → logprob: -6.751171112060547
    3. '-' → logprob: -15.251171112060547
    4. '  ' → logprob: -15.501171112060547
    5. '1' → logprob: -16.188671112060547
    6. '   ' → logprob: -16.376171112060547
    7. ' -' → logprob: -16.751171112060547
    8. '۰' → logprob: -17.563671112060547
    9. '```' → logprob: -17.876171112060547
    10. '<|end|>' → logprob: -18.376171112060547

Token 49: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -8.423219696851447e-05
    2. ':
' → logprob: -9.625083923339844
    3. '       ' → logprob: -11.875083923339844
    4. ' :' → logprob: -12.250083923339844
    5. ':return' → logprob: -12.625083923339844
    6. '):' → logprob: -13.750083923339844
    7. '           ' → logprob: -14.000083923339844
    8. '   ' → logprob: -14.625083923339844
    9. ':**' → logprob: -15.250083923339844
    10. '<|end|>' → logprob: -15.500083923339844

Token 50: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.14394637942314148
    2. ':' → logprob: -2.018946409225464
    3. '       ' → logprob: -7.018946170806885
    4. ':
' → logprob: -8.643946647644043
    5. '\n' → logprob: -9.393946647644043
    6. '<|end|>' → logprob: -10.518946647644043
    7. '		' → logprob: -11.143946647644043
    8. '   ' → logprob: -11.268946647644043
    9. '               ' → logprob: -11.393946647644043
    10. '\' → logprob: -11.893946647644043

Token 51: ' break' (ID: 2338)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05011602118611336
    2. ' break' → logprob: -3.0501160621643066
    3. '               ' → logprob: -7.050116062164307
    4. 'break' (adapté à ' break') → logprob: -7.675116062164307
    5. '```' → logprob: -9.800115585327148
    6. '       ' → logprob: -9.925115585327148
    7. '   ' → logprob: -10.675115585327148
    8. ' ' → logprob: -11.175115585327148
    9. '	break' → logprob: -11.425115585327148
    10. ' return' → logprob: -11.675115585327148

Token 52: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2505073845386505
    2. '       ' → logprob: -1.8755073547363281
    3. '        
' → logprob: -3.375507354736328
    4. '\n' → logprob: -4.125507354736328
    5. '<|end|>' → logprob: -4.875507354736328
    6. '\' → logprob: -6.000507354736328
    7. '    
' → logprob: -6.000507354736328
    8. '   ' → logprob: -7.000507354736328
    9. '' → logprob: -7.125507354736328
    10. ' 
' → logprob: -7.250507354736328

Token 53: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5189648270606995
    2. '       ' → logprob: -1.0189647674560547
    3. '        
' → logprob: -4.268964767456055
    4. '<|end|>' → logprob: -4.643964767456055
    5. '```' → logprob: -5.268964767456055
    6. '   ' → logprob: -5.768964767456055
    7. '\' → logprob: -5.893964767456055
    8. '\n' → logprob: -6.143964767456055
    9. ' 
' → logprob: -6.393964767456055
    10. '' → logprob: -7.018964767456055

Token 54: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9296845197677612
    2. 'result' → logprob: -1.6796845197677612
    3. 'r' → logprob: -3.304684638977051
    4. 's' → logprob: -3.304684638977051
    5. 'grid' → logprob: -3.304684638977051
    6. 't' → logprob: -3.429684638977051
    7. 'count' → logprob: -3.429684638977051
    8. 'if' → logprob: -3.554684638977051
    9. '#' (adapté à ' #') → logprob: -3.929684638977051
    10. 'dp' → logprob: -3.929684638977051

Token 55: ' Initialize' (ID: 19496)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6687628030776978
    2. '       ' → logprob: -2.293762683868408
    3. 'result' → logprob: -2.793762683868408
    4. ' #' → logprob: -3.168762683868408
    5. '        ' → logprob: -3.418762683868408
    6. '#' → logprob: -3.668762683868408
    7. ' result' → logprob: -3.668762683868408
    8. 'count' → logprob: -4.043762683868408
    9. ' pass' → logprob: -4.043762683868408
    10. ' continue' → logprob: -4.293762683868408

Token 56: ' list' (ID: 1562)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.7173965573310852
    2. '       ' → logprob: -1.8423964977264404
    3. '<|end|>' → logprob: -2.4673964977264404
    4. ' n' → logprob: -2.5923964977264404
    5. ' ' → logprob: -2.8423964977264404
    6. 'matrix' → logprob: -3.5923964977264404
    7. ' matrix' → logprob: -3.9673964977264404
    8. '        ' → logprob: -4.4673967361450195
    9. '```' → logprob: -4.5923967361450195
    10. '   ' → logprob: -5.2173967361450195

Token 57: ' for' (ID: 395)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.11315301060676575
    2. '<|end|>' → logprob: -3.2381529808044434
    3. '[' → logprob: -3.4881529808044434
    4. ' of' → logprob: -3.9881529808044434
    5. '(s' → logprob: -5.238152980804443
    6. '       ' → logprob: -5.738152980804443
    7. ' s' → logprob: -5.988152980804443
    8. '<|end|>' → logprob: -6.488152980804443
    9. '[]' → logprob: -7.363152980804443
    10. '```' → logprob: -7.488152980804443

Token 58: ' counts' (ID: 28991)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.8874718546867371
    2. ' dp' → logprob: -1.3874719142913818
    3. ' seats' → logprob: -4.012471675872803
    4. ' counts' → logprob: -4.449971675872803
    5. ' distances' → logprob: -4.574971675872803
    6. ' edges' → logprob: -4.699971675872803
    7. 'results' → logprob: -4.887471675872803
    8. ' results' → logprob: -4.887471675872803
    9. 'coins' → logprob: -5.012471675872803
    10. 'counts' → logprob: -5.012471675872803

Token 59: ' of' (ID: 328)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.49494749307632446
    2. '<|end|>' → logprob: -2.1199474334716797
    3. '[' → logprob: -2.2449474334716797
    4. 'n' → logprob: -3.1199474334716797
    5. 's' → logprob: -3.2449474334716797
    6. '   ' → logprob: -4.36994743347168
    7. '#' → logprob: -4.86994743347168
    8. '```' → logprob: -4.99494743347168
    9. ',' → logprob: -5.11994743347168
    10. '_' → logprob: -5.36994743347168

Token 60: ' sums' (ID: 73121)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -2.591050148010254
    2. ' each' → logprob: -3.153550148010254
    3. 'each' → logprob: -3.466050148010254
    4. ' the' → logprob: -4.153550148010254
    5. ' '' → logprob: -4.216050148010254
    6. ''s' → logprob: -4.341050148010254
    7. '1' → logprob: -4.466050148010254
    8. '0' → logprob: -4.591050148010254
    9. ' all' → logprob: -4.716050148010254
    10. ' ways' → logprob: -4.716050148010254

Token 61: ',' (ID: 11)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.9525467157363892
    2. '[' → logprob: -1.2025467157363892
    3. ' =' → logprob: -2.8275465965270996
    4. '_' → logprob: -3.0775465965270996
    5. ' ' → logprob: -3.2025465965270996
    6. '=' → logprob: -3.4525465965270996
    7. '       ' → logprob: -3.5775465965270996
    8. ',' → logprob: -4.0775465965271
    9. '   ' → logprob: -4.2025465965271
    10. '<|end|>' → logprob: -4.2025465965271

Token 62: ' index' (ID: 3472)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.332440972328186
    2. ' ' → logprob: -1.832440972328186
    3. ' counts' → logprob: -2.5824408531188965
    4. 's' → logprob: -2.7074408531188965
    5. ' [' → logprob: -3.0824408531188965
    6. '        ' → logprob: -3.3324408531188965
    7. ' with' → logprob: -3.4574408531188965
    8. '0' → logprob: -3.5824408531188965
    9. ' and' → logprob: -3.7074408531188965
    10. ' sums' → logprob: -3.9574408531188965

Token 63: ' from' (ID: 591)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5671008229255676
    2. '=' → logprob: -1.5671007633209229
    3. ' ' → logprob: -1.6921007633209229
    4. '0' → logprob: -3.942100763320923
    5. 's' → logprob: -4.192101001739502
    6. 'es' → logprob: -6.442101001739502
    7. '[' → logprob: -6.817101001739502
    8. '_' → logprob: -7.192101001739502
    9. '<|end|>' → logprob: -8.317100524902344
    10. ' s' → logprob: -8.567100524902344

Token 64: ' n' (ID: 297)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.682083010673523
    2. '0' → logprob: -0.807083010673523
    3. '2' → logprob: -3.8070831298828125
    4. '3' → logprob: -4.3070831298828125
    5. '1' → logprob: -4.8070831298828125
    6. ' k' → logprob: -6.0570831298828125
    7. ' n' → logprob: -6.9320831298828125
    8. 'k' → logprob: -7.5570831298828125
    9. '    ' → logprob: -8.807083129882812
    10. 'n' → logprob: -9.432083129882812

Token 65: ' to' (ID: 316)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7557578682899475
    2. '[' → logprob: -1.0057578086853027
    3. ' ' → logprob: -2.7557578086853027
    4. ' =' → logprob: -3.7557578086853027
    5. '       ' → logprob: -4.005757808685303
    6. ' _' → logprob: -4.380757808685303
    7. 's' → logprob: -4.880757808685303
    8. '=' → logprob: -4.880757808685303
    9. '   ' → logprob: -5.505757808685303
    10. '```' → logprob: -5.630757808685303

Token 66: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.7247642278671265
    2. ' n' → logprob: -0.7247642278671265
    3. 'm' → logprob: -4.099764347076416
    4. ' m' → logprob: -5.099764347076416
    5. '(n' → logprob: -5.849764347076416
    6. '3' → logprob: -6.099764347076416
    7. ' ' → logprob: -6.724764347076416
    8. ' (' → logprob: -7.599764347076416
    9. 'k' → logprob: -8.099763870239258
    10. 'nk' → logprob: -8.349763870239258

Token 67: '*m' (ID: 85049)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -1.1078872680664062
    2. '+m' → logprob: -1.4828872680664062
    3. '+k' → logprob: -1.4828872680664062
    4. '+' → logprob: -2.1078872680664062
    5. '+n' → logprob: -3.6078872680664062
    6. '*' → logprob: -3.9828872680664062
    7. 'm' → logprob: -4.607887268066406
    8. ' *' → logprob: -4.732887268066406
    9. ' ' → logprob: -4.732887268066406
    10. '*m' → logprob: -5.607887268066406

Token 68: '
' (ID: 198)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.9153378009796143
    2. '       ' → logprob: -1.4153378009796143
    3. '[' → logprob: -2.6653378009796143
    4. 'counts' → logprob: -2.9153378009796143
    5. ' counts' → logprob: -2.9153378009796143
    6. '```' → logprob: -3.7903378009796143
    7. ',' → logprob: -3.7903378009796143
    8. '   ' → logprob: -4.040337562561035
    9. '\' → logprob: -4.290337562561035
    10. 'count' → logprob: -4.415337562561035

Token 69: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7323335409164429
    2. 's' → logprob: -1.7323335409164429
    3. ' ' → logprob: -2.6073336601257324
    4. 'c' → logprob: -2.8573336601257324
    5. '\' → logprob: -2.9823336601257324
    6. 'n' → logprob: -3.9823336601257324
    7. ' counts' → logprob: -3.9823336601257324
    8. ' 
' → logprob: -4.107333660125732
    9. ',' → logprob: -4.232333660125732
    10. '        
' → logprob: -4.357333660125732

Token 70: ' #' (ID: 1069)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.271602749824524
    2. ' counts' → logprob: -1.396602749824524
    3. 'counts' → logprob: -1.771602749824524
    4. 'c' → logprob: -2.0216026306152344
    5. '       ' → logprob: -2.5216026306152344
    6. 'count' → logprob: -3.8966026306152344
    7. ' s' → logprob: -4.271602630615234
    8. ' c' → logprob: -4.646602630615234
    9. 'sum' → logprob: -4.771602630615234
    10. '        ' → logprob: -4.896602630615234

Token 71: ' counts' (ID: 28991)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -1.193843960762024
    2. 's' → logprob: -1.568843960762024
    3. ' counts' → logprob: -1.693843960762024
    4. '       ' → logprob: -2.5688438415527344
    5. 'counts' → logprob: -2.5688438415527344
    6. ' c' → logprob: -3.0688438415527344
    7. 'count' → logprob: -3.6938438415527344
    8. ' s' → logprob: -3.8188438415527344
    9. ' ' → logprob: -4.443843841552734
    10. '        ' → logprob: -4.818843841552734

Token 72: '[s' (ID: 24177)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.033975306898355484
    2. '=' → logprob: -3.53397536277771
    3. '[' → logprob: -5.533975124359131
    4. ' ' → logprob: -8.783975601196289
    5. '_' → logprob: -10.783975601196289
    6. ')' → logprob: -11.283975601196289
    7. '[]' → logprob: -11.783975601196289
    8. '```' → logprob: -11.783975601196289
    9. '=[]' → logprob: -11.908975601196289
    10. '=[' → logprob: -12.033975601196289

Token 73: ']' (ID: 60)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.9501779079437256
    2. 'um' → logprob: -1.3251779079437256
    3. ']' → logprob: -1.8251779079437256
    4. '[' → logprob: -2.4501779079437256
    5. 'ums' → logprob: -2.7001779079437256
    6. '[u' → logprob: -4.450178146362305
    7. ' ]' → logprob: -5.575178146362305
    8. '[i' → logprob: -6.075178146362305
    9. 'o' → logprob: -6.075178146362305
    10. '[]' → logprob: -6.950178146362305

Token 74: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07026106864213943
    2. '[' → logprob: -3.070261001586914
    3. '=' → logprob: -4.070261001586914
    4. ' +=' → logprob: -6.570261001586914
    5. ' ' → logprob: -6.695261001586914
    6. '[s' → logprob: -7.820261001586914
    7. ']' → logprob: -8.320261001586914
    8. 's' → logprob: -9.320261001586914
    9. '[]' → logprob: -9.320261001586914
    10. ' [' → logprob: -9.320261001586914

Token 75: ' number' (ID: 2086)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.25293397903442383
    2. ' ' → logprob: -1.5029339790344238
    3. ' number' → logprob: -7.502933979034424
    4. ' counts' → logprob: -9.252933502197266
    5. 'number' → logprob: -9.252933502197266
    6. 's' → logprob: -10.002933502197266
    7. ' s' → logprob: -10.252933502197266
    8. 'count' → logprob: -10.502933502197266
    9. ' the' → logprob: -10.627933502197266
    10. 'counts' → logprob: -10.877933502197266

Token 76: ' of' (ID: 328)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6280139088630676
    2. '_' → logprob: -1.0030138492584229
    3. ' ' → logprob: -3.003013849258423
    4. 's' → logprob: -3.628013849258423
    5. ' =' → logprob: -5.003014087677002
    6. '<|end|>' → logprob: -5.753014087677002
    7. '[]' → logprob: -6.128014087677002
    8. '(' → logprob: -6.378014087677002
    9. '       ' → logprob: -6.628014087677002
    10. '=' → logprob: -6.753014087677002

Token 77: ' ways' (ID: 6984)
  Prédit: ' ways'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ways' → logprob: -0.08210425823926926
    2. 'ways' → logprob: -2.957104206085205
    3. ' s' → logprob: -4.582104206085205
    4. 'dice' → logprob: -5.082104206085205
    5. ' dice' → logprob: -6.207104206085205
    6. 'possible' → logprob: -6.332104206085205
    7. 's' → logprob: -6.582104206085205
    8. 'com' → logprob: -6.707104206085205
    9. ' sequences' → logprob: -7.082104206085205
    10. ' possible' → logprob: -7.082104206085205

Token 78: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.06089484319090843
    2. ' ' → logprob: -3.435894727706909
    3. '<|end|>' → logprob: -4.185894966125488
    4. 'to' → logprob: -5.060894966125488
    5. ' =' → logprob: -6.810894966125488
    6. ' s' → logprob: -7.060894966125488
    7. '        ' → logprob: -7.435894966125488
    8. '[' → logprob: -7.560894966125488
    9. '       ' → logprob: -7.685894966125488
    10. '=' → logprob: -8.060894966125488

Token 79: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.8335409760475159
    2. 'ob' → logprob: -1.458540916442871
    3. 'ach' → logprob: -1.708540916442871
    4. ' get' → logprob: -2.708540916442871
    5. 'roll' → logprob: -3.333540916442871
    6. ' obtain' → logprob: -4.458540916442871
    7. 's' → logprob: -4.958540916442871
    8. ' achieve' → logprob: -5.208540916442871
    9. ' roll' → logprob: -5.333540916442871
    10. 'make' → logprob: -5.708540916442871

Token 80: ' sum' (ID: 4215)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.025059174746274948
    2. 's' → logprob: -3.775059223175049
    3. ' a' → logprob: -7.400059223175049
    4. ' sum' → logprob: -7.525059223175049
    5. ' the' → logprob: -7.775059223175049
    6. 'sum' → logprob: -9.27505874633789
    7. ' sums' → logprob: -10.02505874633789
    8. ' to' → logprob: -11.15005874633789
    9. '<|end|>' → logprob: -11.27505874633789
    10. ' ' → logprob: -11.27505874633789

Token 81: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -1.1094119548797607
    2. '<|end|>' → logprob: -1.2344119548797607
    3. ' ' → logprob: -1.3594119548797607
    4. 's' → logprob: -2.6094119548797607
    5. ' =' → logprob: -3.8594119548797607
    6. '_' → logprob: -5.23441219329834
    7. '=' → logprob: -5.35941219329834
    8. '(s' → logprob: -5.48441219329834
    9. ' _' → logprob: -5.60941219329834
    10. '[' → logprob: -6.48441219329834

Token 82: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.27541905641555786
    2. ' ' → logprob: -2.275418996810913
    3. '        ' → logprob: -2.900418996810913
    4. 'n' → logprob: -4.400419235229492
    5. '<|end|>' → logprob: -4.525419235229492
    6. '        
' → logprob: -4.775419235229492
    7. ',' → logprob: -4.900419235229492
    8. '\' → logprob: -5.275419235229492
    9. '```' → logprob: -5.650419235229492
    10. '   ' → logprob: -5.775419235229492

Token 83: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14795485138893127
    2. ' counts' → logprob: -2.7729549407958984
    3. 'counts' → logprob: -3.3979549407958984
    4. '   ' → logprob: -4.272954940795898
    5. '```' → logprob: -5.147954940795898
    6. '
' → logprob: -5.397954940795898
    7. ' ' → logprob: -5.647954940795898
    8. '        
' → logprob: -5.772954940795898
    9. 'count' → logprob: -6.522954940795898
    10. 'n' → logprob: -6.647954940795898

Token 84: ' counts' (ID: 28991)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9875202178955078
    2. 'counts' (adapté à ' counts') → logprob: -1.2375202178955078
    3. 'c' → logprob: -1.9875202178955078
    4. ' counts' → logprob: -2.112520217895508
    5. 'count' → logprob: -3.862520217895508
    6. ' ' → logprob: -4.112520217895508
    7. '   ' → logprob: -4.237520217895508
    8. 'n' → logprob: -4.737520217895508
    9. '    ' → logprob: -5.737520217895508
    10. ' 
' → logprob: -6.112520217895508

Token 85: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0027619602624326944
    2. '=' → logprob: -6.0027618408203125
    3. '[' → logprob: -8.252761840820312
    4. ' =[' → logprob: -11.627761840820312
    5. 's' → logprob: -12.377761840820312
    6. ' ' → logprob: -12.377761840820312
    7. '[:]' → logprob: -13.502761840820312
    8. '<|end|>' → logprob: -14.002761840820312
    9. '.' → logprob: -14.127761840820312
    10. '=[]' → logprob: -14.502761840820312

Token 86: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5234987139701843
    2. ' [' → logprob: -0.8984987139701843
    3. '[n' → logprob: -8.14849853515625
    4. '{' → logprob: -10.77349853515625
    5. '[int' → logprob: -11.27349853515625
    6. '[count' → logprob: -11.39849853515625
    7. ' ' → logprob: -12.02349853515625
    8. '[m' → logprob: -12.02349853515625
    9. '   ' → logprob: -12.77349853515625
    10. '{}' → logprob: -12.89849853515625

Token 87: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0015250948490574956
    2. '1' → logprob: -6.876524925231934
    3. ' ' → logprob: -7.626524925231934
    4. '(' → logprob: -13.126524925231934
    5. '[' → logprob: -14.126524925231934
    6. ']' → logprob: -14.564024925231934
    7. '   ' → logprob: -15.251524925231934
    8. '```' → logprob: -15.689024925231934
    9. ' [' → logprob: -15.876524925231934
    10. '+' → logprob: -15.876524925231934

Token 88: ']*(' (ID: 92627)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.2381821721792221
    2. ' ]' → logprob: -1.8631821870803833
    3. ' for' → logprob: -3.4881820678710938
    4. ']*(' → logprob: -3.8631820678710938
    5. ']*' → logprob: -6.113182067871094
    6. ' *' → logprob: -6.738182067871094
    7. ' ' → logprob: -6.863182067871094
    8. 'for' → logprob: -8.113182067871094
    9. '*' → logprob: -9.113182067871094
    10. '<|end|>' → logprob: -9.238182067871094

Token 89: 'n' (ID: 77)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.16347314417362213
    2. '(m' → logprob: -2.038473129272461
    3. 'n' → logprob: -4.538473129272461
    4. '(n' → logprob: -5.413473129272461
    5. ' (' → logprob: -6.038473129272461
    6. ' m' → logprob: -6.538473129272461
    7. '(' → logprob: -6.913473129272461
    8. '((' → logprob: -8.163473129272461
    9. ' n' → logprob: -9.163473129272461
    10. 'k' → logprob: -9.163473129272461

Token 90: '*m' (ID: 85049)
  Prédit: '*m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*m' → logprob: -0.004218128509819508
    2. ' *' → logprob: -5.754218101501465
    3. '*' → logprob: -6.879218101501465
    4. '*(' → logprob: -12.504218101501465
    5. 'm' → logprob: -13.129218101501465
    6. '*n' → logprob: -13.754218101501465
    7. '**' → logprob: -13.879218101501465
    8. '*k' → logprob: -14.004218101501465
    9. ' ' → logprob: -14.129218101501465
    10. '*M' → logprob: -15.504218101501465

Token 91: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.02976345270872116
    2. ' +' → logprob: -3.5297634601593018
    3. '+n' → logprob: -12.404763221740723
    4. ')+' → logprob: -12.529763221740723
    5. ' -' → logprob: -13.404763221740723
    6. '-' → logprob: -14.029763221740723
    7. ')' → logprob: -14.154763221740723
    8. ' ' → logprob: -14.279763221740723
    9. '+
' → logprob: -14.529763221740723
    10. '+)' → logprob: -15.279763221740723

Token 92: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00020401719666551799
    2. ' ' → logprob: -8.500204086303711
    3. '2' → logprob: -14.625204086303711
    4. '+' → logprob: -17.00020408630371
    5. '  ' → logprob: -17.81270408630371
    6. '１' → logprob: -18.18770408630371
    7. '۱' → logprob: -18.18770408630371
    8. '' → logprob: -18.31270408630371
    9. '   ' → logprob: -18.31270408630371
    10. '

' → logprob: -18.75020408630371

Token 93: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.85104202805087e-05
    2. ' )' → logprob: -10.000078201293945
    3. ')
' → logprob: -10.750078201293945
    4. '       ' → logprob: -12.000078201293945
    5. '<|end|>' → logprob: -12.875078201293945
    6. ']' → logprob: -14.750078201293945
    7. '   ' → logprob: -14.875078201293945
    8. ' ' → logprob: -15.375078201293945
    9. ')n' → logprob: -15.375078201293945
    10. ')

' → logprob: -15.500078201293945

Token 94: '       ' (ID: 309)
  Prédit: ' counts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' counts' → logprob: -0.5263897776603699
    2. 'counts' → logprob: -1.7763898372650146
    3. '       ' → logprob: -2.1513898372650146
    4. '<|end|>' → logprob: -2.4013898372650146
    5. ' for' → logprob: -3.9013898372650146
    6. 'count' → logprob: -6.0263895988464355
    7. '   ' → logprob: -6.1513895988464355
    8. '_counts' → logprob: -6.2763895988464355
    9. ' ' → logprob: -6.6513895988464355
    10. '<|end|>' → logprob: -7.1513895988464355

Token 95: ' #' (ID: 1069)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.656928539276123
    2. ' counts' → logprob: -1.781928539276123
    3. 'counts' → logprob: -1.781928539276123
    4. 'for' → logprob: -2.406928539276123
    5. '       ' → logprob: -3.406928539276123
    6. ' ' → logprob: -5.281928539276123
    7. '1' → logprob: -5.531928539276123
    8. '   ' → logprob: -6.031928539276123
    9. 'count' → logprob: -6.156928539276123
    10. ' 
' → logprob: -7.156928539276123

Token 96: ' Base' (ID: 8729)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.19182175397872925
    2. 'counts' → logprob: -1.941821813583374
    3. ' for' → logprob: -4.066821575164795
    4. '#' → logprob: -5.316821575164795
    5. ' counts' → logprob: -5.316821575164795
    6. '       ' → logprob: -6.316821575164795
    7. 'count' → logprob: -7.066821575164795
    8. 'from' → logprob: -8.066822052001953
    9. '   ' → logprob: -8.316822052001953
    10. 'import' → logprob: -8.941822052001953

Token 97: ' case' (ID: 1890)
  Prédit: 'case'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'case' → logprob: -0.6392928957939148
    2. 'counts' → logprob: -1.6392929553985596
    3. ' counts' → logprob: -2.5142929553985596
    4. '_counts' → logprob: -2.7642929553985596
    5. ' case' → logprob: -2.8892929553985596
    6. ' =' → logprob: -3.3892929553985596
    7. '[' → logprob: -4.0142927169799805
    8. 'cases' → logprob: -5.1392927169799805
    9. 'count' → logprob: -5.6392927169799805
    10. '=' → logprob: -5.7642927169799805

Token 98: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.190861776471138
    2. ' counts' → logprob: -2.190861701965332
    3. 'counts' → logprob: -3.440861701965332
    4. 'for' → logprob: -4.190861701965332
    5. '       ' → logprob: -4.315861701965332
    6. '<|end|>' → logprob: -7.690861701965332
    7. '   ' → logprob: -7.940861701965332
    8. ' ' → logprob: -9.065861701965332
    9. '[' → logprob: -9.315861701965332
    10. '_counts' → logprob: -9.565861701965332

Token 99: ' one' (ID: 1001)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.16285187005996704
    2. 'n' → logprob: -2.9128518104553223
    3. ' ' → logprob: -3.2878518104553223
    4. ' counts' → logprob: -4.162851810455322
    5. ' the' → logprob: -4.537851810455322
    6. ' dice' → logprob: -5.162851810455322
    7. '1' → logprob: -5.287851810455322
    8. ' sum' → logprob: -5.537851810455322
    9. ' i' → logprob: -5.912851810455322
    10. ' sums' → logprob: -6.412851810455322

Token 100: ' die' (ID: 1076)
  Prédit: ' die'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' die' → logprob: -0.08728406578302383
    2. ' dice' → logprob: -2.9622840881347656
    3. 'die' → logprob: -4.587284088134766
    4. 'dice' → logprob: -4.837284088134766
    5. ' ' → logprob: -5.837284088134766
    6. 'd' → logprob: -5.962284088134766
    7. ' d' → logprob: -6.212284088134766
    8. '   ' → logprob: -6.212284088134766
    9. '    ' → logprob: -6.962284088134766
    10. 'n' → logprob: -7.962284088134766

Token 101: '
' (ID: 198)
  Prédit: ' counts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' counts' → logprob: -0.7706166505813599
    2. '[' → logprob: -1.2706166505813599
    3. ' =' → logprob: -2.5206165313720703
    4. 'counts' → logprob: -2.7706165313720703
    5. '       ' → logprob: -3.3956165313720703
    6. '=' → logprob: -3.8956165313720703
    7. ':' → logprob: -4.52061653137207
    8. ' [' → logprob: -4.64561653137207
    9. '_counts' → logprob: -4.77061653137207
    10. ' for' → logprob: -4.89561653137207

Token 102: '       ' (ID: 309)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.1623588502407074
    2. ' counts' → logprob: -2.7873587608337402
    3. '       ' → logprob: -3.1623587608337402
    4. 'for' → logprob: -3.4123587608337402
    5. 'counts' → logprob: -4.41235876083374
    6. '   ' → logprob: -7.28735876083374
    7. ' ' → logprob: -10.287359237670898
    8. 'count' → logprob: -10.412359237670898
    9. '_counts' → logprob: -10.537359237670898
    10. '    ' → logprob: -11.412359237670898

Token 103: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.5236261487007141
    2. ' for' → logprob: -0.8986261487007141
    3. '   ' → logprob: -8.273626327514648
    4. ' counts' → logprob: -9.273626327514648
    5. '       ' → logprob: -9.398626327514648
    6. 'counts' → logprob: -10.023626327514648
    7. '```' → logprob: -12.023626327514648
    8. '	for' → logprob: -12.398626327514648
    9. ' ' → logprob: -12.398626327514648
    10. '    ' → logprob: -12.523626327514648

Token 104: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.3800030052661896
    2. 'i' → logprob: -1.3800029754638672
    3. ' face' → logprob: -3.005002975463867
    4. 'face' → logprob: -4.380002975463867
    5. ' value' → logprob: -7.255002975463867
    6. 'value' → logprob: -7.255002975463867
    7. ' s' → logprob: -8.380002975463867
    8. 's' → logprob: -8.505002975463867
    9. 'f' → logprob: -9.005002975463867
    10. ' f' → logprob: -9.380002975463867

Token 105: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0060352119617164135
    2. 'in' → logprob: -5.131035327911377
    3. ' ' → logprob: -10.006034851074219
    4. 'n' → logprob: -10.256034851074219
    5. 's' → logprob: -12.381034851074219
    6. 'range' → logprob: -12.631034851074219
    7. '  ' → logprob: -12.881034851074219
    8. '   ' → logprob: -12.881034851074219
    9. '	in' → logprob: -13.006034851074219
    10. '```' → logprob: -13.131034851074219

Token 106: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.20142170786857605
    2. 'range' → logprob: -1.7014217376708984
    3. '	range' → logprob: -12.201421737670898
    4. ' ' → logprob: -13.326421737670898
    5. '(range' → logprob: -13.701421737670898
    6. ' xrange' → logprob: -15.951421737670898
    7. '```' → logprob: -15.951421737670898
    8. '<|end|>' → logprob: -16.2014217376709
    9. '1' → logprob: -16.5764217376709
    10. '   ' → logprob: -16.8264217376709

Token 107: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0001266613689949736
    2. '1' → logprob: -9.250126838684082
    3. '(n' → logprob: -10.750126838684082
    4. ' (' → logprob: -11.875126838684082
    5. '   ' → logprob: -13.625126838684082
    6. ' ' → logprob: -14.375126838684082
    7. 'def' → logprob: -15.875126838684082
    8. '(
' → logprob: -16.875125885009766
    9. '```' → logprob: -17.125125885009766
    10. 'n' → logprob: -17.625125885009766

Token 108: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.1008713702030946e-06
    2. ' ' → logprob: -13.375001907348633
    3. 'n' → logprob: -14.625001907348633
    4. '   ' → logprob: -18.625001907348633
    5. '(' → logprob: -19.000001907348633
    6. ' n' → logprob: -20.750001907348633
    7. '۱' → logprob: -21.500001907348633
    8. '```' → logprob: -22.250001907348633
    9. '１' → logprob: -22.375001907348633
    10. ')' → logprob: -23.000001907348633

Token 109: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07907595485448837
    2. ' ,' → logprob: -2.829076051712036
    3. ',n' → logprob: -4.079075813293457
    4. '   ' → logprob: -11.329075813293457
    5. '    ' → logprob: -11.954075813293457
    6. ' ' → logprob: -12.704075813293457
    7. ' n' → logprob: -12.829075813293457
    8. '       ' → logprob: -12.954075813293457
    9. 'n' → logprob: -12.954075813293457
    10. ' to' → logprob: -13.079075813293457

Token 110: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.0015614043222740293
    2. ' m' → logprob: -6.751561641693115
    3. 'n' → logprob: -7.876561641693115
    4. '6' → logprob: -11.626561164855957
    5. ' n' → logprob: -13.251561164855957
    6. '   ' → logprob: -14.876561164855957
    7. '7' → logprob: -15.626561164855957
    8. ' ' → logprob: -16.126562118530273
    9. ')m' → logprob: -16.751562118530273
    10. '    ' → logprob: -17.126562118530273

Token 111: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.012513183988630772
    2. ' +' → logprob: -4.387513160705566
    3. ')+' → logprob: -14.137513160705566
    4. '):
' → logprob: -14.262513160705566
    5. '   ' → logprob: -14.762513160705566
    6. '+m' → logprob: -14.762513160705566
    7. '```' → logprob: -15.387513160705566
    8. '+n' → logprob: -15.512513160705566
    9. '+k' → logprob: -15.762513160705566
    10. '+i' → logprob: -16.137514114379883

Token 112: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00011629798245849088
    2. '+' → logprob: -9.500116348266602
    3. ' ' → logprob: -10.750116348266602
    4. '):
' → logprob: -11.750116348266602
    5. ')' → logprob: -11.875116348266602
    6. '```' → logprob: -12.750116348266602
    7. '   ' → logprob: -13.625116348266602
    8. ')+' → logprob: -15.750116348266602
    9. ' +' → logprob: -15.875116348266602
    10. '``' → logprob: -16.2501163482666

Token 113: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.3257468044757843
    2. '):' → logprob: -1.325746774673462
    3. ':' → logprob: -4.450747013092041
    4. ':
' → logprob: -8.200746536254883
    5. ' ):
' → logprob: -8.450746536254883
    6. ' ):' → logprob: -9.200746536254883
    7. ')' → logprob: -9.450746536254883
    8. '):
' → logprob: -10.325746536254883
    9. '       ' → logprob: -11.200746536254883
    10. '   ' → logprob: -11.575746536254883

Token 114: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07181233167648315
    2. ' counts' → logprob: -2.696812391281128
    3. 'counts' → logprob: -6.446812152862549
    4. '<|end|>' → logprob: -8.946812629699707
    5. '_counts' → logprob: -9.446812629699707
    6. '       ' → logprob: -10.821812629699707
    7. '               ' → logprob: -11.071812629699707
    8. '   ' → logprob: -11.571812629699707
    9. 'count' → logprob: -11.821812629699707
    10. '```' → logprob: -12.321812629699707

Token 115: ' counts' (ID: 28991)
  Prédit: ' counts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' counts' → logprob: -0.6937769055366516
    2. 'counts' (adapté à ' counts') → logprob: -0.6937769055366516
    3. '           ' → logprob: -7.568777084350586
    4. '   ' → logprob: -9.693777084350586
    5. '       ' → logprob: -10.318777084350586
    6. '               ' → logprob: -11.818777084350586
    7. 'count' → logprob: -12.193777084350586
    8. ' ' → logprob: -12.193777084350586
    9. '_counts' → logprob: -14.193777084350586
    10. '  ' → logprob: -15.443777084350586

Token 116: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0002479886752553284
    2. '[' → logprob: -8.375247955322266
    3. '[n' → logprob: -11.250247955322266
    4. '[s' → logprob: -12.750247955322266
    5. ' [' → logprob: -14.000247955322266
    6. '[count' → logprob: -14.750247955322266
    7. '[int' → logprob: -17.000247955322266
    8. '[c' → logprob: -17.250247955322266
    9. '[:]' → logprob: -17.500247955322266
    10. '[m' → logprob: -17.875247955322266

Token 117: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0038340408354997635
    2. ' ]' → logprob: -6.753834247589111
    3. ']=' → logprob: -6.878834247589111
    4. ']+=' → logprob: -6.878834247589111
    5. '=' → logprob: -7.503834247589111
    6. ')' → logprob: -10.628833770751953
    7. ' =' → logprob: -11.253833770751953
    8. ' +=' → logprob: -11.878833770751953
    9. '+=' → logprob: -12.253833770751953
    10. '   ' → logprob: -14.628833770751953

Token 118: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.030976109206676483
    2. ' =' → logprob: -3.5309760570526123
    3. '+=' → logprob: -7.280976295471191
    4. ' +=' → logprob: -7.530976295471191
    5. ']+=' → logprob: -17.530975341796875
    6. '=True' → logprob: -17.655975341796875
    7. '.=' → logprob: -17.780975341796875
    8. ' ' → logprob: -18.155975341796875
    9. '=
' → logprob: -18.280975341796875
    10. '=

' → logprob: -18.405975341796875

Token 119: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0007100477814674377
    2. ' ' → logprob: -7.2507100105285645
    3. '   ' → logprob: -16.250709533691406
    4. '  ' → logprob: -18.875709533691406
    5. '```' → logprob: -19.250709533691406
    6. '    ' → logprob: -19.500709533691406
    7. '<|end|>' → logprob: -19.625709533691406
    8. '۱' → logprob: -19.688209533691406
    9. '0' → logprob: -19.750709533691406
    10. '       ' → logprob: -19.813209533691406

Token 120: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.7697225252486533e-06
    2. ' ' → logprob: -12.500003814697266
    3. '   ' → logprob: -18.500003814697266
    4. '0' → logprob: -20.000003814697266
    5. '```' → logprob: -20.125003814697266
    6. '  ' → logprob: -21.125003814697266
    7. '۱' → logprob: -21.312503814697266
    8. 'count' → logprob: -22.062503814697266
    9. '`' → logprob: -22.500003814697266
    10. '    ' → logprob: -22.562503814697266

Token 121: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 122: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4268818199634552
    2. ' for' → logprob: -1.5518817901611328
    3. 'for' → logprob: -2.301881790161133
    4. '   ' → logprob: -3.426881790161133
    5. '	for' → logprob: -6.676881790161133
    6. '        
' → logprob: -7.676881790161133
    7. '<|end|>' → logprob: -7.801881790161133
    8. '```' → logprob: -7.926881790161133
    9. '    ' → logprob: -8.551881790161133
    10. ' ' → logprob: -9.426881790161133

Token 123: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2119312733411789
    2. ' for' → logprob: -2.0869312286376953
    3. '       ' → logprob: -2.9619312286376953
    4. '   ' → logprob: -4.211931228637695
    5. '	for' → logprob: -9.086931228637695
    6. '        
' → logprob: -9.461931228637695
    7. '    ' → logprob: -9.711931228637695
    8. '    
' → logprob: -10.336931228637695
    9. '```' → logprob: -10.336931228637695
    10. ' ' → logprob: -10.961931228637695

Token 124: ' For' (ID: 2214)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03807821869850159
    2. ' for' → logprob: -3.2880783081054688
    3. '   ' → logprob: -10.913078308105469
    4. '       ' → logprob: -11.163078308105469
    5. 'For' → logprob: -13.538078308105469
    6. '```' → logprob: -13.663078308105469
    7. 'from' → logprob: -14.163078308105469
    8. ' ' → logprob: -14.413078308105469
    9. '	for' → logprob: -15.288078308105469
    10. '    ' → logprob: -15.788078308105469

Token 125: ' more' (ID: 945)
  Prédit: ' _'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.32518383860588074
    2. ' dice' → logprob: -2.075183868408203
    3. ' die' → logprob: -2.575183868408203
    4. '_' → logprob: -3.075183868408203
    5. 'dice' → logprob: -4.575183868408203
    6. ' i' → logprob: -5.450183868408203
    7. ' d' → logprob: -5.950183868408203
    8. '_d' → logprob: -6.075183868408203
    9. ' num' → logprob: -6.325183868408203
    10. '_die' → logprob: -6.450183868408203

Token 126: ' than' (ID: 1572)
  Prédit: ' dice'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dice' → logprob: -0.09263715147972107
    2. 'dice' → logprob: -2.717637062072754
    3. ' dices' → logprob: -5.217637062072754
    4. ' than' → logprob: -5.467637062072754
    5. ' die' → logprob: -5.842637062072754
    6. '   ' → logprob: -6.217637062072754
    7. ' for' → logprob: -6.217637062072754
    8. 'd' → logprob: -6.717637062072754
    9. ' d' → logprob: -6.842637062072754
    10. ' ' → logprob: -7.717637062072754

Token 127: ' ' (ID: 220)
  Prédit: ' one'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' one' → logprob: -0.3716791570186615
    2. ' two' → logprob: -2.1216790676116943
    3. ' ' → logprob: -2.3716790676116943
    4. '1' → logprob: -2.9966790676116943
    5. 'one' → logprob: -3.8716790676116943
    6. '2' → logprob: -4.371679306030273
    7. ' dice' → logprob: -5.246679306030273
    8. ' than' → logprob: -5.996679306030273
    9. 'two' → logprob: -5.996679306030273
    10. 'dice' → logprob: -6.496679306030273

Token 128: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1478189080953598
    2. 'one' → logprob: -2.2728188037872314
    3. ' one' → logprob: -3.7728188037872314
    4. ' ' → logprob: -5.0228190422058105
    5. '2' → logprob: -5.5228190422058105
    6. 'two' → logprob: -7.7728190422058105
    7. ' two' → logprob: -8.522818565368652
    8. 'dice' → logprob: -8.897818565368652
    9. 'die' → logprob: -10.522818565368652
    10. ' dice' → logprob: -11.147818565368652

Token 129: ' die' (ID: 1076)
  Prédit: ' die'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' die' → logprob: -0.04307295009493828
    2. ' dice' → logprob: -3.2930729389190674
    3. 'die' → logprob: -6.1680731773376465
    4. 'dice' → logprob: -6.2930731773376465
    5. '_die' → logprob: -7.4180731773376465
    6. '   ' → logprob: -9.168072700500488
    7. 'Die' → logprob: -9.793072700500488
    8. 'Dice' → logprob: -9.918072700500488
    9. 'd' → logprob: -9.918072700500488
    10. 's' → logprob: -10.293072700500488

Token 130: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.29039329290390015
    2. '
' → logprob: -1.415393352508545
    3. ' for' → logprob: -5.165393352508545
    4. ':' → logprob: -6.915393352508545
    5. '<|end|>' → logprob: -7.165393352508545
    6. '        
' → logprob: -7.915393352508545
    7. ':
' → logprob: -8.290392875671387
    8. '   ' → logprob: -8.415392875671387
    9. ',' → logprob: -8.540392875671387
    10. '	' → logprob: -8.790392875671387

Token 131: ' calculate' (ID: 17950)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.007300871890038252
    2. '       ' → logprob: -5.507300853729248
    3. 'for' → logprob: -5.757300853729248
    4. '        ' → logprob: -11.132301330566406
    5. '	for' → logprob: -11.507301330566406
    6. '   ' → logprob: -11.632301330566406
    7. ' ' → logprob: -11.757301330566406
    8. ' counts' → logprob: -12.507301330566406
    9. ' new' → logprob: -13.007301330566406
    10. '        
' → logprob: -13.132301330566406

Token 132: ' counts' (ID: 28991)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.23505860567092896
    2. '       ' → logprob: -2.235058546066284
    3. 'for' → logprob: -2.360058546066284
    4. ' counts' → logprob: -5.360058784484863
    5. 'counts' → logprob: -6.985058784484863
    6. '   ' → logprob: -6.985058784484863
    7. ' new' → logprob: -7.985058784484863
    8. ' ' → logprob: -8.360058784484863
    9. '    ' → logprob: -8.860058784484863
    10. '        ' → logprob: -9.485058784484863

Token 133: ' iter' (ID: 10621)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.020122883841395378
    2. ' for' → logprob: -4.27012300491333
    3. '	' → logprob: -6.52012300491333
    4. 'for' → logprob: -6.64512300491333
    5. '
' → logprob: -7.14512300491333
    6. '        
' → logprob: -7.27012300491333
    7. '   ' → logprob: -7.27012300491333
    8. '	for' → logprob: -7.89512300491333
    9. '<|end|>' → logprob: -9.020122528076172
    10. '	   ' → logprob: -9.395122528076172

Token 134: 'atively' (ID: 11594)
  Prédit: 'ate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ate' → logprob: -0.45080262422561646
    2. 'items' → logprob: -1.3258025646209717
    3. 'count' → logprob: -3.8258025646209717
    4. 'rows' → logprob: -3.9508025646209717
    5. 'range' → logprob: -4.325802803039551
    6. 'tools' → logprob: -4.450802803039551
    7. '=' → logprob: -4.700802803039551
    8. '_' → logprob: -5.950802803039551
    9. '   ' → logprob: -6.075802803039551
    10. 'a' → logprob: -6.325802803039551

Token 135: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011767814867198467
    2. ' for' → logprob: -4.636767864227295
    3. '   ' → logprob: -6.511767864227295
    4. 'for' → logprob: -8.136767387390137
    5. '	' → logprob: -9.761767387390137
    6. '	for' → logprob: -9.761767387390137
    7. '        
' → logprob: -10.136767387390137
    8. ' ' → logprob: -11.136767387390137
    9. '    ' → logprob: -11.386767387390137
    10. '	   ' → logprob: -11.386767387390137

Token 136: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00446880841627717
    2. ' for' → logprob: -5.87946891784668
    3. '   ' → logprob: -6.87946891784668
    4. '
' → logprob: -8.50446891784668
    5. '        
' → logprob: -8.87946891784668
    6. 'for' → logprob: -9.00446891784668
    7. '	' → logprob: -10.25446891784668
    8. '    
' → logprob: -10.62946891784668
    9. '	for' → logprob: -10.75446891784668
    10. '           ' → logprob: -10.87946891784668

Token 137: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.1621132791042328
    2. ' for' → logprob: -2.2871131896972656
    3. '       ' → logprob: -3.1621131896972656
    4. '   ' → logprob: -5.162113189697266
    5. ' ' → logprob: -11.537113189697266
    6. '    ' → logprob: -12.287113189697266
    7. '  ' → logprob: -12.662113189697266
    8. '```' → logprob: -12.662113189697266
    9. '	for' → logprob: -12.787113189697266
    10. 'from' → logprob: -13.037113189697266

Token 138: ' dice' (ID: 22078)
  Prédit: ' dice'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dice' → logprob: -0.21638086438179016
    2. ' die' → logprob: -2.3413808345794678
    3. ' d' → logprob: -3.0913808345794678
    4. ' _' → logprob: -3.4663808345794678
    5. ' num' → logprob: -4.591381072998047
    6. 'dice' → logprob: -5.466381072998047
    7. ' i' → logprob: -5.716381072998047
    8. 'd' → logprob: -7.091381072998047
    9. ' dices' → logprob: -7.091381072998047
    10. '_' → logprob: -7.216381072998047

Token 139: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.4645047187805176
    2. '_count' → logprob: -1.0895047187805176
    3. '_' → logprob: -4.339504718780518
    4. '_num' → logprob: -4.714504718780518
    5. 's' → logprob: -4.839504718780518
    6. '_in' → logprob: -6.464504718780518
    7. '_i' → logprob: -6.839504718780518
    8. 'in' → logprob: -6.964504718780518
    9. '_index' → logprob: -7.214504718780518
    10. '_idx' → logprob: -8.08950424194336

Token 140: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.006716913543641567
    2. 'range' → logprob: -5.006716728210449
    3. ' ' → logprob: -14.00671672821045
    4. '	range' → logprob: -14.13171672821045
    5. ' xrange' → logprob: -17.506717681884766
    6. '(range' → logprob: -17.881717681884766
    7. ' in' → logprob: -18.131717681884766
    8. '   ' → logprob: -18.506717681884766
    9. '  ' → logprob: -18.881717681884766
    10. '_range' → logprob: -19.256717681884766

Token 141: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -3.054500666621607e-06
    2. '2' → logprob: -13.00000286102295
    3. ' ' → logprob: -14.50000286102295
    4. ' (' → logprob: -15.75000286102295
    5. '<|end|>' → logprob: -16.125003814697266
    6. '(
' → logprob: -18.250003814697266
    7. '   ' → logprob: -18.750003814697266
    8. '[' → logprob: -19.750003814697266
    9. '	' → logprob: -20.875003814697266
    10. ')' → logprob: -20.875003814697266

Token 142: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00012594614236149937
    2. ' ' → logprob: -9.000125885009766
    3. '   ' → logprob: -13.000125885009766
    4. ')' → logprob: -15.750125885009766
    5. '  ' → logprob: -16.875125885009766
    6. '    ' → logprob: -16.875125885009766
    7. '1' → logprob: -17.750125885009766
    8. '(' → logprob: -17.750125885009766
    9. '２' → logprob: -18.625125885009766
    10. '       ' → logprob: -18.875125885009766

Token 143: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005150251090526581
    2. ' ,' → logprob: -8.00051498413086
    3. ',n' → logprob: -8.62551498413086
    4. ',
' → logprob: -17.00051498413086
    5. ',k' → logprob: -17.37551498413086
    6. 'n' → logprob: -18.00051498413086
    7. ',d' → logprob: -18.00051498413086
    8. 'to' → logprob: -18.75051498413086
    9. ',num' → logprob: -18.75051498413086
    10. '   ' → logprob: -18.75051498413086

Token 144: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.47408178448677063
    2. 'n' → logprob: -0.9740817546844482
    3. '	n' → logprob: -12.974081993103027
    4. '    ' → logprob: -13.349081993103027
    5. '   ' → logprob: -15.599081993103027
    6. 'k' → logprob: -16.09908103942871
    7. ')n' → logprob: -16.09908103942871
    8. '       ' → logprob: -16.34908103942871
    9. '(n' → logprob: -16.72408103942871
    10. '        ' → logprob: -16.84908103942871

Token 145: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.048655036836862564
    2. ' +' → logprob: -3.0486550331115723
    3. '):' → logprob: -9.92365550994873
    4. '):
' → logprob: -11.42365550994873
    5. '+
' → logprob: -12.42365550994873
    6. '+k' → logprob: -13.92365550994873
    7. ' +
' → logprob: -14.29865550994873
    8. '+:' → logprob: -14.42365550994873
    9. '   ' → logprob: -14.92365550994873
    10. ' ):' → logprob: -15.17365550994873

Token 146: '1' (ID: 16)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.1583641767501831
    2. '1' → logprob: -2.9083642959594727
    3. 'k' → logprob: -3.6583642959594727
    4. 'dice' → logprob: -3.9083642959594727
    5. ' n' → logprob: -4.033364295959473
    6. '(n' → logprob: -5.158364295959473
    7. '```' → logprob: -5.408364295959473
    8. '   ' → logprob: -5.408364295959473
    9. '       ' → logprob: -5.908364295959473
    10. 'd' → logprob: -6.158364295959473

Token 147: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.07171247154474258
    2. '):
' → logprob: -3.0717124938964844
    3. ':' → logprob: -3.8217124938964844
    4. ' ):' → logprob: -7.071712493896484
    5. ' ):
' → logprob: -9.946712493896484
    6. ':
' → logprob: -10.446712493896484
    7. '):
' → logprob: -10.571712493896484
    8. ' :' → logprob: -11.821712493896484
    9. ')' → logprob: -11.821712493896484
    10. '       ' → logprob: -13.571712493896484

Token 148: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3024492561817169
    2. '       ' → logprob: -1.4274492263793945
    3. '	       ' → logprob: -5.1774492263793945
    4. '        
' → logprob: -5.8024492263793945
    5. '        ' → logprob: -5.9274492263793945
    6. ' counts' → logprob: -6.6774492263793945
    7. '```' → logprob: -6.8024492263793945
    8. ' ' → logprob: -6.9274492263793945
    9. '<|end|>' → logprob: -6.9274492263793945
    10. '   ' → logprob: -7.1774492263793945

Token 149: ' new' (ID: 620)
  Prédit: ' new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.08484198898077011
    2. '           ' → logprob: -3.3348419666290283
    3. ' next' → logprob: -3.5848419666290283
    4. 'new' (adapté à ' new') → logprob: -4.209842205047607
    5. ' temp' → logprob: -6.709842205047607
    6. 'next' → logprob: -6.959842205047607
    7. ' counts' → logprob: -7.709842205047607
    8. '   ' → logprob: -8.70984172821045
    9. 'temp' → logprob: -8.95984172821045
    10. 'counts' → logprob: -10.20984172821045

Token 150: '_counts' (ID: 61971)
  Prédit: '_counts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_counts' → logprob: -1.6405310816480778e-05
    2. 'counts' → logprob: -11.500016212463379
    3. '_' → logprob: -12.500016212463379
    4. ' =' → logprob: -13.250016212463379
    5. 'Counts' → logprob: -15.250016212463379
    6. '=' → logprob: -15.875016212463379
    7. '_count' → logprob: -16.125017166137695
    8. 's' → logprob: -16.500017166137695
    9. ' counts' → logprob: -16.625017166137695
    10. ' _' → logprob: -17.250017166137695

Token 151: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.020543988794088364
    2. '=' → logprob: -3.8955440521240234
    3. '[' → logprob: -13.270544052124023
    4. ' =[' → logprob: -16.145544052124023
    5. ' ' → logprob: -16.270544052124023
    6. '=[' → logprob: -16.395544052124023
    7. '```' → logprob: -17.645544052124023
    8. ')' → logprob: -17.645544052124023
    9. ']' → logprob: -18.145544052124023
    10. ' [' → logprob: -18.270544052124023

Token 152: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.03804194927215576
    2. ' [' → logprob: -3.2880420684814453
    3. '[n' → logprob: -15.413042068481445
    4. '[count' → logprob: -15.663042068481445
    5. '   ' → logprob: -17.038042068481445
    6. '[len' → logprob: -17.163042068481445
    7. ' ' → logprob: -17.413042068481445
    8. '[m' → logprob: -17.538042068481445
    9. '[new' → logprob: -18.163042068481445
    10. '[int' → logprob: -18.413042068481445

Token 153: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.4974866644479334e-05
    2. ' ' → logprob: -11.125015258789062
    3. ')' → logprob: -16.125015258789062
    4. '[' → logprob: -17.375015258789062
    5. '۰' → logprob: -17.375015258789062
    6. '   ' → logprob: -17.750015258789062
    7. '(' → logprob: -18.500015258789062
    8. ']' → logprob: -18.500015258789062
    9. '```' → logprob: -18.937515258789062
    10. '           ' → logprob: -19.125015258789062

Token 154: ']*(' (ID: 92627)
  Prédit: ']*('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*(' → logprob: -0.041300639510154724
    2. ']' → logprob: -3.9163005352020264
    3. ']*' → logprob: -4.2913007736206055
    4. '*(' → logprob: -5.0413007736206055
    5. ')*(' → logprob: -8.916300773620605
    6. '(n' → logprob: -9.291300773620605
    7. '*n' → logprob: -9.541300773620605
    8. '*' → logprob: -10.166300773620605
    9. ']+' → logprob: -11.041300773620605
    10. '   ' → logprob: -11.541300773620605

Token 155: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.007067350670695305
    2. '(n' → logprob: -5.1320672035217285
    3. ' n' → logprob: -6.8820672035217285
    4. 'len' → logprob: -9.882067680358887
    5. ')n' → logprob: -10.507067680358887
    6. ' (' → logprob: -11.632067680358887
    7. '	n' → logprob: -11.882067680358887
    8. '(len' → logprob: -12.257067680358887
    9. '(' → logprob: -12.632067680358887
    10. '[n' → logprob: -12.757067680358887

Token 156: '*m' (ID: 85049)
  Prédit: '*m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*m' → logprob: -9.567575034452602e-05
    2. '*' → logprob: -9.62509536743164
    3. ' *' → logprob: -10.50009536743164
    4. 'm' → logprob: -14.00009536743164
    5. '*d' → logprob: -15.25009536743164
    6. '*n' → logprob: -15.75009536743164
    7. '**' → logprob: -15.87509536743164
    8. '*k' → logprob: -16.00009536743164
    9. '   ' → logprob: -16.12509536743164
    10. '*M' → logprob: -16.50009536743164

Token 157: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0008046258008107543
    2. ' +' → logprob: -7.125804424285889
    3. ')+' → logprob: -17.125804901123047
    4. '+
' → logprob: -17.375804901123047
    5. '+n' → logprob: -17.750804901123047
    6. '+d' → logprob: -17.875804901123047
    7. '()+' → logprob: -18.250804901123047
    8. '+k' → logprob: -18.500804901123047
    9. '+j' → logprob: -18.875804901123047
    10. '+i' → logprob: -19.250804901123047

Token 158: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3856492842023727e-06
    2. ' ' → logprob: -13.625000953674316
    3. '2' → logprob: -15.875000953674316
    4. '(' → logprob: -17.875001907348633
    5. '   ' → logprob: -18.062501907348633
    6. '0' → logprob: -18.187501907348633
    7. '
' → logprob: -18.687501907348633
    8. '１' → logprob: -19.000001907348633
    9. '```' → logprob: -19.000001907348633
    10. '{' → logprob: -19.187501907348633

Token 159: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0794411301612854
    2. ')
' → logprob: -2.5794410705566406
    3. '           ' → logprob: -7.704441070556641
    4. ' )' → logprob: -10.20444107055664
    5. '       ' → logprob: -10.32944107055664
    6. ' )
' → logprob: -11.45444107055664
    7. ')
' → logprob: -11.57944107055664
    8. ')

' → logprob: -12.07944107055664
    9. '               ' → logprob: -13.70444107055664
    10. '        ' → logprob: -13.70444107055664

Token 160: '           ' (ID: 352)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7616638541221619
    2. '       ' → logprob: -1.5116639137268066
    3. '           ' → logprob: -1.8866639137268066
    4. 'for' → logprob: -1.8866639137268066
    5. '<|end|>' → logprob: -5.261663913726807
    6. '        ' → logprob: -7.011663913726807
    7. '	       ' → logprob: -7.261663913726807
    8. '               ' → logprob: -7.761663913726807
    9. '   ' → logprob: -7.886663913726807
    10. ' ' → logprob: -8.136663436889648

Token 161: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.006638513877987862
    2. ' for' → logprob: -5.631638526916504
    3. '           ' → logprob: -5.881638526916504
    4. '       ' → logprob: -8.631638526916504
    5. '   ' → logprob: -9.756638526916504
    6. '	for' → logprob: -12.756638526916504
    7. '```' → logprob: -13.506638526916504
    8. ' ' → logprob: -14.381638526916504
    9. '               ' → logprob: -14.631638526916504
    10. 'from' → logprob: -15.006638526916504

Token 162: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5937434434890747
    2. 'sum' → logprob: -0.9687434434890747
    3. ' s' → logprob: -3.093743324279785
    4. ' sum' → logprob: -4.218743324279785
    5. 'prev' → logprob: -5.093743324279785
    6. ' prev' → logprob: -6.968743324279785
    7. 'total' → logprob: -7.968743324279785
    8. 'current' → logprob: -9.093743324279785
    9. 'curr' → logprob: -9.218743324279785
    10. ' total' → logprob: -9.843743324279785

Token 163: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.06196970492601395
    2. 'in' → logprob: -2.811969757080078
    3. ' ' → logprob: -14.311969757080078
    4. '	in' → logprob: -14.936969757080078
    5. 'range' → logprob: -15.811969757080078
    6. 's' → logprob: -15.936969757080078
    7. '```' → logprob: -15.936969757080078
    8. 'In' → logprob: -16.061969757080078
    9. '_in' → logprob: -16.186969757080078
    10. ')' → logprob: -16.311969757080078

Token 164: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.009776752442121506
    2. ' range' → logprob: -4.634776592254639
    3. '(range' → logprob: -11.884777069091797
    4. '   ' → logprob: -12.009777069091797
    5. ' ' → logprob: -12.134777069091797
    6. '	range' → logprob: -13.884777069091797
    7. '  ' → logprob: -14.009777069091797
    8. ')' → logprob: -15.384777069091797
    9. '    ' → logprob: -16.009777069091797
    10. '
' → logprob: -17.009777069091797

Token 165: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.0024832691997289658
    2. 'dice' → logprob: -6.252483367919922
    3. 'd' → logprob: -7.627483367919922
    4. '[d' → logprob: -10.627483367919922
    5. '(' → logprob: -10.627483367919922
    6. ' (' → logprob: -11.627483367919922
    7. '(n' → logprob: -13.002483367919922
    8. ' dice' → logprob: -13.502483367919922
    9. ')d' → logprob: -13.502483367919922
    10. '	d' → logprob: -13.752483367919922

Token 166: 'ice' (ID: 603)
  Prédit: 'ice'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ice' → logprob: -0.002231021411716938
    2. 'i' → logprob: -7.002231121063232
    3. 'ie' → logprob: -7.377231121063232
    4. 'dice' → logprob: -8.627230644226074
    5. 'ices' → logprob: -9.127230644226074
    6. '(' → logprob: -9.502230644226074
    7. 'ic' → logprob: -10.127230644226074
    8. 'n' → logprob: -10.377230644226074
    9. 'ce' → logprob: -10.502230644226074
    10. '(n' → logprob: -10.627230644226074

Token 167: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.1547446995973587
    2. ' -' → logprob: -2.5297446250915527
    3. '*m' → logprob: -4.029744625091553
    4. ',' → logprob: -4.279744625091553
    5. '*d' → logprob: -4.529744625091553
    6. '*' → logprob: -4.529744625091553
    7. '-d' → logprob: -5.654744625091553
    8. ' *' → logprob: -6.154744625091553
    9. '*k' → logprob: -6.279744625091553
    10. '*(' → logprob: -6.779744625091553

Token 168: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.249780638725497e-05
    2. ' ' → logprob: -10.375032424926758
    3. 'dice' → logprob: -15.500032424926758
    4. ')' → logprob: -15.750032424926758
    5. '```' → logprob: -15.875032424926758
    6. ' +' → logprob: -16.000032424926758
    7. '+' → logprob: -16.125032424926758
    8. '   ' → logprob: -16.125032424926758
    9. ',' → logprob: -16.812532424926758
    10. ' dice' → logprob: -17.750032424926758

Token 169: ',' (ID: 11)
  Prédit: '*m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*m' → logprob: -0.8382182717323303
    2. ',' → logprob: -1.4632182121276855
    3. '*' → logprob: -1.9632182121276855
    4. '*(' → logprob: -2.4632182121276855
    5. '*n' → logprob: -2.7132182121276855
    6. ' *' → logprob: -3.3382182121276855
    7. ',n' → logprob: -5.4632182121276855
    8. ',m' → logprob: -6.0882182121276855
    9. '*k' → logprob: -7.2132182121276855
    10. ' ,' → logprob: -7.5882182121276855

Token 170: ' (' (ID: 350)
  Prédit: '(d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.3388330936431885
    2. '(m' → logprob: -1.4638330936431885
    3. 'dice' → logprob: -3.9638330936431885
    4. '(n' → logprob: -4.088832855224609
    5. ' (' → logprob: -4.713832855224609
    6. '(' → logprob: -5.338832855224609
    7. 'm' → logprob: -5.963832855224609
    8. '(min' → logprob: -6.088832855224609
    9. 'min' → logprob: -7.088832855224609
    10. 'd' → logprob: -7.838832855224609

Token 171: 'dice' (ID: 148696)
  Prédit: 'dice'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dice' → logprob: -0.220097616314888
    2. '(d' → logprob: -1.8450976610183716
    3. '(m' → logprob: -4.345097541809082
    4. 'd' → logprob: -4.595097541809082
    5. '(n' → logprob: -5.345097541809082
    6. 'm' → logprob: -5.345097541809082
    7. ' dice' → logprob: -5.845097541809082
    8. ' (' → logprob: -5.970097541809082
    9. 'n' → logprob: -7.220097541809082
    10. 'min' → logprob: -8.970097541809082

Token 172: '-' (ID: 12)
  Prédit: '*m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*m' → logprob: -0.24433626234531403
    2. '-' → logprob: -2.2443363666534424
    3. ')*' → logprob: -2.2443363666534424
    4. ')*(' → logprob: -6.744336128234863
    5. ' -' → logprob: -6.869336128234863
    6. ')' → logprob: -7.119336128234863
    7. '*n' → logprob: -7.369336128234863
    8. '*(' → logprob: -7.994336128234863
    9. '   ' → logprob: -8.119336128234863
    10. ' *' → logprob: -8.869336128234863

Token 173: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.143808109802194e-05
    2. ' ' → logprob: -10.250041007995605
    3. '-' → logprob: -12.500041007995605
    4. '
' → logprob: -14.375041007995605
    5. '   ' → logprob: -14.500041007995605
    6. ' -' → logprob: -15.437541007995605
    7. 'dice' → logprob: -15.687541007995605
    8. '```' → logprob: -15.812541007995605
    9. '(' → logprob: -16.187541961669922
    10. '2' → logprob: -16.375041961669922

Token 174: ')*' (ID: 11043)
  Prédit: '*m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*m' → logprob: -0.25506943464279175
    2. ')*' → logprob: -1.5050694942474365
    3. ')*(' → logprob: -6.130069255828857
    4. '*(' → logprob: -7.380069255828857
    5. '*' → logprob: -8.630069732666016
    6. ')' → logprob: -9.130069732666016
    7. '*n' → logprob: -10.880069732666016
    8. '**' → logprob: -12.005069732666016
    9. ' *' → logprob: -12.380069732666016
    10. '*k' → logprob: -12.880069732666016

Token 175: 'm' (ID: 76)
  Prédit: 'm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -9.722539834911004e-05
    2. ' m' → logprob: -9.250097274780273
    3. '   ' → logprob: -14.000097274780273
    4. '	m' → logprob: -16.500097274780273
    5. '       ' → logprob: -17.375097274780273
    6. '           ' → logprob: -17.500097274780273
    7. '  ' → logprob: -17.500097274780273
    8. '    ' → logprob: -17.500097274780273
    9. ' ' → logprob: -17.625097274780273
    10. '(m' → logprob: -17.875097274780273

Token 176: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2813708186149597
    2. ' +' → logprob: -1.4063708782196045
    3. '   ' → logprob: -9.406371116638184
    4. '+m' → logprob: -10.531371116638184
    5. '+n' → logprob: -11.031371116638184
    6. '       ' → logprob: -11.281371116638184
    7. '+k' → logprob: -11.281371116638184
    8. '    ' → logprob: -11.406371116638184
    9. ' ' → logprob: -11.406371116638184
    10. ',' → logprob: -12.156371116638184

Token 177: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.214019307051785e-05
    2. ' ' → logprob: -10.375032424926758
    3. '+' → logprob: -14.750032424926758
    4. ' +' → logprob: -15.500032424926758
    5. '   ' → logprob: -16.250032424926758
    6. '
' → logprob: -16.375032424926758
    7. ')' → logprob: -17.625032424926758
    8. '```' → logprob: -18.125032424926758
    9. ')+' → logprob: -18.500032424926758
    10. '

' → logprob: -18.750032424926758

Token 178: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5312300324440002
    2. '):
' → logprob: -0.9062300324440002
    3. ':' → logprob: -5.4062299728393555
    4. '+' → logprob: -6.2812299728393555
    5. '               ' → logprob: -7.6562299728393555
    6. ' ):' → logprob: -7.6562299728393555
    7. '           ' → logprob: -8.156229972839355
    8. ' ):
' → logprob: -8.656229972839355
    9. ':
' → logprob: -9.406229972839355
    10. '):
' → logprob: -9.531229972839355

Token 179: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.003137435531243682
    2. ' for' → logprob: -6.628137588500977
    3. '           ' → logprob: -7.378137588500977
    4. '<|end|>' → logprob: -7.878137588500977
    5. '                ' → logprob: -9.003137588500977
    6. '                
' → logprob: -9.128137588500977
    7. '	           ' → logprob: -9.128137588500977
    8. '       ' → logprob: -9.503137588500977
    9. '              ' → logprob: -10.128137588500977
    10. '		       ' → logprob: -10.128137588500977

Token 180: ' if' (ID: 538)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.15552183985710144
    2. '               ' → logprob: -2.780521869659424
    3. 'for' → logprob: -3.030521869659424
    4. '           ' → logprob: -3.405521869659424
    5. '	           ' → logprob: -8.530521392822266
    6. '	for' → logprob: -9.530521392822266
    7. '            ' → logprob: -10.030521392822266
    8. '                   ' → logprob: -10.530521392822266
    9. '	       ' → logprob: -10.655521392822266
    10. '   ' → logprob: -10.780521392822266

Token 181: ' counts' (ID: 28991)
  Prédit: 'counts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'counts' → logprob: -0.3869939148426056
    2. ' counts' → logprob: -1.1369938850402832
    3. 'count' → logprob: -9.261994361877441
    4. ' s' → logprob: -12.011994361877441
    5. '   ' → logprob: -12.386994361877441
    6. 's' → logprob: -12.386994361877441
    7. ' ' → logprob: -12.761994361877441
    8. '0' → logprob: -13.636994361877441
    9. '_counts' → logprob: -13.949494361877441
    10. ' count' → logprob: -13.949494361877441

Token 182: '[s' (ID: 24177)
  Prédit: '[s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[s' → logprob: -1.0325924449716695e-05
    2. '[' → logprob: -12.25001049041748
    3. ' [' → logprob: -12.62501049041748
    4. 's' → logprob: -13.25001049041748
    5. ' s' → logprob: -16.000009536743164
    6. '[
' → logprob: -16.500009536743164
    7. '(s' → logprob: -17.000009536743164
    8. '   ' → logprob: -17.625009536743164
    9. ' ' → logprob: -17.875009536743164
    10. '[t' → logprob: -18.000009536743164

Token 183: ']' (ID: 60)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.1823832392692566
    2. ']>' → logprob: -2.4323832988739014
    3. ']' → logprob: -3.3073832988739014
    4. ' >' → logprob: -3.4323832988739014
    5. ']:' → logprob: -5.432383060455322
    6. ']!=' → logprob: -6.182383060455322
    7. ']:
' → logprob: -7.182383060455322
    8. ' !=' → logprob: -7.432383060455322
    9. ']==' → logprob: -7.557383060455322
    10. '!=' → logprob: -7.682383060455322

Token 184: ' !=' (ID: 1666)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.03208450227975845
    2. ' >' → logprob: -3.5320844650268555
    3. ':' → logprob: -6.2820844650268555
    4. '!=' → logprob: -8.157084465026855
    5. ' !=' → logprob: -9.282084465026855
    6. '>:' → logprob: -10.907084465026855
    7. '==' → logprob: -11.407084465026855
    8. ')>' → logprob: -11.532084465026855
    9. '">' → logprob: -11.782084465026855
    10. ':
' → logprob: -11.907084465026855

Token 185: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0017021986423060298
    2. ' ' → logprob: -6.376702308654785
    3. '  ' → logprob: -18.75170135498047
    4. '۰' → logprob: -19.00170135498047
    5. '<|end|>' → logprob: -19.12670135498047
    6. ' ' → logprob: -19.37670135498047
    7. '   ' → logprob: -19.62670135498047
    8. '```' → logprob: -20.50170135498047
    9. ' ' → logprob: -21.00170135498047
    10. '[' → logprob: -21.50170135498047

Token 186: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.7610454708337784e-05
    2. ' ' → logprob: -10.500027656555176
    3. '   ' → logprob: -20.00002670288086
    4. '  ' → logprob: -20.50002670288086
    5. '۰' → logprob: -20.75002670288086
    6. '```' → logprob: -21.25002670288086
    7. 'zero' → logprob: -21.87502670288086
    8. '    ' → logprob: -22.37502670288086
    9. '[' → logprob: -22.37502670288086
    10. '<|end|>' → logprob: -22.75002670288086

Token 187: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5775819420814514
    2. ':
' → logprob: -0.8275819420814514
    3. '               ' → logprob: -7.327581882476807
    4. '                   ' → logprob: -7.327581882476807
    5. '           ' → logprob: -9.452582359313965
    6. '                       ' → logprob: -9.827582359313965
    7. ',' → logprob: -9.952582359313965
    8. ' and' → logprob: -10.327582359313965
    9. '):
' → logprob: -10.577582359313965
    10. '<|end|>' → logprob: -10.577582359313965

Token 188: '                   ' (ID: 699)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.7221454381942749
    2. '                   ' → logprob: -0.8471454381942749
    3. '<|end|>' → logprob: -3.8471455574035645
    4. ' for' → logprob: -3.9721455574035645
    5. '                ' → logprob: -3.9721455574035645
    6. '           ' → logprob: -4.7221455574035645
    7. ' ' → logprob: -5.7221455574035645
    8. '                       ' → logprob: -5.8471455574035645
    9. '                    
' → logprob: -6.4721455574035645
    10. ' 
' → logprob: -6.7221455574035645

Token 189: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.32203978300094604
    2. 'for' (adapté à ' for') → logprob: -1.3220398426055908
    3. '                       ' → logprob: -5.322039604187012
    4. '                   ' → logprob: -5.822039604187012
    5. '               ' → logprob: -7.072039604187012
    6. '	for' → logprob: -10.822039604187012
    7. '```' → logprob: -12.572039604187012
    8. '	               ' → logprob: -13.072039604187012
    9. '                    ' → logprob: -13.322039604187012
    10. '                     ' → logprob: -13.322039604187012

Token 190: ' face' (ID: 4950)
  Prédit: 'face'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'face' → logprob: -0.12827003002166748
    2. ' face' → logprob: -2.128270149230957
    3. 'f' → logprob: -7.253270149230957
    4. 'value' → logprob: -9.003270149230957
    5. ' f' → logprob: -9.378270149230957
    6. 'val' → logprob: -9.503270149230957
    7. 'roll' → logprob: -9.753270149230957
    8. 'v' → logprob: -10.253270149230957
    9. '   ' → logprob: -10.378270149230957
    10. ' roll' → logprob: -10.378270149230957

Token 191: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.009762583300471306
    2. 'in' → logprob: -4.634762763977051
    3. 's' → logprob: -12.75976276397705
    4. ' ' → logprob: -14.00976276397705
    5. '```' → logprob: -14.50976276397705
    6. '	in' → logprob: -15.13476276397705
    7. 'face' → logprob: -15.25976276397705
    8. 'd' → logprob: -15.63476276397705
    9. '   ' → logprob: -15.88476276397705
    10. '1' → logprob: -15.88476276397705

Token 192: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.126929372549057
    2. 'range' → logprob: -2.12692928314209
    3. '(range' → logprob: -13.87692928314209
    4. '1' → logprob: -15.50192928314209
    5. '	range' → logprob: -16.001930236816406
    6. '   ' → logprob: -16.376930236816406
    7. ' ' → logprob: -17.626930236816406
    8. '    ' → logprob: -19.376930236816406
    9. '  ' → logprob: -20.001930236816406
    10. '_range' → logprob: -20.251930236816406

Token 193: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.47408273816108704
    2. '1' → logprob: -0.9740827083587646
    3. '   ' → logprob: -12.474082946777344
    4. ' ' → logprob: -13.724082946777344
    5. ' (' → logprob: -14.474082946777344
    6. '[' → logprob: -15.974082946777344
    7. '                       ' → logprob: -17.224082946777344
    8. '{' → logprob: -17.599082946777344
    9. '           ' → logprob: -17.724082946777344
    10. '                   ' → logprob: -18.099082946777344

Token 194: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.2987729102605954e-05
    2. ' ' → logprob: -10.125042915344238
    3. '   ' → logprob: -13.000042915344238
    4. '(' → logprob: -14.375042915344238
    5. ')' → logprob: -17.500043869018555
    6. '  ' → logprob: -18.500043869018555
    7. '                       ' → logprob: -18.625043869018555
    8. '       ' → logprob: -18.750043869018555
    9. '           ' → logprob: -19.250043869018555
    10. '۱' → logprob: -19.250043869018555

Token 195: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03298213705420494
    2. ',m' → logprob: -3.657982110977173
    3. ' ,' → logprob: -5.032982349395752
    4. 'm' → logprob: -8.907981872558594
    5. ',
' → logprob: -12.657981872558594
    6. '‌,' → logprob: -14.532981872558594
    7. ',int' → logprob: -14.907981872558594
    8. '   ' → logprob: -16.282981872558594
    9. '           ' → logprob: -16.407981872558594
    10. '1' → logprob: -16.532981872558594

Token 196: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.004078639671206474
    2. ' m' → logprob: -5.5040788650512695
    3. '   ' → logprob: -16.129077911376953
    4. '	m' → logprob: -16.379077911376953
    5. '+m' → logprob: -17.879077911376953
    6. '    ' → logprob: -18.754077911376953
    7. ')m' → logprob: -18.879077911376953
    8. ' ' → logprob: -19.004077911376953
    9. '​' → logprob: -20.504077911376953
    10. '           ' → logprob: -20.629077911376953

Token 197: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -2.165027217415627e-05
    2. ' +' → logprob: -10.750021934509277
    3. '+
' → logprob: -16.00002098083496
    4. '()+' → logprob: -17.75002098083496
    5. ')+' → logprob: -18.62502098083496
    6. '+m' → logprob: -19.12502098083496
    7. '＋' → logprob: -19.12502098083496
    8. '```' → logprob: -19.37502098083496
    9. '+)' → logprob: -19.50002098083496
    10. '+k' → logprob: -20.25002098083496

Token 198: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0008112939540296793
    2. '+' → logprob: -7.2508111000061035
    3. ' ' → logprob: -9.500811576843262
    4. '2' → logprob: -11.625811576843262
    5. ' +' → logprob: -12.375811576843262
    6. '   ' → logprob: -12.625811576843262
    7. '7' → logprob: -12.750811576843262
    8. '```' → logprob: -12.750811576843262
    9. '6' → logprob: -13.375811576843262
    10. ')' → logprob: -14.000811576843262

Token 199: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.13471285998821259
    2. ':' → logprob: -2.8847129344940186
    3. '):' → logprob: -3.5097129344940186
    4. ':
' → logprob: -3.7597129344940186
    5. '                       ' → logprob: -4.5097126960754395
    6. '                   ' → logprob: -5.6347126960754395
    7. '               ' → logprob: -7.3847126960754395
    8. '():
' → logprob: -8.134713172912598
    9. ' ):
' → logprob: -8.384713172912598
    10. '                           ' → logprob: -8.509713172912598

Token 200: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.007840131409466267
    2. ' new' → logprob: -5.007840156555176
    3. 'new' → logprob: -8.132840156555176
    4. '                        
' → logprob: -8.257840156555176
    5. '                   ' → logprob: -8.882840156555176
    6. '               ' → logprob: -9.007840156555176
    7. '                           ' → logprob: -9.382840156555176
    8. '                        ' → logprob: -10.007840156555176
    9. '                               ' → logprob: -10.382840156555176
    10. '[new' → logprob: -10.382840156555176

Token 201: ' new' (ID: 620)
  Prédit: ' new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.1687564253807068
    2. 'new' (adapté à ' new') → logprob: -1.9187564849853516
    3. '                           ' → logprob: -5.418756484985352
    4. ' if' → logprob: -6.293756484985352
    5. '                               ' → logprob: -6.918756484985352
    6. '   ' → logprob: -7.418756484985352
    7. '                                   ' → logprob: -8.168756484985352
    8. 'if' → logprob: -8.418756484985352
    9. '                       ' → logprob: -9.918756484985352
    10. '           ' → logprob: -11.293756484985352

Token 202: '_counts' (ID: 61971)
  Prédit: '_counts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_counts' → logprob: -6.704273118884885e-07
    2. '_faces' → logprob: -15.750000953674316
    3. '_' → logprob: -15.875000953674316
    4. ' _' → logprob: -16.0
    5. '```' → logprob: -16.625
    6. '_c' → logprob: -16.875
    7. '_face' → logprob: -17.375
    8. '_scores' → logprob: -17.75
    9. ')_' → logprob: -18.125
    10. '_codes' → logprob: -18.625

Token 203: '[s' (ID: 24177)
  Prédit: '[s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[s' → logprob: -1.652451464906335e-05
    2. '[' → logprob: -11.250016212463379
    3. ' [' → logprob: -13.250016212463379
    4. 's' → logprob: -13.500016212463379
    5. '[
' → logprob: -16.125017166137695
    6. '                           ' → logprob: -16.750017166137695
    7. '                       ' → logprob: -17.000017166137695
    8. '```' → logprob: -17.125017166137695
    9. '                   ' → logprob: -17.625017166137695
    10. '(s' → logprob: -17.750017166137695

Token 204: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.20141558349132538
    2. ' +' → logprob: -1.7014155387878418
    3. '+
' → logprob: -13.701416015625
    4. ' +
' → logprob: -14.576416015625
    5. '＋' → logprob: -14.951416015625
    6. ' plus' → logprob: -16.701416015625
    7. ']+' → logprob: -17.201416015625
    8. '[' → logprob: -17.201416015625
    9. '+]' → logprob: -17.201416015625
    10. ' ' → logprob: -17.326416015625

Token 205: 'face' (ID: 2300)
  Prédit: 'face'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'face' → logprob: -3.5597102396423e-05
    2. ' face' → logprob: -10.250035285949707
    3. '(face' → logprob: -15.750035285949707
    4. 'ace' → logprob: -17.750036239624023
    5. '_face' → logprob: -18.125036239624023
    6. '.face' → logprob: -18.875036239624023
    7. ' ' → logprob: -21.250036239624023
    8. '   ' → logprob: -21.250036239624023
    9. '-face' → logprob: -21.625036239624023
    10. '
' → logprob: -21.750036239624023

Token 206: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.003336218185722828
    2. ']+=' → logprob: -5.753336429595947
    3. ' ]' → logprob: -8.753335952758789
    4. ']+' → logprob: -16.37833595275879
    5. ')' → logprob: -16.50333595275879
    6. '[' → logprob: -16.62833595275879
    7. '```' → logprob: -17.25333595275879
    8. '+=' → logprob: -17.37833595275879
    9. '`]' → logprob: -17.50333595275879
    10. ']=' → logprob: -17.75333595275879

Token 207: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.3944169580936432
    2. ' +=' → logprob: -1.1444169282913208
    3. ']+=' → logprob: -4.894416809082031
    4. ']' → logprob: -11.269416809082031
    5. '+' → logprob: -12.269416809082031
    6. '[' → logprob: -12.394416809082031
    7. '```' → logprob: -12.769416809082031
    8. '=' → logprob: -13.019416809082031
    9. '    ' → logprob: -14.894416809082031
    10. '            ' → logprob: -15.144416809082031

Token 208: ' counts' (ID: 28991)
  Prédit: 'counts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'counts' → logprob: -0.16025112569332123
    2. ' counts' → logprob: -1.9102511405944824
    3. 'count' → logprob: -10.660250663757324
    4. '                       ' → logprob: -13.035250663757324
    5. '                   ' → logprob: -15.035250663757324
    6. '           ' → logprob: -15.160250663757324
    7. '_counts' → logprob: -15.410250663757324
    8. '                           ' → logprob: -15.785250663757324
    9. '               ' → logprob: -15.910250663757324
    10. '   ' → logprob: -16.41025161743164

Token 209: '[s' (ID: 24177)
  Prédit: '[s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[s' → logprob: -9.925185440806672e-05
    2. 's' → logprob: -9.250099182128906
    3. '[' → logprob: -12.750099182128906
    4. ' s' → logprob: -15.875099182128906
    5. ' [' → logprob: -17.375099182128906
    6. '```' → logprob: -17.875099182128906
    7. '(s' → logprob: -18.625099182128906
    8. '	s' → logprob: -18.750099182128906
    9. '[S' → logprob: -19.875099182128906
    10. ''s' → logprob: -20.375099182128906

Token 210: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.055820029228925705
    2. '[s' → logprob: -3.3058199882507324
    3. '[' → logprob: -4.180819988250732
    4. ' ]' → logprob: -6.305819988250732
    5. '<|end|>' → logprob: -8.30582046508789
    6. '[new' → logprob: -10.43082046508789
    7. ']*' → logprob: -10.43082046508789
    8. ')' → logprob: -10.55582046508789
    9. 's' → logprob: -10.68082046508789
    10. '[line' → logprob: -10.80582046508789

Token 211: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.026620840653777122
    2. ' counts' → logprob: -3.776620864868164
    3. 'counts' → logprob: -5.776620864868164
    4. '
' → logprob: -9.151620864868164
    5. '_counts' → logprob: -9.901620864868164
    6. '       ' → logprob: -10.526620864868164
    7. '<|end|>' → logprob: -10.651620864868164
    8. '          ' → logprob: -11.276620864868164
    9. ' new' → logprob: -11.526620864868164
    10. 'new' → logprob: -12.151620864868164

Token 212: ' counts' (ID: 28991)
  Prédit: 'counts'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'counts' (adapté à ' counts') → logprob: -0.20286409556865692
    2. ' counts' → logprob: -1.7028640508651733
    3. '       ' → logprob: -6.702864170074463
    4. 'count' → logprob: -9.202863693237305
    5. '   ' → logprob: -9.577863693237305
    6. '           ' → logprob: -10.327863693237305
    7. ' ' → logprob: -12.077863693237305
    8. '_counts' → logprob: -12.077863693237305
    9. '```' → logprob: -12.577863693237305
    10. '
' → logprob: -13.202863693237305

Token 213: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03804183006286621
    2. '=' → logprob: -3.288041830062866
    3. ',' → logprob: -15.163042068481445
    4. ' ' → logprob: -17.038042068481445
    5. '＝' → logprob: -17.663042068481445
    6. '```' → logprob: -18.163042068481445
    7. ' =)' → logprob: -18.663042068481445
    8. 's' → logprob: -18.663042068481445
    9. '=s' → logprob: -19.038042068481445
    10. '=new' → logprob: -19.163042068481445

Token 214: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.12692810595035553
    2. ' new' → logprob: -2.1269280910491943
    3. '新' → logprob: -19.376928329467773
    4. '	new' → logprob: -19.376928329467773
    5. '[new' → logprob: -19.626928329467773
    6. '_new' → logprob: -20.126928329467773
    7. '```' → logprob: -20.501928329467773
    8. 'New' → logprob: -20.751928329467773
    9. ' ' → logprob: -21.626928329467773
    10. '$new' → logprob: -21.751928329467773

Token 215: '_counts' (ID: 61971)
  Prédit: '_counts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_counts' → logprob: -0.0003364158037584275
    2. 'counts' → logprob: -8.000336647033691
    3. ' counts' → logprob: -14.875336647033691
    4. '_' → logprob: -15.625336647033691
    5. 's' → logprob: -15.750336647033691
    6. '_c' → logprob: -16.125335693359375
    7. '_count' → logprob: -16.625335693359375
    8. 'w' → logprob: -16.875335693359375
    9. 'Counts' → logprob: -17.000335693359375
    10. 'new' → logprob: -17.625335693359375

Token 216: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.363655149936676
    2. '<|end|>' → logprob: -1.2386550903320312
    3. '       ' → logprob: -4.738655090332031
    4. '        
' → logprob: -5.363655090332031
    5. '```' → logprob: -7.863655090332031
    6. '

' → logprob: -7.863655090332031
    7. '<|end|>' → logprob: -8.363655090332031
    8. '
        
' → logprob: -8.488655090332031
    9. '
' → logprob: -9.488655090332031
    10. '            
' → logprob: -9.738655090332031

Token 217: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0767969936132431
    2. '
' → logprob: -3.9517970085144043
    3. 'prob' → logprob: -4.076797008514404
    4. 'result' → logprob: -4.201797008514404
    5. '        
' → logprob: -5.076797008514404
    6. 'total' → logprob: -5.326797008514404
    7. '   ' → logprob: -5.826797008514404
    8. 'if' → logprob: -6.076797008514404
    9. 'print' → logprob: -6.451797008514404
    10. '```' → logprob: -6.701797008514404

Token 218: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' (adapté à ' total') → logprob: -0.1340050995349884
    2. '       ' → logprob: -3.509005069732666
    3. 'max' → logprob: -3.884005069732666
    4. 'target' → logprob: -3.884005069732666
    5. 'if' → logprob: -4.509005069732666
    6. 'possible' → logprob: -4.509005069732666
    7. 'print' → logprob: -4.634005069732666
    8. 'result' → logprob: -5.134005069732666
    9. 'ways' → logprob: -5.759005069732666
    10. 'prob' → logprob: -5.884005069732666

Token 219: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.12874628603458405
    2. ' =' → logprob: -2.503746271133423
    3. '_pos' → logprob: -3.878746271133423
    4. '=' → logprob: -4.128746509552002
    5. '_out' → logprob: -6.753746509552002
    6. '_com' → logprob: -7.753746509552002
    7. '_possible' → logprob: -7.878746509552002
    8. '_roll' → logprob: -9.253746032714844
    9. '_counts' → logprob: -10.003746032714844
    10. '_=' → logprob: -10.878746032714844

Token 220: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.00451698899269104
    2. '(m' → logprob: -6.504517078399658
    3. 'pow' → logprob: -6.754517078399658
    4. ' m' → logprob: -6.879517078399658
    5. 'sum' → logprob: -7.754517078399658
    6. '   ' → logprob: -8.7545166015625
    7. 'float' → logprob: -9.1295166015625
    8. '[m' → logprob: -10.0045166015625
    9. '0' → logprob: -10.3795166015625
    10. '(' → logprob: -12.1295166015625

Token 221: '**' (ID: 410)
  Prédit: '**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.001170460251159966
    2. ' **' → logprob: -6.751170635223389
    3. '*n' → logprob: -16.001171112060547
    4. '```' → logprob: -16.376171112060547
    5. 'n' → logprob: -18.376171112060547
    6. '***' → logprob: -18.751171112060547
    7. '**
' → logprob: -19.251171112060547
    8. '\n' → logprob: -19.376171112060547
    9. '^' → logprob: -19.376171112060547
    10. '[n' → logprob: -20.001171112060547

Token 222: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -4.246537173457909e-06
    2. ' n' → logprob: -12.375003814697266
    3. '(n' → logprob: -19.750003814697266
    4. '   ' → logprob: -20.375003814697266
    5. '```' → logprob: -20.875003814697266
    6. '	n' → logprob: -21.250003814697266
    7. 'k' → logprob: -21.625003814697266
    8. '$n' → logprob: -22.250003814697266
    9. '    ' → logprob: -22.375003814697266
    10. ')n' → logprob: -22.875003814697266

Token 223: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4472202956676483
    2. '       ' → logprob: -1.4472203254699707
    3. '<|end|>' → logprob: -2.1972203254699707
    4. '        
' → logprob: -4.697220325469971
    5. '  
' → logprob: -7.072220325469971
    6. '<|end|>' → logprob: -7.322220325469971
    7. ' probabilities' → logprob: -7.572220325469971
    8. ',' → logprob: -7.697220325469971
    9. ' 
' → logprob: -7.822220325469971
    10. 'possible' → logprob: -8.322219848632812

Token 224: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012613256461918354
    2. 'ways' → logprob: -5.762613296508789
    3. 'prob' → logprob: -5.762613296508789
    4. 'possible' → logprob: -5.762613296508789
    5. 'result' → logprob: -7.262613296508789
    6. ' ways' → logprob: -7.262613296508789
    7. '```' → logprob: -8.137613296508789
    8. ' possible' → logprob: -8.262613296508789
    9. '        
' → logprob: -8.262613296508789
    10. 'poss' → logprob: -8.637613296508789

Token 225: ' expected' (ID: 5930)
  Prédit: 'prob'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prob' → logprob: -1.4316743612289429
    2. 'success' → logprob: -2.1816744804382324
    3. 'ways' → logprob: -2.3066744804382324
    4. 'f' → logprob: -2.3066744804382324
    5. 'count' → logprob: -2.4316744804382324
    6. 'valid' → logprob: -2.5566744804382324
    7. 'result' → logprob: -2.8066744804382324
    8. '       ' → logprob: -3.0566744804382324
    9. 'answer' → logprob: -3.4316744804382324
    10. 'ans' → logprob: -4.056674480438232

Token 226: ' =' (ID: 314)
  Prédit: '_value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.07850170135498047
    2. '_' → logprob: -2.8285017013549805
    3. ' =' → logprob: -4.8285017013549805
    4. '_sum' → logprob: -5.3285017013549805
    5. '=' → logprob: -6.7035017013549805
    6. '_val' → logprob: -7.2035017013549805
    7. '_score' → logprob: -7.8285017013549805
    8. '_count' → logprob: -8.32850170135498
    9. '_result' → logprob: -8.82850170135498
    10. '_probability' → logprob: -9.07850170135498

Token 227: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.08119183033704758
    2. ' ' → logprob: -3.0811917781829834
    3. ' sum' → logprob: -3.7061917781829834
    4. 'sum' → logprob: -4.9561920166015625
    5. ' k' → logprob: -8.206192016601562
    6. '   ' → logprob: -8.956192016601562
    7. 'k' → logprob: -10.081192016601562
    8. '(sum' → logprob: -12.206192016601562
    9. '```' → logprob: -12.581192016601562
    10. '       ' → logprob: -13.081192016601562

Token 228: '0' (ID: 15)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.14672249555587769
    2. '0' → logprob: -2.0217225551605225
    3. 'k' → logprob: -5.771722316741943
    4. '   ' → logprob: -7.771722316741943
    5. ' sum' → logprob: -8.396722793579102
    6. 'counts' → logprob: -8.771722793579102
    7. '(sum' → logprob: -10.271722793579102
    8. 'float' → logprob: -11.146722793579102
    9. '```' → logprob: -11.271722793579102
    10. ' ' → logprob: -11.646722793579102

Token 229: '.' (ID: 13)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6944908499717712
    2. '
' → logprob: -1.319490909576416
    3. '<|end|>' → logprob: -1.569490909576416
    4. ' for' → logprob: -4.069490909576416
    5. '<|end|>' → logprob: -6.319490909576416
    6. '        
' → logprob: -6.444490909576416
    7. 'for' → logprob: -6.569490909576416
    8. ' 
' → logprob: -7.319490909576416
    9. '  
' → logprob: -7.694490909576416
    10. '   ' → logprob: -8.194490432739258

Token 230: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06417747586965561
    2. 'for' → logprob: -2.8141775131225586
    3. '       ' → logprob: -7.189177513122559
    4. ' for' → logprob: -7.439177513122559
    5. '   ' → logprob: -8.439177513122559
    6. '5' → logprob: -8.814177513122559
    7. ' ' → logprob: -9.564177513122559
    8. '
' → logprob: -9.689177513122559
    9. 'count' → logprob: -9.814177513122559
    10. 'def' → logprob: -9.814177513122559

Token 231: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 232: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.25403761863708496
    2. '<|end|>' → logprob: -1.754037618637085
    3. '
' → logprob: -3.629037618637085
    4. ' for' → logprob: -4.004037857055664
    5. 'for' → logprob: -5.629037857055664
    6. ' 
' → logprob: -7.129037857055664
    7. '   ' → logprob: -7.379037857055664
    8. '        
' → logprob: -7.879037857055664
    9. '<|end|>' → logprob: -8.254037857055664
    10. ' ' → logprob: -8.379037857055664

Token 233: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.22297979891300201
    2. ' for' → logprob: -1.7229797840118408
    3. '       ' → logprob: -3.847979784011841
    4. 'range' → logprob: -12.097979545593262
    5. '   ' → logprob: -12.972979545593262
    6. 'sum' → logprob: -13.472979545593262
    7. ' range' → logprob: -13.847979545593262
    8. 'total' → logprob: -14.472979545593262
    9. '	for' → logprob: -14.847979545593262
    10. '```' → logprob: -14.847979545593262

Token 234: ' sum' (ID: 4215)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00823050644248724
    2. ' for' → logprob: -4.883230686187744
    3. '       ' → logprob: -7.383230686187744
    4. '   ' → logprob: -13.383230209350586
    5. 'range' → logprob: -14.508230209350586
    6. '```' → logprob: -15.133230209350586
    7. 'sum' → logprob: -16.633230209350586
    8. 'total' → logprob: -17.508230209350586
    9. '	for' → logprob: -17.508230209350586
    10. '
' → logprob: -17.633230209350586

Token 235: ' of' (ID: 328)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6948186159133911
    2. ' for' → logprob: -1.9448186159133911
    3. ' =' → logprob: -2.5698184967041016
    4. '=' → logprob: -2.8198184967041016
    5. '(s' → logprob: -3.4448184967041016
    6. '_range' → logprob: -3.4448184967041016
    7. '(' → logprob: -3.6948184967041016
    8. '_of' → logprob: -3.8198184967041016
    9. 'range' → logprob: -3.8198184967041016
    10. ' of' → logprob: -4.069818496704102

Token 236: ' spots' (ID: 25522)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.27242156863212585
    2. ' s' → logprob: -2.0224215984344482
    3. 'range' → logprob: -3.6474215984344482
    4. 'counts' → logprob: -3.8974215984344482
    5. '(s' → logprob: -4.272421360015869
    6. 'expected' → logprob: -4.647421360015869
    7. 'for' → logprob: -4.772421360015869
    8. ' range' → logprob: -4.897421360015869
    9. ' counts' → logprob: -5.147421360015869
    10. 'prob' → logprob: -5.897421360015869

Token 237: ' s' (ID: 265)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.47754672169685364
    2. 'for' → logprob: -1.2275466918945312
    3. ' =' → logprob: -3.3525466918945312
    4. '=' → logprob: -3.9775466918945312
    5. '       ' → logprob: -4.477546691894531
    6. ' in' → logprob: -4.852546691894531
    7. ' s' → logprob: -4.852546691894531
    8. 's' → logprob: -6.852546691894531
    9. ' *' → logprob: -7.102546691894531
    10. ' +=' → logprob: -7.352546691894531

Token 238: ' runs' (ID: 13719)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.48397234082221985
    2. ' in' → logprob: -1.6089723110198975
    3. '       ' → logprob: -2.2339723110198975
    4. ' =' → logprob: -3.7339723110198975
    5. 'for' → logprob: -4.233972549438477
    6. '        ' → logprob: -4.483972549438477
    7. '=' → logprob: -4.608972549438477
    8. ' *' → logprob: -5.483972549438477
    9. ' from' → logprob: -5.733972549438477
    10. ',' → logprob: -5.858972549438477

Token 239: ' from' (ID: 591)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.12921246886253357
    2. ' from' → logprob: -2.3792123794555664
    3. '=' → logprob: -4.754212379455566
    4. 's' → logprob: -5.004212379455566
    5. 'for' → logprob: -5.629212379455566
    6. ',' → logprob: -6.504212379455566
    7. 'range' → logprob: -6.504212379455566
    8. ' for' → logprob: -6.504212379455566
    9. ' =' → logprob: -6.629212379455566
    10. 'k' → logprob: -6.629212379455566

Token 240: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.11562620848417282
    2. ' n' → logprob: -2.490626096725464
    3. 'k' → logprob: -3.740626096725464
    4. ' k' → logprob: -6.115626335144043
    5. '0' → logprob: -8.115626335144043
    6. '[n' → logprob: -11.240626335144043
    7. '1' → logprob: -11.240626335144043
    8. ' ' → logprob: -11.365626335144043
    9. '(n' → logprob: -11.865626335144043
    10. '    ' → logprob: -11.865626335144043

Token 241: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.34875452518463135
    2. 'to' → logprob: -1.2237545251846313
    3. ',' → logprob: -8.8487548828125
    4. ' ' → logprob: -9.7237548828125
    5. '   ' → logprob: -9.9737548828125
    6. '<|end|>' → logprob: -11.3487548828125
    7. 'n' → logprob: -11.5987548828125
    8. '    ' → logprob: -12.2237548828125
    9. 'for' → logprob: -12.5987548828125
    10. '  ' → logprob: -12.5987548828125

Token 242: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.034730214625597
    2. ' n' → logprob: -3.4097301959991455
    3. '(n' → logprob: -7.659730434417725
    4. 'k' → logprob: -8.784729957580566
    5. '   ' → logprob: -8.784729957580566
    6. 'm' → logprob: -8.909729957580566
    7. 'nm' → logprob: -9.909729957580566
    8. ' (' → logprob: -10.034729957580566
    9. '    ' → logprob: -11.159729957580566
    10. '     ' → logprob: -11.534729957580566

Token 243: '*m' (ID: 85049)
  Prédit: '*m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*m' → logprob: -0.000891928793862462
    2. '*' → logprob: -7.500892162322998
    3. 'm' → logprob: -8.25089168548584
    4. ' *' → logprob: -9.62589168548584
    5. '*n' → logprob: -12.25089168548584
    6. '   ' → logprob: -12.87589168548584
    7. '       ' → logprob: -14.25089168548584
    8. '```' → logprob: -14.50089168548584
    9. '*s' → logprob: -14.87589168548584
    10. ',' → logprob: -14.87589168548584

Token 244: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13612918555736542
    2. ' for' → logprob: -2.136129140853882
    3. '
' → logprob: -5.636129379272461
    4. 'for' → logprob: -6.511129379272461
    5. '<|end|>' → logprob: -7.136129379272461
    6. '        ' → logprob: -7.261129379272461
    7. '        
' → logprob: -7.261129379272461
    8. ',' → logprob: -7.761129379272461
    9. '   ' → logprob: -8.386129379272461
    10. ' ' → logprob: -8.386129379272461

Token 245: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0018353492487221956
    2. ' for' → logprob: -6.876835346221924
    3. '<|end|>' → logprob: -7.251835346221924
    4. '        
' → logprob: -10.876835823059082
    5. '   ' → logprob: -11.126835823059082
    6. 'for' → logprob: -11.251835823059082
    7. '<|end|>' → logprob: -11.251835823059082
    8. '
' → logprob: -11.376835823059082
    9. '        ' → logprob: -12.126835823059082
    10. '```' → logprob: -12.626835823059082

Token 246: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23654013872146606
    2. ' for' → logprob: -1.9865400791168213
    3. 'for' (adapté à ' for') → logprob: -2.6115400791168213
    4. '   ' → logprob: -10.111539840698242
    5. '	for' → logprob: -12.236539840698242
    6. '```' → logprob: -12.486539840698242
    7. '        ' → logprob: -13.111539840698242
    8. '           ' → logprob: -13.736539840698242
    9. ' ' → logprob: -13.861539840698242
    10. '      ' → logprob: -14.486539840698242

Token 247: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.005940055940300226
    2. 's' → logprob: -5.130939960479736
    3. '   ' → logprob: -12.380940437316895
    4. ' ' → logprob: -12.880940437316895
    5. ' sum' → logprob: -12.880940437316895
    6. '	s' → logprob: -15.130940437316895
    7. '_s' → logprob: -15.130940437316895
    8. 'sum' → logprob: -15.255940437316895
    9. ' i' → logprob: -15.505940437316895
    10. ' ' → logprob: -15.505940437316895

Token 248: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0024779161904007196
    2. 'in' → logprob: -6.002478122711182
    3. ' ' → logprob: -14.127477645874023
    4. '	in' → logprob: -14.752477645874023
    5. ' =' → logprob: -15.002477645874023
    6. ',' → logprob: -15.377477645874023
    7. '=' → logprob: -15.377477645874023
    8. 's' → logprob: -16.127477645874023
    9. 'In' → logprob: -16.252477645874023
    10. '_in' → logprob: -16.877477645874023

Token 249: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.20141547918319702
    2. ' range' → logprob: -1.7014155387878418
    3. '(range' → logprob: -14.076415061950684
    4. '   ' → logprob: -14.201415061950684
    5. ' ' → logprob: -14.826415061950684
    6. '	range' → logprob: -15.326415061950684
    7. '  ' → logprob: -16.576416015625
    8. 'n' → logprob: -17.451416015625
    9. 'in' → logprob: -17.951416015625
    10. ' in' → logprob: -18.076416015625

Token 250: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00031270162435248494
    2. '(' → logprob: -8.125312805175781
    3. ' (' → logprob: -11.250312805175781
    4. 'n' → logprob: -12.750312805175781
    5. '   ' → logprob: -15.000312805175781
    6. ' n' → logprob: -15.875312805175781
    7. '(
' → logprob: -16.12531280517578
    8. '	n' → logprob: -16.25031280517578
    9. '[n' → logprob: -17.12531280517578
    10. ',n' → logprob: -17.62531280517578

Token 251: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.668304245569743e-05
    2. ',n' → logprob: -10.125046730041504
    3. ' ,' → logprob: -12.000046730041504
    4. ',
' → logprob: -16.250045776367188
    5. ',s' → logprob: -16.625045776367188
    6. '   ' → logprob: -16.750045776367188
    7. 's' → logprob: -16.875045776367188
    8. 'n' → logprob: -17.125045776367188
    9. '<|end|>' → logprob: -17.250045776367188
    10. ',m' → logprob: -17.375045776367188

Token 252: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.007688493467867374
    2. ' n' → logprob: -5.007688522338867
    3. '(n' → logprob: -7.007688522338867
    4. 'len' → logprob: -10.507688522338867
    5. ' (' → logprob: -10.882688522338867
    6. '   ' → logprob: -11.757688522338867
    7. ' ' → logprob: -12.882688522338867
    8. '	n' → logprob: -12.882688522338867
    9. '(' → logprob: -13.382688522338867
    10. 'k' → logprob: -13.882688522338867

Token 253: '*m' (ID: 85049)
  Prédit: '*m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*m' → logprob: -1.2233183042553719e-05
    2. '*' → logprob: -12.000012397766113
    3. ' *' → logprob: -12.625012397766113
    4. '*n' → logprob: -13.500012397766113
    5. 'm' → logprob: -14.375012397766113
    6. '   ' → logprob: -15.625012397766113
    7. '**' → logprob: -15.750012397766113
    8. '*s' → logprob: -16.750011444091797
    9. '*i' → logprob: -16.875011444091797
    10. '*p' → logprob: -17.125011444091797

Token 254: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0017042214749380946
    2. ' +' → logprob: -6.376704216003418
    3. '   ' → logprob: -14.126704216003418
    4. '
' → logprob: -15.251704216003418
    5. '+
' → logprob: -15.376704216003418
    6. '+k' → logprob: -15.376704216003418
    7. '):
' → logprob: -15.626704216003418
    8. '()+' → logprob: -16.126705169677734
    9. '```' → logprob: -16.501705169677734
    10. '       ' → logprob: -16.626705169677734

Token 255: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.319370302458992e-06
    2. '+' → logprob: -12.250005722045898
    3. ' ' → logprob: -14.750005722045898
    4. '```' → logprob: -16.6250057220459
    5. '   ' → logprob: -17.3750057220459
    6. ')+' → logprob: -18.8750057220459
    7. '2' → logprob: -19.0000057220459
    8. ' +' → logprob: -19.2500057220459
    9. '       ' → logprob: -20.1250057220459
    10. '``' → logprob: -20.3750057220459

Token 256: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.47466331720352173
    2. '):
' → logprob: -0.9746633172035217
    3. ':' → logprob: -8.224663734436035
    4. '       ' → logprob: -8.474663734436035
    5. '):
' → logprob: -9.724663734436035
    6. '           ' → logprob: -10.849663734436035
    7. '   ' → logprob: -12.099663734436035
    8. ',' → logprob: -12.224663734436035
    9. '):

' → logprob: -12.224663734436035
    10. '+' → logprob: -12.349663734436035

Token 257: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0018191704293712974
    2. '<|end|>' → logprob: -7.126819133758545
    3. '       ' → logprob: -7.376819133758545
    4. ' if' → logprob: -8.626819610595703
    5. '```' → logprob: -9.626819610595703
    6. '<|end|>' → logprob: -10.376819610595703
    7. '   ' → logprob: -10.751819610595703
    8. '	       ' → logprob: -11.001819610595703
    9. ',' → logprob: -11.376819610595703
    10. '(expected' → logprob: -11.376819610595703

Token 258: ' val' (ID: 1459)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.017076710239052773
    2. ' expected' → logprob: -5.01707649230957
    3. 'expected' → logprob: -5.39207649230957
    4. ' if' → logprob: -5.39207649230957
    5. '       ' → logprob: -7.39207649230957
    6. '               ' → logprob: -8.39207649230957
    7. 'if' → logprob: -8.51707649230957
    8. '   ' → logprob: -8.89207649230957
    9. '```' → logprob: -11.26707649230957
    10. '	       ' → logprob: -12.89207649230957

Token 259: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47568371891975403
    2. '=' → logprob: -1.8506836891174316
    3. '   ' → logprob: -1.8506836891174316
    4. 's' → logprob: -3.9756836891174316
    5. '           ' → logprob: -4.100683689117432
    6. '       ' → logprob: -4.850683689117432
    7. 'expected' → logprob: -5.225683689117432
    8. ' ' → logprob: -5.975683689117432
    9. '_expected' → logprob: -5.975683689117432
    10. ',' → logprob: -6.975683689117432

Token 260: ' s' (ID: 265)
  Prédit: 'counts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'counts' → logprob: -0.4121052026748657
    2. ' counts' → logprob: -2.162105083465576
    3. '(s' → logprob: -2.412105083465576
    4. 's' → logprob: -2.537105083465576
    5. 'max' → logprob: -4.412105083465576
    6. ' s' → logprob: -4.662105083465576
    7. ' (' → logprob: -5.162105083465576
    8. ' max' → logprob: -5.662105083465576
    9. 'min' → logprob: -5.662105083465576
    10. '(count' → logprob: -5.787105083465576

Token 261: ' -' (ID: 533)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.026629894971847534
    2. '*' → logprob: -3.77662992477417
    3. '*k' → logprob: -5.77662992477417
    4. ' -' → logprob: -9.401629447937012
    5. ',' → logprob: -10.651629447937012
    6. ' if' → logprob: -10.651629447937012
    7. '*p' → logprob: -10.776629447937012
    8. '           ' → logprob: -11.401629447937012
    9. '-' → logprob: -11.526629447937012
    10. '   ' → logprob: -11.651629447937012

Token 262: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.01640593446791172
    2. '1' → logprob: -4.641406059265137
    3. 'n' → logprob: -5.516406059265137
    4. '(n' → logprob: -6.641406059265137
    5. '(k' → logprob: -7.141406059265137
    6. '(' → logprob: -8.141406059265137
    7. '10' → logprob: -10.391406059265137
    8. '100' → logprob: -10.391406059265137
    9. ' k' → logprob: -10.641406059265137
    10. '0' → logprob: -11.016406059265137

Token 263: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7589232325553894
    2. '           ' → logprob: -0.7589232325553894
    3. 'if' → logprob: -4.383923053741455
    4. ' if' → logprob: -4.633923053741455
    5. 'counts' → logprob: -4.758923053741455
    6. '*' → logprob: -5.133923053741455
    7. '+' → logprob: -5.258923053741455
    8. '>' → logprob: -5.383923053741455
    9. '               ' → logprob: -5.508923053741455
    10. ')' → logprob: -6.258923053741455

Token 264: '           ' (ID: 352)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6945964097976685
    2. '           ' → logprob: -0.8195964097976685
    3. 'if' → logprob: -3.319596290588379
    4. '
' → logprob: -4.069596290588379
    5. '>' → logprob: -6.444596290588379
    6. ')' → logprob: -6.444596290588379
    7. '*' → logprob: -7.569596290588379
    8. 'expected' → logprob: -7.569596290588379
    9. '       ' → logprob: -7.694596290588379
    10. '>=' → logprob: -7.819596290588379

Token 265: ' if' (ID: 538)
  Prédit: 'expected'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'expected' → logprob: -0.9755072593688965
    2. ' if' → logprob: -1.4755072593688965
    3. '           ' → logprob: -1.7255072593688965
    4. ' expected' → logprob: -1.7255072593688965
    5. 'if' (adapté à ' if') → logprob: -3.8505072593688965
    6. ')' → logprob: -4.9755072593688965
    7. '*' → logprob: -5.2255072593688965
    8. ' *' → logprob: -6.8505072593688965
    9. '
' → logprob: -7.1005072593688965
    10. '       ' → logprob: -7.7255072593688965

Token 266: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.20419088006019592
    2. ' val' → logprob: -1.7041908502578735
    3. 's' → logprob: -6.454190731048584
    4. ' s' → logprob: -6.829190731048584
    5. 'k' → logprob: -9.704191207885742
    6. ' k' → logprob: -10.954191207885742
    7. '(val' → logprob: -11.829191207885742
    8. '0' → logprob: -12.079191207885742
    9. ' ' → logprob: -12.204191207885742
    10. '	val' → logprob: -12.329191207885742

Token 267: ' <' (ID: 464)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.24340148270130157
    2. '>=' → logprob: -1.7434015274047852
    3. ' >' → logprob: -3.618401527404785
    4. ' >=' → logprob: -4.368401527404785
    5. '<=' → logprob: -7.243401527404785
    6. '<' → logprob: -7.493401527404785
    7. ' ' → logprob: -9.243401527404785
    8. ' <=' → logprob: -9.618401527404785
    9. '==' → logprob: -9.993401527404785
    10. ' <' → logprob: -10.368401527404785

Token 268: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002195933135226369
    2. '=' → logprob: -6.502195835113525
    3. '1' → logprob: -7.627195835113525
    4. ' ' → logprob: -8.752196311950684
    5. '>' → logprob: -10.377196311950684
    6. '-' → logprob: -12.627196311950684
    7. '   ' → logprob: -13.189696311950684
    8. ' =' → logprob: -13.314696311950684
    9. 's' → logprob: -13.377196311950684
    10. '2' → logprob: -13.877196311950684

Token 269: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0010354298865422606
    2. '1' → logprob: -7.126035213470459
    3. ' ' → logprob: -9.001035690307617
    4. '=' → logprob: -9.501035690307617
    5. '-' → logprob: -11.626035690307617
    6. 'n' → logprob: -11.876035690307617
    7. '>' → logprob: -12.876035690307617
    8. '2' → logprob: -13.188535690307617
    9. 's' → logprob: -13.438535690307617
    10. ' =' → logprob: -13.626035690307617

Token 270: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6540918946266174
    2. ':
' → logprob: -0.7790918946266174
    3. '           ' → logprob: -4.154091835021973
    4. '               ' → logprob: -5.529091835021973
    5. ' or' → logprob: -6.529091835021973
    6. '):
' → logprob: -10.279091835021973
    7. ' and' → logprob: -11.154091835021973
    8. '       ' → logprob: -11.279091835021973
    9. ' continue' → logprob: -11.404091835021973
    10. ':
' → logprob: -11.654091835021973

Token 271: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0005069229518994689
    2. '           ' → logprob: -8.625507354736328
    3. 'continue' → logprob: -9.000507354736328
    4. ' continue' → logprob: -9.625507354736328
    5. ':' → logprob: -10.375507354736328
    6. '0' → logprob: -10.625507354736328
    7. ',' → logprob: -11.125507354736328
    8. '                   ' → logprob: -11.250507354736328
    9. ' val' → logprob: -11.375507354736328
    10. '```' → logprob: -11.625507354736328

Token 272: ' val' (ID: 1459)
  Prédit: ' val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' val' → logprob: -1.1127889156341553
    2. ' continue' → logprob: -1.3627889156341553
    3. 'continue' → logprob: -1.7377889156341553
    4. '           ' → logprob: -1.9877889156341553
    5. 'val' (adapté à ' val') → logprob: -2.7377889156341553
    6. '               ' → logprob: -4.112789154052734
    7. '                   ' → logprob: -4.362789154052734
    8. '0' → logprob: -4.862789154052734
    9. ' ' → logprob: -9.362789154052734
    10. '	continue' → logprob: -9.362789154052734

Token 273: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38778576254844666
    2. ' =' → logprob: -1.137785792350769
    3. '           ' → logprob: -8.512785911560059
    4. ' +=' → logprob: -8.512785911560059
    5. '               ' → logprob: -8.762785911560059
    6. '+=' → logprob: -8.887785911560059
    7. '                   ' → logprob: -9.887785911560059
    8. ' ' → logprob: -9.887785911560059
    9. 'continue' → logprob: -10.137785911560059
    10. ' continue' → logprob: -10.387785911560059

Token 274: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01611882820725441
    2. '1' → logprob: -4.141119003295898
    3. ' ' → logprob: -9.391119003295898
    4. '   ' → logprob: -15.078619003295898
    5. 's' → logprob: -15.391119003295898
    6. 'zero' → logprob: -16.4536190032959
    7. '2' → logprob: -16.9536190032959
    8. '
' → logprob: -17.0161190032959
    9. '<|end|>' → logprob: -17.0161190032959
    10. '  ' → logprob: -17.0786190032959

Token 275: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.31337010860443115
    2. '1' → logprob: -1.3133701086044312
    3. ' ' → logprob: -9.188369750976562
    4. 's' → logprob: -12.813369750976562
    5. '   ' → logprob: -14.563369750976562
    6. 'zero' → logprob: -15.250869750976562
    7. '<|end|>' → logprob: -15.438369750976562
    8. '  ' → logprob: -15.875869750976562
    9. '```' → logprob: -15.938369750976562
    10. 'k' → logprob: -16.063369750976562

Token 276: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03826237842440605
    2. '
' → logprob: -3.288262367248535
    3. '            
' → logprob: -9.288262367248535
    4. '<|end|>' → logprob: -10.538262367248535
    5. '```' → logprob: -11.038262367248535
    6. '
' → logprob: -11.288262367248535
    7. '       ' → logprob: -11.288262367248535
    8. ',' → logprob: -11.538262367248535
    9. '    
' → logprob: -11.663262367248535
    10. 'else' → logprob: -11.788262367248535

Token 277: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0004142264660913497
    2. '       ' → logprob: -8.75041389465332
    3. '<|end|>' → logprob: -9.12541389465332
    4. '
' → logprob: -9.25041389465332
    5. ',' → logprob: -11.37541389465332
    6. '            
' → logprob: -11.87541389465332
    7. '          ' → logprob: -12.25041389465332
    8. '               ' → logprob: -12.25041389465332
    9. 'else' → logprob: -12.25041389465332
    10. ' else' → logprob: -13.12541389465332

Token 278: ' prob' (ID: 4921)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1227135881781578
    2. '           ' → logprob: -2.372713565826416
    3. 'expected' → logprob: -4.247713565826416
    4. '
' → logprob: -5.497713565826416
    5. ' expected' → logprob: -5.622713565826416
    6. '```' → logprob: -8.872714042663574
    7. '   ' → logprob: -10.247714042663574
    8. '	expected' → logprob: -11.372714042663574
    9. '<|end|>' → logprob: -11.622714042663574
    10. '        
' → logprob: -11.747714042663574

Token 279: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.020546678453683853
    2. '=' → logprob: -3.8955466747283936
    3. ' ' → logprob: -13.520546913146973
    4. ' +=' → logprob: -13.770546913146973
    5. ')' → logprob: -14.520546913146973
    6. 's' → logprob: -14.645546913146973
    7. '.' → logprob: -15.270546913146973
    8. '   ' → logprob: -15.395546913146973
    9. ']' → logprob: -15.770546913146973
    10. ',' → logprob: -16.145545959472656

Token 280: ' counts' (ID: 28991)
  Prédit: 'counts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'counts' → logprob: -0.31327033042907715
    2. ' counts' → logprob: -1.3132703304290771
    3. 'count' → logprob: -11.688270568847656
    4. '           ' → logprob: -16.438270568847656
    5. '_counts' → logprob: -16.938270568847656
    6. '               ' → logprob: -17.063270568847656
    7. '   ' → logprob: -17.813270568847656
    8. 'cnt' → logprob: -18.563270568847656
    9. 'Counts' → logprob: -18.688270568847656
    10. 'c' → logprob: -18.813270568847656

Token 281: '[s' (ID: 24177)
  Prédit: '[s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[s' → logprob: -4.320199877838604e-07
    2. 's' → logprob: -15.0
    3. '[' → logprob: -16.125
    4. ' [' → logprob: -18.375
    5. '[
' → logprob: -19.625
    6. '```' → logprob: -20.0
    7. '(s' → logprob: -20.125
    8. '	s' → logprob: -20.25
    9. ' s' → logprob: -20.75
    10. '[S' → logprob: -21.0

Token 282: ']/' (ID: 18500)
  Prédit: ' /'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.2521432936191559
    2. '/' → logprob: -1.5021432638168335
    3. ']' → logprob: -8.502142906188965
    4. ')' → logprob: -11.752142906188965
    5. ' ' → logprob: -14.252142906188965
    6. ']/' → logprob: -14.252142906188965
    7. '
' → logprob: -14.877142906188965
    8. '```' → logprob: -15.127142906188965
    9. ' ' → logprob: -15.502142906188965
    10. '   ' → logprob: -15.502142906188965

Token 283: 'total' (ID: 9577)
  Prédit: 'total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -5.836499985889532e-05
    2. ' total' → logprob: -9.7500581741333
    3. '   ' → logprob: -18.875059127807617
    4. '(total' → logprob: -19.125059127807617
    5. '	total' → logprob: -20.250059127807617
    6. ' ' → logprob: -20.625059127807617
    7. '```' → logprob: -20.750059127807617
    8. '$total' → logprob: -21.375059127807617
    9. 'tot' → logprob: -21.500059127807617
    10. '
' → logprob: -22.000059127807617

Token 284: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 285: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7953939437866211
    2. '           ' → logprob: -1.545393943786621
    3. '<|end|>' → logprob: -1.920393943786621
    4. ' expected' → logprob: -2.295393943786621
    5. 'expected' → logprob: -3.045393943786621
    6. '(expected' → logprob: -3.420393943786621
    7. '<|end|>' → logprob: -6.045393943786621
    8. ')' → logprob: -6.795393943786621
    9. '	expected' → logprob: -7.045393943786621
    10. ',' → logprob: -7.795393943786621

Token 286: ' expected' (ID: 5930)
  Prédit: 'expected'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'expected' (adapté à ' expected') → logprob: -0.6816768050193787
    2. ' expected' → logprob: -0.8066768050193787
    3. '           ' → logprob: -3.4316768646240234
    4. '       ' → logprob: -4.181676864624023
    5. '(expected' → logprob: -9.431676864624023
    6. '	expected' → logprob: -9.681676864624023
    7. '
' → logprob: -9.931676864624023
    8. '   ' → logprob: -10.181676864624023
    9. '.expected' → logprob: -11.056676864624023
    10. '<|end|>' → logprob: -11.306676864624023

Token 287: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.3133096992969513
    2. '+=' → logprob: -1.313309669494629
    3. '+=(' → logprob: -10.438309669494629
    4. '+' → logprob: -11.938309669494629
    5. ']+=' → logprob: -12.063309669494629
    6. '   ' → logprob: -12.813309669494629
    7. '	' → logprob: -13.063309669494629
    8. ' ' → logprob: -14.563309669494629
    9. '+="' → logprob: -15.313309669494629
    10. '+='' → logprob: -15.438309669494629

Token 288: ' val' (ID: 1459)
  Prédit: ' prob'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' prob' → logprob: -0.6907625794410706
    2. 'prob' → logprob: -1.1907625198364258
    3. ' val' → logprob: -1.6907625198364258
    4. 'val' → logprob: -4.565762519836426
    5. '(prob' → logprob: -10.315762519836426
    6. '   ' → logprob: -13.940762519836426
    7. ' probability' → logprob: -14.940762519836426
    8. 'pro' → logprob: -15.315762519836426
    9. ' probabil' → logprob: -15.315762519836426
    10. '_prob' → logprob: -15.440762519836426

Token 289: '*' (ID: 9)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.023247109726071358
    2. '*' → logprob: -3.773247003555298
    3. ' ' → logprob: -13.898246765136719
    4. ' ' → logprob: -15.398246765136719
    5. '   ' → logprob: -15.898246765136719
    6. 'prob' → logprob: -16.27324676513672
    7. '(prob' → logprob: -16.64824676513672
    8. '  ' → logprob: -16.64824676513672
    9. ' **' → logprob: -17.02324676513672
    10. '           ' → logprob: -17.64824676513672

Token 290: 'prob' (ID: 29823)
  Prédit: 'prob'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prob' → logprob: -9.627176768844947e-05
    2. ' prob' → logprob: -9.250096321105957
    3. '(prob' → logprob: -16.00009536743164
    4. '_prob' → logprob: -19.00009536743164
    5. 'prof' → logprob: -19.50009536743164
    6. 'pro' → logprob: -20.12509536743164
    7. '	pro' → logprob: -20.50009536743164
    8. '```' → logprob: -20.62509536743164
    9. 'probe' → logprob: -20.87509536743164
    10. '
' → logprob: -21.25009536743164

Token 291: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.42417463660240173
    2. '       ' → logprob: -1.4241746664047241
    3. '   ' → logprob: -2.2991745471954346
    4. 'print' → logprob: -6.549174785614014
    5. '<|end|>' → logprob: -6.799174785614014
    6. '        
' → logprob: -6.924174785614014
    7. '    
' → logprob: -7.049174785614014
    8. ' print' → logprob: -9.424174308776855
    9. 'return' → logprob: -10.049174308776855
    10. ' return' → logprob: -10.049174308776855

Token 292: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.052136968821287155
    2. '
' → logprob: -3.5521368980407715
    3. '<|end|>' → logprob: -4.8021368980407715
    4. 'print' → logprob: -5.1771368980407715
    5. '       ' → logprob: -5.4271368980407715
    6. 'return' → logprob: -6.5521368980407715
    7. '    
' → logprob: -6.5521368980407715
    8. ' return' → logprob: -7.1771368980407715
    9. ' print' → logprob: -9.42713737487793
    10. '        
' → logprob: -9.55213737487793

Token 293: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.003433761652559042
    2. '   ' → logprob: -6.003433704376221
    3. ' print' → logprob: -7.003433704376221
    4. 'return' → logprob: -10.003434181213379
    5. '       ' → logprob: -12.753434181213379
    6. ' return' → logprob: -14.878434181213379
    7. '```' → logprob: -15.378434181213379
    8. '
' → logprob: -16.878433227539062
    9. '	print' → logprob: -16.878433227539062
    10. '    
' → logprob: -17.753433227539062

Token 294: '(expected' (ID: 26332)
  Prédit: '(expected'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(expected' → logprob: -0.11361056566238403
    2. '()' → logprob: -2.8636105060577393
    3. '(round' → logprob: -3.3636105060577393
    4. '(f' → logprob: -4.738610744476318
    5. '(' → logprob: -5.113610744476318
    6. '("{' → logprob: -7.988610744476318
    7. '(int' → logprob: -8.36361026763916
    8. '("%.' → logprob: -8.98861026763916
    9. ' (' → logprob: -9.48861026763916
    10. '(float' → logprob: -10.11361026763916

Token 295: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02198014035820961
    2. '()' → logprob: -4.521980285644531
    3. '())' → logprob: -4.521980285644531
    4. '(' → logprob: -13.146980285644531
    5. ' )' → logprob: -13.271980285644531
    6. ')`' → logprob: -15.146980285644531
    7. ' ())' → logprob: -15.646980285644531
    8. ')
' → logprob: -15.771980285644531
    9. '()
' → logprob: -15.771980285644531
    10. '*' → logprob: -16.02198028564453

Token 296: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.05212056264281273
    2. '<|end|>' → logprob: -3.4271204471588135
    3. '
' → logprob: -4.177120685577393
    4. 'main' → logprob: -6.802120685577393
    5. '```' → logprob: -6.802120685577393
    6. ' if' → logprob: -7.427120685577393
    7. '<|end|>' → logprob: -10.552120208740234
    8. '\n' → logprob: -10.677120208740234
    9. '

' → logprob: -11.302120208740234
    10. '  
' → logprob: -11.552120208740234

Token 297: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.06203187629580498
    2. '__' → logprob: -2.8120319843292236
    3. '_' → logprob: -9.937031745910645
    4. ' ' → logprob: -11.812031745910645
    5. '_name' → logprob: -12.562031745910645
    6. '___' → logprob: -13.187031745910645
    7. 'name' → logprob: -13.562031745910645
    8. ' _' → logprob: -14.687031745910645
    9. ' ___' → logprob: -14.812031745910645
    10. ' ' → logprob: -15.187031745910645

Token 298: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.4924701750278473
    2. ' ==' → logprob: -1.117470145225525
    3. '==' → logprob: -2.8674702644348145
    4. '=="' → logprob: -5.9924702644348145
    5. ' __' → logprob: -6.3674702644348145
    6. 'name' → logprob: -8.742469787597656
    7. '__.__' → logprob: -8.867469787597656
    8. '.__' → logprob: -8.992469787597656
    9. '=='' → logprob: -9.367469787597656
    10. ' =="' → logprob: -9.742469787597656

Token 299: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -7.896309739408025e-07
    2. '==' → logprob: -14.500000953674316
    3. '__.__' → logprob: -16.0
    4. '___' → logprob: -16.75
    5. '____' → logprob: -17.625
    6. '_' → logprob: -17.75
    7. '=="' → logprob: -17.75
    8. ' ==' → logprob: -18.0
    9. '__.' → logprob: -18.625
    10. '__["' → logprob: -19.5

Token 300: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.06223812699317932
    2. ' ==' → logprob: -3.3122382164001465
    3. '==' → logprob: -3.9372382164001465
    4. '=="' → logprob: -5.4372382164001465
    5. '_' → logprob: -11.312237739562988
    6. '___' → logprob: -11.437237739562988
    7. '"' → logprob: -11.562237739562988
    8. '=='' → logprob: -11.812237739562988
    9. '__.__' → logprob: -12.312237739562988
    10. '=' → logprob: -13.312237739562988

Token 301: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.001509150955826044
    2. ''' → logprob: -6.501509189605713
    3. ' "__' → logprob: -12.251508712768555
    4. '__' → logprob: -13.126508712768555
    5. ' '__' → logprob: -17.501508712768555
    6. '"user' → logprob: -18.126508712768555
    7. '"name' → logprob: -18.376508712768555
    8. '   ' → logprob: -18.376508712768555
    9. '"_' → logprob: -19.001508712768555
    10. '("__' → logprob: -19.376508712768555

Token 302: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0025573535822331905
    2. '__' → logprob: -6.002557277679443
    3. '"' → logprob: -9.627557754516602
    4. 'name' → logprob: -11.252557754516602
    5. ''' → logprob: -13.752557754516602
    6. '_main' → logprob: -13.877557754516602
    7. ' main' → logprob: -15.127557754516602
    8. '__":
' → logprob: -15.502557754516602
    9. '___' → logprob: -16.8775577545166
    10. '"name' → logprob: -17.1275577545166

Token 303: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.011240688152611256
    2. '__' → logprob: -4.511240482330322
    3. '__':
' → logprob: -8.76124095916748
    4. '__.' → logprob: -10.76124095916748
    5. '__:' → logprob: -11.63624095916748
    6. '__.__' → logprob: -13.13624095916748
    7. '__["' → logprob: -13.76124095916748
    8. '.' → logprob: -14.13624095916748
    9. '():
' → logprob: -14.38624095916748
    10. '__
' → logprob: -14.76124095916748

Token 304: '   ' (ID: 271)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.44452977180480957
    2. 'main' → logprob: -1.3195297718048096
    3. '   ' → logprob: -2.8195297718048096
    4. '	main' → logprob: -3.4445297718048096
    5. '_main' → logprob: -10.81952953338623
    6. '(main' → logprob: -11.44452953338623
    7. '  ' → logprob: -12.19452953338623
    8. '<|end|>' → logprob: -12.19452953338623
    9. '    
' → logprob: -12.31952953338623
    10. '   ' → logprob: -12.56952953338623

Token 305: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -4.320199877838604e-07
    2. ' main' → logprob: -14.75
    3. '	main' → logprob: -22.25
    4. 'm' → logprob: -24.375
    5. 'mai' → logprob: -25.0
    6. 'import' → logprob: -25.125
    7. '   ' → logprob: -25.25
    8. '.main' → logprob: -25.25
    9. 'ma' → logprob: -25.5
    10. '(main' → logprob: -25.875

Token 306: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 304
Tokens correctement prédits (1ère position, stricte): 139
Tokens correctement prédits (1ère position, avec adaptation): 147
Tokens correctement prédits (top 10): 254
Précision stricte (1ère position): 45.72%
Précision adaptée (1ère position): 48.36%
Précision (top 10): 83.55%
================================================================================
