================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:15:13
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
H,W=map(int,input().split())
grid=[list(input()) for _ in range(H)]
from collections import deque

d=[(-1,-1),(-1,0),(-1,1),(0,-1),(0,1),(1,-1),(1,0),(1,1)]

def count_dot(i,j):
    c=0
    for dx,dy in d:
        x,y=i+dx,j+dy
        if 0<=x<H and 0<=y<W and grid[x][y]=='.':
            c+=1
    return c

queue=deque()
for i in range(1,H-1):
    for j in range(1,W-1):
        if grid[i][j] != '.':
            if count_dot(i,j)>=int(grid[i][j]):
                queue.append((i,j))

res=0
while queue:
    res+=1
    next_queue=deque()
    while queue:
        i,j=queue.popleft()
        if grid[i][j]=='.':
            continue
        if count_dot(i,j)>=int(grid[i][j]):
            grid[i][j]='.'
            for dx,dy in d:
                x,y=i+dx,j+dy
                if 0<x<H-1 and 0<y<W-1 and grid[x][y]!='.':
                    if count_dot(x,y)>=int(grid[x][y]):
                        next_queue.append((x,y))
    queue=next_queue
print(res)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'H' (ID: 39)
  → Token d'amorce (pas de prédiction)

Token 1: ',W' (ID: 117252)
  → Token d'amorce (pas de prédiction)

Token 2: '=' (ID: 28)
  → Token d'amorce (pas de prédiction)

Token 3: 'map' (ID: 3726)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3746434450149536
    2. '224' → logprob: -2.124643325805664
    3. '100' → logprob: -2.874643325805664
    4. '256' → logprob: -3.374643325805664
    5. '192' → logprob: -3.749643325805664
    6. '480' → logprob: -3.749643325805664
    7. '240' → logprob: -3.874643325805664
    8. '128' → logprob: -5.249643325805664
    9. '720' → logprob: -5.624643325805664
    10. '640' → logprob: -5.874643325805664

Token 4: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.047235604375600815
    2. '(lambda' → logprob: -3.9222354888916016
    3. '(int' → logprob: -4.047235488891602
    4. '<|end|>' → logprob: -5.547235488891602
    5. '```' → logprob: -6.422235488891602
    6. '(input' → logprob: -7.547235488891602
    7. '(str' → logprob: -7.922235488891602
    8. '[int' → logprob: -8.297235488891602
    9. '(user' → logprob: -8.422235488891602
    10. '(ord' → logprob: -8.547235488891602

Token 5: ',input' (ID: 123014)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.015616899356245995
    2. 'input' → logprob: -4.6406168937683105
    3. ')' → logprob: -5.8906168937683105
    4. '(' → logprob: -6.6406168937683105
    5. ',input' → logprob: -6.7656168937683105
    6. '=input' → logprob: -8.640617370605469
    7. ' input' → logprob: -8.640617370605469
    8. '(int' → logprob: -9.890617370605469
    9. '[input' → logprob: -10.015617370605469
    10. '<input' → logprob: -10.265617370605469

Token 6: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.45992130041122437
    2. '()' → logprob: -1.9599213600158691
    3. '(' → logprob: -2.459921360015869
    4. '()>' → logprob: -3.209921360015869
    5. '('' → logprob: -3.959921360015869
    6. '()">' → logprob: -4.334921360015869
    7. ')' → logprob: -4.459921360015869
    8. '(""))' → logprob: -4.709921360015869
    9. '(()' → logprob: -4.709921360015869
    10. '(">' → logprob: -4.834921360015869

Token 7: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00011081460979767144
    2. 'strip' → logprob: -9.500110626220703
    3. ')' → logprob: -10.750110626220703
    4. ' split' → logprob: -11.375110626220703
    5. 'rstrip' → logprob: -13.750110626220703
    6. '(split' → logprob: -13.875110626220703
    7. 'read' → logprob: -14.375110626220703
    8. 'spl' → logprob: -15.750110626220703
    9. 'startswith' → logprob: -17.500110626220703
    10. '```' → logprob: -17.750110626220703

Token 8: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10390911996364594
    2. '())' → logprob: -2.3539090156555176
    3. '()' → logprob: -6.603909015655518
    4. '`)' → logprob: -7.103909015655518
    5. '))' → logprob: -7.228909015655518
    6. '(' → logprob: -7.353909015655518
    7. '()))' → logprob: -10.228909492492676
    8. '')' → logprob: -11.353909492492676
    9. '`' → logprob: -11.353909492492676
    10. '```' → logprob: -11.478909492492676

Token 9: 'grid' (ID: 7886)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.48436158895492554
    2. 'x' → logprob: -1.6093616485595703
    3. ',' → logprob: -2.7343616485595703
    4. '#' → logprob: -3.4843616485595703
    5. '```' → logprob: -3.6093616485595703
    6. 'for' → logprob: -4.10936164855957
    7. '`' → logprob: -4.48436164855957
    8. '\n' → logprob: -5.10936164855957
    9. 'm' → logprob: -5.85936164855957
    10. ' ' → logprob: -6.23436164855957

Token 10: '=[' (ID: 13370)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.002189160557463765
    2. '=' → logprob: -6.5021891593933105
    3. '\[' → logprob: -8.377189636230469
    4. '[
' → logprob: -9.127189636230469
    5. '[i' → logprob: -9.377189636230469
    6. '.' → logprob: -10.002189636230469
    7. '[:]' → logprob: -10.127189636230469
    8. '[]' → logprob: -10.502189636230469
    9. '```' → logprob: -10.502189636230469
    10. '<|end|>' → logprob: -11.002189636230469

Token 11: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.0033004588913172483
    2. 'input' → logprob: -6.003300666809082
    3. '[list' → logprob: -7.503300666809082
    4. '[input' → logprob: -8.503300666809082
    5. '[' → logprob: -10.628300666809082
    6. '[]' → logprob: -10.628300666809082
    7. ' list' → logprob: -11.128300666809082
    8. '(list' → logprob: -12.378300666809082
    9. 'map' → logprob: -13.378300666809082
    10. ']' → logprob: -14.503300666809082

Token 12: '(input' (ID: 10054)
  Prédit: '(map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.029152994975447655
    2. '(input' → logprob: -3.6541531085968018
    3. '(' → logprob: -5.904152870178223
    4. '(int' → logprob: -9.404152870178223
    5. 'map' → logprob: -11.029152870178223
    6. '(str' → logprob: -11.279152870178223
    7. '()' → logprob: -12.779152870178223
    8. '(
' → logprob: -13.404152870178223
    9. ' map' → logprob: -13.779152870178223
    10. '(range' → logprob: -14.279152870178223

Token 13: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0023161915596574545
    2. '()' → logprob: -6.502315998077393
    3. '()))' → logprob: -7.377315998077393
    4. '().' → logprob: -9.12731647491455
    5. '()]' → logprob: -10.25231647491455
    6. '());' → logprob: -11.00231647491455
    7. '()>' → logprob: -12.00231647491455
    8. '();)' → logprob: -12.12731647491455
    9. '())))' → logprob: -12.25231647491455
    10. '()),' → logprob: -13.00231647491455

Token 14: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.6734929084777832
    2. '())' → logprob: -1.5484929084777832
    3. '()]' → logprob: -1.9234929084777832
    4. ')' → logprob: -2.173492908477783
    5. ')]' → logprob: -5.048492908477783
    6. ']' → logprob: -5.923492908477783
    7. '(' → logprob: -5.923492908477783
    8. 'for' → logprob: -6.423492908477783
    9. '(H' → logprob: -6.423492908477783
    10. '().' → logprob: -6.923492908477783

Token 15: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.4157561659812927
    2. '(' → logprob: -1.1657562255859375
    3. '_' → logprob: -4.5407562255859375
    4. '(range' → logprob: -4.9157562255859375
    5. 'range' → logprob: -5.4157562255859375
    6. ' ' → logprob: -6.1657562255859375
    7. ' in' → logprob: -6.4157562255859375
    8. ' _' → logprob: -6.9157562255859375
    9. ' i' → logprob: -7.7907562255859375
    10. ' (' → logprob: -8.040756225585938

Token 16: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01111419778317213
    2. 'in' → logprob: -4.511114120483398
    3. 'range' → logprob: -10.261114120483398
    4. ' ' → logprob: -11.136114120483398
    5. '_' → logprob: -11.636114120483398
    6. ' range' → logprob: -13.136114120483398
    7. '<|end|>' → logprob: -13.761114120483398
    8. ' _' → logprob: -14.386114120483398
    9. 'In' → logprob: -14.761114120483398
    10. '_in' → logprob: -14.886114120483398

Token 17: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -1.3306015716807451e-05
    2. ' range' → logprob: -11.25001335144043
    3. '[' → logprob: -16.50001335144043
    4. '(range' → logprob: -16.62501335144043
    5. '	range' → logprob: -17.37501335144043
    6. '```' → logprob: -18.00001335144043
    7. 'rang' → logprob: -18.25001335144043
    8. 'input' → logprob: -18.37501335144043
    9. 'ran' → logprob: -18.75001335144043
    10. '.range' → logprob: -19.25001335144043

Token 18: '(H' (ID: 20904)
  Prédit: '(H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -0.011176202446222305
    2. '(' → logprob: -4.511176109313965
    3. '(W' → logprob: -9.011176109313965
    4. '(
' → logprob: -13.886176109313965
    5. '(I' → logprob: -14.011176109313965
    6. '(F' → logprob: -14.136176109313965
    7. '(int' → logprob: -14.386176109313965
    8. '(Q' → logprob: -14.511176109313965
    9. ' (' → logprob: -14.886176109313965
    10. '(A' → logprob: -15.136176109313965

Token 19: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00014776040916331112
    2. ')' → logprob: -8.875147819519043
    3. ')])' → logprob: -12.750147819519043
    4. ']' → logprob: -13.000147819519043
    5. '))' → logprob: -13.875147819519043
    6. ' )' → logprob: -14.125147819519043
    7. '])]' → logprob: -15.125147819519043
    8. '')]' → logprob: -15.625147819519043
    9. ')],' → logprob: -15.750147819519043
    10. ')]
' → logprob: -15.750147819519043

Token 20: 'from' (ID: 2845)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.24302564561367035
    2. 'dp' → logprob: -2.493025541305542
    3. 'd' → logprob: -3.618025541305542
    4. 'c' → logprob: -3.618025541305542
    5. 'r' → logprob: -3.743025541305542
    6. 'result' → logprob: -4.493025779724121
    7. 'count' → logprob: -4.993025779724121
    8. 'm' → logprob: -5.243025779724121
    9. 'x' → logprob: -5.493025779724121
    10. 's' → logprob: -5.493025779724121

Token 21: ' collections' (ID: 22690)
  Prédit: ' collections'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' collections' → logprob: -0.00234544207341969
    2. ' itertools' → logprob: -6.252345561981201
    3. ' sys' → logprob: -8.127345085144043
    4. 'collections' → logprob: -9.127345085144043
    5. ' copy' → logprob: -12.377345085144043
    6. ' math' → logprob: -12.752345085144043
    7. ' collection' → logprob: -13.502345085144043
    8. ' random' → logprob: -13.877345085144043
    9. ' numpy' → logprob: -13.877345085144043
    10. ' queue' → logprob: -14.127345085144043

Token 22: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.01420182641595602
    2. 'import' → logprob: -4.264201641082764
    3. ' deque' → logprob: -10.889202117919922
    4. ' ' → logprob: -12.014202117919922
    5. ' defaultdict' → logprob: -12.264202117919922
    6. '	import' → logprob: -13.514202117919922
    7. '.' → logprob: -13.639202117919922
    8. '```' → logprob: -14.139202117919922
    9. ' importar' → logprob: -14.264202117919922
    10. 'deque' → logprob: -14.514202117919922

Token 23: ' deque' (ID: 90347)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.011067037470638752
    2. ' deque' → logprob: -4.511066913604736
    3. ' defaultdict' → logprob: -11.761067390441895
    4. 'de' → logprob: -12.261067390441895
    5. 'collections' → logprob: -12.511067390441895
    6. 'default' → logprob: -13.511067390441895
    7. 'Counter' → logprob: -14.136067390441895
    8. 'counter' → logprob: -14.386067390441895
    9. ' Counter' → logprob: -15.261067390441895
    10. '```' → logprob: -16.761066436767578

Token 24: '

' (ID: 279)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.3870283365249634
    2. 'queue' → logprob: -1.8870283365249634
    3. 'd' → logprob: -2.387028217315674
    4. 'dist' → logprob: -3.512028217315674
    5. 'dq' → logprob: -3.512028217315674
    6. '
' → logprob: -5.762028217315674
    7. 'deque' → logprob: -5.887028217315674
    8. 'n' → logprob: -6.137028217315674
    9. 'que' → logprob: -6.262028217315674
    10. 'distance' → logprob: -7.012028217315674

Token 25: 'd' (ID: 67)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.5808073878288269
    2. 'dist' → logprob: -1.4558074474334717
    3. 'queue' → logprob: -1.8308074474334717
    4. 'dq' → logprob: -3.4558074474334717
    5. 'distance' → logprob: -5.830807209014893
    6. 'dp' → logprob: -6.080807209014893
    7. 'd' → logprob: -6.205807209014893
    8. 'visited' → logprob: -6.455807209014893
    9. 'dire' → logprob: -6.455807209014893
    10. '
' → logprob: -6.580807209014893

Token 26: '=[' (ID: 13370)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.5993773341178894
    2. 'q' → logprob: -0.8493773341178894
    3. 'ir' → logprob: -4.974377155303955
    4. ' =' → logprob: -5.224377155303955
    5. '=' → logprob: -5.349377155303955
    6. 'eq' → logprob: -5.724377155303955
    7. 'r' → logprob: -6.474377155303955
    8. 'i' → logprob: -8.349377632141113
    9. 'x' → logprob: -8.724377632141113
    10. '```' → logprob: -8.974377632141113

Token 27: '(-' (ID: 8087)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.47435420751571655
    2. '(-' → logprob: -0.9743542075157166
    3. '[-' → logprob: -8.599353790283203
    4. '[' → logprob: -9.349353790283203
    5. '[(' → logprob: -13.099353790283203
    6. ' (' → logprob: -13.474353790283203
    7. '-' → logprob: -13.599353790283203
    8. '0' → logprob: -14.224353790283203
    9. '1' → logprob: -16.099353790283203
    10. '(+' → logprob: -16.099353790283203

Token 28: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.625
    3. '-' → logprob: -17.75
    4. '2' → logprob: -17.875
    5. '0' → logprob: -18.25
    6. '１' → logprob: -19.5
    7. '```' → logprob: -19.6875
    8. ')' → logprob: -20.625
    9. '10' → logprob: -20.6875
    10. '   ' → logprob: -21.0625

Token 29: ',-' (ID: 8202)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -2.570319702499546e-05
    2. '0' → logprob: -11.000025749206543
    3. ' ,' → logprob: -11.625025749206543
    4. ',
' → logprob: -18.375024795532227
    5. '‌,' → logprob: -19.875024795532227
    6. '，' → logprob: -19.875024795532227
    7. ' ' → logprob: -19.875024795532227
    8. '<|end|>' → logprob: -19.875024795532227
    9. ')' → logprob: -20.375024795532227
    10. '،' → logprob: -20.875024795532227

Token 30: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1472419600977446e-06
    2. '0' → logprob: -14.125000953674316
    3. ' ' → logprob: -14.875000953674316
    4. '2' → logprob: -17.375001907348633
    5. '```' → logprob: -18.875001907348633
    6. '-' → logprob: -19.250001907348633
    7. ')' → logprob: -20.625001907348633
    8. '１' → logprob: -21.000001907348633
    9. '3' → logprob: -21.187501907348633
    10. '   ' → logprob: -21.687501907348633

Token 31: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.050275761634111404
    2. '),(' → logprob: -3.0502758026123047
    3. ')' → logprob: -7.050275802612305
    4. ' ),' → logprob: -7.175275802612305
    5. '),
' → logprob: -10.175275802612305
    6. ''),' → logprob: -11.675275802612305
    7. ',),' → logprob: -13.425275802612305
    8. ' ' → logprob: -13.675275802612305
    9. ' )' → logprob: -13.925275802612305
    10. '),

' → logprob: -14.050275802612305

Token 32: '(-' (ID: 8087)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.2861677408218384
    2. '(-' → logprob: -1.4111677408218384
    3. ' (-' → logprob: -6.161167621612549
    4. '0' → logprob: -6.286167621612549
    5. ' -' → logprob: -7.036167621612549
    6. '(' → logprob: -9.036168098449707
    7. '1' → logprob: -11.286168098449707
    8. ' ' → logprob: -11.536168098449707
    9. ',-' → logprob: -12.536168098449707
    10. ' (' → logprob: -13.036168098449707

Token 33: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.7697225252486533e-06
    2. '-' → logprob: -13.250003814697266
    3. ' ' → logprob: -14.312503814697266
    4. ' -' → logprob: -14.562503814697266
    5. '0' → logprob: -15.625003814697266
    6. ',' → logprob: -15.937503814697266
    7. '>' → logprob: -16.437503814697266
    8. '```' → logprob: -17.187503814697266
    9. '১' → logprob: -17.250003814697266
    10. '2' → logprob: -17.312503814697266

Token 34: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0011179500725120306
    2. '0' → logprob: -6.876118183135986
    3. ' ,' → logprob: -9.501117706298828
    4. ',-' → logprob: -11.751117706298828
    5. ' ' → logprob: -14.126117706298828
    6. ',

' → logprob: -14.251117706298828
    7. ',
' → logprob: -15.126117706298828
    8. '1' → logprob: -15.376117706298828
    9. '-' → logprob: -15.501117706298828
    10. '

' → logprob: -16.313617706298828

Token 35: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.198043699143454e-05
    2. '1' → logprob: -9.375091552734375
    3. '-' → logprob: -12.375091552734375
    4. ' ' → logprob: -12.750091552734375
    5. '۰' → logprob: -17.687591552734375
    6. ' -' → logprob: -18.625091552734375
    7. '０' → logprob: -18.937591552734375
    8. ')' → logprob: -19.062591552734375
    9. '+' → logprob: -19.375091552734375
    10. '```' → logprob: -20.000091552734375

Token 36: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.021764256060123444
    2. '),(' → logprob: -3.8967642784118652
    3. ')' → logprob: -6.771764278411865
    4. ' ),' → logprob: -9.896763801574707
    5. '),
' → logprob: -10.771763801574707
    6. '),

' → logprob: -12.896763801574707
    7. ')]' → logprob: -14.896763801574707
    8. ' ' → logprob: -15.271763801574707
    9. '),
' → logprob: -15.521763801574707
    10. ',),' → logprob: -15.646763801574707

Token 37: '(-' (ID: 8087)
  Prédit: '(-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -0.0002868417650461197
    2. '-' → logprob: -8.500287055969238
    3. '(' → logprob: -9.500287055969238
    4. '1' → logprob: -12.375287055969238
    5. ' (-' → logprob: -12.375287055969238
    6. ' ' → logprob: -16.250286102294922
    7. '(+' → logprob: -18.000286102294922
    8. ' -' → logprob: -18.500286102294922
    9. '0' → logprob: -18.625286102294922
    10. ',-' → logprob: -18.875286102294922

Token 38: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.13388703338569e-06
    2. '-' → logprob: -12.000009536743164
    3. '+' → logprob: -13.375009536743164
    4. ' ' → logprob: -13.500009536743164
    5. '0' → logprob: -17.375009536743164
    6. ')' → logprob: -18.375009536743164
    7. '```' → logprob: -18.875009536743164
    8. '۱' → logprob: -19.625009536743164
    9. ' -' → logprob: -19.687509536743164
    10. '１' → logprob: -19.875009536743164

Token 39: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008619539439678192
    2. '1' → logprob: -4.75861930847168
    3. ',+' → logprob: -12.88361930847168
    4. ' ,' → logprob: -13.63361930847168
    5. ' ' → logprob: -14.50861930847168
    6. '),' → logprob: -16.00861930847168
    7. ')' → logprob: -16.25861930847168
    8. ',-' → logprob: -16.50861930847168
    9. '```' → logprob: -16.63361930847168
    10. '+' → logprob: -16.63361930847168

Token 40: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -14.000001907348633
    3. '+' → logprob: -14.125001907348633
    4. '-' → logprob: -18.000001907348633
    5. ')' → logprob: -18.250001907348633
    6. '```' → logprob: -19.625001907348633
    7. '<|end|>' → logprob: -21.125001907348633
    8. '１' → logprob: -21.500001907348633
    9. '۱' → logprob: -21.500001907348633
    10. '১' → logprob: -22.250001907348633

Token 41: '),(' (ID: 54876)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.03847380727529526
    2. '),(' → logprob: -3.2884738445281982
    3. ')' → logprob: -8.038474082946777
    4. ')]' → logprob: -9.663474082946777
    5. '),
' → logprob: -10.163474082946777
    6. ' ),' → logprob: -12.913474082946777
    7. '),

' → logprob: -13.163474082946777
    8. ',' → logprob: -13.663474082946777
    9. '),
' → logprob: -14.788474082946777
    10. ')...' → logprob: -15.288474082946777

Token 42: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0010438859462738037
    2. ' ' → logprob: -6.876043796539307
    3. '1' → logprob: -12.001044273376465
    4. '-' → logprob: -12.501044273376465
    5. ',' → logprob: -15.001044273376465
    6. '  ' → logprob: -15.751044273376465
    7. '
' → logprob: -16.31354331970215
    8. '   ' → logprob: -16.37604331970215
    9. '```' → logprob: -16.43854331970215
    10. ' -' → logprob: -16.56354331970215

Token 43: ',-' (ID: 8202)
  Prédit: ',-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',-' → logprob: -0.005271584261208773
    2. ',' → logprob: -5.2552714347839355
    3. '-' → logprob: -10.755271911621094
    4. '1' → logprob: -11.380271911621094
    5. ' ,-' → logprob: -12.755271911621094
    6. ' ,' → logprob: -14.005271911621094
    7. ',-

' → logprob: -14.630271911621094
    8. ' -' → logprob: -15.630271911621094
    9. ',-
' → logprob: -15.630271911621094
    10. '",-' → logprob: -16.130271911621094

Token 44: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.088346359931165e-07
    2. '-' → logprob: -14.500000953674316
    3. ' ' → logprob: -15.625000953674316
    4. ',' → logprob: -16.625
    5. ')' → logprob: -17.125
    6. ' -' → logprob: -17.75
    7. '```' → logprob: -17.875
    8. '<|end|>' → logprob: -18.0
    9. '2' → logprob: -19.6875
    10. '   ' → logprob: -19.875

Token 45: '),(' (ID: 54876)
  Prédit: '),('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),(' → logprob: -0.0060316575691103935
    2. '),' → logprob: -5.131031513214111
    3. ',(' → logprob: -10.25603199005127
    4. ',' → logprob: -10.25603199005127
    5. ')' → logprob: -10.75603199005127
    6. '(' → logprob: -12.38103199005127
    7. '),
' → logprob: -12.75603199005127
    8. ' ),' → logprob: -13.13103199005127
    9. '),

' → logprob: -14.38103199005127
    10. ')]' → logprob: -14.38103199005127

Token 46: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00019626895664259791
    2. '1' → logprob: -8.62519645690918
    3. ' ' → logprob: -11.12519645690918
    4. '-' → logprob: -13.93769645690918
    5. '۰' → logprob: -15.56269645690918
    6. '(' → logprob: -15.68769645690918
    7. '+' → logprob: -15.87519645690918
    8. '```' → logprob: -16.12519645690918
    9. ',' → logprob: -16.31269645690918
    10. ')' → logprob: -16.68769645690918

Token 47: ',' (ID: 11)
  Prédit: ',-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',-' → logprob: -0.028259681537747383
    2. ',' → logprob: -3.653259754180908
    3. '-' → logprob: -6.278259754180908
    4. '1' → logprob: -9.52825927734375
    5. ',-

' → logprob: -13.27825927734375
    6. ',+' → logprob: -13.52825927734375
    7. ',-
' → logprob: -13.65325927734375
    8. ' ,-' → logprob: -14.27825927734375
    9. '-,' → logprob: -14.52825927734375
    10. ',(' → logprob: -14.65325927734375

Token 48: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.018240083009004593
    2. '-' → logprob: -4.018239974975586
    3. '0' → logprob: -9.643239974975586
    4. ' ' → logprob: -11.143239974975586
    5. ' -' → logprob: -11.643239974975586
    6. '+' → logprob: -13.643239974975586
    7. ')' → logprob: -15.018239974975586
    8. '```' → logprob: -15.268239974975586
    9. '–' → logprob: -16.143239974975586
    10. '−' → logprob: -17.080739974975586

Token 49: '),(' (ID: 54876)
  Prédit: '),('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),(' → logprob: -0.0496264286339283
    2. '),' → logprob: -3.174626350402832
    3. ')]' → logprob: -5.049626350402832
    4. ')' → logprob: -8.674626350402832
    5. ',' → logprob: -11.424626350402832
    6. ',(' → logprob: -12.424626350402832
    7. ' ),' → logprob: -13.174626350402832
    8. '),
' → logprob: -13.674626350402832
    9. ')])' → logprob: -14.049626350402832
    10. ')],' → logprob: -14.549626350402832

Token 50: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03005210869014263
    2. '0' → logprob: -3.5300521850585938
    3. '(' → logprob: -8.155052185058594
    4. ' ' → logprob: -11.280052185058594
    5. ' (' → logprob: -14.155052185058594
    6. '+' → logprob: -14.530052185058594
    7. '```' → logprob: -15.280052185058594
    8. '{' → logprob: -16.217552185058594
    9. '   ' → logprob: -16.717552185058594
    10. ',' → logprob: -16.905052185058594

Token 51: ',-' (ID: 8202)
  Prédit: ',-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',-' → logprob: -0.13032971322536469
    2. '-' → logprob: -2.1303296089172363
    3. ',' → logprob: -5.755329608917236
    4. '(-' → logprob: -9.130330085754395
    5. ' -' → logprob: -9.380330085754395
    6. '",-' → logprob: -11.005330085754395
    7. '1' → logprob: -12.380330085754395
    8. '```' → logprob: -12.630330085754395
    9. '0' → logprob: -12.880330085754395
    10. ',(' → logprob: -13.380330085754395

Token 52: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.659005157416686e-05
    2. '-' → logprob: -9.625066757202148
    3. '2' → logprob: -15.500066757202148
    4. ' ' → logprob: -15.750066757202148
    5. ' -' → logprob: -16.81256675720215
    6. '```' → logprob: -17.75006675720215
    7. '<|end|>' → logprob: -18.81256675720215
    8. ',-' → logprob: -19.00006675720215
    9. '--' → logprob: -19.06256675720215
    10. '１' → logprob: -19.25006675720215

Token 53: '),(' (ID: 54876)
  Prédit: '),('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),(' → logprob: -0.0006809803890064359
    2. '),' → logprob: -7.750680923461914
    3. ')' → logprob: -8.375680923461914
    4. ',(' → logprob: -11.125680923461914
    5. ',' → logprob: -12.500680923461914
    6. '(' → logprob: -13.875680923461914
    7. ')(' → logprob: -15.750680923461914
    8. '),
' → logprob: -16.375680923461914
    9. '),

' → logprob: -17.250680923461914
    10. ')...' → logprob: -17.625680923461914

Token 54: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004078997299075127
    2. '1' → logprob: -5.5040788650512695
    3. ' ' → logprob: -15.00407886505127
    4. '(' → logprob: -15.12907886505127
    5. '01' → logprob: -18.254079818725586
    6. '۰' → logprob: -18.504079818725586
    7. '<|end|>' → logprob: -19.129079818725586
    8. '```' → logprob: -21.004079818725586
    9. '017' → logprob: -21.254079818725586
    10. '-' → logprob: -21.316579818725586

Token 55: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006708591827191412
    2. '0' → logprob: -7.625670909881592
    3. ',-' → logprob: -8.625670433044434
    4. ' ,' → logprob: -13.125670433044434
    5. '<|end|>' → logprob: -14.000670433044434
    6. '-' → logprob: -15.250670433044434
    7. ' ' → logprob: -15.750670433044434
    8. ')' → logprob: -17.12567138671875
    9. '```' → logprob: -17.50067138671875
    10. '1' → logprob: -17.62567138671875

Token 56: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.392202976712724e-06
    2. ' ' → logprob: -12.500006675720215
    3. '-' → logprob: -13.000006675720215
    4. '1' → logprob: -15.750006675720215
    5. '۰' → logprob: -16.8750057220459
    6. '<|end|>' → logprob: -17.3750057220459
    7. ')' → logprob: -17.7500057220459
    8. ' -' → logprob: -17.8750057220459
    9. '０' → logprob: -19.1250057220459
    10. '```' → logprob: -19.2500057220459

Token 57: '),(' (ID: 54876)
  Prédit: '),('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),(' → logprob: -0.00011403311509639025
    2. '),' → logprob: -9.125114440917969
    3. ')' → logprob: -12.625114440917969
    4. ',' → logprob: -13.875114440917969
    5. ',(' → logprob: -14.250114440917969
    6. '(' → logprob: -16.37511444091797
    7. ')(' → logprob: -16.75011444091797
    8. ' ),' → logprob: -17.00011444091797
    9. '),
' → logprob: -18.75011444091797
    10. ',),' → logprob: -18.87511444091797

Token 58: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.375000953674316
    3. ')' → logprob: -18.0
    4. '(' → logprob: -19.125
    5. '```' → logprob: -19.125
    6. '+' → logprob: -19.625
    7. '۱' → logprob: -20.75
    8. '0' → logprob: -21.0
    9. '১' → logprob: -21.0
    10. '`' → logprob: -21.125

Token 59: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009119403548538685
    2. '1' → logprob: -7.000911712646484
    3. ' ,' → logprob: -15.750911712646484
    4. ')' → logprob: -16.125911712646484
    5. ' ' → logprob: -17.375911712646484
    6. '(' → logprob: -17.750911712646484
    7. '<|end|>' → logprob: -17.875911712646484
    8. ',(' → logprob: -18.500911712646484
    9. '```' → logprob: -18.500911712646484
    10. '<|end|>' → logprob: -19.500911712646484

Token 60: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.054500666621607e-06
    2. ' ' → logprob: -12.75000286102295
    3. '+' → logprob: -16.625003814697266
    4. ')' → logprob: -16.875003814697266
    5. '```' → logprob: -17.500003814697266
    6. '-' → logprob: -18.000003814697266
    7. '<|end|>' → logprob: -19.500003814697266
    8. '۱' → logprob: -19.625003814697266
    9. '0' → logprob: -20.000003814697266
    10. '१' → logprob: -20.187503814697266

Token 61: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.07942208647727966
    2. ')' → logprob: -2.5794219970703125
    3. ']' → logprob: -7.5794219970703125
    4. ')])' → logprob: -11.329421997070312
    5. '))' → logprob: -12.829421997070312
    6. ')}' → logprob: -12.954421997070312
    7. '),' → logprob: -13.454421997070312
    8. '])]' → logprob: -14.454421997070312
    9. ' )' → logprob: -14.704421997070312
    10. '])' → logprob: -14.829421997070312

Token 62: 'def' (ID: 1314)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.1152978166937828
    2. 'dist' → logprob: -2.740297794342041
    3. 'for' → logprob: -3.865297794342041
    4. 'q' → logprob: -4.740297794342041
    5. 'def' → logprob: -4.990297794342041
    6. 'ans' → logprob: -6.240297794342041
    7. 'queue' → logprob: -6.865297794342041
    8. 'used' → logprob: -7.240297794342041
    9. 'seen' → logprob: -7.240297794342041
    10. 'res' → logprob: -7.365297794342041

Token 63: ' count' (ID: 3605)
  Prédit: ' bfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' bfs' → logprob: -0.0012303499970585108
    2. ' dfs' → logprob: -7.626230239868164
    3. 'b' → logprob: -8.501230239868164
    4. ' in' → logprob: -8.751230239868164
    5. ' valid' → logprob: -8.876230239868164
    6. ' is' → logprob: -9.001230239868164
    7. ' main' → logprob: -10.626230239868164
    8. 'dfs' → logprob: -10.876230239868164
    9. ' BFS' → logprob: -11.001230239868164
    10. ' safe' → logprob: -11.251230239868164

Token 64: '_dot' (ID: 73438)
  Prédit: '_neighbors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_neighbors' → logprob: -0.3166153132915497
    2. '_' → logprob: -1.941615343093872
    3. '(' → logprob: -2.566615343093872
    4. '_adj' → logprob: -3.816615343093872
    5. '_connected' → logprob: -4.691615104675293
    6. '_m' → logprob: -5.441615104675293
    7. '_cells' → logprob: -5.566615104675293
    8. '_safe' → logprob: -6.191615104675293
    9. '_(' → logprob: -6.566615104675293
    10. '_is' → logprob: -6.691615104675293

Token 65: '(i' (ID: 3649)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.579847514629364
    2. 's' → logprob: -0.829847514629364
    3. '_neighbors' → logprob: -6.20484733581543
    4. '((' → logprob: -6.82984733581543
    5. '(s' → logprob: -8.20484733581543
    6. '(x' → logprob: -8.57984733581543
    7. '(grid' → logprob: -9.32984733581543
    8. '_' → logprob: -10.20484733581543
    9. ' (' → logprob: -10.82984733581543
    10. '_s' → logprob: -11.07984733581543

Token 66: ',j' (ID: 22712)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11537620425224304
    2. ',j' → logprob: -2.3653762340545654
    3. ',n' → logprob: -5.365375995635986
    4. ',x' → logprob: -6.240375995635986
    5. ',d' → logprob: -6.365375995635986
    6. ',k' → logprob: -6.865375995635986
    7. ' ,' → logprob: -6.865375995635986
    8. ',row' → logprob: -7.115375995635986
    9. ',i' → logprob: -7.240375995635986
    10. '):' → logprob: -7.615375995635986

Token 67: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0072861965745687485
    2. ')' → logprob: -5.132286071777344
    3. ',' → logprob: -6.632286071777344
    4. '):
' → logprob: -11.257286071777344
    5. ' ):' → logprob: -11.757286071777344
    6. ':' → logprob: -12.382286071777344
    7. ')):' → logprob: -13.382286071777344
    8. ')：' → logprob: -13.507286071777344
    9. '-' → logprob: -14.132286071777344
    10. ',n' → logprob: -14.132286071777344

Token 68: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2863491475582123
    2. ' ' → logprob: -2.286349058151245
    3. '    ' → logprob: -3.036349058151245
    4. 'count' → logprob: -3.161349058151245
    5. ' count' → logprob: -3.661349058151245
    6. 'c' → logprob: -5.036349296569824
    7. '.' → logprob: -5.786349296569824
    8. ' return' → logprob: -6.036349296569824
    9. ' cnt' → logprob: -6.161349296569824
    10. ':' → logprob: -6.286349296569824

Token 69: ' c' (ID: 274)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.8157568573951721
    2. 'count' → logprob: -1.0657567977905273
    3. ' cnt' → logprob: -2.1907567977905273
    4. '   ' → logprob: -2.9407567977905273
    5. ' count' → logprob: -3.1907567977905273
    6. 'c' (adapté à ' c') → logprob: -5.440756797790527
    7. 'return' → logprob: -6.940756797790527
    8. ' c' → logprob: -7.190756797790527
    9. ' return' → logprob: -8.065756797790527
    10. ' if' → logprob: -9.065756797790527

Token 70: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.13239961862564087
    2. 'ount' → logprob: -2.132399559020996
    3. 'nt' → logprob: -5.632399559020996
    4. ' =' → logprob: -7.007399559020996
    5. '=count' → logprob: -7.382399559020996
    6. 'ounter' → logprob: -8.882399559020996
    7. '=c' → logprob: -9.757399559020996
    8. 'ont' → logprob: -10.382399559020996
    9. '=int' → logprob: -10.882399559020996
    10. 'cnt' → logprob: -11.132399559020996

Token 71: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.541112427134067e-05
    2. ' ' → logprob: -9.500075340270996
    3. 'grid' → logprob: -15.125075340270996
    4. '1' → logprob: -16.250076293945312
    5. '   ' → logprob: -16.625076293945312
    6. '```' → logprob: -17.500076293945312
    7. 'int' → logprob: -17.625076293945312
    8. 'sum' → logprob: -17.750076293945312
    9. '(' → logprob: -18.375076293945312
    10. ' ' → logprob: -18.500076293945312

Token 72: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 73: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8904865384101868
    2. ' for' → logprob: -1.015486478805542
    3. '<|end|>' → logprob: -1.640486478805542
    4. '   ' → logprob: -4.515486717224121
    5. ' ' → logprob: -4.765486717224121
    6. '	for' → logprob: -4.890486717224121
    7. '<|end|>' → logprob: -6.015486717224121
    8. '
' → logprob: -6.765486717224121
    9. ',' → logprob: -7.390486717224121
    10. ' 
' → logprob: -8.140486717224121

Token 74: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.04391743242740631
    2. ' for' → logprob: -3.168917417526245
    3. '<|end|>' → logprob: -7.168917655944824
    4. '	for' → logprob: -10.043917655944824
    5. ' ' → logprob: -10.168917655944824
    6. '```' → logprob: -10.543917655944824
    7. '<|end|>' → logprob: -11.418917655944824
    8. '   ' → logprob: -11.793917655944824
    9. '
' → logprob: -11.918917655944824
    10. '`' → logprob: -13.168917655944824

Token 75: ' dx' (ID: 29472)
  Prédit: 'di'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'di' → logprob: -0.7121855616569519
    2. 'dx' → logprob: -0.7121855616569519
    3. ' di' → logprob: -4.462185382843018
    4. ' dx' → logprob: -4.962185382843018
    5. 'dy' → logprob: -9.087185859680176
    6. '```' → logprob: -9.712185859680176
    7. '_di' → logprob: -9.962185859680176
    8. 'x' → logprob: -10.212185859680176
    9. '(dx' → logprob: -10.712185859680176
    10. '_dx' → logprob: -11.337185859680176

Token 76: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04047969728708267
    2. ',y' → logprob: -4.16547966003418
    3. ',d' → logprob: -4.54047966003418
    4. ',j' → logprob: -5.29047966003418
    5. ' ,' → logprob: -5.54047966003418
    6. ',n' → logprob: -6.29047966003418
    7. ' in' → logprob: -6.41547966003418
    8. ',v' → logprob: -8.54047966003418
    9. ',_' → logprob: -8.91547966003418
    10. ',w' → logprob: -9.41547966003418

Token 77: 'dy' (ID: 7593)
  Prédit: 'dy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -7.493430894101039e-05
    2. ' dy' → logprob: -9.500075340270996
    3. '.dy' → logprob: -18.62507438659668
    4. 'd' → logprob: -18.87507438659668
    5. 'dym' → logprob: -19.37507438659668
    6. 'dj' → logprob: -20.62507438659668
    7. 'dx' → logprob: -20.87507438659668
    8. 'Dy' → logprob: -21.12507438659668
    9. 'ddy' → logprob: -21.50007438659668
    10. 'dz' → logprob: -21.50007438659668

Token 78: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.08932175487279892
    2. 'in' → logprob: -2.4643218517303467
    3. '<|end|>' → logprob: -8.339322090148926
    4. ':' → logprob: -9.589322090148926
    5. '	in' → logprob: -10.714322090148926
    6. '<|end|>' → logprob: -11.214322090148926
    7. 'In' → logprob: -11.714322090148926
    8. '```' → logprob: -11.964322090148926
    9. ',' → logprob: -12.339322090148926
    10. ' ' → logprob: -12.714322090148926

Token 79: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.029752686619758606
    2. ' d' → logprob: -3.529752731323242
    3. ')d' → logprob: -13.654752731323242
    4. '<|end|>' → logprob: -14.529752731323242
    5. '	d' → logprob: -16.029752731323242
    6. '[d' → logprob: -16.404752731323242
    7. '[' → logprob: -16.404752731323242
    8. ' ' → logprob: -17.029752731323242
    9. '```' → logprob: -17.404752731323242
    10. '
' → logprob: -17.404752731323242

Token 80: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00011975488450843841
    2. '<|end|>' → logprob: -10.000120162963867
    3. ':**' → logprob: -10.125120162963867
    4. '):' → logprob: -11.250120162963867
    5. ':
' → logprob: -11.750120162963867
    6. ' :' → logprob: -12.125120162963867
    7. '<|end|>' → logprob: -12.625120162963867
    8. '：' → logprob: -14.250120162963867
    9. '.' → logprob: -14.875120162963867
    10. '>:' → logprob: -15.125120162963867

Token 81: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 82: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.11102063953876495
    2. 'x' (adapté à ' x') → logprob: -2.611020565032959
    3. ' nx' → logprob: -3.736020565032959
    4. ' ni' → logprob: -5.236020565032959
    5. 'nx' → logprob: -6.236020565032959
    6. 'ni' → logprob: -8.236021041870117
    7. '       ' → logprob: -8.861021041870117
    8. '    ' → logprob: -10.611021041870117
    9. ' if' → logprob: -10.736021041870117
    10. '```' → logprob: -11.486021041870117

Token 83: ',y' (ID: 16103)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.007340753450989723
    2. ' =' → logprob: -5.007340908050537
    3. '=i' → logprob: -8.132340431213379
    4. '=x' → logprob: -8.132340431213379
    5. ',' → logprob: -11.132340431213379
    6. '=j' → logprob: -11.882340431213379
    7. '=w' → logprob: -12.382340431213379
    8. '=
' → logprob: -12.757340431213379
    9. '=y' → logprob: -13.257340431213379
    10. '＝' → logprob: -13.382340431213379

Token 84: '=i' (ID: 48141)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.020793762058019638
    2. '=i' → logprob: -4.270793914794922
    3. ' =' → logprob: -5.020793914794922
    4. '=x' → logprob: -11.770793914794922
    5. '=j' → logprob: -14.145793914794922
    6. '＝' → logprob: -15.520793914794922
    7. '=
' → logprob: -15.645793914794922
    8. '=

' → logprob: -16.270793914794922
    9. '=(' → logprob: -16.645793914794922
    10. '=n' → logprob: -17.020793914794922

Token 85: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00017636561824474484
    2. ' +' → logprob: -8.750176429748535
    3. '+x' → logprob: -11.500176429748535
    4. '+
' → logprob: -13.000176429748535
    5. 'dx' → logprob: -13.125176429748535
    6. '+d' → logprob: -14.125176429748535
    7. '<|end|>' → logprob: -14.250176429748535
    8. '+,' → logprob: -14.375176429748535
    9. '＋' → logprob: -15.375176429748535
    10. ' dx' → logprob: -15.375176429748535

Token 86: 'dx' (ID: 22100)
  Prédit: 'dx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -4.723352049040841e-06
    2. ' dx' → logprob: -12.500004768371582
    3. '1' → logprob: -14.750004768371582
    4. 'x' → logprob: -15.625004768371582
    5. '(dx' → logprob: -16.375003814697266
    6. '[' → logprob: -16.750003814697266
    7. 'd' → logprob: -16.750003814697266
    8. '_dx' → logprob: -16.750003814697266
    9. '.dx' → logprob: -17.000003814697266
    10. '0' → logprob: -17.375003814697266

Token 87: ',j' (ID: 22712)
  Prédit: ',j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',j' → logprob: -0.035816214978694916
    2. ',' → logprob: -3.410816192626953
    3. ',y' → logprob: -6.160816192626953
    4. ' ,' → logprob: -10.035816192626953
    5. ',b' → logprob: -12.785816192626953
    6. ',d' → logprob: -12.910816192626953
    7. ',w' → logprob: -13.160816192626953
    8. 'j' → logprob: -13.410816192626953
    9. ',v' → logprob: -13.660816192626953
    10. ',x' → logprob: -13.660816192626953

Token 88: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -6.630610641877865e-06
    2. ' +' → logprob: -12.250006675720215
    3. '<|end|>' → logprob: -13.375006675720215
    4. '+y' → logprob: -15.750006675720215
    5. '+d' → logprob: -16.6250057220459
    6. '+
' → logprob: -17.1250057220459
    7. '+=' → logprob: -17.8750057220459
    8. '+x' → logprob: -19.0000057220459
    9. '+xml' → logprob: -19.2500057220459
    10. '+#' → logprob: -19.6250057220459

Token 89: 'dy' (ID: 7593)
  Prédit: 'dy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -4.4656579120783135e-05
    2. '1' → logprob: -10.250044822692871
    3. ' dy' → logprob: -11.625044822692871
    4. 'dx' → logprob: -16.000043869018555
    5. '.dy' → logprob: -16.250043869018555
    6. 'd' → logprob: -16.875043869018555
    7. 'dj' → logprob: -17.000043869018555
    8. '0' → logprob: -17.750043869018555
    9. 'dym' → logprob: -19.125043869018555
    10. 'ddy' → logprob: -19.125043869018555

Token 90: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 91: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 92: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.16154058277606964
    2. 'if' (adapté à ' if') → logprob: -2.0365405082702637
    3. ' ' → logprob: -4.661540508270264
    4. '       ' → logprob: -5.911540508270264
    5. '
' → logprob: -6.161540508270264
    6. '   ' → logprob: -6.411540508270264
    7. '	if' → logprob: -6.661540508270264
    8. '    ' → logprob: -8.036540985107422
    9. ' 
' → logprob: -8.161540985107422
    10. ',' → logprob: -8.661540985107422

Token 93: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.014164102263748646
    2. ' ' → logprob: -4.264163970947266
    3. 'x' → logprob: -14.514163970947266
    4. ' x' → logprob: -15.889163970947266
    5. '(' → logprob: -17.389163970947266
    6. ' not' → logprob: -17.639163970947266
    7. ' (' → logprob: -18.139163970947266
    8. '۰' → logprob: -18.264163970947266
    9. '<|end|>' → logprob: -18.389163970947266
    10. ' ' → logprob: -18.889163970947266

Token 94: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.060365608893335e-05
    2. ' ' → logprob: -10.125041007995605
    3. 'x' → logprob: -14.750041007995605
    4. '(' → logprob: -17.00004005432129
    5. ')' → logprob: -19.12504005432129
    6. '۰' → logprob: -19.25004005432129
    7. 'not' → logprob: -19.50004005432129
    8. '-' → logprob: -20.00004005432129
    9. ' x' → logprob: -20.12504005432129
    10. 'H' → logprob: -20.25004005432129

Token 95: '<=' (ID: 16672)
  Prédit: '<='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.02324792370200157
    2. ' <=' → logprob: -3.7732479572296143
    3. ')<=' → logprob: -14.023247718811035
    4. '<' → logprob: -14.398247718811035
    5. ']<=' → logprob: -15.023247718811035
    6. '&lt' → logprob: -15.898247718811035
    7. '=<' → logprob: -16.14824867248535
    8. ' ' → logprob: -16.14824867248535
    9. ' <=",' → logprob: -16.39824867248535
    10. 'x' → logprob: -16.64824867248535

Token 96: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -6.988221684878226e-06
    2. ' x' → logprob: -11.875006675720215
    3. '	x' → logprob: -17.62500762939453
    4. '"x' → logprob: -19.00000762939453
    5. ')x' → logprob: -19.25000762939453
    6. ''x' → logprob: -20.12500762939453
    7. '<x' → logprob: -20.37500762939453
    8. ' ' → logprob: -20.75000762939453
    9. '>x' → logprob: -20.87500762939453
    10. '%x' → logprob: -20.87500762939453

Token 97: '<H' (ID: 104212)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.48428934812545776
    2. '<H' → logprob: -0.9842893481254578
    3. '<W' → logprob: -4.609289169311523
    4. 'and' → logprob: -9.859289169311523
    5. ' <' → logprob: -10.234289169311523
    6. ' and' → logprob: -10.484289169311523
    7. '<len' → logprob: -10.984289169311523
    8. 'H' → logprob: -11.109289169311523
    9. '<
' → logprob: -11.859289169311523
    10. '<I' → logprob: -12.609289169311523

Token 98: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.1602427214384079
    2. 'and' → logprob: -1.9102426767349243
    3. ' ' → logprob: -10.910243034362793
    4. '	and' → logprob: -16.160242080688477
    5. 'if' → logprob: -17.035242080688477
    6. '<' → logprob: -17.660242080688477
    7. '```' → logprob: -17.660242080688477
    8. '0' → logprob: -17.660242080688477
    9. ' if' → logprob: -17.785242080688477
    10. '   ' → logprob: -17.910242080688477

Token 99: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00017958412354346365
    2. ' ' → logprob: -8.625179290771484
    3. ' ' → logprob: -19.625179290771484
    4. '   ' → logprob: -20.500179290771484
    5. '۰' → logprob: -21.625179290771484
    6. '<|end|>' → logprob: -22.000179290771484
    7. '    ' → logprob: -22.750179290771484
    8. '           ' → logprob: -23.000179290771484
    9. '  ' → logprob: -23.000179290771484
    10. '       ' → logprob: -23.125179290771484

Token 100: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00010902655776590109
    2. ' ' → logprob: -9.12510871887207
    3. 'y' → logprob: -17.50010871887207
    4. 'x' → logprob: -18.75010871887207
    5. ' y' → logprob: -19.50010871887207
    6. '   ' → logprob: -20.12510871887207
    7. '<|end|>' → logprob: -20.25010871887207
    8. '  ' → logprob: -20.87510871887207
    9. '۰' → logprob: -21.12510871887207
    10. '    ' → logprob: -21.62510871887207

Token 101: '<=' (ID: 16672)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.02915346249938011
    2. '<W' → logprob: -4.529153347015381
    3. ' <' → logprob: -5.404153347015381
    4. 'y' → logprob: -5.529153347015381
    5. '<=' → logprob: -5.904153347015381
    6. 'and' → logprob: -6.404153347015381
    7. '<len' → logprob: -6.779153347015381
    8. ' ' → logprob: -6.779153347015381
    9. ' y' → logprob: -7.654153347015381
    10. '<w' → logprob: -7.779153347015381

Token 102: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.20781107246875763
    2. 'W' → logprob: -1.7078111171722412
    3. 'w' → logprob: -5.082810878753662
    4. ' y' → logprob: -9.08281135559082
    5. ' W' → logprob: -10.08281135559082
    6. 'x' → logprob: -11.58281135559082
    7. 'Y' → logprob: -11.83281135559082
    8. 'j' → logprob: -13.58281135559082
    9. 'H' → logprob: -15.58281135559082
    10. ' ' → logprob: -15.70781135559082

Token 103: '<W' (ID: 180273)
  Prédit: '<W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<W' → logprob: -5.073596548754722e-05
    2. '<' → logprob: -11.00005054473877
    3. '<H' → logprob: -11.00005054473877
    4. 'W' → logprob: -11.75005054473877
    5. ' <' → logprob: -11.87505054473877
    6. '<len' → logprob: -13.62505054473877
    7. '<w' → logprob: -15.12505054473877
    8. '<Grid' → logprob: -15.37505054473877
    9. '<=' → logprob: -16.125051498413086
    10. ' ' → logprob: -16.750051498413086

Token 104: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.07912474125623703
    2. 'and' → logprob: -2.579124689102173
    3. ':' → logprob: -8.454124450683594
    4. ' ' → logprob: -11.704124450683594
    5. ':
' → logprob: -11.829124450683594
    6. '   ' → logprob: -12.829124450683594
    7. '	and' → logprob: -13.579124450683594
    8. ' :' → logprob: -14.829124450683594
    9. '       ' → logprob: -14.954124450683594
    10. '[' → logprob: -15.204124450683594

Token 105: ' grid' (ID: 10586)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grid' → logprob: -0.3868734836578369
    2. ' grid' → logprob: -1.136873483657837
    3. '(grid' → logprob: -13.761873245239258
    4. '	grid' → logprob: -14.261873245239258
    5. ' ' → logprob: -15.011873245239258
    6. '.grid' → logprob: -16.761873245239258
    7. 'not' → logprob: -16.761873245239258
    8. ' not' → logprob: -17.011873245239258
    9. '-grid' → logprob: -17.136873245239258
    10. 'Grid' → logprob: -17.261873245239258

Token 106: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -1.259079363080673e-05
    2. '[' → logprob: -11.750012397766113
    3. '[
' → logprob: -13.250012397766113
    4. 'x' → logprob: -13.750012397766113
    5. '][' → logprob: -14.125012397766113
    6. '[y' → logprob: -14.750012397766113
    7. ' [' → logprob: -15.000012397766113
    8. '[i' → logprob: -16.00001335144043
    9. '```' → logprob: -16.00001335144043
    10. '
' → logprob: -17.12501335144043

Token 107: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.004366271197795868
    2. '[y' → logprob: -6.379366397857666
    3. '[x' → logprob: -6.504366397857666
    4. ']' → logprob: -7.129366397857666
    5. '[' → logprob: -8.379365921020508
    6. '"][' → logprob: -10.004365921020508
    7. '[
' → logprob: -10.629365921020508
    8. ' ][' → logprob: -10.754365921020508
    9. ''][' → logprob: -11.879365921020508
    10. '>[' → logprob: -11.879365921020508

Token 108: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -5.438573680294212e-06
    2. ' y' → logprob: -12.750005722045898
    3. ' ' → logprob: -13.750005722045898
    4. '<|end|>' → logprob: -14.000005722045898
    5. 'x' → logprob: -15.750005722045898
    6. ']' → logprob: -15.750005722045898
    7. ')y' → logprob: -16.5000057220459
    8. ''y' → logprob: -16.8750057220459
    9. '<|end|>' → logprob: -16.8750057220459
    10. ')' → logprob: -17.2500057220459

Token 109: ']==' (ID: 34128)
  Prédit: ']=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']==' → logprob: -0.08777280896902084
    2. '==' → logprob: -2.962772846221924
    3. ']=='' → logprob: -3.712772846221924
    4. ']' → logprob: -5.587772846221924
    5. '=='' → logprob: -6.087772846221924
    6. '']=='' → logprob: -7.462772846221924
    7. ']=="' → logprob: -7.462772846221924
    8. '']==' → logprob: -7.962772846221924
    9. '[' → logprob: -8.587772369384766
    10. '==
' → logprob: -9.837772369384766

Token 110: ''.' (ID: 6120)
  Prédit: ''.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''.' → logprob: -0.000566137779969722
    2. '"."' → logprob: -7.875566005706787
    3. ''' → logprob: -9.625566482543945
    4. '.' → logprob: -10.125566482543945
    5. ''#' → logprob: -10.250566482543945
    6. ' '.'' → logprob: -11.000566482543945
    7. '".' → logprob: -11.375566482543945
    8. ''*' → logprob: -11.500566482543945
    9. ''o' → logprob: -12.625566482543945
    10. ''d' → logprob: -14.125566482543945

Token 111: '':
' (ID: 7669)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4702131152153015
    2. '':' → logprob: -1.0952131748199463
    3. ')' → logprob: -3.9702131748199463
    4. '):' → logprob: -4.470212936401367
    5. ''' → logprob: -5.220212936401367
    6. '':
' → logprob: -6.595212936401367
    7. ':
' → logprob: -6.720212936401367
    8. '):
' → logprob: -7.720212936401367
    9. ''):' → logprob: -7.720212936401367
    10. ' ':' → logprob: -7.845212936401367

Token 112: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07366496324539185
    2. 'c' → logprob: -3.573664903640747
    3. '       ' → logprob: -3.948664903640747
    4. ' c' → logprob: -4.073665142059326
    5. '               ' → logprob: -5.448665142059326
    6. '
' → logprob: -6.448665142059326
    7. '   ' → logprob: -8.073664665222168
    8. '```' → logprob: -9.198664665222168
    9. '	c' → logprob: -9.573664665222168
    10. ' ' → logprob: -9.948664665222168

Token 113: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' (adapté à ' c') → logprob: -0.00015955790877342224
    2. ' c' → logprob: -8.75015926361084
    3. '   ' → logprob: -14.87515926361084
    4. '           ' → logprob: -14.87515926361084
    5. '
' → logprob: -15.62515926361084
    6. '	c' → logprob: -16.000160217285156
    7. '               ' → logprob: -16.750160217285156
    8. '       ' → logprob: -17.000160217285156
    9. '```' → logprob: -17.500160217285156
    10. ' ' → logprob: -18.375160217285156

Token 114: '+=' (ID: 18287)
  Prédit: '+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.008951113559305668
    2. '+' → logprob: -4.758951187133789
    3. ' +=' → logprob: -8.133951187133789
    4. '=' → logprob: -10.258951187133789
    5. '+='' → logprob: -12.758951187133789
    6. ']+=' → logprob: -13.008951187133789
    7. '+="' → logprob: -13.133951187133789
    8. '+=(' → logprob: -14.508951187133789
    9. '++' → logprob: -15.383951187133789
    10. '+c' → logprob: -16.50895118713379

Token 115: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -13.750000953674316
    3. '<|end|>' → logprob: -20.000001907348633
    4. '```' → logprob: -21.000001907348633
    5. '１' → logprob: -22.250001907348633
    6. '0' → logprob: -23.125001907348633
    7. '۱' → logprob: -23.250001907348633
    8. '2' → logprob: -23.375001907348633
    9. '`' → logprob: -23.750001907348633
    10. '-' → logprob: -23.875001907348633

Token 116: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007491623517125845
    2. 'return' → logprob: -5.007491588592529
    3. ' return' → logprob: -7.382491588592529
    4. '
' → logprob: -9.257492065429688
    5. '	return' → logprob: -10.882492065429688
    6. '<|end|>' → logprob: -10.882492065429688
    7. ':return' → logprob: -12.132492065429688
    8. ' ' → logprob: -12.132492065429688
    9. '       ' → logprob: -12.632492065429688
    10. '```' → logprob: -13.132492065429688

Token 117: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007142394781112671
    2. 'return' → logprob: -5.007142543792725
    3. ' return' → logprob: -7.882142543792725
    4. '	return' → logprob: -10.882142066955566
    5. '<|end|>' → logprob: -10.882142066955566
    6. ' ' → logprob: -12.507142066955566
    7. ':return' → logprob: -13.007142066955566
    8. '
' → logprob: -13.257142066955566
    9. '       ' → logprob: -13.507142066955566
    10. '  ' → logprob: -14.132142066955566

Token 118: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.04094838351011276
    2. ' return' → logprob: -3.2909483909606934
    3. '   ' → logprob: -5.915948390960693
    4. ' ' → logprob: -8.915947914123535
    5. '	return' → logprob: -10.540947914123535
    6. '<|end|>' → logprob: -11.290947914123535
    7. '  ' → logprob: -11.790947914123535
    8. ':return' → logprob: -11.915947914123535
    9. '
' → logprob: -12.290947914123535
    10. 'r' → logprob: -12.415947914123535

Token 119: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.001170225441455841
    2. ' c' → logprob: -6.7511701583862305
    3. '	c' → logprob: -18.001171112060547
    4. ')c' → logprob: -20.501171112060547
    5. '_c' → logprob: -22.751171112060547
    6. '(c' → logprob: -22.751171112060547
    7. '   ' → logprob: -22.751171112060547
    8. '$c' → logprob: -22.876171112060547
    9. ' ' → logprob: -22.876171112060547
    10. '<c' → logprob: -23.251171112060547

Token 120: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 121: 'queue' (ID: 9409)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.6830054521560669
    2. 'for' → logprob: -0.9330054521560669
    3. 'dist' → logprob: -3.6830053329467773
    4. 'ans' → logprob: -3.6830053329467773
    5. 'q' → logprob: -3.8080053329467773
    6. 'res' → logprob: -4.683005332946777
    7. 'result' → logprob: -5.558005332946777
    8. 'max' → logprob: -5.808005332946777
    9. 'Q' → logprob: -6.183005332946777
    10. 'count' → logprob: -6.683005332946777

Token 122: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.17135277390480042
    2. ' =' → logprob: -2.1713528633117676
    3. '.' → logprob: -3.9213528633117676
    4. '=[]' → logprob: -4.421352863311768
    5. '<|end|>' → logprob: -5.046352863311768
    6. '.append' → logprob: -6.296352863311768
    7. '(' → logprob: -6.296352863311768
    8. ')' → logprob: -8.04635238647461
    9. '=[]
' → logprob: -8.67135238647461
    10. '.setdefault' → logprob: -9.17135238647461

Token 123: 'deque' (ID: 143563)
  Prédit: 'deque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -1.8624639324116288e-06
    2. ' deque' → logprob: -13.250001907348633
    3. 'collections' → logprob: -20.000001907348633
    4. 'de' → logprob: -20.125001907348633
    5. '```' → logprob: -21.250001907348633
    6. '[]' → logprob: -21.250001907348633
    7. 'Deque' → logprob: -21.875001907348633
    8. '(de' → logprob: -23.750001907348633
    9. '   ' → logprob: -24.125001907348633
    10. 'dq' → logprob: -24.250001907348633

Token 124: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.039343059062957764
    2. '(' → logprob: -3.2893431186676025
    3. '([]' → logprob: -7.539342880249023
    4. '([' → logprob: -7.664342880249023
    5. '([(' → logprob: -8.289342880249023
    6. '((' → logprob: -10.664342880249023
    7. '(()' → logprob: -11.789342880249023
    8. '()]' → logprob: -13.164342880249023
    9. '()(' → logprob: -13.414342880249023
    10. '();' → logprob: -13.539342880249023

Token 125: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0021671520080417395
    2. 'visited' → logprob: -6.252167224884033
    3. ' for' → logprob: -8.627166748046875
    4. 'found' → logprob: -10.627166748046875
    5. '.' → logprob: -11.627166748046875
    6. '#' → logprob: -12.377166748046875
    7. 'used' → logprob: -12.877166748046875
    8. '```' → logprob: -12.877166748046875
    9. 'result' → logprob: -13.127166748046875
    10. 'valid' → logprob: -13.377166748046875

Token 126: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.002485169330611825
    2. 'i' → logprob: -6.002485275268555
    3. ' ' → logprob: -12.627485275268555
    4. '	i' → logprob: -12.752485275268555
    5. '_i' → logprob: -13.502485275268555
    6. ' _' → logprob: -14.377485275268555
    7. ' x' → logprob: -14.627485275268555
    8. ' ' → logprob: -14.877485275268555
    9. '_' → logprob: -15.377485275268555
    10. '```' → logprob: -17.002485275268555

Token 127: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.023985860869288445
    2. 'in' → logprob: -3.7739858627319336
    3. ' ' → logprob: -7.273985862731934
    4. ' range' → logprob: -10.523985862731934
    5. 'range' → logprob: -11.273985862731934
    6. ' i' → logprob: -12.773985862731934
    7. '	in' → logprob: -14.023985862731934
    8. '  ' → logprob: -14.148985862731934
    9. ')' → logprob: -14.273985862731934
    10. '<|end|>' → logprob: -15.023985862731934

Token 128: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0067154900170862675
    2. ' range' → logprob: -5.006715297698975
    3. '(range' → logprob: -16.256715774536133
    4. '	range' → logprob: -17.256715774536133
    5. ' ' → logprob: -19.256715774536133
    6. '
' → logprob: -19.506715774536133
    7. ')' → logprob: -19.881715774536133
    8. 'rang' → logprob: -20.381715774536133
    9. 'ran' → logprob: -20.381715774536133
    10. '_range' → logprob: -20.631715774536133

Token 129: '(' (ID: 7)
  Prédit: '(H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -0.00018101456225849688
    2. '(' → logprob: -8.625181198120117
    3. '(
' → logprob: -14.375181198120117
    4. 'H' → logprob: -14.500181198120117
    5. ' (' → logprob: -15.500181198120117
    6. '(W' → logprob: -17.125181198120117
    7. '(len' → logprob: -17.500181198120117
    8. ' H' → logprob: -17.625181198120117
    9. '(Q' → logprob: -18.000181198120117
    10. '(A' → logprob: -18.125181198120117

Token 130: '1' (ID: 16)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -1.2664456789934775e-06
    2. ' H' → logprob: -13.625000953674316
    3. '1' → logprob: -18.125001907348633
    4. '(H' → logprob: -18.125001907348633
    5. '	H' → logprob: -19.625001907348633
    6. '0' → logprob: -20.500001907348633
    7. ')' → logprob: -20.625001907348633
    8. ',H' → logprob: -21.250001907348633
    9. 'W' → logprob: -21.875001907348633
    10. '   ' → logprob: -22.250001907348633

Token 131: ',H' (ID: 94400)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11892218887805939
    2. ',H' → logprob: -2.618922233581543
    3. ' ,' → logprob: -3.243922233581543
    4. ',W' → logprob: -8.493922233581543
    5. ',len' → logprob: -11.118922233581543
    6. ' ' → logprob: -12.868922233581543
    7. ',I' → logprob: -14.243922233581543
    8. ',int' → logprob: -14.243922233581543
    9. ',
' → logprob: -14.243922233581543
    10. ',N' → logprob: -14.618922233581543

Token 132: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.18148823082447052
    2. '):' → logprob: -1.806488275527954
    3. '):
' → logprob: -6.806488037109375
    4. ' -' → logprob: -7.431488037109375
    5. ')' → logprob: -10.431488037109375
    6. ' ):' → logprob: -12.056488037109375
    7. ':' → logprob: -12.681488037109375
    8. '[' → logprob: -14.806488037109375
    9. '):

' → logprob: -14.806488037109375
    10. '+' → logprob: -14.806488037109375

Token 133: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -15.000000953674316
    3. '0' → logprob: -16.625
    4. '```' → logprob: -16.875
    5. ')' → logprob: -17.75
    6. '１' → logprob: -19.1875
    7. '2' → logprob: -19.3125
    8. '   ' → logprob: -19.8125
    9. '۱' → logprob: -20.375
    10. '``' → logprob: -20.4375

Token 134: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0017290873220190406
    2. ')' → logprob: -6.6267290115356445
    3. ':' → logprob: -8.501729011535645
    4. '):
' → logprob: -8.751729011535645
    5. ' ):' → logprob: -10.126729011535645
    6. '():' → logprob: -15.251729011535645
    7. ' )' → logprob: -15.501729011535645
    8. ',' → logprob: -15.626729011535645
    9. '):

' → logprob: -15.626729011535645
    10. ']:' → logprob: -16.25172996520996

Token 135: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2569074034690857
    2. '	for' → logprob: -1.7569074630737305
    3. ' for' → logprob: -3.2569074630737305
    4. '<|end|>' → logprob: -4.2569074630737305
    5. 'for' → logprob: -7.0069074630737305
    6. ' ' → logprob: -8.38190746307373
    7. '<|end|>' → logprob: -9.75690746307373
    8. '	if' → logprob: -11.13190746307373
    9. '   ' → logprob: -11.75690746307373
    10. '	   ' → logprob: -12.13190746307373

Token 136: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.029788563027977943
    2. ' for' → logprob: -3.5297884941101074
    3. '   ' → logprob: -10.279788970947266
    4. '	for' → logprob: -12.779788970947266
    5. ' ' → logprob: -14.154788970947266
    6. 'range' → logprob: -15.529788970947266
    7. ' range' → logprob: -17.779788970947266
    8. '  ' → logprob: -17.904788970947266
    9. '    ' → logprob: -18.279788970947266
    10. '<|end|>' → logprob: -18.529788970947266

Token 137: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.47407716512680054
    2. ' j' → logprob: -0.9740771651268005
    3. ' ' → logprob: -16.099077224731445
    4. '	j' → logprob: -16.224077224731445
    5. '```' → logprob: -17.849077224731445
    6. 'y' → logprob: -18.474077224731445
    7. ' y' → logprob: -18.474077224731445
    8. '   ' → logprob: -18.599077224731445
    9. '$j' → logprob: -18.974077224731445
    10. ' ' → logprob: -19.724077224731445

Token 138: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.31364020705223083
    2. ' in' → logprob: -1.3136402368545532
    3. '(' → logprob: -7.938640117645264
    4. ' ' → logprob: -11.938640594482422
    5. 'i' → logprob: -12.438640594482422
    6. ')' → logprob: -12.813640594482422
    7. '=' → logprob: -13.313640594482422
    8. ' i' → logprob: -13.813640594482422
    9. ',' → logprob: -13.938640594482422
    10. ' (' → logprob: -13.938640594482422

Token 139: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.4740830063819885
    2. ' range' → logprob: -0.9740830063819885
    3. '(range' → logprob: -12.349082946777344
    4. '(' → logprob: -13.349082946777344
    5. '	range' → logprob: -17.099082946777344
    6. ' ' → logprob: -17.849082946777344
    7. '[' → logprob: -18.349082946777344
    8. '1' → logprob: -18.599082946777344
    9. ' (' → logprob: -19.974082946777344
    10. 'Range' → logprob: -20.224082946777344

Token 140: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.981667537620524e-06
    2. '(
' → logprob: -14.000001907348633
    3. '1' → logprob: -14.250001907348633
    4. ' (' → logprob: -15.000001907348633
    5. ')' → logprob: -17.500001907348633
    6. 'range' → logprob: -18.125001907348633
    7. '2' → logprob: -19.500001907348633
    8. ' ' → logprob: -19.500001907348633
    9. '(

' → logprob: -20.500001907348633
    10. ',' → logprob: -20.500001907348633

Token 141: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.1008713702030946e-06
    2. ' ' → logprob: -13.375001907348633
    3. '(' → logprob: -15.625001907348633
    4. 'W' → logprob: -15.750001907348633
    5. '   ' → logprob: -16.875001907348633
    6. ')' → logprob: -17.125001907348633
    7. '
' → logprob: -17.500001907348633
    8. '0' → logprob: -17.625001907348633
    9. '```' → logprob: -17.625001907348633
    10. '`' → logprob: -19.000001907348633

Token 142: ',W' (ID: 117252)
  Prédit: ',W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',W' → logprob: -0.0005053732893429697
    2. ',' → logprob: -7.625505447387695
    3. 'W' → logprob: -11.375505447387695
    4. ' ,' → logprob: -12.250505447387695
    5. ',H' → logprob: -15.125505447387695
    6. ',w' → logprob: -15.125505447387695
    7. '(W' → logprob: -15.250505447387695
    8. '<W' → logprob: -16.500505447387695
    9. ' W' → logprob: -17.375505447387695
    10. ',
' → logprob: -17.625505447387695

Token 143: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -1.1472419600977446e-06
    2. ' -' → logprob: -13.750000953674316
    3. '1' → logprob: -17.500001907348633
    4. '-)' → logprob: -18.875001907348633
    5. ')' → logprob: -19.250001907348633
    6. '<|end|>' → logprob: -19.250001907348633
    7. '-
' → logprob: -20.000001907348633
    8. '()-' → logprob: -20.250001907348633
    9. '```' → logprob: -20.625001907348633
    10. '2' → logprob: -21.250001907348633

Token 144: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0280383548888494e-06
    2. '2' → logprob: -14.625000953674316
    3. ' ' → logprob: -15.250000953674316
    4. '```' → logprob: -15.250000953674316
    5. '-' → logprob: -16.875001907348633
    6. '   ' → logprob: -17.562501907348633
    7. ')' → logprob: -18.562501907348633
    8. '１' → logprob: -19.062501907348633
    9. '۱' → logprob: -19.125001907348633
    10. '(' → logprob: -19.187501907348633

Token 145: '):
' (ID: 1883)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10221146047115326
    2. '):' → logprob: -2.3522114753723145
    3. ')' → logprob: -6.6022114753723145
    4. ':
' → logprob: -7.8522114753723145
    5. '):
' → logprob: -8.977210998535156
    6. ' :' → logprob: -9.852210998535156
    7. 'if' → logprob: -10.477210998535156
    8. ' ):' → logprob: -10.727210998535156
    9. ' if' → logprob: -11.602210998535156
    10. '():' → logprob: -11.852210998535156

Token 146: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12804299592971802
    2. ' if' → logprob: -2.5030429363250732
    3. '       ' → logprob: -3.3780429363250732
    4. 'if' → logprob: -5.628043174743652
    5. ' ' → logprob: -8.253043174743652
    6. '	if' → logprob: -9.128043174743652
    7. '    ' → logprob: -9.378043174743652
    8. '<|end|>' → logprob: -9.503043174743652
    9. '   ' → logprob: -10.628043174743652
    10. '  ' → logprob: -10.628043174743652

Token 147: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.012693053111433983
    2. ' if' → logprob: -4.387692928314209
    3. '   ' → logprob: -8.637693405151367
    4. '       ' → logprob: -13.137693405151367
    5. 'queue' → logprob: -13.262693405151367
    6. 'i' → logprob: -14.512693405151367
    7. ' ' → logprob: -15.012693405151367
    8. '	if' → logprob: -15.012693405151367
    9. ' queue' → logprob: -15.637693405151367
    10. '    ' → logprob: -15.762693405151367

Token 148: ' grid' (ID: 10586)
  Prédit: ' grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' grid' → logprob: -0.5256134867668152
    2. 'grid' → logprob: -0.9006134867668152
    3. 'count' → logprob: -6.525613307952881
    4. ' count' → logprob: -7.025613307952881
    5. ' ' → logprob: -10.275613784790039
    6. '	grid' → logprob: -10.713113784790039
    7. '(grid' → logprob: -11.025613784790039
    8. ' not' → logprob: -11.275613784790039
    9. ' all' → logprob: -11.963113784790039
    10. ' ' → logprob: -12.338113784790039

Token 149: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -6.988221684878226e-06
    2. '[j' → logprob: -12.750006675720215
    3. '[x' → logprob: -13.000006675720215
    4. '[I' → logprob: -14.000006675720215
    5. '[' → logprob: -15.750006675720215
    6. '```' → logprob: -16.00000762939453
    7. 'i' → logprob: -16.37500762939453
    8. ' [' → logprob: -16.50000762939453
    9. ')' → logprob: -17.00000762939453
    10. '][' → logprob: -17.00000762939453

Token 150: '][' (ID: 2696)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.5311230421066284
    2. '[j' → logprob: -1.2811230421066284
    3. '][' → logprob: -2.031123161315918
    4. '[' → logprob: -6.906123161315918
    5. ']' → logprob: -7.156123161315918
    6. '```' → logprob: -8.156123161315918
    7. ']==' → logprob: -8.281123161315918
    8. '==' → logprob: -8.781123161315918
    9. '[I' → logprob: -9.156123161315918
    10. '[x' → logprob: -9.406123161315918

Token 151: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.282920129597187e-05
    2. 'i' → logprob: -11.875012397766113
    3. ']' → logprob: -13.500012397766113
    4. ''' → logprob: -13.625012397766113
    5. ''.' → logprob: -13.750012397766113
    6. ' j' → logprob: -14.500012397766113
    7. '][' → logprob: -15.000012397766113
    8. '```' → logprob: -15.250012397766113
    9. '	j' → logprob: -16.00001335144043
    10. '.' → logprob: -16.12501335144043

Token 152: ']' (ID: 60)
  Prédit: ']=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']==' → logprob: -0.305008202791214
    2. ']=='' → logprob: -1.4300081729888916
    3. ']' → logprob: -3.9300081729888916
    4. '=='' → logprob: -5.930008411407471
    5. '==' → logprob: -6.930008411407471
    6. ']!='' → logprob: -9.430007934570312
    7. ']=="' → logprob: -9.680007934570312
    8. '']=='' → logprob: -9.805007934570312
    9. ']!=' → logprob: -10.680007934570312
    10. '[' → logprob: -10.805007934570312

Token 153: ' !=' (ID: 1666)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.08475372195243835
    2. '=='' → logprob: -2.5847537517547607
    3. ' ==' → logprob: -5.209753513336182
    4. '=="' → logprob: -9.08475399017334
    5. '[' → logprob: -9.20975399017334
    6. '=' → logprob: -9.83475399017334
    7. ']==' → logprob: -10.08475399017334
    8. ' =='' → logprob: -10.45975399017334
    9. ']=='' → logprob: -11.33475399017334
    10. '==
' → logprob: -11.45975399017334

Token 154: ' '.' (ID: 12662)
  Prédit: ''.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''.' → logprob: -0.07276357710361481
    2. ''#' → logprob: -2.697763681411743
    3. ''*' → logprob: -5.947763442993164
    4. ''' → logprob: -9.322763442993164
    5. '.' → logprob: -9.572763442993164
    6. ' '.'' → logprob: -11.072763442993164
    7. ' '#'' → logprob: -11.197763442993164
    8. ''x' → logprob: -12.822763442993164
    9. '#' → logprob: -12.947763442993164
    10. '"."' → logprob: -12.947763442993164

Token 155: '':
' (ID: 7669)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.10506699234247208
    2. 'and' → logprob: -2.730067014694214
    3. ':' → logprob: -3.605067014694214
    4. '):' → logprob: -5.355066776275635
    5. ')' → logprob: -6.105066776275635
    6. ' ):' → logprob: -8.980067253112793
    7. ' :' → logprob: -9.105067253112793
    8. ' or' → logprob: -9.730067253112793
    9. ' ' → logprob: -10.480067253112793
    10. ' )' → logprob: -10.730067253112793

Token 156: '           ' (ID: 352)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.015270610339939594
    2. '           ' → logprob: -4.515270709991455
    3. 'and' → logprob: -6.140270709991455
    4. ':' → logprob: -7.390270709991455
    5. '       ' → logprob: -7.640270709991455
    6. '   ' → logprob: -8.015270233154297
    7. ' if' → logprob: -8.765270233154297
    8. ' continue' → logprob: -8.890270233154297
    9. '<|end|>' → logprob: -9.515270233154297
    10. ' ' → logprob: -9.765270233154297

Token 157: ' if' (ID: 538)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.49387529492378235
    2. ' if' → logprob: -1.99387526512146
    3. 'continue' → logprob: -1.99387526512146
    4. 'if' (adapté à ' if') → logprob: -2.74387526512146
    5. ' queue' → logprob: -3.86887526512146
    6. ' and' → logprob: -3.99387526512146
    7. 'queue' → logprob: -4.993875503540039
    8. '           ' → logprob: -6.118875503540039
    9. 'and' → logprob: -6.993875503540039
    10. '0' → logprob: -7.118875503540039

Token 158: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.3132743537425995
    2. ' count' → logprob: -1.3132743835449219
    3. ' all' → logprob: -12.688274383544922
    4. '(count' → logprob: -13.563274383544922
    5. ' grid' → logprob: -13.563274383544922
    6. ' ' → logprob: -13.688274383544922
    7. 'grid' → logprob: -13.813274383544922
    8. ' not' → logprob: -13.938274383544922
    9. '0' → logprob: -14.188274383544922
    10. 'all' → logprob: -14.313274383544922

Token 159: '_dot' (ID: 73438)
  Prédit: '_dot'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dot' → logprob: -4.60414821645827e-06
    2. '_' → logprob: -12.750004768371582
    3. 'dot' → logprob: -14.250004768371582
    4. '_d' → logprob: -15.625004768371582
    5. '```' → logprob: -15.625004768371582
    6. '(' → logprob: -16.125003814697266
    7. '_double' → logprob: -16.250003814697266
    8. ' _' → logprob: -16.875003814697266
    9. '(dot' → logprob: -16.875003814697266
    10. '_token' → logprob: -17.250003814697266

Token 160: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.0003404687449801713
    2. '(' → logprob: -8.000340461730957
    3. ' (' → logprob: -12.375340461730957
    4. '(
' → logprob: -15.000340461730957
    5. '((' → logprob: -15.375340461730957
    6. '(ii' → logprob: -16.375341415405273
    7. ')' → logprob: -17.000341415405273
    8. '(I' → logprob: -17.375341415405273
    9. '(j' → logprob: -18.000341415405273
    10. '```' → logprob: -18.125341415405273

Token 161: ',j' (ID: 22712)
  Prédit: ',j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',j' → logprob: -0.0006613265140913427
    2. ',' → logprob: -7.625661373138428
    3. ' ,' → logprob: -8.87566089630127
    4. 'j' → logprob: -11.25066089630127
    5. ',i' → logprob: -11.50066089630127
    6. ' ' → logprob: -12.00066089630127
    7. '```' → logprob: -14.00066089630127
    8. '
' → logprob: -14.87566089630127
    9. '-' → logprob: -14.87566089630127
    10. '(' → logprob: -14.87566089630127

Token 162: ')>=' (ID: 173043)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1748361587524414
    2. ')>=' → logprob: -2.1748361587524414
    3. ')>' → logprob: -3.6748361587524414
    4. ')==' → logprob: -4.049836158752441
    5. ' )' → logprob: -5.674836158752441
    6. ')<' → logprob: -7.799836158752441
    7. ')<=' → logprob: -10.174836158752441
    8. ']>=' → logprob: -10.799836158752441
    9. '())' → logprob: -11.049836158752441
    10. '>=' → logprob: -11.299836158752441

Token 163: 'int' (ID: 491)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '5' → logprob: -0.4194929301738739
    2. '6' → logprob: -1.4194929599761963
    3. '7' → logprob: -3.4194929599761963
    4. '2' → logprob: -4.044492721557617
    5. '4' → logprob: -4.044492721557617
    6. '3' → logprob: -4.044492721557617
    7. '1' → logprob: -4.169492721557617
    8. '```' → logprob: -11.544492721557617
    9. ' ' → logprob: -12.169492721557617
    10. '8' → logprob: -13.044492721557617

Token 164: '(grid' (ID: 51818)
  Prédit: '(grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(grid' → logprob: -0.0006112866685725749
    2. '(' → logprob: -7.500611305236816
    3. 'grid' → logprob: -11.125611305236816
    4. '((' → logprob: -11.250611305236816
    5. '(input' → logprob: -11.500611305236816
    6. '(len' → logprob: -12.875611305236816
    7. '('' → logprob: -12.875611305236816
    8. ' (' → logprob: -13.125611305236816
    9. '(queue' → logprob: -13.250611305236816
    10. '(
' → logprob: -13.250611305236816

Token 165: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.9361264946837764e-07
    2. '[' → logprob: -16.75
    3. '[I' → logprob: -16.75
    4. 'i' → logprob: -17.125
    5. ' [' → logprob: -17.25
    6. '```' → logprob: -17.375
    7. ')' → logprob: -18.0
    8. '[
' → logprob: -18.125
    9. '[j' → logprob: -18.75
    10. '(i' → logprob: -18.75

Token 166: '][' (ID: 2696)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.1888679839321412e-05
    2. '[j' → logprob: -11.500021934509277
    3. '][' → logprob: -12.375021934509277
    4. '```' → logprob: -13.000021934509277
    5. '[I' → logprob: -13.625021934509277
    6. 'i' → logprob: -14.000021934509277
    7. '(i' → logprob: -14.250021934509277
    8. '[' → logprob: -14.500021934509277
    9. '[x' → logprob: -14.500021934509277
    10. ')' → logprob: -14.625021934509277

Token 167: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.008875848725438118
    2. '[j' → logprob: -4.758875846862793
    3. 'i' → logprob: -8.758875846862793
    4. '[i' → logprob: -9.758875846862793
    5. '```' → logprob: -10.633875846862793
    6. ' j' → logprob: -12.133875846862793
    7. ')' → logprob: -12.258875846862793
    8. 'grid' → logprob: -13.258875846862793
    9. ' ' → logprob: -13.383875846862793
    10. ']' → logprob: -13.508875846862793

Token 168: ']):
' (ID: 51989)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0047242953442037106
    2. ']):' → logprob: -5.754724502563477
    3. ')' → logprob: -7.129724502563477
    4. ')):' → logprob: -8.129724502563477
    5. '[' → logprob: -8.504724502563477
    6. ']:' → logprob: -9.504724502563477
    7. ':' → logprob: -9.754724502563477
    8. '[i' → logprob: -10.379724502563477
    9. ''):' → logprob: -10.754724502563477
    10. ' ):' → logprob: -11.504724502563477

Token 169: '               ' (ID: 506)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.2289997339248657
    2. '               ' → logprob: -1.2289997339248657
    3. ':
' → logprob: -1.6039997339248657
    4. 'queue' → logprob: -2.728999614715576
    5. ' queue' → logprob: -3.228999614715576
    6. '):
' → logprob: -3.478999614715576
    7. '           ' → logprob: -3.728999614715576
    8. '                   ' → logprob: -4.353999614715576
    9. '):' → logprob: -4.603999614715576
    10. '(queue' → logprob: -4.978999614715576

Token 170: ' queue' (ID: 13661)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' (adapté à ' queue') → logprob: -0.009872130118310452
    2. ' queue' → logprob: -4.634871959686279
    3. 'grid' → logprob: -9.384872436523438
    4. '   ' → logprob: -11.634872436523438
    5. '                   ' → logprob: -11.634872436523438
    6. '               ' → logprob: -12.009872436523438
    7. '           ' → logprob: -13.134872436523438
    8. '
' → logprob: -13.509872436523438
    9. '	queue' → logprob: -13.509872436523438
    10. ' grid' → logprob: -13.634872436523438

Token 171: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -7.815280696377158e-05
    2. '.' → logprob: -10.000078201293945
    3. '.enqueue' → logprob: -11.375078201293945
    4. '.p' → logprob: -11.875078201293945
    5. '.put' → logprob: -11.875078201293945
    6. '.extend' → logprob: -12.625078201293945
    7. '.push' → logprob: -13.250078201293945
    8. ').' → logprob: -14.250078201293945
    9. '.offer' → logprob: -14.875078201293945
    10. '.Append' → logprob: -15.000078201293945

Token 172: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -3.4121114822482923e-06
    2. '(' → logprob: -12.625003814697266
    3. '(((' → logprob: -18.250003814697266
    4. '(i' → logprob: -18.625003814697266
    5. ' ((' → logprob: -19.500003814697266
    6. '[(' → logprob: -20.125003814697266
    7. '([(' → logprob: -20.625003814697266
    8. '(
' → logprob: -21.125003814697266
    9. '(grid' → logprob: -21.250003814697266
    10. '([' → logprob: -21.500003814697266

Token 173: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -2.15310683415737e-05
    2. ' i' → logprob: -10.750021934509277
    3. ')i' → logprob: -16.87502098083496
    4. ')' → logprob: -17.50002098083496
    5. '(i' → logprob: -17.50002098083496
    6. '
' → logprob: -18.75002098083496
    7. '   ' → logprob: -18.75002098083496
    8. ',i' → logprob: -19.00002098083496
    9. '	i' → logprob: -19.62502098083496
    10. ' ' → logprob: -19.87502098083496

Token 174: ',j' (ID: 22712)
  Prédit: ',j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',j' → logprob: -0.006726499181240797
    2. ',' → logprob: -5.006726264953613
    3. ' ,' → logprob: -11.506726264953613
    4. 'j' → logprob: -15.256726264953613
    5. '```' → logprob: -15.881726264953613
    6. ' ' → logprob: -16.13172721862793
    7. ',
' → logprob: -16.38172721862793
    8. ')' → logprob: -16.50672721862793
    9. '`,`' → logprob: -17.00672721862793
    10. ',i' → logprob: -17.13172721862793

Token 175: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.02980603463947773
    2. ')' → logprob: -3.529806137084961
    3. '))
' → logprob: -10.029806137084961
    4. ')))' → logprob: -11.904806137084961
    5. ')
' → logprob: -13.029806137084961
    6. ',' → logprob: -14.279806137084961
    7. '),' → logprob: -14.404806137084961
    8. ' ))' → logprob: -14.529806137084961
    9. '));' → logprob: -15.404806137084961
    10. '))

' → logprob: -16.02980613708496

Token 176: 'res' (ID: 430)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.0006740703247487545
    2. ' while' → logprob: -7.375674247741699
    3. 'visited' → logprob: -10.0006742477417
    4. ')' → logprob: -13.3756742477417
    5. '
' → logprob: -15.8756742477417
    6. '	while' → logprob: -16.375673294067383
    7. '```' → logprob: -16.625673294067383
    8. 'While' → logprob: -16.750673294067383
    9. 'removed' → logprob: -17.250673294067383
    10. ' visited' → logprob: -17.500673294067383

Token 177: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06876381486654282
    2. ' =' → logprob: -3.3187637329101562
    3. '=[]' → logprob: -3.5687637329101562
    4. '=[' → logprob: -7.193763732910156
    5. '[' → logprob: -7.443763732910156
    6. '_' → logprob: -8.193763732910156
    7. '={}' → logprob: -8.818763732910156
    8. '=[]
' → logprob: -9.068763732910156
    9. 's' → logprob: -9.818763732910156
    10. ',' → logprob: -11.068763732910156

Token 178: '0' (ID: 15)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.34827351570129395
    2. '[' → logprob: -1.598273515701294
    3. 'grid' → logprob: -2.973273515701294
    4. '0' → logprob: -4.223273277282715
    5. 'deque' → logprob: -4.973273277282715
    6. 'set' → logprob: -5.348273277282715
    7. '[len' → logprob: -5.473273277282715
    8. '[[' → logprob: -5.723273277282715
    9. '[['' → logprob: -6.348273277282715
    10. '['' → logprob: -6.848273277282715

Token 179: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7185265421867371
    2. 'while' → logprob: -0.7185265421867371
    3. ' while' → logprob: -3.843526601791382
    4. '\n' → logprob: -5.843526363372803
    5. '```' → logprob: -8.093526840209961
    6. ' 
' → logprob: -8.968526840209961
    7. '' → logprob: -9.343526840209961
    8. '
' → logprob: -10.218526840209961
    9. '  
' → logprob: -10.218526840209961
    10. '\' → logprob: -10.343526840209961

Token 180: 'while' (ID: 7032)
  Prédit: 'while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -7.493430894101039e-05
    2. ' while' → logprob: -9.500075340270996
    3. '```' → logprob: -17.00007438659668
    4. 'While' → logprob: -17.12507438659668
    5. '	while' → logprob: -17.87507438659668
    6. 'if' → logprob: -18.62507438659668
    7. 'wh' → logprob: -18.75007438659668
    8. '
' → logprob: -19.62507438659668
    9. ')' → logprob: -19.87507438659668
    10. 'def' → logprob: -20.50007438659668

Token 181: ' queue' (ID: 13661)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.2519350051879883
    2. ' queue' → logprob: -1.5019350051879883
    3. '(queue' → logprob: -12.501935005187988
    4. 'len' → logprob: -13.626935005187988
    5. ' len' → logprob: -14.626935005187988
    6. '	queue' → logprob: -14.751935005187988
    7. 'que' → logprob: -16.876934051513672
    8. ' ' → logprob: -17.376934051513672
    9. '.queue' → logprob: -18.001934051513672
    10. '
' → logprob: -18.751934051513672

Token 182: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.21542870998382568
    2. '.p' → logprob: -2.0904288291931152
    3. '.' → logprob: -2.7154288291931152
    4. '.:' → logprob: -5.965428829193115
    5. '.pop' → logprob: -7.090428829193115
    6. '.append' → logprob: -8.340428352355957
    7. '>:' → logprob: -9.215428352355957
    8. '):' → logprob: -9.965428352355957
    9. ':**' → logprob: -10.465428352355957
    10. ':
' → logprob: -10.965428352355957

Token 183: '   ' (ID: 271)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.049047164618968964
    2. ' i' → logprob: -3.0490472316741943
    3. '   ' → logprob: -8.049047470092773
    4. 'x' → logprob: -9.299047470092773
    5. '	i' → logprob: -10.049047470092773
    6. '(i' → logprob: -12.924047470092773
    7. ' x' → logprob: -13.674047470092773
    8. '```' → logprob: -13.924047470092773
    9. '_i' → logprob: -14.924047470092773
    10. 'r' → logprob: -16.424047470092773

Token 184: ' res' (ID: 694)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.005946459714323282
    2. ' i' → logprob: -5.255946636199951
    3. 'x' → logprob: -7.255946636199951
    4. ' x' → logprob: -12.255946159362793
    5. '   ' → logprob: -13.755946159362793
    6. '	i' → logprob: -14.630946159362793
    7. 'a' → logprob: -16.50594711303711
    8. '_i' → logprob: -16.63094711303711
    9. '```' → logprob: -17.00594711303711
    10. '(i' → logprob: -17.75594711303711

Token 185: '+=' (ID: 18287)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.19026833772659302
    2. '+=' → logprob: -2.6902682781219482
    3. '-=' → logprob: -2.8152682781219482
    4. ' -=' → logprob: -3.6902682781219482
    5. '-' → logprob: -5.065268516540527
    6. '=' → logprob: -5.190268516540527
    7. ' +=' → logprob: -5.190268516540527
    8. ' ,' → logprob: -6.565268516540527
    9. '+=(' → logprob: -8.440268516540527
    10. '```' → logprob: -8.440268516540527

Token 186: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.6060808522743173e-05
    2. ' ' → logprob: -10.625025749206543
    3. 'len' → logprob: -13.375025749206543
    4. 'queue' → logprob: -17.37502670288086
    5. '   ' → logprob: -17.62502670288086
    6. '```' → logprob: -17.62502670288086
    7. ' len' → logprob: -18.25002670288086
    8. '-' → logprob: -18.81252670288086
    9. '0' → logprob: -18.87502670288086
    10. '  ' → logprob: -19.12502670288086

Token 187: '
' (ID: 198)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00780358025804162
    2. ' i' → logprob: -5.507803440093994
    3. '   ' → logprob: -5.882803440093994
    4. 'x' → logprob: -7.007803440093994
    5. '
' → logprob: -11.757803916931152
    6. '```' → logprob: -12.257803916931152
    7. '	i' → logprob: -12.382803916931152
    8. '(i' → logprob: -12.757803916931152
    9. ' x' → logprob: -13.382803916931152
    10. '    
' → logprob: -13.507803916931152

Token 188: '   ' (ID: 271)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.20539002120494843
    2. ' i' → logprob: -1.7053899765014648
    3. '   ' → logprob: -5.580389976501465
    4. 'x' → logprob: -8.955389976501465
    5. '	i' → logprob: -10.330389976501465
    6. '```' → logprob: -10.955389976501465
    7. '
' → logprob: -12.080389976501465
    8. ' x' → logprob: -12.330389976501465
    9. '_i' → logprob: -12.830389976501465
    10. ',i' → logprob: -13.080389976501465

Token 189: ' next' (ID: 2613)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.002542132046073675
    2. 'x' → logprob: -6.002542018890381
    3. ' i' → logprob: -9.627542495727539
    4. '```' → logprob: -15.002542495727539
    5. ' x' → logprob: -15.377542495727539
    6. '	i' → logprob: -16.75254249572754
    7. '   ' → logprob: -17.12754249572754
    8. 'r' → logprob: -18.50254249572754
    9. '_i' → logprob: -18.87754249572754
    10. 'a' → logprob: -19.00254249572754

Token 190: '_queue' (ID: 25622)
  Prédit: '_i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.6808318495750427
    2. 'i' → logprob: -1.5558319091796875
    3. '_pos' → logprob: -2.6808319091796875
    4. '_x' → logprob: -2.9308319091796875
    5. '()' → logprob: -3.5558319091796875
    6. 'x' → logprob: -3.6808319091796875
    7. '=' → logprob: -3.9308319091796875
    8. '_' → logprob: -4.3058319091796875
    9. '_queue' → logprob: -4.3058319091796875
    10. '_node' → logprob: -4.5558319091796875

Token 191: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.020597364753484726
    2. ' =' → logprob: -3.895597457885742
    3. '=[]' → logprob: -9.895597457885742
    4. '.=' → logprob: -13.270597457885742
    5. '=new' → logprob: -13.895597457885742
    6. '={}' → logprob: -15.020597457885742
    7. '.' → logprob: -15.395597457885742
    8. '=len' → logprob: -15.520597457885742
    9. '＝' → logprob: -15.520597457885742
    10. '=q' → logprob: -15.520597457885742

Token 192: 'deque' (ID: 143563)
  Prédit: 'deque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -9.088346359931165e-07
    2. '[]' → logprob: -14.000000953674316
    3. ' deque' → logprob: -18.125
    4. 'set' → logprob: -20.375
    5. 'collections' → logprob: -20.75
    6. '```' → logprob: -21.875
    7. 'queue' → logprob: -22.375
    8. '[]
' → logprob: -22.75
    9. '   ' → logprob: -23.25
    10. '`' → logprob: -24.0

Token 193: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0003022153687197715
    2. '(' → logprob: -8.2503023147583
    3. '()
' → logprob: -10.2503023147583
    4. '([]' → logprob: -13.1253023147583
    5. '()

' → logprob: -13.3753023147583
    6. '[]' → logprob: -15.0003023147583
    7. '()]' → logprob: -15.2503023147583
    8. '(),' → logprob: -15.3753023147583
    9. ' ()' → logprob: -15.3753023147583
    10. '();' → logprob: -15.6253023147583

Token 194: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7146977782249451
    2. 'while' → logprob: -0.7146977782249451
    3. '   ' → logprob: -4.08969783782959
    4. ' for' → logprob: -5.96469783782959
    5. ' while' → logprob: -6.58969783782959
    6. 'i' → logprob: -7.46469783782959
    7. '	while' → logprob: -10.58969783782959
    8. '	for' → logprob: -11.46469783782959
    9. '```' → logprob: -11.96469783782959
    10. '    
' → logprob: -12.08969783782959

Token 195: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.00410380819812417
    2. 'for' → logprob: -5.504103660583496
    3. ' while' → logprob: -11.129103660583496
    4. '   ' → logprob: -11.629103660583496
    5. 'queue' → logprob: -13.879103660583496
    6. 'i' → logprob: -14.504103660583496
    7. '```' → logprob: -15.754103660583496
    8. ' for' → logprob: -16.254104614257812
    9. '
' → logprob: -16.879104614257812
    10. '	while' → logprob: -17.754104614257812

Token 196: ' queue' (ID: 13661)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.16022665798664093
    2. ' queue' → logprob: -1.9102267026901245
    3. '(queue' → logprob: -13.535226821899414
    4. '	queue' → logprob: -14.410226821899414
    5. 'que' → logprob: -14.785226821899414
    6. ' ' → logprob: -15.785226821899414
    7. '   ' → logprob: -17.285226821899414
    8. 'len' → logprob: -17.410226821899414
    9. '  ' → logprob: -17.535226821899414
    10. ' que' → logprob: -17.910226821899414

Token 197: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.011782770976424217
    2. '.p' → logprob: -4.511782646179199
    3. ':
' → logprob: -7.386782646179199
    4. ':p' → logprob: -10.5117826461792
    5. '.pop' → logprob: -10.7617826461792
    6. '):' → logprob: -11.0117826461792
    7. 'p' → logprob: -11.5117826461792
    8. '():' → logprob: -12.0117826461792
    9. '>:' → logprob: -12.0117826461792
    10. 'opleft' → logprob: -12.2617826461792

Token 198: '       ' (ID: 309)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.027063820511102676
    2. ' i' → logprob: -4.277063846588135
    3. '       ' → logprob: -4.527063846588135
    4. 'x' → logprob: -6.402063846588135
    5. '   ' → logprob: -8.277063369750977
    6. '	i' → logprob: -10.027063369750977
    7. ' x' → logprob: -10.277063369750977
    8. '```' → logprob: -11.902063369750977
    9. '_i' → logprob: -13.027063369750977
    10. '(i' → logprob: -13.652063369750977

Token 199: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.018236100673675537
    2. 'x' → logprob: -4.01823616027832
    3. ' i' → logprob: -9.51823616027832
    4. '   ' → logprob: -11.51823616027832
    5. ' x' → logprob: -13.39323616027832
    6. 'ci' → logprob: -13.89323616027832
    7. '	i' → logprob: -15.89323616027832
    8. '```' → logprob: -16.76823616027832
    9. ''i' → logprob: -17.01823616027832
    10. '
' → logprob: -17.64323616027832

Token 200: ',j' (ID: 22712)
  Prédit: ',j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',j' → logprob: -0.06198696419596672
    2. ',' → logprob: -2.8119869232177734
    3. ' ,' → logprob: -11.186986923217773
    4. ',
' → logprob: -13.936986923217773
    5. 'j' → logprob: -13.936986923217773
    6. ',J' → logprob: -14.186986923217773
    7. ',q' → logprob: -14.311986923217773
    8. ',y' → logprob: -14.436986923217773
    9. ',i' → logprob: -14.811986923217773
    10. ',n' → logprob: -15.186986923217773

Token 201: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.005235648714005947
    2. ' =' → logprob: -5.25523567199707
    3. '=

' → logprob: -13.88023567199707
    4. '=
' → logprob: -14.00523567199707
    5. '=query' → logprob: -17.00523567199707
    6. '＝' → logprob: -17.25523567199707
    7. '(queue' → logprob: -17.38023567199707
    8. ',' → logprob: -18.13023567199707
    9. ' =
' → logprob: -18.50523567199707
    10. ')=' → logprob: -18.63023567199707

Token 202: 'queue' (ID: 9409)
  Prédit: 'queue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.0002613358374219388
    2. ' queue' → logprob: -8.250261306762695
    3. '	queue' → logprob: -17.125261306762695
    4. 'deque' → logprob: -17.500261306762695
    5. 'que' → logprob: -17.875261306762695
    6. '(queue' → logprob: -19.000261306762695
    7. '.queue' → logprob: -19.875261306762695
    8. '   ' → logprob: -20.375261306762695
    9. '_queue' → logprob: -21.250261306762695
    10. '```' → logprob: -21.375261306762695

Token 203: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -0.005242771934717894
    2. '.pop' → logprob: -5.255242824554443
    3. 'p' → logprob: -12.755242347717285
    4. '.' → logprob: -13.130242347717285
    5. 'pop' → logprob: -13.130242347717285
    6. '.dequeue' → logprob: -14.255242347717285
    7. ' .' → logprob: -14.380242347717285
    8. ',p' → logprob: -14.505242347717285
    9. '.queue' → logprob: -15.005242347717285
    10. '   ' → logprob: -17.1302433013916

Token 204: 'opleft' (ID: 182170)
  Prédit: 'opleft'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'opleft' → logprob: -0.1604955494403839
    2. 'op' → logprob: -1.9104955196380615
    3. 'ople' → logprob: -8.53549575805664
    4. 'opl' → logprob: -9.53549575805664
    5. 'opup' → logprob: -13.28549575805664
    6. 'opf' → logprob: -14.78549575805664
    7. 'oph' → logprob: -15.66049575805664
    8. 'opt' → logprob: -15.91049575805664
    9. 'p' → logprob: -16.41049575805664
    10. 'oplevel' → logprob: -16.41049575805664

Token 205: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -9.090760431718081e-05
    2. '()
' → logprob: -9.375090599060059
    3. '(' → logprob: -13.375090599060059
    4. '(),' → logprob: -13.375090599060059
    5. '())' → logprob: -14.250090599060059
    6. '()`' → logprob: -14.375090599060059
    7. '()]' → logprob: -14.500090599060059
    8. ' ()' → logprob: -15.000090599060059
    9. '()

' → logprob: -15.375090599060059
    10. '()\' → logprob: -15.375090599060059

Token 206: '       ' (ID: 309)
  Prédit: ' grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' grid' → logprob: -0.821984052658081
    2. '       ' → logprob: -1.071984052658081
    3. 'grid' → logprob: -1.821984052658081
    4. ' if' → logprob: -3.196984052658081
    5. ' for' → logprob: -4.82198429107666
    6. 'if' → logprob: -5.57198429107666
    7. '   ' → logprob: -6.19698429107666
    8. '	grid' → logprob: -7.32198429107666
    9. 'for' → logprob: -8.19698429107666
    10. '        
' → logprob: -8.57198429107666

Token 207: ' if' (ID: 538)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grid' → logprob: -0.0013996411580592394
    2. 'if' (adapté à ' if') → logprob: -6.751399517059326
    3. ' grid' → logprob: -8.626399993896484
    4. 'for' → logprob: -10.126399993896484
    5. '
' → logprob: -13.001399993896484
    6. '   ' → logprob: -13.376399993896484
    7. '```' → logprob: -13.751399993896484
    8. ' if' → logprob: -14.001399993896484
    9. 'x' → logprob: -14.001399993896484
    10. 'temp' → logprob: -14.126399993896484

Token 208: ' grid' (ID: 10586)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grid' → logprob: -5.455048449221067e-05
    2. ' grid' → logprob: -9.875054359436035
    3. 'not' → logprob: -14.000054359436035
    4. 'int' → logprob: -14.375054359436035
    5. 'i' → logprob: -14.750054359436035
    6. 'count' → logprob: -15.000054359436035
    7. 'res' → logprob: -15.500054359436035
    8. '0' → logprob: -15.500054359436035
    9. '(grid' → logprob: -15.750054359436035
    10. ' ' → logprob: -16.00005531311035

Token 209: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.5332478142227046e-05
    2. '[' → logprob: -11.500015258789062
    3. 'i' → logprob: -13.125015258789062
    4. '[j' → logprob: -14.000015258789062
    5. '[int' → logprob: -14.000015258789062
    6. '```' → logprob: -15.125015258789062
    7. '][' → logprob: -15.500015258789062
    8. ' [' → logprob: -16.000015258789062
    9. '[I' → logprob: -16.375015258789062
    10. '[m' → logprob: -16.750015258789062

Token 210: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.016436073929071426
    2. '[i' → logprob: -4.5164361000061035
    3. '[j' → logprob: -5.2664361000061035
    4. '[' → logprob: -9.266435623168945
    5. ']' → logprob: -9.766435623168945
    6. ' ][' → logprob: -10.766435623168945
    7. 'i' → logprob: -11.391435623168945
    8. '```' → logprob: -12.016435623168945
    9. ']][' → logprob: -12.766435623168945
    10. ''][' → logprob: -13.266435623168945

Token 211: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -3.2617008400848135e-05
    2. 'i' → logprob: -10.375032424926758
    3. '][' → logprob: -14.625032424926758
    4. ']' → logprob: -14.750032424926758
    5. ' j' → logprob: -15.125032424926758
    6. '0' → logprob: -16.750032424926758
    7. '
' → logprob: -17.500032424926758
    8. 'None' → logprob: -17.625032424926758
    9. '```' → logprob: -17.875032424926758
    10. '[j' → logprob: -18.250032424926758

Token 212: ']==' (ID: 34128)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6587285399436951
    2. ']==' → logprob: -0.9087285399436951
    3. ']=='' → logprob: -2.78372859954834
    4. ']!=' → logprob: -4.40872859954834
    5. ']!='' → logprob: -5.28372859954834
    6. ']=="' → logprob: -8.78372859954834
    7. ' ]' → logprob: -9.03372859954834
    8. '']=='' → logprob: -10.15872859954834
    9. '=='' → logprob: -11.03372859954834
    10. '==' → logprob: -11.28372859954834

Token 213: ''.' (ID: 6120)
  Prédit: ''.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''.' → logprob: -0.007974137552082539
    2. ''#' → logprob: -5.007974147796631
    3. ''*' → logprob: -7.382974147796631
    4. ''' → logprob: -7.757974147796631
    5. ''x' → logprob: -8.882973670959473
    6. ''o' → logprob: -11.507973670959473
    7. ''a' → logprob: -11.882973670959473
    8. ''-' → logprob: -11.882973670959473
    9. ''i' → logprob: -11.882973670959473
    10. ''w' → logprob: -12.257973670959473

Token 214: '':
' (ID: 7669)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.1634066253900528
    2. ':' → logprob: -2.4134066104888916
    3. 'continue' → logprob: -3.7884066104888916
    4. ':
' → logprob: -3.7884066104888916
    5. ' or' → logprob: -5.288406848907471
    6. '':' → logprob: -5.538406848907471
    7. ''' → logprob: -6.413406848907471
    8. ' :' → logprob: -6.538406848907471
    9. '	continue' → logprob: -6.663406848907471
    10. ' :
' → logprob: -7.538406848907471

Token 215: '           ' (ID: 352)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.0075743235647678375
    2. '	continue' → logprob: -5.382574558258057
    3. '       ' → logprob: -6.507574558258057
    4. 'continue' → logprob: -6.632574558258057
    5. '   ' → logprob: -9.382574081420898
    6. ' continues' → logprob: -10.632574081420898
    7. '           ' → logprob: -11.132574081420898
    8. ' continued' → logprob: -12.632574081420898
    9. ' continu' → logprob: -13.007574081420898
    10. '_continue' → logprob: -13.132574081420898

Token 216: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.576029360294342
    2. ' continue' → logprob: -0.826029360294342
    3. '	continue' → logprob: -9.451029777526855
    4. 'contin' → logprob: -12.326029777526855
    5. '   ' → logprob: -12.826029777526855
    6. 'continu' → logprob: -13.326029777526855
    7. ' continu' → logprob: -13.451029777526855
    8. '_continue' → logprob: -14.826029777526855
    9. '
' → logprob: -15.326029777526855
    10. ' continues' → logprob: -16.20102882385254

Token 217: '
' (ID: 198)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grid' → logprob: -0.3101641535758972
    2. '   ' → logprob: -1.810164213180542
    3. ' grid' → logprob: -2.310164213180542
    4. '
' → logprob: -6.060163974761963
    5. '	grid' → logprob: -7.685163974761963
    6. '    
' → logprob: -7.935163974761963
    7. '```' → logprob: -9.185164451599121
    8. ' for' → logprob: -9.560164451599121
    9. 'if' → logprob: -9.685164451599121
    10. '       ' → logprob: -9.685164451599121

Token 218: '       ' (ID: 309)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'grid' → logprob: -0.36792564392089844
    2. ' grid' → logprob: -1.4929256439208984
    3. '   ' → logprob: -2.6179256439208984
    4. '
' → logprob: -4.867925643920898
    5. 'if' → logprob: -7.742925643920898
    6. '    
' → logprob: -7.867925643920898
    7. '	grid' → logprob: -7.867925643920898
    8. ' if' → logprob: -8.117925643920898
    9. ' for' → logprob: -8.617925643920898
    10. ' 
' → logprob: -8.742925643920898

Token 219: ' if' (ID: 538)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grid' → logprob: -0.017096396535634995
    2. ' grid' → logprob: -5.267096519470215
    3. 'count' → logprob: -5.892096519470215
    4. 'num' → logprob: -6.267096519470215
    5. 'threshold' → logprob: -6.267096519470215
    6. '       ' → logprob: -7.392096519470215
    7. 'if' (adapté à ' if') → logprob: -7.392096519470215
    8. 'val' → logprob: -7.517096519470215
    9. 'c' → logprob: -7.642096519470215
    10. 'x' → logprob: -8.017096519470215

Token 220: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.0030140725430101156
    2. ' count' → logprob: -6.253014087677002
    3. 'int' → logprob: -7.253014087677002
    4. 'grid' → logprob: -8.003013610839844
    5. ' int' → logprob: -11.503013610839844
    6. 'not' → logprob: -11.503013610839844
    7. '   ' → logprob: -12.253013610839844
    8. ' ' → logprob: -12.628013610839844
    9. ' grid' → logprob: -13.003013610839844
    10. ' not' → logprob: -13.253013610839844

Token 221: '_dot' (ID: 73438)
  Prédit: '_dot'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dot' → logprob: -0.1445212960243225
    2. '_' → logprob: -2.1445212364196777
    3. ' _' → logprob: -5.644521236419678
    4. '_space' → logprob: -5.894521236419678
    5. '_token' → logprob: -6.269521236419678
    6. '(' → logprob: -6.394521236419678
    7. '```' → logprob: -6.644521236419678
    8. ''_' → logprob: -6.894521236419678
    9. '_blank' → logprob: -7.894521236419678
    10. '
' → logprob: -8.019521713256836

Token 222: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -4.961759259458631e-06
    2. '(' → logprob: -12.250004768371582
    3. ' (' → logprob: -16.3750057220459
    4. '(
' → logprob: -18.2500057220459
    5. '((' → logprob: -19.6250057220459
    6. '(ii' → logprob: -20.0000057220459
    7. '(I' → logprob: -20.1250057220459
    8. '
' → logprob: -20.3750057220459
    9. '(int' → logprob: -20.6250057220459
    10. '[i' → logprob: -20.8750057220459

Token 223: ',j' (ID: 22712)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.019615573808550835
    2. ',i' → logprob: -4.269615650177002
    3. ',' → logprob: -5.894615650177002
    4. 'i' → logprob: -6.769615650177002
    5. ')(' → logprob: -7.394615650177002
    6. ')' → logprob: -7.894615650177002
    7. ' (' → logprob: -8.394615173339844
    8. ',j' → logprob: -9.144615173339844
    9. ' i' → logprob: -10.269615173339844
    10. 'j' → logprob: -10.394615173339844

Token 224: ')>=' (ID: 173043)
  Prédit: ')<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')<' → logprob: -0.5414860844612122
    2. ')' → logprob: -0.9164860844612122
    3. ')>=' → logprob: -4.1664862632751465
    4. ' )' → logprob: -6.1664862632751465
    5. '<' → logprob: -7.7914862632751465
    6. '<int' → logprob: -10.416485786437988
    7. ')>' → logprob: -10.791485786437988
    8. ']>=' → logprob: -11.041485786437988
    9. ')
' → logprob: -11.166485786437988
    10. '")' → logprob: -11.541485786437988

Token 225: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -5.512236498361744e-07
    2. ' int' → logprob: -14.500000953674316
    3. '   ' → logprob: -19.625
    4. '
' → logprob: -20.875
    5. '	int' → logprob: -21.75
    6. '<int' → logprob: -22.125
    7. '(int' → logprob: -22.25
    8. '```' → logprob: -23.75
    9. ' ' → logprob: -24.5
    10. '=int' → logprob: -24.5

Token 226: '(grid' (ID: 51818)
  Prédit: '(grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(grid' → logprob: -4.320199877838604e-07
    2. '(' → logprob: -15.25
    3. 'grid' → logprob: -15.75
    4. ' (' → logprob: -17.625
    5. '(
' → logprob: -18.75
    6. ' grid' → logprob: -18.875
    7. '(gr' → logprob: -19.25
    8. '(Grid' → logprob: -19.875
    9. '(graph' → logprob: -21.0
    10. ':grid' → logprob: -21.125

Token 227: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.4974866644479334e-05
    2. '[j' → logprob: -11.125015258789062
    3. 'grid' → logprob: -16.625015258789062
    4. 'i' → logprob: -17.000015258789062
    5. '[x' → logprob: -17.125015258789062
    6. '(i' → logprob: -17.500015258789062
    7. '[' → logprob: -18.250015258789062
    8. '   ' → logprob: -18.375015258789062
    9. '
' → logprob: -18.500015258789062
    10. ' [' → logprob: -18.625015258789062

Token 228: '][' (ID: 2696)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.004689641762524843
    2. '[i' → logprob: -5.629689693450928
    3. '][' → logprob: -7.004689693450928
    4. '[' → logprob: -9.00468921661377
    5. ' [' → logprob: -10.37968921661377
    6. 'j' → logprob: -11.37968921661377
    7. ']' → logprob: -12.75468921661377
    8. '```' → logprob: -12.75468921661377
    9. '[x' → logprob: -13.37968921661377
    10. '   ' → logprob: -13.75468921661377

Token 229: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.00017004783148877323
    2. '[j' → logprob: -8.75016975402832
    3. ' j' → logprob: -12.00016975402832
    4. 'i' → logprob: -13.00016975402832
    5. '[i' → logprob: -14.12516975402832
    6. 'grid' → logprob: -14.25016975402832
    7. '
' → logprob: -14.37516975402832
    8. ' ' → logprob: -15.25016975402832
    9. '   ' → logprob: -15.37516975402832
    10. '```' → logprob: -15.37516975402832

Token 230: ']):
' (ID: 51989)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2819216549396515
    2. '):
' → logprob: -1.406921625137329
    3. ')' → logprob: -7.531921863555908
    4. ']):' → logprob: -9.53192138671875
    5. '):
' → logprob: -10.28192138671875
    6. '       ' → logprob: -10.65692138671875
    7. ']):
' → logprob: -10.65692138671875
    8. ':' → logprob: -11.03192138671875
    9. ''):' → logprob: -11.53192138671875
    10. '):

' → logprob: -11.65692138671875

Token 231: '           ' (ID: 352)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grid' → logprob: -0.32652518153190613
    2. ' grid' → logprob: -1.9515252113342285
    3. '           ' → logprob: -2.7015252113342285
    4. '       ' → logprob: -3.0765252113342285
    5. '   ' → logprob: -3.8265252113342285
    6. '	grid' → logprob: -7.3265252113342285
    7. ':
' → logprob: -9.07652473449707
    8. '.grid' → logprob: -9.20152473449707
    9. '```' → logprob: -9.20152473449707
    10. '
' → logprob: -9.20152473449707

Token 232: ' grid' (ID: 10586)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grid' (adapté à ' grid') → logprob: -0.0028155746404081583
    2. ' grid' → logprob: -5.8778157234191895
    3. '.grid' → logprob: -12.752815246582031
    4. '.' → logprob: -12.877815246582031
    5. '```' → logprob: -13.377815246582031
    6. '           ' → logprob: -13.627815246582031
    7. '
' → logprob: -13.627815246582031
    8. 'for' → logprob: -15.002815246582031
    9. '	grid' → logprob: -15.127815246582031
    10. '       ' → logprob: -15.752815246582031

Token 233: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.8921695047756657e-05
    2. '[' → logprob: -10.750028610229492
    3. '][' → logprob: -12.750028610229492
    4. '[j' → logprob: -13.250028610229492
    5. '```' → logprob: -13.750028610229492
    6. '[I' → logprob: -14.625028610229492
    7. '[input' → logprob: -16.250028610229492
    8. '[
' → logprob: -16.250028610229492
    9. '[row' → logprob: -16.625028610229492
    10. 'i' → logprob: -16.625028610229492

Token 234: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0001637300301808864
    2. '[i' → logprob: -9.125164031982422
    3. '[j' → logprob: -10.375164031982422
    4. ']' → logprob: -11.625164031982422
    5. ' ][' → logprob: -11.750164031982422
    6. ']][' → logprob: -13.500164031982422
    7. '[' → logprob: -13.500164031982422
    8. ''][' → logprob: -13.625164031982422
    9. '```' → logprob: -14.125164031982422
    10. '"][' → logprob: -14.625164031982422

Token 235: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -3.9888433093437925e-05
    2. '][' → logprob: -10.625040054321289
    3. 'i' → logprob: -11.625040054321289
    4. '[j' → logprob: -12.500040054321289
    5. ' j' → logprob: -13.500040054321289
    6. ']' → logprob: -14.375040054321289
    7. '   ' → logprob: -15.625040054321289
    8. '
' → logprob: -15.625040054321289
    9. '[' → logprob: -15.750040054321289
    10. ',j' → logprob: -16.25004005432129

Token 236: ']='' (ID: 69193)
  Prédit: ']=''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']='' → logprob: -0.08357247710227966
    2. ']' → logprob: -2.9585723876953125
    3. ']=' → logprob: -3.5835723876953125
    4. '='' → logprob: -7.8335723876953125
    5. '']='' → logprob: -9.833572387695312
    6. ']="' → logprob: -10.333572387695312
    7. ']=='' → logprob: -12.083572387695312
    8. '[' → logprob: -12.708572387695312
    9. '][' → logprob: -12.833572387695312
    10. ']=(' → logprob: -13.083572387695312

Token 237: '.'
' (ID: 49209)
  Prédit: '.''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.'' → logprob: -0.006735145580023527
    2. '.' → logprob: -5.006735324859619
    3. '.'
' → logprob: -11.631734848022461
    4. '.''' → logprob: -12.381734848022461
    5. '.'.' → logprob: -12.506734848022461
    6. '."' → logprob: -13.131734848022461
    7. '.')' → logprob: -14.756734848022461
    8. '.'"' → logprob: -15.256734848022461
    9. '.'

' → logprob: -15.756734848022461
    10. '.’' → logprob: -16.00673484802246

Token 238: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.000182921823579818
    2. 'for' → logprob: -9.00018310546875
    3. '       ' → logprob: -10.50018310546875
    4. '   ' → logprob: -10.75018310546875
    5. ' for' → logprob: -11.75018310546875
    6. '               ' → logprob: -13.75018310546875
    7. '          ' → logprob: -14.37518310546875
    8. '                   ' → logprob: -14.50018310546875
    9. '         ' → logprob: -15.62518310546875
    10. '            
' → logprob: -16.00018310546875

Token 239: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -1.652451464906335e-05
    2. '           ' → logprob: -11.250016212463379
    3. ' for' → logprob: -13.125016212463379
    4. '   ' → logprob: -13.625016212463379
    5. '       ' → logprob: -15.625016212463379
    6. '
' → logprob: -16.125017166137695
    7. '	for' → logprob: -18.125017166137695
    8. '            
' → logprob: -18.125017166137695
    9. '               ' → logprob: -18.250017166137695
    10. '```' → logprob: -19.750017166137695

Token 240: ' dx' (ID: 29472)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.0001625379954930395
    2. ' dx' → logprob: -8.750162124633789
    3. 'di' → logprob: -12.625162124633789
    4. '(dx' → logprob: -14.750162124633789
    5. 'nx' → logprob: -16.00016212463379
    6. '   ' → logprob: -16.25016212463379
    7. 'x' → logprob: -16.50016212463379
    8. 'ni' → logprob: -16.75016212463379
    9. '_dx' → logprob: -18.12516212463379
    10. '  ' → logprob: -18.37516212463379

Token 241: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00023500648967456073
    2. ',d' → logprob: -8.625234603881836
    3. ',-' → logprob: -10.000234603881836
    4. ',_' → logprob: -12.125234603881836
    5. ',y' → logprob: -13.625234603881836
    6. 'dy' → logprob: -14.250234603881836
    7. ' ,' → logprob: -14.375234603881836
    8. ',(' → logprob: -14.375234603881836
    9. '_,' → logprob: -14.875234603881836
    10. ',de' → logprob: -15.250234603881836

Token 242: 'dy' (ID: 7593)
  Prédit: 'dy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -9.615255839889869e-05
    2. ' dy' → logprob: -9.250096321105957
    3. '-' → logprob: -18.62509536743164
    4. '-d' → logprob: -18.75009536743164
    5. '0' → logprob: -19.25009536743164
    6. 'd' → logprob: -19.25009536743164
    7. '.dy' → logprob: -20.00009536743164
    8. 'range' → logprob: -20.25009536743164
    9. '[-' → logprob: -20.37509536743164
    10. 'dx' → logprob: -21.00009536743164

Token 243: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.048594411462545395
    2. 'in' → logprob: -3.0485944747924805
    3. '	in' → logprob: -12.04859447479248
    4. ' ' → logprob: -14.04859447479248
    5. '   ' → logprob: -16.673593521118164
    6. 'In' → logprob: -16.798593521118164
    7. '_in' → logprob: -17.673593521118164
    8. ' i' → logprob: -17.798593521118164
    9. '    ' → logprob: -17.923593521118164
    10. ',' → logprob: -17.923593521118164

Token 244: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.005233882926404476
    2. ' d' → logprob: -5.2552337646484375
    3. '   ' → logprob: -16.255233764648438
    4. ' ' → logprob: -19.130233764648438
    5. '    ' → logprob: -20.130233764648438
    6. '
' → logprob: -20.130233764648438
    7. '     ' → logprob: -20.255233764648438
    8. '       ' → logprob: -20.505233764648438
    9. '  ' → logprob: -20.755233764648438
    10. '[' → logprob: -20.880233764648438

Token 245: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1128920465707779
    2. ':
' → logprob: -2.2378921508789062
    3. '           ' → logprob: -10.112892150878906
    4. ':
' → logprob: -11.612892150878906
    5. '               ' → logprob: -11.862892150878906
    6. '       ' → logprob: -12.362892150878906
    7. ':

' → logprob: -13.237892150878906
    8. '   ' → logprob: -13.362892150878906
    9. '[' → logprob: -13.987892150878906
    10. '<|end|>' → logprob: -14.112892150878906

Token 246: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.2267903089523315
    2. ' x' → logprob: -1.4767903089523315
    3. ' ' → logprob: -1.9767903089523315
    4. '       ' → logprob: -2.101790428161621
    5. '<|end|>' → logprob: -2.351790428161621
    6. 'x' → logprob: -3.101790428161621
    7. '	       ' → logprob: -3.726790428161621
    8. ' ' → logprob: -4.726790428161621
    9. ' 
' → logprob: -4.726790428161621
    10. '           ' → logprob: -4.726790428161621

Token 247: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.048646751791238785
    2. 'x' (adapté à ' x') → logprob: -3.0486466884613037
    3. ' nx' → logprob: -10.673646926879883
    4. '                ' → logprob: -11.423646926879883
    5. '               ' → logprob: -11.673646926879883
    6. 'nx' → logprob: -11.798646926879883
    7. '	x' → logprob: -12.423646926879883
    8. '                   ' → logprob: -13.548646926879883
    9. ' ' → logprob: -13.923646926879883
    10. ' ni' → logprob: -14.173646926879883

Token 248: ',y' (ID: 16103)
  Prédit: ',y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',y' → logprob: -0.0032260757870972157
    2. ',' → logprob: -6.128226280212402
    3. ',j' → logprob: -7.503226280212402
    4. '=' → logprob: -8.378226280212402
    5. ',x' → logprob: -9.128226280212402
    6. ',i' → logprob: -9.628226280212402
    7. ' ,' → logprob: -10.253226280212402
    8. '=x' → logprob: -10.503226280212402
    9. '=i' → logprob: -11.878226280212402
    10. 'y' → logprob: -12.378226280212402

Token 249: '=i' (ID: 48141)
  Prédit: '=i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=i' → logprob: -0.2522791028022766
    2. '=' → logprob: -1.5022790431976318
    3. ' =' → logprob: -8.502279281616211
    4. '=x' → logprob: -8.877279281616211
    5. '=
' → logprob: -12.877279281616211
    6. '=j' → logprob: -13.502279281616211
    7. ',i' → logprob: -13.502279281616211
    8. 'i' → logprob: -14.377279281616211
    9. ' i' → logprob: -14.377279281616211
    10. '=int' → logprob: -15.252279281616211

Token 250: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0005599428550340235
    2. '+x' → logprob: -7.5005598068237305
    3. '+
' → logprob: -12.12555980682373
    4. ' +' → logprob: -13.87555980682373
    5. 'x' → logprob: -15.87555980682373
    6. '+d' → logprob: -16.000560760498047
    7. '+j' → logprob: -16.125560760498047
    8. '+,' → logprob: -16.500560760498047
    9. 'dx' → logprob: -16.750560760498047
    10. '+=' → logprob: -17.500560760498047

Token 251: 'dx' (ID: 22100)
  Prédit: 'dx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -7.886803359724581e-05
    2. ' dx' → logprob: -9.500079154968262
    3. 'x' → logprob: -12.500079154968262
    4. '+' → logprob: -16.750078201293945
    5. '(dx' → logprob: -16.750078201293945
    6. 'd' → logprob: -17.250078201293945
    7. '_dx' → logprob: -17.250078201293945
    8. ' ' → logprob: -17.250078201293945
    9. 'Dx' → logprob: -18.125078201293945
    10. ',' → logprob: -18.375078201293945

Token 252: ',j' (ID: 22712)
  Prédit: ',j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',j' → logprob: -0.0002314303710591048
    2. ',' → logprob: -9.000231742858887
    3. ',y' → logprob: -9.500231742858887
    4. ' ,' → logprob: -10.750231742858887
    5. 'j' → logprob: -11.375231742858887
    6. ' j' → logprob: -17.12523078918457
    7. ',
' → logprob: -18.25023078918457
    8. ',x' → logprob: -18.25023078918457
    9. ',i' → logprob: -18.50023078918457
    10. ' ' → logprob: -19.00023078918457

Token 253: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3615054488182068
    2. ',j' → logprob: -1.4865055084228516
    3. 'j' → logprob: -3.4865055084228516
    4. '+j' → logprob: -4.736505508422852
    5. 'dy' → logprob: -5.111505508422852
    6. ',i' → logprob: -5.236505508422852
    7. ',' → logprob: -5.486505508422852
    8. '+x' → logprob: -5.486505508422852
    9. 'x' → logprob: -5.861505508422852
    10. ',y' → logprob: -5.861505508422852

Token 254: 'dy' (ID: 7593)
  Prédit: 'dy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -0.0002571673830971122
    2. ' dy' → logprob: -8.75025749206543
    3. 'y' → logprob: -9.25025749206543
    4. 'j' → logprob: -13.75025749206543
    5. 'dx' → logprob: -14.50025749206543
    6. '1' → logprob: -14.62525749206543
    7. 'd' → logprob: -15.00025749206543
    8. ' y' → logprob: -16.75025749206543
    9. '.dy' → logprob: -17.25025749206543
    10. 'dj' → logprob: -17.37525749206543

Token 255: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.001500460086390376
    2. '
' → logprob: -8.126500129699707
    3. '           ' → logprob: -8.251500129699707
    4. '			' → logprob: -8.626500129699707
    5. 'if' → logprob: -8.876500129699707
    6. '                   ' → logprob: -8.876500129699707
    7. '                ' → logprob: -9.376500129699707
    8. '<|end|>' → logprob: -9.376500129699707
    9. '       ' → logprob: -9.876500129699707
    10. ' if' → logprob: -9.876500129699707

Token 256: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.44096800684928894
    2. '               ' → logprob: -1.1909680366516113
    3. '<|end|>' → logprob: -4.065968036651611
    4. ' if' → logprob: -4.440968036651611
    5. '       ' → logprob: -5.315968036651611
    6. '                   ' → logprob: -5.440968036651611
    7. ' 
' → logprob: -6.065968036651611
    8. '
' → logprob: -6.065968036651611
    9. '            
' → logprob: -6.315968036651611
    10. 'if' → logprob: -6.815968036651611

Token 257: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.16321414709091187
    2. '                ' → logprob: -2.6632142066955566
    3. '               ' → logprob: -2.6632142066955566
    4. 'if' (adapté à ' if') → logprob: -5.413214206695557
    5. ' ' → logprob: -6.038214206695557
    6. ' 
' → logprob: -6.788214206695557
    7. ' x' → logprob: -7.038214206695557
    8. ' valid' → logprob: -7.413214206695557
    9. '            ' → logprob: -7.663214206695557
    10. ' ' → logprob: -8.413213729858398

Token 258: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03805296868085861
    2. ' ' → logprob: -3.288053035736084
    3. '1' → logprob: -11.413052558898926
    4. 'grid' → logprob: -15.413052558898926
    5. '   ' → logprob: -15.913052558898926
    6. ' grid' → logprob: -16.163053512573242
    7. 'x' → logprob: -17.038053512573242
    8. ' x' → logprob: -17.975553512573242
    9. '`' → logprob: -18.288053512573242
    10. ' not' → logprob: -18.538053512573242

Token 259: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.001929228543303907
    2. ' ' → logprob: -6.25192928314209
    3. '1' → logprob: -15.00192928314209
    4. 'x' → logprob: -16.751928329467773
    5. 'grid' → logprob: -17.501928329467773
    6. '   ' → logprob: -17.751928329467773
    7. 'not' → logprob: -18.064428329467773
    8. '-' → logprob: -18.126928329467773
    9. ' x' → logprob: -18.126928329467773
    10. '
' → logprob: -18.626928329467773

Token 260: '<x' (ID: 152659)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.04529038444161415
    2. '>=' → logprob: -3.295290470123291
    3. '>' → logprob: -5.795290470123291
    4. ' ' → logprob: -5.920290470123291
    5. ' >=' → logprob: -7.420290470123291
    6. '<=' → logprob: -8.545289993286133
    7. '               ' → logprob: -9.295289993286133
    8. '                ' → logprob: -9.545289993286133
    9. '1' → logprob: -9.670289993286133
    10. ' and' → logprob: -9.670289993286133

Token 261: '<H' (ID: 104212)
  Prédit: '<H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<H' → logprob: -0.009889365173876286
    2. '<' → logprob: -4.759889602661133
    3. '<W' → logprob: -6.759889602661133
    4. '<x' → logprob: -10.134889602661133
    5. 'and' → logprob: -10.134889602661133
    6. 'H' → logprob: -11.259889602661133
    7. ' <' → logprob: -11.884889602661133
    8. ' and' → logprob: -12.509889602661133
    9. '<len' → logprob: -12.759889602661133
    10. '&H' → logprob: -13.884889602661133

Token 262: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0048418655060231686
    2. 'and' → logprob: -5.5048418045043945
    3. ' and' → logprob: -7.3798418045043945
    4. ' -' → logprob: -8.879841804504395
    5. '1' → logprob: -16.00484275817871
    6. '−' → logprob: -16.50484275817871
    7. '–' → logprob: -17.75484275817871
    8. ' ' → logprob: -19.00484275817871
    9. '   ' → logprob: -19.25484275817871
    10. '()-' → logprob: -19.50484275817871

Token 263: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.318681188422488e-05
    2. '-' → logprob: -11.25001335144043
    3. ' ' → logprob: -16.00001335144043
    4. 'y' → logprob: -17.75001335144043
    5. ' -' → logprob: -19.37501335144043
    6. 'x' → logprob: -19.37501335144043
    7. '```' → logprob: -19.37501335144043
    8. 'and' → logprob: -19.50001335144043
    9. '   ' → logprob: -19.62501335144043
    10. '2' → logprob: -20.62501335144043

Token 264: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.029750952497124672
    2. 'and' → logprob: -3.5297510623931885
    3. ' ' → logprob: -15.27975082397461
    4. '	and' → logprob: -15.52975082397461
    5. ' и' → logprob: -17.77975082397461
    6. '                ' → logprob: -17.90475082397461
    7. '               ' → logprob: -18.40475082397461
    8. '   ' → logprob: -18.52975082397461
    9. '```' → logprob: -19.40475082397461
    10. '    ' → logprob: -19.40475082397461

Token 265: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.001503790495917201
    2. ' ' → logprob: -6.501503944396973
    3. '   ' → logprob: -14.501503944396973
    4. '1' → logprob: -14.751503944396973
    5. '  ' → logprob: -15.251503944396973
    6. '    ' → logprob: -16.501502990722656
    7. ' ' → logprob: -16.626502990722656
    8. '
' → logprob: -17.501502990722656
    9. '           ' → logprob: -17.626502990722656
    10. '               ' → logprob: -17.626502990722656

Token 266: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.896309739408025e-07
    2. 'y' → logprob: -14.875000953674316
    3. ' ' → logprob: -15.000000953674316
    4. '1' → logprob: -18.375
    5. '   ' → logprob: -18.625
    6. 'x' → logprob: -18.75
    7. '۰' → logprob: -20.375
    8. ' y' → logprob: -20.5
    9. '
' → logprob: -20.625
    10. '  ' → logprob: -20.625

Token 267: '<' (ID: 27)
  Prédit: '<'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.08500296622514725
    2. 'y' → logprob: -2.710002899169922
    3. '<x' → logprob: -4.585002899169922
    4. ',y' → logprob: -6.335002899169922
    5. '+y' → logprob: -6.960002899169922
    6. ' y' → logprob: -7.335002899169922
    7. '	y' → logprob: -7.960002899169922
    8. '>' → logprob: -8.085002899169922
    9. '+' → logprob: -8.585002899169922
    10. 'x' → logprob: -9.210002899169922

Token 268: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -3.583550642360933e-05
    2. ' y' → logprob: -10.250036239624023
    3. 'x' → logprob: -14.875036239624023
    4. 'W' → logprob: -17.250036239624023
    5. '	y' → logprob: -18.000036239624023
    6. ''y' → logprob: -19.000036239624023
    7. 'Y' → logprob: -19.250036239624023
    8. 'j' → logprob: -19.375036239624023
    9. 'w' → logprob: -20.000036239624023
    10. '*y' → logprob: -20.250036239624023

Token 269: '<W' (ID: 180273)
  Prédit: '<W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<W' → logprob: -0.00025871701654978096
    2. 'W' → logprob: -8.375258445739746
    3. '<' → logprob: -10.625258445739746
    4. ' <' → logprob: -13.250258445739746
    5. '<H' → logprob: -13.375258445739746
    6. ' W' → logprob: -15.125258445739746
    7. '	W' → logprob: -16.625259399414062
    8. '"W' → logprob: -17.000259399414062
    9. '=W' → logprob: -17.750259399414062
    10. '```' → logprob: -18.125259399414062

Token 270: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -6.869017852295656e-06
    2. '1' → logprob: -12.000006675720215
    3. ' -' → logprob: -14.250006675720215
    4. '```' → logprob: -18.75000762939453
    5. '−' → logprob: -19.50000762939453
    6. '–' → logprob: -19.75000762939453
    7. '()-' → logprob: -20.50000762939453
    8. '--' → logprob: -20.87500762939453
    9. ' ' → logprob: -21.62500762939453
    10. '   ' → logprob: -22.00000762939453

Token 271: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.375
    3. '-' → logprob: -17.0
    4. '   ' → logprob: -17.625
    5. '```' → logprob: -19.25
    6. '2' → logprob: -20.5
    7. '	' → logprob: -22.0
    8. '  ' → logprob: -22.125
    9. '``' → logprob: -22.25
    10. 'x' → logprob: -22.3125

Token 272: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.07898419350385666
    2. 'and' → logprob: -2.578984260559082
    3. ':
' → logprob: -9.953984260559082
    4. '                   ' → logprob: -10.578984260559082
    5. '               ' → logprob: -11.328984260559082
    6. '	and' → logprob: -12.578984260559082
    7. '                       ' → logprob: -13.328984260559082
    8. ':' → logprob: -13.453984260559082
    9. '           ' → logprob: -13.578984260559082
    10. '                ' → logprob: -14.828984260559082

Token 273: ' grid' (ID: 10586)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grid' → logprob: -0.0001234428636962548
    2. ' grid' → logprob: -9.000123023986816
    3. '(grid' → logprob: -17.250123977661133
    4. '	grid' → logprob: -18.000123977661133
    5. 'queue' → logprob: -20.125123977661133
    6. '   ' → logprob: -20.875123977661133
    7. '.grid' → logprob: -21.000123977661133
    8. 'Grid' → logprob: -21.125123977661133
    9. '                   ' → logprob: -21.500123977661133
    10. '                       ' → logprob: -22.250123977661133

Token 274: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -7.896309739408025e-07
    2. 'x' → logprob: -14.250000953674316
    3. '```' → logprob: -17.375
    4. '   ' → logprob: -18.0
    5. '[
' → logprob: -19.0
    6. '
' → logprob: -19.25
    7. '[' → logprob: -19.375
    8. '[i' → logprob: -20.125
    9. '][' → logprob: -20.375
    10. '``' → logprob: -20.625

Token 275: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0013559521175920963
    2. '[x' → logprob: -6.75135612487793
    3. '[y' → logprob: -8.87635612487793
    4. ']' → logprob: -11.37635612487793
    5. ' ][' → logprob: -11.50135612487793
    6. ''][' → logprob: -11.62635612487793
    7. '"][' → logprob: -12.12635612487793
    8. '[' → logprob: -12.12635612487793
    9. '[
' → logprob: -13.50135612487793
    10. 'x' → logprob: -14.12635612487793

Token 276: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -3.881560041918419e-05
    2. 'x' → logprob: -10.375039100646973
    3. ' y' → logprob: -11.875039100646973
    4. 'j' → logprob: -14.750039100646973
    5. '   ' → logprob: -16.750038146972656
    6. '	y' → logprob: -17.000038146972656
    7. ''y' → logprob: -17.000038146972656
    8. '[y' → logprob: -17.250038146972656
    9. ']' → logprob: -17.375038146972656
    10. '][' → logprob: -18.375038146972656

Token 277: ']!='' (ID: 187656)
  Prédit: ']!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']!=' → logprob: -0.5245583057403564
    2. ']!='' → logprob: -1.0245583057403564
    3. ']' → logprob: -3.1495583057403564
    4. '!='' → logprob: -5.399558067321777
    5. '!=' → logprob: -6.399558067321777
    6. '']' → logprob: -9.649558067321777
    7. ']==' → logprob: -11.024558067321777
    8. ')!=' → logprob: -11.149558067321777
    9. 'isdigit' → logprob: -11.399558067321777
    10. 'not' → logprob: -11.399558067321777

Token 278: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.000622845720499754
    2. ''.' → logprob: -7.500622749328613
    3. '.'' → logprob: -9.625622749328613
    4. '.'.' → logprob: -13.250622749328613
    5. '':' → logprob: -13.875622749328613
    6. '.:' → logprob: -14.500622749328613
    7. '.''' → logprob: -15.750622749328613
    8. '.')' → logprob: -16.25062370300293
    9. ''' → logprob: -16.37562370300293
    10. '.
' → logprob: -16.75062370300293

Token 279: '':
' (ID: 7669)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.26020967960357666
    2. ' and' → logprob: -1.6352096796035767
    3. '                   ' → logprob: -4.135209560394287
    4. ':' → logprob: -5.010209560394287
    5. 'and' → logprob: -5.010209560394287
    6. '):
' → logprob: -6.510209560394287
    7. '   ' → logprob: -7.260209560394287
    8. ' :
' → logprob: -7.260209560394287
    9. '               ' → logprob: -7.510209560394287
    10. '                       ' → logprob: -7.760209560394287

Token 280: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.05464528128504753
    2. '
' → logprob: -3.804645299911499
    3. 'next' → logprob: -3.804645299911499
    4. ' next' → logprob: -5.30464506149292
    5. '                           ' → logprob: -7.05464506149292
    6. '                       ' → logprob: -7.05464506149292
    7. '               ' → logprob: -7.80464506149292
    8. '                    
' → logprob: -7.92964506149292
    9. '[next' → logprob: -8.179645538330078
    10. ',next' → logprob: -8.804645538330078

Token 281: ' if' (ID: 538)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.0660579651594162
    2. ' next' → logprob: -2.8160579204559326
    3. '                       ' → logprob: -5.816058158874512
    4. '                   ' → logprob: -7.316058158874512
    5. '   ' → logprob: -8.691058158874512
    6. '                               ' → logprob: -9.191058158874512
    7. '               ' → logprob: -9.816058158874512
    8. '	next' → logprob: -10.191058158874512
    9. '                           ' → logprob: -10.316058158874512
    10. '           ' → logprob: -11.941058158874512

Token 282: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.0019286326132714748
    2. ' count' → logprob: -6.251928806304932
    3. '(count' → logprob: -16.876928329467773
    4. '	count' → logprob: -18.501928329467773
    5. '                   ' → logprob: -18.626928329467773
    6. '   ' → logprob: -19.001928329467773
    7. ' ' → logprob: -19.126928329467773
    8. '[count' → logprob: -19.751928329467773
    9. '                       ' → logprob: -20.626928329467773
    10. 'queue' → logprob: -21.251928329467773

Token 283: '_dot' (ID: 73438)
  Prédit: '_dot'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dot' → logprob: -1.0280383548888494e-06
    2. 'dot' → logprob: -14.375000953674316
    3. '_' → logprob: -15.500000953674316
    4. '```' → logprob: -16.500001907348633
    5. ' _' → logprob: -17.500001907348633
    6. '_d' → logprob: -18.500001907348633
    7. '._' → logprob: -18.500001907348633
    8. '   ' → logprob: -18.625001907348633
    9. ')_' → logprob: -18.875001907348633
    10. '
' → logprob: -18.875001907348633

Token 284: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -7.584239938296378e-06
    2. '(' → logprob: -12.625007629394531
    3. 'x' → logprob: -12.625007629394531
    4. ' (' → logprob: -14.000007629394531
    5. '(
' → logprob: -17.25000762939453
    6. ' x' → logprob: -18.37500762939453
    7. '(i' → logprob: -19.12500762939453
    8. ',x' → logprob: -19.25000762939453
    9. '```' → logprob: -19.37500762939453
    10. '
' → logprob: -19.75000762939453

Token 285: ',y' (ID: 16103)
  Prédit: ',y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',y' → logprob: -0.0007280402351170778
    2. ',' → logprob: -7.250728130340576
    3. ',x' → logprob: -11.250727653503418
    4. ' ,' → logprob: -12.875727653503418
    5. 'y' → logprob: -13.375727653503418
    6. ',j' → logprob: -14.250727653503418
    7. ',
' → logprob: -15.625727653503418
    8. '(y' → logprob: -17.125728607177734
    9. 'x' → logprob: -17.750728607177734
    10. '```' → logprob: -17.875728607177734

Token 286: ')>=' (ID: 173043)
  Prédit: ')>='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')>=' → logprob: -0.03312215209007263
    2. ')' → logprob: -3.5331220626831055
    3. ')>' → logprob: -5.7831220626831055
    4. ' )' → logprob: -9.783122062683105
    5. ']>=' → logprob: -9.783122062683105
    6. '>=' → logprob: -9.908122062683105
    7. '[x' → logprob: -9.908122062683105
    8. ')[' → logprob: -10.658122062683105
    9. '(x' → logprob: -10.658122062683105
    10. '   ' → logprob: -11.658122062683105

Token 287: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: 0.0
    2. ' int' → logprob: -18.0
    3. '   ' → logprob: -21.0
    4. '
' → logprob: -21.125
    5. '	int' → logprob: -23.375
    6. '(int' → logprob: -24.0
    7. '<int' → logprob: -24.5
    8. '  ' → logprob: -25.0
    9. '```' → logprob: -25.0
    10. '=int' → logprob: -25.125

Token 288: '(grid' (ID: 51818)
  Prédit: '(grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(grid' → logprob: -0.0015036711702123284
    2. 'grid' → logprob: -6.5015034675598145
    3. ' grid' → logprob: -14.001503944396973
    4. '(
' → logprob: -15.001503944396973
    5. '(' → logprob: -16.376502990722656
    6. '	grid' → logprob: -16.501502990722656
    7. '/grid' → logprob: -17.376502990722656
    8. ':grid' → logprob: -17.751502990722656
    9. ' (' → logprob: -18.376502990722656
    10. '(gr' → logprob: -19.251502990722656

Token 289: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -1.0802738870552275e-05
    2. '(x' → logprob: -11.62501049041748
    3. 'grid' → logprob: -14.12501049041748
    4. 'x' → logprob: -14.75001049041748
    5. '```' → logprob: -14.87501049041748
    6. '
' → logprob: -16.375011444091797
    7. '[' → logprob: -16.750011444091797
    8. '``' → logprob: -16.750011444091797
    9. '[
' → logprob: -16.750011444091797
    10. '   ' → logprob: -17.500011444091797

Token 290: '][' (ID: 2696)
  Prédit: '[x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.00031854258850216866
    2. '[y' → logprob: -8.87531852722168
    3. '][' → logprob: -9.00031852722168
    4. '[' → logprob: -10.62531852722168
    5. 'x' → logprob: -11.00031852722168
    6. '(x' → logprob: -12.37531852722168
    7. ']' → logprob: -12.87531852722168
    8. ' [' → logprob: -12.87531852722168
    9. '
' → logprob: -13.75031852722168
    10. '```' → logprob: -14.00031852722168

Token 291: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.028040636330842972
    2. '[x' → logprob: -4.528040409088135
    3. 'x' → logprob: -4.778040409088135
    4. '[y' → logprob: -4.903040409088135
    5. 'j' → logprob: -7.028040409088135
    6. '[j' → logprob: -9.653040885925293
    7. ' y' → logprob: -10.278040885925293
    8. '[' → logprob: -12.028040885925293
    9. '```' → logprob: -12.028040885925293
    10. '   ' → logprob: -13.028040885925293

Token 292: ']):
' (ID: 51989)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.577366292476654
    2. '):' → logprob: -0.827366292476654
    3. '()):
' → logprob: -7.327366352081299
    4. ')' → logprob: -7.827366352081299
    5. '()' → logprob: -8.95236587524414
    6. '):
' → logprob: -9.32736587524414
    7. '():
' → logprob: -9.45236587524414
    8. '[' → logprob: -11.57736587524414
    9. '():' → logprob: -11.57736587524414
    10. '):

' → logprob: -11.70236587524414

Token 293: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.008512092754244804
    2. 'next' → logprob: -6.008512020111084
    3. ' next' → logprob: -6.383512020111084
    4. '                           ' → logprob: -6.758512020111084
    5. '                   ' → logprob: -6.883512020111084
    6. '
' → logprob: -7.258512020111084
    7. '[next' → logprob: -8.133512496948242
    8. '                               ' → logprob: -8.258512496948242
    9. '```' → logprob: -8.258512496948242
    10. '(next' → logprob: -8.383512496948242

Token 294: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' (adapté à ' next') → logprob: -0.029875680804252625
    2. ' next' → logprob: -3.5298757553100586
    3. '                           ' → logprob: -9.404875755310059
    4. '                               ' → logprob: -11.529875755310059
    5. '(next' → logprob: -11.779875755310059
    6. ',next' → logprob: -11.904875755310059
    7. '	next' → logprob: -12.404875755310059
    8. '```' → logprob: -12.529875755310059
    9. '[next' → logprob: -12.654875755310059
    10. ' ' → logprob: -12.904875755310059

Token 295: '_queue' (ID: 25622)
  Prédit: '_queue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_queue' → logprob: -1.9361264946837764e-07
    2. 'queue' → logprob: -16.375
    3. '_' → logprob: -16.75
    4. '```' → logprob: -18.375
    5. '_QUEUE' → logprob: -18.75
    6. '_enqueue' → logprob: -20.0
    7. '._' → logprob: -20.625
    8. '\' → logprob: -20.625
    9. '
' → logprob: -20.75
    10. '_code' → logprob: -20.875

Token 296: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -3.292907877039397e-06
    2. '.enqueue' → logprob: -13.75000286102295
    3. '.add' → logprob: -14.00000286102295
    4. '.' → logprob: -14.62500286102295
    5. '.app' → logprob: -15.37500286102295
    6. ').' → logprob: -15.87500286102295
    7. '.ap' → logprob: -16.375003814697266
    8. 'append' → logprob: -16.375003814697266
    9. '.Append' → logprob: -16.500003814697266
    10. '.push' → logprob: -16.625003814697266

Token 297: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.00017529279284644872
    2. '(x' → logprob: -9.250175476074219
    3. '(' → logprob: -9.500175476074219
    4. '(
' → logprob: -12.375175476074219
    5. ' ((' → logprob: -16.37517547607422
    6. ' (' → logprob: -17.25017547607422
    7. '[(' → logprob: -19.37517547607422
    8. '(
' → logprob: -19.62517547607422
    9. '("' → logprob: -20.87517547607422
    10. ')((' → logprob: -21.25017547607422

Token 298: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -6.704273118884885e-07
    2. ' x' → logprob: -14.375000953674316
    3. '(x' → logprob: -21.0
    4. '	x' → logprob: -21.75
    5. '
' → logprob: -21.875
    6. ')x' → logprob: -23.0
    7. '"x' → logprob: -23.5
    8. '   ' → logprob: -23.875
    9. ',x' → logprob: -24.625
    10. '```' → logprob: -24.625

Token 299: ',y' (ID: 16103)
  Prédit: ',y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',y' → logprob: -0.10243142396211624
    2. ',' → logprob: -2.352431535720825
    3. 'x' → logprob: -6.477431297302246
    4. ',x' → logprob: -7.727431297302246
    5. 'y' → logprob: -8.352431297302246
    6. ' ,' → logprob: -12.477431297302246
    7. ',j' → logprob: -13.602431297302246
    8. ',
' → logprob: -13.977431297302246
    9. ',n' → logprob: -14.477431297302246
    10. ')' → logprob: -14.727431297302246

Token 300: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.5800690650939941
    2. ')' → logprob: -0.8300690650939941
    3. '))
' → logprob: -6.080069065093994
    4. ')
' → logprob: -6.330069065093994
    5. ')))' → logprob: -9.955068588256836
    6. '       ' → logprob: -13.955068588256836
    7. '))))' → logprob: -14.330068588256836
    8. '                   ' → logprob: -14.830068588256836
    9. '   ' → logprob: -14.955068588256836
    10. '))
' → logprob: -15.205068588256836

Token 301: '   ' (ID: 271)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.31830763816833496
    2. '   ' → logprob: -1.443307638168335
    3. ' queue' → logprob: -3.443307638168335
    4. '	queue' → logprob: -5.818307876586914
    5. '(queue' → logprob: -7.443307876586914
    6. '
' → logprob: -8.068307876586914
    7. '    
' → logprob: -8.193307876586914
    8. '.queue' → logprob: -8.943307876586914
    9. '```' → logprob: -9.568307876586914
    10. '       ' → logprob: -9.818307876586914

Token 302: ' queue' (ID: 13661)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' (adapté à ' queue') → logprob: -0.07894454151391983
    2. ' queue' → logprob: -2.578944444656372
    3. '   ' → logprob: -10.453944206237793
    4. '	queue' → logprob: -10.703944206237793
    5. '
' → logprob: -13.578944206237793
    6. '.queue' → logprob: -14.328944206237793
    7. '(queue' → logprob: -14.453944206237793
    8. '    
' → logprob: -14.703944206237793
    9. '```' → logprob: -14.953944206237793
    10. ' 
' → logprob: -16.45394515991211

Token 303: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -2.5776860184123507e-06
    2. ',next' → logprob: -13.12500286102295
    3. ',' → logprob: -15.25000286102295
    4. ' =' → logprob: -16.000001907348633
    5. '=
' → logprob: -16.250001907348633
    6. '=

' → logprob: -17.000001907348633
    7. '=n' → logprob: -18.500001907348633
    8. '=new' → logprob: -19.500001907348633
    9. ')=' → logprob: -19.750001907348633
    10. '=.' → logprob: -19.750001907348633

Token 304: 'next' (ID: 7311)
  Prédit: 'next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -1.676292231422849e-05
    2. ' next' → logprob: -11.000017166137695
    3. '(next' → logprob: -19.250017166137695
    4. '	next' → logprob: -21.375017166137695
    5. '[next' → logprob: -21.750017166137695
    6. '.next' → logprob: -22.750017166137695
    7. '   ' → logprob: -23.625017166137695
    8. 'new' → logprob: -23.750017166137695
    9. '```' → logprob: -24.000017166137695
    10. '`' → logprob: -24.250017166137695

Token 305: '_queue' (ID: 25622)
  Prédit: '_queue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_queue' → logprob: -3.128163257315464e-07
    2. 'queue' → logprob: -15.125
    3. '_' → logprob: -17.25
    4. '```' → logprob: -20.5
    5. '._' → logprob: -20.625
    6. ' _' → logprob: -21.375
    7. '_q' → logprob: -21.75
    8. '_QUEUE' → logprob: -21.875
    9. ' queue' → logprob: -22.0
    10. '\' → logprob: -22.125

Token 306: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -9.014684110297821e-06
    2. ' print' → logprob: -11.750008583068848
    3. '
' → logprob: -14.875008583068848
    4. '```' → logprob: -15.250008583068848
    5. ')' → logprob: -15.500008583068848
    6. '(print' → logprob: -15.875008583068848
    7. ')
' → logprob: -17.125009536743164
    8. '-print' → logprob: -17.125009536743164
    9. '#print' → logprob: -17.875009536743164
    10. '.print' → logprob: -18.375009536743164

Token 307: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -3.292907877039397e-06
    2. ' print' → logprob: -12.75000286102295
    3. '
' → logprob: -15.25000286102295
    4. ')' → logprob: -17.375003814697266
    5. '(print' → logprob: -17.875003814697266
    6. '#print' → logprob: -18.500003814697266
    7. '```' → logprob: -18.500003814697266
    8. '-print' → logprob: -19.000003814697266
    9. 'pr' → logprob: -19.125003814697266
    10. 'if' → logprob: -20.500003814697266

Token 308: '(res' (ID: 8331)
  Prédit: '(res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -4.68022444692906e-05
    2. '(' → logprob: -10.500046730041504
    3. 'res' → logprob: -10.875046730041504
    4. ' (' → logprob: -16.12504768371582
    5. '(
' → logprob: -16.37504768371582
    6. ' res' → logprob: -17.62504768371582
    7. '(result' → logprob: -17.62504768371582
    8. '(re' → logprob: -17.87504768371582
    9. '(len' → logprob: -18.25004768371582
    10. ',res' → logprob: -18.50004768371582

Token 309: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.981667537620524e-06
    2. ' )' → logprob: -13.375001907348633
    3. ')
' → logprob: -15.500001907348633
    4. ')`' → logprob: -16.500001907348633
    5. '+' → logprob: -16.750001907348633
    6. '))' → logprob: -17.250001907348633
    7. '`)' → logprob: -18.000001907348633
    8. '+)' → logprob: -18.625001907348633
    9. ')}' → logprob: -18.875001907348633
    10. '()' → logprob: -18.875001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 307
Tokens correctement prédits (1ère position, stricte): 167
Tokens correctement prédits (1ère position, avec adaptation): 180
Tokens correctement prédits (top 10): 271
Précision stricte (1ère position): 54.40%
Précision adaptée (1ère position): 58.63%
Précision (top 10): 88.27%
================================================================================
