================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:25:13
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys

for line in sys.stdin:
    if not line.strip():
        continue
    parts = line.strip().split()
    if len(parts) < 2:
        continue
    n, r = map(int, parts)
    cs = []
    while len(cs) < r:
        cs_line = sys.stdin.readline().strip()
        cs.extend(map(int, cs_line.split()))
    deck = list(range(n))
    for c in cs:
        half = (n + 1) // 2
        A = deck[-half:]   # top half, deck A (top is right)
        B = deck[:n - half]  # bottom half, deck B
        C = []
        a_idx = 0
        b_idx = 0
        while a_idx < len(A) or b_idx < len(B):
            take_a = min(c, len(A) - a_idx)
            if take_a > 0:
                C.extend(A[a_idx:a_idx+take_a])
                a_idx += take_a
            take_b = min(c, len(B) - b_idx)
            if take_b > 0:
                C.extend(B[b_idx:b_idx+take_b])
                b_idx += take_b
        deck = C
    print(deck[-1])
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: 'for' (ID: 1938)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.03689965978264809
    2. '\n' → logprob: -3.6618995666503906
    3. 'import' → logprob: -5.786899566650391
    4. '\' → logprob: -6.286899566650391
    5. 'newline' → logprob: -6.786899566650391
    6. '' → logprob: -7.161899566650391
    7. '```' → logprob: -7.411899566650391
    8. '<|end|>' → logprob: -7.411899566650391
    9. '[' → logprob: -7.661899566650391
    10. '
' → logprob: -7.786899566650391

Token 4: ' line' (ID: 2543)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0022793153766542673
    2. '  ' → logprob: -6.252279281616211
    3. ' i' → logprob: -8.127279281616211
    4. ' ```' → logprob: -12.127279281616211
    5. '```' → logprob: -12.127279281616211
    6. 'i' → logprob: -12.377279281616211
    7. '_' → logprob: -12.627279281616211
    8. ' ▁' → logprob: -12.627279281616211
    9. ' space' → logprob: -12.752279281616211
    10. ' ' → logprob: -12.877279281616211

Token 5: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.14993883669376373
    2. 'in' → logprob: -2.1499388217926025
    3. ':' → logprob: -4.399939060211182
    4. '[' → logprob: -5.149939060211182
    5. '[]' → logprob: -7.524939060211182
    6. '[:]' → logprob: -7.649939060211182
    7. ' ' → logprob: -7.899939060211182
    8. '[line' → logprob: -7.899939060211182
    9. 'import' → logprob: -8.024938583374023
    10. '```' → logprob: -8.274938583374023

Token 6: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.009110254235565662
    2. 'sys' → logprob: -4.884110450744629
    3. ' ' → logprob: -6.634110450744629
    4. '=sys' → logprob: -9.509110450744629
    5. '(sys' → logprob: -10.634110450744629
    6. ' iter' → logprob: -10.634110450744629
    7. '	sys' → logprob: -10.634110450744629
    8. ' in' → logprob: -11.384110450744629
    9. ' ' → logprob: -11.634110450744629
    10. '```' → logprob: -12.384110450744629

Token 7: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.032781992107629776
    2. '.stdin' → logprob: -3.9077820777893066
    3. '.readline' → logprob: -4.782782077789307
    4. ' .' → logprob: -6.532782077789307
    5. '.argv' → logprob: -6.907782077789307
    6. '.stdout' → logprob: -7.282782077789307
    7. '.readlines' → logprob: -8.282781600952148
    8. '.stderr' → logprob: -9.657781600952148
    9. '.`' → logprob: -10.157781600952148
    10. '```' → logprob: -10.157781600952148

Token 8: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -7.123899558791891e-05
    2. ':
' → logprob: -11.25007152557373
    3. ':**' → logprob: -11.25007152557373
    4. ' :' → logprob: -11.37507152557373
    5. '):' → logprob: -11.75007152557373
    6. '':' → logprob: -12.00007152557373
    7. '[:]' → logprob: -12.12507152557373
    8. '>:' → logprob: -12.75007152557373
    9. '`:' → logprob: -13.37507152557373
    10. '():' → logprob: -13.37507152557373

Token 9: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0037186036352068186
    2. ' print' → logprob: -6.128718376159668
    3. '    
' → logprob: -6.753718376159668
    4. 'print' → logprob: -8.628718376159668
    5. '    ' → logprob: -9.628718376159668
    6. ' if' → logprob: -10.128718376159668
    7. ' readline' → logprob: -11.003718376159668
    8. '```' → logprob: -11.628718376159668
    9. ' ' → logprob: -11.878718376159668
    10. ' line' → logprob: -12.128718376159668

Token 10: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3255872130393982
    2. 'print' → logprob: -1.325587272644043
    3. ' print' → logprob: -4.450587272644043
    4. '    ' → logprob: -8.700587272644043
    5. 'pass' → logprob: -8.825587272644043
    6. '       ' → logprob: -9.200587272644043
    7. ' pass' → logprob: -9.575587272644043
    8. ' if' → logprob: -10.075587272644043
    9. 'if' (adapté à ' if') → logprob: -11.325587272644043
    10. '```' → logprob: -11.825587272644043

Token 11: ' not' (ID: 625)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.06869536638259888
    2. ' not' → logprob: -3.193695306777954
    3. ' ' → logprob: -3.693695306777954
    4. 'line' → logprob: -8.193695068359375
    5. ' len' → logprob: -9.693695068359375
    6. '  ' → logprob: -10.318695068359375
    7. '	line' → logprob: -10.693695068359375
    8. '=line' → logprob: -11.068695068359375
    9. '    ' → logprob: -11.193695068359375
    10. 'not' → logprob: -11.193695068359375

Token 12: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.00247981958091259
    2. 'line' → logprob: -6.0024800300598145
    3. ' ' → logprob: -13.377479553222656
    4. '	line' → logprob: -13.627479553222656
    5. '=line' → logprob: -14.877479553222656
    6. '(line' → logprob: -14.877479553222656
    7. '#line' → logprob: -15.877479553222656
    8. '[line' → logprob: -15.877479553222656
    9. '   ' → logprob: -16.127479553222656
    10. '    ' → logprob: -16.877479553222656

Token 13: '.strip' (ID: 40613)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.477896124124527
    2. '.strip' → logprob: -0.9778960943222046
    3. '.rstrip' → logprob: -5.977896213531494
    4. '.startswith' → logprob: -6.727896213531494
    5. ' .' → logprob: -10.102895736694336
    6. '.endswith' → logprob: -11.102895736694336
    7. '.readline' → logprob: -11.727895736694336
    8. '   ' → logprob: -12.852895736694336
    9. 'strip' → logprob: -12.852895736694336
    10. 'rstrip' → logprob: -12.977895736694336

Token 14: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0015823511639609933
    2. ':' → logprob: -6.626582145690918
    3. ' ():' → logprob: -9.251582145690918
    4. '():
' → logprob: -9.501582145690918
    5. '()' → logprob: -9.626582145690918
    6. '()==' → logprob: -12.126582145690918
    7. '().' → logprob: -12.626582145690918
    8. '(':' → logprob: -13.376582145690918
    9. '.' → logprob: -13.501582145690918
    10. '):' → logprob: -13.626582145690918

Token 15: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001463692169636488
    2. ' continue' → logprob: -6.751463890075684
    3. 'continue' → logprob: -8.876463890075684
    4. '   ' → logprob: -8.876463890075684
    5. ' break' → logprob: -11.876463890075684
    6. ' continues' → logprob: -13.501463890075684
    7. '        
' → logprob: -13.626463890075684
    8. '_continue' → logprob: -14.126463890075684
    9. '	continue' → logprob: -14.251463890075684
    10. '<|end|>' → logprob: -14.626463890075684

Token 16: ' continue' (ID: 4901)
  Prédit: ' break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.3924059569835663
    2. 'break' → logprob: -1.1424059867858887
    3. '   ' → logprob: -5.392405986785889
    4. '       ' → logprob: -7.142405986785889
    5. 'continue' (adapté à ' continue') → logprob: -9.39240550994873
    6. ' continue' → logprob: -9.64240550994873
    7. '	break' → logprob: -11.14240550994873
    8. '```' → logprob: -12.26740550994873
    9. '    ' → logprob: -12.51740550994873
    10. ' ' → logprob: -13.14240550994873

Token 17: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004449227824807167
    2. '    
' → logprob: -5.504449367523193
    3. '        
' → logprob: -8.879448890686035
    4. '       ' → logprob: -10.004448890686035
    5. '
' → logprob: -10.129448890686035
    6. 'print' → logprob: -10.254448890686035
    7. '```' → logprob: -10.379448890686035
    8. '    ' → logprob: -10.629448890686035
    9. '\n' → logprob: -10.879448890686035
    10. '\' → logprob: -12.004448890686035

Token 18: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00016110755677800626
    2. 'print' → logprob: -9.000161170959473
    3. '    
' → logprob: -10.500161170959473
    4. '       ' → logprob: -12.375161170959473
    5. ' print' → logprob: -13.250161170959473
    6. '```' → logprob: -13.375161170959473
    7. '
' → logprob: -14.250161170959473
    8. '        
' → logprob: -14.500161170959473
    9. '    ' → logprob: -14.750161170959473
    10. '   ' → logprob: -15.125161170959473

Token 19: ' parts' (ID: 7881)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12759536504745483
    2. 'print' → logprob: -2.1275954246520996
    3. ' print' → logprob: -8.002594947814941
    4. 'data' → logprob: -9.127594947814941
    5. 'tokens' → logprob: -10.002594947814941
    6. 'result' → logprob: -10.627594947814941
    7. 'import' → logprob: -10.627594947814941
    8. 'process' → logprob: -10.877594947814941
    9. 'try' → logprob: -11.127594947814941
    10. 'word' → logprob: -11.502594947814941

Token 20: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1555561125278473
    2. '=' → logprob: -2.0305562019348145
    3. '.' → logprob: -4.6555562019348145
    4. '[' → logprob: -6.2805562019348145
    5. '   ' → logprob: -7.6555562019348145
    6. '.split' → logprob: -8.405555725097656
    7. '[:]' → logprob: -8.780555725097656
    8. '.=' → logprob: -9.280555725097656
    9. ')' → logprob: -9.530555725097656
    10. '.append' → logprob: -9.655555725097656

Token 21: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.47409170866012573
    2. 'line' → logprob: -0.9740917086601257
    3. '   ' → logprob: -11.599091529846191
    4. '	line' → logprob: -12.599091529846191
    5. '=line' → logprob: -13.849091529846191
    6. '(line' → logprob: -14.599091529846191
    7. '[line' → logprob: -14.724091529846191
    8. '#line' → logprob: -16.099092483520508
    9. ' ' → logprob: -16.099092483520508
    10. '_line' → logprob: -17.599092483520508

Token 22: '.strip' (ID: 40613)
  Prédit: '.split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.split' → logprob: -0.43524178862571716
    2. '.' → logprob: -1.4352418184280396
    3. '.strip' → logprob: -2.18524169921875
    4. '.rstrip' → logprob: -6.06024169921875
    5. '   ' → logprob: -10.81024169921875
    6. '.readline' → logprob: -11.31024169921875
    7. '.startswith' → logprob: -12.43524169921875
    8. ' .' → logprob: -12.68524169921875
    9. 'split' → logprob: -12.93524169921875
    10. '.replace' → logprob: -13.31024169921875

Token 23: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.002749599749222398
    2. '()' → logprob: -6.002749443054199
    3. '.split' → logprob: -8.5027494430542
    4. '(' → logprob: -10.0027494430542
    5. '.' → logprob: -10.8777494430542
    6. '('' → logprob: -12.8777494430542
    7. '().'' → logprob: -13.6277494430542
    8. ' ().' → logprob: -13.8777494430542
    9. ' .' → logprob: -14.8777494430542
    10. '   ' → logprob: -15.6277494430542

Token 24: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: 0.0
    2. ' split' → logprob: -17.0
    3. 'spl' → logprob: -17.0
    4. 'rstrip' → logprob: -19.0
    5. 'startswith' → logprob: -19.125
    6. '(split' → logprob: -19.375
    7. '.split' → logprob: -20.75
    8. 'strip' → logprob: -20.875
    9. '```' → logprob: -21.25
    10. '_split' → logprob: -21.5

Token 25: '()
' (ID: 1234)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '('' → logprob: -0.01061102282255888
    2. '("("' → logprob: -4.760611057281494
    3. '(' → logprob: -6.260611057281494
    4. '()' → logprob: -9.885610580444336
    5. '("' → logprob: -11.635610580444336
    6. ''' → logprob: -11.760610580444336
    7. '('(' → logprob: -12.135610580444336
    8. '('.')' → logprob: -12.510610580444336
    9. '(',' → logprob: -12.885610580444336
    10. '(`' → logprob: -13.885610580444336

Token 26: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008725190535187721
    2. '[' → logprob: -5.633725166320801
    3. ' if' → logprob: -6.133725166320801
    4. 'if' → logprob: -6.258725166320801
    5. 'print' → logprob: -7.758725166320801
    6. '[]' → logprob: -8.7587251663208
    7. ',' → logprob: -10.1337251663208
    8. '    
' → logprob: -10.1337251663208
    9. 'for' → logprob: -10.1337251663208
    10. '[i' → logprob: -10.1337251663208

Token 27: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -1.023427963256836
    2. 'command' → logprob: -1.523427963256836
    3. 'print' → logprob: -1.773427963256836
    4. 'key' → logprob: -2.023427963256836
    5. 'count' → logprob: -3.773427963256836
    6. 'cmd' → logprob: -4.023427963256836
    7. '   ' → logprob: -4.148427963256836
    8. 'num' → logprob: -4.523427963256836
    9. 'word' → logprob: -4.523427963256836
    10. 'i' → logprob: -4.898427963256836

Token 28: ' len' (ID: 4631)
  Prédit: ' parts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' parts' → logprob: -0.06284584850072861
    2. ' len' → logprob: -3.0628459453582764
    3. 'parts' → logprob: -4.562845706939697
    4. 'len' → logprob: -5.687845706939697
    5. '(parts' → logprob: -8.562846183776855
    6. ' ' → logprob: -10.312846183776855
    7. ' '' → logprob: -10.312846183776855
    8. ' not' → logprob: -10.562846183776855
    9. ''' → logprob: -10.812846183776855
    10. '_parts' → logprob: -12.062846183776855

Token 29: '(parts' (ID: 102573)
  Prédit: '(parts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(parts' → logprob: -0.00026217024424113333
    2. '(' → logprob: -8.250262260437012
    3. 'parts' → logprob: -15.125262260437012
    4. ' (' → logprob: -15.375262260437012
    5. '(part' → logprob: -15.875262260437012
    6. ' parts' → logprob: -15.875262260437012
    7. ')' → logprob: -17.250261306762695
    8. '(points' → logprob: -17.250261306762695
    9. '(p' → logprob: -18.125261306762695
    10. '>' → logprob: -18.375261306762695

Token 30: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8092327117919922
    2. ' ==' → logprob: -1.0592327117919922
    3. ' <' → logprob: -1.8092327117919922
    4. '==' → logprob: -4.434232711791992
    5. ' >=' → logprob: -4.559232711791992
    6. '[' → logprob: -4.809232711791992
    7. ' )' → logprob: -5.309232711791992
    8. '<' → logprob: -5.684232711791992
    9. ' ' → logprob: -6.059232711791992
    10. ' >' → logprob: -6.684232711791992

Token 31: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.741843044757843
    2. ' ==' → logprob: -0.741843044757843
    3. ' >=' → logprob: -4.241843223571777
    4. '<' → logprob: -4.491843223571777
    5. '==' → logprob: -4.491843223571777
    6. ' >' → logprob: -5.366843223571777
    7. ' ' → logprob: -5.741843223571777
    8. ' !=' → logprob: -6.491843223571777
    9. '>' → logprob: -7.866843223571777
    10. '[' → logprob: -8.241843223571777

Token 32: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3495217263698578
    2. '2' → logprob: -1.3495217561721802
    3. '3' → logprob: -3.3495216369628906
    4. '1' → logprob: -7.849521636962891
    5. '4' → logprob: -9.47452163696289
    6. '=' → logprob: -10.97452163696289
    7. '5' → logprob: -11.59952163696289
    8. '6' → logprob: -12.47452163696289
    9. '>' → logprob: -13.16202163696289
    10. '7' → logprob: -13.59952163696289

Token 33: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.01646726205945015
    2. '3' → logprob: -4.141467094421387
    3. ' ' → logprob: -8.141467094421387
    4. '1' → logprob: -9.016467094421387
    5. '4' → logprob: -11.016467094421387
    6. '5' → logprob: -13.516467094421387
    7. '```' → logprob: -14.266467094421387
    8. '   ' → logprob: -14.891467094421387
    9. '=' → logprob: -15.078967094421387
    10. '  ' → logprob: -15.391467094421387

Token 34: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -6.015305552864447e-05
    2. ' :' → logprob: -10.500060081481934
    3. ':
' → logprob: -10.750060081481934
    4. ' or' → logprob: -12.500060081481934
    5. ':return' → logprob: -13.000060081481934
    6. '):' → logprob: -13.125060081481934
    7. ' and' → logprob: -13.625060081481934
    8. ':**' → logprob: -14.125060081481934
    9. '   ' → logprob: -15.250060081481934
    10. ' continues' → logprob: -15.750060081481934

Token 35: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00039349604048766196
    2. ' continue' → logprob: -8.625393867492676
    3. '   ' → logprob: -8.750393867492676
    4. '    ' → logprob: -10.500393867492676
    5. ' ' → logprob: -12.000393867492676
    6. 'continue' → logprob: -12.500393867492676
    7. '     ' → logprob: -12.625393867492676
    8. '           ' → logprob: -13.000393867492676
    9. '      ' → logprob: -13.000393867492676
    10. '<|end|>' → logprob: -13.000393867492676

Token 36: ' continue' (ID: 4901)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.37205392122268677
    2. ' continue' → logprob: -1.372053861618042
    3. ' break' → logprob: -3.122053861618042
    4. 'continue' (adapté à ' continue') → logprob: -5.122054100036621
    5. '   ' → logprob: -5.372054100036621
    6. '    ' → logprob: -6.872054100036621
    7. '           ' → logprob: -7.372054100036621
    8. 'break' → logprob: -7.622054100036621
    9. ' ' → logprob: -9.372054100036621
    10. '        ' → logprob: -10.122054100036621

Token 37: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1278175711631775
    2. '    
' → logprob: -2.1278176307678223
    3. '
' → logprob: -7.627817630767822
    4. '   
' → logprob: -8.877817153930664
    5. '  
' → logprob: -9.252817153930664
    6. '        
' → logprob: -9.627817153930664
    7. '<|end|>' → logprob: -10.502817153930664
    8. '```' → logprob: -10.752817153930664
    9. ' 
' → logprob: -11.877817153930664
    10. '  ' → logprob: -11.877817153930664

Token 38: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05546574294567108
    2. '    
' → logprob: -2.9304656982421875
    3. '```' → logprob: -8.180465698242188
    4. '
' → logprob: -8.805465698242188
    5. '   
' → logprob: -9.805465698242188
    6. '  
' → logprob: -10.430465698242188
    7. '        
' → logprob: -10.805465698242188
    8. '<|end|>' → logprob: -11.805465698242188
    9. '    ' → logprob: -12.055465698242188
    10. '    
    
' → logprob: -12.055465698242188

Token 39: ' n' (ID: 297)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0026560360565781593
    2. '    
' → logprob: -7.252655982971191
    3. 'result' → logprob: -8.127655982971191
    4. ' key' → logprob: -8.252655982971191
    5. 'name' → logprob: -8.502655982971191
    6. 'print' → logprob: -8.627655982971191
    7. 'user' → logprob: -8.752655982971191
    8. '```' → logprob: -8.877655982971191
    9. 'key' → logprob: -9.627655982971191
    10. ' print' → logprob: -9.627655982971191

Token 40: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.18587733805179596
    2. ',' → logprob: -2.4358773231506348
    3. '_' → logprob: -2.9358773231506348
    4. '=' → logprob: -4.060877323150635
    5. ' ' → logprob: -5.310877323150635
    6. ' ,' → logprob: -6.435877323150635
    7. '[' → logprob: -7.060877323150635
    8. 'um' → logprob: -7.310877323150635
    9. '=int' → logprob: -7.810877323150635
    10. '_space' → logprob: -7.935877323150635

Token 41: ' r' (ID: 428)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.38433775305747986
    2. ' m' → logprob: -2.0093376636505127
    3. ' s' → logprob: -2.7593376636505127
    4. 's' → logprob: -2.8843376636505127
    5. ' ' → logprob: -3.8843376636505127
    6. ' k' → logprob: -4.384337902069092
    7. ' parts' → logprob: -5.009337902069092
    8. 'k' → logprob: -5.134337902069092
    9. 'parts' → logprob: -5.509337902069092
    10. '<|end|>' → logprob: -5.634337902069092

Token 42: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.012522017583251
    2. '=' → logprob: -4.387522220611572
    3. ',' → logprob: -11.637521743774414
    4. ' ' → logprob: -13.012521743774414
    5. ')' → logprob: -14.762521743774414
    6. ' =
' → logprob: -14.887521743774414
    7. ' ,' → logprob: -16.012521743774414
    8. ' =)' → logprob: -16.137521743774414
    9. ' =
' → logprob: -16.262521743774414
    10. '=int' → logprob: -16.387521743774414

Token 43: ' map' (ID: 4014)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.800216019153595
    2. ' int' → logprob: -1.0502159595489502
    3. ' map' → logprob: -1.6752159595489502
    4. 'map' → logprob: -4.800216197967529
    5. ' parts' → logprob: -5.300216197967529
    6. 'parts' → logprob: -7.800216197967529
    7. '   ' → logprob: -12.800215721130371
    8. '[int' → logprob: -13.175215721130371
    9. ' ' → logprob: -13.800215721130371
    10. 'ints' → logprob: -13.800215721130371

Token 44: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.006046708207577467
    2. '(' → logprob: -5.256046772003174
    3. '(lambda' → logprob: -7.506046772003174
    4. '(str' → logprob: -8.631046295166016
    5. 'int' → logprob: -9.881046295166016
    6. '<int' → logprob: -11.381046295166016
    7. '[int' → logprob: -11.756046295166016
    8. ' int' → logprob: -12.381046295166016
    9. '(float' → logprob: -12.756046295166016
    10. '(
' → logprob: -13.631046295166016

Token 45: ',' (ID: 11)
  Prédit: '(parts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(parts' → logprob: -0.005109118297696114
    2. ',' → logprob: -5.8801093101501465
    3. '(' → logprob: -6.1301093101501465
    4. ')' → logprob: -9.380108833312988
    5. ',(' → logprob: -11.630108833312988
    6. ' ,' → logprob: -11.880108833312988
    7. '(part' → logprob: -12.005108833312988
    8. ' (' → logprob: -12.255108833312988
    9. ')(' → logprob: -12.505108833312988
    10. ' parts' → logprob: -13.380108833312988

Token 46: ' parts' (ID: 7881)
  Prédit: ' parts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' parts' → logprob: -0.16092951595783234
    2. 'parts' → logprob: -1.910929560661316
    3. '(parts' → logprob: -7.2859296798706055
    4. ')' → logprob: -11.035929679870605
    5. ' partes' → logprob: -13.785929679870605
    6. ' ' → logprob: -14.285929679870605
    7. '.parts' → logprob: -14.410929679870605
    8. '_parts' → logprob: -14.410929679870605
    9. ' )' → logprob: -14.660929679870605
    10. '   ' → logprob: -15.160929679870605

Token 47: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0012218938209116459
    2. '[' → logprob: -6.751221656799316
    3. ' )' → logprob: -11.001221656799316
    4. '[:' → logprob: -11.001221656799316
    5. ')`' → logprob: -11.751221656799316
    6. '))' → logprob: -12.126221656799316
    7. ')[' → logprob: -14.251221656799316
    8. '   ' → logprob: -14.876221656799316
    9. ' ' → logprob: -15.001221656799316
    10. '`)' → logprob: -15.126221656799316

Token 48: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3077543079853058
    2. '
' → logprob: -2.1827542781829834
    3. '<|end|>' → logprob: -2.3077542781829834
    4. '   ' → logprob: -3.5577542781829834
    5. ':
' → logprob: -4.9327545166015625
    6. '\n' → logprob: -5.8077545166015625
    7. '<|end|>' → logprob: -6.3077545166015625
    8. ' ' → logprob: -6.3077545166015625
    9. ')' → logprob: -6.4327545166015625
    10. '```' → logprob: -6.5577545166015625

Token 49: ' cs' (ID: 14980)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2526010274887085
    2. '<|end|>' → logprob: -2.502601146697998
    3. '
' → logprob: -3.127601146697998
    4. '   ' → logprob: -3.377601146697998
    5. ' ' → logprob: -4.377601146697998
    6. ',' → logprob: -4.377601146697998
    7. ')' → logprob: -4.877601146697998
    8. 'n' → logprob: -5.127601146697998
    9. ':
' → logprob: -5.752601146697998
    10. '[' → logprob: -6.002601146697998

Token 50: ' =' (ID: 314)
  Prédit: 'o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'o' → logprob: -0.58245849609375
    2. ' =' → logprob: -1.58245849609375
    3. '=' → logprob: -2.45745849609375
    4. 'ount' → logprob: -3.45745849609375
    5. 'v' → logprob: -3.83245849609375
    6. 'ost' → logprob: -4.08245849609375
    7. 'ounter' → logprob: -4.20745849609375
    8. 's' → logprob: -4.58245849609375
    9. 'oe' → logprob: -5.08245849609375
    10. '=[]' → logprob: -5.20745849609375

Token 51: ' []
' (ID: 8911)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.9640249013900757
    2. ' [' → logprob: -1.2140249013900757
    3. '[]' → logprob: -1.7140249013900757
    4. ' list' → logprob: -3.0890250205993652
    5. '[' → logprob: -3.0890250205993652
    6. 'list' → logprob: -3.4640250205993652
    7. '[input' → logprob: -5.214025020599365
    8. 'range' → logprob: -5.714025020599365
    9. '[list' → logprob: -5.839025020599365
    10. 'input' → logprob: -6.589025020599365

Token 52: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.21903111040592194
    2. ' for' → logprob: -1.7190310955047607
    3. '<|end|>' → logprob: -5.21903133392334
    4. '   ' → logprob: -5.34403133392334
    5. ' ' → logprob: -5.84403133392334
    6. '[' → logprob: -6.09403133392334
    7. '	for' → logprob: -7.59403133392334
    8. ' 
' → logprob: -7.84403133392334
    9. '    ' → logprob: -8.46903133392334
    10. '    
' → logprob: -8.59403133392334

Token 53: ' while' (ID: 2049)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0822334885597229
    2. ' for' → logprob: -2.582233428955078
    3. '[' → logprob: -6.082233428955078
    4. '   ' → logprob: -7.707233428955078
    5. '	for' → logprob: -8.457233428955078
    6. ' ' → logprob: -8.957233428955078
    7. '    ' → logprob: -9.082233428955078
    8. ')' → logprob: -11.082233428955078
    9. 'while' (adapté à ' while') → logprob: -11.082233428955078
    10. 'n' → logprob: -11.707233428955078

Token 54: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.011284309439361095
    2. 'len' → logprob: -4.636284351348877
    3. ' True' → logprob: -7.386284351348877
    4. ' r' → logprob: -7.636284351348877
    5. ' n' → logprob: -8.636283874511719
    6. 'True' → logprob: -9.511283874511719
    7. '(len' → logprob: -9.886283874511719
    8. ' ' → logprob: -10.011283874511719
    9. 'r' → logprob: -10.511283874511719
    10. ' not' → logprob: -11.636283874511719

Token 55: '(cs' (ID: 89621)
  Prédit: '(cs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cs' → logprob: -9.841743303695694e-05
    2. '(' → logprob: -9.50009822845459
    3. '(c' → logprob: -11.75009822845459
    4. 'cs' → logprob: -12.00009822845459
    5. ' cs' → logprob: -12.25009822845459
    6. '	cs' → logprob: -13.25009822845459
    7. ' (' → logprob: -13.37509822845459
    8. '(Cs' → logprob: -14.62509822845459
    9. '(s' → logprob: -14.87509822845459
    10. 's' → logprob: -16.375099182128906

Token 56: ')' (ID: 8)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.4674471914768219
    2. ')' → logprob: -1.5924471616744995
    3. '<' → logprob: -1.8424471616744995
    4. ')<' → logprob: -4.592447280883789
    5. ' ' → logprob: -7.592447280883789
    6. '()<' → logprob: -8.217447280883789
    7. '<|end|>' → logprob: -8.342447280883789
    8. ' )' → logprob: -8.967447280883789
    9. '<len' → logprob: -10.092447280883789
    10. '<int' → logprob: -10.342447280883789

Token 57: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.3487050533294678
    2. '<' → logprob: -1.2237050533294678
    3. ' ' → logprob: -9.098705291748047
    4. '<n' → logprob: -9.598705291748047
    5. '<len' → logprob: -11.223705291748047
    6. '<size' → logprob: -11.348705291748047
    7. '<num' → logprob: -11.848705291748047
    8. '<class' → logprob: -12.098705291748047
    9. '<int' → logprob: -12.223705291748047
    10. '<com' → logprob: -12.223705291748047

Token 58: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.7970423102378845
    2. ' r' → logprob: -1.0470423698425293
    3. ' n' → logprob: -2.0470423698425293
    4. 'n' → logprob: -2.6720423698425293
    5. ' ' → logprob: -9.047041893005371
    6. '2' → logprob: -12.422041893005371
    7. ' ' → logprob: -12.672041893005371
    8. '	n' → logprob: -13.047041893005371
    9. '1' → logprob: -13.172041893005371
    10. '	r' → logprob: -13.297041893005371

Token 59: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0004973902832716703
    2. ' :' → logprob: -7.750497341156006
    3. ' and' → logprob: -10.750497817993164
    4. ':
' → logprob: -10.750497817993164
    5. '):' → logprob: -11.250497817993164
    6. ':**' → logprob: -12.625497817993164
    7. ',' → logprob: -13.750497817993164
    8. 'and' → logprob: -13.875497817993164
    9. '():' → logprob: -13.875497817993164
    10. '>:' → logprob: -14.375497817993164

Token 60: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.286724716424942
    2. '       ' → logprob: -1.4117246866226196
    3. ' s' → logprob: -6.66172456741333
    4. ':' → logprob: -7.16172456741333
    5. '<|end|>' → logprob: -7.16172456741333
    6. ' cs' → logprob: -7.28672456741333
    7. 's' → logprob: -8.036725044250488
    8. '    
' → logprob: -8.161725044250488
    9. 'cs' → logprob: -8.661725044250488
    10. '	cs' → logprob: -8.911725044250488

Token 61: ' cs' (ID: 14980)
  Prédit: ' cs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cs' → logprob: -0.22094783186912537
    2. ' line' → logprob: -2.470947742462158
    3. '   ' → logprob: -2.970947742462158
    4. 'cs' (adapté à ' cs') → logprob: -3.720947742462158
    5. ' parts' → logprob: -3.970947742462158
    6. '    ' → logprob: -5.220947742462158
    7. '	cs' → logprob: -5.845947742462158
    8. '       ' → logprob: -5.970947742462158
    9. 'line' → logprob: -6.345947742462158
    10. ' s' → logprob: -6.345947742462158

Token 62: '_line' (ID: 14418)
  Prédit: '.extend'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.extend' → logprob: -0.47944799065589905
    2. '.' → logprob: -1.2294479608535767
    3. ' +=' → logprob: -2.604448080062866
    4. '.append' → logprob: -4.479447841644287
    5. '+=' → logprob: -5.979447841644287
    6. ' .' → logprob: -7.979447841644287
    7. '+' → logprob: -8.729448318481445
    8. '.=' → logprob: -10.479448318481445
    9. ' .=' → logprob: -11.229448318481445
    10. '.update' → logprob: -11.479448318481445

Token 63: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.007776394486427307
    2. '=' → logprob: -4.882776260375977
    3. ' +=' → logprob: -8.757776260375977
    4. ' ' → logprob: -12.007776260375977
    5. '.extend' → logprob: -13.132776260375977
    6. 's' → logprob: -13.382776260375977
    7. '+=' → logprob: -13.757776260375977
    8. '.' → logprob: -14.507776260375977
    9. ' .=' → logprob: -14.507776260375977
    10. '=line' → logprob: -15.507776260375977

Token 64: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.1473924070596695
    2. 'sys' → logprob: -2.272392511367798
    3. ' input' → logprob: -3.772392511367798
    4. 'input' → logprob: -4.522392272949219
    5. '   ' → logprob: -10.897392272949219
    6. '=sys' → logprob: -10.897392272949219
    7. ' ' → logprob: -11.272392272949219
    8. ' list' → logprob: -11.272392272949219
    9. '	sys' → logprob: -11.272392272949219
    10. 'list' → logprob: -11.397392272949219

Token 65: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.00024548539659008384
    2. 'stdin' → logprob: -8.875245094299316
    3. '.stdout' → logprob: -9.500245094299316
    4. '.readline' → logprob: -10.500245094299316
    5. '.argv' → logprob: -13.625245094299316
    6. '.' → logprob: -13.875245094299316
    7. '.stderr' → logprob: -14.625245094299316
    8. '.std' → logprob: -14.875245094299316
    9. 'in' → logprob: -16.125246047973633
    10. '(stdin' → logprob: -16.125246047973633

Token 66: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -5.157039049663581e-05
    2. '.' → logprob: -9.875051498413086
    3. '.readlines' → logprob: -16.250051498413086
    4. ' readline' → logprob: -17.625051498413086
    5. '.rstrip' → logprob: -19.750051498413086
    6. '.read' → logprob: -19.750051498413086
    7. ' .' → logprob: -19.875051498413086
    8. '.stdin' → logprob: -20.625051498413086
    9. '.fetchone' → logprob: -21.000051498413086
    10. '.next' → logprob: -21.875051498413086

Token 67: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.5759869813919067
    2. '().' → logprob: -0.8259869813919067
    3. '(' → logprob: -11.075986862182617
    4. '())' → logprob: -11.825986862182617
    5. '()
' → logprob: -11.950986862182617
    6. ' ()' → logprob: -12.075986862182617
    7. ' ().' → logprob: -12.825986862182617
    8. '()

' → logprob: -13.325986862182617
    9. '()`' → logprob: -13.575986862182617
    10. '()<' → logprob: -13.700986862182617

Token 68: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.00014609156642109156
    2. 'rstrip' → logprob: -9.00014591217041
    3. 'split' → logprob: -10.75014591217041
    4. ' strip' → logprob: -13.75014591217041
    5. '.strip' → logprob: -17.250146865844727
    6. '_strip' → logprob: -18.875146865844727
    7. '(strip' → logprob: -19.250146865844727
    8. 'stripe' → logprob: -20.500146865844727
    9. '-strip' → logprob: -20.625146865844727
    10. 'str' → logprob: -20.875146865844727

Token 69: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0007386347278952599
    2. '().' → logprob: -7.250738620758057
    3. '(' → logprob: -10.875739097595215
    4. '('' → logprob: -13.500739097595215
    5. '()`' → logprob: -13.625739097595215
    6. '()>' → logprob: -14.125739097595215
    7. '())' → logprob: -14.250739097595215
    8. '().'' → logprob: -14.250739097595215
    9. '()='' → logprob: -14.250739097595215
    10. '()"' → logprob: -14.625739097595215

Token 70: '       ' (ID: 309)
  Prédit: '.split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.split' → logprob: -0.54422527551651
    2. '().' → logprob: -1.2942252159118652
    3. '<|end|>' → logprob: -2.5442252159118652
    4. '   ' → logprob: -3.6692252159118652
    5. '()' → logprob: -4.169225215911865
    6. 'split' → logprob: -5.044225215911865
    7. '<|end|>' → logprob: -5.419225215911865
    8. '       ' → logprob: -5.419225215911865
    9. ' .' → logprob: -5.919225215911865
    10. ')' → logprob: -6.294225215911865

Token 71: ' cs' (ID: 14980)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.2213257551193237
    2. '   ' → logprob: -1.5963257551193237
    3. 'cs' (adapté à ' cs') → logprob: -1.8463257551193237
    4. '<|end|>' → logprob: -1.8463257551193237
    5. ' if' → logprob: -2.3463258743286133
    6. '       ' → logprob: -2.8463258743286133
    7. 'split' → logprob: -4.471325874328613
    8. '<|end|>' → logprob: -5.596325874328613
    9. 'tokens' → logprob: -5.721325874328613
    10. ' cs' → logprob: -6.221325874328613

Token 72: '.extend' (ID: 34151)
  Prédit: '.extend'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.extend' → logprob: -0.1623149812221527
    2. '+=' → logprob: -2.5373148918151855
    3. ' +=' → logprob: -2.9123148918151855
    4. '.' → logprob: -4.1623148918151855
    5. ' .' → logprob: -8.037315368652344
    6. '+' → logprob: -8.412315368652344
    7. '=' → logprob: -9.412315368652344
    8. '.=' → logprob: -9.912315368652344
    9. 'extend' → logprob: -10.037315368652344
    10. '.split' → logprob: -10.787315368652344

Token 73: '(map' (ID: 16946)
  Prédit: '(cs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cs' → logprob: -0.009567778557538986
    2. '(map' → logprob: -5.009567737579346
    3. '(list' → logprob: -6.134567737579346
    4. '(' → logprob: -7.384567737579346
    5. '(c' → logprob: -10.759568214416504
    6. '(int' → logprob: -11.009568214416504
    7. '([' → logprob: -11.384568214416504
    8. '(sys' → logprob: -12.509568214416504
    9. 'cs' → logprob: -13.259568214416504
    10. '	cs' → logprob: -14.009568214416504

Token 74: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0012388024479150772
    2. '(' → logprob: -6.751238822937012
    3. '(lambda' → logprob: -9.876238822937012
    4. 'int' → logprob: -11.751238822937012
    5. ' (' → logprob: -13.251238822937012
    6. '[int' → logprob: -13.376238822937012
    7. '(str' → logprob: -13.376238822937012
    8. '<int' → logprob: -13.876238822937012
    9. '(
' → logprob: -14.126238822937012
    10. ',int' → logprob: -14.251238822937012

Token 75: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06552665680646896
    2. '(cs' → logprob: -2.8155267238616943
    3. ',c' → logprob: -6.815526485443115
    4. '(' → logprob: -7.190526485443115
    5. ',(' → logprob: -7.815526485443115
    6. 'cs' → logprob: -7.940526485443115
    7. ' ,' → logprob: -8.190526962280273
    8. ')(' → logprob: -8.565526962280273
    9. '<|end|>' → logprob: -9.190526962280273
    10. '(),' → logprob: -9.940526962280273

Token 76: ' cs' (ID: 14980)
  Prédit: 'cs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cs' → logprob: -0.01876305416226387
    2. ' cs' → logprob: -4.018763065338135
    3. '(cs' → logprob: -7.518763065338135
    4. '	cs' → logprob: -10.143762588500977
    5. 'csrf' → logprob: -10.643762588500977
    6. '_cs' → logprob: -12.893762588500977
    7. ' ' → logprob: -14.018762588500977
    8. '   ' → logprob: -14.268762588500977
    9. 'csr' → logprob: -14.268762588500977
    10. ')' → logprob: -14.268762588500977

Token 77: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.000657154421787709
    2. ')_' → logprob: -8.625657081604004
    3. '_LINE' → logprob: -8.750657081604004
    4. '))' → logprob: -9.000657081604004
    5. '._' → logprob: -9.250657081604004
    6. '.readline' → logprob: -10.500657081604004
    7. ')' → logprob: -10.875657081604004
    8. '   ' → logprob: -11.125657081604004
    9. ')))' → logprob: -12.125657081604004
    10. 'Line' → logprob: -12.625657081604004

Token 78: '.split' (ID: 10347)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.05847156047821045
    2. '.split' → logprob: -2.9334716796875
    3. ' .' → logprob: -6.5584716796875
    4. '.' → logprob: -6.6834716796875
    5. '.strip' → logprob: -7.0584716796875
    6. '()' → logprob: -10.6834716796875
    7. ' ().' → logprob: -11.1834716796875
    8. ')' → logprob: -11.9334716796875
    9. '.rstrip' → logprob: -13.1834716796875
    10. 'split' → logprob: -13.1834716796875

Token 79: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.12319006770849228
    2. '))' → logprob: -2.24819016456604
    3. '()' → logprob: -5.123189926147461
    4. '())' → logprob: -5.873189926147461
    5. '()))
' → logprob: -6.748189926147461
    6. '(' → logprob: -8.748189926147461
    7. ')' → logprob: -8.873189926147461
    8. '))
' → logprob: -11.248189926147461
    9. '()))

' → logprob: -11.248189926147461
    10. '()));' → logprob: -11.623189926147461

Token 80: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14254438877105713
    2. '<|end|>' → logprob: -2.2675442695617676
    3. '    
' → logprob: -3.8925442695617676
    4. '
' → logprob: -5.392544269561768
    5. '```' → logprob: -6.517544269561768
    6. '#' → logprob: -7.142544269561768
    7. 'print' → logprob: -7.142544269561768
    8. '<|end|>' → logprob: -8.267544746398926
    9. ')' → logprob: -8.767544746398926
    10. 'for' → logprob: -9.142544746398926

Token 81: ' deck' (ID: 16942)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5301748514175415
    2. '<|end|>' → logprob: -1.0301748514175415
    3. '
' → logprob: -3.905174732208252
    4. ')' → logprob: -4.655174732208252
    5. '    
' → logprob: -4.780174732208252
    6. '[' → logprob: -5.280174732208252
    7. '#' → logprob: -6.155174732208252
    8. '<|end|>' → logprob: -6.780174732208252
    9. '    ' → logprob: -7.155174732208252
    10. '```' → logprob: -7.405174732208252

Token 82: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08207789808511734
    2. '=' → logprob: -2.582077980041504
    3. '[' → logprob: -6.957077980041504
    4. '[:]' → logprob: -7.457077980041504
    5. '.' → logprob: -7.707077980041504
    6. '_' → logprob: -8.082077980041504
    7. 's' → logprob: -8.332077980041504
    8. '.append' → logprob: -8.832077980041504
    9. '[:' → logprob: -9.082077980041504
    10. ',' → logprob: -9.457077980041504

Token 83: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.40271779894828796
    2. ' list' → logprob: -1.4027178287506104
    3. 'cs' → logprob: -3.2777178287506104
    4. '[' → logprob: -4.027717590332031
    5. ' [' → logprob: -4.777717590332031
    6. '[list' → logprob: -4.902717590332031
    7. ' cs' → logprob: -5.527717590332031
    8. 'set' → logprob: -5.527717590332031
    9. 'sorted' → logprob: -6.277717590332031
    10. '[]' → logprob: -6.777717590332031

Token 84: '(range' (ID: 50017)
  Prédit: '(range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -4.191489642835222e-05
    2. '(' → logprob: -10.500041961669922
    3. '(deck' → logprob: -11.500041961669922
    4. 'range' → logprob: -12.750041961669922
    5. '(re' → logprob: -14.750041961669922
    6. '(set' → logprob: -15.250041961669922
    7. '(map' → logprob: -15.875041961669922
    8. '(filter' → logprob: -16.500041961669922
    9. '(com' → logprob: -16.500041961669922
    10. '()' → logprob: -16.625041961669922

Token 85: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.12743008136749268
    2. '(n' → logprob: -2.127429962158203
    3. ' (' → logprob: -7.627429962158203
    4. '   ' → logprob: -12.502429962158203
    5. ' ' → logprob: -13.127429962158203
    6. ')' → logprob: -13.252429962158203
    7. '(len' → logprob: -13.252429962158203
    8. ' n' → logprob: -13.627429962158203
    9. '1' → logprob: -13.877429962158203
    10. 'n' → logprob: -14.502429962158203

Token 86: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.00025645215646363795
    2. ' ))' → logprob: -8.750256538391113
    3. '))
' → logprob: -9.875256538391113
    4. ')' → logprob: -10.875256538391113
    5. '-' → logprob: -11.125256538391113
    6. '))

' → logprob: -12.500256538391113
    7. ',' → logprob: -13.000256538391113
    8. ' ' → logprob: -13.125256538391113
    9. ' -' → logprob: -13.625256538391113
    10. ')))' → logprob: -13.625256538391113

Token 87: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.017605677247047424
    2. ' for' → logprob: -5.142605781555176
    3. 'for' → logprob: -5.142605781555176
    4. 'indices' → logprob: -7.017605781555176
    5. ')' → logprob: -7.142605781555176
    6. '    
' → logprob: -7.267605781555176
    7. 'deck' → logprob: -7.767605781555176
    8. '<|end|>' → logprob: -7.767605781555176
    9. 'while' → logprob: -8.017605781555176
    10. 'def' → logprob: -8.017605781555176

Token 88: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.8227879405021667
    2. '   ' → logprob: -1.5727880001068115
    3. 'for' (adapté à ' for') → logprob: -1.5727880001068115
    4. ')' → logprob: -3.9477880001068115
    5. 'i' → logprob: -4.322787761688232
    6. 'def' → logprob: -4.447787761688232
    7. 'indices' → logprob: -4.447787761688232
    8. 'idx' → logprob: -4.572787761688232
    9. '```' → logprob: -5.197787761688232
    10. 'selected' → logprob: -5.322787761688232

Token 89: ' c' (ID: 274)
  Prédit: ' _'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.418477863073349
    2. ' i' → logprob: -1.1684778928756714
    3. '_' → logprob: -4.543478012084961
    4. ' c' → logprob: -5.043478012084961
    5. 'i' → logprob: -5.168478012084961
    6. '_i' → logprob: -5.668478012084961
    7. ' r' → logprob: -5.793478012084961
    8. ' ' → logprob: -7.668478012084961
    9. ' card' → logprob: -7.918478012084961
    10. 'r' → logprob: -8.543478012084961

Token 90: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0023796886671334505
    2. 's' → logprob: -7.002379894256592
    3. 'ount' → logprob: -7.502379894256592
    4. ' ' → logprob: -7.752379894256592
    5. 'in' → logprob: -7.752379894256592
    6. ',' → logprob: -11.002379417419434
    7. '   ' → logprob: -11.752379417419434
    8. '  ' → logprob: -12.502379417419434
    9. 'a' → logprob: -13.002379417419434
    10. 'i' → logprob: -13.252379417419434

Token 91: ' cs' (ID: 14980)
  Prédit: ' cs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cs' → logprob: -0.0010786604834720492
    2. 'cs' → logprob: -7.3760786056518555
    3. ' range' → logprob: -8.376078605651855
    4. ' ' → logprob: -9.751078605651855
    5. ' reversed' → logprob: -9.876078605651855
    6. ' deck' → logprob: -10.376078605651855
    7. '(cs' → logprob: -10.626078605651855
    8. '	cs' → logprob: -10.751078605651855
    9. '   ' → logprob: -11.626078605651855
    10. '[' → logprob: -11.626078605651855

Token 92: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.001257376279681921
    2. ' :' → logprob: -6.876257419586182
    3. '):' → logprob: -10.001256942749023
    4. '<|end|>' → logprob: -10.001256942749023
    5. ':**' → logprob: -10.501256942749023
    6. ' in' → logprob: -11.001256942749023
    7. ',' → logprob: -11.001256942749023
    8. '[::-' → logprob: -11.376256942749023
    9. '.' → logprob: -12.001256942749023
    10. 's' → logprob: -12.126256942749023

Token 93: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008946981281042099
    2. 'deck' → logprob: -5.508946895599365
    3. ' deck' → logprob: -6.258946895599365
    4. '   ' → logprob: -6.508946895599365
    5. '        
' → logprob: -8.133947372436523
    6. ' if' → logprob: -8.508947372436523
    7. '    
' → logprob: -9.508947372436523
    8. '<|end|>' → logprob: -9.508947372436523
    9. '(deck' → logprob: -9.508947372436523
    10. '```' → logprob: -9.758947372436523

Token 94: ' half' (ID: 6375)
  Prédit: ' deck'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' deck' → logprob: -0.08532745391130447
    2. 'deck' → logprob: -2.585327386856079
    3. '   ' → logprob: -6.710327625274658
    4. ' temp' → logprob: -7.335327625274658
    5. ' card' → logprob: -7.335327625274658
    6. ' i' → logprob: -7.585327625274658
    7. ' pos' → logprob: -7.960327625274658
    8. ' d' → logprob: -8.0853271484375
    9. ' x' → logprob: -8.2103271484375
    10. ' idx' → logprob: -8.2103271484375

Token 95: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.040863484144210815
    2. '=' → logprob: -3.665863513946533
    3. '_size' → logprob: -4.915863513946533
    4. '_point' → logprob: -6.540863513946533
    5. ',' → logprob: -6.915863513946533
    6. '_' → logprob: -7.290863513946533
    7. '_len' → logprob: -7.290863513946533
    8. '_de' → logprob: -7.290863513946533
    9. '1' → logprob: -7.290863513946533
    10. 'deck' → logprob: -7.790863513946533

Token 96: ' (' (ID: 350)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.5084798336029053
    2. ' len' → logprob: -1.7584798336029053
    3. ' n' → logprob: -1.8834798336029053
    4. 'n' → logprob: -2.6334798336029053
    5. '(len' → logprob: -7.008480072021484
    6. ' (' → logprob: -7.383480072021484
    7. '[len' → logprob: -7.758480072021484
    8. '[n' → logprob: -8.508480072021484
    9. '(n' → logprob: -10.008480072021484
    10. ' ' → logprob: -10.133480072021484

Token 97: 'n' (ID: 77)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.7517202496528625
    2. 'n' → logprob: -1.6267201900482178
    3. ' len' → logprob: -1.6267201900482178
    4. ' n' → logprob: -2.0017201900482178
    5. '(len' → logprob: -10.001720428466797
    6. ' (' → logprob: -10.126720428466797
    7. ' ' → logprob: -10.626720428466797
    8. ')' → logprob: -10.751720428466797
    9. ')n' → logprob: -11.251720428466797
    10. '   ' → logprob: -11.439220428466797

Token 98: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.21292249858379364
    2. '+' → logprob: -1.83792245388031
    3. ' //' → logprob: -3.9629225730895996
    4. ')' → logprob: -4.7129225730896
    5. ' ' → logprob: -6.2129225730896
    6. ' )' → logprob: -6.3379225730896
    7. '   ' → logprob: -7.9629225730896
    8. '//' → logprob: -8.087922096252441
    9. ')//' → logprob: -9.462922096252441
    10. ' -' → logprob: -10.462922096252441

Token 99: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1003219410777092
    2. ' ' → logprob: -2.3503220081329346
    3. ' c' → logprob: -9.350321769714355
    4. 'c' → logprob: -11.100321769714355
    5. ' (' → logprob: -12.412821769714355
    6. '
' → logprob: -13.787821769714355
    7. '(' → logprob: -14.037821769714355
    8. '```' → logprob: -14.225321769714355
    9. ' ' → logprob: -14.287821769714355
    10. '   ' → logprob: -14.537821769714355

Token 100: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.317247167928144e-05
    2. ' ' → logprob: -9.625093460083008
    3. 'c' → logprob: -10.625093460083008
    4. ' c' → logprob: -14.125093460083008
    5. '(c' → logprob: -14.937593460083008
    6. '(' → logprob: -15.125093460083008
    7. '
' → logprob: -15.125093460083008
    8. '   ' → logprob: -15.312593460083008
    9. '0' → logprob: -15.750093460083008
    10. '7' → logprob: -16.437593460083008

Token 101: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.023331431671977043
    2. ')//' → logprob: -3.7733314037323
    3. ' )' → logprob: -9.773331642150879
    4. '//' → logprob: -10.773331642150879
    5. ')>>' → logprob: -12.398331642150879
    6. ' //' → logprob: -13.148331642150879
    7. '   ' → logprob: -13.773331642150879
    8. '2' → logprob: -15.898331642150879
    9. ')/' → logprob: -16.023330688476562
    10. ')
' → logprob: -16.148330688476562

Token 102: ' //' (ID: 602)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.6997467279434204
    2. ' //' → logprob: -0.6997467279434204
    3. ')' → logprob: -5.324746608734131
    4. ')//' → logprob: -6.824746608734131
    5. '   ' → logprob: -8.824747085571289
    6. ' ' → logprob: -9.199747085571289
    7. '2' → logprob: -9.199747085571289
    8. '```' → logprob: -9.199747085571289
    9. '       ' → logprob: -9.574747085571289
    10. '>>' → logprob: -10.574747085571289

Token 103: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.11282442510128021
    2. ' ' → logprob: -2.2378244400024414
    3. '   ' → logprob: -14.487824440002441
    4. '```' → logprob: -14.925324440002441
    5. '3' → logprob: -15.487824440002441
    6. '4' → logprob: -15.675324440002441
    7. '  ' → logprob: -15.800324440002441
    8. 'c' → logprob: -16.487823486328125
    9. '    ' → logprob: -16.487823486328125
    10. ' ' → logprob: -16.800323486328125

Token 104: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00011236425780225545
    2. ' ' → logprob: -9.125112533569336
    3. '   ' → logprob: -13.125112533569336
    4. '```' → logprob: -15.187612533569336
    5. '  ' → logprob: -15.437612533569336
    6. '3' → logprob: -15.812612533569336
    7. '    ' → logprob: -16.250112533569336
    8. '

' → logprob: -16.250112533569336
    9. '
' → logprob: -16.437612533569336
    10. '     ' → logprob: -16.500112533569336

Token 105: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5896849036216736
    2. '       ' → logprob: -0.9646849036216736
    3. '<|end|>' → logprob: -2.8396849632263184
    4. '        
' → logprob: -6.214684963226318
    5. '   ' → logprob: -7.589684963226318
    6. ' 
' → logprob: -7.714684963226318
    7. '
' → logprob: -7.839684963226318
    8. ',' → logprob: -7.964684963226318
    9. '<|end|>' → logprob: -8.08968448638916
    10. '  
' → logprob: -8.33968448638916

Token 106: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1480204463005066
    2. '<|end|>' → logprob: -2.2730205059051514
    3. '
' → logprob: -3.8980205059051514
    4. '   ' → logprob: -5.148020267486572
    5. ' if' → logprob: -6.023020267486572
    6. ' ' → logprob: -6.398020267486572
    7. '        
' → logprob: -6.523020267486572
    8. '<|end|>' → logprob: -7.148020267486572
    9. ' 
' → logprob: -7.273020267486572
    10. '    
' → logprob: -8.14802074432373

Token 107: ' A' (ID: 355)
  Prédit: ' top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' top' → logprob: -0.6417689323425293
    2. 'deck' → logprob: -1.6417689323425293
    3. 'top' → logprob: -2.3917689323425293
    4. ' deck' → logprob: -2.6417689323425293
    5. ' new' → logprob: -3.1417689323425293
    6. ' left' → logprob: -3.8917689323425293
    7. 'new' → logprob: -4.391768932342529
    8. ' first' → logprob: -4.516768932342529
    9. 'left' → logprob: -4.641768932342529
    10. 'first' → logprob: -5.016768932342529

Token 108: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.029130419716238976
    2. ',' → logprob: -3.779130458831787
    3. '=' → logprob: -5.154130458831787
    4. '   ' → logprob: -11.029129981994629
    5. ' ,' → logprob: -11.154129981994629
    6. ' ' → logprob: -12.029129981994629
    7. '=[]' → logprob: -12.029129981994629
    8. 'fter' → logprob: -12.029129981994629
    9. '=A' → logprob: -12.279129981994629
    10. 'lice' → logprob: -12.529129981994629

Token 109: ' deck' (ID: 16942)
  Prédit: ' deck'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' deck' → logprob: -0.22557418048381805
    2. 'deck' → logprob: -1.6005741357803345
    3. '(deck' → logprob: -8.975574493408203
    4. ' ' → logprob: -11.725574493408203
    5. 'de' → logprob: -11.975574493408203
    6. '[' → logprob: -11.975574493408203
    7. '.deck' → logprob: -12.600574493408203
    8. ' [' → logprob: -13.225574493408203
    9. '   ' → logprob: -13.350574493408203
    10. 'deque' → logprob: -13.975574493408203

Token 110: '[-' (ID: 17503)
  Prédit: '[:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[:' → logprob: -0.00023631771910004318
    2. '[' → logprob: -8.375236511230469
    3. ':' → logprob: -12.625236511230469
    4. '[:]' → logprob: -13.375236511230469
    5. ' [:' → logprob: -15.250236511230469
    6. '   ' → logprob: -15.375236511230469
    7. '
' → logprob: -16.00023651123047
    8. '[
' → logprob: -16.75023651123047
    9. '	' → logprob: -17.12523651123047
    10. '][:' → logprob: -17.37523651123047

Token 111: 'half' (ID: 52836)
  Prédit: 'half'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'half' → logprob: -0.08249597996473312
    2. 'c' → logprob: -2.582495927810669
    3. '(' → logprob: -6.457496166229248
    4. 'n' → logprob: -7.082496166229248
    5. ' half' → logprob: -7.332496166229248
    6. '(c' → logprob: -8.95749568939209
    7. ' (' → logprob: -8.95749568939209
    8. ' c' → logprob: -9.70749568939209
    9. 'hal' → logprob: -9.83249568939209
    10. '(n' → logprob: -10.45749568939209

Token 112: ':]' (ID: 67377)
  Prédit: ':]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':]' → logprob: -0.000473091087769717
    2. ':' → logprob: -8.500473022460938
    3. ' :]' → logprob: -9.000473022460938
    4. ':]
' → logprob: -9.250473022460938
    5. ':],' → logprob: -10.625473022460938
    6. ':]

' → logprob: -11.750473022460938
    7. ']' → logprob: -12.250473022460938
    8. '-' → logprob: -12.875473022460938
    9. ':].' → logprob: -12.875473022460938
    10. ' :' → logprob: -13.000473022460938

Token 113: '  ' (ID: 256)
  Prédit: '[::-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[::-' → logprob: -0.6321819424629211
    2. '       ' → logprob: -1.0071818828582764
    3. '<|end|>' → logprob: -3.0071818828582764
    4. '
' → logprob: -3.2571818828582764
    5. '[' → logprob: -5.3821821212768555
    6. ' +' → logprob: -5.5071821212768555
    7. '+' → logprob: -6.3821821212768555
    8. '   ' → logprob: -6.6321821212768555
    9. '        
' → logprob: -7.3821821212768555
    10. ' 
' → logprob: -7.5071821212768555

Token 114: ' #' (ID: 1069)
  Prédit: '[::-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[::-' → logprob: -0.07728669792413712
    2. '       ' → logprob: -3.077286720275879
    3. '<|end|>' → logprob: -4.327286720275879
    4. '[' → logprob: -4.327286720275879
    5. ' +' → logprob: -7.577286720275879
    6. '+' → logprob: -7.827286720275879
    7. '
' → logprob: -7.952286720275879
    8. '[:' → logprob: -9.327286720275879
    9. '[:]' → logprob: -9.327286720275879
    10. '<|end|>' → logprob: -9.827286720275879

Token 115: ' top' (ID: 2344)
  Prédit: ' deck'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' deck' → logprob: -0.7289338111877441
    2. 'deck' → logprob: -0.9789338111877441
    3. '[::-' → logprob: -2.978933811187744
    4. ' A' → logprob: -3.353933811187744
    5. '[' → logprob: -4.103933811187744
    6. 'A' → logprob: -4.478933811187744
    7. ' [' → logprob: -5.103933811187744
    8. '[:' → logprob: -5.603933811187744
    9. '   ' → logprob: -5.978933811187744
    10. ' reverse' → logprob: -6.228933811187744

Token 116: ' half' (ID: 6375)
  Prédit: 'half'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'half' → logprob: -0.1971985399723053
    2. ' half' → logprob: -1.822198510169983
    3. '_half' → logprob: -5.447198390960693
    4. '+' → logprob: -5.572198390960693
    5. '-half' → logprob: -6.197198390960693
    6. 'deck' → logprob: -6.447198390960693
    7. '<|end|>' → logprob: -7.197198390960693
    8. ' +' → logprob: -7.322198390960693
    9. '[' → logprob: -7.447198390960693
    10. '[::-' → logprob: -7.572198390960693

Token 117: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6135148406028748
    2. '       ' → logprob: -1.4885149002075195
    3. '<|end|>' → logprob: -1.9885149002075195
    4. '[::-' → logprob: -2.4885149002075195
    5. '[' → logprob: -5.8635149002075195
    6. '        
' → logprob: -6.6135149002075195
    7. ' 
' → logprob: -6.7385149002075195
    8. '  
' → logprob: -6.8635149002075195
    9. '<|end|>' → logprob: -6.9885149002075195
    10. ' +' → logprob: -7.1135149002075195

Token 118: ' deck' (ID: 16942)
  Prédit: 'deck'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deck' → logprob: -0.16470517218112946
    2. ' deck' → logprob: -2.414705276489258
    3. '<|end|>' → logprob: -3.289705276489258
    4. '[::-' → logprob: -4.414705276489258
    5. '(deck' → logprob: -4.914705276489258
    6. 'A' → logprob: -6.164705276489258
    7. '<|end|>' → logprob: -7.414705276489258
    8. '
' → logprob: -7.539705276489258
    9. '   ' → logprob: -7.664705276489258
    10. ' A' → logprob: -7.914705276489258

Token 119: ' A' (ID: 355)
  Prédit: '[:-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[:-' → logprob: -0.39549770951271057
    2. '[:' → logprob: -1.5204976797103882
    3. '=' → logprob: -2.8954977989196777
    4. ' =' → logprob: -3.2704977989196777
    5. '[-' → logprob: -5.145497798919678
    6. '[' → logprob: -5.270497798919678
    7. '[len' → logprob: -6.895497798919678
    8. '[n' → logprob: -7.020497798919678
    9. '[::-' → logprob: -7.145497798919678
    10. '[:]' → logprob: -7.270497798919678

Token 120: ' (' (ID: 350)
  Prédit: '[::-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[::-' → logprob: -0.7618609666824341
    2. '       ' → logprob: -1.011860966682434
    3. '<|end|>' → logprob: -2.0118608474731445
    4. '[' → logprob: -4.6368608474731445
    5. ' +' → logprob: -5.1368608474731445
    6. '[:' → logprob: -5.3868608474731445
    7. '
' → logprob: -5.5118608474731445
    8. '+' → logprob: -6.0118608474731445
    9. ',' → logprob: -6.1368608474731445
    10. '[:-' → logprob: -6.6368608474731445

Token 121: 'top' (ID: 8169)
  Prédit: '[::-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[::-' → logprob: -0.4584812819957733
    2. ':' → logprob: -1.7084813117980957
    3. ')' → logprob: -1.9584813117980957
    4. ')
' → logprob: -4.083481311798096
    5. '::-' → logprob: -5.583481311798096
    6. ' :' → logprob: -5.708481311798096
    7. '
' → logprob: -6.083481311798096
    8. ':)' → logprob: -6.083481311798096
    9. '[:' → logprob: -6.458481311798096
    10. 'reverse' → logprob: -6.708481311798096

Token 122: ' is' (ID: 382)
  Prédit: ' half'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' half' → logprob: -0.891268789768219
    2. 'half' → logprob: -1.8912687301635742
    3. ')' → logprob: -2.016268730163574
    4. '[::-' → logprob: -2.016268730163574
    5. ' of' → logprob: -3.266268730163574
    6. ' part' → logprob: -3.516268730163574
    7. ' to' → logprob: -4.391268730163574
    8. ' =' → logprob: -4.641268730163574
    9. '[:' → logprob: -4.766268730163574
    10. '=' → logprob: -5.016268730163574

Token 123: ' right' (ID: 1849)
  Prédit: 'deck'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'deck' → logprob: -0.9680283665657043
    2. ' deck' → logprob: -1.4680283069610596
    3. ' at' → logprob: -1.5930283069610596
    4. 'end' → logprob: -3.0930283069610596
    5. 'A' → logprob: -3.2180283069610596
    6. '[' → logprob: -3.9680283069610596
    7. '0' → logprob: -4.093028545379639
    8. 'left' → logprob: -4.718028545379639
    9. ' A' → logprob: -4.968028545379639
    10. ' end' → logprob: -5.093028545379639

Token 124: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06770579516887665
    2. '[' → logprob: -3.5677058696746826
    3. 'most' → logprob: -3.9427058696746826
    4. ' to' → logprob: -5.6927056312561035
    5. 'to' → logprob: -5.6927056312561035
    6. ' end' → logprob: -6.0677056312561035
    7. 'end' → logprob: -6.3177056312561035
    8. ')
' → logprob: -6.8177056312561035
    9. '[:]' → logprob: -7.0677056312561035
    10. '[:-' → logprob: -7.3177056312561035

Token 125: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4967309534549713
    2. '<|end|>' → logprob: -1.496730923652649
    3. '
' → logprob: -1.871730923652649
    4. '   ' → logprob: -4.871730804443359
    5. '        
' → logprob: -6.246730804443359
    6. ',' → logprob: -6.996730804443359
    7. '  
' → logprob: -7.496730804443359
    8. ' ' → logprob: -7.621730804443359
    9. '<|end|>' → logprob: -7.746730804443359
    10. '    
' → logprob: -7.996730804443359

Token 126: ' B' (ID: 418)
  Prédit: ' B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' B' → logprob: -0.3911036252975464
    2. 'B' (adapté à ' B') → logprob: -1.1411036252975464
    3. '   ' → logprob: -6.016103744506836
    4. 'deck' → logprob: -7.391103744506836
    5. '<|end|>' → logprob: -7.891103744506836
    6. ' deck' → logprob: -8.641103744506836
    7. '    ' → logprob: -8.766103744506836
    8. ' ' → logprob: -8.891103744506836
    9. ' rest' → logprob: -9.641103744506836
    10. '       ' → logprob: -9.891103744506836

Token 127: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08894272893667221
    2. '=' → logprob: -2.463942766189575
    3. ' ' → logprob: -13.588942527770996
    4. ',' → logprob: -13.963942527770996
    5. '   ' → logprob: -14.463942527770996
    6. '<|end|>' → logprob: -16.338943481445312
    7. ')' → logprob: -16.776443481445312
    8. ' =
' → logprob: -16.901443481445312
    9. '  ' → logprob: -17.026443481445312
    10. '    ' → logprob: -17.088943481445312

Token 128: ' deck' (ID: 16942)
  Prédit: 'deck'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deck' → logprob: -0.17992337048053741
    2. ' deck' → logprob: -1.804923415184021
    3. ' ' → logprob: -9.554923057556152
    4. '(deck' → logprob: -10.554923057556152
    5. '   ' → logprob: -10.929923057556152
    6. '[' → logprob: -11.054923057556152
    7. 'de' → logprob: -11.304923057556152
    8. 'deque' → logprob: -11.992423057556152
    9. 'd' → logprob: -12.804923057556152
    10. '  ' → logprob: -12.804923057556152

Token 129: '[:' (ID: 7808)
  Prédit: '[:-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:-' → logprob: -0.01838335394859314
    2. '[:' → logprob: -4.018383502960205
    3. '[' → logprob: -8.768383026123047
    4. '[-' → logprob: -9.518383026123047
    5. ':' → logprob: -12.643383026123047
    6. ':-' → logprob: -14.518383026123047
    7. '[:]' → logprob: -15.143383026123047
    8. '[::-' → logprob: -16.393383026123047
    9. ' [:' → logprob: -17.268383026123047
    10. '
' → logprob: -17.268383026123047

Token 130: 'n' (ID: 77)
  Prédit: '-half'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-half' → logprob: -1.04918372631073
    2. 'half' → logprob: -1.17418372631073
    3. ' -' → logprob: -1.54918372631073
    4. '-n' → logprob: -2.9241838455200195
    5. '-' → logprob: -3.2991838455200195
    6. '-(' → logprob: -3.9241838455200195
    7. ' half' → logprob: -4.7991838455200195
    8. 'n' → logprob: -5.0491838455200195
    9. ' n' → logprob: -7.5491838455200195
    10. '(' → logprob: -7.5491838455200195

Token 131: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.1656651347875595
    2. '-half' → logprob: -2.0406651496887207
    3. '-' → logprob: -3.7906651496887207
    4. '-n' → logprob: -9.790664672851562
    5. '-hal' → logprob: -10.040664672851562
    6. ' ' → logprob: -11.915664672851562
    7. ' half' → logprob: -12.290664672851562
    8. '   ' → logprob: -12.790664672851562
    9. '-full' → logprob: -12.915664672851562
    10. '-cut' → logprob: -12.915664672851562

Token 132: ' half' (ID: 6375)
  Prédit: 'half'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'half' → logprob: -0.00043233807082287967
    2. ' half' → logprob: -7.75043249130249
    3. 'hal' → logprob: -14.250432014465332
    4. '_half' → logprob: -15.250432014465332
    5. '   ' → logprob: -15.375432014465332
    6. '-half' → logprob: -15.875432014465332
    7. ' ' → logprob: -16.00043296813965
    8. '(' → logprob: -16.37543296813965
    9. '  ' → logprob: -17.00043296813965
    10. ' (' → logprob: -17.25043296813965

Token 133: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0013879702892154455
    2. ' ]' → logprob: -6.626388072967529
    3. ']
' → logprob: -10.376387596130371
    4. '   ' → logprob: -10.751387596130371
    5. '       ' → logprob: -12.626387596130371
    6. ' ' → logprob: -13.626387596130371
    7. ']

' → logprob: -13.876387596130371
    8. ':]' → logprob: -13.876387596130371
    9. '  ' → logprob: -14.376387596130371
    10. '    ' → logprob: -14.626387596130371

Token 134: ' ' (ID: 220)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.211159348487854
    2. '
' → logprob: -2.3361592292785645
    3. '   ' → logprob: -2.7111592292785645
    4. '        
' → logprob: -4.7111592292785645
    5. 'deck' → logprob: -5.7111592292785645
    6. '    
' → logprob: -5.7111592292785645
    7. '<|end|>' → logprob: -5.7111592292785645
    8. ' deck' → logprob: -6.5861592292785645
    9. ',' → logprob: -6.7111592292785645
    10. '  
' → logprob: -6.8361592292785645

Token 135: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7126055955886841
    2. '   ' → logprob: -0.8376055955886841
    3. '
' → logprob: -3.7126054763793945
    4. '#' → logprob: -4.0876054763793945
    5. 'deck' → logprob: -4.5876054763793945
    6. ' #' → logprob: -4.7126054763793945
    7. ' (' → logprob: -5.8376054763793945
    8. ' deck' → logprob: -6.0876054763793945
    9. '  ' → logprob: -6.2126054763793945
    10. '(deck' → logprob: -6.4626054763793945

Token 136: ' bottom' (ID: 8725)
  Prédit: ' bottom'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bottom' → logprob: -0.7923830151557922
    2. 'bottom' → logprob: -0.7923830151557922
    3. 'deck' → logprob: -2.5423829555511475
    4. ' deck' → logprob: -4.417383193969727
    5. 'top' → logprob: -6.667383193969727
    6. '#' → logprob: -6.667383193969727
    7. ' top' → logprob: -7.917383193969727
    8. ' ' → logprob: -8.417383193969727
    9. ' #' → logprob: -9.417383193969727
    10. 'middle' → logprob: -9.667383193969727

Token 137: ' half' (ID: 6375)
  Prédit: 'half'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'half' → logprob: -0.3639299273490906
    2. ' half' → logprob: -1.2389299869537354
    3. '[:]' → logprob: -4.738929748535156
    4. '_half' → logprob: -6.363929748535156
    5. '-half' → logprob: -6.363929748535156
    6. '[::-' → logprob: -7.113929748535156
    7. ']' → logprob: -7.488929748535156
    8. '<|end|>' → logprob: -8.113929748535156
    9. '[' → logprob: -8.488929748535156
    10. '[]' → logprob: -8.613929748535156

Token 138: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04098488762974739
    2. '   ' → logprob: -3.915984869003296
    3. '<|end|>' → logprob: -4.290985107421875
    4. ' (' → logprob: -6.290985107421875
    5. 'deck' → logprob: -6.915985107421875
    6. '(deck' → logprob: -7.290985107421875
    7. ' deck' → logprob: -7.790985107421875
    8. ',' → logprob: -7.790985107421875
    9. '<|end|>' → logprob: -7.790985107421875
    10. '
' → logprob: -8.165985107421875

Token 139: ' deck' (ID: 16942)
  Prédit: 'deck'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deck' → logprob: -0.10043656080961227
    2. ' deck' → logprob: -2.3504364490509033
    3. '[-' → logprob: -10.225436210632324
    4. '(deck' → logprob: -10.225436210632324
    5. ' ' → logprob: -10.475436210632324
    6. '[' → logprob: -10.850436210632324
    7. 'A' → logprob: -10.975436210632324
    8. 'de' → logprob: -11.100436210632324
    9. '   ' → logprob: -11.350436210632324
    10. ' A' → logprob: -11.725436210632324

Token 140: ' B' (ID: 418)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3288322687149048
    2. ' (' → logprob: -2.4538321495056152
    3. '=' → logprob: -3.0788321495056152
    4. 'B' → logprob: -3.2038321495056152
    5. ' B' → logprob: -3.3288321495056152
    6. '<|end|>' → logprob: -3.9538321495056152
    7. '[:' → logprob: -5.078832149505615
    8. '[:-' → logprob: -5.078832149505615
    9. '[-' → logprob: -5.203832149505615
    10. ' A' → logprob: -5.203832149505615

Token 141: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.42420077323913574
    2. '   ' → logprob: -1.1742007732391357
    3. '<|end|>' → logprob: -4.674201011657715
    4. '    
' → logprob: -5.549201011657715
    5. '        
' → logprob: -5.549201011657715
    6. '
' → logprob: -5.674201011657715
    7. '[' → logprob: -6.174201011657715
    8. ' deck' → logprob: -6.299201011657715
    9. '[::-' → logprob: -6.549201011657715
    10. 'deck' → logprob: -6.674201011657715

Token 142: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7105916142463684
    2. '       ' → logprob: -0.8355916142463684
    3. 'deck' → logprob: -3.2105915546417236
    4. ' deck' → logprob: -3.5855915546417236
    5. ' if' → logprob: -6.710591793060303
    6. '[' → logprob: -7.210591793060303
    7. '    
' → logprob: -7.210591793060303
    8. '
' → logprob: -7.335591793060303
    9. '<|end|>' → logprob: -7.585591793060303
    10. '        
' → logprob: -7.585591793060303

Token 143: ' C' (ID: 363)
  Prédit: 'deck'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'deck' → logprob: -0.46160396933555603
    2. ' deck' → logprob: -1.3366039991378784
    3. '   ' → logprob: -2.586603879928589
    4. ' new' → logprob: -4.336604118347168
    5. '       ' → logprob: -5.211604118347168
    6. 'new' → logprob: -5.211604118347168
    7. ' if' → logprob: -6.211604118347168
    8. 'if' → logprob: -7.211604118347168
    9. '(deck' → logprob: -7.524104118347168
    10. 'temp' → logprob: -7.836604118347168

Token 144: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6934009194374084
    2. ' =' → logprob: -0.6934009194374084
    3. '=[]' → logprob: -8.318401336669922
    4. ' ' → logprob: -13.068401336669922
    5. '=[]
' → logprob: -14.068401336669922
    6. ',' → logprob: -14.255901336669922
    7. '=[' → logprob: -14.318401336669922
    8. '[' → logprob: -14.318401336669922
    9. ' =[' → logprob: -14.505901336669922
    10. '  ' → logprob: -15.318401336669922

Token 145: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.005577129777520895
    2. ' []' → logprob: -5.255577087402344
    3. '[' → logprob: -8.380577087402344
    4. '[]
' → logprob: -9.505577087402344
    5. ' [' → logprob: -11.005577087402344
    6. '[A' → logprob: -11.755577087402344
    7. '[]}' → logprob: -12.005577087402344
    8. '[]>' → logprob: -13.505577087402344
    9. '[B' → logprob: -13.505577087402344
    10. '[]

' → logprob: -13.755577087402344

Token 146: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 147: ' a' (ID: 261)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.49392133951187134
    2. 'for' → logprob: -1.1189212799072266
    3. ' i' → logprob: -3.1189212799072266
    4. 'i' → logprob: -4.243921279907227
    5. '       ' → logprob: -5.743921279907227
    6. ' ' → logprob: -7.743921279907227
    7. '   ' → logprob: -8.368921279907227
    8. '    ' → logprob: -9.368921279907227
    9. 'n' → logprob: -9.743921279907227
    10. 'x' → logprob: -9.868921279907227

Token 148: '_idx' (ID: 15257)
  Prédit: '_idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_idx' → logprob: -0.16065189242362976
    2. '_index' → logprob: -2.785651922225952
    3. '_i' → logprob: -3.160651922225952
    4. 'i' → logprob: -3.910651922225952
    5. 'idx' → logprob: -4.410651683807373
    6. 'nd' → logprob: -4.910651683807373
    7. ' =' → logprob: -5.785651683807373
    8. '=' → logprob: -7.535651683807373
    9. ',' → logprob: -7.660651683807373
    10. 'index' → logprob: -8.410652160644531

Token 149: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16027601063251495
    2. '=' → logprob: -1.9102760553359985
    3. ',' → logprob: -9.910276412963867
    4. ' ' → logprob: -14.160276412963867
    5. ' ,' → logprob: -14.160276412963867
    6. '<|end|>' → logprob: -14.660276412963867
    7. 's' → logprob: -16.410276412963867
    8. ')' → logprob: -16.410276412963867
    9. '0' → logprob: -16.910276412963867
    10. '   ' → logprob: -17.035276412963867

Token 150: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.48527419567108154
    2. 'len' → logprob: -0.9852741956710815
    3. '-' → logprob: -5.235274314880371
    4. ' ' → logprob: -5.735274314880371
    5. ' len' → logprob: -6.110274314880371
    6. ' -' → logprob: -9.110274314880371
    7. 'half' → logprob: -9.235274314880371
    8. '(len' → logprob: -9.610274314880371
    9. '-l' → logprob: -11.235274314880371
    10. '<len' → logprob: -11.235274314880371

Token 151: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.14713230729103088
    2. 'len' → logprob: -2.022132396697998
    3. '-' → logprob: -5.647132396697998
    4. 'half' → logprob: -7.147132396697998
    5. ' len' → logprob: -10.14713191986084
    6. ' ' → logprob: -10.27213191986084
    7. '(len' → logprob: -10.77213191986084
    8. '1' → logprob: -12.02213191986084
    9. ' -' → logprob: -12.27213191986084
    10. '-(' → logprob: -12.58463191986084

Token 152: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 153: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 154: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' (adapté à ' b') → logprob: -4.68022444692906e-05
    2. ' b' → logprob: -10.750046730041504
    3. '       ' → logprob: -10.875046730041504
    4. '   ' → logprob: -12.750046730041504
    5. '0' → logprob: -13.500046730041504
    6. 'a' → logprob: -13.875046730041504
    7. '	b' → logprob: -15.125046730041504
    8. '```' → logprob: -15.250046730041504
    9. 'for' → logprob: -15.750046730041504
    10. '1' → logprob: -16.12504768371582

Token 155: '_idx' (ID: 15257)
  Prédit: '_idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_idx' → logprob: -0.00016945181414484978
    2. '_' → logprob: -9.87516975402832
    3. '=' → logprob: -10.00016975402832
    4. ' =' → logprob: -10.87516975402832
    5. 'idx' → logprob: -10.87516975402832
    6. '_index' → logprob: -11.25016975402832
    7. '_idxs' → logprob: -11.75016975402832
    8. '=_' → logprob: -12.62516975402832
    9. ' _' → logprob: -13.25016975402832
    10. '```' → logprob: -13.37516975402832

Token 156: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4740830957889557
    2. ' =' → logprob: -0.9740830659866333
    3. '0' → logprob: -12.724082946777344
    4. '<|end|>' → logprob: -13.349082946777344
    5. ',' → logprob: -14.474082946777344
    6. ' ' → logprob: -14.849082946777344
    7. '   ' → logprob: -15.474082946777344
    8. 's' → logprob: -16.224082946777344
    9. '<|end|>' → logprob: -16.349082946777344
    10. '```' → logprob: -16.474082946777344

Token 157: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.08091063052415848
    2. ' ' → logprob: -2.5809106826782227
    3. 'len' → logprob: -6.705910682678223
    4. 'n' → logprob: -8.205910682678223
    5. ' len' → logprob: -8.455910682678223
    6. ' n' → logprob: -8.580910682678223
    7. '1' → logprob: -10.643410682678223
    8. '-' → logprob: -10.643410682678223
    9. 'r' → logprob: -11.143410682678223
    10. ' -' → logprob: -11.580910682678223

Token 158: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.001021736185066402
    2. ' ' → logprob: -7.376021862030029
    3. 'len' → logprob: -8.251021385192871
    4. 'n' → logprob: -9.001021385192871
    5. '1' → logprob: -13.126021385192871
    6. 'r' → logprob: -13.251021385192871
    7. ' n' → logprob: -13.376021385192871
    8. '-' → logprob: -13.501021385192871
    9. ' len' → logprob: -13.626021385192871
    10. '(len' → logprob: -14.813521385192871

Token 159: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3126252293586731
    2. '<|end|>' → logprob: -1.4376251697540283
    3. ' ' → logprob: -4.062625408172607
    4. '   ' → logprob: -5.437625408172607
    5. ' 
' → logprob: -6.187625408172607
    6. '<|end|>' → logprob: -6.562625408172607
    7. '	' → logprob: -7.062625408172607
    8. '[' → logprob: -7.062625408172607
    9. '        
' → logprob: -7.437625408172607
    10. ' while' → logprob: -7.437625408172607

Token 160: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05787557736039162
    2. '   ' → logprob: -3.682875633239746
    3. ' 
' → logprob: -4.682875633239746
    4. ' ' → logprob: -5.307875633239746
    5. '        
' → logprob: -5.682875633239746
    6. ' while' → logprob: -5.807875633239746
    7. '<|end|>' → logprob: -5.807875633239746
    8. '\t' → logprob: -6.932875633239746
    9. '    
' → logprob: -7.182875633239746
    10. ',' → logprob: -7.432875633239746

Token 161: ' while' (ID: 2049)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.172563910484314
    2. 'while' (adapté à ' while') → logprob: -1.172563910484314
    3. ' while' → logprob: -2.1725640296936035
    4. ' for' → logprob: -2.4225640296936035
    5. '       ' → logprob: -2.5475640296936035
    6. '   ' → logprob: -2.7975640296936035
    7. 'if' → logprob: -3.9225640296936035
    8. ' if' → logprob: -4.1725640296936035
    9. 'C' → logprob: -6.1725640296936035
    10. '    ' → logprob: -8.047563552856445

Token 162: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.4757072329521179
    2. ' a' → logprob: -0.9757072329521179
    3. ' b' → logprob: -7.225707054138184
    4. 'b' → logprob: -7.475707054138184
    5. ' len' → logprob: -8.850707054138184
    6. 'len' → logprob: -8.850707054138184
    7. '(a' → logprob: -10.975707054138184
    8. ' True' → logprob: -11.475707054138184
    9. ' ' → logprob: -11.725707054138184
    10. 'True' → logprob: -12.725707054138184

Token 163: '_idx' (ID: 15257)
  Prédit: '_idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_idx' → logprob: -0.0001867326645879075
    2. 'idx' → logprob: -8.875186920166016
    3. 'a' → logprob: -11.750186920166016
    4. '```' → logprob: -11.750186920166016
    5. '_index' → logprob: -12.375186920166016
    6. '   ' → logprob: -12.750186920166016
    7. '<' → logprob: -12.750186920166016
    8. '[idx' → logprob: -12.875186920166016
    9. '_idxs' → logprob: -12.875186920166016
    10. '_len' → logprob: -13.125186920166016

Token 164: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.08921480178833008
    2. '<' → logprob: -2.46421480178833
    3. '<len' → logprob: -8.464214324951172
    4. ' ' → logprob: -9.964214324951172
    5. ' <=' → logprob: -12.089214324951172
    6. '<n' → logprob: -12.839214324951172
    7. '[' → logprob: -13.464214324951172
    8. '<size' → logprob: -13.589214324951172
    9. '<=' → logprob: -13.714214324951172
    10. '<int' → logprob: -14.089214324951172

Token 165: ' len' (ID: 4631)
  Prédit: 'half'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'half' → logprob: -0.5236788988113403
    2. 'len' → logprob: -0.8986788988113403
    3. ' len' → logprob: -8.02367877960205
    4. ' half' → logprob: -8.64867877960205
    5. 'r' → logprob: -10.77367877960205
    6. 'hal' → logprob: -11.64867877960205
    7. 'n' → logprob: -11.64867877960205
    8. '   ' → logprob: -12.02367877960205
    9. '(len' → logprob: -12.89867877960205
    10. ' ' → logprob: -13.52367877960205

Token 166: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.003864443162456155
    2. '(C' → logprob: -5.628864288330078
    3. 'A' → logprob: -8.753864288330078
    4. '(B' → logprob: -10.003864288330078
    5. '(' → logprob: -10.128864288330078
    6. 'C' → logprob: -12.253864288330078
    7. '(Cs' → logprob: -12.378864288330078
    8. '(cs' → logprob: -12.628864288330078
    9. 'cs' → logprob: -13.003864288330078
    10. 's' → logprob: -13.378864288330078

Token 167: ')' (ID: 8)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.3927266001701355
    2. ' and' → logprob: -1.1427266597747803
    3. 'and' → logprob: -5.892726421356201
    4. ')' → logprob: -6.267726421356201
    5. 'or' → logprob: -6.767726421356201
    6. ' ' → logprob: -11.14272689819336
    7. '       ' → logprob: -11.39272689819336
    8. ' )' → logprob: -12.89272689819336
    9. '   ' → logprob: -13.76772689819336
    10. '):
' → logprob: -14.51772689819336

Token 168: ' or' (ID: 503)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.07223539054393768
    2. ' or' → logprob: -2.947235345840454
    3. 'and' → logprob: -4.072235584259033
    4. '       ' → logprob: -9.572235107421875
    5. 'or' → logprob: -9.822235107421875
    6. '   ' → logprob: -11.322235107421875
    7. ' ' → logprob: -11.447235107421875
    8. '        ' → logprob: -11.947235107421875
    9. '    ' → logprob: -12.447235107421875
    10. '           ' → logprob: -13.572235107421875

Token 169: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.2014666497707367
    2. 'b' → logprob: -1.701466679573059
    3. ' ' → logprob: -10.32646656036377
    4. '   ' → logprob: -11.70146656036377
    5. '	b' → logprob: -13.20146656036377
    6. '       ' → logprob: -13.38896656036377
    7. '  ' → logprob: -13.45146656036377
    8. '    ' → logprob: -13.70146656036377
    9. '```' → logprob: -13.70146656036377
    10. ' ' → logprob: -14.45146656036377

Token 170: '_idx' (ID: 15257)
  Prédit: '_idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_idx' → logprob: -2.339278580620885e-06
    2. '_index' → logprob: -14.250001907348633
    3. 'idx' → logprob: -14.500001907348633
    4. '_IDX' → logprob: -15.500001907348633
    5. 'b' → logprob: -15.750001907348633
    6. '<_' → logprob: -16.250001907348633
    7. 'Idx' → logprob: -16.375001907348633
    8. '_' → logprob: -16.375001907348633
    9. 'x' → logprob: -16.750001907348633
    10. '<' → logprob: -16.875001907348633

Token 171: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.01253837812691927
    2. '<' → logprob: -4.387538433074951
    3. '<len' → logprob: -10.887537956237793
    4. '<n' → logprob: -13.012537956237793
    5. ' ' → logprob: -13.262537956237793
    6. ' <
' → logprob: -13.387537956237793
    7. '<|end|>' → logprob: -13.887537956237793
    8. '<size' → logprob: -14.387537956237793
    9. '<int' → logprob: -14.512537956237793
    10. ' ' → logprob: -15.512537956237793

Token 172: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.0007135047344490886
    2. ' len' → logprob: -7.250713348388672
    3. '(len' → logprob: -12.625713348388672
    4. ' ' → logprob: -15.750713348388672
    5. '[len' → logprob: -17.375713348388672
    6. '   ' → logprob: -17.500713348388672
    7. '=len' → logprob: -18.625713348388672
    8. 'n' → logprob: -18.750713348388672
    9. '	len' → logprob: -18.875713348388672
    10. '  ' → logprob: -19.000713348388672

Token 173: '(B' (ID: 8409)
  Prédit: '(A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.6343497037887573
    2. '(B' → logprob: -0.7593497037887573
    3. '(C' → logprob: -6.759349822998047
    4. 'A' → logprob: -7.634349822998047
    5. 'B' → logprob: -9.384349822998047
    6. '(' → logprob: -11.384349822998047
    7. '(a' → logprob: -13.009349822998047
    8. 'C' → logprob: -13.009349822998047
    9. ' A' → logprob: -13.759349822998047
    10. 'a' → logprob: -14.759349822998047

Token 174: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.05075677111744881
    2. '):
' → logprob: -3.1757566928863525
    3. ':' → logprob: -4.925756931304932
    4. ':
' → logprob: -8.550756454467773
    5. ')' → logprob: -9.425756454467773
    6. ' and' → logprob: -9.800756454467773
    7. '):

' → logprob: -10.300756454467773
    8. '       ' → logprob: -10.425756454467773
    9. ' ):' → logprob: -10.550756454467773
    10. '<|end|>' → logprob: -10.800756454467773

Token 175: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14252743124961853
    2. ' ' → logprob: -2.5175273418426514
    3. '        ' → logprob: -3.7675273418426514
    4. ' 
' → logprob: -4.3925275802612305
    5. '<|end|>' → logprob: -5.5175275802612305
    6. '        
' → logprob: -5.6425275802612305
    7. '           ' → logprob: -5.8925275802612305
    8. '   ' → logprob: -6.8925275802612305
    9. '    ' → logprob: -7.1425275802612305
    10. '[' → logprob: -7.3925275802612305

Token 176: ' take' (ID: 2304)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7893310785293579
    2. '       ' → logprob: -1.164331078529358
    3. ' ' → logprob: -2.2893309593200684
    4. '           ' → logprob: -2.5393309593200684
    5. '        ' → logprob: -4.039330959320068
    6. ' 
' → logprob: -4.164330959320068
    7. 'if' → logprob: -4.664330959320068
    8. '            ' → logprob: -6.664330959320068
    9. '   ' → logprob: -6.789330959320068
    10. ' ' → logprob: -6.914330959320068

Token 177: '_a' (ID: 10852)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6583160161972046
    2. '=' → logprob: -0.9083160161972046
    3. 'from' → logprob: -2.783316135406494
    4. '_' → logprob: -5.533316135406494
    5. ' ' → logprob: -5.658316135406494
    6. '_from' → logprob: -5.908316135406494
    7. '_a' → logprob: -6.783316135406494
    8. 'A' → logprob: -6.783316135406494
    9. 'a' → logprob: -7.033316135406494
    10. '_token' → logprob: -7.283316135406494

Token 178: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1618301123380661
    2. ' =' → logprob: -1.9118300676345825
    3. 'if' → logprob: -6.786829948425293
    4. ' ' → logprob: -8.161829948425293
    5. ' if' → logprob: -9.411829948425293
    6. '   ' → logprob: -9.911829948425293
    7. '  ' → logprob: -11.661829948425293
    8. ',' → logprob: -11.786829948425293
    9. '    ' → logprob: -12.036829948425293
    10. '=int' → logprob: -12.286829948425293

Token 179: ' min' (ID: 1349)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'True' → logprob: -1.352704644203186
    2. 'a' → logprob: -1.477704644203186
    3. ' True' → logprob: -2.1027045249938965
    4. ' a' → logprob: -2.1027045249938965
    5. ' c' → logprob: -2.3527045249938965
    6. 'c' → logprob: -2.3527045249938965
    7. ' (' → logprob: -4.1027045249938965
    8. '(a' → logprob: -4.3527045249938965
    9. 'b' → logprob: -4.4777045249938965
    10. 'False' → logprob: -4.6027045249938965

Token 180: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.0013619012897834182
    2. '(' → logprob: -6.876361846923828
    3. '(len' → logprob: -8.251361846923828
    4. '(a' → logprob: -10.626361846923828
    5. '(r' → logprob: -10.626361846923828
    6. '(b' → logprob: -13.126361846923828
    7. '(
' → logprob: -13.126361846923828
    8. '(max' → logprob: -13.251361846923828
    9. '(n' → logprob: -13.376361846923828
    10. '(cs' → logprob: -13.376361846923828

Token 181: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0030701644718647003
    2. ' ,' → logprob: -6.37807035446167
    3. ' -' → logprob: -7.37807035446167
    4. ' if' → logprob: -8.003069877624512
    5. ',a' → logprob: -9.128069877624512
    6. 'a' → logprob: -9.753069877624512
    7. '[' → logprob: -9.878069877624512
    8. ',b' → logprob: -10.253069877624512
    9. ',len' → logprob: -10.253069877624512
    10. '[a' → logprob: -10.503069877624512

Token 182: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.048594869673252106
    2. ' len' → logprob: -3.0485949516296387
    3. ' ' → logprob: -12.67359447479248
    4. '   ' → logprob: -13.29859447479248
    5. '(len' → logprob: -13.67359447479248
    6. '	len' → logprob: -14.54859447479248
    7. '[len' → logprob: -15.42359447479248
    8. '           ' → logprob: -15.79859447479248
    9. '       ' → logprob: -16.048595428466797
    10. ')' → logprob: -16.048595428466797

Token 183: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -4.7755875129951164e-05
    2. 'A' → logprob: -10.12504768371582
    3. '(' → logprob: -12.00004768371582
    4. ')' → logprob: -14.87504768371582
    5. '[A' → logprob: -15.00004768371582
    6. 's' → logprob: -15.50004768371582
    7. '(B' → logprob: -15.75004768371582
    8. ' A' → logprob: -15.87504768371582
    9. '(
' → logprob: -16.50004768371582
    10. ' (' → logprob: -16.62504768371582

Token 184: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00011892046313732862
    2. ')-' → logprob: -9.25011920928955
    3. ' )' → logprob: -10.87511920928955
    4. '[a' → logprob: -13.00011920928955
    5. 'a' → logprob: -14.37511920928955
    6. '   ' → logprob: -15.12511920928955
    7. '[' → logprob: -15.37511920928955
    8. ')
' → logprob: -16.125118255615234
    9. '-)' → logprob: -16.250118255615234
    10. '")' → logprob: -16.750118255615234

Token 185: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.19750072062015533
    2. ' -' → logprob: -1.9475007057189941
    3. '-' → logprob: -3.447500705718994
    4. ')-' → logprob: -5.572500705718994
    5. '[a' → logprob: -7.322500705718994
    6. '   ' → logprob: -9.572501182556152
    7. '[' → logprob: -9.697501182556152
    8. ' )' → logprob: -9.947501182556152
    9. 'a' → logprob: -10.072501182556152
    10. '),' → logprob: -10.322501182556152

Token 186: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.014163863845169544
    2. ' a' → logprob: -4.264163970947266
    3. ' ' → logprob: -14.889163970947266
    4. '	a' → logprob: -17.139163970947266
    5. '_a' → logprob: -18.014163970947266
    6. '   ' → logprob: -18.264163970947266
    7. 'A' → logprob: -19.014163970947266
    8. '  ' → logprob: -19.139163970947266
    9. ')a' → logprob: -20.764163970947266
    10. '(a' → logprob: -21.014163970947266

Token 187: '_idx' (ID: 15257)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.9226812720298767
    2. 'a' → logprob: -1.4226813316345215
    3. 'ex' → logprob: -1.4226813316345215
    4. '_idx' → logprob: -2.6726813316345215
    5. 'idx' → logprob: -3.2976813316345215
    6. 'dx' → logprob: -4.7976813316345215
    7. 'd' → logprob: -6.2976813316345215
    8. 'nd' → logprob: -6.5476813316345215
    9. 'dex' → logprob: -6.9226813316345215
    10. 'b' → logprob: -7.9226813316345215

Token 188: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12700717151165009
    2. ')
' → logprob: -2.127007246017456
    3. ')

' → logprob: -10.502007484436035
    4. ')
' → logprob: -11.127007484436035
    5. '           ' → logprob: -11.252007484436035
    6. ' )' → logprob: -11.877007484436035
    7. ' if' → logprob: -12.252007484436035
    8. ' )
' → logprob: -12.752007484436035
    9. 'if' → logprob: -13.127007484436035
    10. '       ' → logprob: -13.127007484436035

Token 189: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04068951681256294
    2. '<|end|>' → logprob: -3.665689468383789
    3. '       ' → logprob: -5.665689468383789
    4. ')' → logprob: -5.790689468383789
    5. '            
' → logprob: -6.040689468383789
    6. ' if' → logprob: -6.415689468383789
    7. ' 
' → logprob: -6.915689468383789
    8. '   ' → logprob: -7.415689468383789
    9. '               ' → logprob: -7.790689468383789
    10. ',' → logprob: -8.415689468383789

Token 190: ' if' (ID: 538)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.1885513961315155
    2. ' C' → logprob: -2.438551425933838
    3. '   ' → logprob: -2.563551425933838
    4. '           ' → logprob: -5.688551425933838
    5. '       ' → logprob: -6.313551425933838
    6. '<|end|>' → logprob: -7.188551425933838
    7. ' ' → logprob: -7.813551425933838
    8. 'A' → logprob: -7.938551425933838
    9. '[' → logprob: -8.68855094909668
    10. '    
' → logprob: -9.43855094909668

Token 191: ' take' (ID: 2304)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.5349009037017822
    2. 'a' → logprob: -1.5349009037017822
    3. ' take' → logprob: -1.7849009037017822
    4. 'take' → logprob: -3.5349009037017822
    5. ' b' → logprob: -6.909900665283203
    6. 'b' → logprob: -8.159900665283203
    7. ' c' → logprob: -8.659900665283203
    8. ' ' → logprob: -8.909900665283203
    9. ' not' → logprob: -9.284900665283203
    10. 'A' → logprob: -10.534900665283203

Token 192: '_a' (ID: 10852)
  Prédit: '_a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -0.007822271436452866
    2. '_' → logprob: -4.882822036743164
    3. ' _' → logprob: -8.757822036743164
    4. 'a' → logprob: -10.132822036743164
    5. '>' → logprob: -11.757822036743164
    6. ' >' → logprob: -12.132822036743164
    7. '_b' → logprob: -13.757822036743164
    8. ' a' → logprob: -14.007822036743164
    9. ' ' → logprob: -14.257822036743164
    10. '```' → logprob: -14.507822036743164

Token 193: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.1544739454984665
    2. ' >' → logprob: -2.5294740200042725
    3. ':' → logprob: -3.2794740200042725
    4. '==' → logprob: -3.9044740200042725
    5. ' ==' → logprob: -5.529473781585693
    6. '>:' → logprob: -7.154473781585693
    7. '   ' → logprob: -8.029474258422852
    8. '):' → logprob: -8.779474258422852
    9. '=' → logprob: -9.154474258422852
    10. ':
' → logprob: -10.029474258422852

Token 194: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06994988024234772
    2. ' ' → logprob: -2.6949498653411865
    3. '=' → logprob: -11.944950103759766
    4. '>' → logprob: -13.569950103759766
    5. 'b' → logprob: -13.694950103759766
    6. ' b' → logprob: -14.194950103759766
    7. 'take' → logprob: -14.319950103759766
    8. 'a' → logprob: -14.694950103759766
    9. ' take' → logprob: -14.694950103759766
    10. ')' → logprob: -14.694950103759766

Token 195: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0021876145619899035
    2. ' ' → logprob: -6.127187728881836
    3. 'take' → logprob: -14.377187728881836
    4. 'b' → logprob: -14.752187728881836
    5. 'a' → logprob: -15.002187728881836
    6. '=' → logprob: -15.252187728881836
    7. '   ' → logprob: -15.752187728881836
    8. 'c' → logprob: -15.877187728881836
    9. '```' → logprob: -16.002187728881836
    10. '  ' → logprob: -16.752187728881836

Token 196: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9026550650596619
    2. '           ' → logprob: -1.0276551246643066
    3. ':
' → logprob: -1.5276551246643066
    4. '       ' → logprob: -4.902655124664307
    5. '):
' → logprob: -5.527655124664307
    6. ',' → logprob: -5.777655124664307
    7. '               ' → logprob: -6.652655124664307
    8. '):' → logprob: -7.027655124664307
    9. '   ' → logprob: -7.152655124664307
    10. ' and' → logprob: -7.652655124664307

Token 197: '               ' (ID: 506)
  Prédit: ' C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' C' → logprob: -0.6215373873710632
    2. '           ' → logprob: -1.371537446975708
    3. 'C' → logprob: -1.621537446975708
    4. '               ' → logprob: -5.246537208557129
    5. '   ' → logprob: -5.371537208557129
    6. '       ' → logprob: -7.371537208557129
    7. ' ' → logprob: -7.996537208557129
    8. '```' → logprob: -9.246537208557129
    9. '<|end|>' → logprob: -9.746537208557129
    10. ')' → logprob: -9.871537208557129

Token 198: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' (adapté à ' C') → logprob: -0.01616727001965046
    2. ' C' → logprob: -4.141167163848877
    3. '           ' → logprob: -9.641167640686035
    4. '   ' → logprob: -10.016167640686035
    5. '               ' → logprob: -10.766167640686035
    6. ' ' → logprob: -13.891167640686035
    7. '       ' → logprob: -15.016167640686035
    8. '  ' → logprob: -15.641167640686035
    9. '                   ' → logprob: -15.641167640686035
    10. 'A' → logprob: -15.766167640686035

Token 199: '.extend' (ID: 34151)
  Prédit: '.extend'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.extend' → logprob: -0.0005648265941999853
    2. '.' → logprob: -7.500565052032471
    3. ' +=' → logprob: -11.750564575195312
    4. '+=' → logprob: -12.625564575195312
    5. '.append' → logprob: -15.000564575195312
    6. 'extend' → logprob: -15.375564575195312
    7. ' .' → logprob: -15.625564575195312
    8. '   ' → logprob: -17.000564575195312
    9. '+' → logprob: -19.125564575195312
    10. ' extends' → logprob: -19.500564575195312

Token 200: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.044631797820329666
    2. 'A' → logprob: -3.5446317195892334
    3. ' A' → logprob: -4.4196319580078125
    4. '(' → logprob: -5.9196319580078125
    5. ' (' → logprob: -10.044631958007812
    6. '[A' → logprob: -14.294631958007812
    7. '([' → logprob: -14.419631958007812
    8. '   ' → logprob: -14.669631958007812
    9. '	A' → logprob: -15.044631958007812
    10. ' ' → logprob: -15.294631958007812

Token 201: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -4.3822154111694545e-05
    2. 'a' → logprob: -10.375043869018555
    3. '[' → logprob: -11.375043869018555
    4. '   ' → logprob: -14.375043869018555
    5. ')[' → logprob: -15.875043869018555
    6. '[
' → logprob: -16.250043869018555
    7. ' [' → logprob: -16.375043869018555
    8. ')' → logprob: -16.625043869018555
    9. ')a' → logprob: -16.750043869018555
    10. '(a' → logprob: -17.250043869018555

Token 202: '_idx' (ID: 15257)
  Prédit: '_idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_idx' → logprob: -0.0008161775767803192
    2. 'idx' → logprob: -7.375816345214844
    3. 'dx' → logprob: -9.250816345214844
    4. 'x' → logprob: -9.875816345214844
    5. 'Idx' → logprob: -11.000816345214844
    6. 'nd' → logprob: -11.750816345214844
    7. 'd' → logprob: -12.375816345214844
    8. '_IDX' → logprob: -12.375816345214844
    9. 'a' → logprob: -12.875816345214844
    10. '[idx' → logprob: -13.750816345214844

Token 203: ':a' (ID: 77025)
  Prédit: ':a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':a' → logprob: -0.027619430795311928
    2. ':' → logprob: -3.7776193618774414
    3. 'a' → logprob: -5.652619361877441
    4. ' :' → logprob: -7.777619361877441
    5. ',a' → logprob: -8.652619361877441
    6. '+a' → logprob: -9.152619361877441
    7. ' a' → logprob: -9.527619361877441
    8. '[a' → logprob: -11.027619361877441
    9. ':b' → logprob: -11.277619361877441
    10. ':t' → logprob: -11.652619361877441

Token 204: '_idx' (ID: 15257)
  Prédit: '_idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_idx' → logprob: -0.00021951000962872058
    2. '+' → logprob: -9.625219345092773
    3. 'idx' → logprob: -9.875219345092773
    4. 'a' → logprob: -10.000219345092773
    5. 'x' → logprob: -10.250219345092773
    6. '   ' → logprob: -12.375219345092773
    7. '_IDX' → logprob: -12.500219345092773
    8. 'nd' → logprob: -12.625219345092773
    9. 'Idx' → logprob: -13.625219345092773
    10. 'd' → logprob: -13.750219345092773

Token 205: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.12747111916542053
    2. ' +' → logprob: -2.1274712085723877
    3. '+a' → logprob: -7.627470970153809
    4. '   ' → logprob: -10.627470970153809
    5. 'a' → logprob: -11.002470970153809
    6. ' ' → logprob: -12.252470970153809
    7. '           ' → logprob: -13.002470970153809
    8. '+b' → logprob: -13.002470970153809
    9. '+t' → logprob: -13.502470970153809
    10. 'take' → logprob: -13.877470970153809

Token 206: 'take' (ID: 45924)
  Prédit: 'take'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'take' → logprob: -0.0009124171338044107
    2. ' take' → logprob: -7.000912189483643
    3. 'tak' → logprob: -14.6259126663208
    4. ' ' → logprob: -15.5009126663208
    5. '   ' → logprob: -15.7509126663208
    6. '
' → logprob: -17.875911712646484
    7. '.take' → logprob: -18.500911712646484
    8. '_take' → logprob: -19.125911712646484
    9. '```' → logprob: -19.625911712646484
    10. '    ' → logprob: -19.875911712646484

Token 207: '_a' (ID: 10852)
  Prédit: '_a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -0.03647986054420471
    2. 'a' → logprob: -3.411479949951172
    3. 's' → logprob: -6.036479949951172
    4. 'take' → logprob: -8.286479949951172
    5. 'A' → logprob: -10.536479949951172
    6. '   ' → logprob: -10.911479949951172
    7. ')' → logprob: -10.911479949951172
    8. ']' → logprob: -11.161479949951172
    9. '+' → logprob: -11.536479949951172
    10. 'k' → logprob: -11.536479949951172

Token 208: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.28866851329803467
    2. '])
' → logprob: -1.4136685132980347
    3. ')' → logprob: -5.538668632507324
    4. ')
' → logprob: -5.913668632507324
    5. ' ])' → logprob: -7.788668632507324
    6. ' ])
' → logprob: -8.288668632507324
    7. '           ' → logprob: -9.538668632507324
    8. ' )' → logprob: -10.038668632507324
    9. ' )
' → logprob: -10.538668632507324
    10. ']' → logprob: -10.913668632507324

Token 209: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.20376479625701904
    2. 'a' → logprob: -2.0787649154663086
    3. '<|end|>' → logprob: -3.5787649154663086
    4. ' a' → logprob: -4.453764915466309
    5. '       ' → logprob: -5.078764915466309
    6. '            
' → logprob: -5.703764915466309
    7. '               ' → logprob: -6.453764915466309
    8. '
' → logprob: -6.453764915466309
    9. ' 
' → logprob: -6.703764915466309
    10. '   ' → logprob: -6.703764915466309

Token 210: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.0889720767736435
    2. ' a' → logprob: -2.4639720916748047
    3. '           ' → logprob: -10.713972091674805
    4. '               ' → logprob: -12.213972091674805
    5. '
' → logprob: -13.713972091674805
    6. '```' → logprob: -14.338972091674805
    7. ' ' → logprob: -14.713972091674805
    8. '            
' → logprob: -14.713972091674805
    9. ' 
' → logprob: -14.838972091674805
    10. '   ' → logprob: -14.838972091674805

Token 211: '_idx' (ID: 15257)
  Prédit: '_idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_idx' → logprob: -5.676981345459353e-06
    2. 'idx' → logprob: -12.125005722045898
    3. 'd' → logprob: -16.2500057220459
    4. '_index' → logprob: -16.8750057220459
    5. 'a' → logprob: -17.5000057220459
    6. 'nd' → logprob: -18.2500057220459
    7. '_IDX' → logprob: -18.3750057220459
    8. 'x' → logprob: -18.5000057220459
    9. '_idxs' → logprob: -18.5000057220459
    10. 'Idx' → logprob: -18.8750057220459

Token 212: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.4293438494205475
    2. ' +=' → logprob: -1.054343819618225
    3. '+' → logprob: -7.6793437004089355
    4. '=' → logprob: -8.929344177246094
    5. '   ' → logprob: -11.054344177246094
    6. ']+=' → logprob: -11.179344177246094
    7. '```' → logprob: -11.679344177246094
    8. '    ' → logprob: -12.929344177246094
    9. '           ' → logprob: -13.929344177246094
    10. '       ' → logprob: -13.929344177246094

Token 213: ' take' (ID: 2304)
  Prédit: 'take'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'take' → logprob: -0.048588961362838745
    2. ' take' → logprob: -3.048588991165161
    3. ' ' → logprob: -13.923588752746582
    4. 'tak' → logprob: -14.923588752746582
    5. '   ' → logprob: -15.048588752746582
    6. '  ' → logprob: -17.9235897064209
    7. '           ' → logprob: -18.2985897064209
    8. '.take' → logprob: -18.4235897064209
    9. ' ' → logprob: -18.5485897064209
    10. 'to' → logprob: -18.6735897064209

Token 214: '_a' (ID: 10852)
  Prédit: '_a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -0.0001422770437784493
    2. ' _' → logprob: -9.625142097473145
    3. '_' → logprob: -10.375142097473145
    4. ' ' → logprob: -10.625142097473145
    5. 'a' → logprob: -11.500142097473145
    6. '_c' → logprob: -12.750142097473145
    7. '   ' → logprob: -13.000142097473145
    8. '_
' → logprob: -13.375142097473145
    9. 's' → logprob: -13.750142097473145
    10. '\' → logprob: -15.000142097473145

Token 215: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10284171998500824
    2. '
' → logprob: -2.47784161567688
    3. '               ' → logprob: -4.852841854095459
    4. '  
' → logprob: -6.352841854095459
    5. '       ' → logprob: -6.477841854095459
    6. ' 
' → logprob: -7.102841854095459
    7. '            
' → logprob: -7.102841854095459
    8. '<|end|>' → logprob: -8.3528413772583
    9. ' ' → logprob: -8.7278413772583
    10. ',' → logprob: -8.9778413772583

Token 216: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.12111359089612961
    2. ' take' → logprob: -2.9961135387420654
    3. '       ' → logprob: -3.2461135387420654
    4. '
' → logprob: -4.7461137771606445
    5. 'take' → logprob: -5.1211137771606445
    6. '               ' → logprob: -5.6211137771606445
    7. ' 
' → logprob: -6.1211137771606445
    8. '            
' → logprob: -6.3711137771606445
    9. '        
' → logprob: -6.7461137771606445
    10. '```' → logprob: -7.4961137771606445

Token 217: ' take' (ID: 2304)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1883382350206375
    2. ' take' → logprob: -1.938338279724121
    3. '
' → logprob: -4.563338279724121
    4. 'take' (adapté à ' take') → logprob: -4.563338279724121
    5. '       ' → logprob: -6.063338279724121
    6. ' if' → logprob: -6.313338279724121
    7. '```' → logprob: -6.563338279724121
    8. '   ' → logprob: -8.188338279724121
    9. ' 
' → logprob: -8.438338279724121
    10. '            
' → logprob: -8.438338279724121

Token 218: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.00034988581319339573
    2. '_a' → logprob: -8.125349998474121
    3. 'b' → logprob: -10.500349998474121
    4. '   ' → logprob: -11.500349998474121
    5. 'space' → logprob: -12.500349998474121
    6. '_' → logprob: -12.875349998474121
    7. ' ' → logprob: -13.000349998474121
    8. 's' → logprob: -13.375349998474121
    9. 'a' → logprob: -13.500349998474121
    10. '  ' → logprob: -13.625349998474121

Token 219: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.026312140747904778
    2. '=' → logprob: -3.6513121128082275
    3. ' ' → logprob: -11.401311874389648
    4. '    ' → logprob: -16.02631187438965
    5. ',' → logprob: -16.02631187438965
    6. '  ' → logprob: -16.52631187438965
    7. 'space' → logprob: -16.52631187438965
    8. ' ' → logprob: -16.65131187438965
    9. '        ' → logprob: -16.77631187438965
    10. ')' → logprob: -16.77631187438965

Token 220: ' min' (ID: 1349)
  Prédit: ' min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.5759562253952026
    2. 'min' → logprob: -0.8259562253952026
    3. '0' → logprob: -11.075956344604492
    4. ' ' → logprob: -14.200956344604492
    5. '(min' → logprob: -15.325956344604492
    6. 'max' → logprob: -15.825956344604492
    7. '	min' → logprob: -16.325956344604492
    8. '[min' → logprob: -16.450956344604492
    9. '=min' → logprob: -17.450956344604492
    10. ' max' → logprob: -17.950956344604492

Token 221: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.0017386015970259905
    2. '(' → logprob: -6.626738548278809
    3. 'c' → logprob: -8.376738548278809
    4. ' (' → logprob: -8.626738548278809
    5. ' c' → logprob: -13.126738548278809
    6. '(
' → logprob: -14.501738548278809
    7. 'b' → logprob: -15.126738548278809
    8. ',' → logprob: -16.126739501953125
    9. '```' → logprob: -16.376739501953125
    10. 's' → logprob: -16.626739501953125

Token 222: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00012213163427077234
    2. ' ,' → logprob: -9.1251220703125
    3. ',len' → logprob: -11.2501220703125
    4. ',length' → logprob: -16.7501220703125
    5. ',
' → logprob: -17.1251220703125
    6. ')' → logprob: -17.3751220703125
    7. 'len' → logprob: -17.6251220703125
    8. ',c' → logprob: -17.8751220703125
    9. '(len' → logprob: -18.3751220703125
    10. '```' → logprob: -18.6251220703125

Token 223: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.3869316279888153
    2. ' len' → logprob: -1.1369316577911377
    3. '(len' → logprob: -9.761931419372559
    4. '[len' → logprob: -13.011931419372559
    5. ',len' → logprob: -15.261931419372559
    6. '	len' → logprob: -15.636931419372559
    7. '=len' → logprob: -15.886931419372559
    8. ' ' → logprob: -16.386932373046875
    9. '<len' → logprob: -16.636932373046875
    10. 'n' → logprob: -17.636932373046875

Token 224: '(B' (ID: 8409)
  Prédit: '(B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(B' → logprob: -5.200166469876422e-06
    2. '(A' → logprob: -12.875004768371582
    3. 'B' → logprob: -13.625004768371582
    4. '(b' → logprob: -14.625004768371582
    5. '(' → logprob: -14.875004768371582
    6. '
' → logprob: -16.2500057220459
    7. '(C' → logprob: -16.2500057220459
    8. ')' → logprob: -16.5000057220459
    9. ' (' → logprob: -17.0000057220459
    10. 'A' → logprob: -17.3750057220459

Token 225: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0007323168683797121
    2. 'b' → logprob: -7.875732421875
    3. ' -' → logprob: -8.875732421875
    4. '[b' → logprob: -9.000732421875
    5. ')-' → logprob: -10.000732421875
    6. '-' → logprob: -10.750732421875
    7. ' )' → logprob: -11.375732421875
    8. ')b' → logprob: -13.125732421875
    9. '(b' → logprob: -13.250732421875
    10. '[' → logprob: -13.375732421875

Token 226: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.004564342088997364
    2. '-' → logprob: -5.62956428527832
    3. '-b' → logprob: -7.37956428527832
    4. 'b' → logprob: -8.62956428527832
    5. ')' → logprob: -8.87956428527832
    6. '[b' → logprob: -11.37956428527832
    7. ' ' → logprob: -12.25456428527832
    8. '(b' → logprob: -13.00456428527832
    9. '   ' → logprob: -14.00456428527832
    10. 'B' → logprob: -14.25456428527832

Token 227: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0036004253197461367
    2. ' b' → logprob: -5.628600597381592
    3. ' ' → logprob: -15.128600120544434
    4. '   ' → logprob: -17.00360107421875
    5. '	b' → logprob: -17.75360107421875
    6. '  ' → logprob: -18.62860107421875
    7. '       ' → logprob: -19.37860107421875
    8. '    ' → logprob: -19.75360107421875
    9. ')b' → logprob: -19.75360107421875
    10. '           ' → logprob: -20.00360107421875

Token 228: '_idx' (ID: 15257)
  Prédit: '_idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_idx' → logprob: -0.04100365191698074
    2. 'idx' → logprob: -3.791003704071045
    3. 'b' → logprob: -4.041003704071045
    4. ' b' → logprob: -11.916003227233887
    5. 'x' → logprob: -13.041003227233887
    6. 'd' → logprob: -13.041003227233887
    7. 'Idx' → logprob: -13.416003227233887
    8. 'index' → logprob: -13.541003227233887
    9. 't' → logprob: -13.666003227233887
    10. '_index' → logprob: -13.791003227233887

Token 229: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.04859418421983719
    2. ')' → logprob: -3.0485942363739014
    3. ')b' → logprob: -12.92359447479248
    4. ')
' → logprob: -13.17359447479248
    5. '           ' → logprob: -13.67359447479248
    6. ')

' → logprob: -14.42359447479248
    7. '):
' → logprob: -15.54859447479248
    8. ')c' → logprob: -15.92359447479248
    9. '       ' → logprob: -16.048593521118164
    10. ' )
' → logprob: -16.298593521118164

Token 230: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4687592685222626
    2. '   ' → logprob: -1.218759298324585
    3. '           ' → logprob: -3.343759298324585
    4. '<|end|>' → logprob: -3.343759298324585
    5. ' ' → logprob: -5.593759059906006
    6. ' C' → logprob: -6.218759059906006
    7. 'C' → logprob: -7.343759059906006
    8. ' if' → logprob: -7.843759059906006
    9. '  ' → logprob: -8.343759536743164
    10. '               ' → logprob: -8.468759536743164

Token 231: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3340204954147339
    2. 'if' (adapté à ' if') → logprob: -1.8340204954147339
    3. 'C' → logprob: -2.7090206146240234
    4. ' C' → logprob: -3.3340206146240234
    5. '   ' → logprob: -3.8340206146240234
    6. '       ' → logprob: -8.834020614624023
    7. '           ' → logprob: -9.459020614624023
    8. ' ' → logprob: -9.959020614624023
    9. 'B' → logprob: -10.959020614624023
    10. '```' → logprob: -11.834020614624023

Token 232: ' take' (ID: 2304)
  Prédit: ' take'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' take' → logprob: -0.2014167606830597
    2. 'take' → logprob: -1.7014167308807373
    3. ' ' → logprob: -13.326416969299316
    4. '   ' → logprob: -14.076416969299316
    5. '0' → logprob: -15.076416969299316
    6. '    ' → logprob: -15.826416969299316
    7. '>' → logprob: -15.951416969299316
    8. '  ' → logprob: -16.201416015625
    9. 'b' → logprob: -16.326416015625
    10. ' ' → logprob: -16.326416015625

Token 233: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -1.981667537620524e-06
    2. 'b' → logprob: -13.375001907348633
    3. '_' → logprob: -15.750001907348633
    4. ' ' → logprob: -16.625001907348633
    5. '_a' → logprob: -17.000001907348633
    6. '>' → logprob: -17.250001907348633
    7. 'take' → logprob: -17.500001907348633
    8. '   ' → logprob: -18.125001907348633
    9. '  ' → logprob: -18.625001907348633
    10. '```' → logprob: -18.875001907348633

Token 234: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.04859191179275513
    2. '>' → logprob: -3.0485918521881104
    3. ' ' → logprob: -12.548591613769531
    4. ' ' → logprob: -14.423591613769531
    5. ':' → logprob: -15.423591613769531
    6. '   ' → logprob: -17.17359161376953
    7. ')>' → logprob: -18.04859161376953
    8. '()>' → logprob: -18.04859161376953
    9. '[' → logprob: -18.17359161376953
    10. '    ' → logprob: -18.42359161376953

Token 235: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6931484937667847
    2. ' ' → logprob: -0.6931484937667847
    3. ' ' → logprob: -14.693148612976074
    4. 'take' → logprob: -15.068148612976074
    5. '=' → logprob: -16.130647659301758
    6. ' take' → logprob: -16.193147659301758
    7. 'b' → logprob: -16.505647659301758
    8. '   ' → logprob: -16.755647659301758
    9. '```' → logprob: -16.755647659301758
    10. '>' → logprob: -17.005647659301758

Token 236: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0040854052640497684
    2. ' ' → logprob: -5.504085540771484
    3. 'take' → logprob: -12.004085540771484
    4. '   ' → logprob: -14.879085540771484
    5. ' take' → logprob: -15.254085540771484
    6. '  ' → logprob: -16.254085540771484
    7. 'b' → logprob: -17.254085540771484
    8. '>' → logprob: -17.504085540771484
    9. '=' → logprob: -17.754085540771484
    10. '
' → logprob: -17.879085540771484

Token 237: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.25408753752708435
    2. ':' → logprob: -1.5040875673294067
    3. '               ' → logprob: -6.754087448120117
    4. '           ' → logprob: -7.379087448120117
    5. '       ' → logprob: -8.629087448120117
    6. ' :
' → logprob: -9.629087448120117
    7. '   ' → logprob: -10.379087448120117
    8. ',' → logprob: -10.504087448120117
    9. '):
' → logprob: -10.754087448120117
    10. ' :' → logprob: -11.629087448120117

Token 238: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.08392582088708878
    2. ' C' → logprob: -2.583925724029541
    3. 'C' → logprob: -5.458925724029541
    4. '           ' → logprob: -7.583925724029541
    5. ' ' → logprob: -9.3339262008667
    6. '   ' → logprob: -9.5839262008667
    7. ':
' → logprob: -10.2089262008667
    8. '```' → logprob: -10.4589262008667
    9. '              ' → logprob: -12.0839262008667
    10. ':' → logprob: -12.0839262008667

Token 239: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' (adapté à ' C') → logprob: -0.10020904988050461
    2. ' C' → logprob: -2.3502089977264404
    3. '               ' → logprob: -13.85020923614502
    4. 'B' → logprob: -14.35020923614502
    5. ' ' → logprob: -14.47520923614502
    6. '           ' → logprob: -15.47520923614502
    7. '   ' → logprob: -16.100208282470703
    8. '```' → logprob: -17.850208282470703
    9. 'b' → logprob: -18.100208282470703
    10. ' B' → logprob: -18.225208282470703

Token 240: '.extend' (ID: 34151)
  Prédit: '.extend'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.extend' → logprob: -0.006778373382985592
    2. '.' → logprob: -5.006778240203857
    3. ' .' → logprob: -9.756778717041016
    4. 'extend' → logprob: -12.631778717041016
    5. '   ' → logprob: -13.506778717041016
    6. 'b' → logprob: -15.381778717041016
    7. ' ' → logprob: -16.756778717041016
    8. 'extends' → logprob: -16.881778717041016
    9. '```' → logprob: -17.006778717041016
    10. '.b' → logprob: -17.006778717041016

Token 241: '(B' (ID: 8409)
  Prédit: '(B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(B' → logprob: -5.796184723294573e-06
    2. '(' → logprob: -12.250005722045898
    3. 'B' → logprob: -14.125005722045898
    4. '(b' → logprob: -15.750005722045898
    5. ' (' → logprob: -15.875005722045898
    6. ' B' → logprob: -17.3750057220459
    7. '(A' → logprob: -19.1250057220459
    8. '(
' → logprob: -20.1250057220459
    9. '([' → logprob: -20.2500057220459
    10. '((' → logprob: -20.5000057220459

Token 242: '[b' (ID: 40800)
  Prédit: '[b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -0.0019404153572395444
    2. 'b' → logprob: -6.2519402503967285
    3. '[' → logprob: -11.501940727233887
    4. ' [' → logprob: -14.001940727233887
    5. '   ' → logprob: -14.376940727233887
    6. '[
' → logprob: -16.50193977355957
    7. ' b' → logprob: -16.62693977355957
    8. '```' → logprob: -17.25193977355957
    9. '[a' → logprob: -17.50193977355957
    10. ' ' → logprob: -17.62693977355957

Token 243: '_idx' (ID: 15257)
  Prédit: '_idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_idx' → logprob: -0.008813935332000256
    2. 'b' → logprob: -4.758813858032227
    3. 'idx' → logprob: -8.633813858032227
    4. ' b' → logprob: -11.383813858032227
    5. '[b' → logprob: -12.258813858032227
    6. ':b' → logprob: -12.883813858032227
    7. 'Idx' → logprob: -13.883813858032227
    8. '(b' → logprob: -14.883813858032227
    9. '=b' → logprob: -15.508813858032227
    10. 'd' → logprob: -15.508813858032227

Token 244: ':b' (ID: 87246)
  Prédit: ':b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':b' → logprob: -0.07027117908000946
    2. 'b' → logprob: -2.6952712535858154
    3. '[b' → logprob: -8.820271492004395
    4. '   ' → logprob: -10.195271492004395
    5. ':' → logprob: -10.445271492004395
    6. ' :' → logprob: -10.695271492004395
    7. '	b' → logprob: -10.820271492004395
    8. ' ' → logprob: -11.320271492004395
    9. ';b' → logprob: -11.445271492004395
    10. '+b' → logprob: -11.570271492004395

Token 245: '_idx' (ID: 15257)
  Prédit: '_idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_idx' → logprob: -0.15946823358535767
    2. 'b' → logprob: -2.159468173980713
    3. ':b' → logprob: -3.534468173980713
    4. '+b' → logprob: -6.534468173980713
    5. 'take' → logprob: -7.659468173980713
    6. '+' → logprob: -8.284468650817871
    7. '[b' → logprob: -8.784468650817871
    8. '=b' → logprob: -8.909468650817871
    9. '	b' → logprob: -9.534468650817871
    10. '*b' → logprob: -9.784468650817871

Token 246: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.17881783843040466
    2. 'b' → logprob: -2.0538177490234375
    3. 'take' → logprob: -3.5538177490234375
    4. '+b' → logprob: -5.6788177490234375
    5. ':' → logprob: -6.3038177490234375
    6. ' +' → logprob: -6.8038177490234375
    7. ' ' → logprob: -9.178817749023438
    8. ':b' → logprob: -9.303817749023438
    9. '+t' → logprob: -9.678817749023438
    10. '   ' → logprob: -9.803817749023438

Token 247: 'take' (ID: 45924)
  Prédit: 'take'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'take' → logprob: -0.0028073713183403015
    2. ' take' → logprob: -5.877807140350342
    3. '   ' → logprob: -13.7528076171875
    4. ' ' → logprob: -14.3778076171875
    5. 'tak' → logprob: -14.8778076171875
    6. '  ' → logprob: -16.1278076171875
    7. 'b' → logprob: -16.2528076171875
    8. '.take' → logprob: -16.6278076171875
    9. '    ' → logprob: -16.7528076171875
    10. '_take' → logprob: -17.2528076171875

Token 248: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.38801294565200806
    2. 'take' → logprob: -1.1380128860473633
    3. 'b' → logprob: -7.138012886047363
    4. '_take' → logprob: -8.513012886047363
    5. ' take' → logprob: -9.138012886047363
    6. 'ake' → logprob: -11.763012886047363
    7. 'B' → logprob: -11.888012886047363
    8. 'a' → logprob: -12.638012886047363
    9. '_a' → logprob: -12.763012886047363
    10. 'ask' → logprob: -13.138012886047363

Token 249: '])
' (ID: 5169)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.0030984506011009216
    2. '])
' → logprob: -6.503098487854004
    3. ')' → logprob: -6.878098487854004
    4. 'b' → logprob: -7.753098487854004
    5. ')b' → logprob: -9.628098487854004
    6. ')
' → logprob: -10.753098487854004
    7. ' )
' → logprob: -11.128098487854004
    8. '])' → logprob: -11.378098487854004
    9. '           ' → logprob: -11.753098487854004
    10. '       ' → logprob: -12.503098487854004

Token 250: '               ' (ID: 506)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.023910896852612495
    2. ' b' → logprob: -3.7739109992980957
    3. '               ' → logprob: -7.523910999298096
    4. '       ' → logprob: -10.023910522460938
    5. '```' → logprob: -10.898910522460938
    6. '	b' → logprob: -11.148910522460938
    7. '           ' → logprob: -11.398910522460938
    8. ',b' → logprob: -11.648910522460938
    9. ')b' → logprob: -11.648910522460938
    10. '(b' → logprob: -12.148910522460938

Token 251: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' (adapté à ' b') → logprob: -0.008616935461759567
    2. ' b' → logprob: -4.758616924285889
    3. 'take' → logprob: -13.508617401123047
    4. '	b' → logprob: -15.633617401123047
    5. ')b' → logprob: -16.133617401123047
    6. ' ' → logprob: -16.508617401123047
    7. '   ' → logprob: -16.508617401123047
    8. ' take' → logprob: -16.633617401123047
    9. ' б' → logprob: -17.008617401123047
    10. '(b' → logprob: -17.133617401123047

Token 252: '_idx' (ID: 15257)
  Prédit: '_idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_idx' → logprob: -1.7432603272027336e-06
    2. 'b' → logprob: -14.000001907348633
    3. 'idx' → logprob: -15.250001907348633
    4. '```' → logprob: -15.500001907348633
    5. '_IDX' → logprob: -16.875001907348633
    6. '+' → logprob: -16.875001907348633
    7. 'd' → logprob: -17.375001907348633
    8. '+=' → logprob: -18.125001907348633
    9. '\' → logprob: -18.125001907348633
    10. '=' → logprob: -18.250001907348633

Token 253: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.016056541353464127
    2. '+=' → logprob: -4.141056537628174
    3. ' ' → logprob: -11.266057014465332
    4. '+' → logprob: -12.516057014465332
    5. '    ' → logprob: -12.891057014465332
    6. ' ' → logprob: -13.766057014465332
    7. ' +' → logprob: -14.141057014465332
    8. '        ' → logprob: -14.391057014465332
    9. '```' → logprob: -15.141057014465332
    10. ']+=' → logprob: -15.641057014465332

Token 254: ' take' (ID: 2304)
  Prédit: 'take'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'take' → logprob: -0.38687217235565186
    2. ' take' → logprob: -1.1368721723556519
    3. ' ' → logprob: -14.511872291564941
    4. 'tak' → logprob: -15.136872291564941
    5. ' tak' → logprob: -16.261871337890625
    6. '.take' → logprob: -16.761871337890625
    7. '    ' → logprob: -17.136871337890625
    8. '   ' → logprob: -17.386871337890625
    9. '_take' → logprob: -17.511871337890625
    10. '        ' → logprob: -17.761871337890625

Token 255: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.010766826570034027
    2. 'take' → logprob: -4.635766983032227
    3. ' take' → logprob: -7.010766983032227
    4. '_take' → logprob: -9.760766983032227
    5. '_c' → logprob: -10.885766983032227
    6. '1' → logprob: -11.510766983032227
    7. ' ' → logprob: -11.510766983032227
    8. '_t' → logprob: -12.885766983032227
    9. 'B' → logprob: -13.385766983032227
    10. '_B' → logprob: -13.760766983032227

Token 256: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0002882721892092377
    2. '   ' → logprob: -8.250288009643555
    3. '           ' → logprob: -11.125288009643555
    4. '
' → logprob: -11.875288009643555
    5. '      ' → logprob: -14.125288009643555
    6. '<|end|>' → logprob: -14.125288009643555
    7. ',' → logprob: -14.250288009643555
    8. '        
' → logprob: -14.750288009643555
    9. '```' → logprob: -15.125288009643555
    10. ')' → logprob: -15.125288009643555

Token 257: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5723655819892883
    2. '   ' → logprob: -0.9473655819892883
    3. '
' → logprob: -3.5723655223846436
    4. ' deck' → logprob: -4.447365760803223
    5. 'deck' → logprob: -6.072365760803223
    6. '    
' → logprob: -6.197365760803223
    7. '        
' → logprob: -6.822365760803223
    8. '<|end|>' → logprob: -7.572365760803223
    9. ' ' → logprob: -8.072365760803223
    10. '\n' → logprob: -8.197365760803223

Token 258: ' deck' (ID: 16942)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4229753911495209
    2. '   ' → logprob: -1.5479754209518433
    3. 'deck' (adapté à ' deck') → logprob: -2.1729753017425537
    4. ' deck' → logprob: -4.047975540161133
    5. '(deck' → logprob: -7.422975540161133
    6. '.deck' → logprob: -8.422975540161133
    7. 'Deck' → logprob: -10.047975540161133
    8. '```' → logprob: -10.797975540161133
    9. ' ' → logprob: -11.922975540161133
    10. '	de' → logprob: -11.922975540161133

Token 259: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1269315630197525
    2. '=' → logprob: -2.126931667327881
    3. '[:]' → logprob: -12.751931190490723
    4. '＝' → logprob: -15.876931190490723
    5. ' =)' → logprob: -16.37693214416504
    6. '.=' → logprob: -16.50193214416504
    7. ',' → logprob: -16.62693214416504
    8. '.' → logprob: -17.25193214416504
    9. 's' → logprob: -17.50193214416504
    10. ' =
' → logprob: -17.62693214416504

Token 260: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.007607697509229183
    2. ' C' → logprob: -4.882607460021973
    3. '[C' → logprob: -13.632607460021973
    4. ' ' → logprob: -15.632607460021973
    5. 'list' → logprob: -16.38260841369629
    6. '   ' → logprob: -16.38260841369629
    7. 'c' → logprob: -16.88260841369629
    8. '	C' → logprob: -17.00760841369629
    9. '[' → logprob: -17.00760841369629
    10. '(C' → logprob: -17.63260841369629

Token 261: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2692427635192871
    2. '   ' → logprob: -1.644242763519287
    3. '    
' → logprob: -3.769242763519287
    4. 'print' → logprob: -4.269242763519287
    5. '  
' → logprob: -5.894242763519287
    6. '<|end|>' → logprob: -6.894242763519287
    7. '[' → logprob: -7.769242763519287
    8. ' 
' → logprob: -7.894242763519287
    9. '[
' → logprob: -8.644243240356445
    10. '
' → logprob: -8.644243240356445

Token 262: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.34609466791152954
    2. 'print' → logprob: -2.2210946083068848
    3. '   ' → logprob: -2.5960946083068848
    4. '<|end|>' → logprob: -2.7210946083068848
    5. '    
' → logprob: -3.8460946083068848
    6. '  
' → logprob: -4.346094608306885
    7. 'for' → logprob: -5.721094608306885
    8. ' 
' → logprob: -6.346094608306885
    9. '[' → logprob: -7.221094608306885
    10. '   
' → logprob: -7.596094608306885

Token 263: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.3377605378627777
    2. 'for' → logprob: -1.5877605676651
    3. '   ' → logprob: -2.7127604484558105
    4. ' for' → logprob: -4.3377604484558105
    5. ' print' → logprob: -6.5877604484558105
    6. '```' → logprob: -6.5877604484558105
    7. '    
' → logprob: -10.712760925292969
    8. '
' → logprob: -11.337760925292969
    9. '``' → logprob: -11.837760925292969
    10. 'if' → logprob: -12.212760925292969

Token 264: '(deck' (ID: 195320)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.710539698600769
    2. '(' → logprob: -1.585539698600769
    3. '('' → logprob: -1.585539698600769
    4. '(len' → logprob: -2.4605398178100586
    5. '(*' → logprob: -5.085539817810059
    6. '("' → logprob: -5.585539817810059
    7. '(deck' → logprob: -5.710539817810059
    8. '("")' → logprob: -8.960539817810059
    9. ' ()' → logprob: -9.710539817810059
    10. '()*' → logprob: -11.210539817810059

Token 265: '[-' (ID: 17503)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -5.824579784530215e-05
    2. '[' → logprob: -10.0000581741333
    3. ')
' → logprob: -12.0000581741333
    4. ' )' → logprob: -13.2500581741333
    5. ')`' → logprob: -13.2500581741333
    6. '))' → logprob: -14.7500581741333
    7. '   ' → logprob: -14.8750581741333
    8. '`)' → logprob: -15.0000581741333
    9. '])' → logprob: -15.0000581741333
    10. '[::-' → logprob: -15.1250581741333

Token 266: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.895480277715251e-06
    2. ' ' → logprob: -12.125008583068848
    3. '2' → logprob: -14.125008583068848
    4. '10' → logprob: -14.125008583068848
    5. 'n' → logprob: -14.375008583068848
    6. '0' → logprob: -14.875008583068848
    7. '   ' → logprob: -15.937508583068848
    8. '100' → logprob: -16.062509536743164
    9. '3' → logprob: -16.187509536743164
    10. '5' → logprob: -16.312509536743164

Token 267: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0007337473216466606
    2. '])' → logprob: -7.250733852386475
    3. '))' → logprob: -11.625733375549316
    4. '})' → logprob: -11.875733375549316
    5. ' )' → logprob: -12.375733375549316
    6. ')
' → logprob: -13.625733375549316
    7. ')])' → logprob: -14.250733375549316
    8. '())' → logprob: -14.875733375549316
    9. ')]' → logprob: -15.125733375549316
    10. ']' → logprob: -15.125733375549316


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 265
Tokens correctement prédits (1ère position, stricte): 123
Tokens correctement prédits (1ère position, avec adaptation): 130
Tokens correctement prédits (top 10): 228
Précision stricte (1ère position): 46.42%
Précision adaptée (1ère position): 49.06%
Précision (top 10): 86.04%
================================================================================
