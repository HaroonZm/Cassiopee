================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:17:00
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
input=sys.stdin.readline
directions = ['N','E','S','W']
dx = [-1,0,1,0]
dy = [0,1,0,-1]

while True:
    H,W,L= map(int,input().split())
    if H==0 and W==0 and L==0:
        break
    maze=[]
    for i in range(H):
        row=list(input().rstrip('\n'))
        maze.append(row)
    for i in range(H):
        for j in range(W):
            if maze[i][j] in directions:
                x,y=i,j
                d=directions.index(maze[i][j])
                maze[i][j] = '.'
                break
        else:
            continue
        break

    # States: position and direction
    visited = dict()
    path = []
    step=0

    while step<L:
        state=(x,y,d)
        if state in visited:
            start=visited[state]
            cycle_len=step - start
            rem = (L-step)//cycle_len
            step += rem*cycle_len
            if step==L:
                break
        else:
            visited[state]=step

        # Try to move forward
        nx,ny = x+dx[d], y+dy[d]
        if 0<=nx<H and 0<=ny<W and maze[nx][ny]=='.':
            x,y=nx,ny
            step+=1
            if step==L:
                break
        else:
            d = (d+1)%4

    print(x+1,y+1,directions[d])
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'input' (ID: 2586)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.20001201331615448
    2. '.' → logprob: -2.450011968612671
    3. '<|end|>' → logprob: -2.825011968612671
    4. '\' → logprob: -4.70001220703125
    5. 'newline' → logprob: -5.07501220703125
    6. 'import' → logprob: -5.07501220703125
    7. '' → logprob: -5.82501220703125
    8. '
' → logprob: -5.82501220703125
    9. '<|end|>' → logprob: -5.82501220703125
    10. '\r' → logprob: -6.32501220703125

Token 4: '=sys' (ID: 149200)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.004960254766047001
    2. '.' → logprob: -5.379960060119629
    3. ' (' → logprob: -9.379960060119629
    4. '(
' → logprob: -9.504960060119629
    5. ')' → logprob: -9.879960060119629
    6. '()' → logprob: -10.129960060119629
    7. '('' → logprob: -11.129960060119629
    8. '[' → logprob: -11.129960060119629
    9. ' ' → logprob: -11.754960060119629
    10. '=' → logprob: -11.879960060119629

Token 5: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0007326744962483644
    2. '[' → logprob: -7.500732898712158
    3. ' .' → logprob: -9.625732421875
    4. '.readline' → logprob: -10.125732421875
    5. ''.' → logprob: -11.625732421875
    6. '<|end|>' → logprob: -11.625732421875
    7. '.
' → logprob: -11.875732421875
    8. '.setdefault' → logprob: -12.375732421875
    9. '.[' → logprob: -12.375732421875
    10. '.get' → logprob: -12.500732421875

Token 6: '.readline' (ID: 74673)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.25736203789711
    2. '.readline' → logprob: -1.5073620080947876
    3. '.read' → logprob: -5.257361888885498
    4. '.Read' → logprob: -9.757362365722656
    5. '```' → logprob: -10.632362365722656
    6. '.get' → logprob: -10.757362365722656
    7. '.
' → logprob: -11.132362365722656
    8. '[' → logprob: -11.257362365722656
    9. '.readlines' → logprob: -11.507362365722656
    10. '<|end|>' → logprob: -11.632362365722656

Token 7: '
' (ID: 198)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.023310933262109756
    2. '(' → logprob: -4.273311138153076
    3. '().' → logprob: -4.773311138153076
    4. '()
' → logprob: -7.898311138153076
    5. '(
' → logprob: -9.523310661315918
    6. '()\' → logprob: -9.648310661315918
    7. ')' → logprob: -10.148310661315918
    8. '()

' → logprob: -10.648310661315918
    9. '
' → logprob: -11.398310661315918
    10. ' ()' → logprob: -11.523310661315918

Token 8: 'dire' (ID: 57765)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.11380048841238022
    2. '(' → logprob: -2.238800525665283
    3. '().' → logprob: -7.613800525665283
    4. '()
' → logprob: -8.113800048828125
    5. '(
' → logprob: -10.238800048828125
    6. '()

' → logprob: -10.488800048828125
    7. '()\' → logprob: -10.488800048828125
    8. ')' → logprob: -10.988800048828125
    9. '();' → logprob: -11.613800048828125
    10. '#' → logprob: -11.738800048828125

Token 9: 'ctions' (ID: 2620)
  Prédit: 'ctions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ctions' → logprob: -0.014256003312766552
    2. 'ction' → logprob: -4.264256000518799
    3. 'CTIONS' → logprob: -9.889256477355957
    4. 'ct' → logprob: -10.389256477355957
    5. 'c' → logprob: -11.639256477355957
    6. 'cts' → logprob: -14.264256477355957
    7. 'ctors' → logprob: -14.639256477355957
    8. 'ections' → logprob: -14.889256477355957
    9. '```' → logprob: -15.014256477355957
    10. 'CTION' → logprob: -15.889256477355957

Token 10: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14390632510185242
    2. '=' → logprob: -2.018906354904175
    3. '[' → logprob: -7.768906116485596
    4. ' =[' → logprob: -8.268906593322754
    5. '=[]' → logprob: -8.518906593322754
    6. '[:]' → logprob: -8.893906593322754
    7. '=[' → logprob: -9.393906593322754
    8. 's' → logprob: -10.143906593322754
    9. '=['' → logprob: -10.393906593322754
    10. '[]' → logprob: -11.018906593322754

Token 11: ' ['' (ID: 5140)
  Prédit: '[''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '['' → logprob: -0.8776974678039551
    2. ' ['' → logprob: -1.252697467803955
    3. '["' → logprob: -2.127697467803955
    4. '[(' → logprob: -2.502697467803955
    5. '[' → logprob: -3.127697467803955
    6. ' ["' → logprob: -3.627697467803955
    7. ' [(' → logprob: -3.877697467803955
    8. ' [' → logprob: -5.377697467803955
    9. '[['' → logprob: -6.752697467803955
    10. '[
' → logprob: -8.502696990966797

Token 12: 'N' (ID: 45)
  Prédit: 'up'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'up' → logprob: -0.20531487464904785
    2. 'U' → logprob: -2.455314874649048
    3. 'UP' → logprob: -3.705314874649048
    4. 'N' → logprob: -3.955314874649048
    5. 'north' → logprob: -4.205314636230469
    6. 'L' → logprob: -5.330314636230469
    7. 'R' → logprob: -5.455314636230469
    8. 'right' → logprob: -5.580314636230469
    9. 'Up' → logprob: -5.830314636230469
    10. 'u' → logprob: -5.830314636230469

Token 13: '','' (ID: 4074)
  Prédit: '','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.5142504572868347
    2. '','' → logprob: -1.0142505168914795
    3. 'E' → logprob: -3.8892505168914795
    4. ''' → logprob: -4.0142502784729
    5. ''E' → logprob: -7.2642502784729
    6. '',"' → logprob: -9.764250755310059
    7. ' ','' → logprob: -10.514250755310059
    8. 'W' → logprob: -10.514250755310059
    9. 'orth' → logprob: -11.889250755310059
    10. '','','' → logprob: -11.889250755310059

Token 14: 'E' (ID: 36)
  Prédit: 'E'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.6330636143684387
    2. 'S' → logprob: -0.7580636143684387
    3. 'W' → logprob: -8.383063316345215
    4. ' S' → logprob: -8.758063316345215
    5. 'NE' → logprob: -10.383063316345215
    6. ' E' → logprob: -10.508063316345215
    7. 'D' → logprob: -12.258063316345215
    8. 'N' → logprob: -12.758063316345215
    9. ''E' → logprob: -12.883063316345215
    10. 'O' → logprob: -13.008063316345215

Token 15: '','' (ID: 4074)
  Prédit: '',''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '','' → logprob: -0.0022206762805581093
    2. '',' → logprob: -6.252220630645752
    3. ''' → logprob: -8.25222110748291
    4. ' ','' → logprob: -11.25222110748291
    5. '',"' → logprob: -11.75222110748291
    6. 'S' → logprob: -12.75222110748291
    7. ',S' → logprob: -13.50222110748291
    8. ','' → logprob: -13.75222110748291
    9. '",'' → logprob: -14.12722110748291
    10. '','','' → logprob: -14.12722110748291

Token 16: 'S' (ID: 50)
  Prédit: 'S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.00024001303245313466
    2. 'W' → logprob: -8.375240325927734
    3. ''S' → logprob: -12.250240325927734
    4. ' S' → logprob: -13.125240325927734
    5. ''' → logprob: -13.375240325927734
    6. 'N' → logprob: -15.250240325927734
    7. 'D' → logprob: -15.375240325927734
    8. 'I' → logprob: -16.125240325927734
    9. '')' → logprob: -16.375240325927734
    10. 'E' → logprob: -17.000240325927734

Token 17: '','' (ID: 4074)
  Prédit: '',''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '','' → logprob: -0.001394284307025373
    2. '',' → logprob: -6.626394271850586
    3. ''' → logprob: -10.001394271850586
    4. '',"' → logprob: -11.126394271850586
    5. ' ','' → logprob: -12.126394271850586
    6. '']' → logprob: -13.876394271850586
    7. '','','' → logprob: -14.876394271850586
    8. '(','' → logprob: -14.876394271850586
    9. '","' → logprob: -15.501394271850586
    10. ','' → logprob: -15.876394271850586

Token 18: 'W' (ID: 54)
  Prédit: 'W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -8.2994620242971e-06
    2. ''' → logprob: -12.250008583068848
    3. ' W' → logprob: -12.750008583068848
    4. '	W' → logprob: -15.750008583068848
    5. '']' → logprob: -16.25000762939453
    6. '','' → logprob: -16.50000762939453
    7. ',W' → logprob: -17.37500762939453
    8. '_W' → logprob: -17.50000762939453
    9. '```' → logprob: -17.62500762939453
    10. ''''' → logprob: -17.75000762939453

Token 19: '']
' (ID: 9756)
  Prédit: '']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '']' → logprob: -0.00014072739577386528
    2. ''' → logprob: -9.000141143798828
    3. ']' → logprob: -11.625141143798828
    4. '']
' → logprob: -12.875141143798828
    5. '"]' → logprob: -13.375141143798828
    6. '']

' → logprob: -13.500141143798828
    7. '']
' → logprob: -13.750141143798828
    8. ' ']' → logprob: -14.125141143798828
    9. '')' → logprob: -14.875141143798828
    10. '',' → logprob: -15.750141143798828

Token 20: 'dx' (ID: 22100)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.5884699821472168
    2. '.' → logprob: -1.9634699821472168
    3. 'x' → logprob: -2.338469982147217
    4. 'def' → logprob: -2.338469982147217
    5. 'current' → logprob: -2.588469982147217
    6. 'n' → logprob: -2.838469982147217
    7. 'for' → logprob: -2.963469982147217
    8. 'direction' → logprob: -2.963469982147217
    9. '#' → logprob: -3.088469982147217
    10. 'while' → logprob: -3.713469982147217

Token 21: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5282277464866638
    2. '=' → logprob: -0.9032277464866638
    3. '[' → logprob: -5.403227806091309
    4. '=[' → logprob: -8.028227806091309
    5. ' =[' → logprob: -9.028227806091309
    6. '=[]' → logprob: -9.278227806091309
    7. '[:]' → logprob: -11.278227806091309
    8. ']' → logprob: -11.778227806091309
    9. '[]' → logprob: -12.028227806091309
    10. '=['' → logprob: -12.528227806091309

Token 22: ' [-' (ID: 20191)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.10524609684944153
    2. ' [' → logprob: -2.355246067047119
    3. '[-' → logprob: -5.355246067047119
    4. ' [-' → logprob: -8.105246543884277
    5. ' ' → logprob: -13.980246543884277
    6. '0' → logprob: -14.730246543884277
    7. '   ' → logprob: -15.980246543884277
    8. '(' → logprob: -16.23024559020996
    9. ' ' → logprob: -16.73024559020996
    10. '-' → logprob: -16.73024559020996

Token 23: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.827200897736475e-05
    2. '0' → logprob: -9.500078201293945
    3. ' ' → logprob: -12.750078201293945
    4. '-' → logprob: -14.750078201293945
    5. '```' → logprob: -17.500078201293945
    6. ' -' → logprob: -17.937578201293945
    7. '   ' → logprob: -18.562578201293945
    8. '2' → logprob: -18.812578201293945
    9. ']' → logprob: -19.125078201293945
    10. ',' → logprob: -19.187578201293945

Token 24: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.754368223482743e-05
    2. ' ,' → logprob: -9.625067710876465
    3. '0' → logprob: -14.250067710876465
    4. ',
' → logprob: -15.250067710876465
    5. ' ' → logprob: -15.625067710876465
    6. ']' → logprob: -15.750067710876465
    7. '<|end|>' → logprob: -16.00006675720215
    8. ',-' → logprob: -17.75006675720215
    9. ',

' → logprob: -18.37506675720215
    10. '```' → logprob: -18.50006675720215

Token 25: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.007606151048094034
    2. ' ' → logprob: -4.882606029510498
    3. '۰' → logprob: -17.257606506347656
    4. '  ' → logprob: -18.007606506347656
    5. '   ' → logprob: -18.007606506347656
    6. '０' → logprob: -18.507606506347656
    7. '00' → logprob: -19.195106506347656
    8. ',' → logprob: -19.445106506347656
    9. ' ' → logprob: -19.695106506347656
    10. '```' → logprob: -19.820106506347656

Token 26: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.73052782076411e-05
    2. ' ,' → logprob: -9.625067710876465
    3. ']' → logprob: -14.250067710876465
    4. '<|end|>' → logprob: -15.750067710876465
    5. '1' → logprob: -16.12506675720215
    6. ' ' → logprob: -16.62506675720215
    7. ',None' → logprob: -16.62506675720215
    8. ',-' → logprob: -16.75006675720215
    9. ',,' → logprob: -17.62506675720215
    10. '0' → logprob: -17.75006675720215

Token 27: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00015908108616713434
    2. ' ' → logprob: -8.75015926361084
    3. '0' → logprob: -15.12515926361084
    4. '```' → logprob: -16.625158309936523
    5. '+' → logprob: -16.750158309936523
    6. '-' → logprob: -16.875158309936523
    7. ',' → logprob: -19.125158309936523
    8. '  ' → logprob: -19.250158309936523
    9. ']' → logprob: -19.500158309936523
    10. '<|end|>' → logprob: -19.812658309936523

Token 28: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00023894020705483854
    2. ']' → logprob: -8.750239372253418
    3. '<|end|>' → logprob: -10.125239372253418
    4. ' ,' → logprob: -10.250239372253418
    5. '<|end|>' → logprob: -13.625239372253418
    6. '0' → logprob: -14.125239372253418
    7. ' ' → logprob: -14.250239372253418
    8. ',-' → logprob: -14.250239372253418
    9. ',
' → logprob: -15.500239372253418
    10. ',None' → logprob: -15.625239372253418

Token 29: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00038086410495452583
    2. ' ' → logprob: -7.875380992889404
    3. '<|end|>' → logprob: -15.000380516052246
    4. '۰' → logprob: -15.375380516052246
    5. '```' → logprob: -16.875381469726562
    6. '０' → logprob: -17.562881469726562
    7. '  ' → logprob: -17.812881469726562
    8. '-' → logprob: -17.875381469726562
    9. ']' → logprob: -18.000381469726562
    10. ',' → logprob: -18.125381469726562

Token 30: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -5.3120038501219824e-05
    2. ']
' → logprob: -10.500053405761719
    3. ' ]' → logprob: -10.625053405761719
    4. ',' → logprob: -14.500053405761719
    5. ']

' → logprob: -16.12505340576172
    6. ')' → logprob: -16.25005340576172
    7. ']
' → logprob: -16.37505340576172
    8. '   ' → logprob: -16.37505340576172
    9. '],' → logprob: -16.37505340576172
    10. '`]' → logprob: -16.50005340576172

Token 31: 'dy' (ID: 7593)
  Prédit: 'dy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -1.1517960956552997e-05
    2. ' dy' → logprob: -11.375011444091797
    3. '```' → logprob: -17.125011444091797
    4. 'd' → logprob: -19.500011444091797
    5. 'dym' → logprob: -19.875011444091797
    6. 'ddy' → logprob: -20.250011444091797
    7. '.dy' → logprob: -20.375011444091797
    8. '1' → logprob: -20.750011444091797
    9. '﻿' → logprob: -20.875011444091797
    10. '0' → logprob: -21.000011444091797

Token 32: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0018652143189683557
    2. '=' → logprob: -6.751865386962891
    3. ' =[' → logprob: -7.501865386962891
    4. '=[' → logprob: -8.87686538696289
    5. '[' → logprob: -13.25186538696289
    6. ' ' → logprob: -14.12686538696289
    7. '=['' → logprob: -14.87686538696289
    8. ' [' → logprob: -16.25186538696289
    9. '[:]' → logprob: -16.25186538696289
    10. '＝' → logprob: -17.00186538696289

Token 33: ' [' (ID: 723)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.009685029275715351
    2. '[' → logprob: -4.759685039520264
    3. ' [-' → logprob: -6.884685039520264
    4. ' [' → logprob: -10.009684562683105
    5. '-' → logprob: -13.384684562683105
    6. '0' → logprob: -17.134685516357422
    7. '1' → logprob: -18.259685516357422
    8. ' ' → logprob: -18.634685516357422
    9. '[:-' → logprob: -18.884685516357422
    10. '{-' → logprob: -19.509685516357422

Token 34: '0' (ID: 15)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00046391604701057076
    2. '1' → logprob: -7.750463962554932
    3. ' -' → logprob: -10.625463485717773
    4. '0' → logprob: -11.875463485717773
    5. ' ' → logprob: -13.125463485717773
    6. '−' → logprob: -17.750463485717773
    7. '```' → logprob: -18.250463485717773
    8. ',-' → logprob: -19.625463485717773
    9. '   ' → logprob: -19.875463485717773
    10. ',' → logprob: -20.000463485717773

Token 35: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00023154958034865558
    2. ',-' → logprob: -8.625231742858887
    3. ' ,' → logprob: -10.125231742858887
    4. '1' → logprob: -11.375231742858887
    5. ' ' → logprob: -15.875231742858887
    6. ',
' → logprob: -16.75023078918457
    7. ' ,-' → logprob: -16.87523078918457
    8. '-' → logprob: -17.25023078918457
    9. ',+' → logprob: -17.62523078918457
    10. '	' → logprob: -18.12523078918457

Token 36: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.388769103679806e-05
    2. '-' → logprob: -9.375093460083008
    3. ' ' → logprob: -11.625093460083008
    4. ' -' → logprob: -19.000093460083008
    5. '```' → logprob: -19.125093460083008
    6. '<|end|>' → logprob: -19.625093460083008
    7. '１' → logprob: -20.250093460083008
    8. '+' → logprob: -21.000093460083008
    9. '' → logprob: -21.625093460083008
    10. '१' → logprob: -21.875093460083008

Token 37: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0630587488412857
    2. ',-' → logprob: -2.813058853149414
    3. ']' → logprob: -7.188058853149414
    4. ' ,' → logprob: -8.188058853149414
    5. ' ,-' → logprob: -9.938058853149414
    6. '-' → logprob: -12.688058853149414
    7. '0' → logprob: -13.063058853149414
    8. ' ]' → logprob: -13.688058853149414
    9. ' ' → logprob: -14.313058853149414
    10. ',None' → logprob: -15.438058853149414

Token 38: '0' (ID: 15)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -3.128163257315464e-07
    2. '0' → logprob: -16.125
    3. '1' → logprob: -16.5
    4. ' -' → logprob: -17.25
    5. '−' → logprob: -21.375
    6. '```' → logprob: -21.5
    7. '[-' → logprob: -21.875
    8. ' ' → logprob: -22.875
    9. ']-' → logprob: -23.375
    10. '–' → logprob: -23.375

Token 39: ',-' (ID: 8202)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10340364277362823
    2. ']' → logprob: -2.6034035682678223
    3. ',-' → logprob: -3.7284035682678223
    4. ' ,' → logprob: -9.35340404510498
    5. ' ]' → logprob: -9.47840404510498
    6. ' ,-' → logprob: -11.47840404510498
    7. '-' → logprob: -12.60340404510498
    8. '```' → logprob: -13.10340404510498
    9. ',None' → logprob: -13.60340404510498
    10. '   ' → logprob: -14.47840404510498

Token 40: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3856492842023727e-06
    2. ']' → logprob: -14.250000953674316
    3. ' ' → logprob: -15.312500953674316
    4. '```' → logprob: -16.187501907348633
    5. '0' → logprob: -16.375001907348633
    6. '`' → logprob: -17.187501907348633
    7. '１' → logprob: -17.312501907348633
    8. ')' → logprob: -17.812501907348633
    9. '

' → logprob: -17.875001907348633
    10. '-' → logprob: -18.187501907348633

Token 41: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -3.531315314830863e-06
    2. ' ]' → logprob: -12.750003814697266
    3. ']
' → logprob: -14.875003814697266
    4. '']' → logprob: -16.625003814697266
    5. ']

' → logprob: -17.000003814697266
    6. ')' → logprob: -17.625003814697266
    7. '`]' → logprob: -18.000003814697266
    8. '0' → logprob: -18.375003814697266
    9. '```' → logprob: -18.625003814697266
    10. '[]' → logprob: -18.750003814697266

Token 42: 'while' (ID: 7032)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.13456688821315765
    2. 'x' → logprob: -2.7595667839050293
    3. 'N' → logprob: -3.0095667839050293
    4. 'for' → logprob: -5.134566783905029
    5. 'def' → logprob: -5.509566783905029
    6. 'while' → logprob: -7.134566783905029
    7. 'T' → logprob: -7.259566783905029
    8. 'class' → logprob: -7.384566783905029
    9. '#' → logprob: -7.634566783905029
    10. 'r' → logprob: -8.634567260742188

Token 43: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.0005280109471641481
    2. 'True' → logprob: -7.750527858734131
    3. ' ' → logprob: -9.500528335571289
    4. ' input' → logprob: -11.375528335571289
    5. ' not' → logprob: -12.625528335571289
    6. ' i' → logprob: -12.875528335571289
    7. '(True' → logprob: -13.500528335571289
    8. ' ' → logprob: -13.875528335571289
    9. ' len' → logprob: -14.500528335571289
    10. ' a' → logprob: -14.625528335571289

Token 44: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0001398929744027555
    2. ' :' → logprob: -9.000140190124512
    3. '():' → logprob: -11.500140190124512
    4. ':**' → logprob: -12.625140190124512
    5. '):' → logprob: -14.125140190124512
    6. ':
' → logprob: -14.500140190124512
    7. ':return' → logprob: -15.000140190124512
    8. '   ' → logprob: -15.500140190124512
    9. ',' → logprob: -16.000139236450195
    10. '```' → logprob: -16.125139236450195

Token 45: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014776477590203285
    2. '    
' → logprob: -5.139776706695557
    3. '    ' → logprob: -5.764776706695557
    4. ' ' → logprob: -6.264776706695557
    5. '<|end|>' → logprob: -6.389776706695557
    6. '  ' → logprob: -8.014776229858398
    7. ' 
' → logprob: -8.139776229858398
    8. ' readline' → logprob: -8.514776229858398
    9. '<|end|>' → logprob: -8.889776229858398
    10. 'input' → logprob: -9.139776229858398

Token 46: ' H' (ID: 487)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.9351091384887695
    2. 'x' → logprob: -1.5601091384887695
    3. ' n' → logprob: -1.9351091384887695
    4. ' line' → logprob: -2.0601091384887695
    5. ' x' → logprob: -3.4351091384887695
    6. 'line' → logprob: -3.6851091384887695
    7. 'data' → logprob: -4.0601091384887695
    8. ' data' → logprob: -4.5601091384887695
    9. 's' → logprob: -5.3101091384887695
    10. 'l' → logprob: -5.4351091384887695

Token 47: ',W' (ID: 117252)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0020732907578349113
    2. ' ,' → logprob: -6.377073287963867
    3. '=' → logprob: -8.752073287963867
    4. '>' → logprob: -9.377073287963867
    5. '<|end|>' → logprob: -9.877073287963867
    6. ' =' → logprob: -11.002073287963867
    7. ' ' → logprob: -11.752073287963867
    8. ')' → logprob: -12.252073287963867
    9. ',b' → logprob: -12.752073287963867
    10. ',i' → logprob: -12.752073287963867

Token 48: ',L' (ID: 68006)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2813126742839813
    2. '=' → logprob: -1.4063127040863037
    3. ',' → logprob: -9.656312942504883
    4. ' ' → logprob: -10.156312942504883
    5. '=input' → logprob: -10.406312942504883
    6. ')' → logprob: -11.531312942504883
    7. '<|end|>' → logprob: -12.156312942504883
    8. ' ,' → logprob: -12.406312942504883
    9. '=int' → logprob: -12.781312942504883
    10. '    ' → logprob: -13.656312942504883

Token 49: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5249231457710266
    2. ' =' → logprob: -0.8999231457710266
    3. '=input' → logprob: -6.899923324584961
    4. ',' → logprob: -7.274923324584961
    5. ' ' → logprob: -10.024923324584961
    6. ',input' → logprob: -10.899923324584961
    7. ' ,' → logprob: -12.524923324584961
    8. '=list' → logprob: -12.774923324584961
    9. '=sys' → logprob: -12.774923324584961
    10. '=line' → logprob: -12.899923324584961

Token 50: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.2519916296005249
    2. ' map' → logprob: -1.501991629600525
    3. 'input' → logprob: -10.626991271972656
    4. 'list' → logprob: -11.251991271972656
    5. '	map' → logprob: -11.251991271972656
    6. 'm' → logprob: -12.751991271972656
    7. ' input' → logprob: -12.876991271972656
    8. ' list' → logprob: -13.001991271972656
    9. '(map' → logprob: -13.001991271972656
    10. ' ' → logprob: -13.501991271972656

Token 51: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.2821209728717804
    2. '(' → logprob: -1.407120943069458
    3. '(input' → logprob: -7.782121181488037
    4. '(str' → logprob: -8.282120704650879
    5. '(lambda' → logprob: -9.032120704650879
    6. '(list' → logprob: -9.157120704650879
    7. '(map' → logprob: -11.032120704650879
    8. '(in' → logprob: -11.282120704650879
    9. '<|end|>' → logprob: -11.657120704650879
    10. ' (' → logprob: -11.907120704650879

Token 52: ',input' (ID: 123014)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.6741772294044495
    2. ',input' → logprob: -0.7991772294044495
    3. ',' → logprob: -3.9241771697998047
    4. 'input' → logprob: -4.549177169799805
    5. '(' → logprob: -5.049177169799805
    6. ')' → logprob: -5.799177169799805
    7. '(sys' → logprob: -7.549177169799805
    8. ' input' → logprob: -8.549177169799805
    9. '=input' → logprob: -9.924177169799805
    10. ')(' → logprob: -10.049177169799805

Token 53: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -9.126521035796031e-05
    2. '()' → logprob: -9.500091552734375
    3. '())' → logprob: -11.125091552734375
    4. ' ().' → logprob: -13.750091552734375
    5. '(' → logprob: -15.500091552734375
    6. ')' → logprob: -16.000091552734375
    7. '()
' → logprob: -16.375091552734375
    8. '()))' → logprob: -18.000091552734375
    9. '()[' → logprob: -18.125091552734375
    10. ' ()' → logprob: -18.625091552734375

Token 54: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.05161937698721886
    2. 'strip' → logprob: -3.051619291305542
    3. 'rstrip' → logprob: -5.801619529724121
    4. ' split' → logprob: -13.551619529724121
    5. 's' → logprob: -14.051619529724121
    6. ')' → logprob: -14.176619529724121
    7. '(split' → logprob: -14.176619529724121
    8. '().' → logprob: -14.676619529724121
    9. 'r' → logprob: -15.176619529724121
    10. 'spl' → logprob: -15.926619529724121

Token 55: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04088453948497772
    2. '())' → logprob: -3.415884494781494
    3. '()' → logprob: -5.415884494781494
    4. '))' → logprob: -5.915884494781494
    5. '()))' → logprob: -10.540884971618652
    6. '(' → logprob: -11.165884971618652
    7. '),' → logprob: -12.165884971618652
    8. ')`' → logprob: -12.165884971618652
    9. '`)' → logprob: -12.415884971618652
    10. ' )' → logprob: -12.665884971618652

Token 56: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7320783734321594
    2. '<|end|>' → logprob: -0.8570783734321594
    3. 'if' → logprob: -3.2320783138275146
    4. ' if' → logprob: -3.6070783138275146
    5. '   ' → logprob: -4.857078552246094
    6. '  ' → logprob: -4.857078552246094
    7. '    ' → logprob: -5.857078552246094
    8. ')' → logprob: -6.107078552246094
    9. '<|end|>' → logprob: -6.357078552246094
    10. '  
' → logprob: -6.732078552246094

Token 57: ' if' (ID: 538)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 58: ' H' (ID: 487)
  Prédit: ' H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' H' → logprob: -0.0211221631616354
    2. 'H' → logprob: -3.8961222171783447
    3. ' not' → logprob: -7.646121978759766
    4. ' (' → logprob: -9.771121978759766
    5. ' ' → logprob: -10.271121978759766
    6. '(' → logprob: -12.396121978759766
    7. '(H' → logprob: -12.771121978759766
    8. 'not' → logprob: -12.896121978759766
    9. ' ' → logprob: -15.146121978759766
    10. '(not' → logprob: -15.396121978759766

Token 59: '==' (ID: 560)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.43133366107940674
    2. '==' → logprob: -1.0563336610794067
    3. '=' → logprob: -6.306333541870117
    4. ' ' → logprob: -8.306333541870117
    5. '<' → logprob: -8.806333541870117
    6. ' =' → logprob: -8.931333541870117
    7. '0' → logprob: -10.056333541870117
    8. ' <' → logprob: -10.181333541870117
    9. ')==' → logprob: -10.556333541870117
    10. ')' → logprob: -10.681333541870117

Token 60: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.006720229052007198
    2. ' ' → logprob: -5.006720066070557
    3. 'W' → logprob: -13.006720542907715
    4. '۰' → logprob: -14.756720542907715
    5. '```' → logprob: -14.944220542907715
    6. ' W' → logprob: -15.069220542907715
    7. '０' → logprob: -15.631720542907715
    8. '  ' → logprob: -15.694220542907715
    9. '

' → logprob: -16.0692195892334
    10. '   ' → logprob: -16.3817195892334

Token 61: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.011151456274092197
    2. 'and' → logprob: -4.511151313781738
    3. ' or' → logprob: -9.636151313781738
    4. ' ' → logprob: -10.636151313781738
    5. ':' → logprob: -11.886151313781738
    6. '	and' → logprob: -12.886151313781738
    7. '   ' → logprob: -13.386151313781738
    8. '<|end|>' → logprob: -14.261151313781738
    9. ' a' → logprob: -14.386151313781738
    10. '  ' → logprob: -14.386151313781738

Token 62: ' W' (ID: 486)
  Prédit: ' W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' W' → logprob: -0.0017678854055702686
    2. 'W' → logprob: -6.501768112182617
    3. ' ' → logprob: -8.251768112182617
    4. '<|end|>' → logprob: -12.376768112182617
    5. '	W' → logprob: -15.251768112182617
    6. '  ' → logprob: -15.876768112182617
    7. ' ' → logprob: -16.751768112182617
    8. '<W' → logprob: -17.501768112182617
    9. '<|end|>' → logprob: -17.876768112182617
    10. ' 
' → logprob: -18.376768112182617

Token 63: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.0001246348983841017
    2. ' ==' → logprob: -9.00012493133545
    3. '0' → logprob: -15.12512493133545
    4. '===' → logprob: -15.37512493133545
    5. '=' → logprob: -15.75012493133545
    6. ']==' → logprob: -16.125123977661133
    7. '<|end|>' → logprob: -16.125123977661133
    8. '()==' → logprob: -16.375123977661133
    9. ')==' → logprob: -16.375123977661133
    10. '==
' → logprob: -16.500123977661133

Token 64: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0002636006975080818
    2. ' ' → logprob: -8.250263214111328
    3. '<|end|>' → logprob: -13.250263214111328
    4. '   ' → logprob: -15.750263214111328
    5. '۰' → logprob: -16.562763214111328
    6. '  ' → logprob: -16.875263214111328
    7. '<|end|>' → logprob: -17.125263214111328
    8. 'and' → logprob: -17.125263214111328
    9. ' and' → logprob: -17.250263214111328
    10. '০' → logprob: -17.875263214111328

Token 65: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.006734438240528107
    2. 'and' → logprob: -5.006734371185303
    3. ' ' → logprob: -12.006734848022461
    4. '	and' → logprob: -12.256734848022461
    5. '<|end|>' → logprob: -12.756734848022461
    6. '<|end|>' → logprob: -13.006734848022461
    7. ' a' → logprob: -13.756734848022461
    8. ' ' → logprob: -14.006734848022461
    9. 'a' → logprob: -15.256734848022461
    10. ' и' → logprob: -15.381734848022461

Token 66: ' L' (ID: 451)
  Prédit: ' L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' L' → logprob: -0.2811906635761261
    2. 'L' → logprob: -1.4061906337738037
    3. ' ' → logprob: -10.281190872192383
    4. ' ' → logprob: -12.656190872192383
    5. '0' → logprob: -13.406190872192383
    6. '<|end|>' → logprob: -14.406190872192383
    7. '	L' → logprob: -15.281190872192383
    8. '>L' → logprob: -15.281190872192383
    9. '  ' → logprob: -15.281190872192383
    10. '   ' → logprob: -16.781190872192383

Token 67: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.004798918962478638
    2. ' ==' → logprob: -5.379798889160156
    3. '=' → logprob: -9.379798889160156
    4. '0' → logprob: -10.254798889160156
    5. ')==' → logprob: -10.504798889160156
    6. '<|end|>' → logprob: -11.129798889160156
    7. ']==' → logprob: -11.879798889160156
    8. '()==' → logprob: -12.879798889160156
    9. '<|end|>' → logprob: -12.879798889160156
    10. '===' → logprob: -13.629798889160156

Token 68: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.3544423381972592e-05
    2. ' ' → logprob: -11.25001335144043
    3. '<|end|>' → logprob: -14.75001335144043
    4. '۰' → logprob: -17.00001335144043
    5. '   ' → logprob: -17.87501335144043
    6. '  ' → logprob: -18.00001335144043
    7. '<|end|>' → logprob: -18.12501335144043
    8. '০' → logprob: -18.25001335144043
    9. '０' → logprob: -18.62501335144043
    10. '०' → logprob: -18.87501335144043

Token 69: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0009076489950530231
    2. ':
' → logprob: -7.2509074211120605
    3. '   ' → logprob: -8.625907897949219
    4. ' :' → logprob: -11.875907897949219
    5. '.' → logprob: -12.375907897949219
    6. '       ' → logprob: -12.750907897949219
    7. '	break' → logprob: -13.250907897949219
    8. ' break' → logprob: -14.375907897949219
    9. ':return' → logprob: -15.000907897949219
    10. ',' → logprob: -15.125907897949219

Token 70: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07033341377973557
    2. '   ' → logprob: -2.695333480834961
    3. '	break' → logprob: -8.820333480834961
    4. ':' → logprob: -8.945333480834961
    5. '    ' → logprob: -10.820333480834961
    6. '\n' → logprob: -10.945333480834961
    7. ' break' → logprob: -11.070333480834961
    8. '      ' → logprob: -11.320333480834961
    9. '     ' → logprob: -11.445333480834961
    10. '	' → logprob: -11.695333480834961

Token 71: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.10417187958955765
    2. 'break' (adapté à ' break') → logprob: -2.6041719913482666
    3. '   ' → logprob: -4.2291717529296875
    4. '       ' → logprob: -4.8541717529296875
    5. '	break' → logprob: -5.9791717529296875
    6. 'b' → logprob: -10.104171752929688
    7. '_break' → logprob: -11.979171752929688
    8. '```' → logprob: -11.979171752929688
    9. '-break' → logprob: -12.604171752929688
    10. '  ' → logprob: -12.854171752929688

Token 72: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7461606860160828
    2. '
' → logprob: -1.4961607456207275
    3. '    
' → logprob: -1.7461607456207275
    4. '<|end|>' → logprob: -3.1211607456207275
    5. ' 
' → logprob: -4.371160507202148
    6. '  
' → logprob: -4.496160507202148
    7. '\n' → logprob: -4.871160507202148
    8. 'n' → logprob: -4.996160507202148
    9. 'newline' → logprob: -5.246160507202148
    10. 'a' → logprob: -5.246160507202148

Token 73: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4480206072330475
    2. '   ' → logprob: -1.448020577430725
    3. '    
' → logprob: -2.9480206966400146
    4. '<|end|>' → logprob: -3.6980206966400146
    5. '  
' → logprob: -4.6980204582214355
    6. ' 
' → logprob: -4.8230204582214355
    7. 'map' → logprob: -5.5730204582214355
    8. ' ' → logprob: -5.9480204582214355
    9. '   
' → logprob: -5.9480204582214355
    10. 'n' → logprob: -6.3230204582214355

Token 74: ' maze' (ID: 58295)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -1.1725422143936157
    2. 'field' → logprob: -1.4225422143936157
    3. '   ' → logprob: -1.7975422143936157
    4. 'grid' → logprob: -2.297542095184326
    5. '    
' → logprob: -2.922542095184326
    6. 'board' → logprob: -3.547542095184326
    7. 'maze' (adapté à ' maze') → logprob: -3.797542095184326
    8. ' grid' → logprob: -4.297542095184326
    9. 'graph' → logprob: -4.672542095184326
    10. 'matrix' → logprob: -5.047542095184326

Token 75: '=[]
' (ID: 63466)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2529304325580597
    2. '=' → logprob: -1.5029304027557373
    3. '[' → logprob: -7.252930641174316
    4. ' =[' → logprob: -9.377930641174316
    5. '=[]' → logprob: -9.627930641174316
    6. ' ' → logprob: -9.752930641174316
    7. '=[' → logprob: -10.752930641174316
    8. '_' → logprob: -10.877930641174316
    9. ',' → logprob: -11.127930641174316
    10. ' =
' → logprob: -12.127930641174316

Token 76: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04442804306745529
    2. ' for' → logprob: -3.9194281101226807
    3. 'for' → logprob: -4.169427871704102
    4. '<|end|>' → logprob: -5.544427871704102
    5. '    ' → logprob: -6.794427871704102
    6. '    
' → logprob: -6.919427871704102
    7. '	for' → logprob: -6.919427871704102
    8. ' ' → logprob: -8.044427871704102
    9. ')' → logprob: -8.919427871704102
    10. '[' → logprob: -9.169427871704102

Token 77: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5231603384017944
    2. 'for' (adapté à ' for') → logprob: -0.8981603384017944
    3. '   ' → logprob: -10.773159980773926
    4. '	for' → logprob: -13.023159980773926
    5. 'start' → logprob: -13.148159980773926
    6. 's' → logprob: -13.523159980773926
    7. ' ' → logprob: -13.648159980773926
    8. ' start' → logprob: -13.898159980773926
    9. ' ' → logprob: -13.898159980773926
    10. ' r' → logprob: -14.148159980773926

Token 78: ' i' (ID: 575)
  Prédit: ' _'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.02983957715332508
    2. '_' → logprob: -3.529839515686035
    3. ' i' → logprob: -9.404839515686035
    4. '_i' → logprob: -12.154839515686035
    5. ' ' → logprob: -13.904839515686035
    6. 'i' → logprob: -14.529839515686035
    7. ' ' → logprob: -16.15484046936035
    8. ' ‌' → logprob: -17.02984046936035
    9. '_=' → logprob: -18.77984046936035
    10. '   ' → logprob: -19.27984046936035

Token 79: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2520560324192047
    2. 'in' → logprob: -1.5020560026168823
    3. '	in' → logprob: -9.627056121826172
    4. '_' → logprob: -10.752056121826172
    5. ' ' → logprob: -12.002056121826172
    6. '=' → logprob: -12.002056121826172
    7. 'range' → logprob: -12.377056121826172
    8. ' i' → logprob: -12.502056121826172
    9. 'n' → logprob: -12.627056121826172
    10. ' _' → logprob: -13.252056121826172

Token 80: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.0485965758562088
    2. 'range' → logprob: -3.0485966205596924
    3. '	range' → logprob: -11.923596382141113
    4. '_range' → logprob: -14.423596382141113
    5. ' xrange' → logprob: -14.798596382141113
    6. '(range' → logprob: -14.798596382141113
    7. 'rang' → logprob: -15.048596382141113
    8. ' ' → logprob: -15.173596382141113
    9. ' ran' → logprob: -15.423596382141113
    10. 'r' → logprob: -15.923596382141113

Token 81: '(H' (ID: 20904)
  Prédit: '(H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -0.002330574905499816
    2. '(' → logprob: -6.127330780029297
    3. ' (' → logprob: -8.877330780029297
    4. ' H' → logprob: -12.252330780029297
    5. 'H' → logprob: -14.252330780029297
    6. '	H' → logprob: -15.377330780029297
    7. '(L' → logprob: -15.877330780029297
    8. ' ' → logprob: -16.502330780029297
    9. '(
' → logprob: -16.752330780029297
    10. '(W' → logprob: -17.127330780029297

Token 82: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00011069540778407827
    2. ' ):' → logprob: -10.125110626220703
    3. ')' → logprob: -10.375110626220703
    4. '):
' → logprob: -10.500110626220703
    5. ':' → logprob: -12.625110626220703
    6. '+' → logprob: -12.875110626220703
    7. '   ' → logprob: -12.875110626220703
    8. ' ' → logprob: -14.000110626220703
    9. ']:' → logprob: -14.625110626220703
    10. '):
' → logprob: -15.000110626220703

Token 83: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23258689045906067
    2. '   ' → logprob: -2.3575868606567383
    3. ' ' → logprob: -2.9825868606567383
    4. '    ' → logprob: -3.1075868606567383
    5. '<|end|>' → logprob: -4.857586860656738
    6. '        ' → logprob: -5.732586860656738
    7. '  ' → logprob: -6.982586860656738
    8. '      ' → logprob: -6.982586860656738
    9. '     ' → logprob: -7.232586860656738
    10. ',' → logprob: -7.732586860656738

Token 84: ' row' (ID: 5225)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8157178163528442
    2. ' maze' → logprob: -0.9407178163528442
    3. '   ' → logprob: -2.0657176971435547
    4. 'maze' → logprob: -3.6907176971435547
    5. '    ' → logprob: -4.815717697143555
    6. ' ma' → logprob: -6.690717697143555
    7. ' s' → logprob: -6.690717697143555
    8. ' ' → logprob: -6.815717697143555
    9. '  ' → logprob: -7.065717697143555
    10. '       ' → logprob: -7.065717697143555

Token 85: '=list' (ID: 93413)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10026945173740387
    2. ' =' → logprob: -2.3502695560455322
    3. '=list' → logprob: -10.350269317626953
    4. '=input' → logprob: -10.600269317626953
    5. '.append' → logprob: -12.850269317626953
    6. '＝' → logprob: -13.975269317626953
    7. '=[]' → logprob: -14.850269317626953
    8. '=line' → logprob: -14.975269317626953
    9. '=

' → logprob: -15.350269317626953
    10. '+=' → logprob: -15.600269317626953

Token 86: '(input' (ID: 10054)
  Prédit: '(map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.032074108719825745
    2. '(' → logprob: -4.032073974609375
    3. '(input' → logprob: -4.282073974609375
    4. '()' → logprob: -12.157073974609375
    5. '(str' → logprob: -12.532073974609375
    6. '(int' → logprob: -12.907073974609375
    7. '(

' → logprob: -14.657073974609375
    8. '(
' → logprob: -14.782073974609375
    9. '(filter' → logprob: -15.657073974609375
    10. '(sys' → logprob: -15.782073974609375

Token 87: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00016766376211307943
    2. '())' → logprob: -9.125167846679688
    3. '()' → logprob: -9.750167846679688
    4. ' ().' → logprob: -16.375167846679688
    5. 'rstrip' → logprob: -16.375167846679688
    6. '(' → logprob: -16.625167846679688
    7. '.rstrip' → logprob: -16.750167846679688
    8. '.strip' → logprob: -17.375167846679688
    9. '(strip' → logprob: -17.625167846679688
    10. 'strip' → logprob: -18.500167846679688

Token 88: 'rstrip' (ID: 180429)
  Prédit: 'rstrip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rstrip' → logprob: -0.06196959316730499
    2. 'strip' → logprob: -2.811969518661499
    3. 'split' → logprob: -13.186969757080078
    4. '.rstrip' → logprob: -17.436969757080078
    5. ' strip' → logprob: -18.061969757080078
    6. 'rs' → logprob: -18.686969757080078
    7. 'r' → logprob: -18.686969757080078
    8. 'replace' → logprob: -19.311969757080078
    9. '(strip' → logprob: -20.186969757080078
    10. 'str' → logprob: -20.311969757080078

Token 89: '('\' (ID: 24345)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.022897643968462944
    2. '('\' → logprob: -3.897897720336914
    3. '()' → logprob: -6.897897720336914
    4. ')' → logprob: -7.022897720336914
    5. '())
' → logprob: -8.772897720336914
    6. '(' → logprob: -9.147897720336914
    7. '()\' → logprob: -9.647897720336914
    8. '().' → logprob: -10.022897720336914
    9. '("\' → logprob: -10.272897720336914
    10. '())

' → logprob: -11.397897720336914

Token 90: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0019306590547785163
    2. '\n' → logprob: -6.2519307136535645
    3. '
' → logprob: -14.001930236816406
    4. ')' → logprob: -15.251930236816406
    5. ' n' → logprob: -15.626930236816406
    6. 'r' → logprob: -16.001930236816406
    7. '('\' → logprob: -16.251930236816406
    8. ''\' → logprob: -16.251930236816406
    9. ')n' → logprob: -16.376930236816406
    10. '')' → logprob: -16.501930236816406

Token 91: ''))
' (ID: 15277)
  Prédit: ''))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''))' → logprob: -0.6365197896957397
    2. '))' → logprob: -1.2615197896957397
    3. ')' → logprob: -1.7615197896957397
    4. '()))' → logprob: -5.136519908905029
    5. '()' → logprob: -5.511519908905029
    6. '')' → logprob: -6.136519908905029
    7. ').' → logprob: -6.636519908905029
    8. ''))
' → logprob: -7.261519908905029
    9. '"))' → logprob: -7.511519908905029
    10. '').' → logprob: -8.011519432067871

Token 92: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014744059182703495
    2. '<|end|>' → logprob: -4.889744281768799
    3. ')' → logprob: -5.264744281768799
    4. '   ' → logprob: -6.639744281768799
    5. ' ' → logprob: -9.26474380493164
    6. '<|end|>' → logprob: -9.38974380493164
    7. '	' → logprob: -9.51474380493164
    8. '
' → logprob: -9.76474380493164
    9. ')
' → logprob: -9.88974380493164
    10. '      ' → logprob: -10.13974380493164

Token 93: ' maze' (ID: 58295)
  Prédit: 'maze'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'maze' (adapté à ' maze') → logprob: -0.6260560750961304
    2. ' maze' → logprob: -0.8760560750961304
    3. '   ' → logprob: -3.12605619430542
    4. '       ' → logprob: -5.37605619430542
    5. ' ' → logprob: -9.376055717468262
    6. '    ' → logprob: -10.001055717468262
    7. ')' → logprob: -10.501055717468262
    8. '_ma' → logprob: -10.876055717468262
    9. 'ma' → logprob: -10.876055717468262
    10. '  ' → logprob: -11.001055717468262

Token 94: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00606732489541173
    2. '.' → logprob: -5.131067276000977
    3. '.extend' → logprob: -9.131067276000977
    4. '.app' → logprob: -11.381067276000977
    5. '.ap' → logprob: -12.006067276000977
    6. '.setdefault' → logprob: -12.381067276000977
    7. ' .' → logprob: -12.506067276000977
    8. '.add' → logprob: -13.006067276000977
    9. '<|end|>' → logprob: -14.506067276000977
    10. '.Append' → logprob: -15.006067276000977

Token 95: '(row' (ID: 15945)
  Prédit: '(row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(row' → logprob: -0.0005536287208087742
    2. '(' → logprob: -7.500553607940674
    3. '(
' → logprob: -14.875554084777832
    4. '(rows' → logprob: -16.125553131103516
    5. ' (' → logprob: -16.625553131103516
    6. '(column' → logprob: -17.625553131103516
    7. '(line' → logprob: -18.000553131103516
    8. '(Row' → logprob: -18.625553131103516
    9. '(list' → logprob: -18.750553131103516
    10. '((' → logprob: -18.875553131103516

Token 96: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.641841820150148e-05
    2. ' )' → logprob: -11.12502670288086
    3. ')
' → logprob: -12.00002670288086
    4. '   ' → logprob: -12.25002670288086
    5. ')return' → logprob: -15.75002670288086
    6. '))' → logprob: -15.87502670288086
    7. ' ' → logprob: -16.25002670288086
    8. ')n' → logprob: -17.25002670288086
    9. '`)' → logprob: -17.50002670288086
    10. '[])' → logprob: -17.50002670288086

Token 97: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.29791131615638733
    2. '
' → logprob: -1.797911286354065
    3. '    
' → logprob: -3.4229114055633545
    4. 'visited' → logprob: -4.297911167144775
    5. ' 
' → logprob: -5.547911167144775
    6. 'r' → logprob: -5.547911167144775
    7. ' visited' → logprob: -5.672911167144775
    8. '  
' → logprob: -5.797911167144775
    9. 'start' → logprob: -5.797911167144775
    10. 's' → logprob: -5.922911167144775

Token 98: ' for' (ID: 395)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -1.1410951614379883
    2. '   ' → logprob: -1.7660951614379883
    3. 'visited' → logprob: -2.0160951614379883
    4. 'start' → logprob: -2.6410951614379883
    5. ' visited' → logprob: -2.6410951614379883
    6. ' pos' → logprob: -3.3910951614379883
    7. '    
' → logprob: -3.3910951614379883
    8. ' start' → logprob: -3.5160951614379883
    9. 'position' → logprob: -4.016095161437988
    10. '
' → logprob: -4.516095161437988

Token 99: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.05269455909729004
    2. ' _' → logprob: -3.80269455909729
    3. ' ' → logprob: -4.052694320678711
    4. 'i' → logprob: -5.427694320678711
    5. ' l' → logprob: -6.052694320678711
    6. ' d' → logprob: -6.427694320678711
    7. '_' → logprob: -7.177694320678711
    8. ' x' → logprob: -7.552694320678711
    9. ' y' → logprob: -7.927694320678711
    10. ' h' → logprob: -8.052694320678711

Token 100: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.00987118761986494
    2. 'in' → logprob: -4.634871006011963
    3. ' ' → logprob: -9.384871482849121
    4. '  ' → logprob: -12.259871482849121
    5. 'range' → logprob: -12.259871482849121
    6. 'n' → logprob: -12.384871482849121
    7. '   ' → logprob: -12.509871482849121
    8. ' i' → logprob: -12.634871482849121
    9. '    ' → logprob: -13.259871482849121
    10. ' range' → logprob: -13.259871482849121

Token 101: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.054902710020542145
    2. 'range' → logprob: -2.9299027919769287
    3. ' maze' → logprob: -11.929903030395508
    4. ' ' → logprob: -12.554903030395508
    5. 'maze' → logprob: -13.554903030395508
    6. '  ' → logprob: -13.929903030395508
    7. '	range' → logprob: -13.992403030395508
    8. '(range' → logprob: -13.992403030395508
    9. '   ' → logprob: -14.179903030395508
    10. ')' → logprob: -14.242403030395508

Token 102: '(H' (ID: 20904)
  Prédit: '(H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -0.29055923223495483
    2. '(L' → logprob: -1.4155592918395996
    3. '(' → logprob: -4.9155592918396
    4. '(len' → logprob: -7.4155592918396
    5. '(range' → logprob: -7.4155592918396
    6. '(W' → logprob: -8.165558815002441
    7. ' (' → logprob: -8.415558815002441
    8. ' range' → logprob: -8.665558815002441
    9. ' H' → logprob: -10.415558815002441
    10. 'range' → logprob: -10.665558815002441

Token 103: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.005904265213757753
    2. ')' → logprob: -5.505904197692871
    3. '):
' → logprob: -6.505904197692871
    4. '   ' → logprob: -8.880904197692871
    5. ' ):' → logprob: -9.755904197692871
    6. ':' → logprob: -10.005904197692871
    7. '+' → logprob: -10.255904197692871
    8. '-' → logprob: -11.380904197692871
    9. '[' → logprob: -11.505904197692871
    10. ' ' → logprob: -11.755904197692871

Token 104: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05699855834245682
    2. '   ' → logprob: -3.5569984912872314
    3. ' ' → logprob: -4.3069987297058105
    4. '    ' → logprob: -5.0569987297058105
    5. '<|end|>' → logprob: -5.3069987297058105
    6. ' for' → logprob: -7.0569987297058105
    7. '  ' → logprob: -8.181998252868652
    8. '      ' → logprob: -8.306998252868652
    9. '        ' → logprob: -8.806998252868652
    10. '[' → logprob: -9.431998252868652

Token 105: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2968272566795349
    2. '   ' → logprob: -1.7968273162841797
    3. '       ' → logprob: -2.5468273162841797
    4. 'for' (adapté à ' for') → logprob: -4.54682731628418
    5. '    ' → logprob: -6.92182731628418
    6. ' ' → logprob: -8.04682731628418
    7. ' print' → logprob: -8.04682731628418
    8. ' if' → logprob: -8.92182731628418
    9. ' row' → logprob: -9.29682731628418
    10. '        ' → logprob: -10.17182731628418

Token 106: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.16025327146053314
    2. 'j' → logprob: -1.9102532863616943
    3. 'range' → logprob: -11.160253524780273
    4. ' range' → logprob: -11.410253524780273
    5. '   ' → logprob: -13.410253524780273
    6. ' ' → logprob: -14.160253524780273
    7. '  ' → logprob: -15.035253524780273
    8. '    ' → logprob: -15.160253524780273
    9. '_j' → logprob: -15.285253524780273
    10. ',j' → logprob: -15.910253524780273

Token 107: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.033919185400009155
    2. 'in' → logprob: -3.408919095993042
    3. '    ' → logprob: -9.408919334411621
    4. ' ' → logprob: -9.658919334411621
    5. '   ' → logprob: -9.783919334411621
    6. '        ' → logprob: -10.533919334411621
    7. '       ' → logprob: -10.658919334411621
    8. '	in' → logprob: -11.908919334411621
    9. '  ' → logprob: -12.658919334411621
    10. '<|end|>' → logprob: -13.033919334411621

Token 108: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.25222888588905334
    2. ' range' → logprob: -1.502228856086731
    3. '(range' → logprob: -8.127228736877441
    4. '(' → logprob: -12.502228736877441
    5. '	range' → logprob: -15.127228736877441
    6. ' xrange' → logprob: -15.502228736877441
    7. ' ' → logprob: -16.752229690551758
    8. ')' → logprob: -16.752229690551758
    9. 'ange' → logprob: -17.252229690551758
    10. '.range' → logprob: -17.627229690551758

Token 109: '(W' (ID: 26031)
  Prédit: '(W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(W' → logprob: -0.00030829108436591923
    2. '(' → logprob: -8.6253080368042
    3. ' (' → logprob: -10.2503080368042
    4. 'range' → logprob: -10.5003080368042
    5. '(H' → logprob: -10.7503080368042
    6. '(range' → logprob: -11.5003080368042
    7. 'W' → logprob: -11.5003080368042
    8. ' range' → logprob: -11.6253080368042
    9. ')' → logprob: -12.2503080368042
    10. '(L' → logprob: -12.6253080368042

Token 110: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.11514324694871902
    2. ')' → logprob: -2.240143299102783
    3. '):
' → logprob: -6.615143299102783
    4. ':' → logprob: -7.365143299102783
    5. ' ):' → logprob: -8.740142822265625
    6. '<|end|>' → logprob: -9.740142822265625
    7. ' )' → logprob: -9.990142822265625
    8. '):

' → logprob: -11.240142822265625
    9. 'if' → logprob: -11.365142822265625
    10. ' if' → logprob: -11.865142822265625

Token 111: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0719643086194992
    2. '       ' → logprob: -2.8219642639160156
    3. ' if' → logprob: -5.696964263916016
    4. ':' → logprob: -5.696964263916016
    5. '        ' → logprob: -7.571964263916016
    6. '   ' → logprob: -7.571964263916016
    7. ' and' → logprob: -7.821964263916016
    8. '          ' → logprob: -8.446964263916016
    9. ':
' → logprob: -8.446964263916016
    10. 'if' → logprob: -8.446964263916016

Token 112: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.09492145478725433
    2. '           ' → logprob: -3.094921350479126
    3. 'if' (adapté à ' if') → logprob: -4.219921588897705
    4. '       ' → logprob: -4.344921588897705
    5. ' ' → logprob: -4.969921588897705
    6. '   ' → logprob: -5.344921588897705
    7. '               ' → logprob: -5.844921588897705
    8. '    ' → logprob: -7.094921588897705
    9. ':' → logprob: -7.469921588897705
    10. '        ' → logprob: -8.469921112060547

Token 113: ' maze' (ID: 58295)
  Prédit: ' maze'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' maze' → logprob: -0.029797356575727463
    2. 'maze' → logprob: -3.529797315597534
    3. '   ' → logprob: -11.029797554016113
    4. ' ' → logprob: -11.279797554016113
    5. ' ma' → logprob: -12.154797554016113
    6. 'ma' → logprob: -12.779797554016113
    7. ' len' → logprob: -13.029797554016113
    8. ' '' → logprob: -14.029797554016113
    9. ' labyrinth' → logprob: -14.154797554016113
    10. '    ' → logprob: -14.217297554016113

Token 114: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00011594036914175376
    2. '[j' → logprob: -9.125116348266602
    3. '[I' → logprob: -12.125116348266602
    4. '```' → logprob: -14.250116348266602
    5. ' [' → logprob: -15.000116348266602
    6. '[' → logprob: -15.375116348266602
    7. '[a' → logprob: -16.7501163482666
    8. '[
' → logprob: -17.2501163482666
    9. '   ' → logprob: -17.3751163482666
    10. '[x' → logprob: -17.3751163482666

Token 115: '][' (ID: 2696)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.08450386673212051
    2. '][' → logprob: -2.8345038890838623
    3. '[i' → logprob: -3.8345038890838623
    4. '[' → logprob: -8.209504127502441
    5. '==' → logprob: -9.959504127502441
    6. ' [' → logprob: -9.959504127502441
    7. '[I' → logprob: -10.209504127502441
    8. ''][' → logprob: -10.334504127502441
    9. '[
' → logprob: -10.834504127502441
    10. '```' → logprob: -10.834504127502441

Token 116: 'j' (ID: 73)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.7181620597839355
    2. 'j' → logprob: -1.4681620597839355
    3. ''L' → logprob: -1.4681620597839355
    4. 'L' → logprob: -3.5931620597839355
    5. ''S' → logprob: -4.9681620597839355
    6. '0' → logprob: -5.0931620597839355
    7. ']' → logprob: -5.9681620597839355
    8. ''s' → logprob: -6.5931620597839355
    9. ' '' → logprob: -6.9681620597839355
    10. ''i' → logprob: -6.9681620597839355

Token 117: ']' (ID: 60)
  Prédit: '==''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=='' → logprob: -0.7641119360923767
    2. ']=='' → logprob: -1.2641119956970215
    3. '==' → logprob: -2.3891119956970215
    4. ']' → logprob: -2.5141119956970215
    5. ']==' → logprob: -2.6391119956970215
    6. ' ==' → logprob: -5.3891119956970215
    7. '']=='' → logprob: -7.2641119956970215
    8. ' =='' → logprob: -7.2641119956970215
    9. ')=='' → logprob: -8.014111518859863
    10. '=="' → logprob: -8.389111518859863

Token 118: ' in' (ID: 306)
  Prédit: '==''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=='' → logprob: -0.4429899752140045
    2. '==' → logprob: -1.0679899454116821
    3. ' ==' → logprob: -4.442989826202393
    4. ' =='' → logprob: -7.067989826202393
    5. '=="' → logprob: -7.442989826202393
    6. '=' → logprob: -8.06799030303955
    7. ' in' → logprob: -8.19299030303955
    8. ']=='' → logprob: -8.81799030303955
    9. ']==' → logprob: -10.19299030303955
    10. 'in' → logprob: -10.31799030303955

Token 119: ' directions' (ID: 24921)
  Prédit: 'dire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dire' → logprob: -0.0174217838793993
    2. ' directions' → logprob: -4.267421722412109
    3. '['' → logprob: -5.892421722412109
    4. ''d' → logprob: -8.01742172241211
    5. ' ['' → logprob: -10.51742172241211
    6. '('' → logprob: -10.51742172241211
    7. ''' → logprob: -10.64242172241211
    8. 'direction' → logprob: -11.14242172241211
    9. '   ' → logprob: -11.26742172241211
    10. 'dirs' → logprob: -11.51742172241211

Token 120: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0006261797971092165
    2. ':
' → logprob: -8.125626564025879
    3. ' and' → logprob: -9.000626564025879
    4. ' :' → logprob: -9.125626564025879
    5. '):' → logprob: -10.250626564025879
    6. ':return' → logprob: -11.375626564025879
    7. '==' → logprob: -11.750626564025879
    8. 'and' → logprob: -12.000626564025879
    9. ':index' → logprob: -12.375626564025879
    10. '>:' → logprob: -12.625626564025879

Token 121: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.24939316511154175
    2. ':' → logprob: -1.8743932247161865
    3. ' and' → logprob: -2.8743932247161865
    4. ' :' → logprob: -5.249392986297607
    5. ':
' → logprob: -6.124392986297607
    6. '           ' → logprob: -6.999392986297607
    7. '              ' → logprob: -7.874392986297607
    8. ',' → logprob: -8.249393463134766
    9. 'and' → logprob: -8.624393463134766
    10. ' =' → logprob: -8.999393463134766

Token 122: ' x' (ID: 1215)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.9202214479446411
    2. ' x' → logprob: -1.1702214479446411
    3. ' direction' → logprob: -1.6702214479446411
    4. ' dir' → logprob: -3.5452213287353516
    5. 'd' → logprob: -4.295221328735352
    6. 'x' (adapté à ' x') → logprob: -4.420221328735352
    7. 'direction' → logprob: -4.420221328735352
    8. ' orientation' → logprob: -4.545221328735352
    9. ' pos' → logprob: -5.170221328735352
    10. ' start' → logprob: -5.670221328735352

Token 123: ',y' (ID: 16103)
  Prédit: ',y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',y' → logprob: -0.479066401720047
    2. ',' → logprob: -0.9790663719177246
    3. ' =' → logprob: -5.854066371917725
    4. '=' → logprob: -7.854066371917725
    5. ' ,' → logprob: -7.854066371917725
    6. '=i' → logprob: -7.854066371917725
    7. ',i' → logprob: -7.854066371917725
    8. '=y' → logprob: -7.979066371917725
    9. ',j' → logprob: -9.229066848754883
    10. ',x' → logprob: -10.104066848754883

Token 124: '=i' (ID: 48141)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.331099271774292
    2. ',' → logprob: -2.081099271774292
    3. ',i' → logprob: -2.831099271774292
    4. '=' → logprob: -2.956099271774292
    5. '=i' → logprob: -3.331099271774292
    6. ',n' → logprob: -5.206099510192871
    7. ',d' → logprob: -6.706099510192871
    8. ',j' → logprob: -6.956099510192871
    9. ' ,' → logprob: -7.206099510192871
    10. ',x' → logprob: -7.456099510192871

Token 125: ',j' (ID: 22712)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11133862286806107
    2. ',j' → logprob: -2.4863386154174805
    3. ' ,' → logprob: -3.9863386154174805
    4. ',d' → logprob: -6.3613386154174805
    5. ',y' → logprob: -7.2363386154174805
    6. ',w' → logprob: -8.36133861541748
    7. ',x' → logprob: -8.48633861541748
    8. ',z' → logprob: -8.61133861541748
    9. ',n' → logprob: -9.11133861541748
    10. ',k' → logprob: -9.98633861541748

Token 126: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.09632531553506851
    2. 'direction' → logprob: -3.221325397491455
    3. ',d' → logprob: -3.846325397491455
    4. ',' → logprob: -4.971325397491455
    5. '
' → logprob: -4.971325397491455
    6. 'd' → logprob: -5.096325397491455
    7. ' direction' → logprob: -5.596325397491455
    8. 'dir' → logprob: -5.971325397491455
    9. ' dir' → logprob: -6.846325397491455
    10. ' d' → logprob: -7.346325397491455

Token 127: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.004781357478350401
    2. '
' → logprob: -6.254781246185303
    3. 'direction' → logprob: -6.504781246185303
    4. ' direction' → logprob: -7.254781246185303
    5. 'd' → logprob: -9.004781723022461
    6. ' d' → logprob: -9.379781723022461
    7. ',' → logprob: -9.504781723022461
    8. '                
' → logprob: -9.629781723022461
    9. '                ' → logprob: -10.004781723022461
    10. 'orientation' → logprob: -10.129781723022461

Token 128: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' (adapté à ' d') → logprob: -0.09398723393678665
    2. 'direction' → logprob: -3.093987226486206
    3. 'dir' → logprob: -3.218987226486206
    4. 'f' → logprob: -6.468987464904785
    5. 'face' → logprob: -7.093987464904785
    6. '               ' → logprob: -7.093987464904785
    7. 'orientation' → logprob: -8.343987464904785
    8. ' d' → logprob: -8.343987464904785
    9. ' direction' → logprob: -8.718987464904785
    10. ' dir' → logprob: -9.218987464904785

Token 129: '=d' (ID: 56413)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03833338990807533
    2. 'irections' → logprob: -4.038333415985107
    3. ' =' → logprob: -4.163333415985107
    4. 'irection' → logprob: -6.163333415985107
    5. 'ir' → logprob: -7.038333415985107
    6. '=i' → logprob: -7.413333415985107
    7. '=d' → logprob: -8.28833293914795
    8. '=index' → logprob: -8.66333293914795
    9. 'ire' → logprob: -9.28833293914795
    10. 'irect' → logprob: -9.41333293914795

Token 130: 'irections' (ID: 119283)
  Prédit: 'irections'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'irections' → logprob: -0.00012248923303559422
    2. 'dire' → logprob: -9.2501220703125
    3. 'irect' → logprob: -11.0001220703125
    4. 'ire' → logprob: -12.2501220703125
    5. 'irection' → logprob: -13.5001220703125
    6. 'i' → logprob: -14.2501220703125
    7. 'ir' → logprob: -14.3751220703125
    8. '[' → logprob: -14.3751220703125
    9. ' directions' → logprob: -15.0001220703125
    10. 'irected' → logprob: -15.2501220703125

Token 131: '.index' (ID: 9736)
  Prédit: '.index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.index' → logprob: -0.00045438710367307067
    2. '.' → logprob: -7.750454425811768
    3. ').' → logprob: -11.62545394897461
    4. '.find' → logprob: -12.25045394897461
    5. ' .' → logprob: -12.37545394897461
    6. 'index' → logprob: -12.87545394897461
    7. '.Index' → logprob: -13.62545394897461
    8. '.idx' → logprob: -15.12545394897461
    9. '}.' → logprob: -15.37545394897461
    10. '].' → logprob: -15.50045394897461

Token 132: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -2.696889623621246e-06
    2. 'maze' → logprob: -13.37500286102295
    3. '(ma' → logprob: -14.00000286102295
    4. '((' → logprob: -16.500001907348633
    5. '(
' → logprob: -17.000001907348633
    6. '('' → logprob: -17.250001907348633
    7. ' (' → logprob: -18.125001907348633
    8. 'ma' → logprob: -18.750001907348633
    9. '(m' → logprob: -19.125001907348633
    10. '(d' → logprob: -19.375001907348633

Token 133: 'maze' (ID: 117436)
  Prédit: 'maze'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'maze' → logprob: -0.00016480287013109773
    2. ' maze' → logprob: -8.875164985656738
    3. '(' → logprob: -10.750164985656738
    4. 'ma' → logprob: -12.750164985656738
    5. 'maz' → logprob: -14.500164985656738
    6. '   ' → logprob: -18.125164031982422
    7. ' ' → logprob: -18.250164031982422
    8. 'mage' → logprob: -18.250164031982422
    9. '(ma' → logprob: -18.500164031982422
    10. ')' → logprob: -18.750164031982422

Token 134: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0011722482740879059
    2. '[x' → logprob: -6.751172065734863
    3. '[' → logprob: -13.626172065734863
    4. '[y' → logprob: -15.376172065734863
    5. 'i' → logprob: -15.876172065734863
    6. ')' → logprob: -16.62617301940918
    7. '[j' → logprob: -17.12617301940918
    8. ' [' → logprob: -17.12617301940918
    9. ')[' → logprob: -17.50117301940918
    10. 'x' → logprob: -17.50117301940918

Token 135: '][' (ID: 2696)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.066144660115242
    2. '][' → logprob: -2.9411447048187256
    3. '[x' → logprob: -5.0661444664001465
    4. '[i' → logprob: -6.1911444664001465
    5. '[y' → logprob: -6.4411444664001465
    6. '[' → logprob: -7.5661444664001465
    7. 'j' → logprob: -9.441144943237305
    8. ']' → logprob: -9.816144943237305
    9. ')[' → logprob: -9.816144943237305
    10. '[s' → logprob: -9.941144943237305

Token 136: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.676292231422849e-05
    2. '[j' → logprob: -11.250017166137695
    3. '][' → logprob: -13.750017166137695
    4. 'x' → logprob: -14.750017166137695
    5. '])' → logprob: -14.875017166137695
    6. ' j' → logprob: -14.875017166137695
    7. ']' → logprob: -14.875017166137695
    8. '(j' → logprob: -15.250017166137695
    9. 'y' → logprob: -15.375017166137695
    10. '```' → logprob: -15.375017166137695

Token 137: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.005732890218496323
    2. ')' → logprob: -5.255733013153076
    3. '])
' → logprob: -7.880733013153076
    4. ')])' → logprob: -10.005732536315918
    5. ''])' → logprob: -10.755732536315918
    6. ')]' → logprob: -11.255732536315918
    7. ')
' → logprob: -11.380732536315918
    8. ']' → logprob: -11.880732536315918
    9. '))' → logprob: -12.005732536315918
    10. ' ])' → logprob: -12.130732536315918

Token 138: '               ' (ID: 506)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 139: ' maze' (ID: 58295)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.6793806552886963
    2. ' break' → logprob: -1.0543806552886963
    3. 'maze' (adapté à ' maze') → logprob: -2.3043806552886963
    4. ' maze' → logprob: -3.9293806552886963
    5. '   ' → logprob: -5.179380416870117
    6. '    ' → logprob: -5.554380416870117
    7. ' ' → logprob: -6.054380416870117
    8. '       ' → logprob: -6.179380416870117
    9. '           ' → logprob: -6.304380416870117
    10. '<|end|>' → logprob: -6.804380416870117

Token 140: '[i' (ID: 1768)
  Prédit: '[x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.002690032823011279
    2. '[i' → logprob: -6.002689838409424
    3. '[' → logprob: -8.502690315246582
    4. '[I' → logprob: -13.002690315246582
    5. 'x' → logprob: -13.127690315246582
    6. '[s' → logprob: -13.502690315246582
    7. '[start' → logprob: -14.127690315246582
    8. ' [' → logprob: -14.502690315246582
    9. '[int' → logprob: -14.502690315246582
    10. '[
' → logprob: -15.002690315246582

Token 141: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.01338633056730032
    2. '[x' → logprob: -4.763386249542236
    3. '[i' → logprob: -6.013386249542236
    4. '[' → logprob: -6.388386249542236
    5. ']' → logprob: -8.138386726379395
    6. ' ][' → logprob: -8.888386726379395
    7. '[j' → logprob: -9.513386726379395
    8. '[I' → logprob: -11.013386726379395
    9. '[y' → logprob: -11.263386726379395
    10. ']][' → logprob: -11.388386726379395

Token 142: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -3.881560041918419e-05
    2. 'y' → logprob: -10.250039100646973
    3. 'x' → logprob: -13.250039100646973
    4. '][' → logprob: -14.625039100646973
    5. ' j' → logprob: -14.625039100646973
    6. '```' → logprob: -15.000039100646973
    7. '0' → logprob: -15.625039100646973
    8. '   ' → logprob: -16.500038146972656
    9. ']' → logprob: -16.750038146972656
    10. '	j' → logprob: -17.250038146972656

Token 143: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5466987490653992
    2. ']='' → logprob: -1.046698808670044
    3. ']=' → logprob: -2.671698808670044
    4. '='' → logprob: -7.296698570251465
    5. ' ]' → logprob: -9.546698570251465
    6. ']=='' → logprob: -10.046698570251465
    7. ']="' → logprob: -10.171698570251465
    8. '']='' → logprob: -11.046698570251465
    9. ']=(' → logprob: -11.421698570251465
    10. ')' → logprob: -11.671698570251465

Token 144: ' =' (ID: 314)
  Prédit: '=''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '='' → logprob: -0.3153415322303772
    2. '=' → logprob: -1.3153414726257324
    3. ' =' → logprob: -6.690341472625732
    4. ' ='' → logprob: -7.315341472625732
    5. '='#' → logprob: -9.56534194946289
    6. '=''' → logprob: -10.69034194946289
    7. '=='' → logprob: -11.56534194946289
    8. '="' → logprob: -11.69034194946289
    9. '='.' → logprob: -11.81534194946289
    10. '=('' → logprob: -12.06534194946289

Token 145: ' '.' (ID: 12662)
  Prédit: ''.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''.' → logprob: -0.003706492716446519
    2. '.' → logprob: -6.503706455230713
    3. ''*' → logprob: -6.753706455230713
    4. ''' → logprob: -7.128706455230713
    5. ''#' → logprob: -9.253706932067871
    6. '"."' → logprob: -9.753706932067871
    7. '".' → logprob: -10.503706932067871
    8. '('.')' → logprob: -11.128706932067871
    9. ' '.'' → logprob: -11.253706932067871
    10. '#' → logprob: -12.628706932067871

Token 146: ''
' (ID: 2207)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 147: '               ' (ID: 506)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0447829961776733
    2. 'while' → logprob: -1.4197829961776733
    3. 'for' → logprob: -1.7947829961776733
    4. ' while' → logprob: -2.544783115386963
    5. ' for' → logprob: -2.669783115386963
    6. '<|end|>' → logprob: -3.794783115386963
    7. ' ' → logprob: -4.419783115386963
    8. 's' → logprob: -4.669783115386963
    9. '
' → logprob: -4.919783115386963
    10. 'n' → logprob: -5.044783115386963

Token 148: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -1.6275763511657715
    2. 'while' → logprob: -2.2525763511657715
    3. 'break' (adapté à ' break') → logprob: -2.5025763511657715
    4. ' while' → logprob: -2.6275763511657715
    5. 'count' → logprob: -2.6275763511657715
    6. ' ' → logprob: -2.7525763511657715
    7. ' continue' → logprob: -2.7525763511657715
    8. 'for' → logprob: -3.0025763511657715
    9. 'n' → logprob: -3.2525763511657715
    10. 'continue' → logprob: -3.3775763511657715

Token 149: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 150: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 151: ' else' (ID: 1203)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.067650318145752
    2. ' ' → logprob: -1.317650318145752
    3. '<|end|>' → logprob: -1.692650318145752
    4. '   ' → logprob: -2.692650318145752
    5. ' 
' → logprob: -3.067650318145752
    6. '  
' → logprob: -3.817650318145752
    7. '    ' → logprob: -3.817650318145752
    8. '    
' → logprob: -4.442650318145752
    9. '  ' → logprob: -4.567650318145752
    10. 'else' (adapté à ' else') → logprob: -5.192650318145752

Token 152: ':
' (ID: 734)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.16379034519195557
    2. '           ' → logprob: -2.413790225982666
    3. ':' → logprob: -3.413790225982666
    4. '	continue' → logprob: -4.663790225982666
    5. '       ' → logprob: -4.788790225982666
    6. 'continue' → logprob: -5.163790225982666
    7. '   ' → logprob: -6.038790225982666
    8. ':
' → logprob: -6.288790225982666
    9. ' continues' → logprob: -8.038790702819824
    10. '_continue' → logprob: -8.913790702819824

Token 153: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23973394930362701
    2. '           ' → logprob: -2.239733934402466
    3. ' continue' → logprob: -2.739733934402466
    4. 'continue' → logprob: -3.614733934402466
    5. '   ' → logprob: -4.239734172821045
    6. '	continue' → logprob: -7.239734172821045
    7. '```' → logprob: -11.864733695983887
    8. '	   ' → logprob: -12.114733695983887
    9. '	       ' → logprob: -12.239733695983887
    10. '               ' → logprob: -12.364733695983887

Token 154: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.020064465701580048
    2. ' continue' → logprob: -4.020064353942871
    3. '   ' → logprob: -6.770064353942871
    4. '	continue' → logprob: -8.020064353942871
    5. '       ' → logprob: -8.145064353942871
    6. '           ' → logprob: -8.895064353942871
    7. 'contin' → logprob: -12.895064353942871
    8. '```' → logprob: -13.395064353942871
    9. '_continue' → logprob: -13.520064353942871
    10. 'continu' → logprob: -13.520064353942871

Token 155: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3133780360221863
    2. '   ' → logprob: -1.313378095626831
    3. '           ' → logprob: -9.18837833404541
    4. '     ' → logprob: -12.56337833404541
    5. '    ' → logprob: -12.81337833404541
    6. 'break' → logprob: -13.06337833404541
    7. '<|end|>' → logprob: -13.43837833404541
    8. ' ' → logprob: -13.56337833404541
    9. '	   ' → logprob: -14.68837833404541
    10. '               ' → logprob: -14.68837833404541

Token 156: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003716342616826296
    2. '   ' → logprob: -5.628716468811035
    3. '           ' → logprob: -9.253716468811035
    4. '    ' → logprob: -11.253716468811035
    5. '     ' → logprob: -12.753716468811035
    6. 'break' → logprob: -13.878716468811035
    7. '               ' → logprob: -14.003716468811035
    8. '      ' → logprob: -14.128716468811035
    9. '        ' → logprob: -14.628716468811035
    10. '	   ' → logprob: -14.753716468811035

Token 157: ' break' (ID: 2338)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.037862904369831085
    2. 'break' (adapté à ' break') → logprob: -3.41286301612854
    3. '   ' → logprob: -5.537862777709961
    4. ' break' → logprob: -8.537862777709961
    5. '           ' → logprob: -10.287862777709961
    6. '	break' → logprob: -10.537862777709961
    7. '               ' → logprob: -12.037862777709961
    8. '     ' → logprob: -13.287862777709961
    9. ' ' → logprob: -13.287862777709961
    10. '```' → logprob: -13.287862777709961

Token 158: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7055808901786804
    2. '   ' → logprob: -1.4555809497833252
    3. ' for' → logprob: -1.4555809497833252
    4. 's' → logprob: -4.705580711364746
    5. 'while' → logprob: -4.705580711364746
    6. '    
' → logprob: -5.330580711364746
    7. 'l' → logprob: -5.830580711364746
    8. 'count' → logprob: -6.205580711364746
    9. ' while' → logprob: -6.205580711364746
    10. ' 
' → logprob: -6.330580711364746

Token 159: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5253739356994629
    2. 'commands' → logprob: -1.150373935699463
    3. 'command' → logprob: -2.525373935699463
    4. 'instructions' → logprob: -6.150373935699463
    5. ' for' → logprob: -6.275373935699463
    6. 'cmd' → logprob: -6.650373935699463
    7. 's' → logprob: -6.775373935699463
    8. 'S' → logprob: -6.900373935699463
    9. '   ' → logprob: -7.025373935699463
    10. ' commands' → logprob: -7.150373935699463

Token 160: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8310420513153076
    2. 'commands' → logprob: -0.9560420513153076
    3. 'command' → logprob: -1.9560420513153076
    4. 'S' → logprob: -4.206042289733887
    5. 'cmd' → logprob: -4.831042289733887
    6. ' for' → logprob: -5.956042289733887
    7. 's' → logprob: -6.081042289733887
    8. '   ' → logprob: -6.206042289733887
    9. 'instructions' → logprob: -6.206042289733887
    10. 'program' → logprob: -6.331042289733887

Token 161: ' States' (ID: 6737)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.30257609486579895
    2. ' for' → logprob: -1.9275760650634766
    3. 'command' → logprob: -2.9275760650634766
    4. 'commands' → logprob: -3.5525760650634766
    5. ' command' → logprob: -4.677576065063477
    6. '   ' → logprob: -5.177576065063477
    7. 'x' → logprob: -5.177576065063477
    8. ' commands' → logprob: -5.802576065063477
    9. 'cmd' → logprob: -6.302576065063477
    10. ' x' → logprob: -6.677576065063477

Token 162: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04172297939658165
    2. '=' → logprob: -3.4167230129241943
    3. '   ' → logprob: -5.416722774505615
    4. '=[]' → logprob: -7.041722774505615
    5. 'visited' → logprob: -7.541722774505615
    6. '=[' → logprob: -7.791722774505615
    7. ' =
' → logprob: -7.916722774505615
    8. '=[]
' → logprob: -8.666723251342773
    9. ',' → logprob: -8.916723251342773
    10. ' visited' → logprob: -9.041723251342773

Token 163: ' position' (ID: 4010)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.2265472412109375
    2. 'from' → logprob: -1.8515472412109375
    3. ' x' → logprob: -1.8515472412109375
    4. ' from' → logprob: -2.2265472412109375
    5. ' visited' → logprob: -2.2265472412109375
    6. 'visited' → logprob: -2.2265472412109375
    7. ' (' → logprob: -3.1015472412109375
    8. '   ' → logprob: -4.9765472412109375
    9. '(x' → logprob: -5.1015472412109375
    10. '#' → logprob: -6.3515472412109375

Token 164: ' and' (ID: 326)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.13817717134952545
    2. ' =' → logprob: -2.2631771564483643
    3. 's' → logprob: -4.388177394866943
    4. ' ,' → logprob: -4.888177394866943
    5. '=' → logprob: -5.388177394866943
    6. ',s' → logprob: -9.263176918029785
    7. '   ' → logprob: -9.763176918029785
    8. ',
' → logprob: -10.138176918029785
    9. '_stack' → logprob: -10.263176918029785
    10. ' and' → logprob: -10.763176918029785

Token 165: ' direction' (ID: 9262)
  Prédit: 'direction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'direction' → logprob: -0.009743100963532925
    2. ' direction' → logprob: -4.7597432136535645
    3. 'd' → logprob: -7.3847432136535645
    4. 'orientation' → logprob: -8.009742736816406
    5. 'f' → logprob: -10.009742736816406
    6. 'dir' → logprob: -10.259742736816406
    7. 'current' → logprob: -10.509742736816406
    8. 'dire' → logprob: -11.009742736816406
    9. 'heading' → logprob: -11.509742736816406
    10. '(direction' → logprob: -11.634742736816406

Token 166: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0695397853851318
    2. 'state' → logprob: -1.5695397853851318
    3. '
' → logprob: -2.319539785385132
    4. 'states' → logprob: -2.694539785385132
    5. 'visited' → logprob: -2.694539785385132
    6. 'for' → logprob: -3.194539785385132
    7. 'commands' → logprob: -3.444539785385132
    8. ' visited' → logprob: -3.569539785385132
    9. ' for' → logprob: -3.819539785385132
    10. ' states' → logprob: -4.319540023803711

Token 167: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4034099280834198
    2. 'visited' → logprob: -1.9034099578857422
    3. ' visited' → logprob: -2.528409957885742
    4. '
' → logprob: -2.903409957885742
    5. 'state' → logprob: -3.778409957885742
    6. 'while' → logprob: -5.528409957885742
    7. '    
' → logprob: -5.778409957885742
    8. ' while' → logprob: -5.778409957885742
    9. ',' → logprob: -6.153409957885742
    10. 'states' → logprob: -6.528409957885742

Token 168: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' (adapté à ' visited') → logprob: -0.7281811237335205
    2. ' visited' → logprob: -2.1031811237335205
    3. ' from' → logprob: -2.4781811237335205
    4. 'from' → logprob: -2.4781811237335205
    5. 'x' → logprob: -2.6031811237335205
    6. 'state' → logprob: -3.3531811237335205
    7. ' x' → logprob: -3.4781811237335205
    8. '   ' → logprob: -3.8531811237335205
    9. 'for' → logprob: -4.103180885314941
    10. ' for' → logprob: -4.603180885314941

Token 169: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6331607699394226
    2. ' =' → logprob: -0.7581607699394226
    3. '=[' → logprob: -8.008160591125488
    4. '=set' → logprob: -9.508160591125488
    5. '=[[' → logprob: -10.133160591125488
    6. '[' → logprob: -10.883160591125488
    7. '=[]' → logprob: -10.883160591125488
    8. '[x' → logprob: -11.008160591125488
    9. ' ' → logprob: -11.008160591125488
    10. ',' → logprob: -11.383160591125488

Token 170: ' dict' (ID: 11878)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.01820109784603119
    2. 'set' → logprob: -4.018200874328613
    3. '[' → logprob: -11.018200874328613
    4. ' [[[' → logprob: -11.143200874328613
    5. '{' → logprob: -11.393200874328613
    6. '{}' → logprob: -11.893200874328613
    7. ' set' → logprob: -13.893200874328613
    8. '{{' → logprob: -14.518200874328613
    9. '[(' → logprob: -14.893200874328613
    10. '[{' → logprob: -16.39320182800293

Token 171: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0019507750403136015
    2. '([(' → logprob: -6.751950740814209
    3. '()
' → logprob: -8.501951217651367
    4. '[(' → logprob: -8.876951217651367
    5. '{' → logprob: -9.001951217651367
    6. '(' → logprob: -9.376951217651367
    7. '((' → logprob: -9.626951217651367
    8. '()\' → logprob: -10.126951217651367
    9. '{}' → logprob: -10.501951217651367
    10. '[' → logprob: -10.876951217651367

Token 172: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.29728081822395325
    2. ' 
' → logprob: -3.047280788421631
    3. ' while' → logprob: -3.547280788421631
    4. '    
' → logprob: -3.547280788421631
    5. ' for' → logprob: -3.797280788421631
    6. '[' → logprob: -4.047280788421631
    7. 'for' → logprob: -4.047280788421631
    8. 'while' → logprob: -4.047280788421631
    9. '
' → logprob: -4.672280788421631
    10. '\n' → logprob: -4.922280788421631

Token 173: ' path' (ID: 3104)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.9143401384353638
    2. 'stack' → logprob: -1.7893401384353638
    3. ' for' → logprob: -2.039340019226074
    4. 'queue' → logprob: -2.414340019226074
    5. ' queue' → logprob: -2.789340019226074
    6. 'state' → logprob: -3.164340019226074
    7. '   ' → logprob: -3.539340019226074
    8. ' stack' → logprob: -4.039340019226074
    9. 'visited' → logprob: -4.414340019226074
    10. 'q' → logprob: -4.664340019226074

Token 174: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.36273011565208435
    2. '=' → logprob: -1.2377301454544067
    3. '_' → logprob: -5.737730026245117
    4. '[' → logprob: -5.737730026245117
    5. '=[]' → logprob: -5.987730026245117
    6. '_length' → logprob: -6.487730026245117
    7. '.' → logprob: -6.987730026245117
    8. ' ' → logprob: -7.362730026245117
    9. '.append' → logprob: -7.487730026245117
    10. ')' → logprob: -8.112730026245117

Token 175: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.020847590640187263
    2. '[(' → logprob: -4.020847797393799
    3. '[' → logprob: -6.895847797393799
    4. '''' → logprob: -7.895847797393799
    5. '""' → logprob: -8.02084732055664
    6. ' []' → logprob: -8.14584732055664
    7. '['' → logprob: -8.27084732055664
    8. 'set' → logprob: -8.64584732055664
    9. '[]
' → logprob: -9.27084732055664
    10. '{}' → logprob: -10.77084732055664

Token 176: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2672810554504395
    2. ' while' → logprob: -1.3922810554504395
    3. 'while' → logprob: -2.0172810554504395
    4. 'for' → logprob: -2.6422810554504395
    5. ' for' → logprob: -2.6422810554504395
    6. ' 
' → logprob: -2.8922810554504395
    7. '<|end|>' → logprob: -2.8922810554504395
    8. ' ' → logprob: -4.2672810554504395
    9. '[' → logprob: -4.5172810554504395
    10. '
' → logprob: -4.8922810554504395

Token 177: ' step' (ID: 5983)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.14970886707305908
    2. ' for' → logprob: -2.1497087478637695
    3. 'command' → logprob: -4.3997087478637695
    4. '   ' → logprob: -6.2747087478637695
    5. ' command' → logprob: -6.5247087478637695
    6. 'while' → logprob: -6.7747087478637695
    7. 'commands' → logprob: -7.0247087478637695
    8. 'c' → logprob: -7.6497087478637695
    9. 'current' → logprob: -7.7747087478637695
    10. 'i' → logprob: -7.7747087478637695

Token 178: '=' (ID: 28)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.2322884052991867
    2. '=' → logprob: -1.8572883605957031
    3. ' =' → logprob: -2.982288360595703
    4. '_' → logprob: -8.232288360595703
    5. '_count' → logprob: -8.732288360595703
    6. '_s' → logprob: -10.357288360595703
    7. ' s' → logprob: -10.732288360595703
    8. ' ' → logprob: -11.607288360595703
    9. 'count' → logprob: -12.607288360595703
    10. '_=' → logprob: -13.107288360595703

Token 179: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00040457461727783084
    2. '1' → logprob: -8.250404357910156
    3. ' ' → logprob: -8.875404357910156
    4. '-' → logprob: -13.000404357910156
    5. '[]' → logprob: -15.000404357910156
    6. 'L' → logprob: -15.500404357910156
    7. '[' → logprob: -15.750404357910156
    8. '{}' → logprob: -16.312904357910156
    9. '=' → logprob: -16.562904357910156
    10. '000' → logprob: -17.062904357910156

Token 180: '

' (ID: 279)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' while' → logprob: -1.1637904644012451
    2. '   ' → logprob: -1.4137904644012451
    3. 'while' → logprob: -1.7887904644012451
    4. '
' → logprob: -2.288790464401245
    5. ' for' → logprob: -3.038790464401245
    6. ' 
' → logprob: -3.413790464401245
    7. '<|end|>' → logprob: -3.663790464401245
    8. 'for' → logprob: -4.163790702819824
    9. '    
' → logprob: -4.163790702819824
    10. '  
' → logprob: -4.413790702819824

Token 181: '   ' (ID: 271)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.2010025531053543
    2. '   ' → logprob: -2.826002597808838
    3. 'while' → logprob: -3.076002597808838
    4. ' 
' → logprob: -3.576002597808838
    5. ' ' → logprob: -4.076002597808838
    6. '<|end|>' → logprob: -4.326002597808838
    7. ',' → logprob: -4.951002597808838
    8. ' for' → logprob: -6.201002597808838
    9. '
' → logprob: -6.826002597808838
    10. '    ' → logprob: -7.076002597808838

Token 182: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.26375553011894226
    2. 'for' → logprob: -2.0137555599212646
    3. ' while' → logprob: -2.7637555599212646
    4. '   ' → logprob: -4.6387553215026855
    5. ' for' → logprob: -4.6387553215026855
    6. 'x' → logprob: -5.2637553215026855
    7. 'state' → logprob: -6.0137553215026855
    8. 'stack' → logprob: -6.3887553215026855
    9. 'command' → logprob: -7.1387553215026855
    10. 'current' → logprob: -7.1387553215026855

Token 183: ' step' (ID: 5983)
  Prédit: 'step'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'step' → logprob: -0.16081847250461578
    2. ' step' → logprob: -1.9108184576034546
    3. 'True' → logprob: -8.285818099975586
    4. ' True' → logprob: -8.410818099975586
    5. 'path' → logprob: -9.660818099975586
    6. ' path' → logprob: -10.285818099975586
    7. 'L' → logprob: -12.160818099975586
    8. ' L' → logprob: -12.285818099975586
    9. '(step' → logprob: -12.410818099975586
    10. '	step' → logprob: -12.660818099975586

Token 184: '<L' (ID: 87012)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.07991831749677658
    2. '<' → logprob: -2.579918384552002
    3. ' <=' → logprob: -7.454918384552002
    4. ' ' → logprob: -8.954917907714844
    5. '<len' → logprob: -9.079917907714844
    6. '<L' → logprob: -9.329917907714844
    7. '<=' → logprob: -9.454917907714844
    8. '<size' → logprob: -12.079917907714844
    9. ' <
' → logprob: -12.204917907714844
    10. '[' → logprob: -12.329917907714844

Token 185: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.010151729919016361
    2. ':
' → logprob: -4.6351518630981445
    3. '   ' → logprob: -8.385151863098145
    4. ' :' → logprob: -9.385151863098145
    5. ',' → logprob: -10.135151863098145
    6. ' and' → logprob: -11.260151863098145
    7. ' :
' → logprob: -11.510151863098145
    8. '       ' → logprob: -12.510151863098145
    9. '):' → logprob: -12.635151863098145
    10. ':

' → logprob: -13.135151863098145

Token 186: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6008324027061462
    2. '   ' → logprob: -0.9758324027061462
    3. ' x' → logprob: -3.725832462310791
    4. '    ' → logprob: -4.475832462310791
    5. 'x' → logprob: -4.850832462310791
    6. '    
' → logprob: -5.225832462310791
    7. ' if' → logprob: -5.350832462310791
    8. '        
' → logprob: -5.350832462310791
    9. 'n' → logprob: -5.850832462310791
    10. ' 
' → logprob: -5.975832462310791

Token 187: ' state' (ID: 2608)
  Prédit: 'nx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nx' → logprob: -0.03641021251678467
    2. '   ' → logprob: -4.161410331726074
    3. ' nx' → logprob: -4.286410331726074
    4. 'x' → logprob: -6.286410331726074
    5. 'cx' → logprob: -6.661410331726074
    6. 'step' → logprob: -6.786410331726074
    7. 'state' (adapté à ' state') → logprob: -7.786410331726074
    8. '       ' → logprob: -8.036410331726074
    9. 'if' → logprob: -8.036410331726074
    10. '```' → logprob: -8.786410331726074

Token 188: '=(' (ID: 9893)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2017960101366043
    2. ' =' → logprob: -1.701796054840088
    3. '=(' → logprob: -7.951796054840088
    4. ' =(' → logprob: -10.57679557800293
    5. '=
' → logprob: -13.32679557800293
    6. ',' → logprob: -13.45179557800293
    7. '=

' → logprob: -14.57679557800293
    8. ' =
' → logprob: -15.07679557800293
    9. '＝' → logprob: -15.20179557800293
    10. ' (' → logprob: -15.45179557800293

Token 189: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.00021271906734909862
    2. '(x' → logprob: -8.500212669372559
    3. ' x' → logprob: -11.625212669372559
    4. ' (' → logprob: -15.375212669372559
    5. '(' → logprob: -17.375213623046875
    6. ')' → logprob: -17.625213623046875
    7. '   ' → logprob: -18.125213623046875
    8. ',x' → logprob: -18.375213623046875
    9. ')x' → logprob: -18.500213623046875
    10. '	x' → logprob: -19.500213623046875

Token 190: ',y' (ID: 16103)
  Prédit: ',y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',y' → logprob: -0.01815626211464405
    2. ',' → logprob: -4.018156051635742
    3. ' ,' → logprob: -12.143156051635742
    4. 'y' → logprob: -14.268156051635742
    5. ',Y' → logprob: -16.018156051635742
    6. ',
' → logprob: -16.518156051635742
    7. ',j' → logprob: -16.768156051635742
    8. ' y' → logprob: -17.643156051635742
    9. '','' → logprob: -17.643156051635742
    10. ',x' → logprob: -17.768156051635742

Token 191: ',d' (ID: 26159)
  Prédit: ',d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',d' → logprob: -0.048621319234371185
    2. ',' → logprob: -3.048621416091919
    3. ' ,' → logprob: -11.04862117767334
    4. ')' → logprob: -12.04862117767334
    5. ',)' → logprob: -12.67362117767334
    6. ',x' → logprob: -13.04862117767334
    7. ',
' → logprob: -13.67362117767334
    8. 'd' → logprob: -13.67362117767334
    9. ',state' → logprob: -14.29862117767334
    10. ',y' → logprob: -14.54862117767334

Token 192: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.018161997199058533
    2. ')
' → logprob: -4.018161773681641
    3. ')

' → logprob: -12.26816177368164
    4. ' )' → logprob: -12.64316177368164
    5. ')
' → logprob: -13.39316177368164
    6. ' )
' → logprob: -14.51816177368164
    7. ')#' → logprob: -15.01816177368164
    8. ',' → logprob: -15.14316177368164
    9. '       ' → logprob: -15.39316177368164
    10. ',)' → logprob: -15.51816177368164

Token 193: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0909612700343132
    2. ')' → logprob: -3.215961217880249
    3. '<|end|>' → logprob: -3.840961217880249
    4. '
' → logprob: -4.715961456298828
    5. ',' → logprob: -4.715961456298828
    6. ')
' → logprob: -6.340961456298828
    7. '#' → logprob: -6.965961456298828
    8. ' if' → logprob: -7.215961456298828
    9. '[' → logprob: -7.340961456298828
    10. '<|end|>' → logprob: -7.465961456298828

Token 194: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.009154783561825752
    2. 'visited' → logprob: -5.134154796600342
    3. ' if' → logprob: -6.009154796600342
    4. '       ' → logprob: -7.509154796600342
    5. '
' → logprob: -8.884154319763184
    6. '   ' → logprob: -10.384154319763184
    7. ')' → logprob: -10.884154319763184
    8. 'step' → logprob: -11.759154319763184
    9. ' visited' → logprob: -12.009154319763184
    10. '=' → logprob: -12.384154319763184

Token 195: ' state' (ID: 2608)
  Prédit: ' state'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' state' → logprob: -0.38688042759895325
    2. 'state' → logprob: -1.1368803977966309
    3. '(state' → logprob: -12.011880874633789
    4. '	state' → logprob: -13.761880874633789
    5. ' ' → logprob: -14.386880874633789
    6. ' visited' → logprob: -14.761880874633789
    7. ' step' → logprob: -15.386880874633789
    8. 'visited' → logprob: -15.386880874633789
    9. ' ' → logprob: -15.886880874633789
    10. ',state' → logprob: -16.01188087463379

Token 196: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3872204124927521
    2. 'in' → logprob: -1.1372203826904297
    3. ')' → logprob: -8.76222038269043
    4. ' not' → logprob: -9.38722038269043
    5. ' ' → logprob: -9.76222038269043
    6. 'not' → logprob: -10.63722038269043
    7. ']' → logprob: -12.13722038269043
    8. '	in' → logprob: -12.51222038269043
    9. ' )' → logprob: -12.63722038269043
    10. '<|end|>' → logprob: -13.38722038269043

Token 197: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.0031794982496649027
    2. ' visited' → logprob: -5.753179550170898
    3. '
' → logprob: -13.378179550170898
    4. '   ' → logprob: -15.628179550170898
    5. 'visit' → logprob: -17.6281795501709
    6. '       ' → logprob: -17.8781795501709
    7. 'Visited' → logprob: -18.0031795501709
    8. ' ' → logprob: -18.6281795501709
    9. '
' → logprob: -18.7531795501709
    10. '           ' → logprob: -18.7531795501709

Token 198: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002391587011516094
    2. ':
' → logprob: -6.252391815185547
    3. ' :' → logprob: -8.627391815185547
    4. ' and' → logprob: -9.002391815185547
    5. 'and' → logprob: -9.627391815185547
    6. ':return' → logprob: -10.127391815185547
    7. '):' → logprob: -10.252391815185547
    8. '=' → logprob: -12.877391815185547
    9. ':

' → logprob: -13.002391815185547
    10. '>:' → logprob: -13.252391815185547

Token 199: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.025670282542705536
    2. 'break' → logprob: -4.150670051574707
    3. 'step' → logprob: -5.525670051574707
    4. ' break' → logprob: -5.650670051574707
    5. ' step' → logprob: -7.025670051574707
    6. '       ' → logprob: -7.900670051574707
    7. 'visited' → logprob: -8.775670051574707
    8. 'x' → logprob: -8.900670051574707
    9. '   ' → logprob: -9.400670051574707
    10. 'path' → logprob: -9.775670051574707

Token 200: ' start' (ID: 1604)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.16291923820972443
    2. 'step' → logprob: -3.162919282913208
    3. '           ' → logprob: -3.287919282913208
    4. 'cycle' → logprob: -3.412919282913208
    5. 'path' → logprob: -4.787919044494629
    6. ' break' → logprob: -5.162919044494629
    7. 'x' → logprob: -5.162919044494629
    8. 'loop' → logprob: -5.412919044494629
    9. '   ' → logprob: -5.662919044494629
    10. '#' → logprob: -6.787919044494629

Token 201: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.08343946188688278
    2. ' =' → logprob: -3.083439350128174
    3. ',' → logprob: -3.458439350128174
    4. '_idx' → logprob: -6.708439350128174
    5. '_step' → logprob: -6.958439350128174
    6. '_index' → logprob: -8.208439826965332
    7. '=index' → logprob: -9.708439826965332
    8. 'step' → logprob: -10.458439826965332
    9. '```' → logprob: -10.583439826965332
    10. '_' → logprob: -11.083439826965332

Token 202: 'visited' (ID: 52453)
  Prédit: 'visited'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.000488110730657354
    2. ' visited' → logprob: -7.62548828125
    3. 'visit' → logprob: -18.37548828125
    4. '
' → logprob: -18.75048828125
    5. '   ' → logprob: -18.75048828125
    6. '0' → logprob: -18.87548828125
    7. 'state' → logprob: -19.25048828125
    8. 'vis' → logprob: -19.37548828125
    9. ' ' → logprob: -19.50048828125
    10. 'v' → logprob: -19.62548828125

Token 203: '[state' (ID: 134476)
  Prédit: '[state'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[state' → logprob: -0.0005552975926548243
    2. 'state' → logprob: -7.500555515289307
    3. '(state' → logprob: -13.375555038452148
    4. '[' → logprob: -14.625555038452148
    5. ' state' → logprob: -16.25055503845215
    6. ',state' → logprob: -17.00055503845215
    7. '[token' → logprob: -17.12555503845215
    8. '	state' → logprob: -17.37555503845215
    9. '[
' → logprob: -18.37555503845215
    10. '
' → logprob: -18.50055503845215

Token 204: ']
' (ID: 1592)
  Prédit: ']+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']+' → logprob: -0.2828042805194855
    2. ']' → logprob: -1.407804250717163
    3. '+' → logprob: -6.657804489135742
    4. ' ]' → logprob: -8.407804489135742
    5. ']+=' → logprob: -9.782804489135742
    6. ']
' → logprob: -10.532804489135742
    7. ')+' → logprob: -10.657804489135742
    8. '+]' → logprob: -11.407804489135742
    9. ' +' → logprob: -12.032804489135742
    10. ']+\' → logprob: -12.282804489135742

Token 205: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.015411481261253357
    2. '       ' → logprob: -4.640411376953125
    3. 'path' → logprob: -6.890411376953125
    4. ' path' → logprob: -7.140411376953125
    5. ' break' → logprob: -7.515411376953125
    6. ' step' → logprob: -7.765411376953125
    7. ' for' → logprob: -8.015411376953125
    8. '
' → logprob: -8.140411376953125
    9. 'break' → logprob: -8.265411376953125
    10. '```' → logprob: -8.265411376953125

Token 206: ' cycle' (ID: 15839)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.7279045581817627
    2. 'cycle' (adapté à ' cycle') → logprob: -1.1029045581817627
    3. 'loop' → logprob: -2.4779045581817627
    4. ' cycle' → logprob: -2.7279045581817627
    5. '           ' → logprob: -4.727904319763184
    6. ' path' → logprob: -5.102904319763184
    7. ' loop' → logprob: -5.227904319763184
    8. 'length' → logprob: -5.727904319763184
    9. 'if' → logprob: -6.102904319763184
    10. 'repeat' → logprob: -6.102904319763184

Token 207: '_len' (ID: 13683)
  Prédit: '_length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -0.5712085366249084
    2. '=' → logprob: -0.9462085366249084
    3. '_len' → logprob: -3.3212084770202637
    4. '_' → logprob: -5.321208477020264
    5. ' =' → logprob: -5.696208477020264
    6. '_start' → logprob: -6.321208477020264
    7. '=_' → logprob: -7.946208477020264
    8. '_=' → logprob: -9.321208953857422
    9. '_size' → logprob: -9.446208953857422
    10. '_end' → logprob: -9.571208953857422

Token 208: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.02328915148973465
    2. ' =' → logprob: -3.773289203643799
    3. '=len' → logprob: -10.27328872680664
    4. '=

' → logprob: -12.89828872680664
    5. '=int' → logprob: -13.02328872680664
    6. '=end' → logprob: -13.27328872680664
    7. '=
' → logprob: -14.14828872680664
    8. '=L' → logprob: -14.89828872680664
    9. '=cut' → logprob: -15.52328872680664
    10. ' ' → logprob: -16.02328872680664

Token 209: 'step' (ID: 17509)
  Prédit: 'step'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'step' → logprob: -0.0011711753904819489
    2. ' step' → logprob: -6.751171112060547
    3. 'len' → logprob: -13.876171112060547
    4. '(step' → logprob: -17.376171112060547
    5. '	step' → logprob: -17.626171112060547
    6. '   ' → logprob: -19.376171112060547
    7. 'path' → logprob: -19.876171112060547
    8. '_step' → logprob: -19.876171112060547
    9. 'steps' → logprob: -20.001171112060547
    10. 'Step' → logprob: -20.001171112060547

Token 210: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.3720037043094635
    2. ' -' → logprob: -1.3720036745071411
    3. '-start' → logprob: -2.8720037937164307
    4. '-step' → logprob: -7.747003555297852
    5. '-
' → logprob: -10.872003555297852
    6. '-stop' → logprob: -12.872003555297852
    7. '-remove' → logprob: -13.372003555297852
    8. ' -
' → logprob: -13.997003555297852
    9. '
' → logprob: -14.247003555297852
    10. '-ex' → logprob: -14.622003555297852

Token 211: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -4.5491004129871726e-05
    2. ' start' → logprob: -10.000045776367188
    3. 'visited' → logprob: -18.000045776367188
    4. ' ' → logprob: -20.875045776367188
    5. '	start' → logprob: -21.000045776367188
    6. 'visit' → logprob: -21.875045776367188
    7. '           ' → logprob: -21.875045776367188
    8. '   ' → logprob: -22.000045776367188
    9. '[start' → logprob: -22.375045776367188
    10. '(start' → logprob: -23.125045776367188

Token 212: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00279263430275023
    2. '
' → logprob: -6.127792835235596
    3. '<|end|>' → logprob: -8.002792358398438
    4. '            
' → logprob: -9.127792358398438
    5. '<|end|>' → logprob: -10.377792358398438
    6. '               ' → logprob: -10.377792358398438
    7. '       ' → logprob: -10.877792358398438
    8. ',' → logprob: -11.002792358398438
    9. '  
' → logprob: -11.752792358398438
    10. '          ' → logprob: -11.752792358398438

Token 213: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0031949470285326242
    2. '       ' → logprob: -7.003194808959961
    3. ' for' → logprob: -7.378194808959961
    4. ' break' → logprob: -7.503194808959961
    5. ' if' → logprob: -8.628194808959961
    6. '            
' → logprob: -9.128194808959961
    7. ' while' → logprob: -9.253194808959961
    8. '   ' → logprob: -9.378194808959961
    9. '
' → logprob: -9.628194808959961
    10. '<|end|>' → logprob: -9.753194808959961

Token 214: ' rem' (ID: 1662)
  Prédit: 'remaining'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'remaining' → logprob: -1.1235566139221191
    2. 'remain' → logprob: -1.4985566139221191
    3. '           ' → logprob: -1.8735566139221191
    4. 'if' → logprob: -2.248556613922119
    5. 'break' → logprob: -2.248556613922119
    6. 'cycle' → logprob: -3.748556613922119
    7. 'rem' (adapté à ' rem') → logprob: -3.998556613922119
    8. 're' → logprob: -4.248556613922119
    9. 'repeat' → logprob: -4.748556613922119
    10. 'rest' → logprob: -5.623556613922119

Token 215: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.19673332571983337
    2. ' =' → logprob: -2.071733236312866
    3. '=len' → logprob: -3.946733236312866
    4. '=a' → logprob: -4.946733474731445
    5. 'aining' → logprob: -5.071733474731445
    6. '=L' → logprob: -5.196733474731445
    7. 'ain' → logprob: -5.571733474731445
    8. 'inder' → logprob: -6.071733474731445
    9. 'a' → logprob: -6.446733474731445
    10. '=int' → logprob: -6.821733474731445

Token 216: ' (' (ID: 350)
  Prédit: '(L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(L' → logprob: -0.00607325229793787
    2. ' (' → logprob: -5.256073474884033
    3. 'L' → logprob: -7.131073474884033
    4. ' L' → logprob: -10.881072998046875
    5. '   ' → logprob: -11.881072998046875
    6. '(' → logprob: -12.006072998046875
    7. '((' → logprob: -13.256072998046875
    8. '(l' → logprob: -14.006072998046875
    9. '           ' → logprob: -14.131072998046875
    10. ' ' → logprob: -14.506072998046875

Token 217: 'L' (ID: 43)
  Prédit: 'L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.00032044618274085224
    2. ' L' → logprob: -8.250320434570312
    3. '(L' → logprob: -9.750320434570312
    4. ' (' → logprob: -14.750320434570312
    5. '   ' → logprob: -15.250320434570312
    6. ')L' → logprob: -16.125320434570312
    7. '	L' → logprob: -16.375320434570312
    8. ')' → logprob: -17.250320434570312
    9. '           ' → logprob: -18.000320434570312
    10. '(' → logprob: -18.250320434570312

Token 218: '-step' (ID: 41570)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.0798199325799942
    2. '-' → logprob: -2.579819917678833
    3. '-start' → logprob: -7.329820156097412
    4. '-step' → logprob: -8.204819679260254
    5. '-
' → logprob: -14.954819679260254
    6. ' -
' → logprob: -15.954819679260254
    7. '
' → logprob: -16.57982063293457
    8. '-s' → logprob: -16.82982063293457
    9. '-Step' → logprob: -16.82982063293457
    10. '[start' → logprob: -16.95482063293457

Token 219: ')//' (ID: 60375)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.009945433586835861
    2. ')%' → logprob: -5.259945392608643
    3. ' )' → logprob: -5.384945392608643
    4. ')//' → logprob: -9.2599458694458
    5. ')
' → logprob: -11.2599458694458
    6. '-' → logprob: -12.2599458694458
    7. ')#' → logprob: -14.3849458694458
    8. ' -' → logprob: -14.7599458694458
    9. ' )
' → logprob: -14.8849458694458
    10. '%' → logprob: -14.8849458694458

Token 220: 'cycle' (ID: 24879)
  Prédit: 'cycle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cycle' → logprob: -0.01814994215965271
    2. ' cycle' → logprob: -4.0181498527526855
    3. '_cycle' → logprob: -16.643150329589844
    4. 'cy' → logprob: -17.893150329589844
    5. ' ciclo' → logprob: -17.893150329589844
    6. 'cycl' → logprob: -17.893150329589844
    7. 'c' → logprob: -18.268150329589844
    8. '-cycle' → logprob: -19.143150329589844
    9. ' ' → logprob: -20.018150329589844
    10. 'cycled' → logprob: -20.143150329589844

Token 221: '_len' (ID: 13683)
  Prédit: '_len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_len' → logprob: -6.704273118884885e-07
    2. '_l' → logprob: -15.375000953674316
    3. '_length' → logprob: -15.500000953674316
    4. '_' → logprob: -16.5
    5. 'len' → logprob: -17.625
    6. '_LEN' → logprob: -17.625
    7. ' _' → logprob: -18.125
    8. 'ength' → logprob: -18.5
    9. '[len' → logprob: -19.0
    10. 'en' → logprob: -19.25

Token 222: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09944231808185577
    2. '
' → logprob: -2.84944224357605
    3. '*' → logprob: -3.84944224357605
    4. ' *' → logprob: -4.474442481994629
    5. ')' → logprob: -6.474442481994629
    6. '            ' → logprob: -7.099442481994629
    7. '               ' → logprob: -7.474442481994629
    8. '       ' → logprob: -8.224442481994629
    9. ')
' → logprob: -8.724442481994629
    10. '            
' → logprob: -9.224442481994629

Token 223: '           ' (ID: 352)
  Prédit: 'step'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'step' → logprob: -0.5609839558601379
    2. '           ' → logprob: -1.5609838962554932
    3. ' step' → logprob: -1.5609838962554932
    4. '       ' → logprob: -4.685984134674072
    5. '
' → logprob: -8.685983657836914
    6. '	step' → logprob: -10.185983657836914
    7. '   ' → logprob: -10.810983657836914
    8. '```' → logprob: -11.685983657836914
    9. '(step' → logprob: -11.935983657836914
    10. '*' → logprob: -12.060983657836914

Token 224: ' step' (ID: 5983)
  Prédit: 'step'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'step' (adapté à ' step') → logprob: -0.2526401877403259
    2. ' step' → logprob: -1.5026402473449707
    3. '           ' → logprob: -7.252640247344971
    4. '	step' → logprob: -14.002639770507812
    5. '
' → logprob: -14.377639770507812
    6. ' L' → logprob: -15.377639770507812
    7. '               ' → logprob: -15.627639770507812
    8. 'if' → logprob: -15.877639770507812
    9. '       ' → logprob: -16.002639770507812
    10. '   ' → logprob: -16.127639770507812

Token 225: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.20288746058940887
    2. ' +=' → logprob: -1.7028874158859253
    3. '=' → logprob: -6.577887535095215
    4. ' =' → logprob: -9.702887535095215
    5. '+' → logprob: -11.327887535095215
    6. '+=(' → logprob: -11.827887535095215
    7. ']+=' → logprob: -14.577887535095215
    8. ' +' → logprob: -14.577887535095215
    9. '+='' → logprob: -14.702887535095215
    10. '+="' → logprob: -15.327887535095215

Token 226: ' rem' (ID: 1662)
  Prédit: 'rem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rem' → logprob: -0.12863969802856445
    2. ' rem' → logprob: -2.1286396980285645
    3. 'cycle' → logprob: -6.5036396980285645
    4. ' cycle' → logprob: -8.503639221191406
    5. '(rem' → logprob: -11.753639221191406
    6. 'remain' → logprob: -14.628639221191406
    7. 'reman' → logprob: -15.128639221191406
    8. 'rep' → logprob: -15.628639221191406
    9. 're' → logprob: -15.753639221191406
    10. ' remainder' → logprob: -16.128639221191406

Token 227: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.004097516182810068
    2. ' *' → logprob: -5.5040974617004395
    3. '*c' → logprob: -10.879097938537598
    4. ' ' → logprob: -15.879097938537598
    5. '*object' → logprob: -16.12909698486328
    6. '*num' → logprob: -17.25409698486328
    7. '*(' → logprob: -17.62909698486328
    8. '*out' → logprob: -17.87909698486328
    9. '```' → logprob: -18.00409698486328
    10. ' ' → logprob: -18.37909698486328

Token 228: 'cycle' (ID: 24879)
  Prédit: 'cycle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cycle' → logprob: -0.00033546582562848926
    2. ' cycle' → logprob: -8.000335693359375
    3. '_cycle' → logprob: -18.125335693359375
    4. '-cycle' → logprob: -18.875335693359375
    5. 'ycle' → logprob: -20.000335693359375
    6. 'cycled' → logprob: -20.375335693359375
    7. 'cycles' → logprob: -20.750335693359375
    8. ' ' → logprob: -21.125335693359375
    9. 'cycler' → logprob: -21.125335693359375
    10. ' ciclo' → logprob: -21.375335693359375

Token 229: '_len' (ID: 13683)
  Prédit: '_len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_len' → logprob: -5.512236498361744e-07
    2. '_' → logprob: -15.375000953674316
    3. '_l' → logprob: -15.750000953674316
    4. 'len' → logprob: -16.0
    5. ' _' → logprob: -16.5
    6. '_LEN' → logprob: -18.625
    7. '_val' → logprob: -18.875
    8. '_ls' → logprob: -19.875
    9. '_length' → logprob: -20.0
    10. '_le' → logprob: -20.25

Token 230: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10343276709318161
    2. '           ' → logprob: -2.6034326553344727
    3. 'else' → logprob: -3.8534326553344727
    4. ' else' → logprob: -6.353432655334473
    5. '
' → logprob: -7.853432655334473
    6. 'continue' → logprob: -7.978432655334473
    7. '   ' → logprob: -8.978432655334473
    8. ' continue' → logprob: -9.603432655334473
    9. 'while' → logprob: -9.603432655334473
    10. '        
' → logprob: -9.728432655334473

Token 231: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005990774370729923
    2. 'else' → logprob: -5.880990982055664
    3. '
' → logprob: -6.380990982055664
    4. 'x' → logprob: -7.380990982055664
    5. 'while' → logprob: -8.005990982055664
    6. 'if' → logprob: -9.005990982055664
    7. '   ' → logprob: -9.755990982055664
    8. 'd' → logprob: -9.755990982055664
    9. '```' → logprob: -9.880990982055664
    10. ' else' → logprob: -9.880990982055664

Token 232: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.716858983039856
    2. 'else' → logprob: -0.716858983039856
    3. 'continue' → logprob: -4.716858863830566
    4. 'if' (adapté à ' if') → logprob: -4.966858863830566
    5. '           ' → logprob: -5.591858863830566
    6. ' else' → logprob: -6.091858863830566
    7. 'x' → logprob: -7.716858863830566
    8. 'while' → logprob: -7.716858863830566
    9. 'state' → logprob: -8.716858863830566
    10. '   ' → logprob: -9.216858863830566

Token 233: ' step' (ID: 5983)
  Prédit: 'step'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'step' → logprob: -0.3648304045200348
    2. 'rem' → logprob: -2.739830493927002
    3. ' rem' → logprob: -2.864830493927002
    4. '(L' → logprob: -2.864830493927002
    5. ' step' → logprob: -2.989830493927002
    6. 'L' → logprob: -3.614830493927002
    7. ' (' → logprob: -4.239830493927002
    8. '(step' → logprob: -4.239830493927002
    9. ' L' → logprob: -4.614830493927002
    10. '(rem' → logprob: -4.739830493927002

Token 234: '==' (ID: 560)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.33573049306869507
    2. '==' → logprob: -2.08573055267334
    3. ' <' → logprob: -2.58573055267334
    4. '>=' → logprob: -3.33573055267334
    5. '+' → logprob: -3.83573055267334
    6. '<L' → logprob: -3.96073055267334
    7. ' ==' → logprob: -5.58573055267334
    8. ' >=' → logprob: -5.83573055267334
    9. '<=' → logprob: -7.58573055267334
    10. '>' → logprob: -7.71073055267334

Token 235: 'L' (ID: 43)
  Prédit: 'L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.00018029935017693788
    2. ' L' → logprob: -8.6251802444458
    3. 'start' → logprob: -16.000181198120117
    4. '=L' → logprob: -16.000181198120117
    5. 'rem' → logprob: -16.250181198120117
    6. '   ' → logprob: -16.625181198120117
    7. '>L' → logprob: -16.750181198120117
    8. '	L' → logprob: -16.750181198120117
    9. 'step' → logprob: -17.000181198120117
    10. '
' → logprob: -17.250181198120117

Token 236: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06198897212743759
    2. ':
' → logprob: -2.8119890689849854
    3. ':return' → logprob: -11.936988830566406
    4. '       ' → logprob: -12.686988830566406
    5. ',' → logprob: -12.811988830566406
    6. ':
' → logprob: -13.186988830566406
    7. '           ' → logprob: -13.311988830566406
    8. '   ' → logprob: -13.436988830566406
    9. ' and' → logprob: -13.936988830566406
    10. '.' → logprob: -14.061988830566406

Token 237: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0027988182846456766
    2. '           ' → logprob: -6.002799034118652
    3. '   ' → logprob: -9.127799034118652
    4. 'break' → logprob: -9.127799034118652
    5. ' break' → logprob: -10.252799034118652
    6. '       ' → logprob: -10.377799034118652
    7. '	break' → logprob: -11.002799034118652
    8. '	           ' → logprob: -11.752799034118652
    9. '                   ' → logprob: -12.377799034118652
    10. ' ' → logprob: -13.252799034118652

Token 238: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.031026719138026237
    2. ' break' → logprob: -4.031026840209961
    3. '           ' → logprob: -5.031026840209961
    4. '               ' → logprob: -5.156026840209961
    5. '	break' → logprob: -7.781026840209961
    6. '   ' → logprob: -9.656026840209961
    7. '       ' → logprob: -12.156026840209961
    8. '```' → logprob: -12.656026840209961
    9. '                   ' → logprob: -12.781026840209961
    10. 'x' → logprob: -13.656026840209961

Token 239: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003163222223520279
    2. '   ' → logprob: -6.6281633377075195
    3. ')' → logprob: -7.7531633377075195
    4. ' x' → logprob: -7.8781633377075195
    5. 'x' → logprob: -8.00316333770752
    6. '
' → logprob: -8.50316333770752
    7. 'while' → logprob: -9.00316333770752
    8. 'else' → logprob: -9.12816333770752
    9. '           ' → logprob: -9.62816333770752
    10. ' while' → logprob: -10.50316333770752

Token 240: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02402425929903984
    2. '
' → logprob: -3.774024248123169
    3. '   ' → logprob: -8.39902400970459
    4. '        
' → logprob: -8.89902400970459
    5. ')' → logprob: -9.64902400970459
    6. ' x' → logprob: -10.52402400970459
    7. '	' → logprob: -10.52402400970459
    8. '    
' → logprob: -10.52402400970459
    9. '           ' → logprob: -10.52402400970459
    10. ' s' → logprob: -10.64902400970459

Token 241: ' else' (ID: 1203)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.08336181193590164
    2. '   ' → logprob: -3.333361864089966
    3. '       ' → logprob: -3.333361864089966
    4. 'if' → logprob: -5.833361625671387
    5. 'nx' → logprob: -6.458361625671387
    6. 'x' → logprob: -6.833361625671387
    7. 'else' (adapté à ' else') → logprob: -6.833361625671387
    8. 'dx' → logprob: -7.083361625671387
    9. ' visited' → logprob: -7.083361625671387
    10. 'step' → logprob: -9.208361625671387

Token 242: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.06844904273748398
    2. ':' → logprob: -2.943449020385742
    3. '           ' → logprob: -4.318449020385742
    4. ' :
' → logprob: -9.818449020385742
    5. '       ' → logprob: -10.068449020385742
    6. ':
' → logprob: -10.693449020385742
    7. '   ' → logprob: -11.443449020385742
    8. '               ' → logprob: -12.068449020385742
    9. ':

' → logprob: -12.818449020385742
    10. '{
' → logprob: -13.068449020385742

Token 243: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.042578648775815964
    2. 'visited' → logprob: -3.29257869720459
    3. '   ' → logprob: -6.41757869720459
    4. '       ' → logprob: -6.54257869720459
    5. ' visited' → logprob: -6.54257869720459
    6. '               ' → logprob: -11.91757869720459
    7. ' ' → logprob: -12.54257869720459
    8. '	       ' → logprob: -14.41757869720459
    9. '
' → logprob: -14.41757869720459
    10. '```' → logprob: -14.66757869720459

Token 244: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' (adapté à ' visited') → logprob: -0.0009836276294663548
    2. ' visited' → logprob: -7.500983715057373
    3. '           ' → logprob: -7.875983715057373
    4. '   ' → logprob: -10.375983238220215
    5. '       ' → logprob: -10.875983238220215
    6. ' ' → logprob: -15.500983238220215
    7. '               ' → logprob: -15.875983238220215
    8. '  ' → logprob: -16.37598419189453
    9. 'visit' → logprob: -16.62598419189453
    10. '
' → logprob: -16.75098419189453

Token 245: '[state' (ID: 134476)
  Prédit: '[state'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[state' → logprob: -4.320199877838604e-07
    2. '[' → logprob: -15.0
    3. '[s' → logprob: -20.625
    4. '[action' → logprob: -21.625
    5. 'state' → logprob: -21.875
    6. ' [' → logprob: -21.875
    7. '```' → logprob: -22.25
    8. '[start' → logprob: -22.25
    9. '[token' → logprob: -23.0
    10. '[node' → logprob: -23.375

Token 246: ']=' (ID: 9539)
  Prédit: ']='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']=' → logprob: -0.5822386741638184
    2. ']' → logprob: -0.8322386741638184
    3. '=' → logprob: -5.082238674163818
    4. ' =' → logprob: -9.957239151000977
    5. ')=' → logprob: -11.207239151000977
    6. ']=(' → logprob: -12.457239151000977
    7. ')' → logprob: -12.707239151000977
    8. '=len' → logprob: -13.082239151000977
    9. ' ]' → logprob: -14.207239151000977
    10. '=index' → logprob: -14.457239151000977

Token 247: 'step' (ID: 17509)
  Prédit: 'step'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'step' → logprob: -4.842555426876061e-06
    2. ' step' → logprob: -12.250004768371582
    3. '	step' → logprob: -22.1250057220459
    4. '(step' → logprob: -23.7500057220459
    5. ' ' → logprob: -25.0000057220459
    6. 'Step' → logprob: -25.2500057220459
    7. '_step' → logprob: -26.0000057220459
    8. '-step' → logprob: -26.5000057220459
    9. '   ' → logprob: -26.8750057220459
    10. '.step' → logprob: -27.5000057220459

Token 248: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5460638999938965
    2. '
' → logprob: -1.1710638999938965
    3. '   ' → logprob: -2.4210638999938965
    4. ' x' → logprob: -5.9210638999938965
    5. '        
' → logprob: -6.0460638999938965
    6. ',' → logprob: -6.1710638999938965
    7. 'x' → logprob: -6.2960638999938965
    8. '
' → logprob: -6.2960638999938965
    9. 'step' → logprob: -6.7960638999938965
    10. '           ' → logprob: -7.0460638999938965

Token 249: '       ' (ID: 309)
  Prédit: 'nx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nx' → logprob: -0.25486841797828674
    2. '       ' → logprob: -1.8798683881759644
    3. 'path' → logprob: -3.254868507385254
    4. '   ' → logprob: -4.129868507385254
    5. ' nx' → logprob: -5.004868507385254
    6. 'x' → logprob: -5.754868507385254
    7. '#' → logprob: -5.879868507385254
    8. 'px' → logprob: -6.379868507385254
    9. 'cx' → logprob: -7.254868507385254
    10. 'if' → logprob: -7.379868507385254

Token 250: ' #' (ID: 1069)
  Prédit: 'nx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nx' → logprob: -0.0052145482040941715
    2. 'x' → logprob: -6.005214691162109
    3. '   ' → logprob: -6.880214691162109
    4. 'path' → logprob: -7.630214691162109
    5. '       ' → logprob: -7.880214691162109
    6. 'if' → logprob: -8.13021469116211
    7. 'cx' → logprob: -8.88021469116211
    8. '#' (adapté à ' #') → logprob: -8.88021469116211
    9. ' nx' → logprob: -8.88021469116211
    10. '```' → logprob: -10.63021469116211

Token 251: ' Try' (ID: 14720)
  Prédit: 'nx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nx' → logprob: -0.00044175516813993454
    2. 'if' → logprob: -8.875441551208496
    3. 'x' → logprob: -9.000441551208496
    4. ' nx' → logprob: -9.750441551208496
    5. '#' → logprob: -9.875441551208496
    6. '   ' → logprob: -10.875441551208496
    7. 'tx' → logprob: -11.750441551208496
    8. 'next' → logprob: -11.875441551208496
    9. 'for' → logprob: -12.125441551208496
    10. 'cx' → logprob: -12.375441551208496

Token 252: ' to' (ID: 316)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.6447218060493469
    2. ':' → logprob: -1.5197217464447021
    3. '   ' → logprob: -2.644721746444702
    4. 'to' → logprob: -3.019721746444702
    5. 'next' → logprob: -3.269721746444702
    6. 'dire' → logprob: -3.269721746444702
    7. 'd' → logprob: -4.269721984863281
    8. 'for' → logprob: -4.394721984863281
    9. ' directions' → logprob: -4.894721984863281
    10. 'all' → logprob: -5.894721984863281

Token 253: ' move' (ID: 5275)
  Prédit: 'nx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nx' → logprob: -0.5606821179389954
    2. 'for' → logprob: -1.1856820583343506
    3. '0' → logprob: -2.9356820583343506
    4. 'x' → logprob: -3.0606820583343506
    5. 'next' → logprob: -5.06068229675293
    6. '#' → logprob: -5.93568229675293
    7. '
' → logprob: -6.18568229675293
    8. 'd' → logprob: -6.31068229675293
    9. 'range' → logprob: -6.43568229675293
    10. ' nx' → logprob: -6.56068229675293

Token 254: ' forward' (ID: 6687)
  Prédit: ' nx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' nx' → logprob: -0.4780498147010803
    2. 'nx' → logprob: -0.9780498147010803
    3. '(nx' → logprob: -7.2280497550964355
    4. '       ' → logprob: -7.3530497550964355
    5. ' nxt' → logprob: -7.4780497550964355
    6. '   ' → logprob: -7.8530497550964355
    7. ' nd' → logprob: -7.9780497550964355
    8. 'tx' → logprob: -8.228050231933594
    9. ' ntx' → logprob: -8.603050231933594
    10. ' for' → logprob: -8.978050231933594

Token 255: '
' (ID: 198)
  Prédit: 'nx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nx' → logprob: -0.35026493668556213
    2. ' nx' → logprob: -1.2252649068832397
    3. '       ' → logprob: -6.600265026092529
    4. '(nx' → logprob: -7.975265026092529
    5. 'tx' → logprob: -10.475264549255371
    6. ' nxt' → logprob: -11.225264549255371
    7. 'xn' → logprob: -11.350264549255371
    8. 'n' → logprob: -11.350264549255371
    9. ' ntx' → logprob: -11.600264549255371
    10. '   ' → logprob: -11.850264549255371

Token 256: '       ' (ID: 309)
  Prédit: 'nx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nx' → logprob: -0.2522006630897522
    2. ' nx' → logprob: -1.5022006034851074
    3. '       ' → logprob: -9.252201080322266
    4. 'tx' → logprob: -10.127201080322266
    5. '(nx' → logprob: -10.252201080322266
    6. 'n' → logprob: -10.377201080322266
    7. 'xn' → logprob: -10.502201080322266
    8. ' nxt' → logprob: -11.502201080322266
    9. '   ' → logprob: -11.752201080322266
    10. 'next' → logprob: -12.127201080322266

Token 257: ' nx' (ID: 50118)
  Prédit: 'nx'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nx' (adapté à ' nx') → logprob: -0.00020795092859771103
    2. ' nx' → logprob: -8.500207901000977
    3. 'tx' → logprob: -13.500207901000977
    4. '```' → logprob: -13.625207901000977
    5. '   ' → logprob: -13.875207901000977
    6. 'n' → logprob: -15.250207901000977
    7. 'xn' → logprob: -15.500207901000977
    8. ' ' → logprob: -16.000207901000977
    9. 'next' → logprob: -16.250207901000977
    10. 'new' → logprob: -16.625207901000977

Token 258: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9394288063049316
    2. '=' → logprob: -1.1894288063049316
    3. '=x' → logprob: -1.1894288063049316
    4. '=n' → logprob: -8.564428329467773
    5. ',' → logprob: -8.814428329467773
    6. ',x' → logprob: -11.314428329467773
    7. 'x' → logprob: -12.689428329467773
    8. ' x' → logprob: -13.939428329467773
    9. '=int' → logprob: -14.314428329467773
    10. '>x' → logprob: -15.189428329467773

Token 259: 'ny' (ID: 3008)
  Prédit: 'ny'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ny' → logprob: -0.0070395395159721375
    2. 'x' → logprob: -5.007039546966553
    3. ' ny' → logprob: -8.132039070129395
    4. 'y' → logprob: -10.507039070129395
    5. 'n' → logprob: -13.257039070129395
    6. '=' → logprob: -15.382039070129395
    7. 'nyi' → logprob: -15.507039070129395
    8. 'nx' → logprob: -15.757039070129395
    9. 'Ny' → logprob: -16.00704002380371
    10. 'NY' → logprob: -16.50704002380371

Token 260: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04311018064618111
    2. '=x' → logprob: -3.2931101322174072
    3. ' =' → logprob: -5.293110370635986
    4. '=n' → logprob: -10.668109893798828
    5. '=i' → logprob: -13.043109893798828
    6. 'x' → logprob: -14.293109893798828
    7. '=ax' → logprob: -14.918109893798828
    8. '=int' → logprob: -15.168109893798828
    9. ',x' → logprob: -15.293109893798828
    10. '=y' → logprob: -15.293109893798828

Token 261: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -7.941850526549388e-06
    2. ' x' → logprob: -11.750007629394531
    3. '   ' → logprob: -17.37500762939453
    4. '	x' → logprob: -19.25000762939453
    5. '(x' → logprob: -22.12500762939453
    6. '
' → logprob: -22.75000762939453
    7. ',x' → logprob: -22.87500762939453
    8. ' ' → logprob: -23.25000762939453
    9. ')x' → logprob: -23.25000762939453
    10. '  ' → logprob: -23.50000762939453

Token 262: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4340331554412842
    2. ' +' → logprob: -1.0590331554412842
    3. '+x' → logprob: -5.434033393859863
    4. ',x' → logprob: -7.934033393859863
    5. ',' → logprob: -8.434033393859863
    6. 'dx' → logprob: -9.309033393859863
    7. '+d' → logprob: -9.309033393859863
    8. '<|end|>' → logprob: -9.684033393859863
    9. ',y' → logprob: -10.184033393859863
    10. '
' → logprob: -11.184033393859863

Token 263: 'dx' (ID: 22100)
  Prédit: 'dx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -4.644463479053229e-05
    2. ' dx' → logprob: -10.000046730041504
    3. '(dx' → logprob: -14.125046730041504
    4. '_dx' → logprob: -16.250045776367188
    5. '1' → logprob: -16.750045776367188
    6. 'Dx' → logprob: -17.750045776367188
    7. '.dx' → logprob: -18.125045776367188
    8. 'd' → logprob: -18.750045776367188
    9. '```' → logprob: -19.000045776367188
    10. '=' → logprob: -19.125045776367188

Token 264: '[d' (ID: 48377)
  Prédit: '[d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[d' → logprob: -1.688212614681106e-05
    2. 'd' → logprob: -11.000017166137695
    3. '[' → logprob: -16.125017166137695
    4. '	d' → logprob: -20.000017166137695
    5. '[
' → logprob: -20.500017166137695
    6. '(d' → logprob: -21.500017166137695
    7. ',d' → logprob: -21.500017166137695
    8. '[D' → logprob: -22.000017166137695
    9. '```' → logprob: -22.500017166137695
    10. '[x' → logprob: -22.500017166137695

Token 265: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.0021341985557228327
    2. ']' → logprob: -7.127134323120117
    3. '[' → logprob: -7.502134323120117
    4. '[y' → logprob: -7.752134323120117
    5. '[x' → logprob: -8.377134323120117
    6. '[n' → logprob: -9.502134323120117
    7. '[d' → logprob: -11.127134323120117
    8. ' ],' → logprob: -11.752134323120117
    9. '1' → logprob: -11.877134323120117
    10. '[
' → logprob: -13.002134323120117

Token 266: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0007100477814674377
    2. ' y' → logprob: -7.2507100105285645
    3. '   ' → logprob: -16.375709533691406
    4. '	y' → logprob: -17.000709533691406
    5. '  ' → logprob: -19.625709533691406
    6. '    ' → logprob: -20.125709533691406
    7. ' ' → logprob: -20.625709533691406
    8. ',y' → logprob: -20.750709533691406
    9. ''y' → logprob: -20.875709533691406
    10. '       ' → logprob: -21.125709533691406

Token 267: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.04331476241350174
    2. '+d' → logprob: -4.0433149337768555
    3. '[d' → logprob: -4.5433149337768555
    4. '+y' → logprob: -4.9183149337768555
    5. '[y' → logprob: -5.0433149337768555
    6. '[j' → logprob: -8.293314933776855
    7. '[' → logprob: -9.168314933776855
    8. '+j' → logprob: -10.418314933776855
    9. ' +' → logprob: -10.793314933776855
    10. 'y' → logprob: -11.043314933776855

Token 268: 'dy' (ID: 7593)
  Prédit: 'dy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -0.002540705492720008
    2. ' dy' → logprob: -6.002540588378906
    3. 'd' → logprob: -10.127540588378906
    4. 'y' → logprob: -11.627540588378906
    5. '[d' → logprob: -12.002540588378906
    6. '1' → logprob: -12.502540588378906
    7. 'dx' → logprob: -12.627540588378906
    8. '[' → logprob: -13.877540588378906
    9. 'x' → logprob: -14.502540588378906
    10. '.dy' → logprob: -14.752540588378906

Token 269: '[d' (ID: 48377)
  Prédit: '[d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[d' → logprob: -2.0339031834737398e-05
    2. 'd' → logprob: -10.875020027160645
    3. '[' → logprob: -13.500020027160645
    4. '[
' → logprob: -18.00002098083496
    5. '(d' → logprob: -18.62502098083496
    6. '```' → logprob: -18.62502098083496
    7. ')d' → logprob: -19.12502098083496
    8. ' [' → logprob: -19.12502098083496
    9. '	d' → logprob: -19.12502098083496
    10. ']' → logprob: -19.37502098083496

Token 270: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.20376597344875336
    2. '[d' → logprob: -1.7037659883499146
    3. 'd' → logprob: -6.078765869140625
    4. '[' → logprob: -10.203765869140625
    5. ']
' → logprob: -11.703765869140625
    6. ' ]' → logprob: -12.703765869140625
    7. '']' → logprob: -13.078765869140625
    8. ']]' → logprob: -13.328765869140625
    9. '])' → logprob: -13.578765869140625
    10. '][' → logprob: -14.203765869140625

Token 271: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 272: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0774252787232399
    2. '       ' → logprob: -2.952425241470337
    3. ' if' → logprob: -3.952425241470337
    4. '   ' → logprob: -6.452425479888916
    5. '```' → logprob: -7.827425479888916
    6. '        
' → logprob: -8.577425003051758
    7. '	if' → logprob: -9.077425003051758
    8. ' ' → logprob: -9.327425003051758
    9. '...' → logprob: -9.702425003051758
    10. '#' → logprob: -9.702425003051758

Token 273: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3185257315635681
    2. ' ' → logprob: -1.318525791168213
    3. ' nx' → logprob: -6.193525791168213
    4. 'nx' → logprob: -6.568525791168213
    5. 'maze' → logprob: -7.568525791168213
    6. '(nx' → logprob: -7.568525791168213
    7. ' maze' → logprob: -8.193525314331055
    8. '(' → logprob: -8.943525314331055
    9. ' not' → logprob: -9.193525314331055
    10. '  ' → logprob: -9.568525314331055

Token 274: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0032665994949638844
    2. 'nx' → logprob: -6.62826681137085
    3. ' ' → logprob: -7.12826681137085
    4. 'maze' → logprob: -8.003266334533691
    5. 'not' → logprob: -8.003266334533691
    6. '(nx' → logprob: -8.253266334533691
    7. '(' → logprob: -9.003266334533691
    8. ' nx' → logprob: -11.003266334533691
    9. '   ' → logprob: -11.003266334533691
    10. '  ' → logprob: -12.065766334533691

Token 275: '<=' (ID: 16672)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.47500336170196533
    2. '<=' → logprob: -0.9750033617019653
    3. '<n' → logprob: -7.725003242492676
    4. ' <' → logprob: -8.350003242492676
    5. '<' → logprob: -8.975003242492676
    6. '[' → logprob: -9.975003242492676
    7. '[n' → logprob: -10.475003242492676
    8. ' ' → logprob: -11.850003242492676
    9. '   ' → logprob: -11.975003242492676
    10. 'x' → logprob: -12.225003242492676

Token 276: 'nx' (ID: 45103)
  Prédit: 'nx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nx' → logprob: -0.0009152670972980559
    2. ' nx' → logprob: -7.000915050506592
    3. '(nx' → logprob: -12.50091552734375
    4. 'n' → logprob: -17.62591552734375
    5. 'Nx' → logprob: -17.75091552734375
    6. 'ny' → logprob: -18.25091552734375
    7. '
' → logprob: -18.62591552734375
    8. 'xn' → logprob: -19.75091552734375
    9. '	n' → logprob: -20.37591552734375
    10. 'NX' → logprob: -20.50091552734375

Token 277: '<H' (ID: 104212)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.32473430037498474
    2. '<H' → logprob: -1.3247343301773071
    3. ' <' → logprob: -5.074734210968018
    4. '<|end|>' → logprob: -5.824734210968018
    5. 'H' → logprob: -6.949734210968018
    6. '<n' → logprob: -7.824734210968018
    7. ' and' → logprob: -7.949734210968018
    8. 'and' → logprob: -8.324734687805176
    9. ' H' → logprob: -9.949734687805176
    10. '<N' → logprob: -9.949734687805176

Token 278: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.1269284337759018
    2. 'and' → logprob: -2.1269283294677734
    3. '	and' → logprob: -15.751928329467773
    4. ' ' → logprob: -15.876928329467773
    5. ')' → logprob: -17.751928329467773
    6. '   ' → logprob: -18.251928329467773
    7. '       ' → logprob: -18.376928329467773
    8. ',' → logprob: -18.626928329467773
    9. '<|end|>' → logprob: -18.751928329467773
    10. '0' → logprob: -19.001928329467773

Token 279: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0019286326132714748
    2. ' ' → logprob: -6.251928806304932
    3. '   ' → logprob: -17.626928329467773
    4. ' ' → logprob: -18.001928329467773
    5. '  ' → logprob: -18.876928329467773
    6. '
' → logprob: -19.251928329467773
    7. '۰' → logprob: -19.564428329467773
    8. '       ' → logprob: -19.939428329467773
    9. '           ' → logprob: -20.189428329467773
    10. '    ' → logprob: -20.501928329467773

Token 280: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.52919222577475e-05
    2. ' ' → logprob: -9.500075340270996
    3. 'ny' → logprob: -15.750075340270996
    4. 'nx' → logprob: -15.875075340270996
    5. '   ' → logprob: -17.75007438659668
    6. ' ny' → logprob: -18.50007438659668
    7. '
' → logprob: -18.50007438659668
    8. ' nx' → logprob: -19.06257438659668
    9. '  ' → logprob: -19.12507438659668
    10. '۰' → logprob: -19.56257438659668

Token 281: '<=' (ID: 16672)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.6683501601219177
    2. 'ny' → logprob: -1.0433502197265625
    3. '<' → logprob: -2.7933502197265625
    4. ' ny' → logprob: -3.2933502197265625
    5. '<W' → logprob: -3.6683502197265625
    6. 'wy' → logprob: -5.0433502197265625
    7. ' W' → logprob: -6.2933502197265625
    8. 'w' → logprob: -6.7933502197265625
    9. ' <' → logprob: -7.1683502197265625
    10. '0' → logprob: -7.7933502197265625

Token 282: 'ny' (ID: 3008)
  Prédit: 'ny'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ny' → logprob: -0.00014561474381480366
    2. 'W' → logprob: -9.25014591217041
    3. ' ny' → logprob: -10.00014591217041
    4. 'wy' → logprob: -12.62514591217041
    5. 'y' → logprob: -14.75014591217041
    6. '
' → logprob: -16.500144958496094
    7. 'nx' → logprob: -16.625144958496094
    8. ' W' → logprob: -16.875144958496094
    9. 'Ny' → logprob: -17.250144958496094
    10. 'w' → logprob: -18.250144958496094

Token 283: '<W' (ID: 180273)
  Prédit: '<W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<W' → logprob: -2.4391956685576588e-05
    2. 'W' → logprob: -11.375024795532227
    3. '<' → logprob: -11.875024795532227
    4. ' <' → logprob: -12.250024795532227
    5. '<len' → logprob: -15.625024795532227
    6. '<w' → logprob: -15.750024795532227
    7. ' W' → logprob: -15.750024795532227
    8. '<H' → logprob: -15.875024795532227
    9. '<=' → logprob: -16.000024795532227
    10. '<V' → logprob: -16.625024795532227

Token 284: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.10020732134580612
    2. 'and' → logprob: -2.3502073287963867
    3. ' ' → logprob: -14.850207328796387
    4. ')' → logprob: -15.475207328796387
    5. '   ' → logprob: -16.97520637512207
    6. '	and' → logprob: -16.97520637512207
    7. ' и' → logprob: -17.22520637512207
    8. ' ' → logprob: -18.10020637512207
    9. ':' → logprob: -18.60020637512207
    10. '```' → logprob: -18.85020637512207

Token 285: ' maze' (ID: 58295)
  Prédit: 'maze'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'maze' → logprob: -0.0067156096920371056
    2. ' maze' → logprob: -5.006715774536133
    3. '   ' → logprob: -15.756715774536133
    4. 'maz' → logprob: -17.256715774536133
    5. 'ma' → logprob: -17.631715774536133
    6. ' ' → logprob: -18.006715774536133
    7. 'Maze' → logprob: -19.756715774536133
    8. '
' → logprob: -20.006715774536133
    9. '  ' → logprob: -20.381715774536133
    10. '(' → logprob: -20.381715774536133

Token 286: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -9.13388703338569e-06
    2. '[' → logprob: -12.000009536743164
    3. ' [' → logprob: -13.875009536743164
    4. '][' → logprob: -14.000009536743164
    5. '
' → logprob: -14.875009536743164
    6. '```' → logprob: -15.375009536743164
    7. '[
' → logprob: -15.625009536743164
    8. '(nx' → logprob: -16.625009536743164
    9. '   ' → logprob: -16.875009536743164
    10. '

' → logprob: -17.250009536743164

Token 287: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.6405310816480778e-05
    2. '][' → logprob: -12.000016212463379
    3. '[x' → logprob: -12.250016212463379
    4. '[' → logprob: -12.500016212463379
    5. '[n' → logprob: -14.125016212463379
    6. '```' → logprob: -14.625016212463379
    7. 'nx' → logprob: -15.375016212463379
    8. ']' → logprob: -16.750017166137695
    9. ''x' → logprob: -17.250017166137695
    10. '
' → logprob: -17.375017166137695

Token 288: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.003392425598576665
    2. '[' → logprob: -6.378392219543457
    3. '[n' → logprob: -6.503392219543457
    4. ''][' → logprob: -9.003392219543457
    5. ']' → logprob: -10.003392219543457
    6. '"][' → logprob: -11.128392219543457
    7. ' ][' → logprob: -13.003392219543457
    8. '(nx' → logprob: -14.378392219543457
    9. '
' → logprob: -14.628392219543457
    10. ']][' → logprob: -14.753392219543457

Token 289: 'ny' (ID: 3008)
  Prédit: 'ny'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ny' → logprob: -3.380904672667384e-05
    2. ' ny' → logprob: -10.500033378601074
    3. 'n' → logprob: -12.750033378601074
    4. 'nyi' → logprob: -13.500033378601074
    5. ''ny' → logprob: -14.875033378601074
    6. 'nym' → logprob: -15.625033378601074
    7. 'nj' → logprob: -15.625033378601074
    8. '   ' → logprob: -15.750033378601074
    9. ']' → logprob: -15.750033378601074
    10. 'y' → logprob: -16.00003433227539

Token 290: ']==' (ID: 34128)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.7409122586250305
    2. ']==' → logprob: -0.8659122586250305
    3. ']!='' → logprob: -2.4909121990203857
    4. ']!=' → logprob: -3.9909121990203857
    5. ']=='' → logprob: -6.740912437438965
    6. '==' → logprob: -9.990912437438965
    7. '']' → logprob: -10.490912437438965
    8. '']==' → logprob: -10.490912437438965
    9. '!='' → logprob: -10.865912437438965
    10. ']!' → logprob: -11.115912437438965

Token 291: ''.' (ID: 6120)
  Prédit: ''.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''.' → logprob: -1.7432603272027336e-06
    2. ' '.'' → logprob: -13.625001907348633
    3. '.' → logprob: -15.375001907348633
    4. '"."' → logprob: -15.875001907348633
    5. '('.')' → logprob: -16.250001907348633
    6. ''#' → logprob: -16.875001907348633
    7. ''' → logprob: -17.375001907348633
    8. '".' → logprob: -17.500001907348633
    9. ''>' → logprob: -19.250001907348633
    10. '.'.' → logprob: -19.625001907348633

Token 292: '':
' (ID: 7669)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.34636905789375305
    2. ':
' → logprob: -1.9713690280914307
    3. '):
' → logprob: -2.5963690280914307
    4. '):' → logprob: -3.2213690280914307
    5. '':' → logprob: -3.4713690280914307
    6. ')' → logprob: -5.59636926651001
    7. '':
' → logprob: -6.09636926651001
    8. ''):
' → logprob: -6.84636926651001
    9. ''' → logprob: -7.59636926651001
    10. ''):' → logprob: -8.721368789672852

Token 293: '           ' (ID: 352)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.9308890104293823
    2. ' x' → logprob: -1.3058890104293823
    3. '       ' → logprob: -1.8058890104293823
    4. '           ' → logprob: -1.8058890104293823
    5. '   ' → logprob: -5.180889129638672
    6. ' ' → logprob: -9.055889129638672
    7. '               ' → logprob: -9.180889129638672
    8. '        ' → logprob: -9.555889129638672
    9. '	x' → logprob: -9.555889129638672
    10. '```' → logprob: -10.055889129638672

Token 294: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.004113542847335339
    2. ' x' → logprob: -5.504113674163818
    3. '           ' → logprob: -10.50411319732666
    4. '   ' → logprob: -12.25411319732666
    5. '       ' → logprob: -13.00411319732666
    6. 'step' → logprob: -15.00411319732666
    7. '               ' → logprob: -15.87911319732666
    8. '
' → logprob: -16.629114151000977
    9. '	x' → logprob: -16.754114151000977
    10. ' step' → logprob: -16.879114151000977

Token 295: ',y' (ID: 16103)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0034048978704959154
    2. ' =' → logprob: -5.7534050941467285
    3. ',n' → logprob: -9.12840461730957
    4. ',' → logprob: -9.37840461730957
    5. '=n' → logprob: -10.50340461730957
    6. '=x' → logprob: -12.75340461730957
    7. '=
' → logprob: -12.87840461730957
    8. '(nx' → logprob: -14.50340461730957
    9. '=

' → logprob: -15.62840461730957
    10. ' =
' → logprob: -15.75340461730957

Token 296: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06206639111042023
    2. ' =' → logprob: -2.8120663166046143
    3. '=n' → logprob: -9.312066078186035
    4. ',n' → logprob: -12.812066078186035
    5. '=
' → logprob: -13.312066078186035
    6. '=x' → logprob: -13.437066078186035
    7. ',' → logprob: -14.187066078186035
    8. '(nx' → logprob: -14.312066078186035
    9. ' =
' → logprob: -14.812066078186035
    10. '=np' → logprob: -15.312066078186035

Token 297: 'nx' (ID: 45103)
  Prédit: 'nx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nx' → logprob: -0.02985670231282711
    2. ' nx' → logprob: -3.5298566818237305
    3. '(nx' → logprob: -9.15485668182373
    4. 'n' → logprob: -14.77985668182373
    5. '   ' → logprob: -17.654857635498047
    6. ' ' → logprob: -18.029857635498047
    7. 'ny' → logprob: -18.529857635498047
    8. 'Nx' → logprob: -19.029857635498047
    9. '
' → logprob: -19.154857635498047
    10. 'x' → logprob: -19.154857635498047

Token 298: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10026652365922928
    2. ',y' → logprob: -2.350266456604004
    3. ',n' → logprob: -9.850266456604004
    4. ' ,' → logprob: -12.600266456604004
    5. ',
' → logprob: -13.850266456604004
    6. '<|end|>' → logprob: -13.975266456604004
    7. ',next' → logprob: -14.725266456604004
    8. ',new' → logprob: -14.850266456604004
    9. ',user' → logprob: -15.100266456604004
    10. ',None' → logprob: -15.725266456604004

Token 299: 'ny' (ID: 3008)
  Prédit: 'ny'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ny' → logprob: -3.166338137816638e-05
    2. ' ny' → logprob: -10.375031471252441
    3. 'n' → logprob: -15.625031471252441
    4. 'nyi' → logprob: -15.750031471252441
    5. 'y' → logprob: -17.500032424926758
    6. 'nye' → logprob: -17.875032424926758
    7. '
' → logprob: -18.000032424926758
    8. 'nym' → logprob: -19.000032424926758
    9. 'yn' → logprob: -19.500032424926758
    10. ''ny' → logprob: -19.625032424926758

Token 300: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7027395963668823
    2. 'step' → logprob: -1.0777395963668823
    3. '       ' → logprob: -2.327739715576172
    4. '
' → logprob: -2.827739715576172
    5. ' step' → logprob: -5.202739715576172
    6. ',' → logprob: -7.327739715576172
    7. '(step' → logprob: -7.827739715576172
    8. '	step' → logprob: -7.952739715576172
    9. '   ' → logprob: -8.077739715576172
    10. '#' → logprob: -9.077739715576172

Token 301: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.670440673828125
    2. 'step' → logprob: -0.920440673828125
    3. '       ' → logprob: -2.420440673828125
    4. ' step' → logprob: -6.795440673828125
    5. '   ' → logprob: -9.045440673828125
    6. '	step' → logprob: -10.420440673828125
    7. '
' → logprob: -11.670440673828125
    8. 'else' → logprob: -12.920440673828125
    9. '(step' → logprob: -13.170440673828125
    10. '```' → logprob: -13.170440673828125

Token 302: ' step' (ID: 5983)
  Prédit: 'step'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'step' (adapté à ' step') → logprob: -2.546478935983032e-05
    2. '           ' → logprob: -10.750025749206543
    3. 'path' → logprob: -13.000025749206543
    4. ' step' → logprob: -13.500025749206543
    5. '
' → logprob: -15.750025749206543
    6. '       ' → logprob: -16.375024795532227
    7. '	step' → logprob: -16.875024795532227
    8. 'Step' → logprob: -18.250024795532227
    9. '            
' → logprob: -18.625024795532227
    10. 'else' → logprob: -19.250024795532227

Token 303: '+=' (ID: 18287)
  Prédit: '+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.03428349271416664
    2. ' +=' → logprob: -3.534283399581909
    3. '+' → logprob: -5.409283638000488
    4. '+='' → logprob: -10.909283638000488
    5. '<|end|>' → logprob: -11.159283638000488
    6. '=' → logprob: -11.784283638000488
    7. ']+=' → logprob: -12.659283638000488
    8. '+="' → logprob: -12.784283638000488
    9. '++' → logprob: -14.534283638000488
    10. '+=(' → logprob: -15.159283638000488

Token 304: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.25
    3. '```' → logprob: -19.875
    4. '<|end|>' → logprob: -20.5
    5. '۱' → logprob: -22.0
    6. '１' → logprob: -22.0
    7. '+' → logprob: -22.5
    8. '   ' → logprob: -22.75
    9. '
' → logprob: -23.25
    10. '১' → logprob: -23.25

Token 305: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07099342346191406
    2. 'else' → logprob: -2.945993423461914
    3. ' else' → logprob: -4.820993423461914
    4. '   ' → logprob: -5.695993423461914
    5. '
' → logprob: -6.320993423461914
    6. 'elif' → logprob: -6.945993423461914
    7. '           ' → logprob: -7.945993423461914
    8. '    
' → logprob: -8.320993423461914
    9. '<|end|>' → logprob: -8.320993423461914
    10. '\n' → logprob: -8.820993423461914

Token 306: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20783062279224396
    2. 'else' → logprob: -1.9578306674957275
    3. ' else' → logprob: -3.3328306674957275
    4. '   ' → logprob: -4.957830429077148
    5. '<|end|>' → logprob: -6.582830429077148
    6. '```' → logprob: -7.332830429077148
    7. '           ' → logprob: -7.457830429077148
    8. 'continue' → logprob: -8.332830429077148
    9. 'elif' → logprob: -8.707830429077148
    10. '[' → logprob: -8.832830429077148

Token 307: ' if' (ID: 538)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.04604324325919151
    2. '       ' → logprob: -3.5460431575775146
    3. '           ' → logprob: -4.171043395996094
    4. 'else' → logprob: -7.921043395996094
    5. ' continue' → logprob: -8.171043395996094
    6. 'path' → logprob: -10.046043395996094
    7. '	continue' → logprob: -11.046043395996094
    8. '   ' → logprob: -11.296043395996094
    9. 'contin' → logprob: -12.921043395996094
    10. '_continue' → logprob: -13.171043395996094

Token 308: ' step' (ID: 5983)
  Prédit: 'step'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'step' → logprob: -0.006361720617860556
    2. ' step' → logprob: -5.381361484527588
    3. 'x' → logprob: -6.506361484527588
    4. '(step' → logprob: -9.381361961364746
    5. '(x' → logprob: -9.631361961364746
    6. ' x' → logprob: -9.756361961364746
    7. 'maze' → logprob: -11.006361961364746
    8. ' (' → logprob: -11.756361961364746
    9. '(' → logprob: -12.631361961364746
    10. '   ' → logprob: -13.256361961364746

Token 309: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.20349162817001343
    2. ' ==' → logprob: -1.7034916877746582
    3. '%' → logprob: -6.703491687774658
    4. '<|end|>' → logprob: -7.328491687774658
    5. '>=' → logprob: -9.4534912109375
    6. '<' → logprob: -10.3284912109375
    7. ' %' → logprob: -11.0784912109375
    8. ' >=' → logprob: -11.3284912109375
    9. '<L' → logprob: -11.5784912109375
    10. '=' → logprob: -11.8284912109375

Token 310: 'L' (ID: 43)
  Prédit: 'L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -1.2664456789934775e-06
    2. ' L' → logprob: -13.625000953674316
    3. '   ' → logprob: -19.625001907348633
    4. '>L' → logprob: -19.625001907348633
    5. '	L' → logprob: -20.500001907348633
    6. ' ' → logprob: -21.125001907348633
    7. '  ' → logprob: -21.875001907348633
    8. '=L' → logprob: -22.000001907348633
    9. ':L' → logprob: -22.500001907348633
    10. '```' → logprob: -22.625001907348633

Token 311: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.31564655900001526
    2. ':
' → logprob: -1.3156465291976929
    3. '               ' → logprob: -6.065646648406982
    4. '           ' → logprob: -10.065646171569824
    5. ':
' → logprob: -11.815646171569824
    6. ':

' → logprob: -12.565646171569824
    7. '       ' → logprob: -13.065646171569824
    8. '   ' → logprob: -14.065646171569824
    9. ':return' → logprob: -14.065646171569824
    10. '):
' → logprob: -14.190646171569824

Token 312: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0007544778054580092
    2. 'break' → logprob: -7.375754356384277
    3. ' break' → logprob: -9.750754356384277
    4. '	break' → logprob: -10.625754356384277
    5. '           ' → logprob: -11.000754356384277
    6. '   ' → logprob: -11.875754356384277
    7. '```' → logprob: -11.875754356384277
    8. '       ' → logprob: -12.625754356384277
    9. '	           ' → logprob: -12.750754356384277
    10. '			' → logprob: -13.125754356384277

Token 313: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.04924657195806503
    2. ' break' → logprob: -3.0492465496063232
    3. '               ' → logprob: -7.549246788024902
    4. '	break' → logprob: -9.424246788024902
    5. '           ' → logprob: -10.674246788024902
    6. '   ' → logprob: -11.049246788024902
    7. '                   ' → logprob: -12.674246788024902
    8. 'print' → logprob: -12.674246788024902
    9. '```' → logprob: -12.799246788024902
    10. '
' → logprob: -13.674246788024902

Token 314: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23815859854221344
    2. 'else' → logprob: -1.6131585836410522
    3. ' else' → logprob: -4.488158702850342
    4. '```' → logprob: -7.113158702850342
    5. '	else' → logprob: -8.488158226013184
    6. '   ' → logprob: -8.488158226013184
    7. '	' → logprob: -10.238158226013184
    8. 'd' → logprob: -10.488158226013184
    9. '           ' → logprob: -10.863158226013184
    10. '
' → logprob: -11.238158226013184

Token 315: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4982694089412689
    2. 'else' → logprob: -0.9982694387435913
    3. ' else' → logprob: -3.7482693195343018
    4. '```' → logprob: -8.748269081115723
    5. '	else' → logprob: -9.498269081115723
    6. '   ' → logprob: -10.123269081115723
    7. 'elif' → logprob: -11.498269081115723
    8. 'd' → logprob: -11.623269081115723
    9. '	' → logprob: -11.998269081115723
    10. 's' → logprob: -12.248269081115723

Token 316: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6006404161453247
    2. 'else' (adapté à ' else') → logprob: -0.8506404161453247
    3. ' else' → logprob: -3.725640296936035
    4. '   ' → logprob: -8.850640296936035
    5. 'elif' → logprob: -9.100640296936035
    6. '	else' → logprob: -10.850640296936035
    7. '           ' → logprob: -12.475640296936035
    8. ',' → logprob: -12.475640296936035
    9. ')' → logprob: -12.975640296936035
    10. ':' → logprob: -12.975640296936035

Token 317: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2259097546339035
    2. ':
' → logprob: -1.60090970993042
    3. '           ' → logprob: -7.85090970993042
    4. 'd' → logprob: -9.975910186767578
    5. '       ' → logprob: -10.725910186767578
    6. ':d' → logprob: -10.850910186767578
    7. ':

' → logprob: -11.475910186767578
    8. ':
' → logprob: -12.850910186767578
    9. '   ' → logprob: -12.975910186767578
    10. ',' → logprob: -13.975910186767578

Token 318: '           ' (ID: 352)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.01017038058489561
    2. '       ' → logprob: -5.3851704597473145
    3. '           ' → logprob: -5.6351704597473145
    4. ' d' → logprob: -6.2601704597473145
    5. '   ' → logprob: -10.010169982910156
    6. '	d' → logprob: -12.760169982910156
    7. '```' → logprob: -13.135169982910156
    8. '               ' → logprob: -13.635169982910156
    9. ' ' → logprob: -14.385169982910156
    10. '  ' → logprob: -14.635169982910156

Token 319: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' (adapté à ' d') → logprob: -0.00030709904967807233
    2. ' d' → logprob: -8.125307083129883
    3. '   ' → logprob: -12.125307083129883
    4. '           ' → logprob: -12.375307083129883
    5. '	d' → logprob: -14.250307083129883
    6. '       ' → logprob: -14.750307083129883
    7. '
' → logprob: -16.125307083129883
    8. '#' → logprob: -16.125307083129883
    9. '```' → logprob: -16.125307083129883
    10. ' ' → logprob: -17.625307083129883

Token 320: ' =' (ID: 314)
  Prédit: '=('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=(' → logprob: -0.03029581718146801
    2. '=' → logprob: -3.5302958488464355
    3. ' =' → logprob: -7.5302958488464355
    4. '+=' → logprob: -12.405295372009277
    5. '=d' → logprob: -12.780295372009277
    6. ' =(' → logprob: -14.780295372009277
    7. '=((' → logprob: -15.405295372009277
    8. '=`' → logprob: -15.530295372009277
    9. '=('' → logprob: -15.905295372009277
    10. '=[' → logprob: -15.905295372009277

Token 321: ' (' (ID: 350)
  Prédit: '(d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.003209084505215287
    2. ' (' → logprob: -5.753209114074707
    3. '(' → logprob: -11.253209114074707
    4. '(dx' → logprob: -11.753209114074707
    5. '(next' → logprob: -12.878209114074707
    6. '(dd' → logprob: -13.003209114074707
    7. '(direction' → logprob: -13.253209114074707
    8. '(dir' → logprob: -13.878209114074707
    9. '(D' → logprob: -14.128209114074707
    10. '(div' → logprob: -14.878209114074707

Token 322: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -3.225939872208983e-05
    2. ' d' → logprob: -10.750032424926758
    3. '(d' → logprob: -11.500032424926758
    4. ')d' → logprob: -14.500032424926758
    5. '	d' → logprob: -17.000032424926758
    6. '   ' → logprob: -17.125032424926758
    7. '```' → logprob: -17.625032424926758
    8. ')' → logprob: -18.000032424926758
    9. '1' → logprob: -18.000032424926758
    10. ' (' → logprob: -18.125032424926758

Token 323: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.038056403398513794
    2. ' +' → logprob: -3.2880563735961914
    3. '+d' → logprob: -11.163056373596191
    4. '-' → logprob: -14.913056373596191
    5. '1' → logprob: -15.038056373596191
    6. '+
' → logprob: -17.413057327270508
    7. '＋' → logprob: -18.038057327270508
    8. ' -' → logprob: -18.038057327270508
    9. '+D' → logprob: -18.788057327270508
    10. 'd' → logprob: -19.038057327270508

Token 324: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.2246291337069124e-05
    2. ' ' → logprob: -10.750021934509277
    3. '3' → logprob: -14.375021934509277
    4. '+' → logprob: -16.375022888183594
    5. ')' → logprob: -17.375022888183594
    6. '4' → logprob: -17.562522888183594
    7. '2' → logprob: -17.625022888183594
    8. '-' → logprob: -17.875022888183594
    9. '   ' → logprob: -18.062522888183594
    10. '```' → logprob: -18.187522888183594

Token 325: ')%' (ID: 57656)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04860462248325348
    2. ')%' → logprob: -3.048604726791382
    3. '%' → logprob: -11.298604965209961
    4. ' )' → logprob: -12.298604965209961
    5. ')
' → logprob: -15.673604965209961
    6. '%)' → logprob: -17.17360496520996
    7. '）' → logprob: -17.67360496520996
    8. ' %' → logprob: -18.04860496520996
    9. ')`' → logprob: -18.54860496520996
    10. '```' → logprob: -18.54860496520996

Token 326: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: 0.0
    2. ' ' → logprob: -17.125
    3. 'len' → logprob: -18.75
    4. '   ' → logprob: -20.875
    5. '۴' → logprob: -22.375
    6. '```' → logprob: -22.625
    7. '' → logprob: -23.5
    8. '  ' → logprob: -23.625
    9. '٤' → logprob: -24.0
    10. '４' → logprob: -24.0

Token 327: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 328: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -4.537180211627856e-05
    2. '
' → logprob: -10.625045776367188
    3. ' print' → logprob: -11.125045776367188
    4. '   ' → logprob: -13.250045776367188
    5. '```' → logprob: -13.625045776367188
    6. '#print' → logprob: -14.625045776367188
    7. 'x' → logprob: -14.875045776367188
    8. '#' → logprob: -14.875045776367188
    9. 'for' → logprob: -14.875045776367188
    10. '(print' → logprob: -14.875045776367188

Token 329: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -2.7252845029579476e-05
    2. 'x' → logprob: -10.750027656555176
    3. ' print' → logprob: -13.250027656555176
    4. 'maze' → logprob: -13.625027656555176
    5. '```' → logprob: -14.250027656555176
    6. '   ' → logprob: -14.250027656555176
    7. '#print' → logprob: -14.875027656555176
    8. '#' → logprob: -15.875027656555176
    9. 's' → logprob: -16.00002670288086
    10. 'y' → logprob: -16.12502670288086

Token 330: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.030980728566646576
    2. '(y' → logprob: -3.6559808254241943
    3. '(' → logprob: -5.655980587005615
    4. '(f' → logprob: -6.905980587005615
    5. '('' → logprob: -9.155981063842773
    6. '((' → logprob: -10.530981063842773
    7. '(chr' → logprob: -11.155981063842773
    8. '(j' → logprob: -11.280981063842773
    9. '('{}' → logprob: -12.780981063842773
    10. '('',' → logprob: -13.155981063842773

Token 331: '+' (ID: 10)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.17562153935432434
    2. ',y' → logprob: -1.925621509552002
    3. ',end' → logprob: -4.300621509552002
    4. ' ,' → logprob: -7.050621509552002
    5. '+' → logprob: -7.425621509552002
    6. ')' → logprob: -9.05062198638916
    7. ',j' → logprob: -10.17562198638916
    8. ',d' → logprob: -11.42562198638916
    9. ',Y' → logprob: -11.42562198638916
    10. ',p' → logprob: -11.80062198638916

Token 332: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.7697225252486533e-06
    2. ' ' → logprob: -12.500003814697266
    3. 'y' → logprob: -19.000003814697266
    4. '<|end|>' → logprob: -19.000003814697266
    5. ',' → logprob: -20.250003814697266
    6. '   ' → logprob: -20.375003814697266
    7. '0' → logprob: -20.500003814697266
    8. ')' → logprob: -20.750003814697266
    9. '１' → logprob: -21.625003814697266
    10. '.' → logprob: -21.625003814697266

Token 333: ',y' (ID: 16103)
  Prédit: ',y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',y' → logprob: -0.4741043448448181
    2. ',' → logprob: -0.9741043448448181
    3. ' ,' → logprob: -10.974103927612305
    4. ',end' → logprob: -11.724103927612305
    5. ',j' → logprob: -13.724103927612305
    6. ',Y' → logprob: -15.849103927612305
    7. ')' → logprob: -15.849103927612305
    8. ',b' → logprob: -16.099103927612305
    9. ',d' → logprob: -16.349103927612305
    10. ',x' → logprob: -16.349103927612305

Token 334: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -8.77627644513268e-06
    2. ')' → logprob: -11.750008583068848
    3. ' +' → logprob: -14.000008583068848
    4. '+)' → logprob: -17.375009536743164
    5. '+
' → logprob: -19.000009536743164
    6. '+x' → logprob: -19.500009536743164
    7. '+')' → logprob: -20.500009536743164
    8. ')+' → logprob: -21.000009536743164
    9. '<|end|>' → logprob: -21.250009536743164
    10. '+l' → logprob: -21.500009536743164

Token 335: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -13.500001907348633
    3. ')' → logprob: -16.875001907348633
    4. '<|end|>' → logprob: -17.375001907348633
    5. '-' → logprob: -18.625001907348633
    6. '+' → logprob: -18.750001907348633
    7. '```' → logprob: -19.000001907348633
    8. '.' → logprob: -19.062501907348633
    9. ',' → logprob: -19.250001907348633
    10. '2' → logprob: -19.375001907348633

Token 336: ',d' (ID: 26159)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.455048449221067e-05
    2. ',' → logprob: -10.250054359436035
    3. ',)' → logprob: -11.875054359436035
    4. ',end' → logprob: -11.875054359436035
    5. ' )' → logprob: -12.375054359436035
    6. ')
' → logprob: -15.125054359436035
    7. ')d' → logprob: -15.500054359436035
    8. ',d' → logprob: -15.500054359436035
    9. '),' → logprob: -17.12505531311035
    10. ',x' → logprob: -17.37505531311035

Token 337: 'irections' (ID: 119283)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.014223329722881317
    2. '+' → logprob: -4.264223098754883
    3. '<|end|>' → logprob: -10.264223098754883
    4. ' )' → logprob: -12.139223098754883
    5. '+)' → logprob: -12.764223098754883
    6. ',' → logprob: -13.139223098754883
    7. ')
' → logprob: -13.264223098754883
    8. '[' → logprob: -13.389223098754883
    9. ')+' → logprob: -13.389223098754883
    10. ' +' → logprob: -13.514223098754883

Token 338: '[d' (ID: 48377)
  Prédit: '[d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[d' → logprob: -1.9361264946837764e-07
    2. '[' → logprob: -16.625
    3. ')d' → logprob: -17.75
    4. 'd' → logprob: -18.375
    5. '[
' → logprob: -19.125
    6. ')[' → logprob: -19.625
    7. '(d' → logprob: -20.0
    8. ' [' → logprob: -20.125
    9. ')' → logprob: -20.125
    10. ' d' → logprob: -20.125

Token 339: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4106481373310089
    2. '])' → logprob: -1.1606481075286865
    3. '[' → logprob: -3.7856481075286865
    4. ')])' → logprob: -7.910648345947266
    5. '[])' → logprob: -9.410648345947266
    6. '`)' → logprob: -9.910648345947266
    7. '))' → logprob: -9.910648345947266
    8. ']' → logprob: -9.910648345947266
    9. ''])' → logprob: -10.285648345947266
    10. ' )' → logprob: -10.285648345947266


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 337
Tokens correctement prédits (1ère position, stricte): 154
Tokens correctement prédits (1ère position, avec adaptation): 170
Tokens correctement prédits (top 10): 293
Précision stricte (1ère position): 45.70%
Précision adaptée (1ère position): 50.45%
Précision (top 10): 86.94%
================================================================================
