================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:13:46
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
import heapq

def solve():
    input = sys.stdin.readline
    while True:
        # Read n (number of islands) and k (number of subsequent lines)
        n, k = map(int, input().split())
        if n == 0 and k == 0:
            # End of all data sets
            break

        # Initialize adjacency list to store graph edges.
        # For each island, we keep list of (neighbor, cost) pairs.
        graph = [[] for _ in range(n + 1)]

        # List to store the queries (orders) that require answers
        queries = []

        # We'll process lines one by one. For any new ship route,
        # we add routes to the graph.
        # For queries (orders), we run shortest path using current graph.

        for _ in range(k):
            data = list(map(int, input().split()))
            if data[0] == 0:
                # Order query: 0 a b
                a, b = data[1], data[2]
                queries.append((a, b))
            else:
                # New ship route: 1 c d e
                c, d, e = data[1], data[2], data[3]
                # Since multiple ships can operate between same islands,
                # we add edges without removing old ones.
                graph[c].append((d, e))
                graph[d].append((c, e))

        # For each query order, compute the minimum fare using Dijkstra
        # from departure island to destination island in current graph.

        for a, b in queries:
            # Implement Dijkstra algorithm

            # distance array - initialize with a large number
            dist = [float('inf')] * (n + 1)
            dist[a] = 0
            # min-heap for exploration: (cost, island)
            heap = [(0, a)]

            while heap:
                cost, island = heapq.heappop(heap)
                # If this cost is already larger than recorded, skip
                if dist[island] < cost:
                    continue
                # If we reached destination, can break early
                if island == b:
                    break
                # Relax edges from current island
                for nxt, w in graph[island]:
                    new_cost = cost + w
                    if dist[nxt] > new_cost:
                        dist[nxt] = new_cost
                        heapq.heappush(heap, (new_cost, nxt))

            # Print the result: -1 if unreachable, else minimum cost
            if dist[b] == float('inf'):
                print(-1)
            else:
                print(dist[b])

if __name__ == "__main__":
    solve()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'import' (ID: 561)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6975938677787781
    2. '\n' → logprob: -0.8225938677787781
    3. '<|end|>' → logprob: -3.572593927383423
    4. '\' → logprob: -4.322593688964844
    5. 'newline' → logprob: -5.072593688964844
    6. 'import' → logprob: -5.322593688964844
    7. '<|end|>' → logprob: -5.947593688964844
    8. '```' → logprob: -6.572593688964844
    9. '' → logprob: -6.697593688964844
    10. '
' → logprob: -6.947593688964844

Token 4: ' heap' (ID: 37237)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.00020771251001860946
    2. 'os' → logprob: -8.500207901000977
    3. ' math' → logprob: -13.375207901000977
    4. ' re' → logprob: -13.750207901000977
    5. '"os' → logprob: -14.250207901000977
    6. ' json' → logprob: -14.750207901000977
    7. '_os' → logprob: -16.375207901000977
    8. ' ' → logprob: -16.500207901000977
    9. ' io' → logprob: -16.625207901000977
    10. '	os' → logprob: -16.875207901000977

Token 5: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -1.6405310816480778e-05
    2. '.' → logprob: -11.375016212463379
    3. '#' → logprob: -13.875016212463379
    4. '_' → logprob: -14.125016212463379
    5. '=' → logprob: -14.500016212463379
    6. 'ify' → logprob: -14.875016212463379
    7. 'queue' → logprob: -15.250016212463379
    8. 'u' → logprob: -15.375016212463379
    9. ')' → logprob: -15.625016212463379
    10. '[' → logprob: -15.625016212463379

Token 6: '

' (ID: 279)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.5876707434654236
    2. '
' → logprob: -1.4626708030700684
    3. '\n' → logprob: -2.0876708030700684
    4. '\' → logprob: -3.0876708030700684
    5. '<|end|>' → logprob: -4.337670803070068
    6. '

' → logprob: -4.962670803070068
    7. '```' → logprob: -5.587670803070068
    8. 'import' → logprob: -5.587670803070068
    9. '.
' → logprob: -5.587670803070068
    10. '' → logprob: -5.587670803070068

Token 7: 'def' (ID: 1314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.9195020794868469
    2. 'def' → logprob: -1.2945020198822021
    3. '\' → logprob: -2.419502019882202
    4. '
' → logprob: -3.169502019882202
    5. 'from' → logprob: -3.294502019882202
    6. 'import' → logprob: -3.419502019882202
    7. '' → logprob: -3.419502019882202
    8. 'class' → logprob: -3.669502019882202
    9. '```' → logprob: -3.794502019882202
    10. '\n' → logprob: -3.794502019882202

Token 8: ' solve' (ID: 17722)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0013864279026165605
    2. ' `' → logprob: -8.126386642456055
    3. ' find' → logprob: -8.126386642456055
    4. '_' → logprob: -8.251386642456055
    5. ' d' → logprob: -9.126386642456055
    6. ' solve' → logprob: -9.376386642456055
    7. ' ```' → logprob: -10.001386642456055
    8. ' shortest' → logprob: -10.126386642456055
    9. '```' → logprob: -10.251386642456055
    10. ' process' → logprob: -10.501386642456055

Token 9: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0032153804786503315
    2. '_' → logprob: -5.878215312957764
    3. ' (' → logprob: -8.753215789794922
    4. '```' → logprob: -9.753215789794922
    5. '():' → logprob: -10.253215789794922
    6. '(:' → logprob: -10.753215789794922
    7. '(
' → logprob: -11.003215789794922
    8. ':' → logprob: -11.378215789794922
    9. '("("' → logprob: -11.378215789794922
    10. '(_' → logprob: -11.503215789794922

Token 10: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04449702799320221
    2. '```' → logprob: -4.294497013092041
    3. '    
' → logprob: -4.919497013092041
    4. '    ' → logprob: -5.419497013092041
    5. '\' → logprob: -5.669497013092041
    6. ' 
' → logprob: -5.794497013092041
    7. ' ' → logprob: -6.294497013092041
    8. ' readline' → logprob: -6.294497013092041
    9. 'n' → logprob: -6.419497013092041
    10. '\n' → logprob: -6.544497013092041

Token 11: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.31023627519607544
    2. ' n' → logprob: -1.4352362155914307
    3. ' import' → logprob: -4.18523645401001
    4. '   ' → logprob: -5.06023645401001
    5. 'n' → logprob: -5.81023645401001
    6. 'input' (adapté à ' input') → logprob: -6.18523645401001
    7. ' sys' → logprob: -6.68523645401001
    8. ' data' → logprob: -8.060235977172852
    9. ' N' → logprob: -8.685235977172852
    10. ' heap' → logprob: -8.935235977172852

Token 12: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.48095715045928955
    2. '()' → logprob: -0.9809571504592896
    3. '_data' → logprob: -6.10595703125
    4. ' =' → logprob: -6.85595703125
    5. '=' → logprob: -7.35595703125
    6. '('' → logprob: -7.48095703125
    7. '_line' → logprob: -7.73095703125
    8. 'data' → logprob: -7.98095703125
    9. '().' → logprob: -8.10595703125
    10. ' ()' → logprob: -8.60595703125

Token 13: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.0008201113669201732
    2. 'sys' → logprob: -7.250820159912109
    3. ' input' → logprob: -9.25082015991211
    4. '	sys' → logprob: -12.00082015991211
    5. 'input' → logprob: -12.62582015991211
    6. '(sys' → logprob: -12.75082015991211
    7. '=sys' → logprob: -13.50082015991211
    8. ' ' → logprob: -15.12582015991211
    9. ' lambda' → logprob: -16.00082015991211
    10. ' iter' → logprob: -18.37582015991211

Token 14: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.4013274610042572
    2. '.' → logprob: -1.1513274908065796
    3. '.readline' → logprob: -4.276327610015869
    4. '.stdout' → logprob: -8.151327133178711
    5. '.std' → logprob: -9.776327133178711
    6. 'stdin' → logprob: -10.276327133178711
    7. '.argv' → logprob: -10.776327133178711
    8. '.read' → logprob: -11.276327133178711
    9. '.setdefault' → logprob: -11.901327133178711
    10. ' .' → logprob: -11.901327133178711

Token 15: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.007899509742856026
    2. '.read' → logprob: -4.882899284362793
    3. 'read' → logprob: -8.757899284362793
    4. '.stdin' → logprob: -9.882899284362793
    5. '.' → logprob: -10.132899284362793
    6. '.buffer' → logprob: -10.757899284362793
    7. '.readlines' → logprob: -11.632899284362793
    8. '_read' → logprob: -12.257899284362793
    9. 'stdin' → logprob: -12.757899284362793
    10. '.Read' → logprob: -13.507899284362793

Token 16: '
' (ID: 198)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.008949109353125095
    2. '()
' → logprob: -4.758949279785156
    3. '()\' → logprob: -9.133949279785156
    4. '(' → logprob: -9.383949279785156
    5. ' ()' → logprob: -10.383949279785156
    6. '(
' → logprob: -10.508949279785156
    7. '
' → logprob: -10.633949279785156
    8. '().' → logprob: -10.758949279785156
    9. '()

' → logprob: -11.383949279785156
    10. ')' → logprob: -12.133949279785156

Token 17: '   ' (ID: 271)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.017116442322731018
    2. '()
' → logprob: -4.142116546630859
    3. '()

' → logprob: -7.892116546630859
    4. '()\' → logprob: -8.51711654663086
    5. '   ' → logprob: -8.64211654663086
    6. ' ()' → logprob: -9.01711654663086
    7. '(' → logprob: -9.39211654663086
    8. '():' → logprob: -10.26711654663086
    9. '().' → logprob: -10.51711654663086
    10. '()`' → logprob: -11.14211654663086

Token 18: ' while' (ID: 2049)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.20639105141162872
    2. 'n' → logprob: -1.7063910961151123
    3. '   ' → logprob: -5.831390857696533
    4. '(n' → logprob: -6.831390857696533
    5. '()' → logprob: -7.706390857696533
    6. ' N' → logprob: -8.831391334533691
    7. '(' → logprob: -9.581391334533691
    8. ' ()' → logprob: -9.956391334533691
    9. ' t' → logprob: -10.206391334533691
    10. 's' → logprob: -10.456391334533691

Token 19: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.00046379686682485044
    2. 'True' → logprob: -7.750463962554932
    3. '(True' → logprob: -10.375463485717773
    4. ' ' → logprob: -13.250463485717773
    5. ' not' → logprob: -15.750463485717773
    6. ' true' → logprob: -17.250463485717773
    7. ' (' → logprob: -17.750463485717773
    8. ' Tru' → logprob: -19.000463485717773
    9. '(' → logprob: -19.375463485717773
    10. '  ' → logprob: -19.625463485717773

Token 20: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04032433405518532
    2. '():' → logprob: -3.2903244495391846
    3. ' :' → logprob: -6.5403242111206055
    4. '):' → logprob: -8.540324211120605
    5. ':
' → logprob: -8.790324211120605
    6. '   ' → logprob: -9.165324211120605
    7. '():
' → logprob: -9.290324211120605
    8. ':**' → logprob: -9.415324211120605
    9. '(' → logprob: -9.790324211120605
    10. '       ' → logprob: -10.415324211120605

Token 21: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0019109079148620367
    2. '   ' → logprob: -7.00191068649292
    3. '    ' → logprob: -7.25191068649292
    4. ' ' → logprob: -9.501911163330078
    5. ' line' → logprob: -9.751911163330078
    6. '        
' → logprob: -10.251911163330078
    7. ' readline' → logprob: -11.126911163330078
    8. '     ' → logprob: -11.251911163330078
    9. '      ' → logprob: -11.251911163330078
    10. '<|end|>' → logprob: -11.501911163330078

Token 22: ' #' (ID: 1069)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.030117344111204147
    2. 'line' → logprob: -4.405117511749268
    3. ' data' → logprob: -4.780117511749268
    4. ' n' → logprob: -5.530117511749268
    5. 'data' → logprob: -5.780117511749268
    6. '   ' → logprob: -6.655117511749268
    7. 'n' → logprob: -8.03011703491211
    8. ' s' → logprob: -8.65511703491211
    9. '       ' → logprob: -9.78011703491211
    10. ' x' → logprob: -10.40511703491211

Token 23: ' Read' (ID: 5405)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.7292681932449341
    2. 'line' → logprob: -1.104268193244934
    3. 'data' → logprob: -1.729268193244934
    4. ' data' → logprob: -4.9792680740356445
    5. 'n' → logprob: -6.9792680740356445
    6. '```' → logprob: -8.229268074035645
    7. ' True' → logprob: -8.729268074035645
    8. ' n' → logprob: -9.479268074035645
    9. 's' → logprob: -9.479268074035645
    10. 'num' → logprob: -9.604268074035645

Token 24: ' n' (ID: 297)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.22451847791671753
    2. 'line' → logprob: -1.8495185375213623
    3. ' a' → logprob: -3.7245185375213623
    4. ' n' → logprob: -5.224518299102783
    5. 'n' → logprob: -5.724518299102783
    6. ' s' → logprob: -6.224518299102783
    7. 's' → logprob: -6.224518299102783
    8. 'a' → logprob: -6.474518299102783
    9. ' ' → logprob: -6.974518299102783
    10. ' the' → logprob: -7.224518299102783

Token 25: ' (' (ID: 350)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1356547623872757
    2. '=' → logprob: -2.8856546878814697
    3. ' ' → logprob: -3.3856546878814697
    4. ',' → logprob: -4.010654926300049
    5. '<|end|>' → logprob: -5.010654926300049
    6. '    ' → logprob: -5.635654926300049
    7. '<|end|>' → logprob: -5.635654926300049
    8. ' ,' → logprob: -6.260654926300049
    9. '  ' → logprob: -7.010654926300049
    10. '   ' → logprob: -7.260654926300049

Token 26: 'number' (ID: 8096)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03469636291265488
    2. ')n' → logprob: -4.284696578979492
    3. ' )' → logprob: -4.534696578979492
    4. 'n' → logprob: -5.659696578979492
    5. 'int' → logprob: -5.909696578979492
    6. ' n' → logprob: -6.409696578979492
    7. '=' → logprob: -8.034696578979492
    8. '=int' → logprob: -8.159696578979492
    9. '):' → logprob: -8.409696578979492
    10. ',' → logprob: -8.784696578979492

Token 27: ' of' (ID: 328)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.22695781290531158
    2. ')' → logprob: -2.2269577980041504
    3. ' of' → logprob: -2.6019577980041504
    4. ' =' → logprob: -4.47695779800415
    5. 'of' → logprob: -5.60195779800415
    6. ',' → logprob: -6.97695779800415
    7. '   ' → logprob: -7.47695779800415
    8. '    ' → logprob: -7.60195779800415
    9. 'token' → logprob: -7.72695779800415
    10. ' ' → logprob: -7.85195779800415

Token 28: ' islands' (ID: 45758)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.13477839529514313
    2. ' )' → logprob: -2.5097784996032715
    3. 's' → logprob: -4.6347784996032715
    4. ' integers' → logprob: -5.5097784996032715
    5. 'vertices' → logprob: -6.0097784996032715
    6. 'items' → logprob: -6.0097784996032715
    7. ' nodes' → logprob: -6.1347784996032715
    8. 'nodes' → logprob: -6.3847784996032715
    9. 'cities' → logprob: -6.5097784996032715
    10. ',' → logprob: -6.7597784996032715

Token 29: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0016655426006764174
    2. ',' → logprob: -7.1266655921936035
    3. '):' → logprob: -8.001665115356445
    4. ' )' → logprob: -8.126665115356445
    5. '=' → logprob: -9.251665115356445
    6. ' and' → logprob: -10.626665115356445
    7. '),' → logprob: -10.751665115356445
    8. ' =' → logprob: -10.751665115356445
    9. ')
' → logprob: -11.001665115356445
    10. '       ' → logprob: -11.126665115356445

Token 30: ' and' (ID: 326)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5665763020515442
    2. '=' → logprob: -1.1915762424468994
    3. ',' → logprob: -2.5665762424468994
    4. ' ' → logprob: -3.6915762424468994
    5. '       ' → logprob: -4.1915764808654785
    6. ' ,' → logprob: -5.8165764808654785
    7. '        ' → logprob: -5.8165764808654785
    8. '    ' → logprob: -6.0665764808654785
    9. '   ' → logprob: -6.9415764808654785
    10. ')' → logprob: -7.0665764808654785

Token 31: ' k' (ID: 372)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.39891570806503296
    2. ' m' → logprob: -1.3989157676696777
    3. 'k' → logprob: -2.7739157676696777
    4. ' k' → logprob: -4.023915767669678
    5. 'd' → logprob: -7.898915767669678
    6. ' d' → logprob: -8.52391529083252
    7. 's' → logprob: -9.02391529083252
    8. 'q' → logprob: -9.14891529083252
    9. 'w' → logprob: -9.27391529083252
    10. 't' → logprob: -9.27391529083252

Token 32: ' (' (ID: 350)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0183386392891407
    2. '=' → logprob: -4.018338680267334
    3. ',' → logprob: -8.643338203430176
    4. '    ' → logprob: -12.268338203430176
    5. ' ,' → logprob: -12.768338203430176
    6. ' ' → logprob: -14.143338203430176
    7. ')' → logprob: -14.518338203430176
    8. '        ' → logprob: -14.643338203430176
    9. '   ' → logprob: -14.643338203430176
    10. '=int' → logprob: -14.893338203430176

Token 33: 'number' (ID: 8096)
  Prédit: ' number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' number' → logprob: -0.5273258090019226
    2. 'number' → logprob: -1.2773258686065674
    3. ')' → logprob: -3.5273258686065674
    4. ' the' → logprob: -3.6523258686065674
    5. 'max' → logprob: -4.027325630187988
    6. 'the' → logprob: -4.152325630187988
    7. ' bridges' → logprob: -4.777325630187988
    8. ' )' → logprob: -5.527325630187988
    9. 'brid' → logprob: -5.652325630187988
    10. ' max' → logprob: -5.777325630187988

Token 34: ' of' (ID: 328)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5485706925392151
    2. ' of' → logprob: -1.5485706329345703
    3. ')' → logprob: -1.7985706329345703
    4. 'of' → logprob: -3.2985706329345703
    5. ' =' → logprob: -5.67357063293457
    6. '<|end|>' → logprob: -6.67357063293457
    7. '<|end|>' → logprob: -7.42357063293457
    8. ' )' → logprob: -7.67357063293457
    9. ',' → logprob: -8.04857063293457
    10. ' ' → logprob: -8.67357063293457

Token 35: ' subsequent' (ID: 29068)
  Prédit: 'brid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'brid' → logprob: -0.9391636252403259
    2. ' bridges' → logprob: -1.3141636848449707
    3. 'edges' → logprob: -2.5641636848449707
    4. ')' → logprob: -2.6891636848449707
    5. ' edges' → logprob: -4.439163684844971
    6. 'tickets' → logprob: -4.626663684844971
    7. 'br' → logprob: -4.689163684844971
    8. 'tre' → logprob: -4.814163684844971
    9. 'boats' → logprob: -4.814163684844971
    10. 'tele' → logprob: -4.876663684844971

Token 36: ' lines' (ID: 8698)
  Prédit: ' )'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' )' → logprob: -0.0834491103887558
    2. ')' → logprob: -2.583449125289917
    3. ' islands' → logprob: -6.458448886871338
    4. ' tokens' → logprob: -7.208448886871338
    5. ' bridges' → logprob: -7.333448886871338
    6. 'tokens' → logprob: -8.583449363708496
    7. ' ,' → logprob: -8.583449363708496
    8. '<|end|>' → logprob: -8.833449363708496
    9. ',' → logprob: -8.958449363708496
    10. 's' → logprob: -8.958449363708496

Token 37: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.038598835468292236
    2. '):' → logprob: -3.4135987758636475
    3. '       ' → logprob: -5.663599014282227
    4. ')
' → logprob: -7.038599014282227
    5. '):
' → logprob: -8.163599014282227
    6. '```' → logprob: -9.413599014282227
    7. ' )' → logprob: -9.663599014282227
    8. '   ' → logprob: -9.913599014282227
    9. '):

' → logprob: -10.538599014282227
    10. ')

' → logprob: -11.288599014282227

Token 38: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0840374007821083
    2. '=' → logprob: -3.7090373039245605
    3. 'n' → logprob: -3.7090373039245605
    4. ' =' → logprob: -3.8340373039245605
    5. ',' → logprob: -6.0840373039245605
    6. '(n' → logprob: -6.0840373039245605
    7. ' n' → logprob: -6.2090373039245605
    8. '   ' → logprob: -7.4590373039245605
    9. '      ' → logprob: -7.9590373039245605
    10. ')' → logprob: -8.084037780761719

Token 39: ' n' (ID: 297)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.08771200478076935
    2. 'line' → logprob: -2.587712049484253
    3. 'n' (adapté à ' n') → logprob: -5.462711811065674
    4. ' n' → logprob: -5.712711811065674
    5. 'data' → logprob: -7.587711811065674
    6. ' data' → logprob: -7.712711811065674
    7. '   ' → logprob: -8.462712287902832
    8. '       ' → logprob: -10.212712287902832
    9. '	line' → logprob: -11.337712287902832
    10. ' try' → logprob: -12.087712287902832

Token 40: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0018706903792917728
    2. '=' → logprob: -6.501870632171631
    3. ',k' → logprob: -8.626871109008789
    4. ' ,' → logprob: -9.126871109008789
    5. ' =' → logprob: -9.626871109008789
    6. ')' → logprob: -12.751871109008789
    7. ',n' → logprob: -12.876871109008789
    8. ',line' → logprob: -13.626871109008789
    9. ',num' → logprob: -13.626871109008789
    10. ',j' → logprob: -14.251871109008789

Token 41: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.693181574344635
    2. ' k' → logprob: -0.693181574344635
    3. '=k' → logprob: -11.568181991577148
    4. ' =' → logprob: -12.443181991577148
    5. '_k' → logprob: -12.568181991577148
    6. 'space' → logprob: -12.818181991577148
    7. ' ' → logprob: -12.943181991577148
    8. '	k' → logprob: -12.943181991577148
    9. ',k' → logprob: -13.068181991577148
    10. ' input' → logprob: -13.193181991577148

Token 42: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07889056205749512
    2. '=' → logprob: -2.578890562057495
    3. ',' → logprob: -15.203890800476074
    4. ' ' → logprob: -15.328890800476074
    5. ')' → logprob: -15.453890800476074
    6. '=input' → logprob: -16.703889846801758
    7. '=line' → logprob: -16.953889846801758
    8. '＝' → logprob: -17.828889846801758
    9. ' =)' → logprob: -18.078889846801758
    10. ' =",' → logprob: -18.328889846801758

Token 43: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.011515659280121326
    2. 'map' → logprob: -4.5115156173706055
    3. ' input' → logprob: -7.7615156173706055
    4. 'input' → logprob: -10.386515617370605
    5. ' list' → logprob: -11.636515617370605
    6. '	map' → logprob: -14.261515617370605
    7. ' ' → logprob: -14.761515617370605
    8. 'list' → logprob: -15.136515617370605
    9. ' tuple' → logprob: -15.136515617370605
    10. '(map' → logprob: -15.386515617370605

Token 44: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4467232823371887
    2. '(int' → logprob: -1.196723222732544
    3. '(str' → logprob: -3.071723222732544
    4. '(lambda' → logprob: -4.946723461151123
    5. '(input' → logprob: -5.446723461151123
    6. '(eval' → logprob: -9.446722984313965
    7. '(
' → logprob: -10.071722984313965
    8. '(list' → logprob: -10.321722984313965
    9. '<|end|>' → logprob: -10.321722984313965
    10. '()' → logprob: -10.571722984313965

Token 45: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.15475308895111084
    2. ',input' → logprob: -2.0297532081604004
    3. '(input' → logprob: -4.6547532081604
    4. 'input' → logprob: -6.7797532081604
    5. '(' → logprob: -6.9047532081604
    6. ')' → logprob: -8.779752731323242
    7. ' ,' → logprob: -9.654752731323242
    8. '(sys' → logprob: -9.904752731323242
    9. '(),' → logprob: -11.154752731323242
    10. '[input' → logprob: -11.529752731323242

Token 46: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.3132627606391907
    2. 'input' → logprob: -1.313262701034546
    3. ' sys' → logprob: -14.938262939453125
    4. ')' → logprob: -15.813262939453125
    5. '=input' → logprob: -15.813262939453125
    6. 'sys' → logprob: -15.938262939453125
    7. '(input' → logprob: -16.188262939453125
    8. '	input' → logprob: -16.688262939453125
    9. ',input' → logprob: -17.063262939453125
    10. ' ' → logprob: -17.688262939453125

Token 47: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.1041145626222715e-05
    2. '()' → logprob: -11.500011444091797
    3. ' ().' → logprob: -14.125011444091797
    4. ')' → logprob: -17.375011444091797
    5. '()
' → logprob: -17.625011444091797
    6. '().'' → logprob: -17.750011444091797
    7. '())' → logprob: -18.375011444091797
    8. '(' → logprob: -18.500011444091797
    9. '.readline' → logprob: -18.750011444091797
    10. '('').' → logprob: -19.125011444091797

Token 48: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.06283073127269745
    2. 'strip' → logprob: -2.812830686569214
    3. 'rstrip' → logprob: -7.062830924987793
    4. '(split' → logprob: -12.937830924987793
    5. 'read' → logprob: -13.187830924987793
    6. 'rs' → logprob: -13.937830924987793
    7. ' split' → logprob: -14.812830924987793
    8. ')' → logprob: -15.437830924987793
    9. '```' → logprob: -15.562830924987793
    10. 'decode' → logprob: -16.062829971313477

Token 49: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00019173922191839665
    2. '))' → logprob: -9.375191688537598
    3. '())' → logprob: -10.125191688537598
    4. '()' → logprob: -10.375191688537598
    5. '(' → logprob: -11.000191688537598
    6. ')
' → logprob: -11.250191688537598
    7. ' )' → logprob: -13.750191688537598
    8. ')`' → logprob: -14.000191688537598
    9. ')")' → logprob: -14.500191688537598
    10. ')))' → logprob: -14.500191688537598

Token 50: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 51: ' if' (ID: 538)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.1708593368530273
    2. ' if' → logprob: -1.5458593368530273
    3. 'if' (adapté à ' if') → logprob: -1.6708593368530273
    4. '<|end|>' → logprob: -1.6708593368530273
    5. '       ' → logprob: -2.9208593368530273
    6. ' ' → logprob: -4.170859336853027
    7. '   ' → logprob: -4.670859336853027
    8. '\n' → logprob: -5.295859336853027
    9. '#' → logprob: -5.795859336853027
    10. '        ' → logprob: -6.170859336853027

Token 52: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.016490362584590912
    2. ' not' → logprob: -4.141490459442139
    3. 'n' → logprob: -7.766490459442139
    4. 'not' → logprob: -10.76648998260498
    5. ' ' → logprob: -11.51648998260498
    6. ' (' → logprob: -14.64148998260498
    7. '	n' → logprob: -14.76648998260498
    8. ' ' → logprob: -15.76648998260498
    9. '(n' → logprob: -16.516490936279297
    10. ' н' → logprob: -16.766490936279297

Token 53: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.004095497075468302
    2. '==' → logprob: -5.504095554351807
    3. ' <=' → logprob: -11.879095077514648
    4. ' =' → logprob: -12.379095077514648
    5. '=' → logprob: -12.879095077514648
    6. ' <' → logprob: -13.504095077514648
    7. ' ' → logprob: -14.129095077514648
    8. ')' → logprob: -14.504095077514648
    9. ')==' → logprob: -15.379095077514648
    10. ' ' → logprob: -15.879095077514648

Token 54: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004620472434908152
    2. ' ' → logprob: -5.379620552062988
    3. '۰' → logprob: -16.129619598388672
    4. ' ' → logprob: -17.629619598388672
    5. '  ' → logprob: -17.754619598388672
    6. '０' → logprob: -17.817119598388672
    7. '০' → logprob: -18.067119598388672
    8. '<|end|>' → logprob: -18.254619598388672
    9. '_' → logprob: -18.879619598388672
    10. '```' → logprob: -18.942119598388672

Token 55: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.001326433615759015
    2. ' ' → logprob: -6.626326560974121
    3. '-' → logprob: -15.626326560974121
    4. '۰' → logprob: -16.563825607299805
    5. '```' → logprob: -17.126325607299805
    6. ' ' → logprob: -17.313825607299805
    7. ' -' → logprob: -17.438825607299805
    8. 'o' → logprob: -17.876325607299805
    9. '...' → logprob: -18.001325607299805
    10. '০' → logprob: -18.001325607299805

Token 56: ' and' (ID: 326)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07190652191638947
    2. ' and' → logprob: -2.696906566619873
    3. 'and' → logprob: -6.446906566619873
    4. ' :' → logprob: -8.196906089782715
    5. ' or' → logprob: -10.071906089782715
    6. ':return' → logprob: -10.571906089782715
    7. '):' → logprob: -10.946906089782715
    8. ':
' → logprob: -11.821906089782715
    9. '<|end|>' → logprob: -12.821906089782715
    10. ')' → logprob: -12.821906089782715

Token 57: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.023247575387358665
    2. 'k' → logprob: -3.773247480392456
    3. ' ' → logprob: -13.773247718811035
    4. '	k' → logprob: -13.773247718811035
    5. ' ' → logprob: -17.64824676513672
    6. '_k' → logprob: -18.77324676513672
    7. ' ' → logprob: -18.89824676513672
    8. ',k' → logprob: -18.89824676513672
    9. ' к' → logprob: -19.14824676513672
    10. '"k' → logprob: -19.89824676513672

Token 58: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.0019144766265526414
    2. '==' → logprob: -6.3769145011901855
    3. '<|end|>' → logprob: -9.251914024353027
    4. ' ' → logprob: -9.626914024353027
    5. ')' → logprob: -11.126914024353027
    6. ' =' → logprob: -11.251914024353027
    7. ' ' → logprob: -12.001914024353027
    8. '<|end|>' → logprob: -12.501914024353027
    9. '=' → logprob: -12.751914024353027
    10. ')==' → logprob: -12.751914024353027

Token 59: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06993654370307922
    2. ' ' → logprob: -2.694936513900757
    3. ' ' → logprob: -16.194936752319336
    4. '<|end|>' → logprob: -16.569936752319336
    5. '  ' → logprob: -17.194936752319336
    6. '۰' → logprob: -17.319936752319336
    7. '   ' → logprob: -17.757436752319336
    8. '<|end|>' → logprob: -18.069936752319336
    9. '```' → logprob: -19.007436752319336
    10. ' ' → logprob: -19.132436752319336

Token 60: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0040785204619169235
    2. ' ' → logprob: -5.504078388214111
    3. '<|end|>' → logprob: -16.879077911376953
    4. '  ' → logprob: -17.754077911376953
    5. '   ' → logprob: -18.754077911376953
    6. '۰' → logprob: -19.004077911376953
    7. ' ' → logprob: -19.191577911376953
    8. '```' → logprob: -19.566577911376953
    9. ')' → logprob: -19.629077911376953
    10. 'o' → logprob: -20.066577911376953

Token 61: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0001895935565698892
    2. ':
' → logprob: -8.875189781188965
    3. ':return' → logprob: -10.000189781188965
    4. '):' → logprob: -13.375189781188965
    5. ' :' → logprob: -13.500189781188965
    6. '       ' → logprob: -14.375189781188965
    7. '   ' → logprob: -14.750189781188965
    8. '<|end|>' → logprob: -15.250189781188965
    9. ',' → logprob: -16.75018882751465
    10. '.' → logprob: -16.87518882751465

Token 62: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005353770684450865
    2. '       ' → logprob: -5.255353927612305
    3. '		' → logprob: -10.505353927612305
    4. ' break' → logprob: -10.505353927612305
    5. '          ' → logprob: -10.755353927612305
    6. '   ' → logprob: -11.505353927612305
    7. '	       ' → logprob: -12.130353927612305
    8. '               ' → logprob: -12.380353927612305
    9. 'break' → logprob: -12.630353927612305
    10. '<|end|>' → logprob: -12.630353927612305

Token 63: ' #' (ID: 1069)
  Prédit: ' break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.12807917594909668
    2. 'break' → logprob: -2.7530791759490967
    3. '       ' → logprob: -3.0030791759490967
    4. ' return' → logprob: -5.628079414367676
    5. 'return' → logprob: -6.003079414367676
    6. '           ' → logprob: -7.878079414367676
    7. '	break' → logprob: -8.253079414367676
    8. '   ' → logprob: -9.003079414367676
    9. '               ' → logprob: -11.753079414367676
    10. '_break' → logprob: -12.378079414367676

Token 64: ' End' (ID: 6437)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.3201765716075897
    2. ' break' → logprob: -1.320176601409912
    3. 'return' → logprob: -5.195176601409912
    4. '       ' → logprob: -7.070176601409912
    5. ' return' → logprob: -7.820176601409912
    6. '	break' → logprob: -10.195176124572754
    7. '           ' → logprob: -10.570176124572754
    8. '   ' → logprob: -11.195176124572754
    9. '```' → logprob: -11.445176124572754
    10. ' ' → logprob: -12.695176124572754

Token 65: ' of' (ID: 328)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 66: ' all' (ID: 722)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.5613263249397278
    2. ' input' → logprob: -0.9363263249397278
    3. ' program' → logprob: -4.561326503753662
    4. ' the' → logprob: -4.686326503753662
    5. 'program' → logprob: -4.811326503753662
    6. '<|end|>' → logprob: -5.561326503753662
    7. 'the' → logprob: -5.936326503753662
    8. 'file' → logprob: -6.686326503753662
    9. ' file' → logprob: -7.936326503753662
    10. 'data' → logprob: -8.061326026916504

Token 67: ' data' (ID: 1238)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.8984270095825195
    2. ' input' → logprob: -1.0234270095825195
    3. 'input' → logprob: -2.3984270095825195
    4. '
' → logprob: -2.7734270095825195
    5. '<|end|>' → logprob: -3.2734270095825195
    6. '   ' → logprob: -4.8984270095825195
    7. '<|end|>' → logprob: -5.2734270095825195
    8. ' program' → logprob: -5.5234270095825195
    9. '_input' → logprob: -5.7734270095825195
    10. '```' → logprob: -5.8984270095825195

Token 68: ' sets' (ID: 11982)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.790414571762085
    2. '\n' → logprob: -1.040414571762085
    3. '           ' → logprob: -2.790414571762085
    4. '
' → logprob: -3.040414571762085
    5. '<|end|>' → logprob: -3.290414571762085
    6. ' break' → logprob: -4.290414810180664
    7. '   ' → logprob: -4.540414810180664
    8. '        
' → logprob: -5.415414810180664
    9. '    
' → logprob: -5.665414810180664
    10. '	break' → logprob: -6.290414810180664

Token 69: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1284448206424713
    2. '       ' → logprob: -2.1284449100494385
    3. '\n' → logprob: -7.878444671630859
    4. ' break' → logprob: -8.37844467163086
    5. '               ' → logprob: -8.62844467163086
    6. '   ' → logprob: -8.62844467163086
    7. '<|end|>' → logprob: -8.75344467163086
    8. '		' → logprob: -9.62844467163086
    9. 'break' → logprob: -9.62844467163086
    10. '	break' → logprob: -9.87844467163086

Token 70: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.003375791944563389
    2. '       ' → logprob: -5.753376007080078
    3. '\n' → logprob: -9.628376007080078
    4. '               ' → logprob: -9.878376007080078
    5. '<|end|>' → logprob: -10.878376007080078
    6. '   ' → logprob: -11.128376007080078
    7. '		' → logprob: -11.628376007080078
    8. ' break' → logprob: -11.628376007080078
    9. '          ' → logprob: -11.753376007080078
    10. ',' → logprob: -13.003376007080078

Token 71: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.6125360131263733
    2. 'break' (adapté à ' break') → logprob: -0.8625360131263733
    3. 'return' → logprob: -3.7375359535217285
    4. '       ' → logprob: -4.8625359535217285
    5. ' return' → logprob: -5.8625359535217285
    6. '           ' → logprob: -6.6125359535217285
    7. '	break' → logprob: -9.112536430358887
    8. '   ' → logprob: -10.112536430358887
    9. '               ' → logprob: -10.862536430358887
    10. '```' → logprob: -11.487536430358887

Token 72: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2001255303621292
    2. '       ' → logprob: -2.3251254558563232
    3. '<|end|>' → logprob: -2.5751254558563232
    4. '        
' → logprob: -5.575125694274902
    5. '' → logprob: -6.950125694274902
    6. '<|end|>' → logprob: -7.700125694274902
    7. '\n' → logprob: -8.200125694274902
    8. ')' → logprob: -8.325125694274902
    9. '```' → logprob: -8.450125694274902
    10. '
' → logprob: -8.450125694274902

Token 73: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6128095984458923
    2. 'graph' → logprob: -1.487809658050537
    3. '   ' → logprob: -2.487809658050537
    4. '        
' → logprob: -3.237809658050537
    5. ' graph' → logprob: -3.487809658050537
    6. '```' → logprob: -3.987809658050537
    7. 'edges' → logprob: -4.487809658050537
    8. '    
' → logprob: -4.862809658050537
    9. '
' → logprob: -5.112809658050537
    10. ' edges' → logprob: -5.612809658050537

Token 74: ' #' (ID: 1069)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.3343628942966461
    2. '       ' → logprob: -1.8343628644943237
    3. ' graph' → logprob: -2.3343629837036133
    4. '#' (adapté à ' #') → logprob: -4.959362983703613
    5. 'adj' → logprob: -5.584362983703613
    6. 'dist' → logprob: -5.584362983703613
    7. 'edges' → logprob: -6.459362983703613
    8. '   ' → logprob: -6.584362983703613
    9. 'distance' → logprob: -6.584362983703613
    10. 'g' → logprob: -6.959362983703613

Token 75: ' Initialize' (ID: 19496)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.6459475159645081
    2. 'adj' → logprob: -1.8959474563598633
    3. 'dist' → logprob: -2.3959474563598633
    4. ' graph' → logprob: -2.5209474563598633
    5. ' islands' → logprob: -4.145947456359863
    6. 'distance' → logprob: -4.145947456359863
    7. ' distances' → logprob: -4.145947456359863
    8. 'is' → logprob: -4.145947456359863
    9. 'edges' → logprob: -4.270947456359863
    10. ' dist' → logprob: -4.395947456359863

Token 76: ' adjacency' (ID: 177015)
  Prédit: ' graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' graph' → logprob: -0.5096337795257568
    2. ' distances' → logprob: -1.8846337795257568
    3. 'graph' → logprob: -2.009633779525757
    4. 'dist' → logprob: -2.884633779525757
    5. ' dist' → logprob: -4.009634017944336
    6. ' adjacency' → logprob: -4.009634017944336
    7. 'distance' → logprob: -5.134634017944336
    8. 'adj' → logprob: -5.384634017944336
    9. ' distance' → logprob: -6.009634017944336
    10. '       ' → logprob: -6.134634017944336

Token 77: ' list' (ID: 1562)
  Prédit: '_list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.010643578134477139
    2. '_' → logprob: -5.385643482208252
    3. 'list' → logprob: -5.635643482208252
    4. '_lists' → logprob: -7.010643482208252
    5. ' list' → logprob: -7.135643482208252
    6. ' ' → logprob: -8.26064395904541
    7. '[' → logprob: -8.88564395904541
    8. 'List' → logprob: -8.88564395904541
    9. ' =' → logprob: -9.63564395904541
    10. '_lst' → logprob: -10.76064395904541

Token 78: ' to' (ID: 316)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22792895138263702
    2. ' =' → logprob: -2.727928876876831
    3. 'graph' → logprob: -3.227928876876831
    4. ' graph' → logprob: -3.352928876876831
    5. '[' → logprob: -3.477928876876831
    6. '=' → logprob: -4.97792911529541
    7. ',' → logprob: -5.35292911529541
    8. ':' → logprob: -5.60292911529541
    9. ' adjacency' → logprob: -5.60292911529541
    10. '[]' → logprob: -6.47792911529541

Token 79: ' store' (ID: 4897)
  Prédit: ' [[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' [[]' → logprob: -0.2723032832145691
    2. '[' → logprob: -2.147303342819214
    3. '[]' → logprob: -3.147303342819214
    4. ' [' → logprob: -3.522303342819214
    5. '{}' → logprob: -3.772303342819214
    6. '{' → logprob: -5.022303104400635
    7. ' {' → logprob: -5.147303104400635
    8. ' {}' → logprob: -5.272303104400635
    9. ' []' → logprob: -5.397303104400635
    10. ' defaultdict' → logprob: -6.147303104400635

Token 80: ' graph' (ID: 7465)
  Prédit: ' graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' graph' → logprob: -0.5019178986549377
    2. '[]' → logprob: -2.001917839050293
    3. ' edges' → logprob: -2.626917839050293
    4. 'graph' → logprob: -2.751917839050293
    5. ' the' → logprob: -3.001917839050293
    6. ' []' → logprob: -3.626917839050293
    7. ' adjacency' → logprob: -3.751917839050293
    8. ' graphs' → logprob: -5.626917839050293
    9. ' neighbors' → logprob: -6.126917839050293
    10. ' islands' → logprob: -6.501917839050293

Token 81: ' edges' (ID: 22569)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5858591794967651
    2. '[' → logprob: -1.2108591794967651
    3. '   ' → logprob: -3.2108592987060547
    4. ' =' → logprob: -3.5858592987060547
    5. 'graph' → logprob: -3.8358592987060547
    6. '[n' → logprob: -4.335859298706055
    7. '[]' → logprob: -5.085859298706055
    8. ' graph' → logprob: -5.335859298706055
    9. 'n' → logprob: -5.585859298706055
    10. '(' → logprob: -5.710859298706055

Token 82: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19114461541175842
    2. ' graph' → logprob: -2.8161447048187256
    3. 'graph' → logprob: -3.1911447048187256
    4. '        
' → logprob: -4.0661444664001465
    5. ' adjacency' → logprob: -4.1911444664001465
    6. '
' → logprob: -5.0661444664001465
    7. 'n' → logprob: -5.1911444664001465
    8. ' edges' → logprob: -5.3161444664001465
    9. '   ' → logprob: -5.3161444664001465
    10. '	graph' → logprob: -5.6911444664001465

Token 83: '       ' (ID: 309)
  Prédit: ' graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' graph' → logprob: -0.19448699057102203
    2. 'graph' → logprob: -2.5694870948791504
    3. '       ' → logprob: -2.8194870948791504
    4. ' adjacency' → logprob: -3.6944870948791504
    5. ' edges' → logprob: -5.44448709487915
    6. '	graph' → logprob: -5.81948709487915
    7. '   ' → logprob: -6.69448709487915
    8. '```' → logprob: -6.81948709487915
    9. '    ' → logprob: -7.06948709487915
    10. ' adj' → logprob: -7.19448709487915

Token 84: ' #' (ID: 1069)
  Prédit: ' graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' graph' → logprob: -0.04645663499832153
    2. 'graph' → logprob: -3.1714565753936768
    3. ' adjacency' → logprob: -6.671456813812256
    4. ' adj' → logprob: -7.171456813812256
    5. '	graph' → logprob: -7.796456813812256
    6. '       ' → logprob: -8.421456336975098
    7. 'adj' → logprob: -8.796456336975098
    8. ' edges' → logprob: -8.921456336975098
    9. '   ' → logprob: -9.171456336975098
    10. '    ' → logprob: -9.421456336975098

Token 85: ' For' (ID: 2214)
  Prédit: ' graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' graph' → logprob: -0.3134504556655884
    2. 'graph' → logprob: -1.4384504556655884
    3. ' adj' → logprob: -4.313450336456299
    4. 'adj' → logprob: -4.313450336456299
    5. ' adjacency' → logprob: -5.563450336456299
    6. 'g' → logprob: -7.938450336456299
    7. ' g' → logprob: -8.688450813293457
    8. '	graph' → logprob: -9.188450813293457
    9. ' graphs' → logprob: -9.438450813293457
    10. 'graphs' → logprob: -9.688450813293457

Token 86: ' each' (ID: 2454)
  Prédit: ' _'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.08442422747612
    2. ' i' → logprob: -2.7094242572784424
    3. '_' → logprob: -5.084424018859863
    4. ' each' → logprob: -5.209424018859863
    5. 'i' → logprob: -6.209424018859863
    6. ' ' → logprob: -7.709424018859863
    7. 'each' → logprob: -9.084424018859863
    8. ' island' → logprob: -10.334424018859863
    9. '_i' → logprob: -10.709424018859863
    10. ' range' → logprob: -11.334424018859863

Token 87: ' island' (ID: 18149)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.45843929052352905
    2. 'i' → logprob: -1.8334393501281738
    3. ' island' → logprob: -2.208439350128174
    4. ' node' → logprob: -2.458439350128174
    5. ' ' → logprob: -4.958439350128174
    6. '_' → logprob: -7.083439350128174
    7. 'node' → logprob: -7.208439350128174
    8. 'n' → logprob: -7.333439350128174
    9. '```' → logprob: -8.083438873291016
    10. ' _' → logprob: -8.333438873291016

Token 88: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.052733343094587326
    2. ' ,' → logprob: -3.0527334213256836
    3. '[' → logprob: -7.177733421325684
    4. ':' → logprob: -7.177733421325684
    5. ' for' → logprob: -7.927733421325684
    6. ' in' → logprob: -8.052733421325684
    7. '       ' → logprob: -8.177733421325684
    8. ' =' → logprob: -8.802733421325684
    9. ')' → logprob: -9.052733421325684
    10. ' ' → logprob: -9.177733421325684

Token 89: ' we' (ID: 581)
  Prédit: ' graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' graph' → logprob: -0.4142031669616699
    2. ' adjacency' → logprob: -2.03920316696167
    3. 'graph' → logprob: -3.03920316696167
    4. ' we' → logprob: -3.28920316696167
    5. ' adj' → logprob: -3.41420316696167
    6. 'adj' → logprob: -4.03920316696167
    7. ' edges' → logprob: -4.16420316696167
    8. ' you' → logprob: -4.41420316696167
    9. ' ' → logprob: -5.16420316696167
    10. 'we' → logprob: -5.53920316696167

Token 90: ' keep' (ID: 3357)
  Prédit: ' will'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' will' → logprob: -0.44292157888412476
    2. ' have' → logprob: -1.9429216384887695
    3. ''ll' → logprob: -3.3179216384887695
    4. '<|end|>' → logprob: -3.5679216384887695
    5. 'will' → logprob: -3.8179216384887695
    6. 'n' → logprob: -3.9429216384887695
    7. ' can' → logprob: -4.1929216384887695
    8. ' =' → logprob: -4.6929216384887695
    9. ' need' → logprob: -4.6929216384887695
    10. '<|end|>' → logprob: -4.8179216384887695

Token 91: ' list' (ID: 1562)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.7553768157958984
    2. ' []' → logprob: -1.3803768157958984
    3. ' an' → logprob: -1.8803768157958984
    4. '[]' → logprob: -2.1303768157958984
    5. '[' → logprob: -5.880376815795898
    6. 'a' → logprob: -6.505376815795898
    7. ' ' → logprob: -7.005376815795898
    8. ' lists' → logprob: -7.255376815795898
    9. ' [' → logprob: -7.630376815795898
    10. ' [[]' → logprob: -8.255376815795898

Token 92: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.030703268945217133
    2. '[' → logprob: -4.155703067779541
    3. '<|end|>' → logprob: -4.530703067779541
    4. '[]' → logprob: -6.905703067779541
    5. '<|end|>' → logprob: -7.405703067779541
    6. 'of' → logprob: -7.405703067779541
    7. ' ' → logprob: -7.655703067779541
    8. '(' → logprob: -8.4057035446167
    9. 's' → logprob: -8.6557035446167
    10. '()' → logprob: -9.0307035446167

Token 93: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.09160923212766647
    2. ' tuples' → logprob: -2.466609239578247
    3. ' pairs' → logprob: -7.341609001159668
    4. '<|end|>' → logprob: -7.466609001159668
    5. ' neighbors' → logprob: -7.966609001159668
    6. ' its' → logprob: -8.841609001159668
    7. 'neighbors' → logprob: -8.966609001159668
    8. '(' → logprob: -8.966609001159668
    9. ' connected' → logprob: -9.091609001159668
    10. ' neighboring' → logprob: -9.216609001159668

Token 94: 'neighbor' (ID: 108409)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.10027115046977997
    2. 'neighbor' → logprob: -3.850271224975586
    3. '(cost' → logprob: -3.975271224975586
    4. '(distance' → logprob: -4.475271224975586
    5. '(destination' → logprob: -4.975271224975586
    6. '(weight' → logprob: -5.100271224975586
    7. ')' → logprob: -5.100271224975586
    8. ' neighbor' → logprob: -5.225271224975586
    9. 'cost' → logprob: -5.725271224975586
    10. ' cost' → logprob: -5.725271224975586

Token 95: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00017159747949335724
    2. ' ,' → logprob: -9.375171661376953
    3. '_node' → logprob: -10.875171661376953
    4. ')' → logprob: -11.250171661376953
    5. ',node' → logprob: -11.375171661376953
    6. '_,' → logprob: -11.500171661376953
    7. ',
' → logprob: -11.750171661376953
    8. 's' → logprob: -12.375171661376953
    9. '<|end|>' → logprob: -12.375171661376953
    10. '_index' → logprob: -12.625171661376953

Token 96: ' cost' (ID: 3097)
  Prédit: ' cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cost' → logprob: -0.5091019868850708
    2. ' weight' → logprob: -1.5091019868850708
    3. 'cost' → logprob: -2.7591018676757812
    4. ' distance' → logprob: -2.8841018676757812
    5. 'weight' → logprob: -3.6341018676757812
    6. 'distance' → logprob: -3.8841018676757812
    7. ' time' → logprob: -5.759101867675781
    8. ' ' → logprob: -6.759101867675781
    9. ' travel' → logprob: -7.321601867675781
    10. ' w' → logprob: -7.571601867675781

Token 97: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00010556964843999594
    2. ',' → logprob: -9.500105857849121
    3. ' )' → logprob: -11.250105857849121
    4. '),' → logprob: -11.625105857849121
    5. ' ' → logprob: -13.125105857849121
    6. ')
' → logprob: -13.375105857849121
    7. 's' → logprob: -13.500105857849121
    8. '<|end|>' → logprob: -14.000105857849121
    9. '   ' → logprob: -14.125105857849121
    10. ')

' → logprob: -15.125105857849121

Token 98: ' pairs' (ID: 24702)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20108318328857422
    2. ' =' → logprob: -2.576083183288574
    3. ']' → logprob: -2.701083183288574
    4. 's' → logprob: -4.201083183288574
    5. '=' → logprob: -4.576083183288574
    6. '<|end|>' → logprob: -5.701083183288574
    7. '[]' → logprob: -5.826083183288574
    8. '[' → logprob: -6.576083183288574
    9. '   ' → logprob: -6.701083183288574
    10. '       ' → logprob: -7.076083183288574

Token 99: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.020292527973651886
    2. ')' → logprob: -4.64529275894165
    3. ',' → logprob: -5.89529275894165
    4. '[' → logprob: -6.14529275894165
    5. '   ' → logprob: -6.27029275894165
    6. ' =' → logprob: -7.89529275894165
    7. '        
' → logprob: -8.020292282104492
    8. '<|end|>' → logprob: -8.020292282104492
    9. ' ' → logprob: -8.145292282104492
    10. '           ' → logprob: -8.270292282104492

Token 100: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.42290642857551575
    2. '        
' → logprob: -1.7979063987731934
    3. '
' → logprob: -2.0479063987731934
    4. '        ' → logprob: -4.172906398773193
    5. ' ' → logprob: -4.547906398773193
    6. ' 
' → logprob: -4.547906398773193
    7. '    ' → logprob: -6.172906398773193
    8. '    
' → logprob: -6.422906398773193
    9. '<|end|>' → logprob: -6.422906398773193
    10. '   ' → logprob: -7.047906398773193

Token 101: ' graph' (ID: 7465)
  Prédit: ' graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' graph' → logprob: -0.31252092123031616
    2. 'graph' (adapté à ' graph') → logprob: -1.437520980834961
    3. '       ' → logprob: -3.812520980834961
    4. ' adjacency' → logprob: -5.687520980834961
    5. 'adj' → logprob: -6.812520980834961
    6. ' adj' → logprob: -6.937520980834961
    7. ' edges' → logprob: -6.937520980834961
    8. 'g' → logprob: -7.562520980834961
    9. '	graph' → logprob: -7.687520980834961
    10. ' islands' → logprob: -7.812520980834961

Token 102: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.012520013377070427
    2. '=' → logprob: -4.387519836425781
    3. ' ' → logprob: -11.887519836425781
    4. '[' → logprob: -13.262519836425781
    5. ' =[' → logprob: -14.637519836425781
    6. '=[]' → logprob: -14.762519836425781
    7. '   ' → logprob: -15.387519836425781
    8. ']' → logprob: -15.387519836425781
    9. '=[' → logprob: -16.38751983642578
    10. '[]' → logprob: -16.76251983642578

Token 103: ' [[]' (ID: 182908)
  Prédit: ' [[]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [[]' → logprob: -0.10436134040355682
    2. '[' → logprob: -2.3543612957000732
    3. ' [' → logprob: -5.604361534118652
    4. ' {' → logprob: -8.729361534118652
    5. ' [{}' → logprob: -8.854361534118652
    6. '{' → logprob: -8.979361534118652
    7. ' defaultdict' → logprob: -10.729361534118652
    8. '{}' → logprob: -11.854361534118652
    9. 'default' → logprob: -13.479361534118652
    10. '[]' → logprob: -14.104361534118652

Token 104: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.08003277331590652
    2. 'for' → logprob: -2.5800328254699707
    3. ',' → logprob: -7.330032825469971
    4. ')' → logprob: -7.705032825469971
    5. '       ' → logprob: -11.705032348632812
    6. ']' → logprob: -11.955032348632812
    7. ',n' → logprob: -12.205032348632812
    8. ' ' → logprob: -12.330032348632812
    9. ' )' → logprob: -12.580032348632812
    10. ' ,' → logprob: -12.955032348632812

Token 105: ' _' (ID: 1175)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.618714451789856
    2. '_' → logprob: -1.993714451789856
    3. ' _' → logprob: -1.993714451789856
    4. ' range' → logprob: -1.993714451789856
    5. '(' → logprob: -3.2437143325805664
    6. 'range' → logprob: -4.868714332580566
    7. '(range' → logprob: -5.993714332580566
    8. ' ' → logprob: -6.368714332580566
    9. 'in' → logprob: -6.743714332580566
    10. ' (' → logprob: -8.243714332580566

Token 106: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.010143700987100601
    2. 'in' → logprob: -4.760143756866455
    3. 'range' → logprob: -6.510143756866455
    4. ' range' → logprob: -10.385143280029297
    5. ' ' → logprob: -12.385143280029297
    6. 'ange' → logprob: -13.635143280029297
    7. 'n' → logprob: -13.760143280029297
    8. '  ' → logprob: -14.385143280029297
    9. 'i' → logprob: -14.635143280029297
    10. 's' → logprob: -15.510143280029297

Token 107: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.1269376575946808
    2. ' range' → logprob: -2.1269376277923584
    3. '(range' → logprob: -11.626937866210938
    4. '	range' → logprob: -15.626937866210938
    5. ' ' → logprob: -16.126937866210938
    6. ')' → logprob: -16.376937866210938
    7. '   ' → logprob: -17.001937866210938
    8. 'rang' → logprob: -17.376937866210938
    9. ' xrange' → logprob: -17.376937866210938
    10. '```' → logprob: -17.501937866210938

Token 108: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00026169343618676066
    2. '(' → logprob: -8.250261306762695
    3. ' (' → logprob: -14.750261306762695
    4. '((' → logprob: -16.500261306762695
    5. 'n' → logprob: -19.250261306762695
    6. '(
' → logprob: -19.875261306762695
    7. '(N' → logprob: -19.875261306762695
    8. '(num' → logprob: -20.125261306762695
    9. '(nx' → logprob: -20.500261306762695
    10. ')(' → logprob: -21.125261306762695

Token 109: ' +' (ID: 659)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0004988207365386188
    2. ' )' → logprob: -7.6254987716674805
    3. ')' → logprob: -11.87549877166748
    4. ')]
' → logprob: -13.75049877166748
    5. '+' → logprob: -13.87549877166748
    6. ' ]' → logprob: -14.50049877166748
    7. ')]

' → logprob: -15.00049877166748
    8. ']' → logprob: -15.25049877166748
    9. ')],' → logprob: -15.75049877166748
    10. ')]
' → logprob: -16.375499725341797

Token 110: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03804412856698036
    2. ' ' → logprob: -3.2880442142486572
    3. '0' → logprob: -14.163043975830078
    4. ')' → logprob: -14.413043975830078
    5. '2' → logprob: -14.413043975830078
    6. '```' → logprob: -15.850543975830078
    7. '  ' → logprob: -15.975543975830078
    8. '   ' → logprob: -15.975543975830078
    9. ' )' → logprob: -16.725543975830078
    10. '

' → logprob: -16.850543975830078

Token 111: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.229872087715194e-05
    2. ' ' → logprob: -9.750061988830566
    3. '0' → logprob: -13.000061988830566
    4. '2' → logprob: -13.750061988830566
    5. '   ' → logprob: -15.125061988830566
    6. '```' → logprob: -15.875061988830566
    7. '3' → logprob: -16.375062942504883
    8. '  ' → logprob: -16.625062942504883
    9. '7' → logprob: -17.187562942504883
    10. '
' → logprob: -17.500062942504883

Token 112: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.16859811544418335
    2. ']' → logprob: -1.9185981750488281
    3. ')' → logprob: -4.793598175048828
    4. ' ]' → logprob: -10.293598175048828
    5. '])' → logprob: -11.543598175048828
    6. ' )' → logprob: -12.793598175048828
    7. ')])' → logprob: -13.293598175048828
    8. ')],' → logprob: -13.293598175048828
    9. '   ' → logprob: -13.418598175048828
    10. '`]' → logprob: -13.668598175048828

Token 113: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04025311395525932
    2. '<|end|>' → logprob: -3.540253162384033
    3. '
' → logprob: -4.915253162384033
    4. ' for' → logprob: -6.540253162384033
    5. '<|end|>' → logprob: -7.290253162384033
    6. 'for' → logprob: -7.415253162384033
    7. '        
' → logprob: -8.665252685546875
    8. '	for' → logprob: -10.165252685546875
    9. '	' → logprob: -10.290252685546875
    10. '   ' → logprob: -10.415252685546875

Token 114: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.24695691466331482
    2. ' for' → logprob: -1.7469569444656372
    3. '       ' → logprob: -3.1219568252563477
    4. '   ' → logprob: -8.621956825256348
    5. '	for' → logprob: -8.621956825256348
    6. '```' → logprob: -10.371956825256348
    7. '
' → logprob: -11.121956825256348
    8. ' ' → logprob: -11.246956825256348
    9. '        
' → logprob: -11.371956825256348
    10. ' ' → logprob: -12.121956825256348

Token 115: ' List' (ID: 2655)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2869442105293274
    2. ' for' → logprob: -1.4119441509246826
    3. '       ' → logprob: -5.161944389343262
    4. '   ' → logprob: -10.286944389343262
    5. '```' → logprob: -12.536944389343262
    6. ' ' → logprob: -12.786944389343262
    7. '	for' → logprob: -12.911944389343262
    8. 'For' → logprob: -13.786944389343262
    9. '    ' → logprob: -14.536944389343262
    10. ' For' → logprob: -14.786944389343262

Token 116: ' to' (ID: 316)
  Prédit: ' of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.5029351711273193
    2. ' to' → logprob: -1.8779351711273193
    3. ' for' → logprob: -2.5029351711273193
    4. ' =' → logprob: -2.6279351711273193
    5. 'of' → logprob: -3.1279351711273193
    6. 'for' → logprob: -4.252935409545898
    7. '=' → logprob: -4.502935409545898
    8. 's' → logprob: -5.377935409545898
    9. 'to' → logprob: -5.502935409545898
    10. '       ' → logprob: -6.002935409545898

Token 117: ' store' (ID: 4897)
  Prédit: ' store'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' store' → logprob: -0.5581101775169373
    2. 'store' → logprob: -2.058110237121582
    3. 'range' → logprob: -2.683110237121582
    4. ' keep' → logprob: -3.308110237121582
    5. ' range' → logprob: -3.433110237121582
    6. 'keep' → logprob: -3.558110237121582
    7. 'read' → logprob: -3.933110237121582
    8. 'collect' → logprob: -4.183110237121582
    9. 'continue' → logprob: -4.433110237121582
    10. ' read' → logprob: -4.683110237121582

Token 118: ' the' (ID: 290)
  Prédit: ' edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' edges' → logprob: -0.4803001582622528
    2. 'for' → logprob: -2.230300188064575
    3. 'edges' → logprob: -2.355300188064575
    4. ' for' → logprob: -3.605300188064575
    5. ' the' → logprob: -3.855300188064575
    6. 'the' → logprob: -3.980300188064575
    7. 'range' → logprob: -4.855299949645996
    8. ' bridges' → logprob: -5.355299949645996
    9. ' islands' → logprob: -5.355299949645996
    10. 'special' → logprob: -5.480299949645996

Token 119: ' queries' (ID: 32122)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.6543872952461243
    2. ' edges' → logprob: -1.6543872356414795
    3. 'best' → logprob: -3.5293872356414795
    4. 'minimum' → logprob: -4.029387474060059
    5. 'cost' → logprob: -4.279387474060059
    6. 'paths' → logprob: -4.404387474060059
    7. ' next' → logprob: -4.529387474060059
    8. 'for' → logprob: -4.529387474060059
    9. 'special' → logprob: -4.654387474060059
    10. ' best' → logprob: -4.654387474060059

Token 120: ' (' (ID: 350)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 121: 'orders' (ID: 13243)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.28195661306381226
    2. 'for' → logprob: -2.156956672668457
    3. ' for' → logprob: -2.656956672668457
    4. ' (' → logprob: -4.156956672668457
    5. '[]' → logprob: -4.281956672668457
    6. '[])' → logprob: -5.531956672668457
    7. '()' → logprob: -6.156956672668457
    8. ' edges' → logprob: -6.281956672668457
    9. ',' → logprob: -6.531956672668457
    10. ')
' → logprob: -6.531956672668457

Token 122: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.28836870193481445
    2. ',' → logprob: -1.4133687019348145
    3. '<|end|>' → logprob: -6.1633687019348145
    4. '):' → logprob: -6.4133687019348145
    5. ').' → logprob: -7.0383687019348145
    6. ' )' → logprob: -7.9133687019348145
    7. ' of' → logprob: -8.288368225097656
    8. ' and' → logprob: -8.288368225097656
    9. ' =' → logprob: -8.413368225097656
    10. '):
' → logprob: -8.663368225097656

Token 123: ' that' (ID: 484)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 124: ' require' (ID: 1841)
  Prédit: ' follow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' follow' → logprob: -0.449552446603775
    2. ' will' → logprob: -2.074552536010742
    3. ' come' → logprob: -2.574552536010742
    4. ' we' → logprob: -3.324552536010742
    5. ' need' → logprob: -3.574552536010742
    6. '<|end|>' → logprob: -3.574552536010742
    7. 'follow' → logprob: -4.574552536010742
    8. 'will' → logprob: -4.699552536010742
    9. '_follow' → logprob: -5.574552536010742
    10. 's' → logprob: -5.574552536010742

Token 125: ' answers' (ID: 14716)
  Prédit: ' shortest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' shortest' → logprob: -1.0292341709136963
    2. 'finding' → logprob: -1.5292341709136963
    3. ' finding' → logprob: -2.2792341709136963
    4. 'short' → logprob: -3.5292341709136963
    5. 'answers' → logprob: -3.7792341709136963
    6. ' minimal' → logprob: -3.7792341709136963
    7. ' processing' → logprob: -4.029233932495117
    8. 'd' → logprob: -4.029233932495117
    9. 'processing' → logprob: -4.154233932495117
    10. 'the' → logprob: -4.279233932495117

Token 126: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10544896870851517
    2. '[]' → logprob: -3.3554489612579346
    3. '<|end|>' → logprob: -3.9804489612579346
    4. ',' → logprob: -4.730449199676514
    5. ' for' → logprob: -4.730449199676514
    6. ' =' → logprob: -5.230449199676514
    7. '=[]' → logprob: -5.230449199676514
    8. '<|end|>' → logprob: -5.730449199676514
    9. '   ' → logprob: -6.105449199676514
    10. 'for' → logprob: -6.105449199676514

Token 127: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.24174389243125916
    2. '<|end|>' → logprob: -2.116743803024292
    3. ' for' → logprob: -3.116743803024292
    4. '   ' → logprob: -4.741744041442871
    5. '<|end|>' → logprob: -4.741744041442871
    6. 'for' → logprob: -4.991744041442871
    7. '        
' → logprob: -5.116744041442871
    8. ',' → logprob: -5.491744041442871
    9. '
' → logprob: -5.491744041442871
    10. ':' → logprob: -5.616744041442871

Token 128: ' queries' (ID: 32122)
  Prédit: ' orders'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' orders' → logprob: -0.7594159245491028
    2. ' queries' → logprob: -1.134415864944458
    3. ' for' → logprob: -2.259415864944458
    4. 'orders' → logprob: -3.259415864944458
    5. 'queries' (adapté à ' queries') → logprob: -3.634415864944458
    6. 'for' → logprob: -5.009416103363037
    7. '       ' → logprob: -5.134416103363037
    8. ' lines' → logprob: -5.384416103363037
    9. ' order' → logprob: -5.634416103363037
    10. ' answers' → logprob: -6.134416103363037

Token 129: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03364973142743111
    2. '=' → logprob: -3.4086496829986572
    3. '=[]' → logprob: -12.658649444580078
    4. ',' → logprob: -14.783649444580078
    5. ':' → logprob: -15.783649444580078
    6. ' ' → logprob: -15.908649444580078
    7. '.append' → logprob: -16.783649444580078
    8. '.' → logprob: -17.158649444580078
    9. '＝' → logprob: -17.158649444580078
    10. ')' → logprob: -17.408649444580078

Token 130: ' []

' (ID: 32833)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.31332504749298096
    2. ' []' → logprob: -1.313325047492981
    3. '[' → logprob: -9.813324928283691
    4. '[]
' → logprob: -12.688324928283691
    5. '[]}' → logprob: -13.188324928283691
    6. ' [' → logprob: -13.438324928283691
    7. '[][]' → logprob: -15.063324928283691
    8. ' []
' → logprob: -15.313324928283691
    9. '[]>' → logprob: -15.438324928283691
    10. '[],' → logprob: -15.438324928283691

Token 131: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12307845801115036
    2. ' for' → logprob: -2.8730783462524414
    3. '
' → logprob: -3.6230783462524414
    4. 'for' → logprob: -4.373078346252441
    5. '        
' → logprob: -4.873078346252441
    6. '<|end|>' → logprob: -5.248078346252441
    7. '		
' → logprob: -6.248078346252441
    8. '	' → logprob: -6.373078346252441
    9. '	for' → logprob: -6.873078346252441
    10. '   ' → logprob: -7.123078346252441

Token 132: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5552121996879578
    2. '       ' → logprob: -1.4302122592926025
    3. ' for' → logprob: -1.6802122592926025
    4. '   ' → logprob: -8.930212020874023
    5. '        
' → logprob: -9.305212020874023
    6. '	for' → logprob: -9.430212020874023
    7. ' ' → logprob: -10.055212020874023
    8. '
' → logprob: -10.305212020874023
    9. '```' → logprob: -10.305212020874023
    10. ' ' → logprob: -11.305212020874023

Token 133: ' We'll' (ID: 46830)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.04859282076358795
    2. ' for' → logprob: -3.0485928058624268
    3. '       ' → logprob: -12.548592567443848
    4. '	for' → logprob: -14.673592567443848
    5. '   ' → logprob: -14.923592567443848
    6. 'For' → logprob: -15.173592567443848
    7. '```' → logprob: -15.298592567443848
    8. '#' → logprob: -15.923592567443848
    9. 'range' → logprob: -15.923592567443848
    10. ' ' → logprob: -16.298593521118164

Token 134: ' process' (ID: 2273)
  Prédit: ' process'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' process' → logprob: -0.6908608078956604
    2. ' continue' → logprob: -1.1908607482910156
    3. ' read' → logprob: -2.5658607482910156
    4. 'process' → logprob: -2.9408607482910156
    5. 'continue' → logprob: -3.1908607482910156
    6. ' use' → logprob: -5.315860748291016
    7. ' stop' → logprob: -5.440860748291016
    8. ' add' → logprob: -5.565860748291016
    9. 'read' → logprob: -5.815860748291016
    10. ' skip' → logprob: -6.690860748291016

Token 135: ' lines' (ID: 8698)
  Prédit: ' k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.37918004393577576
    2. ' the' → logprob: -1.3791800737380981
    3. 'k' → logprob: -3.1291799545288086
    4. ' for' → logprob: -4.879179954528809
    5. ' each' → logprob: -5.004179954528809
    6. 'the' → logprob: -6.504179954528809
    7. ' next' → logprob: -6.629179954528809
    8. ' ' → logprob: -7.254179954528809
    9. '<|end|>' → logprob: -8.254179954528809
    10. ' lines' → logprob: -8.379179954528809

Token 136: ' one' (ID: 1001)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.08343682438135147
    2. 'for' → logprob: -2.5834367275238037
    3. ' of' → logprob: -7.208436965942383
    4. ' _' → logprob: -7.833436965942383
    5. '   ' → logprob: -8.208436965942383
    6. ' in' → logprob: -8.208436965942383
    7. '       ' → logprob: -8.333436965942383
    8. 'range' → logprob: -8.333436965942383
    9. '<|end|>' → logprob: -8.583436965942383
    10. '_for' → logprob: -8.708436965942383

Token 137: ' by' (ID: 656)
  Prédit: ' by'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' by' → logprob: -0.06362491846084595
    2. 'by' → logprob: -2.813624858856201
    3. ' at' → logprob: -6.438624858856201
    4. '   ' → logprob: -10.68862533569336
    5. ' line' → logprob: -10.68862533569336
    6. 'at' → logprob: -13.31362533569336
    7. '    ' → logprob: -13.56362533569336
    8. '-by' → logprob: -13.56362533569336
    9. ' for' → logprob: -13.68862533569336
    10. ' ' → logprob: -13.93862533569336

Token 138: ' one' (ID: 1001)
  Prédit: 'one'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'one' → logprob: -0.9366156458854675
    2. ' one' → logprob: -1.8116157054901123
    3. ' line' → logprob: -2.0616157054901123
    4. '1' → logprob: -2.1866157054901123
    5. 'line' → logprob: -2.5616157054901123
    6. 'range' → logprob: -2.6866157054901123
    7. '_one' → logprob: -3.5616157054901123
    8. ' range' → logprob: -4.186615467071533
    9. ' ' → logprob: -4.936615467071533
    10. '_line' → logprob: -6.186615467071533

Token 139: '.' (ID: 13)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.43923962116241455
    2. ' for' → logprob: -1.1892396211624146
    3. ',' → logprob: -3.689239501953125
    4. '<|end|>' → logprob: -4.689239501953125
    5. '   ' → logprob: -5.689239501953125
    6. 'for' → logprob: -5.814239501953125
    7. '<|end|>' → logprob: -6.189239501953125
    8. ':' → logprob: -6.439239501953125
    9. '    ' → logprob: -6.814239501953125
    10. '.' → logprob: -7.439239501953125

Token 140: ' For' (ID: 2214)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12237103283405304
    2. '<|end|>' → logprob: -2.747370958328247
    3. '   ' → logprob: -4.372371196746826
    4. ' ' → logprob: -4.997371196746826
    5. '        
' → logprob: -5.122371196746826
    6. ' for' → logprob: -5.247371196746826
    7. ' 
' → logprob: -5.497371196746826
    8. '    ' → logprob: -5.622371196746826
    9. '
' → logprob: -5.747371196746826
    10. '  ' → logprob: -6.247371196746826

Token 141: ' any' (ID: 1062)
  Prédit: ' _'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.09938878566026688
    2. '_' → logprob: -2.474388837814331
    3. ' i' → logprob: -4.599388599395752
    4. ' line' → logprob: -9.34938907623291
    5. ' range' → logprob: -9.47438907623291
    6. 'i' → logprob: -9.84938907623291
    7. ' idx' → logprob: -10.09938907623291
    8. ' ' → logprob: -10.72438907623291
    9. ' j' → logprob: -10.97438907623291
    10. ' k' → logprob: -11.22438907623291

Token 142: ' new' (ID: 620)
  Prédit: ' _'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.18434809148311615
    2. '_' → logprob: -1.9343481063842773
    3. ' i' → logprob: -4.559348106384277
    4. ' in' → logprob: -4.559348106384277
    5. ' line' → logprob: -6.434348106384277
    6. ' ' → logprob: -7.809348106384277
    7. 'i' → logprob: -8.809348106384277
    8. '    ' → logprob: -9.184348106384277
    9. ' range' → logprob: -9.184348106384277
    10. '   ' → logprob: -9.309348106384277

Token 143: ' ship' (ID: 12407)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.843760073184967
    2. ' edge' → logprob: -0.968760073184967
    3. ' connection' → logprob: -2.9687600135803223
    4. 'edge' → logprob: -3.9687600135803223
    5. ' edges' → logprob: -3.9687600135803223
    6. ' lines' → logprob: -4.093760013580322
    7. 'line' → logprob: -4.468760013580322
    8. ' graph' → logprob: -4.968760013580322
    9. ' road' → logprob: -4.968760013580322
    10. ' connections' → logprob: -5.093760013580322

Token 144: ' route' (ID: 9656)
  Prédit: 'ments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ments' → logprob: -1.043499231338501
    2. 's' → logprob: -1.793499231338501
    3. 'ment' → logprob: -2.168499231338501
    4. ',' → logprob: -2.793499231338501
    5. '   ' → logprob: -3.043499231338501
    6. '<|end|>' → logprob: -3.418499231338501
    7. ' line' → logprob: -3.793499231338501
    8. 'line' → logprob: -4.043498992919922
    9. 'type' → logprob: -4.168498992919922
    10. 'import' → logprob: -4.543498992919922

Token 145: ',
' (ID: 412)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04269997030496597
    2. ' ,' → logprob: -4.417699813842773
    3. '       ' → logprob: -4.542699813842773
    4. ' for' → logprob: -5.542699813842773
    5. ':' → logprob: -6.042699813842773
    6. '<|end|>' → logprob: -6.292699813842773
    7. ' or' → logprob: -6.542699813842773
    8. ' (' → logprob: -6.667699813842773
    9. ' and' → logprob: -6.917699813842773
    10. '    ' → logprob: -7.042699813842773

Token 146: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05789706110954285
    2. '           ' → logprob: -3.8078970909118652
    3. ' for' → logprob: -4.557897090911865
    4. '        ' → logprob: -5.057897090911865
    5. '   ' → logprob: -5.182897090911865
    6. '    ' → logprob: -6.557897090911865
    7. ' line' → logprob: -6.682897090911865
    8. ',' → logprob: -6.682897090911865
    9. '...' → logprob: -7.182897090911865
    10. '#' → logprob: -7.307897090911865

Token 147: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6907172203063965
    2. ' line' → logprob: -0.8157172203063965
    3. ' for' → logprob: -3.5657172203063965
    4. 'line' → logprob: -5.1907172203063965
    5. ' if' → logprob: -5.1907172203063965
    6. '           ' → logprob: -5.4407172203063965
    7. '        ' → logprob: -5.9407172203063965
    8. '   ' → logprob: -6.6907172203063965
    9. ' route' → logprob: -6.9407172203063965
    10. ' while' → logprob: -7.0657172203063965

Token 148: ' we' (ID: 581)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.23290908336639404
    2. 'for' → logprob: -1.732909083366394
    3. '       ' → logprob: -3.9829092025756836
    4. ' line' → logprob: -4.982909202575684
    5. ' if' → logprob: -6.107909202575684
    6. 'line' → logprob: -6.857909202575684
    7. 'token' → logprob: -7.857909202575684
    8. 'if' → logprob: -8.232909202575684
    9. '           ' → logprob: -8.857909202575684
    10. '   ' → logprob: -8.857909202575684

Token 149: ' add' (ID: 1147)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.16740494966506958
    2. ' add' → logprob: -2.292404890060425
    3. ' will' → logprob: -4.042405128479004
    4. ' read' → logprob: -4.292405128479004
    5. 'continue' → logprob: -5.167405128479004
    6. ''ll' → logprob: -5.792405128479004
    7. ' process' → logprob: -6.292405128479004
    8. ' ' → logprob: -6.917405128479004
    9. ' skip' → logprob: -6.917405128479004
    10. '<|end|>' → logprob: -7.042405128479004

Token 150: ' routes' (ID: 19749)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.8616980910301208
    2. ' a' → logprob: -1.4866981506347656
    3. ' edges' → logprob: -1.8616981506347656
    4. ' an' → logprob: -3.2366981506347656
    5. '<|end|>' → logprob: -3.6116981506347656
    6. ' to' → logprob: -3.7366981506347656
    7. ' ' → logprob: -3.9866981506347656
    8. ' them' → logprob: -4.111698150634766
    9. ' new' → logprob: -4.111698150634766
    10. ' routes' → logprob: -4.861698150634766

Token 151: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.18765684962272644
    2. ',' → logprob: -3.562656879425049
    3. ' or' → logprob: -3.937656879425049
    4. ' with' → logprob: -4.062656879425049
    5. '<|end|>' → logprob: -4.062656879425049
    6. ' for' → logprob: -4.312656879425049
    7. '       ' → logprob: -4.437656879425049
    8. ' as' → logprob: -4.937656879425049
    9. ' if' → logprob: -5.062656879425049
    10. ' and' → logprob: -5.062656879425049

Token 152: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.5004546046257019
    2. ' graph' → logprob: -1.3754546642303467
    3. 'graph' → logprob: -2.8754546642303467
    4. ' both' → logprob: -3.0004546642303467
    5. 'the' → logprob: -3.7504546642303467
    6. 'both' → logprob: -4.500454425811768
    7. '	graph' → logprob: -9.375454902648926
    8. ' graphs' → logprob: -10.875454902648926
    9. ' adjacency' → logprob: -11.000454902648926
    10. ' either' → logprob: -11.375454902648926

Token 153: ' graph' (ID: 7465)
  Prédit: ' graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' graph' → logprob: -0.6334382891654968
    2. 'graph' → logprob: -0.7584382891654968
    3. ' adjacency' → logprob: -7.2584381103515625
    4. 'adj' → logprob: -10.008438110351562
    5. '	graph' → logprob: -10.633438110351562
    6. 'graphs' → logprob: -11.633438110351562
    7. ' existing' → logprob: -11.758438110351562
    8. ' graphs' → logprob: -11.758438110351562
    9. ' code' → logprob: -11.883438110351562
    10. 'existing' → logprob: -12.008438110351562

Token 154: '.
' (ID: 558)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 155: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.058176375925540924
    2. '<|end|>' → logprob: -3.308176279067993
    3. '
' → logprob: -4.308176517486572
    4. '   ' → logprob: -6.558176517486572
    5. '<|end|>' → logprob: -6.558176517486572
    6. '        
' → logprob: -7.058176517486572
    7. ' for' → logprob: -7.558176517486572
    8. ' ' → logprob: -7.683176517486572
    9. ',' → logprob: -7.683176517486572
    10. '' → logprob: -8.558176040649414

Token 156: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6715697646141052
    2. ' for' → logprob: -0.9215697646141052
    3. 'for' → logprob: -2.42156982421875
    4. '   ' → logprob: -6.29656982421875
    5. ' ' → logprob: -8.79656982421875
    6. '
' → logprob: -8.92156982421875
    7. '	for' → logprob: -9.17156982421875
    8. '        
' → logprob: -9.92156982421875
    9. '    ' → logprob: -10.17156982421875
    10. '	' → logprob: -11.29656982421875

Token 157: ' For' (ID: 2214)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.586309015750885
    2. ' for' → logprob: -0.836309015750885
    3. '       ' → logprob: -4.58630895614624
    4. '   ' → logprob: -9.836309432983398
    5. ' ' → logprob: -10.711309432983398
    6. '
' → logprob: -11.836309432983398
    7. ' ' → logprob: -11.836309432983398
    8. '	for' → logprob: -11.961309432983398
    9. 'line' → logprob: -12.461309432983398
    10. ' line' → logprob: -12.586309432983398

Token 158: ' queries' (ID: 32122)
  Prédit: ' _'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.09697575867176056
    2. ' i' → logprob: -2.721975803375244
    3. '_' → logprob: -3.971975803375244
    4. ' k' → logprob: -5.971975803375244
    5. ' line' → logprob: -6.221975803375244
    6. ' each' → logprob: -6.346975803375244
    7. 'i' → logprob: -7.596975803375244
    8. ' j' → logprob: -8.596975326538086
    9. ' range' → logprob: -8.596975326538086
    10. 'each' → logprob: -8.971975326538086

Token 159: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2530680000782013
    2. ' ,' → logprob: -2.503067970275879
    3. ':' → logprob: -2.628067970275879
    4. ' in' → logprob: -2.753067970275879
    5. ' :' → logprob: -6.503067970275879
    6. ' if' → logprob: -6.753067970275879
    7. ' =' → logprob: -7.128067970275879
    8. ' and' → logprob: -7.628067970275879
    9. ' (' → logprob: -8.128067970275879
    10. ' for' → logprob: -8.253067970275879

Token 160: 'orders' (ID: 13243)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.9574578404426575
    2. ' lines' → logprob: -1.5824577808380127
    3. ')' → logprob: -2.0824577808380127
    4. 'k' → logprob: -2.9574577808380127
    5. 'order' → logprob: -4.082458019256592
    6. ' the' → logprob: -4.082458019256592
    7. 'the' → logprob: -4.207458019256592
    8. 'orders' → logprob: -4.332458019256592
    9. '"' → logprob: -4.582458019256592
    10. ' k' → logprob: -4.707458019256592

Token 161: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -1.0241025686264038
    2. ',' → logprob: -1.1491025686264038
    3. ' that' → logprob: -1.7741025686264038
    4. '       ' → logprob: -3.7741026878356934
    5. ' ),' → logprob: -4.024102687835693
    6. ':' → logprob: -4.149102687835693
    7. ')' → logprob: -4.274102687835693
    8. '=' → logprob: -4.274102687835693
    9. ' with' → logprob: -4.524102687835693
    10. '   ' → logprob: -4.649102687835693

Token 162: ' we' (ID: 581)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -1.0309724807739258
    2. ' ' → logprob: -1.4059724807739258
    3. '        ' → logprob: -2.030972480773926
    4. ' if' → logprob: -2.405972480773926
    5. ' for' → logprob: -3.405972480773926
    6. '       ' → logprob: -4.030972480773926
    7. ' we' → logprob: -4.030972480773926
    8. 'continue' → logprob: -4.155972480773926
    9. ' pass' → logprob: -4.405972480773926
    10. ' ' → logprob: -4.405972480773926

Token 163: ' run' (ID: 2461)
  Prédit: ' append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' append' → logprob: -0.9788950681686401
    2. ' add' → logprob: -1.4788950681686401
    3. ' continue' → logprob: -1.6038950681686401
    4. 'append' → logprob: -2.2288951873779297
    5. '.append' → logprob: -4.47889518737793
    6. '    ' → logprob: -4.60389518737793
    7. '        ' → logprob: -4.60389518737793
    8. ' store' → logprob: -4.85389518737793
    9. '       ' → logprob: -5.10389518737793
    10. ' will' → logprob: -5.22889518737793

Token 164: ' shortest' (ID: 70564)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.11145251989364624
    2. ' D' → logprob: -2.486452579498291
    3. 'd' → logprob: -4.736452579498291
    4. ' a' → logprob: -4.861452579498291
    5. ' the' → logprob: -5.861452579498291
    6. 'D' → logprob: -6.486452579498291
    7. ' shortest' → logprob: -6.736452579498291
    8. 'the' → logprob: -10.361452102661133
    9. ' an' → logprob: -10.361452102661133
    10. ' ' → logprob: -10.986452102661133

Token 165: ' path' (ID: 3104)
  Prédit: '_path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_path' → logprob: -0.503096342086792
    2. ' path' → logprob: -1.378096342086792
    3. '_' → logprob: -2.253096342086792
    4. 'path' → logprob: -4.253096580505371
    5. ' paths' → logprob: -4.628096580505371
    6. '_paths' → logprob: -4.628096580505371
    7. ' _' → logprob: -5.753096580505371
    8. '_distance' → logprob: -8.003096580505371
    9. '   ' → logprob: -8.378096580505371
    10. ' ' → logprob: -8.503096580505371

Token 166: ' using' (ID: 2360)
  Prédit: ' calculations'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' calculations' → logprob: -0.3512154221534729
    2. ' computations' → logprob: -2.351215362548828
    3. ' algorithm' → logprob: -2.476215362548828
    4. ' algorithms' → logprob: -2.726215362548828
    5. ' calculation' → logprob: -3.726215362548828
    6. ' queries' → logprob: -4.726215362548828
    7. ' computation' → logprob: -5.101215362548828
    8. 'alg' → logprob: -5.601215362548828
    9. ' searches' → logprob: -6.226215362548828
    10. ' search' → logprob: -6.226215362548828

Token 167: ' current' (ID: 2208)
  Prédit: ' D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' D' → logprob: -0.7439615726470947
    2. 'D' → logprob: -1.1189615726470947
    3. ' d' → logprob: -2.1189615726470947
    4. 'd' → logprob: -2.6189615726470947
    5. 'heap' → logprob: -5.993961334228516
    6. ' heap' → logprob: -6.118961334228516
    7. '```' → logprob: -9.618961334228516
    8. ' a' → logprob: -9.993961334228516
    9. ' Dij' → logprob: -10.243961334228516
    10. 'k' → logprob: -10.493961334228516

Token 168: ' graph' (ID: 7465)
  Prédit: ' graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' graph' → logprob: -0.03209177404642105
    2. 'graph' → logprob: -3.9070918560028076
    3. ' distances' → logprob: -4.7820916175842285
    4. ' ' → logprob: -7.1570916175842285
    5. ' d' → logprob: -8.032092094421387
    6. ' data' → logprob: -8.157092094421387
    7. ' distance' → logprob: -8.407092094421387
    8. ' 
' → logprob: -8.782092094421387
    9. 'distance' → logprob: -9.032092094421387
    10. ' heap' → logprob: -9.032092094421387

Token 169: '.

' (ID: 364)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 170: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03312388062477112
    2. '
' → logprob: -3.9081239700317383
    3. '        
' → logprob: -5.408123970031738
    4. '<|end|>' → logprob: -5.408123970031738
    5. '   ' → logprob: -7.033123970031738
    6. ' ' → logprob: -7.658123970031738
    7. '' → logprob: -8.033123970031738
    8. ' for' → logprob: -8.158123970031738
    9. '<|end|>' → logprob: -8.158123970031738
    10. '	' → logprob: -8.408123970031738

Token 171: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.5414761900901794
    2. ' for' → logprob: -1.0414762496948242
    3. '       ' → logprob: -2.791476249694824
    4. '   ' → logprob: -6.291476249694824
    5. ' ' → logprob: -7.666476249694824
    6. ' ' → logprob: -7.916476249694824
    7. '    ' → logprob: -8.291476249694824
    8. '
' → logprob: -8.541476249694824
    9. '	for' → logprob: -8.541476249694824
    10. '        
' → logprob: -8.916476249694824

Token 172: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.006191849242895842
    2. '_' → logprob: -5.131191730499268
    3. ' i' → logprob: -8.381192207336426
    4. ' ' → logprob: -10.381192207336426
    5. 'i' → logprob: -13.881192207336426
    6. '  ' → logprob: -14.506192207336426
    7. ' line' → logprob: -15.131192207336426
    8. ' ' → logprob: -15.256192207336426
    9. ' in' → logprob: -15.381192207336426
    10. '_i' → logprob: -15.381192207336426

Token 173: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0348515659570694
    2. 'in' → logprob: -3.409851551055908
    3. ' ' → logprob: -6.784851551055908
    4. '<|end|>' → logprob: -10.284852027893066
    5. '  ' → logprob: -10.909852027893066
    6. 'range' → logprob: -11.534852027893066
    7. '	in' → logprob: -13.534852027893066
    8. ' ,' → logprob: -13.659852027893066
    9. '   ' → logprob: -13.659852027893066
    10. '    ' → logprob: -13.659852027893066

Token 174: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.005248464178293943
    2. ' range' → logprob: -5.255248546600342
    3. '(range' → logprob: -12.380248069763184
    4. 'ange' → logprob: -13.005248069763184
    5. '	range' → logprob: -13.005248069763184
    6. ')' → logprob: -13.380248069763184
    7. ' ' → logprob: -14.380248069763184
    8. 'x' → logprob: -14.755248069763184
    9. 'input' → logprob: -14.880248069763184
    10. 'rang' → logprob: -14.880248069763184

Token 175: '(k' (ID: 12125)
  Prédit: '(k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -0.0007004032959230244
    2. '(' → logprob: -7.6257004737854
    3. ' (' → logprob: -8.500699996948242
    4. ' k' → logprob: -11.750699996948242
    5. 'k' → logprob: -14.125699996948242
    6. ',' → logprob: -15.875699996948242
    7. ',k' → logprob: -17.375699996948242
    8. '(range' → logprob: -17.375699996948242
    9. ' ' → logprob: -17.625699996948242
    10. '(int' → logprob: -17.750699996948242

Token 176: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.07012104243040085
    2. '):
' → logprob: -2.6951210498809814
    3. '):
' → logprob: -9.195120811462402
    4. ' ):' → logprob: -10.195120811462402
    5. ':' → logprob: -10.695120811462402
    6. ',' → logprob: -11.695120811462402
    7. '   ' → logprob: -12.820120811462402
    8. ')' → logprob: -12.820120811462402
    9. '       ' → logprob: -13.070120811462402
    10. '):

' → logprob: -13.195120811462402

Token 177: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.049484286457300186
    2. '           ' → logprob: -3.5494842529296875
    3. ' line' → logprob: -4.9244842529296875
    4. ',' → logprob: -5.5494842529296875
    5. '   ' → logprob: -6.1744842529296875
    6. ':' → logprob: -7.1744842529296875
    7. '<|end|>' → logprob: -7.2994842529296875
    8. ' tokens' → logprob: -7.9244842529296875
    9. '<|end|>' → logprob: -8.049484252929688
    10. ' ,' → logprob: -8.174484252929688

Token 178: ' data' (ID: 1238)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.0746942013502121
    2. 'line' → logprob: -3.3246941566467285
    3. ' parts' → logprob: -3.6996941566467285
    4. '           ' → logprob: -4.8246941566467285
    5. 'parts' → logprob: -7.1996941566467285
    6. 'cmd' → logprob: -7.4496941566467285
    7. ' data' → logprob: -7.6996941566467285
    8. ' cmd' → logprob: -7.8246941566467285
    9. ' command' → logprob: -8.574694633483887
    10. 'data' (adapté à ' data') → logprob: -8.824694633483887

Token 179: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06999634951353073
    2. '=' → logprob: -2.6949963569641113
    3. '           ' → logprob: -11.194995880126953
    4. '_line' → logprob: -11.444995880126953
    5. '[' → logprob: -11.819995880126953
    6. '=line' → logprob: -12.319995880126953
    7. 'tokens' → logprob: -12.694995880126953
    8. '   ' → logprob: -12.694995880126953
    9. '_tokens' → logprob: -12.694995880126953
    10. ' ' → logprob: -12.819995880126953

Token 180: ' list' (ID: 1562)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.043446943163871765
    2. 'list' → logprob: -3.4184470176696777
    3. ' input' → logprob: -4.668447017669678
    4. ' list' → logprob: -7.918447017669678
    5. 'data' → logprob: -13.41844654083252
    6. 'tuple' → logprob: -14.91844654083252
    7. '	input' → logprob: -16.043447494506836
    8. '(input' → logprob: -16.168447494506836
    9. '=input' → logprob: -16.418447494506836
    10. 'sys' → logprob: -16.543447494506836

Token 181: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -6.630610641877865e-06
    2. 'map' → logprob: -12.625006675720215
    3. '(' → logprob: -12.750006675720215
    4. '(int' → logprob: -15.125006675720215
    5. '(input' → logprob: -15.750006675720215
    6. ' map' → logprob: -18.1250057220459
    7. '()' → logprob: -18.8750057220459
    8. ' (' → logprob: -19.5000057220459
    9. '	map' → logprob: -19.5000057220459
    10. '.map' → logprob: -19.7500057220459

Token 182: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0018716402119025588
    2. 'int' → logprob: -6.751871585845947
    3. '(' → logprob: -7.376871585845947
    4. '(str' → logprob: -10.501872062683105
    5. 'str' → logprob: -11.001872062683105
    6. '<int' → logprob: -11.626872062683105
    7. '[int' → logprob: -12.001872062683105
    8. ',int' → logprob: -12.501872062683105
    9. '=int' → logprob: -12.876872062683105
    10. ')' → logprob: -13.001872062683105

Token 183: ',' (ID: 11)
  Prédit: ',input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.4680841565132141
    2. ',' → logprob: -1.2180840969085693
    3. '(input' → logprob: -2.5930840969085693
    4. '(' → logprob: -6.218084335327148
    5. 'input' → logprob: -6.968084335327148
    6. '           ' → logprob: -9.343084335327148
    7. ' ,' → logprob: -9.468084335327148
    8. ' input' → logprob: -10.343084335327148
    9. ' (' → logprob: -10.718084335327148
    10. '(),' → logprob: -11.093084335327148

Token 184: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0380435548722744
    2. ' input' → logprob: -3.28804349899292
    3. '(input' → logprob: -13.913043975830078
    4. 'sys' → logprob: -15.038043975830078
    5. 'data' → logprob: -15.163043975830078
    6. ',input' → logprob: -15.663043975830078
    7. ' ' → logprob: -16.038043975830078
    8. '	input' → logprob: -16.288043975830078
    9. ' sys' → logprob: -16.288043975830078
    10. ' data' → logprob: -16.788043975830078

Token 185: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0006378580583259463
    2. '()' → logprob: -8.000638008117676
    3. '()))' → logprob: -8.125638008117676
    4. '()
' → logprob: -13.125638008117676
    5. '())' → logprob: -13.375638008117676
    6. '()));' → logprob: -14.375638008117676
    7. '()[' → logprob: -14.500638008117676
    8. ' ().' → logprob: -14.500638008117676
    9. '()))
' → logprob: -14.750638008117676
    10. '   ' → logprob: -15.500638008117676

Token 186: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -5.5577775128767826e-06
    2. 'strip' → logprob: -12.625005722045898
    3. ' split' → logprob: -13.375005722045898
    4. '(split' → logprob: -14.625005722045898
    5. 'rstrip' → logprob: -16.6250057220459
    6. 'spl' → logprob: -16.8750057220459
    7. ')' → logprob: -17.3750057220459
    8. 'read' → logprob: -18.3750057220459
    9. '.split' → logprob: -19.3750057220459
    10. 'decode' → logprob: -19.7500057220459

Token 187: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.042437098920345306
    2. '))' → logprob: -3.6674370765686035
    3. '()' → logprob: -4.7924370765686035
    4. '()))
' → logprob: -4.9174370765686035
    5. '())' → logprob: -8.542437553405762
    6. '(' → logprob: -9.167437553405762
    7. '))
' → logprob: -10.542437553405762
    8. '()));' → logprob: -10.792437553405762
    9. '()))
' → logprob: -11.417437553405762
    10. '()
' → logprob: -11.417437553405762

Token 188: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0739324763417244
    2. '<|end|>' → logprob: -3.198932409286499
    3. ' 
' → logprob: -4.698932647705078
    4. ' ' → logprob: -5.198932647705078
    5. ' if' → logprob: -5.573932647705078
    6. '[' → logprob: -5.573932647705078
    7. '       ' → logprob: -6.323932647705078
    8. '            
' → logprob: -6.823932647705078
    9. '<|end|>' → logprob: -6.823932647705078
    10. ' token' → logprob: -7.073932647705078

Token 189: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.500801146030426
    2. '           ' → logprob: -1.1258010864257812
    3. 'if' (adapté à ' if') → logprob: -2.7508010864257812
    4. 'token' → logprob: -6.250801086425781
    5. ' op' → logprob: -6.375801086425781
    6. ' token' → logprob: -7.625801086425781
    7. 't' → logprob: -8.375801086425781
    8. ' t' → logprob: -8.500801086425781
    9. 'type' → logprob: -8.500801086425781
    10. '   ' → logprob: -8.875801086425781

Token 190: ' data' (ID: 1238)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.3532882332801819
    2. ' data' → logprob: -1.228288173675537
    3. 'len' → logprob: -5.728288173675537
    4. ' len' → logprob: -6.478288173675537
    5. ' ' → logprob: -11.228288650512695
    6. ' not' → logprob: -11.353288650512695
    7. '   ' → logprob: -11.853288650512695
    8. '	data' → logprob: -12.978288650512695
    9. 'not' → logprob: -13.228288650512695
    10. '(data' → logprob: -13.353288650512695

Token 191: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.1160349458805285e-05
    2. '==' → logprob: -11.875011444091797
    3. ' ==' → logprob: -13.000011444091797
    4. ' [' → logprob: -13.625011444091797
    5. ':' → logprob: -15.750011444091797
    6. 'and' → logprob: -16.000011444091797
    7. '```' → logprob: -16.125011444091797
    8. ' and' → logprob: -16.500011444091797
    9. '][' → logprob: -17.000011444091797
    10. ' ' → logprob: -17.750011444091797

Token 192: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.036524842376821e-05
    2. ' ' → logprob: -10.625040054321289
    3. '1' → logprob: -11.625040054321289
    4. '[' → logprob: -12.500040054321289
    5. '
' → logprob: -14.125040054321289
    6. ':' → logprob: -14.750040054321289
    7. '```' → logprob: -14.937540054321289
    8. ']' → logprob: -15.062540054321289
    9. '(' → logprob: -15.187540054321289
    10. '   ' → logprob: -15.812540054321289

Token 193: ']' (ID: 60)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.37922024726867676
    2. '==' → logprob: -1.8792202472686768
    3. ')' → logprob: -2.3792202472686768
    4. '[' → logprob: -3.3792202472686768
    5. ']' → logprob: -3.5042202472686768
    6. ']==' → logprob: -5.504220008850098
    7. ' )' → logprob: -7.129220008850098
    8. ')==' → logprob: -7.254220008850098
    9. ' ]' → logprob: -8.504220008850098
    10. '=' → logprob: -9.254220008850098

Token 194: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.18010789155960083
    2. '==' → logprob: -1.805107831954956
    3. '[' → logprob: -8.055108070373535
    4. '=' → logprob: -10.805108070373535
    5. ' =' → logprob: -11.805108070373535
    6. ' ' → logprob: -12.805108070373535
    7. ')==' → logprob: -12.805108070373535
    8. ']==' → logprob: -13.430108070373535
    9. '<|end|>' → logprob: -13.430108070373535
    10. '()==' → logprob: -13.555108070373535

Token 195: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5766249895095825
    2. '1' → logprob: -0.8266249895095825
    3. '2' → logprob: -7.576624870300293
    4. ' ' → logprob: -9.326624870300293
    5. '-' → logprob: -10.576624870300293
    6. '3' → logprob: -10.826624870300293
    7. ''' → logprob: -11.576624870300293
    8. 'a' → logprob: -12.201624870300293
    9. '"' → logprob: -12.326624870300293
    10. '```' → logprob: -12.451624870300293

Token 196: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3488841950893402
    2. '0' → logprob: -1.2238842248916626
    3. '2' → logprob: -8.598884582519531
    4. '-' → logprob: -9.973884582519531
    5. ''' → logprob: -10.098884582519531
    6. ' ' → logprob: -10.098884582519531
    7. '3' → logprob: -10.598884582519531
    8. '"' → logprob: -10.598884582519531
    9. '```' → logprob: -11.348884582519531
    10. '#' → logprob: -11.723884582519531

Token 197: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0046573723666369915
    2. ':
' → logprob: -5.62965726852417
    3. ' and' → logprob: -7.00465726852417
    4. ' :' → logprob: -9.379657745361328
    5. '<|end|>' → logprob: -10.254657745361328
    6. ' ==' → logprob: -12.129657745361328
    7. '):' → logprob: -12.129657745361328
    8. ',' → logprob: -12.254657745361328
    9. 'and' → logprob: -12.379657745361328
    10. '[' → logprob: -13.254657745361328

Token 198: '               ' (ID: 506)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9093734622001648
    2. '               ' → logprob: -1.5343735218048096
    3. ' ' → logprob: -2.0343735218048096
    4. '           ' → logprob: -2.7843735218048096
    5. '<|end|>' → logprob: -2.9093735218048096
    6. ' :' → logprob: -3.0343735218048096
    7. '   ' → logprob: -3.5343735218048096
    8. '            ' → logprob: -4.2843732833862305
    9. ':
' → logprob: -4.7843732833862305
    10. '    ' → logprob: -5.1593732833862305

Token 199: ' #' (ID: 1069)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.09767574071884155
    2. '               ' → logprob: -3.7226758003234863
    3. '                ' → logprob: -3.8476758003234863
    4. ' break' → logprob: -3.9726758003234863
    5. ' #' → logprob: -4.597675800323486
    6. ' continue' → logprob: -5.597675800323486
    7. '            ' → logprob: -5.722675800323486
    8. ' 
' → logprob: -5.847675800323486
    9. '    ' → logprob: -6.597675800323486
    10. ' if' → logprob: -6.972675800323486

Token 200: ' Order' (ID: 10735)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.5480676889419556
    2. ' u' → logprob: -1.5480676889419556
    3. ' #' → logprob: -2.048067569732666
    4. ' start' → logprob: -2.923067569732666
    5. ' s' → logprob: -3.048067569732666
    6. 'u' → logprob: -3.298067569732666
    7. ' source' → logprob: -3.298067569732666
    8. ' a' → logprob: -3.673067569732666
    9. ' x' → logprob: -3.798067569732666
    10. ' order' → logprob: -3.923067569732666

Token 201: ' query' (ID: 5703)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 202: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.5938843488693237
    2. ' ' → logprob: -1.5938843488693237
    3. ',' → logprob: -1.8438843488693237
    4. '[' → logprob: -2.0938844680786133
    5. '               ' → logprob: -2.3438844680786133
    6. '<|end|>' → logprob: -2.7188844680786133
    7. '           ' → logprob: -2.9688844680786133
    8. ' ,' → logprob: -4.093884468078613
    9. '            ' → logprob: -4.593884468078613
    10. '   ' → logprob: -4.593884468078613

Token 203: ' ' (ID: 220)
  Prédit: ' source'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' source' → logprob: -2.0335800647735596
    2. ' cost' → logprob: -2.1585800647735596
    3. ' start' → logprob: -2.2835800647735596
    4. '               ' → logprob: -2.2835800647735596
    5. ' u' → logprob: -2.5335800647735596
    6. ' _,' → logprob: -2.6585800647735596
    7. ' origin' → logprob: -3.4085800647735596
    8. ' idx' → logprob: -3.6585800647735596
    9. ' src' → logprob: -3.6585800647735596
    10. ' x' → logprob: -3.9085800647735596

Token 204: '0' (ID: 15)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -1.6207536458969116
    2. '_,' → logprob: -1.7457536458969116
    3. ' start' → logprob: -2.245753765106201
    4. 's' → logprob: -2.370753765106201
    5. 'u' → logprob: -2.620753765106201
    6. ' s' → logprob: -2.870753765106201
    7. 'source' → logprob: -3.370753765106201
    8. ' u' → logprob: -3.370753765106201
    9. ' source' → logprob: -3.370753765106201
    10. 'x' → logprob: -3.995753765106201

Token 205: ' a' (ID: 261)
  Prédit: ' ,'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ,' → logprob: -0.3609420359134674
    2. ',' → logprob: -1.485942006111145
    3. ' ' → logprob: -2.6109421253204346
    4. ' ,
' → logprob: -6.9859418869018555
    5. ',data' → logprob: -7.3609418869018555
    6. '<|end|>' → logprob: -7.4859418869018555
    7. '  ' → logprob: -7.9859418869018555
    8. ',
' → logprob: -8.860941886901855
    9. '    ' → logprob: -9.485941886901855
    10. ' ,[' → logprob: -9.610941886901855

Token 206: ' b' (ID: 287)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.36075687408447266
    2. ' ,' → logprob: -1.2357568740844727
    3. ' data' → logprob: -5.360756874084473
    4. ' ' → logprob: -5.485756874084473
    5. ',data' → logprob: -5.860756874084473
    6. ' a' → logprob: -7.860756874084473
    7. '[data' → logprob: -10.360756874084473
    8. 'data' → logprob: -10.485756874084473
    9. ',a' → logprob: -11.235756874084473
    10. ' ,
' → logprob: -11.485756874084473

Token 207: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.41060614585876465
    2. ' ,' → logprob: -1.5356061458587646
    3. ' ' → logprob: -2.2856061458587646
    4. '<|end|>' → logprob: -4.910606384277344
    5. '
' → logprob: -5.660606384277344
    6. ' 
' → logprob: -6.660606384277344
    7. ')' → logprob: -6.910606384277344
    8. ',
' → logprob: -7.035606384277344
    9. ' ,
' → logprob: -7.285606384277344
    10. '<|end|>' → logprob: -7.285606384277344

Token 208: '               ' (ID: 506)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7644838690757751
    2. ',' → logprob: -1.51448392868042
    3. '               ' → logprob: -1.88948392868042
    4. '                ' → logprob: -2.63948392868042
    5. ' ,' → logprob: -2.88948392868042
    6. '<|end|>' → logprob: -4.26448392868042
    7. '                   ' → logprob: -5.01448392868042
    8. '[' → logprob: -6.13948392868042
    9. ')' → logprob: -6.38948392868042
    10. ' 
' → logprob: -6.63948392868042

Token 209: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.3053969442844391
    2. ' ' → logprob: -1.4303969144821167
    3. ' _,' → logprob: -4.930397033691406
    4. ' ,' → logprob: -5.305397033691406
    5. 'a' (adapté à ' a') → logprob: -5.555397033691406
    6. '                ' → logprob: -5.805397033691406
    7. '_,' → logprob: -6.555397033691406
    8. ',' → logprob: -6.680397033691406
    9. ' ' → logprob: -7.555397033691406
    10. '               ' → logprob: -7.680397033691406

Token 210: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11365099996328354
    2. ' ,' → logprob: -2.3636510372161865
    3. ' =' → logprob: -4.738650798797607
    4. ' ' → logprob: -5.988650798797607
    5. ')' → logprob: -7.488650798797607
    6. '<|end|>' → logprob: -7.738650798797607
    7. ',
' → logprob: -8.113651275634766
    8. ' ,
' → logprob: -8.363651275634766
    9. '=' → logprob: -8.613651275634766
    10. ',data' → logprob: -9.488651275634766

Token 211: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.1602243334054947
    2. ' b' → logprob: -1.9102243185043335
    3. ' ' → logprob: -16.03522491455078
    4. ' =' → logprob: -17.53522491455078
    5. '=' → logprob: -19.03522491455078
    6. '	b' → logprob: -19.91022491455078
    7. ',b' → logprob: -20.16022491455078
    8. '    ' → logprob: -20.66022491455078
    9. '<|end|>' → logprob: -20.66022491455078
    10. ',' → logprob: -20.66022491455078

Token 212: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31329044699668884
    2. ' =' → logprob: -1.3132904767990112
    3. '=data' → logprob: -10.8132905960083
    4. ',' → logprob: -11.8132905960083
    5. ')' → logprob: -14.9382905960083
    6. ' ' → logprob: -15.3132905960083
    7. '               ' → logprob: -16.063289642333984
    8. '           ' → logprob: -16.063289642333984
    9. '   ' → logprob: -16.688289642333984
    10. ')=' → logprob: -17.063289642333984

Token 213: ' data' (ID: 1238)
  Prédit: ' data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' data' → logprob: -0.3132617771625519
    2. 'data' → logprob: -1.3132617473602295
    3. 'Data' → logprob: -17.563261032104492
    4. '	data' → logprob: -17.813261032104492
    5. '(data' → logprob: -18.188261032104492
    6. ')data' → logprob: -19.188261032104492
    7. 'dat' → logprob: -19.438261032104492
    8. '=data' → logprob: -19.813261032104492
    9. ' ' → logprob: -19.938261032104492
    10. ' dat' → logprob: -20.188261032104492

Token 214: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.227250610711053e-05
    2. '=' → logprob: -10.625041961669922
    3. '               ' → logprob: -12.000041961669922
    4. ' [' → logprob: -12.250041961669922
    5. '                   ' → logprob: -13.125041961669922
    6. '1' → logprob: -13.625041961669922
    7. ' =' → logprob: -14.000041961669922
    8. '[
' → logprob: -14.250041961669922
    9. ',' → logprob: -14.500041961669922
    10. '(' → logprob: -14.625041961669922

Token 215: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.246537173457909e-06
    2. ' ' → logprob: -13.000003814697266
    3. '[' → logprob: -13.500003814697266
    4. ']' → logprob: -15.750003814697266
    5. '2' → logprob: -15.875003814697266
    6. '(' → logprob: -16.000003814697266
    7. '   ' → logprob: -16.375003814697266
    8. '           ' → logprob: -17.375003814697266
    9. '
' → logprob: -17.500003814697266
    10. '][' → logprob: -17.750003814697266

Token 216: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.023682620376348495
    2. '],' → logprob: -3.8986825942993164
    3. ' ,' → logprob: -5.898682594299316
    4. ']' → logprob: -7.898682594299316
    5. ',b' → logprob: -12.023682594299316
    6. ' ],' → logprob: -12.398682594299316
    7. '[' → logprob: -13.023682594299316
    8. ',
' → logprob: -13.273682594299316
    9. '<|end|>' → logprob: -13.898682594299316
    10. '-' → logprob: -14.148682594299316

Token 217: ' data' (ID: 1238)
  Prédit: ' data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' data' → logprob: -0.3132631182670593
    2. 'data' → logprob: -1.313263177871704
    3. ' ' → logprob: -14.063262939453125
    4. '	data' → logprob: -15.313262939453125
    5. 'd' → logprob: -17.188262939453125
    6. 'Data' → logprob: -17.563262939453125
    7. 'dat' → logprob: -17.563262939453125
    8. ' ' → logprob: -17.563262939453125
    9. ')data' → logprob: -17.563262939453125
    10. '_data' → logprob: -17.813262939453125

Token 218: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.2166411478538066e-05
    2. '2' → logprob: -9.875052452087402
    3. '[
' → logprob: -14.875052452087402
    4. ']' → logprob: -15.625052452087402
    5. ' [' → logprob: -16.500051498413086
    6. '][' → logprob: -16.625051498413086
    7. '1' → logprob: -16.875051498413086
    8. '```' → logprob: -17.250051498413086
    9. ' ' → logprob: -18.750051498413086
    10. '(' → logprob: -19.125051498413086

Token 219: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -15.125000953674316
    3. '[' → logprob: -16.25
    4. '```' → logprob: -16.375
    5. '
' → logprob: -16.5
    6. '3' → logprob: -17.25
    7. ']' → logprob: -17.4375
    8. '۲' → logprob: -17.6875
    9. '   ' → logprob: -17.75
    10. '1' → logprob: -18.3125

Token 220: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.05722790211439133
    2. ']
' → logprob: -2.932227849960327
    3. ')' → logprob: -6.307228088378906
    4. '               ' → logprob: -8.557228088378906
    5. '           ' → logprob: -8.682228088378906
    6. ']
' → logprob: -9.932228088378906
    7. ')]' → logprob: -10.057228088378906
    8. ')
' → logprob: -10.682228088378906
    9. '       ' → logprob: -10.807228088378906
    10. ']

' → logprob: -11.807228088378906

Token 221: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.007018344942480326
    2. '           ' → logprob: -5.757018566131592
    3. '
' → logprob: -6.257018566131592
    4. '                
' → logprob: -6.632018566131592
    5. '            
' → logprob: -8.382018089294434
    6. ',' → logprob: -8.757018089294434
    7. '<|end|>' → logprob: -10.007018089294434
    8. '              ' → logprob: -11.132018089294434
    9. 'distance' → logprob: -11.257018089294434
    10. '  
' → logprob: -11.257018089294434

Token 222: ' queries' (ID: 32122)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.16221007704734802
    2. 'dist' → logprob: -2.537209987640381
    3. 'distance' → logprob: -3.662209987640381
    4. ' dist' → logprob: -4.037209987640381
    5. 'def' → logprob: -5.162209987640381
    6. ' distance' → logprob: -5.537209987640381
    7. '
' → logprob: -5.662209987640381
    8. ' distances' → logprob: -5.912209987640381
    9. '#' → logprob: -6.037209987640381
    10. ' #' → logprob: -6.287209987640381

Token 223: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00033796546631492674
    2. '.' → logprob: -8.000337600708008
    3. '.app' → logprob: -14.375337600708008
    4. '.extend' → logprob: -14.500337600708008
    5. '.ap' → logprob: -14.625337600708008
    6. 'append' → logprob: -15.125337600708008
    7. ' .' → logprob: -15.125337600708008
    8. '.push' → logprob: -15.500337600708008
    9. '.add' → logprob: -16.625337600708008
    10. '.Append' → logprob: -16.875337600708008

Token 224: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.004400325007736683
    2. '(' → logprob: -6.004400253295898
    3. '(a' → logprob: -6.254400253295898
    4. '(
' → logprob: -15.004400253295898
    5. '(data' → logprob: -15.754400253295898
    6. '([' → logprob: -16.6294002532959
    7. ' ((' → logprob: -16.8794002532959
    8. '(b' → logprob: -17.0044002532959
    9. '(an' → logprob: -17.5044002532959
    10. '(A' → logprob: -17.7544002532959

Token 225: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0005654225824400783
    2. ' a' → logprob: -7.625565528869629
    3. ''a' → logprob: -9.750565528869629
    4. '0' → logprob: -11.125565528869629
    5. '   ' → logprob: -13.625565528869629
    6. ' ' → logprob: -13.750565528869629
    7. ')a' → logprob: -14.125565528869629
    8. ''' → logprob: -14.625565528869629
    9. '"a' → logprob: -15.125565528869629
    10. ')' → logprob: -15.750565528869629

Token 226: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0032445008400827646
    2. ',b' → logprob: -5.753244400024414
    3. ' ,' → logprob: -9.628244400024414
    4. ',
' → logprob: -14.128244400024414
    5. 'b' → logprob: -16.753244400024414
    6. '‌,' → logprob: -17.753244400024414
    7. '<|end|>' → logprob: -17.753244400024414
    8. ',

' → logprob: -18.003244400024414
    9. ')' → logprob: -18.253244400024414
    10. ' ' → logprob: -18.253244400024414

Token 227: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.006715370807796717
    2. ' b' → logprob: -5.006715297698975
    3. ' ' → logprob: -17.131715774536133
    4. ')b' → logprob: -17.256715774536133
    5. '	b' → logprob: -18.381715774536133
    6. ')' → logprob: -19.631715774536133
    7. '    ' → logprob: -20.131715774536133
    8. ',b' → logprob: -20.506715774536133
    9. '_b' → logprob: -20.506715774536133
    10. '<|end|>' → logprob: -20.631715774536133

Token 228: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.028886310756206512
    2. ')' → logprob: -3.653886318206787
    3. '))
' → logprob: -6.028886318206787
    4. ',' → logprob: -9.153885841369629
    5. ' ))' → logprob: -10.278885841369629
    6. ')
' → logprob: -11.028885841369629
    7. ' )' → logprob: -12.528885841369629
    8. '),' → logprob: -12.528885841369629
    9. ')))' → logprob: -13.028885841369629
    10. '))

' → logprob: -13.528885841369629

Token 229: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.003372700186446309
    2. 'else' → logprob: -6.253372669219971
    3. 'elif' → logprob: -7.128372669219971
    4. ' else' → logprob: -8.253373146057129
    5. '
' → logprob: -8.628373146057129
    6. ' elif' → logprob: -9.878373146057129
    7. '       ' → logprob: -10.503373146057129
    8. '               ' → logprob: -10.628373146057129
    9. '```' → logprob: -10.753373146057129
    10. ')' → logprob: -10.878373146057129

Token 230: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.6272461414337158
    2. '           ' → logprob: -1.1272461414337158
    3. ' else' → logprob: -2.127246141433716
    4. 'elif' → logprob: -4.252245903015137
    5. '       ' → logprob: -5.252245903015137
    6. ' elif' → logprob: -5.752245903015137
    7. '	       ' → logprob: -10.377245903015137
    8. '	else' → logprob: -10.627245903015137
    9. '   ' → logprob: -10.877245903015137
    10. '               ' → logprob: -10.877245903015137

Token 231: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0033419253304600716
    2. ':
' → logprob: -5.878342151641846
    3. '           ' → logprob: -8.753341674804688
    4. '               ' → logprob: -8.878341674804688
    5. ' :' → logprob: -8.878341674804688
    6. '[' → logprob: -9.753341674804688
    7. '):' → logprob: -11.378341674804688
    8. '{' → logprob: -11.628341674804688
    9. ',' → logprob: -11.878341674804688
    10. '<|end|>' → logprob: -13.378341674804688

Token 232: '               ' (ID: 506)
  Prédit: ' u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' u' → logprob: -0.40108299255371094
    2. '           ' → logprob: -1.651082992553711
    3. 'u' → logprob: -2.901082992553711
    4. '               ' → logprob: -3.026082992553711
    5. ' #' → logprob: -5.026082992553711
    6. '#' → logprob: -5.401082992553711
    7. '   ' → logprob: -5.401082992553711
    8. ' a' → logprob: -5.901082992553711
    9. ' x' → logprob: -6.276082992553711
    10. ' from' → logprob: -6.276082992553711

Token 233: ' #' (ID: 1069)
  Prédit: ' u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' u' → logprob: -0.9832960963249207
    2. ' a' → logprob: -1.4832961559295654
    3. 'a' → logprob: -1.7332961559295654
    4. 'u' → logprob: -1.7332961559295654
    5. ' s' → logprob: -4.608295917510986
    6. ' x' → logprob: -4.858295917510986
    7. 'x' → logprob: -5.233295917510986
    8. ' c' → logprob: -5.358295917510986
    9. 's' → logprob: -5.608295917510986
    10. 'c' → logprob: -5.983295917510986

Token 234: ' New' (ID: 2036)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.685588002204895
    2. ' u' → logprob: -1.060588002204895
    3. 'a' → logprob: -2.8105878829956055
    4. ' a' → logprob: -3.3105878829956055
    5. '#' → logprob: -4.1855878829956055
    6. ' #' → logprob: -4.6855878829956055
    7. 's' → logprob: -5.5605878829956055
    8. ' s' → logprob: -5.5605878829956055
    9. 'c' → logprob: -5.6855878829956055
    10. ' c' → logprob: -5.6855878829956055

Token 235: ' ship' (ID: 12407)
  Prédit: ' u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' u' → logprob: -0.21156348288059235
    2. ' route' → logprob: -2.5865635871887207
    3. ' ship' → logprob: -3.3365635871887207
    4. 'u' → logprob: -3.3365635871887207
    5. ' routes' → logprob: -4.711563587188721
    6. '_route' → logprob: -4.711563587188721
    7. 'route' → logprob: -5.086563587188721
    8. ' a' → logprob: -5.336563587188721
    9. ' ' → logprob: -5.961563587188721
    10. 'ship' → logprob: -6.336563587188721

Token 236: ' route' (ID: 9656)
  Prédit: ' route'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' route' → logprob: -0.9590021371841431
    2. ' routes' → logprob: -1.459002137184143
    3. 'route' → logprob: -1.959002137184143
    4. '_route' → logprob: -1.959002137184143
    5. 'routes' → logprob: -2.5840020179748535
    6. '_routes' → logprob: -3.8340020179748535
    7. ',' → logprob: -5.7090020179748535
    8. ' ,' → logprob: -7.0840020179748535
    9. ' =' → logprob: -8.209002494812012
    10. '=' → logprob: -8.834002494812012

Token 237: ':' (ID: 25)
  Prédit: ' u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' u' → logprob: -0.18384207785129547
    2. 'u' → logprob: -2.433842182159424
    3. ',' → logprob: -3.183842182159424
    4. '               ' → logprob: -3.683842182159424
    5. ' ,' → logprob: -5.058842182159424
    6. ',u' → logprob: -5.933842182159424
    7. ' a' → logprob: -6.183842182159424
    8. 'a' → logprob: -7.183842182159424
    9. ':' → logprob: -8.183841705322266
    10. ' s' → logprob: -8.183841705322266

Token 238: ' ' (ID: 220)
  Prédit: ' u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' u' → logprob: -0.6503191590309143
    2. ' a' → logprob: -1.6503190994262695
    3. 'u' → logprob: -1.9003190994262695
    4. 'a' → logprob: -2.2753190994262695
    5. ' x' → logprob: -4.7753190994262695
    6. ' s' → logprob: -4.9003190994262695
    7. ' c' → logprob: -5.2753190994262695
    8. 'x' → logprob: -5.4003190994262695
    9. 's' → logprob: -6.4003190994262695
    10. 'c' → logprob: -6.5253190994262695

Token 239: '1' (ID: 16)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5958385467529297
    2. 'u' → logprob: -1.0958385467529297
    3. 's' → logprob: -2.9708385467529297
    4. 'x' → logprob: -3.4708385467529297
    5. 'c' → logprob: -4.22083854675293
    6. 'p' → logprob: -5.84583854675293
    7. 'start' → logprob: -6.09583854675293
    8. 'f' → logprob: -6.34583854675293
    9. 'src' → logprob: -6.47083854675293
    10. 'from' → logprob: -6.72083854675293

Token 240: ' c' (ID: 274)
  Prédit: ' u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' u' → logprob: -1.0964518785476685
    2. ' a' → logprob: -1.2214518785476685
    3. ',' → logprob: -1.7214518785476685
    4. 'a' → logprob: -2.096451759338379
    5. 'u' → logprob: -2.971451759338379
    6. ' ,' → logprob: -4.471451759338379
    7. 'from' → logprob: -6.221451759338379
    8. ' s' → logprob: -6.221451759338379
    9. ',u' → logprob: -7.346451759338379
    10. ' from' → logprob: -7.971451759338379

Token 241: ' d' (ID: 272)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00036906293826177716
    2. ' ,' → logprob: -8.12536907196045
    3. ' c' → logprob: -10.62536907196045
    4. ',c' → logprob: -10.75036907196045
    5. 'c' → logprob: -11.37536907196045
    6. '               ' → logprob: -12.12536907196045
    7. ',d' → logprob: -13.00036907196045
    8. ',u' → logprob: -13.12536907196045
    9. '   ' → logprob: -14.50036907196045
    10. ' ' → logprob: -14.50036907196045

Token 242: ' e' (ID: 319)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09550000727176666
    2. ' ,' → logprob: -2.4704999923706055
    3. ' c' → logprob: -5.5954999923706055
    4. ',c' → logprob: -5.9704999923706055
    5. '               ' → logprob: -8.595499992370605
    6. 'c' → logprob: -10.595499992370605
    7. ' cost' → logprob: -10.970499992370605
    8. ' ' → logprob: -11.220499992370605
    9. ',
' → logprob: -12.220499992370605
    10. '   ' → logprob: -12.345499992370605

Token 243: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04172229394316673
    2. '               ' → logprob: -4.041722297668457
    3. ' ,' → logprob: -4.166722297668457
    4. ',c' → logprob: -5.416722297668457
    5. ' c' → logprob: -6.416722297668457
    6. '   ' → logprob: -7.416722297668457
    7. ' =' → logprob: -8.041722297668457
    8. '                   ' → logprob: -8.416722297668457
    9. ',
' → logprob: -8.541722297668457
    10. ' ' → logprob: -9.541722297668457

Token 244: '               ' (ID: 506)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5639089345932007
    2. ' ,' → logprob: -1.1889089345932007
    3. ' c' → logprob: -2.4389090538024902
    4. '               ' → logprob: -3.5639090538024902
    5. ',c' → logprob: -4.93890905380249
    6. '   ' → logprob: -6.31390905380249
    7. ' ' → logprob: -7.31390905380249
    8. '	c' → logprob: -8.313908576965332
    9. '			' → logprob: -8.688908576965332
    10. '	           ' → logprob: -8.813908576965332

Token 245: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.2540891170501709
    2. 'c' (adapté à ' c') → logprob: -1.504089117050171
    3. '_,' → logprob: -6.62908935546875
    4. ' _,' → logprob: -7.87908935546875
    5. ' graph' → logprob: -9.37908935546875
    6. ',' → logprob: -9.50408935546875
    7. ' ,' → logprob: -9.75408935546875
    8. '   ' → logprob: -9.75408935546875
    9. '	c' → logprob: -10.12908935546875
    10. 'graph' → logprob: -10.12908935546875

Token 246: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.009900813922286034
    2. '=' → logprob: -5.50990104675293
    3. ' ,' → logprob: -5.75990104675293
    4. ' =' → logprob: -6.00990104675293
    5. ',data' → logprob: -9.13490104675293
    6. ',d' → logprob: -10.50990104675293
    7. '=data' → logprob: -10.50990104675293
    8. ',c' → logprob: -11.13490104675293
    9. ' ' → logprob: -11.88490104675293
    10. ')' → logprob: -13.50990104675293

Token 247: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.2254532426595688
    2. ' d' → logprob: -1.60045325756073
    3. ' =' → logprob: -11.10045337677002
    4. '=' → logprob: -11.60045337677002
    5. 'data' → logprob: -11.60045337677002
    6. ' ' → logprob: -13.35045337677002
    7. ' data' → logprob: -13.60045337677002
    8. 'e' → logprob: -14.35045337677002
    9. '
' → logprob: -14.47545337677002
    10. ',' → logprob: -14.60045337677002

Token 248: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.029567303135991096
    2. ' =' → logprob: -4.029567241668701
    3. '=' → logprob: -4.654567241668701
    4. ' ,' → logprob: -6.404567241668701
    5. '=data' → logprob: -9.15456771850586
    6. ',data' → logprob: -9.65456771850586
    7. '   ' → logprob: -13.27956771850586
    8. ')' → logprob: -13.40456771850586
    9. ' data' → logprob: -13.52956771850586
    10. ' ' → logprob: -13.65456771850586

Token 249: ' e' (ID: 319)
  Prédit: ' e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' e' → logprob: -0.3132629990577698
    2. 'e' → logprob: -1.313262939453125
    3. '	e' → logprob: -14.563262939453125
    4. ' ' → logprob: -14.813262939453125
    5. ' =' → logprob: -15.438262939453125
    6. ' data' → logprob: -16.313262939453125
    7. '=e' → logprob: -17.063262939453125
    8. 'data' → logprob: -17.188262939453125
    9. '_e' → logprob: -17.313262939453125
    10. '=' → logprob: -17.688262939453125

Token 250: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25206926465034485
    2. '=' → logprob: -1.5020692348480225
    3. ',' → logprob: -10.002069473266602
    4. ')' → logprob: -10.127069473266602
    5. '=data' → logprob: -10.627069473266602
    6. ' ' → logprob: -10.877069473266602
    7. '   ' → logprob: -12.002069473266602
    8. ')=' → logprob: -12.752069473266602
    9. ' ,' → logprob: -14.502069473266602
    10. ' )' → logprob: -14.502069473266602

Token 251: ' data' (ID: 1238)
  Prédit: ' data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' data' → logprob: -0.16022492945194244
    2. 'data' → logprob: -1.9102249145507812
    3. '	data' → logprob: -15.160224914550781
    4. ' dat' → logprob: -16.03522491455078
    5. ' ' → logprob: -16.16022491455078
    6. '   ' → logprob: -16.28522491455078
    7. 'dat' → logprob: -16.53522491455078
    8. '(data' → logprob: -16.91022491455078
    9. '=data' → logprob: -17.41022491455078
    10. '    ' → logprob: -17.53522491455078

Token 252: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.7697225252486533e-06
    2. '               ' → logprob: -13.750003814697266
    3. '=' → logprob: -14.000003814697266
    4. ',' → logprob: -14.250003814697266
    5. ' [' → logprob: -14.875003814697266
    6. '                   ' → logprob: -15.500003814697266
    7. '           ' → logprob: -15.625003814697266
    8. '[
' → logprob: -16.375003814697266
    9. '1' → logprob: -16.500003814697266
    10. ' =' → logprob: -17.125003814697266

Token 253: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.682846287731081e-05
    2. '[' → logprob: -9.750066757202148
    3. ' ' → logprob: -12.125066757202148
    4. '   ' → logprob: -13.625066757202148
    5. '2' → logprob: -14.000066757202148
    6. '           ' → logprob: -15.750066757202148
    7. '0' → logprob: -15.750066757202148
    8. 'data' → logprob: -15.875066757202148
    9. ']' → logprob: -16.00006675720215
    10. '
' → logprob: -16.12506675720215

Token 254: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001234399271197617
    2. ' ,' → logprob: -6.751234531402588
    3. '<|end|>' → logprob: -11.00123405456543
    4. ',e' → logprob: -11.50123405456543
    5. ',d' → logprob: -11.62623405456543
    6. '],' → logprob: -11.87623405456543
    7. ',
' → logprob: -12.37623405456543
    8. ',c' → logprob: -12.62623405456543
    9. '<|end|>' → logprob: -12.62623405456543
    10. ' ' → logprob: -13.37623405456543

Token 255: ' data' (ID: 1238)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.693149983882904
    2. ' data' → logprob: -0.693149983882904
    3. ' ' → logprob: -13.56814956665039
    4. '	data' → logprob: -13.94314956665039
    5. '   ' → logprob: -16.69314956665039
    6. ')data' → logprob: -16.69314956665039
    7. '<|end|>' → logprob: -17.19314956665039
    8. 'Data' → logprob: -17.44314956665039
    9. '(data' → logprob: -17.44314956665039
    10. 'd' → logprob: -17.44314956665039

Token 256: '[' (ID: 58)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.18169601261615753
    2. '[' → logprob: -1.8066960573196411
    3. ' ,' → logprob: -6.306695938110352
    4. ',data' → logprob: -10.306695938110352
    5. 'data' → logprob: -10.431695938110352
    6. ' data' → logprob: -10.806695938110352
    7. '2' → logprob: -11.181695938110352
    8. '1' → logprob: -11.681695938110352
    9. '[data' → logprob: -12.306695938110352
    10. ' [' → logprob: -12.806695938110352

Token 257: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.3856492842023727e-06
    2. ' ' → logprob: -14.125000953674316
    3. '
' → logprob: -16.000001907348633
    4. '```' → logprob: -16.000001907348633
    5. '[' → logprob: -16.375001907348633
    6. '3' → logprob: -16.500001907348633
    7. '   ' → logprob: -16.625001907348633
    8. '1' → logprob: -17.500001907348633
    9. ']' → logprob: -17.625001907348633
    10. '

' → logprob: -17.625001907348633

Token 258: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003843173326458782
    2. ' ,' → logprob: -7.875384330749512
    3. ',e' → logprob: -13.125384330749512
    4. '],' → logprob: -14.125384330749512
    5. '<|end|>' → logprob: -15.000384330749512
    6. '‌,' → logprob: -15.375384330749512
    7. 'e' → logprob: -15.625384330749512
    8. '),' → logprob: -15.875384330749512
    9. ',
' → logprob: -16.375383377075195
    10. ']' → logprob: -16.375383377075195

Token 259: ' data' (ID: 1238)
  Prédit: ' data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' data' → logprob: -0.5759396553039551
    2. 'data' → logprob: -0.8259396553039551
    3. '	data' → logprob: -15.450939178466797
    4. ' ' → logprob: -16.950939178466797
    5. 'd' → logprob: -18.450939178466797
    6. 'dat' → logprob: -18.575939178466797
    7. '   ' → logprob: -18.825939178466797
    8. 'Data' → logprob: -18.825939178466797
    9. '(data' → logprob: -18.825939178466797
    10. ' dat' → logprob: -19.075939178466797

Token 260: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.8670179997570813e-05
    2. '3' → logprob: -11.125019073486328
    3. 'data' → logprob: -13.000019073486328
    4. '[
' → logprob: -14.250019073486328
    5. '```' → logprob: -15.375019073486328
    6. '[data' → logprob: -15.500019073486328
    7. ']' → logprob: -15.750019073486328
    8. '4' → logprob: -15.875019073486328
    9. ' [' → logprob: -16.750019073486328
    10. ' data' → logprob: -17.000019073486328

Token 261: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -2.081584716506768e-05
    2. ' ' → logprob: -11.375020980834961
    3. '4' → logprob: -12.750020980834961
    4. 'data' → logprob: -13.125020980834961
    5. ']' → logprob: -13.125020980834961
    6. '0' → logprob: -14.250020980834961
    7. '[' → logprob: -14.750020980834961
    8. '
' → logprob: -15.000020980834961
    9. '-' → logprob: -15.500020980834961
    10. '```' → logprob: -15.500020980834961

Token 262: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.4320054054260254
    2. ')' → logprob: -1.6820054054260254
    3. ']
' → logprob: -1.9320054054260254
    4. ')
' → logprob: -4.057005405426025
    5. ')]' → logprob: -6.182005405426025
    6. '               ' → logprob: -8.432004928588867
    7. ']
' → logprob: -9.432004928588867
    8. '           ' → logprob: -9.432004928588867
    9. '       ' → logprob: -10.432004928588867
    10. ']

' → logprob: -10.557004928588867

Token 263: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.06380567699670792
    2. '
' → logprob: -3.68880558013916
    3. '           ' → logprob: -4.56380558013916
    4. '       ' → logprob: -5.06380558013916
    5. '                   ' → logprob: -5.31380558013916
    6. '                
' → logprob: -5.31380558013916
    7. ' graph' → logprob: -6.68880558013916
    8. '<|end|>' → logprob: -7.06380558013916
    9. ')' → logprob: -7.18880558013916
    10. 'graph' → logprob: -7.18880558013916

Token 264: ' #' (ID: 1069)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.2026858776807785
    2. ' graph' → logprob: -1.702685832977295
    3. '               ' → logprob: -7.327685832977295
    4. 'heap' → logprob: -9.077686309814453
    5. '	graph' → logprob: -9.452686309814453
    6. '           ' → logprob: -9.452686309814453
    7. '   ' → logprob: -9.577686309814453
    8. 'if' → logprob: -9.577686309814453
    9. '       ' → logprob: -9.702686309814453
    10. ' if' → logprob: -9.952686309814453

Token 265: ' Since' (ID: 12265)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.04004354402422905
    2. ' graph' → logprob: -4.040043354034424
    3. '#' → logprob: -4.165043354034424
    4. ' #' → logprob: -6.165043354034424
    5. 'if' → logprob: -6.415043354034424
    6. 'heap' → logprob: -7.290043354034424
    7. 'existing' → logprob: -7.540043354034424
    8. '           ' → logprob: -8.665043830871582
    9. ' if' → logprob: -8.915043830871582
    10. ' existing' → logprob: -8.915043830871582

Token 266: ' multiple' (ID: 7598)
  Prédit: ' graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' graph' → logprob: -0.8068282008171082
    2. ' c' → logprob: -1.431828260421753
    3. 'graph' → logprob: -2.181828260421753
    4. 'c' → logprob: -2.306828260421753
    5. 'e' → logprob: -3.181828260421753
    6. ' e' → logprob: -3.306828260421753
    7. ' d' → logprob: -4.431828022003174
    8. 'd' → logprob: -5.431828022003174
    9. '   ' → logprob: -6.181828022003174
    10. ' not' → logprob: -6.556828022003174

Token 267: ' ships' (ID: 33610)
  Prédit: ' routes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' routes' → logprob: -0.4108960032463074
    2. ' edges' → logprob: -1.2858960628509521
    3. ' graph' → logprob: -4.035895824432373
    4. 'routes' → logprob: -4.035895824432373
    5. 'edges' → logprob: -4.410895824432373
    6. 'graph' → logprob: -5.035895824432373
    7. ' paths' → logprob: -6.660895824432373
    8. ' ships' → logprob: -7.410895824432373
    9. ' ways' → logprob: -7.910895824432373
    10. '_routes' → logprob: -8.035896301269531

Token 268: ' can' (ID: 665)
  Prédit: ' can'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.038109198212623596
    2. ' may' → logprob: -3.663109302520752
    3. ' are' → logprob: -5.413109302520752
    4. ' might' → logprob: -5.538109302520752
    5. '               ' → logprob: -6.913109302520752
    6. 'can' → logprob: -7.663109302520752
    7. ' could' → logprob: -7.913109302520752
    8. ',' → logprob: -8.163108825683594
    9. ' routes' → logprob: -8.288108825683594
    10. ' exist' → logprob: -8.788108825683594

Token 269: ' operate' (ID: 19866)
  Prédit: ' travel'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' travel' → logprob: -1.0389548540115356
    2. 'travel' → logprob: -2.288954734802246
    3. 'operate' → logprob: -2.413954734802246
    4. ' operate' → logprob: -2.663954734802246
    5. 'use' → logprob: -3.038954734802246
    6. ' use' → logprob: -3.163954734802246
    7. ' exist' → logprob: -3.288954734802246
    8. ' dock' → logprob: -3.538954734802246
    9. ' traverse' → logprob: -3.663954734802246
    10. 's' → logprob: -3.788954734802246

Token 270: ' between' (ID: 2870)
  Prédit: ' between'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' between' → logprob: -0.1569874882698059
    2. 'between' → logprob: -2.531987428665161
    3. ' on' → logprob: -2.906987428665161
    4. ' both' → logprob: -5.53198766708374
    5. ' in' → logprob: -6.15698766708374
    6. ',' → logprob: -6.78198766708374
    7. 'on' → logprob: -7.15698766708374
    8. 'both' → logprob: -7.28198766708374
    9. ' from' → logprob: -7.28198766708374
    10. 'from' → logprob: -7.53198766708374

Token 271: ' same' (ID: 2684)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.28855398297309875
    2. ' c' → logprob: -1.4135539531707764
    3. 'the' → logprob: -5.6635541915893555
    4. ' the' → logprob: -6.4135541915893555
    5. ' islands' → logprob: -6.5385541915893555
    6. 'two' → logprob: -8.788554191589355
    7. 'nodes' → logprob: -9.038554191589355
    8. 'd' → logprob: -9.288554191589355
    9. ' two' → logprob: -9.663554191589355
    10. ' nodes' → logprob: -10.038554191589355

Token 272: ' islands' (ID: 45758)
  Prédit: ' islands'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' islands' → logprob: -0.6758235096931458
    2. ' nodes' → logprob: -1.550823450088501
    3. 'nodes' → logprob: -1.800823450088501
    4. 'c' → logprob: -2.925823450088501
    5. 'is' → logprob: -3.550823450088501
    6. 'points' → logprob: -4.55082368850708
    7. ' points' → logprob: -4.92582368850708
    8. ' c' → logprob: -5.92582368850708
    9. 'edges' → logprob: -6.55082368850708
    10. 'vertices' → logprob: -6.80082368850708

Token 273: ',
' (ID: 412)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008856239728629589
    2. ' ,' → logprob: -5.258856296539307
    3. ',
' → logprob: -6.383856296539307
    4. '               ' → logprob: -6.633856296539307
    5. ' graph' → logprob: -8.383855819702148
    6. ' and' → logprob: -8.633855819702148
    7. 'graph' → logprob: -9.883855819702148
    8. ' with' → logprob: -10.008855819702148
    9. '                   ' → logprob: -11.008855819702148
    10. ' if' → logprob: -11.383855819702148

Token 274: '               ' (ID: 506)
  Prédit: ' graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' graph' → logprob: -0.20261014997959137
    2. 'graph' → logprob: -1.9526101350784302
    3. '               ' → logprob: -3.2026102542877197
    4. '       ' → logprob: -8.32761001586914
    5. ' heap' → logprob: -9.07761001586914
    6. '	graph' → logprob: -9.07761001586914
    7. '   ' → logprob: -9.57761001586914
    8. '                   ' → logprob: -9.70261001586914
    9. '#' → logprob: -9.82761001586914
    10. 'heap' → logprob: -9.95261001586914

Token 275: ' #' (ID: 1069)
  Prédit: ' graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' graph' → logprob: -0.4956493675708771
    2. 'graph' → logprob: -0.9956493377685547
    3. '               ' → logprob: -4.870649337768555
    4. ' heap' → logprob: -5.495649337768555
    5. '#' (adapté à ' #') → logprob: -5.870649337768555
    6. 'heap' → logprob: -5.870649337768555
    7. ' #' → logprob: -6.995649337768555
    8. '   ' → logprob: -7.245649337768555
    9. '       ' → logprob: -7.370649337768555
    10. '           ' → logprob: -7.620649337768555

Token 276: ' we' (ID: 581)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.23164266347885132
    2. ' graph' → logprob: -1.606642723083496
    3. 'heap' → logprob: -5.856642723083496
    4. '#' → logprob: -6.856642723083496
    5. ' heap' → logprob: -7.106642723083496
    6. '               ' → logprob: -7.481642723083496
    7. ' #' → logprob: -7.856642723083496
    8. '   ' → logprob: -9.231642723083496
    9. '	graph' → logprob: -9.606642723083496
    10. 'if' → logprob: -9.981642723083496

Token 277: ' add' (ID: 1147)
  Prédit: ' graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' graph' → logprob: -0.18963107466697693
    2. 'graph' → logprob: -1.8146311044692993
    3. ' add' → logprob: -5.93963098526001
    4. '	graph' → logprob: -6.18963098526001
    5. ' continue' → logprob: -6.68963098526001
    6. 'append' → logprob: -6.81463098526001
    7. '               ' → logprob: -7.18963098526001
    8. ' append' → logprob: -7.56463098526001
    9. '   ' → logprob: -7.56463098526001
    10. '                   ' → logprob: -8.439631462097168

Token 278: ' edges' (ID: 22569)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.35063356161117554
    2. ' graph' → logprob: -1.7256336212158203
    3. ' both' → logprob: -2.7256336212158203
    4. '(c' → logprob: -4.22563362121582
    5. '(graph' → logprob: -4.22563362121582
    6. 'graph' → logprob: -4.60063362121582
    7. ' c' → logprob: -5.35063362121582
    8. '   ' → logprob: -6.85063362121582
    9. ' two' → logprob: -6.85063362121582
    10. 'both' → logprob: -6.85063362121582

Token 279: ' without' (ID: 2935)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0394812747836113
    2. ' (' → logprob: -4.164481163024902
    3. '                   ' → logprob: -4.789481163024902
    4. ' to' → logprob: -5.539481163024902
    5. '[c' → logprob: -6.414481163024902
    6. '(c' → logprob: -6.539481163024902
    7. ' in' → logprob: -6.789481163024902
    8. ' between' → logprob: -6.914481163024902
    9. ' c' → logprob: -7.039481163024902
    10. ' graph' → logprob: -7.164481163024902

Token 280: ' removing' (ID: 28559)
  Prédit: 'rem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rem' → logprob: -0.06762312352657318
    2. ' removing' → logprob: -2.8176231384277344
    3. 'checking' → logprob: -5.942623138427734
    4. ' checking' → logprob: -7.442623138427734
    5. ' replacing' → logprob: -7.692623138427734
    6. 'replacement' → logprob: -7.817623138427734
    7. ' removal' → logprob: -7.942623138427734
    8. 're' → logprob: -8.442623138427734
    9. ' replacement' → logprob: -8.567623138427734
    10. 'discard' → logprob: -8.692623138427734

Token 281: ' old' (ID: 2890)
  Prédit: ' duplicates'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' duplicates' → logprob: -1.024459719657898
    2. ' any' → logprob: -1.149459719657898
    3. ' the' → logprob: -1.899459719657898
    4. ' existing' → logprob: -2.5244598388671875
    5. 'duplicates' → logprob: -3.3994598388671875
    6. ' previous' → logprob: -3.6494598388671875
    7. 'the' → logprob: -4.3994598388671875
    8. ' or' → logprob: -5.2744598388671875
    9. 'existing' → logprob: -5.3994598388671875
    10. 'previous' → logprob: -6.5244598388671875

Token 282: ' ones' (ID: 8104)
  Prédit: ' edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' edges' → logprob: -0.1973128318786621
    2. ' routes' → logprob: -1.947312831878662
    3. 'edges' → logprob: -3.947312831878662
    4. 'routes' → logprob: -5.697312831878662
    5. '_edges' → logprob: -5.697312831878662
    6. ' ones' → logprob: -6.072312831878662
    7. '   ' → logprob: -6.322312831878662
    8. ' graph' → logprob: -6.947312831878662
    9. ' ' → logprob: -7.072312831878662
    10. '_routes' → logprob: -7.072312831878662

Token 283: '.
' (ID: 558)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.008463275618851185
    2. '
' → logprob: -5.258463382720947
    3. '           ' → logprob: -6.883463382720947
    4. '                   ' → logprob: -7.133463382720947
    5. '       ' → logprob: -7.883463382720947
    6. ',' → logprob: -8.383462905883789
    7. ',
' → logprob: -8.508462905883789
    8. ' graph' → logprob: -8.633462905883789
    9. 'graph' → logprob: -9.508462905883789
    10. '                
' → logprob: -9.508462905883789

Token 284: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.04681980609893799
    2. ' graph' → logprob: -3.4218196868896484
    3. '       ' → logprob: -5.171819686889648
    4. 'graph' → logprob: -5.796819686889648
    5. '
' → logprob: -6.046819686889648
    6. '           ' → logprob: -7.296819686889648
    7. '                
' → logprob: -8.046819686889648
    8. '   ' → logprob: -8.171819686889648
    9. '	graph' → logprob: -9.046819686889648
    10. '```' → logprob: -9.046819686889648

Token 285: ' graph' (ID: 7465)
  Prédit: ' graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' graph' → logprob: -0.11340337246656418
    2. 'graph' (adapté à ' graph') → logprob: -2.3634033203125
    3. '               ' → logprob: -4.3634033203125
    4. '	graph' → logprob: -8.8634033203125
    5. '       ' → logprob: -9.7384033203125
    6. '   ' → logprob: -9.8634033203125
    7. '
' → logprob: -10.2384033203125
    8. '                   ' → logprob: -10.8634033203125
    9. '           ' → logprob: -10.8634033203125
    10. '                ' → logprob: -11.8634033203125

Token 286: '[c' (ID: 22840)
  Prédit: '[c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -1.0802738870552275e-05
    2. '[' → logprob: -11.50001049041748
    3. '[data' → logprob: -15.00001049041748
    4. ' [' → logprob: -16.000011444091797
    5. '   ' → logprob: -16.250011444091797
    6. 'c' → logprob: -17.625011444091797
    7. ')[' → logprob: -18.625011444091797
    8. '][' → logprob: -18.750011444091797
    9. '[int' → logprob: -18.875011444091797
    10. '[a' → logprob: -19.000011444091797

Token 287: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.000104616025055293
    2. '][' → logprob: -10.125104904174805
    3. ']' → logprob: -10.625104904174805
    4. ' ].' → logprob: -10.750104904174805
    5. '   ' → logprob: -11.625104904174805
    6. '       ' → logprob: -12.750104904174805
    7. '],' → logprob: -12.750104904174805
    8. '           ' → logprob: -13.625104904174805
    9. '.append' → logprob: -14.000104904174805
    10. ',' → logprob: -14.250104904174805

Token 288: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -9.088346359931165e-07
    2. '.append' → logprob: -14.625000953674316
    3. 'app' → logprob: -15.250000953674316
    4. ' append' → logprob: -16.75
    5. 'appen' → logprob: -16.875
    6. 'push' → logprob: -18.0
    7. '```' → logprob: -18.875
    8. '	append' → logprob: -19.125
    9. '_append' → logprob: -19.375
    10. 'Append' → logprob: -20.0

Token 289: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.1346982717514038
    2. '(d' → logprob: -2.3846983909606934
    3. '(' → logprob: -3.3846983909606934
    4. ' (' → logprob: -11.134697914123535
    5. '([' → logprob: -15.134697914123535
    6. '(D' → logprob: -15.259697914123535
    7. '   ' → logprob: -15.884697914123535
    8. '[(' → logprob: -16.00969886779785
    9. ' ((' → logprob: -16.00969886779785
    10. '(
' → logprob: -16.25969886779785

Token 290: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.00010914575977949426
    2. ' d' → logprob: -9.12510871887207
    3. '   ' → logprob: -16.12510871887207
    4. '	d' → logprob: -16.25010871887207
    5. '
' → logprob: -17.50010871887207
    6. ')d' → logprob: -18.25010871887207
    7. ' ' → logprob: -19.12510871887207
    8. ',d' → logprob: -20.12510871887207
    9. '    ' → logprob: -20.50010871887207
    10. '  ' → logprob: -20.50010871887207

Token 291: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0037298917304724455
    2. ' ,' → logprob: -5.753729820251465
    3. ',e' → logprob: -7.503729820251465
    4. ',
' → logprob: -14.503729820251465
    5. 'e' → logprob: -15.253729820251465
    6. ' e' → logprob: -16.50373077392578
    7. ' ,
' → logprob: -17.37873077392578
    8. '),' → logprob: -17.62873077392578
    9. '<|end|>' → logprob: -17.62873077392578
    10. '‌,' → logprob: -17.75373077392578

Token 292: ' e' (ID: 319)
  Prédit: ' e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' e' → logprob: -0.4287029802799225
    2. 'e' → logprob: -1.0537029504776
    3. ' ' → logprob: -14.303703308105469
    4. '	e' → logprob: -14.428703308105469
    5. ' ' → logprob: -15.178703308105469
    6. ')e' → logprob: -15.678703308105469
    7. '    ' → logprob: -16.05370330810547
    8. '   ' → logprob: -16.17870330810547
    9. '           ' → logprob: -16.55370330810547
    10. ',e' → logprob: -16.67870330810547

Token 293: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.002683256519958377
    2. '))
' → logprob: -6.127683162689209
    3. ')' → logprob: -7.627683162689209
    4. ' ))' → logprob: -12.002683639526367
    5. ')
' → logprob: -13.377683639526367
    6. '))

' → logprob: -14.377683639526367
    7. '),' → logprob: -14.502683639526367
    8. '));' → logprob: -14.502683639526367
    9. ')))' → logprob: -14.627683639526367
    10. ',' → logprob: -15.002683639526367

Token 294: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.7274936437606812
    2. '<|end|>' → logprob: -0.7274936437606812
    3. '	graph' → logprob: -3.9774937629699707
    4. ' graph' → logprob: -4.727493762969971
    5. 'graph' → logprob: -5.977493762969971
    6. ' ' → logprob: -7.477493762969971
    7. '                ' → logprob: -7.602493762969971
    8. '<|end|>' → logprob: -7.727493762969971
    9. '```' → logprob: -7.852493762969971
    10. '              ' → logprob: -8.227493286132812

Token 295: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' (adapté à ' graph') → logprob: -0.04889993369579315
    2. ' graph' → logprob: -3.0488998889923096
    3. '	graph' → logprob: -8.29889965057373
    4. '<|end|>' → logprob: -10.04889965057373
    5. '(graph' → logprob: -11.67389965057373
    6. ' ' → logprob: -13.17389965057373
    7. '.graph' → logprob: -13.17389965057373
    8. '
' → logprob: -13.17389965057373
    9. '   ' → logprob: -14.04889965057373
    10. '_graph' → logprob: -14.17389965057373

Token 296: '[d' (ID: 48377)
  Prédit: '[d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[d' → logprob: -0.0002016331272898242
    2. '[' → logprob: -9.125201225280762
    3. '[c' → logprob: -9.625201225280762
    4. 'd' → logprob: -10.750201225280762
    5. '][' → logprob: -13.625201225280762
    6. '[b' → logprob: -13.750201225280762
    7. '[a' → logprob: -14.000201225280762
    8. '[s' → logprob: -14.750201225280762
    9. ')[' → logprob: -15.500201225280762
    10. '```' → logprob: -15.500201225280762

Token 297: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.0005966392927803099
    2. ').' → logprob: -7.500596523284912
    3. ']' → logprob: -10.75059700012207
    4. '.' → logprob: -11.50059700012207
    5. '.append' → logprob: -11.62559700012207
    6. ' ].' → logprob: -13.62559700012207
    7. ''].' → logprob: -15.00059700012207
    8. '   ' → logprob: -15.12559700012207
    9. '[' → logprob: -15.37559700012207
    10. '}.' → logprob: -15.50059700012207

Token 298: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -7.896309739408025e-07
    2. ' append' → logprob: -15.250000953674316
    3. '.append' → logprob: -15.375000953674316
    4. 'appen' → logprob: -15.375000953674316
    5. '	append' → logprob: -17.375
    6. 'app' → logprob: -17.75
    7. '```' → logprob: -19.625
    8. '   ' → logprob: -20.375
    9. 'Append' → logprob: -20.5
    10. ' ' → logprob: -20.875

Token 299: '((' (ID: 2054)
  Prédit: '(c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.016120821237564087
    2. '((' → logprob: -4.516120910644531
    3. '(' → logprob: -5.516120910644531
    4. ' (' → logprob: -6.891120910644531
    5. '(C' → logprob: -11.141120910644531
    6. '(
' → logprob: -12.016120910644531
    7. ' ' → logprob: -14.891120910644531
    8. '('' → logprob: -15.641120910644531
    9. '```' → logprob: -15.891120910644531
    10. ')' → logprob: -16.01612091064453

Token 300: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0006316631333902478
    2. ' c' → logprob: -7.375631809234619
    3. '(c' → logprob: -12.375631332397461
    4. ')c' → logprob: -14.500631332397461
    5. '	c' → logprob: -16.12563133239746
    6. '
' → logprob: -16.37563133239746
    7. ',c' → logprob: -17.25063133239746
    8. '[c' → logprob: -17.37563133239746
    9. ' (' → logprob: -17.50063133239746
    10. ')' → logprob: -17.75063133239746

Token 301: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003159201005473733
    2. ' ,' → logprob: -8.12531566619873
    3. ',e' → logprob: -10.87531566619873
    4. ',
' → logprob: -15.12531566619873
    5. '),' → logprob: -15.25031566619873
    6. '<|end|>' → logprob: -15.75031566619873
    7. '‌,' → logprob: -16.625316619873047
    8. ')' → logprob: -17.125316619873047
    9. '```' → logprob: -17.500316619873047
    10. '[' → logprob: -17.750316619873047

Token 302: ' e' (ID: 319)
  Prédit: ' e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' e' → logprob: -0.5759420394897461
    2. 'e' → logprob: -0.8259420394897461
    3. ',e' → logprob: -14.200942039489746
    4. ',' → logprob: -14.325942039489746
    5. ')e' → logprob: -14.700942039489746
    6. '	e' → logprob: -14.700942039489746
    7. ' ' → logprob: -15.825942039489746
    8. ')' → logprob: -15.950942039489746
    9. '
' → logprob: -16.200942993164062
    10. '(e' → logprob: -17.075942993164062

Token 303: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.5759904384613037
    2. ')' → logprob: -0.8259904384613037
    3. '))
' → logprob: -10.450990676879883
    4. ')
' → logprob: -11.700990676879883
    5. ' )' → logprob: -12.325990676879883
    6. ')}' → logprob: -13.075990676879883
    7. ' ))' → logprob: -13.450990676879883
    8. '})' → logprob: -13.700990676879883
    9. ')))' → logprob: -13.700990676879883
    10. '       ' → logprob: -13.825990676879883

Token 304: '       ' (ID: 309)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4311046004295349
    2. '
' → logprob: -1.6811046600341797
    3. '   ' → logprob: -2.3061046600341797
    4. '<|end|>' → logprob: -3.3061046600341797
    5. '```' → logprob: -4.93110466003418
    6. ' def' → logprob: -4.93110466003418
    7. '    
' → logprob: -5.18110466003418
    8. '       ' → logprob: -5.43110466003418
    9. '        
' → logprob: -6.43110466003418
    10. '  
' → logprob: -8.05610466003418

Token 305: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5466213226318359
    2. '       ' → logprob: -0.9216213226318359
    3. '   ' → logprob: -4.421621322631836
    4. ' for' → logprob: -5.046621322631836
    5. '
' → logprob: -6.421621322631836
    6. 'def' → logprob: -6.671621322631836
    7. 'results' → logprob: -6.921621322631836
    8. '```' → logprob: -7.671621322631836
    9. '        
' → logprob: -8.421621322631836
    10. 'answers' → logprob: -9.546621322631836

Token 306: ' For' (ID: 2214)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.41401347517967224
    2. 'def' → logprob: -1.4140135049819946
    3. 'dist' → logprob: -3.039013385772705
    4. 'answers' → logprob: -3.914013385772705
    5. 'results' → logprob: -4.664013385772705
    6. '       ' → logprob: -5.164013385772705
    7. ' for' → logprob: -5.289013385772705
    8. '#' → logprob: -5.539013385772705
    9. 'distance' → logprob: -6.789013385772705
    10. '
' → logprob: -7.039013385772705

Token 307: ' each' (ID: 2454)
  Prédit: ' each'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' each' → logprob: -0.5408688187599182
    2. 'each' → logprob: -1.0408687591552734
    3. ' query' → logprob: -3.5408687591552734
    4. ' q' → logprob: -4.040868759155273
    5. 'query' → logprob: -4.665868759155273
    6. 'a' → logprob: -6.165868759155273
    7. ' a' → logprob: -6.790868759155273
    8. ' ' → logprob: -7.290868759155273
    9. ' all' → logprob: -7.415868759155273
    10. 'q' → logprob: -7.790868759155273

Token 308: ' query' (ID: 5703)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.29753050208091736
    2. ' a' → logprob: -2.04753041267395
    3. '(a' → logprob: -2.42253041267395
    4. 'query' → logprob: -3.67253041267395
    5. ' (' → logprob: -4.547530651092529
    6. ' query' → logprob: -5.922530651092529
    7. '(' → logprob: -8.172530174255371
    8. 'queries' → logprob: -8.922530174255371
    9. 'q' → logprob: -9.047530174255371
    10. '   ' → logprob: -9.422530174255371

Token 309: ' order' (ID: 2569)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7803884148597717
    2. ':' → logprob: -0.7803884148597717
    3. '       ' → logprob: -3.030388355255127
    4. ' in' → logprob: -4.155388355255127
    5. ':
' → logprob: -4.905388355255127
    6. '           ' → logprob: -5.030388355255127
    7. ' for' → logprob: -6.780388355255127
    8. 'in' → logprob: -7.030388355255127
    9. ' ,' → logprob: -7.030388355255127
    10. 'for' → logprob: -7.405388355255127

Token 310: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3747684955596924
    2. ',' → logprob: -1.6247684955596924
    3. '       ' → logprob: -2.4997684955596924
    4. ':
' → logprob: -3.4997684955596924
    5. '           ' → logprob: -6.999768257141113
    6. ' for' → logprob: -7.999768257141113
    7. ',
' → logprob: -7.999768257141113
    8. ' ,' → logprob: -8.374768257141113
    9. '        
' → logprob: -8.499768257141113
    10. '<|end|>' → logprob: -8.499768257141113

Token 311: ' compute' (ID: 23864)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.23977625370025635
    2. '       ' → logprob: -2.114776134490967
    3. 'for' → logprob: -2.739776134490967
    4. '        
' → logprob: -4.864776134490967
    5. '
' → logprob: -4.989776134490967
    6. '           ' → logprob: -5.489776134490967
    7. ' 
' → logprob: -6.489776134490967
    8. '        ' → logprob: -6.614776134490967
    9. '   ' → logprob: -6.864776134490967
    10. '            
' → logprob: -7.114776134490967

Token 312: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.8641625642776489
    2. ' shortest' → logprob: -1.239162564277649
    3. 'the' → logprob: -1.364162564277649
    4. 'short' → logprob: -3.8641624450683594
    5. '       ' → logprob: -5.114162445068359
    6. ' distances' → logprob: -5.739162445068359
    7. 'distance' → logprob: -7.239162445068359
    8. 'dist' → logprob: -7.239162445068359
    9. '           ' → logprob: -8.23916244506836
    10. 'Shortest' → logprob: -8.61416244506836

Token 313: ' minimum' (ID: 11085)
  Prédit: ' shortest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' shortest' → logprob: -0.061313360929489136
    2. 'short' → logprob: -2.9363133907318115
    3. 'minimum' → logprob: -6.186313152313232
    4. 'distance' → logprob: -6.561313152313232
    5. ' minimum' → logprob: -7.561313152313232
    6. 'answer' → logprob: -7.811313152313232
    7. 'def' → logprob: -8.06131362915039
    8. ' minimal' → logprob: -8.31131362915039
    9. ' distance' → logprob: -8.56131362915039
    10. '   ' → logprob: -8.68631362915039

Token 314: ' fare' (ID: 25285)
  Prédit: ' cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' cost' → logprob: -0.7023729681968689
    2. ' distance' → logprob: -1.3273730278015137
    3. 'cost' → logprob: -1.9523730278015137
    4. 'distance' → logprob: -2.4523730278015137
    5. ' travel' → logprob: -4.952373027801514
    6. ' time' → logprob: -6.577373027801514
    7. ' distances' → logprob: -7.327373027801514
    8. 'dist' → logprob: -7.827373027801514
    9. ' shipping' → logprob: -8.077372550964355
    10. 'time' → logprob: -8.452372550964355

Token 315: ' using' (ID: 2360)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0067204674705863
    2. ' using' → logprob: -5.631720542907715
    3. ' for' → logprob: -7.006720542907715
    4. ',' → logprob: -7.881720542907715
    5. ' to' → logprob: -8.006720542907715
    6. 'using' → logprob: -8.006720542907715
    7. 'for' → logprob: -8.256720542907715
    8. 'from' → logprob: -9.006720542907715
    9. '   ' → logprob: -9.131720542907715
    10. '        
' → logprob: -9.131720542907715

Token 316: ' D' (ID: 415)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.6742608547210693
    2. ' D' → logprob: -1.2992608547210693
    3. 'd' → logprob: -1.7992608547210693
    4. ' d' → logprob: -3.2992608547210693
    5. 'heap' → logprob: -4.924261093139648
    6. 'def' → logprob: -6.049261093139648
    7. ' heap' → logprob: -6.299261093139648
    8. 'the' → logprob: -6.549261093139648
    9. ' the' → logprob: -7.299261093139648
    10. ' a' → logprob: -7.674261093139648

Token 317: 'ijkstra' (ID: 124290)
  Prédit: 'ijkstra'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ijkstra' → logprob: -0.0018184551736339927
    2. 'ijk' → logprob: -6.876818656921387
    3. '           ' → logprob: -8.126818656921387
    4. 'ij' → logprob: -8.376818656921387
    5. '       ' → logprob: -9.001818656921387
    6. 'jik' → logprob: -9.626818656921387
    7. '               ' → logprob: -10.376818656921387
    8. '```' → logprob: -11.251818656921387
    9. '   ' → logprob: -12.376818656921387
    10. 'i' → logprob: -12.501818656921387

Token 318: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20223937928676605
    2. ''s' → logprob: -2.4522392749786377
    3. ':' → logprob: -3.7022392749786377
    4. ' for' → logprob: -3.8272392749786377
    5. '   ' → logprob: -4.202239513397217
    6. '
' → logprob: -4.452239513397217
    7. '(' → logprob: -5.077239513397217
    8. 'for' → logprob: -5.327239513397217
    9. '        
' → logprob: -5.827239513397217
    10. '           ' → logprob: -6.327239513397217

Token 319: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17099203169345856
    2. '(' → logprob: -3.170992136001587
    3. ' for' → logprob: -3.295992136001587
    4. 'for' → logprob: -3.420992136001587
    5. '   ' → logprob: -3.795992136001587
    6. ' (' → logprob: -4.795991897583008
    7. '
' → logprob: -5.795991897583008
    8. ''s' → logprob: -6.295991897583008
    9. '(
' → logprob: -6.420991897583008
    10. '           ' → logprob: -6.545991897583008

Token 320: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.023925330489873886
    2. ' for' → logprob: -4.023925304412842
    3. 'for' → logprob: -5.398925304412842
    4. '        
' → logprob: -7.773925304412842
    5. '<|end|>' → logprob: -8.02392578125
    6. '   ' → logprob: -8.39892578125
    7. ' ' → logprob: -9.77392578125
    8. '           ' → logprob: -10.27392578125
    9. '<|end|>' → logprob: -10.77392578125
    10. '    ' → logprob: -11.02392578125

Token 321: ' from' (ID: 591)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8039401769638062
    2. 'for' → logprob: -1.1789401769638062
    3. ' for' → logprob: -1.4289401769638062
    4. '   ' → logprob: -5.303940296173096
    5. '
' → logprob: -8.803939819335938
    6. '        
' → logprob: -10.303939819335938
    7. 'def' → logprob: -10.928939819335938
    8. ' ' → logprob: -11.053939819335938
    9. '           ' → logprob: -11.053939819335938
    10. '	for' → logprob: -11.178939819335938

Token 322: ' departure' (ID: 40493)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.7108810544013977
    2. ' a' → logprob: -0.7108810544013977
    3. ' the' → logprob: -4.960881233215332
    4. ' each' → logprob: -5.835881233215332
    5. 'source' → logprob: -6.085881233215332
    6. ' source' → logprob: -6.460881233215332
    7. 'the' → logprob: -6.585881233215332
    8. 's' → logprob: -7.585881233215332
    9. 'each' → logprob: -7.585881233215332
    10. '<|end|>' → logprob: -7.585881233215332

Token 323: ' island' (ID: 18149)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 324: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.3210498094558716
    2. '       ' → logprob: -1.9460498094558716
    3. ' for' → logprob: -2.696049690246582
    4. 'for' → logprob: -3.446049690246582
    5. 'to' → logprob: -3.946049690246582
    6. ',' → logprob: -4.946049690246582
    7. '   ' → logprob: -6.696049690246582
    8. '<|end|>' → logprob: -7.571049690246582
    9. '        
' → logprob: -7.696049690246582
    10. 'a' → logprob: -7.696049690246582

Token 325: ' destination' (ID: 13330)
  Prédit: 'arrival'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arrival' → logprob: -0.8900443315505981
    2. 'destination' → logprob: -1.5150443315505981
    3. ' arrival' → logprob: -1.6400443315505981
    4. ' destination' → logprob: -1.7650443315505981
    5. 'the' → logprob: -6.015044212341309
    6. ' the' → logprob: -7.015044212341309
    7. 'arr' → logprob: -7.265044212341309
    8. 'b' → logprob: -9.015044212341309
    9. 'each' → logprob: -9.765044212341309
    10. '   ' → logprob: -9.765044212341309

Token 326: ' island' (ID: 18149)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06738566607236862
    2. ' for' → logprob: -3.192385673522949
    3. 'for' → logprob: -4.317385673522949
    4. '
' → logprob: -5.442385673522949
    5. '        
' → logprob: -5.442385673522949
    6. '   ' → logprob: -7.442385673522949
    7. ',' → logprob: -7.942385673522949
    8. '.' → logprob: -8.31738567352295
    9. '```' → logprob: -8.56738567352295
    10. '<|end|>' → logprob: -8.94238567352295

Token 327: ' in' (ID: 306)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002838276559486985
    2. '
' → logprob: -6.627838134765625
    3. '        
' → logprob: -7.502838134765625
    4. ' for' → logprob: -8.002838134765625
    5. '<|end|>' → logprob: -8.502838134765625
    6. 'for' → logprob: -8.627838134765625
    7. '   ' → logprob: -9.377838134765625
    8. '           ' → logprob: -10.127838134765625
    9. ',' → logprob: -10.377838134765625
    10. '	' → logprob: -11.127838134765625

Token 328: ' current' (ID: 2208)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -1.0530766248703003
    2. ' graph' → logprob: -1.1780766248703003
    3. 'the' → logprob: -1.4280766248703003
    4. ' the' → logprob: -2.42807674407959
    5. ' current' → logprob: -4.92807674407959
    6. 'current' → logprob: -5.17807674407959
    7. 'each' → logprob: -7.05307674407959
    8. ' each' → logprob: -7.67807674407959
    9. '	graph' → logprob: -8.17807674407959
    10. 'this' → logprob: -8.17807674407959

Token 329: ' graph' (ID: 7465)
  Prédit: ' graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' graph' → logprob: -0.1798984855413437
    2. 'graph' → logprob: -1.8048985004425049
    3. '	graph' → logprob: -10.179898262023926
    4. '_graph' → logprob: -10.429898262023926
    5. '(graph' → logprob: -11.429898262023926
    6. '```' → logprob: -11.429898262023926
    7. 'state' → logprob: -11.804898262023926
    8. '
' → logprob: -12.054898262023926
    9. ' state' → logprob: -12.179898262023926
    10. ' 
' → logprob: -12.429898262023926

Token 330: '.

' (ID: 364)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004369597882032394
    2. '
' → logprob: -6.254369735717773
    3. '        
' → logprob: -6.879369735717773
    4. '<|end|>' → logprob: -7.254369735717773
    5. ' for' → logprob: -8.629369735717773
    6. '   ' → logprob: -8.754369735717773
    7. 'for' → logprob: -9.004369735717773
    8. ',' → logprob: -9.754369735717773
    9. '<|end|>' → logprob: -9.879369735717773
    10. '           ' → logprob: -10.004369735717773

Token 331: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014260347932577133
    2. ' for' → logprob: -4.639260292053223
    3. 'for' → logprob: -6.014260292053223
    4. '   ' → logprob: -6.264260292053223
    5. '        
' → logprob: -9.764260292053223
    6. '
' → logprob: -10.889260292053223
    7. '           ' → logprob: -11.014260292053223
    8. '<|end|>' → logprob: -11.014260292053223
    9. ' ' → logprob: -11.264260292053223
    10. '```' → logprob: -11.889260292053223

Token 332: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9094652533531189
    2. 'for' (adapté à ' for') → logprob: -0.9094652533531189
    3. ' for' → logprob: -1.6594653129577637
    4. '   ' → logprob: -5.534465312957764
    5. 'def' → logprob: -8.534464836120605
    6. '
' → logprob: -9.534464836120605
    7. '```' → logprob: -10.784464836120605
    8. ' ' → logprob: -11.784464836120605
    9. '	for' → logprob: -11.784464836120605
    10. '           ' → logprob: -12.284464836120605

Token 333: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6999278664588928
    2. ' a' → logprob: -0.8249278664588928
    3. ' (' → logprob: -3.449927806854248
    4. '(a' → logprob: -3.699927806854248
    5. 'query' → logprob: -5.449927806854248
    6. ' query' → logprob: -6.324927806854248
    7. '(' → logprob: -6.699927806854248
    8. 'q' → logprob: -7.699927806854248
    9. ' ' → logprob: -8.324928283691406
    10. ' q' → logprob: -8.574928283691406

Token 334: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001685293740592897
    2. ' ,' → logprob: -7.25168514251709
    3. ' in' → logprob: -7.25168514251709
    4. 'in' → logprob: -8.50168514251709
    5. ',a' → logprob: -10.75168514251709
    6. ',b' → logprob: -11.25168514251709
    7. '[' → logprob: -12.50168514251709
    8. 'a' → logprob: -12.75168514251709
    9. ',in' → logprob: -12.75168514251709
    10. '<|end|>' → logprob: -13.12668514251709

Token 335: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.02324547804892063
    2. ' b' → logprob: -3.7732455730438232
    3. ' ' → logprob: -18.023244857788086
    4. '   ' → logprob: -19.273244857788086
    5. '<|end|>' → logprob: -19.398244857788086
    6. '	b' → logprob: -19.523244857788086
    7. '    ' → logprob: -19.773244857788086
    8. ')b' → logprob: -19.898244857788086
    9. '       ' → logprob: -20.148244857788086
    10. ' ' → logprob: -21.148244857788086

Token 336: ' in' (ID: 306)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5353366732597351
    2. ' in' → logprob: -1.0353367328643799
    3. ':
' → logprob: -3.03533673286438
    4. 'in' → logprob: -4.910336494445801
    5. ',' → logprob: -5.660336494445801
    6. '   ' → logprob: -8.9103364944458
    7. '):
' → logprob: -9.2853364944458
    8. '<|end|>' → logprob: -9.5353364944458
    9. '       ' → logprob: -9.6603364944458
    10. '):' → logprob: -10.5353364944458

Token 337: ' queries' (ID: 32122)
  Prédit: 'queries'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queries' → logprob: -0.2519317865371704
    2. ' queries' → logprob: -1.5019317865371704
    3. 'query' → logprob: -14.251932144165039
    4. '_queries' → logprob: -14.251932144165039
    5. ' ' → logprob: -15.001932144165039
    6. 'quests' → logprob: -15.126932144165039
    7. 'requests' → logprob: -15.251932144165039
    8. 'quer' → logprob: -15.376932144165039
    9. 'questions' → logprob: -16.00193214416504
    10. 'que' → logprob: -17.00193214416504

Token 338: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.026330487802624702
    2. ':
' → logprob: -3.6513304710388184
    3. '):' → logprob: -11.151330947875977
    4. '):
' → logprob: -12.026330947875977
    5. '():
' → logprob: -12.651330947875977
    6. ':
' → logprob: -13.401330947875977
    7. ',' → logprob: -13.651330947875977
    8. ':

' → logprob: -13.651330947875977
    9. '       ' → logprob: -14.151330947875977
    10. ' :' → logprob: -14.276330947875977

Token 339: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23392391204833984
    2. '           ' → logprob: -1.7339239120483398
    3. ':' → logprob: -3.73392391204834
    4. '```' → logprob: -6.10892391204834
    5. ':
' → logprob: -6.48392391204834
    6. '        
' → logprob: -6.73392391204834
    7. '   ' → logprob: -6.73392391204834
    8. '
' → logprob: -7.85892391204834
    9. '    
' → logprob: -8.23392391204834
    10. '               ' → logprob: -8.60892391204834

Token 340: ' #' (ID: 1069)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.14979712665081024
    2. '           ' → logprob: -2.149797201156616
    3. ' dist' → logprob: -4.149796962738037
    4. 'distance' → logprob: -5.524796962738037
    5. 'import' → logprob: -6.149796962738037
    6. '
' → logprob: -8.899797439575195
    7. 'heap' → logprob: -9.274797439575195
    8. ' distance' → logprob: -9.274797439575195
    9. '   ' → logprob: -9.524797439575195
    10. 'pq' → logprob: -9.524797439575195

Token 341: ' Implement' (ID: 32889)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.0023163107689470053
    2. 'distance' → logprob: -7.127316474914551
    3. '       ' → logprob: -7.502316474914551
    4. 'import' → logprob: -8.00231647491455
    5. ' dist' → logprob: -8.37731647491455
    6. 'def' → logprob: -8.62731647491455
    7. '           ' → logprob: -9.12731647491455
    8. 'heap' → logprob: -10.37731647491455
    9. '#' → logprob: -10.50231647491455
    10. 'INF' → logprob: -11.00231647491455

Token 342: ' D' (ID: 415)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7413301467895508
    2. 'dist' → logprob: -1.3663301467895508
    3. ' dist' → logprob: -2.241330146789551
    4. ' heap' → logprob: -2.741330146789551
    5. 'heap' → logprob: -3.116330146789551
    6. 'distance' → logprob: -3.741330146789551
    7. '   ' → logprob: -4.866330146789551
    8. 'import' → logprob: -4.991330146789551
    9. ' distance' → logprob: -5.491330146789551
    10. ' distances' → logprob: -5.866330146789551

Token 343: 'ijkstra' (ID: 124290)
  Prédit: 'ijkstra'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ijkstra' → logprob: -0.13067401945590973
    2. 'ijk' → logprob: -2.130674123764038
    3. 'ij' → logprob: -6.130673885345459
    4. 'i' → logprob: -6.630673885345459
    5. 'jik' → logprob: -9.255674362182617
    6. 'ijks' → logprob: -9.630674362182617
    7. 'ijkl' → logprob: -10.255674362182617
    8. '   ' → logprob: -11.755674362182617
    9. '```' → logprob: -11.755674362182617
    10. '[i' → logprob: -12.130674362182617

Token 344: ' algorithm' (ID: 22184)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.017143981531262398
    2. '(' → logprob: -5.017144203186035
    3. ' (' → logprob: -5.267144203186035
    4. '            
' → logprob: -6.517144203186035
    5. '(
' → logprob: -7.017144203186035
    6. '(n' → logprob: -7.267144203186035
    7. '(graph' → logprob: -8.017144203186035
    8. '(start' → logprob: -8.017144203186035
    9. '
' → logprob: -8.392144203186035
    10. '(distance' → logprob: -8.517144203186035

Token 345: '

' (ID: 279)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.023066679015755653
    2. ':' → logprob: -4.523066520690918
    3. '
' → logprob: -5.148066520690918
    4. '            
' → logprob: -5.898066520690918
    5. 'distance' → logprob: -6.773066520690918
    6. '               ' → logprob: -8.023066520690918
    7. '            ' → logprob: -8.648066520690918
    8. ':
' → logprob: -8.648066520690918
    9. '       ' → logprob: -8.773066520690918
    10. ',' → logprob: -8.773066520690918

Token 346: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0006145051447674632
    2. '
' → logprob: -8.000614166259766
    3. '            
' → logprob: -9.500614166259766
    4. 'distance' → logprob: -9.500614166259766
    5. 'dist' → logprob: -9.750614166259766
    6. '   ' → logprob: -11.250614166259766
    7. ' dist' → logprob: -11.250614166259766
    8. ' distance' → logprob: -11.500614166259766
    9. '       ' → logprob: -12.125614166259766
    10. '		' → logprob: -12.375614166259766

Token 347: ' #' (ID: 1069)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.191427081823349
    2. '           ' → logprob: -2.191426992416382
    3. 'import' → logprob: -2.941426992416382
    4. ' dist' → logprob: -4.941427230834961
    5. 'distance' → logprob: -6.566427230834961
    6. ' import' → logprob: -7.191427230834961
    7. '   ' → logprob: -9.441427230834961
    8. 'heap' → logprob: -9.691427230834961
    9. '
' → logprob: -9.816427230834961
    10. 'INF' → logprob: -9.941427230834961

Token 348: ' distance' (ID: 9324)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.013725610449910164
    2. ' dist' → logprob: -4.763725757598877
    3. 'import' → logprob: -5.763725757598877
    4. '           ' → logprob: -6.638725757598877
    5. 'distance' → logprob: -7.888725757598877
    6. '       ' → logprob: -8.888725280761719
    7. ' import' → logprob: -9.888725280761719
    8. '   ' → logprob: -10.138725280761719
    9. 'heap' → logprob: -10.638725280761719
    10. '
' → logprob: -11.388725280761719

Token 349: ' array' (ID: 2644)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.49515146017074585
    2. ' =' → logprob: -1.1201515197753906
    3. '=' → logprob: -2.7451515197753906
    4. '=[' → logprob: -11.37015151977539
    5. '[]' → logprob: -11.87015151977539
    6. '=[]' → logprob: -11.99515151977539
    7. '[' → logprob: -12.12015151977539
    8. ' ' → logprob: -12.49515151977539
    9. 'dist' → logprob: -12.87015151977539
    10. '   ' → logprob: -13.12015151977539

Token 350: ' -' (ID: 533)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.058333586901426315
    2. '=' → logprob: -3.0583336353302
    3. '           ' → logprob: -4.933333396911621
    4. 'dist' → logprob: -6.933333396911621
    5. ' distances' → logprob: -7.433333396911621
    6. '   ' → logprob: -8.183333396911621
    7. 'distance' → logprob: -8.433333396911621
    8. ' dist' → logprob: -8.683333396911621
    9. '[' → logprob: -10.058333396911621
    10. '=[' → logprob: -10.308333396911621

Token 351: ' initialize' (ID: 18400)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.4849041998386383
    2. '[' → logprob: -0.9849041700363159
    3. 'dist' → logprob: -4.9849042892456055
    4. ' dist' → logprob: -5.7349042892456055
    5. ' distances' → logprob: -8.359904289245605
    6. 'distance' → logprob: -8.984904289245605
    7. '[n' → logprob: -9.359904289245605
    8. '[d' → logprob: -9.484904289245605
    9. '[in' → logprob: -10.234904289245605
    10. '[int' → logprob: -10.484904289245605

Token 352: ' with' (ID: 483)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.30204102396965027
    2. '           ' → logprob: -2.3020410537719727
    3. ' dist' → logprob: -2.4270410537719727
    4. ' =' → logprob: -3.6770410537719727
    5. ' distances' → logprob: -4.052041053771973
    6. '[' → logprob: -4.427041053771973
    7. 'distance' → logprob: -4.552041053771973
    8. ' [' → logprob: -5.677041053771973
    9. ' distance' → logprob: -6.427041053771973
    10. '   ' → logprob: -6.927041053771973

Token 353: ' a' (ID: 261)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.13041695952415466
    2. '[' → logprob: -2.1304168701171875
    3. ' float' → logprob: -5.8804168701171875
    4. ' [' → logprob: -7.3804168701171875
    5. 'inf' → logprob: -10.130416870117188
    6. '[int' → logprob: -10.880416870117188
    7. 'sys' → logprob: -12.630416870117188
    8. '   ' → logprob: -13.505416870117188
    9. '(float' → logprob: -14.255416870117188
    10. 'INF' → logprob: -15.005416870117188

Token 354: ' large' (ID: 4410)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.24381627142429352
    2. 'float' → logprob: -2.368816375732422
    3. ' [' → logprob: -3.118816375732422
    4. 'bs' → logprob: -3.618816375732422
    5. '[int' → logprob: -3.618816375732422
    6. 'int' → logprob: -5.243816375732422
    7. 'rr' → logprob: -5.243816375732422
    8. ' float' → logprob: -5.743816375732422
    9. 'b' → logprob: -5.993816375732422
    10. 'pp' → logprob: -6.243816375732422

Token 355: ' number' (ID: 2086)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.8480212092399597
    2. 'number' → logprob: -1.0980212688446045
    3. ' number' → logprob: -1.7230212688446045
    4. ' value' → logprob: -3.3480212688446045
    5. 'inf' → logprob: -3.8480212688446045
    6. 'distance' → logprob: -6.598021030426025
    7. 'int' → logprob: -7.473021030426025
    8. 'INF' → logprob: -7.598021030426025
    9. '_number' → logprob: -8.223021507263184
    10. '_value' → logprob: -8.848021507263184

Token 356: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.9126003384590149
    2. ' =' → logprob: -2.03760027885437
    3. ' distances' → logprob: -2.28760027885437
    4. 'dist' → logprob: -2.28760027885437
    5. 'distance' → logprob: -2.28760027885437
    6. '(distance' → logprob: -3.53760027885437
    7. 'inf' → logprob: -3.91260027885437
    8. ' dist' → logprob: -4.037600517272949
    9. 'INF' → logprob: -4.037600517272949
    10. '=' → logprob: -4.037600517272949

Token 357: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6298007965087891
    2. 'dist' → logprob: -1.004800796508789
    3. 'distance' → logprob: -3.254800796508789
    4. ' dist' → logprob: -3.254800796508789
    5. ' distances' → logprob: -3.879800796508789
    6. ' distance' → logprob: -6.129800796508789
    7. ' =' → logprob: -8.379800796508789
    8. '               ' → logprob: -8.879800796508789
    9. '[' → logprob: -8.879800796508789
    10. '   ' → logprob: -9.004800796508789

Token 358: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' (adapté à ' dist') → logprob: -0.601814329624176
    2. ' dist' → logprob: -0.851814329624176
    3. 'distance' → logprob: -4.226814270019531
    4. ' distance' → logprob: -5.101814270019531
    5. ' distances' → logprob: -5.851814270019531
    6. '           ' → logprob: -6.351814270019531
    7. 'INF' → logprob: -9.226814270019531
    8. '   ' → logprob: -9.726814270019531
    9. ' INF' → logprob: -10.601814270019531
    10. 'inf' → logprob: -11.226814270019531

Token 359: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12702679634094238
    2. '=' → logprob: -2.1270267963409424
    3. '[' → logprob: -9.502026557922363
    4. '=[' → logprob: -11.502026557922363
    5. '   ' → logprob: -12.252026557922363
    6. ' =[' → logprob: -12.502026557922363
    7. ' ' → logprob: -13.002026557922363
    8. ']' → logprob: -14.377026557922363
    9. ',' → logprob: -14.377026557922363
    10. ')' → logprob: -14.502026557922363

Token 360: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.011079414747655392
    2. ' [' → logprob: -4.51107931137085
    3. '{' → logprob: -10.511079788208008
    4. '[int' → logprob: -12.761079788208008
    5. '   ' → logprob: -13.636079788208008
    6. ' {' → logprob: -16.761079788208008
    7. '[len' → logprob: -16.886079788208008
    8. '[node' → logprob: -17.011079788208008
    9. ' ' → logprob: -17.761079788208008
    10. '[num' → logprob: -18.511079788208008

Token 361: 'float' (ID: 7829)
  Prédit: 'float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.008937526494264603
    2. '10' → logprob: -4.758937358856201
    3. ' float' → logprob: -8.50893783569336
    4. 'int' → logprob: -9.13393783569336
    5. '1' → logprob: -11.63393783569336
    6. 'sys' → logprob: -13.00893783569336
    7. '   ' → logprob: -13.38393783569336
    8. ' ' → logprob: -14.50893783569336
    9. '100' → logprob: -16.38393783569336
    10. '(float' → logprob: -16.75893783569336

Token 362: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.0009726829594001174
    2. ''in' → logprob: -7.125972747802734
    3. ''' → logprob: -8.750972747802734
    4. '("' → logprob: -12.500972747802734
    5. ''s' → logprob: -13.375972747802734
    6. '(' → logprob: -13.375972747802734
    7. ''int' → logprob: -14.875972747802734
    8. ''end' → logprob: -15.250972747802734
    9. ''inc' → logprob: -15.375972747802734
    10. ''ex' → logprob: -15.500972747802734

Token 363: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -0.0005819845828227699
    2. ''in' → logprob: -7.500582218170166
    3. ''' → logprob: -10.500581741333008
    4. 'in' → logprob: -13.875581741333008
    5. ''s' → logprob: -16.250581741333008
    6. 'info' → logprob: -16.250581741333008
    7. 'INF' → logprob: -16.875581741333008
    8. ''ex' → logprob: -17.375581741333008
    9. ''on' → logprob: -17.500581741333008
    10. '')' → logprob: -17.625581741333008

Token 364: '')]' (ID: 94377)
  Prédit: '')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')]' → logprob: -0.25356489419937134
    2. ')]' → logprob: -1.5035648345947266
    3. ')' → logprob: -7.253564834594727
    4. ']' → logprob: -7.503564834594727
    5. '')' → logprob: -8.128564834594727
    6. '']' → logprob: -9.628564834594727
    7. '")]' → logprob: -12.253564834594727
    8. ''' → logprob: -12.378564834594727
    9. ' )' → logprob: -13.503564834594727
    10. '']]' → logprob: -13.503564834594727

Token 365: ' *' (ID: 425)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 366: ' (' (ID: 350)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.023437868803739548
    2. ' (' → logprob: -3.773437976837158
    3. '(len' → logprob: -8.6484375
    4. '   ' → logprob: -11.6484375
    5. '(' → logprob: -12.5234375
    6. '
' → logprob: -13.3984375
    7. '((' → logprob: -14.0234375
    8. ' ' → logprob: -14.1484375
    9. '(N' → logprob: -15.2734375
    10. '(
' → logprob: -15.5234375

Token 367: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0015330705791711807
    2. ' n' → logprob: -6.876533031463623
    3. '(n' → logprob: -7.626533031463623
    4. ' (' → logprob: -11.751533508300781
    5. '   ' → logprob: -12.501533508300781
    6. '	n' → logprob: -14.501533508300781
    7. '           ' → logprob: -15.376533508300781
    8. '       ' → logprob: -16.12653350830078
    9. ')n' → logprob: -16.25153350830078
    10. '
' → logprob: -16.62653350830078

Token 368: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.08897469192743301
    2. ' +' → logprob: -2.463974714279175
    3. '+
' → logprob: -10.588974952697754
    4. ' +
' → logprob: -12.338974952697754
    5. ')' → logprob: -13.213974952697754
    6. '+n' → logprob: -13.463974952697754
    7. '
' → logprob: -14.838974952697754
    8. ' ' → logprob: -15.088974952697754
    9. ')+' → logprob: -15.463974952697754
    10. '<|end|>' → logprob: -15.463974952697754

Token 369: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.228561349213123e-05
    2. ' ' → logprob: -9.875052452087402
    3. '   ' → logprob: -15.125052452087402
    4. '
' → logprob: -15.375052452087402
    5. '```' → logprob: -16.000051498413086
    6. ')' → logprob: -17.812551498413086
    7. '2' → logprob: -18.000051498413086
    8. '  ' → logprob: -18.375051498413086
    9. '۱' → logprob: -18.750051498413086
    10. '    ' → logprob: -18.812551498413086

Token 370: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.173704271830502e-06
    2. ' ' → logprob: -12.75000286102295
    3. '
' → logprob: -16.250003814697266
    4. '   ' → logprob: -16.875003814697266
    5. '```' → logprob: -17.375003814697266
    6. '2' → logprob: -18.375003814697266
    7. ')' → logprob: -18.687503814697266
    8. '

' → logprob: -18.875003814697266
    9. '１' → logprob: -19.312503814697266
    10. '  ' → logprob: -19.437503814697266

Token 371: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006756697781383991
    2. ')
' → logprob: -5.131756782531738
    3. '           ' → logprob: -7.131756782531738
    4. '<|end|>' → logprob: -11.756756782531738
    5. '       ' → logprob: -12.006756782531738
    6. ' )' → logprob: -12.881756782531738
    7. '
' → logprob: -13.131756782531738
    8. '               ' → logprob: -13.506756782531738
    9. '   ' → logprob: -13.756756782531738
    10. ')
' → logprob: -14.131756782531738

Token 372: '           ' (ID: 352)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.387337863445282
    2. ' dist' → logprob: -1.5123379230499268
    3. '           ' → logprob: -3.3873379230499268
    4. '<|end|>' → logprob: -3.5123379230499268
    5. '
' → logprob: -3.7623379230499268
    6. '[' → logprob: -5.637337684631348
    7. '	dist' → logprob: -5.762337684631348
    8. '            
' → logprob: -6.137337684631348
    9. ' 
' → logprob: -6.387337684631348
    10. '```' → logprob: -7.262337684631348

Token 373: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' (adapté à ' dist') → logprob: -0.03722578287124634
    2. ' dist' → logprob: -3.4122257232666016
    3. '           ' → logprob: -5.662225723266602
    4. '	dist' → logprob: -9.787225723266602
    5. '   ' → logprob: -10.412225723266602
    6. '```' → logprob: -12.412225723266602
    7. '       ' → logprob: -12.662225723266602
    8. '
' → logprob: -13.287225723266602
    9. '_dist' → logprob: -13.912225723266602
    10. '            
' → logprob: -14.287225723266602

Token 374: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.0004983438993804157
    2. '[' → logprob: -7.875498294830322
    3. '[data' → logprob: -9.37549877166748
    4. 'a' → logprob: -11.87549877166748
    5. ' [' → logprob: -11.87549877166748
    6. '=' → logprob: -12.50049877166748
    7. '[
' → logprob: -13.00049877166748
    8. '=a' → logprob: -13.50049877166748
    9. '[arr' → logprob: -13.62549877166748
    10. ' a' → logprob: -13.75049877166748

Token 375: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00018399098189547658
    2. ' ]' → logprob: -9.125184059143066
    3. ']=' → logprob: -10.250184059143066
    4. ')' → logprob: -10.250184059143066
    5. '[' → logprob: -13.125184059143066
    6. '=' → logprob: -13.625184059143066
    7. ')]' → logprob: -14.250184059143066
    8. ' =' → logprob: -15.375184059143066
    9. ']
' → logprob: -17.00018310546875
    10. '   ' → logprob: -17.12518310546875

Token 376: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16022585332393646
    2. ' =' → logprob: -1.9102258682250977
    3. '[' → logprob: -13.910225868225098
    4. ')' → logprob: -16.03522491455078
    5. ',' → logprob: -16.03522491455078
    6. ')=' → logprob: -16.28522491455078
    7. '=
' → logprob: -16.41022491455078
    8. '<|end|>' → logprob: -16.41022491455078
    9. ']' → logprob: -16.66022491455078
    10. ' =
' → logprob: -16.66022491455078

Token 377: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.2729995988775045e-06
    2. ' ' → logprob: -12.000006675720215
    3. '   ' → logprob: -18.1250057220459
    4. '۰' → logprob: -20.4375057220459
    5. '  ' → logprob: -20.6250057220459
    6. '00' → logprob: -21.0625057220459
    7. ' ' → logprob: -21.5000057220459
    8. '000' → logprob: -21.6875057220459
    9. '    ' → logprob: -22.0625057220459
    10. '０' → logprob: -22.0625057220459

Token 378: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -13.750000953674316
    3. '   ' → logprob: -18.500001907348633
    4. '۰' → logprob: -20.750001907348633
    5. '000' → logprob: -21.187501907348633
    6. '00' → logprob: -21.500001907348633
    7. '  ' → logprob: -21.687501907348633
    8. '    ' → logprob: -22.250001907348633
    9. '1' → logprob: -22.312501907348633
    10. '０' → logprob: -22.437501907348633

Token 379: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.007454941514879465
    2. '<|end|>' → logprob: -5.757454872131348
    3. '
' → logprob: -5.882454872131348
    4. '            
' → logprob: -8.007454872131348
    5. 'heap' → logprob: -8.132454872131348
    6. '		' → logprob: -8.507454872131348
    7. ',' → logprob: -8.632454872131348
    8. '       ' → logprob: -9.382454872131348
    9. ' heap' → logprob: -9.632454872131348
    10. '   ' → logprob: -9.632454872131348

Token 380: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0009344478603452444
    2. 'heap' → logprob: -7.875934600830078
    3. '		' → logprob: -9.000934600830078
    4. '   ' → logprob: -9.125934600830078
    5. '       ' → logprob: -9.125934600830078
    6. ' heap' → logprob: -9.750934600830078
    7. '	       ' → logprob: -10.375934600830078
    8. 'import' → logprob: -10.750934600830078
    9. '```' → logprob: -11.000934600830078
    10. '            
' → logprob: -11.125934600830078

Token 381: ' #' (ID: 1069)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.7819839119911194
    2. 'pq' → logprob: -0.7819839119911194
    3. '           ' → logprob: -2.5319838523864746
    4. 'queue' → logprob: -5.531983852386475
    5. ' heap' → logprob: -7.031983852386475
    6. 'hq' → logprob: -7.781983852386475
    7. 'import' → logprob: -9.531984329223633
    8. 'priority' → logprob: -9.656984329223633
    9. ' pq' → logprob: -9.781984329223633
    10. ' queue' → logprob: -11.281984329223633

Token 382: ' min' (ID: 1349)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.11782074719667435
    2. 'pq' → logprob: -2.8678207397460938
    3. 'hq' → logprob: -3.1178207397460938
    4. 'queue' → logprob: -4.617820739746094
    5. 'h' → logprob: -8.867820739746094
    6. ' heap' → logprob: -10.242820739746094
    7. 'q' → logprob: -11.742820739746094
    8. 'que' → logprob: -12.242820739746094
    9. 'priority' → logprob: -12.867820739746094
    10. 'import' → logprob: -14.117820739746094

Token 383: '-' (ID: 12)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.33066993951797485
    2. '-' → logprob: -1.83066987991333
    3. ' heap' → logprob: -2.20566987991333
    4. '_heap' → logprob: -4.95566987991333
    5. '(heap' → logprob: -6.70566987991333
    6. 'q' → logprob: -6.95566987991333
    7. 'queue' → logprob: -7.45566987991333
    8. 'hq' → logprob: -8.330670356750488
    9. '       ' → logprob: -8.455670356750488
    10. '           ' → logprob: -8.830670356750488

Token 384: 'heap' (ID: 38535)
  Prédit: 'heap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -4.35837464465294e-05
    2. 'queue' → logprob: -10.750043869018555
    3. ' heap' → logprob: -10.750043869018555
    4. 'he' → logprob: -15.000043869018555
    5. 'priority' → logprob: -16.625043869018555
    6. '_heap' → logprob: -16.625043869018555
    7. '-' → logprob: -17.250043869018555
    8. '
' → logprob: -17.500043869018555
    9. '```' → logprob: -17.875043869018555
    10. 'q' → logprob: -18.000043869018555

Token 385: ' for' (ID: 395)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.47223302721977234
    2. '           ' → logprob: -1.4722330570220947
    3. ' heap' → logprob: -2.0972330570220947
    4. ' =' → logprob: -4.722232818603516
    5. ' queue' → logprob: -5.597232818603516
    6. 'pq' → logprob: -5.847232818603516
    7. 'queue' → logprob: -5.847232818603516
    8. '(heap' → logprob: -6.472232818603516
    9. 'q' → logprob: -6.597232818603516
    10. ',' → logprob: -6.597232818603516

Token 386: ' exploration' (ID: 38070)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.5958868861198425
    2. '(heap' → logprob: -1.0958869457244873
    3. ' (' → logprob: -2.5958869457244873
    4. ' heap' → logprob: -4.345886707305908
    5. '[(' → logprob: -4.845886707305908
    6. '(' → logprob: -4.970886707305908
    7. 'dist' → logprob: -5.970886707305908
    8. 'he' → logprob: -6.095886707305908
    9. '(priority' → logprob: -6.720886707305908
    10. 'priority' → logprob: -6.845886707305908

Token 387: ':' (ID: 25)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.20970357954502106
    2. '           ' → logprob: -2.4597036838531494
    3. ' heap' → logprob: -2.4597036838531494
    4. 'pq' → logprob: -4.20970344543457
    5. '(heap' → logprob: -6.58470344543457
    6. ' pq' → logprob: -7.95970344543457
    7. 'queue' → logprob: -7.95970344543457
    8. 'q' → logprob: -8.33470344543457
    9. '   ' → logprob: -8.45970344543457
    10. '
' → logprob: -8.58470344543457

Token 388: ' (' (ID: 350)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.14975298941135406
    2. '[(' → logprob: -2.3997530937194824
    3. ' heap' → logprob: -3.1497530937194824
    4. ' [(' → logprob: -5.274753093719482
    5. '   ' → logprob: -9.399752616882324
    6. 'pq' → logprob: -9.524752616882324
    7. '[]' → logprob: -9.774752616882324
    8. '[]
' → logprob: -10.149752616882324
    9. '[' → logprob: -10.274752616882324
    10. '           ' → logprob: -10.649752616882324

Token 389: 'cost' (ID: 33457)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.29036056995391846
    2. '0' → logprob: -1.4153605699539185
    3. '(' → logprob: -5.665360450744629
    4. '(dist' → logprob: -5.790360450744629
    5. 'distance' → logprob: -6.790360450744629
    6. 'cost' → logprob: -7.165360450744629
    7. ' dist' → logprob: -7.915360450744629
    8. ')' → logprob: -8.790360450744629
    9. ' (' → logprob: -9.665360450744629
    10. '(distance' → logprob: -9.915360450744629

Token 390: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.65707261255011e-06
    2. ' ,' → logprob: -12.500008583068848
    3. ',
' → logprob: -13.000008583068848
    4. ')' → logprob: -14.875008583068848
    5. ',a' → logprob: -15.375008583068848
    6. 'import' → logprob: -15.500008583068848
    7. ',c' → logprob: -15.750008583068848
    8. 'cost' → logprob: -15.875008583068848
    9. '<|end|>' → logprob: -15.875008583068848
    10. '   ' → logprob: -16.250009536743164

Token 391: ' island' (ID: 18149)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.6944398283958435
    2. 'a' → logprob: -0.8194398283958435
    3. ' node' → logprob: -3.0694398880004883
    4. ' a' → logprob: -4.694439888000488
    5. 'vertex' → logprob: -5.819439888000488
    6. 'current' → logprob: -8.069439888000488
    7. 'is' → logprob: -8.319439888000488
    8. 'start' → logprob: -8.444439888000488
    9. ' vertex' → logprob: -9.444439888000488
    10. ' island' → logprob: -9.444439888000488

Token 392: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00014489953173324466
    2. '),' → logprob: -9.500144958496094
    3. ',' → logprob: -10.375144958496094
    4. ')
' → logprob: -10.500144958496094
    5. 'heap' → logprob: -13.375144958496094
    6. '<|end|>' → logprob: -13.750144958496094
    7. ' )' → logprob: -13.875144958496094
    8. 's' → logprob: -14.000144958496094
    9. '[' → logprob: -14.000144958496094
    10. '   ' → logprob: -14.250144958496094

Token 393: '           ' (ID: 352)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.35577648878097534
    2. '           ' → logprob: -1.4807765483856201
    3. ' heap' → logprob: -3.10577654838562
    4. '(heap' → logprob: -3.85577654838562
    5. ',' → logprob: -6.105776309967041
    6. ' (' → logprob: -6.730776309967041
    7. ')' → logprob: -7.230776309967041
    8. '(' → logprob: -7.730776309967041
    9. 'pq' → logprob: -8.1057767868042
    10. '[' → logprob: -8.6057767868042

Token 394: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' (adapté à ' heap') → logprob: -0.002052954863756895
    2. ' heap' → logprob: -6.2520527839660645
    3. 'pq' → logprob: -9.877053260803223
    4. 'hq' → logprob: -10.002053260803223
    5. '[(' → logprob: -11.627053260803223
    6. '   ' → logprob: -12.502053260803223
    7. '[]' → logprob: -12.627053260803223
    8. 'h' → logprob: -12.627053260803223
    9. 'queue' → logprob: -13.127053260803223
    10. 'import' → logprob: -13.502053260803223

Token 395: ' =' (ID: 314)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.014051148667931557
    2. ' =' → logprob: -4.7640509605407715
    3. '=[]' → logprob: -5.7640509605407715
    4. '=' → logprob: -6.3890509605407715
    5. '<|end|>' → logprob: -9.13905143737793
    6. '[' → logprob: -9.26405143737793
    7. '.push' → logprob: -9.26405143737793
    8. '=[]
' → logprob: -9.76405143737793
    9. '.append' → logprob: -10.38905143737793
    10. '       ' → logprob: -10.38905143737793

Token 396: ' [(' (ID: 43900)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.00041148843592964113
    2. ' [(' → logprob: -8.000411033630371
    3. '[]' → logprob: -9.500411033630371
    4. '[]
' → logprob: -13.750411033630371
    5. '[' → logprob: -16.250411987304688
    6. ' []' → logprob: -16.750411987304688
    7. '[((' → logprob: -17.125411987304688
    8. '([(' → logprob: -17.625411987304688
    9. '[],' → logprob: -20.000411987304688
    10. '[]

' → logprob: -20.125411987304688

Token 397: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -15.125000953674316
    3. 'dist' → logprob: -15.125000953674316
    4. '
' → logprob: -17.875
    5. ',' → logprob: -17.875
    6. ')' → logprob: -18.375
    7. '   ' → logprob: -18.875
    8. '(' → logprob: -18.875
    9. '```' → logprob: -19.0
    10. ' dist' → logprob: -19.875

Token 398: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003812217037193477
    2. ',a' → logprob: -8.000381469726562
    3. ' ,' → logprob: -10.750381469726562
    4. '<|end|>' → logprob: -10.875381469726562
    5. ',
' → logprob: -13.250381469726562
    6. ')' → logprob: -13.875381469726562
    7. 'a' → logprob: -13.875381469726562
    8. ',)' → logprob: -15.125381469726562
    9. ',b' → logprob: -15.500381469726562
    10. '‌,' → logprob: -15.625381469726562

Token 399: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -3.4121114822482923e-06
    2. ' a' → logprob: -12.625003814697266
    3. '   ' → logprob: -18.125003814697266
    4. ')a' → logprob: -18.750003814697266
    5. '           ' → logprob: -19.250003814697266
    6. ')' → logprob: -19.375003814697266
    7. '	a' → logprob: -19.875003814697266
    8. 'а' → logprob: -20.125003814697266
    9. '<|end|>' → logprob: -20.250003814697266
    10. '#a' → logprob: -20.375003814697266

Token 400: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0005973544903099537
    2. ')' → logprob: -7.6255974769592285
    3. ')]
' → logprob: -9.25059700012207
    4. '           ' → logprob: -11.87559700012207
    5. ']' → logprob: -13.25059700012207
    6. ')])' → logprob: -13.87559700012207
    7. ' )' → logprob: -14.37559700012207
    8. ')][' → logprob: -14.50059700012207
    9. ')]
' → logprob: -14.75059700012207
    10. ')
' → logprob: -15.00059700012207

Token 401: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0055955140851438046
    2. 'while' → logprob: -5.880595684051514
    3. ' while' → logprob: -6.380595684051514
    4. '       ' → logprob: -8.005595207214355
    5. '```' → logprob: -8.130595207214355
    6. '		' → logprob: -9.005595207214355
    7. '	       ' → logprob: -9.005595207214355
    8. '	while' → logprob: -9.380595207214355
    9. '   ' → logprob: -9.755595207214355
    10. '<|end|>' → logprob: -10.755595207214355

Token 402: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.025670744478702545
    2. '           ' → logprob: -3.7756707668304443
    3. ' while' → logprob: -6.025670528411865
    4. '	while' → logprob: -12.775671005249023
    5. 'While' → logprob: -13.525671005249023
    6. '		' → logprob: -14.150671005249023
    7. '```' → logprob: -14.525671005249023
    8. '	       ' → logprob: -15.150671005249023
    9. '            
' → logprob: -15.400671005249023
    10. '       ' → logprob: -15.525671005249023

Token 403: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.02325444668531418
    2. ' heap' → logprob: -3.77325439453125
    3. 'len' → logprob: -12.02325439453125
    4. '(heap' → logprob: -12.89825439453125
    5. '
' → logprob: -15.64825439453125
    6. ' len' → logprob: -16.27325439453125
    7. '.heap' → logprob: -16.39825439453125
    8. '```' → logprob: -16.64825439453125
    9. '   ' → logprob: -17.02325439453125
    10. 'he' → logprob: -18.39825439453125

Token 404: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08155468851327896
    2. ':
' → logprob: -2.581554651260376
    3. '):' → logprob: -6.581554889678955
    4. '):
' → logprob: -7.456554889678955
    5. '[' → logprob: -8.581554412841797
    6. '.pop' → logprob: -8.706554412841797
    7. ' and' → logprob: -8.831554412841797
    8. '>:' → logprob: -9.706554412841797
    9. ',' → logprob: -10.581554412841797
    10. 'and' → logprob: -10.706554412841797

Token 405: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.004144407343119383
    2. ',' → logprob: -5.754144191741943
    3. ' ,' → logprob: -7.504144191741943
    4. ' cost' → logprob: -8.504144668579102
    5. 'cost' → logprob: -9.879144668579102
    6. ',c' → logprob: -10.254144668579102
    7. '(cost' → logprob: -10.629144668579102
    8. '           ' → logprob: -10.754144668579102
    9. ' pop' → logprob: -11.379144668579102
    10. '   ' → logprob: -11.754144668579102

Token 406: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' (adapté à ' cost') → logprob: -0.002589096548035741
    2. 'cur' → logprob: -6.627589225769043
    3. ' cost' → logprob: -7.252589225769043
    4. '               ' → logprob: -8.252589225769043
    5. 'curr' → logprob: -8.502589225769043
    6. 'current' → logprob: -10.127589225769043
    7. '(cost' → logprob: -10.627589225769043
    8. 'dist' → logprob: -11.377589225769043
    9. 'c' → logprob: -11.627589225769043
    10. '_cost' → logprob: -13.127589225769043

Token 407: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.688212614681106e-05
    2. ',
' → logprob: -11.375017166137695
    3. ' ,' → logprob: -12.375017166137695
    4. ',current' → logprob: -14.750017166137695
    5. '_,' → logprob: -15.625017166137695
    6. '‌,' → logprob: -15.750017166137695
    7. ',c' → logprob: -16.000017166137695
    8. ',node' → logprob: -16.625017166137695
    9. ',\
' → logprob: -17.125017166137695
    10. ',user' → logprob: -17.500017166137695

Token 408: ' island' (ID: 18149)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.5316383838653564
    2. 'node' → logprob: -1.0316383838653564
    3. ' node' → logprob: -3.5316383838653564
    4. ' u' → logprob: -4.156638145446777
    5. 'is' → logprob: -5.281638145446777
    6. 'curr' → logprob: -6.406638145446777
    7. ' island' → logprob: -6.531638145446777
    8. 'cur' → logprob: -6.531638145446777
    9. 'current' → logprob: -7.156638145446777
    10. ' curr' → logprob: -8.531638145446777

Token 409: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.033727068454027176
    2. '=' → logprob: -3.4087271690368652
    3. ')' → logprob: -9.533726692199707
    4. '   ' → logprob: -12.158726692199707
    5. ' ' → logprob: -14.283726692199707
    6. '       ' → logprob: -14.408726692199707
    7. '           ' → logprob: -14.658726692199707
    8. '    ' → logprob: -14.908726692199707
    9. '               ' → logprob: -15.033726692199707
    10. ')=' → logprob: -15.158726692199707

Token 410: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.02978995256125927
    2. ' heap' → logprob: -3.529789924621582
    3. 'he' → logprob: -10.404789924621582
    4. '   ' → logprob: -11.904789924621582
    5. ' he' → logprob: -13.404789924621582
    6. '(heap' → logprob: -14.779789924621582
    7. '.heap' → logprob: -15.029789924621582
    8. '
' → logprob: -15.654789924621582
    9. '       ' → logprob: -16.7797908782959
    10. '    ' → logprob: -17.4047908782959

Token 411: 'q' (ID: 80)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8094955086708069
    2. ' =' → logprob: -0.8094955086708069
    3. 'q' → logprob: -2.434495449066162
    4. '.pop' → logprob: -4.434495449066162
    5. '               ' → logprob: -6.059495449066162
    6. ')' → logprob: -6.309495449066162
    7. '                   ' → logprob: -6.809495449066162
    8. '           ' → logprob: -6.809495449066162
    9. '[' → logprob: -6.934495449066162
    10. 'pop' → logprob: -7.309495449066162

Token 412: '.he' (ID: 67786)
  Prédit: '.he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.he' → logprob: -7.052377623040229e-05
    2. 'q' → logprob: -9.750070571899414
    3. 'he' → logprob: -12.375070571899414
    4. '.' → logprob: -12.625070571899414
    5. '.heap' → logprob: -13.125070571899414
    6. '.pop' → logprob: -14.375070571899414
    7. ' he' → logprob: -14.750070571899414
    8. '.q' → logprob: -15.125070571899414
    9. '```' → logprob: -15.250070571899414
    10. ' .' → logprob: -15.250070571899414

Token 413: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -4.320199877838604e-07
    2. 'pp' → logprob: -15.375
    3. 'ap' → logprob: -16.25
    4. 'a' → logprob: -17.5
    5. '[' → logprob: -17.75
    6. 'appen' → logprob: -18.75
    7. 'appe' → logprob: -19.375
    8. '(app' → logprob: -19.5
    9. 'pop' → logprob: -20.0
    10. 'q' → logprob: -20.375

Token 414: 'op' (ID: 467)
  Prédit: 'app'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.4714829623699188
    2. 'op' → logprob: -1.7214829921722412
    3. 'ap' → logprob: -1.8464829921722412
    4. 'ush' → logprob: -3.721482992172241
    5. 'p' → logprob: -4.721482753753662
    6. 'pp' → logprob: -5.346482753753662
    7. 'e' → logprob: -7.346482753753662
    8. 'q' → logprob: -8.59648323059082
    9. 'ep' → logprob: -8.72148323059082
    10. 'pop' → logprob: -9.47148323059082

Token 415: '(heap' (ID: 173794)
  Prédit: '(heap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(heap' → logprob: -0.0010610329918563366
    2. 'heap' → logprob: -6.876060962677002
    3. '(' → logprob: -10.62606143951416
    4. '
' → logprob: -13.62606143951416
    5. ' heap' → logprob: -14.00106143951416
    6. '(
' → logprob: -14.37606143951416
    7. '```' → logprob: -14.75106143951416
    8. ' (' → logprob: -15.12606143951416
    9. '   ' → logprob: -15.62606143951416
    10. '(graph' → logprob: -16.001060485839844

Token 416: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2520028352737427
    2. ')
' → logprob: -1.5020028352737427
    3. '               ' → logprob: -9.752002716064453
    4. ')
' → logprob: -11.252002716064453
    5. ')

' → logprob: -13.627002716064453
    6. '           ' → logprob: -14.127002716064453
    7. ')`
' → logprob: -15.877002716064453
    8. '                   ' → logprob: -16.377002716064453
    9. ' )
' → logprob: -16.377002716064453
    10. ' )' → logprob: -16.627002716064453

Token 417: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0023537646047770977
    2. '                
' → logprob: -7.252353668212891
    3. ' if' → logprob: -7.627353668212891
    4. 'if' → logprob: -7.752353668212891
    5. '           ' → logprob: -7.877353668212891
    6. '
' → logprob: -8.75235366821289
    7. '<|end|>' → logprob: -9.75235366821289
    8. '            
' → logprob: -10.25235366821289
    9. '       ' → logprob: -10.50235366821289
    10. ' 
' → logprob: -11.12735366821289

Token 418: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.07139308005571365
    2. ' if' → logprob: -3.0713930130004883
    3. 'if' → logprob: -3.8213930130004883
    4. '           ' → logprob: -7.946393013000488
    5. '                
' → logprob: -8.571393013000488
    6. '
' → logprob: -9.946393013000488
    7. '   ' → logprob: -11.446393013000488
    8. '            
' → logprob: -11.821393013000488
    9. '       ' → logprob: -11.946393013000488
    10. ' 
' → logprob: -12.071393013000488

Token 419: ' If' (ID: 1843)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.006719871424138546
    2. ' if' → logprob: -5.006720066070557
    3. 'cost' → logprob: -13.006719589233398
    4. '               ' → logprob: -13.506719589233398
    5. 'continue' → logprob: -14.756719589233398
    6. '
' → logprob: -14.881719589233398
    7. 'If' → logprob: -16.6317195892334
    8. ' cost' → logprob: -17.3817195892334
    9. '                
' → logprob: -17.7567195892334
    10. '                   ' → logprob: -18.5067195892334

Token 420: ' this' (ID: 495)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.06766646355390549
    2. ' cost' → logprob: -3.317666530609131
    3. 'dist' → logprob: -3.567666530609131
    4. ' dist' → logprob: -6.942666530609131
    5. '   ' → logprob: -13.192666053771973
    6. '	dist' → logprob: -14.942666053771973
    7. '(cost' → logprob: -15.192666053771973
    8. 'distance' → logprob: -15.192666053771973
    9. '               ' → logprob: -15.317666053771973
    10. '_cost' → logprob: -16.69266700744629

Token 421: ' cost' (ID: 3097)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.26995179057121277
    2. ' cost' → logprob: -2.269951820373535
    3. '>' → logprob: -2.894951820373535
    4. 'cost' → logprob: -2.894951820373535
    5. ' ==' → logprob: -4.519951820373535
    6. '_cost' → logprob: -5.144951820373535
    7. ' >=' → logprob: -5.519951820373535
    8. ' !=' → logprob: -7.519951820373535
    9. ' is' → logprob: -7.769951820373535
    10. ' <' → logprob: -8.394951820373535

Token 422: ' is' (ID: 382)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.31329673528671265
    2. '>' → logprob: -1.3132967948913574
    3. '               ' → logprob: -11.1882963180542
    4. '                   ' → logprob: -11.9382963180542
    5. ' ' → logprob: -12.6882963180542
    6. ' <' → logprob: -12.8132963180542
    7. ' >=' → logprob: -13.3132963180542
    8. ' is' → logprob: -13.4382963180542
    9. '                ' → logprob: -14.5632963180542
    10. ' >
' → logprob: -14.6882963180542

Token 423: ' already' (ID: 4279)
  Prédit: 'greater'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'greater' → logprob: -0.5810918211936951
    2. '>' → logprob: -0.8310918211936951
    3. ' greater' → logprob: -5.95609188079834
    4. 'larg' → logprob: -6.08109188079834
    5. ' >' → logprob: -9.33109188079834
    6. 'already' → logprob: -9.58109188079834
    7. ' larger' → logprob: -9.58109188079834
    8. 'more' → logprob: -11.58109188079834
    9. '   ' → logprob: -11.95609188079834
    10. 'higher' → logprob: -12.33109188079834

Token 424: ' larger' (ID: 12384)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.12993723154067993
    2. 'greater' → logprob: -2.129937171936035
    3. 'larg' → logprob: -6.254937171936035
    4. ' greater' → logprob: -7.379937171936035
    5. ' >' → logprob: -8.004937171936035
    6. ' larger' → logprob: -9.504937171936035
    7. '>b' → logprob: -10.879937171936035
    8. 'higher' → logprob: -10.879937171936035
    9. 'more' → logprob: -12.504937171936035
    10. '   ' → logprob: -12.879937171936035

Token 425: ' than' (ID: 1572)
  Prédit: 'than'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'than' → logprob: -0.029434312134981155
    2. ' than' → logprob: -3.7794342041015625
    3. '               ' → logprob: -5.1544342041015625
    4. '                   ' → logprob: -8.279434204101562
    5. '_than' → logprob: -9.279434204101562
    6. 'Than' → logprob: -11.404434204101562
    7. '                ' → logprob: -12.029434204101562
    8. '           ' → logprob: -12.154434204101562
    9. '>' → logprob: -12.654434204101562
    10. '                 ' → logprob: -12.779434204101562

Token 426: ' recorded' (ID: 19460)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.00020354038861114532
    2. ' dist' → logprob: -8.500203132629395
    3. '	dist' → logprob: -17.50020408630371
    4. 'the' → logprob: -18.00020408630371
    5. '   ' → logprob: -18.25020408630371
    6. 'distance' → logprob: -19.37520408630371
    7. '               ' → logprob: -19.50020408630371
    8. '           ' → logprob: -19.87520408630371
    9. '
' → logprob: -20.12520408630371
    10. '```' → logprob: -20.75020408630371

Token 427: ',' (ID: 11)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.11616743355989456
    2. ' dist' → logprob: -2.3661675453186035
    3. 'cost' → logprob: -4.8661675453186035
    4. 'distance' → logprob: -5.2411675453186035
    5. '_dist' → logprob: -6.6161675453186035
    6. ' cost' → logprob: -7.2411675453186035
    7. ' distance' → logprob: -7.9911675453186035
    8. '               ' → logprob: -8.116167068481445
    9. '_cost' → logprob: -9.866167068481445
    10. '   ' → logprob: -10.241167068481445

Token 428: ' skip' (ID: 16677)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.2802642583847046
    2. ' continue' → logprob: -1.7802642583847046
    3. '                   ' → logprob: -2.655264377593994
    4. '               ' → logprob: -5.280264377593994
    5. '   ' → logprob: -8.030263900756836
    6. '	continue' → logprob: -9.280263900756836
    7. '_continue' → logprob: -11.155263900756836
    8. '           ' → logprob: -12.030263900756836
    9. ' ' → logprob: -13.030263900756836
    10. '
' → logprob: -13.155263900756836

Token 429: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.011011981405317783
    2. '                   ' → logprob: -4.886012077331543
    3. 'continue' → logprob: -6.386012077331543
    4. '
' → logprob: -6.886012077331543
    5. ' continue' → logprob: -8.136012077331543
    6. '           ' → logprob: -9.136012077331543
    7. '   ' → logprob: -9.386012077331543
    8. '                
' → logprob: -9.761012077331543
    9. 'if' → logprob: -9.886012077331543
    10. '                       ' → logprob: -11.136012077331543

Token 430: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.009346249513328075
    2. ' continue' → logprob: -5.3843464851379395
    3. '                   ' → logprob: -5.5093464851379395
    4. 'continue' → logprob: -7.5093464851379395
    5. ' if' → logprob: -11.009346008300781
    6. '           ' → logprob: -11.009346008300781
    7. '                
' → logprob: -11.134346008300781
    8. '   ' → logprob: -11.384346008300781
    9. ':
' → logprob: -11.634346008300781
    10. '```' → logprob: -11.884346008300781

Token 431: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7272127866744995
    2. 'if' (adapté à ' if') → logprob: -0.9772127866744995
    3. '               ' → logprob: -1.9772127866744995
    4. ' continue' → logprob: -6.727212905883789
    5. 'continue' → logprob: -7.602212905883789
    6. '                   ' → logprob: -8.602212905883789
    7. '           ' → logprob: -10.977212905883789
    8. '   ' → logprob: -11.227212905883789
    9. '                
' → logprob: -12.102212905883789
    10. '
' → logprob: -12.352212905883789

Token 432: ' dist' (ID: 3601)
  Prédit: ' cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cost' → logprob: -0.10283741354942322
    2. 'cost' → logprob: -2.352837324142456
    3. ' dist' → logprob: -6.102837562561035
    4. 'dist' → logprob: -7.852837562561035
    5. '   ' → logprob: -13.602837562561035
    6. '(cost' → logprob: -14.352837562561035
    7. ' ' → logprob: -16.35283660888672
    8. '	dist' → logprob: -16.97783660888672
    9. '_cost' → logprob: -17.10283660888672
    10. '    ' → logprob: -17.35283660888672

Token 433: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.453737710718997e-05
    2. 'cost' → logprob: -10.875044822692871
    3. ' [' → logprob: -11.875044822692871
    4. '[ind' → logprob: -12.000044822692871
    5. 'is' → logprob: -12.500044822692871
    6. '[c' → logprob: -13.250044822692871
    7. '[i' → logprob: -14.125044822692871
    8. '[cur' → logprob: -14.125044822692871
    9. '
' → logprob: -14.250044822692871
    10. '```' → logprob: -14.375044822692871

Token 434: 'is' (ID: 276)
  Prédit: 'is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.0013692846987396479
    2. ' island' → logprob: -7.126369476318359
    3. '[' → logprob: -7.501369476318359
    4. ' is' → logprob: -12.25136947631836
    5. '
' → logprob: -12.62636947631836
    6. '```' → logprob: -14.12636947631836
    7. ')' → logprob: -14.62636947631836
    8. ']' → logprob: -15.00136947631836
    9. '   ' → logprob: -15.12636947631836
    10. ' ' → logprob: -15.12636947631836

Token 435: 'land' (ID: 2117)
  Prédit: 'land'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'land' → logprob: -0.002100894693285227
    2. '[' → logprob: -6.627100944519043
    3. 't' → logprob: -7.752100944519043
    4. 'al' → logprob: -8.127100944519043
    5. 'lan' → logprob: -11.002100944519043
    6. 'l' → logprob: -11.627100944519043
    7. 'tal' → logprob: -11.877100944519043
    8. ']' → logprob: -12.752100944519043
    9. '>' → logprob: -13.377100944519043
    10. '[t' → logprob: -13.502100944519043

Token 436: ']' (ID: 60)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.10187012702226639
    2. '<' → logprob: -2.351870059967041
    3. ']' → logprob: -6.726870059967041
    4. '   ' → logprob: -8.9768705368042
    5. ']<' → logprob: -9.6018705368042
    6. '[' → logprob: -9.7268705368042
    7. ' ' → logprob: -10.1018705368042
    8. '<int' → logprob: -10.4768705368042
    9. '>' → logprob: -11.3518705368042
    10. '               ' → logprob: -11.6018705368042

Token 437: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.2527960240840912
    2. ' <' → logprob: -1.5027960538864136
    3. '[' → logprob: -7.627796173095703
    4. '<int' → logprob: -9.377796173095703
    5. '   ' → logprob: -10.377796173095703
    6. '<=' → logprob: -10.377796173095703
    7. '<len' → logprob: -11.252796173095703
    8. '<ll' → logprob: -11.252796173095703
    9. 'continue' → logprob: -11.377796173095703
    10. ')' → logprob: -11.502796173095703

Token 438: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.16022545099258423
    2. ' cost' → logprob: -1.9102253913879395
    3. '(cost' → logprob: -13.785225868225098
    4. 'cos' → logprob: -16.78522491455078
    5. '_cost' → logprob: -16.91022491455078
    6. ' ' → logprob: -17.03522491455078
    7. '.cost' → logprob: -17.53522491455078
    8. 'Cost' → logprob: -18.03522491455078
    9. '   ' → logprob: -18.16022491455078
    10. ' kost' → logprob: -18.28522491455078

Token 439: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.018565434962511063
    2. ':
' → logprob: -4.643565654754639
    3. '           ' → logprob: -5.768565654754639
    4. ':' → logprob: -5.893565654754639
    5. 'continue' → logprob: -6.768565654754639
    6. ' continue' → logprob: -7.018565654754639
    7. '                   ' → logprob: -7.268565654754639
    8. '	continue' → logprob: -10.26856517791748
    9. ' or' → logprob: -10.51856517791748
    10. '	           ' → logprob: -10.89356517791748

Token 440: '                   ' (ID: 699)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.09492439031600952
    2. '                   ' → logprob: -2.4699244499206543
    3. ' continue' → logprob: -5.844924449920654
    4. 'continue' → logprob: -5.844924449920654
    5. '	continue' → logprob: -9.844923973083496
    6. '           ' → logprob: -10.219923973083496
    7. '			' → logprob: -10.844923973083496
    8. '_continue' → logprob: -11.344923973083496
    9. '	           ' → logprob: -11.469923973083496
    10. '                       ' → logprob: -11.844923973083496

Token 441: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.2327447235584259
    2. ' continue' → logprob: -1.7327446937561035
    3. '               ' → logprob: -3.7327446937561035
    4. '                   ' → logprob: -4.9827446937561035
    5. '	continue' → logprob: -10.482745170593262
    6. '                       ' → logprob: -10.857745170593262
    7. '           ' → logprob: -12.357745170593262
    8. '_continue' → logprob: -12.357745170593262
    9. '   ' → logprob: -12.607745170593262
    10. '
' → logprob: -13.107745170593262

Token 442: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00025037277373485267
    2. '                
' → logprob: -9.500250816345215
    3. 'for' → logprob: -9.625250816345215
    4. ' for' → logprob: -9.875250816345215
    5. '           ' → logprob: -11.000250816345215
    6. '
' → logprob: -11.000250816345215
    7. '<|end|>' → logprob: -11.750250816345215
    8. '   ' → logprob: -12.875250816345215
    9. '       ' → logprob: -13.000250816345215
    10. '              ' → logprob: -13.250250816345215

Token 443: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0004452083958312869
    2. ' for' → logprob: -8.500445365905762
    3. 'for' → logprob: -8.625445365905762
    4. '```' → logprob: -10.750445365905762
    5. '                
' → logprob: -11.250445365905762
    6. '           ' → logprob: -11.250445365905762
    7. '
' → logprob: -12.375445365905762
    8. '                   ' → logprob: -13.250445365905762
    9. '   ' → logprob: -13.500445365905762
    10. '       ' → logprob: -13.625445365905762

Token 444: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.4340178072452545
    2. 'for' → logprob: -1.3090177774429321
    3. ' for' → logprob: -2.5590178966522217
    4. '           ' → logprob: -5.434017658233643
    5. '                
' → logprob: -8.6840181350708
    6. '   ' → logprob: -10.3090181350708
    7. '            
' → logprob: -11.0590181350708
    8. '       ' → logprob: -11.5590181350708
    9. '	           ' → logprob: -12.0590181350708
    10. '+' → logprob: -12.0590181350708

Token 445: ' If' (ID: 1843)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.003795565338805318
    2. ' for' → logprob: -5.753795623779297
    3. '           ' → logprob: -7.878795623779297
    4. '               ' → logprob: -8.503795623779297
    5. '   ' → logprob: -11.003795623779297
    6. 'if' → logprob: -11.378795623779297
    7. '            
' → logprob: -13.253795623779297
    8. '                
' → logprob: -13.253795623779297
    9. '
' → logprob: -13.378795623779297
    10. '       ' → logprob: -13.628795623779297

Token 446: ' we' (ID: 581)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.061983373016119
    2. ' island' → logprob: -2.811983346939087
    3. '(is' → logprob: -12.686983108520508
    4. ' is' → logprob: -13.061983108520508
    5. '   ' → logprob: -13.061983108520508
    6. ' isla' → logprob: -13.186983108520508
    7. ' ' → logprob: -13.561983108520508
    8. ' ' → logprob: -14.186983108520508
    9. 'dist' → logprob: -14.749483108520508
    10. '```' → logprob: -14.874483108520508

Token 447: ' reached' (ID: 15237)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.8470348119735718
    2. ' ==' → logprob: -1.4720348119735718
    3. '               ' → logprob: -1.8470348119735718
    4. 'is' → logprob: -2.5970349311828613
    5. 'have' → logprob: -3.4720349311828613
    6. ' have' → logprob: -3.7220349311828613
    7. ' reached' → logprob: -3.9720349311828613
    8. ' are' → logprob: -4.722034931182861
    9. '                   ' → logprob: -5.347034931182861
    10. 're' → logprob: -5.347034931182861

Token 448: ' destination' (ID: 13330)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.013115759007632732
    2. ' b' → logprob: -4.388115882873535
    3. 'is' → logprob: -8.263115882873535
    4. 'the' → logprob: -8.388115882873535
    5. ' the' → logprob: -9.513115882873535
    6. ' island' → logprob: -10.263115882873535
    7. '               ' → logprob: -11.763115882873535
    8. '                   ' → logprob: -13.763115882873535
    9. 'destination' → logprob: -14.013115882873535
    10. '(b' → logprob: -14.388115882873535

Token 449: ',' (ID: 11)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.8521737456321716
    2. 'and' → logprob: -1.4771738052368164
    3. ' ==' → logprob: -1.7271738052368164
    4. '==' → logprob: -1.9771738052368164
    5. '               ' → logprob: -3.7271738052368164
    6. '                   ' → logprob: -5.852173805236816
    7. ':
' → logprob: -6.977173805236816
    8. '           ' → logprob: -8.102173805236816
    9. ',' → logprob: -8.352173805236816
    10. ':' → logprob: -8.477173805236816

Token 450: ' can' (ID: 665)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.04531284049153328
    2. '               ' → logprob: -3.6703128814697266
    3. ' break' → logprob: -4.170312881469727
    4. 'break' → logprob: -5.795312881469727
    5. '   ' → logprob: -8.545312881469727
    6. '                       ' → logprob: -9.420312881469727
    7. '           ' → logprob: -11.170312881469727
    8. '                ' → logprob: -11.545312881469727
    9. '                  ' → logprob: -11.670312881469727
    10. '                    
' → logprob: -12.170312881469727

Token 451: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.9667068719863892
    2. ' return' → logprob: -1.4667068719863892
    3. '               ' → logprob: -1.8417068719863892
    4. 'break' → logprob: -2.2167067527770996
    5. 'return' → logprob: -2.8417067527770996
    6. '                   ' → logprob: -2.8417067527770996
    7. '   ' → logprob: -6.2167067527771
    8. ' stop' → logprob: -7.0917067527771
    9. ' ' → logprob: -7.9667067527771
    10. 'terminate' → logprob: -8.091707229614258

Token 452: ' early' (ID: 6047)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0014834359753876925
    2. '                
' → logprob: -7.25148344039917
    3. '                   ' → logprob: -7.75148344039917
    4. '
' → logprob: -8.501482963562012
    5. ' if' → logprob: -10.126482963562012
    6. 'if' → logprob: -11.001482963562012
    7. '                    
' → logprob: -11.126482963562012
    8. '    
' → logprob: -11.126482963562012
    9. '                ' → logprob: -11.251482963562012
    10. '           ' → logprob: -11.626482963562012

Token 453: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00023452966706827283
    2. '                   ' → logprob: -8.875234603881836
    3. '                
' → logprob: -10.000234603881836
    4. '
' → logprob: -10.875234603881836
    5. 'if' → logprob: -11.375234603881836
    6. ' if' → logprob: -11.750234603881836
    7. '           ' → logprob: -12.500234603881836
    8. '                ' → logprob: -13.375234603881836
    9. '              ' → logprob: -13.500234603881836
    10. '```' → logprob: -13.875234603881836

Token 454: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -6.313314952421933e-05
    2. ' if' → logprob: -10.250062942504883
    3. 'if' → logprob: -11.375062942504883
    4. '                   ' → logprob: -11.625062942504883
    5. '           ' → logprob: -13.000062942504883
    6. '                
' → logprob: -13.250062942504883
    7. '```' → logprob: -13.875062942504883
    8. '   ' → logprob: -14.375062942504883
    9. '              ' → logprob: -14.375062942504883
    10. '                ' → logprob: -15.000062942504883

Token 455: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.474920392036438
    2. ' if' → logprob: -1.224920392036438
    3. '               ' → logprob: -2.4749202728271484
    4. '           ' → logprob: -9.724920272827148
    5. '   ' → logprob: -10.599920272827148
    6. '                   ' → logprob: -10.724920272827148
    7. '       ' → logprob: -13.224920272827148
    8. ' ' → logprob: -13.224920272827148
    9. '```' → logprob: -13.474920272827148
    10. 'break' → logprob: -14.099920272827148

Token 456: ' island' (ID: 18149)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.22548142075538635
    2. ' island' → logprob: -1.600481390953064
    3. '   ' → logprob: -11.225481033325195
    4. ' is' → logprob: -11.350481033325195
    5. ' isla' → logprob: -11.600481033325195
    6. '```' → logprob: -12.100481033325195
    7. '(is' → logprob: -12.350481033325195
    8. 'b' → logprob: -12.912981033325195
    9. ' islands' → logprob: -12.975481033325195
    10. ' ' → logprob: -13.100481033325195

Token 457: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.5759425163269043
    2. ' ==' → logprob: -0.8259425163269043
    3. ')==' → logprob: -13.950942993164062
    4. '=' → logprob: -14.075942993164062
    5. ']==' → logprob: -14.450942993164062
    6. '==
' → logprob: -14.825942993164062
    7. '===' → logprob: -15.950942993164062
    8. ')' → logprob: -16.200942993164062
    9. '()==' → logprob: -16.200942993164062
    10. '==(' → logprob: -17.075942993164062

Token 458: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.1269282102584839
    2. 'b' → logprob: -2.1269283294677734
    3. '	b' → logprob: -16.251928329467773
    4. ' ' → logprob: -16.251928329467773
    5. ' ' → logprob: -18.376928329467773
    6. ')b' → logprob: -19.876928329467773
    7. ' б' → logprob: -20.001928329467773
    8. '```' → logprob: -20.626928329467773
    9. '   ' → logprob: -20.751928329467773
    10. '_b' → logprob: -20.876928329467773

Token 459: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.03692791610956192
    2. ':' → logprob: -3.6619279384613037
    3. '                   ' → logprob: -4.786927700042725
    4. '               ' → logprob: -6.161927700042725
    5. '):
' → logprob: -10.036928176879883
    6. '                       ' → logprob: -10.411928176879883
    7. '           ' → logprob: -10.911928176879883
    8. '   ' → logprob: -11.536928176879883
    9. ':return' → logprob: -12.536928176879883
    10. ':
' → logprob: -12.661928176879883

Token 460: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0002942287246696651
    2. '               ' → logprob: -8.62529468536377
    3. '                       ' → logprob: -10.25029468536377
    4. '
' → logprob: -10.37529468536377
    5. ' break' → logprob: -10.37529468536377
    6. 'break' → logprob: -11.75029468536377
    7. ':
' → logprob: -12.50029468536377
    8. '   ' → logprob: -13.75029468536377
    9. '```' → logprob: -14.25029468536377
    10. '           ' → logprob: -14.37529468536377

Token 461: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.5920937061309814
    2. ' break' → logprob: -1.8420937061309814
    3. '                   ' → logprob: -1.9670937061309814
    4. '               ' → logprob: -2.0920937061309814
    5. 'print' → logprob: -3.8420937061309814
    6. ' print' → logprob: -6.467093467712402
    7. '   ' → logprob: -7.092093467712402
    8. '
' → logprob: -7.467093467712402
    9. '                       ' → logprob: -8.342093467712402
    10. '           ' → logprob: -8.717093467712402

Token 462: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0004976287018507719
    2. '
' → logprob: -8.625497817993164
    3. '                
' → logprob: -9.125497817993164
    4. 'for' → logprob: -9.250497817993164
    5. ' for' → logprob: -10.625497817993164
    6. '           ' → logprob: -11.000497817993164
    7. '```' → logprob: -11.000497817993164
    8. '       ' → logprob: -11.250497817993164
    9. '<|end|>' → logprob: -11.375497817993164
    10. '  
' → logprob: -12.250497817993164

Token 463: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00047583275591023266
    2. ' for' → logprob: -8.375475883483887
    3. 'for' → logprob: -8.875475883483887
    4. '                
' → logprob: -10.250475883483887
    5. '           ' → logprob: -10.375475883483887
    6. '
' → logprob: -10.750475883483887
    7. '       ' → logprob: -12.375475883483887
    8. '              ' → logprob: -12.625475883483887
    9. '```' → logprob: -12.875475883483887
    10. '   ' → logprob: -13.250475883483887

Token 464: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.15788564085960388
    2. 'for' → logprob: -2.4078855514526367
    3. '           ' → logprob: -3.4078855514526367
    4. ' for' → logprob: -3.7828855514526367
    5. '   ' → logprob: -9.532885551452637
    6. '       ' → logprob: -10.032885551452637
    7. '                
' → logprob: -10.657885551452637
    8. '            
' → logprob: -11.907885551452637
    9. '
' → logprob: -12.032885551452637
    10. ' ' → logprob: -12.157885551452637

Token 465: ' Relax' (ID: 71256)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0490248017013073
    2. ' for' → logprob: -3.049024820327759
    3. '           ' → logprob: -7.92402458190918
    4. '               ' → logprob: -10.04902458190918
    5. '   ' → logprob: -10.67402458190918
    6. '       ' → logprob: -12.17402458190918
    7. '	for' → logprob: -13.42402458190918
    8. ' ' → logprob: -14.29902458190918
    9. '            
' → logprob: -14.29902458190918
    10. '```' → logprob: -14.92402458190918

Token 466: ' edges' (ID: 22569)
  Prédit: ' edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' edges' → logprob: -0.6013915538787842
    2. ' for' → logprob: -1.7263915538787842
    3. 'for' → logprob: -2.101391553878784
    4. '               ' → logprob: -2.726391553878784
    5. 'edges' → logprob: -2.726391553878784
    6. '   ' → logprob: -5.226391792297363
    7. '           ' → logprob: -5.351391792297363
    8. '       ' → logprob: -5.726391792297363
    9. ' neighbors' → logprob: -5.726391792297363
    10. 'neighbors' → logprob: -6.226391792297363

Token 467: ' from' (ID: 591)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0763574093580246
    2. '           ' → logprob: -3.076357364654541
    3. ' for' → logprob: -3.826357364654541
    4. '       ' → logprob: -5.826357364654541
    5. 'for' → logprob: -6.826357364654541
    6. '<|end|>' → logprob: -8.3263578414917
    7. '	       ' → logprob: -8.3263578414917
    8. '
' → logprob: -8.5763578414917
    9. '   ' → logprob: -8.5763578414917
    10. '                
' → logprob: -8.8263578414917

Token 468: ' current' (ID: 2208)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.08035635203123093
    2. ' island' → logprob: -2.5803563594818115
    3. '   ' → logprob: -7.580356121063232
    4. 'neighbor' → logprob: -8.20535659790039
    5. 'graph' → logprob: -8.70535659790039
    6. 'neighbors' → logprob: -9.45535659790039
    7. 'the' → logprob: -9.70535659790039
    8. 'current' → logprob: -9.83035659790039
    9. 'node' → logprob: -9.95535659790039
    10. '       ' → logprob: -10.70535659790039

Token 469: ' island' (ID: 18149)
  Prédit: ' island'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' island' → logprob: -0.10207530111074448
    2. 'is' → logprob: -2.6020753383636475
    3. '               ' → logprob: -4.102075099945068
    4. ' node' → logprob: -6.477075099945068
    5. '           ' → logprob: -6.602075099945068
    6. '                   ' → logprob: -7.102075099945068
    7. '   ' → logprob: -7.227075099945068
    8. 'node' → logprob: -7.602075099945068
    9. 'neighbor' → logprob: -8.227075576782227
    10. '       ' → logprob: -8.477075576782227

Token 470: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.003627865808084607
    2. '           ' → logprob: -5.878627777099609
    3. ' for' → logprob: -7.378627777099609
    4. '       ' → logprob: -9.75362777709961
    5. 'for' → logprob: -10.12862777709961
    6. '
' → logprob: -10.62862777709961
    7. '<|end|>' → logprob: -10.75362777709961
    8. '                
' → logprob: -10.87862777709961
    9. ',' → logprob: -11.87862777709961
    10. '   ' → logprob: -12.00362777709961

Token 471: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00254284730181098
    2. '           ' → logprob: -6.252542972564697
    3. '       ' → logprob: -8.002542495727539
    4. ' for' → logprob: -8.752542495727539
    5. '<|end|>' → logprob: -9.502542495727539
    6. '   ' → logprob: -11.502542495727539
    7. '                
' → logprob: -11.627542495727539
    8. 'for' → logprob: -12.627542495727539
    9. '
' → logprob: -12.752542495727539
    10. '                   ' → logprob: -12.752542495727539

Token 472: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.614933967590332
    2. 'for' (adapté à ' for') → logprob: -0.864933967590332
    3. '           ' → logprob: -3.614933967590332
    4. '               ' → logprob: -4.489933967590332
    5. '   ' → logprob: -9.739933967590332
    6. '       ' → logprob: -10.864933967590332
    7. '	for' → logprob: -10.864933967590332
    8. ' ' → logprob: -13.364933967590332
    9. '	       ' → logprob: -13.614933967590332
    10. '                   ' → logprob: -13.739933967590332

Token 473: ' nxt' (ID: 160200)
  Prédit: 'neighbor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'neighbor' → logprob: -0.018915608525276184
    2. ' neighbor' → logprob: -4.01891565322876
    3. 'nei' → logprob: -7.89391565322876
    4. 'next' → logprob: -9.018915176391602
    5. '(ne' → logprob: -9.143915176391602
    6. ' nei' → logprob: -9.893915176391602
    7. 'to' → logprob: -10.268915176391602
    8. 'ne' → logprob: -10.393915176391602
    9. 'nbr' → logprob: -11.018915176391602
    10. ' next' → logprob: -12.018915176391602

Token 474: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003700165543705225
    2. ' ,' → logprob: -8.500370025634766
    3. ',is' → logprob: -9.625370025634766
    4. '_,' → logprob: -10.000370025634766
    5. ',_' → logprob: -10.875370025634766
    6. '_is' → logprob: -10.875370025634766
    7. 'is' → logprob: -12.125370025634766
    8. ',n' → logprob: -13.125370025634766
    9. '_neighbor' → logprob: -13.250370025634766
    10. 'n' → logprob: -13.375370025634766

Token 475: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.06836031377315521
    2. 'weight' → logprob: -3.4433603286743164
    3. ' w' → logprob: -4.193360328674316
    4. 'c' → logprob: -4.568360328674316
    5. 'wt' → logprob: -5.943360328674316
    6. ' c' → logprob: -6.443360328674316
    7. 'cost' → logprob: -6.568360328674316
    8. 'price' → logprob: -7.193360328674316
    9. 'n' → logprob: -7.693360328674316
    10. 'edge' → logprob: -7.818360328674316

Token 476: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0022323327139019966
    2. 'in' → logprob: -6.127232551574707
    3. '<|end|>' → logprob: -11.127232551574707
    4. ' ' → logprob: -11.252232551574707
    5. ')' → logprob: -11.877232551574707
    6. '  ' → logprob: -12.627232551574707
    7. '   ' → logprob: -13.377232551574707
    8. '<|end|>' → logprob: -13.502232551574707
    9. ',' → logprob: -13.877232551574707
    10. '	in' → logprob: -14.377232551574707

Token 477: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.16023914515972137
    2. ' graph' → logprob: -1.9102391004562378
    3. '	graph' → logprob: -11.535239219665527
    4. '(graph' → logprob: -12.660239219665527
    5. ' ' → logprob: -13.785239219665527
    6. '   ' → logprob: -15.410239219665527
    7. '_graph' → logprob: -15.785239219665527
    8. '    ' → logprob: -16.16023826599121
    9. '
' → logprob: -16.53523826599121
    10. 'w' → logprob: -16.91023826599121

Token 478: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.7120533811976202e-05
    2. 'is' → logprob: -11.500017166137695
    3. '   ' → logprob: -12.625017166137695
    4. ' [' → logprob: -14.500017166137695
    5. '       ' → logprob: -14.500017166137695
    6. 'cost' → logprob: -14.875017166137695
    7. '(is' → logprob: -15.500017166137695
    8. '           ' → logprob: -15.500017166137695
    9. '[
' → logprob: -15.625017166137695
    10. '=is' → logprob: -15.625017166137695

Token 479: 'is' (ID: 276)
  Prédit: 'is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.00032068457221612334
    2. '[' → logprob: -8.250320434570312
    3. ' island' → logprob: -10.750320434570312
    4. ')' → logprob: -11.000320434570312
    5. ']' → logprob: -12.875320434570312
    6. 'cost' → logprob: -13.125320434570312
    7. ' ' → logprob: -13.250320434570312
    8. '   ' → logprob: -13.375320434570312
    9. '(is' → logprob: -13.375320434570312
    10. '
' → logprob: -13.375320434570312

Token 480: 'land' (ID: 2117)
  Prédit: 'land'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'land' → logprob: -0.00010282796574756503
    2. '[' → logprob: -9.875102996826172
    3. 'st' → logprob: -11.375102996826172
    4. 't' → logprob: -11.875102996826172
    5. 'l' → logprob: -12.250102996826172
    6. 'and' → logprob: -12.375102996826172
    7. 'lands' → logprob: -12.500102996826172
    8. 'le' → logprob: -12.625102996826172
    9. 'ght' → logprob: -12.875102996826172
    10. 'lan' → logprob: -13.000102996826172

Token 481: ']:
' (ID: 22152)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.2188059687614441
    2. '):' → logprob: -1.7188060283660889
    3. ':' → logprob: -4.59380578994751
    4. ']:
' → logprob: -5.96880578994751
    5. ':
' → logprob: -6.21880578994751
    6. ']:' → logprob: -7.09380578994751
    7. '):
' → logprob: -7.84380578994751
    8. '       ' → logprob: -8.093806266784668
    9. '   ' → logprob: -8.343806266784668
    10. '           ' → logprob: -8.468806266784668

Token 482: '                   ' (ID: 699)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.2637103796005249
    2. '                   ' → logprob: -1.513710379600525
    3. ':' → logprob: -5.6387104988098145
    4. ':
' → logprob: -6.1387104988098145
    5. '<|end|>' → logprob: -6.8887104988098145
    6. '                    
' → logprob: -7.1387104988098145
    7. '
' → logprob: -7.2637104988098145
    8. '                
' → logprob: -7.2637104988098145
    9. '                       ' → logprob: -7.5137104988098145
    10. '```' → logprob: -8.138710021972656

Token 483: ' new' (ID: 620)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.1322140395641327
    2. '               ' → logprob: -3.257214069366455
    3. ' if' → logprob: -3.882214069366455
    4. ' new' → logprob: -3.882214069366455
    5. '                       ' → logprob: -4.382214069366455
    6. ' 
' → logprob: -4.382214069366455
    7. '                    
' → logprob: -4.882214069366455
    8. '
' → logprob: -5.757214069366455
    9. '                        
' → logprob: -6.007214069366455
    10. 'if' → logprob: -6.757214069366455

Token 484: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -0.0012280851369723678
    2. '_' → logprob: -6.751227855682373
    3. 'cost' → logprob: -10.626228332519531
    4. ' _' → logprob: -11.376228332519531
    5. '_dist' → logprob: -11.501228332519531
    6. '_COST' → logprob: -12.001228332519531
    7. ' cost' → logprob: -13.126228332519531
    8. '_distance' → logprob: -14.001228332519531
    9. ' =' → logprob: -14.126228332519531
    10. '_c' → logprob: -15.251228332519531

Token 485: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3132619559764862
    2. ' =' → logprob: -1.3132619857788086
    3. '=
' → logprob: -16.688261032104492
    4. ')' → logprob: -16.688261032104492
    5. ' =
' → logprob: -16.813261032104492
    6. ' ' → logprob: -17.063261032104492
    7. '>' → logprob: -18.563261032104492
    8. '＝' → logprob: -18.688261032104492
    9. '   ' → logprob: -19.313261032104492
    10. '=

' → logprob: -20.063261032104492

Token 486: ' cost' (ID: 3097)
  Prédit: ' cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cost' → logprob: -0.38687241077423096
    2. 'cost' → logprob: -1.136872410774231
    3. 'dist' → logprob: -14.261872291564941
    4. ' dist' → logprob: -14.886872291564941
    5. '(cost' → logprob: -15.386872291564941
    6. 'Cost' → logprob: -16.511873245239258
    7. '_cost' → logprob: -16.636873245239258
    8. '                   ' → logprob: -16.886873245239258
    9. ' kost' → logprob: -18.386873245239258
    10. '    ' → logprob: -18.636873245239258

Token 487: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.061974965035915375
    2. '+' → logprob: -2.8119750022888184
    3. '+w' → logprob: -12.56197452545166
    4. ' +
' → logprob: -14.31197452545166
    5. '<|end|>' → logprob: -14.31197452545166
    6. '+n' → logprob: -14.68697452545166
    7. '                   ' → logprob: -15.06197452545166
    8. ',' → logprob: -15.43697452545166
    9. '+
' → logprob: -15.68697452545166
    10. '+k' → logprob: -15.68697452545166

Token 488: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.10020699352025986
    2. ' w' → logprob: -2.3502070903778076
    3. ' ' → logprob: -16.22520637512207
    4. ' ' → logprob: -16.72520637512207
    5. '   ' → logprob: -16.72520637512207
    6. '    ' → logprob: -17.60020637512207
    7. '	w' → logprob: -17.85020637512207
    8. '_w' → logprob: -18.72520637512207
    9. '1' → logprob: -18.85020637512207
    10. '                   ' → logprob: -19.10020637512207

Token 489: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.030367504805326462
    2. '               ' → logprob: -4.030367374420166
    3. '<|end|>' → logprob: -5.030367374420166
    4. '           ' → logprob: -6.530367374420166
    5. '                    
' → logprob: -6.905367374420166
    6. '       ' → logprob: -7.530367374420166
    7. '                       ' → logprob: -8.030367851257324
    8. '                    ' → logprob: -8.155367851257324
    9. '				' → logprob: -8.155367851257324
    10. '                ' → logprob: -8.530367851257324

Token 490: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.008537627756595612
    2. '               ' → logprob: -5.133537769317627
    3. '                    
' → logprob: -7.383537769317627
    4. '           ' → logprob: -7.633537769317627
    5. '                       ' → logprob: -7.883537769317627
    6. '<|end|>' → logprob: -8.258537292480469
    7. '                    ' → logprob: -8.508537292480469
    8. ' if' → logprob: -8.758537292480469
    9. '       ' → logprob: -9.633537292480469
    10. '                  ' → logprob: -9.758537292480469

Token 491: ' if' (ID: 538)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' 
' → logprob: -1.3340768814086914
    2. ' if' → logprob: -1.4590768814086914
    3. '                   ' → logprob: -1.5840768814086914
    4. '<|end|>' → logprob: -2.4590768814086914
    5. 'if' (adapté à ' if') → logprob: -2.8340768814086914
    6. '
' → logprob: -3.0840768814086914
    7. '                    
' → logprob: -3.4590768814086914
    8. ' ' → logprob: -4.459076881408691
    9. '                       ' → logprob: -4.459076881408691
    10. '                           ' → logprob: -4.584076881408691

Token 492: ' dist' (ID: 3601)
  Prédit: ' new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.5282347202301025
    2. 'new' → logprob: -1.2782347202301025
    3. ' dist' → logprob: -2.2782347202301025
    4. 'dist' → logprob: -3.5282347202301025
    5. '	new' → logprob: -14.028234481811523
    6. '	dist' → logprob: -14.153234481811523
    7. '(dist' → logprob: -14.403234481811523
    8. '   ' → logprob: -14.903234481811523
    9. ' ' → logprob: -15.153234481811523
    10. '_dist' → logprob: -15.340734481811523

Token 493: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -8.2994620242971e-06
    2. '[next' → logprob: -12.125008583068848
    3. '[' → logprob: -13.625008583068848
    4. '[new' → logprob: -14.750008583068848
    5. 'n' → logprob: -15.375008583068848
    6. ' [' → logprob: -15.625008583068848
    7. '][' → logprob: -15.750008583068848
    8. '[x' → logprob: -15.875008583068848
    9. '[
' → logprob: -15.875008583068848
    10. ']' → logprob: -16.00000762939453

Token 494: 'xt' (ID: 711)
  Prédit: 'xt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xt' → logprob: -0.0033767418935894966
    2. 'x' → logprob: -6.7533769607543945
    3. '[n' → logprob: -6.7533769607543945
    4. '[x' → logprob: -6.8783769607543945
    5. '[' → logprob: -12.628376960754395
    6. 'ext' → logprob: -13.628376960754395
    7. ']' → logprob: -14.003376960754395
    8. '```' → logprob: -14.128376960754395
    9. 'n' → logprob: -14.753376960754395
    10. 'st' → logprob: -15.378376960754395

Token 495: ']' (ID: 60)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.09098564088344574
    2. '>' → logprob: -2.4659855365753174
    3. '[' → logprob: -6.9659857749938965
    4. ']' → logprob: -7.0909857749938965
    5. ']>' → logprob: -8.840985298156738
    6. '[n' → logprob: -9.840985298156738
    7. '   ' → logprob: -10.965985298156738
    8. ' ]' → logprob: -11.090985298156738
    9. ' ' → logprob: -11.715985298156738
    10. '[new' → logprob: -12.590985298156738

Token 496: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.3872591257095337
    2. '>' → logprob: -1.1372591257095337
    3. '[' → logprob: -7.887259006500244
    4. '   ' → logprob: -13.137259483337402
    5. ' ' → logprob: -13.387259483337402
    6. ' >
' → logprob: -13.637259483337402
    7. '[n' → logprob: -13.762259483337402
    8. '">' → logprob: -14.012259483337402
    9. '>`' → logprob: -14.262259483337402
    10. '>[' → logprob: -14.262259483337402

Token 497: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.25192928314208984
    2. ' new' → logprob: -1.5019292831420898
    3. '[new' → logprob: -16.626930236816406
    4. '_new' → logprob: -16.876930236816406
    5. '	new' → logprob: -17.376930236816406
    6. '```' → logprob: -17.876930236816406
    7. ')new' → logprob: -18.626930236816406
    8. '(new' → logprob: -18.876930236816406
    9. '                   ' → logprob: -19.251930236816406
    10. '$new' → logprob: -19.626930236816406

Token 498: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -5.796184723294573e-06
    2. 'cost' → logprob: -12.250005722045898
    3. 'Cost' → logprob: -15.875005722045898
    4. '_COST' → logprob: -16.2500057220459
    5. '_c' → logprob: -16.3750057220459
    6. ' cost' → logprob: -16.5000057220459
    7. '+' → logprob: -16.5000057220459
    8. '_code' → logprob: -16.8750057220459
    9. '```' → logprob: -17.0000057220459
    10. '_' → logprob: -17.0000057220459

Token 499: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7355526089668274
    2. ':
' → logprob: -0.8605526089668274
    3. '                       ' → logprob: -2.4855525493621826
    4. '):
' → logprob: -4.735552787780762
    5. '                   ' → logprob: -5.985552787780762
    6. '):' → logprob: -7.235552787780762
    7. ' :
' → logprob: -7.360552787780762
    8. '                           ' → logprob: -7.610552787780762
    9. ' :' → logprob: -8.360552787780762
    10. '=' → logprob: -8.860552787780762

Token 500: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.037546977400779724
    2. '                           ' → logprob: -3.7875468730926514
    3. '                   ' → logprob: -5.1625471115112305
    4. '                        
' → logprob: -5.2875471115112305
    5. '                               ' → logprob: -6.7875471115112305
    6. '                        ' → logprob: -6.7875471115112305
    7. '               ' → logprob: -8.28754711151123
    8. '                            
' → logprob: -8.91254711151123
    9. '                    ' → logprob: -8.91254711151123
    10. '                            ' → logprob: -9.16254711151123

Token 501: ' dist' (ID: 3601)
  Prédit: ' dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dist' → logprob: -0.34914109110832214
    2. 'dist' (adapté à ' dist') → logprob: -1.2241411209106445
    3. '                           ' → logprob: -7.5991411209106445
    4. '                       ' → logprob: -8.974141120910645
    5. '                               ' → logprob: -10.974141120910645
    6. '                        ' → logprob: -11.724141120910645
    7. '                            ' → logprob: -11.974141120910645
    8. '_dist' → logprob: -12.099141120910645
    9. '(dist' → logprob: -12.099141120910645
    10. '```' → logprob: -12.224141120910645

Token 502: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -8.41866585687967e-06
    2. '[' → logprob: -12.250008583068848
    3. '[next' → logprob: -14.125008583068848
    4. ' [' → logprob: -14.250008583068848
    5. '=n' → logprob: -14.625008583068848
    6. ' =' → logprob: -14.875008583068848
    7. 'n' → logprob: -15.250008583068848
    8. '```' → logprob: -15.625008583068848
    9. '=' → logprob: -16.12500762939453
    10. '       ' → logprob: -16.25000762939453

Token 503: 'xt' (ID: 711)
  Prédit: 'xt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xt' → logprob: -0.0005641150055453181
    2. '[n' → logprob: -8.125564575195312
    3. 'x' → logprob: -8.250564575195312
    4. 'ext' → logprob: -13.250564575195312
    5. '[x' → logprob: -13.875564575195312
    6. 't' → logprob: -14.000564575195312
    7. ']' → logprob: -14.125564575195312
    8. '[' → logprob: -14.375564575195312
    9. '[next' → logprob: -14.375564575195312
    10. '```' → logprob: -14.500564575195312

Token 504: ']' (ID: 60)
  Prédit: '[n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.2450893670320511
    2. ']' → logprob: -2.870089292526245
    3. ' =' → logprob: -2.995089292526245
    4. '                       ' → logprob: -3.495089292526245
    5. '[next' → logprob: -3.745089292526245
    6. '[' → logprob: -3.995089292526245
    7. '=' → logprob: -4.245089530944824
    8. '                   ' → logprob: -4.995089530944824
    9. '[new' → logprob: -5.245089530944824
    10. '=n' → logprob: -5.495089530944824

Token 505: ' =' (ID: 314)
  Prédit: '[n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.29488107562065125
    2. '=' → logprob: -1.6698811054229736
    3. ' =' → logprob: -2.7948811054229736
    4. '=n' → logprob: -5.5448808670043945
    5. '[new' → logprob: -6.4198808670043945
    6. '[next' → logprob: -8.794880867004395
    7. '=new' → logprob: -9.294880867004395
    8. '[w' → logprob: -9.669880867004395
    9. '[' → logprob: -10.544880867004395
    10. '=w' → logprob: -10.669880867004395

Token 506: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.1602243334054947
    2. ' new' → logprob: -1.9102243185043335
    3. '[new' → logprob: -16.91022491455078
    4. '	new' → logprob: -17.28522491455078
    5. '_new' → logprob: -17.53522491455078
    6. '```' → logprob: -18.28522491455078
    7. '(new' → logprob: -18.41022491455078
    8. '$new' → logprob: -18.66022491455078
    9. 'New' → logprob: -18.78522491455078
    10. '新' → logprob: -18.78522491455078

Token 507: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -2.339278580620885e-06
    2. 'cost' → logprob: -13.000001907348633
    3. '_new' → logprob: -18.625001907348633
    4. ' cost' → logprob: -19.000001907348633
    5. 'Cost' → logprob: -19.125001907348633
    6. '_COST' → logprob: -19.125001907348633
    7. '_code' → logprob: -19.625001907348633
    8. '_cos' → logprob: -19.750001907348633
    9. '-cost' → logprob: -20.375001907348633
    10. '_c' → logprob: -20.375001907348633

Token 508: '
' (ID: 198)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.00016718693950679153
    2. ',' → logprob: -10.250166893005371
    3. '					' → logprob: -10.375166893005371
    4. 'heap' → logprob: -10.625166893005371
    5. '                           ' → logprob: -10.750166893005371
    6. '               ' → logprob: -10.750166893005371
    7. ' heap' → logprob: -11.625166893005371
    8. '                        
' → logprob: -11.875166893005371
    9. '                   ' → logprob: -12.750166893005371
    10. '                        ' → logprob: -12.750166893005371

Token 509: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.018841557204723358
    2. 'heap' → logprob: -4.643841743469238
    3. ' heap' → logprob: -5.268841743469238
    4. '                           ' → logprob: -6.518841743469238
    5. '```' → logprob: -7.143841743469238
    6. '                        
' → logprob: -7.268841743469238
    7. '(heap' → logprob: -7.768841743469238
    8. '               ' → logprob: -8.518841743469238
    9. '                   ' → logprob: -9.268841743469238
    10. '           ' → logprob: -10.268841743469238

Token 510: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' (adapté à ' heap') → logprob: -1.306760805164231e-05
    2. ' heap' → logprob: -11.25001335144043
    3. '                       ' → logprob: -19.50001335144043
    4. '```' → logprob: -20.37501335144043
    5. '                   ' → logprob: -21.50001335144043
    6. 'he' → logprob: -21.75001335144043
    7. '                           ' → logprob: -21.75001335144043
    8. '               ' → logprob: -22.50001335144043
    9. '           ' → logprob: -22.87501335144043
    10. '(heap' → logprob: -23.00001335144043

Token 511: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -1.5048530030981055e-06
    2. '.he' → logprob: -14.000001907348633
    3. 'push' → logprob: -15.125001907348633
    4. 'p' → logprob: -16.000001907348633
    5. 'app' → logprob: -16.625001907348633
    6. '```' → logprob: -16.875001907348633
    7. 'he' → logprob: -17.500001907348633
    8. '.push' → logprob: -17.500001907348633
    9. 'h' → logprob: -17.875001907348633
    10. '.append' → logprob: -18.125001907348633

Token 512: '.he' (ID: 67786)
  Prédit: '.he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.he' → logprob: -9.364928700961173e-05
    2. 'he' → logprob: -9.625093460083008
    3. '.heap' → logprob: -10.750093460083008
    4. 'q' → logprob: -12.500093460083008
    5. 'heap' → logprob: -14.000093460083008
    6. '.' → logprob: -14.625093460083008
    7. '```' → logprob: -15.000093460083008
    8. '.push' → logprob: -15.250093460083008
    9. '_he' → logprob: -15.875093460083008
    10. ' he' → logprob: -16.125093460083008

Token 513: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.00013882013445254415
    2. 'ap' → logprob: -9.125139236450195
    3. 'pp' → logprob: -10.500139236450195
    4. 'p' → logprob: -13.500139236450195
    5. 'push' → logprob: -14.625139236450195
    6. 'q' → logprob: -15.125139236450195
    7. '```' → logprob: -16.625139236450195
    8. 'op' → logprob: -16.625139236450195
    9. 'qp' → logprob: -17.250139236450195
    10. 'appen' → logprob: -17.250139236450195

Token 514: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -3.4285862057004124e-05
    2. 'push' → logprob: -10.75003433227539
    3. 'op' → logprob: -11.37503433227539
    4. 'sh' → logprob: -14.75003433227539
    5. 'app' → logprob: -14.75003433227539
    6. 'p' → logprob: -15.62503433227539
    7. '```' → logprob: -15.87503433227539
    8. 'ap' → logprob: -16.62503433227539
    9. 'pp' → logprob: -16.87503433227539
    10. '[' → logprob: -17.25003433227539

Token 515: '(heap' (ID: 173794)
  Prédit: '(heap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(heap' → logprob: -1.8624639324116288e-06
    2. 'heap' → logprob: -13.875001907348633
    3. '(' → logprob: -14.125001907348633
    4. ' (' → logprob: -17.250001907348633
    5. '```' → logprob: -17.375001907348633
    6. ' heap' → logprob: -17.875001907348633
    7. '(h' → logprob: -19.375001907348633
    8. '(queue' → logprob: -19.625001907348633
    9. '.heap' → logprob: -19.625001907348633
    10. '(
' → logprob: -19.875001907348633

Token 516: ',' (ID: 11)
  Prédit: '(heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(heap' → logprob: -4.961759259458631e-06
    2. '(' → logprob: -13.125004768371582
    3. ' (' → logprob: -13.500004768371582
    4. ',' → logprob: -14.125004768371582
    5. 'heap' → logprob: -14.500004768371582
    6. ' heap' → logprob: -15.750004768371582
    7. '```' → logprob: -16.6250057220459
    8. ')' → logprob: -17.2500057220459
    9. '(h' → logprob: -18.2500057220459
    10. '.heap' → logprob: -18.7500057220459

Token 517: ' (' (ID: 350)
  Prédit: '(new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(new' → logprob: -0.0625232681632042
    2. ' (' → logprob: -2.812523365020752
    3. '(' → logprob: -8.062522888183594
    4. '(n' → logprob: -8.812522888183594
    5. '(cost' → logprob: -9.437522888183594
    6. '(next' → logprob: -11.687522888183594
    7. '(New' → logprob: -13.687522888183594
    8. '   ' → logprob: -14.812522888183594
    9. '[new' → logprob: -15.187522888183594
    10. '(ne' → logprob: -15.187522888183594

Token 518: 'new' (ID: 1389)
  Prédit: 'new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -1.0206720617134124e-05
    2. ' new' → logprob: -11.50001049041748
    3. ')new' → logprob: -17.875009536743164
    4. '                           ' → logprob: -18.125009536743164
    5. '                       ' → logprob: -18.500009536743164
    6. '(new' → logprob: -18.875009536743164
    7. '```' → logprob: -18.875009536743164
    8. '_new' → logprob: -18.875009536743164
    9. '                               ' → logprob: -19.000009536743164
    10. '                                   ' → logprob: -19.500009536743164

Token 519: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -1.1279553291387856e-05
    2. '_' → logprob: -13.000011444091797
    3. '_
' → logprob: -13.625011444091797
    4. 'cost' → logprob: -13.750011444091797
    5. '[n' → logprob: -14.000011444091797
    6. ',' → logprob: -14.000011444091797
    7. '_,' → logprob: -14.250011444091797
    8. '_COST' → logprob: -14.250011444091797
    9. '_c' → logprob: -14.375011444091797
    10. '
' → logprob: -14.375011444091797

Token 520: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00045617512660101056
    2. ',n' → logprob: -7.7504563331604
    3. ' ,' → logprob: -10.625455856323242
    4. ',
' → logprob: -14.625455856323242
    5. ',x' → logprob: -15.250455856323242
    6. ',next' → logprob: -15.750455856323242
    7. '(n' → logprob: -16.875455856323242
    8. 'n' → logprob: -17.000455856323242
    9. '),' → logprob: -17.000455856323242
    10. ')' → logprob: -17.125455856323242

Token 521: ' nxt' (ID: 160200)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.006716079078614712
    2. ' nxt' → logprob: -5.006716251373291
    3. 'nx' → logprob: -15.506715774536133
    4. '	n' → logprob: -15.881715774536133
    5. '```' → logprob: -16.006715774536133
    6. '   ' → logprob: -16.131715774536133
    7. ' n' → logprob: -16.881715774536133
    8. '[n' → logprob: -17.256715774536133
    9. 'x' → logprob: -17.631715774536133
    10. '
' → logprob: -17.631715774536133

Token 522: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0003942112671211362
    2. ')' → logprob: -8.000393867492676
    3. '))
' → logprob: -9.875393867492676
    4. ' ))' → logprob: -13.000393867492676
    5. ')))' → logprob: -13.125393867492676
    6. '                   ' → logprob: -13.875393867492676
    7. '                       ' → logprob: -14.000393867492676
    8. '               ' → logprob: -14.500393867492676
    9. '           ' → logprob: -14.750393867492676
    10. ')
' → logprob: -16.625394821166992

Token 523: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.26041465997695923
    2. 'print' → logprob: -1.5104146003723145
    3. ' print' → logprob: -5.2604146003723145
    4. '```' → logprob: -6.7604146003723145
    5. '       ' → logprob: -6.8854146003723145
    6. '
' → logprob: -7.5104146003723145
    7. '   ' → logprob: -7.7604146003723145
    8. '<|end|>' → logprob: -10.385415077209473
    9. '            
' → logprob: -10.635415077209473
    10. '  
' → logprob: -11.635415077209473

Token 524: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.018665477633476257
    2. '           ' → logprob: -4.143665313720703
    3. ' print' → logprob: -6.518665313720703
    4. 'if' → logprob: -7.018665313720703
    5. '```' → logprob: -9.268665313720703
    6. ' if' → logprob: -9.518665313720703
    7. '       ' → logprob: -9.893665313720703
    8. '   ' → logprob: -10.768665313720703
    9. '
' → logprob: -11.018665313720703
    10. '``' → logprob: -14.768665313720703

Token 525: ' Print' (ID: 13103)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.4833011031150818
    2. 'print' → logprob: -0.9833011031150818
    3. '           ' → logprob: -4.858301162719727
    4. ' if' → logprob: -6.733301162719727
    5. ' print' → logprob: -8.733301162719727
    6. '       ' → logprob: -10.608301162719727
    7. '```' → logprob: -10.858301162719727
    8. '   ' → logprob: -11.358301162719727
    9. '            
' → logprob: -12.983301162719727
    10. '
' → logprob: -12.983301162719727

Token 526: ' the' (ID: 290)
  Prédit: '(dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(dist' → logprob: -0.06281102448701859
    2. 'dist' → logprob: -2.8128111362457275
    3. '(' → logprob: -7.437810897827148
    4. '("' → logprob: -9.437810897827148
    5. ' dist' → logprob: -9.687810897827148
    6. '('' → logprob: -10.062810897827148
    7. '0' → logprob: -10.062810897827148
    8. '(f' → logprob: -11.312810897827148
    9. '(-' → logprob: -12.062810897827148
    10. '()' → logprob: -13.562810897827148

Token 527: ' result' (ID: 1534)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.3146836757659912
    2. ' dist' → logprob: -1.3146836757659912
    3. '(dist' → logprob: -6.93968391418457
    4. '0' → logprob: -8.93968391418457
    5. '"' → logprob: -9.31468391418457
    6. 'distance' → logprob: -10.18968391418457
    7. ' cost' → logprob: -10.68968391418457
    8. 'cost' → logprob: -10.68968391418457
    9. ' result' → logprob: -11.06468391418457
    10. ' (' → logprob: -11.06468391418457

Token 528: ':' (ID: 25)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004411839880049229
    2. 'print' → logprob: -6.004411697387695
    3. ' if' → logprob: -6.629411697387695
    4. '
' → logprob: -8.504411697387695
    5. ' print' → logprob: -8.879411697387695
    6. 'if' → logprob: -8.879411697387695
    7. '```' → logprob: -9.629411697387695
    8. '       ' → logprob: -10.129411697387695
    9. ',' → logprob: -11.629411697387695
    10. '            
' → logprob: -12.129411697387695

Token 529: ' -' (ID: 533)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.41945457458496094
    2. ' print' → logprob: -1.419454574584961
    3. '           ' → logprob: -2.919454574584961
    4. 'if' → logprob: -3.794454574584961
    5. ' if' → logprob: -4.044454574584961
    6. ' dist' → logprob: -5.794454574584961
    7. 'dist' → logprob: -5.919454574584961
    8. ' -' → logprob: -7.919454574584961
    9. '   ' → logprob: -8.419454574584961
    10. '-' → logprob: -8.669454574584961

Token 530: '1' (ID: 16)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.5134503841400146
    2. ' dist' → logprob: -1.0134503841400146
    3. 'print' → logprob: -3.5134503841400146
    4. ' print' → logprob: -5.013450622558594
    5. '(dist' → logprob: -7.263450622558594
    6. '-' → logprob: -7.638450622558594
    7. ' -' → logprob: -7.763450622558594
    8. '-dist' → logprob: -8.138450622558594
    9. '0' → logprob: -9.388450622558594
    10. 'if' → logprob: -10.013450622558594

Token 531: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.4370027780532837
    2. 'if' → logprob: -1.0620027780532837
    3. ',' → logprob: -4.812002658843994
    4. ' ,' → logprob: -10.062003135681152
    5. '(dist' → logprob: -10.687003135681152
    6. 'print' → logprob: -10.812003135681152
    7. 'dist' → logprob: -10.937003135681152
    8. ' dist' → logprob: -12.062003135681152
    9. '           ' → logprob: -12.437003135681152
    10. ' ' → logprob: -12.687003135681152

Token 532: ' unreachable' (ID: 171303)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.048590321093797684
    2. ' dist' → logprob: -3.0485904216766357
    3. '(dist' → logprob: -13.173590660095215
    4. '-dist' → logprob: -14.298590660095215
    5. '```' → logprob: -16.0485897064209
    6. '	dist' → logprob: -16.4235897064209
    7. '           ' → logprob: -16.4235897064209
    8. '-' → logprob: -16.6735897064209
    9. 'print' → logprob: -17.5485897064209
    10. 'Dist' → logprob: -17.6735897064209

Token 533: ',' (ID: 11)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.5999920964241028
    2. '           ' → logprob: -0.9749920964241028
    3. ' print' → logprob: -2.974992036819458
    4. '
' → logprob: -4.724992275238037
    5. ',' → logprob: -4.974992275238037
    6. ' if' → logprob: -5.224992275238037
    7. 'if' → logprob: -6.599992275238037
    8. '   ' → logprob: -9.599991798400879
    9. '(print' → logprob: -9.849991798400879
    10. '		' → logprob: -10.474991798400879

Token 534: ' else' (ID: 1203)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.0202298164367676
    2. ' dist' → logprob: -1.2702298164367676
    3. 'dist' → logprob: -1.6452298164367676
    4. ' print' → logprob: -2.1452298164367676
    5. ' -' → logprob: -3.7702298164367676
    6. '-' → logprob: -4.020229816436768
    7. '-dist' → logprob: -5.895229816436768
    8. '"' → logprob: -6.270229816436768
    9. ''' → logprob: -7.520229816436768
    10. ' f' → logprob: -7.520229816436768

Token 535: ' minimum' (ID: 11085)
  Prédit: ' dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dist' → logprob: -0.525484025478363
    2. 'dist' → logprob: -0.900484025478363
    3. 'print' → logprob: -6.400484085083008
    4. ' print' → logprob: -7.400484085083008
    5. '(dist' → logprob: -9.525484085083008
    6. 'str' → logprob: -12.400484085083008
    7. ' str' → logprob: -13.525484085083008
    8. '   ' → logprob: -14.150484085083008
    9. '-dist' → logprob: -14.150484085083008
    10. '0' → logprob: -14.150484085083008

Token 536: ' cost' (ID: 3097)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.2818343937397003
    2. ' dist' → logprob: -1.656834363937378
    3. ' cost' → logprob: -4.156834602355957
    4. 'cost' → logprob: -4.281834602355957
    5. 'distance' → logprob: -5.031834602355957
    6. '(dist' → logprob: -5.156834602355957
    7. 'print' → logprob: -5.531834602355957
    8. '           ' → logprob: -5.781834602355957
    9. ' distance' → logprob: -6.031834602355957
    10. '(' → logprob: -6.406834602355957

Token 537: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00626802071928978
    2. 'print' → logprob: -5.25626802444458
    3. ' print' → logprob: -8.006267547607422
    4. ' if' → logprob: -8.506267547607422
    5. '
' → logprob: -8.756267547607422
    6. ',' → logprob: -9.006267547607422
    7. '```' → logprob: -9.131267547607422
    8. 'if' → logprob: -10.131267547607422
    9. '       ' → logprob: -10.756267547607422
    10. '            
' → logprob: -11.256267547607422

Token 538: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03618500381708145
    2. 'print' → logprob: -3.4111850261688232
    3. '```' → logprob: -6.411184787750244
    4. ' print' → logprob: -7.161184787750244
    5. '
' → logprob: -10.536185264587402
    6. 'if' → logprob: -10.661185264587402
    7. '            
' → logprob: -10.911185264587402
    8. '``' → logprob: -11.161185264587402
    9. '       ' → logprob: -11.411185264587402
    10. ' if' → logprob: -11.536185264587402

Token 539: ' if' (ID: 538)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.02499057725071907
    2. 'if' (adapté à ' if') → logprob: -4.274990558624268
    3. '           ' → logprob: -5.024990558624268
    4. ' print' → logprob: -5.774990558624268
    5. ' if' → logprob: -6.899990558624268
    6. '```' → logprob: -9.524991035461426
    7. '   ' → logprob: -12.149991035461426
    8. '       ' → logprob: -12.274991035461426
    9. '
' → logprob: -13.899991035461426
    10. '               ' → logprob: -15.274991035461426

Token 540: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.004078401252627373
    2. ' dist' → logprob: -5.504078388214111
    3. '(dist' → logprob: -18.004077911376953
    4. '	dist' → logprob: -18.504077911376953
    5. '   ' → logprob: -19.629077911376953
    6. '-dist' → logprob: -20.004077911376953
    7. '_dist' → logprob: -20.879077911376953
    8. 'Dist' → logprob: -21.629077911376953
    9. '.dist' → logprob: -21.879077911376953
    10. ' ' → logprob: -22.254077911376953

Token 541: '[b' (ID: 40800)
  Prédit: '[b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -4.36574100604048e-06
    2. 'b' → logprob: -13.000004768371582
    3. '[a' → logprob: -13.625004768371582
    4. '[' → logprob: -14.000004768371582
    5. '	b' → logprob: -17.750003814697266
    6. '```' → logprob: -17.875003814697266
    7. '==' → logprob: -18.375003814697266
    8. ' [' → logprob: -18.750003814697266
    9. '<b' → logprob: -19.375003814697266
    10. '=b' → logprob: -19.500003814697266

Token 542: ']' (ID: 60)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.06232213228940964
    2. ' ==' → logprob: -2.8123221397399902
    3. '==-' → logprob: -8.312321662902832
    4. ']==' → logprob: -9.687321662902832
    5. ')==' → logprob: -10.562321662902832
    6. ')' → logprob: -11.437321662902832
    7. ']' → logprob: -12.437321662902832
    8. '==
' → logprob: -12.812321662902832
    9. '[' → logprob: -13.187321662902832
    10. '=' → logprob: -14.687321662902832

Token 543: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.023320598527789116
    2. ' ==' → logprob: -3.7733206748962402
    3. '==-' → logprob: -9.648320198059082
    4. '==
' → logprob: -11.773320198059082
    5. '<' → logprob: -14.398320198059082
    6. '>=' → logprob: -14.773320198059082
    7. '!=' → logprob: -14.898320198059082
    8. '=' → logprob: -14.898320198059082
    9. 'is' → logprob: -15.023320198059082
    10. ')==' → logprob: -15.523320198059082

Token 544: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -4.842555426876061e-06
    2. ' float' → logprob: -12.250004768371582
    3. '=float' → logprob: -18.6250057220459
    4. 'flo' → logprob: -18.7500057220459
    5. '	float' → logprob: -19.6250057220459
    6. '```' → logprob: -20.3750057220459
    7. '   ' → logprob: -20.5000057220459
    8. '(float' → logprob: -20.6250057220459
    9. 'inf' → logprob: -21.1250057220459
    10. '<float' → logprob: -21.2500057220459

Token 545: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -1.2664456789934775e-06
    2. '(' → logprob: -14.000000953674316
    3. ''in' → logprob: -15.125000953674316
    4. '("' → logprob: -16.750001907348633
    5. ''s' → logprob: -17.500001907348633
    6. 'inf' → logprob: -17.625001907348633
    7. '['' → logprob: -17.875001907348633
    8. ' ('' → logprob: -18.750001907348633
    9. '('-' → logprob: -19.250001907348633
    10. '(in' → logprob: -19.250001907348633

Token 546: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -5.228561349213123e-05
    2. ''in' → logprob: -9.875052452087402
    3. ''' → logprob: -15.000052452087402
    4. ' inf' → logprob: -15.500052452087402
    5. '('' → logprob: -15.750052452087402
    6. 'in' → logprob: -17.000051498413086
    7. '-inf' → logprob: -18.500051498413086
    8. '.inf' → logprob: -18.625051498413086
    9. ''inc' → logprob: -19.500051498413086
    10. '_inf' → logprob: -19.500051498413086

Token 547: ''):
' (ID: 26539)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.022445354610681534
    2. '):' → logprob: -3.8974454402923584
    3. ')' → logprob: -6.772445201873779
    4. ''):
' → logprob: -7.397445201873779
    5. '-' → logprob: -9.522445678710938
    6. '):
' → logprob: -10.772445678710938
    7. ':
' → logprob: -11.397445678710938
    8. '):

' → logprob: -11.522445678710938
    9. ' ):
' → logprob: -11.897445678710938
    10. ''):' → logprob: -12.022445678710938

Token 548: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.23001959919929504
    2. ' print' → logprob: -2.2300195693969727
    3. 'print' → logprob: -2.3550195693969727
    4. '           ' → logprob: -6.105019569396973
    5. '                   ' → logprob: -7.605019569396973
    6. '   ' → logprob: -8.605019569396973
    7. '```' → logprob: -9.355019569396973
    8. '       ' → logprob: -10.855019569396973
    9. '-' → logprob: -11.355019569396973
    10. '                       ' → logprob: -11.855019569396973

Token 549: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.012238375842571259
    2. ' print' → logprob: -4.512238502502441
    3. '               ' → logprob: -7.262238502502441
    4. '           ' → logprob: -7.762238502502441
    5. '                   ' → logprob: -10.137238502502441
    6. '   ' → logprob: -11.262238502502441
    7. '```' → logprob: -12.137238502502441
    8. '-' → logprob: -13.137238502502441
    9. '	print' → logprob: -13.512238502502441
    10. '       ' → logprob: -13.637238502502441

Token 550: '(-' (ID: 8087)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.5759735703468323
    2. '(-' → logprob: -0.8259735703468323
    3. '(' → logprob: -10.950973510742188
    4. ' -' → logprob: -11.075973510742188
    5. '("-' → logprob: -14.950973510742188
    6. '()-' → logprob: -15.075973510742188
    7. '   ' → logprob: -15.700973510742188
    8. '('-' → logprob: -16.200973510742188
    9. '           ' → logprob: -17.200973510742188
    10. ' (-' → logprob: -17.200973510742188

Token 551: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.875
    3. '```' → logprob: -18.0
    4. ')' → logprob: -19.125
    5. '<|end|>' → logprob: -20.8125
    6. '   ' → logprob: -20.8125
    7. '۱' → logprob: -20.9375
    8. '-' → logprob: -21.0625
    9. '１' → logprob: -21.375
    10. '১' → logprob: -21.4375

Token 552: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.47412851452827454
    2. ')
' → logprob: -0.9741284847259521
    3. '           ' → logprob: -10.099128723144531
    4. 'else' → logprob: -12.474128723144531
    5. ')
' → logprob: -12.474128723144531
    6. '       ' → logprob: -13.599128723144531
    7. '               ' → logprob: -14.849128723144531
    8. '   ' → logprob: -15.099128723144531
    9. '),' → logprob: -15.224128723144531
    10. ')

' → logprob: -16.34912872314453

Token 553: '           ' (ID: 352)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.21838298439979553
    2. '           ' → logprob: -1.7183829545974731
    3. ' else' → logprob: -4.093382835388184
    4. '               ' → logprob: -9.218382835388184
    5. '```' → logprob: -11.093382835388184
    6. '       ' → logprob: -11.718382835388184
    7. ')' → logprob: -11.968382835388184
    8. '<|end|>' → logprob: -12.718382835388184
    9. '#else' → logprob: -12.843382835388184
    10. 'elif' → logprob: -12.843382835388184

Token 554: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.21169063448905945
    2. '           ' → logprob: -1.7116906642913818
    3. ' else' → logprob: -4.586690425872803
    4. '       ' → logprob: -11.211690902709961
    5. '		' → logprob: -11.711690902709961
    6. '	else' → logprob: -12.336690902709961
    7. '               ' → logprob: -12.711690902709961
    8. '	       ' → logprob: -13.336690902709961
    9. '          ' → logprob: -13.336690902709961
    10. '```' → logprob: -13.461690902709961

Token 555: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.050198908895254135
    2. ' print' → logprob: -3.175198793411255
    3. 'print' → logprob: -5.175199031829834
    4. '(print' → logprob: -7.925199031829834
    5. ',' → logprob: -8.425198554992676
    6. ':' → logprob: -8.425198554992676
    7. '{' → logprob: -8.550198554992676
    8. '   ' → logprob: -8.675198554992676
    9. '           ' → logprob: -9.550198554992676
    10. '                   ' → logprob: -9.550198554992676

Token 556: '               ' (ID: 506)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.7149187326431274
    2. ' print' → logprob: -0.7149187326431274
    3. '               ' → logprob: -3.839918613433838
    4. '           ' → logprob: -10.339919090270996
    5. '                   ' → logprob: -12.964919090270996
    6. '   ' → logprob: -13.464919090270996
    7. ' dist' → logprob: -13.589919090270996
    8. '```' → logprob: -13.839919090270996
    9. 'dist' → logprob: -14.339919090270996
    10. '(print' → logprob: -14.464919090270996

Token 557: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.00015955790877342224
    2. ' print' → logprob: -8.75015926361084
    3. '               ' → logprob: -13.75015926361084
    4. '           ' → logprob: -17.375160217285156
    5. '```' → logprob: -17.500160217285156
    6. '   ' → logprob: -19.500160217285156
    7. '                   ' → logprob: -19.625160217285156
    8. 'printf' → logprob: -20.875160217285156
    9. 'pr' → logprob: -21.625160217285156
    10. '	print' → logprob: -21.750160217285156

Token 558: '(dist' (ID: 78981)
  Prédit: '(dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dist' → logprob: -8.537868779967539e-06
    2. 'dist' → logprob: -12.250008583068848
    3. '(' → logprob: -12.500008583068848
    4. ' dist' → logprob: -18.37500762939453
    5. '(dest' → logprob: -20.75000762939453
    6. 'Dist' → logprob: -20.75000762939453
    7. '(d' → logprob: -20.75000762939453
    8. '(
' → logprob: -21.00000762939453
    9. '(int' → logprob: -21.12500762939453
    10. '(f' → logprob: -21.25000762939453

Token 559: '[b' (ID: 40800)
  Prédit: '[b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: 0.0
    2. 'b' → logprob: -17.875
    3. ' [' → logprob: -19.625
    4. '[' → logprob: -19.75
    5. '```' → logprob: -20.5
    6. ')[' → logprob: -21.125
    7. '[
' → logprob: -21.375
    8. '[B' → logprob: -22.0
    9. '	b' → logprob: -22.25
    10. '\b' → logprob: -22.875

Token 560: '])

' (ID: 21045)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.128163257315464e-07
    2. '))' → logprob: -16.0
    3. ' )' → logprob: -16.25
    4. ')
' → logprob: -17.0
    5. ')}' → logprob: -18.0
    6. ')`' → logprob: -18.5
    7. '})' → logprob: -18.875
    8. '}' → logprob: -19.0
    9. '())' → logprob: -19.75
    10. '),' → logprob: -20.375

Token 561: 'if' (ID: 366)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 562: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.4741172194480896
    2. ' __' → logprob: -0.9741172194480896
    3. '_' → logprob: -10.349117279052734
    4. '___' → logprob: -12.224117279052734
    5. '_name' → logprob: -13.849117279052734
    6. ' ' → logprob: -14.099117279052734
    7. 'name' → logprob: -14.224117279052734
    8. '____' → logprob: -15.349117279052734
    9. '/__' → logprob: -16.099117279052734
    10. ' ' → logprob: -16.599117279052734

Token 563: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.03573983535170555
    2. ' ==' → logprob: -4.285739898681641
    3. '.__' → logprob: -4.410739898681641
    4. ' __' → logprob: -5.285739898681641
    5. '==' → logprob: -6.535739898681641
    6. 'if' → logprob: -6.785739898681641
    7. '__.__' → logprob: -7.535739898681641
    8. 'name' → logprob: -8.03573989868164
    9. '```' → logprob: -8.78573989868164
    10. '(__' → logprob: -9.16073989868164

Token 564: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0005857991054654121
    2. '__.__' → logprob: -7.500586032867432
    3. '__.' → logprob: -10.750585556030273
    4. '==' → logprob: -11.875585556030273
    5. '__('' → logprob: -13.250585556030273
    6. '___' → logprob: -14.375585556030273
    7. '=="' → logprob: -14.500585556030273
    8. '____' → logprob: -14.750585556030273
    9. '__["' → logprob: -15.500585556030273
    10. '__
' → logprob: -15.750585556030273

Token 565: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.6166219711303711
    2. ' ==' → logprob: -1.116621971130371
    3. '==' → logprob: -2.241621971130371
    4. '=="' → logprob: -3.741621971130371
    5. '=='' → logprob: -5.991621971130371
    6. '__.__' → logprob: -8.491621971130371
    7. '__":
' → logprob: -10.991621971130371
    8. '_' → logprob: -11.366621971130371
    9. '```' → logprob: -11.491621971130371
    10. '___' → logprob: -11.741621971130371

Token 566: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.03807225078344345
    2. ''' → logprob: -3.288072347640991
    3. '__' → logprob: -10.78807258605957
    4. ' "__' → logprob: -11.53807258605957
    5. ' '__' → logprob: -15.03807258605957
    6. ''"' → logprob: -16.78807258605957
    7. '("__' → logprob: -17.53807258605957
    8. '"name' → logprob: -17.91307258605957
    9. '"user' → logprob: -18.03807258605957
    10. '"'' → logprob: -18.16307258605957

Token 567: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.12753093242645264
    2. '__' → logprob: -2.127531051635742
    3. '"' → logprob: -7.627531051635742
    4. 'name' → logprob: -10.127531051635742
    5. ''' → logprob: -10.627531051635742
    6. '__":
' → logprob: -10.752531051635742
    7. '_main' → logprob: -11.752531051635742
    8. '```' → logprob: -11.877531051635742
    9. '___' → logprob: -12.377531051635742
    10. '__':
' → logprob: -13.252531051635742

Token 568: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.017560934647917747
    2. '__' → logprob: -4.142560958862305
    3. '__':
' → logprob: -6.517560958862305
    4. '():
' → logprob: -10.642560958862305
    5. '__.' → logprob: -11.267560958862305
    6. '__:' → logprob: -12.517560958862305
    7. '__()
' → logprob: -13.142560958862305
    8. '__.__' → logprob: -13.267560958862305
    9. '__["' → logprob: -13.267560958862305
    10. '__
' → logprob: -15.142560958862305

Token 569: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2258271872997284
    2. 'solve' → logprob: -1.7258272171020508
    3. ' solve' → logprob: -3.725827217102051
    4. '.solve' → logprob: -11.47582721710205
    5. '```' → logprob: -11.72582721710205
    6. '	s' → logprob: -12.60082721710205
    7. '   ' → logprob: -13.72582721710205
    8. '  ' → logprob: -14.60082721710205
    9. '    ' → logprob: -14.85082721710205
    10. '    
' → logprob: -14.85082721710205

Token 570: ' solve' (ID: 17722)
  Prédit: 'solve'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solve' (adapté à ' solve') → logprob: -3.128163257315464e-07
    2. ' solve' → logprob: -15.125
    3. '   ' → logprob: -18.375
    4. 'resolve' → logprob: -19.875
    5. '.solve' → logprob: -20.875
    6. 'save' → logprob: -22.125
    7. 's' → logprob: -22.625
    8. 'import' → logprob: -23.25
    9. 'validate' → logprob: -23.375
    10. '```' → logprob: -23.75

Token 571: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 569
Tokens correctement prédits (1ère position, stricte): 210
Tokens correctement prédits (1ère position, avec adaptation): 226
Tokens correctement prédits (top 10): 413
Précision stricte (1ère position): 36.91%
Précision adaptée (1ère position): 39.72%
Précision (top 10): 72.58%
================================================================================
