================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:02:53
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def decrypt_candidates(s):
    # For each character c in s (encrypted string), find possible original characters that map to c after encryption.
    # Encryption replaces the first occurrence of letter x>='b' with the letter before it.
    # So for each character c in the encrypted string:
    # - The original was either c (if not changed), or
    # - If c is between 'a' and 'y' inclusive, original could be c or chr(ord(c)+1)
    # But only one character indexed from left to right got changed (the first occurrence of some letter x).
    # So for each candidate original string, exactly zero or one character must have been decremented during encryption.
    # Therefore, we must generate all possible strings that map to encrypted s by reversing this rule.

    n = len(s)
    candidates = []

    # We try all possibilities where we pick an index i at which the original had a letter c+1 instead of c.
    # If at index i, s[i] != 'z' (because encryption only decrements letters from b to z by 1)
    # then original can be s[i] or s[i]+1 (if s[i]+1 <= 'z')
    # And for all other positions j!=i, original[j] must be s[j].
    # Also we must respect the special rule that only the first occurrence of a letter can be changed.
    # The original encryption change rule decrements the first occurrence of one letter in the original string.
    # On decryption, we must find all strings that could have produced s by changing exactly one character (or none).

    # To find candidates, consider:
    # - No change candidate: original = s
    # - For every letter c in 'a'..'y', find the first occurrence of c in s,
    #   and try to change that occurrence back to chr(ord(c)+1).

    candidates_set = set()
    candidates_set.add(s)

    # Create a map of letter -> first occurrence indices in s
    first_occurrence = {}
    for i, ch in enumerate(s):
        if ch not in first_occurrence:
            first_occurrence[ch] = i

    for c in map(chr, range(ord('a'), ord('y') + 1)):
        if c in first_occurrence:
            i = first_occurrence[c]
            orig_char = chr(ord(c) + 1)
            # Replace s[i] by orig_char
            candidate = s[:i] + orig_char + s[i + 1:]
            candidates_set.add(candidate)

    candidates = sorted(candidates_set)

    return candidates


def main():
    while True:
        line = input()
        if line == '#':
            break
        candidates = decrypt_candidates(line)
        print(len(candidates))
        if len(candidates) <= 10:
            for c in candidates:
                print(c)
        else:
            for c in candidates[:5]:
                print(c)
            for c in candidates[-5:]:
                print(c)


if __name__ == '__main__':
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' decrypt' (ID: 81444)
  → Token d'amorce (pas de prédiction)

Token 2: '_candidates' (ID: 186937)
  → Token d'amorce (pas de prédiction)

Token 3: '(s' (ID: 1858)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.08569494634866714
    2. '(:' → logprob: -3.0856950283050537
    3. '():' → logprob: -3.7106950283050537
    4. ':' → logprob: -4.710694789886475
    5. '_' → logprob: -6.585694789886475
    6. '(_:' → logprob: -7.960694789886475
    7. '_:' → logprob: -8.085695266723633
    8. '```' → logprob: -8.460695266723633
    9. '(":' → logprob: -8.710695266723633
    10. '[:' → logprob: -9.335695266723633

Token 4: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.011810814030468464
    2. ')' → logprob: -4.511810779571533
    3. ':' → logprob: -7.886810779571533
    4. '[' → logprob: -8.761811256408691
    5. ',' → logprob: -9.136811256408691
    6. 'u' → logprob: -10.011811256408691
    7. '_' → logprob: -11.011811256408691
    8. '[]):' → logprob: -11.136811256408691
    9. ' ):' → logprob: -11.386811256408691
    10. 'e' → logprob: -11.761811256408691

Token 5: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07623691111803055
    2. '   ' → logprob: -2.7012369632720947
    3. '```' → logprob: -5.701236724853516
    4. '():' → logprob: -6.951236724853516
    5. ':
' → logprob: -7.451236724853516
    6. '(' → logprob: -7.576236724853516
    7. '\' → logprob: -9.326236724853516
    8. ' :' → logprob: -9.451236724853516
    9. '    
' → logprob: -9.576236724853516
    10. '    ' → logprob: -9.576236724853516

Token 6: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.41707149147987366
    2. '```' → logprob: -1.9170714616775513
    3. ''' → logprob: -2.917071580886841
    4. '[' → logprob: -3.292071580886841
    5. ' ' → logprob: -3.792071580886841
    6. '    ' → logprob: -3.917071580886841
    7. ' if' → logprob: -4.792071342468262
    8. ' return' → logprob: -4.917071342468262
    9. '"' → logprob: -5.042071342468262
    10. '\' → logprob: -5.417071342468262

Token 7: ' For' (ID: 2214)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.996586799621582
    2. ' return' → logprob: -1.746586799621582
    3. ' #' → logprob: -2.246586799621582
    4. ' candidates' → logprob: -2.496586799621582
    5. ' """' → logprob: -2.871586799621582
    6. ' possible' → logprob: -3.246586799621582
    7. 'return' → logprob: -3.496586799621582
    8. ' pass' → logprob: -3.996586799621582
    9. 'possible' → logprob: -4.121586799621582
    10. ' ' → logprob: -4.246586799621582

Token 8: ' each' (ID: 2454)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.21160149574279785
    2. ' c' → logprob: -1.7116014957427979
    3. 'c' → logprob: -5.836601257324219
    4. '  ' → logprob: -6.211601257324219
    5. ' i' → logprob: -6.336601257324219
    6. ' word' → logprob: -7.086601257324219
    7. ' token' → logprob: -7.086601257324219
    8. ' candidate' → logprob: -7.461601257324219
    9. ' w' → logprob: -8.461601257324219
    10. '   ' → logprob: -8.586601257324219

Token 9: ' character' (ID: 5855)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3426888585090637
    2. ' token' → logprob: -2.092688798904419
    3. '_' → logprob: -2.967688798904419
    4. ' candidate' → logprob: -3.342688798904419
    5. ' word' → logprob: -3.592688798904419
    6. ' c' → logprob: -3.842688798904419
    7. 'c' → logprob: -4.592689037322998
    8. ' _' → logprob: -5.592689037322998
    9. ' line' → logprob: -5.592689037322998
    10. ' char' → logprob: -6.217689037322998

Token 10: ' c' (ID: 274)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.45968472957611084
    2. ' ' → logprob: -2.0846848487854004
    3. ' in' → logprob: -2.4596848487854004
    4. ' ,' → logprob: -2.5846848487854004
    5. ':' → logprob: -3.4596848487854004
    6. '   ' → logprob: -3.5846848487854004
    7. '    ' → logprob: -4.3346848487854
    8. '  ' → logprob: -5.9596848487854
    9. ' :' → logprob: -6.4596848487854
    10. ' =' → logprob: -7.2096848487854

Token 11: ' in' (ID: 306)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6193997859954834
    2. ' in' → logprob: -1.6193997859954834
    3. ' ' → logprob: -2.6193997859954834
    4. ':' → logprob: -2.6193997859954834
    5. ' ,' → logprob: -2.8693997859954834
    6. '   ' → logprob: -4.2444000244140625
    7. ' :' → logprob: -4.6194000244140625
    8. ''' → logprob: -4.8694000244140625
    9. ' i' → logprob: -4.8694000244140625
    10. '    ' → logprob: -5.2444000244140625

Token 12: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.023801010102033615
    2. 's' → logprob: -3.77380108833313
    3. ' the' → logprob: -7.773800849914551
    4. ' ' → logprob: -9.89880084991455
    5. 'the' → logprob: -10.52380084991455
    6. ' range' → logprob: -10.64880084991455
    7. '   ' → logprob: -11.77380084991455
    8. 'range' → logprob: -12.52380084991455
    9. '  ' → logprob: -12.77380084991455
    10. ' a' → logprob: -12.77380084991455

Token 13: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5996752977371216
    2. ':' → logprob: -0.8496752977371216
    3. '   ' → logprob: -4.349675178527832
    4. ' ,' → logprob: -5.724675178527832
    5. '    ' → logprob: -5.974675178527832
    6. ' :' → logprob: -6.849675178527832
    7. ' ' → logprob: -6.974675178527832
    8. '(' → logprob: -7.974675178527832
    9. '       ' → logprob: -7.974675178527832
    10. ''' → logprob: -8.224675178527832

Token 14: 'encrypted' (ID: 103960)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9901570677757263
    2. '):' → logprob: -0.9901570677757263
    3. ' )' → logprob: -2.115157127380371
    4. '   ' → logprob: -2.990157127380371
    5. ' ):' → logprob: -3.115157127380371
    6. '),' → logprob: -4.115157127380371
    7. ' ),' → logprob: -4.490157127380371
    8. ',' → logprob: -5.115157127380371
    9. ':' → logprob: -5.990157127380371
    10. '    ' → logprob: -6.365157127380371

Token 15: ' string' (ID: 1621)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.08304391801357269
    2. '):
' → logprob: -3.5830438137054443
    3. ')' → logprob: -4.208044052124023
    4. ' ):' → logprob: -4.458044052124023
    5. '),' → logprob: -4.708044052124023
    6. '   ' → logprob: -5.458044052124023
    7. 'string' → logprob: -5.583044052124023
    8. 's' → logprob: -6.333044052124023
    9. ' ' → logprob: -6.958044052124023
    10. ' )' → logprob: -7.083044052124023

Token 16: '),' (ID: 936)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.21480710804462433
    2. ')' → logprob: -2.0898070335388184
    3. ',' → logprob: -2.8398070335388184
    4. ' ):' → logprob: -5.839807033538818
    5. '   ' → logprob: -5.964807033538818
    6. '),' → logprob: -6.089807033538818
    7. ' )' → logprob: -6.714807033538818
    8. ' ,' → logprob: -7.214807033538818
    9. ':' → logprob: -7.339807033538818
    10. ' ' → logprob: -8.464807510375977

Token 17: ' find' (ID: 1646)
  Prédit: '    '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '    ' → logprob: -0.40337297320365906
    2. ' ' → logprob: -1.4033730030059814
    3. ' return' → logprob: -3.7783730030059814
    4. '<|end|>' → logprob: -4.278372764587402
    5. '   ' → logprob: -4.403372764587402
    6. ' generate' → logprob: -5.028372764587402
    7. ',' → logprob: -5.653372764587402
    8. ' continue' → logprob: -5.778372764587402
    9. '        ' → logprob: -6.278372764587402
    10. 'return' → logprob: -6.403372764587402

Token 18: ' possible' (ID: 4149)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -1.0306943655014038
    2. ' a' → logprob: -1.6556943655014038
    3. ' all' → logprob: -1.9056943655014038
    4. ' its' → logprob: -2.2806944847106934
    5. ' ' → logprob: -2.6556944847106934
    6. 'all' → logprob: -3.9056944847106934
    7. 'possible' → logprob: -3.9056944847106934
    8. ' possible' → logprob: -4.155694484710693
    9. 'the' → logprob: -4.280694484710693
    10. 'a' → logprob: -4.405694484710693

Token 19: ' original' (ID: 4756)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.09811946749687195
    2. ' s' → logprob: -3.3481194972991943
    3. ' ' → logprob: -3.8481194972991943
    4. '```' → logprob: -4.723119258880615
    5. '_' → logprob: -4.973119258880615
    6. '_s' → logprob: -5.598119258880615
    7. '   ' → logprob: -5.973119258880615
    8. ' candidates' → logprob: -6.348119258880615
    9. ' ord' → logprob: -6.598119258880615
    10. '  ' → logprob: -6.848119258880615

Token 20: ' characters' (ID: 9862)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.9628535509109497
    2. ' characters' → logprob: -1.3378535509109497
    3. 'characters' → logprob: -2.46285343170166
    4. '_chars' → logprob: -2.96285343170166
    5. ' ' → logprob: -3.08785343170166
    6. '_' → logprob: -3.21285343170166
    7. '```' → logprob: -3.58785343170166
    8. '   ' → logprob: -4.08785343170166
    9. ' s' → logprob: -4.21285343170166
    10. 'c' → logprob: -4.71285343170166

Token 21: ' that' (ID: 484)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2408829778432846
    2. '   ' → logprob: -1.7408829927444458
    3. ',' → logprob: -4.615882873535156
    4. ' :' → logprob: -5.490882873535156
    5. '(' → logprob: -5.865882873535156
    6. ' =' → logprob: -5.990882873535156
    7. ' ' → logprob: -5.990882873535156
    8. ':
' → logprob: -6.240882873535156
    9. ''' → logprob: -6.490882873535156
    10. 'def' → logprob: -6.490882873535156

Token 22: ' map' (ID: 4014)
  Prédit: ' could'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' could' → logprob: -0.021327676251530647
    2. ' can' → logprob: -4.021327495574951
    3. ' may' → logprob: -6.896327495574951
    4. 'could' → logprob: -7.396327495574951
    5. ' might' → logprob: -7.521327495574951
    6. ' are' → logprob: -8.14632797241211
    7. ' ' → logprob: -8.64632797241211
    8. '   ' → logprob: -8.89632797241211
    9. '```' → logprob: -9.52132797241211
    10. ' would' → logprob: -9.89632797241211

Token 23: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.0383429117500782
    2. 'to' → logprob: -3.4133429527282715
    3. '_to' → logprob: -6.2883429527282715
    4. ' =' → logprob: -7.4133429527282715
    5. '   ' → logprob: -7.5383429527282715
    6. '_' → logprob: -7.6633429527282715
    7. '=' → logprob: -7.9133429527282715
    8. ' ' → logprob: -8.663342475891113
    9. ' into' → logprob: -9.038342475891113
    10. '```' → logprob: -9.163342475891113

Token 24: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.21103455126285553
    2. ' '' → logprob: -2.9610345363616943
    3. 'c' → logprob: -3.3360345363616943
    4. ' s' → logprob: -3.5860345363616943
    5. ' a' → logprob: -3.5860345363616943
    6. ' the' → logprob: -4.586034774780273
    7. ''' → logprob: -4.836034774780273
    8. ' either' → logprob: -4.961034774780273
    9. 's' → logprob: -5.336034774780273
    10. ' ord' → logprob: -5.711034774780273

Token 25: ' after' (ID: 1934)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.19007740914821625
    2. '   ' → logprob: -1.9400774240493774
    3. ':
' → logprob: -4.315077304840088
    4. ' :' → logprob: -5.690077304840088
    5. ' ' → logprob: -6.190077304840088
    6. '
' → logprob: -6.315077304840088
    7. 'def' → logprob: -6.690077304840088
    8. '```' → logprob: -6.940077304840088
    9. '):' → logprob: -7.065077304840088
    10. '    
' → logprob: -7.440077304840088

Token 26: ' encryption' (ID: 48827)
  Prédit: ' encryption'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' encryption' → logprob: -0.5462431311607361
    2. ' applying' → logprob: -1.6712431907653809
    3. ' ord' → logprob: -2.421243190765381
    4. ' de' → logprob: -3.671243190765381
    5. ' encrypt' → logprob: -3.921243190765381
    6. ' a' → logprob: -4.296243190765381
    7. 'encrypt' → logprob: -4.296243190765381
    8. ' shift' → logprob: -4.671243190765381
    9. ' hashing' → logprob: -4.921243190765381
    10. ' apply' → logprob: -4.921243190765381

Token 27: '.
' (ID: 558)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.11174540966749191
    2. '   ' → logprob: -2.6117453575134277
    3. '```' → logprob: -4.861745357513428
    4. ':
' → logprob: -4.986745357513428
    5. ' :' → logprob: -5.361745357513428
    6. '\' → logprob: -5.861745357513428
    7. '\n' → logprob: -6.236745357513428
    8. ' ' → logprob: -6.736745357513428
    9. '
' → logprob: -6.986745357513428
    10. ',' → logprob: -6.986745357513428

Token 28: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5698450207710266
    2. ':' → logprob: -1.6948449611663818
    3. '```' → logprob: -2.569844961166382
    4. '\' → logprob: -3.694844961166382
    5. ' ' → logprob: -3.819844961166382
    6. '\n' → logprob: -3.944844961166382
    7. '`' → logprob: -4.319845199584961
    8. '    ' → logprob: -4.444845199584961
    9. '"' → logprob: -4.694845199584961
    10. '
' → logprob: -4.819845199584961

Token 29: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06788091361522675
    2. 'possible' → logprob: -4.067881107330322
    3. '```' → logprob: -4.817881107330322
    4. '\n' → logprob: -4.817881107330322
    5. '\' → logprob: -5.067881107330322
    6. ' candidates' → logprob: -5.442881107330322
    7. ' possible' → logprob: -5.442881107330322
    8. 'def' → logprob: -5.567881107330322
    9. '    ' → logprob: -6.442881107330322
    10. '
' → logprob: -6.442881107330322

Token 30: ' Encryption' (ID: 126267)
  Prédit: ' possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' possible' → logprob: -1.1812573671340942
    2. '   ' → logprob: -2.0562572479248047
    3. 'possible' → logprob: -2.3062572479248047
    4. ' 
' → logprob: -2.4312572479248047
    5. ' candidates' → logprob: -2.5562572479248047
    6. ' ' → logprob: -2.6812572479248047
    7. ' \' → logprob: -3.0562572479248047
    8. ' def' → logprob: -3.8062572479248047
    9. '    ' → logprob: -3.8062572479248047
    10. '\n' → logprob: -4.181257247924805

Token 31: ' replaces' (ID: 82503)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.2034555673599243
    2. '_' → logprob: -1.4534555673599243
    3. ' involves' → logprob: -1.8284555673599243
    4. '=' → logprob: -2.3284554481506348
    5. ')' → logprob: -3.2034554481506348
    6. ' is' → logprob: -3.2034554481506348
    7. '_mapping' → logprob: -3.7034554481506348
    8. '_map' → logprob: -3.8284554481506348
    9. 's' → logprob: -4.203455448150635
    10. 'def' → logprob: -4.453455448150635

Token 32: ' the' (ID: 290)
  Prédit: ' each'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' each' → logprob: -0.5409350991249084
    2. ' a' → logprob: -2.0409350395202637
    3. ' c' → logprob: -2.2909350395202637
    4. ' vowels' → logprob: -2.7909350395202637
    5. 'each' → logprob: -4.165935039520264
    6. ' '' → logprob: -4.165935039520264
    7. 'c' → logprob: -4.290935039520264
    8. ' the' → logprob: -4.415935039520264
    9. ' spaces' → logprob: -4.415935039520264
    10. ' every' → logprob: -4.540935039520264

Token 33: ' first' (ID: 1577)
  Prédit: ' character'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' character' → logprob: -0.5218484997749329
    2. ' original' → logprob: -1.396848440170288
    3. ' ' → logprob: -2.771848440170288
    4. ' c' → logprob: -3.521848440170288
    5. ' ord' → logprob: -5.146848678588867
    6. ' corresponding' → logprob: -5.146848678588867
    7. ' char' → logprob: -5.146848678588867
    8. 'c' → logprob: -5.271848678588867
    9. ' space' → logprob: -5.271848678588867
    10. ' input' → logprob: -5.646848678588867

Token 34: ' occurrence' (ID: 55807)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9835087060928345
    2. ' character' → logprob: -1.1085087060928345
    3. '_' → logprob: -1.4835087060928345
    4. ' _' → logprob: -3.858508586883545
    5. ' space' → logprob: -4.358508586883545
    6. ' letter' → logprob: -4.608508586883545
    7. ' char' → logprob: -5.733508586883545
    8. 'character' → logprob: -5.858508586883545
    9. ' occurrence' → logprob: -5.858508586883545
    10. '_occ' → logprob: -6.483508586883545

Token 35: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.08574735373258591
    2. '_' → logprob: -3.085747241973877
    3. ' ' → logprob: -3.460747241973877
    4. ' _' → logprob: -6.085747241973877
    5. 's' → logprob: -6.460747241973877
    6. ')' → logprob: -8.585747718811035
    7. ' in' → logprob: -9.085747718811035
    8. 'of' → logprob: -9.210747718811035
    9. '_of' → logprob: -9.585747718811035
    10. ''' → logprob: -9.710747718811035

Token 36: ' letter' (ID: 10263)
  Prédit: ' c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' c' → logprob: -1.026881217956543
    2. ' a' → logprob: -1.151881217956543
    3. ' the' → logprob: -2.026881217956543
    4. ' each' → logprob: -2.776881217956543
    5. 'c' → logprob: -3.401881217956543
    6. 'a' → logprob: -3.401881217956543
    7. ' '' → logprob: -4.151881217956543
    8. 'the' → logprob: -4.901881217956543
    9. ' s' → logprob: -5.151881217956543
    10. ''' → logprob: -5.151881217956543

Token 37: ' x' (ID: 1215)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.7216161489486694
    2. ' with' → logprob: -1.5966161489486694
    3. ' ' → logprob: -2.346616268157959
    4. '_' → logprob: -3.221616268157959
    5. ' in' → logprob: -3.346616268157959
    6. ''s' → logprob: -3.471616268157959
    7. ' c' → logprob: -3.596616268157959
    8. ' '' → logprob: -3.721616268157959
    9. ' s' → logprob: -4.346616268157959
    10. ''' → logprob: -4.346616268157959

Token 38: '>' (ID: 29)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.0399271249771118
    2. '_' → logprob: -1.2899271249771118
    3. ' in' → logprob: -2.4149270057678223
    4. ' with' → logprob: -2.6649270057678223
    5. 's' → logprob: -3.1649270057678223
    6. ':' → logprob: -3.4149270057678223
    7. ',' → logprob: -4.039927005767822
    8. ''' → logprob: -4.039927005767822
    9. ' =' → logprob: -4.289927005767822
    10. '=' → logprob: -4.414927005767822

Token 39: '='' (ID: 2053)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.6976774334907532
    2. ' with' → logprob: -1.1976773738861084
    3. ' ' → logprob: -2.3226773738861084
    4. 's' → logprob: -3.6976773738861084
    5. 'with' → logprob: -4.4476776123046875
    6. 'in' → logprob: -4.5726776123046875
    7. ' by' → logprob: -4.8226776123046875
    8. ''' → logprob: -5.0726776123046875
    9. ''s' → logprob: -5.0726776123046875
    10. ',' → logprob: -5.1976776123046875

Token 40: 'b' (ID: 65)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.04777182266116142
    2. 'b' → logprob: -4.29777193069458
    3. ''' → logprob: -5.17277193069458
    4. 'c' → logprob: -5.42277193069458
    5. 'd' → logprob: -5.67277193069458
    6. 'm' → logprob: -5.92277193069458
    7. 'e' → logprob: -5.98527193069458
    8. 'а' → logprob: -5.98527193069458
    9. 'p' → logprob: -6.23527193069458
    10. 'A' → logprob: -6.54777193069458

Token 41: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.1915750354528427
    2. '')' → logprob: -3.066575050354004
    3. ' '' → logprob: -3.691575050354004
    4. ':' → logprob: -4.191575050354004
    5. 'x' → logprob: -4.816575050354004
    6. ')' → logprob: -4.816575050354004
    7. '':' → logprob: -4.941575050354004
    8. 'a' → logprob: -4.941575050354004
    9. 'e' → logprob: -5.066575050354004
    10. ' ')' → logprob: -5.066575050354004

Token 42: ' with' (ID: 483)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2062227874994278
    2. ' :' → logprob: -2.2062227725982666
    3. ',' → logprob: -3.9562227725982666
    4. ' ' → logprob: -4.831223011016846
    5. ' =' → logprob: -4.831223011016846
    6. '):' → logprob: -4.956223011016846
    7. '_' → logprob: -5.081223011016846
    8. '   ' → logprob: -5.081223011016846
    9. ')' → logprob: -5.331223011016846
    10. ' ,' → logprob: -6.331223011016846

Token 43: ' the' (ID: 290)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -1.1800929307937622
    2. ' its' → logprob: -1.8050929307937622
    3. ' '' → logprob: -1.9300929307937622
    4. ''' → logprob: -2.1800928115844727
    5. ' the' → logprob: -2.6800928115844727
    6. ' x' → logprob: -2.6800928115844727
    7. ''s' → logprob: -3.6800928115844727
    8. ' ' → logprob: -4.055092811584473
    9. ''a' → logprob: -4.430092811584473
    10. 'a' → logprob: -4.680092811584473

Token 44: ' letter' (ID: 10263)
  Prédit: ' same'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' same' → logprob: -1.4893062114715576
    2. ' character' → logprob: -1.6143062114715576
    3. ' letter' → logprob: -2.2393062114715576
    4. ' corresponding' → logprob: -2.4893062114715576
    5. ' encrypted' → logprob: -2.8643062114715576
    6. ' space' → logprob: -2.9893062114715576
    7. ' previous' → logprob: -2.9893062114715576
    8. ' string' → logprob: -2.9893062114715576
    9. ' next' → logprob: -3.3643062114715576
    10. ' code' → logprob: -3.8643062114715576

Token 45: ' before' (ID: 2254)
  Prédit: ' ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' '' → logprob: -0.8083590269088745
    2. ' a' → logprob: -1.5583590269088745
    3. 's' → logprob: -2.433359146118164
    4. ''' → logprob: -2.683359146118164
    5. ''a' → logprob: -3.308359146118164
    6. ''s' → logprob: -3.558359146118164
    7. ' s' → logprob: -3.558359146118164
    8. 'a' → logprob: -4.308359146118164
    9. ' ' → logprob: -4.433359146118164
    10. ' chr' → logprob: -4.683359146118164

Token 46: ' it' (ID: 480)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.1035262867808342
    2. ''' → logprob: -3.6035263538360596
    3. 'x' → logprob: -3.7285263538360596
    4. ' x' → logprob: -4.6035261154174805
    5. ' in' → logprob: -4.9785261154174805
    6. ' a' → logprob: -5.1035261154174805
    7. 's' → logprob: -5.2285261154174805
    8. 'a' → logprob: -5.7285261154174805
    9. ' '' → logprob: -5.7285261154174805
    10. ' ' → logprob: -6.3535261154174805

Token 47: '.
' (ID: 558)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.13550975918769836
    2. ' :' → logprob: -2.885509729385376
    3. ',' → logprob: -4.135509967803955
    4. ' ' → logprob: -4.760509967803955
    5. '   ' → logprob: -5.010509967803955
    6. '):' → logprob: -5.010509967803955
    7. '```' → logprob: -5.260509967803955
    8. ' ,' → logprob: -5.385509967803955
    9. ' =' → logprob: -5.510509967803955
    10. ')' → logprob: -5.635509967803955

Token 48: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04626123607158661
    2. '   ' → logprob: -3.5462613105773926
    3. ' :' → logprob: -5.046261310577393
    4. ':
' → logprob: -5.546261310577393
    5. '```' → logprob: -5.796261310577393
    6. ' ' → logprob: -7.796261310577393
    7. '\n' → logprob: -7.796261310577393
    8. ',' → logprob: -7.921261310577393
    9. '
' → logprob: -8.046260833740234
    10. 'n' → logprob: -8.046260833740234

Token 49: ' #' (ID: 1069)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0675848051905632
    2. '   ' → logprob: -3.067584753036499
    3. ' :' → logprob: -5.067584991455078
    4. ':
' → logprob: -5.692584991455078
    5. '```' → logprob: -5.692584991455078
    6. ' ' → logprob: -6.317584991455078
    7. '
' → logprob: -7.067584991455078
    8. 'n' → logprob: -7.192584991455078
    9. '\n' → logprob: -7.942584991455078
    10. ',' → logprob: -7.942584991455078

Token 50: ' So' (ID: 2632)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.29228273034095764
    2. ' possible' → logprob: -2.792282819747925
    3. ' ' → logprob: -2.917282819747925
    4. 'possible' → logprob: -3.792282819747925
    5. ':' → logprob: -4.167282581329346
    6. ' candidates' → logprob: -4.417282581329346
    7. ' 
' → logprob: -4.917282581329346
    8. ' tokens' → logprob: -4.917282581329346
    9. '
' → logprob: -4.917282581329346
    10. ' \' → logprob: -5.042282581329346

Token 51: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6241621971130371
    2. ' the' → logprob: -1.999162197113037
    3. ' we' → logprob: -2.124162197113037
    4. ' ' → logprob: -3.374162197113037
    5. ' possible' → logprob: -3.374162197113037
    6. ' you' → logprob: -3.624162197113037
    7. ',' → logprob: -3.749162197113037
    8. ' if' → logprob: -3.874162197113037
    9. ' ,' → logprob: -4.249162197113037
    10. ' a' → logprob: -4.999162197113037

Token 52: ' each' (ID: 2454)
  Prédit: ' c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.6235086917877197
    2. ' a' → logprob: -1.8735086917877197
    3. ' x' → logprob: -2.4985086917877197
    4. ' each' → logprob: -2.4985086917877197
    5. ' original' → logprob: -3.4985086917877197
    6. ' the' → logprob: -3.6235086917877197
    7. 'c' → logprob: -3.8735086917877197
    8. ' example' → logprob: -3.9985086917877197
    9. 'x' → logprob: -4.748508453369141
    10. ' '' → logprob: -5.123508453369141

Token 53: ' character' (ID: 5855)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1070343628525734
    2. ' c' → logprob: -2.73203444480896
    3. ' _' → logprob: -3.98203444480896
    4. ' character' → logprob: -5.357034206390381
    5. '_' → logprob: -5.482034206390381
    6. ' x' → logprob: -6.107034206390381
    7. ' char' → logprob: -6.232034206390381
    8. 'c' → logprob: -7.232034206390381
    9. '  ' → logprob: -7.482034206390381
    10. ' ,' → logprob: -7.607034206390381

Token 54: ' c' (ID: 274)
  Prédit: ' ,'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ,' → logprob: -0.3226563036441803
    2. ',' → logprob: -1.572656273841858
    3. ' in' → logprob: -3.5726563930511475
    4. ' :' → logprob: -3.9476563930511475
    5. ' c' → logprob: -4.447656154632568
    6. ' ' → logprob: -5.197656154632568
    7. ':' → logprob: -6.197656154632568
    8. ' s' → logprob: -7.822656154632568
    9. 's' → logprob: -8.697656631469727
    10. 'c' → logprob: -8.697656631469727

Token 55: ' in' (ID: 306)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3135529160499573
    2. ' ,' → logprob: -2.0635528564453125
    3. ' in' → logprob: -2.4385528564453125
    4. ':' → logprob: -3.5635528564453125
    5. ' :' → logprob: -4.3135528564453125
    6. '):' → logprob: -4.4385528564453125
    7. '):
' → logprob: -8.188552856445312
    8. ' ' → logprob: -8.438552856445312
    9. '),' → logprob: -8.438552856445312
    10. 'in' → logprob: -8.563552856445312

Token 56: ' the' (ID: 290)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.49205052852630615
    2. ' range' → logprob: -1.3670505285263062
    3. ' '' → logprob: -2.8670506477355957
    4. 's' → logprob: -3.7420506477355957
    5. ''' → logprob: -3.8670506477355957
    6. '"' → logprob: -4.867050647735596
    7. ''s' → logprob: -4.867050647735596
    8. 'range' → logprob: -5.367050647735596
    9. ' "' → logprob: -5.867050647735596
    10. ' ' → logprob: -5.992050647735596

Token 57: ' encrypted' (ID: 47764)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.8629856705665588
    2. ' encrypted' → logprob: -1.862985610961914
    3. ' s' → logprob: -2.362985610961914
    4. ' alphabet' → logprob: -2.612985610961914
    5. ' string' → logprob: -2.737985610961914
    6. ' original' → logprob: -3.487985610961914
    7. ' input' → logprob: -3.487985610961914
    8. 'string' → logprob: -3.987985610961914
    9. ' decrypted' → logprob: -3.987985610961914
    10. ' range' → logprob: -4.112985610961914

Token 58: ' string' (ID: 1621)
  Prédit: ' string'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' string' → logprob: -0.2667505145072937
    2. 'string' → logprob: -2.5167505741119385
    3. '_' → logprob: -3.1417505741119385
    4. ' ' → logprob: -3.2667505741119385
    5. 's' → logprob: -3.6417505741119385
    6. ' s' → logprob: -3.7667505741119385
    7. ' :' → logprob: -5.891750335693359
    8. '   ' → logprob: -6.141750335693359
    9. '):' → logprob: -6.266750335693359
    10. '_string' → logprob: -6.266750335693359

Token 59: ':
' (ID: 734)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4819157123565674
    2. ':' → logprob: -1.7319157123565674
    3. ' ,' → logprob: -1.9819157123565674
    4. ' :' → logprob: -2.7319157123565674
    5. ' :
' → logprob: -7.356915473937988
    6. ',:' → logprob: -7.481915473937988
    7. '):' → logprob: -7.856915473937988
    8. ':
' → logprob: -8.106915473937988
    9. 's' → logprob: -8.981915473937988
    10. ' ' → logprob: -8.981915473937988

Token 60: '   ' (ID: 271)
  Prédit: '    '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '    ' → logprob: -0.3312872350215912
    2. '   ' → logprob: -1.5812872648239136
    3. ' ' → logprob: -3.331287145614624
    4. '       ' → logprob: -3.831287145614624
    5. ',' → logprob: -5.206287384033203
    6. '     
' → logprob: -5.956287384033203
    7. '<|end|>' → logprob: -6.706287384033203
    8. '        ' → logprob: -6.831287384033203
    9. '    
' → logprob: -7.331287384033203
    10. ''' → logprob: -7.331287384033203

Token 61: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.26713988184928894
    2. '    ' → logprob: -1.7671399116516113
    3. ' possible' → logprob: -3.8921399116516113
    4. ' ' → logprob: -4.017139911651611
    5. 'possible' → logprob: -5.142139911651611
    6. '       ' → logprob: -5.642139911651611
    7. '"' → logprob: -6.142139911651611
    8. ''' → logprob: -6.392139911651611
    9. ' candidates' → logprob: -6.392139911651611
    10. '```' → logprob: -6.642139911651611

Token 62: ' -' (ID: 533)
  Prédit: ' possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' possible' → logprob: -0.06338629126548767
    2. 'possible' → logprob: -3.6883862018585205
    3. ' for' → logprob: -4.5633864402771
    4. ' candidates' → logprob: -4.6883864402771
    5. '   ' → logprob: -4.8133864402771
    6. ' if' → logprob: -5.8133864402771
    7. '    ' → logprob: -6.5633864402771
    8. ' possibilities' → logprob: -6.6883864402771
    9. ' possibles' → logprob: -7.3133864402771
    10. ' ' → logprob: -7.6883864402771

Token 63: ' The' (ID: 623)
  Prédit: ' possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' possible' → logprob: -0.5364092588424683
    2. ' if' → logprob: -1.9114092588424683
    3. ' find' → logprob: -2.161409378051758
    4. ' for' → logprob: -2.786409378051758
    5. ' candidates' → logprob: -3.286409378051758
    6. ' we' → logprob: -4.661409378051758
    7. 'possible' → logprob: -4.786409378051758
    8. ' check' → logprob: -5.036409378051758
    9. ' get' → logprob: -5.411409378051758
    10. '   ' → logprob: -5.661409378051758

Token 64: ' original' (ID: 4756)
  Prédit: ' possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' possible' → logprob: -1.0900381803512573
    2. ' next' → logprob: -1.8400381803512573
    3. 're' → logprob: -1.9650381803512573
    4. 'possible' → logprob: -2.840038299560547
    5. ' candidates' → logprob: -3.090038299560547
    6. ' original' → logprob: -3.090038299560547
    7. ' result' → logprob: -3.215038299560547
    8. ' previous' → logprob: -3.715038299560547
    9. ' possibilities' → logprob: -3.965038299560547
    10. 'n' → logprob: -3.965038299560547

Token 65: ' was' (ID: 673)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.9027159810066223
    2. '_' → logprob: -2.0277159214019775
    3. '_candidates' → logprob: -2.0277159214019775
    4. ' candidates' → logprob: -2.9027159214019775
    5. ' s' → logprob: -3.0277159214019775
    6. ' ' → logprob: -3.0277159214019775
    7. 'c' → logprob: -3.2777159214019775
    8. ' _' → logprob: -3.6527159214019775
    9. ' =' → logprob: -3.7777159214019775
    10. ' c' → logprob: -4.027716159820557

Token 66: ' either' (ID: 4784)
  Prédit: ' either'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' either' → logprob: -0.1441773623228073
    2. ' c' → logprob: -2.7691774368286133
    3. ' '' → logprob: -3.5191774368286133
    4. ' a' → logprob: -4.019177436828613
    5. ''' → logprob: -4.519177436828613
    6. 'either' → logprob: -5.644177436828613
    7. 'c' → logprob: -6.269177436828613
    8. 's' → logprob: -6.644177436828613
    9. ' ' → logprob: -7.019177436828613
    10. ' s' → logprob: -7.519177436828613

Token 67: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.6435017585754395
    2. 'c' → logprob: -1.8935017585754395
    3. ' a' → logprob: -2.0185017585754395
    4. ' '' → logprob: -2.7685017585754395
    5. ''' → logprob: -3.1435017585754395
    6. ' the' → logprob: -3.1435017585754395
    7. ' either' → logprob: -4.6435017585754395
    8. ''a' → logprob: -5.0185017585754395
    9. ' itself' → logprob: -5.0185017585754395
    10. '`' → logprob: -5.7685017585754395

Token 68: ' (' (ID: 350)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.03556475415825844
    2. ',' → logprob: -4.66056489944458
    3. 'or' → logprob: -5.28556489944458
    4. '+' → logprob: -5.91056489944458
    5. ' itself' → logprob: -5.91056489944458
    6. ' ,' → logprob: -6.03556489944458
    7. ' ' → logprob: -6.16056489944458
    8. ' '' → logprob: -6.28556489944458
    9. ''' → logprob: -6.53556489944458
    10. '   ' → logprob: -7.03556489944458

Token 69: 'if' (ID: 366)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.39639636874198914
    2. ' or' → logprob: -1.8963963985443115
    3. ''' → logprob: -3.1463963985443115
    4. 'c' → logprob: -3.6463963985443115
    5. ' )' → logprob: -3.7713963985443115
    6. '')' → logprob: -3.7713963985443115
    7. 'or' → logprob: -4.146396160125732
    8. ' c' → logprob: -5.021396160125732
    9. ' '' → logprob: -5.521396160125732
    10. ' itself' → logprob: -5.646396160125732

Token 70: ' not' (ID: 625)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.23255637288093567
    2. ' c' → logprob: -1.6075563430786133
    3. ' the' → logprob: -6.107556343078613
    4. 'the' → logprob: -6.107556343078613
    5. ' it's' → logprob: -7.357556343078613
    6. 's' → logprob: -7.732556343078613
    7. 'it's' → logprob: -7.857556343078613
    8. ' it' → logprob: -8.107556343078613
    9. 'it' → logprob: -8.232556343078613
    10. ''s' → logprob: -9.232556343078613

Token 71: ' changed' (ID: 9180)
  Prédit: ''s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''s' → logprob: -1.1089452505111694
    2. ' the' → logprob: -1.6089452505111694
    3. ''a' → logprob: -1.9839452505111694
    4. ''' → logprob: -2.608945369720459
    5. ' a' → logprob: -3.233945369720459
    6. ' c' → logprob: -3.358945369720459
    7. ' '' → logprob: -3.483945369720459
    8. ' encrypted' → logprob: -3.608945369720459
    9. 'the' → logprob: -3.858945369720459
    10. 'c' → logprob: -3.983945369720459

Token 72: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.052441637963056564
    2. ' or' → logprob: -3.4274415969848633
    3. ' )' → logprob: -4.677441596984863
    4. '),' → logprob: -5.052441596984863
    5. '   ' → logprob: -6.552441596984863
    6. 'or' → logprob: -7.177441596984863
    7. ')
' → logprob: -8.802441596984863
    8. ' ),' → logprob: -8.927441596984863
    9. '')' → logprob: -9.052441596984863
    10. ' ' → logprob: -9.302441596984863

Token 73: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.04031986743211746
    2. ' ' → logprob: -3.9153199195861816
    3. ''' → logprob: -4.540319919586182
    4. ' '' → logprob: -5.915319919586182
    5. 'or' → logprob: -6.040319919586182
    6. '    ' → logprob: -7.040319919586182
    7. '   ' → logprob: -7.165319919586182
    8. '  ' → logprob: -8.540319442749023
    9. ' ,' → logprob: -8.540319442749023
    10. '\n' → logprob: -8.540319442749023

Token 74: '
' (ID: 198)
  Prédit: ' c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.23035654425621033
    2. ' chr' → logprob: -2.355356454849243
    3. ' ' → logprob: -3.730356454849243
    4. 'c' → logprob: -3.730356454849243
    5. 'chr' → logprob: -3.730356454849243
    6. ' '' → logprob: -3.980356454849243
    7. ' a' → logprob: -4.980356693267822
    8. ''' → logprob: -5.105356693267822
    9. ' the' → logprob: -6.605356693267822
    10. 'a' → logprob: -6.917856693267822

Token 75: '   ' (ID: 271)
  Prédit: ' c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.739565908908844
    2. ' '' → logprob: -1.2395658493041992
    3. ''' → logprob: -2.114565849304199
    4. ' a' → logprob: -3.614565849304199
    5. 'c' → logprob: -3.864565849304199
    6. ' ' → logprob: -4.114565849304199
    7. ''b' → logprob: -4.739565849304199
    8. ''a' → logprob: -4.989565849304199
    9. ' b' → logprob: -4.989565849304199
    10. ' (' → logprob: -5.239565849304199

Token 76: ' #' (ID: 1069)
  Prédit: ' c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.22294269502162933
    2. ' '' → logprob: -2.597942590713501
    3. ''' → logprob: -3.347942590713501
    4. ' chr' → logprob: -3.347942590713501
    5. 'c' → logprob: -4.09794282913208
    6. '   ' → logprob: -4.72294282913208
    7. 'chr' → logprob: -4.72294282913208
    8. ' ' → logprob: -5.22294282913208
    9. '  ' → logprob: -5.97294282913208
    10. ' ord' → logprob: -6.22294282913208

Token 77: ' -' (ID: 533)
  Prédit: ' c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.37755417823791504
    2. ' '' → logprob: -2.377554178237915
    3. ''' → logprob: -2.752554178237915
    4. 'c' → logprob: -2.877554178237915
    5. ' chr' → logprob: -3.002554178237915
    6. 'chr' → logprob: -4.502553939819336
    7. ' ' → logprob: -4.627553939819336
    8. '   ' → logprob: -4.752553939819336
    9. ' a' → logprob: -5.127553939819336
    10. '  ' → logprob: -5.877553939819336

Token 78: ' If' (ID: 1843)
  Prédit: ' chr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' chr' → logprob: -0.5233594179153442
    2. ' c' → logprob: -1.3983594179153442
    3. ' '' → logprob: -2.6483592987060547
    4. 'chr' → logprob: -3.0233592987060547
    5. ''' → logprob: -4.023359298706055
    6. ' a' → logprob: -5.023359298706055
    7. 'c' → logprob: -5.398359298706055
    8. ' ' → logprob: -5.648359298706055
    9. ' ord' → logprob: -6.148359298706055
    10. '  ' → logprob: -7.023359298706055

Token 79: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.22266077995300293
    2. 'c' → logprob: -1.722660779953003
    3. 'chr' → logprob: -4.597661018371582
    4. ' chr' → logprob: -4.847661018371582
    5. ' ord' → logprob: -6.097661018371582
    6. 'ord' → logprob: -8.222661018371582
    7. ' the' → logprob: -8.347661018371582
    8. ' ' → logprob: -9.222661018371582
    9. ' a' → logprob: -9.722661018371582
    10. '(chr' → logprob: -10.722661018371582

Token 80: ' is' (ID: 382)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.7738359570503235
    2. '>' → logprob: -1.5238358974456787
    3. '==' → logprob: -2.1488358974456787
    4. ' is' → logprob: -2.7738358974456787
    5. ''' → logprob: -3.5238358974456787
    6. ' >' → logprob: -3.6488358974456787
    7. ' !=' → logprob: -3.7738358974456787
    8. '=='' → logprob: -4.148836135864258
    9. '=' → logprob: -4.648836135864258
    10. '!=' → logprob: -5.398836135864258

Token 81: ' between' (ID: 2870)
  Prédit: ''a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''a' → logprob: -0.11870010942220688
    2. ''b' → logprob: -2.4937000274658203
    3. ''' → logprob: -4.24370002746582
    4. ' '' → logprob: -5.36870002746582
    5. 'chr' → logprob: -5.36870002746582
    6. ''>' → logprob: -6.36870002746582
    7. ' chr' → logprob: -7.11870002746582
    8. '>'' → logprob: -7.24370002746582
    9. ''s' → logprob: -7.36870002746582
    10. ''d' → logprob: -8.24370002746582

Token 82: ' '' (ID: 461)
  Prédit: ''b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''b' → logprob: -0.30305394530296326
    2. ''' → logprob: -2.303053855895996
    3. ' '' → logprob: -2.303053855895996
    4. ''a' → logprob: -2.803053855895996
    5. 'b' → logprob: -7.553053855895996
    6. '"' → logprob: -9.178053855895996
    7. ''d' → logprob: -9.803053855895996
    8. ''s' → logprob: -10.428053855895996
    9. ''ab' → logprob: -10.553053855895996
    10. ' ' → logprob: -10.553053855895996

Token 83: 'a' (ID: 64)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.082599937915802
    2. ''b' → logprob: -3.0825998783111572
    3. 'c' → logprob: -3.9575998783111572
    4. ''' → logprob: -4.832600116729736
    5. 'a' → logprob: -5.457600116729736
    6. ''a' → logprob: -6.207600116729736
    7. ''s' → logprob: -10.832599639892578
    8. ''d' → logprob: -11.207599639892578
    9. '`' → logprob: -11.832599639892578
    10. ' '' → logprob: -11.957599639892578

Token 84: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.08263418078422546
    2. 'b' → logprob: -2.582634210586548
    3. ''b' → logprob: -6.457633972167969
    4. ' '' → logprob: -7.207633972167969
    5. ' and' → logprob: -7.332633972167969
    6. 'a' → logprob: -8.082633972167969
    7. ''s' → logprob: -8.582633972167969
    8. '+' → logprob: -9.582633972167969
    9. 'and' → logprob: -10.082633972167969
    10. ''+' → logprob: -10.457633972167969

Token 85: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.2080276757478714
    2. '+' → logprob: -2.3330276012420654
    3. 'nd' → logprob: -3.0830276012420654
    4. 'and' → logprob: -3.5830276012420654
    5. ''' → logprob: -4.8330278396606445
    6. ' nd' → logprob: -5.8330278396606445
    7. ''s' → logprob: -6.0830278396606445
    8. ' ' → logprob: -7.2080278396606445
    9. ' '' → logprob: -7.2080278396606445
    10. ''b' → logprob: -7.3330278396606445

Token 86: ' '' (ID: 461)
  Prédit: ''b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''b' → logprob: -0.9829000234603882
    2. ''z' → logprob: -0.9829000234603882
    3. ''y' → logprob: -1.7329000234603882
    4. ''a' → logprob: -3.3579001426696777
    5. ''s' → logprob: -3.4829001426696777
    6. ''' → logprob: -4.982900142669678
    7. ' '' → logprob: -6.857900142669678
    8. '‘y' → logprob: -7.857900142669678
    9. 'b' → logprob: -8.10789966583252
    10. 'z' → logprob: -8.73289966583252

Token 87: 'y' (ID: 88)
  Prédit: ''z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''z' → logprob: -0.6307306885719299
    2. ''b' → logprob: -2.005730628967285
    3. ''s' → logprob: -2.630730628967285
    4. 'z' → logprob: -2.755730628967285
    5. ''' → logprob: -2.880730628967285
    6. 'b' → logprob: -3.380730628967285
    7. ''y' → logprob: -3.505730628967285
    8. ''a' → logprob: -3.505730628967285
    9. 'c' → logprob: -3.630730628967285
    10. 'chr' → logprob: -4.755730628967285

Token 88: ''' (ID: 6)
  Prédit: '','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.05411611869931221
    2. ''' → logprob: -3.5541160106658936
    3. ',' → logprob: -4.179116249084473
    4. ''),' → logprob: -5.804116249084473
    5. '')' → logprob: -6.179116249084473
    6. '':' → logprob: -6.304116249084473
    7. ''):' → logprob: -7.054116249084473
    8. ':',' → logprob: -8.679116249084473
    9. '),' → logprob: -9.054116249084473
    10. 'b' → logprob: -9.304116249084473

Token 89: ' inclusive' (ID: 29482)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4395768642425537
    2. ' ,' → logprob: -1.5645768642425537
    3. ':' → logprob: -2.1895768642425537
    4. ' :' → logprob: -3.9395768642425537
    5. ' and' → logprob: -5.814577102661133
    6. '',' → logprob: -5.939577102661133
    7. ' (' → logprob: -6.189577102661133
    8. '':' → logprob: -6.439577102661133
    9. ':
' → logprob: -6.814577102661133
    10. '   ' → logprob: -6.939577102661133

Token 90: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1824364960193634
    2. ' ,' → logprob: -2.182436466217041
    3. ':' → logprob: -3.057436466217041
    4. ' :' → logprob: -5.432436466217041
    5. ':
' → logprob: -7.682436466217041
    6. '',' → logprob: -7.682436466217041
    7. '':' → logprob: -8.4324369430542
    8. ',
' → logprob: -8.5574369430542
    9. ' and' → logprob: -8.5574369430542
    10. '   ' → logprob: -9.0574369430542

Token 91: ' original' (ID: 4756)
  Prédit: ' ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' '' → logprob: -1.1610853672027588
    2. ' c' → logprob: -1.6610853672027588
    3. ' there' → logprob: -1.7860853672027588
    4. ''' → logprob: -2.661085367202759
    5. ' ' → logprob: -3.036085367202759
    6. ' return' → logprob: -3.286085367202759
    7. ' possible' → logprob: -3.786085367202759
    8. '    ' → logprob: -3.786085367202759
    9. ' s' → logprob: -4.03608512878418
    10. '   ' → logprob: -4.16108512878418

Token 92: ' could' (ID: 2023)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.455869197845459
    2. '=' → logprob: -2.080869197845459
    3. ' was' → logprob: -2.830869197845459
    4. ' could' → logprob: -2.830869197845459
    5. 's' → logprob: -3.080869197845459
    6. ' c' → logprob: -4.455869197845459
    7. ' s' → logprob: -4.705869197845459
    8. ' can' → logprob: -4.705869197845459
    9. ' ' → logprob: -4.830869197845459
    10. ' may' → logprob: -4.955869197845459

Token 93: ' be' (ID: 413)
  Prédit: ' be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.002632969059050083
    2. 'be' → logprob: -6.502633094787598
    3. ' have' → logprob: -7.627633094787598
    4. ' ' → logprob: -8.252633094787598
    5. ''' → logprob: -8.752633094787598
    6. ' '' → logprob: -9.627633094787598
    7. ' also' → logprob: -9.877633094787598
    8. ''s' → logprob: -10.627633094787598
    9. '   ' → logprob: -10.877633094787598
    10. ' include' → logprob: -11.377633094787598

Token 94: ' c' (ID: 274)
  Prédit: ' chr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chr' → logprob: -0.12122098356485367
    2. 'chr' → logprob: -2.2462210655212402
    3. ' c' → logprob: -5.37122106552124
    4. ' ' → logprob: -6.49622106552124
    5. '(chr' → logprob: -7.74622106552124
    6. ' a' → logprob: -7.74622106552124
    7. ' the' → logprob: -8.121220588684082
    8. ' ord' → logprob: -8.496220588684082
    9. 'c' → logprob: -8.496220588684082
    10. '  ' → logprob: -8.871220588684082

Token 95: ' or' (ID: 503)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.20493492484092712
    2. ' +' → logprob: -2.20493483543396
    3. ' or' → logprob: -3.45493483543396
    4. ''' → logprob: -4.204935073852539
    5. ' if' → logprob: -5.079935073852539
    6. '   ' → logprob: -5.579935073852539
    7. ' ' → logprob: -5.954935073852539
    8. '       ' → logprob: -6.329935073852539
    9. 'or' → logprob: -6.454935073852539
    10. ''+' → logprob: -6.579935073852539

Token 96: ' chr' (ID: 42767)
  Prédit: ' chr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chr' → logprob: -0.09842319786548615
    2. 'chr' → logprob: -2.4734232425689697
    3. ' c' → logprob: -5.098423004150391
    4. '(chr' → logprob: -6.348423004150391
    5. ' ' → logprob: -7.723423004150391
    6. ''' → logprob: -8.34842300415039
    7. ' ord' → logprob: -8.72342300415039
    8. ' '' → logprob: -8.84842300415039
    9. 'c' → logprob: -8.97342300415039
    10. '   ' → logprob: -9.53592300415039

Token 97: '(ord' (ID: 199585)
  Prédit: '(ord'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ord' → logprob: -0.035962965339422226
    2. '(' → logprob: -3.4109630584716797
    3. '(c' → logprob: -6.16096305847168
    4. 'ord' → logprob: -9.16096305847168
    5. '   ' → logprob: -10.91096305847168
    6. '((' → logprob: -10.91096305847168
    7. ' (' → logprob: -11.41096305847168
    8. '(chr' → logprob: -11.53596305847168
    9. ' ord' → logprob: -12.03596305847168
    10. '```' → logprob: -12.28596305847168

Token 98: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.0036732328590005636
    2. '(' → logprob: -5.628673076629639
    3. ' (' → logprob: -10.253673553466797
    4. '('' → logprob: -11.128673553466797
    5. 'c' → logprob: -11.503673553466797
    6. '(s' → logprob: -12.753673553466797
    7. '(ord' → logprob: -12.878673553466797
    8. ' ' → logprob: -13.003673553466797
    9. '   ' → logprob: -13.003673553466797
    10. '(
' → logprob: -14.128673553466797

Token 99: ')+' (ID: 16161)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.9474836587905884
    2. '(c' → logprob: -1.0724836587905884
    3. ')' → logprob: -1.8224836587905884
    4. ')+' → logprob: -2.697483539581299
    5. ' +' → logprob: -4.072483539581299
    6. '('' → logprob: -5.447483539581299
    7. '   ' → logprob: -5.572483539581299
    8. '(ord' → logprob: -5.697483539581299
    9. 's' → logprob: -6.072483539581299
    10. '(' → logprob: -6.072483539581299

Token 100: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.625866030342877e-05
    2. ' ' → logprob: -9.375085830688477
    3. '(' → logprob: -13.625085830688477
    4. '```' → logprob: -16.500085830688477
    5. '   ' → logprob: -17.750085830688477
    6. ''' → logprob: -18.750085830688477
    7. '  ' → logprob: -18.750085830688477
    8. '`' → logprob: -18.875085830688477
    9. ')' → logprob: -19.125085830688477
    10. '2' → logprob: -19.125085830688477

Token 101: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002683137310668826
    2. '))' → logprob: -6.002683162689209
    3. '')' → logprob: -9.00268268585205
    4. ')))' → logprob: -9.87768268585205
    5. ' )' → logprob: -10.62768268585205
    6. '   ' → logprob: -12.62768268585205
    7. ''))' → logprob: -13.37768268585205
    8. '):' → logprob: -14.12768268585205
    9. ')")' → logprob: -14.25268268585205
    10. ' ' → logprob: -15.00268268585205

Token 102: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5134162902832031
    2. ':' → logprob: -1.3884162902832031
    3. ':
' → logprob: -2.763416290283203
    4. '
' → logprob: -3.013416290283203
    5. 'def' → logprob: -4.263416290283203
    6. ' :' → logprob: -5.263416290283203
    7. '    
' → logprob: -5.638416290283203
    8. ' :
' → logprob: -5.888416290283203
    9. ' candidates' → logprob: -6.138416290283203
    10. ' 
' → logprob: -6.388416290283203

Token 103: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05145712196826935
    2. ' candidates' → logprob: -3.426457166671753
    3. ':' → logprob: -5.051456928253174
    4. 'possible' → logprob: -6.051456928253174
    5. '
' → logprob: -6.426456928253174
    6. 'def' → logprob: -6.926456928253174
    7. ' possible' → logprob: -7.051456928253174
    8. '    
' → logprob: -7.301456928253174
    9. '_candidates' → logprob: -7.301456928253174
    10. '```' → logprob: -7.551456928253174

Token 104: ' But' (ID: 3072)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03993256762623787
    2. ' candidates' → logprob: -3.7899324893951416
    3. '
' → logprob: -5.289932727813721
    4. '    
' → logprob: -6.414932727813721
    5. ' ' → logprob: -6.539932727813721
    6. 'def' → logprob: -6.539932727813721
    7. ':' → logprob: -6.539932727813721
    8. 'result' → logprob: -7.039932727813721
    9. ' possible' → logprob: -7.289932727813721
    10. ' result' → logprob: -7.414932727813721

Token 105: ' only' (ID: 1606)
  Prédit: ' c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' c' → logprob: -1.8508317470550537
    2. ' for' → logprob: -1.9758317470550537
    3. ' we' → logprob: -2.1008317470550537
    4. ' the' → logprob: -2.1008317470550537
    5. ' if' → logprob: -2.4758317470550537
    6. ' there' → logprob: -2.4758317470550537
    7. ' you' → logprob: -2.7258317470550537
    8. ' not' → logprob: -3.4758317470550537
    9. ' s' → logprob: -3.7258317470550537
    10. ' ord' → logprob: -3.9758317470550537

Token 106: ' one' (ID: 1001)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.019948897883296013
    2. ' for' → logprob: -4.144948959350586
    3. ' one' → logprob: -6.519948959350586
    4. ' the' → logprob: -6.644948959350586
    5. ' when' → logprob: -7.894948959350586
    6. 'if' → logprob: -8.519948959350586
    7. ' c' → logprob: -8.894948959350586
    8. ' lowercase' → logprob: -9.519948959350586
    9. ' characters' → logprob: -9.644948959350586
    10. ' valid' → logprob: -9.894948959350586

Token 107: ' character' (ID: 5855)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.4146443605422974
    2. '   ' → logprob: -1.5396443605422974
    3. ' ' → logprob: -1.9146443605422974
    4. 'def' → logprob: -2.164644241333008
    5. ':' → logprob: -2.664644241333008
    6. ' :' → logprob: -2.789644241333008
    7. ' 
' → logprob: -3.289644241333008
    8. ' return' → logprob: -4.414644241333008
    9. ' :
' → logprob: -4.414644241333008
    10. ' possible' → logprob: -4.539644241333008

Token 108: ' indexed' (ID: 44010)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4959592819213867
    2. '   ' → logprob: -2.3709592819213867
    3. 'def' → logprob: -2.6209592819213867
    4. 's' → logprob: -2.7459592819213867
    5. ':
' → logprob: -3.2459592819213867
    6. '
' → logprob: -3.3709592819213867
    7. '):' → logprob: -3.4959592819213867
    8. ' :' → logprob: -4.620959281921387
    9. '(s' → logprob: -4.870959281921387
    10. '):
' → logprob: -4.995959281921387

Token 109: ' from' (ID: 591)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5348888039588928
    2. ':' → logprob: -2.034888744354248
    3. '   ' → logprob: -2.909888744354248
    4. ' =' → logprob: -2.909888744354248
    5. ')' → logprob: -3.159888744354248
    6. '):' → logprob: -3.284888744354248
    7. ' ' → logprob: -3.534888744354248
    8. ' :' → logprob: -3.659888744354248
    9. '(s' → logprob: -4.909888744354248
    10. '  ' → logprob: -5.284888744354248

Token 110: ' left' (ID: 3561)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0724000632762909
    2. ' ' → logprob: -2.9474000930786133
    3. 'i' → logprob: -5.447400093078613
    4. ' the' → logprob: -5.572400093078613
    5. ' i' → logprob: -5.697400093078613
    6. 'the' → logprob: -6.572400093078613
    7. 's' → logprob: -6.822400093078613
    8. '1' → logprob: -7.072400093078613
    9. 'def' → logprob: -7.072400093078613
    10. ' which' → logprob: -7.822400093078613

Token 111: ' to' (ID: 316)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5811767578125
    2. '   ' → logprob: -1.4561767578125
    3. '
' → logprob: -2.0811767578125
    4. ' :' → logprob: -3.5811767578125
    5. ':
' → logprob: -3.9561767578125
    6. ' ' → logprob: -4.4561767578125
    7. '```' → logprob: -5.4561767578125
    8. ' 
' → logprob: -5.5811767578125
    9. 'def' → logprob: -5.9561767578125
    10. ' :
' → logprob: -5.9561767578125

Token 112: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.006804898846894503
    2. ' right' → logprob: -5.006804943084717
    3. 'ight' → logprob: -10.506804466247559
    4. '_right' → logprob: -10.881804466247559
    5. 'r' → logprob: -11.131804466247559
    6. '   ' → logprob: -11.631804466247559
    7. '	right' → logprob: -12.381804466247559
    8. '```' → logprob: -12.506804466247559
    9. 'Right' → logprob: -13.006804466247559
    10. '-right' → logprob: -13.131804466247559

Token 113: ' got' (ID: 3508)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.15619568526744843
    2. '   ' → logprob: -2.656195640563965
    3. '
' → logprob: -3.656195640563965
    4. ':
' → logprob: -3.781195640563965
    5. ' :' → logprob: -4.656195640563965
    6. ' 
' → logprob: -5.906195640563965
    7. '```' → logprob: -5.906195640563965
    8. '):' → logprob: -6.281195640563965
    9. '\n' → logprob: -6.781195640563965
    10. '    
' → logprob: -6.906195640563965

Token 114: ' changed' (ID: 9180)
  Prédit: ' replaced'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' replaced' → logprob: -0.07273010164499283
    2. ' changed' → logprob: -3.07273006439209
    3. ' decrypted' → logprob: -4.07273006439209
    4. ' a' → logprob: -6.57273006439209
    5. ' encrypted' → logprob: -6.94773006439209
    6. 's' → logprob: -6.94773006439209
    7. ' de' → logprob: -7.57273006439209
    8. 'changed' → logprob: -7.69773006439209
    9. ' transformed' → logprob: -7.94773006439209
    10. ' the' → logprob: -8.32273006439209

Token 115: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.31473273038864136
    2. '   ' → logprob: -1.8147327899932861
    3. ' :' → logprob: -3.189732789993286
    4. ':
' → logprob: -4.189732551574707
    5. '
' → logprob: -5.064732551574707
    6. 'def' → logprob: -5.314732551574707
    7. '\' → logprob: -5.314732551574707
    8. ' 
' → logprob: -5.314732551574707
    9. '\n' → logprob: -5.439732551574707
    10. '```' → logprob: -5.439732551574707

Token 116: 'the' (ID: 3086)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2107042819261551
    2. ' )' → logprob: -1.7107043266296387
    3. '):' → logprob: -5.085704326629639
    4. '   ' → logprob: -6.960704326629639
    5. ' ):' → logprob: -6.960704326629639
    6. ',' → logprob: -8.21070384979248
    7. 'def' → logprob: -8.46070384979248
    8. ' ' → logprob: -8.71070384979248
    9. '    ' → logprob: -9.83570384979248
    10. '):
' → logprob: -10.08570384979248

Token 117: ' first' (ID: 1577)
  Prédit: ' first'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' first' → logprob: -1.5162619352340698
    2. ' original' → logprob: -1.6412619352340698
    3. ' rest' → logprob: -1.6412619352340698
    4. ' encrypted' → logprob: -2.1412620544433594
    5. ' next' → logprob: -2.8912620544433594
    6. ' code' → logprob: -3.0162620544433594
    7. ' function' → logprob: -3.1412620544433594
    8. ')' → logprob: -3.2662620544433594
    9. ' encryption' → logprob: -4.766262054443359
    10. ' decrypted' → logprob: -4.891262054443359

Token 118: ' occurrence' (ID: 55807)
  Prédit: ' )'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' )' → logprob: -0.5584124326705933
    2. ')' → logprob: -1.3084124326705933
    3. ' changed' → logprob: -2.933412551879883
    4. ' occurrence' → logprob: -3.683412551879883
    5. ' character' → logprob: -3.933412551879883
    6. ' space' → logprob: -4.558412551879883
    7. '_' → logprob: -5.058412551879883
    8. ' ' → logprob: -5.433412551879883
    9. '_occ' → logprob: -5.683412551879883
    10. ' token' → logprob: -5.683412551879883

Token 119: ' of' (ID: 328)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.4487760066986084
    2. '   ' → logprob: -1.5737760066986084
    3. ':' → logprob: -2.4487760066986084
    4. '):
' → logprob: -3.5737760066986084
    5. ')' → logprob: -4.3237762451171875
    6. ' :' → logprob: -4.4487762451171875
    7. ',' → logprob: -5.5737762451171875
    8. 'def' → logprob: -6.3237762451171875
    9. ' ):' → logprob: -6.6987762451171875
    10. ' ' → logprob: -6.6987762451171875

Token 120: ' some' (ID: 1236)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.9067453145980835
    2. ' x' → logprob: -1.7817453145980835
    3. ' the' → logprob: -2.156745433807373
    4. ' chr' → logprob: -2.531745433807373
    5. ' c' → logprob: -3.156745433807373
    6. 'x' → logprob: -3.406745433807373
    7. 'a' → logprob: -3.781745433807373
    8. ''' → logprob: -3.781745433807373
    9. 'chr' → logprob: -3.781745433807373
    10. ' any' → logprob: -4.156745433807373

Token 121: ' letter' (ID: 10263)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1196744441986084
    2. ' )' → logprob: -1.1196744441986084
    3. ' character' → logprob: -1.8696744441986084
    4. ' ' → logprob: -2.1196744441986084
    5. '_' → logprob: -3.3696744441986084
    6. ' x' → logprob: -3.9946744441986084
    7. ' c' → logprob: -5.2446746826171875
    8. ' letter' → logprob: -5.3696746826171875
    9. ' _' → logprob: -6.2446746826171875
    10. ' token' → logprob: -6.6196746826171875

Token 122: ' x' (ID: 1215)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.33792421221733093
    2. '   ' → logprob: -2.2129242420196533
    3. ')' → logprob: -2.4629242420196533
    4. ':' → logprob: -2.7129242420196533
    5. '):
' → logprob: -4.712924003601074
    6. ' :' → logprob: -5.462924003601074
    7. '```' → logprob: -5.837924003601074
    8. ',' → logprob: -5.962924003601074
    9. ' ):' → logprob: -6.837924003601074
    10. 's' → logprob: -6.962924003601074

Token 123: ').
' (ID: 6294)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4673234224319458
    2. '   ' → logprob: -1.4673234224319458
    3. ':
' → logprob: -3.0923233032226562
    4. ' :' → logprob: -3.3423233032226562
    5. '
' → logprob: -3.8423233032226562
    6. '):' → logprob: -4.592323303222656
    7. 'def' → logprob: -4.842323303222656
    8. ' :
' → logprob: -5.092323303222656
    9. '):
' → logprob: -5.467323303222656
    10. ' ' → logprob: -6.217323303222656

Token 124: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02838924154639244
    2. '```' → logprob: -4.6533894538879395
    3. 'def' → logprob: -5.2783894538879395
    4. ':' → logprob: -5.4033894538879395
    5. ' candidates' → logprob: -6.1533894538879395
    6. '    ' → logprob: -6.6533894538879395
    7. '
' → logprob: -7.0283894538879395
    8. ' ' → logprob: -7.1533894538879395
    9. ' tokens' → logprob: -7.4033894538879395
    10. '    
' → logprob: -7.6533894538879395

Token 125: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05912201479077339
    2. ' ' → logprob: -4.434122085571289
    3. 'def' → logprob: -4.559122085571289
    4. '    
' → logprob: -4.809122085571289
    5. ' 
' → logprob: -5.059122085571289
    6. ':' → logprob: -5.559122085571289
    7. '    ' → logprob: -5.684122085571289
    8. '\' → logprob: -5.809122085571289
    9. '\n' → logprob: -6.059122085571289
    10. '
' → logprob: -7.059122085571289

Token 126: ' So' (ID: 2632)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23377707600593567
    2. ' candidates' → logprob: -2.7337770462036133
    3. 'def' → logprob: -3.1087770462036133
    4. ' possible' → logprob: -3.4837770462036133
    5. '
' → logprob: -3.9837770462036133
    6. ' def' → logprob: -4.358777046203613
    7. 'possible' → logprob: -4.483777046203613
    8. '    
' → logprob: -4.608777046203613
    9. ' 
' → logprob: -4.983777046203613
    10. 'import' → logprob: -6.983777046203613

Token 127: ' for' (ID: 395)
  Prédit: ' candidates'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' candidates' → logprob: -0.5023716688156128
    2. ' possible' → logprob: -1.8773716688156128
    3. ' def' → logprob: -2.7523717880249023
    4. '   ' → logprob: -3.0023717880249023
    5. ' for' → logprob: -3.2523717880249023
    6. ' return' → logprob: -3.6273717880249023
    7. ' n' → logprob: -4.002371788024902
    8. ' original' → logprob: -5.002371788024902
    9. ' ' → logprob: -5.377371788024902
    10. 'possible' → logprob: -5.502371788024902

Token 128: ' each' (ID: 2454)
  Prédit: ' c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.10149098187685013
    2. ' i' → logprob: -2.6014909744262695
    3. 'c' → logprob: -4.3514909744262695
    4. ' ' → logprob: -5.3514909744262695
    5. ' original' → logprob: -6.1014909744262695
    6. 'i' → logprob: -6.8514909744262695
    7. ' x' → logprob: -8.60149097442627
    8. ' possible' → logprob: -8.72649097442627
    9. ' idx' → logprob: -8.97649097442627
    10. '  ' → logprob: -8.97649097442627

Token 129: ' candidate' (ID: 17098)
  Prédit: ' c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.03494458645582199
    2. 'c' → logprob: -3.909944534301758
    3. ' ' → logprob: -5.284944534301758
    4. ' possible' → logprob: -6.034944534301758
    5. ' i' → logprob: -6.159944534301758
    6. ' character' → logprob: -6.659944534301758
    7. ' original' → logprob: -6.659944534301758
    8. ' candidate' → logprob: -7.534944534301758
    9. ' char' → logprob: -8.034944534301758
    10. ' token' → logprob: -8.784944534301758

Token 130: ' original' (ID: 4756)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5745644569396973
    2. '_' → logprob: -1.9495644569396973
    3. ':' → logprob: -2.3245644569396973
    4. ' :' → logprob: -2.4495644569396973
    5. ',' → logprob: -3.8245644569396973
    6. '):' → logprob: -3.8245644569396973
    7. ' ' → logprob: -4.449564456939697
    8. '_:' → logprob: -4.574564456939697
    9. ' _' → logprob: -4.699564456939697
    10. ' =' → logprob: -5.074564456939697

Token 131: ' string' (ID: 1621)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.0905582904815674
    2. '_' → logprob: -1.9655582904815674
    3. 's' → logprob: -2.0905582904815674
    4. ' :' → logprob: -2.2155582904815674
    5. '):' → logprob: -2.4655582904815674
    6. ' ' → logprob: -2.9655582904815674
    7. ')' → logprob: -3.0905582904815674
    8. ''' → logprob: -3.7155582904815674
    9. ' _' → logprob: -4.215558052062988
    10. ' ):' → logprob: -4.465558052062988

Token 132: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1800491362810135
    2. ' :' → logprob: -2.555049180984497
    3. '   ' → logprob: -3.430049180984497
    4. 's' → logprob: -4.180048942565918
    5. '):' → logprob: -4.555048942565918
    6. '[' → logprob: -5.055048942565918
    7. ',' → logprob: -5.180048942565918
    8. ' ' → logprob: -5.930048942565918
    9. '(s' → logprob: -6.180048942565918
    10. ' =' → logprob: -6.305048942565918

Token 133: ' exactly' (ID: 9707)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3116284906864166
    2. '    ' → logprob: -1.5616284608840942
    3. '   ' → logprob: -3.061628580093384
    4. ' 
' → logprob: -6.436628341674805
    5. '<|end|>' → logprob: -6.561628341674805
    6. '     
' → logprob: -6.686628341674805
    7. ' return' → logprob: -6.811628341674805
    8. '       ' → logprob: -7.061628341674805
    9. ' )' → logprob: -7.311628341674805
    10. ')' → logprob: -7.936628341674805

Token 134: ' zero' (ID: 12421)
  Prédit: ' one'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' one' → logprob: -0.002905443077906966
    2. 'one' → logprob: -5.877905368804932
    3. ' two' → logprob: -9.37790584564209
    4. '```' → logprob: -12.12790584564209
    5. '_one' → logprob: -13.12790584564209
    6. 'two' → logprob: -13.12790584564209
    7. '   ' → logprob: -13.25290584564209
    8. ' the' → logprob: -13.75290584564209
    9. '1' → logprob: -13.87790584564209
    10. ' ' → logprob: -14.37790584564209

Token 135: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.018915725871920586
    2. 'or' → logprob: -4.01891565322876
    3. ' ' → logprob: -7.51891565322876
    4. '<|end|>' → logprob: -8.893916130065918
    5. ',' → logprob: -10.893916130065918
    6. ' #' → logprob: -11.143916130065918
    7. '#' → logprob: -12.018916130065918
    8. '   ' → logprob: -12.018916130065918
    9. ' tokens' → logprob: -12.268916130065918
    10. ')' → logprob: -12.268916130065918

Token 136: ' one' (ID: 1001)
  Prédit: ' one'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' one' → logprob: -0.2610251009464264
    2. 'one' → logprob: -1.511025071144104
    3. '1' → logprob: -4.7610249519348145
    4. ' more' → logprob: -8.511025428771973
    5. 'more' → logprob: -9.136025428771973
    6. ' ' → logprob: -9.761025428771973
    7. '_one' → logprob: -10.136025428771973
    8. '   ' → logprob: -10.261025428771973
    9. '-one' → logprob: -11.386025428771973
    10. 'def' → logprob: -11.886025428771973

Token 137: ' character' (ID: 5855)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.3879646062850952
    2. '_' → logprob: -1.7629646062850952
    3. ' _' → logprob: -2.1379647254943848
    4. ' token' → logprob: -2.3879647254943848
    5. ')' → logprob: -2.5129647254943848
    6. ' character' → logprob: -3.0129647254943848
    7. ' tokens' → logprob: -3.1379647254943848
    8. ' )' → logprob: -3.2629647254943848
    9. ' occurrence' → logprob: -4.012964725494385
    10. ' space' → logprob: -4.012964725494385

Token 138: ' must' (ID: 2804)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.228356122970581
    2. '   ' → logprob: -1.353356122970581
    3. '):' → logprob: -1.728356122970581
    4. ' :' → logprob: -2.353356122970581
    5. ' ' → logprob: -2.728356122970581
    6. ')' → logprob: -3.478356122970581
    7. '<|end|>' → logprob: -4.60335636138916
    8. ' ):' → logprob: -4.85335636138916
    9. 's' → logprob: -5.10335636138916
    10. ' =' → logprob: -5.22835636138916

Token 139: ' have' (ID: 679)
  Prédit: ' be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.0011097323149442673
    2. ' have' → logprob: -8.501110076904297
    3. ' not' → logprob: -8.501110076904297
    4. ' appear' → logprob: -8.626110076904297
    5. ' differ' → logprob: -8.626110076904297
    6. 'be' → logprob: -9.626110076904297
    7. ' remain' → logprob: -10.001110076904297
    8. ' changed' → logprob: -10.376110076904297
    9. ' change' → logprob: -10.501110076904297
    10. ' match' → logprob: -10.501110076904297

Token 140: ' been' (ID: 1339)
  Prédit: ' changed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' changed' → logprob: -0.8507136106491089
    2. ' been' → logprob: -1.1007136106491089
    3. ' be' → logprob: -1.8507136106491089
    4. 'changed' → logprob: -3.1007137298583984
    5. 'been' → logprob: -3.8507137298583984
    6. 'be' → logprob: -4.225713729858398
    7. ' have' → logprob: -7.850713729858398
    8. ' replaced' → logprob: -8.100713729858398
    9. ' change' → logprob: -8.475713729858398
    10. '```' → logprob: -8.850713729858398

Token 141: ' decre' (ID: 12889)
  Prédit: 'changed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'changed' → logprob: -0.6197035312652588
    2. ' changed' → logprob: -0.9947035312652588
    3. ' replaced' → logprob: -2.619703531265259
    4. 'de' → logprob: -5.24470329284668
    5. ' decre' → logprob: -5.86970329284668
    6. 're' → logprob: -6.24470329284668
    7. ' decreased' → logprob: -6.24470329284668
    8. 'def' → logprob: -6.49470329284668
    9. 'sub' → logprob: -7.24470329284668
    10. ' decrypted' → logprob: -7.49470329284668

Token 142: 'mented' (ID: 34982)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.02907264232635498
    2. 'm' → logprob: -4.0290727615356445
    3. 'ded' → logprob: -5.4040727615356445
    4. 'mented' → logprob: -6.2790727615356445
    5. 'ed' → logprob: -7.1540727615356445
    6. 'pt' → logprob: -7.4040727615356445
    7. 'ased' → logprob: -7.6540727615356445
    8. 'mp' → logprob: -7.9040727615356445
    9. 'p' → logprob: -8.029072761535645
    10. '```' → logprob: -8.154072761535645

Token 143: ' during' (ID: 3354)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0688677430152893
    2. '   ' → logprob: -3.4438676834106445
    3. ':
' → logprob: -3.8188676834106445
    4. ' :' → logprob: -5.0688676834106445
    5. '
' → logprob: -6.9438676834106445
    6. ' :
' → logprob: -6.9438676834106445
    7. ' ' → logprob: -7.1938676834106445
    8. 'def' → logprob: -7.1938676834106445
    9. '\n' → logprob: -7.5688676834106445
    10. '(' → logprob: -8.193867683410645

Token 144: ' encryption' (ID: 48827)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.7360259890556335
    2. ' encryption' → logprob: -0.9860259890556335
    3. ' de' → logprob: -2.6110260486602783
    4. ' iteration' → logprob: -3.6110260486602783
    5. 'the' → logprob: -3.9860260486602783
    6. ' s' → logprob: -4.611025810241699
    7. 'de' → logprob: -5.736025810241699
    8. 's' → logprob: -5.861025810241699
    9. ' a' → logprob: -6.611025810241699
    10. 'en' → logprob: -6.861025810241699

Token 145: '.
' (ID: 558)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.23989854753017426
    2. '   ' → logprob: -1.7398985624313354
    3. ':
' → logprob: -4.114898681640625
    4. 'def' → logprob: -4.489898681640625
    5. ' :' → logprob: -5.864898681640625
    6. ' ' → logprob: -6.489898681640625
    7. '
' → logprob: -6.614898681640625
    8. '    
' → logprob: -7.614898681640625
    9. '):' → logprob: -7.739898681640625
    10. ' :
' → logprob: -7.864898681640625

Token 146: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17007994651794434
    2. ':' → logprob: -2.0450799465179443
    3. 'def' → logprob: -4.420080184936523
    4. ' candidates' → logprob: -4.795080184936523
    5. ' :' → logprob: -6.420080184936523
    6. ':
' → logprob: -6.920080184936523
    7. ' ' → logprob: -6.920080184936523
    8. '```' → logprob: -7.670080184936523
    9. '
' → logprob: -7.920080184936523
    10. '    
' → logprob: -8.045080184936523

Token 147: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.021590206772089005
    2. ':' → logprob: -5.146590232849121
    3. 'def' → logprob: -5.271590232849121
    4. ' candidates' → logprob: -5.771590232849121
    5. '    
' → logprob: -6.146590232849121
    6. '
' → logprob: -7.021590232849121
    7. ' ' → logprob: -7.146590232849121
    8. ' 
' → logprob: -7.271590232849121
    9. '    ' → logprob: -7.521590232849121
    10. ' :' → logprob: -8.021590232849121

Token 148: ' Therefore' (ID: 19233)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07058360427618027
    2. ' candidates' → logprob: -2.8205835819244385
    3. 'def' → logprob: -5.195583820343018
    4. '    
' → logprob: -7.070583820343018
    5. '    ' → logprob: -8.07058334350586
    6. '_candidates' → logprob: -8.19558334350586
    7. '```' → logprob: -8.19558334350586
    8. '
' → logprob: -8.82058334350586
    9. 'import' → logprob: -8.82058334350586
    10. ' ' → logprob: -9.07058334350586

Token 149: ',' (ID: 11)
  Prédit: ' candidates'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' candidates' → logprob: -0.08026658743619919
    2. ' ' → logprob: -3.4552664756774902
    3. '   ' → logprob: -3.8302664756774902
    4. ' possible' → logprob: -5.08026647567749
    5. '_candidates' → logprob: -5.83026647567749
    6. '    ' → logprob: -6.20526647567749
    7. ' for' → logprob: -6.33026647567749
    8. ' ' → logprob: -6.58026647567749
    9. ' def' → logprob: -6.83026647567749
    10. ' return' → logprob: -6.83026647567749

Token 150: ' we' (ID: 581)
  Prédit: ' candidates'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' candidates' → logprob: -0.23258565366268158
    2. ' res' → logprob: -2.9825856685638428
    3. ' possible' → logprob: -3.1075856685638428
    4. ' return' → logprob: -4.107585430145264
    5. ' def' → logprob: -4.357585430145264
    6. ' original' → logprob: -4.357585430145264
    7. '   ' → logprob: -4.607585430145264
    8. 'c' → logprob: -4.607585430145264
    9. ' result' → logprob: -4.607585430145264
    10. ' results' → logprob: -4.732585430145264

Token 151: ' must' (ID: 2804)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.1240307092666626
    2. ' need' → logprob: -1.2490307092666626
    3. ' can' → logprob: -1.3740307092666626
    4. ' continue' → logprob: -2.499030590057373
    5. ' want' → logprob: -4.624030590057373
    6. '_' → logprob: -5.124030590057373
    7. ''ll' → logprob: -5.249030590057373
    8. ' should' → logprob: -5.374030590057373
    9. ' have' → logprob: -5.499030590057373
    10. ' return' → logprob: -5.499030590057373

Token 152: ' generate' (ID: 10419)
  Prédit: ' generate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' generate' → logprob: -0.8746182918548584
    2. ' return' → logprob: -0.9996182918548584
    3. ' consider' → logprob: -2.2496182918548584
    4. ' find' → logprob: -3.3746182918548584
    5. ' try' → logprob: -3.7496182918548584
    6. ' yield' → logprob: -4.1246185302734375
    7. ' check' → logprob: -4.6246185302734375
    8. ' explore' → logprob: -4.7496185302734375
    9. ' continue' → logprob: -5.2496185302734375
    10. ' iterate' → logprob: -5.8746185302734375

Token 153: ' all' (ID: 722)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.7924239039421082
    2. ' [' → logprob: -1.292423963546753
    3. '[' → logprob: -2.042423963546753
    4. ' ' → logprob: -2.417423963546753
    5. ' [
' → logprob: -4.542423725128174
    6. ' possible' → logprob: -4.667423725128174
    7. ' []' → logprob: -4.792423725128174
    8. ' candidates' → logprob: -4.792423725128174
    9. ' an' → logprob: -5.167423725128174
    10. ' all' → logprob: -5.417423725128174

Token 154: ' possible' (ID: 4149)
  Prédit: ' possible'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' possible' → logprob: -0.1342613250017166
    2. 'possible' → logprob: -2.6342613697052
    3. ' candidates' → logprob: -3.7592613697052
    4. '_possible' → logprob: -4.634261131286621
    5. ' original' → logprob: -5.009261131286621
    6. '_candidates' → logprob: -5.134261131286621
    7. ' candidate' → logprob: -6.384261131286621
    8. ' lists' → logprob: -6.884261131286621
    9. ' ' → logprob: -7.009261131286621
    10. ' [' → logprob: -7.259261131286621

Token 155: ' strings' (ID: 18279)
  Prédit: ' original'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' original' → logprob: -0.3645971417427063
    2. ' candidates' → logprob: -1.4895970821380615
    3. 's' → logprob: -3.8645970821380615
    4. 'original' → logprob: -4.114597320556641
    5. ' originals' → logprob: -4.114597320556641
    6. ' candidate' → logprob: -5.489597320556641
    7. '_candidates' → logprob: -5.614597320556641
    8. ' s' → logprob: -5.864597320556641
    9. ' ' → logprob: -5.989597320556641
    10. ' lists' → logprob: -6.239597320556641

Token 156: ' that' (ID: 484)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.15803812444210052
    2. '   ' → logprob: -2.0330381393432617
    3. ' :' → logprob: -5.283038139343262
    4. ':
' → logprob: -5.908038139343262
    5. '(s' → logprob: -6.533038139343262
    6. 'def' → logprob: -6.908038139343262
    7. '[' → logprob: -7.283038139343262
    8. '):' → logprob: -7.283038139343262
    9. ' ' → logprob: -7.658038139343262
    10. ',' → logprob: -7.658038139343262

Token 157: ' map' (ID: 4014)
  Prédit: ' could'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' could' → logprob: -0.7808230519294739
    2. 'could' → logprob: -1.155822992324829
    3. ' can' → logprob: -1.780822992324829
    4. 'can' → logprob: -3.030822992324829
    5. ' differ' → logprob: -5.780823230743408
    6. ' are' → logprob: -6.530823230743408
    7. 'd' → logprob: -7.030823230743408
    8. 'diff' → logprob: -7.280823230743408
    9. ' match' → logprob: -7.405823230743408
    10. 'decrypt' → logprob: -7.780823230743408

Token 158: ' to' (ID: 316)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.20005574822425842
    2. ' _' → logprob: -2.4500558376312256
    3. ' to' → logprob: -2.8250558376312256
    4. '_to' → logprob: -4.3250555992126465
    5. 'to' → logprob: -5.2000555992126465
    6. ')' → logprob: -5.4500555992126465
    7. '(' → logprob: -5.7000555992126465
    8. ' ' → logprob: -5.7000555992126465
    9. '   ' → logprob: -5.9500555992126465
    10. '=' → logprob: -7.2000555992126465

Token 159: ' encrypted' (ID: 47764)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5266110301017761
    2. ' s' → logprob: -0.9016110301017761
    3. ' the' → logprob: -6.026610851287842
    4. 'the' → logprob: -7.276610851287842
    5. '[s' → logprob: -9.276611328125
    6. 'possible' → logprob: -10.276611328125
    7. '`s' → logprob: -10.276611328125
    8. ' each' → logprob: -10.401611328125
    9. ' encrypted' → logprob: -10.776611328125
    10. ' a' → logprob: -10.776611328125

Token 160: ' s' (ID: 265)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7952961921691895
    2. 's' → logprob: -1.5452961921691895
    3. ' ' → logprob: -2.0452961921691895
    4. '_s' → logprob: -3.1702961921691895
    5. ' _' → logprob: -3.1702961921691895
    6. ':' → logprob: -4.1702961921691895
    7. '_strings' → logprob: -4.1702961921691895
    8. '   ' → logprob: -4.2952961921691895
    9. ' s' → logprob: -4.2952961921691895
    10. '_chars' → logprob: -4.4202961921691895

Token 161: ' by' (ID: 656)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2971857190132141
    2. '   ' → logprob: -1.5471856594085693
    3. ' :' → logprob: -4.297185897827148
    4. ':
' → logprob: -4.422185897827148
    5. 'def' → logprob: -4.922185897827148
    6. ',' → logprob: -6.422185897827148
    7. ' ' → logprob: -6.547185897827148
    8. '(' → logprob: -6.672185897827148
    9. ' :
' → logprob: -6.922185897827148
    10. '[' → logprob: -7.422185897827148

Token 162: ' reversing' (ID: 156690)
  Prédit: ' iter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' iter' → logprob: -1.3034214973449707
    2. ' considering' → logprob: -1.3034214973449707
    3. ' generating' → logprob: -2.8034214973449707
    4. ' choosing' → logprob: -3.0534214973449707
    5. ' replacing' → logprob: -3.1784214973449707
    6. ' continuing' → logprob: -3.6784214973449707
    7. ' returning' → logprob: -3.8034214973449707
    8. 'def' → logprob: -3.8034214973449707
    9. ' exploring' → logprob: -3.8034214973449707
    10. 'yield' → logprob: -4.053421497344971

Token 163: ' this' (ID: 495)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.33311912417411804
    2. 's' → logprob: -1.4581191539764404
    3. ' the' → logprob: -4.083118915557861
    4. ' ' → logprob: -4.833118915557861
    5. '   ' → logprob: -4.833118915557861
    6. '(s' → logprob: -5.833118915557861
    7. ')' → logprob: -6.458118915557861
    8. '```' → logprob: -6.458118915557861
    9. 'the' → logprob: -6.708118915557861
    10. ' a' → logprob: -6.958118915557861

Token 164: ' rule' (ID: 10652)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7073385119438171
    2. ' :' → logprob: -0.9573385119438171
    3. ' :
' → logprob: -2.332338571548462
    4. ':
' → logprob: -4.082338333129883
    5. ' ' → logprob: -5.332338333129883
    6. '   ' → logprob: -6.707338333129883
    7. 'def' → logprob: -7.332338333129883
    8. '\n' → logprob: -8.582338333129883
    9. ' 
' → logprob: -8.832338333129883
    10. ' ,' → logprob: -8.957338333129883

Token 165: '.

' (ID: 364)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3585611879825592
    2. '   ' → logprob: -1.3585611581802368
    3. ':
' → logprob: -3.7335612773895264
    4. ' :' → logprob: -4.858561038970947
    5. 'def' → logprob: -5.108561038970947
    6. 'import' → logprob: -6.983561038970947
    7. ' candidates' → logprob: -7.108561038970947
    8. ' :
' → logprob: -7.233561038970947
    9. ' ' → logprob: -7.483561038970947
    10. '```' → logprob: -7.858561038970947

Token 166: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04942891374230385
    2. ':' → logprob: -3.299428939819336
    3. 'def' → logprob: -5.799428939819336
    4. 'import' → logprob: -6.799428939819336
    5. ' :' → logprob: -6.799428939819336
    6. ' ' → logprob: -6.924428939819336
    7. ' candidates' → logprob: -6.924428939819336
    8. '    ' → logprob: -7.299428939819336
    9. '```' → logprob: -7.549428939819336
    10. '    
' → logprob: -7.674428939819336

Token 167: ' n' (ID: 297)
  Prédit: ' candidates'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' candidates' → logprob: -0.5230186581611633
    2. '   ' → logprob: -1.0230185985565186
    3. ' possible' → logprob: -4.273018836975098
    4. 'n' (adapté à ' n') → logprob: -5.273018836975098
    5. ' n' → logprob: -5.273018836975098
    6. ' import' → logprob: -5.398018836975098
    7. 'possible' → logprob: -5.648018836975098
    8. ' tokens' → logprob: -6.398018836975098
    9. ' lines' → logprob: -6.523018836975098
    10. 'c' → logprob: -6.898018836975098

Token 168: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47566935420036316
    2. '=' → logprob: -0.9756693840026855
    3. ' ' → logprob: -6.9756693840026855
    4. '   ' → logprob: -7.9756693840026855
    5. 'u' → logprob: -8.975668907165527
    6. '  ' → logprob: -8.975668907165527
    7. ',' → logprob: -11.350668907165527
    8. '=int' → logprob: -11.600668907165527
    9. '    ' → logprob: -11.850668907165527
    10. ':' → logprob: -12.350668907165527

Token 169: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.38687366247177124
    2. ' len' → logprob: -1.136873722076416
    3. '(len' → logprob: -13.261873245239258
    4. '   ' → logprob: -14.636873245239258
    5. '=len' → logprob: -15.511873245239258
    6. '[len' → logprob: -16.011873245239258
    7. '	len' → logprob: -17.261873245239258
    8. ',len' → logprob: -18.261873245239258
    9. '<len' → logprob: -19.136873245239258
    10. '0' → logprob: -19.386873245239258

Token 170: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.00014799882774241269
    2. '(' → logprob: -9.000147819519043
    3. 's' → logprob: -10.625147819519043
    4. ')' → logprob: -16.25014877319336
    5. '(
' → logprob: -16.62514877319336
    6. ' (' → logprob: -16.87514877319336
    7. ' s' → logprob: -18.50014877319336
    8. '```' → logprob: -19.37514877319336
    9. '_s' → logprob: -20.00014877319336
    10. '(n' → logprob: -20.00014877319336

Token 171: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3306015716807451e-05
    2. ' )' → logprob: -11.37501335144043
    3. ')
' → logprob: -13.37501335144043
    4. '   ' → logprob: -16.25001335144043
    5. ')n' → logprob: -16.62501335144043
    6. ' ' → logprob: -17.62501335144043
    7. ')return' → logprob: -17.75001335144043
    8. ')

' → logprob: -17.75001335144043
    9. 'def' → logprob: -18.25001335144043
    10. ')#' → logprob: -18.25001335144043

Token 172: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07380415499210358
    2. ' candidates' → logprob: -2.9488041400909424
    3. '
' → logprob: -5.1988043785095215
    4. '    
' → logprob: -5.3238043785095215
    5. 'possible' → logprob: -6.3238043785095215
    6. 'def' → logprob: -6.5738043785095215
    7. 'c' → logprob: -6.9488043785095215
    8. ' possible' → logprob: -7.0738043785095215
    9. ' dp' → logprob: -7.3238043785095215
    10. '_candidates' → logprob: -7.3238043785095215

Token 173: ' candidates' (ID: 18116)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.35414600372314453
    2. 'res' → logprob: -2.2291460037231445
    3. ' res' → logprob: -2.3541460037231445
    4. 'dp' → logprob: -3.4791460037231445
    5. ' candidates' → logprob: -3.6041460037231445
    6. 'result' → logprob: -4.6041460037231445
    7. 'results' → logprob: -4.7291460037231445
    8. ' dp' → logprob: -4.9791460037231445
    9. 'from' → logprob: -5.6041460037231445
    10. 'possible' → logprob: -5.9791460037231445

Token 174: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.048785388469696045
    2. '=' → logprob: -3.048785448074341
    3. 's' → logprob: -8.673785209655762
    4. ' ' → logprob: -11.923785209655762
    5. '_' → logprob: -12.173785209655762
    6. '=[]' → logprob: -12.298785209655762
    7. '[' → logprob: -12.673785209655762
    8. ')' → logprob: -13.298785209655762
    9. ',' → logprob: -13.673785209655762
    10. '   ' → logprob: -13.923785209655762

Token 175: ' []

' (ID: 32833)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.766630232334137
    2. ' []' → logprob: -0.766630232334137
    3. ' set' → logprob: -3.891630172729492
    4. '[' → logprob: -4.516630172729492
    5. '["' → logprob: -4.641630172729492
    6. '['' → logprob: -4.766630172729492
    7. ' ['' → logprob: -5.016630172729492
    8. ' [' → logprob: -5.141630172729492
    9. 'set' → logprob: -5.141630172729492
    10. ' ["' → logprob: -6.016630172729492

Token 176: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.21489480137825012
    2. '   ' → logprob: -2.3398947715759277
    3. ' def' → logprob: -3.2148947715759277
    4. 'for' → logprob: -3.7148947715759277
    5. 'def' → logprob: -3.8398947715759277
    6. '
' → logprob: -5.214894771575928
    7. '    
' → logprob: -5.964894771575928
    8. ' 
' → logprob: -6.339894771575928
    9. ' from' → logprob: -7.964894771575928
    10. '```' → logprob: -8.964895248413086

Token 177: ' #' (ID: 1069)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3356102406978607
    2. 'for' → logprob: -1.335610270500183
    3. 'from' → logprob: -3.9606101512908936
    4. ' def' → logprob: -6.710610389709473
    5. '   ' → logprob: -7.085610389709473
    6. ' for' → logprob: -7.085610389709473
    7. 'stack' → logprob: -9.585610389709473
    8. ' from' → logprob: -10.335610389709473
    9. 'import' → logprob: -11.085610389709473
    10. 'possible' → logprob: -11.585610389709473

Token 178: ' We' (ID: 1416)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.43413016200065613
    2. 'for' → logprob: -1.4341301918029785
    3. 'from' → logprob: -2.1841301918029785
    4. 'dp' → logprob: -7.4341301918029785
    5. '   ' → logprob: -8.30912971496582
    6. 'possible' → logprob: -8.80912971496582
    7. ' def' → logprob: -9.30912971496582
    8. 'import' → logprob: -9.80912971496582
    9. ' for' → logprob: -9.93412971496582
    10. ' from' → logprob: -10.55912971496582

Token 179: ' try' (ID: 2075)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.11144516617059708
    2. 'for' → logprob: -2.611445188522339
    3. ' ' → logprob: -4.11144495010376
    4. '   ' → logprob: -5.23644495010376
    5. ' continue' → logprob: -5.98644495010376
    6. ' can' → logprob: -6.11144495010376
    7. ' def' → logprob: -6.23644495010376
    8. ' want' → logprob: -7.36144495010376
    9. 'def' → logprob: -7.48644495010376
    10. ' need' → logprob: -7.48644495010376

Token 180: ' all' (ID: 722)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.27600231766700745
    2. ' to' → logprob: -1.651002287864685
    3. ' all' → logprob: -4.026002407073975
    4. 'to' → logprob: -4.651002407073975
    5. '   ' → logprob: -4.901002407073975
    6. ' :' → logprob: -5.526002407073975
    7. 'all' → logprob: -5.901002407073975
    8. ' for' → logprob: -6.151002407073975
    9. ':
' → logprob: -6.276002407073975
    10. ' i' → logprob: -7.401002407073975

Token 181: ' possibilities' (ID: 31061)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.1746748834848404
    2. ' for' → logprob: -3.1746749877929688
    3. ' positions' → logprob: -3.5496749877929688
    4. ' possible' → logprob: -3.6746749877929688
    5. 'i' → logprob: -4.049674987792969
    6. ' original' → logprob: -4.424674987792969
    7. ' def' → logprob: -4.549674987792969
    8. ' indices' → logprob: -5.174674987792969
    9. 'possible' → logprob: -5.924674987792969
    10. 'for' → logprob: -6.049674987792969

Token 182: ' where' (ID: 1919)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.07585719972848892
    2. 'for' → logprob: -3.325857162475586
    3. '   ' → logprob: -3.450857162475586
    4. ':' → logprob: -5.700857162475586
    5. ' ' → logprob: -6.950857162475586
    6. '    ' → logprob: -8.200857162475586
    7. '
' → logprob: -8.700857162475586
    8. ' 
' → logprob: -8.950857162475586
    9. ' to' → logprob: -9.200857162475586
    10. '    
' → logprob: -9.575857162475586

Token 183: ' we' (ID: 581)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5285254120826721
    2. ' i' → logprob: -1.6535253524780273
    3. 'changed' → logprob: -2.6535253524780273
    4. ' changed' → logprob: -2.7785253524780273
    5. ' one' → logprob: -3.1535253524780273
    6. ' the' → logprob: -4.278525352478027
    7. 'one' → logprob: -4.528525352478027
    8. '   ' → logprob: -4.653525352478027
    9. 'change' → logprob: -6.403525352478027
    10. 'the' → logprob: -6.528525352478027

Token 184: ' pick' (ID: 5230)
  Prédit: ' try'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' try' → logprob: -1.4750255346298218
    2. ' replace' → logprob: -1.7250255346298218
    3. ' consider' → logprob: -1.8500255346298218
    4. 'replace' → logprob: -2.4750256538391113
    5. ' either' → logprob: -3.3500256538391113
    6. ' choose' → logprob: -3.3500256538391113
    7. ' keep' → logprob: -3.3500256538391113
    8. ' assume' → logprob: -3.3500256538391113
    9. ' pick' → logprob: -3.7250256538391113
    10. ' change' → logprob: -3.8500256538391113

Token 185: ' an' (ID: 448)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.6655298471450806
    2. 'i' → logprob: -0.9155298471450806
    3. ' an' → logprob: -3.290529727935791
    4. ' a' → logprob: -3.665529727935791
    5. ' the' → logprob: -4.790529727935791
    6. ' one' → logprob: -4.790529727935791
    7. 'a' → logprob: -6.165529727935791
    8. '   ' → logprob: -6.915529727935791
    9. ' no' → logprob: -7.665529727935791
    10. 'an' → logprob: -7.915529727935791

Token 186: ' index' (ID: 3472)
  Prédit: ' index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' index' → logprob: -0.4597237706184387
    2. 'index' → logprob: -1.209723711013794
    3. ' i' → logprob: -3.334723711013794
    4. 'i' → logprob: -3.459723711013794
    5. 'idx' → logprob: -6.584723949432373
    6. ' ' → logprob: -7.709723949432373
    7. ' idx' → logprob: -7.834723949432373
    8. ' original' → logprob: -7.834723949432373
    9. '   ' → logprob: -8.334723472595215
    10. ' occurrence' → logprob: -9.834723472595215

Token 187: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.18456408381462097
    2. 'i' → logprob: -2.1845641136169434
    3. ' in' → logprob: -3.0595641136169434
    4. '   ' → logprob: -5.934564113616943
    5. ' for' → logprob: -5.934564113616943
    6. ' from' → logprob: -6.809564113616943
    7. ' to' → logprob: -6.809564113616943
    8. ' ' → logprob: -8.184563636779785
    9. 'from' → logprob: -8.184563636779785
    10. 'in' → logprob: -8.559563636779785

Token 188: ' at' (ID: 540)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.08741045743227005
    2. 'in' → logprob: -3.2124104499816895
    3. ' for' → logprob: -4.0874104499816895
    4. 'for' → logprob: -4.4624104499816895
    5. '   ' → logprob: -5.2124104499816895
    6. ',' → logprob: -5.8374104499816895
    7. '=' → logprob: -6.0874104499816895
    8. ' ' → logprob: -6.7124104499816895
    9. 'from' → logprob: -7.3374104499816895
    10. ' to' → logprob: -7.3374104499816895

Token 189: ' which' (ID: 1118)
  Prédit: ' which'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' which' → logprob: -0.48012495040893555
    2. 'which' → logprob: -0.9801249504089355
    3. 'range' → logprob: -5.3551249504089355
    4. ' range' → logprob: -7.1051249504089355
    5. '   ' → logprob: -8.355125427246094
    6. ' ' → logprob: -8.855125427246094
    7. '0' → logprob: -9.730125427246094
    8. '    ' → logprob: -11.730125427246094
    9. ' wich' → logprob: -12.105125427246094
    10. 'i' → logprob: -12.230125427246094

Token 190: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.36970090866088867
    2. 'the' → logprob: -1.9947009086608887
    3. ' we' → logprob: -2.4947009086608887
    4. ' a' → logprob: -3.7447009086608887
    5. 'we' → logprob: -4.244700908660889
    6. ' to' → logprob: -4.244700908660889
    7. 'a' → logprob: -4.619700908660889
    8. '   ' → logprob: -4.744700908660889
    9. 'to' → logprob: -5.494700908660889
    10. 'original' → logprob: -5.494700908660889

Token 191: ' original' (ID: 4756)
  Prédit: 'original'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'original' → logprob: -0.9432547688484192
    2. ' original' → logprob: -1.3182547092437744
    3. 'de' → logprob: -3.3182547092437744
    4. 'change' → logprob: -3.3182547092437744
    5. 'first' → logprob: -3.5682547092437744
    6. 'for' → logprob: -3.5682547092437744
    7. ' first' → logprob: -3.5682547092437744
    8. 'c' → logprob: -3.8182547092437744
    9. ' for' → logprob: -4.0682549476623535
    10. 's' → logprob: -4.0682549476623535

Token 192: ' had' (ID: 1458)
  Prédit: ' character'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' character' → logprob: -0.23722471296787262
    2. 'character' → logprob: -2.612224817276001
    3. ' string' → logprob: -2.737224817276001
    4. 'string' → logprob: -3.487224817276001
    5. ' was' → logprob: -3.862224817276001
    6. ' could' → logprob: -5.862224578857422
    7. 'char' → logprob: -6.112224578857422
    8. 's' → logprob: -6.237224578857422
    9. ' letter' → logprob: -6.237224578857422
    10. ' for' → logprob: -6.612224578857422

Token 193: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.7157725095748901
    2. 'a' → logprob: -1.0907725095748901
    3. ' the' → logprob: -2.2157726287841797
    4. 'the' → logprob: -3.4657726287841797
    5. ' an' → logprob: -4.59077262878418
    6. 'ord' → logprob: -5.71577262878418
    7. ' chr' → logprob: -5.71577262878418
    8. 'an' → logprob: -6.09077262878418
    9. 'chr' → logprob: -6.09077262878418
    10. ' ord' → logprob: -6.09077262878418

Token 194: ' letter' (ID: 10263)
  Prédit: 'character'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'character' → logprob: -0.7702123522758484
    2. 'b' → logprob: -1.6452124118804932
    3. ' character' → logprob: -2.145212411880493
    4. 'letter' → logprob: -2.520212411880493
    5. ''' → logprob: -3.270212411880493
    6. ''b' → logprob: -3.895212411880493
    7. 'x' → logprob: -4.395212173461914
    8. 'char' → logprob: -4.645212173461914
    9. '   ' → logprob: -4.895212173461914
    10. '>' → logprob: -5.020212173461914

Token 195: ' c' (ID: 274)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.5665557384490967
    2. ' that' → logprob: -1.8165557384490967
    3. ' =' → logprob: -2.1915557384490967
    4. '   ' → logprob: -2.3165557384490967
    5. ' from' → logprob: -2.5665557384490967
    6. ' in' → logprob: -2.5665557384490967
    7. ' >=' → logprob: -3.0665557384490967
    8. ' i' → logprob: -3.6915557384490967
    9. ' c' → logprob: -3.9415557384490967
    10. '=' → logprob: -4.066555976867676

Token 196: '+' (ID: 10)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7696119546890259
    2. 'for' → logprob: -2.1446118354797363
    3. ' =' → logprob: -2.2696118354797363
    4. ' in' → logprob: -2.2696118354797363
    5. '=' → logprob: -2.7696118354797363
    6. ' ' → logprob: -2.8946118354797363
    7. '   ' → logprob: -3.6446118354797363
    8. ',' → logprob: -4.269611835479736
    9. ')' → logprob: -4.394611835479736
    10. 's' → logprob: -4.644611835479736

Token 197: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.010115142911672592
    2. '=' → logprob: -5.510115146636963
    3. '+' → logprob: -6.510115146636963
    4. ''' → logprob: -6.885115146636963
    5. '   ' → logprob: -6.885115146636963
    6. ' ' → logprob: -7.385115146636963
    7. ' =' → logprob: -8.135114669799805
    8. '#' → logprob: -8.635114669799805
    9. '```' → logprob: -8.760114669799805
    10. 'ord' → logprob: -9.010114669799805

Token 198: ' instead' (ID: 7665)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3686368763446808
    2. '   ' → logprob: -1.3686368465423584
    3. 'for' → logprob: -2.9936368465423584
    4. ' ' → logprob: -5.9936370849609375
    5. ',' → logprob: -7.8686370849609375
    6. '    ' → logprob: -8.493637084960938
    7. 'def' → logprob: -9.243637084960938
    8. '  ' → logprob: -9.368637084960938
    9. ' to' → logprob: -9.368637084960938
    10. ':' → logprob: -9.743637084960938

Token 199: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.37926560640335083
    2. 'of' → logprob: -1.754265546798706
    3. '   ' → logprob: -2.379265546798706
    4. ':' → logprob: -3.879265546798706
    5. '_of' → logprob: -4.754265785217285
    6. '=' → logprob: -5.004265785217285
    7. 'for' → logprob: -5.254265785217285
    8. ' for' → logprob: -6.129265785217285
    9. ' ' → logprob: -6.629265785217285
    10. '    ' → logprob: -6.879265785217285

Token 200: ' c' (ID: 274)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6241535544395447
    2. 'c' → logprob: -0.8741535544395447
    3. ' s' → logprob: -3.9991536140441895
    4. ' c' → logprob: -4.1241536140441895
    5. ')' → logprob: -5.7491536140441895
    6. ''' → logprob: -6.1241536140441895
    7. ''s' → logprob: -6.4991536140441895
    8. '   ' → logprob: -6.6241536140441895
    9. ' ' → logprob: -7.6241536140441895
    10. '
' → logprob: -7.7491536140441895

Token 201: '.
' (ID: 558)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6505825519561768
    2. '   ' → logprob: -1.1505825519561768
    3. 'for' → logprob: -1.9005825519561768
    4. ',' → logprob: -5.275582313537598
    5. ':' → logprob: -5.400582313537598
    6. ' ' → logprob: -7.400582313537598
    7. '.' → logprob: -7.775582313537598
    8. ' ,' → logprob: -8.400582313537598
    9. '<|end|>' → logprob: -8.400582313537598
    10. ')' → logprob: -8.525582313537598

Token 202: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.10314228385686874
    2. '   ' → logprob: -2.853142261505127
    3. 'for' → logprob: -3.228142261505127
    4. ' 
' → logprob: -8.353142738342285
    5. '
' → logprob: -8.728142738342285
    6. '    
' → logprob: -8.853142738342285
    7. ' ' → logprob: -9.978142738342285
    8. '	for' → logprob: -10.603142738342285
    9. '    ' → logprob: -10.853142738342285
    10. '  
' → logprob: -11.478142738342285

Token 203: ' #' (ID: 1069)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.20457501709461212
    2. 'for' → logprob: -1.7045750617980957
    3. '   ' → logprob: -5.954575061798096
    4. ' 
' → logprob: -8.204574584960938
    5. '
' → logprob: -8.829574584960938
    6. ' ' → logprob: -9.954574584960938
    7. '    
' → logprob: -10.204574584960938
    8. '```' → logprob: -10.579574584960938
    9. '  
' → logprob: -11.829574584960938
    10. 'def' → logprob: -12.204574584960938

Token 204: ' If' (ID: 1843)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.47413644194602966
    2. 'for' → logprob: -0.974136471748352
    3. '   ' → logprob: -10.349136352539062
    4. '
' → logprob: -11.349136352539062
    5. '```' → logprob: -11.974136352539062
    6. ' 
' → logprob: -13.099136352539062
    7. ' if' → logprob: -13.099136352539062
    8. 'i' → logprob: -14.099136352539062
    9. ' possible' → logprob: -14.224136352539062
    10. ' i' → logprob: -14.224136352539062

Token 205: ' at' (ID: 540)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.02063496597111225
    2. 'i' → logprob: -4.02063512802124
    3. ' s' → logprob: -6.64563512802124
    4. ' n' → logprob: -7.02063512802124
    5. ' not' → logprob: -8.895634651184082
    6. 'n' → logprob: -10.270634651184082
    7. ' c' → logprob: -10.270634651184082
    8. 's' → logprob: -10.770634651184082
    9. ' we' → logprob: -11.395634651184082
    10. '    ' → logprob: -12.270634651184082

Token 206: ' index' (ID: 3472)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5925860404968262
    2. ' i' → logprob: -0.8425860404968262
    3. ' the' → logprob: -5.717586040496826
    4. '   ' → logprob: -6.217586040496826
    5. ' index' → logprob: -6.842586040496826
    6. '0' → logprob: -6.842586040496826
    7. ' least' → logprob: -6.842586040496826
    8. ' ' → logprob: -6.967586040496826
    9. 'index' → logprob: -6.967586040496826
    10. ' any' → logprob: -6.967586040496826

Token 207: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.07977359741926193
    2. 'i' → logprob: -2.5797736644744873
    3. '0' → logprob: -7.829773426055908
    4. ' ' → logprob: -8.079773902893066
    5. '=' → logprob: -9.829773902893066
    6. ' =' → logprob: -9.954773902893066
    7. '    ' → logprob: -10.829773902893066
    8. '   ' → logprob: -11.454773902893066
    9. ' s' → logprob: -11.829773902893066
    10. '```' → logprob: -12.204773902893066

Token 208: ',' (ID: 11)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.15349969267845154
    2. ' <' → logprob: -2.2784996032714844
    3. '==' → logprob: -3.4034996032714844
    4. ' =' → logprob: -6.403499603271484
    5. ' <=' → logprob: -6.528499603271484
    6. '=' → logprob: -6.903499603271484
    7. ' ' → logprob: -7.278499603271484
    8. ' >' → logprob: -8.028499603271484
    9. '<' → logprob: -8.278499603271484
    10. ' >=' → logprob: -8.278499603271484

Token 209: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.24051254987716675
    2. 's' → logprob: -1.6155126094818115
    3. ' c' → logprob: -5.865512371063232
    4. ' we' → logprob: -6.240512371063232
    5. ' ord' → logprob: -6.490512371063232
    6. ' i' → logprob: -6.615512371063232
    7. 'c' → logprob: -6.990512371063232
    8. ' True' → logprob: -6.990512371063232
    9. 'ord' → logprob: -7.240512371063232
    10. 'i' → logprob: -7.240512371063232

Token 210: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.537180211627856e-05
    2. '```' → logprob: -11.375045776367188
    3. '==' → logprob: -11.625045776367188
    4. ' ==' → logprob: -11.875045776367188
    5. '\[' → logprob: -12.375045776367188
    6. '[' → logprob: -12.500045776367188
    7. '   ' → logprob: -13.000045776367188
    8. ' [' → logprob: -13.250045776367188
    9. 'i' → logprob: -13.625045776367188
    10. '[I' → logprob: -13.625045776367188

Token 211: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.15103618800640106
    2. ')' → logprob: -3.151036262512207
    3. ']==' → logprob: -3.526036262512207
    4. ' ]' → logprob: -3.651036262512207
    5. ' ==' → logprob: -4.651036262512207
    6. ')]' → logprob: -4.651036262512207
    7. '==' → logprob: -4.776036262512207
    8. ' )' → logprob: -5.901036262512207
    9. ')==' → logprob: -6.776036262512207
    10. ']=' → logprob: -6.776036262512207

Token 212: ' !=' (ID: 1666)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.6949242353439331
    2. '==' → logprob: -1.194924235343933
    3. ' in' → logprob: -2.1949243545532227
    4. ' !=' → logprob: -3.0699243545532227
    5. '!=' → logprob: -3.9449243545532227
    6. '=' → logprob: -6.069924354553223
    7. '>' → logprob: -6.194924354553223
    8. ' <' → logprob: -6.194924354553223
    9. ' is' → logprob: -6.194924354553223
    10. 'in' → logprob: -6.319924354553223

Token 213: ' '' (ID: 461)
  Prédit: ''a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''a' → logprob: -0.0038011460565030575
    2. ''s' → logprob: -5.878801345825195
    3. ''b' → logprob: -7.753801345825195
    4. ''' → logprob: -8.253801345825195
    5. ' '' → logprob: -8.503801345825195
    6. 'a' → logprob: -9.628801345825195
    7. ''z' → logprob: -11.503801345825195
    8. ''d' → logprob: -12.128801345825195
    9. ''n' → logprob: -13.128801345825195
    10. ''en' → logprob: -13.253801345825195

Token 214: 'z' (ID: 89)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0034831815864890814
    2. ''a' → logprob: -5.753483295440674
    3. 'b' → logprob: -9.003482818603516
    4. ''' → logprob: -9.503482818603516
    5. 'z' → logprob: -11.253482818603516
    6. '`' → logprob: -11.378482818603516
    7. ''b' → logprob: -11.378482818603516
    8. '')' → logprob: -11.503482818603516
    9. ''s' → logprob: -11.503482818603516
    10. ' a' → logprob: -12.003482818603516

Token 215: ''' (ID: 6)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.535179853439331
    2. ':' → logprob: -1.035179853439331
    3. ':
' → logprob: -3.910179853439331
    4. 'and' → logprob: -4.28518009185791
    5. '':' → logprob: -4.53518009185791
    6. ''' → logprob: -4.78518009185791
    7. '   ' → logprob: -6.53518009185791
    8. ' or' → logprob: -6.91018009185791
    9. ',' → logprob: -7.03518009185791
    10. '':
' → logprob: -7.28518009185791

Token 216: ' (' (ID: 350)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.07496905326843262
    2. ':' → logprob: -3.1999690532684326
    3. 'and' → logprob: -3.6999690532684326
    4. ':
' → logprob: -5.199969291687012
    5. ',' → logprob: -7.324969291687012
    6. '   ' → logprob: -8.574969291687012
    7. ' :' → logprob: -9.199969291687012
    8. ' ' → logprob: -9.699969291687012
    9. ' or' → logprob: -9.824969291687012
    10. ')' → logprob: -10.324969291687012

Token 217: 'because' (ID: 53081)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.24670664966106415
    2. ')' → logprob: -1.9967066049575806
    3. 'and' → logprob: -3.49670672416687
    4. '):' → logprob: -3.62170672416687
    5. ' )' → logprob: -4.621706485748291
    6. ' ):' → logprob: -5.746706485748291
    7. ' ' → logprob: -5.871706485748291
    8. '),' → logprob: -5.871706485748291
    9. '):
' → logprob: -6.246706485748291
    10. ''' → logprob: -6.496706485748291

Token 218: ' encryption' (ID: 48827)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.07977160811424255
    2. 's' → logprob: -2.7047715187072754
    3. ' ord' → logprob: -5.704771518707275
    4. ' c' → logprob: -6.454771518707275
    5. ' not' → logprob: -6.829771518707275
    6. ')' → logprob: -7.454771518707275
    7. ' chr' → logprob: -7.954771518707275
    8. ' '' → logprob: -8.079771995544434
    9. 'chr' → logprob: -8.079771995544434
    10. 'ord' → logprob: -8.204771995544434

Token 219: ' only' (ID: 1606)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.13176149129867554
    2. '   ' → logprob: -3.3817615509033203
    3. '[i' → logprob: -3.3817615509033203
    4. ' is' → logprob: -4.25676155090332
    5. ')' → logprob: -4.63176155090332
    6. ' ==' → logprob: -4.88176155090332
    7. '!=' → logprob: -5.38176155090332
    8. '!='' → logprob: -6.13176155090332
    9. ' was' → logprob: -6.38176155090332
    10. ' def' → logprob: -6.63176155090332

Token 220: ' decre' (ID: 12889)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -2.01112961769104
    2. ' changed' → logprob: -2.01112961769104
    3. ' changes' → logprob: -2.01112961769104
    4. ' allowed' → logprob: -2.38612961769104
    5. 'allowed' → logprob: -2.63612961769104
    6. '<=' → logprob: -2.76112961769104
    7. ' replaces' → logprob: -2.88612961769104
    8. 'de' → logprob: -2.88612961769104
    9. 'changed' → logprob: -3.38612961769104
    10. ' replaced' → logprob: -3.51112961769104

Token 221: 'ments' (ID: 1626)
  Prédit: 'mented'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mented' → logprob: -0.2728472352027893
    2. 'ased' → logprob: -2.1478471755981445
    3. 's' → logprob: -3.5228471755981445
    4. 'ed' → logprob: -4.1478471755981445
    5. '```' → logprob: -4.6478471755981445
    6. 'f' → logprob: -4.6478471755981445
    7. ''s' → logprob: -4.8978471755981445
    8. 'c' → logprob: -4.8978471755981445
    9. 'crement' → logprob: -5.1478471755981445
    10. 'ment' → logprob: -5.2728471755981445

Token 222: ' letters' (ID: 18151)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.359076976776123
    2. ' s' → logprob: -2.109076976776123
    3. ' the' → logprob: -2.109076976776123
    4. 'c' → logprob: -2.484076976776123
    5. ' letters' → logprob: -2.734076976776123
    6. ' '' → logprob: -3.109076976776123
    7. ' ord' → logprob: -3.109076976776123
    8. 's' → logprob: -3.359076976776123
    9. ' c' → logprob: -3.359076976776123
    10. ''' → logprob: -3.609076976776123

Token 223: ' from' (ID: 591)
  Prédit: ' >='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.44963693618774414
    2. '>=' → logprob: -1.3246369361877441
    3. '>' → logprob: -3.699636936187744
    4. ' ' → logprob: -4.074636936187744
    5. ' '' → logprob: -4.574636936187744
    6. ' >' → logprob: -5.199636936187744
    7. ')' → logprob: -5.324636936187744
    8. ' !=' → logprob: -5.574636936187744
    9. ' from' → logprob: -5.699636936187744
    10. ' and' → logprob: -5.949636936187744

Token 224: ' b' (ID: 287)
  Prédit: ''b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''b' → logprob: -0.0021789311431348324
    2. 'b' → logprob: -6.752179145812988
    3. ''a' → logprob: -7.752179145812988
    4. ''' → logprob: -8.127179145812988
    5. ' '' → logprob: -8.502179145812988
    6. ''s' → logprob: -10.127179145812988
    7. 'ord' → logprob: -10.877179145812988
    8. '>b' → logprob: -12.377179145812988
    9. ' ord' → logprob: -12.502179145812988
    10. '
' → logprob: -12.752179145812988

Token 225: ' to' (ID: 316)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.6521083116531372
    2. ' to' → logprob: -0.7771083116531372
    3. 'to' → logprob: -4.652108192443848
    4. ' onwards' → logprob: -5.402108192443848
    5. ''),' → logprob: -6.402108192443848
    6. ')' → logprob: -7.027108192443848
    7. '')' → logprob: -7.027108192443848
    8. ''s' → logprob: -7.777108192443848
    9. ' ' → logprob: -8.152108192443848
    10. ' onward' → logprob: -8.902108192443848

Token 226: ' z' (ID: 579)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.039319220930337906
    2. ''y' → logprob: -3.2893192768096924
    3. 'z' → logprob: -7.289319038391113
    4. ''' → logprob: -7.914319038391113
    5. 'y's' → logprob: -8.789319038391113
    6. ''z' → logprob: -10.039319038391113
    7. '{'' → logprob: -11.914319038391113
    8. ' y' → logprob: -12.164319038391113
    9. '‘y' → logprob: -12.289319038391113
    10. ''s' → logprob: -12.414319038391113

Token 227: ' by' (ID: 656)
  Prédit: ''),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''),' → logprob: -1.3617175817489624
    2. '):' → logprob: -1.7367175817489624
    3. '),' → logprob: -1.9867175817489624
    4. ''):
' → logprob: -1.9867175817489624
    5. ''):' → logprob: -2.111717700958252
    6. '):
' → logprob: -2.111717700958252
    7. ')' → logprob: -4.111717700958252
    8. ''' → logprob: -4.611717700958252
    9. '')' → logprob: -5.111717700958252
    10. ' and' → logprob: -5.361717700958252

Token 228: ' ' (ID: 220)
  Prédit: ''a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''a' → logprob: -0.675731897354126
    2. ''b' → logprob: -1.550731897354126
    3. '1' → logprob: -1.925731897354126
    4. ''' → logprob: -2.425731897354126
    5. ''s' → logprob: -4.050731658935547
    6. ' ' → logprob: -4.800731658935547
    7. ' '' → logprob: -5.050731658935547
    8. 'ord' → logprob: -5.675731658935547
    9. 'chr' → logprob: -6.425731658935547
    10. 'a' → logprob: -6.675731658935547

Token 229: '1' (ID: 16)
  Prédit: ''a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''a' → logprob: -0.03461967408657074
    2. ''b' → logprob: -3.5346195697784424
    3. ''' → logprob: -6.1596198081970215
    4. 'a' → logprob: -6.6596198081970215
    5. 'chr' → logprob: -7.7846198081970215
    6. ''s' → logprob: -8.159619331359863
    7. 'ord' → logprob: -8.534619331359863
    8. ''y' → logprob: -8.909619331359863
    9. ''z' → logprob: -9.034619331359863
    10. ' ord' → logprob: -9.659619331359863

Token 230: ')
' (ID: 446)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.14643123745918274
    2. '):
' → logprob: -2.8964312076568604
    3. '),' → logprob: -3.8964312076568604
    4. ')' → logprob: -4.3964314460754395
    5. ''):' → logprob: -4.3964314460754395
    6. ',' → logprob: -4.5214314460754395
    7. ' and' → logprob: -4.8964314460754395
    8. ':' → logprob: -4.8964314460754395
    9. '   ' → logprob: -6.0214314460754395
    10. ' ):' → logprob: -6.1464314460754395

Token 231: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.43006908893585205
    2. '   ' → logprob: -1.555069088935852
    3. ',' → logprob: -2.3050689697265625
    4. ' and' → logprob: -4.6800689697265625
    5. ' for' → logprob: -4.6800689697265625
    6. ' if' → logprob: -4.6800689697265625
    7. ':
' → logprob: -5.3050689697265625
    8. 'for' → logprob: -6.4300689697265625
    9. '):' → logprob: -7.1800689697265625
    10. 'if' → logprob: -7.6800689697265625

Token 232: ' #' (ID: 1069)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.736872673034668
    2. '   ' → logprob: -0.861872673034668
    3. ',' → logprob: -2.736872673034668
    4. ':
' → logprob: -4.736872673034668
    5. ' for' → logprob: -4.736872673034668
    6. '):' → logprob: -5.236872673034668
    7. ' and' → logprob: -5.986872673034668
    8. 'for' → logprob: -6.361872673034668
    9. ' if' → logprob: -6.611872673034668
    10. ')' → logprob: -6.986872673034668

Token 233: ' then' (ID: 1815)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.12165923416614532
    2. 'for' → logprob: -2.496659278869629
    3. '   ' → logprob: -3.496659278869629
    4. '
' → logprob: -7.121659278869629
    5. ' if' → logprob: -8.121659278869629
    6. ' ' → logprob: -8.746659278869629
    7. 'def' → logprob: -8.996659278869629
    8. ',' → logprob: -9.246659278869629
    9. ' possible' → logprob: -9.621659278869629
    10. '	for' → logprob: -9.871659278869629

Token 234: ' original' (ID: 4756)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.06323300302028656
    2. ' original' → logprob: -3.438232898712158
    3. ' if' → logprob: -4.063232898712158
    4. 'for' → logprob: -5.188232898712158
    5. ' possible' → logprob: -6.438232898712158
    6. '   ' → logprob: -6.563232898712158
    7. ' candidates' → logprob: -6.688232898712158
    8. ' we' → logprob: -6.938232898712158
    9. ' c' → logprob: -8.313233375549316
    10. '    ' → logprob: -8.313233375549316

Token 235: ' can' (ID: 665)
  Prédit: '_char'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_char' → logprob: -0.2809995114803314
    2. '_chars' → logprob: -1.9059995412826538
    3. '_candidates' → logprob: -3.5309994220733643
    4. '_c' → logprob: -3.6559994220733643
    5. '_candidate' → logprob: -4.530999660491943
    6. '_possible' → logprob: -4.530999660491943
    7. '[i' → logprob: -5.405999660491943
    8. '_original' → logprob: -5.780999660491943
    9. ' =' → logprob: -5.905999660491943
    10. 's' → logprob: -6.405999660491943

Token 236: ' be' (ID: 413)
  Prédit: ' be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.06036272272467613
    2. ' have' → logprob: -3.1853628158569336
    3. ' =' → logprob: -5.310362815856934
    4. 'be' → logprob: -5.810362815856934
    5. ' ' → logprob: -6.435362815856934
    6. 'have' → logprob: -6.435362815856934
    7. ' at' → logprob: -7.435362815856934
    8. 's' → logprob: -7.435362815856934
    9. ' either' → logprob: -7.435362815856934
    10. '[i' → logprob: -7.435362815856934

Token 237: ' s' (ID: 265)
  Prédit: ' chr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chr' → logprob: -1.091767430305481
    2. 'chr' → logprob: -1.216767430305481
    3. ' s' → logprob: -1.341767430305481
    4. 's' → logprob: -2.7167673110961914
    5. ' [' → logprob: -4.091767311096191
    6. '[s' → logprob: -4.466767311096191
    7. '[' → logprob: -4.966767311096191
    8. '(chr' → logprob: -7.091767311096191
    9. 'c' → logprob: -7.341767311096191
    10. '   ' → logprob: -7.341767311096191

Token 238: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.004754188470542431
    2. '   ' → logprob: -6.129754066467285
    3. ')' → logprob: -7.504754066467285
    4. 'i' → logprob: -8.129754066467285
    5. '[' → logprob: -8.129754066467285
    6. ' =' → logprob: -8.379754066467285
    7. '_i' → logprob: -8.379754066467285
    8. '[:' → logprob: -8.379754066467285
    9. 'def' → logprob: -8.754754066467285
    10. '=' → logprob: -9.504754066467285

Token 239: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.17984171211719513
    2. ')' → logprob: -2.6798417568206787
    3. ']+' → logprob: -2.9298417568206787
    4. '+' → logprob: -3.9298417568206787
    5. ')+' → logprob: -5.0548415184021
    6. ' or' → logprob: -5.8048415184021
    7. 'i' → logprob: -6.0548415184021
    8. ' if' → logprob: -6.6798415184021
    9. ' ]' → logprob: -6.8048415184021
    10. ' +' → logprob: -7.0548415184021

Token 240: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.16872048377990723
    2. ',' → logprob: -2.6687204837799072
    3. '+' → logprob: -3.2937204837799072
    4. ' +' → logprob: -3.9187204837799072
    5. 'or' → logprob: -4.043720245361328
    6. ' if' → logprob: -5.168720245361328
    7. 's' → logprob: -6.543720245361328
    8. 'if' → logprob: -6.543720245361328
    9. ' ,' → logprob: -7.418720245361328
    10. 'def' → logprob: -8.043720245361328

Token 241: ' s' (ID: 265)
  Prédit: ' chr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chr' → logprob: -0.08922003954648972
    2. 'chr' → logprob: -2.4642200469970703
    3. '(chr' → logprob: -8.71422004699707
    4. ' ' → logprob: -9.71422004699707
    5. ' ' → logprob: -11.21422004699707
    6. '   ' → logprob: -11.46422004699707
    7. '"' → logprob: -11.96422004699707
    8. ' s' → logprob: -12.33922004699707
    9. '_chr' → logprob: -12.33922004699707
    10. ''' → logprob: -12.83922004699707

Token 242: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -9.610702363715973e-06
    2. '[' → logprob: -11.875009536743164
    3. '[
' → logprob: -14.375009536743164
    4. '   ' → logprob: -14.375009536743164
    5. 'i' → logprob: -14.875009536743164
    6. '[++' → logprob: -15.375009536743164
    7. '(i' → logprob: -16.000009536743164
    8. ')' → logprob: -16.125009536743164
    9. '[j' → logprob: -16.250009536743164
    10. '+' → logprob: -16.250009536743164

Token 243: ']+' (ID: 15344)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.11893807351589203
    2. ']+' → logprob: -2.2439379692077637
    3. '+' → logprob: -5.868937969207764
    4. '[i' → logprob: -6.118937969207764
    5. 'i' → logprob: -7.743937969207764
    6. '-' → logprob: -8.118938446044922
    7. ']==' → logprob: -8.993938446044922
    8. '(i' → logprob: -9.618938446044922
    9. '[' → logprob: -10.993938446044922
    10. '   ' → logprob: -10.993938446044922

Token 244: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004898841143585742
    2. ' ' → logprob: -7.625489711761475
    3. '
' → logprob: -14.125490188598633
    4. 'chr' → logprob: -14.500490188598633
    5. '   ' → logprob: -15.500490188598633
    6. '  ' → logprob: -16.250490188598633
    7. '=' → logprob: -16.625490188598633
    8. '```' → logprob: -17.000490188598633
    9. '' → logprob: -17.125490188598633
    10. '#' → logprob: -17.250490188598633

Token 245: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.43044188618659973
    2. ':' → logprob: -1.9304418563842773
    3. ' for' → logprob: -2.3054418563842773
    4. '
' → logprob: -2.9304418563842773
    5. 'for' → logprob: -3.3054418563842773
    6. 'def' → logprob: -5.930441856384277
    7. ':
' → logprob: -6.180441856384277
    8. ')' → logprob: -6.430441856384277
    9. '    
' → logprob: -6.430441856384277
    10. ' ' → logprob: -6.930441856384277

Token 246: 'if' (ID: 366)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008593414910137653
    2. ').' → logprob: -5.633593559265137
    3. '   ' → logprob: -5.758593559265137
    4. '):' → logprob: -7.508593559265137
    5. '')' → logprob: -7.633593559265137
    6. ')
' → logprob: -8.133593559265137
    7. '.' → logprob: -9.258593559265137
    8. '),' → logprob: -9.383593559265137
    9. '):
' → logprob: -9.883593559265137
    10. '       ' → logprob: -10.133593559265137

Token 247: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.6511021256446838
    2. ' ord' → logprob: -1.151102066040039
    3. 's' → logprob: -2.151102066040039
    4. 'ord' → logprob: -3.151102066040039
    5. '(ord' → logprob: -6.401102066040039
    6. 'chr' → logprob: -8.026102066040039
    7. ''s' → logprob: -8.151102066040039
    8. ''' → logprob: -8.651102066040039
    9. ' '' → logprob: -8.651102066040039
    10. ' chr' → logprob: -8.776102066040039

Token 248: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.008129963040119e-06
    2. '[' → logprob: -12.875003814697266
    3. 'i' → logprob: -14.250003814697266
    4. '[
' → logprob: -15.375003814697266
    5. ')' → logprob: -15.750003814697266
    6. '[I' → logprob: -16.250003814697266
    7. ']' → logprob: -17.000003814697266
    8. '   ' → logprob: -17.125003814697266
    9. '```' → logprob: -17.125003814697266
    10. 'import' → logprob: -18.000003814697266

Token 249: ']+' (ID: 15344)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.01053765881806612
    2. ' !=' → logprob: -5.760537624359131
    3. ')' → logprob: -5.885537624359131
    4. ']!=' → logprob: -6.635537624359131
    5. ']!='' → logprob: -7.010537624359131
    6. '']' → logprob: -7.260537624359131
    7. '!=' → logprob: -7.260537624359131
    8. '!='' → logprob: -8.760538101196289
    9. '])' → logprob: -9.010538101196289
    10. '<' → logprob: -9.010538101196289

Token 250: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001773830852471292
    2. ' ' → logprob: -6.376773834228516
    3. 'ord' → logprob: -11.126773834228516
    4. ')' → logprob: -11.376773834228516
    5. '
' → logprob: -11.501773834228516
    6. ''' → logprob: -11.751773834228516
    7. '```' → logprob: -11.876773834228516
    8. ''s' → logprob: -12.626773834228516
    9. ' ord' → logprob: -12.626773834228516
    10. '0' → logprob: -13.251773834228516

Token 251: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.1775047481060028
    2. '<=' → logprob: -2.052504777908325
    3. ')' → logprob: -3.427504777908325
    4. ' <' → logprob: -7.427504539489746
    5. '<' → logprob: -7.802504539489746
    6. ')<=' → logprob: -7.927504539489746
    7. ' !=' → logprob: -8.802504539489746
    8. '```' → logprob: -9.802504539489746
    9. ').' → logprob: -9.927504539489746
    10. ' is' → logprob: -10.677504539489746

Token 252: ' '' (ID: 461)
  Prédit: ''z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''z' → logprob: -0.4021569490432739
    2. ''y' → logprob: -1.152156949043274
    3. ''' → logprob: -4.652156829833984
    4. ' '' → logprob: -5.277156829833984
    5. ''s' → logprob: -8.152156829833984
    6. '‘y' → logprob: -10.027156829833984
    7. ''u' → logprob: -10.277156829833984
    8. ''x' → logprob: -10.527156829833984
    9. ''a' → logprob: -10.652156829833984
    10. ''ch' → logprob: -11.402156829833984

Token 253: 'z' (ID: 89)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.14761550724506378
    2. 'z' → logprob: -2.272615432739258
    3. ''y' → logprob: -3.647615432739258
    4. ''z' → logprob: -4.897615432739258
    5. 'y's' → logprob: -7.772615432739258
    6. ''' → logprob: -9.147615432739258
    7. ' y' → logprob: -9.647615432739258
    8. ''s' → logprob: -10.647615432739258
    9. 'x' → logprob: -11.022615432739258
    10. '‘y' → logprob: -11.397615432739258

Token 254: '')
' (ID: 2515)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.36008256673812866
    2. '')' → logprob: -1.3600826263427734
    3. '):' → logprob: -3.7350826263427734
    4. ''):' → logprob: -4.110082626342773
    5. '):
' → logprob: -6.485082626342773
    6. ''' → logprob: -6.735082626342773
    7. ''):
' → logprob: -6.735082626342773
    8. '   ' → logprob: -7.860082626342773
    9. ' and' → logprob: -8.235082626342773
    10. ':' → logprob: -8.235082626342773

Token 255: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23202632367610931
    2. ' for' → logprob: -1.7320263385772705
    3. 'for' → logprob: -3.9820263385772705
    4. '
' → logprob: -5.232026100158691
    5. ':' → logprob: -6.482026100158691
    6. '    
' → logprob: -6.732026100158691
    7. ' 
' → logprob: -7.107026100158691
    8. ' ' → logprob: -7.482026100158691
    9. '```' → logprob: -7.482026100158691
    10. '  
' → logprob: -7.732026100158691

Token 256: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.49495983123779297
    2. ' for' → logprob: -1.119959831237793
    3. 'for' → logprob: -3.494959831237793
    4. '
' → logprob: -3.494959831237793
    5. '    
' → logprob: -6.744959831237793
    6. '	for' → logprob: -7.494959831237793
    7. '```' → logprob: -7.619959831237793
    8. ' 
' → logprob: -8.369959831237793
    9. 'def' → logprob: -8.619959831237793
    10. ':' → logprob: -8.994959831237793

Token 257: ' And' (ID: 1958)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.12795908749103546
    2. 'for' → logprob: -3.1279590129852295
    3. '   ' → logprob: -3.3779590129852295
    4. '
' → logprob: -3.3779590129852295
    5. ' 
' → logprob: -5.752959251403809
    6. '```' → logprob: -6.002959251403809
    7. '    
' → logprob: -6.627959251403809
    8. 'def' → logprob: -8.627959251403809
    9. '\n' → logprob: -8.752959251403809
    10. '	for' → logprob: -8.877959251403809

Token 258: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.019119586795568466
    2. 'for' → logprob: -4.019119739532471
    3. '   ' → logprob: -7.769119739532471
    4. '
' → logprob: -8.269119262695312
    5. ' def' → logprob: -9.394119262695312
    6. 'def' → logprob: -9.644119262695312
    7. ' ' → logprob: -10.519119262695312
    8. ' if' → logprob: -10.644119262695312
    9. ' ' → logprob: -11.394119262695312
    10. ' we' → logprob: -11.644119262695312

Token 259: ' all' (ID: 722)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.17641529440879822
    2. ' j' → logprob: -2.426415205001831
    3. 'i' → logprob: -2.676415205001831
    4. 'j' → logprob: -5.67641544342041
    5. ' all' → logprob: -7.42641544342041
    6. ' each' → logprob: -8.92641544342041
    7. ' idx' → logprob: -9.30141544342041
    8. ' ' → logprob: -9.55141544342041
    9. ' index' → logprob: -10.17641544342041
    10. ' every' → logprob: -10.30141544342041

Token 260: ' other' (ID: 1273)
  Prédit: ' j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.04300285503268242
    2. 'j' → logprob: -4.168003082275391
    3. ' i' → logprob: -4.418003082275391
    4. ' indices' → logprob: -5.043003082275391
    5. ' other' → logprob: -5.793003082275391
    6. 'i' → logprob: -5.918003082275391
    7. ' positions' → logprob: -6.418003082275391
    8. 'indices' → logprob: -8.41800308227539
    9. ' ' → logprob: -9.04300308227539
    10. ' indexes' → logprob: -9.04300308227539

Token 261: ' positions' (ID: 15897)
  Prédit: ' indices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' indices' → logprob: -0.512320339679718
    2. ' positions' → logprob: -1.2623202800750732
    3. ' j' → logprob: -3.1373202800750732
    4. 'indices' → logprob: -3.7623202800750732
    5. ' indexes' → logprob: -3.7623202800750732
    6. 'j' → logprob: -4.762320518493652
    7. 'i' → logprob: -5.137320518493652
    8. ' i' → logprob: -5.262320518493652
    9. 'indexes' → logprob: -5.637320518493652
    10. 'positions' → logprob: -5.637320518493652

Token 262: ' j' (ID: 441)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.15510839223861694
    2. ':' → logprob: -2.4051084518432617
    3. ' in' → logprob: -3.6551084518432617
    4. ' ,' → logprob: -4.405108451843262
    5. ' we' → logprob: -5.655108451843262
    6. '   ' → logprob: -5.905108451843262
    7. ' if' → logprob: -6.155108451843262
    8. ' candidates' → logprob: -6.655108451843262
    9. ' original' → logprob: -6.905108451843262
    10. ' s' → logprob: -6.905108451843262

Token 263: '!=' (ID: 11408)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.5412544012069702
    2. '!=' → logprob: -1.0412544012069702
    3. ' in' → logprob: -2.9162545204162598
    4. ',' → logprob: -5.54125452041626
    5. '   ' → logprob: -5.79125452041626
    6. ' not' → logprob: -6.66625452041626
    7. ' if' → logprob: -7.91625452041626
    8. '==' → logprob: -7.91625452041626
    9. '```' → logprob: -8.166254043579102
    10. ' ==' → logprob: -8.166254043579102

Token 264: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0181912649422884
    2. ' i' → logprob: -4.018191337585449
    3. '0' → logprob: -11.01819133758545
    4. 'j' → logprob: -11.51819133758545
    5. ' ' → logprob: -12.26819133758545
    6. '
' → logprob: -13.01819133758545
    7. ' j' → logprob: -13.26819133758545
    8. 's' → logprob: -13.64319133758545
    9. '   ' → logprob: -13.64319133758545
    10. '```' → logprob: -13.76819133758545

Token 265: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.057033129036426544
    2. ':' → logprob: -3.307033061981201
    3. ' candidates' → logprob: -5.432033061981201
    4. '   ' → logprob: -6.057033061981201
    5. ' ,' → logprob: -6.057033061981201
    6. ' the' → logprob: -6.432033061981201
    7. '       ' → logprob: -6.432033061981201
    8. ' if' → logprob: -6.682033061981201
    9. 'c' → logprob: -7.057033061981201
    10. ':
' → logprob: -7.182033061981201

Token 266: ' original' (ID: 4756)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.4365341067314148
    2. ' candidates' → logprob: -1.4365341663360596
    3. ' if' → logprob: -2.9365341663360596
    4. ' original' → logprob: -3.8115341663360596
    5. 'if' → logprob: -4.1865339279174805
    6. '   ' → logprob: -4.3115339279174805
    7. 'original' → logprob: -5.1865339279174805
    8. ' c' → logprob: -5.5615339279174805
    9. ' s' → logprob: -6.9365339279174805
    10. 's' → logprob: -8.31153392791748

Token 267: '[j' (ID: 7895)
  Prédit: '_chars'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_chars' → logprob: -1.0119414329528809
    2. '_candidates' → logprob: -1.3869414329528809
    3. '.append' → logprob: -2.011941432952881
    4. '+=' → logprob: -2.636941432952881
    5. ' can' → logprob: -3.386941432952881
    6. 'c' → logprob: -3.386941432952881
    7. '=' → logprob: -3.761941432952881
    8. 'can' → logprob: -4.011941432952881
    9. ' +=' → logprob: -4.386941432952881
    10. 'could' → logprob: -4.761941432952881

Token 268: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0306682325899601
    2. ']==' → logprob: -3.655668258666992
    3. ']=' → logprob: -6.155668258666992
    4. ' ]' → logprob: -6.780668258666992
    5. '==' → logprob: -7.905668258666992
    6. ']!=' → logprob: -8.530668258666992
    7. ')' → logprob: -9.405668258666992
    8. ']<=' → logprob: -9.530668258666992
    9. ']=='' → logprob: -10.030668258666992
    10. ' ==' → logprob: -10.030668258666992

Token 269: ' must' (ID: 2804)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20928487181663513
    2. ' =' → logprob: -1.7092849016189575
    3. '==' → logprob: -5.334284782409668
    4. ' ==' → logprob: -5.834284782409668
    5. ')' → logprob: -10.459284782409668
    6. 's' → logprob: -10.834284782409668
    7. ' ' → logprob: -11.709284782409668
    8. ' must' → logprob: -12.334284782409668
    9. ' in' → logprob: -12.459284782409668
    10. ',' → logprob: -12.709284782409668

Token 270: ' be' (ID: 413)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.3968140184879303
    2. ' ==' → logprob: -1.271813988685608
    3. ' be' → logprob: -3.2718141078948975
    4. '=' → logprob: -5.146813869476318
    5. ' equal' → logprob: -7.146813869476318
    6. ' in' → logprob: -7.521813869476318
    7. '<=' → logprob: -7.771813869476318
    8. ')==' → logprob: -7.771813869476318
    9. 'equal' → logprob: -8.021814346313477
    10. ']==' → logprob: -8.646814346313477

Token 271: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.08980981260538101
    2. ' s' → logprob: -2.4648098945617676
    3. ' equal' → logprob: -7.839809894561768
    4. '=s' → logprob: -8.83980941772461
    5. '=' → logprob: -9.46480941772461
    6. 'equal' → logprob: -9.46480941772461
    7. ' either' → logprob: -10.08980941772461
    8. '==' → logprob: -10.46480941772461
    9. ' =' → logprob: -10.58980941772461
    10. '   ' → logprob: -10.83980941772461

Token 272: '[j' (ID: 7895)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6211805939674377
    2. 'for' → logprob: -1.121180534362793
    3. ' for' → logprob: -2.121180534362793
    4. ')' → logprob: -4.746180534362793
    5. '
' → logprob: -6.371180534362793
    6. ' ' → logprob: -6.746180534362793
    7. '    
' → logprob: -7.121180534362793
    8. 'def' → logprob: -7.121180534362793
    9. '    ' → logprob: -7.371180534362793
    10. ':' → logprob: -7.496180534362793

Token 273: '].
' (ID: 49887)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.015201929956674576
    2. '<|end|>' → logprob: -4.265202045440674
    3. ')' → logprob: -7.765202045440674
    4. ' ]' → logprob: -8.765201568603516
    5. '<|end|>' → logprob: -8.765201568603516
    6. '],' → logprob: -9.765201568603516
    7. ']==' → logprob: -9.890201568603516
    8. ' or' → logprob: -10.390201568603516
    9. '])' → logprob: -10.640201568603516
    10. 'def' → logprob: -10.640201568603516

Token 274: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.32366541028022766
    2. '   ' → logprob: -1.6986653804779053
    3. 'for' → logprob: -2.4486653804779053
    4. '
' → logprob: -5.573665618896484
    5. '```' → logprob: -6.698665618896484
    6. 'def' → logprob: -6.823665618896484
    7. '	for' → logprob: -7.323665618896484
    8. '    
' → logprob: -8.698665618896484
    9. '<|end|>' → logprob: -10.323665618896484
    10. ' 
' → logprob: -10.573665618896484

Token 275: ' #' (ID: 1069)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5672528147697449
    2. '   ' → logprob: -0.9422528147697449
    3. 'for' → logprob: -3.6922528743743896
    4. '
' → logprob: -4.1922526359558105
    5. '	for' → logprob: -6.8172526359558105
    6. '    
' → logprob: -6.9422526359558105
    7. '```' → logprob: -7.8172526359558105
    8. ' 
' → logprob: -7.9422526359558105
    9. 'def' → logprob: -9.442253112792969
    10. '  
' → logprob: -9.567253112792969

Token 276: ' Also' (ID: 8820)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.1610754430294037
    2. 'for' → logprob: -2.1610753536224365
    3. '   ' → logprob: -3.4110753536224365
    4. '
' → logprob: -8.161075592041016
    5. 'def' → logprob: -9.036075592041016
    6. '	for' → logprob: -9.536075592041016
    7. '```' → logprob: -9.911075592041016
    8. '    
' → logprob: -11.161075592041016
    9. ' 
' → logprob: -11.786075592041016
    10. ' def' → logprob: -12.536075592041016

Token 277: ' we' (ID: 581)
  Prédit: ' changed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' changed' → logprob: -0.5374286770820618
    2. ' for' → logprob: -1.662428617477417
    3. ' original' → logprob: -3.037428617477417
    4. ' possible' → logprob: -3.287428617477417
    5. ' def' → logprob: -3.662428617477417
    6. 'changed' → logprob: -3.787428617477417
    7. 'for' → logprob: -4.662428855895996
    8. ' if' → logprob: -4.787428855895996
    9. ' at' → logprob: -4.787428855895996
    10. ' has' → logprob: -4.912428855895996

Token 278: ' must' (ID: 2804)
  Prédit: ' need'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' need' → logprob: -0.46691450476646423
    2. ' must' → logprob: -1.7169145345687866
    3. ' can' → logprob: -3.216914415359497
    4. 'need' → logprob: -3.341914415359497
    5. ' continue' → logprob: -3.716914415359497
    6. 'must' → logprob: -3.841914415359497
    7. ' should' → logprob: -4.341914653778076
    8. '   ' → logprob: -4.716914653778076
    9. 'def' → logprob: -4.841914653778076
    10. ' have' → logprob: -4.966914653778076

Token 279: ' respect' (ID: 5618)
  Prédit: ' check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' check' → logprob: -1.02153480052948
    2. ' ensure' → logprob: -1.39653480052948
    3. 'ensure' → logprob: -2.2715349197387695
    4. ' consider' → logprob: -2.7715349197387695
    5. 'consider' → logprob: -2.7715349197387695
    6. 'check' → logprob: -3.1465349197387695
    7. ' handle' → logprob: -3.3965349197387695
    8. ' track' → logprob: -3.8965349197387695
    9. ' account' → logprob: -3.8965349197387695
    10. 'handle' → logprob: -4.1465349197387695

Token 280: ' the' (ID: 290)
  Prédit: ' that'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' that' → logprob: -0.35250958800315857
    2. ' the' → logprob: -1.352509617805481
    3. 'that' → logprob: -3.8525094985961914
    4. 'the' → logprob: -5.227509498596191
    5. ' not' → logprob: -5.477509498596191
    6. ' s' → logprob: -5.977509498596191
    7. '   ' → logprob: -6.602509498596191
    8. ' all' → logprob: -6.727509498596191
    9. ' previous' → logprob: -7.602509498596191
    10. ' original' → logprob: -7.977509498596191

Token 281: ' special' (ID: 3582)
  Prédit: 'constraint'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'constraint' → logprob: -1.3507798910140991
    2. 'condition' → logprob: -1.8507798910140991
    3. ' constraint' → logprob: -1.9757798910140991
    4. ' condition' → logprob: -2.1007800102233887
    5. '"' → logprob: -2.4757800102233887
    6. ' fact' → logprob: -2.6007800102233887
    7. 'position' → logprob: -3.9757800102233887
    8. 'first' → logprob: -4.225780010223389
    9. ' rule' → logprob: -4.475780010223389
    10. 'rule' → logprob: -4.600780010223389

Token 282: ' rule' (ID: 10652)
  Prédit: ' case'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' case' → logprob: -0.6375584602355957
    2. 'case' → logprob: -1.1375584602355957
    3. 'c' → logprob: -3.1375584602355957
    4. ' casing' → logprob: -3.5125584602355957
    5. ' constraint' → logprob: -4.262558460235596
    6. ' condition' → logprob: -4.262558460235596
    7. ' rule' → logprob: -4.887558460235596
    8. 'def' → logprob: -5.262558460235596
    9. ' cases' → logprob: -5.637558460235596
    10. '_case' → logprob: -5.762558460235596

Token 283: ' that' (ID: 484)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.1544264554977417
    2. ':' → logprob: -3.0294265747070312
    3. 'for' → logprob: -3.4044265747070312
    4. ' ' → logprob: -3.9044265747070312
    5. '
' → logprob: -4.404426574707031
    6. '   ' → logprob: -4.529426574707031
    7. ' 
' → logprob: -5.529426574707031
    8. '<|end|>' → logprob: -5.779426574707031
    9. 'def' → logprob: -6.279426574707031
    10. '  
' → logprob: -6.529426574707031

Token 284: ' only' (ID: 1606)
  Prédit: ' only'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' only' → logprob: -0.9351779222488403
    2. ' at' → logprob: -1.4351779222488403
    3. 'only' → logprob: -2.060177803039551
    4. ' the' → logprob: -2.435177803039551
    5. 'the' → logprob: -3.685177803039551
    6. ' exactly' → logprob: -3.685177803039551
    7. 'i' → logprob: -3.935177803039551
    8. ' i' → logprob: -3.935177803039551
    9. ' there' → logprob: -4.435177803039551
    10. ' if' → logprob: -4.935177803039551

Token 285: ' the' (ID: 290)
  Prédit: ' one'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' one' → logprob: -0.20152609050273895
    2. 'one' → logprob: -1.7015260457992554
    3. ' at' → logprob: -9.201525688171387
    4. ' the' → logprob: -12.201525688171387
    5. '_one' → logprob: -12.951525688171387
    6. 'the' → logprob: -13.701525688171387
    7. 'at' → logprob: -14.326525688171387
    8. '   ' → logprob: -14.701525688171387
    9. 'once' → logprob: -15.326525688171387
    10. ' ' → logprob: -15.326525688171387

Token 286: ' first' (ID: 1577)
  Prédit: 'first'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'first' → logprob: -0.30481213331222534
    2. 'changed' → logprob: -2.42981219291687
    3. ' first' → logprob: -2.55481219291687
    4. 'de' → logprob: -3.42981219291687
    5. 'one' → logprob: -3.55481219291687
    6. 'change' → logprob: -4.679811954498291
    7. ' changed' → logprob: -4.679811954498291
    8. 'token' → logprob: -5.554811954498291
    9. ' one' → logprob: -6.179811954498291
    10. 'i' → logprob: -6.179811954498291

Token 287: ' occurrence' (ID: 55807)
  Prédit: ' occurrence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' occurrence' → logprob: -0.2517949044704437
    2. 'occ' → logprob: -2.0017948150634766
    3. 'de' → logprob: -3.6267948150634766
    4. ' character' → logprob: -3.6267948150634766
    5. 'occur' → logprob: -4.751794815063477
    6. ' changed' → logprob: -4.876794815063477
    7. 'changed' → logprob: -5.626794815063477
    8. '_occ' → logprob: -6.126794815063477
    9. 'character' → logprob: -6.751794815063477
    10. ' difference' → logprob: -6.751794815063477

Token 288: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.0012415404198691249
    2. ' ' → logprob: -7.126241683959961
    3. ' at' → logprob: -9.251241683959961
    4. '<|end|>' → logprob: -9.376241683959961
    5. ' if' → logprob: -9.751241683959961
    6. ' is' → logprob: -10.001241683959961
    7. ' for' → logprob: -10.126241683959961
    8. ' was' → logprob: -11.001241683959961
    9. 'of' → logprob: -11.001241683959961
    10. 's' → logprob: -11.251241683959961

Token 289: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.8276578783988953
    2. ' the' → logprob: -1.57765793800354
    3. 'a' → logprob: -1.82765793800354
    4. ' any' → logprob: -2.45265793800354
    5. 'the' → logprob: -2.95265793800354
    6. 'any' → logprob: -3.82765793800354
    7. ' some' → logprob: -4.827657699584961
    8. ' s' → logprob: -5.452657699584961
    9. 's' → logprob: -5.827657699584961
    10. ' an' → logprob: -5.952657699584961

Token 290: ' letter' (ID: 10263)
  Prédit: 'letter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'letter' → logprob: -1.1186484098434448
    2. 'character' → logprob: -1.2436484098434448
    3. ' letter' → logprob: -1.6186484098434448
    4. ' character' → logprob: -2.3686485290527344
    5. 'char' → logprob: -2.8686485290527344
    6. 'c' → logprob: -4.993648529052734
    7. 'de' → logprob: -4.993648529052734
    8. 'chr' → logprob: -5.618648529052734
    9. 'b' → logprob: -5.993648529052734
    10. ' char' → logprob: -6.368648529052734

Token 291: ' can' (ID: 665)
  Prédit: ' that'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' that' → logprob: -1.2154390811920166
    2. ' changed' → logprob: -1.7154390811920166
    3. ' in' → logprob: -1.9654390811920166
    4. ' to' → logprob: -2.7154390811920166
    5. ' is' → logprob: -2.8404390811920166
    6. ' decre' → logprob: -3.2154390811920166
    7. ' at' → logprob: -3.4654390811920166
    8. ' was' → logprob: -3.5904390811920166
    9. 'changed' → logprob: -3.5904390811920166
    10. ' can' → logprob: -3.8404390811920166

Token 292: ' be' (ID: 413)
  Prédit: ' be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.05897796154022217
    2. 'be' → logprob: -2.9339780807495117
    3. ' have' → logprob: -7.058978080749512
    4. ' decrement' → logprob: -7.058978080749512
    5. ' appear' → logprob: -8.058978080749512
    6. ' change' → logprob: -8.058978080749512
    7. '```' → logprob: -8.183978080749512
    8. 'de' → logprob: -8.183978080749512
    9. 'have' → logprob: -8.808978080749512
    10. ' cause' → logprob: -8.933978080749512

Token 293: ' changed' (ID: 9180)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.7207943201065063
    2. 'changed' → logprob: -1.0957943201065063
    3. ' changed' → logprob: -2.220794200897217
    4. ' decre' → logprob: -3.220794200897217
    5. 'the' → logprob: -4.345794200897217
    6. ' the' → logprob: -5.720794200897217
    7. '```' → logprob: -6.095794200897217
    8. ' decreased' → logprob: -6.345794200897217
    9. ' replaced' → logprob: -6.595794200897217
    10. 're' → logprob: -6.595794200897217

Token 294: '.
' (ID: 558)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6833817958831787
    2. '   ' → logprob: -1.5583817958831787
    3. ' 
' → logprob: -2.8083817958831787
    4. ' for' → logprob: -2.9333817958831787
    5. '    
' → logprob: -3.4333817958831787
    6. '  
' → logprob: -3.8083817958831787
    7. ':' → logprob: -3.8083817958831787
    8. '```' → logprob: -3.8083817958831787
    9. '\n' → logprob: -3.9333817958831787
    10. 'for' → logprob: -4.183382034301758

Token 295: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011716444045305252
    2. ' for' → logprob: -5.386716365814209
    3. '
' → logprob: -6.011716365814209
    4. 'def' → logprob: -6.261716365814209
    5. '```' → logprob: -6.636716365814209
    6. '    
' → logprob: -7.136716365814209
    7. ' def' → logprob: -8.386716842651367
    8. 'for' → logprob: -8.511716842651367
    9. ' 
' → logprob: -10.386716842651367
    10. '  
' → logprob: -10.511716842651367

Token 296: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11346232891082764
    2. ' for' → logprob: -2.738462448120117
    3. '
' → logprob: -4.238462448120117
    4. '    
' → logprob: -4.738462448120117
    5. 'for' → logprob: -4.738462448120117
    6. ' 
' → logprob: -5.613462448120117
    7. '```' → logprob: -5.738462448120117
    8. 'def' → logprob: -6.488462448120117
    9. ' candidates' → logprob: -8.113462448120117
    10. '   
' → logprob: -8.238462448120117

Token 297: ' The' (ID: 623)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.597159743309021
    2. '   ' → logprob: -0.972159743309021
    3. 'for' → logprob: -2.9721598625183105
    4. '
' → logprob: -5.4721598625183105
    5. ' possible' → logprob: -5.8471598625183105
    6. '    
' → logprob: -5.9721598625183105
    7. ' 
' → logprob: -6.2221598625183105
    8. ' candidates' → logprob: -6.4721598625183105
    9. ' i' → logprob: -6.7221598625183105
    10. 'def' → logprob: -6.8471598625183105

Token 298: ' original' (ID: 4756)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.20879536867141724
    2. 'for' → logprob: -1.8337953090667725
    3. ' def' → logprob: -4.833795547485352
    4. 'def' → logprob: -5.583795547485352
    5. ' code' → logprob: -5.958795547485352
    6. ' first' → logprob: -6.208795547485352
    7. ' previous' → logprob: -6.208795547485352
    8. ' next' → logprob: -6.833795547485352
    9. ' possible' → logprob: -7.083795547485352
    10. ' ' → logprob: -7.333795547485352

Token 299: ' encryption' (ID: 48827)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.1910629272460938
    2. '_candidates' → logprob: -1.4410629272460938
    3. 'for' → logprob: -2.0660629272460938
    4. '_chars' → logprob: -2.0660629272460938
    5. ' =' → logprob: -3.3160629272460938
    6. '_letters' → logprob: -3.6910629272460938
    7. ' for' → logprob: -4.441062927246094
    8. '=' → logprob: -4.816062927246094
    9. '_can' → logprob: -4.941062927246094
    10. ' was' → logprob: -4.941062927246094

Token 300: ' change' (ID: 3343)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.31707659363746643
    2. ' was' → logprob: -1.817076563835144
    3. ' process' → logprob: -3.5670766830444336
    4. ' def' → logprob: -3.8170766830444336
    5. '   ' → logprob: -4.692076683044434
    6. '#' → logprob: -5.692076683044434
    7. ' at' → logprob: -5.692076683044434
    8. ' logic' → logprob: -5.692076683044434
    9. ' is' → logprob: -5.817076683044434
    10. ')' → logprob: -5.942076683044434

Token 301: ' rule' (ID: 10652)
  Prédit: ' was'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' was' → logprob: -0.23103605210781097
    2. ' occurred' → logprob: -2.6060359477996826
    3. ' happened' → logprob: -3.7310359477996826
    4. ' =' → logprob: -4.106036186218262
    5. 'ed' → logprob: -4.231036186218262
    6. 'def' → logprob: -4.356036186218262
    7. 's' → logprob: -4.481036186218262
    8. 'was' → logprob: -4.606036186218262
    9. 'd' → logprob: -4.606036186218262
    10. '#' → logprob: -5.106036186218262

Token 302: ' decre' (ID: 12889)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -1.434008002281189
    2. ':' → logprob: -1.809008002281189
    3. 'def' → logprob: -1.809008002281189
    4. '<|end|>' → logprob: -1.809008002281189
    5. '   ' → logprob: -2.1840081214904785
    6. ' was' → logprob: -2.9340081214904785
    7. '<|end|>' → logprob: -3.5590081214904785
    8. ' def' → logprob: -3.8090081214904785
    9. ' for' → logprob: -4.8090081214904785
    10. ' has' → logprob: -4.8090081214904785

Token 303: 'ments' (ID: 1626)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.31311431527137756
    2. 'mented' → logprob: -2.3131144046783447
    3. 'crement' → logprob: -3.0631144046783447
    4. 'cre' → logprob: -3.8131144046783447
    5. 'crements' → logprob: -4.188114166259766
    6. 'ment' → logprob: -4.188114166259766
    7. '```' → logprob: -4.313114166259766
    8. 'c' → logprob: -4.438114166259766
    9. '   ' → logprob: -4.563114166259766
    10. 'ments' → logprob: -5.313114166259766

Token 304: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.27860772609710693
    2. 'the' → logprob: -2.4036078453063965
    3. ' letters' → logprob: -2.6536078453063965
    4. ' only' → logprob: -3.5286078453063965
    5. ' a' → logprob: -4.2786078453063965
    6. ' characters' → logprob: -5.0286078453063965
    7. ' ord' → logprob: -5.0286078453063965
    8. 'ord' → logprob: -5.6536078453063965
    9. 'letters' → logprob: -5.6536078453063965
    10. ' all' → logprob: -5.9036078453063965

Token 305: ' first' (ID: 1577)
  Prédit: 'first'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'first' → logprob: -0.4222628176212311
    2. ' first' → logprob: -1.6722627878189087
    3. 'ord' → logprob: -2.2972629070281982
    4. 'original' → logprob: -4.672262668609619
    5. 'letter' → logprob: -4.797262668609619
    6. ' original' → logprob: -5.297262668609619
    7. 'character' → logprob: -5.422262668609619
    8. 'index' → logprob: -5.672262668609619
    9. ' ord' → logprob: -5.797262668609619
    10. 'next' → logprob: -5.797262668609619

Token 306: ' occurrence' (ID: 55807)
  Prédit: ' occurrence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' occurrence' → logprob: -0.4470369219779968
    2. 'occ' → logprob: -1.0720369815826416
    3. '_occ' → logprob: -4.3220367431640625
    4. 'occur' → logprob: -5.6970367431640625
    5. ' character' → logprob: -7.9470367431640625
    6. '_oc' → logprob: -8.072036743164062
    7. ' occurring' → logprob: -8.447036743164062
    8. 'character' → logprob: -9.197036743164062
    9. ' letter' → logprob: -9.322036743164062
    10. '-occ' → logprob: -9.822036743164062

Token 307: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.20691800117492676
    2. '   ' → logprob: -1.7069180011749268
    3. ':' → logprob: -6.706917762756348
    4. '    ' → logprob: -6.956917762756348
    5. 'of' → logprob: -7.331917762756348
    6. ' ' → logprob: -7.456917762756348
    7. 'def' → logprob: -8.081917762756348
    8. '	of' → logprob: -8.206917762756348
    9. ' at' → logprob: -8.456917762756348
    10. '_of' → logprob: -8.706917762756348

Token 308: ' one' (ID: 1001)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5852341651916504
    2. ' a' → logprob: -1.7102341651916504
    3. 'some' → logprob: -2.4602341651916504
    4. 'x' → logprob: -3.4602341651916504
    5. ' some' → logprob: -3.4602341651916504
    6. 'any' → logprob: -3.7102341651916504
    7. ' any' → logprob: -3.8352341651916504
    8. 'the' → logprob: -3.8352341651916504
    9. 'chr' → logprob: -4.58523416519165
    10. ' the' → logprob: -4.96023416519165

Token 309: ' letter' (ID: 10263)
  Prédit: ' character'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' character' → logprob: -0.6233856678009033
    2. ' letter' → logprob: -1.1233856678009033
    3. 'letter' → logprob: -3.1233856678009033
    4. 'character' → logprob: -3.1233856678009033
    5. ' of' → logprob: -3.8733856678009033
    6. 'b' → logprob: -5.373385429382324
    7. 'x' → logprob: -5.498385429382324
    8. ' ' → logprob: -6.123385429382324
    9. ' occurrence' → logprob: -6.373385429382324
    10. 'occ' → logprob: -6.373385429382324

Token 310: ' in' (ID: 306)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16694402694702148
    2. ':' → logprob: -2.0419440269470215
    3. '):' → logprob: -5.2919440269470215
    4. ' for' → logprob: -6.1669440269470215
    5. '```' → logprob: -6.1669440269470215
    6. 'def' → logprob: -6.4169440269470215
    7. '<|end|>' → logprob: -6.6669440269470215
    8. '    
' → logprob: -6.6669440269470215
    9. ':
' → logprob: -6.7919440269470215
    10. 's' → logprob: -6.7919440269470215

Token 311: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.43814319372177124
    2. 's' → logprob: -1.563143253326416
    3. 'the' → logprob: -2.313143253326416
    4. ' s' → logprob: -3.313143253326416
    5. 'def' → logprob: -6.188143253326416
    6. ' original' → logprob: -6.313143253326416
    7. 'original' → logprob: -6.563143253326416
    8. 'string' → logprob: -6.688143253326416
    9. ' range' → logprob: -7.188143253326416
    10. 'range' → logprob: -7.188143253326416

Token 312: ' original' (ID: 4756)
  Prédit: 'string'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'string' → logprob: -0.13006305694580078
    2. 'original' → logprob: -3.130063056945801
    3. ' string' → logprob: -3.380063056945801
    4. 'encrypted' → logprob: -4.505063056945801
    5. 'alphabet' → logprob: -4.880063056945801
    6. 's' → logprob: -5.130063056945801
    7. 'def' → logprob: -5.130063056945801
    8. ' original' → logprob: -5.255063056945801
    9. 'plaintext' → logprob: -5.630063056945801
    10. ' encrypted' → logprob: -6.505063056945801

Token 313: ' string' (ID: 1621)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03875241056084633
    2. ' for' → logprob: -4.288752555847168
    3. '
' → logprob: -4.788752555847168
    4. '```' → logprob: -5.538752555847168
    5. '    
' → logprob: -5.663752555847168
    6. ':' → logprob: -6.413752555847168
    7. 'def' → logprob: -6.538752555847168
    8. 'for' → logprob: -6.913752555847168
    9. 's' → logprob: -7.038752555847168
    10. '   
' → logprob: -7.788752555847168

Token 314: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06221538782119751
    2. ':' → logprob: -3.3122153282165527
    3. 'def' → logprob: -4.562215328216553
    4. ' for' → logprob: -5.187215328216553
    5. '
' → logprob: -6.312215328216553
    6. '    
' → logprob: -6.812215328216553
    7. ':
' → logprob: -6.812215328216553
    8. 'for' → logprob: -7.562215328216553
    9. '```' → logprob: -7.562215328216553
    10. '):
' → logprob: -7.687215328216553

Token 315: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.046942997723817825
    2. ' for' → logprob: -4.296943187713623
    3. '
' → logprob: -4.546943187713623
    4. '```' → logprob: -4.546943187713623
    5. '    
' → logprob: -5.671943187713623
    6. 'def' → logprob: -6.296943187713623
    7. ':' → logprob: -6.296943187713623
    8. 'for' → logprob: -6.421943187713623
    9. ' 
' → logprob: -7.796943187713623
    10. '\n' → logprob: -8.171942710876465

Token 316: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.024124225601553917
    2. ' for' → logprob: -4.0241241455078125
    3. 'def' → logprob: -5.8991241455078125
    4. 'for' → logprob: -6.3991241455078125
    5. '```' → logprob: -7.0241241455078125
    6. ' candidates' → logprob: -8.399124145507812
    7. ' def' → logprob: -8.649124145507812
    8. '
' → logprob: -9.149124145507812
    9. '    
' → logprob: -9.899124145507812
    10. ' possible' → logprob: -10.274124145507812

Token 317: ' On' (ID: 2160)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09611906111240387
    2. ' for' → logprob: -2.4711191654205322
    3. 'for' → logprob: -5.471118927001953
    4. '```' → logprob: -6.596118927001953
    5. 'def' → logprob: -6.971118927001953
    6. ' candidates' → logprob: -7.971118927001953
    7. '    
' → logprob: -9.596118927001953
    8. ' possible' → logprob: -9.721118927001953
    9. ' def' → logprob: -9.846118927001953
    10. '
' → logprob: -10.471118927001953

Token 318: ' de' (ID: 334)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.13146449625492096
    2. ' for' → logprob: -3.5064644813537598
    3. 'for' → logprob: -3.7564644813537598
    4. ' e' → logprob: -4.25646448135376
    5. ' ' → logprob: -4.50646448135376
    6. '   ' → logprob: -5.00646448135376
    7. ' def' → logprob: -5.25646448135376
    8. ' i' → logprob: -5.50646448135376
    9. 'def' → logprob: -5.50646448135376
    10. 'ed' → logprob: -6.25646448135376

Token 319: 'cryption' (ID: 25662)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.0002407282590866089
    2. 'crypt' → logprob: -9.375240325927734
    3. '   ' → logprob: -10.000240325927734
    4. 'c' → logprob: -10.625240325927734
    5. 'fi' → logprob: -11.000240325927734
    6. 'fl' → logprob: -11.250240325927734
    7. 'fic' → logprob: -12.125240325927734
    8. 'crypted' → logprob: -12.125240325927734
    9. '```' → logprob: -12.250240325927734
    10. 'def' → logprob: -12.375240325927734

Token 320: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.18296119570732117
    2. ':' → logprob: -1.8079612255096436
    3. '   ' → logprob: -6.5579609870910645
    4. ' ,' → logprob: -8.182961463928223
    5. 's' → logprob: -8.307961463928223
    6. '):' → logprob: -8.557961463928223
    7. 'for' → logprob: -8.932961463928223
    8. ':
' → logprob: -9.057961463928223
    9. ' for' → logprob: -9.182961463928223
    10. ')' → logprob: -9.432961463928223

Token 321: ' we' (ID: 581)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.0204120185226202
    2. 'for' → logprob: -4.520411968231201
    3. ' possible' → logprob: -5.895411968231201
    4. ' we' → logprob: -6.020411968231201
    5. ' if' → logprob: -6.895411968231201
    6. ' def' → logprob: -7.270411968231201
    7. ' #' → logprob: -7.520411968231201
    8. ' first' → logprob: -8.39541244506836
    9. ' return' → logprob: -8.39541244506836
    10. ' import' → logprob: -8.77041244506836

Token 322: ' must' (ID: 2804)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.4931885004043579
    2. 'continue' → logprob: -2.3681883811950684
    3. ' need' → logprob: -2.4931883811950684
    4. ' can' → logprob: -2.7431883811950684
    5. '   ' → logprob: -3.3681883811950684
    6. ' must' → logprob: -3.4931883811950684
    7. ' try' → logprob: -3.4931883811950684
    8. 'can' → logprob: -4.993188381195068
    9. 'need' → logprob: -5.118188381195068
    10. ' check' → logprob: -5.368188381195068

Token 323: ' find' (ID: 1646)
  Prédit: 'consider'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'consider' → logprob: -0.8902750015258789
    2. 'generate' → logprob: -1.640275001525879
    3. 'continue' → logprob: -1.765275001525879
    4. 'try' → logprob: -2.265275001525879
    5. 'check' → logprob: -3.890275001525879
    6. ' try' → logprob: -3.890275001525879
    7. ' consider' → logprob: -4.265275001525879
    8. ' continue' → logprob: -4.515275001525879
    9. ' generate' → logprob: -4.765275001525879
    10. ' check' → logprob: -4.765275001525879

Token 324: ' all' (ID: 722)
  Prédit: ' all'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.0035551697947084904
    2. 'all' → logprob: -5.8785552978515625
    3. ' candidates' → logprob: -8.128555297851562
    4. ' the' → logprob: -8.628555297851562
    5. 's' → logprob: -9.128555297851562
    6. ' out' → logprob: -10.128555297851562
    7. ' possible' → logprob: -10.503555297851562
    8. 'possible' → logprob: -10.628555297851562
    9. ' a' → logprob: -11.253555297851562
    10. ' tokens' → logprob: -11.503555297851562

Token 325: ' strings' (ID: 18279)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'possible' → logprob: -0.8070910573005676
    2. ' possible' → logprob: -1.3070909976959229
    3. ' original' → logprob: -1.8070909976959229
    4. ' candidates' → logprob: -3.307090997695923
    5. 'original' → logprob: -4.307091236114502
    6. '_possible' → logprob: -4.432091236114502
    7. '   ' → logprob: -4.682091236114502
    8. ' tokens' → logprob: -4.932091236114502
    9. '_original' → logprob: -5.557091236114502
    10. '_candidates' → logprob: -5.682091236114502

Token 326: ' that' (ID: 484)
  Prédit: ' that'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' that' → logprob: -0.05549032613635063
    2. '   ' → logprob: -3.305490255355835
    3. ' possible' → logprob: -5.680490493774414
    4. 'that' → logprob: -5.805490493774414
    5. ':' → logprob: -6.305490493774414
    6. '_that' → logprob: -6.930490493774414
    7. '```' → logprob: -6.930490493774414
    8. ' =' → logprob: -7.180490493774414
    9. '_possible' → logprob: -7.180490493774414
    10. 'possible' → logprob: -7.430490493774414

Token 327: ' could' (ID: 2023)
  Prédit: ' could'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' could' → logprob: -0.5551449656486511
    2. ' can' → logprob: -1.305145025253296
    3. 'could' → logprob: -2.180145025253296
    4. 'can' → logprob: -4.430144786834717
    5. ' are' → logprob: -4.805144786834717
    6. ' map' → logprob: -5.555144786834717
    7. ' might' → logprob: -5.680144786834717
    8. '```' → logprob: -6.180144786834717
    9. '   ' → logprob: -6.305144786834717
    10. ' differ' → logprob: -6.430144786834717

Token 328: ' have' (ID: 679)
  Prédit: ' be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.11235745251178741
    2. ' have' → logprob: -3.2373573780059814
    3. ' map' → logprob: -3.4873573780059814
    4. 'be' → logprob: -3.7373573780059814
    5. '```' → logprob: -5.3623576164245605
    6. 'have' → logprob: -6.1123576164245605
    7. 'map' → logprob: -6.9873576164245605
    8. '   ' → logprob: -7.1123576164245605
    9. ' result' → logprob: -7.1123576164245605
    10. ' possibly' → logprob: -7.2373576164245605

Token 329: ' produced' (ID: 12790)
  Prédit: 'been'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'been' → logprob: -0.18594661355018616
    2. 'result' → logprob: -2.8109467029571533
    3. ' been' → logprob: -3.3109467029571533
    4. 'come' → logprob: -3.6859467029571533
    5. ' resulted' → logprob: -4.310946464538574
    6. '```' → logprob: -4.685946464538574
    7. 'occur' → logprob: -4.935946464538574
    8. 'generated' → logprob: -5.310946464538574
    9. 'produ' → logprob: -5.560946464538574
    10. 'origin' → logprob: -5.810946464538574

Token 330: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.20370130240917206
    2. 's' → logprob: -2.2037012577056885
    3. ' the' → logprob: -2.7037012577056885
    4. ' this' → logprob: -5.203701496124268
    5. 'the' → logprob: -7.078701496124268
    6. '```' → logprob: -7.953701496124268
    7. '`s' → logprob: -9.32870101928711
    8. ' it' → logprob: -10.45370101928711
    9. ' a' → logprob: -10.70370101928711
    10. ' that' → logprob: -11.07870101928711

Token 331: ' by' (ID: 656)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5648720860481262
    2. ':' → logprob: -0.9398720860481262
    3. '
' → logprob: -4.3148722648620605
    4. ':
' → logprob: -4.3148722648620605
    5. '```' → logprob: -5.1898722648620605
    6. '    
' → logprob: -5.8148722648620605
    7. '):' → logprob: -7.0648722648620605
    8. '):
' → logprob: -7.0648722648620605
    9. 'def' → logprob: -7.5648722648620605
    10. ',' → logprob: -7.5648722648620605

Token 332: ' changing' (ID: 13784)
  Prédit: 'decrypt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'decrypt' → logprob: -1.1675872802734375
    2. ' decrypt' → logprob: -1.5425872802734375
    3. ' changing' → logprob: -1.7925872802734375
    4. ' replacing' → logprob: -2.0425872802734375
    5. 'changing' → logprob: -2.9175872802734375
    6. ' decrement' → logprob: -3.1675872802734375
    7. ' applying' → logprob: -3.5425872802734375
    8. 'de' → logprob: -4.0425872802734375
    9. 'app' → logprob: -4.4175872802734375
    10. ' reversing' → logprob: -5.1675872802734375

Token 333: ' exactly' (ID: 9707)
  Prédit: ' one'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' one' → logprob: -0.0469793863594532
    2. ' the' → logprob: -3.7969794273376465
    3. ' exactly' → logprob: -4.0469794273376465
    4. ' a' → logprob: -6.2969794273376465
    5. 'one' → logprob: -6.6719794273376465
    6. ' only' → logprob: -6.6719794273376465
    7. ' ' → logprob: -8.046978950500488
    8. ' just' → logprob: -8.171978950500488
    9. ' i' → logprob: -8.171978950500488
    10. 'the' → logprob: -8.421978950500488

Token 334: ' one' (ID: 1001)
  Prédit: ' zero'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' zero' → logprob: -0.8447632789611816
    2. ' one' → logprob: -1.0947632789611816
    3. '0' → logprob: -1.8447632789611816
    4. 'one' → logprob: -3.2197632789611816
    5. 'zero' → logprob: -3.5947632789611816
    6. ' ' → logprob: -4.844763278961182
    7. ' at' → logprob: -6.344763278961182
    8. '```' → logprob: -7.719763278961182
    9. '1' → logprob: -9.344762802124023
    10. 'none' → logprob: -11.344762802124023

Token 335: ' character' (ID: 5855)
  Prédit: ' character'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' character' → logprob: -0.15273724496364594
    2. ' occurrence' → logprob: -2.7777371406555176
    3. 'character' → logprob: -3.2777371406555176
    4. ' space' → logprob: -4.527737140655518
    5. ' letter' → logprob: -4.902737140655518
    6. ' token' → logprob: -5.027737140655518
    7. ' ' → logprob: -5.527737140655518
    8. 'token' → logprob: -5.652737140655518
    9. 'space' → logprob: -5.902737140655518
    10. 'occ' → logprob: -6.277737140655518

Token 336: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5272070169448853
    2. ':' → logprob: -1.0272070169448853
    3. ' for' → logprob: -3.9022068977355957
    4. 'for' → logprob: -4.902206897735596
    5. '):' → logprob: -5.402206897735596
    6. ':
' → logprob: -5.402206897735596
    7. 'def' → logprob: -6.027206897735596
    8. ',' → logprob: -6.152206897735596
    9. '
' → logprob: -6.527206897735596
    10. '):
' → logprob: -6.527206897735596

Token 337: 'or' (ID: 267)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1021038293838501
    2. ' or' → logprob: -3.1021037101745605
    3. ' at' → logprob: -3.2271037101745605
    4. ' )' → logprob: -4.6021037101745605
    5. ',' → logprob: -7.1021037101745605
    6. ').' → logprob: -7.8521037101745605
    7. ' to' → logprob: -8.352104187011719
    8. 'or' → logprob: -8.602104187011719
    9. 'def' → logprob: -9.602104187011719
    10. 'at' → logprob: -9.727104187011719

Token 338: ' none' (ID: 12698)
  Prédit: ' none'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' none' → logprob: -0.8799325823783875
    2. 'none' → logprob: -1.0049326419830322
    3. 'no' → logprob: -2.2549326419830322
    4. 'zero' → logprob: -3.0049326419830322
    5. ' zero' → logprob: -3.2549326419830322
    6. ' no' → logprob: -4.254932403564453
    7. 'not' → logprob: -5.004932403564453
    8. ' not' → logprob: -5.879932403564453
    9. 'unch' → logprob: -7.379932403564453
    10. ' possibly' → logprob: -7.879932403564453

Token 339: ').

' (ID: 3991)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.23988325893878937
    2. ').' → logprob: -1.864883303642273
    3. '):' → logprob: -2.8648831844329834
    4. '   ' → logprob: -7.7398834228515625
    5. '):
' → logprob: -8.114883422851562
    6. '.' → logprob: -8.864883422851562
    7. ' at' → logprob: -8.989883422851562
    8. ' )' → logprob: -9.239883422851562
    9. 'def' → logprob: -9.239883422851562
    10. ' of' → logprob: -10.489883422851562

Token 340: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08308429270982742
    2. '
' → logprob: -3.5830843448638916
    3. ' for' → logprob: -4.0830841064453125
    4. '    
' → logprob: -4.2080841064453125
    5. '```' → logprob: -4.2080841064453125
    6. 'for' → logprob: -5.8330841064453125
    7. ' 
' → logprob: -7.5830841064453125
    8. 'def' → logprob: -7.8330841064453125
    9. '     
' → logprob: -7.9580841064453125
    10. '   
' → logprob: -8.333084106445312

Token 341: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20415180921554565
    2. ' for' → logprob: -2.0791518688201904
    3. 'for' → logprob: -3.8291518688201904
    4. '
' → logprob: -4.329151630401611
    5. ' possible' → logprob: -4.829151630401611
    6. 'def' → logprob: -5.704151630401611
    7. 'possible' → logprob: -5.704151630401611
    8. '    
' → logprob: -6.079151630401611
    9. ' used' → logprob: -6.579151630401611
    10. ' def' → logprob: -6.579151630401611

Token 342: ' To' (ID: 2514)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.30549052357673645
    2. 'for' → logprob: -1.930490493774414
    3. ' used' → logprob: -3.555490493774414
    4. ' i' → logprob: -3.555490493774414
    5. '   ' → logprob: -4.305490493774414
    6. ' possible' → logprob: -4.680490493774414
    7. ' seen' → logprob: -5.055490493774414
    8. 'i' → logprob: -5.180490493774414
    9. 'possible' → logprob: -5.305490493774414
    10. ' changed' → logprob: -5.680490493774414

Token 343: ' find' (ID: 1646)
  Prédit: ' generate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' generate' → logprob: -0.8444525003433228
    2. ' decrypt' → logprob: -1.0944525003433228
    3. ' find' → logprob: -2.969452381134033
    4. 'generate' → logprob: -3.219452381134033
    5. ' complete' → logprob: -3.469452381134033
    6. 'decrypt' → logprob: -3.469452381134033
    7. ' handle' → logprob: -4.219452381134033
    8. ' continue' → logprob: -4.719452381134033
    9. ' cover' → logprob: -4.844452381134033
    10. ' for' → logprob: -4.844452381134033

Token 344: ' candidates' (ID: 18116)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.7924180626869202
    2. ' all' → logprob: -1.1674180030822754
    3. 'i' → logprob: -2.0424180030822754
    4. ' for' → logprob: -2.7924180030822754
    5. ' the' → logprob: -4.417418003082275
    6. ' possible' → logprob: -4.667418003082275
    7. ' original' → logprob: -5.042418003082275
    8. 'for' → logprob: -5.542418003082275
    9. 'all' → logprob: -5.667418003082275
    10. 'c' → logprob: -6.292418003082275

Token 345: ',' (ID: 11)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5171359777450562
    2. 'for' → logprob: -1.2671359777450562
    3. ',' → logprob: -2.5171360969543457
    4. '   ' → logprob: -4.017136096954346
    5. ':' → logprob: -4.142136096954346
    6. ' i' → logprob: -5.517136096954346
    7. '=' → logprob: -7.392136096954346
    8. '
' → logprob: -8.017135620117188
    9. ' =' → logprob: -8.017135620117188
    10. 'def' → logprob: -8.142135620117188

Token 346: ' consider' (ID: 3331)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.0042154015973210335
    2. 'for' → logprob: -5.629215240478516
    3. '   ' → logprob: -7.629215240478516
    4. ' i' → logprob: -9.754215240478516
    5. ' possible' → logprob: -10.129215240478516
    6. ' we' → logprob: -12.004215240478516
    7. ' if' → logprob: -12.129215240478516
    8. ' def' → logprob: -12.379215240478516
    9. ' from' → logprob: -12.879215240478516
    10. ' original' → logprob: -13.004215240478516

Token 347: ':
' (ID: 734)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -1.2265830039978027
    2. 'i' → logprob: -1.6015830039978027
    3. ' for' → logprob: -1.7265830039978027
    4. '   ' → logprob: -1.8515830039978027
    5. ' all' → logprob: -2.8515830039978027
    6. ' None' → logprob: -3.2265830039978027
    7. 'for' → logprob: -3.4765830039978027
    8. ' range' → logprob: -4.601583003997803
    9. 'None' → logprob: -4.851583003997803
    10. ' two' → logprob: -5.226583003997803

Token 348: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4139121472835541
    2. '   ' → logprob: -1.1639121770858765
    3. 'for' → logprob: -3.788912057876587
    4. '    ' → logprob: -7.038912296295166
    5. ' possible' → logprob: -7.038912296295166
    6. '
' → logprob: -7.163912296295166
    7. '```' → logprob: -7.413912296295166
    8. ' if' → logprob: -8.538911819458008
    9. '    
' → logprob: -8.913911819458008
    10. ' def' → logprob: -9.038911819458008

Token 349: ' #' (ID: 1069)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2424326390028
    2. '   ' → logprob: -1.9924325942993164
    3. 'for' → logprob: -2.8674325942993164
    4. '```' → logprob: -4.242432594299316
    5. ' if' → logprob: -6.117432594299316
    6. ' possible' → logprob: -6.242432594299316
    7. '
' → logprob: -6.742432594299316
    8. '    
' → logprob: -7.117432594299316
    9. '    ' → logprob: -7.992432594299316
    10. 'possible' → logprob: -8.242432594299316

Token 350: ' -' (ID: 533)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7618331909179688
    2. 'for' → logprob: -1.8868331909179688
    3. ' used' → logprob: -2.2618331909179688
    4. ' seen' → logprob: -2.6368331909179688
    5. 'seen' → logprob: -2.8868331909179688
    6. '   ' → logprob: -3.5118331909179688
    7. ' visited' → logprob: -3.5118331909179688
    8. ' first' → logprob: -4.011833190917969
    9. 'visited' → logprob: -4.011833190917969
    10. 'used' → logprob: -4.886833190917969

Token 351: ' No' (ID: 3004)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.5730018615722656
    2. 'for' → logprob: -1.6980018615722656
    3. ' if' → logprob: -1.8230018615722656
    4. 'c' → logprob: -2.6980018615722656
    5. '
' → logprob: -3.0730018615722656
    6. 'if' → logprob: -3.0730018615722656
    7. '   ' → logprob: -3.0730018615722656
    8. '#' → logprob: -3.1980018615722656
    9. ' the' → logprob: -3.4480018615722656
    10. ' candidates' → logprob: -3.4480018615722656

Token 352: ' change' (ID: 3343)
  Prédit: 'change'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'change' → logprob: -0.5870888829231262
    2. ' change' → logprob: -0.8370888829231262
    3. '_change' → logprob: -5.0870890617370605
    4. 'de' → logprob: -5.9620890617370605
    5. ' ' → logprob: -7.7120890617370605
    6. ' changes' → logprob: -7.9620890617370605
    7. '-change' → logprob: -8.462088584899902
    8. 'c' → logprob: -8.837088584899902
    9. 'changed' → logprob: -9.087088584899902
    10. 'changes' → logprob: -9.212088584899902

Token 353: ' candidate' (ID: 17098)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1941033601760864
    2. ' candidates' → logprob: -1.3191033601760864
    3. 'c' → logprob: -1.5691033601760864
    4. '
' → logprob: -2.194103240966797
    5. '[c' → logprob: -3.569103240966797
    6. 'if' → logprob: -4.069103240966797
    7. ':
' → logprob: -4.069103240966797
    8. ':' → logprob: -4.569103240966797
    9. 'candidate' → logprob: -5.069103240966797
    10. ' if' → logprob: -5.194103240966797

Token 354: ':' (ID: 25)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2766684889793396
    2. '
' → logprob: -2.5266685485839844
    3. ' candidates' → logprob: -3.1516685485839844
    4. ':' → logprob: -3.4016685485839844
    5. 'candidate' → logprob: -3.6516685485839844
    6. ' =' → logprob: -4.276668548583984
    7. 'c' → logprob: -4.651668548583984
    8. 'original' → logprob: -4.776668548583984
    9. '    
' → logprob: -5.276668548583984
    10. ' original' → logprob: -5.526668548583984

Token 355: ' original' (ID: 4756)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.2307024747133255
    2. ' candidates' → logprob: -2.1057024002075195
    3. '   ' → logprob: -2.4807024002075195
    4. ' c' → logprob: -8.48070240020752
    5. '
' → logprob: -8.60570240020752
    6. '```' → logprob: -9.85570240020752
    7. 'candidate' → logprob: -10.35570240020752
    8. ' ' → logprob: -11.23070240020752
    9. 'cand' → logprob: -11.23070240020752
    10. 'original' → logprob: -11.35570240020752

Token 356: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.043254829943180084
    2. 's' → logprob: -4.043254852294922
    3. '=' → logprob: -4.293254852294922
    4. '_candidates' → logprob: -4.543254852294922
    5. ' s' → logprob: -9.418254852294922
    6. '_tokens' → logprob: -9.793254852294922
    7. '_s' → logprob: -9.918254852294922
    8. ' candidates' → logprob: -10.043254852294922
    9. '_candidate' → logprob: -10.168254852294922
    10. 'c' → logprob: -10.168254852294922

Token 357: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0036581491585820913
    2. ' s' → logprob: -5.628658294677734
    3. '[s' → logprob: -10.503658294677734
    4. 'list' → logprob: -10.753658294677734
    5. '   ' → logprob: -12.628658294677734
    6. '`s' → logprob: -13.253658294677734
    7. '```' → logprob: -13.503658294677734
    8. ' list' → logprob: -13.628658294677734
    9. '[' → logprob: -14.753658294677734
    10. ' [' → logprob: -15.128658294677734

Token 358: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.023153938353061676
    2. 'c' → logprob: -4.523153781890869
    3. ' candidates' → logprob: -4.648153781890869
    4. '
' → logprob: -6.523153781890869
    5. ',' → logprob: -8.398154258728027
    6. ')' → logprob: -8.648154258728027
    7. '_candidates' → logprob: -8.648154258728027
    8. '```' → logprob: -8.773154258728027
    9. ',c' → logprob: -9.648154258728027
    10. ')
' → logprob: -10.148154258728027

Token 359: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.023829419165849686
    2. 'c' → logprob: -3.898829460144043
    3. '
' → logprob: -6.398829460144043
    4. ' candidates' → logprob: -6.648829460144043
    5. '```' → logprob: -8.523829460144043
    6. '    
' → logprob: -10.523829460144043
    7. '_candidates' → logprob: -10.523829460144043
    8. ')' → logprob: -11.648829460144043
    9. 'candidate' → logprob: -11.648829460144043
    10. ' c' → logprob: -11.898829460144043

Token 360: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13713857531547546
    2. 'c' → logprob: -2.137138605117798
    3. ' candidates' → logprob: -4.887138366699219
    4. '
' → logprob: -6.512138366699219
    5. '```' → logprob: -8.137138366699219
    6. 'def' → logprob: -8.762138366699219
    7. '_candidates' → logprob: -8.887138366699219
    8. '    
' → logprob: -9.012138366699219
    9. ')' → logprob: -9.137138366699219
    10. 'candidate' → logprob: -9.762138366699219

Token 361: ' -' (ID: 533)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0029840022325515747
    2. '   ' → logprob: -6.502984046936035
    3. ' candidates' → logprob: -6.752984046936035
    4. '
' → logprob: -8.627984046936035
    5. 'return' → logprob: -9.877984046936035
    6. '```' → logprob: -10.502984046936035
    7. 'candidate' → logprob: -11.127984046936035
    8. 'for' → logprob: -11.127984046936035
    9. 'original' → logprob: -11.877984046936035
    10. ' c' → logprob: -12.752984046936035

Token 362: ' For' (ID: 2214)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.033859603106975555
    2. ' for' → logprob: -3.4088594913482666
    3. '
' → logprob: -9.408859252929688
    4. 'from' → logprob: -9.908859252929688
    5. '   ' → logprob: -10.033859252929688
    6. 'For' → logprob: -11.533859252929688
    7. 'possible' → logprob: -11.908859252929688
    8. '```' → logprob: -11.908859252929688
    9. '#' → logprob: -12.908859252929688
    10. 'changed' → logprob: -13.033859252929688

Token 363: ' every' (ID: 1753)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.3484506607055664
    2. 'i' → logprob: -1.2234506607055664
    3. '	i' → logprob: -13.723450660705566
    4. ' ' → logprob: -13.973450660705566
    5. '```' → logprob: -14.223450660705566
    6. 'c' → logprob: -14.348450660705566
    7. ' ' → logprob: -14.473450660705566
    8. 'idx' → logprob: -14.723450660705566
    9. ' idx' → logprob: -14.723450660705566
    10. 'index' → logprob: -15.348450660705566

Token 364: ' letter' (ID: 10263)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.12703236937522888
    2. 'i' → logprob: -2.1270322799682617
    3. ' index' → logprob: -9.252032279968262
    4. 'index' → logprob: -12.627032279968262
    5. ' idx' → logprob: -13.127032279968262
    6. ' possible' → logprob: -13.502032279968262
    7. ' ' → logprob: -14.877032279968262
    8. 'idx' → logprob: -15.002032279968262
    9. '```' → logprob: -15.127032279968262
    10. '	i' → logprob: -16.002033233642578

Token 365: ' c' (ID: 274)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.4300236999988556
    2. ' i' → logprob: -1.4300236701965332
    3. ' c' → logprob: -2.930023670196533
    4. 'i' → logprob: -3.055023670196533
    5. 'c' → logprob: -5.305023670196533
    6. 'in' → logprob: -6.430023670196533
    7. ',' → logprob: -6.555023670196533
    8. ' ' → logprob: -8.555024147033691
    9. ' ,' → logprob: -8.805024147033691
    10. ' =' → logprob: -8.805024147033691

Token 366: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.014136589132249355
    2. ',' → logprob: -5.264136791229248
    3. 'in' → logprob: -5.389136791229248
    4. ' c' → logprob: -7.014136791229248
    5. ' ' → logprob: -7.139136791229248
    6. ' i' → logprob: -7.514136791229248
    7. 'i' → logprob: -7.889136791229248
    8. ' =' → logprob: -8.13913631439209
    9. ' ,' → logprob: -8.13913631439209
    10. ' at' → logprob: -8.26413631439209

Token 367: ' '' (ID: 461)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.40164831280708313
    2. 'range' → logprob: -1.4016482830047607
    3. 's' → logprob: -3.2766482830047607
    4. ' s' → logprob: -3.2766482830047607
    5. ' set' → logprob: -5.15164852142334
    6. 'set' → logprob: -6.15164852142334
    7. ''' → logprob: -7.65164852142334
    8. ''s' → logprob: -8.52664852142334
    9. '"' → logprob: -8.90164852142334
    10. 'enumer' → logprob: -9.02664852142334

Token 368: 'a' (ID: 64)
  Prédit: 'abcdefghijklmnopqrstuvwxyz'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abcdefghijklmnopqrstuvwxyz' → logprob: -0.7712320685386658
    2. 'b' → logprob: -1.2712321281433105
    3. 'a' → logprob: -1.3962321281433105
    4. 'abc' → logprob: -6.5212321281433105
    5. 'abcdefghijkl' → logprob: -6.5212321281433105
    6. 's' → logprob: -6.6462321281433105
    7. ''b' → logprob: -6.6462321281433105
    8. ''' → logprob: -6.8962321281433105
    9. 'abcdef' → logprob: -7.2712321281433105
    10. 'bc' → logprob: -7.5212321281433105

Token 369: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.00024548539659008384
    2. '',' → logprob: -9.000245094299316
    3. ' '' → logprob: -10.125245094299316
    4. ''b' → logprob: -10.250245094299316
    5. 'a' → logprob: -11.375245094299316
    6. 'b' → logprob: -11.625245094299316
    7. ''a' → logprob: -11.625245094299316
    8. ''
' → logprob: -12.375245094299316
    9. ' to' → logprob: -12.750245094299316
    10. ''t' → logprob: -13.250245094299316

Token 370: '..' (ID: 485)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.7462655901908875
    2. ''' → logprob: -0.9962655901908875
    3. 'to' → logprob: -1.8712656497955322
    4. ' ' → logprob: -7.246265411376953
    5. ',' → logprob: -7.496265411376953
    6. '..' → logprob: -7.996265411376953
    7. '   ' → logprob: -8.246265411376953
    8. 'def' → logprob: -8.746265411376953
    9. 'b' → logprob: -9.246265411376953
    10. '',' → logprob: -9.496265411376953

Token 371: ''' (ID: 6)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.592903733253479
    2. ''y' → logprob: -0.842903733253479
    3. ''z' → logprob: -5.0929036140441895
    4. ' y' → logprob: -5.3429036140441895
    5. 'z' → logprob: -5.5929036140441895
    6. 'x' → logprob: -7.0929036140441895
    7. ''' → logprob: -7.8429036140441895
    8. ''x' → logprob: -8.342904090881348
    9. '‘y' → logprob: -8.342904090881348
    10. 'y's' → logprob: -9.092904090881348

Token 372: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.03120340406894684
    2. 'z' → logprob: -3.531203508377075
    3. ''y' → logprob: -6.906203269958496
    4. 'x' → logprob: -9.031203269958496
    5. ''z' → logprob: -9.156203269958496
    6. ''' → logprob: -9.656203269958496
    7. 'y's' → logprob: -9.906203269958496
    8. ' y' → logprob: -10.281203269958496
    9. '
' → logprob: -10.781203269958496
    10. '```' → logprob: -11.281203269958496

Token 373: '',' (ID: 787)
  Prédit: '':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':
' → logprob: -0.13262826204299927
    2. '':' → logprob: -2.2576282024383545
    3. ''' → logprob: -4.882628440856934
    4. '',' → logprob: -5.132628440856934
    5. ':
' → logprob: -6.382628440856934
    6. ':' → logprob: -6.382628440856934
    7. '':

' → logprob: -7.132628440856934
    8. '   ' → logprob: -7.632628440856934
    9. ''):
' → logprob: -7.882628440856934
    10. ''
' → logprob: -8.632628440856934

Token 374: ' find' (ID: 1646)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.025703631341457367
    2. '   ' → logprob: -4.150703430175781
    3. 'for' → logprob: -4.650703430175781
    4. '    ' → logprob: -10.525703430175781
    5. ' if' → logprob: -11.400703430175781
    6. '	for' → logprob: -11.525703430175781
    7. ' i' → logprob: -11.900703430175781
    8. '       ' → logprob: -12.025703430175781
    9. ' ' → logprob: -13.900703430175781
    10. '    
' → logprob: -14.150703430175781

Token 375: ' the' (ID: 290)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.26151931285858154
    2. 'i' → logprob: -2.386519432067871
    3. ' the' → logprob: -2.761519432067871
    4. ' all' → logprob: -3.011519432067871
    5. ' for' → logprob: -4.761519432067871
    6. ' its' → logprob: -5.511519432067871
    7. ' positions' → logprob: -6.261519432067871
    8. ' indices' → logprob: -6.386519432067871
    9. ' possible' → logprob: -6.761519432067871
    10. ' idx' → logprob: -6.761519432067871

Token 376: ' first' (ID: 1577)
  Prédit: ' next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' next' → logprob: -0.8251891732215881
    2. 'index' → logprob: -2.0751891136169434
    3. 'i' → logprob: -2.4501891136169434
    4. ' first' → logprob: -2.4501891136169434
    5. ' index' → logprob: -2.7001891136169434
    6. 'next' → logprob: -3.0751891136169434
    7. 'indices' → logprob: -3.4501891136169434
    8. ' positions' → logprob: -3.7001891136169434
    9. ' indices' → logprob: -3.7001891136169434
    10. 'first' → logprob: -4.075189113616943

Token 377: ' occurrence' (ID: 55807)
  Prédit: ' occurrence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' occurrence' → logprob: -0.18288634717464447
    2. 'occ' → logprob: -2.4328863620758057
    3. '_occ' → logprob: -2.9328863620758057
    4. ' index' → logprob: -4.682886123657227
    5. 'occur' → logprob: -5.432886123657227
    6. '_' → logprob: -5.682886123657227
    7. ' ' → logprob: -6.057886123657227
    8. ' i' → logprob: -6.682886123657227
    9. '_oc' → logprob: -6.807886123657227
    10. ' occur' → logprob: -6.807886123657227

Token 378: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.4896998107433319
    2. '   ' → logprob: -1.1146998405456543
    3. ' in' → logprob: -2.9896998405456543
    4. ' for' → logprob: -5.489699840545654
    5. 'of' → logprob: -5.989699840545654
    6. 'in' → logprob: -7.364699840545654
    7. '    ' → logprob: -7.989699840545654
    8. ' i' → logprob: -8.364699363708496
    9. 'for' → logprob: -8.489699363708496
    10. '       ' → logprob: -8.864699363708496

Token 379: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.5152295231819153
    2. 'c' → logprob: -1.0152294635772705
    3. 'chr' → logprob: -4.01522970199585
    4. ' s' → logprob: -4.51522970199585
    5. ' chr' → logprob: -5.14022970199585
    6. 's' → logprob: -5.51522970199585
    7. ''' → logprob: -8.015229225158691
    8. ' '' → logprob: -8.140229225158691
    9. ' ' → logprob: -9.140229225158691
    10. '   ' → logprob: -9.140229225158691

Token 380: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.26383447647094727
    2. '   ' → logprob: -1.7638344764709473
    3. 'in' → logprob: -3.5138344764709473
    4. ' for' → logprob: -4.638834476470947
    5. ',' → logprob: -5.013834476470947
    6. 'for' → logprob: -6.013834476470947
    7. ':' → logprob: -6.138834476470947
    8. ' ' → logprob: -6.263834476470947
    9. '
' → logprob: -7.138834476470947
    10. '  ' → logprob: -7.263834476470947

Token 381: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5449442267417908
    2. 'range' → logprob: -1.6699442863464355
    3. ' s' → logprob: -2.0449442863464355
    4. ' range' → logprob: -2.2949442863464355
    5. '   ' → logprob: -6.5449442863464355
    6. '```' → logprob: -9.419943809509277
    7. 'for' → logprob: -10.169943809509277
    8. '
' → logprob: -11.044943809509277
    9. ' for' → logprob: -11.169943809509277
    10. ' the' → logprob: -11.169943809509277

Token 382: ',
' (ID: 412)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02709003910422325
    2. ',' → logprob: -4.652090072631836
    3. ':' → logprob: -4.652090072631836
    4. ' for' → logprob: -5.777090072631836
    5. 'for' → logprob: -6.777090072631836
    6. ' and' → logprob: -7.027090072631836
    7. '
' → logprob: -7.152090072631836
    8. 'def' → logprob: -7.902090072631836
    9. ':
' → logprob: -8.277090072631836
    10. ',
' → logprob: -8.402090072631836

Token 383: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04814542457461357
    2. ' and' → logprob: -3.2981455326080322
    3. 'and' → logprob: -5.548145294189453
    4. ' for' → logprob: -5.798145294189453
    5. ' then' → logprob: -6.673145294189453
    6. 'for' → logprob: -6.923145294189453
    7. '#' → logprob: -7.923145294189453
    8. '       ' → logprob: -8.173145294189453
    9. '    ' → logprob: -9.548145294189453
    10. 'then' → logprob: -10.048145294189453

Token 384: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05424609035253525
    2. ' and' → logprob: -3.304246187210083
    3. 'and' → logprob: -4.929245948791504
    4. ' then' → logprob: -5.304245948791504
    5. ' for' → logprob: -6.554245948791504
    6. 'for' → logprob: -6.929245948791504
    7. 'then' → logprob: -7.679245948791504
    8. '#' (adapté à ' #') → logprob: -7.804245948791504
    9. '       ' → logprob: -7.804245948791504
    10. '    ' → logprob: -10.304245948791504

Token 385: '  ' (ID: 256)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09012173861265182
    2. ' and' → logprob: -3.7151217460632324
    3. ' for' → logprob: -3.8401217460632324
    4. 'and' → logprob: -4.090121746063232
    5. 'for' → logprob: -4.090121746063232
    6. ' then' → logprob: -5.715121746063232
    7. '#' → logprob: -6.715121746063232
    8. '       ' → logprob: -7.090121746063232
    9. 'then' → logprob: -7.215121746063232
    10. '    ' → logprob: -8.465121269226074

Token 386: ' and' (ID: 326)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14779527485370636
    2. 'for' → logprob: -3.1477952003479004
    3. 'and' (adapté à ' and') → logprob: -3.1477952003479004
    4. ' and' → logprob: -4.0227952003479
    5. '#' → logprob: -4.5227952003479
    6. ' for' → logprob: -4.7727952003479
    7. ' then' → logprob: -5.1477952003479
    8. 'then' → logprob: -5.1477952003479
    9. 'if' → logprob: -7.1477952003479
    10. ' if' → logprob: -8.272795677185059

Token 387: ' try' (ID: 2075)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8405367136001587
    2. 'for' → logprob: -1.0905367136001587
    3. ' for' → logprob: -1.4655367136001587
    4. '  ' → logprob: -8.590537071228027
    5. 'try' → logprob: -8.590537071228027
    6. ' try' → logprob: -8.715537071228027
    7. '
' → logprob: -8.715537071228027
    8. ' ' → logprob: -9.090537071228027
    9. ' if' → logprob: -9.340537071228027
    10. '    ' → logprob: -9.715537071228027

Token 388: ' to' (ID: 316)
  Prédit: ' replacing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' replacing' → logprob: -0.5975738763809204
    2. ' to' → logprob: -0.9725738763809204
    3. '   ' → logprob: -3.097573757171631
    4. ' original' → logprob: -4.597573757171631
    5. 'to' → logprob: -5.097573757171631
    6. '    ' → logprob: -5.847573757171631
    7. ':' → logprob: -6.722573757171631
    8. '
' → logprob: -6.972573757171631
    9. ':
' → logprob: -6.972573757171631
    10. ' increment' → logprob: -7.222573757171631

Token 389: ' change' (ID: 3343)
  Prédit: 'replace'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'replace' → logprob: -0.2919537425041199
    2. 'for' → logprob: -3.0419538021087646
    3. ' replace' → logprob: -3.2919538021087646
    4. 'change' → logprob: -3.5419538021087646
    5. 'decrypt' → logprob: -4.1669535636901855
    6. '
' → logprob: -4.2919535636901855
    7. 'original' → logprob: -4.2919535636901855
    8. ' change' → logprob: -4.4169535636901855
    9. ' for' → logprob: -4.4169535636901855
    10. 'orig' → logprob: -4.5419535636901855

Token 390: ' that' (ID: 484)
  Prédit: ' that'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' that' → logprob: -0.32810312509536743
    2. 'that' → logprob: -1.8281030654907227
    3. ' it' → logprob: -2.5781030654907227
    4. 'it' → logprob: -4.078103065490723
    5. ' the' → logprob: -5.078103065490723
    6. ' original' → logprob: -5.328103065490723
    7. '   ' → logprob: -5.578103065490723
    8. 'the' → logprob: -5.828103065490723
    9. 'original' → logprob: -5.953103065490723
    10. ' s' → logprob: -6.203103065490723

Token 391: ' occurrence' (ID: 55807)
  Prédit: 'occ'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'occ' → logprob: -1.0540134906768799
    2. ' first' → logprob: -2.05401349067688
    3. ' occurrence' → logprob: -2.30401349067688
    4. 'first' → logprob: -2.42901349067688
    5. 'char' → logprob: -2.92901349067688
    6. ' original' → logprob: -3.17901349067688
    7. ' character' → logprob: -3.30401349067688
    8. 'index' → logprob: -3.30401349067688
    9. 'c' → logprob: -3.55401349067688
    10. 'original' → logprob: -3.55401349067688

Token 392: ' back' (ID: 1602)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.32859987020492554
    2. ' to' → logprob: -1.8285999298095703
    3. 'def' → logprob: -3.5785999298095703
    4. ' into' → logprob: -3.7035999298095703
    5. ' at' → logprob: -4.07859992980957
    6. 'from' → logprob: -4.57859992980957
    7. ' for' → logprob: -4.95359992980957
    8. 'to' → logprob: -5.07859992980957
    9. ' from' → logprob: -5.20359992980957
    10. 's' → logprob: -5.57859992980957

Token 393: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.4752916693687439
    2. 'to' → logprob: -1.7252917289733887
    3. '   ' → logprob: -2.3502917289733887
    4. ' at' → logprob: -2.8502917289733887
    5. ' into' → logprob: -3.9752917289733887
    6. 'def' → logprob: -4.475291728973389
    7. 'at' → logprob: -4.725291728973389
    8. ' by' → logprob: -5.600291728973389
    9. 's' → logprob: -6.725291728973389
    10. '       ' → logprob: -6.850291728973389

Token 394: ' chr' (ID: 42767)
  Prédit: 'chr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chr' → logprob: -0.0008255873690359294
    2. ' chr' → logprob: -7.12582540512085
    3. '(chr' → logprob: -10.875825881958008
    4. '   ' → logprob: -13.625825881958008
    5. '```' → logprob: -15.500825881958008
    6. ' ' → logprob: -15.750825881958008
    7. 'ch' → logprob: -15.875825881958008
    8. '       ' → logprob: -16.250825881958008
    9. '_chr' → logprob: -16.250825881958008
    10. 'Chr' → logprob: -16.500825881958008

Token 395: '(ord' (ID: 199585)
  Prédit: '(ord'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ord' → logprob: -5.490809417096898e-05
    2. '(' → logprob: -9.875055313110352
    3. '   ' → logprob: -12.875055313110352
    4. 'ord' → logprob: -15.500055313110352
    5. '(
' → logprob: -15.625055313110352
    6. '(chr' → logprob: -16.00005531311035
    7. ' (' → logprob: -16.25005531311035
    8. '(order' → logprob: -16.25005531311035
    9. '((' → logprob: -16.50005531311035
    10. '```' → logprob: -17.62505531311035

Token 396: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.04341840744018555
    2. '(s' → logprob: -3.1684184074401855
    3. 'c' → logprob: -8.293418884277344
    4. '(' → logprob: -8.918418884277344
    5. 's' → logprob: -10.418418884277344
    6. '('' → logprob: -13.418418884277344
    7. '(ord' → logprob: -13.793418884277344
    8. '(chr' → logprob: -14.668418884277344
    9. '(next' → logprob: -14.793418884277344
    10. '(i' → logprob: -15.293418884277344

Token 397: ')+' (ID: 16161)
  Prédit: ')+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')+' → logprob: -0.9579106569290161
    2. '(' → logprob: -1.3329106569290161
    3. '(s' → logprob: -2.0829105377197266
    4. '(c' → logprob: -2.4579105377197266
    5. ')' → logprob: -2.4579105377197266
    6. '+' → logprob: -4.082910537719727
    7. 's' → logprob: -4.082910537719727
    8. '('' → logprob: -4.457910537719727
    9. 'c' → logprob: -6.082910537719727
    10. '(i' → logprob: -6.457910537719727

Token 398: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.596781946020201e-05
    2. ' ' → logprob: -10.500045776367188
    3. 's' → logprob: -11.250045776367188
    4. '
' → logprob: -13.500045776367188
    5. 'c' → logprob: -13.625045776367188
    6. ''s' → logprob: -14.000045776367188
    7. ''' → logprob: -14.250045776367188
    8. '```' → logprob: -14.750045776367188
    9. ' s' → logprob: -15.500045776367188
    10. '   ' → logprob: -15.875045776367188

Token 399: ').

' (ID: 3991)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04106269031763077
    2. '')' → logprob: -3.666062593460083
    3. '))' → logprob: -4.666062831878662
    4. ')
' → logprob: -6.041062831878662
    5. '   ' → logprob: -6.791062831878662
    6. ')'' → logprob: -7.666062831878662
    7. 'def' → logprob: -8.541062355041504
    8. '       ' → logprob: -8.791062355041504
    9. ')`' → logprob: -8.791062355041504
    10. ')))' → logprob: -9.416062355041504

Token 400: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.022541509941220284
    2. '
' → logprob: -4.147541522979736
    3. '    
' → logprob: -6.022541522979736
    4. 'def' → logprob: -6.397541522979736
    5. ' candidates' → logprob: -6.772541522979736
    6. '```' → logprob: -7.522541522979736
    7. ' for' → logprob: -9.272541046142578
    8. '  
' → logprob: -9.272541046142578
    9. '_candidates' → logprob: -9.397541046142578
    10. ' 
' → logprob: -9.522541046142578

Token 401: ' candidates' (ID: 18116)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.39655983448028564
    2. 'c' → logprob: -1.1465598344802856
    3. '
' → logprob: -5.021559715270996
    4. ' candidates' → logprob: -6.396559715270996
    5. 'original' → logprob: -7.771559715270996
    6. '    
' → logprob: -8.271559715270996
    7. 'def' → logprob: -8.771559715270996
    8. '#' → logprob: -8.896559715270996
    9. '```' → logprob: -8.896559715270996
    10. 'for' → logprob: -9.646559715270996

Token 402: '_set' (ID: 5451)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00048715711454860866
    2. '.' → logprob: -7.750487327575684
    3. '=' → logprob: -10.625487327575684
    4. '.extend' → logprob: -11.125487327575684
    5. ' =' → logprob: -11.625487327575684
    6. '.app' → logprob: -12.625487327575684
    7. ' .' → logprob: -12.750487327575684
    8. 'append' → logprob: -14.625487327575684
    9. '.ap' → logprob: -14.625487327575684
    10. '.=' → logprob: -14.625487327575684

Token 403: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4740826487541199
    2. '=' → logprob: -0.9740826487541199
    3. '=set' → logprob: -12.724082946777344
    4. '()' → logprob: -14.474082946777344
    5. ' ' → logprob: -14.474082946777344
    6. ')' → logprob: -14.974082946777344
    7. '.' → logprob: -15.224082946777344
    8. '=[]' → logprob: -15.724082946777344
    9. '={}' → logprob: -15.974082946777344
    10. '   ' → logprob: -15.974082946777344

Token 404: ' set' (ID: 920)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.7231462001800537
    2. 'set' → logprob: -0.7231462001800537
    3. ' set' → logprob: -3.7231462001800537
    4. ' {' → logprob: -5.223146438598633
    5. '{s' → logprob: -12.348146438598633
    6. ' ' → logprob: -15.223146438598633
    7. '	set' → logprob: -15.598146438598633
    8. '   ' → logprob: -16.098146438598633
    9. '{"' → logprob: -16.348146438598633
    10. '{}' → logprob: -16.598146438598633

Token 405: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0011489099124446511
    2. '(' → logprob: -7.126148700714111
    3. '()
' → logprob: -8.50114917755127
    4. '(c' → logprob: -9.37614917755127
    5. '([' → logprob: -11.00114917755127
    6. '(s' → logprob: -11.25114917755127
    7. '()

' → logprob: -12.00114917755127
    8. ' ()' → logprob: -12.87614917755127
    9. '()]' → logprob: -12.87614917755127
    10. '([]' → logprob: -13.12614917755127

Token 406: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.023199234157800674
    2. '
' → logprob: -4.523199081420898
    3. '```' → logprob: -5.273199081420898
    4. 'c' → logprob: -5.898199081420898
    5. '    
' → logprob: -6.148199081420898
    6. ' candidates' → logprob: -6.648199081420898
    7. 'def' → logprob: -7.648199081420898
    8. 'for' → logprob: -9.523199081420898
    9. '_candidates' → logprob: -9.523199081420898
    10. ' for' → logprob: -9.648199081420898

Token 407: ' candidates' (ID: 18116)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.02761293761432171
    2. '   ' → logprob: -4.152613162994385
    3. '
' → logprob: -4.777613162994385
    4. ' candidates' → logprob: -6.027613162994385
    5. 'original' → logprob: -8.152612686157227
    6. '    
' → logprob: -8.902612686157227
    7. '```' → logprob: -9.277612686157227
    8. 'for' → logprob: -9.652612686157227
    9. 'candidate' → logprob: -9.777612686157227
    10. ' original' → logprob: -11.527612686157227

Token 408: '_set' (ID: 5451)
  Prédit: '.add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.001389400800690055
    2. '.' → logprob: -7.126389503479004
    3. '.append' → logprob: -7.501389503479004
    4. ' .' → logprob: -10.501389503479004
    5. ' =' → logprob: -13.126389503479004
    6. '=' → logprob: -13.626389503479004
    7. 'add' → logprob: -13.876389503479004
    8. '.update' → logprob: -15.501389503479004
    9. '_add' → logprob: -15.626389503479004
    10. ' ' → logprob: -15.876389503479004

Token 409: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.0003716854262165725
    2. '.' → logprob: -8.000371932983398
    3. '=' → logprob: -10.750371932983398
    4. ' .' → logprob: -11.375371932983398
    5. ' =' → logprob: -13.125371932983398
    6. '.=' → logprob: -14.375371932983398
    7. '.update' → logprob: -15.125371932983398
    8. 'add' → logprob: -15.750371932983398
    9. ' ' → logprob: -16.3753719329834
    10. '.append' → logprob: -16.8753719329834

Token 410: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.0006024802569299936
    2. '('' → logprob: -8.000602722167969
    3. '(' → logprob: -8.500602722167969
    4. '(tuple' → logprob: -10.250602722167969
    5. 's' → logprob: -10.750602722167969
    6. ' (' → logprob: -12.750602722167969
    7. '((' → logprob: -12.875602722167969
    8. '("' → logprob: -14.500602722167969
    9. '(('' → logprob: -15.500602722167969
    10. '(
' → logprob: -16.12560272216797

Token 411: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.319370302458992e-06
    2. ' )' → logprob: -12.500005722045898
    3. ')
' → logprob: -13.750005722045898
    4. '")' → logprob: -15.125005722045898
    5. '')' → logprob: -16.2500057220459
    6. '))' → logprob: -17.3750057220459
    7. ')

' → logprob: -18.0000057220459
    8. '`)' → logprob: -18.5000057220459
    9. '   ' → logprob: -18.6250057220459
    10. ')`' → logprob: -19.3750057220459

Token 412: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.09510769695043564
    2. ' for' → logprob: -2.9701077938079834
    3. '   ' → logprob: -3.3451077938079834
    4. '
' → logprob: -5.595107555389404
    5. '    
' → logprob: -8.345108032226562
    6. '```' → logprob: -8.595108032226562
    7. '	for' → logprob: -10.970108032226562
    8. ' 
' → logprob: -12.970108032226562
    9. 'def' → logprob: -13.095108032226562
    10. 'from' → logprob: -13.345108032226562

Token 413: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0050035519525408745
    2. ' for' → logprob: -5.380003452301025
    3. '   ' → logprob: -8.505003929138184
    4. 'from' → logprob: -8.755003929138184
    5. 'import' → logprob: -11.380003929138184
    6. '
' → logprob: -12.130003929138184
    7. '```' → logprob: -13.005003929138184
    8. '    
' → logprob: -13.755003929138184
    9. 'letters' → logprob: -14.005003929138184
    10. ' from' → logprob: -14.380003929138184

Token 414: ' Create' (ID: 6585)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.007094219792634249
    2. ' for' → logprob: -5.132094383239746
    3. 'from' → logprob: -7.007094383239746
    4. '   ' → logprob: -8.382094383239746
    5. 'import' → logprob: -11.007094383239746
    6. '
' → logprob: -12.382094383239746
    7. ' from' → logprob: -12.632094383239746
    8. '```' → logprob: -13.257094383239746
    9. 'first' → logprob: -13.382094383239746
    10. 'letters' → logprob: -13.757094383239746

Token 415: ' a' (ID: 261)
  Prédit: ' first'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' first' → logprob: -1.4607672691345215
    2. 'from' → logprob: -1.7107672691345215
    3. 'first' → logprob: -1.8357672691345215
    4. 'for' → logprob: -2.2107672691345215
    5. ' a' → logprob: -2.3357672691345215
    6. ' for' → logprob: -2.7107672691345215
    7. ' from' → logprob: -3.2107672691345215
    8. 'a' → logprob: -4.2107672691345215
    9. 'char' → logprob: -4.2107672691345215
    10. 'freq' → logprob: -4.3357672691345215

Token 416: ' map' (ID: 4014)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.18164272606372833
    2. 'from' → logprob: -1.806642770767212
    3. 'freq' → logprob: -7.681642532348633
    4. 'counter' → logprob: -8.056642532348633
    5. 'list' → logprob: -8.431642532348633
    6. 'count' → logprob: -8.681642532348633
    7. 'import' → logprob: -8.681642532348633
    8. 'frequency' → logprob: -8.931642532348633
    9. 'pos' → logprob: -9.431642532348633
    10. 'def' → logprob: -9.681642532348633

Token 417: ' of' (ID: 328)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -1.0535366535186768
    2. ' from' → logprob: -1.3035366535186768
    3. 'char' → logprob: -1.6785366535186768
    4. ' of' → logprob: -2.4285366535186768
    5. ' char' → logprob: -2.6785366535186768
    6. 'first' → logprob: -4.803536415100098
    7. ' first' → logprob: -4.803536415100098
    8. ' last' → logprob: -5.053536415100098
    9. 'last' → logprob: -5.928536415100098
    10. 'of' → logprob: -6.053536415100098

Token 418: ' letter' (ID: 10263)
  Prédit: 'first'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'first' → logprob: -0.5452790856361389
    2. 'char' → logprob: -1.1702790260314941
    3. ' first' → logprob: -2.295279026031494
    4. ' char' → logprob: -5.170279026031494
    5. 'seen' → logprob: -6.920279026031494
    6. 'letter' → logprob: -7.795279026031494
    7. 'character' → logprob: -8.045279502868652
    8. ' seen' → logprob: -8.170279502868652
    9. 'c' → logprob: -8.170279502868652
    10. 'from' → logprob: -8.295279502868652

Token 419: ' ->' (ID: 2747)
  Prédit: '_to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_to' → logprob: -0.296624094247818
    2. '_first' → logprob: -2.671624183654785
    3. '_positions' → logprob: -2.671624183654785
    4. ' to' → logprob: -3.046624183654785
    5. 'first' → logprob: -3.421624183654785
    6. ' first' → logprob: -4.421624183654785
    7. 'to' → logprob: -5.171624183654785
    8. 'positions' → logprob: -5.171624183654785
    9. '_indices' → logprob: -5.421624183654785
    10. 's' → logprob: -5.796624183654785

Token 420: ' first' (ID: 1577)
  Prédit: 'first'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'first' → logprob: -0.16840121150016785
    2. ' first' → logprob: -2.1684012413024902
    3. 'index' → logprob: -3.5434012413024902
    4. 'indices' → logprob: -5.91840124130249
    5. 'list' → logprob: -6.16840124130249
    6. ' indices' → logprob: -6.54340124130249
    7. ' index' → logprob: -6.91840124130249
    8. 'positions' → logprob: -6.91840124130249
    9. '[first' → logprob: -7.29340124130249
    10. 's' → logprob: -7.41840124130249

Token 421: ' occurrence' (ID: 55807)
  Prédit: '_occ'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_occ' → logprob: -0.001355475396849215
    2. '_oc' → logprob: -7.5013556480407715
    3. '_pos' → logprob: -7.7513556480407715
    4. 'occ' → logprob: -8.626355171203613
    5. ' occurrence' → logprob: -9.251355171203613
    6. '_index' → logprob: -10.001355171203613
    7. 'pos' → logprob: -10.251355171203613
    8. 'occur' → logprob: -11.251355171203613
    9. '_indices' → logprob: -13.626355171203613
    10. '_idx' → logprob: -14.376355171203613

Token 422: ' indices' (ID: 30378)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07326368242502213
    2. '_pos' → logprob: -3.698263645172119
    3. 'pos' → logprob: -4.448263645172119
    4. '=' → logprob: -4.448263645172119
    5. '_positions' → logprob: -4.698263645172119
    6. '_first' → logprob: -6.198263645172119
    7. 'first' → logprob: -6.198263645172119
    8. '_index' → logprob: -6.198263645172119
    9. '_indices' → logprob: -6.323263645172119
    10. 'positions' → logprob: -7.073263645172119

Token 423: ' in' (ID: 306)
  Prédit: 'first'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'first' → logprob: -0.49789732694625854
    2. '   ' → logprob: -1.8728973865509033
    3. ' =' → logprob: -1.9978973865509033
    4. ' first' → logprob: -2.6228973865509033
    5. ':' → logprob: -4.372897148132324
    6. '=' → logprob: -5.247897148132324
    7. 'indices' → logprob: -5.997897148132324
    8. 'from' → logprob: -5.997897148132324
    9. ':first' → logprob: -6.372897148132324
    10. '```' → logprob: -6.997897148132324

Token 424: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.06798571348190308
    2. 'range' → logprob: -2.942985773086548
    3. '{s' → logprob: -4.942985534667969
    4. '{' → logprob: -6.192985534667969
    5. 'positions' → logprob: -7.067985534667969
    6. 'default' → logprob: -7.192985534667969
    7. ' s' → logprob: -7.817985534667969
    8. 'for' → logprob: -8.192985534667969
    9. '{}' → logprob: -8.442985534667969
    10. '[s' → logprob: -8.442985534667969

Token 425: '
' (ID: 198)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.19505545496940613
    2. ':' → logprob: -3.0700554847717285
    3. ' first' → logprob: -3.1950554847717285
    4. 'indices' → logprob: -4.0700554847717285
    5. 'first' → logprob: -4.1950554847717285
    6. '=' → logprob: -4.3200554847717285
    7. '   ' → logprob: -4.4450554847717285
    8. '_first' → logprob: -4.6950554847717285
    9. 'from' → logprob: -5.8200554847717285
    10. '_indices' → logprob: -5.9450554847717285

Token 426: '   ' (ID: 271)
  Prédit: 'first'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'first' → logprob: -0.19766369462013245
    2. ' first' → logprob: -1.82266366481781
    3. '   ' → logprob: -4.1976637840271
    4. 'letter' → logprob: -7.0726637840271
    5. '```' → logprob: -7.5726637840271
    6. 'indices' → logprob: -7.8226637840271
    7. ' letter' → logprob: -8.447663307189941
    8. 'from' → logprob: -8.822663307189941
    9. 'occ' → logprob: -8.822663307189941
    10. 'char' → logprob: -9.072663307189941

Token 427: ' first' (ID: 1577)
  Prédit: 'first'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'first' (adapté à ' first') → logprob: -0.006463474594056606
    2. ' first' → logprob: -5.256463527679443
    3. 'from' → logprob: -6.756463527679443
    4. 'pos' → logprob: -10.506463050842285
    5. 'letter' → logprob: -11.256463050842285
    6. '   ' → logprob: -11.756463050842285
    7. 'char' → logprob: -12.131463050842285
    8. ' from' → logprob: -12.631463050842285
    9. 'occ' → logprob: -12.881463050842285
    10. 'positions' → logprob: -13.006463050842285

Token 428: '_occ' (ID: 180107)
  Prédit: '_occ'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_occ' → logprob: -0.0017476500943303108
    2. '_oc' → logprob: -6.5017476081848145
    3. '_pos' → logprob: -8.376748085021973
    4. '_indices' → logprob: -11.876748085021973
    5. '_positions' → logprob: -12.251748085021973
    6. 'occ' → logprob: -13.751748085021973
    7. '_char' → logprob: -14.376748085021973
    8. '_OCC' → logprob: -14.501748085021973
    9. '_chars' → logprob: -15.001748085021973
    10. '_idx' → logprob: -15.001748085021973

Token 429: 'urrence' (ID: 29194)
  Prédit: 'urrence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'urrence' → logprob: -0.6965187788009644
    2. 'urrences' → logprob: -0.6965187788009644
    3. 'ur' → logprob: -6.571518898010254
    4. 'curr' → logprob: -7.321518898010254
    5. 'urrencies' → logprob: -7.446518898010254
    6. 'urr' → logprob: -7.446518898010254
    7. 'urance' → logprob: -10.321518898010254
    8. 'urrency' → logprob: -10.446518898010254
    9. 'rence' → logprob: -10.696518898010254
    10. 'urances' → logprob: -11.196518898010254

Token 430: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.061999283730983734
    2. ' =' → logprob: -2.8119993209838867
    3. 's' → logprob: -10.686999320983887
    4. '={}
' → logprob: -12.936999320983887
    5. '={}' → logprob: -13.061999320983887
    6. '_indices' → logprob: -13.686999320983887
    7. '_map' → logprob: -14.186999320983887
    8. '```' → logprob: -14.436999320983887
    9. '   ' → logprob: -14.936999320983887
    10. '={' → logprob: -15.436999320983887

Token 431: ' {}
' (ID: 11421)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.0011932061752304435
    2. '{}
' → logprob: -6.751193046569824
    3. 'dict' → logprob: -11.501193046569824
    4. '{}

' → logprob: -11.751193046569824
    5. ' {}' → logprob: -12.751193046569824
    6. '{' → logprob: -13.251193046569824
    7. '{}\' → logprob: -15.876193046569824
    8. ' {}
' → logprob: -16.37619400024414
    9. '{})' → logprob: -16.50119400024414
    10. ' dict' → logprob: -17.12619400024414

Token 432: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4017404615879059
    2. '   ' → logprob: -1.7767404317855835
    3. ' for' → logprob: -1.9017404317855835
    4. '
' → logprob: -4.526740550994873
    5. '```' → logprob: -7.276740550994873
    6. '	for' → logprob: -7.526740550994873
    7. '    
' → logprob: -8.526740074157715
    8. '  
' → logprob: -10.151740074157715
    9. ' ' → logprob: -10.901740074157715
    10. '<|end|>' → logprob: -11.526740074157715

Token 433: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.006976552773267031
    2. ' for' → logprob: -5.00697660446167
    3. '   ' → logprob: -8.256976127624512
    4. '
' → logprob: -13.381976127624512
    5. '	for' → logprob: -16.256977081298828
    6. '    
' → logprob: -17.006977081298828
    7. 'i' → logprob: -17.131977081298828
    8. '```' → logprob: -17.256977081298828
    9. ' ' → logprob: -18.631977081298828
    10. ' 
' → logprob: -18.881977081298828

Token 434: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.005595864728093147
    2. ' i' → logprob: -5.255595684051514
    3. 'idx' → logprob: -8.005596160888672
    4. ' idx' → logprob: -11.255596160888672
    5. 'c' → logprob: -11.880596160888672
    6. 'index' → logprob: -12.755596160888672
    7. ' ' → logprob: -13.130596160888672
    8. 'ch' → logprob: -13.255596160888672
    9. '   ' → logprob: -13.880596160888672
    10. '  ' → logprob: -14.880596160888672

Token 435: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8311427235603333
    2. ' in' → logprob: -1.2061426639556885
    3. 'in' → logprob: -1.3311426639556885
    4. ' ,' → logprob: -7.206142902374268
    5. ',char' → logprob: -9.20614242553711
    6. ',s' → logprob: -10.70614242553711
    7. ',in' → logprob: -10.83114242553711
    8. ' ' → logprob: -11.33114242553711
    9. '```' → logprob: -11.58114242553711
    10. ',c' → logprob: -12.20614242553711

Token 436: ' ch' (ID: 549)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.00866113230586052
    2. 'ch' → logprob: -4.758661270141602
    3. 'char' → logprob: -10.258661270141602
    4. ' c' → logprob: -11.383661270141602
    5. ' ch' → logprob: -16.1336612701416
    6. '   ' → logprob: -17.6336612701416
    7. '```' → logprob: -18.1336612701416
    8. ')c' → logprob: -19.5086612701416
    9. '	c' → logprob: -19.7586612701416
    10. ' ' → logprob: -20.2586612701416

Token 437: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.026306452229619026
    2. 'in' → logprob: -3.651306390762329
    3. '	in' → logprob: -13.15130615234375
    4. ' ' → logprob: -13.52630615234375
    5. 's' → logprob: -13.77630615234375
    6. '   ' → logprob: -14.90130615234375
    7. 'n' → logprob: -15.02630615234375
    8. ')' → logprob: -15.52630615234375
    9. '_in' → logprob: -16.15130615234375
    10. '  ' → logprob: -16.27630615234375

Token 438: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.038044705986976624
    2. ' enumerate' → logprob: -3.2880446910858154
    3. 's' → logprob: -12.788044929504395
    4. '```' → logprob: -16.163043975830078
    5. 'en' → logprob: -16.288043975830078
    6. 'enum' → logprob: -16.538043975830078
    7. 'range' → logprob: -16.538043975830078
    8. '   ' → logprob: -17.663043975830078
    9. '
' → logprob: -18.163043975830078
    10. 'Enumer' → logprob: -18.413043975830078

Token 439: '(s' (ID: 1858)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0025629340671002865
    2. ' s' → logprob: -6.377562999725342
    3. '(s' → logprob: -7.127562999725342
    4. '   ' → logprob: -9.877562522888184
    5. ')' → logprob: -13.127562522888184
    6. ')s' → logprob: -13.752562522888184
    7. '`s' → logprob: -14.252562522888184
    8. '
' → logprob: -14.752562522888184
    9. ' (' → logprob: -15.002562522888184
    10. '	s' → logprob: -15.127562522888184

Token 440: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.2519606053829193
    2. '):' → logprob: -1.5019606351852417
    3. '):
' → logprob: -10.876960754394531
    4. '   ' → logprob: -12.001960754394531
    5. ':' → logprob: -12.376960754394531
    6. '):

' → logprob: -14.126960754394531
    7. '():
' → logprob: -14.376960754394531
    8. ' ):
' → logprob: -14.876960754394531
    9. ' ):' → logprob: -15.251960754394531
    10. ':
' → logprob: -15.876960754394531

Token 441: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5800215601921082
    2. '   ' → logprob: -0.8300215601921082
    3. ' if' → logprob: -5.580021381378174
    4. '```' → logprob: -9.455021858215332
    5. '    ' → logprob: -9.580021858215332
    6. 'if' → logprob: -10.330021858215332
    7. '
' → logprob: -11.205021858215332
    8. '[' → logprob: -11.330021858215332
    9. '     ' → logprob: -11.330021858215332
    10. ':' → logprob: -11.330021858215332

Token 442: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7088872790336609
    2. 'if' (adapté à ' if') → logprob: -0.9588872790336609
    3. '       ' → logprob: -2.0838873386383057
    4. '	if' → logprob: -10.958887100219727
    5. '   ' → logprob: -11.083887100219727
    6. '           ' → logprob: -11.833887100219727
    7. '
' → logprob: -14.208887100219727
    8. '```' → logprob: -14.208887100219727
    9. 'If' → logprob: -14.333887100219727
    10. '	   ' → logprob: -14.708887100219727

Token 443: ' ch' (ID: 549)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ch' → logprob: -0.005241583567112684
    2. ' ch' → logprob: -5.255241394042969
    3. '   ' → logprob: -12.005241394042969
    4. ' ' → logprob: -14.630241394042969
    5. '	ch' → logprob: -14.630241394042969
    6. '  ' → logprob: -14.880241394042969
    7. '       ' → logprob: -15.630241394042969
    8. '(ch' → logprob: -16.63024139404297
    9. '    ' → logprob: -16.75524139404297
    10. '           ' → logprob: -17.13024139404297

Token 444: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.10025779157876968
    2. 'not' → logprob: -2.3502578735351562
    3. ')' → logprob: -10.225257873535156
    4. ']' → logprob: -11.975257873535156
    5. 'in' → logprob: -12.725257873535156
    6. ' in' → logprob: -13.350257873535156
    7. '==' → logprob: -14.725257873535156
    8. 's' → logprob: -14.725257873535156
    9. '	not' → logprob: -14.725257873535156
    10. 'is' → logprob: -14.850257873535156

Token 445: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.4050097167491913
    2. 'in' → logprob: -1.1550097465515137
    3. 'first' → logprob: -4.280009746551514
    4. ' first' → logprob: -5.530009746551514
    5. ':first' → logprob: -9.905009269714355
    6. '[first' → logprob: -10.155009269714355
    7. '(first' → logprob: -11.155009269714355
    8. ')' → logprob: -11.280009269714355
    9. '   ' → logprob: -12.155009269714355
    10. 'to' → logprob: -12.280009269714355

Token 446: ' first' (ID: 1577)
  Prédit: 'first'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'first' → logprob: -0.0010330495424568653
    2. ' first' → logprob: -6.876032829284668
    3. '[first' → logprob: -16.876033782958984
    4. ' ' → logprob: -17.126033782958984
    5. '   ' → logprob: -17.126033782958984
    6. '
' → logprob: -17.251033782958984
    7. '	first' → logprob: -18.001033782958984
    8. '(first' → logprob: -18.626033782958984
    9. 's' → logprob: -18.626033782958984
    10. '.first' → logprob: -19.001033782958984

Token 447: '_occ' (ID: 180107)
  Prédit: '_occ'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_occ' → logprob: -1.4498052223643754e-05
    2. 'occ' → logprob: -11.750014305114746
    3. '_oc' → logprob: -12.125014305114746
    4. 'first' → logprob: -14.125014305114746
    5. '```' → logprob: -16.125015258789062
    6. '_first' → logprob: -16.750015258789062
    7. '_OCC' → logprob: -16.750015258789062
    8. '   ' → logprob: -17.375015258789062
    9. 's' → logprob: -17.875015258789062
    10. '-occ' → logprob: -17.875015258789062

Token 448: 'urrence' (ID: 29194)
  Prédit: 'urrence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'urrence' → logprob: -0.0003281944082118571
    2. 'urrences' → logprob: -8.750328063964844
    3. 'ur' → logprob: -10.000328063964844
    4. 'first' → logprob: -10.000328063964844
    5. 'urr' → logprob: -10.375328063964844
    6. 'curr' → logprob: -10.500328063964844
    7. 'urance' → logprob: -12.250328063964844
    8. 'rence' → logprob: -12.375328063964844
    9. 'cur' → logprob: -12.875328063964844
    10. 'urrent' → logprob: -13.000328063964844

Token 449: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5002199411392212
    2. ':' → logprob: -1.0002199411392212
    3. ':first' → logprob: -4.375219821929932
    4. ' first' → logprob: -5.500219821929932
    5. 'first' → logprob: -6.125219821929932
    6. '[first' → logprob: -6.500219821929932
    7. '   ' → logprob: -6.625219821929932
    8. ' and' → logprob: -6.750219821929932
    9. '=' → logprob: -6.875219821929932
    10. 'and' → logprob: -7.500219821929932

Token 450: '           ' (ID: 352)
  Prédit: ' first'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' first' → logprob: -0.13429811596870422
    2. 'first' → logprob: -2.759298086166382
    3. '           ' → logprob: -3.009298086166382
    4. '       ' → logprob: -4.634298324584961
    5. '   ' → logprob: -5.759298324584961
    6. '	first' → logprob: -9.759298324584961
    7. ':first' → logprob: -10.134298324584961
    8. '[first' → logprob: -10.634298324584961
    9. '.first' → logprob: -12.009298324584961
    10. ' ' → logprob: -12.134298324584961

Token 451: ' first' (ID: 1577)
  Prédit: ' first'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' first' → logprob: -0.29471203684806824
    2. 'first' (adapté à ' first') → logprob: -1.5447120666503906
    3. '       ' → logprob: -3.2947120666503906
    4. '   ' → logprob: -5.919712066650391
    5. '           ' → logprob: -6.294712066650391
    6. '               ' → logprob: -8.29471206665039
    7. '	first' → logprob: -11.16971206665039
    8. ' ' → logprob: -13.79471206665039
    9. '[first' → logprob: -14.04471206665039
    10. 'First' → logprob: -14.16971206665039

Token 452: '_occ' (ID: 180107)
  Prédit: '_occ'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_occ' → logprob: -1.1279553291387856e-05
    2. '_oc' → logprob: -11.625011444091797
    3. 'occ' → logprob: -13.125011444091797
    4. '_OCC' → logprob: -15.875011444091797
    5. '```' → logprob: -16.500011444091797
    6. 'Occurrence' → logprob: -17.500011444091797
    7. 'first' → logprob: -18.500011444091797
    8. '_first' → logprob: -18.750011444091797
    9. '[' → logprob: -18.875011444091797
    10. '   ' → logprob: -19.250011444091797

Token 453: 'urrence' (ID: 29194)
  Prédit: 'urrence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'urrence' → logprob: -0.000556012790184468
    2. 'urance' → logprob: -7.750555992126465
    3. 'urrences' → logprob: -9.250555992126465
    4. 'ur' → logprob: -11.625555992126465
    5. 'urr' → logprob: -11.625555992126465
    6. 'rance' → logprob: -13.125555992126465
    7. 'cur' → logprob: -13.375555992126465
    8. '_occ' → logprob: -13.625555992126465
    9. 'occ' → logprob: -13.750555992126465
    10. 'ance' → logprob: -13.875555992126465

Token 454: '[ch' (ID: 140164)
  Prédit: '[ch'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[ch' → logprob: -3.173704271830502e-06
    2. '=' → logprob: -13.00000286102295
    3. '[' → logprob: -14.87500286102295
    4. '[i' → logprob: -15.62500286102295
    5. '
' → logprob: -16.500003814697266
    6. '][' → logprob: -16.625003814697266
    7. '   ' → logprob: -16.875003814697266
    8. ' =' → logprob: -16.875003814697266
    9. ']' → logprob: -17.125003814697266
    10. '```' → logprob: -17.250003814697266

Token 455: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0002651503309607506
    2. ']=' → logprob: -8.250265121459961
    3. ' ]' → logprob: -13.625265121459961
    4. '   ' → logprob: -13.625265121459961
    5. '=' → logprob: -14.375265121459961
    6. '']' → logprob: -15.125265121459961
    7. ')' → logprob: -15.750265121459961
    8. '"]' → logprob: -16.12526512145996
    9. ']
' → logprob: -16.62526512145996
    10. ' =' → logprob: -16.87526512145996

Token 456: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0003364158037584275
    2. ' =' → logprob: -8.000336647033691
    3. '=i' → logprob: -14.750336647033691
    4. ']=' → logprob: -14.875336647033691
    5. '=
' → logprob: -15.750336647033691
    6. ']' → logprob: -15.875336647033691
    7. ')=' → logprob: -19.125335693359375
    8. '}=' → logprob: -20.250335693359375
    9. ')' → logprob: -20.375335693359375
    10. '=}' → logprob: -20.625335693359375

Token 457: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0001584850688232109
    2. ' i' → logprob: -8.750158309936523
    3. '   ' → logprob: -18.875158309936523
    4. '	i' → logprob: -21.750158309936523
    5. ' ' → logprob: -21.875158309936523
    6. '[i' → logprob: -22.625158309936523
    7. '{i' → logprob: -22.875158309936523
    8. '  ' → logprob: -23.375158309936523
    9. ' ' → logprob: -23.875158309936523
    10. '
' → logprob: -24.000158309936523

Token 458: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2540733814239502
    2. '
' → logprob: -1.5040733814239502
    3. '    
' → logprob: -6.504073143005371
    4. 'for' → logprob: -8.004073143005371
    5. ' for' → logprob: -9.254073143005371
    6. '

' → logprob: -9.754073143005371
    7. '<|end|>' → logprob: -10.754073143005371
    8. '```' → logprob: -10.879073143005371
    9. '        
' → logprob: -11.004073143005371
    10. '<|end|>' → logprob: -11.129073143005371

Token 459: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20854496955871582
    2. 'for' → logprob: -2.208544969558716
    3. ' for' → logprob: -3.083544969558716
    4. '
' → logprob: -4.083544731140137
    5. '    
' → logprob: -4.208544731140137
    6. '```' → logprob: -8.083544731140137
    7. '  
' → logprob: -8.833544731140137
    8. '        
' → logprob: -9.083544731140137
    9. ' 
' → logprob: -9.083544731140137
    10. '   
' → logprob: -9.958544731140137

Token 460: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.006922223139554262
    2. ' for' → logprob: -5.006922245025635
    3. '   ' → logprob: -8.506921768188477
    4. '```' → logprob: -13.256921768188477
    5. '
' → logprob: -13.381921768188477
    6. 'import' → logprob: -15.006921768188477
    7. 'def' → logprob: -15.131921768188477
    8. '    
' → logprob: -15.256921768188477
    9. 'from' → logprob: -15.256921768188477
    10. '	for' → logprob: -15.256921768188477

Token 461: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.08755539357662201
    2. ' ch' → logprob: -2.837555408477783
    3. 'c' → logprob: -3.962555408477783
    4. 'ch' → logprob: -5.087555408477783
    5. ' letter' → logprob: -9.962554931640625
    6. ' i' → logprob: -11.962554931640625
    7. 'i' → logprob: -12.712554931640625
    8. '   ' → logprob: -13.212554931640625
    9. ' ord' → logprob: -13.212554931640625
    10. '(ch' → logprob: -13.212554931640625

Token 462: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.11327319592237473
    2. 'in' → logprob: -2.2382731437683105
    3. ' ' → logprob: -7.7382731437683105
    4. '  ' → logprob: -12.738273620605469
    5. 'int' → logprob: -13.363273620605469
    6. '   ' → logprob: -13.363273620605469
    7. 'i' → logprob: -13.488273620605469
    8. ',' → logprob: -13.738273620605469
    9. 'n' → logprob: -13.988273620605469
    10. 'from' → logprob: -14.238273620605469

Token 463: ' map' (ID: 4014)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.9051778316497803
    2. 'chr' → logprob: -1.0301778316497803
    3. 'map' → logprob: -1.9051778316497803
    4. '[' → logprob: -3.7801778316497803
    5. '(chr' → logprob: -4.280178070068359
    6. ' range' → logprob: -4.530178070068359
    7. ' ' → logprob: -4.530178070068359
    8. '"' → logprob: -5.030178070068359
    9. ''' → logprob: -5.155178070068359
    10. ' [' → logprob: -5.530178070068359

Token 464: '(chr' (ID: 185847)
  Prédit: '(chr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(chr' → logprob: -0.0016539981588721275
    2. 'chr' → logprob: -6.501654148101807
    3. '(ord' → logprob: -9.001653671264648
    4. '(lambda' → logprob: -10.751653671264648
    5. '(str' → logprob: -12.376653671264648
    6. '(' → logprob: -13.626653671264648
    7. '_chr' → logprob: -13.876653671264648
    8. ' chr' → logprob: -14.376653671264648
    9. '   ' → logprob: -17.12665367126465
    10. ' ' → logprob: -17.62665367126465

Token 465: ',' (ID: 11)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -1.0360314846038818
    2. ',' → logprob: -1.1610314846038818
    3. '(range' → logprob: -1.2860314846038818
    4. '(ord' → logprob: -2.911031484603882
    5. ' range' → logprob: -7.786031723022461
    6. '(' → logprob: -8.036031723022461
    7. '   ' → logprob: -9.036031723022461
    8. ' (' → logprob: -9.286031723022461
    9. '(i' → logprob: -9.911031723022461
    10. ' ,' → logprob: -10.161031723022461

Token 466: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -2.8206473871250637e-05
    2. ' range' → logprob: -11.125028610229492
    3. '(range' → logprob: -11.250028610229492
    4. '   ' → logprob: -15.750028610229492
    5. '
' → logprob: -16.375028610229492
    6. ')' → logprob: -16.500028610229492
    7. ' ' → logprob: -18.000028610229492
    8. 'filter' → logprob: -18.625028610229492
    9. 'list' → logprob: -18.625028610229492
    10. '	range' → logprob: -18.750028610229492

Token 467: '(ord' (ID: 199585)
  Prédit: '97'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '97' → logprob: -0.33948415517807007
    2. '(ord' → logprob: -1.3394842147827148
    3. '(' → logprob: -3.714484214782715
    4. 'ord' → logprob: -6.589484214782715
    5. '98' → logprob: -9.214484214782715
    6. '(a' → logprob: -11.089484214782715
    7. '
' → logprob: -11.964484214782715
    8. ' ord' → logprob: -12.214484214782715
    9. 'a' → logprob: -12.589484214782715
    10. '(
' → logprob: -12.839484214782715

Token 468: '('' (ID: 706)
  Prédit: '(ord'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ord' → logprob: -0.18979032337665558
    2. '(' → logprob: -2.1897902488708496
    3. '97' → logprob: -3.1897902488708496
    4. '('' → logprob: -4.18979024887085
    5. 'ord' → logprob: -5.81479024887085
    6. '(a' → logprob: -6.68979024887085
    7. 'a' → logprob: -8.439790725708008
    8. 'b' → logprob: -10.314790725708008
    9. '(b' → logprob: -10.814790725708008
    10. ' (' → logprob: -10.939790725708008

Token 469: 'a' (ID: 64)
  Prédit: '97'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '97' → logprob: -0.18930034339427948
    2. ''a' → logprob: -1.939300298690796
    3. 'a' → logprob: -3.564300298690796
    4. 'ord' → logprob: -8.939300537109375
    5. '(a' → logprob: -9.439300537109375
    6. ''' → logprob: -10.189300537109375
    7. '98' → logprob: -10.814300537109375
    8. '(ord' → logprob: -10.939300537109375
    9. 'b' → logprob: -11.314300537109375
    10. '
' → logprob: -11.689300537109375

Token 470: ''),' (ID: 10047)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '('' → logprob: -0.4173797070980072
    2. ',' → logprob: -1.6673797369003296
    3. '(ord' → logprob: -2.41737961769104
    4. '(' → logprob: -3.16737961769104
    5. '97' → logprob: -5.417379856109619
    6. '   ' → logprob: -5.667379856109619
    7. 'a' → logprob: -6.167379856109619
    8. 'ord' → logprob: -6.542379856109619
    9. ''' → logprob: -6.792379856109619
    10. '+' → logprob: -6.917379856109619

Token 471: ' ord' (ID: 6608)
  Prédit: 'ord'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ord' → logprob: -0.00673005310818553
    2. '(ord' → logprob: -5.131730079650879
    3. '   ' → logprob: -7.881730079650879
    4. ' ord' → logprob: -8.881730079650879
    5. '
' → logprob: -9.131730079650879
    6. ' ' → logprob: -9.506730079650879
    7. '121' → logprob: -10.506730079650879
    8. '122' → logprob: -10.506730079650879
    9. '`' → logprob: -11.506730079650879
    10. '    
' → logprob: -12.006730079650879

Token 472: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.1348213106393814
    2. '(' → logprob: -2.7598214149475098
    3. '(ord' → logprob: -3.0098214149475098
    4. ''' → logprob: -4.88482141494751
    5. '122' → logprob: -6.63482141494751
    6. '97' → logprob: -7.00982141494751
    7. ''y' → logprob: -7.63482141494751
    8. '121' → logprob: -7.75982141494751
    9. 'ord' → logprob: -8.009820938110352
    10. '   ' → logprob: -8.384820938110352

Token 473: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.7497125267982483
    2. 'z' → logprob: -0.8747125267982483
    3. ''y' → logprob: -2.4997124671936035
    4. ''z' → logprob: -3.8747124671936035
    5. ''' → logprob: -5.9997124671936035
    6. 'x' → logprob: -6.3747124671936035
    7. 'y's' → logprob: -6.7497124671936035
    8. '`' → logprob: -7.4997124671936035
    9. '{'' → logprob: -8.124712944030762
    10. '122' → logprob: -8.249712944030762

Token 474: '')' (ID: 1542)
  Prédit: ')+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')+' → logprob: -0.6850918531417847
    2. ')' → logprob: -1.0600918531417847
    3. '')' → logprob: -2.810091972351074
    4. '97' → logprob: -3.185091972351074
    5. '+' → logprob: -4.435091972351074
    6. '```' → logprob: -5.310091972351074
    7. 'a' → logprob: -5.435091972351074
    8. '101' → logprob: -5.685091972351074
    9. '105' → logprob: -5.810091972351074
    10. '91' → logprob: -5.935091972351074

Token 475: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.011634567752480507
    2. ' +' → logprob: -4.511634349822998
    3. ')):
' → logprob: -8.386634826660156
    4. '))' → logprob: -9.386634826660156
    5. '1' → logprob: -9.511634826660156
    6. ')+' → logprob: -9.636634826660156
    7. '   ' → logprob: -9.761634826660156
    8. ' ' → logprob: -11.261634826660156
    9. ')))' → logprob: -11.511634826660156
    10. ')):' → logprob: -11.636634826660156

Token 476: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.45848218582978e-06
    2. ' ' → logprob: -13.50000286102295
    3. '2' → logprob: -15.25000286102295
    4. '
' → logprob: -15.62500286102295
    5. '97' → logprob: -16.000001907348633
    6. '   ' → logprob: -16.625001907348633
    7. '```' → logprob: -16.750001907348633
    8. 'ord' → logprob: -17.500001907348633
    9. '26' → logprob: -18.000001907348633
    10. '(' → logprob: -18.250001907348633

Token 477: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.06788848340511322
    2. '97' → logprob: -3.1928884983062744
    3. '98' → logprob: -3.8178884983062744
    4. '(ord' → logprob: -7.692888259887695
    5. ' ' → logprob: -7.817888259887695
    6. 'ord' → logprob: -8.192888259887695
    7. '2' → logprob: -8.567888259887695
    8. '99' → logprob: -8.692888259887695
    9. '110' → logprob: -8.692888259887695
    10. '
' → logprob: -8.692888259887695

Token 478: ')):
' (ID: 22530)
  Prédit: ')):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')):
' → logprob: -0.1714227795600891
    2. ')):' → logprob: -1.9214227199554443
    3. '):
' → logprob: -4.796422958374023
    4. '):' → logprob: -6.421422958374023
    5. '))' → logprob: -7.171422958374023
    6. ')):
' → logprob: -8.296422958374023
    7. ':' → logprob: -9.421422958374023
    8. ':
' → logprob: -10.046422958374023
    9. '   ' → logprob: -10.171422958374023
    10. ')' → logprob: -10.546422958374023

Token 479: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02202981896698475
    2. '   ' → logprob: -4.647029876708984
    3. ':' → logprob: -4.772029876708984
    4. ' if' → logprob: -6.272029876708984
    5. ':
' → logprob: -7.272029876708984
    6. '):
' → logprob: -8.647029876708984
    7. '<|end|>' → logprob: -8.647029876708984
    8. ',' → logprob: -8.897029876708984
    9. '    
' → logprob: -9.522029876708984
    10. '        
' → logprob: -9.772029876708984

Token 480: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.023607762530446053
    2. '   ' → logprob: -4.2736077308654785
    3. ' if' → logprob: -5.0236077308654785
    4. '       ' → logprob: -6.5236077308654785
    5. 'i' → logprob: -6.7736077308654785
    6. 'idx' → logprob: -8.648608207702637
    7. ' i' → logprob: -11.648608207702637
    8. 'index' → logprob: -11.648608207702637
    9. ' ' → logprob: -12.398608207702637
    10. '	if' → logprob: -12.523608207702637

Token 481: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.12693072855472565
    2. ' c' → logprob: -2.1269307136535645
    3. '   ' → logprob: -14.001931190490723
    4. '       ' → logprob: -14.501931190490723
    5. '	c' → logprob: -14.751931190490723
    6. ' ' → logprob: -15.001931190490723
    7. '(c' → logprob: -15.751931190490723
    8. '    ' → logprob: -16.251930236816406
    9. ')c' → logprob: -16.376930236816406
    10. '           ' → logprob: -16.626930236816406

Token 482: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07894960790872574
    2. 'in' → logprob: -2.5789496898651123
    3. ' not' → logprob: -10.203949928283691
    4. 'not' → logprob: -11.578949928283691
    5. ' ' → logprob: -11.953949928283691
    6. ')' → logprob: -13.453949928283691
    7. 'c' → logprob: -13.578949928283691
    8. '<|end|>' → logprob: -14.203949928283691
    9. '
' → logprob: -14.328949928283691
    10. 'first' → logprob: -14.828949928283691

Token 483: ' first' (ID: 1577)
  Prédit: 'first'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'first' → logprob: -0.023583894595503807
    2. ' first' → logprob: -3.7735838890075684
    3. 's' → logprob: -8.023584365844727
    4. ' s' → logprob: -11.523584365844727
    5. 'c' → logprob: -15.398584365844727
    6. ' ' → logprob: -15.773584365844727
    7. '	first' → logprob: -16.023584365844727
    8. '   ' → logprob: -16.273584365844727
    9. '
' → logprob: -16.898584365844727
    10. 'First' → logprob: -17.148584365844727

Token 484: '_occ' (ID: 180107)
  Prédit: '_occ'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_occ' → logprob: -0.0005595852271653712
    2. 'occ' → logprob: -7.5005598068237305
    3. '_oc' → logprob: -12.00055980682373
    4. 'occur' → logprob: -15.62555980682373
    5. 'first' → logprob: -16.000558853149414
    6. 'Occurrence' → logprob: -16.250558853149414
    7. '-occ' → logprob: -17.000558853149414
    8. '_OCC' → logprob: -17.750558853149414
    9. 's' → logprob: -18.125558853149414
    10. '_candidates' → logprob: -18.500558853149414

Token 485: 'urrence' (ID: 29194)
  Prédit: 'urrence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'urrence' → logprob: -3.3213025744771585e-05
    2. 'ur' → logprob: -11.375033378601074
    3. 'urrences' → logprob: -11.500033378601074
    4. 'rence' → logprob: -12.500033378601074
    5. 'urr' → logprob: -13.000033378601074
    6. 'urrency' → logprob: -13.125033378601074
    7. 'urance' → logprob: -13.375033378601074
    8. 'urrent' → logprob: -13.625033378601074
    9. 'r' → logprob: -16.125032424926758
    10. 'ence' → logprob: -16.500032424926758

Token 486: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6624186038970947
    2. ':
' → logprob: -0.7874186038970947
    3. '):
' → logprob: -3.6624186038970947
    4. '):' → logprob: -5.787418365478516
    5. ' and' → logprob: -8.412418365478516
    6. '():
' → logprob: -9.412418365478516
    7. '           ' → logprob: -9.537418365478516
    8. '       ' → logprob: -9.662418365478516
    9. ')' → logprob: -10.037418365478516
    10. '=' → logprob: -10.162418365478516

Token 487: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0036025596782565117
    2. ':' → logprob: -7.003602504730225
    3. '       ' → logprob: -7.503602504730225
    4. 'i' → logprob: -7.628602504730225
    5. ' i' → logprob: -7.878602504730225
    6. ',' → logprob: -8.628602981567383
    7. '```' → logprob: -8.753602981567383
    8. ':
' → logprob: -8.878602981567383
    9. '            
' → logprob: -9.003602981567383
    10. '#' → logprob: -9.378602981567383

Token 488: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.22918416559696198
    2. ' i' → logprob: -1.6041841506958008
    3. 'idx' → logprob: -6.354184150695801
    4. '   ' → logprob: -6.979184150695801
    5. ' idx' → logprob: -7.479184150695801
    6. '           ' → logprob: -8.1041841506958
    7. 'index' → logprob: -8.9791841506958
    8. '               ' → logprob: -10.3541841506958
    9. ' index' → logprob: -10.3541841506958
    10. '       ' → logprob: -11.3541841506958

Token 489: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10020937025547028
    2. '=' → logprob: -2.3502094745635986
    3. ')' → logprob: -13.97520923614502
    4. 'x' → logprob: -14.72520923614502
    5. ' ' → logprob: -14.72520923614502
    6. ',' → logprob: -15.60020923614502
    7. 's' → logprob: -16.350210189819336
    8. '=int' → logprob: -16.350210189819336
    9. '=i' → logprob: -16.350210189819336
    10. '=index' → logprob: -16.350210189819336

Token 490: ' first' (ID: 1577)
  Prédit: 'first'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'first' → logprob: -0.47407740354537964
    2. ' first' → logprob: -0.9740774035453796
    3. '	first' → logprob: -15.974077224731445
    4. '[first' → logprob: -16.724077224731445
    5. '(first' → logprob: -17.349077224731445
    6. '           ' → logprob: -17.349077224731445
    7. 'First' → logprob: -18.224077224731445
    8. 'c' → logprob: -18.224077224731445
    9. '   ' → logprob: -18.349077224731445
    10. ' ' → logprob: -18.599077224731445

Token 491: '_occ' (ID: 180107)
  Prédit: '_occ'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_occ' → logprob: -0.0620281845331192
    2. 'occ' → logprob: -2.812028169631958
    3. 'occur' → logprob: -10.812027931213379
    4. 'first' → logprob: -11.312027931213379
    5. '-occ' → logprob: -11.562027931213379
    6. 'Occurrence' → logprob: -11.687027931213379
    7. '_oc' → logprob: -12.062027931213379
    8. ' occurrence' → logprob: -13.437027931213379
    9. '   ' → logprob: -14.562027931213379
    10. 'set' → logprob: -14.937027931213379

Token 492: 'urrence' (ID: 29194)
  Prédit: 'urrence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'urrence' → logprob: -3.6550729419104755e-05
    2. 'ur' → logprob: -11.125036239624023
    3. 'rence' → logprob: -11.500036239624023
    4. 'urance' → logprob: -11.750036239624023
    5. 'urrences' → logprob: -13.625036239624023
    6. 'urr' → logprob: -14.375036239624023
    7. 'urrency' → logprob: -14.375036239624023
    8. 'rance' → logprob: -14.875036239624023
    9. 'r' → logprob: -15.625036239624023
    10. 'er' → logprob: -16.125036239624023

Token 493: '[c' (ID: 22840)
  Prédit: '[c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -0.00019257364328950644
    2. 's' → logprob: -9.125192642211914
    3. '[s' → logprob: -10.375192642211914
    4. 'c' → logprob: -10.750192642211914
    5. '(c' → logprob: -10.750192642211914
    6. '[ch' → logprob: -12.375192642211914
    7. '[i' → logprob: -13.125192642211914
    8. '```' → logprob: -14.125192642211914
    9. '
' → logprob: -14.875192642211914
    10. '[' → logprob: -15.000192642211914

Token 494: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.14218655228614807
    2. ']
' → logprob: -2.3921866416931152
    3. ']+' → logprob: -3.2671866416931152
    4. ')' → logprob: -6.142186641693115
    5. ')]' → logprob: -8.392186164855957
    6. '+' → logprob: -8.767186164855957
    7. ')+' → logprob: -8.767186164855957
    8. ')
' → logprob: -8.892186164855957
    9. ']

' → logprob: -10.017186164855957
    10. ']
' → logprob: -10.392186164855957

Token 495: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02117210626602173
    2. ' original' → logprob: -4.146172046661377
    3. '            
' → logprob: -6.396172046661377
    4. '
' → logprob: -7.271172046661377
    5. '       ' → logprob: -7.396172046661377
    6. 'original' → logprob: -7.396172046661377
    7. '               ' → logprob: -7.896172046661377
    8. ' candidates' → logprob: -8.146172523498535
    9. ' candidate' → logprob: -8.396172523498535
    10. 'candidate' → logprob: -9.271172523498535

Token 496: ' orig' (ID: 17481)
  Prédit: 'original'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'original' → logprob: -0.6636630892753601
    2. 'orig' (adapté à ' orig') → logprob: -1.0386631488800049
    3. ' original' → logprob: -2.913663148880005
    4. 'candidate' → logprob: -3.538663148880005
    5. '           ' → logprob: -4.163662910461426
    6. 'if' → logprob: -4.288662910461426
    7. ' orig' → logprob: -5.038662910461426
    8. ' candidate' → logprob: -5.663662910461426
    9. ' if' → logprob: -5.663662910461426
    10. 'new' → logprob: -7.163662910461426

Token 497: '_char' (ID: 23398)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10985347628593445
    2. '=' → logprob: -2.359853506088257
    3. 'al' → logprob: -5.484853267669678
    4. 'inal' → logprob: -5.984853267669678
    5. '_chars' → logprob: -6.734853267669678
    6. '_char' → logprob: -6.859853267669678
    7. '_candidate' → logprob: -8.484853744506836
    8. '```' → logprob: -9.484853744506836
    9. '_str' → logprob: -9.609853744506836
    10. '_candidates' → logprob: -10.234853744506836

Token 498: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759671330451965
    2. ' =' → logprob: -0.8259671330451965
    3. 's' → logprob: -10.575966835021973
    4. ' ' → logprob: -14.575966835021973
    5. ')' → logprob: -15.450966835021973
    6. '=
' → logprob: -15.575966835021973
    7. '   ' → logprob: -15.825966835021973
    8. '```' → logprob: -15.825966835021973
    9. '=s' → logprob: -16.20096778869629
    10. 'code' → logprob: -16.32596778869629

Token 499: ' chr' (ID: 42767)
  Prédit: 'chr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chr' → logprob: -0.014172682538628578
    2. ' chr' → logprob: -4.264172554016113
    3. '(chr' → logprob: -12.139172554016113
    4. '   ' → logprob: -12.639172554016113
    5. ' ' → logprob: -15.389172554016113
    6. 'Chr' → logprob: -16.38917350769043
    7. '_chr' → logprob: -16.51417350769043
    8. '  ' → logprob: -16.76417350769043
    9. 'ch' → logprob: -17.38917350769043
    10. 'ord' → logprob: -17.76417350769043

Token 500: '(ord' (ID: 199585)
  Prédit: '(ord'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ord' → logprob: -3.292907877039397e-06
    2. 'ord' → logprob: -12.87500286102295
    3. '(' → logprob: -14.75000286102295
    4. ' (' → logprob: -16.375003814697266
    5. '(order' → logprob: -16.500003814697266
    6. '   ' → logprob: -16.500003814697266
    7. '(
' → logprob: -17.750003814697266
    8. '((' → logprob: -19.625003814697266
    9. ' ord' → logprob: -20.250003814697266
    10. '```' → logprob: -20.750003814697266

Token 501: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -2.7252845029579476e-05
    2. 'c' → logprob: -11.125027656555176
    3. '(' → logprob: -11.375027656555176
    4. '(i' → logprob: -14.875027656555176
    5. '(s' → logprob: -15.250027656555176
    6. ' (' → logprob: -15.375027656555176
    7. '(
' → logprob: -17.25002670288086
    8. '('' → logprob: -17.37502670288086
    9. ' c' → logprob: -17.50002670288086
    10. 's' → logprob: -17.87502670288086

Token 502: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3897370994091034
    2. ')+' → logprob: -1.1397371292114258
    3. '+' → logprob: -5.889737129211426
    4. ' +' → logprob: -9.889737129211426
    5. ' )' → logprob: -10.764737129211426
    6. '[' → logprob: -11.264737129211426
    7. ']+' → logprob: -12.889737129211426
    8. '   ' → logprob: -13.389737129211426
    9. '[i' → logprob: -14.139737129211426
    10. ')+(' → logprob: -14.139737129211426

Token 503: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0784190446138382
    2. ')+' → logprob: -2.9534189701080322
    3. ')' → logprob: -4.078419208526611
    4. ' +' → logprob: -5.078419208526611
    5. '[' → logprob: -9.703418731689453
    6. ']+' → logprob: -11.828418731689453
    7. '()+' → logprob: -11.953418731689453
    8. '   ' → logprob: -12.453418731689453
    9. '+[' → logprob: -12.828418731689453
    10. '+)' → logprob: -13.328418731689453

Token 504: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.107425062713446e-06
    2. ' ' → logprob: -11.875006675720215
    3. '```' → logprob: -16.12500762939453
    4. '
' → logprob: -17.00000762939453
    5. '   ' → logprob: -17.50000762939453
    6. '  ' → logprob: -19.25000762939453
    7. ')' → logprob: -19.25000762939453
    8. '`' → logprob: -19.37500762939453
    9. '' → logprob: -19.37500762939453
    10. '``' → logprob: -20.50000762939453

Token 505: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.36574100604048e-06
    2. ' ' → logprob: -12.375004768371582
    3. '```' → logprob: -16.250003814697266
    4. '   ' → logprob: -17.375003814697266
    5. '
' → logprob: -17.750003814697266
    6. ')' → logprob: -18.625003814697266
    7. '  ' → logprob: -19.250003814697266
    8. '[' → logprob: -19.750003814697266
    9. '' → logprob: -19.812503814697266
    10. '`' → logprob: -20.000003814697266

Token 506: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16024179756641388
    2. ')
' → logprob: -1.9102418422698975
    3. '           ' → logprob: -11.660242080688477
    4. ')
' → logprob: -12.160242080688477
    5. ')

' → logprob: -13.410242080688477
    6. '')' → logprob: -14.035242080688477
    7. ' )' → logprob: -14.785242080688477
    8. ')`
' → logprob: -15.410242080688477
    9. '")' → logprob: -15.785242080688477
    10. ' )
' → logprob: -15.910242080688477

Token 507: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.012214940041303635
    2. '
' → logprob: -4.8872151374816895
    3. ')' → logprob: -6.5122151374816895
    4. ' if' → logprob: -6.6372151374816895
    5. '            
' → logprob: -6.7622151374816895
    6. ')
' → logprob: -8.887214660644531
    7. '<|end|>' → logprob: -9.137214660644531
    8. 'if' → logprob: -9.637214660644531
    9. '       ' → logprob: -10.137214660644531
    10. '):
' → logprob: -10.387214660644531

Token 508: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.31765928864479065
    2. ' if' → logprob: -1.5676592588424683
    3. 'if' → logprob: -2.817659378051758
    4. 'candidate' → logprob: -6.692659378051758
    5. '
' → logprob: -6.942659378051758
    6. ' candidate' → logprob: -7.692659378051758
    7. ' original' → logprob: -8.067659378051758
    8. '            
' → logprob: -8.067659378051758
    9. 'original' → logprob: -8.192659378051758
    10. ' new' → logprob: -9.442659378051758

Token 509: ' Replace' (ID: 54839)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3648088574409485
    2. 'candidate' → logprob: -1.7398087978363037
    3. '           ' → logprob: -2.6148087978363037
    4. 'orig' → logprob: -4.114809036254883
    5. 'new' → logprob: -4.239809036254883
    6. 'original' → logprob: -4.364809036254883
    7. ' if' → logprob: -5.114809036254883
    8. 'possible' → logprob: -6.239809036254883
    9. '   ' → logprob: -6.489809036254883
    10. '#' → logprob: -6.739809036254883

Token 510: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.7244476675987244
    2. ' s' → logprob: -1.2244477272033691
    3. ' original' → logprob: -2.099447727203369
    4. 'original' → logprob: -3.724447727203369
    5. ' candidates' → logprob: -3.849447727203369
    6. 'candidate' → logprob: -4.724447727203369
    7. ' candidate' → logprob: -4.849447727203369
    8. ' the' → logprob: -5.099447727203369
    9. '           ' → logprob: -5.224447727203369
    10. ' =' → logprob: -5.724447727203369

Token 511: '[i' (ID: 1768)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.0896247625350952
    2. '_list' → logprob: -1.0896247625350952
    3. '_candidate' → logprob: -1.7146247625350952
    4. '_new' → logprob: -2.3396248817443848
    5. '_' → logprob: -3.5896248817443848
    6. '_orig' → logprob: -5.089624881744385
    7. '=' → logprob: -5.589624881744385
    8. '_original' → logprob: -6.214624881744385
    9. '_i' → logprob: -6.339624881744385
    10. 'new' → logprob: -6.339624881744385

Token 512: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.32007789611816406
    2. 's' → logprob: -1.820077896118164
    3. ']=' → logprob: -3.320077896118164
    4. ')' → logprob: -3.570077896118164
    5. ' =' → logprob: -5.070077896118164
    6. '=' → logprob: -5.320077896118164
    7. ' with' → logprob: -5.320077896118164
    8. 'with' → logprob: -5.445077896118164
    9. '],' → logprob: -5.445077896118164
    10. '[i' → logprob: -6.070077896118164

Token 513: ' by' (ID: 656)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.29947665333747864
    2. '=' → logprob: -2.1744766235351562
    3. ' with' → logprob: -2.4244766235351562
    4. 'with' → logprob: -3.4244766235351562
    5. 's' → logprob: -4.924476623535156
    6. '=c' → logprob: -5.049476623535156
    7. '_candidates' → logprob: -6.299476623535156
    8. '=s' → logprob: -6.674476623535156
    9. 'c' → logprob: -6.799476623535156
    10. ')' → logprob: -7.049476623535156

Token 514: ' orig' (ID: 17481)
  Prédit: 'orig'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'orig' → logprob: -0.0025068165268749
    2. ' orig' → logprob: -6.002506732940674
    3. '(orig' → logprob: -11.002507209777832
    4. 'original' → logprob: -11.377507209777832
    5. 'origin' → logprob: -13.002507209777832
    6. '           ' → logprob: -14.877507209777832
    7. '_orig' → logprob: -15.377507209777832
    8. '.orig' → logprob: -15.502507209777832
    9. '```' → logprob: -18.127506256103516
    10. 'Orig' → logprob: -18.377506256103516

Token 515: '_char' (ID: 23398)
  Prédit: '_char'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_char' → logprob: -0.0008460793760605156
    2. 'inal' → logprob: -7.625845909118652
    3. '_chars' → logprob: -8.875845909118652
    4. 'Char' → logprob: -9.625845909118652
    5. 'char' → logprob: -9.875845909118652
    6. '_string' → logprob: -10.375845909118652
    7. 'in' → logprob: -10.875845909118652
    8. '_str' → logprob: -11.500845909118652
    9. '```' → logprob: -11.500845909118652
    10. '_CHAR' → logprob: -12.625845909118652

Token 516: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0029573773499578238
    2. ' =' → logprob: -7.252957344055176
    3. 'candidate' → logprob: -7.377957344055176
    4. '
' → logprob: -7.877957344055176
    5. 's' → logprob: -8.127957344055176
    6. '            
' → logprob: -8.252957344055176
    7. ',' → logprob: -8.502957344055176
    8. ' candidate' → logprob: -9.752957344055176
    9. ' candidates' → logprob: -9.752957344055176
    10. '   ' → logprob: -9.752957344055176

Token 517: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0015384310390800238
    2. 'candidate' → logprob: -7.751538276672363
    3. ' =' → logprob: -8.376538276672363
    4. 's' → logprob: -8.376538276672363
    5. ',' → logprob: -9.251538276672363
    6. '            
' → logprob: -9.501538276672363
    7. ' candidate' → logprob: -9.751538276672363
    8. '
' → logprob: -9.876538276672363
    9. 'new' → logprob: -9.876538276672363
    10. ' new' → logprob: -10.126538276672363

Token 518: ' candidate' (ID: 17098)
  Prédit: 'candidate'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'candidate' (adapté à ' candidate') → logprob: -0.8412843346595764
    2. 'orig' → logprob: -0.9662843346595764
    3. ' candidate' → logprob: -2.5912842750549316
    4. 'original' → logprob: -3.2162842750549316
    5. '           ' → logprob: -3.5912842750549316
    6. ' orig' → logprob: -4.341284275054932
    7. 'new' → logprob: -4.341284275054932
    8. '   ' → logprob: -5.216284275054932
    9. 'cand' → logprob: -5.341284275054932
    10. ' original' → logprob: -5.466284275054932

Token 519: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.007381339557468891
    2. '=' → logprob: -5.007381439208984
    3. 's' → logprob: -7.382381439208984
    4. '_s' → logprob: -10.882381439208984
    5. '_str' → logprob: -11.382381439208984
    6. '_list' → logprob: -12.132381439208984
    7. '_chars' → logprob: -12.632381439208984
    8. '```' → logprob: -13.382381439208984
    9. '_' → logprob: -13.757381439208984
    10. '   ' → logprob: -14.132381439208984

Token 520: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.03804505243897438
    2. ' s' → logprob: -3.2880451679229736
    3. '   ' → logprob: -12.663044929504395
    4. 'list' → logprob: -15.913044929504395
    5. ' list' → logprob: -16.28804588317871
    6. ' ' → logprob: -16.28804588317871
    7. '	s' → logprob: -17.16304588317871
    8. '(s' → logprob: -17.66304588317871
    9. '    ' → logprob: -19.16304588317871
    10. '  ' → logprob: -19.28804588317871

Token 521: '[:' (ID: 7808)
  Prédit: '[:'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:' → logprob: -5.512236498361744e-07
    2. '[' → logprob: -15.000000953674316
    3. '[:]' → logprob: -16.375
    4. '[:-' → logprob: -19.5
    5. '[
' → logprob: -19.875
    6. ' [:' → logprob: -20.375
    7. ':' → logprob: -20.875
    8. '][:' → logprob: -21.375
    9. '
' → logprob: -21.625
    10. 'def' → logprob: -21.75

Token 522: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.6286106983898208e-05
    2. 'first' → logprob: -11.500016212463379
    3. ' i' → logprob: -12.125016212463379
    4. '   ' → logprob: -15.000016212463379
    5. ' first' → logprob: -15.375016212463379
    6. ' ' → logprob: -16.125017166137695
    7. '0' → logprob: -17.000017166137695
    8. '  ' → logprob: -18.000017166137695
    9. '```' → logprob: -18.000017166137695
    10. '           ' → logprob: -18.375017166137695

Token 523: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.011262030340731144
    2. '+' → logprob: -4.636261940002441
    3. ']+' → logprob: -6.511261940002441
    4. ' +' → logprob: -11.636261940002441
    5. ' ]' → logprob: -12.011261940002441
    6. '>' → logprob: -14.386261940002441
    7. ')' → logprob: -14.386261940002441
    8. 's' → logprob: -14.636261940002441
    9. '+]' → logprob: -14.761261940002441
    10. 'c' → logprob: -15.136261940002441

Token 524: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.01416750717908144
    2. ' +' → logprob: -4.264167308807373
    3. '+c' → logprob: -13.764167785644531
    4. '   ' → logprob: -14.139167785644531
    5. '+
' → logprob: -14.139167785644531
    6. '       ' → logprob: -14.389167785644531
    7. '           ' → logprob: -14.764167785644531
    8. 'orig' → logprob: -15.764167785644531
    9. '```' → logprob: -16.01416778564453
    10. ' +
' → logprob: -16.76416778564453

Token 525: ' orig' (ID: 17481)
  Prédit: 'orig'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'orig' → logprob: -1.0445127372804563e-05
    2. ' orig' → logprob: -11.50001049041748
    3. '(orig' → logprob: -15.87501049041748
    4. 'original' → logprob: -16.750009536743164
    5. 'origin' → logprob: -17.000009536743164
    6. '_orig' → logprob: -18.625009536743164
    7. '.orig' → logprob: -18.625009536743164
    8. 'ord' → logprob: -20.000009536743164
    9. 'chr' → logprob: -20.125009536743164
    10. '   ' → logprob: -21.000009536743164

Token 526: '_char' (ID: 23398)
  Prédit: '_char'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_char' → logprob: -9.491498531133402e-06
    2. 'char' → logprob: -11.875009536743164
    3. 'Char' → logprob: -13.000009536743164
    4. '_CHAR' → logprob: -16.500009536743164
    5. '[' → logprob: -16.750009536743164
    6. 'c' → logprob: -17.500009536743164
    7. '_chars' → logprob: -17.625009536743164
    8. '_c' → logprob: -18.000009536743164
    9. 'u' → logprob: -18.125009536743164
    10. '_' → logprob: -18.875009536743164

Token 527: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.011078709736466408
    2. ' +' → logprob: -4.511078834533691
    3. '+s' → logprob: -10.636078834533691
    4. 's' → logprob: -11.886078834533691
    5. '```' → logprob: -17.761077880859375
    6. '+
' → logprob: -17.761077880859375
    7. '   ' → logprob: -18.011077880859375
    8. ' ' → logprob: -19.386077880859375
    9. '＋' → logprob: -19.636077880859375
    10. '+c' → logprob: -20.136077880859375

Token 528: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.00033546582562848926
    2. ' s' → logprob: -8.000335693359375
    3. '   ' → logprob: -17.875335693359375
    4. '(s' → logprob: -19.250335693359375
    5. '`s' → logprob: -19.250335693359375
    6. '	s' → logprob: -19.750335693359375
    7. '```' → logprob: -20.500335693359375
    8. '       ' → logprob: -20.625335693359375
    9. '
' → logprob: -20.750335693359375
    10. ''s' → logprob: -21.000335693359375

Token 529: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -7.465036105713807e-06
    2. 'i' → logprob: -12.000007629394531
    3. '[' → logprob: -14.000007629394531
    4. '(i' → logprob: -15.250007629394531
    5. '[(' → logprob: -15.875007629394531
    6. '{i' → logprob: -16.50000762939453
    7. '[:' → logprob: -17.50000762939453
    8. '```' → logprob: -18.37500762939453
    9. '[
' → logprob: -18.75000762939453
    10. '
' → logprob: -19.37500762939453

Token 530: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -9.014684110297821e-06
    2. ' +' → logprob: -11.625008583068848
    3. '1' → logprob: -17.750009536743164
    4. '[' → logprob: -18.750009536743164
    5. '+i' → logprob: -21.125009536743164
    6. '```' → logprob: -21.375009536743164
    7. '＋' → logprob: -21.750009536743164
    8. ' ' → logprob: -22.875009536743164
    9. '+
' → logprob: -23.000009536743164
    10. '2' → logprob: -23.750009536743164

Token 531: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.75
    3. '```' → logprob: -17.25
    4. '   ' → logprob: -19.125
    5. '+' → logprob: -19.25
    6. '...' → logprob: -19.625
    7. '
' → logprob: -20.375
    8. '``' → logprob: -21.6875
    9. '`' → logprob: -22.125
    10. '[' → logprob: -22.25

Token 532: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.5
    3. '```' → logprob: -18.0
    4. '
' → logprob: -19.875
    5. '   ' → logprob: -20.625
    6. '2' → logprob: -21.0
    7. '``' → logprob: -21.25
    8. '...' → logprob: -21.75
    9. 'len' → logprob: -22.0
    10. '１' → logprob: -22.125

Token 533: ':]
' (ID: 61598)
  Prédit: ':]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':]' → logprob: -0.4743424654006958
    2. ']' → logprob: -0.9743424654006958
    3. ' :]' → logprob: -8.974342346191406
    4. '()]' → logprob: -10.224342346191406
    5. '']' → logprob: -10.974342346191406
    6. '...]' → logprob: -11.099342346191406
    7. ' ]' → logprob: -11.224342346191406
    8. ':]
' → logprob: -11.224342346191406
    9. ':' → logprob: -11.474342346191406
    10. ')]' → logprob: -11.724342346191406

Token 534: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00012368128227535635
    2. '
' → logprob: -9.875123977661133
    3. ' candidates' → logprob: -10.125123977661133
    4. '       ' → logprob: -11.375123977661133
    5. '   ' → logprob: -11.625123977661133
    6. 'c' → logprob: -12.250123977661133
    7. '               ' → logprob: -13.500123977661133
    8. '            
' → logprob: -13.625123977661133
    9. '_candidates' → logprob: -13.625123977661133
    10. '<|end|>' → logprob: -14.375123977661133

Token 535: ' candidates' (ID: 18116)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.298294335603714
    2. ' candidates' → logprob: -1.4232943058013916
    3. '   ' → logprob: -4.548294544219971
    4. ' if' → logprob: -5.548294544219971
    5. '           ' → logprob: -6.548294544219971
    6. 'if' → logprob: -7.423294544219971
    7. ' c' → logprob: -8.048294067382812
    8. '
' → logprob: -9.423294067382812
    9. '       ' → logprob: -10.173294067382812
    10. '	c' → logprob: -11.298294067382812

Token 536: '_set' (ID: 5451)
  Prédit: '.add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.5836923718452454
    2. '_set' → logprob: -0.8336923718452454
    3. '.' → logprob: -5.83369255065918
    4. '.append' → logprob: -6.20869255065918
    5. '._' → logprob: -6.70869255065918
    6. '_add' → logprob: -6.83369255065918
    7. '.setdefault' → logprob: -7.95869255065918
    8. '_.' → logprob: -10.08369255065918
    9. ' .' → logprob: -10.33369255065918
    10. '.set' → logprob: -10.70869255065918

Token 537: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -7.672236824873835e-05
    2. '.' → logprob: -9.500076293945312
    3. '.update' → logprob: -14.250076293945312
    4. '.append' → logprob: -14.625076293945312
    5. ' .' → logprob: -15.000076293945312
    6. '.setdefault' → logprob: -15.750076293945312
    7. '.Add' → logprob: -16.375076293945312
    8. '.dis' → logprob: -17.125076293945312
    9. '.remove' → logprob: -17.500076293945312
    10. 'add' → logprob: -19.250076293945312

Token 538: '(candidate' (ID: 145201)
  Prédit: '(candidate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(candidate' → logprob: -7.896309739408025e-07
    2. 'candidate' → logprob: -14.500000953674316
    3. '(' → logprob: -15.625000953674316
    4. '(c' → logprob: -19.125
    5. '(
' → logprob: -20.25
    6. ' (' → logprob: -21.0
    7. ' candidate' → logprob: -21.375
    8. '(character' → logprob: -22.0
    9. '((' → logprob: -23.125
    10. '(cipher' → logprob: -23.75

Token 539: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003066222125198692
    2. '   ' → logprob: -8.625307083129883
    3. '<|end|>' → logprob: -9.875307083129883
    4. ')
' → logprob: -10.000307083129883
    5. ')return' → logprob: -10.875307083129883
    6. '}' → logprob: -12.500307083129883
    7. ' )' → logprob: -13.625307083129883
    8. '
' → logprob: -13.625307083129883
    9. '<|end|>' → logprob: -13.625307083129883
    10. 'return' → logprob: -14.000307083129883

Token 540: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.020102206617593765
    2. 'return' → logprob: -4.020102024078369
    3. '```' → logprob: -6.395102024078369
    4. '
' → logprob: -8.895102500915527
    5. '    
' → logprob: -9.520102500915527
    6. ' return' → logprob: -9.770102500915527
    7. '<|end|>' → logprob: -12.145102500915527
    8. '``' → logprob: -13.145102500915527
    9. '	return' → logprob: -14.145102500915527
    10. ':return' → logprob: -14.145102500915527

Token 541: ' candidates' (ID: 18116)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.12773574888706207
    2. '   ' → logprob: -2.1277358531951904
    3. ' return' → logprob: -7.127735614776611
    4. '
' → logprob: -13.00273609161377
    5. '    
' → logprob: -13.75273609161377
    6. '```' → logprob: -14.00273609161377
    7. ' ' → logprob: -15.25273609161377
    8. '  ' → logprob: -16.002735137939453
    9. '	return' → logprob: -16.127735137939453
    10. 'c' → logprob: -16.877735137939453

Token 542: ' =' (ID: 314)
  Prédit: '_set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_set' → logprob: -0.000918008794542402
    2. '<|end|>' → logprob: -7.625917911529541
    3. '_list' → logprob: -8.1259183883667
    4. 'set' → logprob: -10.3759183883667
    5. '_' → logprob: -10.8759183883667
    6. ')' → logprob: -10.8759183883667
    7. '
' → logprob: -11.0009183883667
    8. 'Set' → logprob: -12.0009183883667
    9. '_sets' → logprob: -12.0009183883667
    10. 'return' → logprob: -12.1259183883667

Token 543: ' sorted' (ID: 20099)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -8.41866585687967e-06
    2. 'sorted' → logprob: -11.750008583068848
    3. ' list' → logprob: -14.500008583068848
    4. '   ' → logprob: -19.50000762939453
    5. '[list' → logprob: -20.00000762939453
    6. '(list' → logprob: -23.25000762939453
    7. 'List' → logprob: -23.62500762939453
    8. ' sorted' → logprob: -23.62500762939453
    9. '[' → logprob: -24.62500762939453
    10. '```' → logprob: -24.87500762939453

Token 544: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.004091816488653421
    2. '(list' → logprob: -5.504091739654541
    3. 'c' → logprob: -11.7540922164917
    4. 'list' → logprob: -12.2540922164917
    5. '(' → logprob: -15.0040922164917
    6. '(candidate' → logprob: -15.0040922164917
    7. '```' → logprob: -16.004091262817383
    8. ')c' → logprob: -17.629091262817383
    9. '[c' → logprob: -18.254091262817383
    10. '`' → logprob: -18.629091262817383

Token 545: 'andidates' (ID: 38168)
  Prédit: 'andidates'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'andidates' → logprob: -0.03596721589565277
    2. '(c' → logprob: -3.7859671115875244
    3. 'and' → logprob: -4.4109673500061035
    4. 'c' → logprob: -8.785966873168945
    5. '[c' → logprob: -9.035966873168945
    6. 'andidate' → logprob: -9.660966873168945
    7. '(list' → logprob: -10.535966873168945
    8. 'list' → logprob: -10.785966873168945
    9. '   ' → logprob: -10.910966873168945
    10. 'id' → logprob: -10.910966873168945

Token 546: '_set' (ID: 5451)
  Prédit: '_set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_set' → logprob: -0.6149562001228333
    2. '(c' → logprob: -1.4899561405181885
    3. 'c' → logprob: -2.4899561405181885
    4. ')' → logprob: -2.4899561405181885
    5. ')c' → logprob: -2.8649561405181885
    6. '_candidates' → logprob: -5.489956378936768
    7. 'set' → logprob: -5.614956378936768
    8. '[c' → logprob: -6.489956378936768
    9. ' candidates' → logprob: -7.239956378936768
    10. ')set' → logprob: -8.23995590209961

Token 547: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00025883622583933175
    2. '())' → logprob: -8.375258445739746
    3. '()' → logprob: -11.375258445739746
    4. ')
' → logprob: -12.000258445739746
    5. '))' → logprob: -12.750258445739746
    6. ' )' → logprob: -13.250258445739746
    7. '(s' → logprob: -13.250258445739746
    8. ',' → logprob: -13.750258445739746
    9. '(' → logprob: -13.750258445739746
    10. ')`' → logprob: -14.250258445739746

Token 548: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01772584393620491
    2. '```' → logprob: -5.267725944519043
    3. '<|end|>' → logprob: -5.642725944519043
    4. '
' → logprob: -6.142725944519043
    5. 'return' → logprob: -6.142725944519043
    6. '    
' → logprob: -6.392725944519043
    7. ' return' → logprob: -6.392725944519043
    8. ')' → logprob: -8.017725944519043
    9. ':return' → logprob: -8.767725944519043
    10. '	return' → logprob: -9.017725944519043

Token 549: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3872036039829254
    2. 'return' (adapté à ' return') → logprob: -1.137203574180603
    3. ' return' → logprob: -8.262203216552734
    4. '```' → logprob: -9.762203216552734
    5. '
' → logprob: -11.637203216552734
    6. '	return' → logprob: -12.512203216552734
    7. '    
' → logprob: -13.762203216552734
    8. ':return' → logprob: -13.887203216552734
    9. '{return' → logprob: -14.262203216552734
    10. '@return' → logprob: -14.512203216552734

Token 550: ' candidates' (ID: 18116)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.00043102685594931245
    2. ' candidates' → logprob: -7.750431060791016
    3. '[c' → logprob: -16.000431060791016
    4. '```' → logprob: -16.500431060791016
    5. '_candidates' → logprob: -17.875431060791016
    6. ' c' → logprob: -18.500431060791016
    7. '   ' → logprob: -19.625431060791016
    8. 'candidate' → logprob: -19.625431060791016
    9. 'cand' → logprob: -19.875431060791016
    10. '`' → logprob: -20.125431060791016

Token 551: '


' (ID: 2499)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 552: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 553: ' main' (ID: 2758)
  Prédit: 'encrypt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'encrypt' → logprob: -0.3485291302204132
    2. ' encrypt' → logprob: -1.2235291004180908
    3. 'decrypt' → logprob: -10.348528861999512
    4. ' main' → logprob: -10.973528861999512
    5. ' decrypt' → logprob: -11.098528861999512
    6. '_encrypt' → logprob: -11.973528861999512
    7. 'e' → logprob: -13.098528861999512
    8. ' encrypted' → logprob: -13.598528861999512
    9. 'main' → logprob: -13.848528861999512
    10. '.encrypt' → logprob: -14.223528861999512

Token 554: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0005973544903099537
    2. '():
' → logprob: -7.7505974769592285
    3. '(' → logprob: -9.50059700012207
    4. '()' → logprob: -9.75059700012207
    5. ' ():' → logprob: -11.50059700012207
    6. '_' → logprob: -11.62559700012207
    7. '():
' → logprob: -12.50059700012207
    8. '()>' → logprob: -13.00059700012207
    9. 'def' → logprob: -13.37559700012207
    10. '().' → logprob: -13.62559700012207

Token 555: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.025366749614477158
    2. ' import' → logprob: -4.40036678314209
    3. ' s' → logprob: -5.52536678314209
    4. 'import' → logprob: -6.02536678314209
    5. ' def' → logprob: -6.52536678314209
    6. ' input' → logprob: -6.65036678314209
    7. '```' → logprob: -6.65036678314209
    8. 'def' → logprob: -7.02536678314209
    9. ' code' → logprob: -7.40036678314209
    10. 's' → logprob: -7.77536678314209

Token 556: ' while' (ID: 2049)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.8010257482528687
    2. 's' → logprob: -0.9260257482528687
    3. ' import' → logprob: -2.676025867462158
    4. '   ' → logprob: -2.801025867462158
    5. ' s' → logprob: -3.926025867462158
    6. 'input' → logprob: -5.926025867462158
    7. ' input' → logprob: -7.301025867462158
    8. 'encrypted' → logprob: -7.426025867462158
    9. ' encrypted' → logprob: -7.801025867462158
    10. 'n' → logprob: -8.051025390625

Token 557: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.023247458040714264
    2. 'True' → logprob: -3.773247480392456
    3. '(True' → logprob: -13.523247718811035
    4. '=True' → logprob: -14.898247718811035
    5. '1' → logprob: -15.648247718811035
    6. ' ' → logprob: -16.64824676513672
    7. ' ' → logprob: -17.52324676513672
    8. '   ' → logprob: -19.52324676513672
    9. '_true' → logprob: -19.52324676513672
    10. ' Tru' → logprob: -19.77324676513672

Token 558: ':
' (ID: 734)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0482035875320435
    2. '       ' → logprob: -1.5482035875320435
    3. '():' → logprob: -1.6732035875320435
    4. '():
' → logprob: -2.173203468322754
    5. ':' → logprob: -2.298203468322754
    6. ':
' → logprob: -4.423203468322754
    7. '(' → logprob: -4.548203468322754
    8. ' (' → logprob: -6.548203468322754
    9. '```' → logprob: -6.798203468322754
    10. ' :' → logprob: -6.798203468322754

Token 559: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14467737078666687
    2. '       ' → logprob: -2.0196774005889893
    3. '```' → logprob: -6.64467716217041
    4. ' line' → logprob: -7.89467716217041
    5. ' try' → logprob: -8.76967716217041
    6. ' s' → logprob: -10.01967716217041
    7. 'try' → logprob: -10.14467716217041
    8. '    
' → logprob: -10.76967716217041
    9. 's' → logprob: -11.14467716217041
    10. '``' → logprob: -11.39467716217041

Token 560: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.9006844162940979
    2. '   ' → logprob: -1.1506843566894531
    3. 'line' (adapté à ' line') → logprob: -2.400684356689453
    4. ' s' → logprob: -2.525684356689453
    5. 's' → logprob: -3.025684356689453
    6. 'try' → logprob: -3.525684356689453
    7. ' try' → logprob: -3.650684356689453
    8. ' inp' → logprob: -6.150684356689453
    9. 'inp' → logprob: -8.525684356689453
    10. 'text' → logprob: -9.775684356689453

Token 561: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11282645910978317
    2. '=' → logprob: -2.237826347351074
    3. '   ' → logprob: -13.362826347351074
    4. '=input' → logprob: -14.237826347351074
    5. '=line' → logprob: -14.362826347351074
    6. 's' → logprob: -14.987826347351074
    7. ' ' → logprob: -15.112826347351074
    8. '_' → logprob: -15.862826347351074
    9. '    ' → logprob: -15.987826347351074
    10. '  ' → logprob: -17.11282730102539

Token 562: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.02324547804892063
    2. ' input' → logprob: -3.7732455730438232
    3. '   ' → logprob: -19.273244857788086
    4. '(input' → logprob: -19.398244857788086
    5. '=input' → logprob: -20.023244857788086
    6. '<input' → logprob: -21.898244857788086
    7. '_input' → logprob: -22.023244857788086
    8. '	input' → logprob: -22.023244857788086
    9. '```' → logprob: -22.148244857788086
    10. '
' → logprob: -23.398244857788086

Token 563: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0067842816933989525
    2. '().' → logprob: -5.631784439086914
    3. '()
' → logprob: -5.756784439086914
    4. '(' → logprob: -11.256784439086914
    5. '()

' → logprob: -13.381784439086914
    6. '('' → logprob: -13.881784439086914
    7. '()>' → logprob: -14.256784439086914
    8. '("")' → logprob: -15.006784439086914
    9. '()`' → logprob: -15.381784439086914
    10. ' ()' → logprob: -15.381784439086914

Token 564: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04203587770462036
    2. '<|end|>' → logprob: -3.2920358180999756
    3. ' if' → logprob: -6.292036056518555
    4. ',' → logprob: -7.917036056518555
    5. '<|end|>' → logprob: -8.042036056518555
    6. '        ' → logprob: -8.042036056518555
    7. ' =' → logprob: -8.292036056518555
    8. '        
' → logprob: -8.417036056518555
    9. '   ' → logprob: -8.917036056518555
    10. ' ' → logprob: -9.167036056518555

Token 565: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.4980767071247101
    2. 'if' (adapté à ' if') → logprob: -0.9980766773223877
    3. '       ' → logprob: -3.7480766773223877
    4. '	if' → logprob: -8.998076438903809
    5. '   ' → logprob: -11.123076438903809
    6. '        ' → logprob: -12.748076438903809
    7. '<|end|>' → logprob: -12.873076438903809
    8. ' ' → logprob: -13.748076438903809
    9. '           ' → logprob: -13.873076438903809
    10. '        
' → logprob: -13.873076438903809

Token 566: ' line' (ID: 2543)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.0566021203994751
    2. ' line' → logprob: -3.0566020011901855
    3. 'not' → logprob: -5.3066020011901855
    4. 'line' → logprob: -5.8066020011901855
    5. ' ' → logprob: -11.431602478027344
    6. '#line' → logprob: -12.431602478027344
    7. '	line' → logprob: -14.431602478027344
    8. '(line' → logprob: -15.431602478027344
    9. '=line' → logprob: -15.431602478027344
    10. '[line' → logprob: -15.806602478027344

Token 567: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.2526789903640747
    2. '==' → logprob: -1.5026789903640747
    3. '.strip' → logprob: -7.252678871154785
    4. '()==' → logprob: -11.002678871154785
    5. '=' → logprob: -12.127678871154785
    6. '.startswith' → logprob: -12.377678871154785
    7. '=='' → logprob: -12.752678871154785
    8. '=="' → logprob: -12.877678871154785
    9. '==
' → logprob: -13.002678871154785
    10. ' =' → logprob: -13.127678871154785

Token 568: ' '#' (ID: 11284)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.5449015498161316
    2. '""' → logprob: -1.5449016094207764
    3. '''' → logprob: -2.0449016094207764
    4. ''' → logprob: -2.6699016094207764
    5. '"":' → logprob: -5.044901371002197
    6. ''ex' → logprob: -6.419901371002197
    7. ''q' → logprob: -11.669901847839355
    8. ''end' → logprob: -11.794901847839355
    9. ''t' → logprob: -12.044901847839355
    10. '```' → logprob: -12.419901847839355

Token 569: '':
' (ID: 7669)
  Prédit: '':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':
' → logprob: -0.15378287434577942
    2. ':
' → logprob: -3.028782844543457
    3. '':' → logprob: -3.153782844543457
    4. '
' → logprob: -4.028782844543457
    5. '#' → logprob: -4.153782844543457
    6. ''):
' → logprob: -5.528782844543457
    7. 'return' → logprob: -6.028782844543457
    8. '<|end|>' → logprob: -6.028782844543457
    9. ':return' → logprob: -6.403782844543457
    10. ''' → logprob: -6.403782844543457

Token 570: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.027790462598204613
    2. '           ' → logprob: -3.6527905464172363
    3. '   ' → logprob: -6.652790546417236
    4. ':
' → logprob: -9.777790069580078
    5. ':' → logprob: -9.902790069580078
    6. '     ' → logprob: -11.027790069580078
    7. '<|end|>' → logprob: -11.152790069580078
    8. '      ' → logprob: -11.777790069580078
    9. '	' → logprob: -12.027790069580078
    10. '	   ' → logprob: -12.277790069580078

Token 571: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.02599313110113144
    2. '       ' → logprob: -4.275993347167969
    3. ' break' → logprob: -4.525993347167969
    4. 'return' → logprob: -7.525993347167969
    5. '           ' → logprob: -8.025993347167969
    6. '	break' → logprob: -9.650993347167969
    7. '               ' → logprob: -13.150993347167969
    8. '_break' → logprob: -13.525993347167969
    9. '   ' → logprob: -13.650993347167969
    10. ' return' → logprob: -13.900993347167969

Token 572: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0034424378536641598
    2. '        
' → logprob: -6.253442287445068
    3. '<|end|>' → logprob: -7.128442287445068
    4. '
' → logprob: -7.628442287445068
    5. '   ' → logprob: -9.003442764282227
    6. '    
' → logprob: -10.003442764282227
    7. '  
' → logprob: -11.003442764282227
    8. '           ' → logprob: -12.128442764282227
    9. ',' → logprob: -12.128442764282227
    10. '<|end|>' → logprob: -12.253442764282227

Token 573: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001355594489723444
    2. '        
' → logprob: -7.5013556480407715
    3. '   ' → logprob: -7.6263556480407715
    4. '<|end|>' → logprob: -8.251355171203613
    5. '    
' → logprob: -11.501355171203613
    6. '           ' → logprob: -11.626355171203613
    7. '<|end|>' → logprob: -12.501355171203613
    8. '      ' → logprob: -12.626355171203613
    9. '```' → logprob: -12.626355171203613
    10. '
' → logprob: -12.876355171203613

Token 574: ' candidates' (ID: 18116)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.5592157244682312
    2. '   ' → logprob: -1.184215784072876
    3. ' candidates' → logprob: -2.684215784072876
    4. 'original' → logprob: -4.309215545654297
    5. ' for' → logprob: -4.434215545654297
    6. ' original' → logprob: -4.559215545654297
    7. 'for' → logprob: -4.809215545654297
    8. ' c' → logprob: -6.309215545654297
    9. 'orig' → logprob: -6.309215545654297
    10. '       ' → logprob: -6.434215545654297

Token 575: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.006718925200402737
    2. '=' → logprob: -5.00671911239624
    3. 's' → logprob: -12.756718635559082
    4. '   ' → logprob: -15.006718635559082
    5. ' =
' → logprob: -16.1317195892334
    6. '_candidates' → logprob: -16.5067195892334
    7. '_list' → logprob: -16.7567195892334
    8. ' ' → logprob: -17.6317195892334
    9. '_' → logprob: -17.6317195892334
    10. ')' → logprob: -17.6317195892334

Token 576: ' decrypt' (ID: 81444)
  Prédit: 'decrypt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'decrypt' → logprob: -0.023245712742209435
    2. ' decrypt' → logprob: -3.7732458114624023
    3. '.decrypt' → logprob: -15.898245811462402
    4. '   ' → logprob: -17.773244857788086
    5. 'Decrypt' → logprob: -17.898244857788086
    6. 'de' → logprob: -18.398244857788086
    7. ' decrypted' → logprob: -19.648244857788086
    8. 'decode' → logprob: -20.148244857788086
    9. 'deque' → logprob: -20.523244857788086
    10. 'encrypt' → logprob: -20.648244857788086

Token 577: '_candidates' (ID: 186937)
  Prédit: '_candidates'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_candidates' → logprob: -1.9361264946837764e-07
    2. '_candidate' → logprob: -17.5
    3. '```' → logprob: -17.5
    4. ''_' → logprob: -17.875
    5. '_' → logprob: -18.0
    6. 'c' → logprob: -18.125
    7. '_choices' → logprob: -18.75
    8. '_c' → logprob: -18.875
    9. '
' → logprob: -19.625
    10. '\' → logprob: -19.875

Token 578: '(line' (ID: 18178)
  Prédit: '(line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -4.320199877838604e-07
    2. '(' → logprob: -14.875
    3. '=line' → logprob: -17.875
    4. '#line' → logprob: -18.0
    5. '(Line' → logprob: -18.125
    6. '[line' → logprob: -18.25
    7. '(lines' → logprob: -19.0
    8. '(
' → logprob: -19.875
    9. ',line' → logprob: -20.375
    10. ' (' → logprob: -21.0

Token 579: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10077062249183655
    2. ')
' → logprob: -2.3507707118988037
    3. '       ' → logprob: -7.850770473480225
    4. '   ' → logprob: -9.225770950317383
    5. ')
' → logprob: -9.975770950317383
    6. '(s' → logprob: -11.225770950317383
    7. '(' → logprob: -12.225770950317383
    8. '(line' → logprob: -12.850770950317383
    9. ' ' → logprob: -13.350770950317383
    10. ')`
' → logprob: -13.600770950317383

Token 580: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05642738193273544
    2. '   ' → logprob: -2.931427478790283
    3. ' for' → logprob: -6.681427478790283
    4. 'for' → logprob: -8.306427001953125
    5. '```' → logprob: -10.681427001953125
    6. '<|end|>' → logprob: -11.056427001953125
    7. '        
' → logprob: -13.556427001953125
    8. 'print' → logprob: -14.181427001953125
    9. '<|end|>' → logprob: -14.931427001953125
    10. '[' → logprob: -15.056427001953125

Token 581: ' print' (ID: 2123)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -4.251091377227567e-05
    2. 'print' (adapté à ' print') → logprob: -10.750042915344238
    3. ' for' → logprob: -11.000042915344238
    4. '       ' → logprob: -12.500042915344238
    5. '   ' → logprob: -15.125042915344238
    6. '
' → logprob: -15.875042915344238
    7. '```' → logprob: -16.000041961669922
    8. '        
' → logprob: -19.625041961669922
    9. '	for' → logprob: -20.125041961669922
    10. '``' → logprob: -20.375041961669922

Token 582: '(len' (ID: 14990)
  Prédit: '(c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.47693219780921936
    2. '('' → logprob: -1.726932168006897
    3. '(*' → logprob: -1.851932168006897
    4. '('\' → logprob: -3.7269322872161865
    5. '(' → logprob: -4.726932048797607
    6. '("' → logprob: -4.726932048797607
    7. '(len' → logprob: -6.226932048797607
    8. '("\' → logprob: -7.601932048797607
    9. '(sorted' → logprob: -8.976932525634766
    10. 'c' → logprob: -10.101932525634766

Token 583: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -2.6537622034084052e-05
    2. '(' → logprob: -11.25002670288086
    3. 'c' → logprob: -11.25002670288086
    4. ')' → logprob: -15.50002670288086
    5. ')c' → logprob: -15.87502670288086
    6. '(candidate' → logprob: -16.12502670288086
    7. ' (' → logprob: -16.75002670288086
    8. '(
' → logprob: -17.37502670288086
    9. '(`' → logprob: -19.12502670288086
    10. ' candidates' → logprob: -19.37502670288086

Token 584: 'andidates' (ID: 38168)
  Prédit: 'andidates'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'andidates' → logprob: -0.006696184631437063
    2. 'c' → logprob: -5.3816962242126465
    3. '(c' → logprob: -6.5066962242126465
    4. 's' → logprob: -8.256695747375488
    5. '_candidates' → logprob: -8.881695747375488
    6. ')' → logprob: -9.631695747375488
    7. 'and' → logprob: -10.256695747375488
    8. 'ands' → logprob: -10.256695747375488
    9. ' candidates' → logprob: -11.381695747375488
    10. 'andidate' → logprob: -11.381695747375488

Token 585: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00026765360962599516
    2. ',' → logprob: -8.25026798248291
    3. '   ' → logprob: -13.75026798248291
    4. '(' → logprob: -13.75026798248291
    5. '())' → logprob: -13.75026798248291
    6. '))' → logprob: -14.12526798248291
    7. '()' → logprob: -14.62526798248291
    8. ')
' → logprob: -14.75026798248291
    9. ',)' → logprob: -14.87526798248291
    10. ')`' → logprob: -14.87526798248291

Token 586: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0002811199810821563
    2. '   ' → logprob: -9.12528133392334
    3. 'for' → logprob: -9.12528133392334
    4. ' for' → logprob: -9.87528133392334
    5. '```' → logprob: -11.62528133392334
    6. '<|end|>' → logprob: -13.37528133392334
    7. ' ' → logprob: -14.75028133392334
    8. 'print' → logprob: -15.50028133392334
    9. '``' → logprob: -15.50028133392334
    10. '           ' → logprob: -15.62528133392334

Token 587: ' if' (ID: 538)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00010282796574756503
    2. '       ' → logprob: -9.750102996826172
    3. ' for' → logprob: -10.500102996826172
    4. 'print' → logprob: -11.000102996826172
    5. '   ' → logprob: -15.500102996826172
    6. '```' → logprob: -17.250102996826172
    7. '	for' → logprob: -17.375102996826172
    8. '``' → logprob: -20.500102996826172
    9. '        
' → logprob: -21.000102996826172
    10. '
' → logprob: -21.875102996826172

Token 588: ' len' (ID: 4631)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.22645045816898346
    2. ' candidates' → logprob: -1.8514504432678223
    3. ' len' → logprob: -3.7264504432678223
    4. 'len' → logprob: -3.8514504432678223
    5. ' not' → logprob: -8.97645092010498
    6. ' c' → logprob: -9.85145092010498
    7. ' ' → logprob: -10.22645092010498
    8. ''' → logprob: -11.10145092010498
    9. '   ' → logprob: -11.35145092010498
    10. 'andidates' → logprob: -11.60145092010498

Token 589: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -4.370294846012257e-05
    2. 'c' → logprob: -10.250043869018555
    3. '(' → logprob: -12.125043869018555
    4. ' (' → logprob: -14.250043869018555
    5. '>' → logprob: -14.375043869018555
    6. '```' → logprob: -14.625043869018555
    7. '==' → logprob: -15.000043869018555
    8. '(candidate' → logprob: -15.375043869018555
    9. ')c' → logprob: -15.500043869018555
    10. ' candidates' → logprob: -16.125043869018555

Token 590: 'andidates' (ID: 38168)
  Prédit: 'andidates'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'andidates' → logprob: -6.074907287256792e-05
    2. 'and' → logprob: -10.50006103515625
    3. '_candidates' → logprob: -11.50006103515625
    4. '>' → logprob: -11.87506103515625
    5. 'ands' → logprob: -12.00006103515625
    6. 'andidate' → logprob: -12.12506103515625
    7. '==' → logprob: -13.62506103515625
    8. ' candidates' → logprob: -13.62506103515625
    9. '   ' → logprob: -14.25006103515625
    10. ')' → logprob: -15.12506103515625

Token 591: ')' (ID: 8)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.005717128049582243
    2. ' >' → logprob: -5.2557172775268555
    3. ')>' → logprob: -8.255717277526855
    4. ')' → logprob: -9.005717277526855
    5. '==' → logprob: -9.630717277526855
    6. '()>' → logprob: -11.005717277526855
    7. '   ' → logprob: -11.505717277526855
    8. ' ==' → logprob: -12.880717277526855
    9. '```' → logprob: -13.505717277526855
    10. '>=' → logprob: -13.880717277526855

Token 592: ' <=' (ID: 5017)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.006068152841180563
    2. ' >' → logprob: -5.131068229675293
    3. '==' → logprob: -9.006068229675293
    4. ' ==' → logprob: -12.131068229675293
    5. '   ' → logprob: -12.631068229675293
    6. '>=' → logprob: -12.881068229675293
    7. '>
' → logprob: -13.631068229675293
    8. '()>' → logprob: -14.006068229675293
    9. ')>' → logprob: -14.131068229675293
    10. '```' → logprob: -14.381068229675293

Token 593: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.06465082615613937
    2. '100' → logprob: -3.314650774002075
    3. '20' → logprob: -3.814650774002075
    4. '50' → logprob: -6.314651012420654
    5. '5' → logprob: -7.314651012420654
    6. '42' → logprob: -7.564651012420654
    7. '30' → logprob: -7.939651012420654
    8. '200' → logprob: -8.689650535583496
    9. '3' → logprob: -9.189650535583496
    10. '15' → logprob: -9.564650535583496

Token 594: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.34977462887763977
    2. '20' → logprob: -1.8497745990753174
    3. '100' → logprob: -2.0997745990753174
    4. '50' → logprob: -4.9747748374938965
    5. '42' → logprob: -5.4747748374938965
    6. '5' → logprob: -6.0997748374938965
    7. '30' → logprob: -7.7247748374938965
    8. '200' → logprob: -7.8497748374938965
    9. '40' → logprob: -8.599774360656738
    10. '500' → logprob: -8.599774360656738

Token 595: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00788874737918377
    2. ':
' → logprob: -5.0078887939453125
    3. '       ' → logprob: -6.8828887939453125
    4. ',' → logprob: -9.882888793945312
    5. '           ' → logprob: -10.257888793945312
    6. '):' → logprob: -10.632888793945312
    7. '   ' → logprob: -11.757888793945312
    8. '(' → logprob: -11.882888793945312
    9. '():' → logprob: -12.007888793945312
    10. '):
' → logprob: -12.632888793945312

Token 596: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.48328080773353577
    2. '       ' → logprob: -0.9832807779312134
    3. ' for' → logprob: -4.858280658721924
    4. ':' → logprob: -7.858280658721924
    5. ':
' → logprob: -7.983280658721924
    6. '	       ' → logprob: -8.108281135559082
    7. '```' → logprob: -9.233281135559082
    8. 'for' → logprob: -9.608281135559082
    9. '<|end|>' → logprob: -10.108281135559082
    10. '   ' → logprob: -10.483281135559082

Token 597: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.07241957634687424
    2. 'for' (adapté à ' for') → logprob: -3.1974196434020996
    3. '           ' → logprob: -3.5724196434020996
    4. '       ' → logprob: -7.1974196434021
    5. '   ' → logprob: -9.197419166564941
    6. '               ' → logprob: -10.197419166564941
    7. ' ' → logprob: -11.822419166564941
    8. '	for' → logprob: -12.322419166564941
    9. ' print' → logprob: -12.947419166564941
    10. '	       ' → logprob: -13.197419166564941

Token 598: ' c' (ID: 274)
  Prédit: 'candidate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'candidate' → logprob: -0.6403025388717651
    2. 'cand' → logprob: -1.1403025388717651
    3. 'c' → logprob: -1.8903025388717651
    4. ' candidate' → logprob: -6.390302658081055
    5. ' cand' → logprob: -7.765302658081055
    6. ' c' → logprob: -11.390302658081055
    7. 'word' → logprob: -13.015302658081055
    8. 'can' → logprob: -13.640302658081055
    9. 's' → logprob: -14.015302658081055
    10. 'x' → logprob: -14.515302658081055

Token 599: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.010660214349627495
    2. 'andidate' → logprob: -4.635660171508789
    3. 'andidates' → logprob: -8.010660171508789
    4. 'and' → logprob: -8.010660171508789
    5. 'in' → logprob: -8.760660171508789
    6. '   ' → logprob: -10.260660171508789
    7. 'andidat' → logprob: -10.760660171508789
    8. '  ' → logprob: -11.760660171508789
    9. ' ' → logprob: -12.385660171508789
    10. 'c' → logprob: -12.385660171508789

Token 600: ' candidates' (ID: 18116)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.038130078464746475
    2. 'andidates' → logprob: -3.538130044937134
    3. ' candidates' → logprob: -4.788130283355713
    4. '   ' → logprob: -11.538129806518555
    5. 'andidate' → logprob: -12.538129806518555
    6. 'cand' → logprob: -14.163129806518555
    7. '_candidates' → logprob: -14.163129806518555
    8. ' c' → logprob: -14.663129806518555
    9. 'candidate' → logprob: -14.788129806518555
    10. '	c' → logprob: -15.038129806518555

Token 601: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.20703788101673126
    2. ':' → logprob: -2.207037925720215
    3. '           ' → logprob: -2.957037925720215
    4. ':
' → logprob: -4.332037925720215
    5. '	           ' → logprob: -5.082037925720215
    6. '	       ' → logprob: -6.207037925720215
    7. '		       ' → logprob: -7.207037925720215
    8. '   ' → logprob: -7.832037925720215
    9. ' print' → logprob: -7.832037925720215
    10. 'print' → logprob: -7.957037925720215

Token 602: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0004618896055035293
    2. '           ' → logprob: -9.00046157836914
    3. '	           ' → logprob: -9.12546157836914
    4. '   ' → logprob: -9.62546157836914
    5. ' print' → logprob: -9.62546157836914
    6. 'print' → logprob: -10.25046157836914
    7. '		       ' → logprob: -10.50046157836914
    8. '       ' → logprob: -11.00046157836914
    9. '	       ' → logprob: -11.62546157836914
    10. '			' → logprob: -13.25046157836914

Token 603: ' print' (ID: 2123)
  Prédit: ' print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.41005244851112366
    2. 'print' (adapté à ' print') → logprob: -1.4100524187088013
    3. '               ' → logprob: -2.410052537918091
    4. '                   ' → logprob: -6.410052299499512
    5. '   ' → logprob: -7.160052299499512
    6. '           ' → logprob: -11.910052299499512
    7. '       ' → logprob: -12.035052299499512
    8. '	print' → logprob: -12.535052299499512
    9. '```' → logprob: -13.535052299499512
    10. '                       ' → logprob: -13.660052299499512

Token 604: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -1.1637164789135568e-05
    2. 'c' → logprob: -11.750011444091797
    3. '(' → logprob: -12.625011444091797
    4. '(f' → logprob: -15.500011444091797
    5. '               ' → logprob: -17.125011444091797
    6. '('' → logprob: -17.125011444091797
    7. ')c' → logprob: -17.125011444091797
    8. '   ' → logprob: -18.125011444091797
    9. ' c' → logprob: -18.250011444091797
    10. '	c' → logprob: -18.375011444091797

Token 605: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.36574100604048e-06
    2. ')
' → logprob: -13.000004768371582
    3. '())' → logprob: -13.875004768371582
    4. ' )' → logprob: -14.500004768371582
    5. '       ' → logprob: -14.875004768371582
    6. '   ' → logprob: -16.625003814697266
    7. '()' → logprob: -17.000003814697266
    8. '           ' → logprob: -17.000003814697266
    9. ')}' → logprob: -17.750003814697266
    10. '')' → logprob: -17.875003814697266

Token 606: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 607: ' else' (ID: 1203)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 608: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4350949227809906
    2. ':' → logprob: -1.685094952583313
    3. '       ' → logprob: -1.810094952583313
    4. ':
' → logprob: -5.935094833374023
    5. '   ' → logprob: -7.685094833374023
    6. '```' → logprob: -8.435094833374023
    7. 'print' → logprob: -8.560094833374023
    8. ' print' → logprob: -9.435094833374023
    9. ' :' → logprob: -10.685094833374023
    10. '               ' → logprob: -11.060094833374023

Token 609: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1682194620370865
    2. '       ' → logprob: -2.168219566345215
    3. ' print' → logprob: -3.543219566345215
    4. 'print' → logprob: -4.793219566345215
    5. ' for' → logprob: -6.043219566345215
    6. '   ' → logprob: -7.418219566345215
    7. '```' → logprob: -9.293219566345215
    8. 'for' → logprob: -9.668219566345215
    9. '               ' → logprob: -10.293219566345215
    10. '	       ' → logprob: -11.043219566345215

Token 610: ' for' (ID: 395)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0002917254460044205
    2. ' print' → logprob: -8.37529182434082
    3. '           ' → logprob: -11.25029182434082
    4. '       ' → logprob: -11.37529182434082
    5. 'for' (adapté à ' for') → logprob: -11.37529182434082
    6. '```' → logprob: -11.37529182434082
    7. '   ' → logprob: -11.75029182434082
    8. 'pass' → logprob: -12.25029182434082
    9. 'first' → logprob: -14.25029182434082
    10. '...' → logprob: -16.00029182434082

Token 611: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.04032479226589203
    2. 'i' → logprob: -3.4153246879577637
    3. '_' → logprob: -5.540324687957764
    4. ' c' → logprob: -6.665324687957764
    5. 'candidate' → logprob: -7.165324687957764
    6. '_c' → logprob: -7.915324687957764
    7. '_i' → logprob: -9.040325164794922
    8. ' i' → logprob: -9.290325164794922
    9. '_candidate' → logprob: -9.540325164794922
    10. 'cand' → logprob: -11.790325164794922

Token 612: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.5234712362289429
    2. ' in' → logprob: -0.8984712362289429
    3. 'c' → logprob: -9.023470878601074
    4. 'i' → logprob: -9.023470878601074
    5. 'n' → logprob: -11.023470878601074
    6. 'print' → logprob: -11.023470878601074
    7. ' ' → logprob: -11.273470878601074
    8. '_' → logprob: -11.523470878601074
    9. '
' → logprob: -12.023470878601074
    10. '```' → logprob: -12.148470878601074

Token 613: ' candidates' (ID: 18116)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -5.860340752406046e-05
    2. ' candidates' → logprob: -10.0000581741333
    3. '[c' → logprob: -11.8750581741333
    4. 'range' → logprob: -12.8750581741333
    5. '(c' → logprob: -13.7500581741333
    6. ' c' → logprob: -14.8750581741333
    7. '   ' → logprob: -14.8750581741333
    8. '
' → logprob: -15.1250581741333
    9. '_candidates' → logprob: -15.2500581741333
    10. 'sorted' → logprob: -15.2500581741333

Token 614: '[:' (ID: 7808)
  Prédit: '[:'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:' → logprob: -5.538490950129926e-05
    2. ':' → logprob: -10.625055313110352
    3. '[' → logprob: -10.750055313110352
    4. '           ' → logprob: -12.375055313110352
    5. ':
' → logprob: -13.125055313110352
    6. '   ' → logprob: -13.500055313110352
    7. '       ' → logprob: -14.250055313110352
    8. '[:-' → logprob: -14.625055313110352
    9. '               ' → logprob: -15.875055313110352
    10. '][:' → logprob: -16.00005531311035

Token 615: '5' (ID: 20)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.008647187612950802
    2. '5' → logprob: -4.7586469650268555
    3. '3' → logprob: -11.133646965026855
    4. '9' → logprob: -11.758646965026855
    5. '2' → logprob: -12.758646965026855
    6. '0' → logprob: -13.133646965026855
    7. '20' → logprob: -13.633646965026855
    8. '4' → logprob: -14.133646965026855
    9. '
' → logprob: -14.383646965026855
    10. '1' → logprob: -14.383646965026855

Token 616: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.007539675571024418
    2. ']:' → logprob: -5.007539749145508
    3. ']:
' → logprob: -7.882539749145508
    4. ']' → logprob: -8.257539749145508
    5. '...' → logprob: -10.382539749145508
    6. '           ' → logprob: -10.507539749145508
    7. '):
' → logprob: -10.757539749145508
    8. '():
' → logprob: -10.882539749145508
    9. '       ' → logprob: -10.882539749145508
    10. ':
' → logprob: -11.257539749145508

Token 617: '               ' (ID: 506)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.7421036958694458
    2. '           ' → logprob: -1.3671036958694458
    3. '               ' → logprob: -1.3671036958694458
    4. '   ' → logprob: -5.117103576660156
    5. ' print' → logprob: -5.117103576660156
    6. '	       ' → logprob: -6.992103576660156
    7. '	           ' → logprob: -7.617103576660156
    8. '	print' → logprob: -7.992103576660156
    9. '       ' → logprob: -8.492103576660156
    10. '		' → logprob: -9.367103576660156

Token 618: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -5.919942486798391e-05
    2. ' print' → logprob: -9.750059127807617
    3. '           ' → logprob: -14.250059127807617
    4. '               ' → logprob: -16.125059127807617
    5. '   ' → logprob: -17.250059127807617
    6. '	print' → logprob: -18.000059127807617
    7. '       ' → logprob: -20.875059127807617
    8. '```' → logprob: -21.125059127807617
    9. 'printf' → logprob: -21.375059127807617
    10. '  ' → logprob: -21.625059127807617

Token 619: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.00671584764495492
    2. 'c' → logprob: -5.006715774536133
    3. '(' → logprob: -14.881715774536133
    4. ' c' → logprob: -16.381715774536133
    5. '	c' → logprob: -17.381715774536133
    6. '()' → logprob: -17.631715774536133
    7. ')c' → logprob: -17.756715774536133
    8. '...' → logprob: -18.006715774536133
    9. '   ' → logprob: -18.381715774536133
    10. 's' → logprob: -18.756715774536133

Token 620: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.012572048231959343
    2. ')' → logprob: -4.387571811676025
    3. '           ' → logprob: -10.637572288513184
    4. '       ' → logprob: -11.262572288513184
    5. ')
' → logprob: -12.387572288513184
    6. '())
' → logprob: -12.387572288513184
    7. '               ' → logprob: -12.512572288513184
    8. '   ' → logprob: -12.637572288513184
    9. ')c' → logprob: -12.637572288513184
    10. 'c' → logprob: -13.262572288513184

Token 621: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.42774954438209534
    2. '           ' → logprob: -1.302749514579773
    3. '...' → logprob: -2.8027496337890625
    4. '...
' → logprob: -5.5527496337890625
    5. '   ' → logprob: -5.6777496337890625
    6. 'print' → logprob: -6.1777496337890625
    7. '<|end|>' → logprob: -6.4277496337890625
    8. '```' → logprob: -6.6777496337890625
    9. '               ' → logprob: -6.9277496337890625
    10. '	       ' → logprob: -7.5527496337890625

Token 622: ' for' (ID: 395)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0013917810283601284
    2. '...' → logprob: -6.751391887664795
    3. '...
' → logprob: -8.501391410827637
    4. '   ' → logprob: -11.751391410827637
    5. ' print' → logprob: -12.126391410827637
    6. '```' → logprob: -12.751391410827637
    7. '           ' → logprob: -13.751391410827637
    8. '	print' → logprob: -15.126391410827637
    9. '
' → logprob: -15.376391410827637
    10. '       ' → logprob: -15.501391410827637

Token 623: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.007620707154273987
    2. ' c' → logprob: -5.382620811462402
    3. '_' → logprob: -6.132620811462402
    4. '...' → logprob: -7.382620811462402
    5. '_c' → logprob: -8.507620811462402
    6. ' _' → logprob: -14.882620811462402
    7. '   ' → logprob: -16.007619857788086
    8. '#' → logprob: -16.507619857788086
    9. ' ...' → logprob: -16.632619857788086
    10. ' ' → logprob: -16.632619857788086

Token 624: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2532972991466522
    2. 'c' → logprob: -2.0032973289489746
    3. 'in' → logprob: -2.7532973289489746
    4. '...' → logprob: -3.7532973289489746
    5. '[...]' → logprob: -8.128296852111816
    6. 'print' → logprob: -8.753296852111816
    7. 's' → logprob: -8.878296852111816
    8. '_candidates' → logprob: -9.003296852111816
    9. '_c' → logprob: -9.128296852111816
    10. '.c' → logprob: -9.253296852111816

Token 625: ' candidates' (ID: 18116)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.025259003043174744
    2. '...' → logprob: -4.400259017944336
    3. ' candidates' → logprob: -4.400259017944336
    4. ''' → logprob: -9.025259017944336
    5. '   ' → logprob: -9.775259017944336
    6. ' c' → logprob: -10.150259017944336
    7. '['' → logprob: -10.275259017944336
    8. '...
' → logprob: -10.650259017944336
    9. 'print' → logprob: -10.650259017944336
    10. '....' → logprob: -11.400259017944336

Token 626: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -1.3856492842023727e-06
    2. '   ' → logprob: -14.625000953674316
    3. '[:-' → logprob: -15.125000953674316
    4. '```' → logprob: -15.250000953674316
    5. '[' → logprob: -15.750000953674316
    6. '
' → logprob: -16.125001907348633
    7. '[len' → logprob: -16.750001907348633
    8. '-' → logprob: -16.875001907348633
    9. '[
' → logprob: -17.125001907348633
    10. '    ' → logprob: -17.625001907348633

Token 627: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: 0.0
    2. '```' → logprob: -17.375
    3. '10' → logprob: -17.625
    4. '3' → logprob: -18.0
    5. ' ' → logprob: -18.25
    6. '4' → logprob: -18.375
    7. '   ' → logprob: -18.375
    8. '
' → logprob: -19.0
    9. '1' → logprob: -19.0
    10. '2' → logprob: -19.125

Token 628: ':' (ID: 25)
  Prédit: ']:
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.3009900152683258
    2. ']:' → logprob: -1.4259899854660034
    3. ':' → logprob: -4.300990104675293
    4. ':]' → logprob: -5.675990104675293
    5. ']:
' → logprob: -7.175990104675293
    6. '():
' → logprob: -7.425990104675293
    7. ']' → logprob: -8.050990104675293
    8. '():' → logprob: -8.425990104675293
    9. ']):
' → logprob: -8.800990104675293
    10. ']:

' → logprob: -9.300990104675293

Token 629: ']:
' (ID: 22152)
  Prédit: '():
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():
' → logprob: -0.4166313409805298
    2. ']:
' → logprob: -1.5416313409805298
    3. ':
' → logprob: -3.2916312217712402
    4. '           ' → logprob: -3.5416312217712402
    5. '):
' → logprob: -3.6666312217712402
    6. ':' → logprob: -4.16663122177124
    7. '               ' → logprob: -4.91663122177124
    8. '       ' → logprob: -5.66663122177124
    9. 'print' → logprob: -6.54163122177124
    10. '()' → logprob: -6.66663122177124

Token 630: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.01609795168042183
    2. 'print' → logprob: -4.2660980224609375
    3. ' print' → logprob: -7.1410980224609375
    4. '       ' → logprob: -7.2660980224609375
    5. '           ' → logprob: -8.141098022460938
    6. '   ' → logprob: -9.766098022460938
    7. '```' → logprob: -9.766098022460938
    8. '	print' → logprob: -11.516098022460938
    9. '	           ' → logprob: -12.516098022460938
    10. '	       ' → logprob: -12.641098022460938

Token 631: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.006721876095980406
    2. ' print' → logprob: -5.0067219734191895
    3. '           ' → logprob: -13.131721496582031
    4. '```' → logprob: -13.381721496582031
    5. 'return' → logprob: -13.631721496582031
    6. 'for' → logprob: -14.131721496582031
    7. 'break' → logprob: -14.631721496582031
    8. '   ' → logprob: -15.006721496582031
    9. '       ' → logprob: -16.00672149658203
    10. '               ' → logprob: -16.38172149658203

Token 632: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.00014978687977418303
    2. 'c' → logprob: -9.250149726867676
    3. '()' → logprob: -10.250149726867676
    4. '(' → logprob: -11.125149726867676
    5. ')' → logprob: -13.375149726867676
    6. ')c' → logprob: -13.625149726867676
    7. 's' → logprob: -14.875149726867676
    8. '('' → logprob: -16.000150680541992
    9. '(
' → logprob: -16.125150680541992
    10. '(s' → logprob: -17.125150680541992

Token 633: ')


' (ID: 7861)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.696889623621246e-06
    2. ')
' → logprob: -13.00000286102295
    3. '<|end|>' → logprob: -15.62500286102295
    4. ')#' → logprob: -16.625001907348633
    5. ')}' → logprob: -17.250001907348633
    6. ')}}' → logprob: -17.625001907348633
    7. '')' → logprob: -17.875001907348633
    8. '())' → logprob: -18.375001907348633
    9. '),' → logprob: -18.500001907348633
    10. '}' → logprob: -18.625001907348633

Token 634: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.14861468970775604
    2. '```' → logprob: -2.5236146450042725
    3. '#' → logprob: -3.2736146450042725
    4. '<|end|>' → logprob: -4.398614883422852
    5. 'main' → logprob: -5.148614883422852
    6. ' if' → logprob: -7.398614883422852
    7. '
' → logprob: -7.648614883422852
    8. '``' → logprob: -9.148614883422852
    9. '[' → logprob: -9.398614883422852
    10. 'print' → logprob: -9.398614883422852

Token 635: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.31329524517059326
    2. ' __' → logprob: -1.3132952451705933
    3. 'name' → logprob: -10.938295364379883
    4. '___' → logprob: -12.438295364379883
    5. ' ' → logprob: -12.563295364379883
    6. '_name' → logprob: -12.813295364379883
    7. '_' → logprob: -13.313295364379883
    8. ' ' → logprob: -13.688295364379883
    9. '/__' → logprob: -14.313295364379883
    10. 'Name' → logprob: -15.063295364379883

Token 636: 'name' (ID: 897)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.4356986880302429
    2. '__' → logprob: -1.4356987476348877
    3. ' ==' → logprob: -2.3106987476348877
    4. '=="' → logprob: -4.435698509216309
    5. '=='' → logprob: -5.560698509216309
    6. '.__' → logprob: -8.685698509216309
    7. '__.__' → logprob: -9.560698509216309
    8. '```' → logprob: -10.810698509216309
    9. '==
' → logprob: -10.935698509216309
    10. 'main' → logprob: -11.685698509216309

Token 637: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.00016778295685071498
    2. '__.__' → logprob: -8.750167846679688
    3. '==' → logprob: -12.500167846679688
    4. '__('' → logprob: -13.125167846679688
    5. '=="' → logprob: -13.500167846679688
    6. '__.' → logprob: -14.000167846679688
    7. '__["' → logprob: -14.875167846679688
    8. '___' → logprob: -15.000167846679688
    9. '=='' → logprob: -15.250167846679688
    10. '____' → logprob: -16.250167846679688

Token 638: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.1279097944498062
    2. '==' → logprob: -2.2529098987579346
    3. ' ==' → logprob: -4.2529096603393555
    4. '=="' → logprob: -7.3779096603393555
    5. '=='' → logprob: -9.127909660339355
    6. '===' → logprob: -12.002909660339355
    7. '___' → logprob: -12.502909660339355
    8. '__.__' → logprob: -12.752909660339355
    9. '__('' → logprob: -14.127909660339355
    10. '_' → logprob: -14.377909660339355

Token 639: ' '__' (ID: 28278)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.4741035997867584
    2. ''' → logprob: -0.974103569984436
    3. '__' → logprob: -10.599103927612305
    4. ' "__' → logprob: -13.599103927612305
    5. ' '__' → logprob: -15.599103927612305
    6. ''"' → logprob: -15.849103927612305
    7. '('__' → logprob: -17.224103927612305
    8. '"'' → logprob: -17.974103927612305
    9. '"name' → logprob: -18.099103927612305
    10. '   ' → logprob: -18.224103927612305

Token 640: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.06218580901622772
    2. '__' → logprob: -2.812185764312744
    3. 'name' → logprob: -8.437186241149902
    4. '__':
' → logprob: -15.062186241149902
    5. 'built' → logprob: -15.562186241149902
    6. 'python' → logprob: -15.562186241149902
    7. '__
' → logprob: -16.062185287475586
    8. '___' → logprob: -16.562185287475586
    9. ' main' → logprob: -16.812185287475586
    10. '```' → logprob: -16.812185287475586

Token 641: '__':
' (ID: 39314)
  Prédit: '__':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__':
' → logprob: -0.006953588221222162
    2. '__' → logprob: -5.006953716278076
    3. '__":
' → logprob: -8.381953239440918
    4. '__.' → logprob: -13.006953239440918
    5. '('__' → logprob: -13.506953239440918
    6. '().__' → logprob: -13.631953239440918
    7. '__.__' → logprob: -14.006953239440918
    8. '__()
' → logprob: -14.131953239440918
    9. '_' → logprob: -14.381953239440918
    10. '__:' → logprob: -14.381953239440918

Token 642: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.00072851701406762
    2. ' main' → logprob: -7.250728607177734
    3. '	main' → logprob: -11.125728607177734
    4. '   ' → logprob: -12.625728607177734
    5. '_main' → logprob: -15.125728607177734
    6. '(main' → logprob: -16.375728607177734
    7. '```' → logprob: -16.750728607177734
    8. '__' → logprob: -17.375728607177734
    9. '
' → logprob: -17.625728607177734
    10. '    
' → logprob: -17.625728607177734

Token 643: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: 0.0
    2. ' main' → logprob: -17.75
    3. 'import' → logprob: -23.375
    4. '	main' → logprob: -23.375
    5. '.main' → logprob: -25.625
    6. '_main' → logprob: -26.0
    7. '   ' → logprob: -26.125
    8. '(main' → logprob: -26.5
    9. '__' → logprob: -27.875
    10. 'Main' → logprob: -28.25

Token 644: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 642
Tokens correctement prédits (1ère position, stricte): 197
Tokens correctement prédits (1ère position, avec adaptation): 207
Tokens correctement prédits (top 10): 432
Précision stricte (1ère position): 30.69%
Précision adaptée (1ère position): 32.24%
Précision (top 10): 67.29%
================================================================================
