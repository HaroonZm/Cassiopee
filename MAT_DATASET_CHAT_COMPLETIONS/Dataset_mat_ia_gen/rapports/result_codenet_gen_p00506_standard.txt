================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:14:43
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
import math

n = int(sys.stdin.readline())
nums = list(map(int, sys.stdin.readline().split()))

g = nums[0]
for num in nums[1:]:
    g = math.gcd(g, num)

divs = []
i = 1
while i * i <= g:
    if g % i == 0:
        divs.append(i)
        if i != g // i:
            divs.append(g // i)
    i += 1

for d in sorted(divs):
    print(d)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'import' (ID: 561)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.3205606937408447
    2. '.' → logprob: -1.4455606937408447
    3. 'import' → logprob: -4.570560455322266
    4. '\' → logprob: -4.570560455322266
    5. 'newline' → logprob: -5.195560455322266
    6. '<|end|>' → logprob: -5.320560455322266
    7. '
' → logprob: -6.570560455322266
    8. '```' → logprob: -7.070560455322266
    9. '<|end|>' → logprob: -7.195560455322266
    10. '\r' → logprob: -7.195560455322266

Token 4: ' math' (ID: 13324)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.00020771251001860946
    2. 'os' → logprob: -8.500207901000977
    3. ' math' → logprob: -13.375207901000977
    4. ' re' → logprob: -13.750207901000977
    5. '"os' → logprob: -14.250207901000977
    6. ' json' → logprob: -14.750207901000977
    7. '_os' → logprob: -16.375207901000977
    8. ' ' → logprob: -16.500207901000977
    9. ' io' → logprob: -16.625207901000977
    10. '	os' → logprob: -16.875207901000977

Token 5: '

' (ID: 279)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.4576877951622009
    2. '\n' → logprob: -1.8326878547668457
    3. '\' → logprob: -2.3326878547668457
    4. 'import' → logprob: -3.0826878547668457
    5. '```' → logprob: -3.8326878547668457
    6. '
' → logprob: -4.207687854766846
    7. '<|end|>' → logprob: -4.207687854766846
    8. ',' → logprob: -5.582687854766846
    9. '

' → logprob: -5.832687854766846
    10. '<|end|>' → logprob: -6.582687854766846

Token 6: 'n' (ID: 77)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.8189203143119812
    2. '\' → logprob: -1.818920373916626
    3. '```' → logprob: -1.818920373916626
    4. 'import' → logprob: -2.318920373916626
    5. '\n' → logprob: -2.318920373916626
    6. '
' → logprob: -4.318920135498047
    7. 'def' → logprob: -4.693920135498047
    8. ',' → logprob: -5.068920135498047
    9. '`' → logprob: -6.693920135498047
    10. '

' → logprob: -6.693920135498047

Token 7: ' =' (ID: 314)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.0273962020874023
    2. '.' → logprob: -1.4023962020874023
    3. '=' → logprob: -1.5273962020874023
    4. ' =' → logprob: -2.2773962020874023
    5. '_' → logprob: -3.0273962020874023
    6. ')' → logprob: -4.277396202087402
    7. ',' → logprob: -5.527396202087402
    8. 'u' → logprob: -5.652396202087402
    9. '  ' → logprob: -6.652396202087402
    10. 'e' → logprob: -6.902396202087402

Token 8: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.033439356833696365
    2. ' ' → logprob: -3.5334393978118896
    3. 'int' → logprob: -5.6584391593933105
    4. '10' → logprob: -9.533439636230469
    5. ' input' → logprob: -10.033439636230469
    6. '20' → logprob: -11.658439636230469
    7. '1' → logprob: -11.658439636230469
    8. '5' → logprob: -11.658439636230469
    9. '0' → logprob: -11.783439636230469
    10. ' ' → logprob: -11.783439636230469

Token 9: '(sys' (ID: 41042)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -3.0590548703912646e-05
    2. '('' → logprob: -11.125030517578125
    3. '(n' → logprob: -12.625030517578125
    4. ' (' → logprob: -12.750030517578125
    5. '()' → logprob: -12.875030517578125
    6. '(input' → logprob: -13.875030517578125
    7. '(
' → logprob: -14.000030517578125
    8. '("("' → logprob: -14.000030517578125
    9. '(user' → logprob: -14.250030517578125
    10. ''' → logprob: -14.500030517578125

Token 10: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.009369038976728916
    2. '.argv' → logprob: -5.134368896484375
    3. '.stdin' → logprob: -6.009368896484375
    4. '.readline' → logprob: -7.384368896484375
    5. '.)' → logprob: -9.009368896484375
    6. '.input' → logprob: -9.009368896484375
    7. ' .' → logprob: -10.634368896484375
    8. '.read' → logprob: -11.259368896484375
    9. '.')' → logprob: -11.384368896484375
    10. '.import' → logprob: -11.384368896484375

Token 11: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.1502571851015091
    2. '.read' → logprob: -2.150257110595703
    3. '.' → logprob: -3.775257110595703
    4. '.)' → logprob: -9.400257110595703
    5. ')' → logprob: -10.650257110595703
    6. '.Read' → logprob: -12.150257110595703
    7. '.readlines' → logprob: -12.400257110595703
    8. '.READ' → logprob: -13.025257110595703
    9. ' .' → logprob: -13.150257110595703
    10. ').' → logprob: -13.275257110595703

Token 12: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.027673475444316864
    2. '()' → logprob: -4.027673244476318
    3. ')' → logprob: -4.777673244476318
    4. '().' → logprob: -7.152673244476318
    5. '()))' → logprob: -8.902673721313477
    6. '(' → logprob: -9.527673721313477
    7. '())
' → logprob: -10.777673721313477
    8. ' ())' → logprob: -10.777673721313477
    9. '))' → logprob: -11.402673721313477
    10. '()[' → logprob: -11.902673721313477

Token 13: 'nums' (ID: 44465)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.15179018676280975
    2. 'result' → logprob: -3.526790142059326
    3. 's' → logprob: -3.651790142059326
    4. 'x' → logprob: -3.901790142059326
    5. 'data' → logprob: -4.026790142059326
    6. '\n' → logprob: -4.526790142059326
    7. 'if' → logprob: -4.776790142059326
    8. 'a' → logprob: -5.276790142059326
    9. ' for' → logprob: -5.651790142059326
    10. '\' → logprob: -6.151790142059326

Token 14: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.014767199754714966
    2. '.' → logprob: -4.264767169952393
    3. '[:]' → logprob: -8.38976764678955
    4. '[]' → logprob: -9.26476764678955
    5. ')' → logprob: -9.51476764678955
    6. '=' → logprob: -9.88976764678955
    7. '```' → logprob: -10.76476764678955
    8. ' =' → logprob: -11.01476764678955
    9. '[n' → logprob: -11.01476764678955
    10. ']' → logprob: -11.26476764678955

Token 15: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.16955626010894775
    2. 'list' → logprob: -2.669556140899658
    3. ' []' → logprob: -2.794556140899658
    4. ' [' → logprob: -3.919556140899658
    5. '[]' → logprob: -5.669556140899658
    6. ' ' → logprob: -6.919556140899658
    7. '[' → logprob: -7.044556140899658
    8. '[list' → logprob: -8.294556617736816
    9. '[int' → logprob: -10.544556617736816
    10. ' map' → logprob: -10.794556617736816

Token 16: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00015014449309092015
    2. '(range' → logprob: -9.000149726867676
    3. '(

' → logprob: -11.875149726867676
    4. '(
' → logprob: -12.000149726867676
    5. ' (' → logprob: -13.250149726867676
    6. '(.' → logprob: -13.500149726867676
    7. '(np' → logprob: -13.875149726867676
    8. '(nums' → logprob: -14.125149726867676
    9. '("("' → logprob: -14.125149726867676
    10. ')' → logprob: -14.250149726867676

Token 17: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.02093561179935932
    2. '(' → logprob: -4.020935535430908
    3. '(lambda' → logprob: -6.020935535430908
    4. '(str' → logprob: -9.770936012268066
    5. '<int' → logprob: -9.770936012268066
    6. 'int' → logprob: -10.145936012268066
    7. ' (' → logprob: -10.145936012268066
    8. '<|end|>' → logprob: -10.270936012268066
    9. '[int' → logprob: -10.395936012268066
    10. '=int' → logprob: -10.770936012268066

Token 18: ',' (ID: 11)
  Prédit: '(sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(sys' → logprob: -0.004788357764482498
    2. '(' → logprob: -5.379788398742676
    3. '=sys' → logprob: -9.754788398742676
    4. ')' → logprob: -10.254788398742676
    5. '(input' → logprob: -10.879788398742676
    6. 'sys' → logprob: -11.504788398742676
    7. ' (' → logprob: -11.754788398742676
    8. '(
' → logprob: -11.879788398742676
    9. '(system' → logprob: -12.004788398742676
    10. ' sys' → logprob: -12.254788398742676

Token 19: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.20176053047180176
    2. ' sys' → logprob: -1.7017605304718018
    3. '(sys' → logprob: -8.076760292053223
    4. '=sys' → logprob: -10.701760292053223
    5. '	sys' → logprob: -11.701760292053223
    6. 'input' → logprob: -12.826760292053223
    7. ' ' → logprob: -14.076760292053223
    8. ' input' → logprob: -14.201760292053223
    9. ')' → logprob: -14.326760292053223
    10. '.sys' → logprob: -15.451760292053223

Token 20: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.0012332071783021092
    2. '.' → logprob: -7.126233100891113
    3. '.stdout' → logprob: -8.001233100891113
    4. '.readline' → logprob: -9.501233100891113
    5. 'stdin' → logprob: -11.876233100891113
    6. '.argv' → logprob: -12.501233100891113
    7. '(stdin' → logprob: -12.876233100891113
    8. '.std' → logprob: -13.251233100891113
    9. '.stderr' → logprob: -13.376233100891113
    10. '._' → logprob: -14.501233100891113

Token 21: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -1.1517960956552997e-05
    2. '.stdin' → logprob: -12.000011444091797
    3. '.' → logprob: -12.875011444091797
    4. '.readlines' → logprob: -13.375011444091797
    5. '.read' → logprob: -14.125011444091797
    6. '().' → logprob: -14.750011444091797
    7. ').' → logprob: -16.375011444091797
    8. ' .' → logprob: -18.125011444091797
    9. '(stdin' → logprob: -18.250011444091797
    10. '.stdout' → logprob: -19.125011444091797

Token 22: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0005388548015616834
    2. '()' → logprob: -8.25053882598877
    3. '()))' → logprob: -8.62553882598877
    4. '())' → logprob: -9.25053882598877
    5. '()));' → logprob: -14.00053882598877
    6. '(' → logprob: -15.12553882598877
    7. ' ().' → logprob: -15.25053882598877
    8. '.readline' → logprob: -15.50053882598877
    9. '())))' → logprob: -15.50053882598877
    10. ')' → logprob: -16.750539779663086

Token 23: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.12773333489894867
    2. 'strip' → logprob: -2.1277332305908203
    3. 'rstrip' → logprob: -7.12773323059082
    4. ' split' → logprob: -13.25273323059082
    5. ' strip' → logprob: -14.87773323059082
    6. 'read' → logprob: -15.75273323059082
    7. '(split' → logprob: -16.12773323059082
    8. 'spl' → logprob: -18.12773323059082
    9. 'rs' → logprob: -18.75273323059082
    10. 'replace' → logprob: -19.37773323059082

Token 24: '()))

' (ID: 125972)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.13102489709854126
    2. '()))' → logprob: -2.3810248374938965
    3. ')' → logprob: -3.6310248374938965
    4. '())' → logprob: -5.7560248374938965
    5. '()' → logprob: -7.7560248374938965
    6. '(' → logprob: -8.381025314331055
    7. ')))' → logprob: -10.631025314331055
    8. '()))
' → logprob: -12.756025314331055
    9. ' ))' → logprob: -13.006025314331055
    10. ''))' → logprob: -13.256025314331055

Token 25: 'g' (ID: 70)
  Prédit: 'nums'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nums' → logprob: -0.42728546261787415
    2. 'result' → logprob: -2.1772854328155518
    3. 'dp' → logprob: -3.1772854328155518
    4. 's' → logprob: -3.4272854328155518
    5. 'total' → logprob: -3.5522854328155518
    6. 'count' → logprob: -3.5522854328155518
    7. 'if' → logprob: -3.9272854328155518
    8. 'max' → logprob: -4.052285671234131
    9. 'for' → logprob: -4.302285671234131
    10. 'answer' → logprob: -4.552285671234131

Token 26: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3593941628932953
    2. '=' → logprob: -1.3593941926956177
    3. '_' → logprob: -3.484394073486328
    4. 'cd' → logprob: -5.359394073486328
    5. '=g' → logprob: -5.484394073486328
    6. ' ' → logprob: -5.859394073486328
    7. '_g' → logprob: -7.484394073486328
    8. '=[]' → logprob: -8.234394073486328
    9. '_cd' → logprob: -8.484394073486328
    10. '_=' → logprob: -8.609394073486328

Token 27: ' nums' (ID: 18117)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.6971167922019958
    2. ' nums' → logprob: -1.5721168518066406
    3. 'math' → logprob: -1.6971168518066406
    4. 'nums' → logprob: -2.1971168518066406
    5. ' ' → logprob: -10.57211685180664
    6. '(nums' → logprob: -12.19711685180664
    7. '0' → logprob: -12.94711685180664
    8. '(math' → logprob: -13.19711685180664
    9. 'num' → logprob: -13.82211685180664
    10. ' maths' → logprob: -14.07211685180664

Token 28: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5816022157669067
    2. '[:]' → logprob: -0.8316022157669067
    3. '[:' → logprob: -5.581602096557617
    4. '.copy' → logprob: -6.331602096557617
    5. '[::-' → logprob: -9.831602096557617
    6. ')' → logprob: -11.456602096557617
    7. ' [' → logprob: -12.331602096557617
    8. '[:-' → logprob: -12.581602096557617
    9. '[i' → logprob: -12.581602096557617
    10. '[]' → logprob: -12.706602096557617

Token 29: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00011117222311440855
    2. '-' → logprob: -9.12511157989502
    3. ' ' → logprob: -13.50011157989502
    4. ' -' → logprob: -14.37511157989502
    5. '1' → logprob: -15.50011157989502
    6. '])' → logprob: -17.375110626220703
    7. ']' → logprob: -17.500110626220703
    8. '[' → logprob: -17.625110626220703
    9. '   ' → logprob: -18.250110626220703
    10. ':' → logprob: -19.062610626220703

Token 30: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06520359963178635
    2. ' )' → logprob: -2.8152036666870117
    3. ',' → logprob: -6.440203666687012
    4. ',)' → logprob: -6.565203666687012
    5. ' ,' → logprob: -8.690203666687012
    6. ' ' → logprob: -11.065203666687012
    7. '))' → logprob: -12.190203666687012
    8. ')
' → logprob: -12.315203666687012
    9. ' )
' → logprob: -12.315203666687012
    10. '),' → logprob: -12.440203666687012

Token 31: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.07230602949857712
    2. ' for' → logprob: -3.197305917739868
    3. '<|end|>' → logprob: -3.572305917739868
    4. '<|end|>' → logprob: -8.447305679321289
    5. ' ' → logprob: -8.572305679321289
    6. '
' → logprob: -8.697305679321289
    7. ')' → logprob: -9.447305679321289
    8. '	for' → logprob: -10.072305679321289
    9. ' 
' → logprob: -11.197305679321289
    10. '.' → logprob: -11.447305679321289

Token 32: ' num' (ID: 2269)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.3186299204826355
    2. ' num' → logprob: -1.3186299800872803
    3. ' ' → logprob: -6.193629741668701
    4. 'num' → logprob: -6.568629741668701
    5. 'i' → logprob: -6.818629741668701
    6. ' x' → logprob: -7.193629741668701
    7. ' n' → logprob: -11.44363021850586
    8. '_' → logprob: -11.56863021850586
    9. '	num' → logprob: -11.69363021850586
    10. ' _' → logprob: -11.81863021850586

Token 33: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.023440899327397346
    2. 'in' → logprob: -3.7734408378601074
    3. ' ' → logprob: -8.773441314697266
    4. 's' → logprob: -10.648441314697266
    5. '	in' → logprob: -11.898441314697266
    6. ' ' → logprob: -13.523441314697266
    7. ' i' → logprob: -13.648441314697266
    8. 'n' → logprob: -13.898441314697266
    9. 'g' → logprob: -14.023441314697266
    10. ',' → logprob: -14.148441314697266

Token 34: ' nums' (ID: 18117)
  Prédit: ' nums'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nums' → logprob: -0.061980459839105606
    2. 'nums' → logprob: -2.8119804859161377
    3. ' ' → logprob: -12.061980247497559
    4. '(nums' → logprob: -12.311980247497559
    5. '_nums' → logprob: -13.311980247497559
    6. 'Nums' → logprob: -14.936980247497559
    7. 's' → logprob: -15.686980247497559
    8. 'num' → logprob: -16.311981201171875
    9. ' ' → logprob: -16.311981201171875
    10. '  ' → logprob: -16.436981201171875

Token 35: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.20175683498382568
    2. ':' → logprob: -1.7017568349838257
    3. ' :' → logprob: -8.076756477355957
    4. 'g' → logprob: -11.576756477355957
    5. '[g' → logprob: -12.076756477355957
    6. ':
' → logprob: -12.076756477355957
    7. '1' → logprob: -12.576756477355957
    8. '[:' → logprob: -13.951756477355957
    9. '：' → logprob: -13.951756477355957
    10. ':g' → logprob: -14.076756477355957

Token 36: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0040854052640497684
    2. '):' → logprob: -6.004085540771484
    3. '[' → logprob: -7.129085540771484
    4. ':' → logprob: -7.504085540771484
    5. ' ' → logprob: -8.504085540771484
    6. ')' → logprob: -10.629085540771484
    7. ']:' → logprob: -11.879085540771484
    8. ' ):' → logprob: -11.879085540771484
    9. ']):' → logprob: -12.379085540771484
    10. ' :' → logprob: -12.879085540771484

Token 37: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04937309771776199
    2. '):' → logprob: -3.049373149871826
    3. ']:' → logprob: -7.924373149871826
    4. ' :' → logprob: -8.799372673034668
    5. '():' → logprob: -9.799372673034668
    6. ' ):' → logprob: -9.799372673034668
    7. ':**' → logprob: -10.174372673034668
    8. '>:' → logprob: -10.424372673034668
    9. '}:' → logprob: -10.674372673034668
    10. 's' → logprob: -10.924372673034668

Token 38: ']:
' (ID: 22152)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.6843329071998596
    2. ':' → logprob: -0.9343329071998596
    3. ']:' → logprob: -2.309332847595215
    4. '):
' → logprob: -7.184332847595215
    5. ' ):' → logprob: -7.309332847595215
    6. ' :' → logprob: -7.434332847595215
    7. '}:' → logprob: -8.309332847595215
    8. 'g' → logprob: -8.559332847595215
    9. ')' → logprob: -8.684332847595215
    10. ' ' → logprob: -8.809332847595215

Token 39: '   ' (ID: 271)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.22295337915420532
    2. ' g' → logprob: -2.3479533195495605
    3. '   ' → logprob: -2.7229533195495605
    4. ' ' → logprob: -3.8479533195495605
    5. ' gcd' → logprob: -4.8479533195495605
    6. ' 
' → logprob: -5.5979533195495605
    7. '	g' → logprob: -6.3479533195495605
    8. '    ' → logprob: -7.2229533195495605
    9. '  ' → logprob: -7.3479533195495605
    10. '    
' → logprob: -7.5979533195495605

Token 40: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' (adapté à ' g') → logprob: -0.4380296766757965
    2. ' g' → logprob: -1.0630296468734741
    3. '   ' → logprob: -5.063029766082764
    4. '    ' → logprob: -7.313029766082764
    5. ' 
' → logprob: -7.438029766082764
    6. ' ' → logprob: -7.813029766082764
    7. '	g' → logprob: -7.938029766082764
    8. 'import' → logprob: -8.313029289245605
    9. '       ' → logprob: -8.563029289245605
    10. '    
' → logprob: -8.813029289245605

Token 41: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.014174560084939003
    2. '=' → logprob: -4.264174461364746
    3. ' ' → logprob: -11.514174461364746
    4. ' *=' → logprob: -15.014174461364746
    5. 'cd' → logprob: -15.389174461364746
    6. ' |=' → logprob: -16.139175415039062
    7. '=int' → logprob: -16.139175415039062
    8. ' ' → logprob: -16.639175415039062
    9. ' ^=' → logprob: -17.514175415039062
    10. '=g' → logprob: -17.514175415039062

Token 42: ' math' (ID: 13324)
  Prédit: ' math'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.12693031132221222
    2. 'math' → logprob: -2.1269302368164062
    3. ' ' → logprob: -13.751930236816406
    4. '(math' → logprob: -13.876930236816406
    5. '.math' → logprob: -16.501930236816406
    6. 'Math' → logprob: -16.626930236816406
    7. ' ' → logprob: -17.376930236816406
    8. 'g' → logprob: -17.376930236816406
    9. '_math' → logprob: -17.376930236816406
    10. '/math' → logprob: -17.876930236816406

Token 43: '.g' (ID: 1940)
  Prédit: '.g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.g' → logprob: -0.00044318195432424545
    2. '.' → logprob: -7.750442981719971
    3. '`.' → logprob: -13.375443458557129
    4. '.f' → logprob: -13.500443458557129
    5. ' .' → logprob: -13.500443458557129
    6. '.sqrt' → logprob: -13.625443458557129
    7. '.ceil' → logprob: -13.625443458557129
    8. 'g' → logprob: -14.250443458557129
    9. '".' → logprob: -14.250443458557129
    10. '.floor' → logprob: -14.375443458557129

Token 44: 'cd' (ID: 8301)
  Prédit: 'cd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cd' → logprob: -8.113290095934644e-05
    2. 'cf' → logprob: -10.500081062316895
    3. 'g' → logprob: -10.625081062316895
    4. '.g' → logprob: -11.375081062316895
    5. 'r' → logprob: -12.250081062316895
    6. 'cdf' → logprob: -12.375081062316895
    7. 'cdn' → logprob: -13.250081062316895
    8. 'CD' → logprob: -14.125081062316895
    9. '```' → logprob: -14.250081062316895
    10. 'c' → logprob: -14.250081062316895

Token 45: '(g' (ID: 7791)
  Prédit: '(g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(g' → logprob: -0.0009115827269852161
    2. '(' → logprob: -7.000911712646484
    3. 'g' → logprob: -16.375911712646484
    4. ' (' → logprob: -17.250911712646484
    5. '(
' → logprob: -17.750911712646484
    6. ')' → logprob: -18.375911712646484
    7. '(n' → logprob: -19.375911712646484
    8. '((' → logprob: -19.625911712646484
    9. '(s' → logprob: -20.125911712646484
    10. '()' → logprob: -20.125911712646484

Token 46: ',' (ID: 11)
  Prédit: ',num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',num' → logprob: -0.16022981703281403
    2. ',' → logprob: -1.9102298021316528
    3. ',n' → logprob: -13.035229682922363
    4. ' ,' → logprob: -13.035229682922363
    5. '(num' → logprob: -14.160229682922363
    6. 'num' → logprob: -15.035229682922363
    7. ',g' → logprob: -16.03523063659668
    8. ',
' → logprob: -17.53523063659668
    9. ',int' → logprob: -17.91023063659668
    10. ' num' → logprob: -17.91023063659668

Token 47: ' num' (ID: 2269)
  Prédit: ' num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' num' → logprob: -0.3132624924182892
    2. 'num' → logprob: -1.3132624626159668
    3. ' ' → logprob: -15.063262939453125
    4. ')' → logprob: -15.438262939453125
    5. ' )' → logprob: -16.688262939453125
    6. ',num' → logprob: -16.688262939453125
    7. '(num' → logprob: -16.813262939453125
    8. '	num' → logprob: -16.938262939453125
    9. ' ' → logprob: -17.063262939453125
    10. '[num' → logprob: -18.188262939453125

Token 48: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1472419600977446e-06
    2. ' )' → logprob: -14.500000953674316
    3. '))' → logprob: -14.875000953674316
    4. ')
' → logprob: -15.500000953674316
    5. ')`' → logprob: -16.875001907348633
    6. '),' → logprob: -18.500001907348633
    7. ')}' → logprob: -19.250001907348633
    8. ')#' → logprob: -19.250001907348633
    9. '}' → logprob: -19.500001907348633
    10. ')))' → logprob: -19.625001907348633

Token 49: 'div' (ID: 862)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00019030878320336342
    2. '
' → logprob: -9.750190734863281
    3. 'if' → logprob: -10.125190734863281
    4. '\n' → logprob: -10.875190734863281
    5. 'for' → logprob: -11.000190734863281
    6. 'g' → logprob: -11.375190734863281
    7. '```' → logprob: -11.500190734863281
    8. ' 
' → logprob: -11.875190734863281
    9. ' print' → logprob: -12.000190734863281
    10. 'n' → logprob: -12.250190734863281

Token 50: 's' (ID: 82)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.01648860238492489
    2. 's' → logprob: -4.641488552093506
    3. 'iders' → logprob: -5.766488552093506
    4. 'isible' → logprob: -6.891488552093506
    5. '```' → logprob: -7.516488552093506
    6. '=' → logprob: -7.891488552093506
    7. 'es' → logprob: -8.141489028930664
    8. '``' → logprob: -9.141489028930664
    9. 'isor' → logprob: -9.141489028930664
    10. 'iors' → logprob: -9.266489028930664

Token 51: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.46142056584358215
    2. ' =' → logprob: -1.3364205360412598
    3. '_' → logprob: -2.9614205360412598
    4. 'is' → logprob: -3.3364205360412598
    5. 'ors' → logprob: -4.96142053604126
    6. 'e' → logprob: -6.21142053604126
    7. 'ision' → logprob: -6.46142053604126
    8. '=[]' → logprob: -6.46142053604126
    9. '```' → logprob: -6.83642053604126
    10. 'isible' → logprob: -6.96142053604126

Token 52: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.015865426510572433
    2. '[' → logprob: -4.515865325927734
    3. ' []' → logprob: -5.640865325927734
    4. 'set' → logprob: -7.390865325927734
    5. '[g' → logprob: -8.140865325927734
    6. ' [' → logprob: -8.765865325927734
    7. '[i' → logprob: -9.765865325927734
    8. '[]
' → logprob: -10.390865325927734
    9. '[int' → logprob: -10.765865325927734
    10. ' set' → logprob: -11.265865325927734

Token 53: 'i' (ID: 72)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.011063147336244583
    2. 'i' → logprob: -4.511063098907471
    3. ' for' → logprob: -12.011063575744629
    4. 'd' → logprob: -12.261063575744629
    5. 'import' → logprob: -13.011063575744629
    6. 'limit' → logprob: -14.761063575744629
    7. 'f' → logprob: -14.886063575744629
    8. 'p' → logprob: -15.261063575744629
    9. 'num' → logprob: -15.261063575744629
    10. '2' → logprob: -15.261063575744629

Token 54: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08969026803970337
    2. '=' → logprob: -2.4646902084350586
    3. ' ' → logprob: -7.714690208435059
    4. 'n' → logprob: -8.214690208435059
    5. 'nt' → logprob: -10.589690208435059
    6. ' n' → logprob: -12.589690208435059
    7. 'd' → logprob: -13.589690208435059
    8. 's' → logprob: -13.839690208435059
    9. 't' → logprob: -14.339690208435059
    10. 'f' → logprob: -14.839690208435059

Token 55: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.010782158002257347
    2. '2' → logprob: -4.760782241821289
    3. ' ' → logprob: -6.135782241821289
    4. '0' → logprob: -14.510782241821289
    5. 'g' → logprob: -14.635782241821289
    6. '```' → logprob: -16.19828224182129
    7. ' g' → logprob: -16.88578224182129
    8. '  ' → logprob: -17.19828224182129
    9. '   ' → logprob: -17.38578224182129
    10. '１' → logprob: -17.51078224182129

Token 56: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0017049367306753993
    2. '2' → logprob: -6.376705169677734
    3. ' ' → logprob: -13.001705169677734
    4. 'g' → logprob: -15.126705169677734
    5. '0' → logprob: -15.626705169677734
    6. '```' → logprob: -18.376705169677734
    7. '１' → logprob: -18.501705169677734
    8. 'int' → logprob: -18.626705169677734
    9. '(' → logprob: -19.064205169677734
    10. 'i' → logprob: -19.251705169677734

Token 57: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 58: 'while' (ID: 7032)
  Prédit: 'while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.0803305059671402
    2. ' while' → logprob: -2.7053306102752686
    3. '
' → logprob: -4.7053303718566895
    4. ' 
' → logprob: -7.8303303718566895
    5. '<|end|>' → logprob: -7.8303303718566895
    6. ' ' → logprob: -8.205330848693848
    7. '	while' → logprob: -10.080330848693848
    8. 'While' → logprob: -10.455330848693848
    9. '```' → logprob: -10.580330848693848
    10. ',' → logprob: -10.580330848693848

Token 59: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.062034230679273605
    2. 'i' → logprob: -2.8120341300964355
    3. ' ' → logprob: -9.812034606933594
    4. '	i' → logprob: -11.562034606933594
    5. ' ' → logprob: -13.937034606933594
    6. '(i' → logprob: -14.437034606933594
    7. 'int' → logprob: -15.062034606933594
    8. ' int' → logprob: -15.812034606933594
    9. ' math' → logprob: -16.062034606933594
    10. ' (' → logprob: -16.562034606933594

Token 60: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.17597059905529022
    2. ' <=' → logprob: -2.6759705543518066
    3. '*i' → logprob: -3.0509705543518066
    4. '*' → logprob: -3.3009705543518066
    5. '<=' → logprob: -4.800970554351807
    6. '**' → logprob: -9.550971031188965
    7. ' ' → logprob: -9.925971031188965
    8. ' **' → logprob: -11.800971031188965
    9. 'i' → logprob: -12.925971031188965
    10. ' i' → logprob: -13.425971031188965

Token 61: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00018125296628568321
    2. ' i' → logprob: -8.625181198120117
    3. '*i' → logprob: -14.250181198120117
    4. '	i' → logprob: -14.750181198120117
    5. '1' → logprob: -16.500181198120117
    6. ' ' → logprob: -16.625181198120117
    7. '2' → logprob: -16.750181198120117
    8. '_i' → logprob: -16.937681198120117
    9. '(i' → logprob: -17.062681198120117
    10. 'div' → logprob: -17.312681198120117

Token 62: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.10022090375423431
    2. '<=' → logprob: -2.3502209186553955
    3. ' ' → logprob: -11.850220680236816
    4. '=' → logprob: -13.600220680236816
    5. '<|end|>' → logprob: -13.600220680236816
    6. ' <' → logprob: -13.850220680236816
    7. ' ≤' → logprob: -13.975220680236816
    8. ')<=' → logprob: -14.100220680236816
    9. '<' → logprob: -14.475220680236816
    10. ' ' → logprob: -14.850220680236816

Token 63: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.1603224277496338
    2. ' g' → logprob: -1.9103224277496338
    3. 'n' → logprob: -9.910322189331055
    4. ' n' → logprob: -10.285322189331055
    5. ' ' → logprob: -11.535322189331055
    6. '	g' → logprob: -13.160322189331055
    7. '   ' → logprob: -14.035322189331055
    8. '  ' → logprob: -14.660322189331055
    9. '    ' → logprob: -15.597822189331055
    10. 'num' → logprob: -15.785322189331055

Token 64: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.001966577721759677
    2. ':
' → logprob: -6.25196647644043
    3. ' :' → logprob: -10.25196647644043
    4. ':
' → logprob: -13.75196647644043
    5. ' and' → logprob: -14.12696647644043
    6. ' :
' → logprob: -14.87696647644043
    7. ':i' → logprob: -15.75196647644043
    8. '):' → logprob: -16.50196647644043
    9. ':

' → logprob: -16.50196647644043
    10. 'and' → logprob: -16.75196647644043

Token 65: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.013413727283477783
    2. ':
' → logprob: -4.513413906097412
    3. ' :' → logprob: -6.263413906097412
    4. '   ' → logprob: -8.263413429260254
    5. ' :
' → logprob: -9.013413429260254
    6. ' ' → logprob: -9.888413429260254
    7. ' and' → logprob: -11.513413429260254
    8. ' if' → logprob: -12.638413429260254
    9. ':

' → logprob: -13.138413429260254
    10. '<|end|>' → logprob: -13.388413429260254

Token 66: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.02882331609725952
    2. 'if' (adapté à ' if') → logprob: -3.9038233757019043
    3. ' ' → logprob: -5.278823375701904
    4. '   ' → logprob: -5.903823375701904
    5. ' 
' → logprob: -8.653822898864746
    6. '    ' → logprob: -8.903822898864746
    7. ' i' → logprob: -9.778822898864746
    8. ' ' → logprob: -11.153822898864746
    9. ' :
' → logprob: -11.778822898864746
    10. ':
' → logprob: -12.403822898864746

Token 67: ' g' (ID: 329)
  Prédit: ' g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' g' → logprob: -0.1602269560098648
    2. 'g' → logprob: -1.9102269411087036
    3. ' ' → logprob: -13.535226821899414
    4. ' ' → logprob: -14.285226821899414
    5. '	g' → logprob: -14.910226821899414
    6. ' (' → logprob: -15.535226821899414
    7. '(g' → logprob: -15.910226821899414
    8. ' i' → logprob: -16.910226821899414
    9. '<|end|>' → logprob: -17.035226821899414
    10. '   ' → logprob: -17.285226821899414

Token 68: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.38691896200180054
    2. '%' → logprob: -1.1369190216064453
    3. '%i' → logprob: -10.136919021606445
    4. ' ' → logprob: -12.511919021606445
    5. ' ' → logprob: -12.511919021606445
    6. '%e' → logprob: -15.386919021606445
    7. '%s' → logprob: -15.761919021606445
    8. '%d' → logprob: -16.011919021606445
    9. '%x' → logprob: -16.136919021606445
    10. '％' → logprob: -16.261919021606445

Token 69: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.014164221473038197
    2. ' i' → logprob: -4.264164447784424
    3. '	i' → logprob: -14.514163970947266
    4. ' ' → logprob: -15.764163970947266
    5. '<|end|>' → logprob: -17.389163970947266
    6. '   ' → logprob: -18.264163970947266
    7. '*i' → logprob: -19.264163970947266
    8. '  ' → logprob: -19.389163970947266
    9. '<|end|>' → logprob: -19.514163970947266
    10. ' ' → logprob: -19.514163970947266

Token 70: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.2014446258544922
    2. '==' → logprob: -1.7014446258544922
    3. '=' → logprob: -10.701444625854492
    4. ' ' → logprob: -12.576444625854492
    5. ' =' → logprob: -13.201444625854492
    6. '===' → logprob: -13.826444625854492
    7. '0' → logprob: -13.826444625854492
    8. ')==' → logprob: -14.076444625854492
    9. ' ' → logprob: -14.826444625854492
    10. ']==' → logprob: -15.951444625854492

Token 71: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0008045066497288644
    2. ' ' → logprob: -7.125804424285889
    3. '۰' → logprob: -19.000804901123047
    4. '   ' → logprob: -19.250804901123047
    5. ' ' → logprob: -19.750804901123047
    6. '<|end|>' → logprob: -20.625804901123047
    7. '```' → logprob: -20.625804901123047
    8. '  ' → logprob: -21.125804901123047
    9. '٠' → logprob: -21.500804901123047
    10. '０' → logprob: -21.938304901123047

Token 72: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00038014890742488205
    2. ' ' → logprob: -7.875380039215088
    3. '   ' → logprob: -18.12537956237793
    4. '۰' → logprob: -19.12537956237793
    5. '  ' → logprob: -19.37537956237793
    6. ' ' → logprob: -20.12537956237793
    7. '    ' → logprob: -20.68787956237793
    8. '	' → logprob: -20.87537956237793
    9. '０' → logprob: -21.00037956237793
    10. '00' → logprob: -21.37537956237793

Token 73: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0011858227662742138
    2. ':
' → logprob: -6.751185894012451
    3. '):' → logprob: -12.001185417175293
    4. ' :' → logprob: -12.501185417175293
    5. '   ' → logprob: -12.501185417175293
    6. ':
' → logprob: -14.251185417175293
    7. '       ' → logprob: -14.251185417175293
    8. '):
' → logprob: -15.501185417175293
    9. 'div' → logprob: -15.626185417175293
    10. ':

' → logprob: -16.37618637084961

Token 74: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2582513391971588
    2. '   ' → logprob: -1.7582513093948364
    3. 'div' → logprob: -3.258251428604126
    4. ' div' → logprob: -4.133251190185547
    5. '	div' → logprob: -7.508251190185547
    6. '    ' → logprob: -10.008251190185547
    7. '```' → logprob: -10.508251190185547
    8. '[' → logprob: -10.633251190185547
    9. ' divis' → logprob: -11.133251190185547
    10. ' ' → logprob: -11.383251190185547

Token 75: ' div' (ID: 4223)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'div' (adapté à ' div') → logprob: -0.6932723522186279
    2. ' div' → logprob: -0.6932723522186279
    3. '   ' → logprob: -9.318272590637207
    4. '	div' → logprob: -10.568272590637207
    5. '       ' → logprob: -11.818272590637207
    6. '
' → logprob: -13.693272590637207
    7. ' if' → logprob: -14.443272590637207
    8. '           ' → logprob: -15.443272590637207
    9. ' divis' → logprob: -15.818272590637207
    10. '<div' → logprob: -15.943272590637207

Token 76: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -3.128163257315464e-07
    2. '       ' → logprob: -16.125
    3. '   ' → logprob: -16.875
    4. 'div' → logprob: -17.625
    5. 'is' → logprob: -17.875
    6. ' s' → logprob: -17.875
    7. ''s' → logprob: -18.125
    8. 'spl' → logprob: -19.0
    9. '`s' → logprob: -19.25
    10. '```' → logprob: -19.75

Token 77: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.011056660674512386
    2. '.' → logprob: -4.511056423187256
    3. '.ap' → logprob: -12.511056900024414
    4. '.app' → logprob: -13.011056900024414
    5. '.extend' → logprob: -13.261056900024414
    6. '.Append' → logprob: -14.636056900024414
    7. 'append' → logprob: -15.261056900024414
    8. ' .' → logprob: -15.386056900024414
    9. '​.' → logprob: -15.886056900024414
    10. '.py' → logprob: -16.011056900024414

Token 78: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -6.2729995988775045e-06
    2. '(' → logprob: -12.000006675720215
    3. '(
' → logprob: -19.6250057220459
    4. ' (' → logprob: -20.7500057220459
    5. 'i' → logprob: -21.1250057220459
    6. '(I' → logprob: -21.7500057220459
    7. '(ii' → logprob: -21.8750057220459
    8. '((' → logprob: -22.7500057220459
    9. '(x' → logprob: -23.1250057220459
    10. '(a' → logprob: -23.3750057220459

Token 79: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.11347892135381699
    2. ')' → logprob: -2.238478899002075
    3. ')
' → logprob: -8.363478660583496
    4. '   ' → logprob: -8.363478660583496
    5. '
' → logprob: -8.988478660583496
    6. ')

' → logprob: -11.238478660583496
    7. ' )
' → logprob: -11.613478660583496
    8. ' ' → logprob: -12.488478660583496
    9. '```' → logprob: -12.488478660583496
    10. '       ' → logprob: -12.613478660583496

Token 80: '       ' (ID: 309)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.010284423828125
    2. '       ' → logprob: -1.135284423828125
    3. ' if' → logprob: -1.385284423828125
    4. '        
' → logprob: -3.385284423828125
    5. '   ' → logprob: -4.260284423828125
    6. ' 
' → logprob: -4.760284423828125
    7. '    
' → logprob: -5.760284423828125
    8. '
' → logprob: -5.885284423828125
    9. '        ' → logprob: -7.760284423828125
    10. ' ' → logprob: -8.135284423828125

Token 81: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0011791547294706106
    2. ' if' → logprob: -6.751179218292236
    3. '       ' → logprob: -11.751178741455078
    4. 'div' → logprob: -14.876178741455078
    5. '        
' → logprob: -15.251178741455078
    6. '
' → logprob: -15.501178741455078
    7. '           ' → logprob: -16.251178741455078
    8. '```' → logprob: -16.251178741455078
    9. ' 
' → logprob: -16.876178741455078
    10. '	if' → logprob: -17.001178741455078

Token 82: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.2519555985927582
    2. 'i' → logprob: -1.5019556283950806
    3. ' g' → logprob: -11.00195598602295
    4. 'g' → logprob: -12.12695598602295
    5. ' ' → logprob: -12.87695598602295
    6. '   ' → logprob: -14.25195598602295
    7. '    ' → logprob: -15.00195598602295
    8. '	i' → logprob: -15.00195598602295
    9. '  ' → logprob: -15.62695598602295
    10. ' ' → logprob: -15.75195598602295

Token 83: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.3693878650665283
    2. ' !=' → logprob: -1.2443878650665283
    3. '*' → logprob: -4.119387626647949
    4. ' *' → logprob: -5.869387626647949
    5. '*i' → logprob: -6.494387626647949
    6. '!==' → logprob: -10.24438762664795
    7. ' i' → logprob: -10.74438762664795
    8. ' ' → logprob: -10.74438762664795
    9. '()!=' → logprob: -10.86938762664795
    10. ')!=' → logprob: -10.99438762664795

Token 84: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.04859418421983719
    2. ' g' → logprob: -3.0485942363739014
    3. ' ' → logprob: -12.29859447479248
    4. '	g' → logprob: -13.92359447479248
    5. '   ' → logprob: -14.42359447479248
    6. '  ' → logprob: -15.42359447479248
    7. ' ' → logprob: -15.54859447479248
    8. '(g' → logprob: -15.79859447479248
    9. 'i' → logprob: -16.423593521118164
    10. '1' → logprob: -16.798593521118164

Token 85: ' //' (ID: 602)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.011377071030437946
    2. ' //' → logprob: -4.511376857757568
    3. '/i' → logprob: -8.386377334594727
    4. ' ' → logprob: -9.886377334594727
    5. ' ' → logprob: -11.136377334594727
    6. '/' → logprob: -11.261377334594727
    7. '```' → logprob: -11.261377334594727
    8. '`' → logprob: -12.636377334594727
    9. '#' → logprob: -13.511377334594727
    10. 'i' → logprob: -13.636377334594727

Token 86: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0015024791937321424
    2. ' i' → logprob: -6.501502513885498
    3. '   ' → logprob: -16.501502990722656
    4. '	i' → logprob: -16.626502990722656
    5. ' ' → logprob: -17.376502990722656
    6. '  ' → logprob: -19.376502990722656
    7. ' ' → logprob: -20.376502990722656
    8. '[i' → logprob: -20.751502990722656
    9. '```' → logprob: -21.251502990722656
    10. '    ' → logprob: -21.876502990722656

Token 87: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.011960066854953766
    2. ':
' → logprob: -4.511960029602051
    3. '):' → logprob: -7.636960029602051
    4. '):
' → logprob: -9.13696002960205
    5. '   ' → logprob: -9.51196002960205
    6. ' and' → logprob: -9.76196002960205
    7. '       ' → logprob: -9.76196002960205
    8. ':
' → logprob: -9.76196002960205
    9. ',' → logprob: -11.01196002960205
    10. 'div' → logprob: -11.26196002960205

Token 88: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07398904860019684
    2. ' div' → logprob: -2.698989152908325
    3. 'div' → logprob: -6.198988914489746
    4. '           ' → logprob: -6.573988914489746
    5. '	div' → logprob: -8.073988914489746
    6. ' ' → logprob: -8.698988914489746
    7. '```' → logprob: -9.948988914489746
    8. '   ' → logprob: -9.948988914489746
    9. '(div' → logprob: -11.698988914489746
    10. '_div' → logprob: -11.948988914489746

Token 89: ' div' (ID: 4223)
  Prédit: ' div'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' div' → logprob: -0.011055483482778072
    2. 'div' (adapté à ' div') → logprob: -4.5110554695129395
    3. '       ' → logprob: -12.761055946350098
    4. '	div' → logprob: -12.886055946350098
    5. '           ' → logprob: -13.511055946350098
    6. ' ' → logprob: -15.386055946350098
    7. ' divis' → logprob: -15.511055946350098
    8. '```' → logprob: -15.636055946350098
    9. '   ' → logprob: -16.01105499267578
    10. '    ' → logprob: -17.26105499267578

Token 90: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -4.320199877838604e-07
    2. '```' → logprob: -15.875
    3. 'div' → logprob: -16.75
    4. '.append' → logprob: -17.125
    5. '   ' → logprob: -17.25
    6. 'append' → logprob: -17.5
    7. '`s' → logprob: -17.875
    8. 'iv' → logprob: -18.0
    9. 'с' → logprob: -18.125
    10. '
' → logprob: -18.25

Token 91: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.011073173955082893
    2. '.' → logprob: -4.511073112487793
    3. '.extend' → logprob: -10.886073112487793
    4. ' .' → logprob: -13.261073112487793
    5. '.app' → logprob: -13.386073112487793
    6. '.setdefault' → logprob: -14.136073112487793
    7. '.add' → logprob: -14.386073112487793
    8. '.py' → logprob: -14.636073112487793
    9. '`.' → logprob: -15.261073112487793
    10. '           ' → logprob: -15.261073112487793

Token 92: '(g' (ID: 7791)
  Prédit: '(g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(g' → logprob: -0.0003357006062287837
    2. '(' → logprob: -8.000335693359375
    3. 'g' → logprob: -16.000335693359375
    4. '(
' → logprob: -16.625335693359375
    5. '((' → logprob: -18.500335693359375
    6. '(i' → logprob: -18.750335693359375
    7. ' (' → logprob: -18.875335693359375
    8. '	g' → logprob: -20.125335693359375
    9. ' g' → logprob: -21.125335693359375
    10. '(

' → logprob: -21.125335693359375

Token 93: ' //' (ID: 602)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.22544334828853607
    2. ' //' → logprob: -1.6004433631896973
    3. ' ' → logprob: -11.600442886352539
    4. ' ' → logprob: -11.725442886352539
    5. '/' → logprob: -12.350442886352539
    6. '/i' → logprob: -12.475442886352539
    7. '	' → logprob: -13.600442886352539
    8. ' /' → logprob: -13.975442886352539
    9. '//=' → logprob: -14.100442886352539
    10. '```' → logprob: -14.225442886352539

Token 94: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0028061794582754374
    2. ' i' → logprob: -5.877806186676025
    3. ' ' → logprob: -14.127805709838867
    4. '	i' → logprob: -14.877805709838867
    5. '   ' → logprob: -15.752805709838867
    6. '  ' → logprob: -17.127805709838867
    7. '_i' → logprob: -18.252805709838867
    8. '(i' → logprob: -18.377805709838867
    9. '```' → logprob: -18.752805709838867
    10. '    ' → logprob: -19.252805709838867

Token 95: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1699286848306656
    2. '   ' → logprob: -2.169928789138794
    3. ')
' → logprob: -3.169928789138794
    4. ')
' → logprob: -10.044928550720215
    5. ')i' → logprob: -10.294928550720215
    6. '       ' → logprob: -13.294928550720215
    7. ')

' → logprob: -14.419928550720215
    8. ')\' → logprob: -14.419928550720215
    9. ' )' → logprob: -14.544928550720215
    10. ' ' → logprob: -14.669928550720215

Token 96: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -9.253090865968261e-06
    2. 'i' → logprob: -12.500009536743164
    3. '    
' → logprob: -13.000009536743164
    4. '
' → logprob: -13.500009536743164
    5. ' i' → logprob: -13.625009536743164
    6. '       ' → logprob: -14.875009536743164
    7. '```' → logprob: -16.500009536743164
    8. '   ' → logprob: -17.250009536743164
    9. '        
' → logprob: -17.500009536743164
    10. '\' → logprob: -17.875009536743164

Token 97: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.43289709091186523
    2. '   ' → logprob: -1.4328970909118652
    3. ' i' → logprob: -2.1828970909118652
    4. ' ' → logprob: -11.057897567749023
    5. '  ' → logprob: -11.682897567749023
    6. '
' → logprob: -12.182897567749023
    7. '	i' → logprob: -12.307897567749023
    8. ' 
' → logprob: -12.807897567749023
    9. '    
' → logprob: -13.057897567749023
    10. '_i' → logprob: -14.557897567749023

Token 98: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.11875728517770767
    2. '+' → logprob: -2.6187572479248047
    3. ' +=' → logprob: -3.2437572479248047
    4. '=' → logprob: -10.618757247924805
    5. ' ' → logprob: -10.618757247924805
    6. '++' → logprob: -11.993757247924805
    7. '+="' → logprob: -12.868757247924805
    8. '+='' → logprob: -12.868757247924805
    9. '1' → logprob: -13.243757247924805
    10. ']+=' → logprob: -13.493757247924805

Token 99: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00020354038861114532
    2. ' ' → logprob: -8.500203132629395
    3. ' ' → logprob: -20.00020408630371
    4. '```' → logprob: -20.37520408630371
    5. '   ' → logprob: -20.50020408630371
    6. '  ' → logprob: -21.12520408630371
    7. '１' → logprob: -21.12520408630371
    8. '2' → logprob: -21.25020408630371
    9. '`' → logprob: -22.06270408630371
    10. '+' → logprob: -22.18770408630371

Token 100: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.500000953674316
    3. '```' → logprob: -18.375
    4. '   ' → logprob: -20.75
    5. '１' → logprob: -21.25
    6. '  ' → logprob: -21.375
    7. '2' → logprob: -21.9375
    8. '
' → logprob: -22.5
    9. '۱' → logprob: -22.5625
    10. '+' → logprob: -22.625

Token 101: '

' (ID: 279)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.10057153552770615
    2. '
' → logprob: -2.350571632385254
    3. '

' → logprob: -8.850571632385254
    4. 'sorted' → logprob: -9.225571632385254
    5. 'for' → logprob: -9.975571632385254
    6. 'print' → logprob: -10.850571632385254
    7. '```' → logprob: -11.225571632385254
    8. '
' → logprob: -11.350571632385254
    9. '  
' → logprob: -11.850571632385254
    10. '    
' → logprob: -11.850571632385254

Token 102: 'for' (ID: 1938)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.011380364187061787
    2. 'for' → logprob: -4.511380195617676
    3. 'print' → logprob: -8.011380195617676
    4. '```' → logprob: -14.886380195617676
    5. ' div' → logprob: -15.886380195617676
    6. '
' → logprob: -16.011381149291992
    7. ' for' → logprob: -16.511381149291992
    8. 'sorted' → logprob: -17.636381149291992
    9. 'Div' → logprob: -17.636381149291992
    10. '    
' → logprob: -17.636381149291992

Token 103: ' d' (ID: 272)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.6034892201423645
    2. 'd' → logprob: -0.8534892201423645
    3. ' d' → logprob: -3.8534891605377197
    4. ' div' → logprob: -5.228489398956299
    5. 'x' → logprob: -7.853489398956299
    6. ' divisor' → logprob: -8.72848892211914
    7. ' x' → logprob: -10.47848892211914
    8. 'i' → logprob: -11.35348892211914
    9. 'num' → logprob: -11.85348892211914
    10. ' i' → logprob: -12.60348892211914

Token 104: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0023295057471841574
    2. 'in' → logprob: -6.127329349517822
    3. ' ' → logprob: -9.00232982635498
    4. 'd' → logprob: -11.75232982635498
    5. '	in' → logprob: -12.50232982635498
    6. ' i' → logprob: -12.75232982635498
    7. 'n' → logprob: -12.87732982635498
    8. '  ' → logprob: -13.87732982635498
    9. ' d' → logprob: -14.00232982635498
    10. '   ' → logprob: -14.37732982635498

Token 105: ' sorted' (ID: 20099)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.025391273200511932
    2. ' sorted' → logprob: -3.7753913402557373
    3. 'div' → logprob: -6.150391101837158
    4. ' div' → logprob: -11.900391578674316
    5. '(sorted' → logprob: -12.775391578674316
    6. '   ' → logprob: -14.650391578674316
    7. ' ' → logprob: -15.025391578674316
    8. '.sorted' → logprob: -16.150390625
    9. 'range' → logprob: -16.525390625
    10. 'sort' → logprob: -16.525390625

Token 106: '(div' (ID: 73108)
  Prédit: '(div'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(div' → logprob: -5.200166469876422e-06
    2. '(' → logprob: -12.750004768371582
    3. 'div' → logprob: -13.000004768371582
    4. ' div' → logprob: -19.8750057220459
    5. '	div' → logprob: -20.1250057220459
    6. '(d' → logprob: -20.5000057220459
    7. ' (' → logprob: -20.7500057220459
    8. '<div' → logprob: -21.1250057220459
    9. '(dev' → logprob: -21.5000057220459
    10. '_div' → logprob: -22.0000057220459

Token 107: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.2664456789934775e-06
    2. 'div' → logprob: -13.875000953674316
    3. '```' → logprob: -15.375000953674316
    4. 'ds' → logprob: -17.750001907348633
    5. 'd' → logprob: -17.875001907348633
    6. 'is' → logprob: -18.250001907348633
    7. ')' → logprob: -18.625001907348633
    8. '   ' → logprob: -19.125001907348633
    9. ' div' → logprob: -19.500001907348633
    10. ' ' → logprob: -19.500001907348633

Token 108: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0011336666066199541
    2. ':' → logprob: -7.126133441925049
    3. '):
' → logprob: -8.501133918762207
    4. ')' → logprob: -9.001133918762207
    5. ' ):' → logprob: -14.501133918762207
    6. '():' → logprob: -14.626133918762207
    7. ']:' → logprob: -14.626133918762207
    8. '):
' → logprob: -14.751133918762207
    9. '}:' → logprob: -14.876133918762207
    10. ':
' → logprob: -15.626133918762207

Token 109: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001890210434794426
    2. 'print' → logprob: -6.501890182495117
    3. ' print' → logprob: -8.001890182495117
    4. '    
' → logprob: -10.501890182495117
    5. '\n' → logprob: -11.251890182495117
    6. '```' → logprob: -12.501890182495117
    7. '	print' → logprob: -12.751890182495117
    8. '\' → logprob: -13.501890182495117
    9. '   ' → logprob: -13.876890182495117
    10. '       ' → logprob: -14.376890182495117

Token 110: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0010462664067745209
    2. ' print' → logprob: -7.251046180725098
    3. '   ' → logprob: -8.001046180725098
    4. '```' → logprob: -14.001046180725098
    5. 'sys' → logprob: -15.251046180725098
    6. '	print' → logprob: -16.876047134399414
    7. '``' → logprob: -17.376047134399414
    8. '    
' → logprob: -18.001047134399414
    9. '
' → logprob: -18.751047134399414
    10. 'printf' → logprob: -20.126047134399414

Token 111: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.0009181279456242919
    2. '(' → logprob: -7.000917911529541
    3. '(f' → logprob: -12.1259183883667
    4. 'd' → logprob: -14.5009183883667
    5. '()' → logprob: -15.3759183883667
    6. '((' → logprob: -15.7509183883667
    7. ' (' → logprob: -16.125917434692383
    8. '('' → logprob: -16.375917434692383
    9. '(
' → logprob: -17.250917434692383
    10. '(str' → logprob: -17.250917434692383

Token 112: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2664456789934775e-06
    2. ' )' → logprob: -14.375000953674316
    3. ')
' → logprob: -14.750000953674316
    4. ')`' → logprob: -15.625000953674316
    5. '))' → logprob: -16.750001907348633
    6. ')d' → logprob: -18.250001907348633
    7. '`)' → logprob: -19.000001907348633
    8. '')' → logprob: -19.000001907348633
    9. '()' → logprob: -19.500001907348633
    10. ')}' → logprob: -19.750001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 110
Tokens correctement prédits (1ère position, stricte): 52
Tokens correctement prédits (1ère position, avec adaptation): 57
Tokens correctement prédits (top 10): 97
Précision stricte (1ère position): 47.27%
Précision adaptée (1ère position): 51.82%
Précision (top 10): 88.18%
================================================================================
