================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:10:43
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys

def can_measure(amounts, weights):
    # On peut placer chaque poids soit à gauche (+), à droite (-), ou ne pas l'utiliser (0)
    # Les combinaisons possibles sont 3^m, où m <= 10, c'est faisable avec un simple DFS
    from itertools import product
    possible = set()
    signs = [-1,0,1]
    for pans in product(signs, repeat=len(weights)):
        total = 0
        for w, s in zip(weights, pans):
            total += w*s
        possible.add(abs(total))
    # Vérifie si tout les montants sont mesurables
    for a in amounts:
        if a not in possible:
            return False
    return True

def main():
    for line in sys.stdin:
        if line.strip() == '':
            continue
        n,m = map(int, line.strip().split())
        if n == 0 and m == 0:
            break
        amounts = list(map(int, sys.stdin.readline().strip().split()))
        weights = list(map(int, sys.stdin.readline().strip().split()))
        # Test sans poids supplémentaires
        if can_measure(amounts, weights):
            print(0)
            continue
        # Sinon, chercher le poids minimal à ajouter
        # On teste de 1 à un certain maximum, jusqu'à 1000000000 + 100000000 (par exemple)
        # ou jusqu'à trouver un poids qui marche
        max_test = 10**9 + 10**8
        ans = -1
        for new_w in range(1, max_test+1):
            new_weights = weights + [new_w]
            if can_measure(amounts, new_weights):
                ans = new_w
                break
        print(ans)

if __name__ == '__main__':
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: 'def' (ID: 1314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.05313064530491829
    2. '\n' → logprob: -3.678130626678467
    3. 'import' → logprob: -4.303130626678467
    4. '\' → logprob: -4.803130626678467
    5. '[' → logprob: -6.928130626678467
    6. '' → logprob: -7.303130626678467
    7. '```' → logprob: -7.553130626678467
    8. 'newline' → logprob: -7.553130626678467
    9. '#' → logprob: -7.928130626678467
    10. '<|end|>' → logprob: -8.053131103515625

Token 4: ' can' (ID: 665)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.013851531781256199
    2. ' space' → logprob: -6.388851642608643
    3. ' main' → logprob: -6.388851642608643
    4. ' ' → logprob: -6.888851642608643
    5. '<|end|>' → logprob: -6.888851642608643
    6. ' process' → logprob: -7.013851642608643
    7. '  ' → logprob: -7.013851642608643
    8. ' a' → logprob: -7.263851642608643
    9. ' sys' → logprob: -7.638851642608643
    10. '_' → logprob: -7.763851642608643

Token 5: '_measure' (ID: 103789)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.016395973041653633
    2. ' _' → logprob: -5.7663960456848145
    3. '_accept' → logprob: -5.7663960456848145
    4. '_c' → logprob: -6.0163960456848145
    5. '_n' → logprob: -7.2663960456848145
    6. '_access' → logprob: -7.2663960456848145
    7. '_append' → logprob: -7.3913960456848145
    8. '_t' → logprob: -7.3913960456848145
    9. '_space' → logprob: -7.6413960456848145
    10. '_import' → logprob: -7.8913960456848145

Token 6: '(amount' (ID: 60193)
  Prédit: '_water'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_water' → logprob: -0.04054128751158714
    2. '_' → logprob: -4.040541172027588
    3. ' water' → logprob: -4.415541172027588
    4. '_weight' → logprob: -5.540541172027588
    5. ' ' → logprob: -6.415541172027588
    6. '_volume' → logprob: -7.040541172027588
    7. ' _' → logprob: -7.040541172027588
    8. '_mass' → logprob: -7.790541172027588
    9. '_w' → logprob: -7.915541172027588
    10. '_li' → logprob: -8.040541648864746

Token 7: 's' (ID: 82)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.38530054688453674
    2. ',' → logprob: -1.2603005170822144
    3. ')' → logprob: -3.385300636291504
    4. '):
' → logprob: -7.385300636291504
    5. ':' → logprob: -7.760300636291504
    6. '_' → logprob: -8.010300636291504
    7. ' ,' → logprob: -8.135300636291504
    8. ' ):' → logprob: -9.010300636291504
    9. '_me' → logprob: -9.260300636291504
    10. 's' → logprob: -9.635300636291504

Token 8: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4032656252384186
    2. '):' → logprob: -1.1532655954360962
    3. ')' → logprob: -4.278265476226807
    4. ' ,' → logprob: -6.778265476226807
    5. ' ):' → logprob: -7.153265476226807
    6. ':' → logprob: -9.028265953063965
    7. '[' → logprob: -9.153265953063965
    8. ' )' → logprob: -9.903265953063965
    9. '):
' → logprob: -10.028265953063965
    10. ' ' → logprob: -10.153265953063965

Token 9: ' weights' (ID: 28460)
  Prédit: ' target'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' target' → logprob: -1.1411229372024536
    2. ' container' → logprob: -1.3911229372024536
    3. ' capacities' → logprob: -1.8911229372024536
    4. ' capacity' → logprob: -2.391122817993164
    5. ' jug' → logprob: -2.766122817993164
    6. ' bucket' → logprob: -3.766122817993164
    7. ' containers' → logprob: -3.891122817993164
    8. ' total' → logprob: -4.766122817993164
    9. ' buckets' → logprob: -4.891122817993164
    10. 'target' → logprob: -5.016122817993164

Token 10: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.14533919095993042
    2. ',' → logprob: -2.020339250564575
    3. ')' → logprob: -6.020339012145996
    4. ':' → logprob: -9.145339012145996
    5. ' ):' → logprob: -10.395339012145996
    6. '):
' → logprob: -10.520339012145996
    7. '   ' → logprob: -10.520339012145996
    8. ' ,' → logprob: -11.395339012145996
    9. '=' → logprob: -11.645339012145996
    10. ')):' → logprob: -12.895339012145996

Token 11: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3909192383289337
    2. '   ' → logprob: -1.1409192085266113
    3. ':
' → logprob: -7.015919208526611
    4. '):' → logprob: -7.515919208526611
    5. ' :' → logprob: -7.515919208526611
    6. '    
' → logprob: -8.14091968536377
    7. '    ' → logprob: -8.26591968536377
    8. '```' → logprob: -8.26591968536377
    9. '():' → logprob: -8.64091968536377
    10. '[' → logprob: -8.64091968536377

Token 12: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8103055953979492
    2. ' ' → logprob: -1.0603055953979492
    3. ' :' → logprob: -3.060305595397949
    4. ':' → logprob: -3.185305595397949
    5. '    ' → logprob: -3.310305595397949
    6. ' 
' → logprob: -3.810305595397949
    7. ' for' → logprob: -4.310305595397949
    8. ' return' → logprob: -4.935305595397949
    9. '```' → logprob: -5.060305595397949
    10. '    
' → logprob: -5.435305595397949

Token 13: ' On' (ID: 2160)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.04395780339837074
    2. '   ' → logprob: -4.043957710266113
    3. ' return' → logprob: -4.918957710266113
    4. ' for' → logprob: -5.168957710266113
    5. ' ```' → logprob: -6.168957710266113
    6. '    ' → logprob: -6.668957710266113
    7. ' )' → logprob: -6.668957710266113
    8. ' """' → logprob: -7.043957710266113
    9. ' if' → logprob: -7.168957710266113
    10. '```' → logprob: -7.168957710266113

Token 14: ' peut' (ID: 9216)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.03221355378627777
    2. 'ly' → logprob: -3.5322134494781494
    3. ' e' → logprob: -6.4072136878967285
    4. 'es' → logprob: -7.5322136878967285
    5. 'ce' → logprob: -9.53221321105957
    6. ' the' → logprob: -9.90721321105957
    7. '-' → logprob: -9.90721321105957
    8. 'l' → logprob: -11.15721321105957
    9. '=' → logprob: -11.28221321105957
    10. '(e' → logprob: -11.28221321105957

Token 15: ' placer' (ID: 55591)
  Prédit: ' mesurer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' mesurer' → logprob: -0.09325426816940308
    2. ' utiliser' → logprob: -3.593254327774048
    3. ' measure' → logprob: -4.343254089355469
    4. ' p' → logprob: -4.968254089355469
    5. ' pes' → logprob: -5.093254089355469
    6. ' mes' → logprob: -5.468254089355469
    7. ' ' → logprob: -5.718254089355469
    8. ' vérifier' → logprob: -5.718254089355469
    9. ' use' → logprob: -5.843254089355469
    10. ' mesure' → logprob: -6.093254089355469

Token 16: ' chaque' (ID: 21194)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.49001139402389526
    2. ' un' → logprob: -1.86501145362854
    3. ' une' → logprob: -2.86501145362854
    4. ' les' → logprob: -3.36501145362854
    5. ' n' → logprob: -3.61501145362854
    6. ' le' → logprob: -4.115011215209961
    7. '_' → logprob: -4.490011215209961
    8. ' des' → logprob: -4.740011215209961
    9. ' chaque' → logprob: -4.865011215209961
    10. ' uniquement' → logprob: -4.865011215209961

Token 17: ' poids' (ID: 56058)
  Prédit: ' élément'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' élément' → logprob: -0.15012259781360626
    2. ' poids' → logprob: -3.15012264251709
    3. ' objet' → logprob: -3.27512264251709
    4. ' item' → logprob: -4.65012264251709
    5. 'élé' → logprob: -4.65012264251709
    6. ' element' → logprob: -4.90012264251709
    7. ' quantité' → logprob: -5.27512264251709
    8. ' article' → logprob: -5.27512264251709
    9. ' ' → logprob: -6.02512264251709
    10. ' morceau' → logprob: -6.15012264251709

Token 18: ' soit' (ID: 17293)
  Prédit: ' soit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' soit' → logprob: -1.2715411186218262
    2. ' dans' → logprob: -1.6465411186218262
    3. ' sur' → logprob: -1.7715411186218262
    4. ' ' → logprob: -2.896541118621826
    5. ' ou' → logprob: -2.896541118621826
    6. ' uniquement' → logprob: -2.896541118621826
    7. 'sur' → logprob: -3.396541118621826
    8. 'dans' → logprob: -3.521541118621826
    9. ' exactement' → logprob: -3.771541118621826
    10. ' à' → logprob: -4.146541118621826

Token 19: ' à' (ID: 1221)
  Prédit: ' sur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sur' → logprob: -0.6400634050369263
    2. ' dans' → logprob: -0.8900634050369263
    3. 'dans' → logprob: -3.7650632858276367
    4. ' à' → logprob: -4.390063285827637
    5. ' ' → logprob: -4.765063285827637
    6. 'sur' → logprob: -5.265063285827637
    7. ' au' → logprob: -5.640063285827637
    8. ' avec' → logprob: -6.515063285827637
    9. ' en' → logprob: -7.265063285827637
    10. ' soit' → logprob: -7.390063285827637

Token 20: ' gauche' (ID: 58367)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.22776181995868683
    2. ' gauche' → logprob: -1.7277618646621704
    3. 'c' → logprob: -4.852761745452881
    4. 'dro' → logprob: -5.477761745452881
    5. ' droite' → logprob: -5.602761745452881
    6. 'l' → logprob: -5.727761745452881
    7. 'la' → logprob: -6.227761745452881
    8. ' ' → logprob: -6.852761745452881
    9. 'd' → logprob: -7.602761745452881
    10. 'gau' → logprob: -7.727761745452881

Token 21: ' (+' (ID: 36088)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.028047814965248108
    2. ' ,' → logprob: -3.653047800064087
    3. ' ou' → logprob: -7.153048038482666
    4. ' soit' → logprob: -7.528048038482666
    5. ' ' → logprob: -8.778047561645508
    6. 'so' → logprob: -10.403047561645508
    7. '<|end|>' → logprob: -10.528047561645508
    8. ' so' → logprob: -10.778047561645508
    9. 'ou' → logprob: -10.903047561645508
    10. '```' → logprob: -10.903047561645508

Token 22: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.24365116655826569
    2. ')' → logprob: -1.7436511516571045
    3. '1' → logprob: -3.2436511516571045
    4. ' ),' → logprob: -6.618651390075684
    5. ',' → logprob: -8.243651390075684
    6. 'amount' → logprob: -9.118651390075684
    7. ' )' → logprob: -9.243651390075684
    8. ' ' → logprob: -9.743651390075684
    9. ' or' → logprob: -9.868651390075684
    10. ''),' → logprob: -9.868651390075684

Token 23: ' à' (ID: 1221)
  Prédit: ' soit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' soit' → logprob: -0.0076220110058784485
    2. '-' → logprob: -6.132622241973877
    3. ' so' → logprob: -7.757622241973877
    4. ',' → logprob: -7.882622241973877
    5. '=None' → logprob: -7.882622241973877
    6. 'so' → logprob: -8.132621765136719
    7. ' ' → logprob: -8.132621765136719
    8. ' -' → logprob: -8.257621765136719
    9. '```' → logprob: -8.257621765136719
    10. ' либо' → logprob: -8.507621765136719

Token 24: ' droite' (ID: 61428)
  Prédit: ' droite'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' droite' → logprob: -0.12307044118642807
    2. 'dro' → logprob: -2.373070478439331
    3. 'right' → logprob: -4.998070240020752
    4. ' ' → logprob: -5.373070240020752
    5. '```' → logprob: -6.123070240020752
    6. '0' → logprob: -6.623070240020752
    7. '-' → logprob: -6.748070240020752
    8. '=None' → logprob: -7.248070240020752
    9. '<|end|>' → logprob: -7.748070240020752
    10. '=' → logprob: -7.873070240020752

Token 25: ' (-' (ID: 21382)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.627521276473999
    2. ' ou' → logprob: -1.127521276473999
    3. ' ,' → logprob: -2.127521276473999
    4. ' (' → logprob: -4.627521514892578
    5. ' (-' → logprob: -5.377521514892578
    6. 'ou' → logprob: -6.127521514892578
    7. ' or' → logprob: -6.377521514892578
    8. ' ' → logprob: -6.877521514892578
    9. ' (+' → logprob: -7.002521514892578
    10. '(' → logprob: -7.627521514892578

Token 26: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.5288537740707397
    2. ')' → logprob: -1.2788537740707397
    3. ',' → logprob: -2.4038538932800293
    4. ' ),' → logprob: -3.6538538932800293
    5. ' ou' → logprob: -4.778853893280029
    6. ' ,' → logprob: -5.653853893280029
    7. ' )' → logprob: -5.778853893280029
    8. ' or' → logprob: -7.153853893280029
    9. ' ' → logprob: -9.528853416442871
    10. 'or' → logprob: -10.153853416442871

Token 27: ' ou' (ID: 2031)
  Prédit: ' ou'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ou' → logprob: -0.2516152858734131
    2. ' or' → logprob: -1.626615285873413
    3. 'or' → logprob: -5.126615524291992
    4. 'ou' → logprob: -5.251615524291992
    5. ' ' → logprob: -5.876615524291992
    6. ' soit' → logprob: -5.876615524291992
    7. ',' → logprob: -6.501615524291992
    8. ' ,' → logprob: -6.876615524291992
    9. '#' → logprob: -6.876615524291992
    10. '<|end|>' → logprob: -7.001615524291992

Token 28: ' ne' (ID: 453)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.16242715716362
    2. '0' → logprob: -2.4124271869659424
    3. ' au' → logprob: -4.537426948547363
    4. ' à' → logprob: -4.662426948547363
    5. ' None' → logprob: -5.662426948547363
    6. ' aucun' → logprob: -6.037426948547363
    7. ' rien' → logprob: -6.162426948547363
    8. ' en' → logprob: -6.412426948547363
    9. ' zéro' → logprob: -6.412426948547363
    10. 'ne' → logprob: -6.537426948547363

Token 29: ' pas' (ID: 2173)
  Prédit: ' rien'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rien' → logprob: -0.3072095513343811
    2. 'r' → logprob: -2.0572094917297363
    3. ' pas' → logprob: -2.1822094917297363
    4. 'pas' → logprob: -3.9322094917297363
    5. ' r' → logprob: -6.682209491729736
    6. '_r' → logprob: -6.807209491729736
    7. ' ' → logprob: -7.307209491729736
    8. '_pas' → logprob: -7.807209491729736
    9. '```' → logprob: -9.432209968566895
    10. 'ut' → logprob: -9.432209968566895

Token 30: ' l' (ID: 305)
  Prédit: ' mettre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' mettre' → logprob: -1.8371317386627197
    2. ' faire' → logprob: -2.2121317386627197
    3. ' ' → logprob: -2.4621317386627197
    4. '<|end|>' → logprob: -2.7121317386627197
    5. ' placer' → logprob: -2.8371317386627197
    6. 'placer' → logprob: -2.9621317386627197
    7. ' utiliser' → logprob: -2.9621317386627197
    8. 's' → logprob: -3.2121317386627197
    9. 'mettre' → logprob: -3.5246317386627197
    10. 'placement' → logprob: -3.7746317386627197

Token 31: ''utiliser' (ID: 133355)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.0960438996553421
    2. 'a' → logprob: -2.721043825149536
    3. 'es' → logprob: -4.596044063568115
    4. '```' → logprob: -5.471044063568115
    5. 'aisser' → logprob: -5.596044063568115
    6. 'eg' → logprob: -6.096044063568115
    7. 'eser' → logprob: -7.096044063568115
    8. ''utiliser' → logprob: -7.471044063568115
    9. 'et' → logprob: -7.596044063568115
    10. 'eer' → logprob: -7.596044063568115

Token 32: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07315609604120255
    2. ',' → logprob: -3.4481561183929443
    3. ' ' → logprob: -4.698155879974365
    4. ' for' → logprob: -4.698155879974365
    5. '.' → logprob: -5.573155879974365
    6. ':' → logprob: -5.698155879974365
    7. ' ' → logprob: -5.948155879974365
    8. ' (' → logprob: -6.323155879974365
    9. ' :' → logprob: -6.448155879974365
    10. ' ,' → logprob: -6.948155879974365

Token 33: '0' (ID: 15)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.43508657813072205
    2. '0' → logprob: -1.0600866079330444
    3. ' )' → logprob: -5.185086727142334
    4. ')' → logprob: -7.310086727142334
    5. ''' → logprob: -10.560086250305176
    6. ' ' → logprob: -10.935086250305176
    7. ' '' → logprob: -11.310086250305176
    8. ' '')' → logprob: -11.435086250305176
    9. '=' → logprob: -11.685086250305176
    10. ' ),' → logprob: -12.685086250305176

Token 34: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00017684244085103273
    2. ' )' → logprob: -9.625176429748535
    3. ').' → logprob: -10.125176429748535
    4. ')
' → logprob: -10.500176429748535
    5. '):' → logprob: -11.000176429748535
    6. '),' → logprob: -11.500176429748535
    7. '):
' → logprob: -12.000176429748535
    8. '):

' → logprob: -12.125176429748535
    9. ')

' → logprob: -13.625176429748535
    10. '0' → logprob: -14.375176429748535

Token 35: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.026241425424814224
    2. ' for' → logprob: -4.901241302490234
    3. ',' → logprob: -5.276241302490234
    4. ' def' → logprob: -5.401241302490234
    5. ' ' → logprob: -6.151241302490234
    6. ':' → logprob: -6.276241302490234
    7. 'def' → logprob: -6.901241302490234
    8. '
' → logprob: -7.401241302490234
    9. ' ,' → logprob: -7.651241302490234
    10. ')' → logprob: -7.901241302490234

Token 36: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6511794328689575
    2. ' for' → logprob: -1.4011794328689575
    3. '    ' → logprob: -2.776179313659668
    4. ' 
' → logprob: -2.901179313659668
    5. ' ' → logprob: -3.901179313659668
    6. 'for' → logprob: -4.401179313659668
    7. '    
' → logprob: -4.401179313659668
    8. ' from' → logprob: -4.401179313659668
    9. '     
' → logprob: -5.026179313659668
    10. '   
' → logprob: -5.276179313659668

Token 37: ' Les' (ID: 7029)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7815783619880676
    2. ' from' → logprob: -1.1565783023834229
    3. '   ' → logprob: -2.281578302383423
    4. ' n' → logprob: -2.781578302383423
    5. ' import' → logprob: -3.281578302383423
    6. 'from' → logprob: -4.531578540802002
    7. 'for' → logprob: -5.406578540802002
    8. ' return' → logprob: -5.906578540802002
    9. ' if' → logprob: -6.156578540802002
    10. 'import' → logprob: -6.531578540802002

Token 38: ' comb' (ID: 4134)
  Prédit: ' poids'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' poids' → logprob: -1.640944004058838
    2. ' possibilités' → logprob: -1.765944004058838
    3. ' from' → logprob: -2.015944004058838
    4. ' n' → logprob: -2.390944004058838
    5. ' possibles' → logprob: -3.015944004058838
    6. 'import' → logprob: -3.015944004058838
    7. ' import' → logprob: -3.140944004058838
    8. 'n' → logprob: -3.515944004058838
    9. 'from' → logprob: -3.765944004058838
    10. 'def' → logprob: -3.890944004058838

Token 39: 'inais' (ID: 42744)
  Prédit: 'inais'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inais' → logprob: -0.337230384349823
    2. 'inations' → logprob: -1.3372304439544678
    3. 'ina' → logprob: -4.587230205535889
    4. 'i' → logprob: -5.837230205535889
    5. 'ination' → logprob: -5.962230205535889
    6. 'binations' → logprob: -6.212230205535889
    7. 'initions' → logprob: -6.337230205535889
    8. 'in' → logprob: -6.337230205535889
    9. 'os' → logprob: -8.212230682373047
    10. '_' → logprob: -8.462230682373047

Token 40: 'ons' (ID: 1808)
  Prédit: 'ons'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ons' → logprob: -0.0018610459519550204
    2. 'on' → logprob: -7.376861095428467
    3. 'n' → logprob: -7.501861095428467
    4. 's' → logprob: -8.001860618591309
    5. 'sons' → logprob: -9.501860618591309
    6. 'es' → logprob: -10.001860618591309
    7. 'ns' → logprob: -10.376860618591309
    8. 'onnes' → logprob: -10.376860618591309
    9. '```' → logprob: -10.626860618591309
    10. '#' → logprob: -10.751860618591309

Token 41: ' possibles' (ID: 97753)
  Prédit: ' possibles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' possibles' → logprob: -0.08698654919862747
    2. ' possible' → logprob: -2.961986541748047
    3. ' =' → logprob: -3.961986541748047
    4. 'possible' → logprob: -5.586986541748047
    5. ' suivantes' → logprob: -5.961986541748047
    6. ' ' → logprob: -6.336986541748047
    7. '_possible' → logprob: -7.336986541748047
    8. ' de' → logprob: -7.586986541748047
    9. ' posibles' → logprob: -7.586986541748047
    10. ' des' → logprob: -7.586986541748047

Token 42: ' sont' (ID: 5242)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4591560661792755
    2. ' :' → logprob: -1.4591560363769531
    3. ':' → logprob: -3.209156036376953
    4. ' ' → logprob: -3.459156036376953
    5. '   ' → logprob: -3.834156036376953
    6. ' ,' → logprob: -3.959156036376953
    7. '=' → logprob: -4.959156036376953
    8. ',' → logprob: -5.459156036376953
    9. '    ' → logprob: -6.334156036376953
    10. ' for' → logprob: -6.584156036376953

Token 43: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.723305344581604
    2. ' ' → logprob: -0.973305344581604
    3. '   ' → logprob: -2.3483052253723145
    4. '    ' → logprob: -3.4733052253723145
    5. '  ' → logprob: -6.2233052253723145
    6. ' \(' → logprob: -6.5983052253723145
    7. ' trois' → logprob: -6.7858052253723145
    8. ' ' → logprob: -7.1608052253723145
    9. '(' → logprob: -7.5358052253723145
    10. '```' → logprob: -7.8483052253723145

Token 44: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.5791805982589722
    2. ' ' → logprob: -0.8291805982589722
    3. '   ' → logprob: -6.704180717468262
    4. '-' → logprob: -7.579180717468262
    5. '  ' → logprob: -8.329180717468262
    6. ' -' → logprob: -8.454180717468262
    7. '(' → logprob: -8.704180717468262
    8. ' (' → logprob: -9.204180717468262
    9. '[' → logprob: -9.579180717468262
    10. ' range' → logprob: -9.829180717468262

Token 45: '^' (ID: 61)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.25212690234184265
    2. ' **' → logprob: -1.502126932144165
    3. '***' → logprob: -9.502126693725586
    4. '```' → logprob: -10.127126693725586
    5. '*' → logprob: -10.752126693725586
    6. '^' → logprob: -10.877126693725586
    7. 'import' → logprob: -12.252126693725586
    8. ')' → logprob: -12.377126693725586
    9. 'len' → logprob: -12.377126693725586
    10. '3' → logprob: -12.502126693725586

Token 46: 'm' (ID: 76)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.0025748289190232754
    2. 'n' → logprob: -6.502574920654297
    3. ' len' → logprob: -6.877574920654297
    4. '(len' → logprob: -10.627574920654297
    5. 'i' → logprob: -11.502574920654297
    6. '```' → logprob: -13.627574920654297
    7. ' n' → logprob: -14.002574920654297
    8. '1' → logprob: -14.127574920654297
    9. '<len' → logprob: -14.252574920654297
    10. 'l' → logprob: -14.627574920654297

Token 47: ',' (ID: 11)
  Prédit: ' m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.8818872570991516
    2. '   ' → logprob: -1.0068871974945068
    3. 'm' → logprob: -2.381887197494507
    4. ',' → logprob: -3.506887197494507
    5. ' ' → logprob: -3.506887197494507
    6. ':' → logprob: -3.506887197494507
    7. ' for' → logprob: -4.506887435913086
    8. ')' → logprob: -5.131887435913086
    9. ' def' → logprob: -5.756887435913086
    10. '.' → logprob: -6.006887435913086

Token 48: ' où' (ID: 15113)
  Prédit: ' m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -1.1839407682418823
    2. ' où' → logprob: -1.1839407682418823
    3. ' where' → logprob: -1.3089407682418823
    4. ' ' → logprob: -3.308940887451172
    5. ' mais' → logprob: -4.058940887451172
    6. '   ' → logprob: -4.433940887451172
    7. ' for' → logprob: -4.933940887451172
    8. ' but' → logprob: -5.058940887451172
    9. ' so' → logprob: -5.058940887451172
    10. '    ' → logprob: -5.433940887451172

Token 49: ' m' (ID: 284)
  Prédit: ' m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.043078433722257614
    2. 'm' → logprob: -3.1680784225463867
    3. ' ' → logprob: -9.668078422546387
    4. ' ' → logprob: -12.168078422546387
    5. ' `' → logprob: -12.668078422546387
    6. '  ' → logprob: -13.418078422546387
    7. '	m' → logprob: -13.543078422546387
    8. '```' → logprob: -13.793078422546387
    9. '`' → logprob: -14.480578422546387
    10. ' м' → logprob: -15.043078422546387

Token 50: ' <=' (ID: 5017)
  Prédit: ' est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.09654853492975235
    2. ' =' → logprob: -2.596548557281494
    3. '=' → logprob: -4.721548557281494
    4. 'est' → logprob: -5.596548557281494
    5. ' is' → logprob: -6.096548557281494
    6. '=len' → logprob: -7.221548557281494
    7. ' représente' → logprob: -7.596548557281494
    8. ''est' → logprob: -7.721548557281494
    9. '<|end|>' → logprob: -8.971548080444336
    10. ' ' → logprob: -9.221548080444336

Token 51: ' ' (ID: 220)
  Prédit: ' len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.04864482209086418
    2. 'len' → logprob: -3.048644781112671
    3. ' ' → logprob: -10.29864501953125
    4. '(len' → logprob: -12.17364501953125
    5. '6' → logprob: -12.79864501953125
    6. '	len' → logprob: -13.42364501953125
    7. ' ' → logprob: -13.54864501953125
    8. '7' → logprob: -13.54864501953125
    9. '=len' → logprob: -13.54864501953125
    10. '20' → logprob: -13.67364501953125

Token 52: '10' (ID: 702)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.027086909860372543
    2. ' len' → logprob: -3.6520869731903076
    3. '6' → logprob: -8.902087211608887
    4. '7' → logprob: -9.152087211608887
    5. '20' → logprob: -9.152087211608887
    6. '9' → logprob: -9.777087211608887
    7. '10' → logprob: -9.777087211608887
    8. '15' → logprob: -10.152087211608887
    9. '12' → logprob: -10.152087211608887
    10. '5' → logprob: -10.277087211608887

Token 53: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.35160937905311584
    2. ':' → logprob: -1.3516093492507935
    3. ',' → logprob: -4.226609230041504
    4. '
' → logprob: -4.976609230041504
    5. ' :' → logprob: -4.976609230041504
    6. '.' → logprob: -5.976609230041504
    7. ' for' → logprob: -7.101609230041504
    8. 'def' → logprob: -7.101609230041504
    9. '    
' → logprob: -7.476609230041504
    10. '\' → logprob: -7.726609230041504

Token 54: ' c' (ID: 274)
  Prédit: ' ce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ce' → logprob: -0.23247049748897552
    2. ' donc' → logprob: -1.9824705123901367
    3. '   ' → logprob: -3.9824705123901367
    4. ' et' → logprob: -4.232470512390137
    5. ' so' → logprob: -4.857470512390137
    6. '    ' → logprob: -4.982470512390137
    7. ' soit' → logprob: -4.982470512390137
    8. 'ce' → logprob: -6.357470512390137
    9. ' c' → logprob: -6.607470512390137
    10. ' and' → logprob: -6.982470512390137

Token 55: ''est' (ID: 6616)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.12334635108709335
    2. '3' → logprob: -3.4983463287353516
    3. 'a' → logprob: -3.4983463287353516
    4. ''est' → logprob: -3.9983463287353516
    5. ''' → logprob: -4.248346328735352
    6. ''e' → logprob: -4.623346328735352
    7. 'o' → logprob: -6.123346328735352
    8. ''a' → logprob: -6.248346328735352
    9. ''é' → logprob: -6.248346328735352
    10. ''''' → logprob: -6.873346328735352

Token 56: ' fais' (ID: 24376)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -2.070190668106079
    2. ' fais' → logprob: -2.320190668106079
    3. ' manageable' → logprob: -2.320190668106079
    4. ' feasible' → logprob: -2.320190668106079
    5. ' abord' → logprob: -2.445190668106079
    6. ' raisonn' → logprob: -3.070190668106079
    7. ' réalis' → logprob: -3.320190668106079
    8. ' g' → logprob: -3.507690668106079
    9. ' tract' → logprob: -3.507690668106079
    10. '0' → logprob: -3.945190668106079

Token 57: 'able' (ID: 562)
  Prédit: 'able'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'able' → logprob: -0.08483782410621643
    2. 'ible' → logprob: -2.5848379135131836
    3. 'sible' → logprob: -5.709837913513184
    4. 'ile' → logprob: -6.459837913513184
    5. 'e' → logprob: -7.834837913513184
    6. 'a' → logprob: -8.334837913513184
    7. 'ale' → logprob: -9.584837913513184
    8. '```' → logprob: -9.584837913513184
    9. 'ais' → logprob: -10.084837913513184
    10. 'ables' → logprob: -10.709837913513184

Token 58: ' avec' (ID: 3937)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03038230910897255
    2. ':' → logprob: -4.40538215637207
    3. ',' → logprob: -4.78038215637207
    4. '    
' → logprob: -5.90538215637207
    5. '.' → logprob: -6.53038215637207
    6. '    ' → logprob: -6.65538215637207
    7. ' :' → logprob: -6.90538215637207
    8. ' ,' → logprob: -7.90538215637207
    9. '  ' → logprob: -8.03038215637207
    10. '   
' → logprob: -8.28038215637207

Token 59: ' un' (ID: 537)
  Prédit: ' une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' une' → logprob: -1.1190348863601685
    2. 'une' → logprob: -1.6190348863601685
    3. ' back' → logprob: -1.7440348863601685
    4. 'back' → logprob: -2.619034767150879
    5. ' la' → logprob: -2.744034767150879
    6. 'la' → logprob: -3.244034767150879
    7. ' recursion' → logprob: -3.494034767150879
    8. 'br' → logprob: -4.244034767150879
    9. ' brute' → logprob: -4.244034767150879
    10. 'rec' → logprob: -4.994034767150879

Token 60: ' simple' (ID: 4705)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.5185867547988892
    2. ' back' → logprob: -1.5185867547988892
    3. ' brute' → logprob: -2.1435866355895996
    4. ' brut' → logprob: -4.7685866355896
    5. ' dfs' → logprob: -4.8935866355896
    6. 'br' → logprob: -5.1435866355896
    7. ' DFS' → logprob: -5.2685866355896
    8. 'dfs' → logprob: -5.3935866355896
    9. 'for' → logprob: -5.5185866355896
    10. ' for' → logprob: -5.6435866355896

Token 61: ' DFS' (ID: 115767)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.29657498002052307
    2. ' back' → logprob: -1.9215749502182007
    3. ' dfs' → logprob: -2.6715750694274902
    4. 'for' → logprob: -4.42157506942749
    5. ' brute' → logprob: -5.04657506942749
    6. ' DFS' → logprob: -5.29657506942749
    7. 'dfs' → logprob: -5.42157506942749
    8. ' recursive' → logprob: -6.54657506942749
    9. ' recursion' → logprob: -6.54657506942749
    10. ' depth' → logprob: -6.79657506942749

Token 62: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03320979326963425
    2. ':' → logprob: -3.658209800720215
    3. '    
' → logprob: -5.783209800720215
    4. '
' → logprob: -6.533209800720215
    5. ' :' → logprob: -7.283209800720215
    6. ',' → logprob: -7.658209800720215
    7. 'def' → logprob: -8.283209800720215
    8. '    ' → logprob: -8.533209800720215
    9. '   
' → logprob: -8.908209800720215
    10. '.' → logprob: -9.658209800720215

Token 63: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.23613514006137848
    2. '   ' → logprob: -1.7361351251602173
    3. '
' → logprob: -3.861135244369507
    4. ' :' → logprob: -5.611135005950928
    5. '    
' → logprob: -6.111135005950928
    6. ',' → logprob: -6.861135005950928
    7. '\' → logprob: -7.236135005950928
    8. ':
' → logprob: -7.236135005950928
    9. ' 
' → logprob: -7.236135005950928
    10. '   
' → logprob: -7.236135005950928

Token 64: ' from' (ID: 591)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02200649492442608
    2. '    
' → logprob: -4.397006511688232
    3. ':' → logprob: -5.897006511688232
    4. '    ' → logprob: -6.022006511688232
    5. '
' → logprob: -6.522006511688232
    6. ' 
' → logprob: -7.397006511688232
    7. '   
' → logprob: -7.647006511688232
    8. '     
' → logprob: -7.647006511688232
    9. '\' → logprob: -8.022006034851074
    10. '       ' → logprob: -8.397006034851074

Token 65: ' itertools' (ID: 103178)
  Prédit: ' itertools'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' itertools' → logprob: -0.0009898189455270767
    2. ' collections' → logprob: -7.00098991394043
    3. ' math' → logprob: -10.62598991394043
    4. ' sys' → logprob: -10.62598991394043
    5. ' functools' → logprob: -10.62598991394043
    6. ' ' → logprob: -12.62598991394043
    7. ' copy' → logprob: -13.87598991394043
    8. 'collections' → logprob: -15.00098991394043
    9. 'it' → logprob: -15.00098991394043
    10. ' iter' → logprob: -15.37598991394043

Token 66: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.03884575143456459
    2. 'import' → logprob: -3.2888457775115967
    3. '	import' → logprob: -7.913845539093018
    4. 'ertools' → logprob: -8.913846015930176
    5. ' itertools' → logprob: -9.038846015930176
    6. '_import' → logprob: -9.913846015930176
    7. '<|end|>' → logprob: -10.038846015930176
    8. '.com' → logprob: -11.038846015930176
    9. '```' → logprob: -11.038846015930176
    10. ' im' → logprob: -11.663846015930176

Token 67: ' product' (ID: 1888)
  Prédit: ' product'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' product' → logprob: -0.048603612929582596
    2. 'product' → logprob: -3.0486035346984863
    3. '	product' → logprob: -11.548604011535645
    4. '.product' → logprob: -12.548604011535645
    5. ' permutations' → logprob: -13.548604011535645
    6. ' ' → logprob: -14.548604011535645
    7. '-product' → logprob: -15.173604011535645
    8. '_product' → logprob: -15.423604011535645
    9. 'com' → logprob: -15.548604011535645
    10. '```' → logprob: -15.673604011535645

Token 68: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.39174404740333557
    2. '('' → logprob: -1.6417440176010132
    3. '(' → logprob: -2.8917441368103027
    4. '    
' → logprob: -3.8917441368103027
    5. '
' → logprob: -4.641744136810303
    6. ' (' → logprob: -5.016744136810303
    7. '("' → logprob: -5.391744136810303
    8. '    ' → logprob: -5.516744136810303
    9. '('\' → logprob: -5.516744136810303
    10. '<|end|>' → logprob: -5.641744136810303

Token 69: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3349563777446747
    2. '    
' → logprob: -1.459956407546997
    3. '    ' → logprob: -4.709956169128418
    4. '     
' → logprob: -4.959956169128418
    5. ',' → logprob: -5.084956169128418
    6. ' 
' → logprob: -5.209956169128418
    7. '<|end|>' → logprob: -5.209956169128418
    8. ' ' → logprob: -5.334956169128418
    9. ' for' → logprob: -6.084956169128418
    10. ')' → logprob: -6.084956169128418

Token 70: ' possible' (ID: 4149)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2986120581626892
    2. '    
' → logprob: -2.048612117767334
    3. ' for' → logprob: -2.673612117767334
    4. '     
' → logprob: -4.298612117767334
    5. 'for' → logprob: -4.298612117767334
    6. '   
' → logprob: -4.798612117767334
    7. '    ' → logprob: -4.798612117767334
    8. '
' → logprob: -5.048612117767334
    9. ' 
' → logprob: -5.173612117767334
    10. ',' → logprob: -7.173612117767334

Token 71: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.8783669471740723
    2. '_weights' → logprob: -1.3783669471740723
    3. '_s' → logprob: -1.6283669471740723
    4. ' =' → logprob: -2.8783669471740723
    5. '_' → logprob: -3.2533669471740723
    6. '=' → logprob: -3.7533669471740723
    7. '_me' → logprob: -5.128366947174072
    8. '_values' → logprob: -5.378366947174072
    9. ' ' → logprob: -6.128366947174072
    10. '_amount' → logprob: -6.628366947174072

Token 72: ' set' (ID: 920)
  Prédit: ' {'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' {' → logprob: -0.6725565195083618
    2. ' set' → logprob: -0.9225565195083618
    3. '{' → logprob: -2.6725564002990723
    4. 'set' → logprob: -3.7975564002990723
    5. ' {
' → logprob: -8.42255687713623
    6. ' ' → logprob: -9.17255687713623
    7. '	set' → logprob: -9.54755687713623
    8. '{
' → logprob: -9.92255687713623
    9. '  ' → logprob: -10.29755687713623
    10. '   ' → logprob: -10.67255687713623

Token 73: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.6956540942192078
    2. '([' → logprob: -0.6956540942192078
    3. '(' → logprob: -6.195653915405273
    4. '(sum' → logprob: -9.070653915405273
    5. '([(' → logprob: -9.320653915405273
    6. '((' → logprob: -9.445653915405273
    7. '({' → logprob: -10.195653915405273
    8. '(range' → logprob: -10.445653915405273
    9. '()\' → logprob: -10.570653915405273
    10. '([...' → logprob: -10.945653915405273

Token 74: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04401598870754242
    2. '    
' → logprob: -3.544015884399414
    3. ' for' → logprob: -4.919015884399414
    4. '    ' → logprob: -5.919015884399414
    5. 'for' → logprob: -6.919015884399414
    6. ' 
' → logprob: -7.419015884399414
    7. '     
' → logprob: -7.419015884399414
    8. '<|end|>' → logprob: -7.544015884399414
    9. ')' → logprob: -7.794015884399414
    10. ' ' → logprob: -8.544015884399414

Token 75: ' signs' (ID: 17424)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6113483905792236
    2. 'for' → logprob: -0.9863483905792236
    3. '   ' → logprob: -2.4863483905792236
    4. '    ' → logprob: -7.6113481521606445
    5. '    
' → logprob: -8.986348152160645
    6. 'weights' → logprob: -9.111348152160645
    7. ' ' → logprob: -9.736348152160645
    8. '  ' → logprob: -9.861348152160645
    9. ' weights' → logprob: -9.861348152160645
    10. '(' → logprob: -10.111348152160645

Token 76: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.013660226948559284
    2. '=' → logprob: -4.388660430908203
    3. '<|end|>' → logprob: -7.638660430908203
    4. ' ' → logprob: -7.763660430908203
    5. ')' → logprob: -9.263660430908203
    6. '<|end|>' → logprob: -10.263660430908203
    7. 's' → logprob: -10.763660430908203
    8. ',' → logprob: -10.888660430908203
    9. '  ' → logprob: -11.013660430908203
    10. '   ' → logprob: -11.263660430908203

Token 77: ' [-' (ID: 20191)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.23642908036708832
    2. ' [-' → logprob: -1.6114290952682495
    3. '[' → logprob: -4.986429214477539
    4. ' ['' → logprob: -5.736429214477539
    5. '[-' → logprob: -7.611429214477539
    6. ' [+' → logprob: -8.611429214477539
    7. ' ' → logprob: -9.736429214477539
    8. ' list' → logprob: -9.861429214477539
    9. ' (' → logprob: -9.861429214477539
    10. ' (-' → logprob: -10.861429214477539

Token 78: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3544423381972592e-05
    2. ' ' → logprob: -11.62501335144043
    3. '<|end|>' → logprob: -12.37501335144043
    4. '<|end|>' → logprob: -16.25001335144043
    5. '```' → logprob: -16.50001335144043
    6. '  ' → logprob: -16.62501335144043
    7. '   ' → logprob: -17.12501335144043
    8. ')' → logprob: -17.56251335144043
    9. ',' → logprob: -17.75001335144043
    10. '-' → logprob: -17.81251335144043

Token 79: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.014197002165019512
    2. ' ,' → logprob: -4.264196872711182
    3. ' ' → logprob: -10.76419734954834
    4. '<|end|>' → logprob: -11.76419734954834
    5. '0' → logprob: -13.26419734954834
    6. '1' → logprob: -14.38919734954834
    7. '‌,' → logprob: -14.51419734954834
    8. '<|end|>' → logprob: -15.01419734954834
    9. ',
' → logprob: -15.13919734954834
    10. '2' → logprob: -16.139196395874023

Token 80: '0' (ID: 15)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.47407805919647217
    2. '0' → logprob: -0.9740780591964722
    3. '<|end|>' → logprob: -14.599078178405762
    4. '1' → logprob: -15.724078178405762
    5. ' ' → logprob: -15.974078178405762
    6. ' 
' → logprob: -16.474077224731445
    7. ',' → logprob: -16.474077224731445
    8. '  ' → logprob: -16.849077224731445
    9. ' ,' → logprob: -17.099077224731445
    10. '```' → logprob: -17.661577224731445

Token 81: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007187459850683808
    2. ' ,' → logprob: -7.250718593597412
    3. ']' → logprob: -12.75071907043457
    4. '1' → logprob: -12.75071907043457
    5. ',+' → logprob: -14.00071907043457
    6. '<|end|>' → logprob: -14.37571907043457
    7. ' ' → logprob: -14.75071907043457
    8. ' ]' → logprob: -14.87571907043457
    9. ',
' → logprob: -15.50071907043457
    10. ',

' → logprob: -15.87571907043457

Token 82: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.005951314233243465
    2. ' ' → logprob: -5.130951404571533
    3. '+' → logprob: -10.755950927734375
    4. ' +' → logprob: -13.755950927734375
    5. ']' → logprob: -16.130950927734375
    6. '  ' → logprob: -16.630950927734375
    7. '   ' → logprob: -16.630950927734375
    8. '```' → logprob: -17.130950927734375
    9. '<|end|>' → logprob: -18.005950927734375
    10. '0' → logprob: -18.505950927734375

Token 83: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -4.966313281329349e-05
    2. ' ]' → logprob: -10.000049591064453
    3. ')' → logprob: -13.000049591064453
    4. '])' → logprob: -13.750049591064453
    5. ']
' → logprob: -15.000049591064453
    6. ',' → logprob: -15.250049591064453
    7. ']

' → logprob: -16.250049591064453
    8. '   ' → logprob: -17.125049591064453
    9. ')]' → logprob: -17.250049591064453
    10. ' ' → logprob: -17.500049591064453

Token 84: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.28466489911079407
    2. '
' → logprob: -1.9096648693084717
    3. '    
' → logprob: -3.0346648693084717
    4. ' for' → logprob: -3.4096648693084717
    5. 'for' → logprob: -4.659665107727051
    6. ' 
' → logprob: -5.284665107727051
    7. ')' → logprob: -6.284665107727051
    8. '<|end|>' → logprob: -7.534665107727051
    9. '  
' → logprob: -7.784665107727051
    10. '	for' → logprob: -8.28466510772705

Token 85: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4094735085964203
    2. '
' → logprob: -1.5344735383987427
    3. 'for' (adapté à ' for') → logprob: -2.284473419189453
    4. '   ' → logprob: -4.909473419189453
    5. ' 
' → logprob: -4.909473419189453
    6. '    
' → logprob: -6.034473419189453
    7. '  
' → logprob: -7.534473419189453
    8. '   
' → logprob: -7.909473419189453
    9. ')' → logprob: -8.909473419189453
    10. '     
' → logprob: -9.034473419189453

Token 86: ' pans' (ID: 73096)
  Prédit: ' signs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' signs' → logprob: -0.9245424270629883
    2. ' combo' → logprob: -1.2995424270629883
    3. ' combination' → logprob: -2.0495424270629883
    4. ' comb' → logprob: -2.2995424270629883
    5. ' w' → logprob: -3.5495424270629883
    6. 'comb' → logprob: -4.174542427062988
    7. ' p' → logprob: -4.424542427062988
    8. 'combo' → logprob: -4.424542427062988
    9. ' sign' → logprob: -4.799542427062988
    10. ' s' → logprob: -5.174542427062988

Token 87: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01918695494532585
    2. 's' → logprob: -4.769186973571777
    3. ',' → logprob: -5.144186973571777
    4. 'in' → logprob: -6.519186973571777
    5. '_in' → logprob: -7.269186973571777
    6. '_' → logprob: -7.269186973571777
    7. '_weights' → logprob: -7.894186973571777
    8. ' ,' → logprob: -8.019186973571777
    9. '_comb' → logprob: -8.769186973571777
    10. 'es' → logprob: -9.019186973571777

Token 88: ' product' (ID: 1888)
  Prédit: ' product'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' product' → logprob: -0.0789206326007843
    2. 'product' → logprob: -2.578920602798462
    3. '(product' → logprob: -11.078920364379883
    4. '	product' → logprob: -11.953920364379883
    5. ' ' → logprob: -12.953920364379883
    6. '.product' → logprob: -13.203920364379883
    7. '   ' → logprob: -13.328920364379883
    8. '_product' → logprob: -13.953920364379883
    9. 'Product' → logprob: -13.953920364379883
    10. '$product' → logprob: -15.203920364379883

Token 89: '(sign' (ID: 74775)
  Prédit: '(sign'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sign' → logprob: -0.00559859536588192
    2. '(' → logprob: -5.255598545074463
    3. ' (' → logprob: -8.255599021911621
    4. '(s' → logprob: -10.380599021911621
    5. '<|end|>' → logprob: -10.380599021911621
    6. '(Sign' → logprob: -12.005599021911621
    7. '(
' → logprob: -12.130599021911621
    8. '   ' → logprob: -12.130599021911621
    9. ')' → logprob: -12.255599021911621
    10. ' ' → logprob: -13.005599021911621

Token 90: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -4.143808109802194e-05
    2. ',' → logprob: -10.875041007995605
    3. 'sign' → logprob: -12.000041007995605
    4. '   ' → logprob: -12.375041007995605
    5. ')' → logprob: -12.750041007995605
    6. 'atures' → logprob: -13.125041007995605
    7. ' signs' → logprob: -13.250041007995605
    8. ',s' → logprob: -14.000041007995605
    9. 'igns' → logprob: -14.000041007995605
    10. ' ' → logprob: -14.375041007995605

Token 91: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006064103217795491
    2. ' ,' → logprob: -8.375606536865234
    3. ',length' → logprob: -8.625606536865234
    4. ',len' → logprob: -9.375606536865234
    5. ',re' → logprob: -10.875606536865234
    6. ',num' → logprob: -11.375606536865234
    7. ',m' → logprob: -11.625606536865234
    8. '   ' → logprob: -12.125606536865234
    9. '    ' → logprob: -12.250606536865234
    10. '

' → logprob: -12.500606536865234

Token 92: ' repeat' (ID: 22962)
  Prédit: ' repeat'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' repeat' → logprob: -0.6960296034812927
    2. ' weights' → logprob: -1.3210296630859375
    3. 'repeat' → logprob: -1.8210296630859375
    4. 'weights' → logprob: -3.3210296630859375
    5. ' range' → logprob: -3.6960296630859375
    6. 'range' → logprob: -4.6960296630859375
    7. ' ' → logprob: -7.0710296630859375
    8. ' len' → logprob: -8.696029663085938
    9. '[' → logprob: -8.696029663085938
    10. ')' → logprob: -8.696029663085938

Token 93: '=len' (ID: 114011)
  Prédit: '=len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=len' → logprob: -0.0001239196863025427
    2. '=' → logprob: -9.000123977661133
    3. 'len' → logprob: -15.125123977661133
    4. ' =' → logprob: -15.750123977661133
    5. '(len' → logprob: -17.375123977661133
    6. ' len' → logprob: -18.625123977661133
    7. '=int' → logprob: -18.750123977661133
    8. '=sum' → logprob: -20.125123977661133
    9. '=max' → logprob: -20.375123977661133
    10. '=num' → logprob: -20.375123977661133

Token 94: '(weights' (ID: 154124)
  Prédit: '(weights'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(weights' → logprob: -0.000513952283654362
    2. '(' → logprob: -8.250514030456543
    3. '(amount' → logprob: -8.375514030456543
    4. 'weights' → logprob: -11.875514030456543
    5. '(weight' → logprob: -11.875514030456543
    6. ' weights' → logprob: -12.625514030456543
    7. '(
' → logprob: -13.125514030456543
    8. ' (' → logprob: -13.875514030456543
    9. '(w' → logprob: -15.125514030456543
    10. '.weights' → logprob: -15.125514030456543

Token 95: ')):
' (ID: 22530)
  Prédit: ')):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')):' → logprob: -0.009590217843651772
    2. ')):
' → logprob: -5.259590148925781
    3. '))' → logprob: -6.009590148925781
    4. '):' → logprob: -6.509590148925781
    5. ':' → logprob: -8.259590148925781
    6. ')' → logprob: -9.759590148925781
    7. ')):
' → logprob: -10.384590148925781
    8. '   ' → logprob: -10.509590148925781
    9. ' ' → logprob: -11.634590148925781
    10. ' ))' → logprob: -12.134590148925781

Token 96: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2847324311733246
    2. ':' → logprob: -1.409732460975647
    3. '):' → logprob: -6.534732341766357
    4. '<|end|>' → logprob: -7.659732341766357
    5. ':
' → logprob: -7.909732341766357
    6. ',' → logprob: -7.909732341766357
    7. ' :' → logprob: -8.034732818603516
    8. '        
' → logprob: -8.659732818603516
    9. '   ' → logprob: -8.909732818603516
    10. '<|end|>' → logprob: -9.659732818603516

Token 97: ' total' (ID: 3609)
  Prédit: ' total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.27935075759887695
    2. ' sum' → logprob: -2.529350757598877
    3. '       ' → logprob: -2.779350757598877
    4. 'total' (adapté à ' total') → logprob: -3.029350757598877
    5. 'sum' → logprob: -3.654350757598877
    6. ' weight' → logprob: -4.779350757598877
    7. '   ' → logprob: -5.029350757598877
    8. 'weight' → logprob: -6.029350757598877
    9. ' net' → logprob: -6.654350757598877
    10. ' if' → logprob: -6.904350757598877

Token 98: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.011441526934504509
    2. '=' → logprob: -4.511441707611084
    3. '=sum' → logprob: -8.261441230773926
    4. '_sum' → logprob: -9.386441230773926
    5. 'sum' → logprob: -11.011441230773926
    6. '_weight' → logprob: -11.386441230773926
    7. ' ' → logprob: -11.511441230773926
    8. 's' → logprob: -12.761441230773926
    9. ' +=' → logprob: -13.136441230773926
    10. '_amount' → logprob: -13.136441230773926

Token 99: ' ' (ID: 220)
  Prédit: ' sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.22835616767406464
    2. 'sum' → logprob: -1.728356122970581
    3. '0' → logprob: -3.853356122970581
    4. ' ' → logprob: -5.22835636138916
    5. '	sum' → logprob: -11.97835636138916
    6. '(sum' → logprob: -12.97835636138916
    7. '1' → logprob: -13.85335636138916
    8. '   ' → logprob: -14.35335636138916
    9. '=sum' → logprob: -14.72835636138916
    10. '  ' → logprob: -15.10335636138916

Token 100: '0' (ID: 15)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.6492239236831665
    2. ' sum' → logprob: -1.0242239236831665
    3. '0' → logprob: -2.149223804473877
    4. ' ' → logprob: -6.274223804473877
    5. '   ' → logprob: -12.274224281311035
    6. '	sum' → logprob: -12.274224281311035
    7. '(sum' → logprob: -12.899224281311035
    8. '  ' → logprob: -13.899224281311035
    9. '.sum' → logprob: -14.899224281311035
    10. ' sums' → logprob: -15.024224281311035

Token 101: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8660306334495544
    2. '<|end|>' → logprob: -0.8660306334495544
    3. '
' → logprob: -1.8660306930541992
    4. '<|end|>' → logprob: -5.866030693054199
    5. ' for' → logprob: -7.866030693054199
    6. '        
' → logprob: -8.6160306930542
    7. '  
' → logprob: -9.2410306930542
    8. ' ' → logprob: -9.2410306930542
    9. 'for' → logprob: -9.6160306930542
    10. '        ' → logprob: -10.2410306930542

Token 102: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008675907738506794
    2. '
' → logprob: -5.008676052093506
    3. '<|end|>' → logprob: -6.508676052093506
    4. ' for' → logprob: -8.133675575256348
    5. '        
' → logprob: -10.133675575256348
    6. '<|end|>' → logprob: -10.508675575256348
    7. 'for' → logprob: -10.633675575256348
    8. '        ' → logprob: -11.258675575256348
    9. '	' → logprob: -11.383675575256348
    10. '   ' → logprob: -11.508675575256348

Token 103: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6101962327957153
    2. 'for' (adapté à ' for') → logprob: -1.3601962327957153
    3. '       ' → logprob: -1.6101962327957153
    4. '	for' → logprob: -8.485196113586426
    5. '   ' → logprob: -9.485196113586426
    6. '
' → logprob: -12.235196113586426
    7. '	   ' → logprob: -12.860196113586426
    8. '	' → logprob: -12.985196113586426
    9. ' ' → logprob: -13.235196113586426
    10. '           ' → logprob: -14.110196113586426

Token 104: ' w' (ID: 286)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.498818963766098
    2. ' w' → logprob: -0.9988189935684204
    3. ' weight' → logprob: -4.123818874359131
    4. 'w' → logprob: -5.498818874359131
    5. 'i' → logprob: -6.498818874359131
    6. ' sign' → logprob: -7.373818874359131
    7. ' amount' → logprob: -7.748818874359131
    8. '   ' → logprob: -7.998818874359131
    9. ' pan' → logprob: -7.998818874359131
    10. ' ' → logprob: -8.498819351196289

Token 105: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003096785396337509
    2. ',w' → logprob: -6.378096580505371
    3. ' ,' → logprob: -7.628096580505371
    4. 'eight' → logprob: -8.003096580505371
    5. ',i' → logprob: -8.378096580505371
    6. ',e' → logprob: -8.378096580505371
    7. 'e' → logprob: -10.253096580505371
    8. ',index' → logprob: -11.378096580505371
    9. 't' → logprob: -11.628096580505371
    10. 'ight' → logprob: -11.753096580505371

Token 106: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.25584471225738525
    2. ' s' → logprob: -1.8808447122573853
    3. 'sign' → logprob: -2.7558445930480957
    4. ' sign' → logprob: -5.255844593048096
    5. 'pan' → logprob: -5.630844593048096
    6. 'p' → logprob: -7.380844593048096
    7. ' p' → logprob: -9.005845069885254
    8. ' pan' → logprob: -9.255845069885254
    9. 'sig' → logprob: -11.005845069885254
    10. '   ' → logprob: -11.130845069885254

Token 107: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.002505743643268943
    2. 'in' → logprob: -6.002505779266357
    3. 's' → logprob: -11.1275053024292
    4. ' ' → logprob: -11.6275053024292
    5. '   ' → logprob: -13.6275053024292
    6. 'n' → logprob: -13.7525053024292
    7. 'w' → logprob: -14.1275053024292
    8. ',' → logprob: -14.7525053024292
    9. '	in' → logprob: -15.0025053024292
    10. '  ' → logprob: -15.1275053024292

Token 108: ' zip' (ID: 16216)
  Prédit: 'zip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'zip' → logprob: -0.0024763736873865128
    2. ' zip' → logprob: -6.002476215362549
    3. '(zip' → logprob: -14.252476692199707
    4. '_zip' → logprob: -18.37747573852539
    5. '.zip' → logprob: -18.62747573852539
    6. 'z' → logprob: -19.37747573852539
    7. 'enumer' → logprob: -19.87747573852539
    8. 'Zip' → logprob: -20.12747573852539
    9. ' ' → logprob: -21.50247573852539
    10. '   ' → logprob: -22.37747573852539

Token 109: '(weights' (ID: 154124)
  Prédit: '(weights'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(weights' → logprob: -9.729906196298543e-06
    2. 'weights' → logprob: -12.000009536743164
    3. ' weights' → logprob: -12.625009536743164
    4. '(weight' → logprob: -16.250009536743164
    5. '_weights' → logprob: -16.750009536743164
    6. 'Weights' → logprob: -17.000009536743164
    7. '.weights' → logprob: -17.125009536743164
    8. '(' → logprob: -17.250009536743164
    9. '(words' → logprob: -19.000009536743164
    10. ' (' → logprob: -19.000009536743164

Token 110: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08175256848335266
    2. ',p' → logprob: -2.5817525386810303
    3. ',w' → logprob: -6.206752777099609
    4. ' ,' → logprob: -7.581752777099609
    5. ',s' → logprob: -8.45675277709961
    6. '       ' → logprob: -9.70675277709961
    7. '   ' → logprob: -10.58175277709961
    8. ',user' → logprob: -12.20675277709961
    9. ',P' → logprob: -12.33175277709961
    10. ' pans' → logprob: -12.58175277709961

Token 111: ' pans' (ID: 73096)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.038243792951107025
    2. ' pans' → logprob: -3.2882437705993652
    3. '   ' → logprob: -8.913244247436523
    4. ')' → logprob: -11.413244247436523
    5. 'pan' → logprob: -11.663244247436523
    6. ')p' → logprob: -11.913244247436523
    7. '           ' → logprob: -12.288244247436523
    8. '    ' → logprob: -12.288244247436523
    9. ' ' → logprob: -12.413244247436523
    10. ' p' → logprob: -12.788244247436523

Token 112: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.1002630665898323
    2. '):' → logprob: -2.3502631187438965
    3. '):
' → logprob: -10.100262641906738
    4. '):

' → logprob: -11.600262641906738
    5. '       ' → logprob: -12.475262641906738
    6. '   ' → logprob: -13.725262641906738
    7. ' ):
' → logprob: -14.975262641906738
    8. ':' → logprob: -15.225262641906738
    9. ')' → logprob: -15.350262641906738
    10. '           ' → logprob: -15.725262641906738

Token 113: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002172028413042426
    2. 'total' → logprob: -6.627171993255615
    3. ' total' → logprob: -7.127171993255615
    4. '(total' → logprob: -11.377172470092773
    5. '
' → logprob: -11.877172470092773
    6. '            
' → logprob: -12.002172470092773
    7. '               ' → logprob: -12.252172470092773
    8. ' 
' → logprob: -13.002172470092773
    9. '	       ' → logprob: -13.502172470092773
    10. '       ' → logprob: -13.627172470092773

Token 114: ' total' (ID: 3609)
  Prédit: ' total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.26274386048316956
    2. '           ' → logprob: -1.6377438306808472
    3. 'total' (adapté à ' total') → logprob: -3.3877439498901367
    4. '               ' → logprob: -6.137743949890137
    5. '(total' → logprob: -8.637743949890137
    6. '	total' → logprob: -8.637743949890137
    7. '   ' → logprob: -9.387743949890137
    8. ' ' → logprob: -9.512743949890137
    9. ' ' → logprob: -10.012743949890137
    10. '            ' → logprob: -10.387743949890137

Token 115: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.043015290051698685
    2. '+=' → logprob: -3.168015241622925
    3. '+=(' → logprob: -11.793015480041504
    4. '+' → logprob: -12.418015480041504
    5. ']+=' → logprob: -12.793015480041504
    6. '    ' → logprob: -14.668015480041504
    7. '+='' → logprob: -14.668015480041504
    8. ' ' → logprob: -15.043015480041504
    9. '+="' → logprob: -15.668015480041504
    10. '<|end|>' → logprob: -15.668015480041504

Token 116: ' w' (ID: 286)
  Prédit: ' w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' w' → logprob: -0.14268723130226135
    2. 'w' → logprob: -2.0176873207092285
    3. ' s' → logprob: -12.01768684387207
    4. 's' → logprob: -12.14268684387207
    5. ' ' → logprob: -15.01768684387207
    6. '	w' → logprob: -15.51768684387207
    7. '   ' → logprob: -16.51768684387207
    8. '    ' → logprob: -16.76768684387207
    9. '*w' → logprob: -16.76768684387207
    10. '(w' → logprob: -17.26768684387207

Token 117: '*s' (ID: 71191)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.0831618458032608
    2. '*' → logprob: -2.5831618309020996
    3. '*s' → logprob: -5.4581618309021
    4. ' ' → logprob: -13.833162307739258
    5. '   ' → logprob: -15.333162307739258
    6. 's' → logprob: -15.958162307739258
    7. '*w' → logprob: -17.083162307739258
    8. ' ' → logprob: -17.208162307739258
    9. '           ' → logprob: -17.458162307739258
    10. '  ' → logprob: -17.458162307739258

Token 118: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5239607691764832
    2. '
' → logprob: -0.8989607691764832
    3. '
' → logprob: -7.398960590362549
    4. '<|end|>' → logprob: -9.523961067199707
    5. '   ' → logprob: -9.773961067199707
    6. '        
' → logprob: -10.648961067199707
    7. '<|end|>' → logprob: -11.023961067199707
    8. '    
' → logprob: -11.273961067199707
    9. '  
' → logprob: -11.273961067199707
    10. '

' → logprob: -12.773961067199707

Token 119: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0004038593906443566
    2. '
' → logprob: -8.12540340423584
    3. '<|end|>' → logprob: -10.00040340423584
    4. ' if' → logprob: -10.75040340423584
    5. '        
' → logprob: -11.25040340423584
    6. '   ' → logprob: -11.87540340423584
    7. '           ' → logprob: -12.00040340423584
    8. ',' → logprob: -12.37540340423584
    9. '<|end|>' → logprob: -13.00040340423584
    10. '  
' → logprob: -13.37540340423584

Token 120: ' possible' (ID: 4149)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.36924484372138977
    2. '   ' → logprob: -1.8692448139190674
    3. ' if' → logprob: -2.1192448139190674
    4. ' possible' → logprob: -3.6192448139190674
    5. 'if' → logprob: -5.6192450523376465
    6. 'possible' (adapté à ' possible') → logprob: -5.6192450523376465
    7. '
' → logprob: -9.119244575500488
    8. '    ' → logprob: -9.869244575500488
    9. '        
' → logprob: -10.494244575500488
    10. '    
' → logprob: -10.619244575500488

Token 121: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.018175223842263222
    2. '.' → logprob: -4.01817512512207
    3. '.update' → logprob: -11.01817512512207
    4. '.setdefault' → logprob: -12.64317512512207
    5. ' .' → logprob: -13.14317512512207
    6. '.append' → logprob: -13.51817512512207
    7. '.Add' → logprob: -14.51817512512207
    8. '.insert' → logprob: -15.01817512512207
    9. ').' → logprob: -15.39317512512207
    10. '   ' → logprob: -15.39317512512207

Token 122: '(abs' (ID: 71957)
  Prédit: '(total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(total' → logprob: -4.723352049040841e-06
    2. '(' → logprob: -12.625004768371582
    3. ' (' → logprob: -14.375004768371582
    4. 'total' → logprob: -14.500004768371582
    5. '(abs' → logprob: -15.125004768371582
    6. ' total' → logprob: -17.625003814697266
    7. '(
' → logprob: -19.500003814697266
    8. '(amount' → logprob: -19.750003814697266
    9. ',total' → logprob: -19.875003814697266
    10. '((' → logprob: -20.000003814697266

Token 123: '(total' (ID: 39744)
  Prédit: '(total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(total' → logprob: -0.00023393364972434938
    2. 'total' → logprob: -8.37523365020752
    3. '(amount' → logprob: -13.37523365020752
    4. ' total' → logprob: -14.00023365020752
    5. '(' → logprob: -14.50023365020752
    6. ')' → logprob: -15.50023365020752
    7. ',total' → logprob: -15.87523365020752
    8. '	total' → logprob: -16.125234603881836
    9. ')(' → logprob: -18.250234603881836
    10. '_total' → logprob: -18.375234603881836

Token 124: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.06201798468828201
    2. ')' → logprob: -2.8120179176330566
    3. ' ))' → logprob: -10.937018394470215
    4. '))
' → logprob: -11.187018394470215
    5. ')))' → logprob: -11.812018394470215
    6. '   ' → logprob: -12.187018394470215
    7. ' )' → logprob: -12.937018394470215
    8. ')
' → logprob: -13.687018394470215
    9. '       ' → logprob: -14.062018394470215
    10. ' ' → logprob: -14.437018394470215

Token 125: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004977812524884939
    2. '    
' → logprob: -5.504977703094482
    3. '
' → logprob: -7.754977703094482
    4. '<|end|>' → logprob: -8.75497817993164
    5. '  
' → logprob: -9.25497817993164
    6. ' 
' → logprob: -9.62997817993164
    7. ' return' → logprob: -9.87997817993164
    8. '        
' → logprob: -10.50497817993164
    9. ' if' → logprob: -10.62997817993164
    10. '   
' → logprob: -11.00497817993164

Token 126: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010365772992372513
    2. ' return' → logprob: -4.760365962982178
    3. '    
' → logprob: -7.010365962982178
    4. ' for' → logprob: -8.26036548614502
    5. '
' → logprob: -8.38536548614502
    6. 'return' → logprob: -8.51036548614502
    7. ' 
' → logprob: -9.76036548614502
    8. ' if' → logprob: -10.51036548614502
    9. '  
' → logprob: -10.63536548614502
    10. '	return' → logprob: -11.51036548614502

Token 127: ' Vér' (ID: 159169)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.10152275115251541
    2. 'return' → logprob: -2.35152268409729
    3. ' for' → logprob: -7.226522922515869
    4. '   ' → logprob: -7.726522922515869
    5. 'def' → logprob: -10.101522445678711
    6. 'for' → logprob: -10.226522445678711
    7. ' amounts' → logprob: -10.851522445678711
    8. ' amount' → logprob: -11.101522445678711
    9. 'amount' → logprob: -12.101522445678711
    10. ' def' → logprob: -12.101522445678711

Token 128: 'ifie' (ID: 46409)
  Prédit: 'ifier'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifier' → logprob: -0.011646706610918045
    2. 'ifie' → logprob: -4.761646747589111
    3. 'if' → logprob: -6.386646747589111
    4. 'ifiez' → logprob: -6.761646747589111
    5. 'ifi' → logprob: -9.511646270751953
    6. 'ify' → logprob: -10.011646270751953
    7. 'ification' → logprob: -10.886646270751953
    8. 'ifié' → logprob: -11.636646270751953
    9. 'ifer' → logprob: -11.761646270751953
    10. 'ifiers' → logprob: -12.011646270751953

Token 129: ' si' (ID: 1784)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.08685453981161118
    2. ' amount' → logprob: -2.7118544578552246
    3. 'if' → logprob: -4.461854457855225
    4. 'amount' → logprob: -5.586854457855225
    5. ' return' → logprob: -7.086854457855225
    6. ' amounts' → logprob: -8.336854934692383
    7. '(amount' → logprob: -8.836854934692383
    8. '   ' → logprob: -8.961854934692383
    9. ' si' → logprob: -9.961854934692383
    10. ' for' → logprob: -10.711854934692383

Token 130: ' tout' (ID: 5501)
  Prédit: ' amount'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' amount' → logprob: -0.4369371831417084
    2. 'amount' → logprob: -1.0619372129440308
    3. ' amounts' → logprob: -4.81193733215332
    4. '(amount' → logprob: -9.93693733215332
    5. ' abs' → logprob: -12.06193733215332
    6. ' any' → logprob: -12.06193733215332
    7. '   ' → logprob: -12.68693733215332
    8. 'abs' → logprob: -12.81193733215332
    9. ' ' → logprob: -14.31193733215332
    10. ' the' → logprob: -14.43693733215332

Token 131: ' les' (ID: 1341)
  Prédit: ' amount'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' amount' → logprob: -0.2712400555610657
    2. 'amount' → logprob: -2.021239995956421
    3. '(amount' → logprob: -2.271239995956421
    4. ' montant' → logprob: -7.146240234375
    5. '   ' → logprob: -8.521240234375
    6. ' in' → logprob: -8.771240234375
    7. ' value' → logprob: -9.271240234375
    8. ' ' → logprob: -9.396240234375
    9. ' amounts' → logprob: -9.771240234375
    10. ' element' → logprob: -10.146240234375

Token 132: ' mont' (ID: 11554)
  Prédit: 'amount'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'amount' → logprob: -0.10757018625736237
    2. ' amount' → logprob: -2.982570171356201
    3. ' amounts' → logprob: -2.982570171356201
    4. '(amount' → logprob: -8.85757064819336
    5. 'am' → logprob: -8.98257064819336
    6. ' montant' → logprob: -9.60757064819336
    7. 'a' → logprob: -9.85757064819336
    8. 'amt' → logprob: -10.48257064819336
    9. 'mont' → logprob: -10.60757064819336
    10. ' am' → logprob: -10.73257064819336

Token 133: 'ants' (ID: 2027)
  Prédit: 'ants'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ants' → logprob: -0.0028701385017484426
    2. 'ant' → logprob: -5.877870082855225
    3. 'ans' → logprob: -10.877870559692383
    4. 's' → logprob: -11.127870559692383
    5. 'ages' → logprob: -11.752870559692383
    6. ' ants' → logprob: -12.002870559692383
    7. 'a' → logprob: -12.502870559692383
    8. ' amounts' → logprob: -12.627870559692383
    9. 'onts' → logprob: -14.002870559692383
    10. 'amount' → logprob: -14.002870559692383

Token 134: ' sont' (ID: 5242)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.23475860059261322
    2. ' sont' → logprob: -2.8597586154937744
    3. ' dans' → logprob: -3.2347586154937744
    4. 'dans' → logprob: -3.4847586154937744
    5. 'in' → logprob: -3.6097586154937744
    6. ' en' → logprob: -3.7347586154937744
    7. 's' → logprob: -5.359758377075195
    8. ' de' → logprob: -5.609758377075195
    9. 'amount' → logprob: -5.859758377075195
    10. ' are' → logprob: -6.109758377075195

Token 135: ' mes' (ID: 3886)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.9386851191520691
    2. 'all' → logprob: -1.1886851787567139
    3. 'amount' → logprob: -1.4386851787567139
    4. 'possible' → logprob: -3.188685178756714
    5. ' in' → logprob: -4.063684940338135
    6. ' all' → logprob: -5.438684940338135
    7. ' possible' → logprob: -6.688684940338135
    8. ' amount' → logprob: -6.813684940338135
    9. 'subset' → logprob: -7.313684940338135
    10. 'contained' → logprob: -8.188685417175293

Token 136: 'ur' (ID: 330)
  Prédit: 'ur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ur' → logprob: -0.030378032475709915
    2. 'sur' → logprob: -4.1553778648376465
    3. 'urable' → logprob: -4.5303778648376465
    4. 'uré' → logprob: -7.2803778648376465
    5. 'ures' → logprob: -7.5303778648376465
    6. 'urs' → logprob: -7.7803778648376465
    7. 'ured' → logprob: -8.030378341674805
    8. 's' → logprob: -8.155378341674805
    9. 'urée' → logprob: -8.530378341674805
    10. 'sure' → logprob: -8.780378341674805

Token 137: 'ables' (ID: 3232)
  Prédit: 'és'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.12815195322036743
    2. 'ables' → logprob: -2.1281518936157227
    3. 'es' → logprob: -7.128151893615723
    4. 'able' → logprob: -8.503151893615723
    5. 'ur' → logprob: -9.378151893615723
    6. 's' → logprob: -9.878151893615723
    7. 'é' → logprob: -10.253151893615723
    8. 'er' → logprob: -11.378151893615723
    9. '   ' → logprob: -11.878151893615723
    10. '```' → logprob: -12.253151893615723

Token 138: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0006385732558555901
    2. ' for' → logprob: -7.500638484954834
    3. 'for' → logprob: -9.875638961791992
    4. 'return' → logprob: -11.375638961791992
    5. ' return' → logprob: -11.500638961791992
    6. '    
' → logprob: -12.250638961791992
    7. '
' → logprob: -13.000638961791992
    8. '	for' → logprob: -13.625638961791992
    9. ' ' → logprob: -14.125638961791992
    10. '  ' → logprob: -14.500638961791992

Token 139: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -3.857719275401905e-05
    2. ' for' → logprob: -10.625038146972656
    3. ' return' → logprob: -12.500038146972656
    4. '
' → logprob: -12.625038146972656
    5. '    
' → logprob: -12.625038146972656
    6. 'return' → logprob: -13.625038146972656
    7. 'for' → logprob: -13.750038146972656
    8. '    ' → logprob: -14.750038146972656
    9. 'def' → logprob: -15.125038146972656
    10. '	return' → logprob: -15.375038146972656

Token 140: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23009149730205536
    2. 'return' → logprob: -1.9800914525985718
    3. ' return' → logprob: -2.9800915718078613
    4. 'for' (adapté à ' for') → logprob: -4.480091571807861
    5. ' for' → logprob: -5.230091571807861
    6. ' ' → logprob: -12.355091094970703
    7. '  ' → logprob: -13.605091094970703
    8. '
' → logprob: -13.605091094970703
    9. '	return' → logprob: -13.730091094970703
    10. '    
' → logprob: -15.105091094970703

Token 141: ' a' (ID: 261)
  Prédit: ' amount'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' amount' → logprob: -0.05610194057226181
    2. 'amount' → logprob: -2.9311020374298096
    3. ' amt' → logprob: -6.9311017990112305
    4. 'amt' → logprob: -8.93110179901123
    5. 'a' → logprob: -10.30610179901123
    6. ' a' → logprob: -10.55610179901123
    7. ' montant' → logprob: -10.93110179901123
    8. '(amount' → logprob: -11.30610179901123
    9. ' am' → logprob: -11.43110179901123
    10. 'am' → logprob: -12.55610179901123

Token 142: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.005245141219347715
    2. 'in' → logprob: -5.255245208740234
    3. 'n' → logprob: -12.005245208740234
    4. ' ' → logprob: -12.880245208740234
    5. 's' → logprob: -13.755245208740234
    6. ' ' → logprob: -14.755245208740234
    7. ',' → logprob: -14.880245208740234
    8. '  ' → logprob: -15.630245208740234
    9. '_in' → logprob: -15.755245208740234
    10. 'd' → logprob: -15.880245208740234

Token 143: ' amounts' (ID: 22586)
  Prédit: 'amount'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'amount' → logprob: -0.004637199454009533
    2. ' amounts' → logprob: -5.379637241363525
    3. '(amount' → logprob: -11.504636764526367
    4. ' amount' → logprob: -12.254636764526367
    5. 'am' → logprob: -14.004636764526367
    6. '.amount' → logprob: -14.754636764526367
    7. '_amount' → logprob: -14.879636764526367
    8. '   ' → logprob: -15.254636764526367
    9. 'Amounts' → logprob: -16.004636764526367
    10. '[' → logprob: -17.754636764526367

Token 144: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.022559115663170815
    2. ':
' → logprob: -3.89755916595459
    3. '   ' → logprob: -6.77255916595459
    4. ' :' → logprob: -7.39755916595459
    5. '       ' → logprob: -9.89755916595459
    6. ' in' → logprob: -10.39755916595459
    7. '<|end|>' → logprob: -10.39755916595459
    8. ':

' → logprob: -10.52255916595459
    9. ' if' → logprob: -10.64755916595459
    10. ' :
' → logprob: -10.89755916595459

Token 145: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0041841790080070496
    2. ' if' → logprob: -5.504184246063232
    3. ',' → logprob: -10.254183769226074
    4. 'if' → logprob: -11.004183769226074
    5. ':' → logprob: -11.004183769226074
    6. '<|end|>' → logprob: -11.254183769226074
    7. '   ' → logprob: -11.629183769226074
    8. ':
' → logprob: -13.004183769226074
    9. '<|end|>' → logprob: -13.254183769226074
    10. '	   ' → logprob: -13.504183769226074

Token 146: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.34109488129615784
    2. 'if' (adapté à ' if') → logprob: -1.7160948514938354
    3. '       ' → logprob: -2.216094970703125
    4. '   ' → logprob: -8.591094970703125
    5. '    ' → logprob: -11.216094970703125
    6. ' ' → logprob: -12.841094970703125
    7. '	if' → logprob: -12.966094970703125
    8. 'If' → logprob: -13.966094970703125
    9. '           ' → logprob: -14.216094970703125
    10. '     ' → logprob: -14.841094970703125

Token 147: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.10020958632230759
    2. 'a' → logprob: -2.3502094745635986
    3. ' not' → logprob: -13.35020923614502
    4. 'not' → logprob: -14.97520923614502
    5. '       ' → logprob: -15.10020923614502
    6. '    ' → logprob: -15.47520923614502
    7. ' abs' → logprob: -15.72520923614502
    8. '   ' → logprob: -15.97520923614502
    9. '        ' → logprob: -16.350210189819336
    10. '	a' → logprob: -16.725210189819336

Token 148: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.012516365386545658
    2. 'not' → logprob: -4.387516498565674
    3. ')' → logprob: -12.512516021728516
    4. '>' → logprob: -13.262516021728516
    5. ' >' → logprob: -14.262516021728516
    6. ' )' → logprob: -16.137516021728516
    7. '	not' → logprob: -16.137516021728516
    8. 'import' → logprob: -16.512516021728516
    9. ' ' → logprob: -16.762516021728516
    10. ' in' → logprob: -17.387516021728516

Token 149: ' in' (ID: 306)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'possible' → logprob: -0.3245986998081207
    2. ' possible' → logprob: -1.4495986700057983
    3. ' in' → logprob: -3.199598789215088
    4. 'in' → logprob: -6.449598789215088
    5. '_possible' → logprob: -9.19959831237793
    6. '   ' → logprob: -10.69959831237793
    7. ' posible' → logprob: -11.07459831237793
    8. 'poss' → logprob: -12.57459831237793
    9. 'Possible' → logprob: -12.69959831237793
    10. ' possibles' → logprob: -12.82459831237793

Token 150: ' possible' (ID: 4149)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'possible' → logprob: -0.009757270105183125
    2. ' possible' → logprob: -4.634757041931152
    3. '   ' → logprob: -14.384757041931152
    4. 'poss' → logprob: -14.634757041931152
    5. 'Possible' → logprob: -16.25975799560547
    6. ' posible' → logprob: -16.50975799560547
    7. '_possible' → logprob: -16.50975799560547
    8. 'pos' → logprob: -17.63475799560547
    9. ' possibles' → logprob: -17.63475799560547
    10. ' ' → logprob: -17.75975799560547

Token 151: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.026897771283984184
    2. ':
' → logprob: -3.651897668838501
    3. ':return' → logprob: -7.90189790725708
    4. '       ' → logprob: -8.901897430419922
    5. '           ' → logprob: -9.526897430419922
    6. '):
' → logprob: -11.901897430419922
    7. ':
' → logprob: -12.526897430419922
    8. '):' → logprob: -12.651897430419922
    9. '():
' → logprob: -13.776897430419922
    10. ':

' → logprob: -14.026897430419922

Token 152: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006593751721084118
    2. ':' → logprob: -5.756593704223633
    3. ':
' → logprob: -5.756593704223633
    4. ':return' → logprob: -9.256593704223633
    5. ' return' → logprob: -9.506593704223633
    6. 'return' → logprob: -9.881593704223633
    7. '       ' → logprob: -11.131593704223633
    8. '               ' → logprob: -13.131593704223633
    9. '):
' → logprob: -13.256593704223633
    10. '
' → logprob: -13.631593704223633

Token 153: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.5041492581367493
    2. ' return' → logprob: -1.0041491985321045
    3. '           ' → logprob: -4.004149436950684
    4. '       ' → logprob: -4.504149436950684
    5. '               ' → logprob: -8.129149436950684
    6. '   ' → logprob: -11.379149436950684
    7. '	return' → logprob: -11.879149436950684
    8. '
' → logprob: -12.004149436950684
    9. '{return' → logprob: -13.754149436950684
    10. ':return' → logprob: -14.629149436950684

Token 154: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.029750484973192215
    2. ' False' → logprob: -3.5297505855560303
    3. 'True' → logprob: -19.40475082397461
    4. '(False' → logprob: -19.77975082397461
    5. '   ' → logprob: -21.27975082397461
    6. 'F' → logprob: -21.77975082397461
    7. 'false' → logprob: -21.77975082397461
    8. ' True' → logprob: -22.90475082397461
    9. '=False' → logprob: -23.02975082397461
    10. 'None' → logprob: -23.15475082397461

Token 155: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00015669701679144055
    2. '
' → logprob: -9.75015640258789
    3. ' return' → logprob: -10.12515640258789
    4. '    
' → logprob: -10.12515640258789
    5. 'return' → logprob: -11.37515640258789
    6. '	return' → logprob: -12.37515640258789
    7. '  
' → logprob: -14.12515640258789
    8. '       ' → logprob: -14.37515640258789
    9. '        
' → logprob: -15.12515640258789
    10. '\n' → logprob: -15.75015640258789

Token 156: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0006234417669475079
    2. ' return' → logprob: -8.37562370300293
    3. '
' → logprob: -8.50062370300293
    4. '    
' → logprob: -9.00062370300293
    5. 'return' → logprob: -9.87562370300293
    6. '	return' → logprob: -11.50062370300293
    7. '  
' → logprob: -13.50062370300293
    8. ' 
' → logprob: -14.12562370300293
    9. '       ' → logprob: -14.75062370300293
    10. '        
' → logprob: -14.87562370300293

Token 157: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009943309240043163
    2. 'return' (adapté à ' return') → logprob: -4.75994348526001
    3. ' return' → logprob: -6.63494348526001
    4. '
' → logprob: -11.509943008422852
    5. '    
' → logprob: -13.009943008422852
    6. '	return' → logprob: -13.509943008422852
    7. '```' → logprob: -15.884943008422852
    8. '       ' → logprob: -16.00994300842285
    9. ':return' → logprob: -16.38494300842285
    10. 'eturn' → logprob: -16.75994300842285

Token 158: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.06196768581867218
    2. ' True' → logprob: -2.811967611312866
    3. '   ' → logprob: -17.686967849731445
    4. '(True' → logprob: -18.311967849731445
    5. '=True' → logprob: -21.061967849731445
    6. 'true' → logprob: -22.061967849731445
    7. 'False' → logprob: -22.561967849731445
    8. ' ' → logprob: -22.811967849731445
    9. '```' → logprob: -23.686967849731445
    10. ' ' → logprob: -24.061967849731445

Token 159: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 160: 'def' (ID: 1314)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -1.033766746520996
    2. 'def' → logprob: -1.283766746520996
    3. 'print' → logprob: -1.908766746520996
    4. 'amount' → logprob: -2.283766746520996
    5. 'weights' → logprob: -3.533766746520996
    6. '
' → logprob: -3.658766746520996
    7. '```' → logprob: -3.783766746520996
    8. 'import' → logprob: -4.533766746520996
    9. 'for' → logprob: -5.158766746520996
    10. '  
' → logprob: -5.283766746520996

Token 161: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.015495529398322105
    2. ' can' → logprob: -5.515495300292969
    3. ' find' → logprob: -5.515495300292969
    4. ' best' → logprob: -6.515495300292969
    5. 'main' → logprob: -6.765495300292969
    6. ' test' → logprob: -7.140495300292969
    7. ' solve' → logprob: -7.140495300292969
    8. ' is' → logprob: -7.390495300292969
    9. ' optimize' → logprob: -7.640495300292969
    10. ' weigh' → logprob: -8.265495300292969

Token 162: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0016350740334019065
    2. '(' → logprob: -6.6266350746154785
    3. ' ():' → logprob: -8.25163459777832
    4. '():
' → logprob: -11.00163459777832
    5. ':' → logprob: -11.00163459777832
    6. '()' → logprob: -12.00163459777832
    7. ' (' → logprob: -12.75163459777832
    8. '(:' → logprob: -13.12663459777832
    9. '(":' → logprob: -14.00163459777832
    10. '(args' → logprob: -14.00163459777832

Token 163: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07650993019342422
    2. ' amounts' → logprob: -2.701509952545166
    3. ' import' → logprob: -5.451509952545166
    4. ' amount' → logprob: -6.826509952545166
    5. 'import' → logprob: -7.951509952545166
    6. ' weights' → logprob: -8.451509475708008
    7. '(amount' → logprob: -8.701509475708008
    8. '    
' → logprob: -9.451509475708008
    9. 'amount' → logprob: -10.201509475708008
    10. '(' → logprob: -10.451509475708008

Token 164: ' for' (ID: 395)
  Prédit: ' import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.6926552653312683
    2. ' amounts' → logprob: -1.442655324935913
    3. ' n' → logprob: -1.692655324935913
    4. '   ' → logprob: -2.692655324935913
    5. 'import' → logprob: -5.192655086517334
    6. 'n' → logprob: -6.067655086517334
    7. ' weights' → logprob: -6.317655086517334
    8. ' amount' → logprob: -7.067655086517334
    9. ' input' → logprob: -7.817655086517334
    10. 'amount' → logprob: -8.692655563354492

Token 165: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.04285484552383423
    2. ' amount' → logprob: -3.2928547859191895
    3. 'amount' → logprob: -6.0428547859191895
    4. 'line' → logprob: -6.9178547859191895
    5. ' _' → logprob: -7.4178547859191895
    6. ' i' → logprob: -8.417855262756348
    7. ' amt' → logprob: -9.042855262756348
    8. ' arg' → logprob: -9.417855262756348
    9. ' ligne' → logprob: -9.542855262756348
    10. ' amounts' → logprob: -9.542855262756348

Token 166: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0008174888207577169
    2. 'in' → logprob: -7.12581729888916
    3. ' ' → logprob: -12.37581729888916
    4. 'line' → logprob: -13.25081729888916
    5. '   ' → logprob: -13.75081729888916
    6. '_in' → logprob: -14.00081729888916
    7. '_' → logprob: -14.00081729888916
    8. '()' → logprob: -14.12581729888916
    9. 's' → logprob: -14.87581729888916
    10. 'import' → logprob: -15.00081729888916

Token 167: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.20143447816371918
    2. ' sys' → logprob: -1.7014344930648804
    3. '=sys' → logprob: -11.201434135437012
    4. '(sys' → logprob: -12.451434135437012
    5. '	sys' → logprob: -12.826434135437012
    6. 'import' → logprob: -14.826434135437012
    7. '```' → logprob: -16.076435089111328
    8. 'stdin' → logprob: -16.076435089111328
    9. '   ' → logprob: -16.201435089111328
    10. 'iter' → logprob: -16.826435089111328

Token 168: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.0002222516923211515
    2. 'stdin' → logprob: -8.500222206115723
    3. '(stdin' → logprob: -11.625222206115723
    4. '.readline' → logprob: -12.125222206115723
    5. ' stdin' → logprob: -13.250222206115723
    6. '.' → logprob: -13.375222206115723
    7. '.argv' → logprob: -14.625222206115723
    8. '.stdout' → logprob: -15.250222206115723
    9. 'import' → logprob: -15.500222206115723
    10. 'in' → logprob: -16.50022315979004

Token 169: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01749299466609955
    2. '.strip' → logprob: -4.517492771148682
    3. '.rstrip' → logprob: -6.267492771148682
    4. '.readline' → logprob: -6.392492771148682
    5. ':
' → logprob: -6.892492771148682
    6. '():' → logprob: -7.267492771148682
    7. '.readlines' → logprob: -7.642492771148682
    8. '.split' → logprob: -8.51749324798584
    9. '):' → logprob: -9.39249324798584
    10. ' in' → logprob: -9.64249324798584

Token 170: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0009562437771819532
    2. '   ' → logprob: -7.500956058502197
    3. '        
' → logprob: -8.500956535339355
    4. '    
' → logprob: -9.750956535339355
    5. ',' → logprob: -10.000956535339355
    6. ':' → logprob: -10.375956535339355
    7. ' if' → logprob: -11.250956535339355
    8. ' line' → logprob: -11.375956535339355
    9. '<|end|>' → logprob: -11.500956535339355
    10. '.strip' → logprob: -12.250956535339355

Token 171: ' if' (ID: 538)
  Prédit: ' amounts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' amounts' → logprob: -0.36779502034187317
    2. ' line' → logprob: -1.2427949905395508
    3. ' parts' → logprob: -5.242794990539551
    4. 'line' → logprob: -5.492794990539551
    5. 'amount' → logprob: -5.492794990539551
    6. ' if' → logprob: -6.242794990539551
    7. ' amount' → logprob: -6.617794990539551
    8. '   ' → logprob: -6.617794990539551
    9. ' weights' → logprob: -7.492794990539551
    10. 'if' (adapté à ' if') → logprob: -9.61779499053955

Token 172: ' line' (ID: 2543)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.007060246542096138
    2. ' line' → logprob: -5.0070600509643555
    3. 'not' → logprob: -8.007060050964355
    4. 'line' → logprob: -11.382060050964355
    5. ' ' → logprob: -15.007060050964355
    6. ' ' → logprob: -17.757061004638672
    7. '	not' → logprob: -19.757061004638672
    8. '	line' → logprob: -20.382061004638672
    9. '=line' → logprob: -20.382061004638672
    10. '#line' → logprob: -21.132061004638672

Token 173: '.strip' (ID: 40613)
  Prédit: '.strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.02665671706199646
    2. '.' → logprob: -3.7766566276550293
    3. '.startswith' → logprob: -5.776656627655029
    4. '.rstrip' → logprob: -8.651657104492188
    5. ' ==' → logprob: -9.776657104492188
    6. 'strip' → logprob: -10.276657104492188
    7. '==' → logprob: -11.026657104492188
    8. ' .' → logprob: -11.401657104492188
    9. 'startswith' → logprob: -12.151657104492188
    10. ' strip' → logprob: -12.651657104492188

Token 174: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.38865914940834045
    2. '()==' → logprob: -1.138659119606018
    3. '():' → logprob: -7.0136590003967285
    4. '==' → logprob: -7.1386590003967285
    5. ' ==' → logprob: -9.388659477233887
    6. '()=="' → logprob: -12.263659477233887
    7. '():
' → logprob: -12.388659477233887
    8. ' ()' → logprob: -15.013659477233887
    9. '()>' → logprob: -16.38865852355957
    10. '()!=' → logprob: -16.88865852355957

Token 175: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.1606588065624237
    2. ' ==' → logprob: -1.910658836364746
    3. '()==' → logprob: -7.785658836364746
    4. '=='' → logprob: -12.410658836364746
    5. ':' → logprob: -12.535658836364746
    6. '=' → logprob: -12.785658836364746
    7. ')==' → logprob: -12.910658836364746
    8. '===' → logprob: -13.660658836364746
    9. '=="' → logprob: -13.785658836364746
    10. '()' → logprob: -13.910658836364746

Token 176: ' '':
' (ID: 125614)
  Prédit: '"":'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"":' → logprob: -0.4763756990432739
    2. '''' → logprob: -1.476375699043274
    3. '"' → logprob: -2.4763755798339844
    4. ''' → logprob: -3.3513755798339844
    5. '""' → logprob: -3.4763755798339844
    6. ''ex' → logprob: -8.351375579833984
    7. ''end' → logprob: -9.101375579833984
    8. ' "":
' → logprob: -10.601375579833984
    9. ' "' → logprob: -10.976375579833984
    10. ''en' → logprob: -11.226375579833984

Token 177: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4741141200065613
    2. '       ' → logprob: -0.9741141200065613
    3. '   ' → logprob: -11.724114418029785
    4. ':' → logprob: -11.849114418029785
    5. '	       ' → logprob: -11.849114418029785
    6. ',' → logprob: -12.724114418029785
    7. ' break' → logprob: -13.474114418029785
    8. ':
' → logprob: -13.599114418029785
    9. '	   ' → logprob: -13.724114418029785
    10. '
' → logprob: -13.724114418029785

Token 178: ' continue' (ID: 4901)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.366824209690094
    2. ' break' → logprob: -1.6168241500854492
    3. '       ' → logprob: -2.366824150085449
    4. '           ' → logprob: -4.241824150085449
    5. 'return' → logprob: -8.49182415008545
    6. '               ' → logprob: -9.74182415008545
    7. 'continue' (adapté à ' continue') → logprob: -9.86682415008545
    8. '	break' → logprob: -10.24182415008545
    9. ' return' → logprob: -11.11682415008545
    10. '   ' → logprob: -11.99182415008545

Token 179: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0001684981834841892
    2. '        
' → logprob: -8.875168800354004
    3. '<|end|>' → logprob: -11.250168800354004
    4. ',' → logprob: -12.375168800354004
    5. '   ' → logprob: -12.625168800354004
    6. '
' → logprob: -13.125168800354004
    7. '           ' → logprob: -13.625168800354004
    8. '	' → logprob: -14.125168800354004
    9. 'tokens' → logprob: -14.750168800354004
    10. '<|end|>' → logprob: -14.750168800354004

Token 180: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -3.0948158382670954e-05
    2. '   ' → logprob: -11.500030517578125
    3. '        
' → logprob: -11.500030517578125
    4. '<|end|>' → logprob: -12.500030517578125
    5. ',' → logprob: -13.500030517578125
    6. '           ' → logprob: -13.750030517578125
    7. '        ' → logprob: -14.375030517578125
    8. 'tokens' → logprob: -14.625030517578125
    9. ' tokens' → logprob: -14.750030517578125
    10. '      ' → logprob: -14.750030517578125

Token 181: ' n' (ID: 297)
  Prédit: 'amount'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'amount' → logprob: -0.3393704891204834
    2. ' parts' → logprob: -1.8393704891204834
    3. 'parts' → logprob: -2.4643704891204834
    4. ' amounts' → logprob: -3.4643704891204834
    5. 'n' (adapté à ' n') → logprob: -5.8393707275390625
    6. 'tokens' → logprob: -5.8393707275390625
    7. '   ' → logprob: -6.0893707275390625
    8. 'weights' → logprob: -6.4643707275390625
    9. ' n' → logprob: -7.3393707275390625
    10. 'inputs' → logprob: -7.7143707275390625

Token 182: ',m' (ID: 26648)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.221884101862088e-05
    2. ' ,' → logprob: -9.500092506408691
    3. ' =' → logprob: -12.375092506408691
    4. ',m' → logprob: -13.000092506408691
    5. ',num' → logprob: -13.250092506408691
    6. '=' → logprob: -13.375092506408691
    7. ',int' → logprob: -13.375092506408691
    8. ',n' → logprob: -13.625092506408691
    9. ',k' → logprob: -13.750092506408691
    10. ',w' → logprob: -14.625092506408691

Token 183: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20143964886665344
    2. '=' → logprob: -1.701439619064331
    3. ',' → logprob: -11.20143985748291
    4. '=int' → logprob: -12.20143985748291
    5. '=line' → logprob: -13.20143985748291
    6. ',n' → logprob: -13.57643985748291
    7. ' ' → logprob: -13.95143985748291
    8. '=n' → logprob: -14.07643985748291
    9. '=input' → logprob: -14.20143985748291
    10. '   ' → logprob: -14.57643985748291

Token 184: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.16025002300739288
    2. 'map' → logprob: -1.9102500677108765
    3. ' line' → logprob: -10.785249710083008
    4. 'line' → logprob: -12.535249710083008
    5. '[' → logprob: -14.160249710083008
    6. ' [' → logprob: -14.785249710083008
    7. '(map' → logprob: -15.535249710083008
    8. '	map' → logprob: -16.035249710083008
    9. ' ' → logprob: -16.285249710083008
    10. '.map' → logprob: -17.285249710083008

Token 185: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0015340241370722651
    2. '(str' → logprob: -6.5015339851379395
    3. '(' → logprob: -10.501534461975098
    4. '(lambda' → logprob: -13.001534461975098
    5. '(line' → logprob: -13.876534461975098
    6. 'int' → logprob: -14.376534461975098
    7. '[int' → logprob: -16.37653350830078
    8. '(eval' → logprob: -16.50153350830078
    9. ' (' → logprob: -16.75153350830078
    10. '(list' → logprob: -16.87653350830078

Token 186: ',' (ID: 11)
  Prédit: '(line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.0029024742543697357
    2. 'line' → logprob: -6.627902507781982
    3. ',line' → logprob: -6.752902507781982
    4. ')' → logprob: -8.377902030944824
    5. ' line' → logprob: -9.877902030944824
    6. '=line' → logprob: -10.002902030944824
    7. '(' → logprob: -10.377902030944824
    8. ',' → logprob: -10.752902030944824
    9. '#line' → logprob: -11.002902030944824
    10. '[line' → logprob: -12.002902030944824

Token 187: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.006715370807796717
    2. ' line' → logprob: -5.006715297698975
    3. '(line' → logprob: -17.506715774536133
    4. '	line' → logprob: -19.381715774536133
    5. '   ' → logprob: -20.631715774536133
    6. '[line' → logprob: -20.631715774536133
    7. '=line' → logprob: -21.631715774536133
    8. ')' → logprob: -22.381715774536133
    9. 'Line' → logprob: -22.506715774536133
    10. '#line' → logprob: -22.506715774536133

Token 188: '.strip' (ID: 40613)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0401933491230011
    2. '.strip' → logprob: -3.2901933193206787
    3. '.split' → logprob: -6.165193557739258
    4. '.' → logprob: -10.290193557739258
    5. '.readline' → logprob: -12.290193557739258
    6. '()' → logprob: -12.415193557739258
    7. ' .' → logprob: -12.540193557739258
    8. 'strip' → logprob: -13.790193557739258
    9. ')' → logprob: -15.540193557739258
    10. '.rstrip' → logprob: -15.540193557739258

Token 189: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -6.704273118884885e-07
    2. '()' → logprob: -14.250000953674316
    3. '.split' → logprob: -17.625
    4. ' ().' → logprob: -18.375
    5. 'split' → logprob: -20.375
    6. '(' → logprob: -20.625
    7. '('').' → logprob: -20.625
    8. '().'' → logprob: -20.75
    9. '()
' → logprob: -21.0
    10. '('' → logprob: -21.375

Token 190: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: 0.0
    2. '(split' → logprob: -16.875
    3. ' split' → logprob: -16.875
    4. '.split' → logprob: -19.25
    5. 'plit' → logprob: -20.25
    6. ')' → logprob: -20.5
    7. 'spl' → logprob: -20.875
    8. '```' → logprob: -20.875
    9. 'rstrip' → logprob: -21.5
    10. 'strip' → logprob: -21.75

Token 191: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.013754187151789665
    2. '()' → logprob: -4.638754367828369
    3. '('' → logprob: -5.888754367828369
    4. ')' → logprob: -7.888754367828369
    5. '())
' → logprob: -8.138753890991211
    6. '(','' → logprob: -8.138753890991211
    7. '(' → logprob: -8.388753890991211
    8. '(',' → logprob: -11.013753890991211
    9. '()))' → logprob: -11.888753890991211
    10. ' ())' → logprob: -12.638753890991211

Token 192: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06101182475686073
    2. 'weights' → logprob: -3.561011791229248
    3. '<|end|>' → logprob: -4.686011791229248
    4. '        
' → logprob: -4.811011791229248
    5. ' weights' → logprob: -5.686011791229248
    6. '
' → logprob: -5.811011791229248
    7. 'line' → logprob: -6.436011791229248
    8. 'tokens' → logprob: -7.186011791229248
    9. ',' → logprob: -7.436011791229248
    10. 'weight' → logprob: -7.811011791229248

Token 193: ' if' (ID: 538)
  Prédit: ' weights'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' weights' → logprob: -0.6357283592224121
    2. 'weights' → logprob: -0.7607283592224121
    3. '       ' → logprob: -6.010728359222412
    4. ' if' → logprob: -9.01072883605957
    5. 'if' (adapté à ' if') → logprob: -9.01072883605957
    6. 'weight' → logprob: -9.38572883605957
    7. '_weights' → logprob: -9.76072883605957
    8. 'w' → logprob: -10.01072883605957
    9. ' line' → logprob: -10.26072883605957
    10. 'line' → logprob: -10.51072883605957

Token 194: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.25194448232650757
    2. 'n' → logprob: -1.5019445419311523
    3. ' not' → logprob: -12.126944541931152
    4. '(n' → logprob: -12.126944541931152
    5. ' (' → logprob: -13.251944541931152
    6. 'm' → logprob: -14.001944541931152
    7. '(' → logprob: -14.751944541931152
    8. 'not' → logprob: -14.751944541931152
    9. ' ' → logprob: -14.876944541931152
    10. '	n' → logprob: -15.001944541931152

Token 195: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.25221332907676697
    2. '==' → logprob: -1.5022133588790894
    3. ' ' → logprob: -8.877213478088379
    4. '0' → logprob: -9.127213478088379
    5. '=' → logprob: -10.627213478088379
    6. '   ' → logprob: -12.502213478088379
    7. ' <=' → logprob: -13.127213478088379
    8. ')==' → logprob: -13.752213478088379
    9. '<=' → logprob: -13.877213478088379
    10. '()==' → logprob: -14.252213478088379

Token 196: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.0219828002154827e-05
    2. ' ' → logprob: -10.875020027160645
    3. 'm' → logprob: -13.625020027160645
    4. '```' → logprob: -17.12502098083496
    5. '-' → logprob: -18.25002098083496
    6. ' m' → logprob: -18.50002098083496
    7. '۰' → logprob: -19.00002098083496
    8. '   ' → logprob: -19.68752098083496
    9. 'and' → logprob: -19.75002098083496
    10. '``' → logprob: -20.37502098083496

Token 197: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.069664333248511e-05
    2. 'm' → logprob: -11.500020980834961
    3. ' ' → logprob: -11.500020980834961
    4. '```' → logprob: -16.12502098083496
    5. '-' → logprob: -16.62502098083496
    6. '
' → logprob: -16.81252098083496
    7. 'and' → logprob: -16.93752098083496
    8. ' m' → logprob: -17.25002098083496
    9. '۰' → logprob: -17.56252098083496
    10. 'end' → logprob: -17.62502098083496

Token 198: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.04859157279133797
    2. 'and' → logprob: -3.0485916137695312
    3. ' ' → logprob: -12.923591613769531
    4. '	and' → logprob: -13.548591613769531
    5. ':' → logprob: -15.423591613769531
    6. '   ' → logprob: -15.923591613769531
    7. ' и' → logprob: -16.54859161376953
    8. ' ' → logprob: -17.67359161376953
    9. ' or' → logprob: -17.92359161376953
    10. '0' → logprob: -18.29859161376953

Token 199: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.10020969063043594
    2. ' m' → logprob: -2.3502097129821777
    3. '   ' → logprob: -12.85020923614502
    4. '	m' → logprob: -15.47520923614502
    5. '  ' → logprob: -16.225210189819336
    6. ' ' → logprob: -16.350210189819336
    7. '    ' → logprob: -18.475210189819336
    8. '0' → logprob: -20.100210189819336
    9. ' ' → logprob: -20.100210189819336
    10. '       ' → logprob: -20.725210189819336

Token 200: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.5760126113891602
    2. '==' → logprob: -0.8260126113891602
    3. '<|end|>' → logprob: -10.45101261138916
    4. '=' → logprob: -10.70101261138916
    5. '0' → logprob: -12.07601261138916
    6. ' ' → logprob: -12.70101261138916
    7. ')==' → logprob: -12.82601261138916
    8. ')' → logprob: -13.70101261138916
    9. '===' → logprob: -13.70101261138916
    10. ']==' → logprob: -13.70101261138916

Token 201: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0021852378267794847
    2. ' ' → logprob: -6.127185344696045
    3. '<|end|>' → logprob: -16.752185821533203
    4. '   ' → logprob: -17.002185821533203
    5. '  ' → logprob: -18.002185821533203
    6. '۰' → logprob: -18.752185821533203
    7. '<|end|>' → logprob: -19.127185821533203
    8. '=' → logprob: -19.377185821533203
    9. '```' → logprob: -19.627185821533203
    10. '০' → logprob: -20.689685821533203

Token 202: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0003802680876106024
    2. ' ' → logprob: -7.875380039215088
    3. '   ' → logprob: -17.00037956237793
    4. '  ' → logprob: -17.25037956237793
    5. '۰' → logprob: -17.81287956237793
    6. '```' → logprob: -18.18787956237793
    7. '=' → logprob: -18.37537956237793
    8. '<|end|>' → logprob: -18.56287956237793
    9. '০' → logprob: -18.81287956237793
    10. '1' → logprob: -18.81287956237793

Token 203: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07893683016300201
    2. ':
' → logprob: -2.578936815261841
    3. ':return' → logprob: -10.578936576843262
    4. '       ' → logprob: -11.328936576843262
    5. '   ' → logprob: -12.203936576843262
    6. '           ' → logprob: -13.078936576843262
    7. ':

' → logprob: -14.703936576843262
    8. ',' → logprob: -14.828936576843262
    9. ' :' → logprob: -14.953936576843262
    10. ':
' → logprob: -14.953936576843262

Token 204: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -5.56233171664644e-05
    2. '       ' → logprob: -10.125055313110352
    3. ':' → logprob: -12.375055313110352
    4. '		' → logprob: -13.125055313110352
    5. ':
' → logprob: -13.250055313110352
    6. ',' → logprob: -13.375055313110352
    7. '	       ' → logprob: -13.500055313110352
    8. ' break' → logprob: -13.750055313110352
    9. '
' → logprob: -13.875055313110352
    10. '               ' → logprob: -14.375055313110352

Token 205: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.08256513625383377
    2. ' break' → logprob: -3.3325650691986084
    3. '           ' → logprob: -3.8325650691986084
    4. 'return' → logprob: -3.8325650691986084
    5. '       ' → logprob: -9.082565307617188
    6. ' return' → logprob: -9.207565307617188
    7. '               ' → logprob: -11.207565307617188
    8. '	break' → logprob: -11.582565307617188
    9. '   ' → logprob: -14.207565307617188
    10. '
' → logprob: -14.332565307617188

Token 206: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008753741858527064
    2. 'weights' → logprob: -7.750875473022461
    3. '<|end|>' → logprob: -9.125875473022461
    4. ' weights' → logprob: -9.250875473022461
    5. '        
' → logprob: -9.750875473022461
    6. '   ' → logprob: -10.000875473022461
    7. '	' → logprob: -10.250875473022461
    8. ',' → logprob: -10.750875473022461
    9. '```' → logprob: -11.000875473022461
    10. '
' → logprob: -11.000875473022461

Token 207: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003337529255077243
    2. 'weights' → logprob: -6.003337383270264
    3. '        
' → logprob: -7.878337383270264
    4. ' weights' → logprob: -8.878337860107422
    5. '<|end|>' → logprob: -9.003337860107422
    6. '   ' → logprob: -10.003337860107422
    7. '	' → logprob: -10.003337860107422
    8. 'weight' → logprob: -10.253337860107422
    9. '
' → logprob: -10.253337860107422
    10. '```' → logprob: -10.878337860107422

Token 208: ' amounts' (ID: 22586)
  Prédit: 'amount'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'amount' → logprob: -0.3445659279823303
    2. ' amounts' → logprob: -1.3445658683776855
    3. 'weights' → logprob: -3.8445658683776855
    4. '       ' → logprob: -5.2195658683776855
    5. ' weights' → logprob: -5.9695658683776855
    6. ' amount' → logprob: -7.0945658683776855
    7. '   ' → logprob: -8.219566345214844
    8. '```' → logprob: -9.469566345214844
    9. '        
' → logprob: -9.844566345214844
    10. 'Amounts' → logprob: -10.094566345214844

Token 209: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.006641241256147623
    2. ',' → logprob: -5.381641387939453
    3. '=' → logprob: -6.256641387939453
    4. ' ,' → logprob: -9.256641387939453
    5. ' =[' → logprob: -12.881641387939453
    6. ')' → logprob: -14.881641387939453
    7. ' ' → logprob: -15.131641387939453
    8. '=[]' → logprob: -15.131641387939453
    9. '   ' → logprob: -15.256641387939453
    10. '    ' → logprob: -15.506641387939453

Token 210: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.07898452132940292
    2. ' list' → logprob: -2.578984498977661
    3. '[list' → logprob: -9.578984260559082
    4. '[]' → logprob: -11.078984260559082
    5. '[' → logprob: -11.578984260559082
    6. ' [' → logprob: -14.953984260559082
    7. '=list' → logprob: -15.328984260559082
    8. ' []' → logprob: -16.8289852142334
    9. '	list' → logprob: -16.8289852142334
    10. 'map' → logprob: -16.9539852142334

Token 211: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -1.1994775377388578e-05
    2. '()' → logprob: -12.000012397766113
    3. '(range' → logprob: -12.750012397766113
    4. '(' → logprob: -12.875012397766113
    5. 'map' → logprob: -15.250012397766113
    6. '(int' → logprob: -17.375011444091797
    7. '	map' → logprob: -18.750011444091797
    8. '.map' → logprob: -19.125011444091797
    9. '   ' → logprob: -19.375011444091797
    10. '()
' → logprob: -19.625011444091797

Token 212: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0007491135620512068
    2. '(' → logprob: -7.625749111175537
    3. 'int' → logprob: -8.375749588012695
    4. '(str' → logprob: -11.375749588012695
    5. ')' → logprob: -12.375749588012695
    6. '<int' → logprob: -13.000749588012695
    7. '(
' → logprob: -13.250749588012695
    8. ']int' → logprob: -13.375749588012695
    9. '(map' → logprob: -13.500749588012695
    10. '[int' → logprob: -13.500749588012695

Token 213: ',' (ID: 11)
  Prédit: '(sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sys' → logprob: -0.9006243348121643
    2. ',' → logprob: -1.4006242752075195
    3. '(line' → logprob: -1.4006242752075195
    4. 'sys' → logprob: -2.5256242752075195
    5. '(input' → logprob: -4.9006242752075195
    6. '(' → logprob: -5.0256242752075195
    7. ',input' → logprob: -5.9006242752075195
    8. ',line' → logprob: -5.9006242752075195
    9. 'input' → logprob: -6.9006242752075195
    10. ' sys' → logprob: -9.40062427520752

Token 214: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.0015634235460311174
    2. ' sys' → logprob: -6.751563549041748
    3. 'input' → logprob: -7.876563549041748
    4. 'line' → logprob: -11.87656307220459
    5. '(sys' → logprob: -12.37656307220459
    6. ' input' → logprob: -13.25156307220459
    7. '   ' → logprob: -14.62656307220459
    8. '	sys' → logprob: -16.376564025878906
    9. ')' → logprob: -16.751564025878906
    10. '=sys' → logprob: -16.751564025878906

Token 215: '.stdin' (ID: 93480)
  Prédit: '.readline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.10886853188276291
    2. '.stdin' → logprob: -2.3588685989379883
    3. '(line' → logprob: -5.233868598937988
    4. '.split' → logprob: -6.358868598937988
    5. 'stdin' → logprob: -7.733868598937988
    6. '.strip' → logprob: -7.858868598937988
    7. '(stdin' → logprob: -8.483868598937988
    8. '.read' → logprob: -8.983868598937988
    9. '=line' → logprob: -9.233868598937988
    10. '       ' → logprob: -9.733868598937988

Token 216: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.00014025058771949261
    2. '.' → logprob: -8.875140190124512
    3. '.stdin' → logprob: -15.875140190124512
    4. '().' → logprob: -15.875140190124512
    5. '.next' → logprob: -16.125141143798828
    6. '.readlines' → logprob: -18.250141143798828
    7. ' readline' → logprob: -18.625141143798828
    8. '```' → logprob: -19.500141143798828
    9. '   ' → logprob: -19.625141143798828
    10. ' .' → logprob: -20.375141143798828

Token 217: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -2.935296834039036e-06
    2. '()' → logprob: -13.00000286102295
    3. ' ().' → logprob: -15.00000286102295
    4. '.readline' → logprob: -16.125003814697266
    5. '()))' → logprob: -16.750003814697266
    6. '(' → logprob: -16.875003814697266
    7. '.strip' → logprob: -18.500003814697266
    8. '()[' → logprob: -18.875003814697266
    9. '(),' → logprob: -18.875003814697266
    10. '()
' → logprob: -19.500003814697266

Token 218: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.07890289276838303
    2. 'split' → logprob: -2.5789029598236084
    3. 'rstrip' → logprob: -11.578903198242188
    4. ' strip' → logprob: -12.953903198242188
    5. ' split' → logprob: -14.078903198242188
    6. 'read' → logprob: -14.453903198242188
    7. '.strip' → logprob: -16.578903198242188
    8. '(split' → logprob: -17.828903198242188
    9. '(strip' → logprob: -17.828903198242188
    10. '.split' → logprob: -20.078903198242188

Token 219: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -5.512236498361744e-07
    2. '()' → logprob: -14.625000953674316
    3. ' ().' → logprob: -17.125
    4. '(' → logprob: -19.25
    5. '   ' → logprob: -20.125
    6. '.split' → logprob: -20.5
    7. '()
' → logprob: -21.375
    8. '()))' → logprob: -21.5
    9. '(),' → logprob: -22.25
    10. '().'' → logprob: -22.625

Token 220: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.7432603272027336e-06
    2. ' split' → logprob: -13.375001907348633
    3. '.split' → logprob: -16.875001907348633
    4. '(split' → logprob: -17.375001907348633
    5. ' ' → logprob: -19.875001907348633
    6. 'plit' → logprob: -21.000001907348633
    7. '   ' → logprob: -21.125001907348633
    8. '```' → logprob: -21.375001907348633
    9. 'rstrip' → logprob: -21.500001907348633
    10. ')' → logprob: -21.500001907348633

Token 221: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.017418617382645607
    2. '))' → logprob: -4.142418384552002
    3. '()' → logprob: -6.767418384552002
    4. '()))
' → logprob: -8.64241886138916
    5. '(' → logprob: -10.51741886138916
    6. '(),' → logprob: -11.76741886138916
    7. '()))

' → logprob: -11.89241886138916
    8. '())' → logprob: -12.01741886138916
    9. '()));' → logprob: -12.64241886138916
    10. '()))
' → logprob: -14.26741886138916

Token 222: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18146270513534546
    2. 'weights' → logprob: -1.8064627647399902
    3. ' weights' → logprob: -6.43146276473999
    4. '(weights' → logprob: -9.931462287902832
    5. '```' → logprob: -10.931462287902832
    6. '_weights' → logprob: -11.681462287902832
    7. 'weight' → logprob: -11.806462287902832
    8. '	' → logprob: -12.181462287902832
    9. '        
' → logprob: -12.181462287902832
    10. '.weights' → logprob: -12.306462287902832

Token 223: ' weights' (ID: 28460)
  Prédit: 'weights'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'weights' (adapté à ' weights') → logprob: -0.0003957608714699745
    2. ' weights' → logprob: -7.875395774841309
    3. '       ' → logprob: -11.125395774841309
    4. 'weight' → logprob: -15.125395774841309
    5. '(weights' → logprob: -15.750395774841309
    6. '_weights' → logprob: -15.875395774841309
    7. '.weights' → logprob: -16.000394821166992
    8. '```' → logprob: -16.750394821166992
    9. 'weig' → logprob: -17.125394821166992
    10. '   ' → logprob: -17.625394821166992

Token 224: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12692810595035553
    2. '=' → logprob: -2.1269280910491943
    3. '＝' → logprob: -17.626928329467773
    4. '=list' → logprob: -17.626928329467773
    5. '<|end|>' → logprob: -18.626928329467773
    6. ' ' → logprob: -19.126928329467773
    7. ' =)' → logprob: -19.501928329467773
    8. '   ' → logprob: -19.626928329467773
    9. '=line' → logprob: -19.876928329467773
    10. ' =
' → logprob: -20.126928329467773

Token 225: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.6931471824645996
    2. 'list' → logprob: -0.6931471824645996
    3. '(list' → logprob: -18.443147659301758
    4. '=list' → logprob: -19.068147659301758
    5. '	list' → logprob: -19.068147659301758
    6. 'map' → logprob: -19.193147659301758
    7. '   ' → logprob: -19.318147659301758
    8. 'List' → logprob: -19.568147659301758
    9. ' ' → logprob: -19.693147659301758
    10. '[list' → logprob: -19.818147659301758

Token 226: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -5.514650183613412e-05
    2. '(' → logprob: -10.250055313110352
    3. 'map' → logprob: -10.875055313110352
    4. '(int' → logprob: -14.625055313110352
    5. ' map' → logprob: -15.500055313110352
    6. '.map' → logprob: -17.50005531311035
    7. ' (' → logprob: -17.75005531311035
    8. '(
' → logprob: -18.25005531311035
    9. '	map' → logprob: -18.50005531311035
    10. ',map' → logprob: -19.12505531311035

Token 227: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.014218277297914028
    2. 'int' → logprob: -4.264218330383301
    3. '[int' → logprob: -10.3892183303833
    4. '=int' → logprob: -11.6392183303833
    5. ' int' → logprob: -11.7642183303833
    6. '<int' → logprob: -12.3892183303833
    7. ',int' → logprob: -12.8892183303833
    8. ':int' → logprob: -14.7642183303833
    9. '```' → logprob: -15.8892183303833
    10. ']int' → logprob: -16.014217376708984

Token 228: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00040481300675310194
    2. '(sys' → logprob: -7.8754048347473145
    3. '(' → logprob: -11.375404357910156
    4. ' ,' → logprob: -11.500404357910156
    5. '=sys' → logprob: -13.500404357910156
    6. 'sys' → logprob: -14.125404357910156
    7. '(),' → logprob: -14.125404357910156
    8. ' sys' → logprob: -16.250404357910156
    9. ',s' → logprob: -16.625404357910156
    10. ',(' → logprob: -17.500404357910156

Token 229: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.5759403109550476
    2. 'sys' → logprob: -0.8259403109550476
    3. '(sys' → logprob: -14.075940132141113
    4. '=sys' → logprob: -16.82594108581543
    5. '	sys' → logprob: -16.82594108581543
    6. 'stdin' → logprob: -17.57594108581543
    7. '   ' → logprob: -17.70094108581543
    8. 'int' → logprob: -18.45094108581543
    9. 'str' → logprob: -19.20094108581543
    10. ' ' → logprob: -19.82594108581543

Token 230: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.00012130453251302242
    2. 'stdin' → logprob: -9.250121116638184
    3. '.readline' → logprob: -10.875121116638184
    4. '(stdin' → logprob: -12.250121116638184
    5. '.' → logprob: -14.250121116638184
    6. '=sys' → logprob: -15.250121116638184
    7. 'sys' → logprob: -15.250121116638184
    8. '.stdout' → logprob: -16.6251220703125
    9. '().' → logprob: -16.7501220703125
    10. ' stdin' → logprob: -17.1251220703125

Token 231: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -1.981667537620524e-06
    2. 'stdin' → logprob: -13.875001907348633
    3. '.stdin' → logprob: -15.125001907348633
    4. 'sys' → logprob: -15.375001907348633
    5. '().' → logprob: -15.875001907348633
    6. 'read' → logprob: -15.875001907348633
    7. '(sys' → logprob: -17.250001907348633
    8. '(stdin' → logprob: -17.625001907348633
    9. '=sys' → logprob: -17.625001907348633
    10. ' readline' → logprob: -17.750001907348633

Token 232: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -6.704273118884885e-07
    2. '()' → logprob: -15.125000953674316
    3. '.strip' → logprob: -15.375000953674316
    4. ' ().' → logprob: -15.750000953674316
    5. '.' → logprob: -18.25
    6. '   ' → logprob: -18.875
    7. '       ' → logprob: -19.625
    8. '(' → logprob: -19.75
    9. '           ' → logprob: -19.875
    10. ' .' → logprob: -20.0

Token 233: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -3.128163257315464e-07
    2. 'split' → logprob: -15.5
    3. '.strip' → logprob: -16.875
    4. ' strip' → logprob: -17.125
    5. '(strip' → logprob: -18.75
    6. 'stripe' → logprob: -21.375
    7. 'rstrip' → logprob: -22.125
    8. '_strip' → logprob: -22.25
    9. '-strip' → logprob: -22.375
    10. 'str' → logprob: -23.375

Token 234: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: 0.0
    2. '.split' → logprob: -18.25
    3. '()' → logprob: -19.25
    4. ' ().' → logprob: -20.0
    5. '.' → logprob: -20.125
    6. ' .' → logprob: -22.625
    7. '{}.' → logprob: -23.0
    8. '(' → logprob: -23.0
    9. 'split' → logprob: -24.25
    10. '   ' → logprob: -24.25

Token 235: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -7.896309739408025e-07
    2. ' split' → logprob: -14.250000953674316
    3. '.split' → logprob: -16.25
    4. 'strip' → logprob: -19.375
    5. '(split' → logprob: -19.375
    6. 'spl' → logprob: -20.625
    7. 'plit' → logprob: -20.875
    8. '   ' → logprob: -21.125
    9. ' ' → logprob: -21.25
    10. '```' → logprob: -21.25

Token 236: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.12895157933235168
    2. '))' → logprob: -2.1289515495300293
    3. '()' → logprob: -6.253951549530029
    4. '()))
' → logprob: -9.378952026367188
    5. '())' → logprob: -12.128952026367188
    6. '()));' → logprob: -12.878952026367188
    7. ' ))' → logprob: -13.253952026367188
    8. '       ' → logprob: -14.003952026367188
    9. '))
' → logprob: -14.128952026367188
    10. '   ' → logprob: -14.128952026367188

Token 237: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.000909913913346827
    2. '   ' → logprob: -7.750909805297852
    3. '<|end|>' → logprob: -8.000909805297852
    4. 'if' → logprob: -9.500909805297852
    5. '        
' → logprob: -10.750909805297852
    6. ' if' → logprob: -10.875909805297852
    7. '
' → logprob: -11.250909805297852
    8. '```' → logprob: -12.375909805297852
    9. '<|end|>' → logprob: -12.625909805297852
    10. '	   ' → logprob: -13.750909805297852

Token 238: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14434494078159332
    2. 'if' → logprob: -2.1443450450897217
    3. ' if' → logprob: -4.644344806671143
    4. 'print' → logprob: -4.894344806671143
    5. '   ' → logprob: -9.6443452835083
    6. ' print' → logprob: -9.7693452835083
    7. 'result' → logprob: -10.5193452835083
    8. '```' → logprob: -11.5193452835083
    9. '	if' → logprob: -14.3943452835083
    10. ' result' → logprob: -14.5193452835083

Token 239: ' Test' (ID: 4674)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.4703094959259033
    2. ' if' → logprob: -1.0953094959259033
    3. 'print' → logprob: -3.3453094959259033
    4. ' print' → logprob: -5.720309257507324
    5. '       ' → logprob: -6.595309257507324
    6. 'result' → logprob: -7.470309257507324
    7. ' result' → logprob: -8.720309257507324
    8. '   ' → logprob: -9.095309257507324
    9. '```' → logprob: -12.470309257507324
    10. '        
' → logprob: -12.970309257507324

Token 240: ' sans' (ID: 9828)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00046260483213700354
    2. 'if' → logprob: -8.750462532043457
    3. 'print' → logprob: -9.125462532043457
    4. '   ' → logprob: -9.500462532043457
    5. ' if' → logprob: -9.750462532043457
    6. '<|end|>' → logprob: -10.500462532043457
    7. 'result' → logprob: -11.375462532043457
    8. '<|end|>' → logprob: -12.250462532043457
    9. '	   ' → logprob: -13.125462532043457
    10. ' print' → logprob: -13.500462532043457

Token 241: ' poids' (ID: 56058)
  Prédit: 'weights'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'weights' → logprob: -0.14093150198459625
    2. ' weights' → logprob: -3.0159316062927246
    3. 'can' → logprob: -4.140931606292725
    4. 'les' → logprob: -4.515931606292725
    5. 'comment' → logprob: -4.640931606292725
    6. '#' → logprob: -4.640931606292725
    7. 'comments' → logprob: -4.890931606292725
    8. '(weights' → logprob: -5.390931606292725
    9. 'print' → logprob: -6.140931606292725
    10. ' les' → logprob: -6.265931606292725

Token 242: ' supplémentaires' (ID: 99346)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2664564549922943
    2. '       ' → logprob: -1.8914564847946167
    3. '<|end|>' → logprob: -3.391456365585327
    4. 'print' → logprob: -4.891456604003906
    5. ' for' → logprob: -5.141456604003906
    6. 'for' → logprob: -5.391456604003906
    7. 'possible' → logprob: -5.391456604003906
    8. ' if' → logprob: -5.641456604003906
    9. 'weights' → logprob: -5.766456604003906
    10. '#' → logprob: -5.891456604003906

Token 243: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008369773626327515
    2. '<|end|>' → logprob: -4.8833699226379395
    3. ',' → logprob: -8.258369445800781
    4. '<|end|>' → logprob: -8.508369445800781
    5. ' if' → logprob: -8.758369445800781
    6. '   ' → logprob: -9.633369445800781
    7. '        
' → logprob: -11.008369445800781
    8. ')' → logprob: -11.383369445800781
    9. 'if' → logprob: -11.633369445800781
    10. '.' → logprob: -12.383369445800781

Token 244: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0004851306148339063
    2. '<|end|>' → logprob: -8.25048542022705
    3. ' if' → logprob: -9.12548542022705
    4. '   ' → logprob: -9.87548542022705
    5. '        
' → logprob: -10.87548542022705
    6. 'if' → logprob: -11.00048542022705
    7. ',' → logprob: -11.50048542022705
    8. '<|end|>' → logprob: -12.50048542022705
    9. '```' → logprob: -12.62548542022705
    10. '#' → logprob: -13.62548542022705

Token 245: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.7209993004798889
    2. ' if' → logprob: -0.8459993004798889
    3. '       ' → logprob: -2.470999240875244
    4. 'result' → logprob: -10.095999717712402
    5. 'print' → logprob: -10.845999717712402
    6. ' result' → logprob: -11.345999717712402
    7. '   ' → logprob: -11.595999717712402
    8. '        
' → logprob: -11.970999717712402
    9. '```' → logprob: -12.220999717712402
    10. '<|end|>' → logprob: -12.595999717712402

Token 246: ' can' (ID: 665)
  Prédit: ' can'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.009765179827809334
    2. 'can' → logprob: -4.634765148162842
    3. ' not' → logprob: -11.884765625
    4. ' all' → logprob: -14.134765625
    5. ' set' → logprob: -14.259765625
    6. '	can' → logprob: -14.884765625
    7. '(can' → logprob: -15.259765625
    8. ' ' → logprob: -15.259765625
    9. '   ' → logprob: -16.384765625
    10. ' len' → logprob: -16.884765625

Token 247: '_measure' (ID: 103789)
  Prédit: '_measure'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_measure' → logprob: -2.339278580620885e-06
    2. '_can' → logprob: -14.125001907348633
    3. '_me' → logprob: -14.250001907348633
    4. '_mes' → logprob: -14.500001907348633
    5. '_' → logprob: -15.375001907348633
    6. ' _' → logprob: -16.000001907348633
    7. '_predict' → logprob: -16.750001907348633
    8. 'measure' → logprob: -16.875001907348633
    9. '_continue' → logprob: -18.250001907348633
    10. ')' → logprob: -18.375001907348633

Token 248: '(amount' (ID: 60193)
  Prédit: '(amount'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(amount' → logprob: -2.5776860184123507e-06
    2. ' (' → logprob: -13.75000286102295
    3. 'amount' → logprob: -14.00000286102295
    4. ' amounts' → logprob: -14.75000286102295
    5. '(' → logprob: -16.125001907348633
    6. '(length' → logprob: -16.375001907348633
    7. '(am' → logprob: -16.875001907348633
    8. '(depth' → logprob: -18.625001907348633
    9. '(weights' → logprob: -18.625001907348633
    10. '(level' → logprob: -19.500001907348633

Token 249: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.1249474287033081
    2. 'amount' → logprob: -2.4999475479125977
    3. '(amount' → logprob: -3.3749475479125977
    4. 'weights' → logprob: -7.874947547912598
    5. '(weights' → logprob: -8.249947547912598
    6. ' amounts' → logprob: -8.374947547912598
    7. 'length' → logprob: -9.499947547912598
    8. ',' → logprob: -10.124947547912598
    9. 'ments' → logprob: -10.624947547912598
    10. ')' → logprob: -10.874947547912598

Token 250: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1614307314157486
    2. '(weights' → logprob: -1.9114307165145874
    3. '(' → logprob: -6.911430835723877
    4. ' ,' → logprob: -9.036430358886719
    5. ' (' → logprob: -10.161430358886719
    6. ')' → logprob: -11.036430358886719
    7. 'weights' → logprob: -11.411430358886719
    8. ',
' → logprob: -12.536430358886719
    9. ' weights' → logprob: -12.786430358886719
    10. '   ' → logprob: -13.161430358886719

Token 251: ' weights' (ID: 28460)
  Prédit: 'weights'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'weights' → logprob: -0.22543403506278992
    2. ' weights' → logprob: -1.6004340648651123
    3. '(weights' → logprob: -11.350434303283691
    4. 'weight' → logprob: -12.725434303283691
    5. '.weights' → logprob: -12.975434303283691
    6. ')' → logprob: -13.225434303283691
    7. '[]' → logprob: -14.850434303283691
    8. 'Weights' → logprob: -14.975434303283691
    9. '_weights' → logprob: -14.975434303283691
    10. '   ' → logprob: -15.475434303283691

Token 252: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.03806639462709427
    2. '):
' → logprob: -3.2880663871765137
    3. ':' → logprob: -11.288066864013672
    4. ')' → logprob: -12.413066864013672
    5. ' ):' → logprob: -12.788066864013672
    6. '):
' → logprob: -13.288066864013672
    7. ')==' → logprob: -13.663066864013672
    8. '       ' → logprob: -13.913066864013672
    9. '   ' → logprob: -14.038066864013672
    10. ':
' → logprob: -15.413066864013672

Token 253: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.010412615723907948
    2. ':' → logprob: -4.760412693023682
    3. '       ' → logprob: -6.760412693023682
    4. ':
' → logprob: -7.885412693023682
    5. ' print' → logprob: -8.885412216186523
    6. 'print' → logprob: -9.760412216186523
    7. '
' → logprob: -10.760412216186523
    8. '):' → logprob: -11.885412216186523
    9. '):
' → logprob: -12.010412216186523
    10. '	       ' → logprob: -12.010412216186523

Token 254: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.4843379557132721
    2. '           ' → logprob: -1.4843379259109497
    3. '       ' → logprob: -2.4843380451202393
    4. ' print' → logprob: -2.6093380451202393
    5. '               ' → logprob: -8.98433780670166
    6. '   ' → logprob: -9.98433780670166
    7. '```' → logprob: -10.10933780670166
    8. '	print' → logprob: -10.85933780670166
    9. '
' → logprob: -11.10933780670166
    10. '	       ' → logprob: -11.60933780670166

Token 255: '(' (ID: 7)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.6868471503257751
    2. '(' → logprob: -1.06184720993042
    3. '0' → logprob: -2.06184720993042
    4. '('' → logprob: -4.18684720993042
    5. '"' → logprob: -5.18684720993042
    6. '(len' → logprob: -7.06184720993042
    7. 'weights' → logprob: -7.68684720993042
    8. ''' → logprob: -8.061846733093262
    9. '(weights' → logprob: -8.311846733093262
    10. '1' → logprob: -8.936846733093262

Token 256: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1621594876050949
    2. '"' → logprob: -2.0371594429016113
    3. 'len' → logprob: -4.287159442901611
    4. ''' → logprob: -5.662159442901611
    5. ' ' → logprob: -8.28715991973877
    6. '"No' → logprob: -8.41215991973877
    7. 'weights' → logprob: -8.53715991973877
    8. 'm' → logprob: -8.66215991973877
    9. '1' → logprob: -8.91215991973877
    10. ' len' → logprob: -9.22465991973877

Token 257: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09029319137334824
    2. ')
' → logprob: -2.4652931690216064
    3. '       ' → logprob: -6.8402934074401855
    4. '   ' → logprob: -8.840292930603027
    5. '           ' → logprob: -9.090292930603027
    6. ' )' → logprob: -11.840292930603027
    7. ')return' → logprob: -12.090292930603027
    8. ')
' → logprob: -12.715292930603027
    9. ',' → logprob: -12.840292930603027
    10. '')' → logprob: -13.590292930603027

Token 258: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009385223500430584
    2. '           ' → logprob: -5.259385108947754
    3. 'else' → logprob: -5.759385108947754
    4. ' else' → logprob: -7.134385108947754
    5. '   ' → logprob: -9.134385108947754
    6. 'continue' → logprob: -9.884385108947754
    7. ' continue' → logprob: -10.509385108947754
    8. '<|end|>' → logprob: -13.884385108947754
    9. 'elif' → logprob: -14.009385108947754
    10. ',' → logprob: -14.259385108947754

Token 259: ' continue' (ID: 4901)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0307321734726429
    2. 'continue' (adapté à ' continue') → logprob: -3.7807321548461914
    3. '       ' → logprob: -5.155732154846191
    4. ' continue' → logprob: -6.405732154846191
    5. '   ' → logprob: -10.655732154846191
    6. '	continue' → logprob: -11.655732154846191
    7. 'else' → logprob: -13.030732154846191
    8. '	       ' → logprob: -13.155732154846191
    9. '_continue' → logprob: -13.905732154846191
    10. '		' → logprob: -13.905732154846191

Token 260: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.882617175579071
    2. 'for' → logprob: -1.2576172351837158
    3. ' for' → logprob: -2.507617235183716
    4. 'weights' → logprob: -2.632617235183716
    5. 'extra' → logprob: -3.007617235183716
    6. 'possible' → logprob: -3.507617235183716
    7. 'additional' → logprob: -3.882617235183716
    8. '        
' → logprob: -4.132616996765137
    9. 'max' → logprob: -4.632616996765137
    10. ' weights' → logprob: -5.632616996765137

Token 261: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002459248760715127
    2. '   ' → logprob: -6.6274590492248535
    3. ' for' → logprob: -7.8774590492248535
    4. 'for' → logprob: -8.377459526062012
    5. '        
' → logprob: -8.627459526062012
    6. 'weights' → logprob: -8.627459526062012
    7. '<|end|>' → logprob: -9.627459526062012
    8. ' weights' → logprob: -10.252459526062012
    9. '    
' → logprob: -11.252459526062012
    10. 'possible' → logprob: -12.127459526062012

Token 262: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.48248490691185
    2. 'additional' → logprob: -2.357484817504883
    3. 'found' → logprob: -2.482484817504883
    4. 'best' → logprob: -2.982484817504883
    5. 'left' → logprob: -2.982484817504883
    6. 'extra' → logprob: -3.107484817504883
    7. 'min' → logprob: -3.732484817504883
    8. 'added' → logprob: -4.482484817504883
    9. 'answer' → logprob: -4.982484817504883
    10. 'low' → logprob: -5.607484817504883

Token 263: ' Sinon' (ID: 154924)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8005880117416382
    2. 'found' → logprob: -1.8005880117416382
    3. 'additional' → logprob: -2.3005881309509277
    4. 'best' → logprob: -2.5505881309509277
    5. 'left' → logprob: -2.9255881309509277
    6. 'extra' → logprob: -3.3005881309509277
    7. 'min' → logprob: -3.5505881309509277
    8. 'added' → logprob: -3.9255881309509277
    9. '#' → logprob: -3.9255881309509277
    10. 'low' → logprob: -4.425588130950928

Token 264: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14307837188243866
    2. ' for' → logprob: -2.268078327178955
    3. 'for' → logprob: -3.893078327178955
    4. 'possible' → logprob: -6.018078327178955
    5. '   ' → logprob: -6.143078327178955
    6. 'additional' → logprob: -6.893078327178955
    7. ' additional' → logprob: -7.268078327178955
    8. ' possible' → logprob: -7.643078327178955
    9. 'found' → logprob: -8.018078804016113
    10. 'weights' → logprob: -8.018078804016113

Token 265: ' chercher' (ID: 79602)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4350167512893677
    2. ' for' → logprob: -1.5600167512893677
    3. 'found' → logprob: -2.935016632080078
    4. 'added' → logprob: -3.560016632080078
    5. ' found' → logprob: -4.060016632080078
    6. 'best' → logprob: -4.310016632080078
    7. 'additional' → logprob: -4.810016632080078
    8. ' added' → logprob: -5.310016632080078
    9. ' best' → logprob: -5.560016632080078
    10. 'extra' → logprob: -5.935016632080078

Token 266: ' le' (ID: 505)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.17789597809314728
    2. 'for' → logprob: -2.927896022796631
    3. ' la' → logprob: -3.552896022796631
    4. ' additional' → logprob: -3.802896022796631
    5. ' un' → logprob: -4.802896022796631
    6. 'additional' → logprob: -5.177896022796631
    7. ' supplementary' → logprob: -5.302896022796631
    8. ' supplément' → logprob: -5.302896022796631
    9. ' new' → logprob: -5.427896022796631
    10. ' supplémentaire' → logprob: -5.552896022796631

Token 267: ' poids' (ID: 56058)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7376482486724854
    2. ' for' → logprob: -1.3626482486724854
    3. ' next' → logprob: -2.8626482486724854
    4. 'min' → logprob: -2.9876482486724854
    5. 'next' → logprob: -3.8626482486724854
    6. 'minimum' → logprob: -4.112648010253906
    7. ' nombre' → logprob: -4.237648010253906
    8. 'plus' → logprob: -4.237648010253906
    9. 'nombre' → logprob: -4.237648010253906
    10. ' minimal' → logprob: -4.612648010253906

Token 268: ' minimal' (ID: 19957)
  Prédit: ' supplémentaire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' supplémentaire' → logprob: -0.18733564019203186
    2. ' for' → logprob: -2.437335729598999
    3. 'for' → logprob: -4.06233549118042
    4. ' additional' → logprob: -4.43733549118042
    5. ' supplémentaires' → logprob: -4.56233549118042
    6. 'additional' → logprob: -4.56233549118042
    7. ' to' → logprob: -5.31233549118042
    8. '追加' → logprob: -5.56233549118042
    9. '       ' → logprob: -5.68733549118042
    10. '   ' → logprob: -6.06233549118042

Token 269: ' à' (ID: 1221)
  Prédit: ' supplémentaire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' supplémentaire' → logprob: -0.37822645902633667
    2. ' for' → logprob: -1.8782265186309814
    3. 'for' → logprob: -2.6282265186309814
    4. 'additional' → logprob: -3.7532265186309814
    5. 'possible' → logprob: -4.628226280212402
    6. 'extra' → logprob: -4.628226280212402
    7. '+' → logprob: -4.753226280212402
    8. ' additional' → logprob: -5.003226280212402
    9. ' supplémentaires' → logprob: -5.253226280212402
    10. '追加' → logprob: -5.628226280212402

Token 270: ' ajouter' (ID: 78457)
  Prédit: 'aj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aj' → logprob: -0.0006897979183122516
    2. ' ajouter' → logprob: -7.37568998336792
    3. ''aj' → logprob: -10.375689506530762
    4. ' raj' → logprob: -11.625689506530762
    5. 'Ajouter' → logprob: -11.625689506530762
    6. '’aj' → logprob: -12.625689506530762
    7. 'add' → logprob: -12.750689506530762
    8. 'raj' → logprob: -12.875689506530762
    9. ' aj' → logprob: -13.250689506530762
    10. '```' → logprob: -14.500689506530762

Token 271: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4200395941734314
    2. ' for' → logprob: -1.1700396537780762
    3. 'for' → logprob: -4.295039653778076
    4. ',' → logprob: -5.545039653778076
    5. '<|end|>' → logprob: -6.045039653778076
    6. 'weight' → logprob: -6.295039653778076
    7. ' possible' → logprob: -6.420039653778076
    8. ' weights' → logprob: -6.420039653778076
    9. 'weights' → logprob: -6.420039653778076
    10. '        
' → logprob: -6.545039653778076

Token 272: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0230479184538126
    2. ' for' → logprob: -3.898047924041748
    3. 'for' → logprob: -6.398047924041748
    4. 'possible' → logprob: -7.898047924041748
    5. ' possible' → logprob: -8.27304744720459
    6. '   ' → logprob: -10.02304744720459
    7. '<|end|>' → logprob: -10.39804744720459
    8. 'weights' → logprob: -10.52304744720459
    9. 'weight' → logprob: -10.89804744720459
    10. ',' → logprob: -11.27304744720459

Token 273: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7716765403747559
    2. 'min' → logprob: -1.8966765403747559
    3. 'added' → logprob: -1.8966765403747559
    4. 'additional' → logprob: -2.771676540374756
    5. ' for' → logprob: -3.146676540374756
    6. 'found' → logprob: -3.396676540374756
    7. 'possible' → logprob: -3.896676540374756
    8. 'best' → logprob: -4.021676540374756
    9. ' min' → logprob: -4.146676540374756
    10. 'minimal' → logprob: -4.396676540374756

Token 274: ' On' (ID: 2160)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2205718606710434
    2. ' for' → logprob: -2.345571756362915
    3. 'added' → logprob: -2.720571756362915
    4. 'additional' → logprob: -4.595571994781494
    5. 'found' → logprob: -4.845571994781494
    6. ' added' → logprob: -5.470571994781494
    7. 'min' → logprob: -5.720571994781494
    8. 'possible' → logprob: -5.845571994781494
    9. ' additional' → logprob: -6.345571994781494
    10. 'extra' → logprob: -6.720571994781494

Token 275: ' teste' (ID: 62670)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.16687239706516266
    2. 'for' → logprob: -1.9168723821640015
    3. 'import' → logprob: -7.041872501373291
    4. 'def' → logprob: -7.416872501373291
    5. ' possible' → logprob: -7.541872501373291
    6. 'possible' → logprob: -7.541872501373291
    7. 'range' → logprob: -7.666872501373291
    8. ' range' → logprob: -7.791872501373291
    9. '       ' → logprob: -8.041872024536133
    10. ' additional' → logprob: -8.541872024536133

Token 276: ' de' (ID: 334)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.6125875115394592
    2. ' for' → logprob: -2.1125874519348145
    3. ' les' → logprob: -2.7375874519348145
    4. ' poids' → logprob: -3.1125874519348145
    5. ' possible' → logprob: -3.2375874519348145
    6. ' new' → logprob: -3.4875874519348145
    7. ' weights' → logprob: -3.4875874519348145
    8. ' un' → logprob: -3.9875874519348145
    9. 'for' → logprob: -3.9875874519348145
    10. 'possible' → logprob: -4.4875874519348145

Token 277: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002757210284471512
    2. ' ' → logprob: -6.0027570724487305
    3. 'l' → logprob: -9.37775707244873
    4. 'weight' → logprob: -9.87775707244873
    5. 'weights' → logprob: -10.37775707244873
    6. '0' → logprob: -10.50275707244873
    7. ' poids' → logprob: -11.00275707244873
    8. 'import' → logprob: -11.00275707244873
    9. 'range' → logprob: -11.62775707244873
    10. ' l' → logprob: -12.37775707244873

Token 278: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0017202809685841203
    2. ' ' → logprob: -6.751720428466797
    3. '0' → logprob: -8.126720428466797
    4. 'l' → logprob: -9.001720428466797
    5. 'weight' → logprob: -10.751720428466797
    6. ' poids' → logprob: -10.751720428466797
    7. 'weights' → logprob: -10.751720428466797
    8. 'po' → logprob: -10.876720428466797
    9. 'i' → logprob: -11.501720428466797
    10. 'import' → logprob: -11.626720428466797

Token 279: ' à' (ID: 1221)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.47221216559410095
    2. '<|end|>' → logprob: -2.347212076187134
    3. ' up' → logprob: -2.722212076187134
    4. 'import' → logprob: -3.222212076187134
    5. '   ' → logprob: -3.347212076187134
    6. ' ' → logprob: -3.347212076187134
    7. '```' → logprob: -4.097212314605713
    8. '    ' → logprob: -4.472212314605713
    9. ',' → logprob: -4.597212314605713
    10. ' upwards' → logprob: -4.597212314605713

Token 280: ' un' (ID: 537)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '100' → logprob: -0.3584006130695343
    2. '500' → logprob: -2.358400583267212
    3. '10' → logprob: -2.483400583267212
    4. '150' → logprob: -3.608400583267212
    5. '200' → logprob: -3.858400583267212
    6. '30' → logprob: -4.108400821685791
    7. '50' → logprob: -4.233400821685791
    8. '400' → logprob: -4.233400821685791
    9. '40' → logprob: -4.983400821685791
    10. '20' → logprob: -5.108400821685791

Token 281: ' certain' (ID: 4454)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '100' → logprob: -0.16170640289783478
    2. '10' → logprob: -2.6617064476013184
    3. ' ' → logprob: -3.7867064476013184
    4. '       ' → logprob: -4.661706447601318
    5. '000' → logprob: -4.661706447601318
    6. 'weight' → logprob: -4.786706447601318
    7. '999' → logprob: -5.036706447601318
    8. 'max' → logprob: -5.036706447601318
    9. '   ' → logprob: -5.411706447601318
    10. 'o' → logprob: -6.286706447601318

Token 282: ' maximum' (ID: 10562)
  Prédit: 'limit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -0.9964010715484619
    2. 'max' → logprob: -1.121401071548462
    3. '100' → logprob: -1.996401071548462
    4. ' poids' → logprob: -3.246401071548462
    5. 'po' → logprob: -3.371401071548462
    6. 'maximum' → logprob: -3.746401071548462
    7. ' limit' → logprob: -3.871401071548462
    8. ' max' → logprob: -3.996401071548462
    9. ' maximum' → logprob: -4.746400833129883
    10. 'weight' → logprob: -4.996400833129883

Token 283: ',' (ID: 11)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.18537533283233643
    2. '(max' → logprob: -3.185375213623047
    3. 'MAX' → logprob: -3.685375213623047
    4. ':' → logprob: -3.810375213623047
    5. '100' → logprob: -3.935375213623047
    6. ' max' → logprob: -4.060375213623047
    7. 'for' → logprob: -4.310375213623047
    8. '       ' → logprob: -5.435375213623047
    9. ' for' → logprob: -5.560375213623047
    10. 'range' → logprob: -5.685375213623047

Token 284: ' jusqu' (ID: 21961)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.3619900047779083
    2. '100' → logprob: -1.486989974975586
    3. 'max' → logprob: -2.736989974975586
    4. ' for' → logprob: -5.111989974975586
    5. ' maximum' → logprob: -6.486989974975586
    6. 'MAX' → logprob: -6.611989974975586
    7. '999' → logprob: -7.111989974975586
    8. ' ' → logprob: -7.861989974975586
    9. '       ' → logprob: -7.986989974975586
    10. '500' → logprob: -8.486989974975586

Token 285: ''à' (ID: 33688)
  Prédit: ''à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''à' → logprob: -0.021909469738602638
    2. '=' → logprob: -4.771909236907959
    3. '’à' → logprob: -4.771909236907959
    4. 'à' → logprob: -6.021909236907959
    5. ''au' → logprob: -7.021909236907959
    6. ' à' → logprob: -7.021909236907959
    7. '_' → logprob: -8.646909713745117
    8. '   ' → logprob: -9.146909713745117
    9. '(' → logprob: -9.396909713745117
    10. 'a' → logprob: -10.146909713745117

Token 286: ' ' (ID: 220)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '100' → logprob: -0.6577058434486389
    2. '20' → logprob: -1.7827057838439941
    3. '50' → logprob: -2.657705783843994
    4. 'm' → logprob: -2.782705783843994
    5. '10' → logprob: -3.032705783843994
    6. '40' → logprob: -3.032705783843994
    7. '30' → logprob: -3.407705783843994
    8. 'max' → logprob: -4.032705783843994
    9. '200' → logprob: -4.782705783843994
    10. '500' → logprob: -4.782705783843994

Token 287: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.8769249320030212
    2. '40' → logprob: -2.001924991607666
    3. '30' → logprob: -2.251924991607666
    4. '20' → logprob: -2.251924991607666
    5. '50' → logprob: -2.251924991607666
    6. 'max' → logprob: -3.001924991607666
    7. '10' → logprob: -3.376924991607666
    8. '500' → logprob: -4.251924991607666
    9. '150' → logprob: -4.626924991607666
    10. '200' → logprob: -4.876924991607666

Token 288: '000' (ID: 1302)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.023504719138145447
    2. ':
' → logprob: -4.273504734039307
    3. '):' → logprob: -5.648504734039307
    4. '       ' → logprob: -6.023504734039307
    5. '0' → logprob: -6.523504734039307
    6. '   ' → logprob: -6.773504734039307
    7. '):
' → logprob: -8.523504257202148
    8. '1' → logprob: -8.648504257202148
    9. ',' → logprob: -9.023504257202148
    10. ')' → logprob: -9.773504257202148

Token 289: '000' (ID: 1302)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21993955969810486
    2. ' for' → logprob: -1.7199395895004272
    3. 'for' → logprob: -4.719939708709717
    4. ':' → logprob: -5.594939708709717
    5. '   ' → logprob: -6.219939708709717
    6. ',' → logprob: -6.594939708709717
    7. ':
' → logprob: -7.094939708709717
    8. '
' → logprob: -8.094939231872559
    9. '<|end|>' → logprob: -8.344939231872559
    10. '):
' → logprob: -8.469939231872559

Token 290: '0' (ID: 15)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10093238949775696
    2. ':' → logprob: -2.4759323596954346
    3. ':
' → logprob: -5.725932598114014
    4. '   ' → logprob: -6.100932598114014
    5. '):' → logprob: -6.475932598114014
    6. ' for' → logprob: -6.600932598114014
    7. ',' → logprob: -7.475932598114014
    8. '
' → logprob: -7.725932598114014
    9. ')' → logprob: -7.850932598114014
    10. '):
' → logprob: -7.975932598114014

Token 291: ' +' (ID: 659)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.689543604850769
    2. '       ' → logprob: -0.939543604850769
    3. ':
' → logprob: -2.8145437240600586
    4. '):' → logprob: -4.689543724060059
    5. ' for' → logprob: -4.689543724060059
    6. '   ' → logprob: -5.064543724060059
    7. ')' → logprob: -5.314543724060059
    8. '
' → logprob: -5.439543724060059
    9. '):
' → logprob: -5.439543724060059
    10. ',' → logprob: -5.689543724060059

Token 292: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.10538192093372345
    2. '100' → logprob: -2.355381965637207
    3. ' ' → logprob: -6.355381965637207
    4. '10' → logprob: -7.230381965637207
    5. 'weights' → logprob: -7.230381965637207
    6. '   ' → logprob: -7.355381965637207
    7. 'm' → logprob: -8.105381965637207
    8. 'for' → logprob: -8.105381965637207
    9. '+' → logprob: -9.105381965637207
    10. '       ' → logprob: -9.230381965637207

Token 293: '100' (ID: 1353)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.21539652347564697
    2. '1' → logprob: -2.4653964042663574
    3. '100' → logprob: -2.4653964042663574
    4. ' max' → logprob: -4.590396404266357
    5. 'sum' → logprob: -5.090396404266357
    6. '10' → logprob: -5.590396404266357
    7. 'weights' → logprob: -6.590396404266357
    8. 'm' → logprob: -6.840396404266357
    9. 'min' → logprob: -7.965396404266357
    10. ' ' → logprob: -7.965396404266357

Token 294: '000' (ID: 1302)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09097889810800552
    2. ' for' → logprob: -3.3409788608551025
    3. 'for' → logprob: -3.8409788608551025
    4. '   ' → logprob: -4.215979099273682
    5. ',' → logprob: -5.215979099273682
    6. '0' → logprob: -5.840979099273682
    7. '1' → logprob: -6.590979099273682
    8. ':' → logprob: -6.715979099273682
    9. ')' → logprob: -7.340979099273682
    10. '000' → logprob: -7.840979099273682

Token 295: '000' (ID: 1302)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9017016291618347
    2. '   ' → logprob: -1.1517016887664795
    3. '       ' → logprob: -1.4017016887664795
    4. ' :' → logprob: -5.2767014503479
    5. '):' → logprob: -5.2767014503479
    6. ',' → logprob: -5.4017014503479
    7. '(' → logprob: -6.0267014503479
    8. '    ' → logprob: -6.6517014503479
    9. '(range' → logprob: -6.7767014503479
    10. '0' → logprob: -6.7767014503479

Token 296: ' (' (ID: 350)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.05040975660085678
    2. '000' → logprob: -3.0504097938537598
    3. '00' → logprob: -7.05040979385376
    4. '       ' → logprob: -7.67540979385376
    5. '   ' → logprob: -8.050409317016602
    6. ' ' → logprob: -10.050409317016602
    7. ')' → logprob: -10.800409317016602
    8. '    ' → logprob: -11.050409317016602
    9. '        ' → logprob: -11.425409317016602
    10. '           ' → logprob: -11.550409317016602

Token 297: 'par' (ID: 796)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '100' → logprob: -0.4128139615058899
    2. '1' → logprob: -1.1628139019012451
    3. ')' → logprob: -3.912813901901245
    4. ' ' → logprob: -5.537814140319824
    5. '   ' → logprob: -7.912814140319824
    6. '):
' → logprob: -8.037814140319824
    7. '10' → logprob: -8.162814140319824
    8. '+' → logprob: -8.662814140319824
    9. '):' → logprob: -8.787814140319824
    10. '       ' → logprob: -9.412814140319824

Token 298: ' exemple' (ID: 26320)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.29621151089668274
    2. '100' → logprob: -2.5462114810943604
    3. ')' → logprob: -2.6712114810943604
    4. '10' → logprob: -2.7962114810943604
    5. 'steps' → logprob: -4.9212117195129395
    6. 'step' → logprob: -5.0462117195129395
    7. 'increment' → logprob: -5.2962117195129395
    8. 'default' → logprob: -5.5462117195129395
    9. 'increments' → logprob: -5.9212117195129395
    10. 'range' → logprob: -6.0462117195129395

Token 299: ')
' (ID: 446)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.991427481174469
    2. '1' → logprob: -1.9914274215698242
    3. ')' → logprob: -2.116427421569824
    4. '100' → logprob: -2.241427421569824
    5. '):
' → logprob: -2.241427421569824
    6. '+' → logprob: -2.366427421569824
    7. '       ' → logprob: -3.616427421569824
    8. ' +' → logprob: -3.866427421569824
    9. '   ' → logprob: -5.491427421569824
    10. '           ' → logprob: -6.241427421569824

Token 300: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.038539886474609375
    2. 'for' → logprob: -3.6635398864746094
    3. ' for' → logprob: -4.538539886474609
    4. 'max' → logprob: -7.288539886474609
    5. ',' → logprob: -8.16353988647461
    6. 'possible' → logprob: -9.03853988647461
    7. ')' → logprob: -9.66353988647461
    8. '   ' → logprob: -9.78853988647461
    9. ' max' → logprob: -10.28853988647461
    10. '        
' → logprob: -10.53853988647461

Token 301: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2130248099565506
    2. ' for' → logprob: -1.7130248546600342
    3. 'max' → logprob: -4.713024616241455
    4. '       ' → logprob: -6.713024616241455
    5. 'added' → logprob: -8.088025093078613
    6. 'additional' → logprob: -8.588025093078613
    7. '   ' → logprob: -8.838025093078613
    8. ' max' → logprob: -8.963025093078613
    9. 'limit' → logprob: -9.213025093078613
    10. '```' → logprob: -9.588025093078613

Token 302: ' ou' (ID: 2031)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.25125521421432495
    2. 'max' → logprob: -1.6262552738189697
    3. ' for' → logprob: -4.001255035400391
    4. 'found' → logprob: -5.751255035400391
    5. 'added' → logprob: -6.626255035400391
    6. 'limit' → logprob: -6.876255035400391
    7. '       ' → logprob: -8.12625503540039
    8. 'possible' → logprob: -8.12625503540039
    9. 'additional' → logprob: -8.37625503540039
    10. ' max' → logprob: -8.62625503540039

Token 303: ' jusqu' (ID: 21961)
  Prédit: ' until'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' until' → logprob: -1.1670740842819214
    2. 'for' → logprob: -1.5420740842819214
    3. 'until' → logprob: -1.6670740842819214
    4. 'while' → logprob: -2.417074203491211
    5. 'max' → logprob: -2.667074203491211
    6. 'range' → logprob: -3.542074203491211
    7. '   ' → logprob: -3.667074203491211
    8. ' for' → logprob: -4.167074203491211
    9. 'import' → logprob: -4.417074203491211
    10. ' jusqu' → logprob: -4.417074203491211

Token 304: ''à' (ID: 33688)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6621594429016113
    2. '=' → logprob: -1.5371594429016113
    3. '   ' → logprob: -2.6621594429016113
    4. 'def' → logprob: -3.5371594429016113
    5. ' =' → logprob: -3.6621594429016113
    6. ' à' → logprob: -4.037159442901611
    7. ' (' → logprob: -4.162159442901611
    8. '_' → logprob: -4.412159442901611
    9. '100' → logprob: -4.412159442901611
    10. ' a' → logprob: -4.787159442901611

Token 305: ' trouver' (ID: 23195)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '100' → logprob: -0.05633905157446861
    2. '10' → logprob: -3.9313390254974365
    3. '200' → logprob: -4.056339263916016
    4. 'max' → logprob: -5.056339263916016
    5. 'm' → logprob: -5.931339263916016
    6. ' ' → logprob: -6.056339263916016
    7. 'weights' → logprob: -6.806339263916016
    8. '500' → logprob: -6.931339263916016
    9. '110' → logprob: -7.181339263916016
    10. 'n' → logprob: -7.181339263916016

Token 306: ' un' (ID: 537)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.3643085956573486
    2. 'the' → logprob: -1.7393085956573486
    3. '100' → logprob: -2.1143085956573486
    4. '(' → logprob: -2.1143085956573486
    5. ' a' → logprob: -2.2393085956573486
    6. '1' → logprob: -2.7393085956573486
    7. ' the' → logprob: -3.3643085956573486
    8. '(
' → logprob: -3.9893085956573486
    9. 'range' → logprob: -4.1143083572387695
    10. '<|end|>' → logprob: -4.2393083572387695

Token 307: ' poids' (ID: 56058)
  Prédit: ' poids'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' poids' → logprob: -1.2743980884552002
    2. 'weight' → logprob: -1.8993980884552002
    3. 'po' → logprob: -2.0243980884552
    4. 'answer' → logprob: -2.0243980884552
    5. 'additional' → logprob: -2.5243980884552
    6. 'added' → logprob: -2.5243980884552
    7. 'x' → logprob: -3.2743980884552
    8. 'aj' → logprob: -3.7743980884552
    9. ' added' → logprob: -4.274397850036621
    10. ' answer' → logprob: -4.399397850036621

Token 308: ' qui' (ID: 2780)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.060066528618335724
    2. ' for' → logprob: -4.3100666999816895
    3. '   ' → logprob: -4.8100666999816895
    4. ',' → logprob: -4.8100666999816895
    5. ' to' → logprob: -5.0600666999816895
    6. 'import' → logprob: -5.3100666999816895
    7. ' supplémentaire' → logprob: -5.5600666999816895
    8. ' =' → logprob: -6.3100666999816895
    9. ' in' → logprob: -6.5600666999816895
    10. '=' → logprob: -6.8100666999816895

Token 309: ' marche' (ID: 58191)
  Prédit: 'perm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'perm' → logprob: -0.5209932923316956
    2. ' can' → logprob: -2.145993232727051
    3. ' permet' → logprob: -2.645993232727051
    4. 's' → logprob: -3.520993232727051
    5. 'for' → logprob: -3.520993232727051
    6. 'can' → logprob: -3.645993232727051
    7. ' for' → logprob: -3.770993232727051
    8. ' allows' → logprob: -3.895993232727051
    9. '   ' → logprob: -4.395993232727051
    10. 'makes' → logprob: -4.395993232727051

Token 310: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0021526420023292303
    2. ' for' → logprob: -6.752152442932129
    3. 'for' → logprob: -7.127152442932129
    4. 'possible' → logprob: -10.127152442932129
    5. 'max' → logprob: -10.752152442932129
    6. ',' → logprob: -10.752152442932129
    7. '   ' → logprob: -10.877152442932129
    8. 'weight' → logprob: -10.877152442932129
    9. 'additional' → logprob: -11.752152442932129
    10. 'added' → logprob: -11.877152442932129

Token 311: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.015938175842165947
    2. ' for' → logprob: -4.2659382820129395
    3. 'for' → logprob: -6.5159382820129395
    4. '   ' → logprob: -9.265937805175781
    5. 'weight' → logprob: -10.390937805175781
    6. 'possible' → logprob: -10.765937805175781
    7. 'max' → logprob: -10.890937805175781
    8. '	' → logprob: -11.015937805175781
    9. ' possible' → logprob: -11.015937805175781
    10. ' added' → logprob: -11.265937805175781

Token 312: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' (adapté à ' max') → logprob: -0.42676663398742676
    2. 'for' → logprob: -1.4267666339874268
    3. 'added' → logprob: -3.3017666339874268
    4. 'found' → logprob: -3.4267666339874268
    5. '       ' → logprob: -4.176766395568848
    6. 'limit' → logprob: -4.801766395568848
    7. 'MAX' → logprob: -5.426766395568848
    8. 'min' → logprob: -5.926766395568848
    9. 'additional' → logprob: -5.926766395568848
    10. 'possible' → logprob: -6.176766395568848

Token 313: '_test' (ID: 9969)
  Prédit: '_weight'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_weight' → logprob: -0.010628477670252323
    2. '_add' → logprob: -4.885628700256348
    3. '_p' → logprob: -6.760628700256348
    4. '_search' → logprob: -7.760628700256348
    5. '_test' → logprob: -7.885628700256348
    6. '_candidate' → logprob: -8.260628700256348
    7. '_po' → logprob: -8.510628700256348
    8. '_value' → logprob: -8.510628700256348
    9. '_val' → logprob: -9.385628700256348
    10. '_extra' → logprob: -9.510628700256348

Token 314: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3873235285282135
    2. '=' → logprob: -1.1373234987258911
    3. '_weight' → logprob: -7.887323379516602
    4. 'ed' → logprob: -9.637323379516602
    5. '   ' → logprob: -12.512323379516602
    6. '=int' → logprob: -13.012323379516602
    7. 'weight' → logprob: -14.012323379516602
    8. '=max' → logprob: -14.012323379516602
    9. 'e' → logprob: -14.387323379516602
    10. 'ing' → logprob: -14.512323379516602

Token 315: ' ' (ID: 220)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.34203198552131653
    2. '110' → logprob: -1.5920319557189941
    3. '10' → logprob: -2.467031955718994
    4. 'int' → logprob: -7.342031955718994
    5. ' ' → logprob: -8.467032432556152
    6. '1' → logprob: -8.467032432556152
    7. '200' → logprob: -8.842032432556152
    8. '150' → logprob: -10.217032432556152
    9. '101' → logprob: -10.342032432556152
    10. '120' → logprob: -11.217032432556152

Token 316: '10' (ID: 702)
  Prédit: '110'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '110' → logprob: -0.0546974316239357
    2. '100' → logprob: -3.1796975135803223
    3. '10' → logprob: -4.554697513580322
    4. 'int' → logprob: -7.054697513580322
    5. '1' → logprob: -8.554697036743164
    6. '(' → logprob: -11.429697036743164
    7. '101' → logprob: -11.429697036743164
    8. '200' → logprob: -11.679697036743164
    9. '111' → logprob: -12.054697036743164
    10. '11' → logprob: -12.304697036743164

Token 317: '**' (ID: 410)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '9' → logprob: -0.2265171855688095
    2. '8' → logprob: -1.6015172004699707
    3. '7' → logprob: -7.476517200469971
    4. '000' → logprob: -7.976517200469971
    5. '900' → logprob: -9.226516723632812
    6. '100' → logprob: -10.226516723632812
    7. '5' → logprob: -10.351516723632812
    8. '6' → logprob: -11.351516723632812
    9. '800' → logprob: -11.976516723632812
    10. '10' → logprob: -12.476516723632812

Token 318: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.030884573236107826
    2. '8' → logprob: -3.6558845043182373
    3. '10' → logprob: -5.405884742736816
    4. '7' → logprob: -9.780884742736816
    5. '11' → logprob: -11.405884742736816
    6. '6' → logprob: -12.280884742736816
    7. '
' → logprob: -13.030884742736816
    8. '

' → logprob: -13.093384742736816
    9. '5' → logprob: -13.218384742736816
    10. '```' → logprob: -14.093384742736816

Token 319: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4943026900291443
    2. ' +' → logprob: -0.9943026900291443
    3. '
' → logprob: -3.994302749633789
    4. '       ' → logprob: -7.619302749633789
    5. '+
' → logprob: -7.619302749633789
    6. '   ' → logprob: -7.869302749633789
    7. '000' → logprob: -9.994302749633789
    8. 'import' → logprob: -9.994302749633789
    9. '100' → logprob: -10.119302749633789
    10. '1' → logprob: -10.369302749633789

Token 320: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.08909246325492859
    2. '100' → logprob: -2.464092493057251
    3. '1' → logprob: -8.839092254638672
    4. ' ' → logprob: -12.464092254638672
    5. 'int' → logprob: -12.714092254638672
    6. '
' → logprob: -14.589092254638672
    7. '(' → logprob: -15.464092254638672
    8. '  ' → logprob: -15.839092254638672
    9. '   ' → logprob: -15.839092254638672
    10. '

' → logprob: -17.089092254638672

Token 321: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.22868266701698303
    2. '100' → logprob: -1.6036826372146606
    3. '1' → logprob: -5.728682518005371
    4. 'int' → logprob: -11.603682518005371
    5. '(' → logprob: -13.478682518005371
    6. ' ' → logprob: -13.728682518005371
    7. '
' → logprob: -14.603682518005371
    8. '{' → logprob: -15.728682518005371
    9. '  ' → logprob: -15.791182518005371
    10. '

' → logprob: -15.853682518005371

Token 322: '**' (ID: 410)
  Prédit: '8'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -1.5213274309644476e-05
    2. '7' → logprob: -11.500015258789062
    3. '5' → logprob: -12.875015258789062
    4. '9' → logprob: -13.500015258789062
    5. '6' → logprob: -14.875015258789062
    6. 'eight' → logprob: -14.875015258789062
    7. '**' → logprob: -15.000015258789062
    8. '08' → logprob: -17.500015258789062
    9. '0' → logprob: -18.625015258789062
    10. '
' → logprob: -19.250015258789062

Token 323: '8' (ID: 23)
  Prédit: '8'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -9.491498531133402e-06
    2. '7' → logprob: -11.625009536743164
    3. '5' → logprob: -15.250009536743164
    4. '6' → logprob: -15.500009536743164
    5. '9' → logprob: -16.375009536743164
    6. 'eight' → logprob: -17.750009536743164
    7. '08' → logprob: -18.000009536743164
    8. '
' → logprob: -18.000009536743164
    9. '

' → logprob: -18.500009536743164
    10. '10' → logprob: -18.875009536743164

Token 324: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06029605492949486
    2. '
' → logprob: -2.935296058654785
    3. '   ' → logprob: -5.810296058654785
    4. ' for' → logprob: -6.435296058654785
    5. 'for' → logprob: -7.810296058654785
    6. '        
' → logprob: -8.935296058654785
    7. ',' → logprob: -9.935296058654785
    8. '<|end|>' → logprob: -9.935296058654785
    9. 'possible' → logprob: -10.685296058654785
    10. ')' → logprob: -10.685296058654785

Token 325: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011719860136508942
    2. ' for' → logprob: -4.761719703674316
    3. 'for' → logprob: -7.011719703674316
    4. '<|end|>' → logprob: -7.136719703674316
    5. '
' → logprob: -7.511719703674316
    6. '   ' → logprob: -7.886719703674316
    7. '        
' → logprob: -9.011719703674316
    8. 'possible' → logprob: -9.261719703674316
    9. ' possible' → logprob: -9.761719703674316
    10. ',' → logprob: -10.511719703674316

Token 326: ' ans' (ID: 3345)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.036135684698820114
    2. 'found' → logprob: -3.661135673522949
    3. '       ' → logprob: -4.911135673522949
    4. 'added' → logprob: -6.286135673522949
    5. 'possible' → logprob: -8.66113567352295
    6. 'additional' → logprob: -8.78613567352295
    7. 'def' → logprob: -9.53613567352295
    8. ' for' → logprob: -9.53613567352295
    9. 'import' → logprob: -10.66113567352295
    10. 'extra' → logprob: -11.28613567352295

Token 327: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47407805919647217
    2. '=' → logprob: -0.9740780591964722
    3. '=None' → logprob: -14.224078178405762
    4. '＝' → logprob: -16.099077224731445
    5. '   ' → logprob: -16.349077224731445
    6. '=int' → logprob: -16.724077224731445
    7. ' ' → logprob: -16.849077224731445
    8. '=

' → logprob: -16.974077224731445
    9. ',' → logprob: -17.099077224731445
    10. 's' → logprob: -17.349077224731445

Token 328: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.08121128380298615
    2. 'None' → logprob: -2.5812113285064697
    3. '0' → logprob: -6.081211090087891
    4. ' None' → logprob: -10.70621109008789
    5. ' -' → logprob: -11.58121109008789
    6. '   ' → logprob: -14.95621109008789
    7. 'float' → logprob: -15.45621109008789
    8. 'max' → logprob: -15.45621109008789
    9. '-none' → logprob: -15.58121109008789
    10. '```' → logprob: -16.20621109008789

Token 329: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. 'max' → logprob: -15.375
    3. ' ' → logprob: -15.625
    4. '2' → logprob: -16.875
    5. '10' → logprob: -17.875
    6. '100' → logprob: -17.875
    7. '   ' → logprob: -18.25
    8. '```' → logprob: -18.75
    9. '１' → logprob: -19.375
    10. '-' → logprob: -19.375

Token 330: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02954925037920475
    2. '
' → logprob: -4.1545491218566895
    3. ' for' → logprob: -4.4045491218566895
    4. '        
' → logprob: -7.4045491218566895
    5. ' 
' → logprob: -8.154549598693848
    6. 'for' → logprob: -9.279549598693848
    7. '<|end|>' → logprob: -9.279549598693848
    8. '   ' → logprob: -10.654549598693848
    9. '  
' → logprob: -10.654549598693848
    10. '    
' → logprob: -10.779549598693848

Token 331: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.040899649262428284
    2. ' for' → logprob: -3.5408997535705566
    3. 'for' → logprob: -4.540899753570557
    4. '   ' → logprob: -7.915899753570557
    5. '<|end|>' → logprob: -10.290899276733398
    6. '	for' → logprob: -11.040899276733398
    7. ',' → logprob: -13.040899276733398
    8. '        
' → logprob: -13.165899276733398
    9. '```' → logprob: -14.415899276733398
    10. 'import' → logprob: -14.415899276733398

Token 332: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -5.049755782238208e-05
    2. ' for' → logprob: -11.12505054473877
    3. 'low' → logprob: -11.25005054473877
    4. 'left' → logprob: -11.37505054473877
    5. 'import' → logprob: -12.25005054473877
    6. '       ' → logprob: -12.37505054473877
    7. 'from' → logprob: -14.37505054473877
    8. '```' → logprob: -14.75005054473877
    9. 'current' → logprob: -15.50005054473877
    10. 'weight' → logprob: -15.62505054473877

Token 333: ' new' (ID: 620)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.9679988622665405
    2. 'new' → logprob: -1.4679988622665405
    3. 'extra' → logprob: -1.9679988622665405
    4. 'candidate' → logprob: -2.59299898147583
    5. 'add' → logprob: -2.71799898147583
    6. 'x' → logprob: -2.96799898147583
    7. 'additional' → logprob: -4.46799898147583
    8. ' w' → logprob: -4.46799898147583
    9. ' new' → logprob: -4.71799898147583
    10. ' candidate' → logprob: -4.71799898147583

Token 334: '_w' (ID: 3567)
  Prédit: '_weight'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_weight' → logprob: -0.011236794292926788
    2. '_w' → logprob: -4.511236667633057
    3. 'w' → logprob: -9.136237144470215
    4. ' in' → logprob: -10.136237144470215
    5. 'weight' → logprob: -10.386237144470215
    6. '_p' → logprob: -12.511237144470215
    7. '_add' → logprob: -13.511237144470215
    8. '_pow' → logprob: -13.761237144470215
    9. '_weights' → logprob: -14.261237144470215
    10. '_' → logprob: -14.261237144470215

Token 335: ' in' (ID: 306)
  Prédit: 'eight'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eight' → logprob: -0.11844993382692337
    2. ' in' → logprob: -2.2434499263763428
    3. 'e' → logprob: -5.493450164794922
    4. 'ight' → logprob: -7.368450164794922
    5. 'eig' → logprob: -7.993450164794922
    6. 'ei' → logprob: -8.868450164794922
    7. 'ght' → logprob: -8.868450164794922
    8. 'in' → logprob: -9.493450164794922
    9. 't' → logprob: -9.868450164794922
    10. ' eight' → logprob: -10.243450164794922

Token 336: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.14319707453250885
    2. ' range' → logprob: -2.0181970596313477
    3. 'weights' → logprob: -7.768197059631348
    4. '[' → logprob: -10.393197059631348
    5. ' weights' → logprob: -10.393197059631348
    6. '(range' → logprob: -10.893197059631348
    7. 'sorted' → logprob: -11.518197059631348
    8. '	range' → logprob: -13.393197059631348
    9. ' ' → logprob: -13.518197059631348
    10. 'weight' → logprob: -13.643197059631348

Token 337: '(' (ID: 7)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.05496308207511902
    2. '(' → logprob: -2.9299631118774414
    3. '   ' → logprob: -10.179963111877441
    4. ' ' → logprob: -10.679963111877441
    5. 'weights' → logprob: -12.304963111877441
    6. ',' → logprob: -12.554963111877441
    7. '(weights' → logprob: -12.804963111877441
    8. '           ' → logprob: -12.929963111877441
    9. '       ' → logprob: -13.054963111877441
    10. '(max' → logprob: -13.804963111877441

Token 338: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002775438770186156
    2. 'max' → logprob: -8.375277519226074
    3. 'weights' → logprob: -10.750277519226074
    4. ' ' → logprob: -11.625277519226074
    5. '100' → logprob: -12.000277519226074
    6. '0' → logprob: -12.375277519226074
    7. '(' → logprob: -13.125277519226074
    8. '10' → logprob: -14.000277519226074
    9. 'min' → logprob: -14.125277519226074
    10. '(max' → logprob: -14.250277519226074

Token 339: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00013131031300872564
    2. ',max' → logprob: -9.000131607055664
    3. ' ,' → logprob: -11.875131607055664
    4. ',
' → logprob: -14.375131607055664
    5. '   ' → logprob: -16.375131607055664
    6. 'max' → logprob: -16.625131607055664
    7. ',len' → logprob: -17.375131607055664
    8. '1' → logprob: -17.500131607055664
    9. '       ' → logprob: -17.625131607055664
    10. ',int' → logprob: -17.875131607055664

Token 340: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.04283132031559944
    2. '100' → logprob: -3.4178314208984375
    3. '101' → logprob: -4.9178314208984375
    4. '10' → logprob: -7.4178314208984375
    5. ' max' → logprob: -7.9178314208984375
    6. 'int' → logprob: -7.9178314208984375
    7. 'len' → logprob: -8.542831420898438
    8. 'm' → logprob: -9.667831420898438
    9. 'weights' → logprob: -9.667831420898438
    10. ' ' → logprob: -9.792831420898438

Token 341: '_test' (ID: 9969)
  Prédit: '_test'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_test' → logprob: -0.00015205175441224128
    2. 'test' → logprob: -10.000151634216309
    3. '_w' → logprob: -10.125151634216309
    4. 'w' → logprob: -10.750151634216309
    5. '   ' → logprob: -12.000151634216309
    6. '(' → logprob: -12.000151634216309
    7. '+' → logprob: -12.000151634216309
    8. '_weight' → logprob: -12.375151634216309
    9. '_new' → logprob: -12.500151634216309
    10. '       ' → logprob: -13.125151634216309

Token 342: '+' (ID: 10)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.2818159759044647
    2. '+' → logprob: -1.531816005706787
    3. '):' → logprob: -3.781816005706787
    4. ' +' → logprob: -5.031816005706787
    5. '   ' → logprob: -9.656815528869629
    6. ' ):
' → logprob: -10.406815528869629
    7. ':
' → logprob: -12.031815528869629
    8. '
' → logprob: -12.031815528869629
    9. ',' → logprob: -12.156815528869629
    10. ':' → logprob: -12.281815528869629

Token 343: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.7372048862162046e-05
    2. ' ' → logprob: -10.625027656555176
    3. '   ' → logprob: -12.750027656555176
    4. '):
' → logprob: -17.25002670288086
    5. '  ' → logprob: -17.75002670288086
    6. '    ' → logprob: -18.00002670288086
    7. ')' → logprob: -18.00002670288086
    8. '```' → logprob: -18.25002670288086
    9. '100' → logprob: -18.62502670288086
    10. '       ' → logprob: -18.87502670288086

Token 344: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.7951193451881409
    2. ':' → logprob: -1.045119285583496
    3. '):' → logprob: -1.670119285583496
    4. ':
' → logprob: -4.795119285583496
    5. '       ' → logprob: -9.045119285583496
    6. '):
' → logprob: -9.545119285583496
    7. '   ' → logprob: -9.795119285583496
    8. '():
' → logprob: -10.670119285583496
    9. '           ' → logprob: -11.420119285583496
    10. ')' → logprob: -11.545119285583496

Token 345: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02408105693757534
    2. '<|end|>' → logprob: -3.899080991744995
    3. ' if' → logprob: -7.024081230163574
    4. '<|end|>' → logprob: -7.274081230163574
    5. '            
' → logprob: -7.649081230163574
    6. '   ' → logprob: -7.774081230163574
    7. '       ' → logprob: -8.024081230163574
    8. ' ' → logprob: -9.149081230163574
    9. ',' → logprob: -9.399081230163574
    10. '
' → logprob: -9.399081230163574

Token 346: ' new' (ID: 620)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.49251437187194824
    2. ' if' → logprob: -1.1175143718719482
    3. ' new' → logprob: -3.4925143718719482
    4. 'if' → logprob: -3.7425143718719482
    5. 'new' (adapté à ' new') → logprob: -5.867514610290527
    6. 'weights' → logprob: -5.992514610290527
    7. ' weights' → logprob: -6.367514610290527
    8. '               ' → logprob: -8.742514610290527
    9. '	       ' → logprob: -9.242514610290527
    10. 'added' → logprob: -9.617514610290527

Token 347: '_weights' (ID: 49127)
  Prédit: '_weights'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_weights' → logprob: -0.0042145708575844765
    2. 'weights' → logprob: -5.629214763641357
    3. '_w' → logprob: -7.504214763641357
    4. '_weight' → logprob: -10.6292142868042
    5. '_' → logprob: -11.2542142868042
    6. ' weights' → logprob: -12.0042142868042
    7. '_we' → logprob: -12.2542142868042
    8. 'w' → logprob: -12.2542142868042
    9. '   ' → logprob: -12.6292142868042
    10. 'Weights' → logprob: -13.2542142868042

Token 348: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2519311308860779
    2. '=' → logprob: -1.5019311904907227
    3. '.append' → logprob: -14.251931190490723
    4. '   ' → logprob: -14.376931190490723
    5. ')' → logprob: -15.001931190490723
    6. 's' → logprob: -16.001930236816406
    7. '    ' → logprob: -16.501930236816406
    8. '=w' → logprob: -17.001930236816406
    9. 'w' → logprob: -17.126930236816406
    10. ' ' → logprob: -17.251930236816406

Token 349: ' weights' (ID: 28460)
  Prédit: 'weights'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'weights' → logprob: -0.0076081594452261925
    2. ' weights' → logprob: -4.882607936859131
    3. '   ' → logprob: -13.507608413696289
    4. 'weight' → logprob: -15.007608413696289
    5. '(weights' → logprob: -15.382608413696289
    6. '.weights' → logprob: -17.00760841369629
    7. 'Weights' → logprob: -17.50760841369629
    8. ' ' → logprob: -17.88260841369629
    9. '_weights' → logprob: -17.88260841369629
    10. 'weig' → logprob: -18.00760841369629

Token 350: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.043081287294626236
    2. ' +' → logprob: -3.293081283569336
    3. '+[' → logprob: -5.293081283569336
    4. '[:]' → logprob: -14.418081283569336
    5. '＋' → logprob: -15.293081283569336
    6. '.copy' → logprob: -16.668081283569336
    7. '+c' → logprob: -17.918081283569336
    8. '[' → logprob: -18.293081283569336
    9. '+
' → logprob: -18.418081283569336
    10. '.append' → logprob: -18.418081283569336

Token 351: ' [' (ID: 723)
  Prédit: '[new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[new' → logprob: -0.007145005743950605
    2. ' [' → logprob: -5.007144927978516
    3. '[' → logprob: -7.757144927978516
    4. '[next' → logprob: -14.007144927978516
    5. '[n' → logprob: -15.257144927978516
    6. '[num' → logprob: -15.632144927978516
    7. '[current' → logprob: -15.882144927978516
    8. '[user' → logprob: -16.132144927978516
    9. '[name' → logprob: -16.382144927978516
    10. '[number' → logprob: -16.507144927978516

Token 352: 'new' (ID: 1389)
  Prédit: 'new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.0015023599844425917
    2. ' new' → logprob: -6.501502513885498
    3. '   ' → logprob: -17.001502990722656
    4. '```' → logprob: -20.126502990722656
    5. '
' → logprob: -20.251502990722656
    6. '	new' → logprob: -20.376502990722656
    7. ' ' → logprob: -20.501502990722656
    8. '新' → logprob: -20.501502990722656
    9. '  ' → logprob: -20.876502990722656
    10. '_new' → logprob: -21.376502990722656

Token 353: '_w' (ID: 3567)
  Prédit: '_w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_w' → logprob: -6.20603168499656e-05
    2. 'w' → logprob: -9.875061988830566
    3. 'new' → logprob: -11.500061988830566
    4. '_new' → logprob: -14.875061988830566
    5. ' new' → logprob: -16.875062942504883
    6. '_' → logprob: -17.000062942504883
    7. '[new' → logprob: -18.000062942504883
    8. '_weights' → logprob: -18.375062942504883
    9. ']' → logprob: -19.125062942504883
    10. '(new' → logprob: -19.125062942504883

Token 354: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.048702169209718704
    2. ']' → logprob: -3.0487022399902344
    3. ']
' → logprob: -9.173702239990234
    4. '           ' → logprob: -11.923702239990234
    5. '       ' → logprob: -13.173702239990234
    6. ' ]
' → logprob: -13.423702239990234
    7. ']

' → logprob: -14.298702239990234
    8. ' ]' → logprob: -15.423702239990234
    9. ')
' → logprob: -16.798702239990234
    10. '   ' → logprob: -17.048702239990234

Token 355: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0007347009377554059
    2. '       ' → logprob: -7.875734806060791
    3. '   ' → logprob: -8.125734329223633
    4. ' if' → logprob: -10.000734329223633
    5. '
' → logprob: -12.375734329223633
    6. 'if' → logprob: -12.500734329223633
    7. '<|end|>' → logprob: -13.000734329223633
    8. '	       ' → logprob: -14.125734329223633
    9. '<|end|>' → logprob: -14.750734329223633
    10. ',' → logprob: -14.875734329223633

Token 356: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5660501718521118
    2. 'if' (adapté à ' if') → logprob: -1.3160501718521118
    3. ' if' → logprob: -1.8160501718521118
    4. '       ' → logprob: -6.941050052642822
    5. '   ' → logprob: -7.816050052642822
    6. '	if' → logprob: -13.19105052947998
    7. ' ' → logprob: -13.69105052947998
    8. '```' → logprob: -14.19105052947998
    9. '	       ' → logprob: -14.31605052947998
    10. '            
' → logprob: -14.44105052947998

Token 357: ' can' (ID: 665)
  Prédit: 'can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'can' → logprob: -0.03804183006286621
    2. ' can' → logprob: -3.288041830062866
    3. '	can' → logprob: -15.413042068481445
    4. '(can' → logprob: -16.413042068481445
    5. '.can' → logprob: -17.288042068481445
    6. '   ' → logprob: -17.413042068481445
    7. '_can' → logprob: -17.663042068481445
    8. ' ' → logprob: -19.038042068481445
    9. 'Can' → logprob: -19.538042068481445
    10. '```' → logprob: -19.788042068481445

Token 358: '_measure' (ID: 103789)
  Prédit: '_measure'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_measure' → logprob: -7.896309739408025e-07
    2. '_me' → logprob: -14.750000953674316
    3. 'measure' → logprob: -15.375000953674316
    4. '_can' → logprob: -15.875000953674316
    5. ' _' → logprob: -17.75
    6. '_' → logprob: -18.25
    7. 'can' → logprob: -18.75
    8. '_mes' → logprob: -19.0
    9. '\' → logprob: -19.25
    10. '```' → logprob: -19.375

Token 359: '(amount' (ID: 60193)
  Prédit: '(amount'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(amount' → logprob: -7.896309739408025e-07
    2. 'amount' → logprob: -14.625000953674316
    3. ' amounts' → logprob: -15.375000953674316
    4. ' (' → logprob: -20.125
    5. '(' → logprob: -21.5
    6. '(length' → logprob: -21.75
    7. '(answer' → logprob: -22.25
    8. '(am' → logprob: -22.375
    9. '(
' → logprob: -23.0
    10. '.amount' → logprob: -23.125

Token 360: 's' (ID: 82)
  Prédit: 'amount'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'amount' → logprob: -0.29954302310943604
    2. ' amounts' → logprob: -1.924543023109436
    3. '(amount' → logprob: -2.2995429039001465
    4. ',' → logprob: -5.2995429039001465
    5. 'ount' → logprob: -5.6745429039001465
    6. 'ents' → logprob: -6.7995429039001465
    7. 'nts' → logprob: -6.7995429039001465
    8. 's' → logprob: -6.7995429039001465
    9. 'unts' → logprob: -7.9245429039001465
    10. '[' → logprob: -9.049543380737305

Token 361: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.023284733295440674
    2. ',new' → logprob: -3.773284673690796
    3. '(new' → logprob: -10.648284912109375
    4. ' ,' → logprob: -11.523284912109375
    5. 'new' → logprob: -12.398284912109375
    6. ',
' → logprob: -14.398284912109375
    7. '(' → logprob: -15.273284912109375
    8. '[new' → logprob: -15.523284912109375
    9. ' new' → logprob: -15.648284912109375
    10. '           ' → logprob: -16.523284912109375

Token 362: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.048591118305921555
    2. ' new' → logprob: -3.048591136932373
    3. '[new' → logprob: -12.548590660095215
    4. '	new' → logprob: -16.42359161376953
    5. ')new' → logprob: -16.79859161376953
    6. '_new' → logprob: -16.92359161376953
    7. 'New' → logprob: -17.92359161376953
    8. '(new' → logprob: -18.29859161376953
    9. '$new' → logprob: -18.67359161376953
    10. '   ' → logprob: -18.67359161376953

Token 363: '_weights' (ID: 49127)
  Prédit: '_weights'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_weights' → logprob: -0.002430951688438654
    2. 'weights' → logprob: -6.3774309158325195
    3. '_measure' → logprob: -7.6274309158325195
    4. 'new' → logprob: -8.50243091583252
    5. ' weights' → logprob: -11.75243091583252
    6. '_w' → logprob: -11.75243091583252
    7. 'w' → logprob: -12.12743091583252
    8. 'measure' → logprob: -12.50243091583252
    9. '_we' → logprob: -12.75243091583252
    10. '_weight' → logprob: -12.75243091583252

Token 364: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.014175265096127987
    2. '):' → logprob: -4.2641754150390625
    3. '           ' → logprob: -12.014175415039062
    4. '):
' → logprob: -13.014175415039062
    5. ':
' → logprob: -13.764175415039062
    6. ']:
' → logprob: -14.264175415039062
    7. '():
' → logprob: -14.639175415039062
    8. '       ' → logprob: -14.889175415039062
    9. ':' → logprob: -15.139175415039062
    10. '               ' → logprob: -15.514175415039062

Token 365: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00013524403038900346
    2. '           ' → logprob: -9.12513542175293
    3. '       ' → logprob: -11.75013542175293
    4. ':
' → logprob: -12.50013542175293
    5. '):
' → logprob: -13.00013542175293
    6. ':' → logprob: -13.12513542175293
    7. '                   ' → logprob: -13.37513542175293
    8. '```' → logprob: -13.37513542175293
    9. '<|end|>' → logprob: -13.50013542175293
    10. 'ans' → logprob: -13.62513542175293

Token 366: ' ans' (ID: 3345)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.15101967751979828
    2. '           ' → logprob: -2.02601957321167
    3. '   ' → logprob: -6.02601957321167
    4. 'ans' (adapté à ' ans') → logprob: -6.15101957321167
    5. ' ans' → logprob: -6.40101957321167
    6. '       ' → logprob: -6.65101957321167
    7. 'print' → logprob: -7.52601957321167
    8. ' print' → logprob: -8.526020050048828
    9. '                   ' → logprob: -10.151020050048828
    10. '	ans' → logprob: -11.151020050048828

Token 367: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03804194927215576
    2. '=' → logprob: -3.2880420684814453
    3. ' =
' → logprob: -14.663042068481445
    4. ' ' → logprob: -16.913042068481445
    5. ')' → logprob: -17.163042068481445
    6. '＝' → logprob: -17.663042068481445
    7. ' =
' → logprob: -17.788042068481445
    8. '<|end|>' → logprob: -18.038042068481445
    9. ' =)' → logprob: -18.163042068481445
    10. '=int' → logprob: -18.913042068481445

Token 368: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.06196768581867218
    2. ' new' → logprob: -2.811967611312866
    3. '	new' → logprob: -19.561967849731445
    4. '   ' → logprob: -19.936967849731445
    5. '_new' → logprob: -20.561967849731445
    6. '$new' → logprob: -20.686967849731445
    7. '           ' → logprob: -20.936967849731445
    8. '新' → logprob: -20.936967849731445
    9. '[new' → logprob: -21.311967849731445
    10. 'New' → logprob: -21.686967849731445

Token 369: '_w' (ID: 3567)
  Prédit: '_w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_w' → logprob: -1.4140441635390744e-05
    2. '_weights' → logprob: -11.750014305114746
    3. '_' → logprob: -12.250014305114746
    4. 'w' → logprob: -13.625014305114746
    5. '_weight' → logprob: -15.750014305114746
    6. '_p' → logprob: -17.87501335144043
    7. ' _' → logprob: -18.25001335144043
    8. 'new' → logprob: -18.87501335144043
    9. '_new' → logprob: -19.12501335144043
    10. ''_' → logprob: -19.25001335144043

Token 370: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -5.2166411478538066e-05
    2. '           ' → logprob: -10.000052452087402
    3. '<|end|>' → logprob: -13.375052452087402
    4. '                   ' → logprob: -13.625052452087402
    5. '			' → logprob: -14.500052452087402
    6. '
' → logprob: -14.500052452087402
    7. '       ' → logprob: -14.625052452087402
    8. '                
' → logprob: -14.750052452087402
    9. '		       ' → logprob: -14.875052452087402
    10. '	           ' → logprob: -15.000052452087402

Token 371: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.843177233240567e-05
    2. '           ' → logprob: -11.375018119812012
    3. '                
' → logprob: -12.875018119812012
    4. '<|end|>' → logprob: -13.125018119812012
    5. '       ' → logprob: -14.375018119812012
    6. '
' → logprob: -14.625018119812012
    7. '		       ' → logprob: -15.250018119812012
    8. '                   ' → logprob: -15.375018119812012
    9. '            
' → logprob: -15.750018119812012
    10. '```' → logprob: -15.750018119812012

Token 372: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.14484146237373352
    2. 'print' → logprob: -2.894841432571411
    3. '           ' → logprob: -3.144841432571411
    4. '               ' → logprob: -3.894841432571411
    5. ' break' → logprob: -4.14484167098999
    6. ' print' → logprob: -8.269841194152832
    7. '       ' → logprob: -11.894841194152832
    8. '	break' → logprob: -12.894841194152832
    9. '   ' → logprob: -15.144841194152832
    10. '_break' → logprob: -15.394841194152832

Token 373: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.033633481711149216
    2. '   ' → logprob: -3.7836334705352783
    3. '
' → logprob: -4.783633708953857
    4. '        
' → logprob: -7.533633708953857
    5. '<|end|>' → logprob: -7.533633708953857
    6. '    
' → logprob: -7.908633708953857
    7. '```' → logprob: -8.9086332321167
    8. '  
' → logprob: -9.1586332321167
    9. '           ' → logprob: -9.1586332321167
    10. '            
' → logprob: -9.9086332321167

Token 374: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0022172266617417336
    2. '   ' → logprob: -6.1272172927856445
    3. '           ' → logprob: -11.627217292785645
    4. '
' → logprob: -11.752217292785645
    5. 'print' → logprob: -12.002217292785645
    6. '```' → logprob: -12.252217292785645
    7. '<|end|>' → logprob: -13.002217292785645
    8. '        
' → logprob: -13.377217292785645
    9. '    
' → logprob: -15.877217292785645
    10. ' print' → logprob: -16.002216339111328

Token 375: ' print' (ID: 2123)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.43046674132347107
    2. 'print' (adapté à ' print') → logprob: -1.1804667711257935
    3. '   ' → logprob: -3.180466651916504
    4. ' print' → logprob: -7.180466651916504
    5. '```' → logprob: -8.055466651916504
    6. '	print' → logprob: -11.555466651916504
    7. '           ' → logprob: -13.555466651916504
    8. '.print' → logprob: -14.305466651916504
    9. '<|end|>' → logprob: -14.305466651916504
    10. '(print' → logprob: -15.055466651916504

Token 376: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -3.128163257315464e-07
    2. '(' → logprob: -15.5
    3. 'ans' → logprob: -16.875
    4. '()' → logprob: -18.0
    5. '(answer' → logprob: -18.25
    6. ' (' → logprob: -19.625
    7. '(err' → logprob: -21.0
    8. '(abs' → logprob: -21.0
    9. '	ans' → logprob: -21.25
    10. '(ord' → logprob: -21.75

Token 377: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -5.512236498361744e-07
    2. ' )' → logprob: -15.625000953674316
    3. ')
' → logprob: -16.0
    4. ')`' → logprob: -16.625
    5. ')}' → logprob: -17.125
    6. '`)' → logprob: -17.75
    7. '))' → logprob: -17.875
    8. '')' → logprob: -18.0
    9. '})' → logprob: -18.375
    10. ')}}' → logprob: -18.5

Token 378: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.2256585657596588
    2. '<|end|>' → logprob: -1.7256585359573364
    3. '```' → logprob: -4.850658416748047
    4. ' if' → logprob: -4.975658416748047
    5. '#' → logprob: -5.350658416748047
    6. 'main' → logprob: -5.850658416748047
    7. '
' → logprob: -7.600658416748047
    8. '<|end|>' → logprob: -7.850658416748047
    9. ')' → logprob: -8.600658416748047
    10. '__' → logprob: -8.850658416748047

Token 379: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.018182365223765373
    2. '__' → logprob: -4.018182277679443
    3. ' ' → logprob: -11.018182754516602
    4. '_name' → logprob: -12.018182754516602
    5. ' ' → logprob: -13.143182754516602
    6. '_' → logprob: -13.143182754516602
    7. ' name' → logprob: -13.268182754516602
    8. 'name' → logprob: -13.393182754516602
    9. 'space' → logprob: -14.643182754516602
    10. '___' → logprob: -14.643182754516602

Token 380: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0453038290143013
    2. '==' → logprob: -3.6703038215637207
    3. ' ==' → logprob: -4.045303821563721
    4. ' __' → logprob: -7.295303821563721
    5. '=="' → logprob: -8.420304298400879
    6. '.__' → logprob: -8.670304298400879
    7. '__.__' → logprob: -9.170304298400879
    8. 'name' → logprob: -10.045304298400879
    9. '=='' → logprob: -10.420304298400879
    10. '__.' → logprob: -11.045304298400879

Token 381: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0008201113669201732
    2. '__.__' → logprob: -7.250820159912109
    3. '==' → logprob: -9.50082015991211
    4. '__.' → logprob: -10.75082015991211
    5. '__["' → logprob: -12.25082015991211
    6. '=="' → logprob: -12.75082015991211
    7. ' ==' → logprob: -12.75082015991211
    8. '__":
' → logprob: -14.75082015991211
    9. '.__' → logprob: -14.87582015991211
    10. '__[' → logprob: -14.87582015991211

Token 382: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.006392284762114286
    2. '==' → logprob: -5.131392478942871
    3. ' ==' → logprob: -7.881392478942871
    4. '=="' → logprob: -9.631392478942871
    5. '=='' → logprob: -11.006392478942871
    6. '___' → logprob: -13.756392478942871
    7. '===' → logprob: -14.506392478942871
    8. '__.__' → logprob: -14.756392478942871
    9. '_' → logprob: -15.006392478942871
    10. '__,' → logprob: -15.131392478942871

Token 383: ' '__' (ID: 28278)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.47418829798698425
    2. ''' → logprob: -0.9741883277893066
    3. '__' → logprob: -9.224187850952148
    4. ' "__' → logprob: -11.474187850952148
    5. ' '__' → logprob: -13.099187850952148
    6. '('__' → logprob: -16.97418785095215
    7. '   ' → logprob: -17.09918785095215
    8. ''"' → logprob: -17.34918785095215
    9. '"name' → logprob: -17.47418785095215
    10. '("__' → logprob: -17.59918785095215

Token 384: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -3.8219583075260743e-05
    2. '__' → logprob: -10.750038146972656
    3. 'name' → logprob: -11.000038146972656
    4. 'm' → logprob: -18.250038146972656
    5. '_main' → logprob: -18.500038146972656
    6. ' main' → logprob: -19.125038146972656
    7. 'ma' → logprob: -19.500038146972656
    8. 'built' → logprob: -20.125038146972656
    9. '```' → logprob: -20.250038146972656
    10. 'MAIN' → logprob: -20.750038146972656

Token 385: '__':
' (ID: 39314)
  Prédit: '__':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__':
' → logprob: -0.05143436789512634
    2. '__' → logprob: -3.176434278488159
    3. ':' → logprob: -5.301434516906738
    4. '__:' → logprob: -6.676434516906738
    5. '':' → logprob: -6.801434516906738
    6. '__":
' → logprob: -7.801434516906738
    7. '():
' → logprob: -7.926434516906738
    8. '():' → logprob: -9.301434516906738
    9. '('__' → logprob: -10.051434516906738
    10. '':
' → logprob: -10.676434516906738

Token 386: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6223312616348267
    2. 'main' → logprob: -0.9973312616348267
    3. ' main' → logprob: -2.747331142425537
    4. '	main' → logprob: -3.497331142425537
    5. '_main' → logprob: -10.872331619262695
    6. '   ' → logprob: -10.997331619262695
    7. '```' → logprob: -11.872331619262695
    8. '  ' → logprob: -12.247331619262695
    9. ' ' → logprob: -12.372331619262695
    10. '(main' → logprob: -12.497331619262695

Token 387: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -6.217951886355877e-05
    2. ' main' → logprob: -9.750061988830566
    3. '   ' → logprob: -12.500061988830566
    4. '	main' → logprob: -16.000062942504883
    5. 'import' → logprob: -21.000062942504883
    6. '.main' → logprob: -22.625062942504883
    7. ' ' → logprob: -23.000062942504883
    8. '_main' → logprob: -23.625062942504883
    9. '(main' → logprob: -23.875062942504883
    10. '  ' → logprob: -23.875062942504883

Token 388: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 386
Tokens correctement prédits (1ère position, stricte): 160
Tokens correctement prédits (1ère position, avec adaptation): 169
Tokens correctement prédits (top 10): 303
Précision stricte (1ère position): 41.45%
Précision adaptée (1ère position): 43.78%
Précision (top 10): 78.50%
================================================================================
