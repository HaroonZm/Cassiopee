================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:12:46
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
while True:
    N = int(input())
    if N == 0:
        break
    max_volume = 0
    for _ in range(N):
        data = list(map(int, input().split()))
        d, t = data[0], data[1]
        volumes = data[2:]
        for v in volumes:
            if v > max_volume:
                max_volume = v
    print(max_volume)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'while' (ID: 7032)
  → Token d'amorce (pas de prédiction)

Token 1: ' True' (ID: 6432)
  → Token d'amorce (pas de prédiction)

Token 2: ':
' (ID: 734)
  → Token d'amorce (pas de prédiction)

Token 3: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6314842700958252
    2. '    ' → logprob: -2.131484270095825
    3. '    
' → logprob: -2.631484270095825
    4. '\' → logprob: -2.881484270095825
    5. '\n' → logprob: -2.881484270095825
    6. ' ' → logprob: -3.256484270095825
    7. '```' → logprob: -3.256484270095825
    8. ' 
' → logprob: -3.631484270095825
    9. '  
' → logprob: -4.131484031677246
    10. '     
' → logprob: -4.256484031677246

Token 4: ' N' (ID: 478)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.30723127722740173
    2. '    ' → logprob: -1.6822313070297241
    3. '```' → logprob: -3.5572311878204346
    4. ' ' → logprob: -3.8072311878204346
    5. '       ' → logprob: -4.807231426239014
    6. '    
' → logprob: -5.932231426239014
    7. '  ' → logprob: -6.182231426239014
    8. '\' → logprob: -6.182231426239014
    9. '\n' → logprob: -6.682231426239014
    10. '\t' → logprob: -6.807231426239014

Token 5: ' =' (ID: 314)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -1.3181540966033936
    2. 'o' → logprob: -1.4431540966033936
    3. '=' → logprob: -1.5681540966033936
    4. '+' → logprob: -2.0681540966033936
    5. '>' → logprob: -3.1931540966033936
    6. '   ' → logprob: -3.6931540966033936
    7. '_' → logprob: -3.6931540966033936
    8. '-' → logprob: -4.318154335021973
    9. 'e' → logprob: -4.568154335021973
    10. '.' → logprob: -4.818154335021973

Token 6: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.08127547055482864
    2. ' input' → logprob: -2.956275463104248
    3. 'int' → logprob: -3.831275463104248
    4. 'input' → logprob: -5.456275463104248
    5. ' ' → logprob: -10.331275939941406
    6. ' randint' → logprob: -11.456275939941406
    7. ' eval' → logprob: -11.581275939941406
    8. ' N' → logprob: -12.581275939941406
    9. ' len' → logprob: -12.706275939941406
    10. '0' → logprob: -12.706275939941406

Token 7: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.002919234102591872
    2. '(input' → logprob: -6.0029191970825195
    3. '()' → logprob: -8.75291919708252
    4. ' (' → logprob: -9.50291919708252
    5. '('' → logprob: -10.12791919708252
    6. ' ' → logprob: -10.37791919708252
    7. 'input' → logprob: -10.50291919708252
    8. ''' → logprob: -10.75291919708252
    9. '```' → logprob: -10.75291919708252
    10. ')' → logprob: -11.87791919708252

Token 8: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.23615877330303192
    2. '()' → logprob: -2.111158847808838
    3. ')' → logprob: -2.736158847808838
    4. '())' → logprob: -3.861158847808838
    5. '('' → logprob: -7.236158847808838
    6. ' ' → logprob: -7.611158847808838
    7. '))' → logprob: -7.861158847808838
    8. '```' → logprob: -7.861158847808838
    9. '()))' → logprob: -8.11115837097168
    10. '(
' → logprob: -8.36115837097168

Token 9: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.925456702709198
    2. ' ' → logprob: -1.4254567623138428
    3. '<|end|>' → logprob: -2.0504567623138428
    4. ' if' → logprob: -2.8004567623138428
    5. ')' → logprob: -3.0504567623138428
    6. '    ' → logprob: -3.3004567623138428
    7. '  ' → logprob: -3.8004567623138428
    8. '    
' → logprob: -4.175456523895264
    9. 'if' → logprob: -4.300456523895264
    10. ':' → logprob: -4.300456523895264

Token 10: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6974743008613586
    2. ' if' → logprob: -1.5724742412567139
    3. ')' → logprob: -2.197474241256714
    4. ' ' → logprob: -2.822474241256714
    5. '<|end|>' → logprob: -2.947474241256714
    6. '    ' → logprob: -4.197474479675293
    7. '```' → logprob: -4.447474479675293
    8. 'if' (adapté à ' if') → logprob: -4.572474479675293
    9. '  ' → logprob: -5.072474479675293
    10. '\n' → logprob: -5.697474479675293

Token 11: ' N' (ID: 478)
  Prédit: ' N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.024110734462738037
    2. ' ' → logprob: -3.774110794067383
    3. ' not' → logprob: -7.649110794067383
    4. 'N' → logprob: -7.899110794067383
    5. '  ' → logprob: -11.774110794067383
    6. ' ' → logprob: -12.024110794067383
    7. '<|end|>' → logprob: -14.024110794067383
    8. ')' → logprob: -14.524110794067383
    9. 'not' → logprob: -14.774110794067383
    10. ' )' → logprob: -14.774110794067383

Token 12: ' ==' (ID: 951)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.7534056901931763
    2. ' ==' → logprob: -1.1284056901931763
    3. ' <=' → logprob: -2.2534055709838867
    4. ' <' → logprob: -2.6284055709838867
    5. ' ' → logprob: -4.628405570983887
    6. '>' → logprob: -4.878405570983887
    7. '==' → logprob: -5.128405570983887
    8. ' >=' → logprob: -5.878405570983887
    9. '<' → logprob: -7.503405570983887
    10. '<=' → logprob: -7.628405570983887

Token 13: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2014213353395462
    2. '0' → logprob: -1.7014213800430298
    3. ' ' → logprob: -12.826421737670898
    4. '  ' → logprob: -13.451421737670898
    5. ')' → logprob: -14.201421737670898
    6. '1' → logprob: -14.826421737670898
    7. '<|end|>' → logprob: -15.263921737670898
    8. '    ' → logprob: -15.576421737670898
    9. ' a' → logprob: -15.576421737670898
    10. ' )' → logprob: -15.763921737670898

Token 14: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.018185412511229515
    2. ' ' → logprob: -4.018185615539551
    3. '-' → logprob: -10.64318561553955
    4. ' -' → logprob: -12.26818561553955
    5. '1' → logprob: -12.89318561553955
    6. '42' → logprob: -14.01818561553955
    7. '   ' → logprob: -14.26818561553955
    8. '  ' → logprob: -14.26818561553955
    9. '```' → logprob: -14.39318561553955
    10. '4' → logprob: -15.39318561553955

Token 15: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.652451464906335e-05
    2. ':
' → logprob: -11.625016212463379
    3. ' :' → logprob: -13.000016212463379
    4. '   ' → logprob: -13.375016212463379
    5. ':return' → logprob: -13.625016212463379
    6. '):' → logprob: -13.750016212463379
    7. '       ' → logprob: -14.375016212463379
    8. ':**' → logprob: -15.875016212463379
    9. '():' → logprob: -16.000017166137695
    10. '    ' → logprob: -16.125017166137695

Token 16: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007218453683890402
    2. '   ' → logprob: -7.7507219314575195
    3. ' break' → logprob: -8.37572193145752
    4. '\n' → logprob: -10.75072193145752
    5. '	break' → logprob: -11.75072193145752
    6. '    ' → logprob: -11.87572193145752
    7. '      ' → logprob: -12.25072193145752
    8. ':' → logprob: -12.25072193145752
    9. '     ' → logprob: -12.50072193145752
    10. '\t' → logprob: -13.25072193145752

Token 17: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.020219387486577034
    2. '       ' → logprob: -4.020219326019287
    3. 'break' (adapté à ' break') → logprob: -6.270219326019287
    4. '   ' → logprob: -10.020219802856445
    5. '\n' → logprob: -10.020219802856445
    6. '	break' → logprob: -10.145219802856445
    7. '_break' → logprob: -10.895219802856445
    8. '```' → logprob: -11.395219802856445
    9. ' \' → logprob: -12.520219802856445
    10. '    ' → logprob: -13.270219802856445

Token 18: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.47208982706069946
    2. '\n' → logprob: -1.3470897674560547
    3. '    
' → logprob: -3.2220897674560547
    4. '\' → logprob: -3.5970897674560547
    5. '```' → logprob: -4.347089767456055
    6. '<|end|>' → logprob: -4.347089767456055
    7. '
' → logprob: -5.097089767456055
    8. '\r' → logprob: -5.472089767456055
    9. ')' → logprob: -5.847089767456055
    10. '#' → logprob: -6.222089767456055

Token 19: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04830275475978851
    2. '<|end|>' → logprob: -3.92330265045166
    3. '    
' → logprob: -4.04830265045166
    4. ')' → logprob: -6.04830265045166
    5. '\n' → logprob: -6.29830265045166
    6. '\' → logprob: -6.42330265045166
    7. '```' → logprob: -6.79830265045166
    8. ':' → logprob: -7.17330265045166
    9. '#' → logprob: -7.29830265045166
    10. '<|end|>' → logprob: -8.54830265045166

Token 20: ' max' (ID: 2999)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07393369823694229
    2. ' ' → logprob: -3.3239336013793945
    3. '    ' → logprob: -4.4489336013793945
    4. ')' → logprob: -5.1989336013793945
    5. '<|end|>' → logprob: -5.5739336013793945
    6. 'print' → logprob: -5.9489336013793945
    7. 'n' → logprob: -6.3239336013793945
    8. '[' → logprob: -6.6989336013793945
    9. '    
' → logprob: -6.6989336013793945
    10. '#' → logprob: -6.8239336013793945

Token 21: '_volume' (ID: 64366)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.026385407894849777
    2. '_sum' → logprob: -4.401385307312012
    3. '_val' → logprob: -5.526385307312012
    4. '(' → logprob: -6.151385307312012
    5. '_len' → logprob: -6.401385307312012
    6. '_length' → logprob: -6.526385307312012
    7. '_value' → logprob: -6.776385307312012
    8. '_num' → logprob: -7.026385307312012
    9. '_area' → logprob: -8.151385307312012
    10. '_score' → logprob: -8.276385307312012

Token 22: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14714929461479187
    2. '=' → logprob: -2.5221493244171143
    3. '_' → logprob: -2.8971493244171143
    4. ' ' → logprob: -7.272149085998535
    5. 's' → logprob: -8.772149085998535
    6. '_volume' → logprob: -9.022149085998535
    7. ',' → logprob: -9.147149085998535
    8. '_space' → logprob: -9.397149085998535
    9. ' _' → logprob: -9.897149085998535
    10. '_=' → logprob: -10.397149085998535

Token 23: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.35015323758125305
    2. '0' → logprob: -1.3501532077789307
    3. ' -' → logprob: -3.6001532077789307
    4. ' float' → logprob: -5.47515344619751
    5. '-' → logprob: -6.22515344619751
    6. ' max' → logprob: -7.47515344619751
    7. '1' → logprob: -7.72515344619751
    8. ' N' → logprob: -7.97515344619751
    9. 'float' → logprob: -8.100152969360352
    10. ' None' → logprob: -8.225152969360352

Token 24: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6241716146469116
    2. ' ' → logprob: -0.8741716146469116
    3. ' -' → logprob: -3.999171733856201
    4. '-' → logprob: -4.374171733856201
    5. ' float' → logprob: -4.749171733856201
    6. '   ' → logprob: -5.999171733856201
    7. 'float' → logprob: -6.374171733856201
    8. '1' → logprob: -7.124171733856201
    9. ' N' → logprob: -7.499171733856201
    10. ' max' → logprob: -7.749171733856201

Token 25: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 26: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6253089308738708
    2. '<|end|>' → logprob: -0.8753089308738708
    3. ' ' → logprob: -4.125308990478516
    4. '    
' → logprob: -4.625308990478516
    5. '    ' → logprob: -5.375308990478516
    6. '  ' → logprob: -5.375308990478516
    7. '
' → logprob: -5.875308990478516
    8. '<|end|>' → logprob: -6.125308990478516
    9. ' 
' → logprob: -6.500308990478516
    10. '\' → logprob: -6.625308990478516

Token 27: ' for' (ID: 395)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.4149564504623413
    2. 'for' (adapté à ' for') → logprob: -1.5399564504623413
    3. ' for' → logprob: -1.6649564504623413
    4. '   ' → logprob: -2.164956569671631
    5. ' max' → logprob: -3.289956569671631
    6. ' stack' → logprob: -3.289956569671631
    7. ' cubes' → logprob: -3.539956569671631
    8. 'max' → logprob: -3.664956569671631
    9. 'stack' → logprob: -3.789956569671631
    10. ' cube' → logprob: -4.664956569671631

Token 28: ' _' (ID: 1175)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.20734168589115143
    2. ' ' → logprob: -2.0823416709899902
    3. ' _' → logprob: -2.8323416709899902
    4. '_' → logprob: -6.20734167098999
    5. 'i' → logprob: -7.08234167098999
    6. ' cube' → logprob: -8.207342147827148
    7. ' box' → logprob: -9.332342147827148
    8. ' layer' → logprob: -9.332342147827148
    9. ' range' → logprob: -9.332342147827148
    10. '  ' → logprob: -10.207342147827148

Token 29: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.004169221967458725
    2. 'in' → logprob: -5.50416898727417
    3. ' ' → logprob: -9.504169464111328
    4. 'range' → logprob: -12.629169464111328
    5. ' i' → logprob: -12.754169464111328
    6. '  ' → logprob: -13.254169464111328
    7. '```' → logprob: -13.629169464111328
    8. '<|end|>' → logprob: -13.879169464111328
    9. ' ,' → logprob: -14.254169464111328
    10. ',' → logprob: -14.254169464111328

Token 30: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.3868769407272339
    2. 'range' → logprob: -1.1368769407272339
    3. '	range' → logprob: -13.386877059936523
    4. '(range' → logprob: -13.636877059936523
    5. ' ' → logprob: -14.136877059936523
    6. 'rang' → logprob: -14.511877059936523
    7. 'r' → logprob: -14.886877059936523
    8. '_range' → logprob: -15.261877059936523
    9. '```' → logprob: -15.636877059936523
    10. '_' → logprob: -15.636877059936523

Token 31: '(N' (ID: 10564)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2661130130290985
    2. '(N' → logprob: -1.516113042831421
    3. ' N' → logprob: -4.891112804412842
    4. ' (' → logprob: -5.141112804412842
    5. '(n' → logprob: -7.891112804412842
    6. ' ' → logprob: -9.14111328125
    7. '()' → logprob: -9.64111328125
    8. 'N' → logprob: -9.64111328125
    9. '(int' → logprob: -9.89111328125
    10. '(range' → logprob: -12.01611328125

Token 32: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.007221703417599201
    2. ' ):' → logprob: -5.382221698760986
    3. ')' → logprob: -6.882221698760986
    4. '   ' → logprob: -7.257221698760986
    5. ':' → logprob: -7.632221698760986
    6. ',' → logprob: -8.382222175598145
    7. '):
' → logprob: -9.757222175598145
    8. '+' → logprob: -11.132222175598145
    9. ' )' → logprob: -11.382222175598145
    10. ' :' → logprob: -11.882222175598145

Token 33: '       ' (ID: 309)
  Prédit: '    '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '    ' → logprob: -0.5823636054992676
    2. ' ' → logprob: -1.0823636054992676
    3. '       ' → logprob: -2.7073636054992676
    4. '<|end|>' → logprob: -3.8323636054992676
    5. '   ' → logprob: -4.957363605499268
    6. '        ' → logprob: -5.707363605499268
    7. ' 
' → logprob: -6.582363605499268
    8. '    
' → logprob: -7.332363605499268
    9. '     ' → logprob: -7.582363605499268
    10. '     
' → logprob: -8.08236312866211

Token 34: ' data' (ID: 1238)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.25346100330352783
    2. ' s' → logprob: -2.2534608840942383
    3. '    ' → logprob: -3.2534608840942383
    4. ' h' → logprob: -4.628460884094238
    5. ' volume' → logprob: -4.628460884094238
    6. ' 
' → logprob: -4.753460884094238
    7. ' x' → logprob: -4.753460884094238
    8. 'v' → logprob: -5.003460884094238
    9. ' radius' → logprob: -5.128460884094238
    10. ' v' → logprob: -5.253460884094238

Token 35: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.026703838258981705
    2. '=' → logprob: -3.6517038345336914
    3. '   ' → logprob: -8.526703834533691
    4. ',' → logprob: -10.026703834533691
    5. '[' → logprob: -10.401703834533691
    6. ' ' → logprob: -10.651703834533691
    7. '    ' → logprob: -11.026703834533691
    8. '_line' → logprob: -11.151703834533691
    9. '_' → logprob: -11.401703834533691
    10. 's' → logprob: -11.526703834533691

Token 36: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.6060472130775452
    2. ' input' → logprob: -0.8560472130775452
    3. 'list' → logprob: -4.2310471534729
    4. 'input' → logprob: -4.2310471534729
    5. ' tuple' → logprob: -8.481047630310059
    6. ' [' → logprob: -8.981047630310059
    7. '[' → logprob: -9.856047630310059
    8. ' ' → logprob: -9.981047630310059
    9. ' int' → logprob: -10.106047630310059
    10. '[input' → logprob: -10.106047630310059

Token 37: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.05366496369242668
    2. '(' → logprob: -3.0536649227142334
    3. '(input' → logprob: -5.5536651611328125
    4. '(int' → logprob: -6.8036651611328125
    5. '()' → logprob: -9.678665161132812
    6. 'map' → logprob: -12.678665161132812
    7. '(range' → logprob: -12.803665161132812
    8. '(eval' → logprob: -13.178665161132812
    9. ' map' → logprob: -13.303665161132812
    10. '(
' → logprob: -13.303665161132812

Token 38: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0009159822366200387
    2. '(' → logprob: -7.250916004180908
    3. '(lambda' → logprob: -9.62591552734375
    4. '<|end|>' → logprob: -9.75091552734375
    5. '(input' → logprob: -10.25091552734375
    6. ')' → logprob: -11.75091552734375
    7. '<int' → logprob: -11.75091552734375
    8. '[int' → logprob: -12.00091552734375
    9. 'int' → logprob: -12.12591552734375
    10. '(str' → logprob: -12.25091552734375

Token 39: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0020755522418767214
    2. '(' → logprob: -6.627075672149658
    3. ',input' → logprob: -7.252075672149658
    4. 'input' → logprob: -10.5020751953125
    5. ',' → logprob: -12.2520751953125
    6. ')' → logprob: -13.2520751953125
    7. ' input' → logprob: -13.5020751953125
    8. ' (' → logprob: -13.5020751953125
    9. '=input' → logprob: -13.8770751953125
    10. '(
' → logprob: -14.2520751953125

Token 40: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.16023437678813934
    2. ' input' → logprob: -1.9102343320846558
    3. '(input' → logprob: -12.660234451293945
    4. ',input' → logprob: -12.910234451293945
    5. ')' → logprob: -13.035234451293945
    6. '=input' → logprob: -14.160234451293945
    7. '	input' → logprob: -14.160234451293945
    8. '<input' → logprob: -14.785234451293945
    9. '[input' → logprob: -15.535234451293945
    10. '))' → logprob: -15.785234451293945

Token 41: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -2.570319702499546e-05
    2. '()' → logprob: -10.625025749206543
    3. '()))' → logprob: -14.125025749206543
    4. ' ().' → logprob: -15.000025749206543
    5. '(' → logprob: -16.000024795532227
    6. '()
' → logprob: -16.125024795532227
    7. '()));' → logprob: -16.750024795532227
    8. '())' → logprob: -16.875024795532227
    9. '())))' → logprob: -17.750024795532227
    10. '   ' → logprob: -18.875024795532227

Token 42: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.004124588333070278
    2. 'strip' → logprob: -5.504124641418457
    3. 'rstrip' → logprob: -10.004124641418457
    4. ' split' → logprob: -14.004124641418457
    5. '(split' → logprob: -15.879124641418457
    6. 'spl' → logprob: -17.25412368774414
    7. 'read' → logprob: -17.87912368774414
    8. ')' → logprob: -18.00412368774414
    9. 's' → logprob: -18.37912368774414
    10. ' strip' → logprob: -19.12912368774414

Token 43: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.010142877697944641
    2. '()' → logprob: -5.010142803192139
    3. '())' → logprob: -6.385142803192139
    4. '()))
' → logprob: -7.135142803192139
    5. '))' → logprob: -7.260142803192139
    6. '(' → logprob: -8.510143280029297
    7. '()))

' → logprob: -11.635143280029297
    8. '())))' → logprob: -11.760143280029297
    9. '()));' → logprob: -12.635143280029297
    10. '()))
' → logprob: -12.760143280029297

Token 44: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7307853102684021
    2. '       ' → logprob: -1.7307853698730469
    3. ' ' → logprob: -1.9807853698730469
    4. '    ' → logprob: -2.730785369873047
    5. '<|end|>' → logprob: -3.105785369873047
    6. ')' → logprob: -3.480785369873047
    7. '[' → logprob: -3.730785369873047
    8. '    
' → logprob: -4.480785369873047
    9. '        ' → logprob: -5.105785369873047
    10. '        
' → logprob: -5.355785369873047

Token 45: ' d' (ID: 272)
  Prédit: ' length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' length' → logprob: -0.8532026410102844
    2. ' cube' → logprob: -2.2282025814056396
    3. 'length' → logprob: -2.3532025814056396
    4. '    ' → logprob: -2.6032025814056396
    5. '   ' → logprob: -2.8532025814056396
    6. '       ' → logprob: -3.3532025814056396
    7. '[' → logprob: -3.3532025814056396
    8. ' if' → logprob: -3.3532025814056396
    9. ' ' → logprob: -3.6032025814056396
    10. '        ' → logprob: -4.853202819824219

Token 46: ',' (ID: 11)
  Prédit: 'iameter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iameter' → logprob: -0.7859469652175903
    2. ' =' → logprob: -0.9109469652175903
    3. 'iam' → logprob: -3.035946846008301
    4. '[' → logprob: -4.035946846008301
    5. '=' → logprob: -4.035946846008301
    6. '1' → logprob: -4.285946846008301
    7. ',' → logprob: -4.535946846008301
    8. 'ims' → logprob: -4.660946846008301
    9. 'ia' → logprob: -5.410946846008301
    10. 'ata' → logprob: -5.410946846008301

Token 47: ' t' (ID: 260)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.23379680514335632
    2. ' h' → logprob: -2.2337968349456787
    3. 'r' → logprob: -3.4837968349456787
    4. 'l' → logprob: -3.7337968349456787
    5. ' r' → logprob: -4.4837965965271
    6. ' l' → logprob: -4.8587965965271
    7. 'w' → logprob: -5.3587965965271
    8. ' w' → logprob: -5.7337965965271
    9. 'x' → logprob: -6.2337965965271
    10. 'a' → logprob: -6.3587965965271

Token 48: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.19928601384162903
    2. ',' → logprob: -2.0742859840393066
    3. '=' → logprob: -2.9492859840393066
    4. ' ,' → logprob: -6.449285984039307
    5. ' ' → logprob: -7.074285984039307
    6. '1' → logprob: -10.074286460876465
    7. 'otal' → logprob: -10.449286460876465
    8. ')' → logprob: -10.574286460876465
    9. 'imes' → logprob: -10.574286460876465
    10. 'okens' → logprob: -10.949286460876465

Token 49: ' data' (ID: 1238)
  Prédit: ' data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' data' → logprob: -0.048595886677503586
    2. 'data' → logprob: -3.048595905303955
    3. ' ' → logprob: -12.173595428466797
    4. ' dat' → logprob: -12.923595428466797
    5. 'dat' → logprob: -15.798595428466797
    6. '	data' → logprob: -15.798595428466797
    7. ')data' → logprob: -16.173595428466797
    8. '(data' → logprob: -16.423595428466797
    9. '=data' → logprob: -16.423595428466797
    10. 'd' → logprob: -16.548595428466797

Token 50: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.03651595488190651
    2. ' =' → logprob: -4.036516189575195
    3. ',' → logprob: -4.536516189575195
    4. '=' → logprob: -5.661516189575195
    5. '[:]' → logprob: -6.411516189575195
    6. ' ' → logprob: -7.036516189575195
    7. '[:' → logprob: -7.536516189575195
    8. ']' → logprob: -9.036516189575195
    9. '[]' → logprob: -9.036516189575195
    10. '    ' → logprob: -9.036516189575195

Token 51: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00371979596093297
    2. ' ' → logprob: -5.628719806671143
    3. '1' → logprob: -10.253719329833984
    4. ':' → logprob: -10.628719329833984
    5. ']' → logprob: -10.878719329833984
    6. ' :' → logprob: -11.253719329833984
    7. ')' → logprob: -11.253719329833984
    8. '2' → logprob: -12.753719329833984
    9. ' ]' → logprob: -13.003719329833984
    10. ':]' → logprob: -13.253719329833984

Token 52: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.052379656583070755
    2. ']' → logprob: -3.677379608154297
    3. ',' → logprob: -3.802379608154297
    4. ' ],' → logprob: -6.302379608154297
    5. ':' → logprob: -7.802379608154297
    6. '-' → logprob: -8.052379608154297
    7. ' ' → logprob: -8.427379608154297
    8. '+' → logprob: -8.552379608154297
    9. ':],' → logprob: -9.177379608154297
    10. '),' → logprob: -9.177379608154297

Token 53: ' data' (ID: 1238)
  Prédit: ' data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' data' → logprob: -0.055387578904628754
    2. 'data' → logprob: -2.930387496948242
    3. ' ' → logprob: -7.680387496948242
    4. '1' → logprob: -10.180387496948242
    5. '2' → logprob: -13.680387496948242
    6. '	data' → logprob: -14.055387496948242
    7. ' d' → logprob: -14.930387496948242
    8. 'd' → logprob: -15.180387496948242
    9. '  ' → logprob: -15.305387496948242
    10. ')data' → logprob: -15.305387496948242

Token 54: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -7.941850526549388e-06
    2. '1' → logprob: -12.125007629394531
    3. '[-' → logprob: -13.375007629394531
    4. ' [' → logprob: -14.750007629394531
    5. '[
' → logprob: -15.375007629394531
    6. '```' → logprob: -15.750007629394531
    7. '\[' → logprob: -17.25000762939453
    8. ' ' → logprob: -17.25000762939453
    9. '][' → logprob: -17.50000762939453
    10. '[...]' → logprob: -17.62500762939453

Token 55: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00026300468016415834
    2. ' ' → logprob: -9.250263214111328
    3. '-' → logprob: -9.375263214111328
    4. ']' → logprob: -10.500263214111328
    5. '2' → logprob: -10.625263214111328
    6. '0' → logprob: -11.000263214111328
    7. '])' → logprob: -12.000263214111328
    8. '3' → logprob: -13.500263214111328
    9. ' -' → logprob: -14.062763214111328
    10. '4' → logprob: -14.437763214111328

Token 56: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.005869539920240641
    2. ')' → logprob: -5.505869388580322
    3. ' ]' → logprob: -6.630869388580322
    4. '<|end|>' → logprob: -8.25586986541748
    5. ')]' → logprob: -9.38086986541748
    6. '])' → logprob: -10.25586986541748
    7. ']
' → logprob: -10.50586986541748
    8. '<|end|>' → logprob: -11.50586986541748
    9. '       ' → logprob: -11.75586986541748
    10. ' )' → logprob: -11.88086986541748

Token 57: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 58: ' volumes' (ID: 38028)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.9387378096580505
    2. ' v' → logprob: -1.1887378692626953
    3. ' volume' → logprob: -2.9387378692626953
    4. ' l' → logprob: -3.4387378692626953
    5. ' h' → logprob: -3.4387378692626953
    6. 'h' → logprob: -3.5637378692626953
    7. 'l' → logprob: -3.6887378692626953
    8. 'r' → logprob: -4.313737869262695
    9. 'volume' → logprob: -4.313737869262695
    10. ' r' → logprob: -4.438737869262695

Token 59: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.016590377315878868
    2. '=' → logprob: -4.141590595245361
    3. '.append' → logprob: -8.641590118408203
    4. '<|end|>' → logprob: -8.766590118408203
    5. '[' → logprob: -9.891590118408203
    6. ' ' → logprob: -10.141590118408203
    7. ' +=' → logprob: -10.391590118408203
    8. '<|end|>' → logprob: -10.766590118408203
    9. '.' → logprob: -11.141590118408203
    10. '=[]' → logprob: -11.266590118408203

Token 60: ' data' (ID: 1238)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.051497556269168854
    2. '[d' → logprob: -3.926497459411621
    3. ' d' → logprob: -4.301497459411621
    4. ' []' → logprob: -4.926497459411621
    5. '[' → logprob: -5.676497459411621
    6. '[data' → logprob: -5.926497459411621
    7. '[]' → logprob: -7.051497459411621
    8. '[t' → logprob: -7.551497459411621
    9. 'd' → logprob: -7.676497459411621
    10. ' data' → logprob: -7.801497459411621

Token 61: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.787507714354433e-05
    2. '2' → logprob: -10.00004768371582
    3. '3' → logprob: -14.50004768371582
    4. ' [' → logprob: -14.62504768371582
    5. '[-' → logprob: -15.12504768371582
    6. '```' → logprob: -15.12504768371582
    7. '   ' → logprob: -15.25004768371582
    8. '[
' → logprob: -15.50004768371582
    9. ' ' → logprob: -16.37504768371582
    10. '4' → logprob: -16.75004768371582

Token 62: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.718606891809031e-05
    2. ' ' → logprob: -9.875066757202148
    3. '   ' → logprob: -12.250066757202148
    4. ':' → logprob: -12.375066757202148
    5. ']' → logprob: -13.625066757202148
    6. '```' → logprob: -13.875066757202148
    7. '[' → logprob: -14.125066757202148
    8. '>' → logprob: -14.750066757202148
    9. '3' → logprob: -14.750066757202148
    10. '  ' → logprob: -14.875066757202148

Token 63: ':]
' (ID: 61598)
  Prédit: ':]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':]' → logprob: -0.00862887967377901
    2. ':' → logprob: -4.758628845214844
    3. ':],' → logprob: -11.883628845214844
    4. ']' → logprob: -12.758628845214844
    5. ' :]' → logprob: -13.133628845214844
    6. ':].' → logprob: -14.383628845214844
    7. ':]

' → logprob: -14.758628845214844
    8. '::' → logprob: -14.883628845214844
    9. ':-' → logprob: -14.883628845214844
    10. ':]
' → logprob: -15.758628845214844

Token 64: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3738870918750763
    2. '       ' → logprob: -1.748887062072754
    3. '   ' → logprob: -2.373887062072754
    4. '        
' → logprob: -4.373887062072754
    5. '<|end|>' → logprob: -4.498887062072754
    6. '    
' → logprob: -4.623887062072754
    7. ' 
' → logprob: -5.498887062072754
    8. ' for' → logprob: -6.123887062072754
    9. '  
' → logprob: -6.623887062072754
    10. ' if' → logprob: -7.248887062072754

Token 65: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0962371826171875
    2. '
' → logprob: -2.3462371826171875
    3. ' if' → logprob: -2.3462371826171875
    4. 'max' → logprob: -2.3462371826171875
    5. ' 
' → logprob: -2.4712371826171875
    6. ' for' → logprob: -2.5962371826171875
    7. ' max' → logprob: -2.8462371826171875
    8. 'for' (adapté à ' for') → logprob: -3.2212371826171875
    9. '    
' → logprob: -3.3462371826171875
    10. '       ' → logprob: -4.0962371826171875

Token 66: ' v' (ID: 323)
  Prédit: ' v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.32090306282043457
    2. ' i' → logprob: -1.4459030628204346
    3. ' j' → logprob: -4.1959028244018555
    4. ' ' → logprob: -4.3209028244018555
    5. ' _' → logprob: -5.6959028244018555
    6. 'v' → logprob: -5.8209028244018555
    7. ' t' → logprob: -6.5709028244018555
    8. ' volume' → logprob: -6.5709028244018555
    9. ' vol' → logprob: -7.0709028244018555
    10. 'i' → logprob: -8.445902824401855

Token 67: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.014399255625903606
    2. 'in' → logprob: -4.88939905166626
    3. ' ' → logprob: -5.01439905166626
    4. ',' → logprob: -10.014399528503418
    5. '_in' → logprob: -10.889399528503418
    6. 'v' → logprob: -11.139399528503418
    7. ' ,' → logprob: -11.514399528503418
    8. '_' → logprob: -11.764399528503418
    9. '	in' → logprob: -11.764399528503418
    10. '  ' → logprob: -12.389399528503418

Token 68: ' volumes' (ID: 38028)
  Prédit: 'vol'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vol' → logprob: -0.038055259734392166
    2. ' volumes' → logprob: -3.288055181503296
    3. 'v' → logprob: -12.538055419921875
    4. 'volume' → logprob: -12.913055419921875
    5. ' vol' → logprob: -13.538055419921875
    6. 'range' → logprob: -13.538055419921875
    7. ' vols' → logprob: -13.663055419921875
    8. 'vel' → logprob: -14.288055419921875
    9. 'volt' → logprob: -14.288055419921875
    10. 'Volumes' → logprob: -14.288055419921875

Token 69: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0001987722353078425
    2. ' :' → logprob: -9.375198364257812
    3. '>' → logprob: -10.250198364257812
    4. ':
' → logprob: -10.375198364257812
    5. '           ' → logprob: -11.000198364257812
    6. '=' → logprob: -12.000198364257812
    7. '):' → logprob: -12.375198364257812
    8. '       ' → logprob: -12.875198364257812
    9. '   ' → logprob: -12.875198364257812
    10. ',' → logprob: -13.375198364257812

Token 70: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2831297814846039
    2. '<|end|>' → logprob: -2.1581296920776367
    3. '       ' → logprob: -2.2831296920776367
    4. ' ' → logprob: -4.658129692077637
    5. ' if' → logprob: -5.158129692077637
    6. '<|end|>' → logprob: -5.283129692077637
    7. '   ' → logprob: -6.158129692077637
    8. '               ' → logprob: -7.033129692077637
    9. '        ' → logprob: -7.033129692077637
    10. ':' → logprob: -7.158129692077637

Token 71: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6579185724258423
    2. ' max' → logprob: -1.2829185724258423
    3. ' ' → logprob: -1.7829185724258423
    4. 'max' → logprob: -4.157918453216553
    5. '            ' → logprob: -5.157918453216553
    6. '           ' → logprob: -5.157918453216553
    7. 'if' (adapté à ' if') → logprob: -5.532918453216553
    8. ' 
' → logprob: -5.532918453216553
    9. '               ' → logprob: -7.907918453216553
    10. '    ' → logprob: -9.157918930053711

Token 72: ' v' (ID: 323)
  Prédit: ' v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.005929863080382347
    2. 'v' → logprob: -5.130929946899414
    3. ' max' → logprob: -14.630929946899414
    4. ' ' → logprob: -14.880929946899414
    5. 'max' → logprob: -16.005929946899414
    6. '    ' → logprob: -16.130929946899414
    7. ' ' → logprob: -16.255929946899414
    8. '	v' → logprob: -16.755929946899414
    9. '            ' → logprob: -17.005929946899414
    10. ' vmax' → logprob: -17.130929946899414

Token 73: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.014208877459168434
    2. '>' → logprob: -4.264208793640137
    3. ' ' → logprob: -10.139208793640137
    4. '<|end|>' → logprob: -12.889208793640137
    5. '   ' → logprob: -14.014208793640137
    6. ' ' → logprob: -14.889208793640137
    7. ' greater' → logprob: -15.014208793640137
    8. '  ' → logprob: -15.139208793640137
    9. '    ' → logprob: -15.514208793640137
    10. ' >=' → logprob: -15.764208793640137

Token 74: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.029753616079688072
    2. 'max' → logprob: -3.5297536849975586
    3. ' ' → logprob: -12.904753684997559
    4. '	max' → logprob: -15.154753684997559
    5. '0' → logprob: -15.779753684997559
    6. '(max' → logprob: -16.779752731323242
    7. '=max' → logprob: -16.904752731323242
    8. '  ' → logprob: -17.529752731323242
    9. '_max' → logprob: -17.904752731323242
    10. 'v' → logprob: -18.154752731323242

Token 75: '_volume' (ID: 64366)
  Prédit: '_volume'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_volume' → logprob: -0.00012594614236149937
    2. '_' → logprob: -9.000125885009766
    3. ' _' → logprob: -13.625125885009766
    4. '_vol' → logprob: -13.875125885009766
    5. '_voltage' → logprob: -16.250125885009766
    6. '_v' → logprob: -16.875125885009766
    7. '_vo' → logprob: -17.000125885009766
    8. '_value' → logprob: -17.250125885009766
    9. '_velocity' → logprob: -17.375125885009766
    10. '_VOLUME' → logprob: -18.000125885009766

Token 76: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0005647073267027736
    2. ' :' → logprob: -7.7505645751953125
    3. ':
' → logprob: -9.125564575195312
    4. '           ' → logprob: -11.875564575195312
    5. '):' → logprob: -12.125564575195312
    6. '<|end|>' → logprob: -12.625564575195312
    7. '=' → logprob: -13.000564575195312
    8. ' and' → logprob: -13.000564575195312
    9. ':max' → logprob: -14.500564575195312
    10. '               ' → logprob: -14.500564575195312

Token 77: '               ' (ID: 506)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.20850488543510437
    2. '               ' → logprob: -1.8335049152374268
    3. 'max' → logprob: -3.7085049152374268
    4. '<|end|>' → logprob: -6.708504676818848
    5. ' ' → logprob: -6.958504676818848
    6. '           ' → logprob: -8.208504676818848
    7. '                ' → logprob: -8.208504676818848
    8. '(max' → logprob: -8.208504676818848
    9. '                
' → logprob: -8.833504676818848
    10. ' 
' → logprob: -8.958504676818848

Token 78: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.003398363711312413
    2. 'max' (adapté à ' max') → logprob: -5.753398418426514
    3. '                ' → logprob: -8.628397941589355
    4. ' ' → logprob: -11.128397941589355
    5. '               ' → logprob: -11.378397941589355
    6. '                   ' → logprob: -11.503397941589355
    7. ' v' → logprob: -13.753397941589355
    8. 'v' → logprob: -13.878397941589355
    9. '_max' → logprob: -14.003397941589355
    10. ' ' → logprob: -14.503397941589355

Token 79: '_volume' (ID: 64366)
  Prédit: '_volume'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_volume' → logprob: -2.248469718324486e-05
    2. '_' → logprob: -10.750022888183594
    3. ' _' → logprob: -14.625022888183594
    4. '_vol' → logprob: -15.500022888183594
    5. '_voltage' → logprob: -16.500022888183594
    6. '_value' → logprob: -16.750022888183594
    7. '_space' → logprob: -17.125022888183594
    8. '_velocity' → logprob: -17.625022888183594
    9. '_v' → logprob: -17.625022888183594
    10. '_VOLUME' → logprob: -17.750022888183594

Token 80: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.00671809446066618
    2. '=' → logprob: -5.006718158721924
    3. '=v' → logprob: -13.006717681884766
    4. ' ' → logprob: -14.506717681884766
    5. ' v' → logprob: -17.256717681884766
    6. ' +=' → logprob: -18.881717681884766
    7. 'v' → logprob: -19.256717681884766
    8. ' =
' → logprob: -20.006717681884766
    9. '＝' → logprob: -20.256717681884766
    10. ',' → logprob: -21.131717681884766

Token 81: ' v' (ID: 323)
  Prédit: ' v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.01814994215965271
    2. 'v' → logprob: -4.0181498527526855
    3. '	v' → logprob: -19.893150329589844
    4. ' ' → logprob: -20.768150329589844
    5. '_v' → logprob: -21.518150329589844
    6. ' ' → logprob: -21.643150329589844
    7. '=v' → logprob: -21.643150329589844
    8. ')v' → logprob: -22.768150329589844
    9. '<v' → logprob: -22.893150329589844
    10. ',v' → logprob: -22.893150329589844

Token 82: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.23281066119670868
    2. '   ' → logprob: -1.982810616493225
    3. 'print' → logprob: -2.8578107357025146
    4. '<|end|>' → logprob: -4.7328104972839355
    5. '    
' → logprob: -6.1078104972839355
    6. ' print' → logprob: -7.6078104972839355
    7. '\n' → logprob: -7.9828104972839355
    8. '  
' → logprob: -8.232810974121094
    9. '```' → logprob: -9.482810974121094
    10. '<|end|>' → logprob: -9.607810974121094

Token 83: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.16386108100414276
    2. '   ' → logprob: -1.9138610363006592
    3. ' print' → logprob: -6.413861274719238
    4. '<|end|>' → logprob: -7.038861274719238
    5. '
' → logprob: -7.163861274719238
    6. '```' → logprob: -9.038861274719238
    7. '    
' → logprob: -9.913861274719238
    8. ')' → logprob: -10.163861274719238
    9. '       ' → logprob: -10.663861274719238
    10. '\n' → logprob: -11.038861274719238

Token 84: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.002272773766890168
    2. '   ' → logprob: -6.252272605895996
    3. ' print' → logprob: -8.002272605895996
    4. '```' → logprob: -12.377272605895996
    5. '    
' → logprob: -13.752272605895996
    6. '
' → logprob: -13.752272605895996
    7. '#print' → logprob: -14.502272605895996
    8. '       ' → logprob: -14.627272605895996
    9. '<|end|>' → logprob: -15.502272605895996
    10. '	print' → logprob: -15.502272605895996

Token 85: '(max' (ID: 17178)
  Prédit: '(max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(max' → logprob: -0.4747994542121887
    2. '(' → logprob: -0.9747994542121887
    3. '(f' → logprob: -7.724799633026123
    4. '('' → logprob: -8.724799156188965
    5. '("' → logprob: -9.599799156188965
    6. ' (' → logprob: -10.724799156188965
    7. '()' → logprob: -11.349799156188965
    8. '("("' → logprob: -12.099799156188965
    9. 'max' → logprob: -12.349799156188965
    10. '((' → logprob: -13.599799156188965

Token 86: '_volume' (ID: 64366)
  Prédit: '_volume'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_volume' → logprob: -0.0005031120381318033
    2. '_' → logprob: -7.750503063201904
    3. '_vol' → logprob: -10.125503540039062
    4. ' _' → logprob: -10.875503540039062
    5. '_space' → logprob: -12.250503540039062
    6. '_v' → logprob: -12.500503540039062
    7. ')_' → logprob: -13.125503540039062
    8. '_voltage' → logprob: -14.375503540039062
    9. '_vo' → logprob: -14.875503540039062
    10. '_size' → logprob: -14.875503540039062

Token 87: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.8624639324116288e-06
    2. ' )' → logprob: -13.500001907348633
    3. ')
' → logprob: -15.000001907348633
    4. '))' → logprob: -17.000001907348633
    5. ')`' → logprob: -17.875001907348633
    6. '')' → logprob: -18.125001907348633
    7. '`)' → logprob: -18.750001907348633
    8. '(' → logprob: -19.250001907348633
    9. '")' → logprob: -20.000001907348633
    10. '   ' → logprob: -20.250001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 85
Tokens correctement prédits (1ère position, stricte): 48
Tokens correctement prédits (1ère position, avec adaptation): 49
Tokens correctement prédits (top 10): 74
Précision stricte (1ère position): 56.47%
Précision adaptée (1ère position): 57.65%
Précision (top 10): 87.06%
================================================================================
