================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:09:08
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
sys.setrecursionlimit(10**7)

N = int(sys.stdin.readline())
a, d = map(int, sys.stdin.readline().split())
M = int(sys.stdin.readline())

pos = list(range(N+1))  # pos[i] = position in original arithmetic sequence of element i
for _ in range(M):
    x, y, z = map(int, sys.stdin.readline().split())
    if x == 0:
        pos[y], pos[z] = pos[z], pos[y]
    else:
        pos[y] = pos[z]

K = int(sys.stdin.readline())
idx = pos[K]
print(a + (idx - 1) * d)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'sys' (ID: 17324)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.20001201331615448
    2. '.' → logprob: -2.450011968612671
    3. '<|end|>' → logprob: -2.825011968612671
    4. '\' → logprob: -4.70001220703125
    5. 'newline' → logprob: -5.07501220703125
    6. 'import' → logprob: -5.07501220703125
    7. '' → logprob: -5.82501220703125
    8. '
' → logprob: -5.82501220703125
    9. '<|end|>' → logprob: -5.82501220703125
    10. '\r' → logprob: -6.32501220703125

Token 4: '.set' (ID: 1230)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -9.078839502763003e-05
    2. '[' → logprob: -11.250090599060059
    3. '.import' → logprob: -11.625090599060059
    4. '.readline' → logprob: -11.750090599060059
    5. '```' → logprob: -11.750090599060059
    6. ' .' → logprob: -12.000090599060059
    7. '.
' → logprob: -12.500090599060059
    8. '.`' → logprob: -12.625090599060059
    9. '`.' → logprob: -12.875090599060059
    10. '.user' → logprob: -12.875090599060059

Token 5: 'rec' (ID: 9285)
  Prédit: 'trace'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'trace' → logprob: -0.7549012303352356
    2. 's' → logprob: -1.1299011707305908
    3. 't' → logprob: -3.004901170730591
    4. 'sys' → logprob: -3.254901170730591
    5. 'set' → logprob: -3.629901170730591
    6. 'soft' → logprob: -4.00490140914917
    7. 'default' → logprob: -4.25490140914917
    8. '_' → logprob: -5.00490140914917
    9. 'ex' → logprob: -5.00490140914917
    10. 'suffix' → logprob: -5.12990140914917

Token 6: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.003742952598258853
    2. 'ursive' → logprob: -6.3787431716918945
    3. 'limit' → logprob: -7.0037431716918945
    4. 'ur' → logprob: -7.5037431716918945
    5. 'urse' → logprob: -9.253743171691895
    6. '_limit' → logprob: -9.628743171691895
    7. 'urs' → logprob: -9.628743171691895
    8. 'ut' → logprob: -9.753743171691895
    9. 'u' → logprob: -10.003743171691895
    10. 't' → logprob: -10.128743171691895

Token 7: 'limit' (ID: 19698)
  Prédit: '_limit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_limit' → logprob: -0.48665714263916016
    2. 'limit' → logprob: -0.9866571426391602
    3. '_depth' → logprob: -4.48665714263916
    4. 'depth' → logprob: -7.48665714263916
    5. '_' → logprob: -8.36165714263916
    6. '_rate' → logprob: -9.98665714263916
    7. 'lim' → logprob: -10.23665714263916
    8. '(' → logprob: -10.36165714263916
    9. '_factor' → logprob: -10.48665714263916
    10. '_stack' → logprob: -10.61165714263916

Token 8: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -8.494741632603109e-05
    2. '(
' → logprob: -10.25008487701416
    3. ' (' → logprob: -11.12508487701416
    4. '40' → logprob: -11.62508487701416
    5. '(

' → logprob: -12.25008487701416
    6. '```' → logprob: -12.50008487701416
    7. '((' → logprob: -12.62508487701416
    8. '(.' → logprob: -12.75008487701416
    9. '('' → logprob: -12.87508487701416
    10. '("("' → logprob: -13.12508487701416

Token 9: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.6965333223342896
    2. '100' → logprob: -0.6965333223342896
    3. ' ' → logprob: -5.821533203125
    4. '300' → logprob: -8.696533203125
    5. '500' → logprob: -8.696533203125
    6. '1' → logprob: -10.571533203125
    7. '250' → logprob: -10.696533203125
    8. '999' → logprob: -11.196533203125
    9. '  ' → logprob: -12.196533203125
    10. '200' → logprob: -12.321533203125

Token 10: '**' (ID: 410)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005634739995002747
    2. '00' → logprob: -6.005634784698486
    3. '000' → logprob: -6.005634784698486
    4. '4' → logprob: -7.505634784698486
    5. '6' → logprob: -9.130634307861328
    6. '5' → logprob: -11.755634307861328
    7. '```' → logprob: -12.255634307861328
    8. ')' → logprob: -12.505634307861328
    9. '3' → logprob: -12.630634307861328
    10. '**' → logprob: -12.630634307861328

Token 11: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.00714417127892375
    2. '9' → logprob: -5.632143974304199
    3. '6' → logprob: -5.757143974304199
    4. '8' → logprob: -7.882143974304199
    5. '```' → logprob: -15.7571439743042
    6. ' ' → logprob: -16.507144927978516
    7. '(' → logprob: -17.132144927978516
    8. '5' → logprob: -17.757144927978516
    9. '``' → logprob: -18.257144927978516
    10. '999' → logprob: -18.382144927978516

Token 12: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.676292231422849e-05
    2. '))' → logprob: -11.375017166137695
    3. ' )' → logprob: -12.250017166137695
    4. ')
' → logprob: -15.875017166137695
    5. ')`' → logprob: -16.000017166137695
    6. ')))' → logprob: -16.625017166137695
    7. '`)' → logprob: -17.000017166137695
    8. ' ' → logprob: -17.750017166137695
    9. '）' → logprob: -17.875017166137695
    10. '),' → logprob: -17.875017166137695

Token 13: 'N' (ID: 45)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.08865281194448471
    2. '\' → logprob: -3.0886528491973877
    3. '```' → logprob: -4.338652610778809
    4. '\n' → logprob: -4.713652610778809
    5. '
' → logprob: -4.838652610778809
    6. '

' → logprob: -5.838652610778809
    7. '#' → logprob: -6.588652610778809
    8. '`' → logprob: -6.838652610778809
    9. 'import' → logprob: -6.963652610778809
    10. ')' → logprob: -7.463652610778809

Token 14: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1756211221218109
    2. ' ' → logprob: -2.1756210327148438
    3. ',' → logprob: -3.8006210327148438
    4. '=' → logprob: -3.8006210327148438
    5. ' ,' → logprob: -6.300621032714844
    6. ')' → logprob: -8.425621032714844
    7. '.' → logprob: -8.550621032714844
    8. '  ' → logprob: -9.175621032714844
    9. '<|end|>' → logprob: -9.175621032714844
    10. ' )' → logprob: -9.300621032714844

Token 15: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.04407632350921631
    2. 'int' → logprob: -3.169076442718506
    3. ' ' → logprob: -7.669076442718506
    4. '10' → logprob: -7.669076442718506
    5. '20' → logprob: -10.044075965881348
    6. '5' → logprob: -10.544075965881348
    7. '0' → logprob: -10.919075965881348
    8. '[int' → logprob: -11.294075965881348
    9. '=int' → logprob: -11.919075965881348
    10. '50' → logprob: -12.044075965881348

Token 16: '(sys' (ID: 41042)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0012042811140418053
    2. '(input' → logprob: -6.876204490661621
    3. '(sys' → logprob: -9.626204490661621
    4. '()' → logprob: -10.376204490661621
    5. '(N' → logprob: -10.501204490661621
    6. '('' → logprob: -11.126204490661621
    7. '(
' → logprob: -11.376204490661621
    8. ' (' → logprob: -12.001204490661621
    9. '(

' → logprob: -13.001204490661621
    10. '(`' → logprob: -13.876204490661621

Token 17: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.1785784363746643
    2. '.' → logprob: -1.9285783767700195
    3. '.readline' → logprob: -4.6785783767700195
    4. '.argv' → logprob: -4.8035783767700195
    5. '.input' → logprob: -7.9285783767700195
    6. '.read' → logprob: -8.67857837677002
    7. '.stdout' → logprob: -9.80357837677002
    8. ' .' → logprob: -10.05357837677002
    9. '.import' → logprob: -10.67857837677002
    10. '.std' → logprob: -11.55357837677002

Token 18: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.005404507741332054
    2. '.read' → logprob: -5.505404472351074
    3. '.' → logprob: -6.630404472351074
    4. '.Read' → logprob: -13.630404472351074
    5. '.READ' → logprob: -13.630404472351074
    6. '.)' → logprob: -14.255404472351074
    7. '.readlines' → logprob: -14.380404472351074
    8. '.stdin' → logprob: -14.755404472351074
    9. '.buffer' → logprob: -14.755404472351074
    10. '.urlopen' → logprob: -15.630404472351074

Token 19: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.009636733680963516
    2. '()' → logprob: -5.009636878967285
    3. ')' → logprob: -5.884636878967285
    4. '().' → logprob: -9.884636878967285
    5. '()))' → logprob: -10.509636878967285
    6. ' ())' → logprob: -10.759636878967285
    7. '()[' → logprob: -11.759636878967285
    8. '(' → logprob: -12.134636878967285
    9. '())
' → logprob: -12.384636878967285
    10. '`)' → logprob: -12.759636878967285

Token 20: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.8437608480453491
    2. 'A' → logprob: -1.3437608480453491
    3. 'data' → logprob: -2.7187609672546387
    4. 'for' → logprob: -2.9687609672546387
    5. 'tree' → logprob: -3.7187609672546387
    6. 'array' → logprob: -3.9687609672546387
    7. 's' → logprob: -4.218760967254639
    8. 'arr' → logprob: -4.218760967254639
    9. ')' → logprob: -4.343760967254639
    10. 'dp' → logprob: -4.468760967254639

Token 21: ',' (ID: 11)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.2080827951431274
    2. ' =' → logprob: -1.2080827951431274
    3. 'rray' → logprob: -2.333082675933838
    4. 'rr' → logprob: -2.458082675933838
    5. 's' → logprob: -2.583082675933838
    6. '=' → logprob: -3.458082675933838
    7. 'r' → logprob: -3.458082675933838
    8. '.' → logprob: -4.208082675933838
    9. '[i' → logprob: -4.208082675933838
    10. '[]' → logprob: -4.333082675933838

Token 22: ' d' (ID: 272)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.030836831778287888
    2. ' b' → logprob: -3.530836820602417
    3. ' =' → logprob: -7.155837059020996
    4. '=' → logprob: -8.655837059020996
    5. ' ' → logprob: -10.405837059020996
    6. 'd' → logprob: -10.905837059020996
    7. '_' → logprob: -11.030837059020996
    8. ',' → logprob: -11.655837059020996
    9. 's' → logprob: -11.655837059020996
    10. ',b' → logprob: -11.655837059020996

Token 23: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6976414918899536
    2. ' =' → logprob: -0.6976414918899536
    3. ',' → logprob: -5.447641372680664
    4. ' ' → logprob: -8.947641372680664
    5. ' ,' → logprob: -10.572641372680664
    6. '_' → logprob: -11.697641372680664
    7. ')' → logprob: -12.572641372680664
    8. '[' → logprob: -13.447641372680664
    9. 'a' → logprob: -13.572641372680664
    10. 'x' → logprob: -13.947641372680664

Token 24: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.17123755812644958
    2. 'map' → logprob: -1.921237587928772
    3. '0' → logprob: -5.296237468719482
    4. ' ' → logprob: -5.671237468719482
    5. ' [' → logprob: -7.046237468719482
    6. '[' → logprob: -7.796237468719482
    7. '1' → logprob: -7.921237468719482
    8. ' list' → logprob: -8.54623794555664
    9. ' sys' → logprob: -9.29623794555664
    10. '10' → logprob: -9.54623794555664

Token 25: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.22382988035678864
    2. '(' → logprob: -1.9738298654556274
    3. '(lambda' → logprob: -2.848829984664917
    4. '(str' → logprob: -5.973829746246338
    5. 'int' → logprob: -8.848830223083496
    6. '(tuple' → logprob: -8.848830223083496
    7. '<|end|>' → logprob: -8.973830223083496
    8. '[int' → logprob: -8.973830223083496
    9. '```' → logprob: -9.223830223083496
    10. '(eval' → logprob: -9.473830223083496

Token 26: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.039201732724905014
    2. '(sys' → logprob: -3.2892017364501953
    3. ' ,' → logprob: -7.164201736450195
    4. '(' → logprob: -8.914201736450195
    5. 'sys' → logprob: -9.039201736450195
    6. '=sys' → logprob: -9.664201736450195
    7. ')' → logprob: -11.164201736450195
    8. '	sys' → logprob: -11.414201736450195
    9. ' sys' → logprob: -11.414201736450195
    10. '(),' → logprob: -11.789201736450195

Token 27: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.03370391204953194
    2. ' sys' → logprob: -3.4087038040161133
    3. '(sys' → logprob: -10.158703804016113
    4. ')' → logprob: -12.033703804016113
    5. '=sys' → logprob: -12.033703804016113
    6. '	sys' → logprob: -12.408703804016113
    7. ' ' → logprob: -13.533703804016113
    8. 'input' → logprob: -13.658703804016113
    9. '.sys' → logprob: -15.033703804016113
    10. '/sys' → logprob: -15.658703804016113

Token 28: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -9.968312951968983e-06
    2. 'stdin' → logprob: -12.125009536743164
    3. '.stdout' → logprob: -12.750009536743164
    4. '.readline' → logprob: -14.375009536743164
    5. '.argv' → logprob: -14.625009536743164
    6. '.std' → logprob: -15.375009536743164
    7. '.' → logprob: -15.625009536743164
    8. '(stdin' → logprob: -16.000009536743164
    9. '.st' → logprob: -17.750009536743164
    10. '```' → logprob: -18.250009536743164

Token 29: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.0005094261723570526
    2. '.' → logprob: -8.125509262084961
    3. '().' → logprob: -8.625509262084961
    4. ').' → logprob: -11.500509262084961
    5. '.readlines' → logprob: -12.000509262084961
    6. '```' → logprob: -12.125509262084961
    7. ')' → logprob: -12.500509262084961
    8. '.stdin' → logprob: -12.625509262084961
    9. ' .' → logprob: -14.250509262084961
    10. '.)' → logprob: -14.375509262084961

Token 30: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -7.898723561083898e-05
    2. '()' → logprob: -9.500079154968262
    3. '())' → logprob: -12.500079154968262
    4. ' ().' → logprob: -15.750079154968262
    5. '.readline' → logprob: -15.875079154968262
    6. ')' → logprob: -16.875078201293945
    7. '()).' → logprob: -18.000078201293945
    8. '()
' → logprob: -18.375078201293945
    9. '(' → logprob: -18.875078201293945
    10. '.strip' → logprob: -19.125078201293945

Token 31: 'split' (ID: 13627)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.09502466022968292
    2. 'split' → logprob: -3.095024585723877
    3. 'read' → logprob: -3.345024585723877
    4. 'rstrip' → logprob: -4.595024585723877
    5. ' strip' → logprob: -12.470025062561035
    6. 'decode' → logprob: -12.845025062561035
    7. ')' → logprob: -12.970025062561035
    8. '```' → logprob: -13.595025062561035
    9. ' readline' → logprob: -14.095025062561035
    10. '(strip' → logprob: -14.095025062561035

Token 32: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.018409203737974167
    2. '())' → logprob: -4.268409252166748
    3. '()' → logprob: -5.518409252166748
    4. '))' → logprob: -8.76840877532959
    5. '`)' → logprob: -10.39340877532959
    6. '(' → logprob: -11.64340877532959
    7. ')
' → logprob: -11.76840877532959
    8. ')`' → logprob: -11.76840877532959
    9. ' )' → logprob: -12.89340877532959
    10. '),' → logprob: -13.39340877532959

Token 33: 'M' (ID: 44)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -1.5154699087142944
    2. 't' → logprob: -1.8904699087142944
    3. 'x' → logprob: -2.015470027923584
    4. 's' → logprob: -2.390470027923584
    5. 'n' → logprob: -2.890470027923584
    6. 'b' → logprob: -2.890470027923584
    7. 'for' → logprob: -3.390470027923584
    8. 'c' → logprob: -3.640470027923584
    9. 'r' → logprob: -3.640470027923584
    10. 'print' → logprob: -3.765470027923584

Token 34: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.28120794892311096
    2. '=' → logprob: -1.4062079191207886
    3. ',' → logprob: -10.281208038330078
    4. '=int' → logprob: -11.281208038330078
    5. ' ' → logprob: -12.406208038330078
    6. ')' → logprob: -13.531208038330078
    7. '_' → logprob: -13.781208038330078
    8. '.' → logprob: -13.906208038330078
    9. '  ' → logprob: -14.156208038330078
    10. 'space' → logprob: -15.031208038330078

Token 35: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.1371038556098938
    2. 'int' → logprob: -2.137103796005249
    3. ' ' → logprob: -5.637104034423828
    4. '10' → logprob: -6.137104034423828
    5. ' sys' → logprob: -6.637104034423828
    6. ' a' → logprob: -7.012104034423828
    7. '[int' → logprob: -7.137104034423828
    8. '100' → logprob: -7.637104034423828
    9. 'a' → logprob: -8.137104034423828
    10. 'sys' → logprob: -8.637104034423828

Token 36: '(sys' (ID: 41042)
  Prédit: '(sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sys' → logprob: -0.048596687614917755
    2. '(' → logprob: -3.0485966205596924
    3. '(System' → logprob: -13.423596382141113
    4. '(s' → logprob: -13.548596382141113
    5. '(system' → logprob: -13.673596382141113
    6. '(os' → logprob: -13.798596382141113
    7. '(Sys' → logprob: -14.298596382141113
    8. '(
' → logprob: -14.423596382141113
    9. '()' → logprob: -14.423596382141113
    10. ' (' → logprob: -14.548596382141113

Token 37: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.0016381697496399283
    2. '.stdout' → logprob: -6.876637935638428
    3. '.' → logprob: -7.876637935638428
    4. '.std' → logprob: -9.376638412475586
    5. '.readline' → logprob: -9.751638412475586
    6. ').' → logprob: -10.376638412475586
    7. ' .' → logprob: -11.126638412475586
    8. '.argv' → logprob: -11.751638412475586
    9. '.stderr' → logprob: -12.126638412475586
    10. '.st' → logprob: -12.376638412475586

Token 38: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -6.074907287256792e-05
    2. '.stdin' → logprob: -10.12506103515625
    3. '.readlines' → logprob: -11.62506103515625
    4. '())' → logprob: -12.62506103515625
    5. '.read' → logprob: -13.25006103515625
    6. '.' → logprob: -13.25006103515625
    7. ')' → logprob: -13.50006103515625
    8. '().' → logprob: -13.75006103515625
    9. 'stdin' → logprob: -14.25006103515625
    10. '```' → logprob: -14.75006103515625

Token 39: '())

' (ID: 27654)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3450440466403961
    2. '()' → logprob: -1.3450440168380737
    3. '())' → logprob: -3.4700441360473633
    4. '()
' → logprob: -9.220044136047363
    5. ')
' → logprob: -10.845044136047363
    6. '(' → logprob: -10.970044136047363
    7. '())
' → logprob: -11.720044136047363
    8. '`)' → logprob: -11.720044136047363
    9. '）' → logprob: -12.595044136047363
    10. ' )' → logprob: -13.220044136047363

Token 40: 'pos' (ID: 1103)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.208127737045288
    2. 'lst' → logprob: -2.083127737045288
    3. 'arr' → logprob: -2.583127737045288
    4. 'answers' → logprob: -2.833127737045288
    5. 'result' → logprob: -2.958127737045288
    6. 'data' → logprob: -3.708127737045288
    7. 'answer' → logprob: -3.708127737045288
    8. 'x' → logprob: -3.708127737045288
    9. 'for' → logprob: -3.708127737045288
    10. 'queries' → logprob: -3.708127737045288

Token 41: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.1471550613641739
    2. 'itions' → logprob: -3.0221550464630127
    3. '=' → logprob: -3.1471550464630127
    4. 'sible' → logprob: -3.6471550464630127
    5. 'ition' → logprob: -4.147155284881592
    6. 'itional' → logprob: -6.397155284881592
    7. '=[]' → logprob: -8.022154808044434
    8. ' =' → logprob: -8.397154808044434
    9. 'i' → logprob: -8.647154808044434
    10. 'essions' → logprob: -8.897154808044434

Token 42: ' list' (ID: 1562)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.2272003889083862
    2. '[a' → logprob: -1.6022003889083862
    3. '[]' → logprob: -1.8522003889083862
    4. '0' → logprob: -2.227200508117676
    5. ' a' → logprob: -2.602200508117676
    6. '[' → logprob: -2.727200508117676
    7. ' [' → logprob: -2.852200508117676
    8. ' []' → logprob: -3.477200508117676
    9. ' ' → logprob: -4.977200508117676
    10. '[int' → logprob: -6.352200508117676

Token 43: '(range' (ID: 50017)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.24475476145744324
    2. '(range' → logprob: -1.7447547912597656
    3. '(map' → logprob: -3.2447547912597656
    4. '()' → logprob: -6.869754791259766
    5. '([]' → logprob: -7.119754791259766
    6. '([' → logprob: -7.244754791259766
    7. '(int' → logprob: -8.244754791259766
    8. '(sys' → logprob: -8.869754791259766
    9. '((' → logprob: -9.494754791259766
    10. '(input' → logprob: -9.869754791259766

Token 44: '(N' (ID: 10564)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.313571035861969
    2. '(N' → logprob: -1.3135709762573242
    3. '(M' → logprob: -8.688570976257324
    4. '(a' → logprob: -9.188570976257324
    5. '(n' → logprob: -10.813570976257324
    6. '(-' → logprob: -12.063570976257324
    7. '(A' → logprob: -13.063570976257324
    8. '1' → logprob: -13.188570976257324
    9. '((' → logprob: -13.313570976257324
    10. ')' → logprob: -13.438570976257324

Token 45: '+' (ID: 10)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0005264613428153098
    2. ')' → logprob: -7.625526428222656
    3. '+' → logprob: -11.500526428222656
    4. '))
' → logprob: -11.750526428222656
    5. '),' → logprob: -12.125526428222656
    6. ' ))' → logprob: -12.125526428222656
    7. ')))' → logprob: -12.875526428222656
    8. '-' → logprob: -13.250526428222656
    9. ',' → logprob: -13.500526428222656
    10. '*' → logprob: -14.000526428222656

Token 46: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.776898251497187e-05
    2. '2' → logprob: -10.5000581741333
    3. ' ' → logprob: -10.5000581741333
    4. '(' → logprob: -13.6250581741333
    5. 'M' → logprob: -14.8750581741333
    6. '3' → logprob: -15.3750581741333
    7. '5' → logprob: -16.000057220458984
    8. '10' → logprob: -16.125057220458984
    9. 'a' → logprob: -16.625057220458984
    10. ')' → logprob: -16.687557220458984

Token 47: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.020570380613207817
    2. ')' → logprob: -3.8955702781677246
    3. ' ))' → logprob: -11.520570755004883
    4. ')))' → logprob: -11.770570755004883
    5. '+' → logprob: -12.645570755004883
    6. '))
' → logprob: -12.895570755004883
    7. '),' → logprob: -13.145570755004883
    8. ',' → logprob: -14.520570755004883
    9. ' )' → logprob: -14.645570755004883
    10. '))

' → logprob: -14.895570755004883

Token 48: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.09553099423646927
    2. '<|end|>' → logprob: -2.8455309867858887
    3. '[' → logprob: -4.470530986785889
    4. 'for' → logprob: -5.470530986785889
    5. '#' → logprob: -5.720530986785889
    6. '\n' → logprob: -5.845530986785889
    7. '
' → logprob: -6.220530986785889
    8. ' 
' → logprob: -6.595530986785889
    9. '```' → logprob: -6.720530986785889
    10. '' → logprob: -6.845530986785889

Token 49: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.22860953211784363
    2. '[' → logprob: -2.478609561920166
    3. '#' → logprob: -2.603609561920166
    4. '
' → logprob: -4.228609561920166
    5. '\n' → logprob: -5.228609561920166
    6. 'pos' → logprob: -5.478609561920166
    7. 'a' → logprob: -5.603609561920166
    8. '\' → logprob: -5.853609561920166
    9. ' for' → logprob: -5.978609561920166
    10. ')' → logprob: -6.353609561920166

Token 50: ' pos' (ID: 1253)
  Prédit: ' identity'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' identity' → logprob: -1.1397895812988281
    2. ' [' → logprob: -1.5147895812988281
    3. ' positions' → logprob: -2.139789581298828
    4. '[' → logprob: -2.389789581298828
    5. ' initial' → logprob: -2.639789581298828
    6. ' ' → logprob: -2.764789581298828
    7. ' range' → logprob: -4.139789581298828
    8. '0' → logprob: -4.639789581298828
    9. 'identity' → logprob: -4.639789581298828
    10. ' 初' → logprob: -4.639789581298828

Token 51: '[i' (ID: 1768)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0370434895157814
    2. '[:]' → logprob: -3.787043571472168
    3. ')' → logprob: -4.912043571472168
    4. ' =' → logprob: -6.287043571472168
    5. '=' → logprob: -6.912043571472168
    6. '<|end|>' → logprob: -7.537043571472168
    7. '[:' → logprob: -7.662043571472168
    8. ' ' → logprob: -7.787043571472168
    9. '[-' → logprob: -8.287043571472168
    10. '.' → logprob: -8.412043571472168

Token 52: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.3110624849796295
    2. '])' → logprob: -1.4360624551773071
    3. ')' → logprob: -3.6860625743865967
    4. ' ]' → logprob: -7.311062335968018
    5. '#' → logprob: -7.561062335968018
    6. ']==' → logprob: -7.811062335968018
    7. ' ])' → logprob: -7.936062335968018
    8. '[' → logprob: -8.061062812805176
    9. ']=' → logprob: -8.186062812805176
    10. ' )' → logprob: -8.311062812805176

Token 53: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.939128577709198
    2. '=' → logprob: -1.6891286373138428
    3. '[' → logprob: -2.1891286373138428
    4. '<|end|>' → logprob: -2.5641286373138428
    5. ' is' → logprob: -2.8141286373138428
    6. ':' → logprob: -3.3141286373138428
    7. '#' → logprob: -3.5641286373138428
    8. ' ' → logprob: -3.6891286373138428
    9. ' represents' → logprob: -3.8141286373138428
    10. ')' → logprob: -4.064128398895264

Token 54: ' position' (ID: 4010)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.692561686038971
    2. ' i' → logprob: -0.817561686038971
    3. ' the' → logprob: -3.317561626434326
    4. ' position' → logprob: -4.567561626434326
    5. 'the' → logprob: -5.692561626434326
    6. ' current' → logprob: -5.817561626434326
    7. 'position' → logprob: -6.067561626434326
    8. ' index' → logprob: -7.567561626434326
    9. 'current' → logprob: -8.067562103271484
    10. ' element' → logprob: -8.192562103271484

Token 55: ' in' (ID: 306)
  Prédit: ' of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.03974663466215134
    2. '[i' → logprob: -4.2897467613220215
    3. 's' → logprob: -4.7897467613220215
    4. ' i' → logprob: -5.0397467613220215
    5. 'of' → logprob: -5.6647467613220215
    6. '[' → logprob: -6.4147467613220215
    7. 'i' → logprob: -6.5397467613220215
    8. ' ' → logprob: -6.5397467613220215
    9. '<|end|>' → logprob: -7.7897467613220215
    10. '(i' → logprob: -8.289746284484863

Token 56: ' original' (ID: 4756)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.05534539744257927
    2. 'a' → logprob: -4.18034553527832
    3. 'segment' → logprob: -4.18034553527832
    4. ' the' → logprob: -4.80534553527832
    5. 'pos' → logprob: -5.55534553527832
    6. 'deck' → logprob: -6.68034553527832
    7. ' permutation' → logprob: -6.93034553527832
    8. 'array' → logprob: -6.93034553527832
    9. 'deque' → logprob: -7.18034553527832
    10. 'per' → logprob: -7.30534553527832

Token 57: ' arithmetic' (ID: 81645)
  Prédit: 'order'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'order' → logprob: -0.8510182499885559
    2. 'array' → logprob: -1.1010181903839111
    3. 'list' → logprob: -2.726018190383911
    4. ')' → logprob: -3.476018190383911
    5. '<|end|>' → logprob: -3.601018190383911
    6. 'per' → logprob: -3.851018190383911
    7. ' array' → logprob: -3.851018190383911
    8. 'sequence' → logprob: -3.851018190383911
    9. 'ordering' → logprob: -4.22601842880249
    10. ' order' → logprob: -4.60101842880249

Token 58: ' sequence' (ID: 16281)
  Prédit: 'progress'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'progress' → logprob: -0.273525595664978
    2. 'sequence' → logprob: -1.523525595664978
    3. '_progress' → logprob: -4.148525714874268
    4. ' progression' → logprob: -5.398525714874268
    5. '<|end|>' → logprob: -7.648525714874268
    6. '_sequence' → logprob: -8.02352523803711
    7. '-progress' → logprob: -9.27352523803711
    8. ' sequence' → logprob: -9.64852523803711
    9. '_' → logprob: -11.52352523803711
    10. 'series' → logprob: -11.52352523803711

Token 59: ' of' (ID: 328)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.3252965211868286
    2. '<|end|>' → logprob: -1.3252965211868286
    3. '#' → logprob: -1.4502965211868286
    4. '
' → logprob: -2.325296401977539
    5. ')' → logprob: -3.575296401977539
    6. '\n' → logprob: -4.200296401977539
    7. '[pos' → logprob: -4.200296401977539
    8. 'pos' → logprob: -4.325296401977539
    9. '```' → logprob: -4.325296401977539
    10. '\' → logprob: -5.325296401977539

Token 60: ' element' (ID: 3577)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.89751797914505
    2. ' element' → logprob: -1.6475179195404053
    3. ' i' → logprob: -1.8975179195404053
    4. 'element' → logprob: -2.0225179195404053
    5. ' the' → logprob: -3.5225179195404053
    6. 'the' → logprob: -3.7725179195404053
    7. 'term' → logprob: -3.8975179195404053
    8. ' term' → logprob: -4.022518157958984
    9. 'ith' → logprob: -4.772518157958984
    10. 'number' → logprob: -5.147518157958984

Token 61: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.0346301794052124
    2. '[i' → logprob: -1.0346301794052124
    3. ' i' → logprob: -1.2846301794052124
    4. '[' → logprob: -4.784630298614502
    5. '_i' → logprob: -6.159630298614502
    6. ' [' → logprob: -7.534630298614502
    7. 's' → logprob: -7.909630298614502
    8. ' ' → logprob: -8.409629821777344
    9. '_' → logprob: -8.909629821777344
    10. '<|end|>' → logprob: -9.034629821777344

Token 62: '
' (ID: 198)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\' → logprob: -1.4576776027679443
    2. '\n' → logprob: -1.4576776027679443
    3. '
' → logprob: -2.4576776027679443
    4. 'for' → logprob: -2.5826776027679443
    5. '```' → logprob: -2.7076776027679443
    6. ')' → logprob: -2.8326776027679443
    7. '#' → logprob: -2.8326776027679443
    8. 'pos' → logprob: -3.2076776027679443
    9. 's' → logprob: -3.5826776027679443
    10. 'def' → logprob: -3.8326776027679443

Token 63: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.14611054956912994
    2. 'def' → logprob: -3.1461105346679688
    3. '```' → logprob: -5.021110534667969
    4. '#' → logprob: -5.146110534667969
    5. 'queries' → logprob: -5.146110534667969
    6. 'a' → logprob: -5.146110534667969
    7. 'pos' → logprob: -5.271110534667969
    8. 'diff' → logprob: -5.396110534667969
    9. 'query' → logprob: -5.521110534667969
    10. ' for' → logprob: -5.521110534667969

Token 64: ' _' (ID: 1175)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.48469117283821106
    2. ' _' → logprob: -0.9846911430358887
    3. '_' → logprob: -4.609691143035889
    4. 'i' → logprob: -7.484691143035889
    5. ' ' → logprob: -10.609691619873047
    6. '_i' → logprob: -11.734691619873047
    7. ' x' → logprob: -12.984691619873047
    8. ' range' → logprob: -13.234691619873047
    9. ' ' → logprob: -13.609691619873047
    10. ' in' → logprob: -13.609691619873047

Token 65: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03337398171424866
    2. 'in' → logprob: -3.533374071121216
    3. ' i' → logprob: -6.408373832702637
    4. 'i' → logprob: -6.533373832702637
    5. 'range' → logprob: -7.908373832702637
    6. ' range' → logprob: -9.533373832702637
    7. ' ' → logprob: -10.158373832702637
    8. '_' → logprob: -11.283373832702637
    9. ' _' → logprob: -12.033373832702637
    10. 'pos' → logprob: -12.033373832702637

Token 66: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.03806708753108978
    2. ' range' → logprob: -3.288067102432251
    3. 'pos' → logprob: -10.788066864013672
    4. '(range' → logprob: -13.163066864013672
    5. '	range' → logprob: -13.413066864013672
    6. 'ange' → logprob: -15.163066864013672
    7. ' ' → logprob: -15.413066864013672
    8. ')' → logprob: -15.663066864013672
    9. 'rang' → logprob: -15.663066864013672
    10. ' pos' → logprob: -15.788066864013672

Token 67: '(M' (ID: 6103)
  Prédit: '(M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(M' → logprob: -2.0100624169572257e-05
    2. '(' → logprob: -10.875020027160645
    3. 'M' → logprob: -13.875020027160645
    4. '(N' → logprob: -16.87502098083496
    5. ' M' → logprob: -17.50002098083496
    6. ' (' → logprob: -18.12502098083496
    7. '(A' → logprob: -18.87502098083496
    8. '(m' → logprob: -19.12502098083496
    9. '(S' → logprob: -19.62502098083496
    10. '(
' → logprob: -19.75002098083496

Token 68: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.004347990732640028
    2. ' ):' → logprob: -5.504347801208496
    3. '):
' → logprob: -8.629347801208496
    4. ':' → logprob: -9.754347801208496
    5. ')' → logprob: -10.754347801208496
    6. ',' → logprob: -12.504347801208496
    7. '():' → logprob: -13.254347801208496
    8. ' :' → logprob: -13.379347801208496
    9. ']:' → logprob: -14.129347801208496
    10. '):
' → logprob: -14.504347801208496

Token 69: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02536884695291519
    2. ' pos' → logprob: -4.775368690490723
    3. '```' → logprob: -5.400368690490723
    4. ' ' → logprob: -5.775368690490723
    5. '    
' → logprob: -6.650368690490723
    6. ' i' → logprob: -6.900368690490723
    7. '    ' → logprob: -7.025368690490723
    8. '  ' → logprob: -7.400368690490723
    9. ' sys' → logprob: -7.525368690490723
    10. ' 
' → logprob: -7.900368690490723

Token 70: ' x' (ID: 1215)
  Prédit: ' command'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' command' → logprob: -1.323547601699829
    2. 'cmd' → logprob: -1.948547601699829
    3. 'command' → logprob: -2.198547601699829
    4. ' x' → logprob: -2.198547601699829
    5. ' op' → logprob: -2.323547601699829
    6. 'x' (adapté à ' x') → logprob: -2.573547601699829
    7. ' cmd' → logprob: -2.948547601699829
    8. ' t' → logprob: -3.323547601699829
    9. ' l' → logprob: -3.948547601699829
    10. ' s' → logprob: -4.07354736328125

Token 71: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.020431164652109146
    2. ',y' → logprob: -4.145431041717529
    3. ' ,' → logprob: -6.020431041717529
    4. ' =' → logprob: -6.395431041717529
    5. '=' → logprob: -8.895431518554688
    6. ',a' → logprob: -10.520431518554688
    7. ' ' → logprob: -10.645431518554688
    8. ',x' → logprob: -10.770431518554688
    9. '1' → logprob: -11.020431518554688
    10. 'y' → logprob: -11.395431518554688

Token 72: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.002236616564914584
    2. ' y' → logprob: -7.127236843109131
    3. 'k' → logprob: -7.502236843109131
    4. 'l' → logprob: -8.002236366271973
    5. 't' → logprob: -8.377236366271973
    6. 'c' → logprob: -9.627236366271973
    7. 'v' → logprob: -10.252236366271973
    8. 'r' → logprob: -10.252236366271973
    9. 's' → logprob: -10.502236366271973
    10. 'p' → logprob: -10.877236366271973

Token 73: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759661793708801
    2. ' =' → logprob: -0.8259661793708801
    3. ',' → logprob: -10.825965881347656
    4. ' ' → logprob: -13.325965881347656
    5. '=sys' → logprob: -13.325965881347656
    6. ')' → logprob: -13.450965881347656
    7. '=input' → logprob: -14.825965881347656
    8. '=line' → logprob: -15.075965881347656
    9. '=int' → logprob: -15.450965881347656
    10. '   ' → logprob: -16.013465881347656

Token 74: ' z' (ID: 579)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.031536348164081573
    2. ' z' → logprob: -4.28153657913208
    3. 'k' → logprob: -5.15653657913208
    4. '_' → logprob: -5.28153657913208
    5. 'l' → logprob: -6.90653657913208
    6. 'v' → logprob: -7.15653657913208
    7. 'c' → logprob: -7.15653657913208
    8. 't' → logprob: -7.40653657913208
    9. 'w' → logprob: -7.53153657913208
    10. '=' → logprob: -7.78153657913208

Token 75: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12697482109069824
    2. '=' → logprob: -2.1269748210906982
    3. ',' → logprob: -10.501975059509277
    4. ' ' → logprob: -11.001975059509277
    5. '=sys' → logprob: -14.251975059509277
    6. '=input' → logprob: -14.876975059509277
    7. ')' → logprob: -14.876975059509277
    8. '  ' → logprob: -15.501975059509277
    9. '=line' → logprob: -15.751975059509277
    10. '   ' → logprob: -16.00197410583496

Token 76: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.16023418307304382
    2. 'map' → logprob: -1.9102342128753662
    3. ' ' → logprob: -12.535234451293945
    4. 'm' → logprob: -13.035234451293945
    5. '	map' → logprob: -13.160234451293945
    6. ' list' → logprob: -14.535234451293945
    7. '  ' → logprob: -15.160234451293945
    8. '(map' → logprob: -15.160234451293945
    9. 'list' → logprob: -15.410234451293945
    10. ' ' → logprob: -15.535234451293945

Token 77: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -4.8828707804204896e-05
    2. '(' → logprob: -10.250048637390137
    3. '[int' → logprob: -11.875048637390137
    4. '<int' → logprob: -13.000048637390137
    5. '=int' → logprob: -13.500048637390137
    6. 'int' → logprob: -13.625048637390137
    7. ',int' → logprob: -14.625048637390137
    8. ']int' → logprob: -15.250048637390137
    9. '<|end|>' → logprob: -15.750048637390137
    10. '(str' → logprob: -15.750048637390137

Token 78: ',' (ID: 11)
  Prédit: '(sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sys' → logprob: -0.0022977516055107117
    2. ',' → logprob: -6.627297878265381
    3. ')' → logprob: -7.877297878265381
    4. 'sys' → logprob: -8.252297401428223
    5. '(' → logprob: -8.627297401428223
    6. '=sys' → logprob: -9.252297401428223
    7. ')(' → logprob: -10.752297401428223
    8. '	sys' → logprob: -10.877297401428223
    9. ' sys' → logprob: -12.252297401428223
    10. '```' → logprob: -12.877297401428223

Token 79: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.4741182327270508
    2. 'sys' → logprob: -0.9741182327270508
    3. '(sys' → logprob: -10.34911823272705
    4. ')' → logprob: -12.59911823272705
    5. '=sys' → logprob: -12.72411823272705
    6. '	sys' → logprob: -13.22411823272705
    7. '/sys' → logprob: -15.34911823272705
    8. ' )' → logprob: -15.34911823272705
    9. ' ' → logprob: -15.72411823272705
    10. '.sys' → logprob: -16.224117279052734

Token 80: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.0020422483794391155
    2. 'stdin' → logprob: -6.377042293548584
    3. '.readline' → logprob: -8.002041816711426
    4. '.stdout' → logprob: -13.002041816711426
    5. '.' → logprob: -14.127041816711426
    6. '.std' → logprob: -14.252041816711426
    7. '(stdin' → logprob: -14.377041816711426
    8. '```' → logprob: -14.502041816711426
    9. '.stderr' → logprob: -15.877041816711426
    10. 'in' → logprob: -16.377042770385742

Token 81: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -1.1279553291387856e-05
    2. 'read' → logprob: -12.875011444091797
    3. ' readline' → logprob: -12.875011444091797
    4. '```' → logprob: -12.875011444091797
    5. 'stdin' → logprob: -13.375011444091797
    6. 'sys' → logprob: -14.750011444091797
    7. 'line' → logprob: -14.750011444091797
    8. '.readlines' → logprob: -15.000011444091797
    9. '.stdin' → logprob: -15.375011444091797
    10. '.' → logprob: -15.500011444091797

Token 82: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.004155925940722227
    2. '()' → logprob: -5.629156112670898
    3. '())' → logprob: -7.504156112670898
    4. ' ().' → logprob: -13.504156112670898
    5. ')' → logprob: -13.629156112670898
    6. '()
' → logprob: -13.879156112670898
    7. ' ()' → logprob: -15.129156112670898
    8. '.readline' → logprob: -15.379156112670898
    9. ' ())' → logprob: -16.1291561126709
    10. '(' → logprob: -16.2541561126709

Token 83: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -7.822646693966817e-06
    2. 'strip' → logprob: -12.250007629394531
    3. ' split' → logprob: -13.000007629394531
    4. 'rstrip' → logprob: -14.875007629394531
    5. '(split' → logprob: -15.625007629394531
    6. ')' → logprob: -15.750007629394531
    7. 'read' → logprob: -17.12500762939453
    8. ' ' → logprob: -17.25000762939453
    9. 'spl' → logprob: -17.75000762939453
    10. 's' → logprob: -18.87500762939453

Token 84: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0349985733628273
    2. '())' → logprob: -3.409998655319214
    3. '()' → logprob: -6.659998416900635
    4. ')
' → logprob: -10.534998893737793
    5. '))' → logprob: -11.659998893737793
    6. '())
' → logprob: -11.909998893737793
    7. ')`' → logprob: -12.034998893737793
    8. '   ' → logprob: -12.534998893737793
    9. '`)' → logprob: -12.534998893737793
    10. '(' → logprob: -12.534998893737793

Token 85: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6158833503723145
    2. '<|end|>' → logprob: -0.9908833503723145
    3. '   ' → logprob: -2.9908833503723145
    4. ' if' → logprob: -4.4908833503723145
    5. ')' → logprob: -5.2408833503723145
    6. '  ' → logprob: -5.6158833503723145
    7. '
' → logprob: -5.7408833503723145
    8. ' 
' → logprob: -5.7408833503723145
    9. '<|end|>' → logprob: -5.7408833503723145
    10. 'if' → logprob: -6.7408833503723145

Token 86: ' if' (ID: 538)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.559468150138855
    2. ' if' → logprob: -1.559468150138855
    3. '<|end|>' → logprob: -1.684468150138855
    4. 'if' (adapté à ' if') → logprob: -1.809468150138855
    5. '   ' → logprob: -2.1844682693481445
    6. '
' → logprob: -3.1844682693481445
    7. 'pos' → logprob: -3.6844682693481445
    8. ')' → logprob: -4.6844682693481445
    9. '	if' → logprob: -5.1844682693481445
    10. '[' → logprob: -5.3094682693481445

Token 87: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.5147139430046082
    2. ' z' → logprob: -1.514714002609253
    3. 'x' → logprob: -2.014714002609253
    4. 'z' → logprob: -3.514714002609253
    5. ' y' → logprob: -4.014713764190674
    6. 'y' → logprob: -6.889713764190674
    7. ' ' → logprob: -8.764714241027832
    8. ' a' → logprob: -10.889714241027832
    9. ' (' → logprob: -10.952214241027832
    10. '(x' → logprob: -11.389714241027832

Token 88: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6932252049446106
    2. ' ==' → logprob: -0.6932252049446106
    3. '=' → logprob: -10.693224906921387
    4. ')' → logprob: -11.193224906921387
    5. ']==' → logprob: -11.568224906921387
    6. '==
' → logprob: -12.193224906921387
    7. ' ' → logprob: -12.568224906921387
    8. ' =' → logprob: -12.568224906921387
    9. ' ' → logprob: -12.693224906921387
    10. '[' → logprob: -12.943224906921387

Token 89: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004462400916963816
    2. ' ' → logprob: -6.004462242126465
    3. '2' → logprob: -6.879462242126465
    4. '3' → logprob: -7.129462242126465
    5. '0' → logprob: -8.879462242126465
    6. 'a' → logprob: -12.441962242126465
    7. '4' → logprob: -12.629462242126465
    8. 'd' → logprob: -12.816962242126465
    9. '  ' → logprob: -14.129462242126465
    10. '```' → logprob: -14.191962242126465

Token 90: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.015266143716871738
    2. '2' → logprob: -4.265265941619873
    3. '3' → logprob: -7.265265941619873
    4. '0' → logprob: -7.890265941619873
    5. ' ' → logprob: -11.015266418457031
    6. '4' → logprob: -12.765266418457031
    7. '```' → logprob: -13.515266418457031
    8. 'y' → logprob: -13.577766418457031
    9. 'd' → logprob: -13.702766418457031
    10. 'a' → logprob: -13.765266418457031

Token 91: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0008572661899961531
    2. ' :' → logprob: -7.125857353210449
    3. ':
' → logprob: -10.25085735321045
    4. ' and' → logprob: -11.75085735321045
    5. '):' → logprob: -12.25085735321045
    6. ':**' → logprob: -14.25085735321045
    7. ',' → logprob: -14.50085735321045
    8. ':def' → logprob: -14.62585735321045
    9. '>:' → logprob: -14.75085735321045
    10. ' or' → logprob: -14.75085735321045

Token 92: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.021885205060243607
    2. '   ' → logprob: -4.896885395050049
    3. ' and' → logprob: -5.146885395050049
    4. ':
' → logprob: -6.021885395050049
    5. ' :' → logprob: -6.021885395050049
    6. '):' → logprob: -6.771885395050049
    7. '       ' → logprob: -6.771885395050049
    8. '<|end|>' → logprob: -8.14688491821289
    9. ' ' → logprob: -8.52188491821289
    10. '    ' → logprob: -8.77188491821289

Token 93: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' (adapté à ' pos') → logprob: -0.5500993728637695
    2. ' pos' → logprob: -1.5500993728637695
    3. ' if' → logprob: -2.8000993728637695
    4. 'if' → logprob: -2.9250993728637695
    5. ' for' → logprob: -3.1750993728637695
    6. 'for' → logprob: -3.6750993728637695
    7. 'a' → logprob: -5.5500993728637695
    8. '   ' → logprob: -5.8000993728637695
    9. ' a' → logprob: -5.9250993728637695
    10. 'p' → logprob: -6.0500993728637695

Token 94: '[y' (ID: 34551)
  Prédit: '[y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -0.007143940776586533
    2. '[' → logprob: -5.382143974304199
    3. '[x' → logprob: -6.757143974304199
    4. '[z' → logprob: -7.507143974304199
    5. '[a' → logprob: -8.2571439743042
    6. ',' → logprob: -8.7571439743042
    7. '.' → logprob: -9.5071439743042
    8. '[i' → logprob: -9.7571439743042
    9. '[s' → logprob: -10.0071439743042
    10. ',y' → logprob: -10.1321439743042

Token 95: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.01508122868835926
    2. ':],' → logprob: -4.890081405639648
    3. ']' → logprob: -5.890081405639648
    4. ':' → logprob: -6.265081405639648
    5. ':y' → logprob: -6.265081405639648
    6. ':z' → logprob: -7.765081405639648
    7. ':]' → logprob: -9.390081405639648
    8. ' ],' → logprob: -9.390081405639648
    9. ',' → logprob: -9.390081405639648
    10. '-' → logprob: -9.890081405639648

Token 96: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.029763570055365562
    2. ' pos' → logprob: -3.5297634601593018
    3. '<|end|>' → logprob: -12.529763221740723
    4. '[pos' → logprob: -12.654763221740723
    5. '	pos' → logprob: -12.904763221740723
    6. 'y' → logprob: -13.904763221740723
    7. ' ' → logprob: -14.529763221740723
    8. '```' → logprob: -14.529763221740723
    9. ',pos' → logprob: -14.779763221740723
    10. '       ' → logprob: -14.904763221740723

Token 97: '[z' (ID: 105082)
  Prédit: '[z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[z' → logprob: -3.8889261304575484e-06
    2. '[' → logprob: -13.375003814697266
    3. '[y' → logprob: -13.625003814697266
    4. 'z' → logprob: -14.125003814697266
    5. ' z' → logprob: -15.625003814697266
    6. '	z' → logprob: -16.500003814697266
    7. ' [' → logprob: -17.250003814697266
    8. '[x' → logprob: -17.375003814697266
    9. ',z' → logprob: -19.875003814697266
    10. '(z' → logprob: -20.125003814697266

Token 98: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.005189528223127127
    2. ']=' → logprob: -5.880189418792725
    3. '=' → logprob: -6.130189418792725
    4. ')' → logprob: -8.630189895629883
    5. ' =' → logprob: -11.130189895629883
    6. ')=' → logprob: -12.880189895629883
    7. ' ]' → logprob: -13.005189895629883
    8. '<|end|>' → logprob: -14.005189895629883
    9. ']+=' → logprob: -14.130189895629883
    10. '],' → logprob: -14.130189895629883

Token 99: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.004134087823331356
    2. ' =' → logprob: -5.504134178161621
    3. '=y' → logprob: -11.254134178161621
    4. '=user' → logprob: -11.379134178161621
    5. '=s' → logprob: -12.379134178161621
    6. '=os' → logprob: -12.504134178161621
    7. '=k' → logprob: -13.004134178161621
    8. '=z' → logprob: -13.129134178161621
    9. '=sys' → logprob: -13.254134178161621
    10. '=line' → logprob: -13.504134178161621

Token 100: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.03804275393486023
    2. ' pos' → logprob: -3.2880427837371826
    3. '	pos' → logprob: -13.788043022155762
    4. '       ' → logprob: -16.163042068481445
    5. '   ' → logprob: -17.163042068481445
    6. ',pos' → logprob: -17.288042068481445
    7. 'po' → logprob: -17.413042068481445
    8. '_pos' → logprob: -18.038042068481445
    9. 'p' → logprob: -18.038042068481445
    10. '[pos' → logprob: -18.038042068481445

Token 101: '[z' (ID: 105082)
  Prédit: '[z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[z' → logprob: -2.7610454708337784e-05
    2. '[y' → logprob: -10.750027656555176
    3. '[' → logprob: -12.625027656555176
    4. ' [' → logprob: -13.250027656555176
    5. 'z' → logprob: -14.875027656555176
    6. '[pos' → logprob: -15.500027656555176
    7. '[x' → logprob: -15.625027656555176
    8. ' z' → logprob: -16.37502670288086
    9. '[s' → logprob: -17.00002670288086
    10. '	z' → logprob: -17.37502670288086

Token 102: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.006026087794452906
    2. ',' → logprob: -5.131026268005371
    3. ',y' → logprob: -10.256026268005371
    4. ']' → logprob: -10.756026268005371
    5. 'y' → logprob: -11.006026268005371
    6. '[y' → logprob: -11.131026268005371
    7. ' ],' → logprob: -12.131026268005371
    8. '),' → logprob: -13.756026268005371
    9. ' ,' → logprob: -13.881026268005371
    10. '],[' → logprob: -14.131026268005371

Token 103: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.02324594371020794
    2. ' pos' → logprob: -3.7732460498809814
    3. 'y' → logprob: -15.523245811462402
    4. '	pos' → logprob: -15.773245811462402
    5. '[pos' → logprob: -16.39824676513672
    6. ' y' → logprob: -18.77324676513672
    7. '(pos' → logprob: -18.89824676513672
    8. '_pos' → logprob: -19.14824676513672
    9. '```' → logprob: -19.27324676513672
    10. '.pos' → logprob: -19.39824676513672

Token 104: '[y' (ID: 34551)
  Prédit: '[y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -1.7432603272027336e-06
    2. '[' → logprob: -13.375001907348633
    3. '[Y' → logprob: -16.750001907348633
    4. 'y' → logprob: -17.375001907348633
    5. '[z' → logprob: -17.625001907348633
    6. '```' → logprob: -18.875001907348633
    7. '	y' → logprob: -19.375001907348633
    8. '[pos' → logprob: -19.750001907348633
    9. '[x' → logprob: -19.750001907348633
    10. ' [' → logprob: -20.250001907348633

Token 105: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00018006093159783632
    2. '<|end|>' → logprob: -9.6251802444458
    3. ')
' → logprob: -9.8751802444458
    4. ']' → logprob: -9.8751802444458
    5. ' )' → logprob: -12.0001802444458
    6. '}' → logprob: -13.2501802444458
    7. ')

' → logprob: -14.7501802444458
    8. '）' → logprob: -14.7501802444458
    9. '])' → logprob: -15.1251802444458
    10. ')]' → logprob: -15.2501802444458

Token 106: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 107: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.5045706629753113
    2. 'elif' → logprob: -1.004570722579956
    3. ' else' → logprob: -4.004570484161377
    4. ' elif' → logprob: -4.879570484161377
    5. '   ' → logprob: -5.629570484161377
    6. ')' → logprob: -8.129570960998535
    7. '	elif' → logprob: -9.129570960998535
    8. '<|end|>' → logprob: -9.379570960998535
    9. '```' → logprob: -10.754570960998535
    10. '	else' → logprob: -11.004570960998535

Token 108: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4368777275085449
    2. ':
' → logprob: -1.061877727508545
    3. '       ' → logprob: -4.936877727508545
    4. '   ' → logprob: -7.936877727508545
    5. ' :' → logprob: -8.936878204345703
    6. '[' → logprob: -9.186878204345703
    7. ' :
' → logprob: -9.311878204345703
    8. ':
' → logprob: -9.811878204345703
    9. ':

' → logprob: -9.936878204345703
    10. '):
' → logprob: -10.436878204345703

Token 109: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2401512712240219
    2. ' for' → logprob: -3.1151511669158936
    3. 'd' → logprob: -3.2401511669158936
    4. 'pos' → logprob: -3.3651511669158936
    5. '   ' → logprob: -3.7401511669158936
    6. 'for' → logprob: -3.9901511669158936
    7. ' pass' → logprob: -4.615151405334473
    8. 'pass' → logprob: -4.740151405334473
    9. '#' → logprob: -5.115151405334473
    10. ' pos' → logprob: -5.365151405334473

Token 110: ' pos' (ID: 1253)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.2893791198730469
    2. ' pass' → logprob: -1.9143791198730469
    3. 'for' → logprob: -2.164379119873047
    4. 'pos' (adapté à ' pos') → logprob: -2.789379119873047
    5. 'p' → logprob: -3.039379119873047
    6. ' p' → logprob: -3.414379119873047
    7. 'print' → logprob: -3.539379119873047
    8. 'd' → logprob: -3.539379119873047
    9. ' pos' → logprob: -3.789379119873047
    10. 'pass' → logprob: -3.914379119873047

Token 111: '[y' (ID: 34551)
  Prédit: '[y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -0.6965655088424683
    2. '[pos' → logprob: -0.9465655088424683
    3. '[' → logprob: -2.821565628051758
    4. ' =' → logprob: -3.946565628051758
    5. '[z' → logprob: -4.071565628051758
    6. '=' → logprob: -4.946565628051758
    7. '[:]' → logprob: -6.196565628051758
    8. '[val' → logprob: -6.446565628051758
    9. '[a' → logprob: -6.946565628051758
    10. '[min' → logprob: -7.071565628051758

Token 112: ']' (ID: 60)
  Prédit: '],'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.48321714997291565
    2. ']' → logprob: -0.9832171201705933
    3. ']+=' → logprob: -4.983217239379883
    4. ',' → logprob: -6.983217239379883
    5. ' ],' → logprob: -7.483217239379883
    6. ' ]' → logprob: -8.483217239379883
    7. ']=' → logprob: -8.483217239379883
    8. ']+' → logprob: -8.858217239379883
    9. '),' → logprob: -10.233217239379883
    10. '+=' → logprob: -10.608217239379883

Token 113: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8412699103355408
    2. ' +=' → logprob: -1.5912699699401855
    3. '+=' → logprob: -1.7162699699401855
    4. ',' → logprob: -2.0912699699401855
    5. ' =' → logprob: -2.8412699699401855
    6. ' ,' → logprob: -7.0912699699401855
    7. '+' → logprob: -7.3412699699401855
    8. ']+=' → logprob: -7.4662699699401855
    9. ' ' → logprob: -8.216269493103027
    10. ' -=' → logprob: -8.341269493103027

Token 114: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.16780447959899902
    2. 'z' → logprob: -2.417804479598999
    3. ' pos' → logprob: -3.667804479598999
    4. 'N' → logprob: -5.042804718017578
    5. 'y' → logprob: -5.417804718017578
    6. ' z' → logprob: -5.417804718017578
    7. 'max' → logprob: -5.417804718017578
    8. '(pos' → logprob: -5.417804718017578
    9. 'd' → logprob: -5.667804718017578
    10. 'a' → logprob: -6.167804718017578

Token 115: '[z' (ID: 105082)
  Prédit: '[z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[z' → logprob: -0.480007529258728
    2. '[y' → logprob: -0.980007529258728
    3. '[pos' → logprob: -5.355007648468018
    4. 'y' → logprob: -7.730007648468018
    5. 'z' → logprob: -8.23000717163086
    6. '[x' → logprob: -8.48000717163086
    7. '[' → logprob: -9.10500717163086
    8. 'pos' → logprob: -10.10500717163086
    9. '[val' → logprob: -11.60500717163086
    10. '[a' → logprob: -11.85500717163086

Token 116: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.08093877881765366
    2. ']+' → logprob: -2.5809388160705566
    3. ')' → logprob: -7.330938816070557
    4. '+' → logprob: -7.580938816070557
    5. '])' → logprob: -7.705938816070557
    6. ' ]' → logprob: -8.830938339233398
    7. '-' → logprob: -9.205938339233398
    8. ']-' → logprob: -10.080938339233398
    9. ')+' → logprob: -10.580938339233398
    10. ' +' → logprob: -10.705938339233398

Token 117: 'K' (ID: 42)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 118: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06208084523677826
    2. '=' → logprob: -2.8120808601379395
    3. ' ' → logprob: -10.062080383300781
    4. '_' → logprob: -10.812080383300781
    5. ',' → logprob: -11.062080383300781
    6. '[' → logprob: -11.937080383300781
    7. ')' → logprob: -12.187080383300781
    8. '  ' → logprob: -12.437080383300781
    9. '=int' → logprob: -12.437080383300781
    10. 's' → logprob: -12.687080383300781

Token 119: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.15052878856658936
    2. ' int' → logprob: -2.275528907775879
    3. 'pos' → logprob: -4.025528907775879
    4. '0' → logprob: -5.025528907775879
    5. 'N' → logprob: -5.150528907775879
    6. ' pos' → logprob: -6.650528907775879
    7. ' N' → logprob: -6.650528907775879
    8. '[int' → logprob: -7.025528907775879
    9. '(int' → logprob: -7.150528907775879
    10. 'len' → logprob: -7.525528907775879

Token 120: '(sys' (ID: 41042)
  Prédit: '(sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sys' → logprob: -7.822646693966817e-06
    2. '(' → logprob: -12.375007629394531
    3. '()' → logprob: -13.750007629394531
    4. ' (' → logprob: -13.750007629394531
    5. 'sys' → logprob: -14.250007629394531
    6. '=sys' → logprob: -15.125007629394531
    7. '(input' → logprob: -15.750007629394531
    8. '(system' → logprob: -16.12500762939453
    9. ' sys' → logprob: -16.25000762939453
    10. '(Sys' → logprob: -16.37500762939453

Token 121: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.0028777492698282003
    2. '.readline' → logprob: -5.877877712249756
    3. '.stdout' → logprob: -10.377878189086914
    4. 'stdin' → logprob: -10.752878189086914
    5. '.' → logprob: -11.002878189086914
    6. '.std' → logprob: -13.627878189086914
    7. '(stdin' → logprob: -14.252878189086914
    8. '.argv' → logprob: -14.502878189086914
    9. ' .' → logprob: -14.877878189086914
    10. '.stderr' → logprob: -15.377878189086914

Token 122: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -2.3676733690081164e-05
    2. 'read' → logprob: -11.00002384185791
    3. ' readline' → logprob: -12.00002384185791
    4. '.readlines' → logprob: -14.87502384185791
    5. 'line' → logprob: -15.62502384185791
    6. '```' → logprob: -16.625022888183594
    7. '.read' → logprob: -16.875022888183594
    8. '.' → logprob: -17.125022888183594
    9. '
' → logprob: -17.125022888183594
    10. 'README' → logprob: -17.250022888183594

Token 123: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.013222584500908852
    2. '())' → logprob: -4.388222694396973
    3. '()' → logprob: -7.263222694396973
    4. ' )' → logprob: -12.013222694396973
    5. ')
' → logprob: -13.013222694396973
    6. '(' → logprob: -13.263222694396973
    7. '())
' → logprob: -15.013222694396973
    8. '))' → logprob: -15.388222694396973
    9. '`)' → logprob: -15.638222694396973
    10. '）' → logprob: -15.888222694396973

Token 124: 'idx' (ID: 13196)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.011172786355018616
    2. 'result' → logprob: -5.386172771453857
    3. 'results' → logprob: -5.761172771453857
    4. 'answers' → logprob: -6.511172771453857
    5. 'ans' → logprob: -7.886172771453857
    6. 'res' → logprob: -7.886172771453857
    7. 'answer' → logprob: -8.011173248291016
    8. 'output' → logprob: -8.261173248291016
    9. 'queries' → logprob: -8.261173248291016
    10. 'query' → logprob: -8.886173248291016

Token 125: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.8327367901802063
    2. '=' → logprob: -1.2077367305755615
    3. ' =' → logprob: -1.3327367305755615
    4. ',' → logprob: -7.082736968994141
    5. ' ' → logprob: -7.207736968994141
    6. '_' → logprob: -7.207736968994141
    7. ')' → logprob: -10.58273696899414
    8. '[]' → logprob: -10.58273696899414
    9. '   ' → logprob: -10.70773696899414
    10. 'es' → logprob: -10.70773696899414

Token 126: ' pos' (ID: 1253)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.8878592252731323
    2. '[int' → logprob: -1.7628592252731323
    3. '0' → logprob: -2.012859344482422
    4. 'list' → logprob: -2.137859344482422
    5. ' list' → logprob: -2.887859344482422
    6. 'int' → logprob: -3.262859344482422
    7. ' []' → logprob: -3.512859344482422
    8. '[' → logprob: -4.637859344482422
    9. ' [' → logprob: -5.137859344482422
    10. '[K' → logprob: -5.137859344482422

Token 127: '[K' (ID: 137571)
  Prédit: '[K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[K' → logprob: -0.08946336805820465
    2. '[' → logprob: -3.339463472366333
    3. '<|end|>' → logprob: -3.589463472366333
    4. '[idx' → logprob: -4.089463233947754
    5. '[k' → logprob: -6.339463233947754
    6. '[int' → logprob: -7.089463233947754
    7. '[
' → logprob: -7.589463233947754
    8. 'K' → logprob: -7.714463233947754
    9. '[data' → logprob: -7.714463233947754
    10. '[]' → logprob: -8.589463233947754

Token 128: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.22957074642181396
    2. '])' → logprob: -2.2295708656311035
    3. ']' → logprob: -2.3545708656311035
    4. ')]' → logprob: -6.1045708656311035
    5. ')])' → logprob: -8.729570388793945
    6. '[' → logprob: -9.479570388793945
    7. ')
' → logprob: -10.354570388793945
    8. '-' → logprob: -10.729570388793945
    9. ' )' → logprob: -11.104570388793945
    10. '])]' → logprob: -11.354570388793945

Token 129: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.008107174187898636
    2. 'result' → logprob: -5.3831071853637695
    3. 'answer' → logprob: -6.1331071853637695
    4. 'ans' → logprob: -7.0081071853637695
    5. 'value' → logprob: -8.88310718536377
    6. 'if' → logprob: -9.38310718536377
    7. 'res' → logprob: -9.63310718536377
    8. 'val' → logprob: -9.88310718536377
    9. 'output' → logprob: -10.50810718536377
    10. 'a' → logprob: -11.75810718536377

Token 130: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.0013435659930109978
    2. 'a' → logprob: -6.751343727111816
    3. '(' → logprob: -8.751343727111816
    4. '((' → logprob: -11.376343727111816
    5. ' (' → logprob: -13.251343727111816
    6. '(
' → logprob: -14.251343727111816
    7. '(d' → logprob: -15.501343727111816
    8. '()' → logprob: -15.876343727111816
    9. '```' → logprob: -16.0013427734375
    10. '(ans' → logprob: -16.3763427734375

Token 131: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.5232471227645874
    2. '+' → logprob: -0.8982471227645874
    3. ' ' → logprob: -9.148246765136719
    4. ' plus' → logprob: -12.523246765136719
    5. '+d' → logprob: -13.023246765136719
    6. '+
' → logprob: -13.273246765136719
    7. '+i' → logprob: -13.273246765136719
    8. ' +
' → logprob: -13.648246765136719
    9. ')' → logprob: -13.773246765136719
    10. '+k' → logprob: -13.898246765136719

Token 132: ' (' (ID: 350)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.6443660259246826
    2. 'idx' → logprob: -1.2693660259246826
    3. ' idx' → logprob: -2.3943660259246826
    4. ' d' → logprob: -2.5193660259246826
    5. '(idx' → logprob: -3.8943660259246826
    6. ' (' → logprob: -7.019366264343262
    7. '(d' → logprob: -7.394366264343262
    8. '   ' → logprob: -8.644366264343262
    9. '[idx' → logprob: -9.769366264343262
    10. ' ' → logprob: -9.769366264343262

Token 133: 'idx' (ID: 13196)
  Prédit: 'idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.019766591489315033
    2. ' idx' → logprob: -4.519766807556152
    3. 'd' → logprob: -4.769766807556152
    4. ' d' → logprob: -8.644766807556152
    5. '(idx' → logprob: -11.019766807556152
    6. 'index' → logprob: -13.394766807556152
    7. '	idx' → logprob: -13.519766807556152
    8. '[idx' → logprob: -13.894766807556152
    9. '   ' → logprob: -14.144766807556152
    10. ' ' → logprob: -14.894766807556152

Token 134: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.2284071147441864
    2. ' -' → logprob: -1.6034071445465088
    3. ')' → logprob: -5.85340690612793
    4. '*' → logprob: -10.10340690612793
    5. ')*' → logprob: -10.10340690612793
    6. ' *' → logprob: -10.72840690612793
    7. ' ' → logprob: -11.60340690612793
    8. ' )' → logprob: -12.97840690612793
    9. '*d' → logprob: -13.60340690612793
    10. ' ' → logprob: -13.85340690612793

Token 135: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001801801408873871
    2. ' ' → logprob: -8.6251802444458
    3. '   ' → logprob: -15.1251802444458
    4. ')' → logprob: -15.1251802444458
    5. ' ' → logprob: -17.125179290771484
    6. '```' → logprob: -17.125179290771484
    7. '  ' → logprob: -17.625179290771484
    8. '-' → logprob: -17.937679290771484
    9. '<|end|>' → logprob: -18.875179290771484
    10. '１' → logprob: -18.937679290771484

Token 136: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.176947600673884e-05
    2. ' ' → logprob: -10.750021934509277
    3. ')' → logprob: -16.00002098083496
    4. '   ' → logprob: -16.62502098083496
    5. '-' → logprob: -17.50002098083496
    6. '```' → logprob: -17.68752098083496
    7. '  ' → logprob: -18.62502098083496
    8. ' ' → logprob: -18.75002098083496
    9. '0' → logprob: -18.75002098083496
    10. '１' → logprob: -18.93752098083496

Token 137: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.041147805750370026
    2. ')*' → logprob: -3.2911477088928223
    3. '*' → logprob: -5.791147708892822
    4. ' *' → logprob: -10.16614818572998
    5. '*d' → logprob: -12.04114818572998
    6. ' )' → logprob: -13.29114818572998
    7. '*)' → logprob: -14.54114818572998
    8. ')d' → logprob: -15.41614818572998
    9. ' ' → logprob: -16.541147232055664
    10. '```' → logprob: -16.666147232055664

Token 138: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.002629281021654606
    2. ' *' → logprob: -6.252629280090332
    3. '*d' → logprob: -7.377629280090332
    4. ')' → logprob: -9.752629280090332
    5. ')*' → logprob: -11.002629280090332
    6. ' ' → logprob: -15.127629280090332
    7. ' ' → logprob: -15.627629280090332
    8. '   ' → logprob: -16.87763023376465
    9. '```' → logprob: -17.37763023376465
    10. '*)' → logprob: -17.75263023376465

Token 139: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.47407910227775574
    2. ' d' → logprob: -0.9740791320800781
    3. '	d' → logprob: -14.099079132080078
    4. ')d' → logprob: -14.849079132080078
    5. ' ' → logprob: -15.224079132080078
    6. ' ' → logprob: -15.349079132080078
    7. '   ' → logprob: -15.974079132080078
    8. '(d' → logprob: -16.349079132080078
    9. '*d' → logprob: -16.599079132080078
    10. '
' → logprob: -16.599079132080078

Token 140: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.292907877039397e-06
    2. ' )' → logprob: -12.87500286102295
    3. '))' → logprob: -15.25000286102295
    4. ')`' → logprob: -15.37500286102295
    5. ')
' → logprob: -16.500003814697266
    6. '**' → logprob: -17.125003814697266
    7. '+' → logprob: -17.125003814697266
    8. ')**' → logprob: -17.625003814697266
    9. '`)' → logprob: -17.750003814697266
    10. '*' → logprob: -18.250003814697266


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 138
Tokens correctement prédits (1ère position, stricte): 60
Tokens correctement prédits (1ère position, avec adaptation): 62
Tokens correctement prédits (top 10): 111
Précision stricte (1ère position): 43.48%
Précision adaptée (1ère position): 44.93%
Précision (top 10): 80.43%
================================================================================
