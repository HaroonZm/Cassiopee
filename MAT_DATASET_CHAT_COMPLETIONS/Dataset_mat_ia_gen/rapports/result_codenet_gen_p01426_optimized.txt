================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:16:37
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
import math

def main():
    input=sys.stdin.readline
    N,M=map(int,input().split())
    vectors=[list(map(float,input().split())) for _ in range(M)]

    # Precompute dot products
    dot=[[0]*M for _ in range(M)]
    for i in range(M):
        vi=vectors[i]
        for j in range(i,M):
            vj=vectors[j]
            s=0
            for k in range(N):
                s+=vi[k]*vj[k]
            dot[i][j]=s
            dot[j][i]=s

    dp=[0]*M
    for i in range(M):
        # cost if record as is
        len_vi=dot[i][i]
        best=len_vi
        for j in range(i):
            vj_vj=dot[j][j]
            if vj_vj==0:
                continue
            vij=dot[i][j]
            r=vij/vj_vj
            # squared length of (v_i - r v_j)
            val=dot[i][i]-r*r*vj_vj*2+ r*r*vj_vj
            # Simplify: (v_i - r v_j)^2 = v_i.v_i - 2r v_i.v_j + r^2 v_j.v_j
            val=dot[i][i]-2*r*vij + r*r*vj_vj
            # total cost if predecessor j plus this diff vector
            cost=dp[j]+val
            if cost<best:
                best=cost
        dp[i]=best
    print(f"{dp[M-1]:.9f}")

if __name__=="__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'import' (ID: 561)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.2973678708076477
    2. '\n' → logprob: -1.547367811203003
    3. '<|end|>' → logprob: -3.797367811203003
    4. '\' → logprob: -4.922368049621582
    5. 'newline' → logprob: -5.672368049621582
    6. 'import' → logprob: -5.672368049621582
    7. '<|end|>' → logprob: -6.047368049621582
    8. '
' → logprob: -6.922368049621582
    9. '```' → logprob: -6.922368049621582
    10. '' → logprob: -7.547368049621582

Token 4: ' math' (ID: 13324)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.00012535012501757592
    2. 'os' → logprob: -9.00012493133545
    3. ' math' → logprob: -13.87512493133545
    4. '"os' → logprob: -15.12512493133545
    5. ' re' → logprob: -15.50012493133545
    6. ' o' → logprob: -15.87512493133545
    7. ' ' → logprob: -16.125125885009766
    8. ' json' → logprob: -16.250125885009766
    9. '	os' → logprob: -16.375125885009766
    10. '_os' → logprob: -17.000125885009766

Token 5: '

' (ID: 279)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.2752407193183899
    2. '\n' → logprob: -2.775240659713745
    3. 'import' → logprob: -3.025240659713745
    4. '<|end|>' → logprob: -3.275240659713745
    5. '\' → logprob: -3.400240659713745
    6. '
' → logprob: -3.650240659713745
    7. '```' → logprob: -4.400240898132324
    8. '

' → logprob: -5.275240898132324
    9. '<|end|>' → logprob: -5.275240898132324
    10. ',' → logprob: -5.900240898132324

Token 6: 'def' (ID: 1314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.22251643240451813
    2. '```' → logprob: -2.9725165367126465
    3. '\' → logprob: -3.0975165367126465
    4. '\n' → logprob: -3.2225165367126465
    5. 'import' → logprob: -3.4725165367126465
    6. ',' → logprob: -4.5975165367126465
    7. 'def' → logprob: -5.7225165367126465
    8. '*' → logprob: -5.8475165367126465
    9. '#' → logprob: -5.8475165367126465
    10. '(' → logprob: -6.2225165367126465

Token 7: ' main' (ID: 2758)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.023089634254574776
    2. ' calculate' → logprob: -4.273089408874512
    3. ' factorial' → logprob: -5.773089408874512
    4. ' space' → logprob: -6.148089408874512
    5. '_' → logprob: -7.023089408874512
    6. ' math' → logprob: -7.648089408874512
    7. ' compute' → logprob: -7.898089408874512
    8. ' e' → logprob: -8.023089408874512
    9. ' calc' → logprob: -9.023089408874512
    10. ' my' → logprob: -9.023089408874512

Token 8: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0005158595158718526
    2. ':' → logprob: -8.750515937805176
    3. '(:' → logprob: -8.750515937805176
    4. '():' → logprob: -9.125515937805176
    5. ' (' → logprob: -10.500515937805176
    6. '(
' → logprob: -10.750515937805176
    7. '):' → logprob: -11.500515937805176
    8. ')' → logprob: -12.500515937805176
    9. '```' → logprob: -12.500515937805176
    10. '(`' → logprob: -12.625515937805176

Token 9: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3787759244441986
    2. '(' → logprob: -1.378775954246521
    3. ' ' → logprob: -3.6287758350372314
    4. '    ' → logprob: -4.0037760734558105
    5. '\' → logprob: -5.1287760734558105
    6. ' (' → logprob: -6.3787760734558105
    7. ')' → logprob: -6.3787760734558105
    8. '(space' → logprob: -6.8787760734558105
    9. ' )' → logprob: -7.1287760734558105
    10. '  ' → logprob: -7.2537760734558105

Token 10: ' input' (ID: 3422)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7218214869499207
    2. '   ' → logprob: -1.8468215465545654
    3. 'n' → logprob: -2.3468215465545654
    4. '    ' → logprob: -2.7218215465545654
    5. 'x' → logprob: -3.0968215465545654
    6. 'print' → logprob: -3.3468215465545654
    7. ' print' → logprob: -3.9718215465545654
    8. 'i' → logprob: -4.096821308135986
    9. 'r' → logprob: -4.346821308135986
    10. 'p' → logprob: -4.721821308135986

Token 11: '=sys' (ID: 149200)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.33925288915634155
    2. '()' → logprob: -2.0892529487609863
    3. '_' → logprob: -2.9642529487609863
    4. '_data' → logprob: -3.0892529487609863
    5. '_line' → logprob: -3.0892529487609863
    6. '_str' → logprob: -4.964252948760986
    7. '_text' → logprob: -5.839252948760986
    8. '_string' → logprob: -6.214252948760986
    9. '_token' → logprob: -6.589252948760986
    10. '('' → logprob: -6.964252948760986

Token 12: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.02224401757121086
    2. '.stdin' → logprob: -3.8972439765930176
    3. '.readline' → logprob: -7.397243976593018
    4. '.argv' → logprob: -7.647243976593018
    5. '.stdout' → logprob: -8.772244453430176
    6. '[' → logprob: -8.772244453430176
    7. ' .' → logprob: -8.772244453430176
    8. '.input' → logprob: -9.897244453430176
    9. '.std' → logprob: -10.772244453430176
    10. '.setdefault' → logprob: -11.022244453430176

Token 13: '.readline' (ID: 74673)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.35857826471328735
    2. '.readline' → logprob: -1.2335782051086426
    3. '.read' → logprob: -4.608578205108643
    4. '.Read' → logprob: -10.1085786819458
    5. 'read' → logprob: -10.9835786819458
    6. '.readlines' → logprob: -11.4835786819458
    7. ' .' → logprob: -11.8585786819458
    8. '.READ' → logprob: -12.6085786819458
    9. '.
' → logprob: -12.7335786819458
    10. '<|end|>' → logprob: -12.7335786819458

Token 14: '
' (ID: 198)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00370851531624794
    2. '().' → logprob: -6.253708362579346
    3. '(' → logprob: -6.378708362579346
    4. ' ()' → logprob: -10.003708839416504
    5. '()
' → logprob: -11.503708839416504
    6. '()`' → logprob: -12.378708839416504
    7. '())' → logprob: -12.503708839416504
    8. '()(' → logprob: -12.503708839416504
    9. '()

' → logprob: -12.628708839416504
    10. '(
' → logprob: -13.503708839416504

Token 15: '   ' (ID: 271)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.003225010121241212
    2. '()
' → logprob: -5.878224849700928
    3. '   ' → logprob: -8.378225326538086
    4. '(' → logprob: -9.878225326538086
    5. '().' → logprob: -10.128225326538086
    6. ' ()' → logprob: -10.628225326538086
    7. '()\' → logprob: -10.628225326538086
    8. '()

' → logprob: -10.753225326538086
    9. '())' → logprob: -12.003225326538086
    10. '()<' → logprob: -12.378225326538086

Token 16: ' N' (ID: 478)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.4593215882778168
    2. '(' → logprob: -1.2093216180801392
    3. '   ' → logprob: -3.0843214988708496
    4. 'data' → logprob: -4.33432149887085
    5. 'user' → logprob: -5.83432149887085
    6. 'x' → logprob: -6.08432149887085
    7. 'n' → logprob: -6.83432149887085
    8. '(
' → logprob: -7.58432149887085
    9. '(n' → logprob: -7.95932149887085
    10. 'line' → logprob: -7.95932149887085

Token 17: ',M' (ID: 54127)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.41876333951950073
    2. ' ' → logprob: -1.4187633991241455
    3. '=' → logprob: -2.4187633991241455
    4. ')' → logprob: -5.793763160705566
    5. '    ' → logprob: -6.293763160705566
    6. ' )' → logprob: -6.543763160705566
    7. '<|end|>' → logprob: -7.043763160705566
    8. '  ' → logprob: -7.168763160705566
    9. ',' → logprob: -7.668763160705566
    10. '[' → logprob: -7.793763160705566

Token 18: '=' (ID: 28)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07009782642126083
    2. '=' → logprob: -2.6950979232788086
    3. ',' → logprob: -9.070097923278809
    4. ' ' → logprob: -10.820097923278809
    5. ' ,' → logprob: -11.945097923278809
    6. '=int' → logprob: -12.070097923278809
    7. ' =
' → logprob: -12.070097923278809
    8. '=input' → logprob: -13.195097923278809
    9. ' ='' → logprob: -13.695097923278809
    10. ')' → logprob: -13.820097923278809

Token 19: 'map' (ID: 3726)
  Prédit: ' map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.05532250925898552
    2. 'map' → logprob: -2.9303224086761475
    3. ' input' → logprob: -8.305322647094727
    4. 'input' → logprob: -9.055322647094727
    5. ' list' → logprob: -10.180322647094727
    6. ' ' → logprob: -10.680322647094727
    7. 'list' → logprob: -11.305322647094727
    8. '	map' → logprob: -14.305322647094727
    9. ' tuple' → logprob: -14.680322647094727
    10. '   ' → logprob: -15.055322647094727

Token 20: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3356946110725403
    2. '(int' → logprob: -1.3356945514678955
    3. '(lambda' → logprob: -4.335694789886475
    4. '(str' → logprob: -5.085694789886475
    5. '(input' → logprob: -6.085694789886475
    6. '(
' → logprob: -8.585694313049316
    7. '<|end|>' → logprob: -9.335694313049316
    8. '(len' → logprob: -9.710694313049316
    9. '(list' → logprob: -10.085694313049316
    10. ' (' → logprob: -10.210694313049316

Token 21: ',input' (ID: 123014)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5232868790626526
    2. ',input' → logprob: -0.8982868790626526
    3. 'input' → logprob: -10.648286819458008
    4. ',(' → logprob: -10.773286819458008
    5. ',line' → logprob: -10.773286819458008
    6. '(input' → logprob: -10.898286819458008
    7. ',System' → logprob: -11.148286819458008
    8. ' ,' → logprob: -11.273286819458008
    9. ')' → logprob: -11.398286819458008
    10. ',int' → logprob: -11.648286819458008

Token 22: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0032807406969368458
    2. '())' → logprob: -6.0032806396484375
    3. '()' → logprob: -7.1282806396484375
    4. ')' → logprob: -13.628280639648438
    5. '(' → logprob: -15.003280639648438
    6. '()))' → logprob: -15.128280639648438
    7. '()
' → logprob: -15.878280639648438
    8. '();)' → logprob: -16.003280639648438
    9. ' ().' → logprob: -16.003280639648438
    10. ' ())' → logprob: -16.128280639648438

Token 23: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.003441722597926855
    2. 'strip' → logprob: -5.75344181060791
    3. 'rstrip' → logprob: -8.25344181060791
    4. ' split' → logprob: -13.25344181060791
    5. '().' → logprob: -14.25344181060791
    6. ')' → logprob: -14.25344181060791
    7. '(split' → logprob: -14.87844181060791
    8. '_split' → logprob: -16.878440856933594
    9. 'read' → logprob: -17.003440856933594
    10. ' strip' → logprob: -17.378440856933594

Token 24: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007491269614547491
    2. '())' → logprob: -5.132491111755371
    3. '))' → logprob: -6.632491111755371
    4. '()' → logprob: -8.382491111755371
    5. ')
' → logprob: -12.507491111755371
    6. ')`' → logprob: -13.007491111755371
    7. '(' → logprob: -13.257491111755371
    8. '),' → logprob: -13.382491111755371
    9. '()))' → logprob: -13.507491111755371
    10. ')")' → logprob: -14.007491111755371

Token 25: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 26: ' vectors' (ID: 52254)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6959301233291626
    2. ' ' → logprob: -1.9459301233291626
    3. '   ' → logprob: -2.445930004119873
    4. 'A' → logprob: -3.070930004119873
    5. ' A' → logprob: -3.570930004119873
    6. 'a' → logprob: -3.695930004119873
    7. ' graph' → logprob: -3.695930004119873
    8. 'data' → logprob: -3.820930004119873
    9. ' )' → logprob: -4.070930004119873
    10. 'dp' → logprob: -4.695930004119873

Token 27: '=[' (ID: 13370)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04961360991001129
    2. '=' → logprob: -3.4246137142181396
    3. '=[]' → logprob: -4.1746134757995605
    4. ' =[' → logprob: -8.424613952636719
    5. '=[' → logprob: -8.674613952636719
    6. '={}' → logprob: -11.174613952636719
    7. '_' → logprob: -11.549613952636719
    8. '=[],' → logprob: -12.174613952636719
    9. '=[]
' → logprob: -12.299613952636719
    10. ',' → logprob: -12.674613952636719

Token 28: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.3895241916179657
    2. 'tuple' → logprob: -1.139524221420288
    3. ' tuple' → logprob: -6.514523983001709
    4. ' list' → logprob: -7.139523983001709
    5. '(tuple' → logprob: -8.639524459838867
    6. ']' → logprob: -9.639524459838867
    7. '(list' → logprob: -9.764524459838867
    8. '[]' → logprob: -10.514524459838867
    9. 'map' → logprob: -10.639524459838867
    10. 'int' → logprob: -12.014524459838867

Token 29: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -4.60414821645827e-06
    2. '(' → logprob: -12.750004768371582
    3. '()' → logprob: -14.125004768371582
    4. 'map' → logprob: -15.125004768371582
    5. '(range' → logprob: -15.375004768371582
    6. '(int' → logprob: -15.875004768371582
    7. '(input' → logprob: -16.500003814697266
    8. '()]' → logprob: -16.625003814697266
    9. '	map' → logprob: -17.250003814697266
    10. ' map' → logprob: -17.375003814697266

Token 30: '(float' (ID: 17830)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00014847563579678535
    2. ',int' → logprob: -9.37514877319336
    3. '(' → logprob: -10.75014877319336
    4. 'int' → logprob: -11.12514877319336
    5. ' (' → logprob: -11.25014877319336
    6. '<int' → logprob: -12.50014877319336
    7. ' int' → logprob: -12.75014877319336
    8. ')' → logprob: -13.25014877319336
    9. ']int' → logprob: -13.25014877319336
    10. '[int' → logprob: -13.50014877319336

Token 31: ',input' (ID: 123014)
  Prédit: ',input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.04307706281542778
    2. ',' → logprob: -3.168076992034912
    3. 'input' → logprob: -10.66807746887207
    4. ',float' → logprob: -11.04307746887207
    5. ' ,' → logprob: -11.41807746887207
    6. '(input' → logprob: -11.79307746887207
    7. ',int' → logprob: -11.91807746887207
    8. ',x' → logprob: -12.66807746887207
    9. ',in' → logprob: -13.04307746887207
    10. ',line' → logprob: -13.91807746887207

Token 32: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -2.816093228830141e-06
    2. '.readline' → logprob: -13.12500286102295
    3. '()' → logprob: -14.50000286102295
    4. '.split' → logprob: -16.125001907348633
    5. ' ().' → logprob: -16.250001907348633
    6. '(' → logprob: -17.125001907348633
    7. '.' → logprob: -17.250001907348633
    8. 'split' → logprob: -17.750001907348633
    9. '()))' → logprob: -18.750001907348633
    10. '   ' → logprob: -19.500001907348633

Token 33: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -4.787507714354433e-05
    2. 'rstrip' → logprob: -10.50004768371582
    3. 'strip' → logprob: -10.87504768371582
    4. ' split' → logprob: -13.62504768371582
    5. '(split' → logprob: -16.50004768371582
    6. 'read' → logprob: -16.75004768371582
    7. ' ' → logprob: -17.87504768371582
    8. 'spl' → logprob: -18.62504768371582
    9. '   ' → logprob: -18.87504768371582
    10. '```' → logprob: -19.00004768371582

Token 34: '()))' (ID: 16829)
  Prédit: '()))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.008488222025334835
    2. '))' → logprob: -5.133488178253174
    3. '()' → logprob: -6.258488178253174
    4. '())' → logprob: -7.633488178253174
    5. '())))' → logprob: -9.008488655090332
    6. '(' → logprob: -11.133488655090332
    7. ')))' → logprob: -11.758488655090332
    8. ')' → logprob: -12.383488655090332
    9. '()));' → logprob: -13.008488655090332
    10. '()))
' → logprob: -13.008488655090332

Token 35: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.010040088556706905
    2. ')]' → logprob: -4.635040283203125
    3. ' for' → logprob: -9.385040283203125
    4. ']' → logprob: -9.885040283203125
    5. 'for' → logprob: -10.260040283203125
    6. '))' → logprob: -10.885040283203125
    7. '()' → logprob: -11.010040283203125
    8. '),' → logprob: -11.010040283203125
    9. '())' → logprob: -11.385040283203125
    10. '   ' → logprob: -11.385040283203125

Token 36: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.11858376860618591
    2. ' range' → logprob: -2.6185836791992188
    3. ' _' → logprob: -3.3685836791992188
    4. 'range' → logprob: -5.493583679199219
    5. '_range' → logprob: -7.993583679199219
    6. ' in' → logprob: -10.868583679199219
    7. '	range' → logprob: -12.993583679199219
    8. ' ' → logprob: -13.243583679199219
    9. '_i' → logprob: -13.993583679199219
    10. '(range' → logprob: -13.993583679199219

Token 37: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.006150142289698124
    2. 'in' → logprob: -5.256150245666504
    3. 'range' → logprob: -7.131150245666504
    4. ' ' → logprob: -9.881150245666504
    5. ' range' → logprob: -9.881150245666504
    6. '  ' → logprob: -12.131150245666504
    7. '   ' → logprob: -13.881150245666504
    8. 's' → logprob: -13.881150245666504
    9. '_' → logprob: -14.131150245666504
    10. '```' → logprob: -14.131150245666504

Token 38: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -6.921253225300461e-05
    2. ' range' → logprob: -9.625069618225098
    3. '   ' → logprob: -13.375069618225098
    4. '  ' → logprob: -14.250069618225098
    5. ' ' → logprob: -14.625069618225098
    6. '(range' → logprob: -16.25006866455078
    7. '[' → logprob: -16.25006866455078
    8. '	range' → logprob: -16.62506866455078
    9. '    ' → logprob: -16.75006866455078
    10. '```' → logprob: -17.25006866455078

Token 39: '(M' (ID: 6103)
  Prédit: '(M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(M' → logprob: -0.011114083230495453
    2. '(N' → logprob: -4.511114120483398
    3. '(' → logprob: -9.636114120483398
    4. ')' → logprob: -15.136114120483398
    5. 'M' → logprob: -15.386114120483398
    6. ' (' → logprob: -16.5111141204834
    7. '(int' → logprob: -16.6361141204834
    8. '   ' → logprob: -16.6361141204834
    9. '(
' → logprob: -16.8861141204834
    10. '(n' → logprob: -17.3861141204834

Token 40: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -5.2166411478538066e-05
    2. ')' → logprob: -10.375052452087402
    3. ']' → logprob: -11.375052452087402
    4. ' )' → logprob: -12.625052452087402
    5. ')])' → logprob: -12.875052452087402
    6. '])]' → logprob: -13.875052452087402
    7. '))' → logprob: -14.125052452087402
    8. ')]
' → logprob: -14.250052452087402
    9. '])' → logprob: -15.125052452087402
    10. ')],' → logprob: -15.375052452087402

Token 41: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.45341363549232483
    2. '
' → logprob: -1.2034136056900024
    3. '<|end|>' → logprob: -3.203413724899292
    4. '    
' → logprob: -4.078413486480713
    5. ' for' → logprob: -6.203413486480713
    6. 'for' → logprob: -6.453413486480713
    7. ')' → logprob: -7.328413486480713
    8. '```' → logprob: -7.703413486480713
    9. '  
' → logprob: -8.078413963317871
    10. ' 
' → logprob: -8.578413963317871

Token 42: ' #' (ID: 1069)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -1.01325523853302
    2. '   ' → logprob: -1.63825523853302
    3. 'for' → logprob: -2.2632551193237305
    4. ' result' → logprob: -2.7632551193237305
    5. ' for' → logprob: -3.1382551193237305
    6. 'v' → logprob: -3.6382551193237305
    7. 'cos' → logprob: -4.2632551193237305
    8. 'd' → logprob: -4.3882551193237305
    9. 's' → logprob: -4.3882551193237305
    10. '    
' → logprob: -4.3882551193237305

Token 43: ' Pre' (ID: 4659)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.9939374923706055
    2. ' sum' → logprob: -2.3689374923706055
    3. ' result' → logprob: -2.4939374923706055
    4. 'for' → logprob: -2.4939374923706055
    5. ' dot' → logprob: -2.7439374923706055
    6. ' ' → logprob: -2.7439374923706055
    7. ' dp' → logprob: -3.2439374923706055
    8. ' #' → logprob: -3.4939374923706055
    9. 'sum' → logprob: -3.6189374923706055
    10. ' norm' → logprob: -3.6189374923706055

Token 44: 'compute' (ID: 54521)
  Prédit: 'vious'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vious' → logprob: -1.3884886503219604
    2. 'sum' → logprob: -1.3884886503219604
    3. 'c' → logprob: -2.51348876953125
    4. 'v' → logprob: -2.63848876953125
    5. 'compute' → logprob: -2.76348876953125
    6. 'processing' → logprob: -2.76348876953125
    7. 'dict' → logprob: -3.13848876953125
    8. 'process' → logprob: -3.51348876953125
    9. 'viously' → logprob: -4.01348876953125
    10. 'd' → logprob: -4.13848876953125

Token 45: ' dot' (ID: 16579)
  Prédit: ' norms'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' norms' → logprob: -0.8612993955612183
    2. ' distances' → logprob: -1.4862993955612183
    3. ' dot' → logprob: -2.361299514770508
    4. 'norm' → logprob: -3.236299514770508
    5. ' norm' → logprob: -3.361299514770508
    6. ' vectors' → logprob: -3.611299514770508
    7. ' cos' → logprob: -3.861299514770508
    8. ' angles' → logprob: -4.111299514770508
    9. ' lengths' → logprob: -4.111299514770508
    10. ' cosine' → logprob: -4.111299514770508

Token 46: ' products' (ID: 3891)
  Prédit: '_products'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_products' → logprob: -0.7538788318634033
    2. '(' → logprob: -1.8788788318634033
    3. '_product' → logprob: -2.0038788318634033
    4. ' ' → logprob: -2.0038788318634033
    5. '_' → logprob: -2.8788788318634033
    6. ' products' → logprob: -3.5038788318634033
    7. 'products' → logprob: -5.378878593444824
    8. ' product' → logprob: -5.378878593444824
    9. '<|end|>' → logprob: -6.253878593444824
    10. ' (' → logprob: -6.378878593444824

Token 47: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7937768697738647
    2. '\' → logprob: -1.9187768697738647
    3. '(' → logprob: -2.2937769889831543
    4. 's' → logprob: -2.9187769889831543
    5. '\n' → logprob: -3.1687769889831543
    6. ' ' → logprob: -3.1687769889831543
    7. '<|end|>' → logprob: -3.5437769889831543
    8. 'vectors' → logprob: -3.7937769889831543
    9. '[' → logprob: -4.043776988983154
    10. ' vectors' → logprob: -4.543776988983154

Token 48: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3051494061946869
    2. ' ' → logprob: -2.3051493167877197
    3. ' for' → logprob: -3.4301493167877197
    4. 'for' → logprob: -3.4301493167877197
    5. '    
' → logprob: -4.305149555206299
    6. '\n' → logprob: -4.430149555206299
    7. '\' → logprob: -4.555149555206299
    8. '  ' → logprob: -4.680149555206299
    9. 'vectors' → logprob: -4.930149555206299
    10. '    ' → logprob: -5.180149555206299

Token 49: ' dot' (ID: 16579)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.0433651208877563
    2. ' dp' → logprob: -1.1683651208877563
    3. ' dot' → logprob: -2.668365001678467
    4. 'dot' (adapté à ' dot') → logprob: -2.668365001678467
    5. '   ' → logprob: -3.168365001678467
    6. ' ' → logprob: -3.793365001678467
    7. ' dots' → logprob: -3.918365001678467
    8. 'd' → logprob: -4.293365001678467
    9. 'vectors' → logprob: -4.418365001678467
    10. '```' → logprob: -4.543365001678467

Token 50: '=[[' (ID: 112637)
  Prédit: '_products'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_products' → logprob: -0.018345076590776443
    2. 's' → logprob: -4.393344879150391
    3. '_' → logprob: -5.768344879150391
    4. '_product' → logprob: -7.018344879150391
    5. '_pro' → logprob: -8.01834487915039
    6. 'products' → logprob: -8.01834487915039
    7. '_vectors' → logprob: -8.14334487915039
    8. ' ' → logprob: -8.51834487915039
    9. '_s' → logprob: -8.76834487915039
    10. '_matrix' → logprob: -9.14334487915039

Token 51: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0011598621495068073
    2. 'vectors' → logprob: -7.75115966796875
    3. 'sum' → logprob: -8.12615966796875
    4. 'math' → logprob: -8.62615966796875
    5. ' ' → logprob: -9.25115966796875
    6. ' vectors' → logprob: -9.37615966796875
    7. '1' → logprob: -10.37615966796875
    8. ' sum' → logprob: -11.25115966796875
    9. ' math' → logprob: -11.50115966796875
    10. 'None' → logprob: -12.37615966796875

Token 52: ']*' (ID: 18579)
  Prédit: ']*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*' → logprob: -0.13500036299228668
    2. '.' → logprob: -2.635000467300415
    3. ' for' → logprob: -3.135000467300415
    4. ']' → logprob: -5.010000228881836
    5. ']*(' → logprob: -6.260000228881836
    6. 'for' → logprob: -6.260000228881836
    7. '   ' → logprob: -8.385000228881836
    8. '0' → logprob: -9.010000228881836
    9. ' ' → logprob: -9.760000228881836
    10. ')*' → logprob: -9.885000228881836

Token 53: 'M' (ID: 44)
  Prédit: 'M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.001924706157296896
    2. '(M' → logprob: -6.376924514770508
    3. '(' → logprob: -9.126924514770508
    4. 'N' → logprob: -9.501924514770508
    5. ' M' → logprob: -10.626924514770508
    6. '(N' → logprob: -12.501924514770508
    7. ' (' → logprob: -12.626924514770508
    8. '   ' → logprob: -12.876924514770508
    9. ' ' → logprob: -13.501924514770508
    10. 'len' → logprob: -13.751924514770508

Token 54: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.11304952949285507
    2. 'for' → logprob: -2.2380495071411133
    3. ')' → logprob: -9.238049507141113
    4. ']' → logprob: -9.488049507141113
    5. ' ' → logprob: -10.613049507141113
    6. '	for' → logprob: -10.988049507141113
    7. '   ' → logprob: -11.988049507141113
    8. ' ]' → logprob: -12.988049507141113
    9. '```' → logprob: -13.363049507141113
    10. ')]' → logprob: -14.488049507141113

Token 55: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.619317352771759
    2. ' _' → logprob: -0.869317352771759
    3. ' range' → logprob: -3.4943172931671143
    4. '_range' → logprob: -4.994317531585693
    5. '<|end|>' → logprob: -6.494317531585693
    6. 'range' → logprob: -6.744317531585693
    7. '_i' → logprob: -6.994317531585693
    8. ' in' → logprob: -7.244317531585693
    9. '<|end|>' → logprob: -7.494317531585693
    10. ' i' → logprob: -8.619317054748535

Token 56: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.031020019203424454
    2. ' range' → logprob: -3.531019926071167
    3. '(range' → logprob: -7.156020164489746
    4. 'in' → logprob: -7.906020164489746
    5. ' in' → logprob: -9.531020164489746
    6. '(' → logprob: -10.156020164489746
    7. '	range' → logprob: -12.906020164489746
    8. '_range' → logprob: -13.781020164489746
    9. ' ' → logprob: -13.781020164489746
    10. '[' → logprob: -14.031020164489746

Token 57: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0052360063418745995
    2. ' range' → logprob: -5.2552361488342285
    3. '(range' → logprob: -13.13023567199707
    4. 'M' → logprob: -16.00523567199707
    5. '	range' → logprob: -16.63023567199707
    6. '[' → logprob: -16.75523567199707
    7. ')' → logprob: -18.38023567199707
    8. 'rang' → logprob: -19.25523567199707
    9. '[M' → logprob: -19.25523567199707
    10. '.range' → logprob: -19.75523567199707

Token 58: '(M' (ID: 6103)
  Prédit: '(M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(M' → logprob: -0.0001415618316968903
    2. '(' → logprob: -9.250141143798828
    3. ' (' → logprob: -10.625141143798828
    4. 'M' → logprob: -11.000141143798828
    5. ')' → logprob: -13.750141143798828
    6. ' M' → logprob: -14.250141143798828
    7. '(N' → logprob: -14.250141143798828
    8. '   ' → logprob: -14.500141143798828
    9. ')(' → logprob: -15.000141143798828
    10. '((' → logprob: -15.125141143798828

Token 59: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0003794336807914078
    2. ']' → logprob: -8.12537956237793
    3. ')' → logprob: -9.62537956237793
    4. '   ' → logprob: -11.62537956237793
    5. '])]' → logprob: -12.87537956237793
    6. ')]
' → logprob: -13.12537956237793
    7. ')])' → logprob: -14.00037956237793
    8. ' )' → logprob: -14.37537956237793
    9. '')]' → logprob: -14.50037956237793
    10. ' ]' → logprob: -14.62537956237793

Token 60: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.1139885187149048
    2. '   ' → logprob: -1.3639885187149048
    3. ' for' → logprob: -1.6139885187149048
    4. 'for' → logprob: -1.6139885187149048
    5. '<|end|>' → logprob: -4.988988399505615
    6. '\n' → logprob: -5.613988399505615
    7. '    
' → logprob: -6.363988399505615
    8. '\' → logprob: -7.363988399505615
    9. '```' → logprob: -7.363988399505615
    10. '' → logprob: -7.488988399505615

Token 61: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.4771355092525482
    2. ' for' → logprob: -0.9771355390548706
    3. '
' → logprob: -6.35213565826416
    4. '   ' → logprob: -6.97713565826416
    5. '```' → logprob: -8.10213565826416
    6. ' ' → logprob: -10.72713565826416
    7. '' → logprob: -11.10213565826416
    8. ' 
' → logprob: -11.97713565826416
    9. '    
' → logprob: -11.97713565826416
    10. '	for' → logprob: -12.10213565826416

Token 62: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.004729634150862694
    2. 'i' → logprob: -5.379729747772217
    3. ' ' → logprob: -9.754729270935059
    4. ' j' → logprob: -10.004729270935059
    5. '	i' → logprob: -13.004729270935059
    6. ' ' → logprob: -13.754729270935059
    7. 'j' → logprob: -14.504729270935059
    8. '_i' → logprob: -14.504729270935059
    9. '_' → logprob: -14.879729270935059
    10. '  ' → logprob: -15.254729270935059

Token 63: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0047098184004426
    2. 'in' → logprob: -5.379709720611572
    3. ' ' → logprob: -9.37971019744873
    4. ' i' → logprob: -13.25471019744873
    5. '	in' → logprob: -13.62971019744873
    6. '  ' → logprob: -14.25471019744873
    7. '   ' → logprob: -14.87971019744873
    8. '```' → logprob: -15.87971019744873
    9. ')' → logprob: -16.004709243774414
    10. '_' → logprob: -16.004709243774414

Token 64: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.029750604182481766
    2. 'range' → logprob: -3.5297505855560303
    3. ' ' → logprob: -15.90475082397461
    4. '(range' → logprob: -17.27975082397461
    5. '	range' → logprob: -17.90475082397461
    6. ' rang' → logprob: -18.77975082397461
    7. '  ' → logprob: -18.90475082397461
    8. ' xrange' → logprob: -19.15475082397461
    9. '   ' → logprob: -19.52975082397461
    10. ' ran' → logprob: -19.90475082397461

Token 65: '(M' (ID: 6103)
  Prédit: '(M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(M' → logprob: -0.000981243560090661
    2. '(' → logprob: -7.250981330871582
    3. ' (' → logprob: -8.250981330871582
    4. ' M' → logprob: -11.750981330871582
    5. 'M' → logprob: -13.875981330871582
    6. '(m' → logprob: -14.750981330871582
    7. '   ' → logprob: -15.250981330871582
    8. '(i' → logprob: -15.250981330871582
    9. '(
' → logprob: -15.375981330871582
    10. ' ' → logprob: -15.375981330871582

Token 66: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0004282851587049663
    2. '):
' → logprob: -8.250428199768066
    3. ')' → logprob: -9.000428199768066
    4. ' ):' → logprob: -10.375428199768066
    5. ':' → logprob: -11.875428199768066
    6. '   ' → logprob: -13.125428199768066
    7. ']:' → logprob: -13.500428199768066
    8. '+' → logprob: -14.250428199768066
    9. ' ' → logprob: -15.000428199768066
    10. ']):' → logprob: -15.250428199768066

Token 67: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3665553629398346
    2. ' for' → logprob: -1.6165553331375122
    3. '       ' → logprob: -2.2415554523468018
    4. '	for' → logprob: -7.241555213928223
    5. '    ' → logprob: -7.366555213928223
    6. 'for' → logprob: -8.491555213928223
    7. ':' → logprob: -8.616555213928223
    8. ' ' → logprob: -9.616555213928223
    9. '<|end|>' → logprob: -9.741555213928223
    10. '+' → logprob: -9.866555213928223

Token 68: ' vi' (ID: 2640)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6969875693321228
    2. 'for' → logprob: -0.6969875693321228
    3. '   ' → logprob: -5.571987628936768
    4. '	for' → logprob: -10.69698715209961
    5. '```' → logprob: -12.94698715209961
    6. ' ' → logprob: -13.07198715209961
    7. '       ' → logprob: -14.07198715209961
    8. ' j' → logprob: -14.44698715209961
    9. 'j' → logprob: -14.44698715209961
    10. 'range' → logprob: -15.07198715209961

Token 69: '=v' (ID: 89140)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6378172039985657
    2. ']' → logprob: -1.762817144393921
    3. ']=' → logprob: -2.262817144393921
    4. ' =' → logprob: -2.762817144393921
    5. '][' → logprob: -3.387817144393921
    6. 'ectors' → logprob: -4.0128173828125
    7. ')' → logprob: -4.3878173828125
    8. 's' → logprob: -5.0128173828125
    9. ')=' → logprob: -5.0128173828125
    10. '[' → logprob: -5.1378173828125

Token 70: 'ectors' (ID: 27421)
  Prédit: 'ectors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ectors' → logprob: -0.0008970508933998644
    2. 'vectors' → logprob: -7.12589693069458
    3. 'ctors' → logprob: -9.750897407531738
    4. 'e' → logprob: -11.875897407531738
    5. 'ector' → logprob: -12.000897407531738
    6. '   ' → logprob: -12.375897407531738
    7. '_vectors' → logprob: -12.500897407531738
    8. '[' → logprob: -12.875897407531738
    9. 'Vectors' → logprob: -12.875897407531738
    10. '```' → logprob: -13.125897407531738

Token 71: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0040343524888157845
    2. '[' → logprob: -5.629034519195557
    3. '[j' → logprob: -7.879034519195557
    4. '[I' → logprob: -10.754034042358398
    5. '][' → logprob: -11.754034042358398
    6. '[
' → logprob: -11.879034042358398
    7. '[s' → logprob: -12.129034042358398
    8. ']' → logprob: -12.879034042358398
    9. 'i' → logprob: -13.629034042358398
    10. '[m' → logprob: -13.879034042358398

Token 72: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.8622372150421143
    2. ')
' → logprob: -0.9872372150421143
    3. ']' → logprob: -2.4872372150421143
    4. ')' → logprob: -2.7372372150421143
    5. '   ' → logprob: -3.1122372150421143
    6. '       ' → logprob: -5.112236976623535
    7. '
' → logprob: -5.612236976623535
    8. ' ' → logprob: -7.237236976623535
    9. ' )
' → logprob: -7.487236976623535
    10. ' ]
' → logprob: -7.487236976623535

Token 73: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4826515018939972
    2. '   ' → logprob: -0.9826514720916748
    3. ' for' → logprob: -4.857651710510254
    4. '<|end|>' → logprob: -7.482651710510254
    5. 'for' → logprob: -9.232651710510254
    6. '<|end|>' → logprob: -10.482651710510254
    7. ',' → logprob: -11.107651710510254
    8. ' ' → logprob: -11.482651710510254
    9. '	for' → logprob: -11.732651710510254
    10. '    
' → logprob: -11.732651710510254

Token 74: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.582204282283783
    2. 'for' (adapté à ' for') → logprob: -0.832204282283783
    3. '   ' → logprob: -5.082204341888428
    4. '       ' → logprob: -11.08220386505127
    5. 'j' → logprob: -11.58220386505127
    6. '    ' → logprob: -12.08220386505127
    7. ' j' → logprob: -12.58220386505127
    8. '	for' → logprob: -12.95720386505127
    9. ' ' → logprob: -13.33220386505127
    10. 'v' → logprob: -14.33220386505127

Token 75: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.6128014326095581
    2. 'j' → logprob: -1.237801432609558
    3. ' range' → logprob: -1.987801432609558
    4. 'range' → logprob: -3.4878015518188477
    5. 'i' → logprob: -7.987801551818848
    6. ' i' → logprob: -8.487801551818848
    7. ' in' → logprob: -10.612801551818848
    8. ' ' → logprob: -11.987801551818848
    9. 'in' → logprob: -12.862801551818848
    10. '(range' → logprob: -13.737801551818848

Token 76: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.002509904792532325
    2. 'in' → logprob: -6.002510070800781
    3. 'range' → logprob: -11.127510070800781
    4. ' range' → logprob: -11.127510070800781
    5. ' ' → logprob: -12.752510070800781
    6. ' i' → logprob: -14.377510070800781
    7. '   ' → logprob: -15.127510070800781
    8. '	in' → logprob: -15.127510070800781
    9. '(range' → logprob: -15.252510070800781
    10. '<|end|>' → logprob: -15.377510070800781

Token 77: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.011078826151788235
    2. 'range' → logprob: -4.511078834533691
    3. '(range' → logprob: -10.886078834533691
    4. ' i' → logprob: -11.511078834533691
    5. ' ' → logprob: -13.886078834533691
    6. 'i' → logprob: -14.386078834533691
    7. '	range' → logprob: -14.511078834533691
    8. '_range' → logprob: -17.136077880859375
    9. ' M' → logprob: -17.136077880859375
    10. '(i' → logprob: -17.386077880859375

Token 78: '(i' (ID: 3649)
  Prédit: '(M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(M' → logprob: -0.07915657758712769
    2. '(i' → logprob: -2.5791566371917725
    3. ' (' → logprob: -8.579156875610352
    4. '(' → logprob: -9.579156875610352
    5. ' i' → logprob: -12.954156875610352
    6. '(j' → logprob: -13.079156875610352
    7. '(m' → logprob: -13.454156875610352
    8. ' M' → logprob: -14.079156875610352
    9. '(
' → logprob: -14.454156875610352
    10. 'M' → logprob: -14.454156875610352

Token 79: ',M' (ID: 54127)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04355217516422272
    2. ',M' → logprob: -3.4185521602630615
    3. '+' → logprob: -4.793552398681641
    4. ',i' → logprob: -7.168552398681641
    5. ' ,' → logprob: -8.16855239868164
    6. ',N' → logprob: -8.54355239868164
    7. ',len' → logprob: -9.16855239868164
    8. ',j' → logprob: -9.66855239868164
    9. ',m' → logprob: -9.79355239868164
    10. ',n' → logprob: -10.79355239868164

Token 80: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0020332036074250937
    2. '):
' → logprob: -6.752033233642578
    3. ',' → logprob: -7.252033233642578
    4. ')' → logprob: -9.627033233642578
    5. ' ):' → logprob: -10.627033233642578
    6. '+' → logprob: -10.627033233642578
    7. ':' → logprob: -11.127033233642578
    8. ',i' → logprob: -11.877033233642578
    9. ')):' → logprob: -12.627033233642578
    10. '   ' → logprob: -12.877033233642578

Token 81: '           ' (ID: 352)
  Prédit: '        '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '        ' → logprob: -0.7611886858940125
    2. '           ' → logprob: -0.8861886858940125
    3. '       ' → logprob: -2.5111887454986572
    4. '            ' → logprob: -4.261188507080078
    5. ' ' → logprob: -4.761188507080078
    6. '    ' → logprob: -4.761188507080078
    7. '<|end|>' → logprob: -5.886188507080078
    8. '   ' → logprob: -6.386188507080078
    9. '         ' → logprob: -7.761188507080078
    10. '          ' → logprob: -7.886188507080078

Token 82: ' v' (ID: 323)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.7305507063865662
    2. ' dot' → logprob: -1.230550765991211
    3. '           ' → logprob: -2.605550765991211
    4. ' sum' → logprob: -3.605550765991211
    5. ' dp' → logprob: -3.605550765991211
    6. ' d' → logprob: -3.980550765991211
    7. 's' → logprob: -4.355550765991211
    8. ' v' → logprob: -4.730550765991211
    9. ' ' → logprob: -4.855550765991211
    10. 'dot' → logprob: -5.105550765991211

Token 83: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.8908587662735954e-05
    2. 'ectors' → logprob: -11.625019073486328
    3. 'i' → logprob: -12.250019073486328
    4. '[j' → logprob: -13.250019073486328
    5. '_j' → logprob: -13.625019073486328
    6. 'ector' → logprob: -14.000019073486328
    7. ' j' → logprob: -14.625019073486328
    8. '	j' → logprob: -14.875019073486328
    9. 'vj' → logprob: -16.000019073486328
    10. 's' → logprob: -16.875019073486328

Token 84: '=v' (ID: 89140)
  Prédit: '=v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=v' → logprob: -0.12920303642749786
    2. '=' → logprob: -2.1292030811309814
    3. ' =' → logprob: -6.129202842712402
    4. '=
' → logprob: -10.504202842712402
    5. '=

' → logprob: -10.629202842712402
    6. ' vectors' → logprob: -11.504202842712402
    7. '=[' → logprob: -11.754202842712402
    8. 'vectors' → logprob: -12.254202842712402
    9. '=s' → logprob: -12.504202842712402
    10. ']=' → logprob: -13.129202842712402

Token 85: 'ectors' (ID: 27421)
  Prédit: 'ectors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ectors' → logprob: -0.0028449371457099915
    2. 'vectors' → logprob: -6.00284481048584
    3. 'ector' → logprob: -9.00284481048584
    4. 'ctors' → logprob: -9.12784481048584
    5. '   ' → logprob: -10.00284481048584
    6. '```' → logprob: -10.75284481048584
    7. 'ec' → logprob: -11.37784481048584
    8. 'ect' → logprob: -11.37784481048584
    9. '       ' → logprob: -12.00284481048584
    10. '[' → logprob: -12.00284481048584

Token 86: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -1.771655115589965e-05
    2. '[' → logprob: -11.000018119812012
    3. '[i' → logprob: -14.750018119812012
    4. '[v' → logprob: -15.625018119812012
    5. ' [' → logprob: -16.000017166137695
    6. '[
' → logprob: -16.125017166137695
    7. '[js' → logprob: -16.875017166137695
    8. 'j' → logprob: -16.875017166137695
    9. '   ' → logprob: -17.500017166137695
    10. '[s' → logprob: -17.625017166137695

Token 87: ']
' (ID: 1592)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.5069970488548279
    2. ')' → logprob: -1.3819971084594727
    3. '           ' → logprob: -2.0069971084594727
    4. ']
' → logprob: -4.881997108459473
    5. ']' → logprob: -5.756997108459473
    6. '
' → logprob: -8.256997108459473
    7. ' )
' → logprob: -8.506997108459473
    8. '       ' → logprob: -8.506997108459473
    9. ')
' → logprob: -8.506997108459473
    10. '               ' → logprob: -8.881997108459473

Token 88: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00033581978641450405
    2. '       ' → logprob: -8.250335693359375
    3. '          ' → logprob: -11.125335693359375
    4. '.' → logprob: -12.000335693359375
    5. '<|end|>' → logprob: -12.000335693359375
    6. '            
' → logprob: -12.125335693359375
    7. ',' → logprob: -12.125335693359375
    8. '            ' → logprob: -12.625335693359375
    9. '   ' → logprob: -12.625335693359375
    10. '=' → logprob: -12.875335693359375

Token 89: ' s' (ID: 265)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5546961426734924
    2. 'd' → logprob: -2.3046960830688477
    3. 'dot' → logprob: -2.5546960830688477
    4. ' dot' → logprob: -2.8046960830688477
    5. ' s' → logprob: -3.0546960830688477
    6. 's' (adapté à ' s') → logprob: -3.3046960830688477
    7. 'dp' → logprob: -3.5546960830688477
    8. ' d' → logprob: -3.8046960830688477
    9. '   ' → logprob: -3.9296960830688477
    10. ' dp' → logprob: -3.9296960830688477

Token 90: '=' (ID: 28)
  Prédit: 'um'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'um' → logprob: -0.16375784575939178
    2. '=' → logprob: -1.9137578010559082
    3. 'u' → logprob: -6.413757801055908
    4. '=sum' → logprob: -7.038757801055908
    5. '=u' → logprob: -7.913757801055908
    6. 'q' → logprob: -9.413758277893066
    7. '_=' → logprob: -9.538758277893066
    8. 'umm' → logprob: -9.538758277893066
    9. '=d' → logprob: -9.913758277893066
    10. '=np' → logprob: -10.663758277893066

Token 91: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5234748125076294
    2. 'sum' → logprob: -0.8984748125076294
    3. ' sum' → logprob: -8.02347469329834
    4. ' ' → logprob: -11.02347469329834
    5. '   ' → logprob: -13.27347469329834
    6. 's' → logprob: -14.02347469329834
    7. '=sum' → logprob: -14.02347469329834
    8. '(sum' → logprob: -14.14847469329834
    9. '	sum' → logprob: -14.14847469329834
    10. 'math' → logprob: -14.89847469329834

Token 92: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5936629176139832
    2. 'for' → logprob: -1.218662977218628
    3. '<|end|>' → logprob: -2.843662977218628
    4. '.' → logprob: -3.718662977218628
    5. '<|end|>' → logprob: -4.093662738800049
    6. ' for' → logprob: -4.093662738800049
    7. '0' → logprob: -4.343662738800049
    8. '           ' → logprob: -4.843662738800049
    9. ' ' → logprob: -5.218662738800049
    10. '            ' → logprob: -6.968662738800049

Token 93: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.19685131311416626
    2. '
' → logprob: -2.4468512535095215
    3. 'for' → logprob: -3.4468512535095215
    4. ' for' → logprob: -3.8218512535095215
    5. 'k' → logprob: -4.9468512535095215
    6. '               ' → logprob: -5.0718512535095215
    7. '.' → logprob: -5.4468512535095215
    8. '   ' → logprob: -5.8218512535095215
    9. ' k' → logprob: -5.9468512535095215
    10. ';k' → logprob: -6.1968512535095215

Token 94: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.040004950016736984
    2. ' for' → logprob: -3.6650049686431885
    3. 'k' → logprob: -4.415004730224609
    4. ' k' → logprob: -7.165004730224609
    5. 'len' → logprob: -7.915004730224609
    6. '           ' → logprob: -8.41500473022461
    7. 'n' → logprob: -9.41500473022461
    8. 'K' → logprob: -10.79000473022461
    9. '               ' → logprob: -12.04000473022461
    10. 'd' → logprob: -12.04000473022461

Token 95: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.018156850710511208
    2. ' k' → logprob: -4.018157005310059
    3. 'd' → logprob: -12.768157005310059
    4. 'x' → logprob: -13.143157005310059
    5. 't' → logprob: -14.518157005310059
    6. ' ' → logprob: -14.643157005310059
    7. 'a' → logprob: -14.893157005310059
    8. 'l' → logprob: -15.768157005310059
    9. 'p' → logprob: -15.893157005310059
    10. ' d' → logprob: -16.268156051635742

Token 96: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.002191064180806279
    2. 'in' → logprob: -6.127191066741943
    3. ' ' → logprob: -13.252190589904785
    4. '   ' → logprob: -13.377190589904785
    5. 'range' → logprob: -14.127190589904785
    6. '	in' → logprob: -14.502190589904785
    7. ' range' → logprob: -14.627190589904785
    8. ',' → logprob: -15.127190589904785
    9. '    ' → logprob: -15.502190589904785
    10. '  ' → logprob: -15.752190589904785

Token 97: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.20141568779945374
    2. ' range' → logprob: -1.7014156579971313
    3. '	range' → logprob: -13.451416015625
    4. '(range' → logprob: -14.951416015625
    5. ' ' → logprob: -15.576416015625
    6. '   ' → logprob: -16.826416015625
    7. 'rang' → logprob: -16.826416015625
    8. 'ran' → logprob: -17.076416015625
    9. '_range' → logprob: -17.326416015625
    10. ' xrange' → logprob: -17.451416015625

Token 98: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.019451912492513657
    2. '(len' → logprob: -4.394452095031738
    3. '(' → logprob: -5.394452095031738
    4. 'N' → logprob: -6.894452095031738
    5. 'len' → logprob: -6.894452095031738
    6. '3' → logprob: -9.019452095031738
    7. ' (' → logprob: -10.019452095031738
    8. '10' → logprob: -10.394452095031738
    9. '(n' → logprob: -10.769452095031738
    10. '(
' → logprob: -10.894452095031738

Token 99: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.18275676667690277
    2. '):' → logprob: -1.807756781578064
    3. '           ' → logprob: -6.5577569007873535
    4. '               ' → logprob: -6.9327569007873535
    5. ')' → logprob: -8.182756423950195
    6. ':' → logprob: -9.182756423950195
    7. '):
' → logprob: -9.557756423950195
    8. ':
' → logprob: -9.932756423950195
    9. ' ):
' → logprob: -10.557756423950195
    10. '):

' → logprob: -10.682756423950195

Token 100: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.13287879526615143
    2. 's' → logprob: -2.6328787803649902
    3. ' s' → logprob: -3.0078787803649902
    4. ' ' → logprob: -6.13287878036499
    5. '           ' → logprob: -7.50787878036499
    6. '              ' → logprob: -9.257879257202148
    7. '<|end|>' → logprob: -9.882879257202148
    8. '            ' → logprob: -10.007879257202148
    9. ')' → logprob: -10.132879257202148
    10. '                ' → logprob: -10.382879257202148

Token 101: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' (adapté à ' s') → logprob: -0.5250656008720398
    2. ' s' → logprob: -0.9000656008720398
    3. '               ' → logprob: -6.4000654220581055
    4. '                   ' → logprob: -9.150065422058105
    5. '                ' → logprob: -9.275065422058105
    6. '           ' → logprob: -10.525065422058105
    7. '            ' → logprob: -10.525065422058105
    8. ' ' → logprob: -12.525065422058105
    9. '              ' → logprob: -12.650065422058105
    10. '                       ' → logprob: -12.650065422058105

Token 102: '+=' (ID: 18287)
  Prédit: '+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.04922863841056824
    2. ' +=' → logprob: -3.0492286682128906
    3. '+' → logprob: -7.674228668212891
    4. '+=(' → logprob: -9.04922866821289
    5. ']+=' → logprob: -10.17422866821289
    6. '+="' → logprob: -11.67422866821289
    7. '+='' → logprob: -11.79922866821289
    8. '            ' → logprob: -14.17422866821289
    9. '           ' → logprob: -14.67422866821289
    10. '               ' → logprob: -14.67422866821289

Token 103: 'vi' (ID: 4627)
  Prédit: 'vi'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vi' → logprob: -3.130576806142926e-05
    2. ' vi' → logprob: -10.375031471252441
    3. 'v' → logprob: -18.750030517578125
    4. '   ' → logprob: -18.875030517578125
    5. '(' → logprob: -19.625030517578125
    6. '_vi' → logprob: -20.000030517578125
    7. 've' → logprob: -20.125030517578125
    8. 'wi' → logprob: -20.500030517578125
    9. 'vj' → logprob: -20.750030517578125
    10. ' ' → logprob: -20.750030517578125

Token 104: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -5.080963092041202e-06
    2. '[' → logprob: -12.750004768371582
    3. '[j' → logprob: -14.250004768371582
    4. 'k' → logprob: -14.250004768371582
    5. '[key' → logprob: -15.250004768371582
    6. ' [' → logprob: -15.625004768371582
    7. '[v' → logprob: -15.625004768371582
    8. '```' → logprob: -16.6250057220459
    9. '[K' → logprob: -16.7500057220459
    10. '*k' → logprob: -17.3750057220459

Token 105: ']*' (ID: 18579)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.47660017013549805
    2. '*v' → logprob: -0.976600170135498
    3. ' *' → logprob: -6.476600170135498
    4. '*j' → logprob: -6.976600170135498
    5. '*k' → logprob: -11.101600646972656
    6. 'vj' → logprob: -11.101600646972656
    7. '*s' → logprob: -12.226600646972656
    8. ']*' → logprob: -12.976600646972656
    9. ')*' → logprob: -13.101600646972656
    10. '*q' → logprob: -13.851600646972656

Token 106: 'vj' (ID: 153605)
  Prédit: 'vj'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vj' → logprob: -0.0019470835104584694
    2. ' v' → logprob: -6.251946926116943
    3. 'v' → logprob: -11.126947402954102
    4. 'vk' → logprob: -13.376947402954102
    5. '	v' → logprob: -14.626947402954102
    6. 'wj' → logprob: -15.126947402954102
    7. 'vi' → logprob: -15.501947402954102
    8. '[v' → logprob: -15.626947402954102
    9. 'vq' → logprob: -15.626947402954102
    10. ' ' → logprob: -15.626947402954102

Token 107: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -1.1398757123970427e-05
    2. '[' → logprob: -12.125011444091797
    3. 'k' → logprob: -12.125011444091797
    4. '[j' → logprob: -15.750011444091797
    5. ' [' → logprob: -15.875011444091797
    6. '[
' → logprob: -15.875011444091797
    7. '[key' → logprob: -16.500011444091797
    8. ' k' → logprob: -17.750011444091797
    9. '```' → logprob: -17.750011444091797
    10. ' ' → logprob: -19.000011444091797

Token 108: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.17798636853694916
    2. ']' → logprob: -2.1779863834381104
    3. '<|end|>' → logprob: -3.9279863834381104
    4. '           ' → logprob: -4.052986145019531
    5. '
' → logprob: -4.927986145019531
    6. '<|end|>' → logprob: -6.427986145019531
    7. '               ' → logprob: -6.552986145019531
    8. ')
' → logprob: -7.802986145019531
    9. ')]' → logprob: -8.302986145019531
    10. ')return' → logprob: -8.427986145019531

Token 109: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05281125381588936
    2. '
' → logprob: -3.0528111457824707
    3. '            
' → logprob: -5.552811145782471
    4. ' 
' → logprob: -9.177811622619629
    5. '
' → logprob: -9.302811622619629
    6. '    
' → logprob: -10.302811622619629
    7. '  
' → logprob: -10.802811622619629
    8. '               ' → logprob: -11.302811622619629
    9. '          ' → logprob: -11.427811622619629
    10. '        
' → logprob: -11.677811622619629

Token 110: ' dot' (ID: 16579)
  Prédit: 'dot'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dot' (adapté à ' dot') → logprob: -0.017919180914759636
    2. ' dot' → logprob: -4.142919063568115
    3. '           ' → logprob: -6.517919063568115
    4. '.dot' → logprob: -9.142919540405273
    5. '       ' → logprob: -9.267919540405273
    6. '
' → logprob: -9.392919540405273
    7. '(dot' → logprob: -9.892919540405273
    8. '   ' → logprob: -10.642919540405273
    9. '-dot' → logprob: -10.892919540405273
    10. ' ' → logprob: -12.142919540405273

Token 111: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.127333340875339e-06
    2. '[' → logprob: -13.000003814697266
    3. '[j' → logprob: -13.750003814697266
    4. '[I' → logprob: -14.875003814697266
    5. '[s' → logprob: -16.375003814697266
    6. '][' → logprob: -16.625003814697266
    7. ' [' → logprob: -17.000003814697266
    8. '[k' → logprob: -17.375003814697266
    9. '[
' → logprob: -17.375003814697266
    10. '```' → logprob: -17.500003814697266

Token 112: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0013689270708709955
    2. ']' → logprob: -6.751368999481201
    3. '[j' → logprob: -8.751368522644043
    4. ' ][' → logprob: -10.376368522644043
    5. '[' → logprob: -12.501368522644043
    6. '[i' → logprob: -12.876368522644043
    7. ']][' → logprob: -14.376368522644043
    8. '"][' → logprob: -14.376368522644043
    9. ']
' → logprob: -14.876368522644043
    10. '   ' → logprob: -15.251368522644043

Token 113: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.318681188422488e-05
    2. ' j' → logprob: -11.25001335144043
    3. ']' → logprob: -15.75001335144043
    4. 'k' → logprob: -16.87501335144043
    5. '[j' → logprob: -17.50001335144043
    6. '   ' → logprob: -17.75001335144043
    7. '	j' → logprob: -18.00001335144043
    8. ' ' → logprob: -18.12501335144043
    9. 's' → logprob: -18.87501335144043
    10. '<|end|>' → logprob: -18.87501335144043

Token 114: ']=' (ID: 9539)
  Prédit: ']='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']=' → logprob: -0.46508774161338806
    2. ']' → logprob: -1.4650877714157104
    3. ' ]' → logprob: -1.9650877714157104
    4. '=' → logprob: -7.590087890625
    5. ' =' → logprob: -8.965087890625
    6. ']+=' → logprob: -10.215087890625
    7. ']=(' → logprob: -10.840087890625
    8. ']={' → logprob: -11.840087890625
    9. ']="' → logprob: -11.840087890625
    10. ']='' → logprob: -12.090087890625

Token 115: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.00014084660506341606
    2. ' s' → logprob: -8.875141143798828
    3. 'round' → logprob: -14.000141143798828
    4. '{s' → logprob: -17.125141143798828
    5. '(s' → logprob: -17.500141143798828
    6. ' ' → logprob: -17.500141143798828
    7. '`s' → logprob: -17.750141143798828
    8. ' round' → logprob: -17.750141143798828
    9. 'float' → logprob: -18.375141143798828
    10. '+' → logprob: -18.625141143798828

Token 116: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0026735186111181974
    2. '
' → logprob: -6.127673625946045
    3. '<|end|>' → logprob: -7.877673625946045
    4. '            
' → logprob: -9.377673149108887
    5. '          ' → logprob: -12.627673149108887
    6. '               ' → logprob: -12.877673149108887
    7. '    
' → logprob: -13.002673149108887
    8. '<|end|>' → logprob: -13.127673149108887
    9. ' 
' → logprob: -13.377673149108887
    10. '       ' → logprob: -13.502673149108887

Token 117: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.003094293177127838
    2. '
' → logprob: -6.00309419631958
    3. '            
' → logprob: -8.128094673156738
    4. '<|end|>' → logprob: -8.253094673156738
    5. ' 
' → logprob: -11.003094673156738
    6. '```' → logprob: -11.753094673156738
    7. '    
' → logprob: -12.003094673156738
    8. ' ' → logprob: -12.253094673156738
    9. '          ' → logprob: -12.628094673156738
    10. 'dot' → logprob: -12.878094673156738

Token 118: ' dot' (ID: 16579)
  Prédit: 'dot'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dot' (adapté à ' dot') → logprob: -0.0008135587559081614
    2. ' dot' → logprob: -7.6258134841918945
    3. 'if' → logprob: -8.625813484191895
    4. '           ' → logprob: -8.875813484191895
    5. ' if' → logprob: -12.625813484191895
    6. '   ' → logprob: -14.000813484191895
    7. '       ' → logprob: -14.375813484191895
    8. ' ' → logprob: -14.625813484191895
    9. '(dot' → logprob: -14.750813484191895
    10. '.dot' → logprob: -15.500813484191895

Token 119: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.00012821101699955761
    2. '[' → logprob: -9.375127792358398
    3. '[i' → logprob: -10.125127792358398
    4. '][' → logprob: -13.500127792358398
    5. '```' → logprob: -14.500127792358398
    6. '[k' → logprob: -15.250127792358398
    7. '[js' → logprob: -15.750127792358398
    8. '[
' → logprob: -15.875127792358398
    9. 'j' → logprob: -16.3751277923584
    10. ' [' → logprob: -16.5001277923584

Token 120: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.01426681224256754
    2. '[i' → logprob: -4.2642669677734375
    3. ']' → logprob: -9.514266967773438
    4. ' ][' → logprob: -11.014266967773438
    5. '[' → logprob: -11.639266967773438
    6. '[I' → logprob: -13.889266967773438
    7. '[j' → logprob: -14.639266967773438
    8. ' [' → logprob: -14.889266967773438
    9. '```' → logprob: -15.014266967773438
    10. '"][' → logprob: -15.014266967773438

Token 121: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -2.696889623621246e-06
    2. ' i' → logprob: -12.87500286102295
    3. '[i' → logprob: -18.750001907348633
    4. ']' → logprob: -18.875001907348633
    5. 'I' → logprob: -19.250001907348633
    6. '=i' → logprob: -19.750001907348633
    7. '	i' → logprob: -20.125001907348633
    8. ' ' → logprob: -20.500001907348633
    9. ')i' → logprob: -20.625001907348633
    10. '_i' → logprob: -20.750001907348633

Token 122: ']=' (ID: 9539)
  Prédit: ']='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']=' → logprob: -0.016600342467427254
    2. '=s' → logprob: -4.266600131988525
    3. '=' → logprob: -6.516600131988525
    4. ']' → logprob: -7.016600131988525
    5. ' ]' → logprob: -10.391600608825684
    6. ' =' → logprob: -10.641600608825684
    7. ')=' → logprob: -13.266600608825684
    8. '']=' → logprob: -14.141600608825684
    9. ']+=' → logprob: -14.766600608825684
    10. '"]=' → logprob: -14.891600608825684

Token 123: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.1160349458805285e-05
    2. ' s' → logprob: -11.500011444091797
    3. 'dot' → logprob: -14.000011444091797
    4. ' ' → logprob: -17.625011444091797
    5. '```' → logprob: -17.750011444091797
    6. '   ' → logprob: -17.875011444091797
    7. '	s' → logprob: -18.250011444091797
    8. ' dot' → logprob: -18.250011444091797
    9. '  ' → logprob: -18.500011444091797
    10. '`s' → logprob: -18.625011444091797

Token 124: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 125: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006340403109788895
    2. '    
' → logprob: -6.381340503692627
    3. '<|end|>' → logprob: -6.756340503692627
    4. 'for' → logprob: -6.756340503692627
    5. '
' → logprob: -7.381340503692627
    6. ')' → logprob: -7.881340503692627
    7. '#' → logprob: -8.131340026855469
    8. ' for' → logprob: -8.381340026855469
    9. 'if' → logprob: -8.506340026855469
    10. '    ' → logprob: -8.631340026855469

Token 126: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -1.4102725982666016
    2. 'answer' → logprob: -2.0352725982666016
    3. 'for' → logprob: -2.2852725982666016
    4. 'result' → logprob: -2.5352725982666016
    5. 'ans' → logprob: -2.6602725982666016
    6. 'max' → logprob: -2.6602725982666016
    7. '   ' → logprob: -2.7852725982666016
    8. 'angle' → logprob: -2.7852725982666016
    9. 'res' → logprob: -3.5352725982666016
    10. 'count' → logprob: -3.9102725982666016

Token 127: '=[' (ID: 13370)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07550199329853058
    2. '=[' → logprob: -3.0755019187927246
    3. '=' → logprob: -3.7005019187927246
    4. ' =[' → logprob: -6.950501918792725
    5. '[' → logprob: -7.700501918792725
    6. '=[[' → logprob: -8.200502395629883
    7. '=[]' → logprob: -9.700502395629883
    8. ' ' → logprob: -9.950502395629883
    9. '=[
' → logprob: -11.325502395629883
    10. ']' → logprob: -11.700502395629883

Token 128: '0' (ID: 15)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.4012545347213745
    2. 'float' → logprob: -1.7762545347213745
    3. '0' → logprob: -2.151254653930664
    4. 'math' → logprob: -4.151254653930664
    5. '[-' → logprob: -4.151254653930664
    6. '-' → logprob: -4.901254653930664
    7. '1' → logprob: -5.901254653930664
    8. 'False' → logprob: -6.526254653930664
    9. '-f' → logprob: -8.026254653930664
    10. '(float' → logprob: -8.651254653930664

Token 129: ']*' (ID: 18579)
  Prédit: ']*('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*(' → logprob: -0.13371959328651428
    2. ']' → logprob: -2.1337196826934814
    3. ']*' → logprob: -5.008719444274902
    4. ']+' → logprob: -9.508719444274902
    5. ' ]' → logprob: -12.258719444274902
    6. '.' → logprob: -12.633719444274902
    7. '])' → logprob: -13.633719444274902
    8. 'x' → logprob: -13.758719444274902
    9. '][' → logprob: -13.883719444274902
    10. ')*(' → logprob: -14.133719444274902

Token 130: 'M' (ID: 44)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0005587508203461766
    2. '(M' → logprob: -7.625558853149414
    3. 'M' → logprob: -9.625558853149414
    4. ' (' → logprob: -13.000558853149414
    5. '   ' → logprob: -13.625558853149414
    6. '((' → logprob: -14.000558853149414
    7. '1' → logprob: -15.625558853149414
    8. '
' → logprob: -16.250558853149414
    9. ' ' → logprob: -16.875558853149414
    10. '(N' → logprob: -17.375558853149414

Token 131: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.02538638934493065
    2. ' for' → logprob: -4.900386333465576
    3. '   ' → logprob: -5.150386333465576
    4. 'for' → logprob: -5.650386333465576
    5. '    
' → logprob: -6.025386333465576
    6. ' 
' → logprob: -6.400386333465576
    7. '<|end|>' → logprob: -6.400386333465576
    8. '  
' → logprob: -6.900386333465576
    9. '0' → logprob: -8.400386810302734
    10. 'dp' → logprob: -8.400386810302734

Token 132: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5137670040130615
    2. ' for' → logprob: -1.7637670040130615
    3. 'dp' → logprob: -1.7637670040130615
    4. '   ' → logprob: -3.0137670040130615
    5. '
' → logprob: -5.513767242431641
    6. 'max' → logprob: -5.638767242431641
    7. 'import' → logprob: -6.638767242431641
    8. ' dp' → logprob: -7.638767242431641
    9. '    
' → logprob: -9.26376724243164
    10. ' max' → logprob: -9.88876724243164

Token 133: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.15294106304645538
    2. 'dp' → logprob: -2.0279409885406494
    3. 'max' → logprob: -5.6529412269592285
    4. 'ans' → logprob: -6.1529412269592285
    5. 'import' → logprob: -6.5279412269592285
    6. 'answer' → logprob: -7.0279412269592285
    7. 'from' → logprob: -7.4029412269592285
    8. 'result' → logprob: -7.9029412269592285
    9. 'best' → logprob: -8.02794075012207
    10. 'res' → logprob: -8.15294075012207

Token 134: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0018282189266756177
    2. ' i' → logprob: -6.501828193664551
    3. 'mask' → logprob: -8.37682819366455
    4. 'j' → logprob: -10.37682819366455
    5. 's' → logprob: -11.25182819366455
    6. ' mask' → logprob: -11.62682819366455
    7. 'm' → logprob: -11.87682819366455
    8. 'k' → logprob: -12.00182819366455
    9. 'bit' → logprob: -12.00182819366455
    10. '_' → logprob: -12.62682819366455

Token 135: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02329171448945999
    2. 'in' → logprob: -3.773291826248169
    3. ' ' → logprob: -10.39829158782959
    4. '	in' → logprob: -12.27329158782959
    5. ',' → logprob: -13.14829158782959
    6. '+' → logprob: -13.14829158782959
    7. 'range' → logprob: -13.27329158782959
    8. '1' → logprob: -13.89829158782959
    9. 'In' → logprob: -14.39829158782959
    10. '
' → logprob: -14.64829158782959

Token 136: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0013286912580952048
    2. ' range' → logprob: -6.626328468322754
    3. ' ' → logprob: -14.626328468322754
    4. '   ' → logprob: -14.751328468322754
    5. '
' → logprob: -14.876328468322754
    6. 'r' → logprob: -15.001328468322754
    7. 'ange' → logprob: -15.501328468322754
    8. '  ' → logprob: -15.501328468322754
    9. '(range' → logprob: -15.501328468322754
    10. 'rang' → logprob: -16.12632942199707

Token 137: '(M' (ID: 6103)
  Prédit: '(M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(M' → logprob: -0.38689661026000977
    2. '(' → logprob: -1.1368966102600098
    3. '(m' → logprob: -12.136896133422852
    4. ' (' → logprob: -12.261896133422852
    5. 'M' → logprob: -12.386896133422852
    6. '1' → logprob: -13.386896133422852
    7. '(
' → logprob: -13.386896133422852
    8. ' ' → logprob: -13.511896133422852
    9. '(N' → logprob: -13.511896133422852
    10. '((' → logprob: -14.574396133422852

Token 138: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.01825951412320137
    2. '):
' → logprob: -4.018259525299072
    3. ' ):' → logprob: -10.018259048461914
    4. ')' → logprob: -10.893259048461914
    5. '+' → logprob: -10.893259048461914
    6. ':' → logprob: -11.393259048461914
    7. '-' → logprob: -12.143259048461914
    8. '):
' → logprob: -12.393259048461914
    9. ']:' → logprob: -13.018259048461914
    10. '1' → logprob: -14.018259048461914

Token 139: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13037845492362976
    2. 'dp' → logprob: -2.505378484725952
    3. '       ' → logprob: -3.755378484725952
    4. ' dp' → logprob: -4.380378246307373
    5. 'for' → logprob: -6.005378246307373
    6. ' for' → logprob: -6.255378246307373
    7. '	dp' → logprob: -8.880378723144531
    8. 'import' → logprob: -10.692878723144531
    9. ' ' → logprob: -10.880378723144531
    10. 'max' → logprob: -11.067878723144531

Token 140: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.001935065840370953
    2. 'for' → logprob: -6.876935005187988
    3. 'max' → logprob: -7.751935005187988
    4. '   ' → logprob: -7.751935005187988
    5. ' dp' → logprob: -11.126935005187988
    6. '       ' → logprob: -12.251935005187988
    7. 'best' → logprob: -12.376935005187988
    8. 'angle' → logprob: -13.001935005187988
    9. 'if' → logprob: -13.376935005187988
    10. 'import' → logprob: -13.751935005187988

Token 141: ' cost' (ID: 3097)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0901503935456276
    2. 'max' → logprob: -2.7151503562927246
    3. 'for' → logprob: -4.465150356292725
    4. '   ' → logprob: -5.465150356292725
    5. 'best' → logprob: -6.340150356292725
    6. ' dp' → logprob: -7.840150356292725
    7. 'res' → logprob: -7.965150356292725
    8. 'val' → logprob: -8.090150833129883
    9. 'mx' → logprob: -8.590150833129883
    10. 'angle' → logprob: -8.965150833129883

Token 142: ' if' (ID: 538)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4496552050113678
    2. ' =' → logprob: -1.0746551752090454
    3. '=sum' → logprob: -5.449655055999756
    4. '=max' → logprob: -5.574655055999756
    5. '=i' → logprob: -6.074655055999756
    6. 's' → logprob: -6.199655055999756
    7. '[i' → logprob: -6.699655055999756
    8. '=float' → logprob: -6.824655055999756
    9. '=[' → logprob: -6.824655055999756
    10. '[' → logprob: -7.324655055999756

Token 143: ' record' (ID: 3704)
  Prédit: ' we'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' we' → logprob: -0.617508590221405
    2. 'i' → logprob: -1.4925086498260498
    3. ' i' → logprob: -2.49250864982605
    4. ' vectors' → logprob: -2.99250864982605
    5. 'we' → logprob: -3.11750864982605
    6. ' only' → logprob: -4.867508411407471
    7. 'vectors' → logprob: -4.992508411407471
    8. 'dp' → logprob: -5.117508411407471
    9. ' not' → logprob: -5.242508411407471
    10. 'only' → logprob: -5.367508411407471

Token 144: ' as' (ID: 472)
  Prédit: 'ing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ing' → logprob: -0.6923702955245972
    2. '[i' → logprob: -1.1923702955245972
    3. '[' → logprob: -3.1923704147338867
    4. 'd' → logprob: -3.6923704147338867
    5. 's' → logprob: -3.9423704147338867
    6. 'i' → logprob: -4.067370414733887
    7. '=' → logprob: -4.192370414733887
    8. 'ed' → logprob: -4.317370414733887
    9. ' vectors' → logprob: -4.692370414733887
    10. ' i' → logprob: -4.942370414733887

Token 145: ' is' (ID: 382)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5948435664176941
    2. 'single' → logprob: -1.2198436260223389
    3. 'new' → logprob: -3.094843626022339
    4. 'is' → logprob: -3.719843626022339
    5. ' a' → logprob: -3.969843626022339
    6. 'individual' → logprob: -4.21984338760376
    7. 'stand' → logprob: -4.34484338760376
    8. 'i' → logprob: -5.71984338760376
    9. 'alone' → logprob: -5.84484338760376
    10. 'first' → logprob: -5.96984338760376

Token 146: '
' (ID: 198)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.0449745655059814
    2. 'dp' → logprob: -1.2949745655059814
    3. ' dp' → logprob: -1.5449745655059814
    4. '=' → logprob: -2.1699745655059814
    5. '[' → logprob: -4.044974327087402
    6. ':' → logprob: -4.669974327087402
    7. '(dp' → logprob: -5.169974327087402
    8. '   ' → logprob: -5.419974327087402
    9. '[i' → logprob: -5.919974327087402
    10. '
' → logprob: -6.044974327087402

Token 147: '       ' (ID: 309)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.2950952351093292
    2. ' dp' → logprob: -1.5450952053070068
    3. ' =' → logprob: -3.670095205307007
    4. '   ' → logprob: -4.920095443725586
    5. '=' → logprob: -5.545095443725586
    6. ':' → logprob: -6.545095443725586
    7. '
' → logprob: -7.045095443725586
    8. '0' → logprob: -7.170095443725586
    9. '       ' → logprob: -8.170095443725586
    10. '(dp' → logprob: -8.420095443725586

Token 148: ' len' (ID: 4631)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0031470584217458963
    2. ' dp' → logprob: -5.878147125244141
    3. 'cost' → logprob: -9.37814712524414
    4. '   ' → logprob: -9.37814712524414
    5. 'dot' → logprob: -10.00314712524414
    6. '           ' → logprob: -10.75314712524414
    7. '       ' → logprob: -11.25314712524414
    8. 's' → logprob: -11.25314712524414
    9. 'max' → logprob: -11.25314712524414
    10. 'import' → logprob: -11.37814712524414

Token 149: '_vi' (ID: 187265)
  Prédit: '_vec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_vec' → logprob: -1.1614458560943604
    2. 'g' → logprob: -1.5364458560943604
    3. '_' → logprob: -1.6614458560943604
    4. '_v' → logprob: -2.2864458560943604
    5. 'v' → logprob: -3.1614458560943604
    6. '_=' → logprob: -3.2864458560943604
    7. '_i' → logprob: -3.4114458560943604
    8. '_vector' → logprob: -3.4114458560943604
    9. 't' → logprob: -4.661445617675781
    10. '_vect' → logprob: -4.911445617675781

Token 150: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.02864319458603859
    2. '=v' → logprob: -4.1536431312561035
    3. ' =' → logprob: -5.0286431312561035
    4. '=len' → logprob: -5.1536431312561035
    5. '(v' → logprob: -9.653643608093262
    6. '=sum' → logprob: -10.028643608093262
    7. '=int' → logprob: -11.028643608093262
    8. '=s' → logprob: -11.528643608093262
    9. '=float' → logprob: -11.778643608093262
    10. '=max' → logprob: -11.903643608093262

Token 151: 'dot' (ID: 29155)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.05034605413675308
    2. ' math' → logprob: -3.3003461360931396
    3. 'dot' → logprob: -4.9253458976745605
    4. 'sum' → logprob: -5.6753458976745605
    5. ' dot' → logprob: -7.5503458976745605
    6. 'len' → logprob: -7.6753458976745605
    7. '0' → logprob: -8.175346374511719
    8. ' sum' → logprob: -9.300346374511719
    9. '   ' → logprob: -10.050346374511719
    10. '(math' → logprob: -10.425346374511719

Token 152: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.796184723294573e-06
    2. '[' → logprob: -12.375005722045898
    3. 'i' → logprob: -14.125005722045898
    4. '[v' → logprob: -15.125005722045898
    5. '```' → logprob: -16.6250057220459
    6. 'vi' → logprob: -16.7500057220459
    7. ' i' → logprob: -17.0000057220459
    8. '<|end|>' → logprob: -17.3750057220459
    9. '
' → logprob: -17.5000057220459
    10. '[ii' → logprob: -17.8750057220459

Token 153: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0621911883354187
    2. '[i' → logprob: -2.8121912479400635
    3. ',i' → logprob: -9.437191009521484
    4. ']' → logprob: -9.937191009521484
    5. ' ][' → logprob: -10.562191009521484
    6. '"][' → logprob: -10.812191009521484
    7. 'i' → logprob: -11.312191009521484
    8. '[' → logprob: -11.437191009521484
    9. ')[' → logprob: -12.062191009521484
    10. '
' → logprob: -12.937191009521484

Token 154: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -3.173704271830502e-06
    2. ' i' → logprob: -12.75000286102295
    3. '[i' → logprob: -15.62500286102295
    4. '
' → logprob: -16.750003814697266
    5. ' ' → logprob: -19.125003814697266
    6. ',i' → logprob: -19.750003814697266
    7. ']' → logprob: -19.750003814697266
    8. '	i' → logprob: -20.250003814697266
    9. '_i' → logprob: -20.500003814697266
    10. '   ' → logprob: -21.250003814697266

Token 155: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0898727998137474
    2. ']
' → logprob: -2.4648728370666504
    3. ' ]' → logprob: -7.83987283706665
    4. ']
' → logprob: -8.214872360229492
    5. ' ]
' → logprob: -9.464872360229492
    6. ']*' → logprob: -9.839872360229492
    7. ']

' → logprob: -10.339872360229492
    8. ']+' → logprob: -10.339872360229492
    9. '**' → logprob: -11.214872360229492
    10. '   ' → logprob: -11.214872360229492

Token 156: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.012241669930517673
    2. 'dp' → logprob: -5.512241840362549
    3. '<|end|>' → logprob: -6.137241840362549
    4. ' dp' → logprob: -6.637241840362549
    5. '*' → logprob: -7.012241840362549
    6. '  
' → logprob: -7.637241840362549
    7. ' 
' → logprob: -7.637241840362549
    8. ' *' → logprob: -7.762241840362549
    9. ')
' → logprob: -7.762241840362549
    10. '+' → logprob: -7.887241840362549

Token 157: ' best' (ID: 1636)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.02147376723587513
    2. ' dp' → logprob: -4.5214738845825195
    3. '   ' → logprob: -5.8964738845825195
    4. 'if' → logprob: -6.1464738845825195
    5. '       ' → logprob: -6.1464738845825195
    6. 'cost' → logprob: -6.3964738845825195
    7. 'min' → logprob: -8.02147388458252
    8. 'for' → logprob: -8.14647388458252
    9. 'max' → logprob: -8.27147388458252
    10. ' if' → logprob: -8.39647388458252

Token 158: '=len' (ID: 114011)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.13734424114227295
    2. ' =' → logprob: -2.2623443603515625
    3. '=len' → logprob: -3.8873443603515625
    4. '=i' → logprob: -6.6373443603515625
    5. '_cost' → logprob: -7.0123443603515625
    6. '=max' → logprob: -7.1373443603515625
    7. 'cost' → logprob: -8.512344360351562
    8. '=float' → logprob: -8.887344360351562
    9. '=int' → logprob: -9.637344360351562
    10. '_=' → logprob: -10.012344360351562

Token 159: '_vi' (ID: 187265)
  Prédit: '_vi'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_vi' → logprob: -0.0002726601669564843
    2. 'vi' → logprob: -8.750272750854492
    3. 'Vi' → logprob: -9.500272750854492
    4. '(' → logprob: -11.875272750854492
    5. '[i' → logprob: -12.375272750854492
    6. '[' → logprob: -12.875272750854492
    7. ' Vi' → logprob: -13.125272750854492
    8. '_v' → logprob: -13.125272750854492
    9. '_ai' → logprob: -13.250272750854492
    10. 'i' → logprob: -13.500272750854492

Token 160: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.05827938765287399
    2. '+' → logprob: -3.683279275894165
    3. '<|end|>' → logprob: -3.808279275894165
    4. '   ' → logprob: -5.808279514312744
    5. ' +' → logprob: -6.933279514312744
    6. '*' → logprob: -6.933279514312744
    7. '    
' → logprob: -7.183279514312744
    8. ' for' → logprob: -7.558279514312744
    9. '  
' → logprob: -7.558279514312744
    10. ')' → logprob: -7.683279514312744

Token 161: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0646602138876915
    2. '   ' → logprob: -3.1896603107452393
    3. ' for' → logprob: -4.68966007232666
    4. '       ' → logprob: -5.18966007232666
    5. '    
' → logprob: -5.68966007232666
    6. '<|end|>' → logprob: -7.31466007232666
    7. ' 
' → logprob: -7.56466007232666
    8. ' ' → logprob: -7.68966007232666
    9. '  
' → logprob: -8.06466007232666
    10. '
' → logprob: -8.06466007232666

Token 162: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.14050544798374176
    2. '   ' → logprob: -2.76550555229187
    3. ' for' → logprob: -3.14050555229187
    4. '       ' → logprob: -3.76550555229187
    5. 'j' → logprob: -6.765505313873291
    6. 'dp' → logprob: -8.26550579071045
    7. 'prev' → logprob: -9.51550579071045
    8. ' j' → logprob: -9.89050579071045
    9. 'next' → logprob: -10.64050579071045
    10. 'best' → logprob: -10.64050579071045

Token 163: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.05504138395190239
    2. ' j' → logprob: -2.9300413131713867
    3. 'k' → logprob: -9.180041313171387
    4. 'p' → logprob: -11.180041313171387
    5. 'prev' → logprob: -11.180041313171387
    6. ' ' → logprob: -11.555041313171387
    7. '   ' → logprob: -12.305041313171387
    8. ' k' → logprob: -12.430041313171387
    9. ' prev' → logprob: -12.680041313171387
    10. '	j' → logprob: -13.305041313171387

Token 164: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.386947900056839
    2. ' in' → logprob: -1.1369478702545166
    3. 'range' → logprob: -9.886947631835938
    4. ' ' → logprob: -11.386947631835938
    5. '
' → logprob: -12.761947631835938
    6. '   ' → logprob: -12.886947631835938
    7. 'i' → logprob: -13.511947631835938
    8. ')' → logprob: -13.886947631835938
    9. '	in' → logprob: -13.886947631835938
    10. '```' → logprob: -14.011947631835938

Token 165: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.3868776261806488
    2. ' range' → logprob: -1.1368776559829712
    3. '   ' → logprob: -12.88687801361084
    4. ' ' → logprob: -13.13687801361084
    5. '(range' → logprob: -13.76187801361084
    6. '	range' → logprob: -14.76187801361084
    7. '
' → logprob: -16.261877059936523
    8. '  ' → logprob: -16.261877059936523
    9. 'rang' → logprob: -16.886877059936523
    10. 'r' → logprob: -16.886877059936523

Token 166: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -2.522638169466518e-05
    2. '(' → logprob: -10.625024795532227
    3. '(j' → logprob: -14.750024795532227
    4. 'i' → logprob: -15.375024795532227
    5. ' (' → logprob: -16.375024795532227
    6. ' i' → logprob: -16.625024795532227
    7. '(
' → logprob: -17.250024795532227
    8. '0' → logprob: -18.250024795532227
    9. '(M' → logprob: -18.250024795532227
    10. '(I' → logprob: -18.250024795532227

Token 167: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.03661870211362839
    2. '):
' → logprob: -4.036618709564209
    3. ' ):' → logprob: -4.536618709564209
    4. '0' → logprob: -5.411618709564209
    5. '-' → logprob: -6.786618709564209
    6. '       ' → logprob: -7.036618709564209
    7. '           ' → logprob: -8.28661823272705
    8. ')' → logprob: -8.66161823272705
    9. '+' → logprob: -9.03661823272705
    10. 'i' → logprob: -9.28661823272705

Token 168: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.012954913079738617
    2. ':
' → logprob: -5.1379547119140625
    3. '
' → logprob: -5.3879547119140625
    4. ':' → logprob: -6.6379547119140625
    5. ',' → logprob: -7.6379547119140625
    6. '       ' → logprob: -8.762954711914062
    7. '):
' → logprob: -9.012954711914062
    8. '            
' → logprob: -9.137954711914062
    9. '               ' → logprob: -10.262954711914062
    10. ' if' → logprob: -10.637954711914062

Token 169: ' v' (ID: 323)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.26171359419822693
    2. 'val' → logprob: -2.6367135047912598
    3. 'proj' → logprob: -2.8867135047912598
    4. 'cos' → logprob: -3.5117135047912598
    5. 'if' → logprob: -4.13671350479126
    6. 'c' → logprob: -4.26171350479126
    7. 'dp' → logprob: -4.76171350479126
    8. 'tmp' → logprob: -5.26171350479126
    9. 'diff' → logprob: -5.76171350479126
    10. 'd' → logprob: -6.01171350479126

Token 170: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.23378795385360718
    2. '=' → logprob: -3.358788013458252
    3. '_len' → logprob: -4.108788013458252
    4. 'v' → logprob: -4.233788013458252
    5. 'al' → logprob: -4.233788013458252
    6. '   ' → logprob: -4.358788013458252
    7. 'len' → logprob: -4.483788013458252
    8. 's' → logprob: -4.483788013458252
    9. 'i' → logprob: -4.608788013458252
    10. '=len' → logprob: -4.608788013458252

Token 171: '_v' (ID: 5390)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.023876333609223366
    2. '_len' → logprob: -4.648876190185547
    3. 'v' → logprob: -5.773876190185547
    4. '=v' → logprob: -6.148876190185547
    5. '_dot' → logprob: -6.523876190185547
    6. '=len' → logprob: -6.898876190185547
    7. '=d' → logprob: -7.023876190185547
    8. ' =' → logprob: -7.398876190185547
    9. 'len' → logprob: -7.398876190185547
    10. '=
' → logprob: -7.523876190185547

Token 172: 'j' (ID: 73)
  Prédit: 'ectors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ectors' → logprob: -0.3417220115661621
    2. 'i' → logprob: -2.591722011566162
    3. 'j' → logprob: -2.841722011566162
    4. '=' → logprob: -3.341722011566162
    5. 'v' → logprob: -3.466722011566162
    6. 'dot' → logprob: -3.966722011566162
    7. 'vectors' → logprob: -4.341722011566162
    8. 'ector' → logprob: -4.466722011566162
    9. 'ec' → logprob: -5.216722011566162
    10. 'vi' → logprob: -5.404222011566162

Token 173: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0011114011285826564
    2. ' =' → logprob: -7.5011115074157715
    3. '=len' → logprob: -8.126111030578613
    4. '=d' → logprob: -9.001111030578613
    5. 'dot' → logprob: -10.001111030578613
    6. '=-' → logprob: -10.376111030578613
    7. '=

' → logprob: -11.751111030578613
    8. '=v' → logprob: -11.876111030578613
    9. 'v' → logprob: -12.501111030578613
    10. '=int' → logprob: -12.751111030578613

Token 174: 'dot' (ID: 29155)
  Prédit: 'dot'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dot' → logprob: -0.0006366660236380994
    2. 'dp' → logprob: -8.00063705444336
    3. ' dot' → logprob: -8.12563705444336
    4. '(dot' → logprob: -12.25063705444336
    5. '   ' → logprob: -15.62563705444336
    6. '.dot' → logprob: -16.00063705444336
    7. '-dot' → logprob: -16.37563705444336
    8. '           ' → logprob: -16.75063705444336
    9. ' dp' → logprob: -17.00063705444336
    10. ' ' → logprob: -17.12563705444336

Token 175: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.023361360654234886
    2. 'j' → logprob: -3.7733614444732666
    3. '[i' → logprob: -9.898361206054688
    4. '   ' → logprob: -10.898361206054688
    5. '[v' → logprob: -11.148361206054688
    6. '
' → logprob: -11.398361206054688
    7. 'v' → logprob: -12.398361206054688
    8. 'i' → logprob: -12.648361206054688
    9. ' j' → logprob: -12.898361206054688
    10. '	j' → logprob: -13.273361206054688

Token 176: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0001576506474521011
    2. '[j' → logprob: -8.875157356262207
    3. ']' → logprob: -11.750157356262207
    4. ' ][' → logprob: -12.625157356262207
    5. '   ' → logprob: -13.250157356262207
    6. '[' → logprob: -14.000157356262207
    7. 'j' → logprob: -14.125157356262207
    8. ''][' → logprob: -14.375157356262207
    9. '[i' → logprob: -14.750157356262207
    10. '"][' → logprob: -14.750157356262207

Token 177: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.0280383548888494e-06
    2. ' j' → logprob: -14.250000953674316
    3. '
' → logprob: -15.875000953674316
    4. '[j' → logprob: -16.625001907348633
    5. '   ' → logprob: -17.750001907348633
    6. 'i' → logprob: -17.875001907348633
    7. '	j' → logprob: -18.375001907348633
    8. '```' → logprob: -18.750001907348633
    9. ']' → logprob: -19.125001907348633
    10. ' ' → logprob: -19.250001907348633

Token 178: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.42885297536849976
    2. ']' → logprob: -1.0538530349731445
    3. ' ]
' → logprob: -9.928853034973145
    4. ' ]' → logprob: -10.303853034973145
    5. ']
' → logprob: -10.428853034973145
    6. ']+' → logprob: -10.678853034973145
    7. ']

' → logprob: -11.678853034973145
    8. '           ' → logprob: -13.053853034973145
    9. '       ' → logprob: -13.428853034973145
    10. '],' → logprob: -14.053853034973145

Token 179: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.41488486528396606
    2. 'v' → logprob: -1.9148848056793213
    3. 'vj' → logprob: -1.9148848056793213
    4. '
' → logprob: -3.7898848056793213
    5. '-' → logprob: -5.4148850440979
    6. 'vi' → logprob: -6.0398850440979
    7. 'cross' → logprob: -6.4148850440979
    8. 'c' → logprob: -6.4148850440979
    9. '*v' → logprob: -6.6648850440979
    10. 's' → logprob: -7.0398850440979

Token 180: ' if' (ID: 538)
  Prédit: 'vj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vj' → logprob: -0.5016969442367554
    2. 'v' → logprob: -1.3766969442367554
    3. 'vi' → logprob: -2.376697063446045
    4. 'cost' → logprob: -3.751697063446045
    5. 'dot' → logprob: -5.501697063446045
    6. 'c' → logprob: -5.501697063446045
    7. 'cross' → logprob: -5.876697063446045
    8. 'val' → logprob: -6.251697063446045
    9. 'dp' → logprob: -6.376697063446045
    10. 'ij' → logprob: -6.501697063446045

Token 181: ' v' (ID: 323)
  Prédit: 'vj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vj' → logprob: -0.17144174873828888
    2. 'v' → logprob: -2.0464417934417725
    3. ' v' → logprob: -3.6714417934417725
    4. 'abs' → logprob: -7.046441555023193
    5. 'dot' → logprob: -7.046441555023193
    6. 'vi' → logprob: -7.796441555023193
    7. ' dot' → logprob: -9.046442031860352
    8. 'len' → logprob: -9.046442031860352
    9. '   ' → logprob: -9.171442031860352
    10. '(v' → logprob: -9.296442031860352

Token 182: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.3595823049545288
    2. '[j' → logprob: -1.3595823049545288
    3. 'ectors' → logprob: -3.8595824241638184
    4. '[i' → logprob: -4.484582424163818
    5. 'i' → logprob: -5.109582424163818
    6. '[' → logprob: -5.234582424163818
    7. '   ' → logprob: -8.35958194732666
    8. 'ector' → logprob: -8.35958194732666
    9. 'v' → logprob: -8.98458194732666
    10. '       ' → logprob: -9.23458194732666

Token 183: '_v' (ID: 5390)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.16197550296783447
    2. '[j' → logprob: -2.536975383758545
    3. '_v' → logprob: -3.536975383758545
    4. '[' → logprob: -4.786975383758545
    5. '!=' → logprob: -4.786975383758545
    6. '>' → logprob: -4.911975383758545
    7. 'v' → logprob: -5.661975383758545
    8. '==' → logprob: -5.786975383758545
    9. '][' → logprob: -6.036975383758545
    10. ' !=' → logprob: -7.036975383758545

Token 184: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.03650549054145813
    2. 'i' → logprob: -4.161505699157715
    3. '[j' → logprob: -4.411505699157715
    4. '[i' → logprob: -5.911505699157715
    5. '[' → logprob: -6.286505699157715
    6. 'ectors' → logprob: -6.661505699157715
    7. 'v' → logprob: -7.661505699157715
    8. '   ' → logprob: -8.161505699157715
    9. 'ector' → logprob: -8.161505699157715
    10. ']' → logprob: -8.411505699157715

Token 185: '==' (ID: 560)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.3190709352493286
    2. '==' → logprob: -1.8190709352493286
    3. '!=' → logprob: -2.694070816040039
    4. '<=' → logprob: -4.194070816040039
    5. ' >' → logprob: -4.694070816040039
    6. '>=' → logprob: -4.944070816040039
    7. '<' → logprob: -5.069070816040039
    8. ' ==' → logprob: -6.069070816040039
    9. ' !=' → logprob: -6.444070816040039
    10. ' and' → logprob: -7.569070816040039

Token 186: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.334533878136426e-05
    2. ' ' → logprob: -10.125042915344238
    3. '1' → logprob: -12.875042915344238
    4. '    ' → logprob: -15.250042915344238
    5. '   ' → logprob: -15.625042915344238
    6. '  ' → logprob: -16.875043869018555
    7. '
' → logprob: -16.875043869018555
    8. 'dot' → logprob: -16.937543869018555
    9. ' ' → logprob: -17.437543869018555
    10. '```' → logprob: -17.562543869018555

Token 187: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06771013885736465
    2. ':
' → logprob: -2.8177101612091064
    3. ' or' → logprob: -5.942709922790527
    4. ':return' → logprob: -6.692709922790527
    5. '               ' → logprob: -7.317709922790527
    6. ' continue' → logprob: -7.567709922790527
    7. 'continue' → logprob: -7.692709922790527
    8. '           ' → logprob: -9.067709922790527
    9. ' and' → logprob: -9.817709922790527
    10. 'and' → logprob: -11.317709922790527

Token 188: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.43301594257354736
    2. ' continue' → logprob: -1.4330159425735474
    3. ':' → logprob: -2.433015823364258
    4. 'continue' → logprob: -3.933015823364258
    5. ':
' → logprob: -5.308015823364258
    6. ' continues' → logprob: -9.308015823364258
    7. '	continue' → logprob: -9.433015823364258
    8. ' or' → logprob: -9.558015823364258
    9. '_continue' → logprob: -9.558015823364258
    10. ' :' → logprob: -10.308015823364258

Token 189: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.11721780896186829
    2. ' continue' → logprob: -2.242217779159546
    3. '               ' → logprob: -5.617218017578125
    4. '                   ' → logprob: -7.492218017578125
    5. '   ' → logprob: -9.492218017578125
    6. '	continue' → logprob: -9.617218017578125
    7. '           ' → logprob: -10.867218017578125
    8. '_continue' → logprob: -11.617218017578125
    9. '                       ' → logprob: -12.367218017578125
    10. '
' → logprob: -12.617218017578125

Token 190: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1169537752866745
    2. '
' → logprob: -2.2419538497924805
    3. '            
' → logprob: -6.4919538497924805
    4. ' 
' → logprob: -7.7419538497924805
    5. 'continue' → logprob: -7.9919538497924805
    6. '               ' → logprob: -8.11695384979248
    7. '       ' → logprob: -8.24195384979248
    8. '    
' → logprob: -8.99195384979248
    9. 'dp' → logprob: -8.99195384979248
    10. '  
' → logprob: -9.11695384979248

Token 191: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4357360899448395
    2. '
' → logprob: -1.060736060142517
    3. '            
' → logprob: -6.310736179351807
    4. '       ' → logprob: -6.685736179351807
    5. '               ' → logprob: -7.060736179351807
    6. ' 
' → logprob: -7.185736179351807
    7. ')' → logprob: -7.935736179351807
    8. '
' → logprob: -8.310735702514648
    9. 'dp' → logprob: -8.435735702514648
    10. '```' → logprob: -8.435735702514648

Token 192: ' vij' (ID: 49213)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.8290236592292786
    2. 'cost' → logprob: -1.7040235996246338
    3. 'cos' → logprob: -2.329023599624634
    4. 'tmp' → logprob: -2.329023599624634
    5. 'proj' → logprob: -2.829023599624634
    6. 'cross' → logprob: -3.829023599624634
    7. 'c' → logprob: -3.829023599624634
    8. 't' → logprob: -4.204023838043213
    9. 'x' → logprob: -4.454023838043213
    10. 'num' → logprob: -4.704023838043213

Token 193: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.008304277434945107
    2. ' =' → logprob: -5.383304119110107
    3. '=v' → logprob: -6.633304119110107
    4. 'v' → logprob: -7.758304119110107
    5. '=i' → logprob: -7.883304119110107
    6. '=j' → logprob: -8.383304595947266
    7. '_' → logprob: -8.508304595947266
    8. '_i' → logprob: -8.883304595947266
    9. '_dot' → logprob: -9.008304595947266
    10. 'vj' → logprob: -9.258304595947266

Token 194: 'dot' (ID: 29155)
  Prédit: 'dot'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dot' → logprob: -0.0058908723294734955
    2. '(dot' → logprob: -5.255890846252441
    3. ' dot' → logprob: -7.630890846252441
    4. 'abs' → logprob: -9.130890846252441
    5. 'dp' → logprob: -10.755890846252441
    6. '-dot' → logprob: -11.380890846252441
    7. '.dot' → logprob: -11.880890846252441
    8. '   ' → logprob: -12.255890846252441
    9. '(' → logprob: -12.380890846252441
    10. 'max' → logprob: -12.755890846252441

Token 195: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0007174347410909832
    2. '[j' → logprob: -7.250717639923096
    3. 'i' → logprob: -11.875717163085938
    4. 'j' → logprob: -15.375717163085938
    5. '[' → logprob: -15.625717163085938
    6. '[v' → logprob: -16.125717163085938
    7. ' i' → logprob: -17.750717163085938
    8. '][' → logprob: -18.125717163085938
    9. '```' → logprob: -18.250717163085938
    10. '[int' → logprob: -18.500717163085938

Token 196: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0003231878508813679
    2. '[j' → logprob: -8.125323295593262
    3. ']' → logprob: -11.250323295593262
    4. ' ][' → logprob: -11.750323295593262
    5. 'j' → logprob: -13.125323295593262
    6. '[i' → logprob: -13.250323295593262
    7. '[' → logprob: -14.250323295593262
    8. ''][' → logprob: -14.250323295593262
    9. '"][' → logprob: -14.750323295593262
    10. '}[' → logprob: -15.875323295593262

Token 197: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.3856492842023727e-06
    2. ' j' → logprob: -13.625000953674316
    3. '[j' → logprob: -16.500001907348633
    4. 'v' → logprob: -17.500001907348633
    5. 'vj' → logprob: -18.250001907348633
    6. '	j' → logprob: -18.875001907348633
    7. ']' → logprob: -19.250001907348633
    8. '$j' → logprob: -19.375001907348633
    9. '```' → logprob: -19.875001907348633
    10. 'i' → logprob: -20.000001907348633

Token 198: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.37921470403671265
    2. ']
' → logprob: -1.6292147636413574
    3. ']/' → logprob: -2.1292147636413574
    4. ']*' → logprob: -8.6292142868042
    5. ' ]' → logprob: -8.7542142868042
    6. ']

' → logprob: -9.3792142868042
    7. ' ]
' → logprob: -10.3792142868042
    8. ']
' → logprob: -10.5042142868042
    9. '
' → logprob: -10.8792142868042
    10. '   ' → logprob: -11.2542142868042

Token 199: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002658297074958682
    2. '
' → logprob: -6.127658367156982
    3. '            
' → logprob: -9.127657890319824
    4. 'cost' → logprob: -9.752657890319824
    5. 'dp' → logprob: -10.252657890319824
    6. 'best' → logprob: -10.377657890319824
    7. 'prev' → logprob: -10.627657890319824
    8. ' cost' → logprob: -11.002657890319824
    9. 'candidate' → logprob: -11.002657890319824
    10. 'ratio' → logprob: -11.127657890319824

Token 200: ' r' (ID: 428)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.4835663437843323
    2. 'cost' → logprob: -1.2335662841796875
    3. 'cos' → logprob: -3.8585662841796875
    4. 'ratio' → logprob: -3.8585662841796875
    5. 'proj' → logprob: -3.9835662841796875
    6. 'tmp' → logprob: -4.4835662841796875
    7. 'candidate' → logprob: -6.1085662841796875
    8. 'x' → logprob: -6.2335662841796875
    9. 't' → logprob: -6.3585662841796875
    10. 'score' → logprob: -6.3585662841796875

Token 201: '=v' (ID: 89140)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5473971962928772
    2. '=v' → logprob: -1.4223971366882324
    3. '=r' → logprob: -2.0473971366882324
    4. ' =' → logprob: -3.7973971366882324
    5. 'atio' → logprob: -3.7973971366882324
    6. '=(' → logprob: -6.297397136688232
    7. '=
' → logprob: -6.672397136688232
    8. '=i' → logprob: -7.297397136688232
    9. '=((' → logprob: -7.922397136688232
    10. '=float' → logprob: -8.17239761352539

Token 202: 'ij' (ID: 681)
  Prédit: 'ij'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ij' → logprob: -0.010667411610484123
    2. 'i' → logprob: -4.635667324066162
    3. 'j' → logprob: -7.260667324066162
    4. '[i' → logprob: -9.76066780090332
    5. '   ' → logprob: -11.01066780090332
    6. '1' → logprob: -11.13566780090332
    7. '(i' → logprob: -11.38566780090332
    8. '[' → logprob: -11.38566780090332
    9. '(' → logprob: -11.76066780090332
    10. '[j' → logprob: -12.26066780090332

Token 203: '/v' (ID: 10315)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.13666129112243652
    2. ' /' → logprob: -2.6366612911224365
    3. '/v' → logprob: -2.8866612911224365
    4. '/
' → logprob: -8.261661529541016
    5. 'vj' → logprob: -10.636661529541016
    6. ' /
' → logprob: -11.136661529541016
    7. '/
/' → logprob: -11.261661529541016
    8. '/(' → logprob: -11.261661529541016
    9. '/j' → logprob: -11.261661529541016
    10. '
' → logprob: -11.886661529541016

Token 204: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.9361264946837764e-07
    2. '[j' → logprob: -15.875
    3. '_j' → logprob: -17.125
    4. '```' → logprob: -19.0
    5. '{' → logprob: -19.5
    6. '[' → logprob: -19.625
    7. 'v' → logprob: -19.875
    8. '
' → logprob: -20.125
    9. ' j' → logprob: -20.5
    10. '{
' → logprob: -20.5

Token 205: '_v' (ID: 5390)
  Prédit: '_v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_v' → logprob: -0.0016905349912121892
    2. 'v' → logprob: -7.12669038772583
    3. 'vj' → logprob: -7.62669038772583
    4. '_j' → logprob: -8.126690864562988
    5. 'j' → logprob: -9.376690864562988
    6. '[j' → logprob: -11.501690864562988
    7. '[v' → logprob: -12.751690864562988
    8. '-v' → logprob: -13.501690864562988
    9. '[' → logprob: -14.251690864562988
    10. '```' → logprob: -14.501690864562988

Token 206: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -9.758300438988954e-05
    2. 'v' → logprob: -9.250097274780273
    3. 'vj' → logprob: -14.250097274780273
    4. 'jj' → logprob: -15.500097274780273
    5. '[j' → logprob: -16.000097274780273
    6. '```' → logprob: -16.000097274780273
    7. '   ' → logprob: -16.375097274780273
    8. '_j' → logprob: -16.875097274780273
    9. '
' → logprob: -16.875097274780273
    10. '

' → logprob: -16.875097274780273

Token 207: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.23033572733402252
    2. '
' → logprob: -1.8553357124328613
    3. 'dp' → logprob: -3.1053357124328613
    4. '               ' → logprob: -6.480335712432861
    5. ' dp' → logprob: -7.105335712432861
    6. '            
' → logprob: -7.105335712432861
    7. 'if' → logprob: -8.10533618927002
    8. ' if' → logprob: -8.85533618927002
    9. '-' → logprob: -9.23033618927002
    10. '+' → logprob: -9.48033618927002

Token 208: '           ' (ID: 352)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.28383198380470276
    2. '           ' → logprob: -1.4088319540023804
    3. 'dp' → logprob: -7.28383207321167
    4. ' dp' → logprob: -8.033831596374512
    5. '            
' → logprob: -8.033831596374512
    6. 'best' → logprob: -8.408831596374512
    7. '
' → logprob: -8.408831596374512
    8. '```' → logprob: -8.783831596374512
    9. ' if' → logprob: -9.158831596374512
    10. ' 
' → logprob: -9.283831596374512

Token 209: ' #' (ID: 1069)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.22792792320251465
    2. 'proj' → logprob: -1.9779279232025146
    3. 'projection' → logprob: -4.352928161621094
    4. 'res' → logprob: -4.477928161621094
    5. 'val' → logprob: -4.727928161621094
    6. 'best' → logprob: -5.352928161621094
    7. 'dist' → logprob: -5.352928161621094
    8. 'cos' → logprob: -5.477928161621094
    9. 'if' → logprob: -5.977928161621094
    10. 'candidate' → logprob: -5.977928161621094

Token 210: ' squared' (ID: 117867)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.8559580445289612
    2. 'proj' → logprob: -0.8559580445289612
    3. 'val' → logprob: -3.2309579849243164
    4. 'c' → logprob: -3.4809579849243164
    5. 'projection' → logprob: -3.9809579849243164
    6. 'res' → logprob: -4.855957984924316
    7. 'p' → logprob: -4.855957984924316
    8. 'tmp' → logprob: -5.355957984924316
    9. 'cos' → logprob: -5.355957984924316
    10. 'if' → logprob: -5.480957984924316

Token 211: ' length' (ID: 5517)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -1.050941824913025
    2. 'dist' → logprob: -1.175941824913025
    3. 'diff' → logprob: -2.3009419441223145
    4. 'error' → logprob: -2.4259419441223145
    5. 'length' → logprob: -2.8009419441223145
    6. 'cost' → logprob: -3.3009419441223145
    7. 'distance' → logprob: -3.6759419441223145
    8. 'norm' → logprob: -5.0509419441223145
    9. 'val' → logprob: -5.5509419441223145
    10. 'proj' → logprob: -5.9259419441223145

Token 212: ' of' (ID: 328)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5659586191177368
    2. '=' → logprob: -1.0659586191177368
    3. 'diff' → logprob: -3.0659584999084473
    4. ' =' → logprob: -4.565958499908447
    5. 's' → logprob: -5.315958499908447
    6. 'cost' → logprob: -5.815958499908447
    7. 'term' → logprob: -5.940958499908447
    8. 'r' → logprob: -6.190958499908447
    9. 'len' → logprob: -6.190958499908447
    10. ' of' → logprob: -6.315958499908447

Token 213: ' (' (ID: 350)
  Prédit: 'vectors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vectors' → logprob: -0.5255555510520935
    2. ' vectors' → logprob: -1.7755556106567383
    3. 'vi' → logprob: -2.2755556106567383
    4. ' [' → logprob: -3.6505556106567383
    5. ' vi' → logprob: -3.7755556106567383
    6. '[i' → logprob: -3.7755556106567383
    7. '[' → logprob: -4.025555610656738
    8. '[v' → logprob: -4.025555610656738
    9. 'v' → logprob: -5.150555610656738
    10. '   ' → logprob: -5.150555610656738

Token 214: 'v' (ID: 85)
  Prédit: 'vectors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vectors' → logprob: -0.8141534924507141
    2. ' vectors' → logprob: -1.8141534328460693
    3. '[i' → logprob: -1.9391534328460693
    4. 'vi' → logprob: -1.9391534328460693
    5. ' [' → logprob: -2.8141534328460693
    6. ' vi' → logprob: -4.314153671264648
    7. '[' → logprob: -4.439153671264648
    8. '[v' → logprob: -5.189153671264648
    9. '   ' → logprob: -5.689153671264648
    10. '[
' → logprob: -6.439153671264648

Token 215: '_i' (ID: 10853)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5458996295928955
    2. 'ectors' → logprob: -0.9208996295928955
    3. '[i' → logprob: -4.295899391174316
    4. 'vectors' → logprob: -5.920899391174316
    5. 'vi' → logprob: -6.045899391174316
    6. '[' → logprob: -6.545899391174316
    7. 'ector' → logprob: -6.795899391174316
    8. 'ec' → logprob: -7.920899391174316
    9. ' vectors' → logprob: -8.670899391174316
    10. '   ' → logprob: -9.045899391174316

Token 216: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.18167147040367126
    2. '-' → logprob: -1.8066715002059937
    3. '[i' → logprob: -7.056671619415283
    4. '-r' → logprob: -7.556671619415283
    5. '[' → logprob: -7.931671619415283
    6. '-v' → logprob: -10.181671142578125
    7. '[-' → logprob: -10.556671142578125
    8. ' ' → logprob: -10.681671142578125
    9. '-i' → logprob: -11.431671142578125
    10. '[r' → logprob: -11.431671142578125

Token 217: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.37522655725479126
    2. ' r' → logprob: -1.2502264976501465
    3. 'vj' → logprob: -4.6252264976501465
    4. 'v' → logprob: -4.8752264976501465
    5. ' v' → logprob: -5.2502264976501465
    6. ' (' → logprob: -7.2502264976501465
    7. '(r' → logprob: -7.2502264976501465
    8. ' vectors' → logprob: -7.5002264976501465
    9. ' ' → logprob: -8.250226974487305
    10. '[r' → logprob: -8.250226974487305

Token 218: ' v' (ID: 323)
  Prédit: '*v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*v' → logprob: -0.40492793917655945
    2. '*' → logprob: -1.1549279689788818
    3. ' *' → logprob: -5.404927730560303
    4. 'vj' → logprob: -5.529927730560303
    5. '[i' → logprob: -5.654927730560303
    6. 'vi' → logprob: -6.404927730560303
    7. '*i' → logprob: -6.529927730560303
    8. '*j' → logprob: -6.529927730560303
    9. 'v' → logprob: -7.154927730560303
    10. '[j' → logprob: -8.654928207397461

Token 219: '_j' (ID: 12021)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.03845534101128578
    2. 'j' → logprob: -3.4134552478790283
    3. 'ectors' → logprob: -5.413455486297607
    4. '_i' → logprob: -8.28845500946045
    5. '[i' → logprob: -10.53845500946045
    6. ' i' → logprob: -10.66345500946045
    7. 'ector' → logprob: -11.66345500946045
    8. 'e' → logprob: -12.03845500946045
    9. '_j' → logprob: -12.16345500946045
    10. 'vectors' → logprob: -12.16345500946045

Token 220: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20360852777957916
    2. ')**' → logprob: -1.828608512878418
    3. '[i' → logprob: -5.203608512878418
    4. ' )' → logprob: -5.328608512878418
    5. ')
' → logprob: -5.453608512878418
    6. '):' → logprob: -5.578608512878418
    7. ')=' → logprob: -6.078608512878418
    8. ')*' → logprob: -6.828608512878418
    9. '   ' → logprob: -7.828608512878418
    10. '):
' → logprob: -8.703608512878418

Token 221: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4272227883338928
    2. '
' → logprob: -2.052222728729248
    3. '           ' → logprob: -2.052222728729248
    4. 'diff' → logprob: -3.177222728729248
    5. 's' → logprob: -4.552222728729248
    6. 'cost' → logprob: -5.302222728729248
    7. 'length' → logprob: -5.552222728729248
    8. 'dist' → logprob: -5.552222728729248
    9. ',' → logprob: -6.052222728729248
    10. 'd' → logprob: -6.177222728729248

Token 222: ' val' (ID: 1459)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.9515347480773926
    2. '=' → logprob: -1.3265347480773926
    3. 'dot' → logprob: -2.7015347480773926
    4. 'val' (adapté à ' val') → logprob: -2.7015347480773926
    5. 'cost' → logprob: -2.8265347480773926
    6. 'best' → logprob: -3.3265347480773926
    7. 's' → logprob: -3.9515347480773926
    8. 'sq' → logprob: -4.326534748077393
    9. 'cur' → logprob: -4.451534748077393
    10. 'res' → logprob: -4.576534748077393

Token 223: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0415508858859539
    2. ' =' → logprob: -4.041551113128662
    3. '=len' → logprob: -4.166551113128662
    4. '=v' → logprob: -4.916551113128662
    5. '=r' → logprob: -8.541550636291504
    6. '=(' → logprob: -10.541550636291504
    7. '=line' → logprob: -10.791550636291504
    8. '=i' → logprob: -11.166550636291504
    9. '=d' → logprob: -11.541550636291504
    10. '=j' → logprob: -12.666550636291504

Token 224: 'dot' (ID: 29155)
  Prédit: 'dot'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dot' → logprob: -0.16394668817520142
    2. 'len' → logprob: -1.9139466285705566
    3. '           ' → logprob: -6.163946628570557
    4. ' dot' → logprob: -6.663946628570557
    5. '(dot' → logprob: -9.288947105407715
    6. 'length' → logprob: -9.913947105407715
    7. ' len' → logprob: -10.413947105407715
    8. 'dp' → logprob: -10.788947105407715
    9. '   ' → logprob: -10.913947105407715
    10. '          ' → logprob: -11.038947105407715

Token 225: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -9.088346359931165e-07
    2. 'i' → logprob: -14.375000953674316
    3. '[' → logprob: -15.750000953674316
    4. ',i' → logprob: -17.125
    5. '[j' → logprob: -17.375
    6. '][' → logprob: -17.875
    7. '[I' → logprob: -17.875
    8. '   ' → logprob: -18.125
    9. '```' → logprob: -18.25
    10. ' i' → logprob: -18.875

Token 226: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0009314678027294576
    2. '[i' → logprob: -7.000931262969971
    3. ']' → logprob: -11.750931739807129
    4. ' ][' → logprob: -12.625931739807129
    5. 'i' → logprob: -12.750931739807129
    6. '}[' → logprob: -14.000931739807129
    7. ',i' → logprob: -14.125931739807129
    8. '"][' → logprob: -14.250931739807129
    9. ''][' → logprob: -14.250931739807129
    10. '[' → logprob: -14.375931739807129

Token 227: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.5048530030981055e-06
    2. ' i' → logprob: -13.750001907348633
    3. '[i' → logprob: -15.375001907348633
    4. '[' → logprob: -16.500001907348633
    5. ']' → logprob: -17.375001907348633
    6. '][' → logprob: -17.375001907348633
    7. ',i' → logprob: -17.625001907348633
    8. '
' → logprob: -17.875001907348633
    9. ' ' → logprob: -19.375001907348633
    10. '	i' → logprob: -19.500001907348633

Token 228: ']-' (ID: 27107)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.387280136346817
    2. ']-' → logprob: -1.1372801065444946
    3. ']+' → logprob: -8.512280464172363
    4. '-' → logprob: -8.512280464172363
    5. ']
' → logprob: -12.762280464172363
    6. ' ]' → logprob: -13.637280464172363
    7. ' -' → logprob: -14.012280464172363
    8. '"-' → logprob: -15.137280464172363
    9. '])-' → logprob: -15.637280464172363
    10. ']>=' → logprob: -15.762280464172363

Token 229: 'r' (ID: 81)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.300083648762666e-05
    2. ' ' → logprob: -10.250053405761719
    3. 'r' → logprob: -11.750053405761719
    4. '(' → logprob: -12.125053405761719
    5. '
' → logprob: -14.500053405761719
    6. '           ' → logprob: -14.500053405761719
    7. '   ' → logprob: -14.625053405761719
    8. '         ' → logprob: -15.000053405761719
    9. '          ' → logprob: -15.125053405761719
    10. '(r' → logprob: -15.125053405761719

Token 230: '*r' (ID: 92096)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.006189956795424223
    2. '*v' → logprob: -5.131189823150635
    3. '*(' → logprob: -8.506190299987793
    4. '**' → logprob: -10.506190299987793
    5. '2' → logprob: -11.131190299987793
    6. '*r' → logprob: -11.756190299987793
    7. ' *' → logprob: -12.756190299987793
    8. '*j' → logprob: -13.631190299987793
    9. '*q' → logprob: -13.881190299987793
    10. '*s' → logprob: -14.006190299987793

Token 231: '*v' (ID: 130438)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.3874371349811554
    2. '*v' → logprob: -1.137437105178833
    3. 'vj' → logprob: -8.512436866760254
    4. ' *' → logprob: -8.637436866760254
    5. '*j' → logprob: -8.637436866760254
    6. 'v' → logprob: -12.637436866760254
    7. '*object' → logprob: -13.762436866760254
    8. '```' → logprob: -13.762436866760254
    9. '*r' → logprob: -14.012436866760254
    10. '**' → logprob: -14.012436866760254

Token 232: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.0683535037969705e-05
    2. '[j' → logprob: -11.50001049041748
    3. ' j' → logprob: -15.87501049041748
    4. 'i' → logprob: -15.87501049041748
    5. '[' → logprob: -16.625011444091797
    6. '_j' → logprob: -16.625011444091797
    7. '```' → logprob: -17.875011444091797
    8. 'v' → logprob: -18.125011444091797
    9. 'ectors' → logprob: -18.625011444091797
    10. '	j' → logprob: -19.000011444091797

Token 233: '_v' (ID: 5390)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.05550216883420944
    2. 'j' → logprob: -3.05550217628479
    3. 'v' → logprob: -5.430501937866211
    4. 'vj' → logprob: -6.555501937866211
    5. '[v' → logprob: -7.055501937866211
    6. '_j' → logprob: -9.180501937866211
    7. '[' → logprob: -9.555501937866211
    8. '[
' → logprob: -11.055501937866211
    9. '_v' → logprob: -11.305501937866211
    10. 'jj' → logprob: -12.305501937866211

Token 234: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -5.796184723294573e-06
    2. '[' → logprob: -12.375005722045898
    3. 'v' → logprob: -14.375005722045898
    4. '[j' → logprob: -14.500005722045898
    5. '_j' → logprob: -15.875005722045898
    6. '
' → logprob: -16.3750057220459
    7. 'jj' → logprob: -16.6250057220459
    8. '```' → logprob: -16.6250057220459
    9. '[
' → logprob: -16.7500057220459
    10. '   ' → logprob: -16.8750057220459

Token 235: '*' (ID: 9)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.031463347375392914
    2. '<|end|>' → logprob: -4.156463146209717
    3. '           ' → logprob: -5.031463146209717
    4. '
' → logprob: -5.531463146209717
    5. '+' → logprob: -6.031463146209717
    6. ' if' → logprob: -7.281463146209717
    7. ')' → logprob: -7.406463146209717
    8. ',' → logprob: -8.156463623046875
    9. '<|end|>' → logprob: -8.156463623046875
    10. '   ' → logprob: -9.031463623046875

Token 236: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.30525603890419006
    2. '2' → logprob: -2.8052561283111572
    3. '0' → logprob: -3.0552561283111572
    4. ')' → logprob: -3.1802561283111572
    5. '```' → logprob: -3.8052561283111572
    6. '[' → logprob: -4.805255889892578
    7. ' ' → logprob: -4.930255889892578
    8. '=' → logprob: -5.180255889892578
    9. 'r' → logprob: -5.180255889892578
    10. '+' → logprob: -5.305255889892578

Token 237: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.07008793205022812
    2. ' +' → logprob: -2.9450879096984863
    3. '<|end|>' → logprob: -4.320087909698486
    4. ' ' → logprob: -7.195087909698486
    5. '+r' → logprob: -8.320088386535645
    6. ')' → logprob: -8.445088386535645
    7. '+
' → logprob: -9.070088386535645
    8. '<|end|>' → logprob: -9.320088386535645
    9. '-' → logprob: -10.070088386535645
    10. ' +
' → logprob: -10.195088386535645

Token 238: ' r' (ID: 428)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.018858997151255608
    2. 'r' → logprob: -4.143858909606934
    3. 'dot' → logprob: -6.643858909606934
    4. 'v' → logprob: -7.018858909606934
    5. ' ' → logprob: -7.768858909606934
    6. 's' → logprob: -10.268858909606934
    7. ' r' → logprob: -10.393858909606934
    8. '1' → logprob: -10.518858909606934
    9. 'vj' → logprob: -10.518858909606934
    10. '0' → logprob: -10.643858909606934

Token 239: '*r' (ID: 92096)
  Prédit: '*v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*v' → logprob: -0.67132169008255
    2. '*r' → logprob: -1.2963216304779053
    3. '2' → logprob: -2.4213216304779053
    4. 'r' → logprob: -2.6713216304779053
    5. '*' → logprob: -3.9213216304779053
    6. 'vj' → logprob: -4.046321868896484
    7. 'v' → logprob: -4.671321868896484
    8. '**' → logprob: -4.671321868896484
    9. ' *' → logprob: -7.421321868896484
    10. '<|end|>' → logprob: -7.921321868896484

Token 240: '*v' (ID: 130438)
  Prédit: 'vj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vj' → logprob: -0.16982035338878632
    2. 'v' → logprob: -2.4198203086853027
    3. 'dot' → logprob: -2.9198203086853027
    4. '*v' → logprob: -4.544820308685303
    5. '*' → logprob: -6.919820308685303
    6. '-dot' → logprob: -7.544820308685303
    7. '[' → logprob: -8.669820785522461
    8. ' dot' → logprob: -8.794820785522461
    9. '+' → logprob: -9.419820785522461
    10. '0' → logprob: -9.544820785522461

Token 241: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.700132997939363e-05
    2. 'v' → logprob: -11.250017166137695
    3. '[j' → logprob: -13.125017166137695
    4. '_j' → logprob: -14.125017166137695
    5. 'i' → logprob: -15.000017166137695
    6. '[' → logprob: -15.000017166137695
    7. '```' → logprob: -15.375017166137695
    8. ' j' → logprob: -16.125017166137695
    9. '[v' → logprob: -17.375017166137695
    10. '
' → logprob: -17.500017166137695

Token 242: '_v' (ID: 5390)
  Prédit: '_v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_v' → logprob: -0.17359930276870728
    2. '_j' → logprob: -1.9235992431640625
    3. 'vj' → logprob: -4.7985992431640625
    4. '[j' → logprob: -5.6735992431640625
    5. 'j' → logprob: -6.6735992431640625
    6. 'v' → logprob: -8.673599243164062
    7. '[' → logprob: -9.548599243164062
    8. '[v' → logprob: -9.673599243164062
    9. '_i' → logprob: -11.173599243164062
    10. '   ' → logprob: -12.298599243164062

Token 243: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0007152927573770285
    2. 'v' → logprob: -7.375715255737305
    3. 'vj' → logprob: -10.125715255737305
    4. 'i' → logprob: -10.250715255737305
    5. 'vi' → logprob: -12.250715255737305
    6. '[' → logprob: -12.750715255737305
    7. '_j' → logprob: -14.000715255737305
    8. '   ' → logprob: -14.250715255737305
    9. '```' → logprob: -14.500715255737305
    10. '
' → logprob: -14.625715255737305

Token 244: '
' (ID: 198)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.04943164438009262
    2. '<|end|>' → logprob: -3.799431562423706
    3. ' -' → logprob: -4.299431800842285
    4. '*' → logprob: -5.424431800842285
    5. ')' → logprob: -5.424431800842285
    6. '=' → logprob: -6.924431800842285
    7. '           ' → logprob: -7.299431800842285
    8. '   ' → logprob: -8.549431800842285
    9. '
' → logprob: -8.924431800842285
    10. '+' → logprob: -8.924431800842285

Token 245: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 246: ' #' (ID: 1069)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.26026517152786255
    2. '-' → logprob: -2.3852651119232178
    3. '<|end|>' → logprob: -2.7602651119232178
    4. '           ' → logprob: -3.8852651119232178
    5. ')' → logprob: -4.010265350341797
    6. ' =' → logprob: -4.510265350341797
    7. 'val' → logprob: -4.885265350341797
    8. ' val' → logprob: -6.010265350341797
    9. '+' → logprob: -6.135265350341797
    10. '<|end|>' → logprob: -6.635265350341797

Token 247: ' Simpl' (ID: 92258)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.604607343673706
    2. ' val' → logprob: -1.604607343673706
    3. 'if' → logprob: -1.729607343673706
    4. '           ' → logprob: -3.229607343673706
    5. 'val' → logprob: -3.479607343673706
    6. '=' → logprob: -6.979607582092285
    7. ' best' → logprob: -6.979607582092285
    8. 'best' → logprob: -7.229607582092285
    9. '       ' → logprob: -7.479607582092285
    10. ')' → logprob: -8.229607582092285

Token 248: 'ify' (ID: 1985)
  Prédit: 'ify'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ify' → logprob: -0.013502068817615509
    2. 'ified' → logprob: -4.63850212097168
    3. 'e' → logprob: -6.38850212097168
    4. '           ' → logprob: -7.01350212097168
    5. 'if' → logprob: -7.51350212097168
    6. 'fy' → logprob: -8.38850212097168
    7. 'ifying' → logprob: -9.01350212097168
    8. 'y' → logprob: -9.51350212097168
    9. '               ' → logprob: -10.38850212097168
    10. 'ification' → logprob: -10.76350212097168

Token 249: ':' (ID: 25)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.13437806069850922
    2. 'val' → logprob: -3.009377956390381
    3. 'dot' → logprob: -3.384377956390381
    4. '-' → logprob: -4.384377956390381
    5. ' val' → logprob: -4.759377956390381
    6. ' =' → logprob: -5.009377956390381
    7. '-dot' → logprob: -5.009377956390381
    8. ' dot' → logprob: -5.884377956390381
    9. '-val' → logprob: -6.884377956390381
    10. '<|end|>' → logprob: -7.009377956390381

Token 250: ' (' (ID: 350)
  Prédit: 'dot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dot' → logprob: -0.24647358059883118
    2. 'val' → logprob: -1.8714735507965088
    3. '-dot' → logprob: -3.621473550796509
    4. ' dot' → logprob: -3.871473550796509
    5. ' val' → logprob: -4.496473789215088
    6. '-' → logprob: -6.121473789215088
    7. '-val' → logprob: -7.121473789215088
    8. '           ' → logprob: -7.496473789215088
    9. '   ' → logprob: -7.496473789215088
    10. '=' → logprob: -8.24647331237793

Token 251: 'v' (ID: 85)
  Prédit: 'dot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dot' → logprob: -0.0811198353767395
    2. 'val' → logprob: -2.5811197757720947
    3. 'len' → logprob: -6.831120014190674
    4. ' dot' → logprob: -7.206120014190674
    5. ' val' → logprob: -9.456119537353516
    6. ')' → logprob: -9.456119537353516
    7. 'i' → logprob: -9.706119537353516
    8. '(dot' → logprob: -10.331119537353516
    9. '           ' → logprob: -10.706119537353516
    10. '-dot' → logprob: -10.831119537353516

Token 252: '_i' (ID: 10853)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0008808538550511003
    2. '[' → logprob: -7.500880718231201
    3. 'i' → logprob: -8.50088119506836
    4. '_i' → logprob: -9.12588119506836
    5. ')' → logprob: -13.12588119506836
    6. '[
' → logprob: -13.50088119506836
    7. '\[' → logprob: -13.50088119506836
    8. '[j' → logprob: -13.62588119506836
    9. '{i' → logprob: -13.75088119506836
    10. ')[' → logprob: -14.00088119506836

Token 253: ' -' (ID: 533)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.03509410843253136
    2. '[' → logprob: -3.5350940227508545
    3. '[k' → logprob: -6.285094261169434
    4. '-' → logprob: -6.910094261169434
    5. '[j' → logprob: -7.410094261169434
    6. ')[' → logprob: -7.535094261169434
    7. ')' → logprob: -8.035094261169434
    8. '][' → logprob: -8.035094261169434
    9. ' -' → logprob: -8.535094261169434
    10. '   ' → logprob: -9.785094261169434

Token 254: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.08063353598117828
    2. ' r' → logprob: -3.3306336402893066
    3. '2' → logprob: -3.8306336402893066
    4. 'v' → logprob: -4.330633640289307
    5. 'vj' → logprob: -6.080633640289307
    6. 'vi' → logprob: -6.205633640289307
    7. ' ' → logprob: -6.705633640289307
    8. '1' → logprob: -7.455633640289307
    9. ' v' → logprob: -7.955633640289307
    10. ')' → logprob: -8.705633163452148

Token 255: ' v' (ID: 323)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.005979277193546295
    2. '[' → logprob: -6.130979061126709
    3. '<|end|>' → logprob: -7.130979061126709
    4. '*v' → logprob: -7.505979061126709
    5. 'vi' → logprob: -7.880979061126709
    6. ')' → logprob: -7.880979061126709
    7. '*' → logprob: -8.255979537963867
    8. 'v' → logprob: -8.255979537963867
    9. '[j' → logprob: -8.880979537963867
    10. '[v' → logprob: -9.005979537963867

Token 256: '_j' (ID: 12021)
  Prédit: '_i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.6338129639625549
    2. '[i' → logprob: -0.8838129639625549
    3. 'i' → logprob: -2.88381290435791
    4. '[' → logprob: -9.13381290435791
    5. '[j' → logprob: -10.13381290435791
    6. 'j' → logprob: -10.38381290435791
    7. ')' → logprob: -10.88381290435791
    8. '][' → logprob: -11.38381290435791
    9. '```' → logprob: -11.88381290435791
    10. '   ' → logprob: -12.00881290435791

Token 257: ')^' (ID: 73602)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.49038708209991455
    2. ')*(' → logprob: -1.7403870820999146
    3. ')**' → logprob: -1.8653870820999146
    4. ').' → logprob: -3.865386962890625
    5. ')*' → logprob: -4.740386962890625
    6. '[i' → logprob: -5.115386962890625
    7. ')[' → logprob: -5.240386962890625
    8. '[' → logprob: -5.365386962890625
    9. ')
' → logprob: -6.240386962890625
    10. ' )' → logprob: -6.615386962890625

Token 258: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.003926895093172789
    2. ' ' → logprob: -6.128926753997803
    3. '(' → logprob: -7.378926753997803
    4. '(v' → logprob: -7.628926753997803
    5. 'dot' → logprob: -8.503927230834961
    6. ' (' → logprob: -9.628927230834961
    7. 'T' → logprob: -9.753927230834961
    8. ')' → logprob: -9.753927230834961
    9. '(dot' → logprob: -9.753927230834961
    10. ' dot' → logprob: -10.753927230834961

Token 259: ' =' (ID: 314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 260: ' v' (ID: 323)
  Prédit: 'dot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dot' → logprob: -0.0013570250011980534
    2. ' dot' → logprob: -7.376357078552246
    3. 'val' → logprob: -7.376357078552246
    4. 'len' → logprob: -9.876357078552246
    5. '(dot' → logprob: -10.126357078552246
    6. 'v' → logprob: -13.251357078552246
    7. '```' → logprob: -13.376357078552246
    8. '           ' → logprob: -13.626357078552246
    9. '`' → logprob: -14.001357078552246
    10. 'dots' → logprob: -14.126357078552246

Token 261: '_i' (ID: 10853)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00044163595885038376
    2. '[' → logprob: -8.375441551208496
    3. 'i' → logprob: -8.625441551208496
    4. '_i' → logprob: -10.750441551208496
    5. '{i' → logprob: -12.875441551208496
    6. '[j' → logprob: -13.875441551208496
    7. '[
' → logprob: -13.875441551208496
    8. ' i' → logprob: -14.000441551208496
    9. '[I' → logprob: -14.000441551208496
    10. '\[' → logprob: -14.000441551208496

Token 262: '.v' (ID: 5520)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.02653459832072258
    2. '[' → logprob: -3.6515345573425293
    3. ' [' → logprob: -10.401535034179688
    4. '[j' → logprob: -10.401535034179688
    5. '\[' → logprob: -10.401535034179688
    6. '][' → logprob: -11.026535034179688
    7. '```' → logprob: -11.026535034179688
    8. '[ii' → logprob: -11.401535034179688
    9. 'dot' → logprob: -11.401535034179688
    10. '   ' → logprob: -11.776535034179688

Token 263: '_i' (ID: 10853)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.2540731132030487
    2. '[i' → logprob: -1.504073143005371
    3. '_i' → logprob: -6.879073143005371
    4. ' i' → logprob: -7.004073143005371
    5. '[' → logprob: -9.629073143005371
    6. '(i' → logprob: -10.129073143005371
    7. 'dot' → logprob: -11.379073143005371
    8. ' ' → logprob: -11.629073143005371
    9. ',i' → logprob: -11.629073143005371
    10. 'v' → logprob: -11.879073143005371

Token 264: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.015973135828971863
    2. '-' → logprob: -4.265973091125488
    3. '<|end|>' → logprob: -7.015973091125488
    4. ')' → logprob: -8.015973091125488
    5. ' ' → logprob: -8.390973091125488
    6. ' *' → logprob: -9.015973091125488
    7. '*' → logprob: -10.265973091125488
    8. ' ' → logprob: -10.265973091125488
    9. '    ' → logprob: -10.515973091125488
    10. '   ' → logprob: -11.015973091125488

Token 265: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00977178942412138
    2. ' ' → logprob: -4.634771823883057
    3. '(' → logprob: -12.509771347045898
    4. ' ' → logprob: -12.884771347045898
    5. '   ' → logprob: -13.134771347045898
    6. 'v' → logprob: -13.884771347045898
    7. '  ' → logprob: -14.072271347045898
    8. '     ' → logprob: -14.384771347045898
    9. '    ' → logprob: -14.697271347045898
    10. '         ' → logprob: -14.759771347045898

Token 266: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.009764587506651878
    2. ' ' → logprob: -4.634764671325684
    3. '(' → logprob: -12.884764671325684
    4. '   ' → logprob: -13.759764671325684
    5. ' ' → logprob: -14.134764671325684
    6. ' (' → logprob: -14.572264671325684
    7. '  ' → logprob: -14.697264671325684
    8. '```' → logprob: -15.134764671325684
    9. '
' → logprob: -15.197264671325684
    10. '     ' → logprob: -15.322264671325684

Token 267: 'r' (ID: 81)
  Prédit: '*r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*r' → logprob: -0.16774863004684448
    2. '*' → logprob: -2.5427486896514893
    3. ' *' → logprob: -2.7927486896514893
    4. 'r' → logprob: -4.41774845123291
    5. ' r' → logprob: -6.29274845123291
    6. '*v' → logprob: -7.91774845123291
    7. ' ' → logprob: -8.79274845123291
    8. '   ' → logprob: -10.04274845123291
    9. '```' → logprob: -10.54274845123291
    10. ' ' → logprob: -12.04274845123291

Token 268: ' v' (ID: 323)
  Prédit: '*v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*v' → logprob: -0.5447075366973877
    2. '*' → logprob: -0.9197075366973877
    3. '*s' → logprob: -4.544707298278809
    4. ' *' → logprob: -4.669707298278809
    5. '*r' → logprob: -6.794707298278809
    6. 's' → logprob: -9.794707298278809
    7. 'v' → logprob: -10.419707298278809
    8. '*d' → logprob: -10.794707298278809
    9. 'vj' → logprob: -10.919707298278809
    10. '```' → logprob: -11.294707298278809

Token 269: '_i' (ID: 10853)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.037347640842199326
    2. '_i' → logprob: -3.5373475551605225
    3. 'j' → logprob: -5.537347793579102
    4. '[i' → logprob: -5.912347793579102
    5. 'dot' → logprob: -7.787347793579102
    6. 'ij' → logprob: -9.162347793579102
    7. '[' → logprob: -9.287347793579102
    8. '_j' → logprob: -9.662347793579102
    9. ' i' → logprob: -9.787347793579102
    10. ' dot' → logprob: -10.287347793579102

Token 270: '.v' (ID: 5520)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.6906392574310303
    2. '.v' → logprob: -1.4406392574310303
    3. '[' → logprob: -2.3156392574310303
    4. '.' → logprob: -2.4406392574310303
    5. '.dot' → logprob: -3.6906392574310303
    6. '[j' → logprob: -4.565639495849609
    7. '.i' → logprob: -4.690639495849609
    8. '[v' → logprob: -5.065639495849609
    9. 'dot' → logprob: -5.190639495849609
    10. '_dot' → logprob: -5.440639495849609

Token 271: '_j' (ID: 12021)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0023585218004882336
    2. 'i' → logprob: -6.127358436584473
    3. '_j' → logprob: -9.377358436584473
    4. ' j' → logprob: -9.627358436584473
    5. '[j' → logprob: -11.377358436584473
    6. '_i' → logprob: -12.252358436584473
    7. 'ij' → logprob: -13.002358436584473
    8. '[i' → logprob: -13.627358436584473
    9. ' i' → logprob: -14.002358436584473
    10. '	j' → logprob: -14.502358436584473

Token 272: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.23200012743473053
    2. ' +' → logprob: -1.8570001125335693
    3. '           ' → logprob: -3.8570001125335693
    4. '<|end|>' → logprob: -4.482000350952148
    5. ')' → logprob: -4.607000350952148
    6. '-' → logprob: -5.857000350952148
    7. '*' → logprob: -6.732000350952148
    8. ' -' → logprob: -6.732000350952148
    9. '       ' → logprob: -7.357000350952148
    10. ' *' → logprob: -7.607000350952148

Token 273: ' r' (ID: 428)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0628558099269867
    2. ' ' → logprob: -2.8128557205200195
    3. 'v' → logprob: -8.18785572052002
    4. 'r' → logprob: -8.43785572052002
    5. ' r' → logprob: -8.93785572052002
    6. ' v' → logprob: -9.31285572052002
    7. 'dot' → logprob: -9.93785572052002
    8. '+' → logprob: -10.43785572052002
    9. ' dot' → logprob: -10.68785572052002
    10. '1' → logprob: -10.81285572052002

Token 274: '^' (ID: 61)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.8077120184898376
    2. '*v' → logprob: -0.8077120184898376
    3. ' *' → logprob: -2.5577120780944824
    4. '2' → logprob: -4.307712078094482
    5. 'v' → logprob: -5.432712078094482
    6. '<|end|>' → logprob: -5.432712078094482
    7. '*r' → logprob: -5.807712078094482
    8. '**' → logprob: -6.057712078094482
    9. ' ' → logprob: -6.682712078094482
    10. 'vj' → logprob: -7.432712078094482

Token 275: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.055976834148168564
    2. '1' → logprob: -3.3059768676757812
    3. 'T' → logprob: -4.930976867675781
    4. 'vj' → logprob: -5.305976867675781
    5. 'v' → logprob: -6.055976867675781
    6. 'j' → logprob: -6.555976867675781
    7. 'i' → logprob: -7.305976867675781
    8. ' ' → logprob: -8.055976867675781
    9. 'vi' → logprob: -8.805976867675781
    10. '_' → logprob: -8.930976867675781

Token 276: ' v' (ID: 323)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.6131899356842041
    2. ' *' → logprob: -1.488189935684204
    3. '*v' → logprob: -1.613189935684204
    4. '<|end|>' → logprob: -3.988189935684204
    5. ')' → logprob: -4.488189697265625
    6. '+' → logprob: -7.363189697265625
    7. '*r' → logprob: -7.613189697265625
    8. '...' → logprob: -7.988189697265625
    9. '   ' → logprob: -8.363189697265625
    10. ',' → logprob: -8.863189697265625

Token 277: '_j' (ID: 12021)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0005125218303874135
    2. 'i' → logprob: -8.12551212310791
    3. '[j' → logprob: -9.62551212310791
    4. '_j' → logprob: -10.12551212310791
    5. '[' → logprob: -10.50051212310791
    6. '
' → logprob: -10.50051212310791
    7. '```' → logprob: -10.75051212310791
    8. '[i' → logprob: -11.62551212310791
    9. '[
' → logprob: -12.81301212310791
    10. '_i' → logprob: -12.81301212310791

Token 278: '.v' (ID: 5520)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.47711822390556335
    2. '_j' → logprob: -1.1021182537078857
    3. '[' → logprob: -4.227118015289307
    4. 'j' → logprob: -4.852118015289307
    5. '[v' → logprob: -4.852118015289307
    6. '[i' → logprob: -5.102118015289307
    7. '_v' → logprob: -5.602118015289307
    8. 'vj' → logprob: -5.727118015289307
    9. 'v' → logprob: -6.477118015289307
    10. 'jj' → logprob: -7.977118015289307

Token 279: '_j' (ID: 12021)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.00577995041385293
    2. '[j' → logprob: -5.88077974319458
    3. '[' → logprob: -6.63077974319458
    4. '_j' → logprob: -7.00577974319458
    5. 'i' → logprob: -8.380780220031738
    6. '[
' → logprob: -9.630780220031738
    7. ']' → logprob: -9.880780220031738
    8. '[i' → logprob: -10.005780220031738
    9. '<|end|>' → logprob: -10.130780220031738
    10. '   ' → logprob: -10.255780220031738

Token 280: '
' (ID: 198)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.04648155719041824
    2. ' -' → logprob: -3.5464816093444824
    3. '<|end|>' → logprob: -4.921481609344482
    4. '           ' → logprob: -5.671481609344482
    5. ' ' → logprob: -6.296481609344482
    6. '       ' → logprob: -6.796481609344482
    7. '   ' → logprob: -7.171481609344482
    8. ')' → logprob: -7.546481609344482
    9. '
' → logprob: -7.671481609344482
    10. '=' → logprob: -8.671481132507324

Token 281: '           ' (ID: 352)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.08736633509397507
    2. ' -' → logprob: -2.7123663425445557
    3. '           ' → logprob: -4.462366104125977
    4. '<|end|>' → logprob: -6.212366104125977
    5. ' ' → logprob: -6.712366104125977
    6. '       ' → logprob: -7.587366104125977
    7. '=' → logprob: -7.712366104125977
    8. '   ' → logprob: -8.087366104125977
    9. '
' → logprob: -8.837366104125977
    10. ')' → logprob: -8.837366104125977

Token 282: ' val' (ID: 1459)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10394478589296341
    2. ' val' → logprob: -3.478944778442383
    3. 'val' (adapté à ' val') → logprob: -3.728944778442383
    4. ' if' → logprob: -4.228944778442383
    5. 'if' → logprob: -4.728944778442383
    6. '-' → logprob: -4.853944778442383
    7. '       ' → logprob: -5.603944778442383
    8. '=' → logprob: -6.478944778442383
    9. ')' → logprob: -6.478944778442383
    10. ' -' → logprob: -7.103944778442383

Token 283: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0625070333480835
    2. ' =' → logprob: -2.812507152557373
    3. '-=' → logprob: -8.062506675720215
    4. ' -=' → logprob: -9.437506675720215
    5. '=v' → logprob: -9.687506675720215
    6. '=-' → logprob: -10.562506675720215
    7. '+=' → logprob: -10.562506675720215
    8. '   ' → logprob: -11.937506675720215
    9. '*=' → logprob: -12.937506675720215
    10. '=line' → logprob: -13.062506675720215

Token 284: 'dot' (ID: 29155)
  Prédit: 'dot'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dot' → logprob: -0.0008703675703145564
    2. ' dot' → logprob: -7.125870227813721
    3. '(dot' → logprob: -10.250870704650879
    4. '           ' → logprob: -11.250870704650879
    5. '   ' → logprob: -11.375870704650879
    6. '       ' → logprob: -13.625870704650879
    7. 'dots' → logprob: -13.875870704650879
    8. ' ' → logprob: -14.500870704650879
    9. '               ' → logprob: -14.875870704650879
    10. '  ' → logprob: -14.875870704650879

Token 285: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.963691804325208e-05
    2. 'i' → logprob: -10.875029563903809
    3. '[' → logprob: -11.625029563903809
    4. '[I' → logprob: -14.125029563903809
    5. ' i' → logprob: -15.750029563903809
    6. '{i' → logprob: -15.875029563903809
    7. ' [' → logprob: -16.000030517578125
    8. '[int' → logprob: -16.125030517578125
    9. '```' → logprob: -16.250030517578125
    10. '[user' → logprob: -16.875030517578125

Token 286: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0007430415134876966
    2. '[i' → logprob: -7.2507429122924805
    3. ']' → logprob: -11.62574291229248
    4. ' ][' → logprob: -11.75074291229248
    5. '[' → logprob: -12.00074291229248
    6. ']][' → logprob: -12.87574291229248
    7. '}[' → logprob: -13.00074291229248
    8. '   ' → logprob: -13.75074291229248
    9. ')[' → logprob: -14.12574291229248
    10. ',i' → logprob: -14.25074291229248

Token 287: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -2.7014437364414334e-05
    2. 'j' → logprob: -10.75002670288086
    3. ' i' → logprob: -12.87502670288086
    4. '][' → logprob: -13.75002670288086
    5. '[i' → logprob: -14.50002670288086
    6. '[' → logprob: -15.12502670288086
    7. '
' → logprob: -15.50002670288086
    8. ']' → logprob: -15.62502670288086
    9. ' ' → logprob: -15.87502670288086
    10. ',i' → logprob: -16.12502670288086

Token 288: ']-' (ID: 27107)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.016404185444116592
    2. '-' → logprob: -4.141404151916504
    3. ' ' → logprob: -8.516404151916504
    4. ']' → logprob: -9.516404151916504
    5. '   ' → logprob: -10.141404151916504
    6. ']-' → logprob: -10.391404151916504
    7. '       ' → logprob: -12.516404151916504
    8. '           ' → logprob: -12.516404151916504
    9. '  ' → logprob: -12.641404151916504
    10. '    ' → logprob: -12.641404151916504

Token 289: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00016778295685071498
    2. ' ' → logprob: -8.750167846679688
    3. '   ' → logprob: -12.625167846679688
    4. '(' → logprob: -13.750167846679688
    5. '         ' → logprob: -14.000167846679688
    6. '     ' → logprob: -14.250167846679688
    7. '           ' → logprob: -14.375167846679688
    8. '  ' → logprob: -14.875167846679688
    9. '                   ' → logprob: -15.125167846679688
    10. '    ' → logprob: -15.125167846679688

Token 290: '*r' (ID: 92096)
  Prédit: '*r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*r' → logprob: -0.023823712021112442
    2. '*' → logprob: -3.7738237380981445
    3. 'r' → logprob: -8.023823738098145
    4. ' *' → logprob: -8.398823738098145
    5. '*v' → logprob: -10.648823738098145
    6. ' r' → logprob: -14.148823738098145
    7. '```' → logprob: -15.273823738098145
    8. '
' → logprob: -16.273822784423828
    9. '**' → logprob: -16.273822784423828
    10. '*
' → logprob: -16.398822784423828

Token 291: '*v' (ID: 130438)
  Prédit: '*v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*v' → logprob: -0.6650763154029846
    2. 'v' → logprob: -0.7900763154029846
    3. '*' → logprob: -3.66507625579834
    4. 'dot' → logprob: -5.16507625579834
    5. 'vj' → logprob: -7.41507625579834
    6. ' *' → logprob: -12.04007625579834
    7. ' dot' → logprob: -12.29007625579834
    8. '.dot' → logprob: -12.79007625579834
    9. ' v' → logprob: -12.79007625579834
    10. '```' → logprob: -12.91507625579834

Token 292: 'ij' (ID: 681)
  Prédit: 'ij'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ij' → logprob: -0.003985196817666292
    2. 'i' → logprob: -5.628985404968262
    3. '[i' → logprob: -8.128985404968262
    4. 'j' → logprob: -9.378985404968262
    5. '[j' → logprob: -13.253985404968262
    6. '[' → logprob: -13.503985404968262
    7. '_i' → logprob: -14.378985404968262
    8. '{i' → logprob: -14.378985404968262
    9. '(i' → logprob: -14.878985404968262
    10. '[[' → logprob: -16.003984451293945

Token 293: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.016529878601431847
    2. '+r' → logprob: -4.7665300369262695
    3. ' +' → logprob: -4.8915300369262695
    4. '       ' → logprob: -8.64153003692627
    5. '+
' → logprob: -9.14153003692627
    6. '
' → logprob: -10.01653003692627
    7. '           ' → logprob: -10.76653003692627
    8. '   ' → logprob: -12.14153003692627
    9. '+c' → logprob: -13.01653003692627
    10. ')' → logprob: -13.14153003692627

Token 294: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.001965508796274662
    2. ' r' → logprob: -6.251965522766113
    3. 'vj' → logprob: -10.376965522766113
    4. 'v' → logprob: -12.376965522766113
    5. '   ' → logprob: -15.001965522766113
    6. '<|end|>' → logprob: -15.251965522766113
    7. '(r' → logprob: -15.376965522766113
    8. 'rv' → logprob: -16.126964569091797
    9. '	r' → logprob: -16.251964569091797
    10. '+' → logprob: -16.376964569091797

Token 295: '*r' (ID: 92096)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.23826155066490173
    2. '*r' → logprob: -2.1132614612579346
    3. '*' → logprob: -2.7382614612579346
    4. '**' → logprob: -3.8632614612579346
    5. '*v' → logprob: -5.363261699676514
    6. '*k' → logprob: -8.488261222839355
    7. ' *' → logprob: -8.863261222839355
    8. 'r' → logprob: -9.113261222839355
    9. ' ' → logprob: -9.113261222839355
    10. '²' → logprob: -9.738261222839355

Token 296: '*v' (ID: 130438)
  Prédit: 'vj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vj' → logprob: -6.909333023941144e-05
    2. 'v' → logprob: -10.500068664550781
    3. '[v' → logprob: -10.625068664550781
    4. ' v' → logprob: -11.625068664550781
    5. '[j' → logprob: -12.250068664550781
    6. '[' → logprob: -13.375068664550781
    7. '*v' → logprob: -13.750068664550781
    8. 'dot' → logprob: -14.125068664550781
    9. '	v' → logprob: -17.75006866455078
    10. '   ' → logprob: -17.75006866455078

Token 297: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -8.685467764735222e-05
    2. '[j' → logprob: -9.375086784362793
    3. '_j' → logprob: -14.250086784362793
    4. 'v' → logprob: -14.250086784362793
    5. '[' → logprob: -15.000086784362793
    6. '```' → logprob: -16.12508773803711
    7. ' j' → logprob: -16.37508773803711
    8. 'i' → logprob: -17.00008773803711
    9. '[v' → logprob: -17.12508773803711
    10. '   ' → logprob: -17.25008773803711

Token 298: '_v' (ID: 5390)
  Prédit: '_v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_v' → logprob: -1.030501127243042
    2. '_j' → logprob: -1.155501127243042
    3. '[j' → logprob: -2.030501127243042
    4. 'vj' → logprob: -2.030501127243042
    5. '[v' → logprob: -3.280501127243042
    6. 'v' → logprob: -4.155501365661621
    7. 'j' → logprob: -4.530501365661621
    8. '[' → logprob: -6.780501365661621
    9. '	v' → logprob: -8.780501365661621
    10. '   ' → logprob: -9.530501365661621

Token 299: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.2471589798224159e-05
    2. 'v' → logprob: -11.375012397766113
    3. '_j' → logprob: -15.000012397766113
    4. '[' → logprob: -15.250012397766113
    5. '```' → logprob: -15.500012397766113
    6. 'vj' → logprob: -16.25001335144043
    7. 'jj' → logprob: -16.50001335144043
    8. ' j' → logprob: -17.12501335144043
    9. '[j' → logprob: -17.50001335144043
    10. '_' → logprob: -18.62501335144043

Token 300: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.030219828709959984
    2. '
' → logprob: -4.280220031738281
    3. '<|end|>' → logprob: -4.780220031738281
    4. '       ' → logprob: -5.155220031738281
    5. ')' → logprob: -7.280220031738281
    6. ',' → logprob: -7.905220031738281
    7. '   ' → logprob: -9.155220031738281
    8. '               ' → logprob: -9.405220031738281
    9. '<|end|>' → logprob: -9.530220031738281
    10. ' +' → logprob: -9.530220031738281

Token 301: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004029603209346533
    2. '       ' → logprob: -6.379029750823975
    3. 'if' → logprob: -6.504029750823975
    4. ' if' → logprob: -7.254029750823975
    5. '   ' → logprob: -9.754029273986816
    6. '<|end|>' → logprob: -10.504029273986816
    7. ' ' → logprob: -11.629029273986816
    8. '               ' → logprob: -12.254029273986816
    9. ',' → logprob: -12.379029273986816
    10. '
' → logprob: -12.629029273986816

Token 302: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0011403346434235573
    2. ' if' → logprob: -7.376140117645264
    3. 'if' → logprob: -8.001140594482422
    4. '       ' → logprob: -9.251140594482422
    5. ' val' → logprob: -10.876140594482422
    6. ',' → logprob: -11.126140594482422
    7. 'val' → logprob: -11.501140594482422
    8. '               ' → logprob: -11.751140594482422
    9. ' ' → logprob: -12.251140594482422
    10. '            
' → logprob: -12.626140594482422

Token 303: ' total' (ID: 3609)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.25661206245422363
    2. 'if' → logprob: -1.7566120624542236
    3. 'best' → logprob: -3.2566120624542236
    4. '       ' → logprob: -5.6316118240356445
    5. '           ' → logprob: -5.6316118240356445
    6. 'val' → logprob: -5.6316118240356445
    7. 'for' → logprob: -6.1316118240356445
    8. 'cost' → logprob: -7.2566118240356445
    9. ' if' → logprob: -7.7566118240356445
    10. ' dp' → logprob: -8.631611824035645

Token 304: ' cost' (ID: 3097)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.44513019919395447
    2. 'val' → logprob: -1.6951302289962769
    3. 'cost' → logprob: -2.5701301097869873
    4. ' =' → logprob: -2.8201301097869873
    5. 'dp' → logprob: -3.3201301097869873
    6. ' cost' → logprob: -6.820130348205566
    7. '_val' → logprob: -7.070130348205566
    8. ' val' → logprob: -7.695130348205566
    9. '_cost' → logprob: -8.320130348205566
    10. ' dp' → logprob: -8.445130348205566

Token 305: ' if' (ID: 538)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25402382016181946
    2. ' =' → logprob: -1.504023790359497
    3. '           ' → logprob: -7.629024028778076
    4. '+=' → logprob: -7.754024028778076
    5. 'val' → logprob: -8.754023551940918
    6. '+' → logprob: -8.879023551940918
    7. 'if' → logprob: -8.879023551940918
    8. '       ' → logprob: -9.004023551940918
    9. '=min' → logprob: -9.129023551940918
    10. ' +=' → logprob: -9.254023551940918

Token 306: ' predecessor' (ID: 84156)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.2162071466445923
    2. ' dp' → logprob: -1.2162071466445923
    3. 'val' → logprob: -1.9662071466445923
    4. 'j' → logprob: -2.7162070274353027
    5. ' we' → logprob: -2.9662070274353027
    6. ' j' → logprob: -3.5912070274353027
    7. 'record' → logprob: -3.8412070274353027
    8. 'we' → logprob: -3.9662070274353027
    9. ' val' → logprob: -3.9662070274353027
    10. '           ' → logprob: -4.216207027435303

Token 307: ' j' (ID: 441)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.05263269320130348
    2. ' =' → logprob: -3.5526328086853027
    3. 'val' → logprob: -3.9276328086853027
    4. 'is' → logprob: -7.052632808685303
    5. 'dp' → logprob: -7.677632808685303
    6. 'candidate' → logprob: -8.427632331848145
    7. 'cost' → logprob: -8.677632331848145
    8. ' is' → logprob: -8.677632331848145
    9. '+' → logprob: -8.802632331848145
    10. '_val' → logprob: -8.927632331848145

Token 308: ' plus' (ID: 2932)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10180176049470901
    2. ' =' → logprob: -2.976801872253418
    3. '+' → logprob: -3.726801872253418
    4. 'val' → logprob: -4.851801872253418
    5. ' +' → logprob: -6.101801872253418
    6. '           ' → logprob: -6.476801872253418
    7. 'is' → logprob: -6.976801872253418
    8. ')' → logprob: -6.976801872253418
    9. ' is' → logprob: -6.976801872253418
    10. ' was' → logprob: -7.101801872253418

Token 309: ' this' (ID: 495)
  Prédit: ' val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' val' → logprob: -0.33197346329689026
    2. 'val' → logprob: -1.5819734334945679
    3. ' dp' → logprob: -2.9569735527038574
    4. 'dp' → logprob: -3.7069735527038574
    5. '1' → logprob: -9.2069730758667
    6. ' ' → logprob: -9.7069730758667
    7. '(dp' → logprob: -10.2069730758667
    8. ' (' → logprob: -10.3319730758667
    9. '(val' → logprob: -10.3319730758667
    10. '   ' → logprob: -10.8944730758667

Token 310: ' diff' (ID: 8868)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.6385897994041443
    2. ' dp' → logprob: -1.013589859008789
    3. ' cost' → logprob: -3.888589859008789
    4. 'val' → logprob: -4.638589859008789
    5. 'cost' → logprob: -4.888589859008789
    6. ' is' → logprob: -5.013589859008789
    7. ' line' → logprob: -5.513589859008789
    8. ']' → logprob: -5.638589859008789
    9. ' val' → logprob: -5.701089859008789
    10. '+' → logprob: -5.826089859008789

Token 311: ' vector' (ID: 9727)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.3512587249279022
    2. '+' → logprob: -1.6012587547302246
    3. '=' → logprob: -3.3512587547302246
    4. ' =' → logprob: -4.351258754730225
    5. '[' → logprob: -4.726258754730225
    6. '           ' → logprob: -4.976258754730225
    7. 'val' → logprob: -4.976258754730225
    8. ']' → logprob: -5.601258754730225
    9. 's' → logprob: -5.976258754730225
    10. '[i' → logprob: -5.976258754730225

Token 312: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8169873356819153
    2. '=' → logprob: -1.5669872760772705
    3. ' =' → logprob: -1.8169872760772705
    4. ' +' → logprob: -2.6919872760772705
    5. '       ' → logprob: -3.4419872760772705
    6. '+' → logprob: -3.5669872760772705
    7. '
' → logprob: -3.5669872760772705
    8. ',' → logprob: -4.81698751449585
    9. 'val' → logprob: -5.19198751449585
    10. ')' → logprob: -5.94198751449585

Token 313: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.38809430599212646
    2. '       ' → logprob: -1.3880943059921265
    3. ' if' → logprob: -2.888094425201416
    4. 'if' → logprob: -4.888094425201416
    5. ' +' → logprob: -5.638094425201416
    6. '
' → logprob: -6.388094425201416
    7. ',' → logprob: -6.638094425201416
    8. '+' → logprob: -7.388094425201416
    9. ' =' → logprob: -7.513094425201416
    10. '=' → logprob: -8.263093948364258

Token 314: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' (adapté à ' cost') → logprob: -1.1473546028137207
    2. 'best' → logprob: -1.7723546028137207
    3. 'cand' → logprob: -2.1473546028137207
    4. 'if' → logprob: -2.2723546028137207
    5. 'candidate' → logprob: -2.2723546028137207
    6. 'val' → logprob: -2.7723546028137207
    7. 'dp' → logprob: -3.0223546028137207
    8. 'cur' → logprob: -4.147354602813721
    9. 'temp' → logprob: -4.147354602813721
    10. 'tmp' → logprob: -4.397354602813721

Token 315: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07890389114618301
    2. ' =' → logprob: -2.578903913497925
    3. '=d' → logprob: -12.703904151916504
    4. '=df' → logprob: -13.203904151916504
    5. '   ' → logprob: -13.453904151916504
    6. ' dp' → logprob: -13.703904151916504
    7. 'dp' → logprob: -13.953904151916504
    8. '=
' → logprob: -14.328904151916504
    9. '=max' → logprob: -14.453904151916504
    10. '=len' → logprob: -14.453904151916504

Token 316: 'dp' (ID: 19037)
  Prédit: 'dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0009530289680697024
    2. ' dp' → logprob: -7.000953197479248
    3. 'val' → logprob: -11.00095272064209
    4. '   ' → logprob: -12.00095272064209
    5. '           ' → logprob: -12.12595272064209
    6. '	dp' → logprob: -12.37595272064209
    7. '(dp' → logprob: -12.50095272064209
    8. '
' → logprob: -13.00095272064209
    9. ' ' → logprob: -14.37595272064209
    10. '       ' → logprob: -14.87595272064209

Token 317: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -2.5776860184123507e-06
    2. 'j' → logprob: -13.25000286102295
    3. '[i' → logprob: -14.50000286102295
    4. '[' → logprob: -15.00000286102295
    5. '[
' → logprob: -17.125001907348633
    6. '```' → logprob: -17.250001907348633
    7. ' [' → logprob: -18.500001907348633
    8. '[js' → logprob: -19.000001907348633
    9. '   ' → logprob: -19.250001907348633
    10. '
' → logprob: -19.500001907348633

Token 318: ']+' (ID: 15344)
  Prédit: ']+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']+' → logprob: -0.2579779326915741
    2. '+' → logprob: -1.6329779624938965
    3. ']' → logprob: -3.6329779624938965
    4. ' +' → logprob: -5.2579779624938965
    5. ')+' → logprob: -8.507977485656738
    6. ' ]' → logprob: -9.632977485656738
    7. '}+' → logprob: -10.132977485656738
    8. ']+=' → logprob: -10.257977485656738
    9. '+c' → logprob: -11.257977485656738
    10. '+]' → logprob: -12.257977485656738

Token 319: 'val' (ID: 1105)
  Prédit: 'val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.0002615742268972099
    2. ' val' → logprob: -8.250261306762695
    3. 'math' → logprob: -15.375261306762695
    4. '	val' → logprob: -17.500261306762695
    5. '(val' → logprob: -17.750261306762695
    6. 'max' → logprob: -18.000261306762695
    7. '   ' → logprob: -18.250261306762695
    8. '[val' → logprob: -18.750261306762695
    9. '           ' → logprob: -19.375261306762695
    10. '
' → logprob: -19.500261306762695

Token 320: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05182167515158653
    2. '       ' → logprob: -3.426821708679199
    3. '
' → logprob: -4.051821708679199
    4. '   ' → logprob: -8.1768217086792
    5. ' if' → logprob: -9.3018217086792
    6. '
' → logprob: -9.8018217086792
    7. '```' → logprob: -10.3018217086792
    8. 'if' → logprob: -10.5518217086792
    9. ',' → logprob: -10.5518217086792
    10. '  
' → logprob: -11.0518217086792

Token 321: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04155649244785309
    2. '
' → logprob: -3.5415565967559814
    3. '       ' → logprob: -5.041556358337402
    4. '<|end|>' → logprob: -5.416556358337402
    5. '<|end|>' → logprob: -8.666556358337402
    6. '```' → logprob: -9.291556358337402
    7. '  
' → logprob: -9.291556358337402
    8. '            
' → logprob: -9.291556358337402
    9. '
' → logprob: -9.666556358337402
    10. ' if' → logprob: -9.666556358337402

Token 322: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0022555296309292316
    2. 'if' (adapté à ' if') → logprob: -6.752255439758301
    3. ' if' → logprob: -6.877255439758301
    4. '       ' → logprob: -10.6272554397583
    5. '   ' → logprob: -11.6272554397583
    6. ' ' → logprob: -11.8772554397583
    7. '
' → logprob: -12.7522554397583
    8. '<|end|>' → logprob: -12.7522554397583
    9. '```' → logprob: -13.2522554397583
    10. '<|end|>' → logprob: -13.7522554397583

Token 323: ' cost' (ID: 3097)
  Prédit: ' cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cost' → logprob: -0.2014143168926239
    2. 'cost' → logprob: -1.7014143466949463
    3. '(cost' → logprob: -14.701414108276367
    4. '           ' → logprob: -15.451414108276367
    5. '   ' → logprob: -15.826414108276367
    6. ' ' → logprob: -16.326414108276367
    7. 'best' → logprob: -16.326414108276367
    8. '_cost' → logprob: -17.701414108276367
    9. ' ' → logprob: -17.951414108276367
    10. ' best' → logprob: -18.076414108276367

Token 324: '<' (ID: 27)
  Prédit: '<'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.22545193135738373
    2. ' <' → logprob: -1.600451946258545
    3. ' ' → logprob: -11.350451469421387
    4. '<len' → logprob: -11.350451469421387
    5. '<b' → logprob: -13.225451469421387
    6. '<com' → logprob: -13.850451469421387
    7. '<cv' → logprob: -13.850451469421387
    8. '<ll' → logprob: -14.225451469421387
    9. '<int' → logprob: -14.225451469421387
    10. '<th' → logprob: -14.350451469421387

Token 325: 'best' (ID: 17844)
  Prédit: 'best'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'best' → logprob: -0.00033558503491804004
    2. ' best' → logprob: -8.000335693359375
    3. '	best' → logprob: -17.000335693359375
    4. '(best' → logprob: -17.750335693359375
    5. 'b' → logprob: -17.875335693359375
    6. '   ' → logprob: -19.625335693359375
    7. '_best' → logprob: -19.625335693359375
    8. '.best' → logprob: -19.875335693359375
    9. 'cost' → logprob: -20.750335693359375
    10. '
' → logprob: -20.750335693359375

Token 326: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.47539493441581726
    2. ':
' → logprob: -0.9753949642181396
    3. '           ' → logprob: -6.8503947257995605
    4. '               ' → logprob: -8.600395202636719
    5. '):
' → logprob: -10.600395202636719
    6. '       ' → logprob: -10.975395202636719
    7. ' :
' → logprob: -11.350395202636719
    8. '=' → logprob: -12.600395202636719
    9. '):' → logprob: -12.975395202636719
    10. ':

' → logprob: -12.975395202636719

Token 327: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6964616775512695
    2. '               ' → logprob: -0.6964616775512695
    3. 'best' → logprob: -6.1964616775512695
    4. ' best' → logprob: -6.8214616775512695
    5. '	best' → logprob: -9.94646167755127
    6. '
' → logprob: -10.44646167755127
    7. '(best' → logprob: -10.57146167755127
    8. '	       ' → logprob: -10.82146167755127
    9. '       ' → logprob: -10.94646167755127
    10. '   ' → logprob: -11.44646167755127

Token 328: ' best' (ID: 1636)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'best' (adapté à ' best') → logprob: -0.0015045057516545057
    2. ' best' → logprob: -6.501504421234131
    3. '               ' → logprob: -13.376504898071289
    4. '	best' → logprob: -14.751504898071289
    5. '                   ' → logprob: -16.00150489807129
    6. 'cost' → logprob: -16.37650489807129
    7. '(best' → logprob: -16.75150489807129
    8. '_best' → logprob: -17.62650489807129
    9. '           ' → logprob: -17.75150489807129
    10. '
' → logprob: -18.12650489807129

Token 329: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0031897129956632853
    2. ' =' → logprob: -5.753189563751221
    3. '=b' → logprob: -11.753190040588379
    4. '=c' → logprob: -13.128190040588379
    5. '=

' → logprob: -14.128190040588379
    6. '=
' → logprob: -14.878190040588379
    7. '=cut' → logprob: -15.253190040588379
    8. '=cv' → logprob: -16.253189086914062
    9. '＝' → logprob: -16.503189086914062
    10. ' cost' → logprob: -16.753189086914062

Token 330: 'cost' (ID: 33457)
  Prédit: 'cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -2.15310683415737e-05
    2. ' cost' → logprob: -10.750021934509277
    3. 'val' → logprob: -20.37502098083496
    4. '(cost' → logprob: -21.37502098083496
    5. '_cost' → logprob: -21.50002098083496
    6. 'cos' → logprob: -22.75002098083496
    7. 'Cost' → logprob: -23.12502098083496
    8. '-cost' → logprob: -24.00002098083496
    9. 'code' → logprob: -24.25002098083496
    10. '.cost' → logprob: -24.25002098083496

Token 331: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02875092253088951
    2. '
' → logprob: -3.7787508964538574
    3. '        
' → logprob: -6.028750896453857
    4. '    
' → logprob: -6.903750896453857
    5. '<|end|>' → logprob: -6.903750896453857
    6. ' 
' → logprob: -8.153751373291016
    7. ',' → logprob: -9.028751373291016
    8. '           ' → logprob: -9.153751373291016
    9. '  
' → logprob: -9.653751373291016
    10. '   ' → logprob: -9.653751373291016

Token 332: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006961400154978037
    2. '
' → logprob: -5.131961345672607
    3. ')' → logprob: -8.256961822509766
    4. '        
' → logprob: -8.506961822509766
    5. '   ' → logprob: -9.131961822509766
    6. '<|end|>' → logprob: -9.381961822509766
    7. '```' → logprob: -9.506961822509766
    8. '    
' → logprob: -9.506961822509766
    9. '           ' → logprob: -10.506961822509766
    10. ' 
' → logprob: -10.631961822509766

Token 333: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.5177938342094421
    2. '       ' → logprob: -1.517793893814087
    3. ' dp' → logprob: -2.392793893814087
    4. '   ' → logprob: -2.642793893814087
    5. '	dp' → logprob: -3.892793893814087
    6. '_dp' → logprob: -7.392793655395508
    7. '(dp' → logprob: -7.892793655395508
    8. '<|end|>' → logprob: -8.642793655395508
    9. ')' → logprob: -9.017793655395508
    10. '        
' → logprob: -9.017793655395508

Token 334: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.0280383548888494e-06
    2. '[' → logprob: -14.000000953674316
    3. '[I' → logprob: -16.500001907348633
    4. '[
' → logprob: -18.000001907348633
    5. '[j' → logprob: -19.125001907348633
    6. 'i' → logprob: -19.500001907348633
    7. '```' → logprob: -19.500001907348633
    8. '\[' → logprob: -19.500001907348633
    9. ' [' → logprob: -20.125001907348633
    10. '=' → logprob: -20.750001907348633

Token 335: ']=' (ID: 9539)
  Prédit: ']='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']=' → logprob: -0.01779107376933098
    2. '=' → logprob: -4.517791271209717
    3. ']' → logprob: -5.017791271209717
    4. ']+=' → logprob: -9.892790794372559
    5. ' ]' → logprob: -10.892790794372559
    6. ']=(' → logprob: -11.517790794372559
    7. ' =' → logprob: -11.642790794372559
    8. ')=' → logprob: -12.017790794372559
    9. '=max' → logprob: -13.142790794372559
    10. ']='' → logprob: -13.267790794372559

Token 336: 'best' (ID: 17844)
  Prédit: 'best'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'best' → logprob: -1.306760805164231e-05
    2. ' best' → logprob: -11.25001335144043
    3. '	best' → logprob: -17.87501335144043
    4. '(best' → logprob: -18.75001335144043
    5. '   ' → logprob: -19.75001335144043
    6. 'b' → logprob: -20.87501335144043
    7. 'int' → logprob: -21.12501335144043
    8. '-best' → logprob: -21.75001335144043
    9. 'bes' → logprob: -22.37501335144043
    10. '_best' → logprob: -22.50001335144043

Token 337: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 338: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 339: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.20386125147342682
    2. '
' → logprob: -1.9538612365722656
    3. '   ' → logprob: -3.2038612365722656
    4. '    
' → logprob: -6.703861236572266
    5. ' print' → logprob: -7.453861236572266
    6. ' 
' → logprob: -9.328861236572266
    7. '  
' → logprob: -9.453861236572266
    8. '```' → logprob: -10.078861236572266
    9. 'return' → logprob: -11.328861236572266
    10. '   
' → logprob: -11.578861236572266

Token 340: '(f' (ID: 1526)
  Prédit: '(dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.008529706858098507
    2. '(sum' → logprob: -5.7585296630859375
    3. '(int' → logprob: -6.5085296630859375
    4. '(' → logprob: -6.6335296630859375
    5. '()' → logprob: -6.7585296630859375
    6. '(round' → logprob: -7.2585296630859375
    7. '(max' → logprob: -7.6335296630859375
    8. 'dp' → logprob: -9.508529663085938
    9. ' (' → logprob: -9.883529663085938
    10. '(min' → logprob: -10.883529663085938

Token 341: '"{' (ID: 27510)
  Prédit: '(dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.5331928133964539
    2. '"{' → logprob: -1.5331928730010986
    3. 'dp' → logprob: -2.1581928730010986
    4. ''{' → logprob: -3.2831928730010986
    5. 'loat' → logprob: -4.0331926345825195
    6. 'p' → logprob: -4.4081926345825195
    7. '"' → logprob: -4.9081926345825195
    8. '{' → logprob: -5.9081926345825195
    9. 'ormat' → logprob: -6.4081926345825195
    10. ''' → logprob: -7.6581926345825195

Token 342: 'dp' (ID: 19037)
  Prédit: 'dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.00030400342075154185
    2. 'min' → logprob: -8.500304222106934
    3. 'math' → logprob: -9.625304222106934
    4. ' dp' → logprob: -10.750304222106934
    5. 'max' → logprob: -11.875304222106934
    6. 'sum' → logprob: -12.250304222106934
    7. '(dp' → logprob: -15.125304222106934
    8. '0' → logprob: -15.375304222106934
    9. '   ' → logprob: -16.000303268432617
    10. ' ' → logprob: -16.125303268432617

Token 343: '[M' (ID: 98407)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.002189756603911519
    2. '[M' → logprob: -6.127189636230469
    3. '[i' → logprob: -13.627189636230469
    4. '[' → logprob: -13.877189636230469
    5. '[len' → logprob: -13.877189636230469
    6. '[m' → logprob: -14.502189636230469
    7. '[N' → logprob: -15.252189636230469
    8. '
' → logprob: -15.627189636230469
    9. '```' → logprob: -15.877189636230469
    10. '   ' → logprob: -16.12718963623047

Token 344: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0004821505572181195
    2. '[-' → logprob: -8.000482559204102
    3. '[' → logprob: -9.375482559204102
    4. ' -' → logprob: -10.250482559204102
    5. '1' → logprob: -11.375482559204102
    6. '[i' → logprob: -11.375482559204102
    7. ']' → logprob: -14.000482559204102
    8. '−' → logprob: -14.000482559204102
    9. '[M' → logprob: -14.625482559204102
    10. '   ' → logprob: -14.875482559204102

Token 345: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.696889623621246e-06
    2. ' ' → logprob: -13.37500286102295
    3. '
' → logprob: -14.12500286102295
    4. '   ' → logprob: -15.62500286102295
    5. ']' → logprob: -16.875001907348633
    6. '```' → logprob: -16.875001907348633
    7. '-' → logprob: -17.000001907348633
    8. '

' → logprob: -17.875001907348633
    9. '  ' → logprob: -18.875001907348633
    10. '2' → logprob: -18.937501907348633

Token 346: ']:' (ID: 12433)
  Prédit: ']:'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.000497032655403018
    2. ']}' → logprob: -7.875496864318848
    3. ']' → logprob: -9.125496864318848
    4. ']}"' → logprob: -12.625496864318848
    5. '])' → logprob: -13.125496864318848
    6. ']):' → logprob: -14.250496864318848
    7. ' ]' → logprob: -14.375496864318848
    8. '[' → logprob: -15.125496864318848
    9. ':.' → logprob: -15.375496864318848
    10. ':]' → logprob: -15.625496864318848

Token 347: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -2.0339031834737398e-05
    2. '0' → logprob: -11.250020027160645
    3. ' .' → logprob: -11.875020027160645
    4. ':.' → logprob: -15.875020027160645
    5. ',.' → logprob: -15.875020027160645
    6. '".' → logprob: -17.37502098083496
    7. '}.' → logprob: -17.87502098083496
    8. '\.' → logprob: -18.37502098083496
    9. '}' → logprob: -18.87502098083496
    10. ';.' → logprob: -19.00002098083496

Token 348: '9' (ID: 24)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -1.1458204984664917
    2. '10' → logprob: -1.1458204984664917
    3. '9' → logprob: -1.7708204984664917
    4. '12' → logprob: -2.2708206176757812
    5. '15' → logprob: -2.8958206176757812
    6. '7' → logprob: -4.270820617675781
    7. '8' → logprob: -4.270820617675781
    8. '4' → logprob: -6.645820617675781
    9. '20' → logprob: -6.895820617675781
    10. '11' → logprob: -6.895820617675781

Token 349: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -6.704273118884885e-07
    2. 'g' → logprob: -14.875000953674316
    3. 'e' → logprob: -15.500000953674316
    4. 'lf' → logprob: -18.625
    5. '6' → logprob: -20.875
    6. '}' → logprob: -21.5
    7. 'Lf' → logprob: -22.0
    8. '```' → logprob: -22.0
    9. ' f' → logprob: -22.25
    10. '
' → logprob: -22.875

Token 350: '}")

' (ID: 119200)
  Prédit: '}")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}")' → logprob: -0.0004664193547796458
    2. '")' → logprob: -8.000466346740723
    3. ')")' → logprob: -9.375466346740723
    4. '}")
' → logprob: -10.000466346740723
    5. '}")
' → logprob: -15.750466346740723
    6. '}' → logprob: -15.875466346740723
    7. '}")

' → logprob: -16.00046730041504
    8. ' }' → logprob: -16.12546730041504
    9. '})' → logprob: -16.62546730041504
    10. '}"' → logprob: -17.37546730041504

Token 351: 'if' (ID: 366)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 352: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.003182467306032777
    2. '__' → logprob: -5.753182411193848
    3. '_name' → logprob: -13.253182411193848
    4. '_' → logprob: -13.503182411193848
    5. ' _' → logprob: -13.878182411193848
    6. ' ' → logprob: -15.128182411193848
    7. ' ' → logprob: -15.628182411193848
    8. ' ___' → logprob: -16.878183364868164
    9. 'name' → logprob: -17.253183364868164
    10. '___' → logprob: -17.503183364868164

Token 353: 'name' (ID: 897)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.5310735106468201
    2. '__' → logprob: -1.5310735702514648
    3. '==' → logprob: -2.156073570251465
    4. '=="' → logprob: -2.656073570251465
    5. ' __' → logprob: -5.656073570251465
    6. '=='' → logprob: -6.281073570251465
    7. ' =="' → logprob: -6.281073570251465
    8. '.__' → logprob: -6.781073570251465
    9. 'name' → logprob: -7.531073570251465
    10. '.name' → logprob: -8.781073570251465

Token 354: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -1.0921942703134846e-05
    2. '==' → logprob: -11.50001049041748
    3. '=="' → logprob: -15.37501049041748
    4. '_' → logprob: -15.62501049041748
    5. '__.__' → logprob: -15.87501049041748
    6. '__
' → logprob: -16.375011444091797
    7. '___' → logprob: -17.250011444091797
    8. '____' → logprob: -17.375011444091797
    9. ' ==' → logprob: -17.625011444091797
    10. '__.' → logprob: -18.750011444091797

Token 355: '=="' (ID: 24027)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.8043449521064758
    2. '==' → logprob: -1.554344892501831
    3. '=="' → logprob: -1.554344892501831
    4. '__' → logprob: -2.054344892501831
    5. '=='' → logprob: -6.67934513092041
    6. ' =="' → logprob: -7.80434513092041
    7. '==
' → logprob: -10.30434513092041
    8. '_' → logprob: -11.17934513092041
    9. '__["' → logprob: -11.55434513092041
    10. '=' → logprob: -11.80434513092041

Token 356: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0017113516805693507
    2. '"' → logprob: -6.501711368560791
    3. ''' → logprob: -8.501710891723633
    4. 'main' → logprob: -12.126710891723633
    5. ' __' → logprob: -15.501710891723633
    6. ' "__' → logprob: -16.251710891723633
    7. '   ' → logprob: -17.251710891723633
    8. '___' → logprob: -17.251710891723633
    9. '_main' → logprob: -18.001710891723633
    10. '____' → logprob: -18.376710891723633

Token 357: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -4.961759259458631e-06
    2. 'name' → logprob: -12.250004768371582
    3. ' main' → logprob: -16.8750057220459
    4. '"' → logprob: -17.1250057220459
    5. '_main' → logprob: -17.1250057220459
    6. '	main' → logprob: -20.0000057220459
    7. 'ma' → logprob: -20.6250057220459
    8. '__' → logprob: -21.0000057220459
    9. ''' → logprob: -21.3750057220459
    10. 'm' → logprob: -21.5000057220459

Token 358: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.16044935584068298
    2. '__' → logprob: -1.9104493856430054
    3. '__':
' → logprob: -8.535449028015137
    4. '__["' → logprob: -11.785449028015137
    5. '```' → logprob: -12.410449028015137
    6. '=="' → logprob: -12.660449028015137
    7. '_' → logprob: -12.910449028015137
    8. '"' → logprob: -12.910449028015137
    9. '__
' → logprob: -13.035449028015137
    10. '__:' → logprob: -13.535449028015137

Token 359: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1579243391752243
    2. '	main' → logprob: -2.2829244136810303
    3. ' main' → logprob: -3.6579244136810303
    4. 'main' → logprob: -4.032924175262451
    5. '    
' → logprob: -8.40792465209961
    6. '   ' → logprob: -9.03292465209961
    7. '_main' → logprob: -9.28292465209961
    8. '<|end|>' → logprob: -9.65792465209961
    9. '	Main' → logprob: -10.40792465209961
    10. ' ' → logprob: -10.65792465209961

Token 360: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -1.9361264946837764e-07
    2. ' main' → logprob: -16.25
    3. '	main' → logprob: -19.0
    4. '   ' → logprob: -20.875
    5. '_main' → logprob: -23.75
    6. '.main' → logprob: -24.625
    7. '(main' → logprob: -25.5
    8. 'mainwindow' → logprob: -25.75
    9. 'mai' → logprob: -26.0
    10. 'Main' → logprob: -26.25

Token 361: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 359
Tokens correctement prédits (1ère position, stricte): 152
Tokens correctement prédits (1ère position, avec adaptation): 166
Tokens correctement prédits (top 10): 286
Précision stricte (1ère position): 42.34%
Précision adaptée (1ère position): 46.24%
Précision (top 10): 79.67%
================================================================================
