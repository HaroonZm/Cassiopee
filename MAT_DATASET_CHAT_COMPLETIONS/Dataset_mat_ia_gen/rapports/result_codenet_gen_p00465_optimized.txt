================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:07:53
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
from collections import deque
input=sys.stdin.readline

def bfs(W,H,X,Y,levels,auth):
    if auth==0:
        return 0
    visited=[[False]*W for _ in range(H)]
    q=deque()
    x,y=X-1,Y-1
    if levels[y][x]>auth:
        return 0
    visited[y][x]=True
    q.append((x,y))
    count=1
    while q:
        cx,cy=q.popleft()
        for dx,dy in [(1,0),(-1,0),(0,1),(0,-1)]:
            nx,ny=cx+dx,cy+dy
            if 0<=nx<W and 0<=ny<H and not visited[ny][nx] and levels[ny][nx]<=auth:
                visited[ny][nx]=True
                count+=1
                q.append((nx,ny))
    return count

def possible(W1,H1,X1,Y1,levels1,W2,H2,X2,Y2,levels2,R,s):
    res=0
    la1=[l for l in s[0]]
    la2=[l for l in s[1]]
    # auth level range from minimal 0 to max 10^8 or max needed
    # We'll binary search auth separately for each office
    # But we want minimal sum of auth1+auth2 so we binary search sum and greedily choose auth levels

    # We can try all auth1 from 0 to maxA1 max levels in office1, and check if auth2 satisfies rooms>=R
    # To optimize, precompute sorted unique levels for each office
    # Then do two pointers approach

def main():
    while True:
        R=int(input())
        if R==0:
            break
        W1,H1,X1,Y1=map(int,input().split())
        levels1=[list(map(int,input().split())) for _ in range(H1)]
        W2,H2,X2,Y2=map(int,input().split())
        levels2=[list(map(int,input().split())) for _ in range(H2)]

        # get unique levels + 0
        levs1 = set()
        for row in levels1:
            levs1.update(row)
        levs1.add(0)
        levs1=list(levs1)
        levs1.sort()

        levs2 = set()
        for row in levels2:
            levs2.update(row)
        levs2.add(0)
        levs2=list(levs2)
        levs2.sort()

        # precompute number of rooms reachable for each auth level in each office
        # BFS for each distinct auth level? For large input, too costly
        # Optimization: Because levels are integers and auth level is cutoff, BFS reachable rooms are monotonic increasing with auth

        # We'll do BFS only for distinct auth levels in sorted order, using binary search on levels

        def precompute(W,H,X,Y,levels,levs):
            res = []
            prev = 0
            for auth in levs:
                if auth==0:
                    res.append(0)
                else:
                    c=bfs(W,H,X,Y,levels,auth)
                    res.append(c)
                    if c==prev:
                        # if no improvement, could skip but keep for index
                        pass
                    prev=c
            return res

        arr1=precompute(W1,H1,X1,Y1,levels1,levs1)
        arr2=precompute(W2,H2,X2,Y2,levels2,levs2)

        # Now we want minimal sum of auth1+auth2 with arr1[i]+arr2[j]>=R
        # Use two pointers on levs1, levs2 to find minimal sum

        i,j=0,len(levs2)-1
        ans=10**15
        while i<len(levs1) and j>=0:
            c=arr1[i]+arr2[j]
            if c>=R:
                v=levs1[i]+levs2[j]
                if v<ans:
                    ans=v
                j-=1
            else:
                i+=1
        print(ans)

if __name__=="__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'from' (ID: 2845)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.5435490608215332
    2. '.' → logprob: -1.0435490608215332
    3. '<|end|>' → logprob: -3.918549060821533
    4. '\' → logprob: -4.043549060821533
    5. 'import' → logprob: -4.418549060821533
    6. 'newline' → logprob: -5.293549060821533
    7. '' → logprob: -6.043549060821533
    8. '\r' → logprob: -6.168549060821533
    9. '
' → logprob: -6.293549060821533
    10. '<|end|>' → logprob: -6.418549060821533

Token 4: ' collections' (ID: 22690)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.013842481188476086
    2. 'os' → logprob: -4.388842582702637
    3. ' Py' → logprob: -8.138842582702637
    4. ' collections' → logprob: -8.138842582702637
    5. ' pathlib' → logprob: -8.388842582702637
    6. ' math' → logprob: -9.013842582702637
    7. ' ' → logprob: -9.263842582702637
    8. ' typing' → logprob: -10.013842582702637
    9. ' subprocess' → logprob: -10.388842582702637
    10. 'collections' → logprob: -10.638842582702637

Token 5: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.537659227848053
    2. 'import' → logprob: -0.912659227848053
    3. '.' → logprob: -4.287659168243408
    4. ' ' → logprob: -8.287659645080566
    5. '<|end|>' → logprob: -9.037659645080566
    6. '.import' → logprob: -9.287659645080566
    7. '```' → logprob: -9.412659645080566
    8. '_import' → logprob: -10.537659645080566
    9. '	import' → logprob: -10.662659645080566
    10. '_' → logprob: -11.412659645080566

Token 6: ' deque' (ID: 90347)
  Prédit: ' defaultdict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' defaultdict' → logprob: -0.2895837128162384
    2. ' deque' → logprob: -1.664583683013916
    3. ' abc' → logprob: -3.039583683013916
    4. 'deque' → logprob: -4.539583683013916
    5. 'abc' → logprob: -6.414583683013916
    6. ' Counter' → logprob: -6.914583683013916
    7. ' named' → logprob: -7.289583683013916
    8. ' Ordered' → logprob: -9.914584159851074
    9. 'default' → logprob: -10.039584159851074
    10. ' import' → logprob: -10.039584159851074

Token 7: '
' (ID: 198)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.1023303270339966
    2. 'import' → logprob: -1.2273303270339966
    3. '

' → logprob: -1.4773303270339966
    4. '
' → logprob: -2.102330207824707
    5. '\' → logprob: -4.477330207824707
    6. '```' → logprob: -5.102330207824707
    7. 'newline' → logprob: -6.102330207824707
    8. '' → logprob: -6.352330207824707
    9. '<|end|>' → logprob: -7.352330207824707
    10. ',' → logprob: -7.977330207824707

Token 8: 'input' (ID: 2586)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.5978865623474121
    2. '```' → logprob: -1.847886562347412
    3. '\' → logprob: -2.222886562347412
    4. '

' → logprob: -2.722886562347412
    5. 'import' → logprob: -2.972886562347412
    6. '
' → logprob: -2.972886562347412
    7. '<|end|>' → logprob: -5.347886562347412
    8. 'def' → logprob: -5.847886562347412
    9. 'newline' → logprob: -6.472886562347412
    10. ',' → logprob: -6.972886562347412

Token 9: '=sys' (ID: 149200)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0031865055207163095
    2. '.' → logprob: -6.3781867027282715
    3. '=' → logprob: -7.0031867027282715
    4. ' =' → logprob: -8.253186225891113
    5. ' (' → logprob: -9.128186225891113
    6. '()' → logprob: -9.753186225891113
    7. ')' → logprob: -10.253186225891113
    8. '(
' → logprob: -10.878186225891113
    9. '```' → logprob: -11.378186225891113
    10. '[' → logprob: -11.503186225891113

Token 10: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.00011367550177965313
    2. '[' → logprob: -9.375113487243652
    3. '.readline' → logprob: -11.375113487243652
    4. ' .' → logprob: -12.000113487243652
    5. '.
' → logprob: -12.750113487243652
    6. '.[' → logprob: -13.625113487243652
    7. '.​' → logprob: -14.125113487243652
    8. '.stdin' → logprob: -14.250113487243652
    9. '['' → logprob: -14.375113487243652
    10. '.]' → logprob: -14.500113487243652

Token 11: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.002523341914638877
    2. '.' → logprob: -6.377523422241211
    3. '.read' → logprob: -7.127523422241211
    4. '.readlines' → logprob: -11.877523422241211
    5. '.Read' → logprob: -12.377523422241211
    6. ' readline' → logprob: -12.752523422241211
    7. '```' → logprob: -13.877523422241211
    8. 'read' → logprob: -14.127523422241211
    9. '.buffer' → logprob: -14.377523422241211
    10. '.READ' → logprob: -15.002523422241211

Token 12: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.22379910945892334
    2. '()' → logprob: -1.7237991094589233
    3. '(
' → logprob: -4.098799228668213
    4. '()
' → logprob: -6.348799228668213
    5. '
' → logprob: -6.473799228668213
    6. '(

' → logprob: -7.723799228668213
    7. '\n' → logprob: -7.973799228668213
    8. '()

' → logprob: -8.223798751831055
    9. '

' → logprob: -8.473798751831055
    10. '```' → logprob: -8.848798751831055

Token 13: 'def' (ID: 1314)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.057044725865125656
    2. '(n' → logprob: -4.307044506072998
    3. '(' → logprob: -4.432044506072998
    4. 'def' → logprob: -4.557044506072998
    5. 'd' → logprob: -5.057044506072998
    6. 'q' → logprob: -5.182044506072998
    7. '()' → logprob: -6.682044506072998
    8. 'queue' → logprob: -6.682044506072998
    9. 'N' → logprob: -6.932044506072998
    10. 'deque' → logprob: -7.557044506072998

Token 14: ' bfs' (ID: 147571)
  Prédit: ' bfs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bfs' → logprob: -0.0994904488325119
    2. ' main' → logprob: -2.8494904041290283
    3. ' solve' → logprob: -4.474490642547607
    4. ' top' → logprob: -4.599490642547607
    5. ' BFS' → logprob: -5.724490642547607
    6. ' solution' → logprob: -5.849490642547607
    7. ' process' → logprob: -6.474490642547607
    8. ' reverse' → logprob: -6.724490642547607
    9. ' is' → logprob: -6.724490642547607
    10. ' level' → logprob: -7.224490642547607

Token 15: '(W' (ID: 26031)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00023727134976070374
    2. '_' → logprob: -9.500237464904785
    3. '(node' → logprob: -9.625237464904785
    4. ' (' → logprob: -10.625237464904785
    5. '(nodes' → logprob: -11.875237464904785
    6. ':' → logprob: -12.375237464904785
    7. '```' → logprob: -12.375237464904785
    8. '('' → logprob: -12.500237464904785
    9. '(n' → logprob: -12.500237464904785
    10. '():' → logprob: -12.625237464904785

Token 16: ',H' (ID: 94400)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.012812166474759579
    2. '):' → logprob: -4.51281213760376
    3. ' ,' → logprob: -7.01281213760376
    4. ')' → logprob: -8.012812614440918
    5. ',u' → logprob: -8.512812614440918
    6. ',W' → logprob: -9.887812614440918
    7. ',w' → logprob: -10.637812614440918
    8. ',a' → logprob: -10.762812614440918
    9. ' ):' → logprob: -10.762812614440918
    10. ',n' → logprob: -11.262812614440918

Token 17: ',X' (ID: 83943)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.038475070148706436
    2. '):' → logprob: -3.2884750366210938
    3. ')' → logprob: -8.413475036621094
    4. ' ,' → logprob: -9.163475036621094
    5. ' ):' → logprob: -10.913475036621094
    6. ',start' → logprob: -10.913475036621094
    7. ',n' → logprob: -11.913475036621094
    8. ',w' → logprob: -11.913475036621094
    9. ',p' → logprob: -12.163475036621094
    10. ',s' → logprob: -12.163475036621094

Token 18: ',Y' (ID: 71464)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.029233114793896675
    2. ',' → logprob: -3.77923321723938
    3. ')' → logprob: -5.404232978820801
    4. ' ):' → logprob: -6.779232978820801
    5. ',Y' → logprob: -9.0292329788208
    6. ',K' → logprob: -10.6542329788208
    7. ',N' → logprob: -10.6542329788208
    8. ' ,' → logprob: -10.7792329788208
    9. ',y' → logprob: -10.9042329788208
    10. ',S' → logprob: -11.4042329788208

Token 19: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.006822054740041494
    2. ')' → logprob: -5.631822109222412
    3. ',' → logprob: -5.756822109222412
    4. '):
' → logprob: -10.881821632385254
    5. ' ):' → logprob: -11.381821632385254
    6. ')):' → logprob: -12.756821632385254
    7. '   ' → logprob: -12.881821632385254
    8. '```' → logprob: -13.006821632385254
    9. ')：' → logprob: -13.131821632385254
    10. ',n' → logprob: -13.381821632385254

Token 20: 'levels' (ID: 97607)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.8326396346092224
    2. 'grid' → logprob: -2.332639694213867
    3. 'visited' → logprob: -2.582639694213867
    4. 'G' → logprob: -2.707639694213867
    5. 'board' → logprob: -2.832639694213867
    6. ' graph' → logprob: -3.082639694213867
    7. 'map' → logprob: -3.207639694213867
    8. ' grid' → logprob: -3.832639694213867
    9. 'maze' → logprob: -3.957639694213867
    10. 'M' → logprob: -3.957639694213867

Token 21: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.01853185147047043
    2. ',' → logprob: -4.268531799316406
    3. ')' → logprob: -5.518531799316406
    4. '[' → logprob: -9.393531799316406
    5. '):
' → logprob: -9.518531799316406
    6. ' ):' → logprob: -9.893531799316406
    7. ')):' → logprob: -10.893531799316406
    8. '):
' → logprob: -11.518531799316406
    9. ':' → logprob: -11.768531799316406
    10. ',n' → logprob: -12.018531799316406

Token 22: 'auth' (ID: 5723)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.41677090525627136
    2. 'queue' → logprob: -2.2917709350585938
    3. 'graph' → logprob: -2.9167709350585938
    4. ' visited' → logprob: -3.0417709350585938
    5. 'start' → logprob: -3.4167709350585938
    6. 'q' → logprob: -3.7917709350585938
    7. 'dist' → logprob: -5.041770935058594
    8. 'que' → logprob: -5.291770935058594
    9. ' queue' → logprob: -5.416770935058594
    10. 'M' → logprob: -5.416770935058594

Token 23: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.027817705646157265
    2. ')' → logprob: -4.652817726135254
    3. 'or' → logprob: -5.152817726135254
    4. 'entication' → logprob: -5.652817726135254
    5. 'ority' → logprob: -5.652817726135254
    6. 'enticate' → logprob: -6.027817726135254
    7. 'enticated' → logprob: -7.152817726135254
    8. '):
' → logprob: -7.527817726135254
    9. '):

' → logprob: -8.402817726135254
    10. 'ORITY' → logprob: -8.777817726135254

Token 24: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.11796950548887253
    2. '   ' → logprob: -2.367969512939453
    3. '):' → logprob: -4.492969512939453
    4. ':
' → logprob: -5.992969512939453
    5. ' :' → logprob: -6.242969512939453
    6. ')' → logprob: -8.117969512939453
    7. '):
' → logprob: -8.492969512939453
    8. '	queue' → logprob: -8.492969512939453
    9. ' ' → logprob: -8.867969512939453
    10. '    ' → logprob: -8.867969512939453

Token 25: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6815630793571472
    2. ' queue' → logprob: -2.056563138961792
    3. 'queue' → logprob: -2.056563138961792
    4. ':' → logprob: -2.431563138961792
    5. 'q' → logprob: -3.056563138961792
    6. ' q' → logprob: -3.556563138961792
    7. 'd' → logprob: -4.306562900543213
    8. ' :' → logprob: -4.431562900543213
    9. ' visited' → logprob: -4.931562900543213
    10. '	queue' → logprob: -4.931562900543213

Token 26: ' auth' (ID: 6246)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.49572229385375977
    2. ' W' → logprob: -1.9957222938537598
    3. ' levels' → logprob: -2.7457222938537598
    4. ' auth' → logprob: -3.2457222938537598
    5. ' X' → logprob: -3.2457222938537598
    6. ' len' → logprob: -3.7457222938537598
    7. ' (' → logprob: -4.24572229385376
    8. 'W' → logprob: -4.24572229385376
    9. 'levels' → logprob: -4.74572229385376
    10. ' H' → logprob: -4.87072229385376

Token 27: '==' (ID: 560)
  Prédit: '[Y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[Y' → logprob: -0.2143349051475525
    2. '[' → logprob: -2.0893349647521973
    3. '==' → logprob: -3.3393349647521973
    4. '[X' → logprob: -4.214334964752197
    5. ':' → logprob: -4.464334964752197
    6. '>' → logprob: -6.589334964752197
    7. ' ==' → logprob: -6.839334964752197
    8. '!=' → logprob: -7.339334964752197
    9. '>=' → logprob: -7.589334964752197
    10. '   ' → logprob: -7.714334964752197

Token 28: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.8989307284355164
    2. '1' → logprob: -0.8989307284355164
    3. 'True' → logprob: -2.773930788040161
    4. ''' → logprob: -3.148930788040161
    5. '"' → logprob: -3.773930788040161
    6. 'False' → logprob: -4.273930549621582
    7. '-' → logprob: -4.398930549621582
    8. ' ' → logprob: -5.148930549621582
    9. 'None' → logprob: -5.148930549621582
    10. ''#' → logprob: -6.023930549621582

Token 29: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0038987500593066216
    2. ':return' → logprob: -6.253898620605469
    3. ':
' → logprob: -6.503898620605469
    4. ' :' → logprob: -8.628898620605469
    5. ' and' → logprob: -8.628898620605469
    6. ' or' → logprob: -9.753898620605469
    7. '   ' → logprob: -10.128898620605469
    8. 'and' → logprob: -12.878898620605469
    9. '):' → logprob: -13.003898620605469
    10. ' :
' → logprob: -13.378898620605469

Token 30: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.424081951379776
    2. ' return' → logprob: -1.1740819215774536
    3. '       ' → logprob: -3.924082040786743
    4. '	return' → logprob: -5.049081802368164
    5. 'return' → logprob: -5.799081802368164
    6. ' queue' → logprob: -6.549081802368164
    7. '    ' → logprob: -6.924081802368164
    8. ' ' → logprob: -7.049081802368164
    9. ':' → logprob: -7.174081802368164
    10. ' :' → logprob: -7.424081802368164

Token 31: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.14326030015945435
    2. 'return' (adapté à ' return') → logprob: -2.8932602405548096
    3. '   ' → logprob: -3.1432602405548096
    4. ' queue' → logprob: -4.268260478973389
    5. ' for' → logprob: -4.768260478973389
    6. '       ' → logprob: -6.393260478973389
    7. ' levels' → logprob: -6.768260478973389
    8. '    ' → logprob: -6.893260478973389
    9. 'queue' → logprob: -6.893260478973389
    10. ' print' → logprob: -7.018260478973389

Token 32: ' ' (ID: 220)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' 
' → logprob: -0.6438773274421692
    2. '\n' → logprob: -1.3938772678375244
    3. '
' → logprob: -1.7688772678375244
    4. '  
' → logprob: -3.6438772678375244
    5. ' 

' → logprob: -4.5188775062561035
    6. '    
' → logprob: -5.7688775062561035
    7. ' ' → logprob: -6.2688775062561035
    8. '   
' → logprob: -6.3938775062561035
    9. '
    
' → logprob: -6.5188775062561035
    10. ' \' → logprob: -6.6438775062561035

Token 33: '0' (ID: 15)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.48164960741996765
    2. '
' → logprob: -2.23164963722229
    3. 'True' → logprob: -2.23164963722229
    4. 'False' → logprob: -2.48164963722229
    5. '-' → logprob: -2.98164963722229
    6. '0' → logprob: -3.85664963722229
    7. ' None' → logprob: -5.731649398803711
    8. '    
' → logprob: -6.356649398803711
    9. '\n' → logprob: -6.481649398803711
    10. '1' → logprob: -6.731649398803711

Token 34: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.08995244652032852
    2. '\n' → logprob: -3.4649524688720703
    3. ' 
' → logprob: -3.7149524688720703
    4. '    
' → logprob: -4.33995246887207
    5. '  
' → logprob: -5.71495246887207
    6. '' → logprob: -6.08995246887207
    7. '<|end|>' → logprob: -6.08995246887207
    8. '   ' → logprob: -6.21495246887207
    9. '   
' → logprob: -6.33995246887207
    10. '
' → logprob: -7.21495246887207

Token 35: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.054871223866939545
    2. '\n' → logprob: -3.4298713207244873
    3. ' 
' → logprob: -4.429871082305908
    4. '    
' → logprob: -5.679871082305908
    5. '  
' → logprob: -6.679871082305908
    6. '' → logprob: -6.804871082305908
    7. '
' → logprob: -7.304871082305908
    8. '<|end|>' → logprob: -7.429871082305908
    9. '   
' → logprob: -7.804871082305908
    10. '   ' → logprob: -7.929871082305908

Token 36: ' visited' (ID: 18416)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0925140231847763
    2. ' 
' → logprob: -3.0925140380859375
    3. '\n' → logprob: -4.0925140380859375
    4. ':' → logprob: -4.5925140380859375
    5. '' → logprob: -5.3425140380859375
    6. ',' → logprob: -6.3425140380859375
    7. '  
' → logprob: -6.3425140380859375
    8. ' ' → logprob: -6.4675140380859375
    9. '    
' → logprob: -7.2175140380859375
    10. 'n' → logprob: -7.2175140380859375

Token 37: '=[[' (ID: 112637)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1445058137178421
    2. '=' → logprob: -2.019505739212036
    3. '[' → logprob: -6.894505977630615
    4. '=[' → logprob: -7.894505977630615
    5. '=[[' → logprob: -8.269505500793457
    6. '=[]' → logprob: -9.519505500793457
    7. '=set' → logprob: -10.144505500793457
    8. ' =[' → logprob: -10.269505500793457
    9. ' ' → logprob: -11.894505500793457
    10. '[][]' → logprob: -12.519505500793457

Token 38: 'False' (ID: 8168)
  Prédit: 'False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.00032759839086793363
    2. '0' → logprob: -8.375328063964844
    3. ' False' → logprob: -9.250328063964844
    4. '   ' → logprob: -15.000328063964844
    5. '(False' → logprob: -15.125328063964844
    6. '=False' → logprob: -16.125328063964844
    7. 'True' → logprob: -16.250328063964844
    8. '[' → logprob: -17.375328063964844
    9. '-' → logprob: -18.375328063964844
    10. 'F' → logprob: -18.500328063964844

Token 39: ']*' (ID: 18579)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5000641345977783
    2. ']*' → logprob: -1.1250641345977783
    3. 'for' → logprob: -3.1250641345977783
    4. ']' → logprob: -3.8750641345977783
    5. ']*(' → logprob: -5.500063896179199
    6. '	for' → logprob: -10.2500638961792
    7. '   ' → logprob: -10.2500638961792
    8. '```' → logprob: -11.6250638961792
    9. ' ]' → logprob: -12.0000638961792
    10. ')' → logprob: -12.6250638961792

Token 40: 'W' (ID: 54)
  Prédit: 'W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.0021188543178141117
    2. ' W' → logprob: -6.877119064331055
    3. 'H' → logprob: -7.502119064331055
    4. '(W' → logprob: -8.002119064331055
    5. 'X' → logprob: -9.752119064331055
    6. '(' → logprob: -9.877119064331055
    7. '   ' → logprob: -11.002119064331055
    8. ' (' → logprob: -11.252119064331055
    9. 'Y' → logprob: -11.502119064331055
    10. 'M' → logprob: -11.627119064331055

Token 41: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.0486326739192009
    2. 'for' → logprob: -3.0486326217651367
    3. '   ' → logprob: -10.298632621765137
    4. '	for' → logprob: -11.923632621765137
    5. ' ' → logprob: -13.548632621765137
    6. '    ' → logprob: -14.048632621765137
    7. '```' → logprob: -14.298632621765137
    8. '       ' → logprob: -14.923632621765137
    9. ')' → logprob: -15.548632621765137
    10. ' ' → logprob: -15.798632621765137

Token 42: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.25827160477638245
    2. '_' → logprob: -1.88327157497406
    3. ' range' → logprob: -2.6332716941833496
    4. 'range' → logprob: -6.00827169418335
    5. '_range' → logprob: -7.88327169418335
    6. '<|end|>' → logprob: -8.758271217346191
    7. '<|end|>' → logprob: -8.758271217346191
    8. ' in' → logprob: -9.008271217346191
    9. ' i' → logprob: -9.133271217346191
    10. ' ' → logprob: -9.383271217346191

Token 43: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.2033311426639557
    2. ' range' → logprob: -1.7033311128616333
    3. '[' → logprob: -6.328330993652344
    4. '(range' → logprob: -10.328330993652344
    5. 'row' → logprob: -10.828330993652344
    6. ' in' → logprob: -10.828330993652344
    7. '	range' → logprob: -11.703330993652344
    8. ' [' → logprob: -11.703330993652344
    9. '(' → logprob: -12.203330993652344
    10. ' xrange' → logprob: -12.328330993652344

Token 44: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.47413408756256104
    2. 'range' → logprob: -0.974134087562561
    3. '(range' → logprob: -10.34913444519043
    4. '[' → logprob: -10.84913444519043
    5. '	range' → logprob: -12.97413444519043
    6. 'H' → logprob: -14.09913444519043
    7. ' ' → logprob: -14.59913444519043
    8. '   ' → logprob: -14.72413444519043
    9. '[Y' → logprob: -14.84913444519043
    10. ' xrange' → logprob: -14.97413444519043

Token 45: '(H' (ID: 20904)
  Prédit: '(H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -9.448370838072151e-05
    2. '(' → logprob: -10.125094413757324
    3. ' (' → logprob: -10.625094413757324
    4. 'H' → logprob: -10.625094413757324
    5. ' H' → logprob: -13.500094413757324
    6. '(Y' → logprob: -13.625094413757324
    7. '(W' → logprob: -13.750094413757324
    8. '	H' → logprob: -13.875094413757324
    9. '   ' → logprob: -15.000094413757324
    10. ' ' → logprob: -15.500094413757324

Token 46: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -3.762356209335849e-05
    2. ')' → logprob: -10.37503719329834
    3. ']' → logprob: -13.25003719329834
    4. ')]
' → logprob: -13.62503719329834
    5. ' )' → logprob: -13.75003719329834
    6. ')],' → logprob: -14.12503719329834
    7. ')])' → logprob: -14.50003719329834
    8. '))' → logprob: -15.37503719329834
    9. '')]' → logprob: -15.50003719329834
    10. '   ' → logprob: -15.87503719329834

Token 47: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.034461796283721924
    2. '
' → logprob: -3.659461736679077
    3. '    
' → logprob: -5.909461975097656
    4. 'visited' → logprob: -6.284461975097656
    5. '' → logprob: -6.909461975097656
    6. ' visited' → logprob: -7.409461975097656
    7. '	queue' → logprob: -8.284461975097656
    8. '[' → logprob: -8.534461975097656
    9. 'queue' → logprob: -8.784461975097656
    10. '  
' → logprob: -8.909461975097656

Token 48: ' q' (ID: 2335)
  Prédit: ' queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' queue' → logprob: -0.2036803960800171
    2. 'queue' → logprob: -1.953680396080017
    3. '   ' → logprob: -3.3286805152893066
    4. 'q' (adapté à ' q') → logprob: -6.078680515289307
    5. ' q' → logprob: -6.203680515289307
    6. ' que' → logprob: -7.703680515289307
    7. ' dq' → logprob: -7.953680515289307
    8. '	queue' → logprob: -8.203680038452148
    9. ' deque' → logprob: -8.203680038452148
    10. 'deque' → logprob: -8.578680038452148

Token 49: '=' (ID: 28)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.8679612278938293
    2. '=' → logprob: -1.1179611682891846
    3. '.append' → logprob: -1.4929611682891846
    4. ' =' → logprob: -4.117961406707764
    5. 'ue' → logprob: -4.992961406707764
    6. '.=' → logprob: -5.742961406707764
    7. '.enqueue' → logprob: -6.992961406707764
    8. '.add' → logprob: -8.117960929870605
    9. '.put' → logprob: -8.742960929870605
    10. '.e' → logprob: -8.742960929870605

Token 50: 'deque' (ID: 143563)
  Prédit: 'deque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.002475777640938759
    2. ' deque' → logprob: -6.002475738525391
    3. 'de' → logprob: -15.62747573852539
    4. 'Deque' → logprob: -17.00247573852539
    5. '```' → logprob: -18.50247573852539
    6. 'dq' → logprob: -18.87747573852539
    7. 'collections' → logprob: -19.12747573852539
    8. '	de' → logprob: -19.37747573852539
    9. '(de' → logprob: -20.00247573852539
    10. '   ' → logprob: -20.00247573852539

Token 51: '()
' (ID: 1234)
  Prédit: '([('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([(' → logprob: -0.5912352800369263
    2. '()' → logprob: -0.8412352800369263
    3. '(' → logprob: -4.466235160827637
    4. '([' → logprob: -5.966235160827637
    5. '((' → logprob: -7.341235160827637
    6. '([]' → logprob: -8.341235160827637
    7. '[(' → logprob: -8.841235160827637
    8. '()
' → logprob: -10.341235160827637
    9. '([
' → logprob: -11.466235160827637
    10. '([...' → logprob: -11.716235160827637

Token 52: '   ' (ID: 271)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.7348747849464417
    2. '(' → logprob: -1.3598747253417969
    3. '   ' → logprob: -2.109874725341797
    4. '(q' → logprob: -2.734874725341797
    5. '(Y' → logprob: -3.609874725341797
    6. '(X' → logprob: -4.109874725341797
    7. '[(' → logprob: -5.234874725341797
    8. ' (' → logprob: -5.359874725341797
    9. '()' → logprob: -5.484874725341797
    10. '(W' → logprob: -5.859874725341797

Token 53: ' x' (ID: 1215)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.16303794085979462
    2. '   ' → logprob: -2.0380380153656006
    3. ' q' → logprob: -4.0380377769470215
    4. '	q' → logprob: -6.7880377769470215
    5. '
' → logprob: -7.2880377769470215
    6. '(q' → logprob: -7.9130377769470215
    7. ' (' → logprob: -8.66303825378418
    8. '```' → logprob: -9.91303825378418
    9. '(' → logprob: -10.03803825378418
    10. '    
' → logprob: -10.28803825378418

Token 54: ',y' (ID: 16103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.47816112637519836
    2. ',y' → logprob: -0.978161096572876
    3. ',Y' → logprob: -5.853161334991455
    4. ',q' → logprob: -6.978161334991455
    5. '=' → logprob: -9.728160858154297
    6. ' ,' → logprob: -9.853160858154297
    7. ',x' → logprob: -10.103160858154297
    8. ',w' → logprob: -10.478160858154297
    9. 'y' → logprob: -10.728160858154297
    10. ',user' → logprob: -12.228160858154297

Token 55: '=X' (ID: 143117)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07662089169025421
    2. ' =' → logprob: -2.7016208171844482
    3. ',' → logprob: -5.076621055603027
    4. ',q' → logprob: -8.951621055603027
    5. '=q' → logprob: -8.951621055603027
    6. ' ' → logprob: -11.201621055603027
    7. '=user' → logprob: -11.451621055603027
    8. ',y' → logprob: -11.451621055603027
    9. '<|end|>' → logprob: -11.451621055603027
    10. '=x' → logprob: -11.576621055603027

Token 56: '-' (ID: 12)
  Prédit: ',y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',y' → logprob: -0.6931875348091125
    2. ',' → logprob: -1.0681874752044678
    3. ',q' → logprob: -2.0681874752044678
    4. '<|end|>' → logprob: -5.068187713623047
    5. '    ' → logprob: -5.443187713623047
    6. '<|end|>' → logprob: -5.568187713623047
    7. '   ' → logprob: -5.818187713623047
    8. ',x' → logprob: -6.193187713623047
    9. ',Y' → logprob: -6.693187713623047
    10. ' ,' → logprob: -6.818187713623047

Token 57: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004935794277116656
    2. ' ' → logprob: -7.62549352645874
    3. '<|end|>' → logprob: -12.375494003295898
    4. '2' → logprob: -14.250494003295898
    5. ',' → logprob: -15.125494003295898
    6. '```' → logprob: -16.0004940032959
    7. '<|end|>' → logprob: -16.5629940032959
    8. ' y' → logprob: -16.9379940032959
    9. '   ' → logprob: -16.9379940032959
    10. '-' → logprob: -17.2504940032959

Token 58: ',Y' (ID: 71464)
  Prédit: ',y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',y' → logprob: -0.22643457353115082
    2. ',' → logprob: -1.601434588432312
    3. ' ,' → logprob: -7.476434707641602
    4. ',Y' → logprob: -8.101434707641602
    5. ',q' → logprob: -9.226434707641602
    6. ',x' → logprob: -11.601434707641602
    7. ',j' → logprob: -11.976434707641602
    8. '<|end|>' → logprob: -12.101434707641602
    9. ',z' → logprob: -12.851434707641602
    10. ',w' → logprob: -12.851434707641602

Token 59: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0002382249804213643
    2. '<|end|>' → logprob: -8.875238418579102
    3. ' -' → logprob: -9.750238418579102
    4. '   ' → logprob: -10.875238418579102
    5. '0' → logprob: -11.375238418579102
    6. '<|end|>' → logprob: -12.500238418579102
    7. '+' → logprob: -12.875238418579102
    8. '
' → logprob: -13.500238418579102
    9. '	' → logprob: -14.250238418579102
    10. ' ' → logprob: -15.125238418579102

Token 60: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.729906196298543e-06
    2. ' ' → logprob: -12.375009536743164
    3. '<|end|>' → logprob: -12.875009536743164
    4. '2' → logprob: -13.687509536743164
    5. '```' → logprob: -15.312509536743164
    6. '<|end|>' → logprob: -15.312509536743164
    7. '-' → logprob: -15.750009536743164
    8. '...' → logprob: -16.562509536743164
    9. '  ' → logprob: -16.750009536743164
    10. 'import' → logprob: -16.812509536743164

Token 61: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1794777512550354
    2. '   ' → logprob: -2.3044776916503906
    3. 'q' → logprob: -3.6794776916503906
    4. '<|end|>' → logprob: -4.304477691650391
    5. '	q' → logprob: -4.679477691650391
    6. ',q' → logprob: -6.054477691650391
    7. ')
' → logprob: -6.054477691650391
    8. '    
' → logprob: -6.179477691650391
    9. ' q' → logprob: -6.179477691650391
    10. ')' → logprob: -6.179477691650391

Token 62: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0420171283185482
    2. '   ' → logprob: -3.4170172214508057
    3. '<|end|>' → logprob: -5.792016983032227
    4. 'q' → logprob: -6.542016983032227
    5. '	q' → logprob: -6.667016983032227
    6. '    
' → logprob: -7.167016983032227
    7. '<|end|>' → logprob: -7.167016983032227
    8. '
' → logprob: -8.417016983032227
    9. ' q' → logprob: -8.917016983032227
    10. ',q' → logprob: -9.167016983032227

Token 63: ' if' (ID: 538)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.08362411707639694
    2. '   ' → logprob: -3.2086241245269775
    3. ' q' → logprob: -3.5836241245269775
    4. '
' → logprob: -4.833623886108398
    5. '	q' → logprob: -5.708623886108398
    6. 'visited' → logprob: -7.583623886108398
    7. ' visited' → logprob: -9.708623886108398
    8. ',q' → logprob: -9.833623886108398
    9. '    
' → logprob: -10.583623886108398
    10. '[q' → logprob: -10.583623886108398

Token 64: ' levels' (ID: 8374)
  Prédit: ' levels'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' levels' → logprob: -1.0665388107299805
    2. 'levels' → logprob: -1.0665388107299805
    3. ' not' → logprob: -1.9415388107299805
    4. 'auth' → logprob: -2.5665388107299805
    5. ' auth' → logprob: -2.8165388107299805
    6. 'visited' → logprob: -4.5665388107299805
    7. 'not' → logprob: -4.5665388107299805
    8. ' visited' → logprob: -4.9415388107299805
    9. ' ' → logprob: -7.1915388107299805
    10. ' x' → logprob: -7.3165388107299805

Token 65: '[y' (ID: 34551)
  Prédit: '[x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.142862930893898
    2. '[y' → logprob: -2.0178630352020264
    3. '[' → logprob: -9.017863273620605
    4. 'x' → logprob: -10.517863273620605
    5. '```' → logprob: -12.017863273620605
    6. '==' → logprob: -12.517863273620605
    7. ' [' → logprob: -12.642863273620605
    8. '[q' → logprob: -13.017863273620605
    9. 'y' → logprob: -13.142863273620605
    10. '[Y' → logprob: -13.267863273620605

Token 66: '][' (ID: 2696)
  Prédit: '[x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.5461909174919128
    2. '[y' → logprob: -1.0461909770965576
    3. '==' → logprob: -3.7961909770965576
    4. '][' → logprob: -4.5461907386779785
    5. '[' → logprob: -4.6711907386779785
    6. '>' → logprob: -4.7961907386779785
    7. ' ==' → logprob: -5.5461907386779785
    8. '>=' → logprob: -6.0461907386779785
    9. '-' → logprob: -6.1711907386779785
    10. ' >' → logprob: -6.2961907386779785

Token 67: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.6240566083070007e-06
    2. ' x' → logprob: -13.750001907348633
    3. ')x' → logprob: -15.125001907348633
    4. '	x' → logprob: -15.875001907348633
    5. ']' → logprob: -17.250001907348633
    6. '[x' → logprob: -17.750001907348633
    7. ''x' → logprob: -18.000001907348633
    8. '>x' → logprob: -18.125001907348633
    9. '"x' → logprob: -18.250001907348633
    10. ',x' → logprob: -18.375001907348633

Token 68: ']>' (ID: 54651)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.977348268032074
    2. ']==' → logprob: -0.977348268032074
    3. '==' → logprob: -1.8523483276367188
    4. ' ==' → logprob: -3.9773483276367188
    5. '!=' → logprob: -4.102348327636719
    6. ']>' → logprob: -4.352348327636719
    7. '>' → logprob: -4.727348327636719
    8. ']!=' → logprob: -4.727348327636719
    9. ' !=' → logprob: -5.227348327636719
    10. '[' → logprob: -5.227348327636719

Token 69: 'auth' (ID: 5723)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.39076659083366394
    2. 'auth' → logprob: -1.1407666206359863
    3. '1' → logprob: -6.515766620635986
    4. '=' → logprob: -7.015766620635986
    5. ' auth' → logprob: -8.140766143798828
    6. ' ' → logprob: -8.265766143798828
    7. '5' → logprob: -9.015766143798828
    8. '2' → logprob: -9.640766143798828
    9. '```' → logprob: -9.640766143798828
    10. '3' → logprob: -9.765766143798828

Token 70: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02001819759607315
    2. ':return' → logprob: -4.270018100738525
    3. ' or' → logprob: -5.395018100738525
    4. '       ' → logprob: -7.520018100738525
    5. ' :' → logprob: -8.395018577575684
    6. '   ' → logprob: -8.395018577575684
    7. ' and' → logprob: -9.270018577575684
    8. ':
' → logprob: -9.770018577575684
    9. '):' → logprob: -10.145018577575684
    10. '-' → logprob: -10.520018577575684

Token 71: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0051789665594697
    2. ' return' → logprob: -5.380178928375244
    3. 'return' → logprob: -8.380179405212402
    4. '```' → logprob: -8.630179405212402
    5. '<|end|>' → logprob: -10.380179405212402
    6. '   ' → logprob: -10.380179405212402
    7. ':return' → logprob: -10.630179405212402
    8. '	return' → logprob: -11.005179405212402
    9. '0' → logprob: -11.380179405212402
    10. ' ' → logprob: -12.630179405212402

Token 72: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.48770570755004883
    2. 'return' (adapté à ' return') → logprob: -0.9877057075500488
    3. ' return' → logprob: -4.362705707550049
    4. '   ' → logprob: -7.237705707550049
    5. '	return' → logprob: -10.61270523071289
    6. '```' → logprob: -10.98770523071289
    7. '           ' → logprob: -11.36270523071289
    8. ':return' → logprob: -11.73770523071289
    9. '{return' → logprob: -11.98770523071289
    10. ' ' → logprob: -13.11270523071289

Token 73: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.531813702778891e-05
    2. ' ' → logprob: -9.37509536743164
    3. '<|end|>' → logprob: -12.37509536743164
    4. '```' → logprob: -13.50009536743164
    5. 'None' → logprob: -13.62509536743164
    6. 'False' → logprob: -14.12509536743164
    7. 'auth' → logprob: -14.25009536743164
    8. '   ' → logprob: -14.50009536743164
    9. '1' → logprob: -14.50009536743164
    10. '  ' → logprob: -15.50009536743164

Token 74: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.248469718324486e-05
    2. ' ' → logprob: -11.125022888183594
    3. 'None' → logprob: -13.375022888183594
    4. 'False' → logprob: -13.500022888183594
    5. '1' → logprob: -14.000022888183594
    6. 'auth' → logprob: -14.125022888183594
    7. '```' → logprob: -14.500022888183594
    8. '[]' → logprob: -14.750022888183594
    9. '<|end|>' → logprob: -15.000022888183594
    10. '-' → logprob: -15.250022888183594

Token 75: '
' (ID: 198)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.0886833667755127
    2. '
' → logprob: -2.9636833667755127
    3. ' 
' → logprob: -4.088683128356934
    4. '   ' → logprob: -5.088683128356934
    5. '    
' → logprob: -5.713683128356934
    6. '' → logprob: -6.838683128356934
    7. '\' → logprob: -6.838683128356934
    8. '  
' → logprob: -7.213683128356934
    9. '```' → logprob: -7.463683128356934
    10. '   
' → logprob: -7.713683128356934

Token 76: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5119349956512451
    2. '\n' → logprob: -1.1369349956512451
    3. '   ' → logprob: -3.511934995651245
    4. ' 
' → logprob: -3.761934995651245
    5. '    
' → logprob: -4.261935234069824
    6. '```' → logprob: -6.136935234069824
    7. '  
' → logprob: -6.261935234069824
    8. '<|end|>' → logprob: -6.386935234069824
    9. 'q' → logprob: -6.761935234069824
    10. '   
' → logprob: -6.761935234069824

Token 77: ' visited' (ID: 18416)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -1.185649037361145
    2. '
' → logprob: -1.435649037361145
    3. '   ' → logprob: -1.685649037361145
    4. '	q' → logprob: -2.1856489181518555
    5. ' q' → logprob: -2.1856489181518555
    6. '    
' → logprob: -4.1856489181518555
    7. '\n' → logprob: -4.6856489181518555
    8. ' 
' → logprob: -5.4356489181518555
    9. '<|end|>' → logprob: -5.5606489181518555
    10. '```' → logprob: -5.9356489181518555

Token 78: '[y' (ID: 34551)
  Prédit: '[y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -2.5107177862082608e-05
    2. '[' → logprob: -10.875024795532227
    3. '[Y' → logprob: -12.125024795532227
    4. ' [' → logprob: -15.125024795532227
    5. '```' → logprob: -16.250024795532227
    6. '[x' → logprob: -16.375024795532227
    7. '][' → logprob: -16.500024795532227
    8. '\[' → logprob: -16.875024795532227
    9. '[q' → logprob: -17.000024795532227
    10. '[v' → logprob: -18.000024795532227

Token 79: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.001627098536118865
    2. '[y' → logprob: -6.626626968383789
    3. ' ][' → logprob: -8.876626968383789
    4. ']' → logprob: -9.126626968383789
    5. '[' → logprob: -10.626626968383789
    6. '```' → logprob: -11.876626968383789
    7. ' ' → logprob: -12.001626968383789
    8. '   ' → logprob: -12.001626968383789
    9. '[Y' → logprob: -13.251626968383789
    10. '[x' → logprob: -13.376626968383789

Token 80: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -6.704273118884885e-07
    2. ' x' → logprob: -14.625000953674316
    3. '[x' → logprob: -16.75
    4. ')x' → logprob: -17.75
    5. '	x' → logprob: -18.625
    6. '][' → logprob: -19.125
    7. ']' → logprob: -19.75
    8. '```' → logprob: -19.75
    9. '(x' → logprob: -20.125
    10. '[' → logprob: -20.125

Token 81: ']=' (ID: 9539)
  Prédit: ']='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']=' → logprob: -0.4743751287460327
    2. ']' → logprob: -0.9743751287460327
    3. '=' → logprob: -8.724374771118164
    4. '=True' → logprob: -9.474374771118164
    5. ' ]' → logprob: -9.849374771118164
    6. '[' → logprob: -13.474374771118164
    7. ' =' → logprob: -14.099374771118164
    8. '']=' → logprob: -14.349374771118164
    9. ']==' → logprob: -14.474374771118164
    10. ']
' → logprob: -14.849374771118164

Token 82: 'True' (ID: 4710)
  Prédit: 'True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.00020389800192788243
    2. ' True' → logprob: -8.500204086303711
    3. '1' → logprob: -15.500204086303711
    4. 'Tr' → logprob: -16.00020408630371
    5. '(True' → logprob: -17.00020408630371
    6. '=True' → logprob: -17.12520408630371
    7. 'T' → logprob: -17.37520408630371
    8. '[' → logprob: -19.25020408630371
    9. 'False' → logprob: -19.37520408630371
    10. '0' → logprob: -21.37520408630371

Token 83: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.04912104457616806
    2. '   ' → logprob: -3.674121141433716
    3. '	q' → logprob: -4.174120903015137
    4. '\n' → logprob: -6.174120903015137
    5. 'q' → logprob: -6.299120903015137
    6. '    
' → logprob: -7.299120903015137
    7. '
' → logprob: -7.799120903015137
    8. '<|end|>' → logprob: -7.924120903015137
    9. '' → logprob: -8.424120903015137
    10. '  
' → logprob: -8.549120903015137

Token 84: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2354077845811844
    2. '   ' → logprob: -2.360407829284668
    3. 'q' → logprob: -2.860407829284668
    4. '	q' → logprob: -3.485407829284668
    5. '```' → logprob: -4.610407829284668
    6. '\n' → logprob: -5.110407829284668
    7. '    
' → logprob: -5.860407829284668
    8. ',q' → logprob: -6.110407829284668
    9. '' → logprob: -7.360407829284668
    10. '\' → logprob: -7.360407829284668

Token 85: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' (adapté à ' q') → logprob: -0.0037312027998268604
    2. '   ' → logprob: -5.8787312507629395
    3. ' q' → logprob: -8.253730773925781
    4. '```' → logprob: -8.628730773925781
    5. '
' → logprob: -8.753730773925781
    6. '	q' → logprob: -9.253730773925781
    7. '\n' → logprob: -9.378730773925781
    8. '\' → logprob: -10.128730773925781
    9. 'newline' → logprob: -10.378730773925781
    10. '`' → logprob: -10.628730773925781

Token 86: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0005866335122846067
    2. '.' → logprob: -7.75058650970459
    3. '.p' → logprob: -9.75058650970459
    4. '.extend' → logprob: -10.00058650970459
    5. '.app' → logprob: -10.75058650970459
    6. '.put' → logprob: -11.37558650970459
    7. '.enqueue' → logprob: -11.37558650970459
    8. '.add' → logprob: -12.75058650970459
    9. '.ap' → logprob: -13.00058650970459
    10. '.Append' → logprob: -14.37558650970459

Token 87: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.00012630375567823648
    2. '(' → logprob: -9.000125885009766
    3. '(((' → logprob: -13.750125885009766
    4. '(x' → logprob: -14.625125885009766
    5. '([' → logprob: -15.250125885009766
    6. '(q' → logprob: -15.250125885009766
    7. '([(' → logprob: -15.375125885009766
    8. '(('' → logprob: -15.500125885009766
    9. '(([' → logprob: -15.750125885009766
    10. ' ((' → logprob: -16.000125885009766

Token 88: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0059958635829389095
    2. 'y' → logprob: -5.130995750427246
    3. ' x' → logprob: -9.755995750427246
    4. ' y' → logprob: -12.005995750427246
    5. '(x' → logprob: -13.505995750427246
    6. 'Y' → logprob: -14.755995750427246
    7. '```' → logprob: -15.130995750427246
    8. 'X' → logprob: -15.380995750427246
    9. ')x' → logprob: -15.505995750427246
    10. ')' → logprob: -15.630995750427246

Token 89: ',y' (ID: 16103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1269829124212265
    2. ',y' → logprob: -2.1269829273223877
    3. ' ,' → logprob: -10.001982688903809
    4. ',Y' → logprob: -12.876982688903809
    5. ',q' → logprob: -13.251982688903809
    6. ',user' → logprob: -13.876982688903809
    7. ',
' → logprob: -13.876982688903809
    8. ')' → logprob: -14.126982688903809
    9. ',n' → logprob: -14.626982688903809
    10. '<|end|>' → logprob: -14.626982688903809

Token 90: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.25226008892059326
    2. '))' → logprob: -1.5022600889205933
    3. ',' → logprob: -8.127260208129883
    4. '),' → logprob: -11.752260208129883
    5. ')))' → logprob: -12.002260208129883
    6. ' )' → logprob: -12.377260208129883
    7. '))
' → logprob: -12.627260208129883
    8. ')
' → logprob: -12.627260208129883
    9. ')>' → logprob: -13.002260208129883
    10. ' ))' → logprob: -13.252260208129883

Token 91: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3069590628147125
    2. '   ' → logprob: -1.6819590330123901
    3. ',
' → logprob: -4.18195915222168
    4. ',' → logprob: -4.18195915222168
    5. '    
' → logprob: -4.68195915222168
    6. '\n' → logprob: -4.80695915222168
    7. ')' → logprob: -5.18195915222168
    8. ' 
' → logprob: -5.30695915222168
    9. ' while' → logprob: -5.30695915222168
    10. '' → logprob: -5.80695915222168

Token 92: ' count' (ID: 3605)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.2657279968261719
    2. ' while' → logprob: -1.3907279968261719
    3. 'while' → logprob: -1.6407279968261719
    4. '   ' → logprob: -1.6407279968261719
    5. '    
' → logprob: -4.015727996826172
    6. ' 
' → logprob: -4.140727996826172
    7. ' ' → logprob: -4.265727996826172
    8. '\n' → logprob: -4.390727996826172
    9. '	while' → logprob: -5.265727996826172
    10. '  
' → logprob: -5.890727996826172

Token 93: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3767697513103485
    2. ' =' → logprob: -1.251769781112671
    3. ' +=' → logprob: -3.876769781112671
    4. '+=' → logprob: -5.626769542694092
    5. ' ' → logprob: -6.501769542694092
    6. '+' → logprob: -6.876769542694092
    7. '<|end|>' → logprob: -7.001769542694092
    8. ')' → logprob: -10.62677001953125
    9. ' +' → logprob: -10.75177001953125
    10. ',' → logprob: -10.75177001953125

Token 94: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.07963478565216064
    2. '0' → logprob: -2.579634666442871
    3. ' ' → logprob: -7.204634666442871
    4. '   ' → logprob: -14.329634666442871
    5. 'auth' → logprob: -15.767134666442871
    6. '```' → logprob: -15.829634666442871
    7. 'int' → logprob: -16.767135620117188
    8. '`' → logprob: -16.892135620117188
    9. ' ' → logprob: -16.892135620117188
    10. '-' → logprob: -17.017135620117188

Token 95: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.023274481296539307
    2. '   ' → logprob: -4.0232744216918945
    3. '<|end|>' → logprob: -6.3982744216918945
    4. '```' → logprob: -7.2732744216918945
    5. '    
' → logprob: -7.3982744216918945
    6. '\n' → logprob: -7.3982744216918945
    7. ' 
' → logprob: -8.398274421691895
    8. '  
' → logprob: -8.523274421691895
    9. ' while' → logprob: -8.523274421691895
    10. '' → logprob: -8.898274421691895

Token 96: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.22644096612930298
    2. '   ' → logprob: -2.351440906524658
    3. '<|end|>' → logprob: -2.976440906524658
    4. '\n' → logprob: -3.851440906524658
    5. ' 
' → logprob: -4.601440906524658
    6. '    
' → logprob: -4.726440906524658
    7. '' → logprob: -5.726440906524658
    8. ' while' → logprob: -5.726440906524658
    9. '  
' → logprob: -5.976440906524658
    10. '	while' → logprob: -6.601440906524658

Token 97: ' while' (ID: 2049)
  Prédit: ' while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.6224340796470642
    2. 'while' (adapté à ' while') → logprob: -1.122434139251709
    3. '   ' → logprob: -2.372434139251709
    4. '	while' → logprob: -3.622434139251709
    5. '
' → logprob: -4.747434139251709
    6. '    
' → logprob: -5.622434139251709
    7. ' 
' → logprob: -5.622434139251709
    8. '	
' → logprob: -7.872434139251709
    9. ' ' → logprob: -7.997434139251709
    10. '  
' → logprob: -7.997434139251709

Token 98: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.1427937000989914
    2. ' q' → logprob: -2.017793655395508
    3. ' len' → logprob: -10.392793655395508
    4. 'len' → logprob: -10.392793655395508
    5. ' True' → logprob: -11.142793655395508
    6. 'True' → logprob: -11.142793655395508
    7. ' ' → logprob: -11.267793655395508
    8. '	q' → logprob: -11.767793655395508
    9. '   ' → logprob: -12.892793655395508
    10. '(q' → logprob: -13.517793655395508

Token 99: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00023238400171976537
    2. ':
' → logprob: -9.125232696533203
    3. '.' → logprob: -10.125232696533203
    4. '):' → logprob: -10.250232696533203
    5. ':**' → logprob: -10.500232696533203
    6. '>:' → logprob: -12.625232696533203
    7. '[' → logprob: -12.625232696533203
    8. ' and' → logprob: -13.250232696533203
    9. '[:]' → logprob: -13.250232696533203
    10. ':not' → logprob: -13.750232696533203

Token 100: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014917886815965176
    2. '    ' → logprob: -5.389917850494385
    3. '        
' → logprob: -5.889917850494385
    4. ' ' → logprob: -6.764917850494385
    5. '   ' → logprob: -6.889917850494385
    6. ',' → logprob: -7.014917850494385
    7. ' 
' → logprob: -7.139917850494385
    8. '  
' → logprob: -7.139917850494385
    9. '        ' → logprob: -7.889917850494385
    10. '    
' → logprob: -8.014918327331543

Token 101: ' cx' (ID: 44448)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0007167232106439769
    2. ' x' → logprob: -7.250716686248779
    3. 'cx' (adapté à ' cx') → logprob: -12.750717163085938
    4. 'qx' → logprob: -12.750717163085938
    5. 'nx' → logprob: -14.875717163085938
    6. '	x' → logprob: -15.500717163085938
    7. 'q' → logprob: -15.875717163085938
    8. 'tx' → logprob: -16.500717163085938
    9. '   ' → logprob: -16.500717163085938
    10. ' cx' → logprob: -17.125717163085938

Token 102: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007748471572995186
    2. ',c' → logprob: -5.132748603820801
    3. ',y' → logprob: -6.382748603820801
    4. ',x' → logprob: -10.1327486038208
    5. ',C' → logprob: -10.5077486038208
    6. ',d' → logprob: -10.7577486038208
    7. ',n' → logprob: -11.5077486038208
    8. ',q' → logprob: -12.0077486038208
    9. ' ,' → logprob: -12.6327486038208
    10. ',w' → logprob: -12.6327486038208

Token 103: 'cy' (ID: 4523)
  Prédit: 'cy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cy' → logprob: -2.8325677703833207e-05
    2. ' cy' → logprob: -10.500028610229492
    3. '.cy' → logprob: -14.500028610229492
    4. 'cyj' → logprob: -15.250028610229492
    5. 'cych' → logprob: -19.125028610229492
    6. 'cx' → logprob: -19.750028610229492
    7. 'cycles' → logprob: -20.500028610229492
    8. '	c' → logprob: -20.500028610229492
    9. ' ' → logprob: -20.875028610229492
    10. '   ' → logprob: -21.125028610229492

Token 104: '=q' (ID: 151306)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.059261441230773926
    2. '=q' → logprob: -2.9342613220214844
    3. ' =' → logprob: -5.434261322021484
    4. ',' → logprob: -14.309261322021484
    5. '=j' → logprob: -14.309261322021484
    6. ',q' → logprob: -14.434261322021484
    7. '=

' → logprob: -14.434261322021484
    8. '＝' → logprob: -14.559261322021484
    9. '=c' → logprob: -14.809261322021484
    10. ' ' → logprob: -14.934261322021484

Token 105: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -0.0005008471780456603
    2. '.pop' → logprob: -8.125500679016113
    3. '.' → logprob: -8.500500679016113
    4. ' .' → logprob: -14.500500679016113
    5. 'opleft' → logprob: -15.375500679016113
    6. 'p' → logprob: -15.625500679016113
    7. '   ' → logprob: -15.875500679016113
    8. '.dequeue' → logprob: -16.62550163269043
    9. '[' → logprob: -17.37550163269043
    10. '```' → logprob: -17.50050163269043

Token 106: 'opleft' (ID: 182170)
  Prédit: 'opleft'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'opleft' → logprob: -0.0007875907467678189
    2. 'op' → logprob: -7.750787734985352
    3. 'ople' → logprob: -8.000787734985352
    4. 'opl' → logprob: -10.750787734985352
    5. 'opt' → logprob: -15.875787734985352
    6. 'opf' → logprob: -16.75078773498535
    7. 'o' → logprob: -17.00078773498535
    8. 'oplevel' → logprob: -17.12578773498535
    9. 'opup' → logprob: -17.62578773498535
    10. 'opc' → logprob: -18.62578773498535

Token 107: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -1.8789383830153383e-05
    2. '()
' → logprob: -11.500019073486328
    3. '(' → logprob: -11.750019073486328
    4. '()`' → logprob: -15.250019073486328
    5. ' ()' → logprob: -15.875019073486328
    6. '()

' → logprob: -16.125019073486328
    7. ')' → logprob: -16.250019073486328
    8. '()\' → logprob: -16.500019073486328
    9. '()]' → logprob: -17.250019073486328
    10. '()
' → logprob: -17.250019073486328

Token 108: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1733579784631729
    2. '<|end|>' → logprob: -2.0483579635620117
    3. '
' → logprob: -4.798357963562012
    4. '   ' → logprob: -5.048357963562012
    5. ' for' → logprob: -5.048357963562012
    6. '<|end|>' → logprob: -6.173357963562012
    7. '        
' → logprob: -6.298357963562012
    8. ')' → logprob: -7.048357963562012
    9. ' 
' → logprob: -7.298357963562012
    10. ',' → logprob: -7.548357963562012

Token 109: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.38788050413131714
    2. ' for' → logprob: -1.137880563735962
    3. '
' → logprob: -7.262880325317383
    4. '       ' → logprob: -9.262880325317383
    5. '	for' → logprob: -9.387880325317383
    6. '   ' → logprob: -9.512880325317383
    7. 'dire' → logprob: -10.887880325317383
    8. '```' → logprob: -11.262880325317383
    9. ' directions' → logprob: -11.512880325317383
    10. 'd' → logprob: -12.262880325317383

Token 110: ' dx' (ID: 29472)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.08894535154104233
    2. ' dx' → logprob: -2.9639453887939453
    3. 'nx' → logprob: -3.4639453887939453
    4. ' nx' → logprob: -6.213945388793945
    5. '```' → logprob: -9.213945388793945
    6. '(dx' → logprob: -10.338945388793945
    7. '(nx' → logprob: -10.463945388793945
    8. '_dx' → logprob: -11.338945388793945
    9. ' ' → logprob: -12.713945388793945
    10. '`' → logprob: -13.463945388793945

Token 111: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.09851080179214478
    2. ',' → logprob: -2.5985107421875
    3. ',d' → logprob: -4.7235107421875
    4. ' ,' → logprob: -4.8485107421875
    5. 'in' → logprob: -6.3485107421875
    6. ',in' → logprob: -8.4735107421875
    7. ',y' → logprob: -8.7235107421875
    8. ',n' → logprob: -8.8485107421875
    9. ',next' → logprob: -9.3485107421875
    10. '<|end|>' → logprob: -10.3485107421875

Token 112: 'dy' (ID: 7593)
  Prédit: 'dy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -0.004083385691046715
    2. ' dy' → logprob: -5.504083156585693
    3. 'd' → logprob: -12.879083633422852
    4. '[' → logprob: -13.879083633422852
    5. 'Dy' → logprob: -15.004083633422852
    6. '0' → logprob: -15.129083633422852
    7. '.dy' → logprob: -15.379083633422852
    8. '<|end|>' → logprob: -15.504083633422852
    9. '1' → logprob: -16.50408363342285
    10. ' ' → logprob: -16.62908363342285

Token 113: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.016066396608948708
    2. 'in' → logprob: -4.141066551208496
    3. '<|end|>' → logprob: -11.016066551208496
    4. ',' → logprob: -12.391066551208496
    5. ' ' → logprob: -12.391066551208496
    6. '	in' → logprob: -12.516066551208496
    7. ' ,' → logprob: -14.141066551208496
    8. ':' → logprob: -15.016066551208496
    9. '<|end|>' → logprob: -15.016066551208496
    10. '    ' → logprob: -15.141066551208496

Token 114: ' [(' (ID: 43900)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.024218017235398293
    2. '[' → logprob: -3.7742180824279785
    3. ' [(' → logprob: -7.0242180824279785
    4. '((' → logprob: -9.89921760559082
    5. ' [' → logprob: -10.77421760559082
    6. '(' → logprob: -12.39921760559082
    7. '[((' → logprob: -12.52421760559082
    8. ' ((' → logprob: -13.64921760559082
    9. '[-' → logprob: -14.39921760559082
    10. ' ' → logprob: -14.39921760559082

Token 115: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.42031198740005493
    2. '1' → logprob: -1.2953119277954102
    3. '-' → logprob: -2.67031192779541
    4. ' ' → logprob: -9.17031192779541
    5. ' -' → logprob: -12.17031192779541
    6. '(' → logprob: -12.67031192779541
    7. '(-' → logprob: -13.79531192779541
    8. '```' → logprob: -14.29531192779541
    9. '01' → logprob: -15.04531192779541
    10. '−' → logprob: -15.54531192779541

Token 116: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006834837258793414
    2. ' ,' → logprob: -7.375683307647705
    3. '0' → logprob: -9.875683784484863
    4. '),(' → logprob: -12.750683784484863
    5. '),' → logprob: -13.750683784484863
    6. '<|end|>' → logprob: -14.750683784484863
    7. ',),' → logprob: -14.875683784484863
    8. ',
' → logprob: -15.750683784484863
    9. ',)' → logprob: -15.875683784484863
    10. ')' → logprob: -16.000682830810547

Token 117: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.5954712075181305e-05
    2. ' ' → logprob: -10.250036239624023
    3. '-' → logprob: -14.500036239624023
    4. ',' → logprob: -16.750036239624023
    5. '1' → logprob: -17.875036239624023
    6. ' -' → logprob: -18.187536239624023
    7. '۰' → logprob: -18.250036239624023
    8. ')' → logprob: -18.375036239624023
    9. '```' → logprob: -19.125036239624023
    10. '
' → logprob: -19.187536239624023

Token 118: '),' (ID: 936)
  Prédit: '),('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),(' → logprob: -0.14363467693328857
    2. '),' → logprob: -2.018634796142578
    3. ' ),' → logprob: -7.018634796142578
    4. '),
' → logprob: -10.143634796142578
    5. ',' → logprob: -11.143634796142578
    6. ')' → logprob: -12.518634796142578
    7. '),

' → logprob: -12.893634796142578
    8. ',),' → logprob: -13.393634796142578
    9. '(' → logprob: -14.393634796142578
    10. ' ),
' → logprob: -14.643634796142578

Token 119: '(-' (ID: 8087)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5904554128646851
    2. '(-' → logprob: -0.8404554128646851
    3. ' (' → logprob: -4.715455532073975
    4. ' (-' → logprob: -5.340455532073975
    5. '0' → logprob: -7.340455532073975
    6. '-' → logprob: -11.965455055236816
    7. ' ' → logprob: -12.215455055236816
    8. ' -' → logprob: -14.715455055236816
    9. ',' → logprob: -14.965455055236816
    10. '-(' → logprob: -15.840455055236816

Token 120: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. 'dx' → logprob: -16.375
    3. ' ' → logprob: -16.5
    4. '0' → logprob: -16.625
    5. '```' → logprob: -17.5625
    6. 'x' → logprob: -18.375
    7. '１' → logprob: -18.8125
    8. '

' → logprob: -18.9375
    9. '১' → logprob: -18.9375
    10. '2' → logprob: -19.0

Token 121: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.228561349213123e-05
    2. ' ,' → logprob: -10.250052452087402
    3. '0' → logprob: -11.125052452087402
    4. '<|end|>' → logprob: -14.125052452087402
    5. '),' → logprob: -14.750052452087402
    6. '),(' → logprob: -14.750052452087402
    7. ',(' → logprob: -15.250052452087402
    8. '(' → logprob: -15.750052452087402
    9. ')' → logprob: -17.250051498413086
    10. '```' → logprob: -17.375051498413086

Token 122: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.7697225252486533e-06
    2. ' ' → logprob: -12.500003814697266
    3. '<|end|>' → logprob: -18.250003814697266
    4. ',' → logprob: -18.375003814697266
    5. '```' → logprob: -18.625003814697266
    6. '۰' → logprob: -19.500003814697266
    7. '
' → logprob: -20.125003814697266
    8. '   ' → logprob: -21.125003814697266
    9. ')' → logprob: -21.312503814697266
    10. ' ' → logprob: -21.375003814697266

Token 123: '),(' (ID: 54876)
  Prédit: '),('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),(' → logprob: -0.003463225206360221
    2. '),' → logprob: -6.503463268280029
    3. ',(' → logprob: -6.628463268280029
    4. ',' → logprob: -7.378463268280029
    5. '(' → logprob: -12.128462791442871
    6. '):(' → logprob: -13.378462791442871
    7. ' ),' → logprob: -13.753462791442871
    8. ')]' → logprob: -13.878462791442871
    9. '],[' → logprob: -14.003462791442871
    10. ' ,' → logprob: -14.378462791442871

Token 124: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.2200749754119897e-06
    2. ' ' → logprob: -13.500001907348633
    3. '(' → logprob: -15.375001907348633
    4. '```' → logprob: -15.625001907348633
    5. ',' → logprob: -15.750001907348633
    6. '
' → logprob: -16.250001907348633
    7. '1' → logprob: -16.750001907348633
    8. '۰' → logprob: -18.125001907348633
    9. ')' → logprob: -18.375001907348633
    10. '

' → logprob: -18.375001907348633

Token 125: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00016635251813568175
    2. ',-' → logprob: -9.125165939331055
    3. '1' → logprob: -10.125165939331055
    4. ' ,' → logprob: -11.375165939331055
    5. ',
' → logprob: -12.625165939331055
    6. '```' → logprob: -13.625165939331055
    7. '
' → logprob: -14.375165939331055
    8. '0' → logprob: -15.500165939331055
    9. '-' → logprob: -15.875165939331055
    10. ',\
' → logprob: -16.500165939331055

Token 126: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.07889363914728165
    2. '-' → logprob: -2.5788936614990234
    3. ' ' → logprob: -13.578893661499023
    4. '```' → logprob: -13.578893661499023
    5. ' -' → logprob: -15.078893661499023
    6. '
' → logprob: -15.578893661499023
    7. ')' → logprob: -15.578893661499023
    8. '0' → logprob: -16.516393661499023
    9. '[' → logprob: -16.516393661499023
    10. '−' → logprob: -16.703893661499023

Token 127: '),(' (ID: 54876)
  Prédit: '),('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),(' → logprob: -0.0037439060397446156
    2. ',' → logprob: -5.628744125366211
    3. '),' → logprob: -9.378744125366211
    4. ',(' → logprob: -10.003744125366211
    5. '(' → logprob: -11.628744125366211
    6. '0' → logprob: -13.003744125366211
    7. '),
' → logprob: -14.003744125366211
    8. ')' → logprob: -14.003744125366211
    9. ')]' → logprob: -15.003744125366211
    10. '```' → logprob: -15.378744125366211

Token 128: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.012510236352682114
    2. '-' → logprob: -4.387510299682617
    3. ' ' → logprob: -15.012510299682617
    4. '
' → logprob: -16.637510299682617
    5. '```' → logprob: -16.637510299682617
    6. ')' → logprob: -17.012510299682617
    7. ',' → logprob: -17.137510299682617
    8. ' -' → logprob: -17.762510299682617
    9. '۰' → logprob: -18.325010299682617
    10. '(' → logprob: -18.450010299682617

Token 129: ',-' (ID: 8202)
  Prédit: ',-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',-' → logprob: -0.4313734471797943
    2. '-' → logprob: -1.0563734769821167
    3. ',' → logprob: -5.931373596191406
    4. '```' → logprob: -12.681373596191406
    5. ' -' → logprob: -13.306373596191406
    6. ',-
' → logprob: -13.431373596191406
    7. '1' → logprob: -13.681373596191406
    8. ',
' → logprob: -13.681373596191406
    9. '−' → logprob: -13.931373596191406
    10. '-,' → logprob: -14.306373596191406

Token 130: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00017541198758408427
    2. ')]' → logprob: -8.875175476074219
    3. '0' → logprob: -10.500175476074219
    4. ')' → logprob: -11.875175476074219
    5. '```' → logprob: -14.250175476074219
    6. ')],' → logprob: -16.37517547607422
    7. ')])' → logprob: -16.50017547607422
    8. ')][' → logprob: -16.87517547607422
    9. ' ' → logprob: -17.25017547607422
    10. ')]
' → logprob: -17.25017547607422

Token 131: ')]' (ID: 15710)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3226143419742584
    2. ')]' → logprob: -1.322614312171936
    3. '):' → logprob: -4.6976141929626465
    4. ' )' → logprob: -9.447614669799805
    5. '):
' → logprob: -9.947614669799805
    6. ']' → logprob: -11.197614669799805
    7. ')])' → logprob: -12.072614669799805
    8. ']):' → logprob: -12.322614669799805
    9. ')):' → logprob: -12.322614669799805
    10. ']:' → logprob: -12.572614669799805

Token 132: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.020810458809137344
    2. '       ' → logprob: -4.270810604095459
    3. ':
' → logprob: -5.770810604095459
    4. ',' → logprob: -5.895810604095459
    5. '<|end|>' → logprob: -7.520810604095459
    6. '):' → logprob: -9.3958101272583
    7. '           ' → logprob: -10.7708101272583
    8. '<|end|>' → logprob: -10.7708101272583
    9. '   ' → logprob: -11.1458101272583
    10. '):
' → logprob: -11.1458101272583

Token 133: '           ' (ID: 352)
  Prédit: ' nx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' nx' → logprob: -0.15954995155334473
    2. '       ' → logprob: -2.1595499515533447
    3. ' 
' → logprob: -4.659549713134766
    4. '        ' → logprob: -5.034549713134766
    5. '(nx' → logprob: -5.659549713134766
    6. ' new' → logprob: -6.034549713134766
    7. ' x' → logprob: -6.034549713134766
    8. 'nx' → logprob: -6.034549713134766
    9. '        
' → logprob: -6.784549713134766
    10. 'x' → logprob: -7.659549713134766

Token 134: ' nx' (ID: 50118)
  Prédit: ' nx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nx' → logprob: -0.030309680849313736
    2. 'nx' (adapté à ' nx') → logprob: -3.5303096771240234
    3. ' new' → logprob: -8.530309677124023
    4. '(nx' → logprob: -9.280309677124023
    5. ' next' → logprob: -9.405309677124023
    6. ' nxt' → logprob: -9.655309677124023
    7. 'n' → logprob: -10.280309677124023
    8. 'x' → logprob: -10.405309677124023
    9. ' x' → logprob: -11.030309677124023
    10. ' 
' → logprob: -11.405309677124023

Token 135: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.08391672372817993
    2. '=c' → logprob: -2.708916664123535
    3. ' =' → logprob: -4.458916664123535
    4. ',' → logprob: -6.583916664123535
    5. ',c' → logprob: -7.708916664123535
    6. '=n' → logprob: -7.833916664123535
    7. ',n' → logprob: -10.208916664123535
    8. '=
' → logprob: -10.958916664123535
    9. ' ,' → logprob: -11.958916664123535
    10. '=C' → logprob: -11.958916664123535

Token 136: 'ny' (ID: 3008)
  Prédit: 'cx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cx' → logprob: -0.002881549298763275
    2. ' cx' → logprob: -5.8778815269470215
    3. '(cx' → logprob: -9.87788200378418
    4. 'cy' → logprob: -10.75288200378418
    5. '.cx' → logprob: -13.37788200378418
    6. 'x' → logprob: -14.00288200378418
    7. '```' → logprob: -14.50288200378418
    8. '=' → logprob: -14.62788200378418
    9. '0' → logprob: -15.62788200378418
    10. 'c' → logprob: -16.62788200378418

Token 137: '=c' (ID: 43473)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3490982949733734
    2. '=c' → logprob: -1.3490983247756958
    3. ' =' → logprob: -3.3490982055664062
    4. '=C' → logprob: -10.224098205566406
    5. '=n' → logprob: -10.224098205566406
    6. '=
' → logprob: -12.474098205566406
    7. ',' → logprob: -13.099098205566406
    8. ',c' → logprob: -13.224098205566406
    9. '=x' → logprob: -14.349098205566406
    10. '=

' → logprob: -14.349098205566406

Token 138: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -5.200166469876422e-06
    2. '(cx' → logprob: -13.000004768371582
    3. ' x' → logprob: -13.625004768371582
    4. ' cx' → logprob: -14.500004768371582
    5. '   ' → logprob: -15.000004768371582
    6. 'cx' → logprob: -15.375004768371582
    7. 'y' → logprob: -15.750004768371582
    8. '(x' → logprob: -16.2500057220459
    9. '```' → logprob: -16.3750057220459
    10. '       ' → logprob: -17.0000057220459

Token 139: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0005756704485975206
    2. ' +' → logprob: -7.500575542449951
    3. ',' → logprob: -11.50057601928711
    4. '+
' → logprob: -12.00057601928711
    5. '+,' → logprob: -12.37557601928711
    6. '+d' → logprob: -13.75057601928711
    7. '+=' → logprob: -14.37557601928711
    8. ' +
' → logprob: -16.25057601928711
    9. '＋' → logprob: -16.37557601928711
    10. '+x' → logprob: -16.75057601928711

Token 140: 'dx' (ID: 22100)
  Prédit: 'dx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -7.517272024415433e-05
    2. ' dx' → logprob: -9.500075340270996
    3. '_dx' → logprob: -16.37507438659668
    4. 'x' → logprob: -16.62507438659668
    5. '(dx' → logprob: -17.00007438659668
    6. '1' → logprob: -17.00007438659668
    7. '[' → logprob: -17.75007438659668
    8. '<|end|>' → logprob: -18.12507438659668
    9. ' ' → logprob: -18.25007438659668
    10. '.dx' → logprob: -18.25007438659668

Token 141: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008248721715062857
    2. ',c' → logprob: -7.125824928283691
    3. ' ,' → logprob: -11.125824928283691
    4. ',
' → logprob: -12.500824928283691
    5. ',\
' → logprob: -13.875824928283691
    6. ',C' → logprob: -15.500824928283691
    7. ',n' → logprob: -15.750824928283691
    8. ',y' → logprob: -16.125823974609375
    9. ',_' → logprob: -16.250823974609375
    10. 'cy' → logprob: -16.500823974609375

Token 142: 'cy' (ID: 4523)
  Prédit: 'cy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cy' → logprob: -0.00012368128227535635
    2. ' cy' → logprob: -9.000123977661133
    3. 'cyj' → logprob: -15.250123977661133
    4. '.cy' → logprob: -17.750123977661133
    5. ' ' → logprob: -18.250123977661133
    6. 'cycl' → logprob: -18.625123977661133
    7. 'cych' → logprob: -18.750123977661133
    8. 'cycled' → logprob: -20.250123977661133
    9. 'c' → logprob: -20.500123977661133
    10. 'cu' → logprob: -20.625123977661133

Token 143: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.03506164997816086
    2. 'y' → logprob: -3.5350615978240967
    3. '+y' → logprob: -5.410061836242676
    4. 'cy' → logprob: -7.535061836242676
    5. 'dy' → logprob: -8.660061836242676
    6. '<|end|>' → logprob: -10.660061836242676
    7. 'x' → logprob: -10.785061836242676
    8. ' +' → logprob: -11.285061836242676
    9. '+
' → logprob: -11.910061836242676
    10. '
' → logprob: -11.910061836242676

Token 144: 'dy' (ID: 7593)
  Prédit: 'dy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -8.780830830801278e-05
    2. '1' → logprob: -9.75008773803711
    3. ' dy' → logprob: -10.50008773803711
    4. '0' → logprob: -13.62508773803711
    5. 'dx' → logprob: -15.00008773803711
    6. 'ny' → logprob: -15.50008773803711
    7. 'd' → logprob: -16.87508773803711
    8. ' ' → logprob: -17.87508773803711
    9. 'y' → logprob: -17.87508773803711
    10. 'dym' → logprob: -18.00008773803711

Token 145: '
' (ID: 198)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6022908687591553
    2. '
' → logprob: -1.2272908687591553
    3. 'if' → logprob: -2.6022908687591553
    4. '<|end|>' → logprob: -2.8522908687591553
    5. '	if' → logprob: -4.477291107177734
    6. ' 
' → logprob: -5.352291107177734
    7. '   ' → logprob: -5.602291107177734
    8. '  
' → logprob: -5.602291107177734
    9. '    
' → logprob: -6.977291107177734
    10. '<|end|>' → logprob: -7.352291107177734

Token 146: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 147: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.07189109176397324
    2. 'if' (adapté à ' if') → logprob: -2.6968910694122314
    3. '
' → logprob: -6.9468913078308105
    4. '<|end|>' → logprob: -7.4468913078308105
    5. ' 
' → logprob: -8.821890830993652
    6. '           ' → logprob: -9.821890830993652
    7. ' in' → logprob: -10.071890830993652
    8. '            
' → logprob: -10.196890830993652
    9. '\n' → logprob: -10.696890830993652
    10. '```' → logprob: -11.071890830993652

Token 148: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03367232531309128
    2. ' ' → logprob: -3.408672332763672
    3. ' not' → logprob: -11.533672332763672
    4. 'nx' → logprob: -11.783672332763672
    5. '(nx' → logprob: -12.658672332763672
    6. ' nx' → logprob: -12.783672332763672
    7. 'not' → logprob: -13.283672332763672
    8. '(' → logprob: -14.158672332763672
    9. ' (' → logprob: -14.408672332763672
    10. ' ' → logprob: -15.908672332763672

Token 149: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0007447104435414076
    2. ' ' → logprob: -7.250744819641113
    3. 'nx' → logprob: -10.750744819641113
    4. 'not' → logprob: -12.250744819641113
    5. '(nx' → logprob: -12.625744819641113
    6. ' not' → logprob: -12.750744819641113
    7. ' nx' → logprob: -13.500744819641113
    8. '(' → logprob: -14.125744819641113
    9. ' (' → logprob: -16.500743865966797
    10. '-' → logprob: -16.500743865966797

Token 150: '<=' (ID: 16672)
  Prédit: '<='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.22542023658752441
    2. ' <=' → logprob: -1.6004202365875244
    3. '<' → logprob: -12.850419998168945
    4. ')<=' → logprob: -13.600419998168945
    5. '<n' → logprob: -13.850419998168945
    6. '<len' → logprob: -13.975419998168945
    7. ']<=' → logprob: -14.350419998168945
    8. ' ' → logprob: -15.600419998168945
    9. '[' → logprob: -15.850419998168945
    10. '&lt' → logprob: -16.350419998168945

Token 151: 'nx' (ID: 45103)
  Prédit: 'nx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nx' → logprob: -0.005351159255951643
    2. ' nx' → logprob: -5.2553510665893555
    3. 'ny' → logprob: -9.130351066589355
    4. '(nx' → logprob: -11.755351066589355
    5. ' ny' → logprob: -14.380351066589355
    6. 'n' → logprob: -15.005351066589355
    7. 'Nx' → logprob: -16.880352020263672
    8. '```' → logprob: -17.130352020263672
    9. 'ni' → logprob: -17.630352020263672
    10. 'NX' → logprob: -18.005352020263672

Token 152: '<W' (ID: 180273)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.11386452615261078
    2. '<W' → logprob: -2.3638644218444824
    3. '<H' → logprob: -4.863864421844482
    4. '<n' → logprob: -5.738864421844482
    5. 'and' → logprob: -7.113864421844482
    6. '<len' → logprob: -7.238864421844482
    7. '<N' → logprob: -7.738864421844482
    8. ' <' → logprob: -8.23886489868164
    9. ' and' → logprob: -9.11386489868164
    10. '<num' → logprob: -9.23886489868164

Token 153: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.12692894041538239
    2. 'and' → logprob: -2.1269290447235107
    3. '           ' → logprob: -14.50192928314209
    4. ' ' → logprob: -15.37692928314209
    5. '<|end|>' → logprob: -17.001928329467773
    6. '	and' → logprob: -17.126928329467773
    7. '            ' → logprob: -17.876928329467773
    8. '               ' → logprob: -18.126928329467773
    9. ',' → logprob: -18.626928329467773
    10. '```' → logprob: -18.876928329467773

Token 154: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.038042064756155014
    2. ' ' → logprob: -3.2880420684814453
    3. '<|end|>' → logprob: -16.413042068481445
    4. ' ' → logprob: -16.538042068481445
    5. '  ' → logprob: -16.788042068481445
    6. '   ' → logprob: -16.975542068481445
    7. '           ' → logprob: -17.038042068481445
    8. '    ' → logprob: -17.225542068481445
    9. ' ny' → logprob: -17.288042068481445
    10. '
' → logprob: -17.788042068481445

Token 155: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001354824344161898
    2. ' ' → logprob: -9.00013542175293
    3. 'ny' → logprob: -11.37513542175293
    4. ' ny' → logprob: -14.75013542175293
    5. '
' → logprob: -16.75013542175293
    6. '   ' → logprob: -17.37513542175293
    7. '```' → logprob: -18.12513542175293
    8. '  ' → logprob: -18.18763542175293
    9. ' ' → logprob: -18.75013542175293
    10. 'ay' → logprob: -18.87513542175293

Token 156: '<=' (ID: 16672)
  Prédit: 'ny'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ny' → logprob: -0.27220213413238525
    2. ' ny' → logprob: -1.6472021341323853
    3. '<' → logprob: -3.1472020149230957
    4. ' <' → logprob: -6.522202014923096
    5. '<H' → logprob: -7.022202014923096
    6. ' ' → logprob: -9.272202491760254
    7. '<N' → logprob: -9.522202491760254
    8. '<n' → logprob: -9.647202491760254
    9. 'Ny' → logprob: -10.522202491760254
    10. 'y' → logprob: -10.897202491760254

Token 157: 'ny' (ID: 3008)
  Prédit: 'ny'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ny' → logprob: -0.1603194773197174
    2. 'H' → logprob: -1.910319447517395
    3. ' ny' → logprob: -9.785319328308105
    4. 'nh' → logprob: -10.535319328308105
    5. ' H' → logprob: -11.910319328308105
    6. 'hy' → logprob: -13.285319328308105
    7. 'nx' → logprob: -13.910319328308105
    8. 'y' → logprob: -14.035319328308105
    9. '	H' → logprob: -15.035319328308105
    10. '
' → logprob: -15.285319328308105

Token 158: '<H' (ID: 104212)
  Prédit: '<H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<H' → logprob: -0.0015710416482761502
    2. ' <' → logprob: -6.626571178436279
    3. '<W' → logprob: -9.501570701599121
    4. '<' → logprob: -9.626570701599121
    5. 'H' → logprob: -9.751570701599121
    6. ' and' → logprob: -10.751570701599121
    7. 'and' → logprob: -11.626570701599121
    8. ' H' → logprob: -12.001570701599121
    9. '<len' → logprob: -12.876570701599121
    10. '<=' → logprob: -13.376570701599121

Token 159: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.0029599887784570456
    2. 'and' → logprob: -5.877960205078125
    3. '           ' → logprob: -9.502960205078125
    4. '               ' → logprob: -10.252960205078125
    5. ':
' → logprob: -11.002960205078125
    6. ':' → logprob: -11.252960205078125
    7. '<|end|>' → logprob: -12.377960205078125
    8. '       ' → logprob: -12.752960205078125
    9. '          ' → logprob: -13.502960205078125
    10. '              ' → logprob: -13.627960205078125

Token 160: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.25201842188835144
    2. ' not' → logprob: -1.5020184516906738
    3. 'levels' → logprob: -9.877017974853516
    4. '(not' → logprob: -10.627017974853516
    5. 'visited' → logprob: -12.377017974853516
    6. 'auth' → logprob: -12.877017974853516
    7. ' levels' → logprob: -13.252017974853516
    8. '!' → logprob: -13.252017974853516
    9. '	not' → logprob: -13.377017974853516
    10. '   ' → logprob: -14.877017974853516

Token 161: ' visited' (ID: 18416)
  Prédit: ' visited'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' visited' → logprob: -0.38687145709991455
    2. 'visited' → logprob: -1.1368714570999146
    3. 'Visited' → logprob: -16.011871337890625
    4. ' ' → logprob: -16.136871337890625
    5. '
' → logprob: -16.886871337890625
    6. ' ' → logprob: -16.886871337890625
    7. 'visit' → logprob: -17.511871337890625
    8. '<|end|>' → logprob: -17.511871337890625
    9. ' visit' → logprob: -17.636871337890625
    10. 'vis' → logprob: -17.761871337890625

Token 162: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.200166469876422e-06
    2. '```' → logprob: -13.875004768371582
    3. ' [' → logprob: -14.125004768371582
    4. 'ny' → logprob: -14.375004768371582
    5. '[
' → logprob: -14.750004768371582
    6. '\[' → logprob: -14.875004768371582
    7. '[y' → logprob: -15.000004768371582
    8. '[n' → logprob: -15.500004768371582
    9. ' ny' → logprob: -15.500004768371582
    10. '
' → logprob: -15.500004768371582

Token 163: 'ny' (ID: 3008)
  Prédit: 'ny'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ny' → logprob: -0.00032151900813914835
    2. '[' → logprob: -8.125321388244629
    3. '][' → logprob: -11.500321388244629
    4. ' ny' → logprob: -11.875321388244629
    5. 'n' → logprob: -13.375321388244629
    6. 'ni' → logprob: -13.500321388244629
    7. 'nyi' → logprob: -13.750321388244629
    8. '   ' → logprob: -14.375321388244629
    9. '```' → logprob: -14.500321388244629
    10. 'y' → logprob: -14.625321388244629

Token 164: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0020813820883631706
    2. '[n' → logprob: -7.002081394195557
    3. '[' → logprob: -7.127081394195557
    4. ']' → logprob: -8.127080917358398
    5. ' ][' → logprob: -9.752080917358398
    6. '"][' → logprob: -13.002080917358398
    7. '   ' → logprob: -13.127080917358398
    8. ']
' → logprob: -13.752080917358398
    9. '```' → logprob: -13.752080917358398
    10. ''][' → logprob: -13.877080917358398

Token 165: 'nx' (ID: 45103)
  Prédit: 'nx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nx' → logprob: -5.4192871175473556e-05
    2. '(nx' → logprob: -10.625054359436035
    3. ' nx' → logprob: -10.875054359436035
    4. 'ny' → logprob: -11.750054359436035
    5. 'n' → logprob: -12.875054359436035
    6. '[n' → logprob: -15.125054359436035
    7. 'nz' → logprob: -16.12505340576172
    8. 'x' → logprob: -16.87505340576172
    9. 'Nx' → logprob: -17.87505340576172
    10. 'nj' → logprob: -18.25005340576172

Token 166: ']' (ID: 60)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.10034264624118805
    2. 'and' → logprob: -2.3503427505493164
    3. ']' → logprob: -9.225342750549316
    4. ')' → logprob: -11.850342750549316
    5. ':
' → logprob: -11.975342750549316
    6. ':' → logprob: -12.100342750549316
    7. '):
' → logprob: -12.350342750549316
    8. '<|end|>' → logprob: -12.475342750549316
    9. ']:
' → logprob: -12.850342750549316
    10. '```' → logprob: -12.975342750549316

Token 167: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.003730964148417115
    2. 'and' → logprob: -5.628730773925781
    3. '           ' → logprob: -9.753730773925781
    4. ':
' → logprob: -10.628730773925781
    5. ':' → logprob: -11.378730773925781
    6. '               ' → logprob: -11.378730773925781
    7. '<|end|>' → logprob: -12.003730773925781
    8. '          ' → logprob: -12.753730773925781
    9. '       ' → logprob: -12.753730773925781
    10. '            ' → logprob: -13.003730773925781

Token 168: ' levels' (ID: 8374)
  Prédit: 'levels'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'levels' → logprob: -0.011147208511829376
    2. ' levels' → logprob: -4.5111470222473145
    3. 'auth' → logprob: -10.011147499084473
    4. 'level' → logprob: -10.136147499084473
    5. '   ' → logprob: -11.761147499084473
    6. '(level' → logprob: -13.511147499084473
    7. ' auth' → logprob: -14.011147499084473
    8. 'layers' → logprob: -14.511147499084473
    9. ' ' → logprob: -14.761147499084473
    10. '           ' → logprob: -14.886147499084473

Token 169: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.60414821645827e-06
    2. ' [' → logprob: -12.875004768371582
    3. '][' → logprob: -14.375004768371582
    4. '```' → logprob: -14.500004768371582
    5. 'ny' → logprob: -16.000003814697266
    6. '   ' → logprob: -16.500003814697266
    7. '[y' → logprob: -16.500003814697266
    8. '[now' → logprob: -16.750003814697266
    9. '[
' → logprob: -16.875003814697266
    10. '[n' → logprob: -17.062503814697266

Token 170: 'ny' (ID: 3008)
  Prédit: 'ny'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ny' → logprob: -8.061054359131958e-06
    2. '[' → logprob: -12.000007629394531
    3. ' ny' → logprob: -13.875007629394531
    4. 'y' → logprob: -15.000007629394531
    5. '][' → logprob: -15.500007629394531
    6. 'n' → logprob: -16.25000762939453
    7. 'nyi' → logprob: -16.50000762939453
    8. ']' → logprob: -16.62500762939453
    9. 'yn' → logprob: -17.25000762939453
    10. '
' → logprob: -17.50000762939453

Token 171: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.002617870457470417
    2. '[n' → logprob: -6.002617835998535
    3. '[' → logprob: -9.377617835998535
    4. ' ][' → logprob: -10.502617835998535
    5. ']' → logprob: -11.002617835998535
    6. '   ' → logprob: -12.627617835998535
    7. '```' → logprob: -13.127617835998535
    8. '>[' → logprob: -14.002617835998535
    9. ''][' → logprob: -14.002617835998535
    10. '}[' → logprob: -14.252617835998535

Token 172: 'nx' (ID: 45103)
  Prédit: 'nx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nx' → logprob: -0.0008881142712198198
    2. ' nx' → logprob: -7.125888347625732
    3. '(nx' → logprob: -9.625887870788574
    4. 'x' → logprob: -11.000887870788574
    5. '[n' → logprob: -15.125887870788574
    6. 'n' → logprob: -15.125887870788574
    7. 'Nx' → logprob: -15.875887870788574
    8. 'xn' → logprob: -16.37588882446289
    9. '[' → logprob: -17.00088882446289
    10. '
' → logprob: -17.00088882446289

Token 173: ']<=' (ID: 175609)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.07810862362384796
    2. ']<=' → logprob: -2.953108549118042
    3. ' <=' → logprob: -3.828108549118042
    4. ')<=' → logprob: -6.953108787536621
    5. ']' → logprob: -8.703108787536621
    6. '```' → logprob: -10.703108787536621
    7. ' ]' → logprob: -10.828108787536621
    8. '[' → logprob: -10.953108787536621
    9. ' ' → logprob: -12.578108787536621
    10. '>' → logprob: -12.640608787536621

Token 174: 'auth' (ID: 5723)
  Prédit: 'auth'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'auth' → logprob: -0.00038074489566497505
    2. ' auth' → logprob: -7.875380516052246
    3. '	auth' → logprob: -14.625380516052246
    4. '(auth' → logprob: -16.625381469726562
    5. 'author' → logprob: -17.125381469726562
    6. '_auth' → logprob: -17.250381469726562
    7. 'aut' → logprob: -18.500381469726562
    8. '   ' → logprob: -18.625381469726562
    9. '.auth' → logprob: -18.625381469726562
    10. ' ' → logprob: -18.625381469726562

Token 175: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0494198352098465
    2. ':
' → logprob: -3.04941987991333
    3. ' and' → logprob: -7.79941987991333
    4. '):' → logprob: -8.549419403076172
    5. '):
' → logprob: -9.299419403076172
    6. '       ' → logprob: -10.049419403076172
    7. '           ' → logprob: -10.299419403076172
    8. '<|end|>' → logprob: -11.549419403076172
    9. ')' → logprob: -11.674419403076172
    10. '   ' → logprob: -11.674419403076172

Token 176: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.009799061343073845
    2. ':' → logprob: -6.009799003601074
    3. '           ' → logprob: -6.634799003601074
    4. '                   ' → logprob: -6.884799003601074
    5. ':
' → logprob: -7.009799003601074
    6. '<|end|>' → logprob: -7.509799003601074
    7. ')' → logprob: -7.634799003601074
    8. '):
' → logprob: -7.884799003601074
    9. '              ' → logprob: -8.009799003601074
    10. ',' → logprob: -8.009799003601074

Token 177: ' visited' (ID: 18416)
  Prédit: ' visited'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' visited' → logprob: -0.35178664326667786
    2. 'visited' (adapté à ' visited') → logprob: -1.3517866134643555
    3. '               ' → logprob: -3.8517866134643555
    4. '                   ' → logprob: -4.3517866134643555
    5. ' 
' → logprob: -6.7267866134643555
    6. '                    
' → logprob: -7.6017866134643555
    7. '                ' → logprob: -7.7267866134643555
    8. '                
' → logprob: -7.7267866134643555
    9. 'Visited' → logprob: -7.8517866134643555
    10. ' ' → logprob: -8.976786613464355

Token 178: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -9.088346359931165e-07
    2. '```' → logprob: -15.000000953674316
    3. ' [' → logprob: -15.875000953674316
    4. '   ' → logprob: -16.0
    5. '][' → logprob: -16.375
    6. ')[' → logprob: -16.625
    7. '
' → logprob: -16.75
    8. '

' → logprob: -17.25
    9. '       ' → logprob: -17.375
    10. '[
' → logprob: -17.5

Token 179: 'ny' (ID: 3008)
  Prédit: 'ny'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ny' → logprob: -0.00016945181414484978
    2. '[' → logprob: -8.75016975402832
    3. ' ny' → logprob: -11.50016975402832
    4. 'yn' → logprob: -15.62516975402832
    5. '
' → logprob: -15.87516975402832
    6. '[
' → logprob: -16.50016975402832
    7. 'n' → logprob: -16.50016975402832
    8. '   ' → logprob: -16.50016975402832
    9. 'ni' → logprob: -16.87516975402832
    10. '```' → logprob: -17.25016975402832

Token 180: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.005954044871032238
    2. '][' → logprob: -5.130954265594482
    3. 'ny' → logprob: -12.255953788757324
    4. '       ' → logprob: -12.755953788757324
    5. ''][' → logprob: -12.755953788757324
    6. '"][' → logprob: -12.755953788757324
    7. '```' → logprob: -13.130953788757324
    8. ' [' → logprob: -13.380953788757324
    9. ']' → logprob: -13.380953788757324
    10. '           ' → logprob: -13.755953788757324

Token 181: 'nx' (ID: 45103)
  Prédit: 'ny'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ny' → logprob: -0.008621904999017715
    2. 'nx' → logprob: -4.758621692657471
    3. ' ny' → logprob: -12.508622169494629
    4. '[' → logprob: -14.008622169494629
    5. '1' → logprob: -14.883622169494629
    6. ' ' → logprob: -15.008622169494629
    7. '(nx' → logprob: -15.133622169494629
    8. '```' → logprob: -15.258622169494629
    9. 'n' → logprob: -15.508622169494629
    10. 'x' → logprob: -15.633622169494629

Token 182: ']=' (ID: 9539)
  Prédit: ']='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']=' → logprob: -0.0169588141143322
    2. '=True' → logprob: -4.266958713531494
    3. ']' → logprob: -6.141958713531494
    4. '=' → logprob: -7.391958713531494
    5. '']=' → logprob: -11.891959190368652
    6. 'True' → logprob: -12.016959190368652
    7. ')=' → logprob: -12.516959190368652
    8. '"]=' → logprob: -13.266959190368652
    9. '[' → logprob: -13.516959190368652
    10. '   ' → logprob: -14.016959190368652

Token 183: 'True' (ID: 4710)
  Prédit: 'True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: 0.0
    2. ' True' → logprob: -16.75
    3. '(True' → logprob: -20.0
    4. '=True' → logprob: -21.875
    5. '
' → logprob: -22.125
    6. 'Tr' → logprob: -23.875
    7. 'true' → logprob: -24.0
    8. 'False' → logprob: -24.625
    9. '.True' → logprob: -24.625
    10. '1' → logprob: -24.75

Token 184: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.05846807733178139
    2. '<|end|>' → logprob: -4.058467864990234
    3. '
' → logprob: -4.183467864990234
    4. '                
' → logprob: -4.308467864990234
    5. '                ' → logprob: -5.683467864990234
    6. 'q' → logprob: -6.183467864990234
    7. '                   ' → logprob: -7.183467864990234
    8. '				
' → logprob: -7.808467864990234
    9. '```' → logprob: -7.933467864990234
    10. 'count' → logprob: -7.933467864990234

Token 185: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.005935313180088997
    2. 'q' → logprob: -6.255935192108154
    3. '                
' → logprob: -6.630935192108154
    4. '
' → logprob: -6.755935192108154
    5. ' q' → logprob: -7.880935192108154
    6. '                ' → logprob: -8.505935668945312
    7. '			' → logprob: -8.630935668945312
    8. '
' → logprob: -9.130935668945312
    9. '	q' → logprob: -9.130935668945312
    10. 'count' → logprob: -9.380935668945312

Token 186: ' count' (ID: 3605)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.20150913298130035
    2. 'count' (adapté à ' count') → logprob: -1.7015091180801392
    3. ' q' → logprob: -9.576509475708008
    4. ' count' → logprob: -11.201509475708008
    5. '               ' → logprob: -11.576509475708008
    6. 'queue' → logprob: -14.201509475708008
    7. '                   ' → logprob: -14.451509475708008
    8. '	q' → logprob: -14.576509475708008
    9. '```' → logprob: -14.701509475708008
    10. '           ' → logprob: -15.076509475708008

Token 187: '+=' (ID: 18287)
  Prédit: '+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.03872591629624367
    2. ' +=' → logprob: -3.4137258529663086
    3. '+' → logprob: -5.413725852966309
    4. ']+=' → logprob: -7.788725852966309
    5. '```' → logprob: -9.913725852966309
    6. '+=(' → logprob: -10.163725852966309
    7. '<|end|>' → logprob: -10.163725852966309
    8. '+="' → logprob: -10.288725852966309
    9. '+='' → logprob: -11.038725852966309
    10. '.append' → logprob: -12.288725852966309

Token 188: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.500000953674316
    3. '   ' → logprob: -22.375
    4. '```' → logprob: -22.75
    5. '１' → logprob: -23.5
    6. '<|end|>' → logprob: -24.0
    7. '۱' → logprob: -24.75
    8. '
' → logprob: -24.75
    9. '  ' → logprob: -25.875
    10. '১' → logprob: -25.875

Token 189: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.1175861656665802
    2. ' q' → logprob: -2.742586135864258
    3. 'q' → logprob: -3.617586135864258
    4. '	q' → logprob: -4.867586135864258
    5. '			' → logprob: -5.367586135864258
    6. '
' → logprob: -5.617586135864258
    7. ',q' → logprob: -7.117586135864258
    8. '                
' → logprob: -7.367586135864258
    9. '<|end|>' → logprob: -7.492586135864258
    10. ',' → logprob: -8.367586135864258

Token 190: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.04601478949189186
    2. 'q' → logprob: -3.1710147857666016
    3. ' q' → logprob: -5.921014785766602
    4. ',q' → logprob: -8.796014785766602
    5. '	q' → logprob: -9.171014785766602
    6. '			' → logprob: -11.046014785766602
    7. '           ' → logprob: -11.421014785766602
    8. '
' → logprob: -11.546014785766602
    9. '              ' → logprob: -11.671014785766602
    10. ',' → logprob: -11.921014785766602

Token 191: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' (adapté à ' q') → logprob: -1.0280383548888494e-06
    2. '               ' → logprob: -14.000000953674316
    3. ' q' → logprob: -16.375001907348633
    4. '	q' → logprob: -17.875001907348633
    5. '           ' → logprob: -18.750001907348633
    6. '
' → logprob: -18.750001907348633
    7. '                   ' → logprob: -19.125001907348633
    8. '```' → logprob: -20.125001907348633
    9. '   ' → logprob: -20.750001907348633
    10. '       ' → logprob: -21.625001907348633

Token 192: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -4.8828707804204896e-05
    2. '.' → logprob: -10.000048637390137
    3. 'append' → logprob: -13.125048637390137
    4. ' .' → logprob: -15.000048637390137
    5. '.extend' → logprob: -15.000048637390137
    6. '.put' → logprob: -15.500048637390137
    7. '.p' → logprob: -15.750048637390137
    8. '.enqueue' → logprob: -16.000049591064453
    9. '.Append' → logprob: -16.250049591064453
    10. 'q' → logprob: -16.250049591064453

Token 193: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -2.339278580620885e-06
    2. '(' → logprob: -13.125001907348633
    3. '(
' → logprob: -16.625001907348633
    4. ' ((' → logprob: -17.500001907348633
    5. '(nx' → logprob: -17.625001907348633
    6. '(((' → logprob: -18.250001907348633
    7. '```' → logprob: -20.000001907348633
    8. '(n' → logprob: -20.125001907348633
    9. ')((' → logprob: -21.250001907348633
    10. '>((' → logprob: -21.500001907348633

Token 194: 'nx' (ID: 45103)
  Prédit: 'nx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nx' → logprob: -0.0015303362160921097
    2. '(nx' → logprob: -6.501530170440674
    3. ' nx' → logprob: -10.501530647277832
    4. '(n' → logprob: -15.876530647277832
    5. 'n' → logprob: -16.126529693603516
    6. '(' → logprob: -16.376529693603516
    7. '```' → logprob: -16.626529693603516
    8. '[n' → logprob: -18.001529693603516
    9. ' (' → logprob: -18.376529693603516
    10. '
' → logprob: -18.751529693603516

Token 195: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.36574100604048e-06
    2. ' ,' → logprob: -12.750004768371582
    3. ',n' → logprob: -14.375004768371582
    4. ',
' → logprob: -14.375004768371582
    5. '```' → logprob: -15.750004768371582
    6. 'ny' → logprob: -17.125003814697266
    7. ')' → logprob: -17.625003814697266
    8. '[' → logprob: -17.625003814697266
    9. '
' → logprob: -18.375003814697266
    10. ',y' → logprob: -18.750003814697266

Token 196: 'ny' (ID: 3008)
  Prédit: 'ny'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ny' → logprob: -1.306760805164231e-05
    2. ' ny' → logprob: -11.37501335144043
    3. 'nyi' → logprob: -14.75001335144043
    4. '```' → logprob: -15.12501335144043
    5. '
' → logprob: -15.62501335144043
    6. 'n' → logprob: -16.37501335144043
    7. 'nym' → logprob: -16.50001335144043
    8. ')' → logprob: -16.75001335144043
    9. 'y' → logprob: -16.87501335144043
    10. ''ny' → logprob: -17.00001335144043

Token 197: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0007348202052526176
    2. ')' → logprob: -7.500734806060791
    3. '))
' → logprob: -8.62573528289795
    4. ')))' → logprob: -13.37573528289795
    5. ')
' → logprob: -15.00073528289795
    6. ' ))' → logprob: -15.00073528289795
    7. '))

' → logprob: -17.125734329223633
    8. '))
' → logprob: -17.375734329223633
    9. '));' → logprob: -17.750734329223633
    10. '       ' → logprob: -17.750734329223633

Token 198: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008999908342957497
    2. '<|end|>' → logprob: -5.633999824523926
    3. ')' → logprob: -6.258999824523926
    4. ' return' → logprob: -6.508999824523926
    5. 'return' → logprob: -6.883999824523926
    6. '       ' → logprob: -8.508999824523926
    7. '```' → logprob: -8.758999824523926
    8. '    
' → logprob: -9.008999824523926
    9. ':return' → logprob: -9.008999824523926
    10. '	return' → logprob: -9.508999824523926

Token 199: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0003558423195499927
    2. ' return' → logprob: -8.12535572052002
    3. '   ' → logprob: -9.87535572052002
    4. '```' → logprob: -12.50035572052002
    5. ':return' → logprob: -13.50035572052002
    6. 'r' → logprob: -14.25035572052002
    7. '	return' → logprob: -14.37535572052002
    8. '    
' → logprob: -14.87535572052002
    9. '
' → logprob: -14.87535572052002
    10. 'eturn' → logprob: -15.00035572052002

Token 200: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.0024756586644798517
    2. ' count' → logprob: -6.002475738525391
    3. '(count' → logprob: -17.12747573852539
    4. '	count' → logprob: -18.75247573852539
    5. '[count' → logprob: -19.37747573852539
    6. '<count' → logprob: -20.00247573852539
    7. '$count' → logprob: -20.50247573852539
    8. 'c' → logprob: -21.50247573852539
    9. '   ' → logprob: -21.50247573852539
    10. 'counts' → logprob: -21.87747573852539

Token 201: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 202: 'def' (ID: 1314)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.8282502889633179
    2. 'W' → logprob: -2.0782504081726074
    3. 'for' → logprob: -2.5782504081726074
    4. 'auth' → logprob: -2.8282504081726074
    5. 'def' → logprob: -3.2032504081726074
    6. 'n' → logprob: -3.2032504081726074
    7. '\n' → logprob: -3.2032504081726074
    8. '#' → logprob: -3.7032504081726074
    9. 'print' → logprob: -3.9532504081726074
    10. 'if' → logprob: -4.078250408172607

Token 203: ' possible' (ID: 4149)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.0005163363530300558
    2. ' solve' → logprob: -8.125515937805176
    3. 'main' → logprob: -8.500515937805176
    4. ' solution' → logprob: -11.875515937805176
    5. ' max' → logprob: -12.750515937805176
    6. ' dfs' → logprob: -13.375515937805176
    7. 'solve' → logprob: -13.500515937805176
    8. ' ' → logprob: -13.500515937805176
    9. ' process' → logprob: -14.125515937805176
    10. ' calculate' → logprob: -15.000515937805176

Token 204: '(W' (ID: 26031)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7426227927207947
    2. '_levels' → logprob: -1.8676228523254395
    3. '(W' → logprob: -1.9926228523254395
    4. '_' → logprob: -2.7426228523254395
    5. '():' → logprob: -3.3676228523254395
    6. '_moves' → logprob: -3.8676228523254395
    7. '_positions' → logprob: -3.8676228523254395
    8. '_locations' → logprob: -4.4926228523254395
    9. '_places' → logprob: -4.6176228523254395
    10. '_spaces' → logprob: -4.7426228523254395

Token 205: '1' (ID: 16)
  Prédit: ',H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',H' → logprob: -0.01842394843697548
    2. ',' → logprob: -4.018424034118652
    3. ',Y' → logprob: -9.018424034118652
    4. ' ,' → logprob: -9.518424034118652
    5. ',int' → logprob: -10.643424034118652
    6. ',W' → logprob: -11.518424034118652
    7. ',h' → logprob: -11.643424034118652
    8. ',I' → logprob: -12.643424034118652
    9. ',X' → logprob: -12.643424034118652
    10. ',D' → logprob: -12.768424034118652

Token 206: ',H' (ID: 94400)
  Prédit: ',H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',H' → logprob: -0.08010176569223404
    2. ',' → logprob: -2.580101728439331
    3. ',W' → logprob: -7.20510196685791
    4. ' ,' → logprob: -8.20510196685791
    5. ',int' → logprob: -9.70510196685791
    6. ',
' → logprob: -10.45510196685791
    7. ',Y' → logprob: -10.70510196685791
    8. 'H' → logprob: -11.45510196685791
    9. ',M' → logprob: -11.83010196685791
    10. ',I' → logprob: -11.95510196685791

Token 207: '1' (ID: 16)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8398579955101013
    2. ',W' → logprob: -0.9648579955101013
    3. ',X' → logprob: -2.464858055114746
    4. '1' → logprob: -2.839858055114746
    5. ',Y' → logprob: -3.339858055114746
    6. ',N' → logprob: -7.089858055114746
    7. ',M' → logprob: -7.089858055114746
    8. ' ,' → logprob: -7.339858055114746
    9. ',K' → logprob: -7.339858055114746
    10. ',
' → logprob: -7.464858055114746

Token 208: ',X' (ID: 83943)
  Prédit: ',X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',X' → logprob: -0.2735486924648285
    2. ',' → logprob: -1.5235487222671509
    3. ',W' → logprob: -4.023548603057861
    4. ',A' → logprob: -6.773548603057861
    5. ' ,' → logprob: -7.273548603057861
    6. ',Y' → logprob: -7.773548603057861
    7. ',x' → logprob: -8.77354907989502
    8. ',N' → logprob: -9.27354907989502
    9. ',int' → logprob: -9.27354907989502
    10. ',R' → logprob: -9.39854907989502

Token 209: '1' (ID: 16)
  Prédit: ',Y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',Y' → logprob: -0.13831202685832977
    2. '1' → logprob: -2.3883121013641357
    3. ',' → logprob: -3.3883121013641357
    4. ',H' → logprob: -6.263311862945557
    5. ',W' → logprob: -6.888311862945557
    6. ' ,' → logprob: -7.763311862945557
    7. ',
' → logprob: -10.388312339782715
    8. 'Y' → logprob: -10.763312339782715
    9. ',K' → logprob: -10.763312339782715
    10. ',N' → logprob: -10.763312339782715

Token 210: ',Y' (ID: 71464)
  Prédit: ',Y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',Y' → logprob: -0.005318901035934687
    2. ',H' → logprob: -6.255319118499756
    3. ',W' → logprob: -6.380319118499756
    4. ',' → logprob: -6.630319118499756
    5. ' ,' → logprob: -8.130318641662598
    6. ',X' → logprob: -10.755318641662598
    7. 'Y' → logprob: -11.755318641662598
    8. ',y' → logprob: -11.755318641662598
    9. ',int' → logprob: -12.130318641662598
    10. ',Z' → logprob: -12.505318641662598

Token 211: '1' (ID: 16)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4747583866119385
    2. '1' → logprob: -0.9747583866119385
    3. ' ,' → logprob: -8.47475814819336
    4. ',
' → logprob: -9.09975814819336
    5. ',W' → logprob: -9.47475814819336
    6. ',_' → logprob: -10.22475814819336
    7. '```' → logprob: -10.34975814819336
    8. '_,' → logprob: -10.72475814819336
    9. ',int' → logprob: -10.97475814819336
    10. '
' → logprob: -10.97475814819336

Token 212: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10020763427019119
    2. ',W' → logprob: -2.475207567214966
    3. ',A' → logprob: -5.225207805633545
    4. ',a' → logprob: -6.475207805633545
    5. ',w' → logprob: -6.725207805633545
    6. ',int' → logprob: -6.725207805633545
    7. ',U' → logprob: -7.725207805633545
    8. ',I' → logprob: -8.475207328796387
    9. ',L' → logprob: -8.725207328796387
    10. ',R' → logprob: -8.975207328796387

Token 213: 'levels' (ID: 97607)
  Prédit: 'auth'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'auth' → logprob: -0.7618460655212402
    2. 'levels' → logprob: -0.7618460655212402
    3. 'L' → logprob: -4.13684606552124
    4. 'W' → logprob: -4.38684606552124
    5. 'level' → logprob: -4.76184606552124
    6. 'A' → logprob: -4.76184606552124
    7. 'max' → logprob: -6.01184606552124
    8. 'M' → logprob: -6.69934606552124
    9. 'P' → logprob: -6.88684606552124
    10. 'X' → logprob: -7.07434606552124

Token 214: '1' (ID: 16)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001967531396076083
    2. ',W' → logprob: -6.626967430114746
    3. ',int' → logprob: -8.126967430114746
    4. ',A' → logprob: -9.126967430114746
    5. ' ,' → logprob: -9.751967430114746
    6. ',a' → logprob: -9.876967430114746
    7. '):' → logprob: -11.126967430114746
    8. ',
' → logprob: -11.376967430114746
    9. ',w' → logprob: -11.501967430114746
    10. ',H' → logprob: -11.626967430114746

Token 215: ',W' (ID: 117252)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004419935867190361
    2. ',W' → logprob: -8.250441551208496
    3. ',int' → logprob: -9.500441551208496
    4. ',A' → logprob: -10.625441551208496
    5. ' ,' → logprob: -10.750441551208496
    6. ',a' → logprob: -11.000441551208496
    7. '):' → logprob: -11.250441551208496
    8. ',w' → logprob: -12.250441551208496
    9. ',X' → logprob: -12.750441551208496
    10. ',
' → logprob: -12.750441551208496

Token 216: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.7666999697685242
    2. '1' → logprob: -1.141700029373169
    3. ',' → logprob: -2.016700029373169
    4. ',H' → logprob: -2.516700029373169
    5. ',W' → logprob: -6.39169979095459
    6. ' ,' → logprob: -8.26669979095459
    7. '_,' → logprob: -9.14169979095459
    8. ',
' → logprob: -9.51669979095459
    9. '=' → logprob: -10.64169979095459
    10. ',Y' → logprob: -10.76669979095459

Token 217: ',H' (ID: 94400)
  Prédit: ',H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',H' → logprob: -0.0017377781914547086
    2. ',' → logprob: -6.376737594604492
    3. ' ,' → logprob: -10.376737594604492
    4. ',W' → logprob: -14.126737594604492
    5. ',K' → logprob: -14.126737594604492
    6. ',int' → logprob: -14.376737594604492
    7. ',Y' → logprob: -15.001737594604492
    8. ',M' → logprob: -15.126737594604492
    9. ',h' → logprob: -15.376737594604492
    10. ',B' → logprob: -15.751737594604492

Token 218: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -8.64970643306151e-05
    2. ',' → logprob: -9.375086784362793
    3. '1' → logprob: -14.750086784362793
    4. '```' → logprob: -15.000086784362793
    5. ' ' → logprob: -15.500086784362793
    6. ',W' → logprob: -15.750086784362793
    7. 'def' → logprob: -16.500085830688477
    8. '_,' → logprob: -16.625085830688477
    9. ',
' → logprob: -17.000085830688477
    10. '₂' → logprob: -17.125085830688477

Token 219: ',X' (ID: 83943)
  Prédit: ',X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',X' → logprob: -0.07364591211080551
    2. ',' → logprob: -2.698645830154419
    3. ',Y' → logprob: -5.698646068572998
    4. ',W' → logprob: -8.69864559173584
    5. ' ,' → logprob: -10.19864559173584
    6. ',Z' → logprob: -10.32364559173584
    7. ',x' → logprob: -11.19864559173584
    8. ',S' → logprob: -11.57364559173584
    9. 'X' → logprob: -11.94864559173584
    10. ',U' → logprob: -11.94864559173584

Token 220: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0007493520388379693
    2. ',' → logprob: -7.250749588012695
    3. '1' → logprob: -10.375749588012695
    4. '```' → logprob: -12.250749588012695
    5. ',
' → logprob: -14.125749588012695
    6. ' ' → logprob: -14.250749588012695
    7. '₂' → logprob: -15.125749588012695
    8. ' ,' → logprob: -15.125749588012695
    9. '_' → logprob: -15.375749588012695
    10. '
' → logprob: -15.750749588012695

Token 221: ',Y' (ID: 71464)
  Prédit: ',Y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',Y' → logprob: -0.006131303030997515
    2. ',' → logprob: -5.131131172180176
    3. ' ,' → logprob: -9.006131172180176
    4. ',W' → logprob: -9.881131172180176
    5. '2' → logprob: -11.631131172180176
    6. ',y' → logprob: -12.631131172180176
    7. ',
' → logprob: -12.756131172180176
    8. 'Y' → logprob: -13.006131172180176
    9. ',Z' → logprob: -13.131131172180176
    10. '1' → logprob: -13.256131172180176

Token 222: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.02989060804247856
    2. ',' → logprob: -3.654890537261963
    3. '1' → logprob: -5.654890537261963
    4. '```' → logprob: -10.404891014099121
    5. '),' → logprob: -11.279891014099121
    6. '_,' → logprob: -11.904891014099121
    7. ' ,' → logprob: -11.904891014099121
    8. ',
' → logprob: -12.029891014099121
    9. ')' → logprob: -12.529891014099121
    10. '_' → logprob: -12.779891014099121

Token 223: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00312554812990129
    2. ',W' → logprob: -6.3781256675720215
    3. '):' → logprob: -7.3781256675720215
    4. ',w' → logprob: -8.128125190734863
    5. ' ,' → logprob: -9.378125190734863
    6. ',int' → logprob: -9.503125190734863
    7. ',
' → logprob: -10.128125190734863
    8. ',l' → logprob: -10.503125190734863
    9. '):
' → logprob: -10.878125190734863
    10. ',p' → logprob: -11.128125190734863

Token 224: 'levels' (ID: 97607)
  Prédit: 'auth'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'auth' → logprob: -0.005820598918944597
    2. 'levels' → logprob: -5.3808207511901855
    3. ' auth' → logprob: -7.3808207511901855
    4. 'level' → logprob: -10.068320274353027
    5. 'max' → logprob: -10.255820274353027
    6. 'a' → logprob: -10.693320274353027
    7. 'visited' → logprob: -10.943320274353027
    8. 'counts' → logprob: -10.943320274353027
    9. '   ' → logprob: -11.068320274353027
    10. ')' → logprob: -11.068320274353027

Token 225: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.018856534734368324
    2. '1' → logprob: -4.268856525421143
    3. ',' → logprob: -6.268856525421143
    4. '):' → logprob: -6.268856525421143
    5. '):
' → logprob: -7.643856525421143
    6. ')' → logprob: -8.1438570022583
    7. '_' → logprob: -10.2688570022583
    8. '```' → logprob: -11.2688570022583
    9. ',_' → logprob: -11.3938570022583
    10. '):

' → logprob: -11.7688570022583

Token 226: ',R' (ID: 48317)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.07997874170541763
    2. ',' → logprob: -2.5799787044525146
    3. '):
' → logprob: -7.454978942871094
    4. ',W' → logprob: -8.329978942871094
    5. ')' → logprob: -8.704978942871094
    6. ' ):' → logprob: -9.704978942871094
    7. '   ' → logprob: -11.829978942871094
    8. ',w' → logprob: -12.204978942871094
    9. ' ,' → logprob: -12.579978942871094
    10. ',n' → logprob: -12.704978942871094

Token 227: ',s' (ID: 20379)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5365473031997681
    2. '):
' → logprob: -0.9115473031997681
    3. ',' → logprob: -4.7865471839904785
    4. '1' → logprob: -5.7865471839904785
    5. '):

' → logprob: -7.1615471839904785
    6. ')' → logprob: -7.7865471839904785
    7. '):
' → logprob: -7.9115471839904785
    8. ' ):' → logprob: -9.036547660827637
    9. ',
' → logprob: -10.036547660827637
    10. '=' → logprob: -10.036547660827637

Token 228: '):
' (ID: 1883)
  Prédit: 'et'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'et' → logprob: -0.17599880695343018
    2. 't' → logprob: -2.9259986877441406
    3. 'earch' → logprob: -3.3009986877441406
    4. 'ys' → logprob: -3.4259986877441406
    5. '=' → logprob: -3.9259986877441406
    6. '1' → logprob: -6.050998687744141
    7. ')' → logprob: -6.175998687744141
    8. 'ets' → logprob: -6.675998687744141
    9. 'e' → logprob: -7.050998687744141
    10. 'ett' → logprob: -7.050998687744141

Token 229: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004379448015242815
    2. ':
' → logprob: -6.0043792724609375
    3. '   ' → logprob: -6.8793792724609375
    4. '():' → logprob: -7.8793792724609375
    5. ':return' → logprob: -8.754379272460938
    6. '):' → logprob: -9.004379272460938
    7. '<|end|>' → logprob: -9.504379272460938
    8. ' :' → logprob: -10.629379272460938
    9. ':def' → logprob: -10.629379272460938
    10. '[' → logprob: -10.754379272460938

Token 230: ' res' (ID: 694)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0322402715682983
    2. 'res' (adapté à ' res') → logprob: -2.282240390777588
    3. 'result' → logprob: -2.407240390777588
    4. 'auth' → logprob: -3.032240390777588
    5. 'for' → logprob: -3.032240390777588
    6. 'visited' → logprob: -3.032240390777588
    7. 'answer' → logprob: -3.282240390777588
    8. ' res' → logprob: -3.282240390777588
    9. ' for' → logprob: -3.407240390777588
    10. 'ans' → logprob: -3.657240390777588

Token 231: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.024148892611265182
    2. ' =' → logprob: -4.024148941040039
    3. '=[]' → logprob: -5.149148941040039
    4. '={}' → logprob: -9.274148941040039
    5. '=[' → logprob: -10.774148941040039
    6. '=int' → logprob: -10.899148941040039
    7. '=[]
' → logprob: -11.149148941040039
    8. '=None' → logprob: -11.524148941040039
    9. ',' → logprob: -13.024148941040039
    10. ' =[' → logprob: -13.024148941040039

Token 232: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.13478505611419678
    2. '[]' → logprob: -2.6347851753234863
    3. 'False' → logprob: -3.5097851753234863
    4. '-' → logprob: -4.384785175323486
    5. '[' → logprob: -5.634785175323486
    6. 'float' → logprob: -5.759785175323486
    7. 'set' → logprob: -6.384785175323486
    8. 'True' → logprob: -7.134785175323486
    9. 'sys' → logprob: -7.384785175323486
    10. '[]
' → logprob: -7.384785175323486

Token 233: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.05787726491689682
    2. '   ' → logprob: -3.1828773021698
    3. ' 
' → logprob: -5.182877063751221
    4. '    
' → logprob: -5.932877063751221
    5. ' for' → logprob: -6.432877063751221
    6. '	
' → logprob: -7.182877063751221
    7. '<|end|>' → logprob: -7.307877063751221
    8. '	for' → logprob: -7.432877063751221
    9. '\n' → logprob: -7.682877063751221
    10. '' → logprob: -7.932877063751221

Token 234: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3848264217376709
    2. '
' → logprob: -1.384826421737671
    3. ' for' → logprob: -3.509826421737671
    4. '	for' → logprob: -4.13482666015625
    5. '    
' → logprob: -4.63482666015625
    6. 'for' → logprob: -5.88482666015625
    7. '	
' → logprob: -5.88482666015625
    8. '    ' → logprob: -6.25982666015625
    9. ' 
' → logprob: -6.38482666015625
    10. '\t' → logprob: -7.00982666015625

Token 235: ' la' (ID: 557)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.018025608733296394
    2. ' for' → logprob: -4.8930253982543945
    3. 'auth' → logprob: -5.5180253982543945
    4. 'from' → logprob: -6.5180253982543945
    5. '   ' → logprob: -6.6430253982543945
    6. 'visited' → logprob: -7.2680253982543945
    7. 'queue' → logprob: -7.5180253982543945
    8. 'res' → logprob: -7.8930253982543945
    9. 'max' → logprob: -7.8930253982543945
    10. 'if' → logprob: -8.018025398254395

Token 236: '1' (ID: 16)
  Prédit: 'st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'st' → logprob: -0.02564019151031971
    2. 'r' → logprob: -4.15064001083374
    3. 's' → logprob: -5.52564001083374
    4. '=' → logprob: -6.77564001083374
    5. 'levels' → logprob: -6.90064001083374
    6. 'vel' → logprob: -7.52564001083374
    7. 't' → logprob: -7.52564001083374
    8. 'mb' → logprob: -8.275640487670898
    9. 'W' → logprob: -8.400640487670898
    10. '=len' → logprob: -8.775640487670898

Token 237: '=[' (ID: 13370)
  Prédit: 'st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'st' → logprob: -0.10925965011119843
    2. '=' → logprob: -2.484259605407715
    3. 'r' → logprob: -5.109259605407715
    4. '=len' → logprob: -5.234259605407715
    5. '1' → logprob: -5.609259605407715
    6. '=[]' → logprob: -6.859259605407715
    7. 'y' → logprob: -7.109259605407715
    8. ',' → logprob: -7.359259605407715
    9. 's' → logprob: -7.734259605407715
    10. ' =' → logprob: -8.109259605407715

Token 238: 'l' (ID: 75)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.7045291066169739
    2. 'i' → logprob: -1.704529047012329
    3. 'auth' → logprob: -2.204529047012329
    4. ']' → logprob: -2.579529047012329
    5. '[]' → logprob: -3.579529047012329
    6. '[i' → logprob: -4.454529285430908
    7. '(i' → logprob: -4.704529285430908
    8. 'levels' → logprob: -4.704529285430908
    9. '[' → logprob: -4.954529285430908
    10. 'W' → logprob: -4.954529285430908

Token 239: ' for' (ID: 395)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.0627417266368866
    2. 'ev' → logprob: -3.562741756439209
    3. '1' → logprob: -4.312741756439209
    4. 'vel' → logprob: -5.437741756439209
    5. ' for' → logprob: -6.062741756439209
    6. 'for' → logprob: -6.312741756439209
    7. 'levels' → logprob: -6.437741756439209
    8. 'en' → logprob: -6.562741756439209
    9. '```' → logprob: -7.062741756439209
    10. 'v' → logprob: -7.187741756439209

Token 240: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.04234008863568306
    2. ' l' → logprob: -3.667340040206909
    3. ' in' → logprob: -4.167340278625488
    4. 'in' → logprob: -9.042340278625488
    5. 'level' → logprob: -9.167340278625488
    6. 'levels' → logprob: -10.292340278625488
    7. ' level' → logprob: -10.417340278625488
    8. '1' → logprob: -10.667340278625488
    9. ' levels' → logprob: -10.792340278625488
    10. 'range' → logprob: -11.792340278625488

Token 241: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.30547401309013367
    2. 'in' → logprob: -1.430474042892456
    3. 'l' → logprob: -3.805474042892456
    4. '1' → logprob: -6.555473804473877
    5. ' l' → logprob: -8.805474281311035
    6. 'e' → logprob: -9.055474281311035
    7. ' ' → logprob: -10.430474281311035
    8. 'inel' → logprob: -11.680474281311035
    9. '```' → logprob: -11.805474281311035
    10. '_' → logprob: -12.180474281311035

Token 242: ' s' (ID: 265)
  Prédit: 'levels'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'levels' → logprob: -0.11014502495527267
    2. ' levels' → logprob: -2.735145092010498
    3. 'range' → logprob: -3.985145092010498
    4. 'l' → logprob: -4.610145092010498
    5. ' range' → logprob: -4.985145092010498
    6. 'level' → logprob: -6.360145092010498
    7. 's' → logprob: -6.985145092010498
    8. '[' → logprob: -8.23514461517334
    9. ' l' → logprob: -8.36014461517334
    10. ' s' → logprob: -8.61014461517334

Token 243: '[' (ID: 58)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6051932573318481
    2. 'if' → logprob: -1.2301932573318481
    3. ']' → logprob: -1.8551932573318481
    4. ' ]' → logprob: -6.230193138122559
    5. '.split' → logprob: -6.855193138122559
    6. '[' → logprob: -6.980193138122559
    7. '[:' → logprob: -8.480193138122559
    8. ' in' → logprob: -8.730193138122559
    9. 'l' → logprob: -9.105193138122559
    10. 'in' → logprob: -9.105193138122559

Token 244: '0' (ID: 15)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9813274145126343
    2. '0' → logprob: -1.9813274145126343
    3. '1' → logprob: -2.231327533721924
    4. ':]' → logprob: -2.356327533721924
    5. 'range' → logprob: -2.606327533721924
    6. 'if' → logprob: -3.231327533721924
    7. 'R' → logprob: -3.231327533721924
    8. ']' → logprob: -3.481327533721924
    9. '])' → logprob: -4.606327533721924
    10. 'l' → logprob: -4.731327533721924

Token 245: ']]
' (ID: 29446)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.2167951911687851
    2. ']]' → logprob: -2.0917952060699463
    3. '].' → logprob: -3.9667952060699463
    4. 'if' → logprob: -4.466794967651367
    5. '1' → logprob: -4.966794967651367
    6. '[' → logprob: -4.966794967651367
    7. '][' → logprob: -5.091794967651367
    8. ':' → logprob: -5.216794967651367
    9. 'W' → logprob: -5.841794967651367
    10. ':]' → logprob: -6.341794967651367

Token 246: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 247: ' la' (ID: 557)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.5712064504623413
    2. '[' → logprob: -1.8212064504623413
    3. 'for' → logprob: -2.071206569671631
    4. '
' → logprob: -2.071206569671631
    5. ' 
' → logprob: -2.446206569671631
    6. ' ' → logprob: -2.696206569671631
    7. '   ' → logprob: -2.821206569671631
    8. '<|end|>' → logprob: -3.196206569671631
    9. '.' → logprob: -4.446206569671631
    10. '[
' → logprob: -4.571206569671631

Token 248: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.008029008284211159
    2. '[' → logprob: -5.383028984069824
    3. '.append' → logprob: -7.133028984069824
    4. 'l' → logprob: -7.383028984069824
    5. 'st' → logprob: -7.383028984069824
    6. '=' → logprob: -8.008028984069824
    7. 'p' → logprob: -8.258028984069824
    8. '=[' → logprob: -8.883028984069824
    9. 'pp' → logprob: -9.383028984069824
    10. '2' → logprob: -9.383028984069824

Token 249: '=[' (ID: 13370)
  Prédit: '=['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=[' → logprob: -0.0234075915068388
    2. '=' → logprob: -3.7734076976776123
    3. ' =' → logprob: -9.648407936096191
    4. ' =[' → logprob: -9.898407936096191
    5. '=l' → logprob: -10.773407936096191
    6. '[' → logprob: -11.773407936096191
    7. '=list' → logprob: -12.023407936096191
    8. '=s' → logprob: -12.398407936096191
    9. '=[[' → logprob: -12.398407936096191
    10. '=[]' → logprob: -13.148407936096191

Token 250: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -4.8232690460281447e-05
    2. 's' → logprob: -10.375048637390137
    3. 'int' → logprob: -12.375048637390137
    4. ' l' → logprob: -12.500048637390137
    5. ''l' → logprob: -13.500048637390137
    6. '[l' → logprob: -13.625048637390137
    7. ']' → logprob: -14.125048637390137
    8. '```' → logprob: -14.125048637390137
    9. '0' → logprob: -14.500048637390137
    10. '
' → logprob: -14.500048637390137

Token 251: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5231875777244568
    2. 'for' → logprob: -0.8981875777244568
    3. '[' → logprob: -10.023187637329102
    4. ']' → logprob: -12.148187637329102
    5. ' in' → logprob: -12.648187637329102
    6. ' ' → logprob: -12.773187637329102
    7. '	for' → logprob: -13.148187637329102
    8. 's' → logprob: -13.523187637329102
    9. 'from' → logprob: -14.023187637329102
    10. '1' → logprob: -14.398187637329102

Token 252: ' l' (ID: 305)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.2815111577510834
    2. ' s' → logprob: -1.4065111875534058
    3. 'l' → logprob: -8.281511306762695
    4. ' l' → logprob: -9.656511306762695
    5. '(s' → logprob: -11.031511306762695
    6. '_s' → logprob: -12.406511306762695
    7. ' ' → logprob: -12.594011306762695
    8. '[s' → logprob: -12.969011306762695
    9. '_' → logprob: -13.469011306762695
    10. 'r' → logprob: -13.594011306762695

Token 253: ' in' (ID: 306)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5927281975746155
    2. ' in' → logprob: -1.4677281379699707
    3. 'in' → logprob: -1.5927281379699707
    4. ' s' → logprob: -4.342728137969971
    5. '[' → logprob: -8.717728614807129
    6. '(s' → logprob: -8.967728614807129
    7. '(' → logprob: -10.342728614807129
    8. ']' → logprob: -11.217728614807129
    9. ' ' → logprob: -12.092728614807129
    10. '1' → logprob: -12.467728614807129

Token 254: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.06201642006635666
    2. ' s' → logprob: -2.812016487121582
    3. 'l' → logprob: -11.312016487121582
    4. '(s' → logprob: -11.937016487121582
    5. 'range' → logprob: -12.687016487121582
    6. '
' → logprob: -12.812016487121582
    7. '[' → logprob: -13.249516487121582
    8. ' ' → logprob: -13.249516487121582
    9. 'res' → logprob: -13.312016487121582
    10. 'R' → logprob: -13.374516487121582

Token 255: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0008229722734540701
    2. '1' → logprob: -7.125823020935059
    3. '(' → logprob: -11.625823020935059
    4. '][' → logprob: -12.750823020935059
    5. '2' → logprob: -13.750823020935059
    6. ' [' → logprob: -14.250823020935059
    7. 'def' → logprob: -14.500823020935059
    8. '```' → logprob: -14.625823020935059
    9. '[-' → logprob: -14.750823020935059
    10. 's' → logprob: -14.750823020935059

Token 256: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004261468129698187
    2. '0' → logprob: -8.125426292419434
    3. ' ' → logprob: -9.750426292419434
    4. '-' → logprob: -10.875426292419434
    5. '   ' → logprob: -11.125426292419434
    6. '[' → logprob: -12.125426292419434
    7. '
' → logprob: -12.187926292419434
    8. '(' → logprob: -12.437926292419434
    9. ']' → logprob: -12.500426292419434
    10. '2' → logprob: -12.500426292419434

Token 257: ']]
' (ID: 29446)
  Prédit: ']]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']]' → logprob: -0.10175352543592453
    2. ']' → logprob: -2.3517534732818604
    3. ')]' → logprob: -7.6017537117004395
    4. '])]' → logprob: -8.101753234863281
    5. ' ]]' → logprob: -8.851753234863281
    6. ']]
' → logprob: -8.851753234863281
    7. '']]' → logprob: -8.851753234863281
    8. ']][' → logprob: -9.726753234863281
    9. ']]]' → logprob: -9.726753234863281
    10. '])' → logprob: -9.851753234863281

Token 258: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7080589532852173
    2. '   ' → logprob: -0.7080589532852173
    3. ' for' → logprob: -5.083058834075928
    4. '<|end|>' → logprob: -5.583058834075928
    5. '    
' → logprob: -6.083058834075928
    6. 'for' → logprob: -7.083058834075928
    7. '  
' → logprob: -7.708058834075928
    8. ' 
' → logprob: -8.583059310913086
    9. '	for' → logprob: -8.708059310913086
    10. '[' → logprob: -9.083059310913086

Token 259: ' #' (ID: 1069)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4374327063560486
    2. '
' → logprob: -1.6874327659606934
    3. 'for' → logprob: -2.1874327659606934
    4. '   ' → logprob: -3.8124327659606934
    5. ' auth' → logprob: -4.437432765960693
    6. 'auth' → logprob: -4.687432765960693
    7. ' 
' → logprob: -5.437432765960693
    8. ' if' → logprob: -6.687432765960693
    9. '    
' → logprob: -6.937432765960693
    10. 'n' → logprob: -7.187432765960693

Token 260: ' auth' (ID: 6246)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4777219295501709
    2. 'for' → logprob: -0.9777219295501709
    3. '   ' → logprob: -7.10272216796875
    4. ' auth' → logprob: -7.22772216796875
    5. 'auth' → logprob: -8.10272216796875
    6. ' res' → logprob: -8.22772216796875
    7. ' return' → logprob: -8.35272216796875
    8. ' if' → logprob: -8.35272216796875
    9. 'return' → logprob: -8.47772216796875
    10. 'if' → logprob: -9.22772216796875

Token 261: ' level' (ID: 3211)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.9096930623054504
    2. '=[' → logprob: -1.0346930027008057
    3. '1' → logprob: -1.6596930027008057
    4. ' =' → logprob: -4.284693241119385
    5. '=[]' → logprob: -4.284693241119385
    6. 's' → logprob: -5.034693241119385
    7. '=max' → logprob: -5.409693241119385
    8. '=len' → logprob: -5.659693241119385
    9. '_' → logprob: -6.409693241119385
    10. '=int' → logprob: -7.409693241119385

Token 262: ' range' (ID: 3352)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16008375585079193
    2. 's' → logprob: -3.035083770751953
    3. '1' → logprob: -3.660083770751953
    4. ' =' → logprob: -3.660083770751953
    5. '=[' → logprob: -3.785083770751953
    6. '=max' → logprob: -4.410083770751953
    7. '=len' → logprob: -5.660083770751953
    8. '=s' → logprob: -5.785083770751953
    9. '=[]' → logprob: -6.660083770751953
    10. '=int' → logprob: -6.785083770751953

Token 263: ' from' (ID: 591)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.14281199872493744
    2. ' =' → logprob: -2.2678120136260986
    3. 'for' → logprob: -4.2678117752075195
    4. 's' → logprob: -5.6428117752075195
    5. '   ' → logprob: -5.7678117752075195
    6. ' for' → logprob: -6.1428117752075195
    7. '_=' → logprob: -6.2678117752075195
    8. '_' → logprob: -6.5178117752075195
    9. '_range' → logprob: -7.1428117752075195
    10. 'range' → logprob: -7.1428117752075195

Token 264: ' minimal' (ID: 19957)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6036224365234375
    2. '0' → logprob: -0.9786224365234375
    3. ' ' → logprob: -2.8536224365234375
    4. ' max' → logprob: -4.8536224365234375
    5. 'max' → logprob: -5.3536224365234375
    6. 'min' → logprob: -5.7286224365234375
    7. ' min' → logprob: -5.7286224365234375
    8. ' R' → logprob: -9.103622436523438
    9. 'R' → logprob: -9.353622436523438
    10. '   ' → logprob: -9.853622436523438

Token 265: ' ' (ID: 220)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.7498148083686829
    2. '(' → logprob: -1.124814748764038
    3. 'to' → logprob: -2.749814748764038
    4. 'la' → logprob: -3.624814748764038
    5. 'auth' → logprob: -4.124814987182617
    6. '(s' → logprob: -4.499814987182617
    7. '(res' → logprob: -4.749814987182617
    8. '(auth' → logprob: -4.749814987182617
    9. ' la' → logprob: -4.874814987182617
    10. 's' → logprob: -5.124814987182617

Token 266: '0' (ID: 15)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.8492460250854492
    2. ' to' → logprob: -1.7242460250854492
    3. '(' → logprob: -1.8492460250854492
    4. 'auth' → logprob: -2.349246025085449
    5. 'la' → logprob: -2.599246025085449
    6. '(auth' → logprob: -3.849246025085449
    7. '(level' → logprob: -5.599246025085449
    8. ',' → logprob: -5.724246025085449
    9. ' la' → logprob: -5.849246025085449
    10. 'l' → logprob: -5.849246025085449

Token 267: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.013915021903812885
    2. 'to' → logprob: -4.763915061950684
    3. ',' → logprob: -5.888915061950684
    4. ' ' → logprob: -6.138915061950684
    5. ' up' → logprob: -8.888915061950684
    6. ' ,' → logprob: -10.138915061950684
    7. ' for' → logprob: -10.263915061950684
    8. ' #' → logprob: -10.513915061950684
    9. ' and' → logprob: -10.638915061950684
    10. '#' → logprob: -10.888915061950684

Token 268: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.5335150361061096
    2. '100' → logprob: -1.7835149765014648
    3. '10' → logprob: -2.158514976501465
    4. 'R' → logprob: -3.283514976501465
    5. '20' → logprob: -3.783514976501465
    6. '9' → logprob: -3.783514976501465
    7. '50' → logprob: -4.658514976501465
    8. '25' → logprob: -5.533514976501465
    9. '30' → logprob: -5.533514976501465
    10. ' max' → logprob: -5.783514976501465

Token 269: ' ' (ID: 220)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -1.1883909702301025
    2. '100' → logprob: -1.3133909702301025
    3. '=' → logprob: -1.9383909702301025
    4. '=max' → logprob: -2.0633909702301025
    5. '50' → logprob: -4.063390731811523
    6. '20' → logprob: -4.188390731811523
    7. '10' → logprob: -4.188390731811523
    8. '   ' → logprob: -4.188390731811523
    9. 'R' → logprob: -4.313390731811523
    10. ' max' → logprob: -4.438390731811523

Token 270: '10' (ID: 702)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -1.0171287059783936
    2. '=' → logprob: -1.5171287059783936
    3. 'max' → logprob: -1.6421287059783936
    4. '=max' → logprob: -2.1421287059783936
    5. '50' → logprob: -4.267128944396973
    6. '20' → logprob: -4.517128944396973
    7. ' max' → logprob: -4.642128944396973
    8. '10' → logprob: -4.892128944396973
    9. '51' → logprob: -5.017128944396973
    10. '255' → logprob: -5.142128944396973

Token 271: '^' (ID: 61)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7242860794067383
    2. '
' → logprob: -1.2242860794067383
    3. '   ' → logprob: -2.4742860794067383
    4. '0' → logprob: -2.5992860794067383
    5. 'for' → logprob: -4.224286079406738
    6. '+' → logprob: -4.849286079406738
    7. ',' → logprob: -4.849286079406738
    8. '1' → logprob: -5.099286079406738
    9. ' ' → logprob: -5.099286079406738
    10. ' range' → logprob: -5.349286079406738

Token 272: '8' (ID: 23)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.304558128118515
    2. '7' → logprob: -1.5545581579208374
    3. '9' → logprob: -3.054558038711548
    4. '10' → logprob: -6.179558277130127
    5. '5' → logprob: -7.179558277130127
    6. '1' → logprob: -7.429558277130127
    7. ' ' → logprob: -7.679558277130127
    8. '8' → logprob: -9.304557800292969
    9. '0' → logprob: -9.804557800292969
    10. 'R' → logprob: -10.304557800292969

Token 273: ' or' (ID: 503)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4860251545906067
    2. ' for' → logprob: -1.736025094985962
    3. '   ' → logprob: -1.736025094985962
    4. 'for' → logprob: -4.486025333404541
    5. ',' → logprob: -5.361025333404541
    6. '    
' → logprob: -5.861025333404541
    7. ',
' → logprob: -6.236025333404541
    8. '0' → logprob: -6.361025333404541
    9. '.' → logprob: -6.486025333404541
    10. ' 
' → logprob: -6.611025333404541

Token 274: ' max' (ID: 2999)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.5281502604484558
    2. 'max' → logprob: -1.7781503200531006
    3. '100' → logprob: -2.0281503200531006
    4. ' ' → logprob: -3.0281503200531006
    5. ' max' → logprob: -3.0281503200531006
    6. '1' → logprob: -5.6531500816345215
    7. 'int' → logprob: -5.9031500816345215
    8. 'R' → logprob: -6.5281500816345215
    9. '(' → logprob: -6.5281500816345215
    10. 'W' → logprob: -7.0281500816345215

Token 275: ' needed' (ID: 6118)
  Prédit: '(max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(max' → logprob: -0.6200118660926819
    2. 'max' → logprob: -1.620011806488037
    3. '(' → logprob: -1.995011806488037
    4. '10' → logprob: -3.995011806488037
    5. '+' → logprob: -4.120011806488037
    6. ' max' → logprob: -4.245011806488037
    7. '(
' → logprob: -4.370011806488037
    8. 'auth' → logprob: -4.620011806488037
    9. '(R' → logprob: -4.870011806488037
    10. '=max' → logprob: -4.995011806488037

Token 276: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8263033628463745
    2. ' for' → logprob: -1.3263033628463745
    3. '
' → logprob: -1.9513033628463745
    4. 'for' → logprob: -2.826303482055664
    5. 'auth' → logprob: -3.326303482055664
    6. '+' → logprob: -3.701303482055664
    7. 'max' → logprob: -4.576303482055664
    8. ',' → logprob: -5.326303482055664
    9. ' auth' → logprob: -5.951303482055664
    10. 'def' → logprob: -6.076303482055664

Token 277: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8528482913970947
    2. '
' → logprob: -1.3528482913970947
    3. ' max' → logprob: -2.4778482913970947
    4. ' for' → logprob: -2.6028482913970947
    5. 'max' → logprob: -3.6028482913970947
    6. ' 
' → logprob: -3.9778482913970947
    7. ' ' → logprob: -4.227848052978516
    8. ',' → logprob: -4.227848052978516
    9. '0' → logprob: -4.727848052978516
    10. ' auth' → logprob: -4.727848052978516

Token 278: ' #' (ID: 1069)
  Prédit: 'low'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'low' → logprob: -0.2771604061126709
    2. 'left' → logprob: -2.777160406112671
    3. 'l' → logprob: -2.902160406112671
    4. 'max' → logprob: -3.652160406112671
    5. 'min' → logprob: -3.777160406112671
    6. ' low' → logprob: -3.777160406112671
    7. 'lo' → logprob: -4.02716064453125
    8. ' lo' → logprob: -4.15216064453125
    9. 'auth' → logprob: -4.65216064453125
    10. ' left' → logprob: -5.65216064453125

Token 279: ' We'll' (ID: 46830)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.8974114656448364
    2. 'low' → logprob: -1.1474114656448364
    3. 'left' → logprob: -1.6474114656448364
    4. 'l' → logprob: -3.772411346435547
    5. 'lo' → logprob: -3.897411346435547
    6. 'min' → logprob: -3.897411346435547
    7. 'auth' → logprob: -4.522411346435547
    8. 'for' → logprob: -5.272411346435547
    9. ' lo' → logprob: -7.272411346435547
    10. '   ' → logprob: -7.397411346435547

Token 280: ' binary' (ID: 15600)
  Prédit: ' use'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' use' → logprob: -1.1101951599121094
    2. 'use' → logprob: -1.3601951599121094
    3. 'perform' → logprob: -2.2351951599121094
    4. ' perform' → logprob: -2.6101951599121094
    5. 'implement' → logprob: -2.9851951599121094
    6. ' implement' → logprob: -2.9851951599121094
    7. 'continue' → logprob: -3.4851951599121094
    8. 'do' → logprob: -3.9851951599121094
    9. 'check' → logprob: -4.610195159912109
    10. ' continue' → logprob: -4.610195159912109

Token 281: ' search' (ID: 3684)
  Prédit: 'search'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'search' → logprob: -0.04868990182876587
    2. ' search' → logprob: -3.298689842224121
    3. '_search' → logprob: -4.548689842224121
    4. '_' → logprob: -11.923689842224121
    5. 'def' → logprob: -13.548689842224121
    6. ' ' → logprob: -14.298689842224121
    7. '   ' → logprob: -14.673689842224121
    8. 'import' → logprob: -14.673689842224121
    9. '	search' → logprob: -15.048689842224121
    10. ' _' → logprob: -15.548689842224121

Token 282: ' auth' (ID: 6246)
  Prédit: ' low'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' low' → logprob: -0.5880136489868164
    2. 'low' → logprob: -1.8380136489868164
    3. ' lo' → logprob: -2.4630136489868164
    4. ' for' → logprob: -2.5880136489868164
    5. '(low' → logprob: -2.9630136489868164
    6. '   ' → logprob: -3.9630136489868164
    7. ' left' → logprob: -4.463013648986816
    8. ' over' → logprob: -4.713013648986816
    9. ' l' → logprob: -4.838013648986816
    10. 'lo' → logprob: -5.463013648986816

Token 283: ' separately' (ID: 37741)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.41654473543167114
    2. ' ' → logprob: -1.9165446758270264
    3. '
' → logprob: -2.5415446758270264
    4. 'def' → logprob: -3.6665446758270264
    5. ' for' → logprob: -4.4165449142456055
    6. '  ' → logprob: -4.6665449142456055
    7. ',' → logprob: -4.7915449142456055
    8. ' def' → logprob: -4.7915449142456055
    9. '_' → logprob: -4.9165449142456055
    10. '    ' → logprob: -5.0415449142456055

Token 284: ' for' (ID: 395)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.48475635051727295
    2. '   ' → logprob: -1.109756350517273
    3. 'def' → logprob: -3.9847564697265625
    4. 'auth' → logprob: -4.2347564697265625
    5. 'low' → logprob: -4.7347564697265625
    6. ' low' → logprob: -5.6097564697265625
    7. '(low' → logprob: -6.4847564697265625
    8. '    
' → logprob: -6.6097564697265625
    9. ',
' → logprob: -6.9847564697265625
    10. ',' → logprob: -7.2347564697265625

Token 285: ' each' (ID: 2454)
  Prédit: 'each'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'each' → logprob: -0.7324036955833435
    2. 'both' → logprob: -1.2324037551879883
    3. 'la' → logprob: -2.1074037551879883
    4. 'W' → logprob: -2.9824037551879883
    5. 'the' → logprob: -3.3574037551879883
    6. 'two' → logprob: -5.482403755187988
    7. 'first' → logprob: -5.607403755187988
    8. 'levels' → logprob: -5.857403755187988
    9. ' each' → logprob: -6.232403755187988
    10. 'res' → logprob: -6.482403755187988

Token 286: ' office' (ID: 6885)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'map' → logprob: -1.2374048233032227
    2. 'def' → logprob: -1.8624048233032227
    3. 'area' → logprob: -2.2374048233032227
    4. 'level' → logprob: -2.3624048233032227
    5. ' map' → logprob: -2.8624048233032227
    6. ' area' → logprob: -3.4874048233032227
    7. 'grid' → logprob: -3.7374048233032227
    8. ' side' → logprob: -3.9874048233032227
    9. ' level' → logprob: -4.112404823303223
    10. ' of' → logprob: -4.112404823303223

Token 287: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6071659922599792
    2. '
' → logprob: -0.8571659922599792
    3. '<|end|>' → logprob: -4.107165813446045
    4. 'def' → logprob: -5.607165813446045
    5. '    
' → logprob: -5.857165813446045
    6. '  
' → logprob: -6.232165813446045
    7. ' for' → logprob: -6.982165813446045
    8. ',' → logprob: -7.107165813446045
    9. '<|end|>' → logprob: -7.232165813446045
    10. ' ' → logprob: -7.232165813446045

Token 288: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6504634022712708
    2. '
' → logprob: -0.7754634022712708
    3. '    
' → logprob: -5.025463581085205
    4. 'auth' → logprob: -5.275463581085205
    5. 'def' → logprob: -5.900463581085205
    6. '  
' → logprob: -7.150463581085205
    7. ' 
' → logprob: -7.400463581085205
    8. ',' → logprob: -7.900463581085205
    9. '   
' → logprob: -7.900463581085205
    10. ' ' → logprob: -8.525463104248047

Token 289: ' #' (ID: 1069)
  Prédit: 'low'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'low' → logprob: -1.0464918613433838
    2. ' low' → logprob: -1.7964918613433838
    3. ' lo' → logprob: -1.9214918613433838
    4. '   ' → logprob: -2.671491861343384
    5. ' left' → logprob: -2.921491861343384
    6. '
' → logprob: -2.921491861343384
    7. ' l' → logprob: -3.171491861343384
    8. 'l' → logprob: -3.421491861343384
    9. 'lo' → logprob: -3.546491861343384
    10. 'left' → logprob: -3.796491861343384

Token 290: ' But' (ID: 3072)
  Prédit: 'low'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'low' → logprob: -1.063152551651001
    2. 'left' → logprob: -1.313152551651001
    3. 'def' → logprob: -1.813152551651001
    4. 'l' → logprob: -2.813152551651001
    5. 'lo' → logprob: -3.313152551651001
    6. ' left' → logprob: -3.438152551651001
    7. '   ' → logprob: -3.938152551651001
    8. ' low' → logprob: -3.938152551651001
    9. ' lo' → logprob: -4.188152313232422
    10. 'auth' → logprob: -4.688152313232422

Token 291: ' we' (ID: 581)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.9251119494438171
    2. ' for' → logprob: -1.425112009048462
    3. 'def' → logprob: -2.425112009048462
    4. '#' → logprob: -2.925112009048462
    5. 'return' → logprob: -3.175112009048462
    6. 'pass' → logprob: -3.425112009048462
    7. '   ' → logprob: -3.675112009048462
    8. 'continue' → logprob: -3.800112009048462
    9. 'left' → logprob: -4.175111770629883
    10. 'res' → logprob: -4.300111770629883

Token 292: ' want' (ID: 1682)
  Prédit: 'need'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'need' → logprob: -0.9796255826950073
    2. ' need' → logprob: -1.1046255826950073
    3. ''ll' → logprob: -2.354625701904297
    4. 'continue' → logprob: -3.104625701904297
    5. 'def' → logprob: -3.854625701904297
    6. 'don't' → logprob: -3.979625701904297
    7. 'should' → logprob: -4.354625701904297
    8. ' don't' → logprob: -4.479625701904297
    9. 'cannot' → logprob: -4.604625701904297
    10. '   ' → logprob: -4.604625701904297

Token 293: ' minimal' (ID: 19957)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.010498964227735996
    2. 'to' → logprob: -4.635499000549316
    3. '   ' → logprob: -8.260499000549316
    4. ' the' → logprob: -8.885499000549316
    5. ' both' → logprob: -9.635499000549316
    6. ' a' → logprob: -10.010499000549316
    7. ' res' → logprob: -10.260499000549316
    8. ' two' → logprob: -10.635499000549316
    9. '    ' → logprob: -10.885499000549316
    10. ' only' → logprob: -10.885499000549316

Token 294: ' sum' (ID: 4215)
  Prédit: ' auth'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' auth' → logprob: -0.4574200510978699
    2. 'auth' → logprob: -1.3324201107025146
    3. ' possible' → logprob: -3.9574201107025146
    4. 'res' → logprob: -4.0824198722839355
    5. ' res' → logprob: -4.7074198722839355
    6. ' max' → logprob: -5.0824198722839355
    7. 'max' → logprob: -5.2074198722839355
    8. 'possible' → logprob: -5.2074198722839355
    9. '_auth' → logprob: -5.3324198722839355
    10. ' ' → logprob: -5.4574198722839355

Token 295: ' of' (ID: 328)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13751348853111267
    2. '
' → logprob: -2.2625133991241455
    3. 'def' → logprob: -4.637513637542725
    4. '<|end|>' → logprob: -4.887513637542725
    5. ' ' → logprob: -6.637513637542725
    6. '    
' → logprob: -6.887513637542725
    7. ',' → logprob: -6.887513637542725
    8. '<|end|>' → logprob: -7.512513637542725
    9. ' def' → logprob: -7.637513637542725
    10. '  
' → logprob: -7.637513637542725

Token 296: ' auth' (ID: 6246)
  Prédit: 'auth'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'auth' → logprob: -0.013195876963436604
    2. ' auth' → logprob: -4.888195991516113
    3. 'both' → logprob: -6.138195991516113
    4. 'author' → logprob: -6.638195991516113
    5. 'max' → logprob: -7.513195991516113
    6. 'the' → logprob: -8.138195991516113
    7. 'authorization' → logprob: -8.263195991516113
    8. 'two' → logprob: -8.388195991516113
    9. 'authentication' → logprob: -9.138195991516113
    10. ' both' → logprob: -9.513195991516113

Token 297: '1' (ID: 16)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14195860922336578
    2. ' ' → logprob: -3.766958713531494
    3. '_' → logprob: -4.016958713531494
    4. 'def' → logprob: -4.391958713531494
    5. ' levels' → logprob: -4.516958713531494
    6. ',' → logprob: -4.891958713531494
    7. 'max' → logprob: -5.016958713531494
    8. '  ' → logprob: -5.141958713531494
    9. ' _' → logprob: -5.266958713531494
    10. ' max' → logprob: -5.391958713531494

Token 298: '+' (ID: 10)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.3076655864715576
    2. '+' → logprob: -1.4326655864715576
    3. ' and' → logprob: -1.8076655864715576
    4. ' +' → logprob: -1.9326655864715576
    5. '1' → logprob: -2.5576655864715576
    6. '<|end|>' → logprob: -3.1826655864715576
    7. ' ,' → logprob: -3.6826655864715576
    8. 's' → logprob: -5.557665824890137
    9. ')' → logprob: -5.557665824890137
    10. ' levels' → logprob: -5.682665824890137

Token 299: 'auth' (ID: 5723)
  Prédit: 'auth'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'auth' → logprob: -0.026327235624194145
    2. ' auth' → logprob: -3.651327133178711
    3. '_auth' → logprob: -11.901327133178711
    4. ' ' → logprob: -12.401327133178711
    5. '   ' → logprob: -12.526327133178711
    6. '	auth' → logprob: -12.526327133178711
    7. '1' → logprob: -12.651327133178711
    8. '(auth' → logprob: -13.651327133178711
    9. 'author' → logprob: -14.401327133178711
    10. 'Auth' → logprob: -14.401327133178711

Token 300: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0028374455869197845
    2. '1' → logprob: -5.877837657928467
    3. '```' → logprob: -11.627837181091309
    4. '_' → logprob: -12.002837181091309
    5. ' ' → logprob: -12.002837181091309
    6. '[' → logprob: -12.627837181091309
    7. 's' → logprob: -13.002837181091309
    8. ',' → logprob: -13.752837181091309
    9. '   ' → logprob: -14.252837181091309
    10. '0' → logprob: -14.502837181091309

Token 301: ' so' (ID: 813)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.04527455195784569
    2. '   ' → logprob: -3.920274496078491
    3. '<|end|>' → logprob: -4.04527473449707
    4. ' 
' → logprob: -6.29527473449707
    5. '  
' → logprob: -6.42027473449707
    6. '    
' → logprob: -6.92027473449707
    7. 'def' → logprob: -6.92027473449707
    8. '<|end|>' → logprob: -7.67027473449707
    9. ' ' → logprob: -8.04527473449707
    10. ',' → logprob: -8.92027473449707

Token 302: ' we' (ID: 581)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.0807859897613525
    2. '   ' → logprob: -1.7057859897613525
    3. ' we' → logprob: -2.4557859897613525
    4. 'def' → logprob: -2.4557859897613525
    5. ',' → logprob: -2.5807859897613525
    6. ' while' → logprob: -2.8307859897613525
    7. ':
' → logprob: -3.2057859897613525
    8. ' lo' → logprob: -3.4557859897613525
    9. ' low' → logprob: -3.8307859897613525
    10. 'while' → logprob: -4.080785751342773

Token 303: ' binary' (ID: 15600)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.39818981289863586
    2. ' want' → logprob: -2.1481897830963135
    3. ' need' → logprob: -2.6481897830963135
    4. ' do' → logprob: -3.7731897830963135
    5. 'continue' → logprob: -3.7731897830963135
    6. ' binary' → logprob: -3.8981897830963135
    7. ' can' → logprob: -4.273190021514893
    8. ' use' → logprob: -4.648190021514893
    9. 'binary' → logprob: -4.773190021514893
    10. '   ' → logprob: -5.023190021514893

Token 304: ' search' (ID: 3684)
  Prédit: 'search'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'search' → logprob: -0.45218122005462646
    2. ' search' → logprob: -1.3271812200546265
    3. '_search' → logprob: -2.327181339263916
    4. '_' → logprob: -7.202181339263916
    5. ' _' → logprob: -9.327180862426758
    6. ' ' → logprob: -9.452180862426758
    7. ')' → logprob: -11.452180862426758
    8. '   ' → logprob: -11.577180862426758
    9. ' )' → logprob: -12.202180862426758
    10. '```' → logprob: -12.327180862426758

Token 305: ' sum' (ID: 4215)
  Prédit: ' on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.542046070098877
    2. ' for' → logprob: -1.417046070098877
    3. 'for' → logprob: -3.167046070098877
    4. ' over' → logprob: -3.292046070098877
    5. ' auth' → logprob: -3.292046070098877
    6. 'on' → logprob: -4.292046070098877
    7. ' the' → logprob: -4.917046070098877
    8. 'auth' → logprob: -5.042046070098877
    9. ' ' → logprob: -5.167046070098877
    10. 'mid' → logprob: -5.917046070098877

Token 306: ' and' (ID: 326)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5938287377357483
    2. ' _' → logprob: -1.8438286781311035
    3. '   ' → logprob: -2.4688286781311035
    4. ' =' → logprob: -3.3438286781311035
    5. '_auth' → logprob: -3.3438286781311035
    6. ' ' → logprob: -3.8438286781311035
    7. '(' → logprob: -4.0938286781311035
    8. ' (' → logprob: -4.2188286781311035
    9. 'auth' → logprob: -4.7188286781311035
    10. ',' → logprob: -4.7188286781311035

Token 307: ' greed' (ID: 103438)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'check' → logprob: -0.9673338532447815
    2. ' check' → logprob: -1.5923337936401367
    3. 'then' → logprob: -2.3423337936401367
    4. ' try' → logprob: -2.4673337936401367
    5. 'split' → logprob: -2.8423337936401367
    6. 'try' → logprob: -3.2173337936401367
    7. 'search' → logprob: -3.8423337936401367
    8. ' then' → logprob: -3.8423337936401367
    9. 'min' → logprob: -3.9673337936401367
    10. ' use' → logprob: -4.717333793640137

Token 308: 'ily' (ID: 1810)
  Prédit: 'ily'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ily' → logprob: -0.5254194736480713
    2. 'y' → logprob: -0.9004194736480713
    3. 'ly' → logprob: -7.025419235229492
    4. 'yly' → logprob: -7.275419235229492
    5. 'yl' → logprob: -9.150419235229492
    6. '=' → logprob: -9.150419235229492
    7. 'search' → logprob: -9.400419235229492
    8. ' search' → logprob: -9.775419235229492
    9. 'def' → logprob: -9.900419235229492
    10. ' y' → logprob: -10.400419235229492

Token 309: ' choose' (ID: 5655)
  Prédit: ' find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' find' → logprob: -1.1712359189987183
    2. ' for' → logprob: -2.046236038208008
    3. ' split' → logprob: -2.046236038208008
    4. ' ' → logprob: -2.171236038208008
    5. ' search' → logprob: -2.421236038208008
    6. ' def' → logprob: -3.046236038208008
    7. ' continue' → logprob: -3.796236038208008
    8. 'search' → logprob: -3.921236038208008
    9. 'split' → logprob: -4.421236038208008
    10. ' choose' → logprob: -4.546236038208008

Token 310: ' auth' (ID: 6246)
  Prédit: ' auth'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' auth' → logprob: -0.277132123708725
    2. 'auth' → logprob: -1.9021321535110474
    3. ' the' → logprob: -3.027132034301758
    4. ' next' → logprob: -3.902132034301758
    5. ' max' → logprob: -5.402132034301758
    6. 'max' → logprob: -5.527132034301758
    7. 'the' → logprob: -6.152132034301758
    8. ' tokens' → logprob: -6.152132034301758
    9. ' minimal' → logprob: -6.527132034301758
    10. 'min' → logprob: -6.652132034301758

Token 311: ' levels' (ID: 8374)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5909309387207031
    2. '   ' → logprob: -1.5909309387207031
    3. '_' → logprob: -1.9659309387207031
    4. ' =' → logprob: -3.965930938720703
    5. ' _' → logprob: -4.340930938720703
    6. ' ' → logprob: -4.965930938720703
    7. ',' → logprob: -4.965930938720703
    8. '    ' → logprob: -5.090930938720703
    9. ')' → logprob: -5.340930938720703
    10. '=' → logprob: -5.465930938720703

Token 312: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16130311787128448
    2. ' ' → logprob: -2.6613030433654785
    3. '_' → logprob: -3.9113030433654785
    4. ' for' → logprob: -4.2863030433654785
    5. 'def' → logprob: -4.4113030433654785
    6. '    ' → logprob: -5.2863030433654785
    7. '
' → logprob: -5.5363030433654785
    8. ' _' → logprob: -5.5363030433654785
    9. '  ' → logprob: -5.9113030433654785
    10. ' =' → logprob: -6.1613030433654785

Token 313: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.2614046335220337
    2. '_' → logprob: -1.6364046335220337
    3. '   ' → logprob: -1.8864046335220337
    4. '
' → logprob: -2.261404514312744
    5. ' ' → logprob: -2.761404514312744
    6. ' 
' → logprob: -2.886404514312744
    7. ' :' → logprob: -3.261404514312744
    8. 'def' → logprob: -3.511404514312744
    9. ' _' → logprob: -4.386404514312744
    10. ',' → logprob: -4.636404514312744

Token 314: ' #' (ID: 1069)
  Prédit: 'low'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'low' → logprob: -0.3750552535057068
    2. 'l' → logprob: -1.8750553131103516
    3. 'left' → logprob: -2.3750553131103516
    4. 'lo' → logprob: -3.3750553131103516
    5. ' low' → logprob: -4.375055313110352
    6. ' lo' → logprob: -4.625055313110352
    7. ' left' → logprob: -5.625055313110352
    8. 'def' → logprob: -5.750055313110352
    9. ' l' → logprob: -6.000055313110352
    10. '
' → logprob: -8.875055313110352

Token 315: ' We' (ID: 1416)
  Prédit: 'low'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'low' → logprob: -0.5910419225692749
    2. 'left' → logprob: -0.9660419225692749
    3. 'l' → logprob: -3.3410420417785645
    4. 'lo' → logprob: -3.8410420417785645
    5. 'def' → logprob: -4.8410420417785645
    6. ' left' → logprob: -8.341041564941406
    7. ' low' → logprob: -8.466041564941406
    8. ' lo' → logprob: -8.716041564941406
    9. 'L' → logprob: -9.466041564941406
    10. '   ' → logprob: -9.841041564941406

Token 316: ' can' (ID: 665)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8742231130599976
    2. '=' → logprob: -0.9992231130599976
    3. 'def' → logprob: -1.7492231130599976
    4. '   ' → logprob: -3.999223232269287
    5. ' def' → logprob: -4.999223232269287
    6. 'max' → logprob: -6.124223232269287
    7. '=int' → logprob: -6.124223232269287
    8. '=max' → logprob: -6.499223232269287
    9. '=len' → logprob: -6.624223232269287
    10. '=
' → logprob: -6.999223232269287

Token 317: ' try' (ID: 2075)
  Prédit: ' try'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' try' → logprob: -1.0822492837905884
    2. 'def' → logprob: -1.8322492837905884
    3. '   ' → logprob: -2.082249164581299
    4. ' use' → logprob: -2.457249164581299
    5. ' continue' → logprob: -2.832249164581299
    6. ' check' → logprob: -2.957249164581299
    7. ' define' → logprob: -3.457249164581299
    8. ' def' → logprob: -3.582249164581299
    9. ' binary' → logprob: -3.832249164581299
    10. ' do' → logprob: -3.957249164581299

Token 318: ' all' (ID: 722)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mid' → logprob: -0.9643288254737854
    2. ' mid' → logprob: -1.3393287658691406
    3. 'def' → logprob: -2.3393287658691406
    4. ' auth' → logprob: -2.9643287658691406
    5. '   ' → logprob: -3.2143287658691406
    6. 'auth' → logprob: -3.4643287658691406
    7. ' def' → logprob: -3.5893287658691406
    8. ' low' → logprob: -3.8393287658691406
    9. 'low' → logprob: -3.8393287658691406
    10. 'sum' → logprob: -3.9643287658691406

Token 319: ' auth' (ID: 6246)
  Prédit: 'auth'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'auth' → logprob: -0.2764793634414673
    2. ' auth' → logprob: -1.6514793634414673
    3. 'sum' → logprob: -4.026479244232178
    4. '(auth' → logprob: -4.901479244232178
    5. ' sum' → logprob: -5.401479244232178
    6. '   ' → logprob: -5.526479244232178
    7. ' sums' → logprob: -5.776479244232178
    8. 'ranges' → logprob: -5.901479244232178
    9. '_auth' → logprob: -6.401479244232178
    10. 'levels' → logprob: -6.776479244232178

Token 320: '1' (ID: 16)
  Prédit: ' levels'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' levels' → logprob: -0.7146183252334595
    2. 'levels' → logprob: -1.7146183252334595
    3. '1' → logprob: -1.8396183252334595
    4. '_levels' → logprob: -2.58961820602417
    5. '   ' → logprob: -3.58961820602417
    6. 's' → logprob: -3.83961820602417
    7. 'sum' → logprob: -4.33961820602417
    8. '_sum' → logprob: -4.96461820602417
    9. '[' → logprob: -4.96461820602417
    10. '_' → logprob: -5.96461820602417

Token 321: ' from' (ID: 591)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.19329091906547546
    2. '=' → logprob: -3.068290948867798
    3. 'from' → logprob: -3.568290948867798
    4. '1' → logprob: -3.818290948867798
    5. ' =' → logprob: -3.943290948867798
    6. 'in' → logprob: -4.193290710449219
    7. ' from' → logprob: -4.318290710449219
    8. ' for' → logprob: -5.193290710449219
    9. 'for' → logprob: -5.193290710449219
    10. ',' → logprob: -5.818290710449219

Token 322: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.618001053633634e-05
    2. ' ' → logprob: -10.750025749206543
    3. 'max' → logprob: -12.500025749206543
    4. '[' → logprob: -15.000025749206543
    5. 'range' → logprob: -15.625025749206543
    6. 'min' → logprob: -16.00002670288086
    7. '
' → logprob: -16.62502670288086
    8. 'possible' → logprob: -17.12502670288086
    9. '   ' → logprob: -17.25002670288086
    10. '1' → logprob: -17.50002670288086

Token 323: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.070975071750581e-05
    2. 'max' → logprob: -10.500030517578125
    3. ' ' → logprob: -12.875030517578125
    4. '
' → logprob: -15.375030517578125
    5. 'min' → logprob: -16.875030517578125
    6. ' max' → logprob: -17.000030517578125
    7. '1' → logprob: -17.000030517578125
    8. '[' → logprob: -17.500030517578125
    9. '00' → logprob: -17.625030517578125
    10. 'possible' → logprob: -17.625030517578125

Token 324: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.5246240496635437
    2. 'to' → logprob: -0.8996240496635437
    3. '   ' → logprob: -7.149623870849609
    4. ',' → logprob: -7.524623870849609
    5. ' ' → logprob: -9.64962387084961
    6. ' up' → logprob: -10.39962387084961
    7. 'import' → logprob: -11.02462387084961
    8. '    ' → logprob: -11.14962387084961
    9. ',to' → logprob: -11.89962387084961
    10. ' ,' → logprob: -12.27462387084961

Token 325: ' max' (ID: 2999)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.7122573256492615
    2. 'R' → logprob: -0.9622573256492615
    3. '10' → logprob: -3.2122573852539062
    4. 'max' → logprob: -3.4622573852539062
    5. 'res' → logprob: -3.9622573852539062
    6. ' s' → logprob: -4.587257385253906
    7. ' R' → logprob: -4.587257385253906
    8. 'sum' → logprob: -4.712257385253906
    9. 'int' → logprob: -6.087257385253906
    10. '100' → logprob: -6.587257385253906

Token 326: 'A' (ID: 32)
  Prédit: '_auth'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_auth' → logprob: -1.2257397174835205
    2. '1' → logprob: -2.1007397174835205
    3. 'auth' → logprob: -2.1007397174835205
    4. '(' → logprob: -2.3507397174835205
    5. '(auth' → logprob: -2.6007397174835205
    6. '(W' → logprob: -3.2257397174835205
    7. '(s' → logprob: -3.4757397174835205
    8. 's' → logprob: -3.8507397174835205
    9. 'max' → logprob: -3.8507397174835205
    10. '_s' → logprob: -4.100739479064941

Token 327: '1' (ID: 16)
  Prédit: 'uth'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uth' → logprob: -0.31128913164138794
    2. '+' → logprob: -2.186289072036743
    3. 'uthor' → logprob: -3.061289072036743
    4. '1' → logprob: -3.936289072036743
    5. '_' → logprob: -4.561289310455322
    6. ' +' → logprob: -4.686289310455322
    7. '_auth' → logprob: -4.811289310455322
    8. 'u' → logprob: -4.811289310455322
    9. 'ut' → logprob: -4.936289310455322
    10. ',' → logprob: -5.061289310455322

Token 328: ' max' (ID: 2999)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.223170667886734
    2. '   ' → logprob: -2.473170757293701
    3. ' ' → logprob: -3.348170757293701
    4. ',' → logprob: -3.723170757293701
    5. ' +' → logprob: -4.223170757293701
    6. ':' → logprob: -5.223170757293701
    7. '
' → logprob: -5.348170757293701
    8. '  ' → logprob: -5.473170757293701
    9. ' and' → logprob: -5.973170757293701
    10. '1' → logprob: -5.973170757293701

Token 329: ' levels' (ID: 8374)
  Prédit: '_auth'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_auth' → logprob: -0.16703511774539948
    2. 'A' → logprob: -2.0420351028442383
    3. 'Auth' → logprob: -4.167035102844238
    4. 'auth' → logprob: -5.292035102844238
    5. '_a' → logprob: -7.792035102844238
    6. '(' → logprob: -8.042035102844238
    7. '=' → logprob: -8.042035102844238
    8. '_A' → logprob: -8.042035102844238
    9. 'a' → logprob: -8.167035102844238
    10. '_level' → logprob: -8.417035102844238

Token 330: ' in' (ID: 306)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0745115280151367
    2. '+' → logprob: -1.6995115280151367
    3. '   ' → logprob: -2.0745115280151367
    4. ')' → logprob: -2.9495115280151367
    5. ']' → logprob: -2.9495115280151367
    6. ' =' → logprob: -3.0745115280151367
    7. ':' → logprob: -3.4495115280151367
    8. ',' → logprob: -3.6995115280151367
    9. '=' → logprob: -3.9495115280151367
    10. '[' → logprob: -3.9495115280151367

Token 331: ' office' (ID: 6885)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.6881943941116333
    2. 'range' → logprob: -1.1881943941116333
    3. 'levels' → logprob: -2.0631942749023438
    4. '[' → logprob: -3.9381942749023438
    5. 'la' → logprob: -4.063194274902344
    6. ' levels' → logprob: -4.188194274902344
    7. ' la' → logprob: -5.438194274902344
    8. 'max' → logprob: -6.313194274902344
    9. 'W' → logprob: -7.063194274902344
    10. ' s' → logprob: -7.063194274902344

Token 332: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.021366998553276062
    2. '_' → logprob: -5.021367073059082
    3. '   ' → logprob: -5.021367073059082
    4. '[' → logprob: -6.146367073059082
    5. 's' → logprob: -6.396367073059082
    6. 'max' → logprob: -6.771367073059082
    7. '2' → logprob: -7.396367073059082
    8. ')' → logprob: -7.646367073059082
    9. ']' → logprob: -8.146367073059082
    10. '
' → logprob: -8.396367073059082

Token 333: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8902121186256409
    2. '1' → logprob: -1.765212059020996
    3. '
' → logprob: -2.515212059020996
    4. ')' → logprob: -2.640212059020996
    5. ',' → logprob: -2.890212059020996
    6. '<|end|>' → logprob: -3.015212059020996
    7. '_' → logprob: -3.140212059020996
    8. '[' → logprob: -4.015212059020996
    9. ':' → logprob: -4.140212059020996
    10. 'max' → logprob: -4.265212059020996

Token 334: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -1.3598473072052002
    2. ' but' → logprob: -1.9848473072052002
    3. ',' → logprob: -2.7348473072052
    4. ' ' → logprob: -2.8598473072052
    5. ' or' → logprob: -2.8598473072052
    6. '<|end|>' → logprob: -3.1098473072052
    7. 'max' → logprob: -3.3598473072052
    8. '   ' → logprob: -3.3598473072052
    9. '#' → logprob: -3.4848473072052
    10. ' for' → logprob: -3.6098473072052

Token 335: ' check' (ID: 2371)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.6064435839653015
    2. ' max' → logprob: -2.2314436435699463
    3. ' for' → logprob: -2.8564436435699463
    4. 'auth' → logprob: -3.1064436435699463
    5. 'for' → logprob: -3.2314436435699463
    6. '#' → logprob: -3.4814436435699463
    7. ' auth' → logprob: -3.7314436435699463
    8. ' find' → logprob: -3.9814436435699463
    9. '   ' → logprob: -4.106443405151367
    10. 'import' → logprob: -4.231443405151367

Token 336: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.9011105298995972
    2. '   ' → logprob: -1.1511105298995972
    3. 'max' → logprob: -2.4011106491088867
    4. ' for' → logprob: -2.7761106491088867
    5. ' max' → logprob: -3.1511106491088867
    6. 'if' → logprob: -3.6511106491088867
    7. 'for' → logprob: -4.276110649108887
    8. ' auth' → logprob: -4.276110649108887
    9. 'auth' → logprob: -4.901110649108887
    10. 'def' → logprob: -5.651110649108887

Token 337: ' auth' (ID: 6246)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'possible' → logprob: -0.942575991153717
    2. 'b' → logprob: -1.6925759315490723
    3. 'any' → logprob: -2.1925759315490723
    4. ' any' → logprob: -2.5675759315490723
    5. ' possible' → logprob: -2.5675759315490723
    6. 'auth' → logprob: -3.1925759315490723
    7. ' bfs' → logprob: -3.3175759315490723
    8. 'max' → logprob: -3.6925759315490723
    9. 'levels' → logprob: -4.692575931549072
    10. 'sum' → logprob: -5.067575931549072

Token 338: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.003012880450114608
    2. '   ' → logprob: -6.753012657165527
    3. '[' → logprob: -7.503012657165527
    4. '_' → logprob: -8.253012657165527
    5. 'max' → logprob: -8.753012657165527
    6. '2' → logprob: -9.378012657165527
    7. '```' → logprob: -9.378012657165527
    8. 's' → logprob: -9.628012657165527
    9. ',' → logprob: -9.753012657165527
    10. ' levels' → logprob: -10.003012657165527

Token 339: ' satisfies' (ID: 126205)
  Prédit: ' can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.9928253293037415
    2. ' from' → logprob: -1.2428252696990967
    3. 'from' → logprob: -2.1178252696990967
    4. '1' → logprob: -3.1178252696990967
    5. '>=' → logprob: -3.2428252696990967
    6. '=' → logprob: -3.6178252696990967
    7. ' in' → logprob: -4.117825508117676
    8. '   ' → logprob: -4.117825508117676
    9. ' >=' → logprob: -4.367825508117676
    10. ' ranges' → logprob: -4.617825508117676

Token 340: ' rooms' (ID: 11348)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22052644193172455
    2. 'max' → logprob: -2.9705264568328857
    3. ' =' → logprob: -2.9705264568328857
    4. '=' → logprob: -4.345526218414307
    5. ':' → logprob: -4.595526218414307
    6. ' for' → logprob: -4.845526218414307
    7. '_max' → logprob: -4.845526218414307
    8. '_' → logprob: -4.970526218414307
    9. '1' → logprob: -5.095526218414307
    10. '[' → logprob: -5.345526218414307

Token 341: '>=' (ID: 20974)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9886447191238403
    2. ':' → logprob: -1.2386447191238403
    3. '=' → logprob: -2.738644599914551
    4. '1' → logprob: -2.863644599914551
    5. ' =' → logprob: -2.988644599914551
    6. '.' → logprob: -3.488644599914551
    7. '_' → logprob: -3.863644599914551
    8. ' in' → logprob: -3.863644599914551
    9. ' for' → logprob: -3.988644599914551
    10. '[' → logprob: -4.113644599914551

Token 342: 'R' (ID: 49)
  Prédit: 'R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.1494309902191162
    2. 'res' → logprob: -2.649430990219116
    3. 's' → logprob: -3.149430990219116
    4. 'W' → logprob: -5.149431228637695
    5. ' R' → logprob: -5.149431228637695
    6. 'r' → logprob: -5.524431228637695
    7. 'la' → logprob: -6.399431228637695
    8. ' res' → logprob: -6.774431228637695
    9. '   ' → logprob: -6.774431228637695
    10. '0' → logprob: -7.524431228637695

Token 343: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1736930012702942
    2. '
' → logprob: -2.1736929416656494
    3. 'max' → logprob: -4.4236931800842285
    4. 'def' → logprob: -5.4236931800842285
    5. '.' → logprob: -5.5486931800842285
    6. ',' → logprob: -5.5486931800842285
    7. ')' → logprob: -5.6736931800842285
    8. '<|end|>' → logprob: -6.1736931800842285
    9. '  ' → logprob: -6.4236931800842285
    10. '1' → logprob: -6.4236931800842285

Token 344: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.28748440742492676
    2. '
' → logprob: -2.2874844074249268
    3. ':' → logprob: -2.7874844074249268
    4. '<|end|>' → logprob: -3.2874844074249268
    5. ',' → logprob: -4.787484169006348
    6. ')' → logprob: -4.912484169006348
    7. ' ' → logprob: -4.912484169006348
    8. '.' → logprob: -5.287484169006348
    9. '<|end|>' → logprob: -5.787484169006348
    10. ' for' → logprob: -6.037484169006348

Token 345: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07921571284532547
    2. '<|end|>' → logprob: -3.3292157649993896
    3. 'def' → logprob: -4.2042155265808105
    4. ')' → logprob: -4.7042155265808105
    5. 'max' → logprob: -5.3292155265808105
    6. '
' → logprob: -6.0792155265808105
    7. ' max' → logprob: -6.7042155265808105
    8. '#' (adapté à ' #') → logprob: -6.8292155265808105
    9. ' for' → logprob: -6.8292155265808105
    10. '<|end|>' → logprob: -7.0792155265808105

Token 346: ' To' (ID: 2514)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.5866260528564453
    2. ' for' → logprob: -1.4616260528564453
    3. 'max' → logprob: -2.7116260528564453
    4. ' low' → logprob: -2.8366260528564453
    5. ' lo' → logprob: -3.4616260528564453
    6. ' left' → logprob: -4.086626052856445
    7. '   ' → logprob: -4.711626052856445
    8. 'low' → logprob: -4.836626052856445
    9. ' return' → logprob: -5.336626052856445
    10. 'for' → logprob: -5.336626052856445

Token 347: ' optimize' (ID: 40398)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'find' → logprob: -1.9290564060211182
    2. 'continue' → logprob: -2.179056406021118
    3. 'ach' → logprob: -2.304056406021118
    4. ' find' → logprob: -2.679056406021118
    5. 'def' → logprob: -2.804056406021118
    6. 'range' → logprob: -2.929056406021118
    7. 'check' → logprob: -3.179056406021118
    8. ' continue' → logprob: -3.304056406021118
    9. 'max' → logprob: -3.304056406021118
    10. 'do' → logprob: -3.554056406021118

Token 348: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9877920746803284
    2. ',' → logprob: -1.6127920150756836
    3. 'max' → logprob: -1.8627920150756836
    4. ' max' → logprob: -1.9877920150756836
    5. ' for' → logprob: -2.3627920150756836
    6. 'for' → logprob: -5.112792015075684
    7. ' ,' → logprob: -5.112792015075684
    8. ' low' → logprob: -5.862792015075684
    9. 'low' → logprob: -5.987792015075684
    10. 'import' → logprob: -6.112792015075684

Token 349: ' pre' (ID: 876)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.2192031890153885
    2. ' max' → logprob: -1.969203233718872
    3. 'import' → logprob: -4.344202995300293
    4. '   ' → logprob: -4.969202995300293
    5. ' lo' → logprob: -5.094202995300293
    6. 'left' → logprob: -5.094202995300293
    7. 'low' → logprob: -5.594202995300293
    8. ' import' → logprob: -5.844202995300293
    9. 'lo' → logprob: -5.969202995300293
    10. 'l' → logprob: -5.969202995300293

Token 350: 'compute' (ID: 54521)
  Prédit: 'compute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compute' → logprob: -0.3154086768627167
    2. 'sum' → logprob: -1.940408706665039
    3. 'max' → logprob: -3.315408706665039
    4. 'fix' → logprob: -3.440408706665039
    5. 'import' → logprob: -3.940408706665039
    6. 'from' → logprob: -4.815408706665039
    7. 'process' → logprob: -5.565408706665039
    8. 'levels' → logprob: -5.815408706665039
    9. 'calculate' → logprob: -5.815408706665039
    10. 's' → logprob: -5.940408706665039

Token 351: ' sorted' (ID: 20099)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.13890409469604492
    2. ' max' → logprob: -3.013904094696045
    3. 'levels' → logprob: -4.138904094696045
    4. '_max' → logprob: -4.513904094696045
    5. 's' → logprob: -5.013904094696045
    6. '[max' → logprob: -5.263904094696045
    7. '_levels' → logprob: -5.263904094696045
    8. ']' → logprob: -5.763904094696045
    9. '   ' → logprob: -5.888904094696045
    10. 'min' → logprob: -5.888904094696045

Token 352: ' unique' (ID: 5746)
  Prédit: '_levels'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_levels' → logprob: -0.5411139726638794
    2. 'levels' → logprob: -0.9161139726638794
    3. '(level' → logprob: -4.41611385345459
    4. '_auth' → logprob: -5.79111385345459
    5. '1' → logprob: -6.91611385345459
    6. 'auth' → logprob: -8.16611385345459
    7. '_' → logprob: -8.29111385345459
    8. 'A' → logprob: -8.54111385345459
    9. ' levels' → logprob: -8.79111385345459
    10. 'lev' → logprob: -8.91611385345459

Token 353: ' levels' (ID: 8374)
  Prédit: 'levels'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'levels' → logprob: -0.2866482734680176
    2. '_levels' → logprob: -1.5366482734680176
    3. '(level' → logprob: -4.036648273468018
    4. '_auth' → logprob: -4.411648273468018
    5. ' levels' → logprob: -6.286648273468018
    6. 'auth' → logprob: -7.161648273468018
    7. '(set' → logprob: -7.911648273468018
    8. 'level' → logprob: -8.28664779663086
    9. 'lev' → logprob: -8.66164779663086
    10. 'values' → logprob: -8.78664779663086

Token 354: ' for' (ID: 395)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.9180177450180054
    2. ' =' → logprob: -1.4180177450180054
    3. '   ' → logprob: -2.418017864227295
    4. '1' → logprob: -2.543017864227295
    5. 's' → logprob: -2.793017864227295
    6. 'levels' → logprob: -3.668017864227295
    7. '=[]' → logprob: -3.918017864227295
    8. ']' → logprob: -4.043017864227295
    9. ',' → logprob: -4.293017864227295
    10. '_levels' → logprob: -4.543017864227295

Token 355: ' each' (ID: 2454)
  Prédit: 'levels'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'levels' → logprob: -0.18184956908226013
    2. ' levels' → logprob: -2.056849479675293
    3. 'la' → logprob: -3.556849479675293
    4. ' la' → logprob: -5.306849479675293
    5. '[' → logprob: -7.306849479675293
    6. 'W' → logprob: -7.306849479675293
    7. ' W' → logprob: -7.681849479675293
    8. 's' → logprob: -8.431849479675293
    9. ' def' → logprob: -8.431849479675293
    10. '
' → logprob: -8.431849479675293

Token 356: ' office' (ID: 6885)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.30552339553833
    2. 'office' → logprob: -1.30552339553833
    3. ' office' → logprob: -1.43052339553833
    4. 'levels' → logprob: -2.55552339553833
    5. '_' → logprob: -3.30552339553833
    6. '_levels' → logprob: -3.68052339553833
    7. ' levels' → logprob: -4.05552339553833
    8. ']' → logprob: -4.05552339553833
    9. ')' → logprob: -4.68052339553833
    10. '[' → logprob: -5.18052339553833

Token 357: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12164097279310226
    2. '
' → logprob: -3.121640920639038
    3. 'def' → logprob: -3.246640920639038
    4. '<|end|>' → logprob: -4.621641159057617
    5. '<|end|>' → logprob: -4.996641159057617
    6. ',' → logprob: -5.871641159057617
    7. '    
' → logprob: -5.996641159057617
    8. ' and' → logprob: -6.621641159057617
    9. '.' → logprob: -6.746641159057617
    10. '1' → logprob: -6.871641159057617

Token 358: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1756698340177536
    2. '
' → logprob: -2.5506699085235596
    3. '<|end|>' → logprob: -2.6756699085235596
    4. '<|end|>' → logprob: -5.6756696701049805
    5. '    
' → logprob: -5.8006696701049805
    6. 'def' → logprob: -5.9256696701049805
    7. ',' → logprob: -6.3006696701049805
    8. ' and' → logprob: -7.6756696701049805
    9. ')' → logprob: -7.9256696701049805
    10. ':' → logprob: -8.17566967010498

Token 359: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.29818737506866455
    2. '
' → logprob: -1.9231873750686646
    3. '<|end|>' → logprob: -2.798187255859375
    4. 'levels' → logprob: -4.298187255859375
    5. 'def' → logprob: -4.923187255859375
    6. ' levels' → logprob: -5.173187255859375
    7. '    
' → logprob: -5.548187255859375
    8. '_levels' → logprob: -5.923187255859375
    9. 'max' → logprob: -5.923187255859375
    10. '<|end|>' → logprob: -5.923187255859375

Token 360: ' Then' (ID: 7801)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.097458839416504
    2. 'max' → logprob: -1.722458839416504
    3. 'levels' → logprob: -1.847458839416504
    4. 'def' → logprob: -2.847458839416504
    5. '
' → logprob: -2.847458839416504
    6. 'unique' → logprob: -2.972458839416504
    7. ' levels' → logprob: -3.097458839416504
    8. 'import' → logprob: -4.097458839416504
    9. ' unique' → logprob: -4.347458839416504
    10. 'A' → logprob: -4.472458839416504

Token 361: ' do' (ID: 621)
  Prédit: 'levels'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'levels' → logprob: -1.2184776067733765
    2. 'max' → logprob: -2.093477725982666
    3. 'unique' → logprob: -2.718477725982666
    4. 'all' → logprob: -2.843477725982666
    5. 'auth' → logprob: -2.968477725982666
    6. '   ' → logprob: -2.968477725982666
    7. 'l' → logprob: -3.093477725982666
    8. 'uniq' → logprob: -3.093477725982666
    9. 'a' → logprob: -3.468477725982666
    10. '#' → logprob: -3.593477725982666

Token 362: ' two' (ID: 1920)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.306769609451294
    2. 'for' → logprob: -1.306769609451294
    3. 'from' → logprob: -1.681769609451294
    4. 'def' → logprob: -2.681769609451294
    5. ' from' → logprob: -3.181769609451294
    6. 'import' → logprob: -3.181769609451294
    7. '   ' → logprob: -3.431769609451294
    8. 'auth' → logprob: -4.181769371032715
    9. ' pass' → logprob: -4.306769371032715
    10. 'pass' → logprob: -4.806769371032715

Token 363: ' pointers' (ID: 58762)
  Prédit: '-pointer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-pointer' → logprob: -0.8820397853851318
    2. ' pointers' → logprob: -1.3820397853851318
    3. 'pointer' → logprob: -1.5070397853851318
    4. ' pointer' → logprob: -2.257039785385132
    5. '_pointer' → logprob: -4.882040023803711
    6. '-p' → logprob: -7.507040023803711
    7. 'p' → logprob: -8.257040023803711
    8. '-' → logprob: -9.382040023803711
    9. '
' → logprob: -10.257040023803711
    10. ' ' → logprob: -10.632040023803711

Token 364: ' approach' (ID: 7139)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9855321049690247
    2. '<|end|>' → logprob: -0.9855321049690247
    3. '   ' → logprob: -1.7355320453643799
    4. '<|end|>' → logprob: -3.61053204536438
    5. ',' → logprob: -4.485532283782959
    6. '  
' → logprob: -4.985532283782959
    7. ':' → logprob: -4.985532283782959
    8. '\n' → logprob: -5.485532283782959
    9. '.' → logprob: -5.485532283782959
    10. ')' → logprob: -5.985532283782959

Token 365: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6913301348686218
    2. '
' → logprob: -0.9413301348686218
    3. '<|end|>' → logprob: -2.5663301944732666
    4. '<|end|>' → logprob: -4.1913299560546875
    5. 'def' → logprob: -4.5663299560546875
    6. '    
' → logprob: -5.8163299560546875
    7. ',' → logprob: -7.4413299560546875
    8. 'levels' → logprob: -7.5663299560546875
    9. '.' → logprob: -8.191329956054688
    10. '  
' → logprob: -8.316329956054688

Token 366: 'def' (ID: 1314)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.21666111052036285
    2. '   ' → logprob: -2.716661214828491
    3. '
' → logprob: -2.966661214828491
    4. '<|end|>' → logprob: -3.966661214828491
    5. '\n' → logprob: -4.466660976409912
    6. 'def' → logprob: -4.716660976409912
    7. ' ' → logprob: -4.716660976409912
    8. ':
' → logprob: -5.091660976409912
    9. '[' → logprob: -5.591660976409912
    10. '\' → logprob: -5.591660976409912

Token 367: ' main' (ID: 2758)
  Prédit: ' possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' possible' → logprob: -0.003445403417572379
    2. ' ' → logprob: -5.878445625305176
    3. '_' → logprob: -8.628445625305176
    4. 'possible' → logprob: -8.753445625305176
    5. ' ' → logprob: -8.878445625305176
    6. ' _' → logprob: -9.628445625305176
    7. '_possible' → logprob: -10.753445625305176
    8. ' poss' → logprob: -10.753445625305176
    9. ' main' → logprob: -11.878445625305176
    10. ' space' → logprob: -11.878445625305176

Token 368: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.00016146517009474337
    2. '():
' → logprob: -9.000161170959473
    3. '(' → logprob: -11.125161170959473
    4. ' ():' → logprob: -11.250161170959473
    5. '()' → logprob: -12.250161170959473
    6. ':' → logprob: -12.375161170959473
    7. '():
' → logprob: -14.500161170959473
    8. '().' → logprob: -15.750161170959473
    9. '_' → logprob: -15.750161170959473
    10. '(W' → logprob: -16.50016212463379

Token 369: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010800440795719624
    2. 'import' → logprob: -5.635800361633301
    3. '<|end|>' → logprob: -5.885800361633301
    4. ' import' → logprob: -6.010800361633301
    5. '	import' → logprob: -7.760800361633301
    6. ',' → logprob: -8.5108003616333
    7. 'def' → logprob: -8.6358003616333
    8. '    ' → logprob: -8.8858003616333
    9. '    
' → logprob: -8.8858003616333
    10. ' input' → logprob: -9.6358003616333

Token 370: ' while' (ID: 2049)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.919344425201416
    2. 'import' → logprob: -1.169344425201416
    3. 'W' → logprob: -1.919344425201416
    4. ' import' → logprob: -2.919344425201416
    5. 'input' → logprob: -3.669344425201416
    6. ' input' → logprob: -3.919344425201416
    7. ' W' → logprob: -4.044344425201416
    8. 'n' → logprob: -5.044344425201416
    9. '#' → logprob: -5.169344425201416
    10. 'pass' → logprob: -5.544344425201416

Token 371: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.0067248414270579815
    2. 'True' → logprob: -5.006724834442139
    3. '(True' → logprob: -11.756725311279297
    4. ' ' → logprob: -14.131725311279297
    5. '1' → logprob: -14.881725311279297
    6. '=True' → logprob: -15.006725311279297
    7. ' ' → logprob: -15.881725311279297
    8. ' true' → logprob: -17.256725311279297
    9. ' Tru' → logprob: -17.256725311279297
    10. '_true' → logprob: -17.506725311279297

Token 372: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0012724967673420906
    2. ':
' → logprob: -6.751272678375244
    3. '   ' → logprob: -10.251272201538086
    4. ',' → logprob: -10.876272201538086
    5. ' :' → logprob: -10.876272201538086
    6. '<|end|>' → logprob: -11.501272201538086
    7. '():' → logprob: -12.001272201538086
    8. '       ' → logprob: -12.501272201538086
    9. '.' → logprob: -13.001272201538086
    10. '<|end|>' → logprob: -13.376272201538086

Token 373: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6244866847991943
    2. '       ' → logprob: -0.8744866847991943
    3. ' ' → logprob: -3.3744866847991943
    4. '    ' → logprob: -4.999486923217773
    5. '<|end|>' → logprob: -5.999486923217773
    6. '  ' → logprob: -7.249486923217773
    7. '    
' → logprob: -7.499486923217773
    8. ':' → logprob: -7.624486923217773
    9. '        
' → logprob: -7.999486923217773
    10. '<|end|>' → logprob: -8.124486923217773

Token 374: ' R' (ID: 460)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.17600449919700623
    2. 'line' → logprob: -2.426004409790039
    3. '   ' → logprob: -2.926004409790039
    4. ' s' → logprob: -4.176004409790039
    5. 's' → logprob: -6.551004409790039
    6. ' n' → logprob: -7.551004409790039
    7. ' l' → logprob: -7.801004409790039
    8. 'n' → logprob: -7.801004409790039
    9. ' S' → logprob: -8.176004409790039
    10. '       ' → logprob: -8.801004409790039

Token 375: '=int' (ID: 37431)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.05095243826508522
    2. '=int' → logprob: -3.550952434539795
    3. ' =' → logprob: -4.050952434539795
    4. '=input' → logprob: -5.925952434539795
    5. ',' → logprob: -7.925952434539795
    6. '=line' → logprob: -8.050952911376953
    7. '=sys' → logprob: -9.175952911376953
    8. ',R' → logprob: -10.300952911376953
    9. '=

' → logprob: -11.550952911376953
    10. ',r' → logprob: -11.550952911376953

Token 376: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.2718971371650696
    2. '(sys' → logprob: -1.5218970775604248
    3. 'input' → logprob: -4.021897315979004
    4. 'sys' → logprob: -6.396897315979004
    5. '()' → logprob: -9.271897315979004
    6. '(' → logprob: -9.896897315979004
    7. ' input' → logprob: -11.146897315979004
    8. '()
' → logprob: -11.521897315979004
    9. '=input' → logprob: -12.396897315979004
    10. ' sys' → logprob: -12.646897315979004

Token 377: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.02703968435525894
    2. '())
' → logprob: -3.7770397663116455
    3. '()' → logprob: -6.277039527893066
    4. '().' → logprob: -6.277039527893066
    5. '())
' → logprob: -11.277039527893066
    6. '()
' → logprob: -11.402039527893066
    7. ')' → logprob: -13.277039527893066
    8. ' ())' → logprob: -13.527039527893066
    9. '(' → logprob: -13.902039527893066
    10. '())

' → logprob: -14.402039527893066

Token 378: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01516670361161232
    2. '<|end|>' → logprob: -4.515166759490967
    3. ' if' → logprob: -5.765166759490967
    4. '   ' → logprob: -7.390166759490967
    5. ' ' → logprob: -9.515166282653809
    6. '
' → logprob: -9.515166282653809
    7. '<|end|>' → logprob: -9.640166282653809
    8. '	' → logprob: -10.015166282653809
    9. '	if' → logprob: -10.390166282653809
    10. '        
' → logprob: -11.640166282653809

Token 379: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.9026603698730469
    2. ' if' → logprob: -1.1526603698730469
    3. '       ' → logprob: -1.2776603698730469
    4. '	if' → logprob: -11.277660369873047
    5. 'If' → logprob: -12.402660369873047
    6. '   ' → logprob: -12.777660369873047
    7. '<|end|>' → logprob: -13.402660369873047
    8. ' ' → logprob: -13.527660369873047
    9. ';if' → logprob: -13.652660369873047
    10. '      ' → logprob: -14.152660369873047

Token 380: ' R' (ID: 460)
  Prédit: ' R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' R' → logprob: -0.03872683271765709
    2. 'R' → logprob: -3.288726806640625
    3. ' not' → logprob: -7.288726806640625
    4. 'not' → logprob: -13.538726806640625
    5. ' ' → logprob: -15.038726806640625
    6. ' ' → logprob: -15.413726806640625
    7. '_R' → logprob: -17.913726806640625
    8. '	R' → logprob: -18.163726806640625
    9. '0' → logprob: -19.538726806640625
    10. '(R' → logprob: -20.038726806640625

Token 381: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.26566994190216064
    2. ' ==' → logprob: -1.5156699419021606
    3. '<=' → logprob: -4.390669822692871
    4. ' <=' → logprob: -7.015669822692871
    5. '==-' → logprob: -8.140669822692871
    6. '=' → logprob: -10.265669822692871
    7. '<' → logprob: -11.265669822692871
    8. '==
' → logprob: -12.265669822692871
    9. '0' → logprob: -12.515669822692871
    10. ' ' → logprob: -13.015669822692871

Token 382: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.008615042082965374
    2. ' ' → logprob: -4.758615016937256
    3. '-' → logprob: -14.883615493774414
    4. ' -' → logprob: -16.758615493774414
    5. '  ' → logprob: -17.758615493774414
    6. '	' → logprob: -18.383615493774414
    7. ' ' → logprob: -18.508615493774414
    8. '０' → logprob: -18.883615493774414
    9. '=' → logprob: -19.133615493774414
    10. '```' → logprob: -19.133615493774414

Token 383: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06197709962725639
    2. ':
' → logprob: -2.8119771480560303
    3. ':return' → logprob: -11.93697738647461
    4. ':
' → logprob: -13.81197738647461
    5. '   ' → logprob: -14.56197738647461
    6. ' :' → logprob: -15.06197738647461
    7. '.' → logprob: -15.31197738647461
    8. '       ' → logprob: -15.81197738647461
    9. ':

' → logprob: -15.93697738647461
    10. '):
' → logprob: -16.06197738647461

Token 384: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19680079817771912
    2. '           ' → logprob: -1.9468008279800415
    3. '   ' → logprob: -3.446800708770752
    4. '
' → logprob: -7.196800708770752
    5. ':' → logprob: -7.321800708770752
    6. '<|end|>' → logprob: -7.446800708770752
    7. '	' → logprob: -7.696800708770752
    8. ':
' → logprob: -7.821800708770752
    9. ',' → logprob: -8.57180118560791
    10. '     ' → logprob: -8.69680118560791

Token 385: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.0727737694978714
    2. ' break' → logprob: -2.8227736949920654
    3. 'return' → logprob: -4.5727739334106445
    4. '	break' → logprob: -8.197773933410645
    5. ' return' → logprob: -9.572773933410645
    6. '       ' → logprob: -9.697773933410645
    7. '           ' → logprob: -11.822773933410645
    8. '_break' → logprob: -13.572773933410645
    9. '               ' → logprob: -13.697773933410645
    10. '   ' → logprob: -14.197773933410645

Token 386: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11264902353286743
    2. '<|end|>' → logprob: -2.3626489639282227
    3. '
' → logprob: -4.737648963928223
    4. '        
' → logprob: -6.112648963928223
    5. '```' → logprob: -7.987648963928223
    6. '<|end|>' → logprob: -8.237648963928223
    7. ',' → logprob: -8.362648963928223
    8. '   ' → logprob: -9.487648963928223
    9. 'newline' → logprob: -9.612648963928223
    10. '		
' → logprob: -9.987648963928223

Token 387: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00023047674039844424
    2. '        
' → logprob: -9.62523078918457
    3. '<|end|>' → logprob: -9.62523078918457
    4. '
' → logprob: -10.25023078918457
    5. '   ' → logprob: -10.37523078918457
    6. '```' → logprob: -11.37523078918457
    7. '	' → logprob: -12.75023078918457
    8. ',' → logprob: -12.75023078918457
    9. '           ' → logprob: -13.00023078918457
    10. ')' → logprob: -13.50023078918457

Token 388: ' W' (ID: 486)
  Prédit: ' W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' W' → logprob: -0.4100801348686218
    2. 'W' (adapté à ' W') → logprob: -1.7850801944732666
    3. '       ' → logprob: -1.7850801944732666
    4. '	W' → logprob: -8.285079956054688
    5. '   ' → logprob: -8.535079956054688
    6. ' ' → logprob: -9.535079956054688
    7. ',W' → logprob: -10.035079956054688
    8. '        
' → logprob: -10.285079956054688
    9. ',' → logprob: -10.785079956054688
    10. '	' → logprob: -11.035079956054688

Token 389: '1' (ID: 16)
  Prédit: ',H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',H' → logprob: -0.006783219985663891
    2. ',' → logprob: -5.0067830085754395
    3. '1' → logprob: -9.881783485412598
    4. ',Y' → logprob: -12.381783485412598
    5. ',int' → logprob: -12.506783485412598
    6. ' ,' → logprob: -12.881783485412598
    7. ',h' → logprob: -13.506783485412598
    8. ',W' → logprob: -13.756783485412598
    9. 'H' → logprob: -14.131783485412598
    10. ',I' → logprob: -14.381783485412598

Token 390: ',H' (ID: 94400)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2583104372024536
    2. ',H' → logprob: -1.6333104372024536
    3. ',W' → logprob: -3.508310317993164
    4. ',Y' → logprob: -6.633310317993164
    5. ' ,' → logprob: -8.008310317993164
    6. ',int' → logprob: -8.008310317993164
    7. '=' → logprob: -9.508310317993164
    8. ',Q' → logprob: -10.008310317993164
    9. ',E' → logprob: -10.133310317993164
    10. ',N' → logprob: -10.508310317993164

Token 391: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0759323313832283
    2. ',' → logprob: -2.700932264328003
    3. ',W' → logprob: -5.825932502746582
    4. '=' → logprob: -6.075932502746582
    5. '=int' → logprob: -8.200932502746582
    6. ',int' → logprob: -9.450932502746582
    7. ',R' → logprob: -9.700932502746582
    8. ' =' → logprob: -10.200932502746582
    9. ' ,' → logprob: -10.200932502746582
    10. ',M' → logprob: -10.450932502746582

Token 392: ',X' (ID: 83943)
  Prédit: ',W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',W' → logprob: -0.36400821805000305
    2. '=' → logprob: -1.2390081882476807
    3. ',H' → logprob: -5.11400842666626
    4. ',' → logprob: -5.11400842666626
    5. ',R' → logprob: -6.98900842666626
    6. ',X' → logprob: -7.36400842666626
    7. ' =' → logprob: -7.36400842666626
    8. '=W' → logprob: -8.114007949829102
    9. ',Q' → logprob: -8.489007949829102
    10. ',Y' → logprob: -8.739007949829102

Token 393: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.07329890131950378
    2. ',' → logprob: -2.823298931121826
    3. ',Y' → logprob: -4.573298931121826
    4. ',W' → logprob: -7.573298931121826
    5. ' ,' → logprob: -9.073298454284668
    6. '=' → logprob: -9.073298454284668
    7. ',Q' → logprob: -10.698298454284668
    8. '2' → logprob: -10.823298454284668
    9. ',M' → logprob: -10.823298454284668
    10. ',H' → logprob: -10.948298454284668

Token 394: ',Y' (ID: 71464)
  Prédit: ',Y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',Y' → logprob: -0.2138373702764511
    2. ',' → logprob: -1.7138373851776123
    3. ',H' → logprob: -5.088837146759033
    4. ',W' → logprob: -5.588837146759033
    5. '=' → logprob: -6.963837146759033
    6. ' ,' → logprob: -7.838837146759033
    7. ',int' → logprob: -8.588837623596191
    8. '1' → logprob: -8.588837623596191
    9. ',y' → logprob: -9.338837623596191
    10. '=int' → logprob: -9.463837623596191

Token 395: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00020699729793705046
    2. ',' → logprob: -8.50020694732666
    3. '=' → logprob: -12.87520694732666
    4. ' ' → logprob: -15.12520694732666
    5. ' ,' → logprob: -15.25020694732666
    6. '
' → logprob: -16.375207901000977
    7. '```' → logprob: -16.625207901000977
    8. '   ' → logprob: -17.000207901000977
    9. ',
' → logprob: -17.125207901000977
    10. ')' → logprob: -17.125207901000977

Token 396: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0038715696427971125
    2. ' =' → logprob: -6.753871440887451
    3. '=input' → logprob: -6.753871440887451
    4. ',W' → logprob: -7.378871440887451
    5. ',' → logprob: -7.628871440887451
    6. '=list' → logprob: -8.25387191772461
    7. ',map' → logprob: -9.62887191772461
    8. '=W' → logprob: -10.75387191772461
    9. '=int' → logprob: -11.25387191772461
    10. ',N' → logprob: -11.87887191772461

Token 397: 'map' (ID: 3726)
  Prédit: 'map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.4740777611732483
    2. ' map' → logprob: -0.9740777611732483
    3. '	map' → logprob: -14.849078178405762
    4. '[' → logprob: -15.474078178405762
    5. 'list' → logprob: -16.474077224731445
    6. '(map' → logprob: -16.974077224731445
    7. '   ' → logprob: -17.599077224731445
    8. 'm' → logprob: -17.849077224731445
    9. ' ' → logprob: -18.974077224731445
    10. '
' → logprob: -18.974077224731445

Token 398: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0002111694193445146
    2. '(' → logprob: -9.000210762023926
    3. 'int' → logprob: -9.625210762023926
    4. '(
' → logprob: -12.375210762023926
    5. '=int' → logprob: -12.500210762023926
    6. '<int' → logprob: -12.750210762023926
    7. ' (' → logprob: -13.000210762023926
    8. '(str' → logprob: -13.125210762023926
    9. ',int' → logprob: -13.250210762023926
    10. '(input' → logprob: -13.250210762023926

Token 399: ',input' (ID: 123014)
  Prédit: ',input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.03427991643548012
    2. ',' → logprob: -3.4092798233032227
    3. ',int' → logprob: -7.784279823303223
    4. '(input' → logprob: -8.784279823303223
    5. 'input' → logprob: -10.159279823303223
    6. ' ,' → logprob: -11.659279823303223
    7. '(),' → logprob: -12.034279823303223
    8. '(' → logprob: -12.284279823303223
    9. ',(' → logprob: -13.034279823303223
    10. ',line' → logprob: -13.659279823303223

Token 400: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -7.107425062713446e-06
    2. '()' → logprob: -11.875006675720215
    3. '())' → logprob: -16.62500762939453
    4. '()
' → logprob: -18.12500762939453
    5. ' ().' → logprob: -19.25000762939453
    6. ')' → logprob: -20.50000762939453
    7. '().
' → logprob: -20.50000762939453
    8. '.split' → logprob: -20.75000762939453
    9. '.readline' → logprob: -21.00000762939453
    10. '().__' → logprob: -21.37500762939453

Token 401: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00010819212911883369
    2. 'strip' → logprob: -9.250107765197754
    3. '().' → logprob: -11.875107765197754
    4. 'rstrip' → logprob: -12.875107765197754
    5. ' split' → logprob: -13.125107765197754
    6. '(split' → logprob: -14.750107765197754
    7. 'spl' → logprob: -17.00010871887207
    8. '()' → logprob: -17.12510871887207
    9. ')' → logprob: -17.62510871887207
    10. '.split' → logprob: -17.62510871887207

Token 402: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0022473193239420652
    2. ')' → logprob: -6.377247333526611
    3. '()' → logprob: -7.627247333526611
    4. '())
' → logprob: -9.877246856689453
    5. '(' → logprob: -12.752246856689453
    6. '().' → logprob: -13.377246856689453
    7. '()))' → logprob: -14.377246856689453
    8. ' ())' → logprob: -14.502246856689453
    9. '(),' → logprob: -15.002246856689453
    10. '()
' → logprob: -15.752246856689453

Token 403: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0738292932510376
    2. 'W' → logprob: -3.448829174041748
    3. 'levels' → logprob: -3.573829174041748
    4. ' levels' → logprob: -5.323829174041748
    5. '<|end|>' → logprob: -5.698829174041748
    6. ' W' → logprob: -6.073829174041748
    7. ')' → logprob: -8.198829650878906
    8. 'w' → logprob: -9.323829650878906
    9. '        
' → logprob: -9.698829650878906
    10. ',' → logprob: -9.823829650878906

Token 404: ' levels' (ID: 8374)
  Prédit: 'levels'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'levels' (adapté à ' levels') → logprob: -0.00034583290107548237
    2. ' levels' → logprob: -8.000346183776855
    3. 'W' → logprob: -12.000346183776855
    4. 'layers' → logprob: -13.625346183776855
    5. 'level' → logprob: -14.375346183776855
    6. 's' → logprob: -14.500346183776855
    7. '   ' → logprob: -14.875346183776855
    8. '```' → logprob: -15.125346183776855
    9. '       ' → logprob: -15.375346183776855
    10. '[' → logprob: -15.500346183776855

Token 405: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.01868092268705368
    2. '_' → logprob: -4.268681049346924
    3. '=' → logprob: -5.518681049346924
    4. '=_' → logprob: -8.768680572509766
    5. '2' → logprob: -9.393680572509766
    6. '=[]' → logprob: -9.643680572509766
    7. '[' → logprob: -9.768680572509766
    8. '=[' → logprob: -10.143680572509766
    9. ' =' → logprob: -10.518680572509766
    10. '_=' → logprob: -10.893680572509766

Token 406: '=[' (ID: 13370)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2993291914463043
    2. '=[' → logprob: -2.0493292808532715
    3. '=[]' → logprob: -2.0493292808532715
    4. '=[]
' → logprob: -7.7993292808532715
    5. '=list' → logprob: -8.174328804016113
    6. ' =' → logprob: -9.049328804016113
    7. '=[[' → logprob: -9.424328804016113
    8. '[' → logprob: -9.424328804016113
    9. '=[]
' → logprob: -10.799328804016113
    10. '={}' → logprob: -11.049328804016113

Token 407: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.00012833021173719317
    2. ' list' → logprob: -9.000128746032715
    3. '[list' → logprob: -12.250128746032715
    4. '[' → logprob: -16.1251277923584
    5. '(list' → logprob: -18.2501277923584
    6. '=list' → logprob: -18.2501277923584
    7. '	list' → logprob: -18.5001277923584
    8. ':list' → logprob: -20.0001277923584
    9. '[]' → logprob: -20.6251277923584
    10. ']' → logprob: -20.6251277923584

Token 408: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -2.176947600673884e-05
    2. 'map' → logprob: -10.750021934509277
    3. '(' → logprob: -15.375021934509277
    4. '(int' → logprob: -16.75002098083496
    5. '()' → logprob: -17.75002098083496
    6. ' map' → logprob: -18.00002098083496
    7. '	map' → logprob: -19.25002098083496
    8. '.map' → logprob: -20.12502098083496
    9. ',map' → logprob: -20.25002098083496
    10. '(
' → logprob: -20.37502098083496

Token 409: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.030384046956896782
    2. 'int' → logprob: -3.530384063720703
    3. ',int' → logprob: -8.530384063720703
    4. ']int' → logprob: -8.780384063720703
    5. '[int' → logprob: -9.280384063720703
    6. '=int' → logprob: -9.530384063720703
    7. '<int' → logprob: -9.905384063720703
    8. ' int' → logprob: -9.905384063720703
    9. '	int' → logprob: -12.655384063720703
    10. ')' → logprob: -12.655384063720703

Token 410: ',input' (ID: 123014)
  Prédit: ',input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.04504895210266113
    2. '(input' → logprob: -3.170048952102661
    3. ',' → logprob: -6.420048713684082
    4. 'input' → logprob: -8.045048713684082
    5. ',int' → logprob: -10.295048713684082
    6. '=input' → logprob: -10.295048713684082
    7. '[input' → logprob: -11.670048713684082
    8. '<input' → logprob: -11.920048713684082
    9. ' input' → logprob: -11.920048713684082
    10. ' ,' → logprob: -13.295048713684082

Token 411: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -3.249780638725497e-05
    2. '()' → logprob: -10.500032424926758
    3. '.' → logprob: -13.250032424926758
    4. '))' → logprob: -14.000032424926758
    5. '()))' → logprob: -14.250032424926758
    6. '.readline' → logprob: -14.500032424926758
    7. ' ().' → logprob: -15.125032424926758
    8. '(' → logprob: -15.125032424926758
    9. '.split' → logprob: -15.250032424926758
    10. '()
' → logprob: -16.125032424926758

Token 412: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0001907855912577361
    2. 'strip' → logprob: -8.750190734863281
    3. 'rstrip' → logprob: -10.500190734863281
    4. '(split' → logprob: -12.625190734863281
    5. ' split' → logprob: -13.625190734863281
    6. 'plit' → logprob: -16.25019073486328
    7. 's' → logprob: -17.00019073486328
    8. '.split' → logprob: -17.12519073486328
    9. '```' → logprob: -17.12519073486328
    10. 'sys' → logprob: -17.75019073486328

Token 413: '()))' (ID: 16829)
  Prédit: '()))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.06686242669820786
    2. '))' → logprob: -3.3168623447418213
    3. '()' → logprob: -3.5668623447418213
    4. '().' → logprob: -9.191862106323242
    5. '()))
' → logprob: -10.566862106323242
    6. '())' → logprob: -11.316862106323242
    7. '()
' → logprob: -11.691862106323242
    8. '(' → logprob: -11.816862106323242
    9. '()[' → logprob: -12.566862106323242
    10. '()));' → logprob: -13.816862106323242

Token 414: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.14202190935611725
    2. ')' → logprob: -2.892021894454956
    3. ' for' → logprob: -3.017021894454956
    4. 'for' → logprob: -3.642021894454956
    5. '())' → logprob: -6.392022132873535
    6. ')]' → logprob: -10.517022132873535
    7. '	for' → logprob: -11.142022132873535
    8. '   ' → logprob: -11.267022132873535
    9. '       ' → logprob: -11.767022132873535
    10. '()
' → logprob: -11.767022132873535

Token 415: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.1498435139656067
    2. ' range' → logprob: -2.524843454360962
    3. 'range' → logprob: -2.899843454360962
    4. ' _' → logprob: -5.899843692779541
    5. ' in' → logprob: -7.024843692779541
    6. '_range' → logprob: -8.024843215942383
    7. 'in' → logprob: -10.024843215942383
    8. '(range' → logprob: -10.649843215942383
    9. 'i' → logprob: -11.649843215942383
    10. '	range' → logprob: -12.024843215942383

Token 416: ' in' (ID: 306)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.3189309239387512
    2. 'range' → logprob: -1.3189308643341064
    3. ' in' → logprob: -5.1939311027526855
    4. '(range' → logprob: -9.943930625915527
    5. '.range' → logprob: -10.693930625915527
    6. '_range' → logprob: -11.068930625915527
    7. 'in' → logprob: -11.818930625915527
    8. '	range' → logprob: -12.193930625915527
    9. 'Range' → logprob: -12.818930625915527
    10. '_' → logprob: -14.693930625915527

Token 417: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.005233882926404476
    2. ' range' → logprob: -5.2552337646484375
    3. '(range' → logprob: -15.755233764648438
    4. '.range' → logprob: -19.005233764648438
    5. '	range' → logprob: -19.005233764648438
    6. '[' → logprob: -20.130233764648438
    7. '_range' → logprob: -21.630233764648438
    8. 'r' → logprob: -22.630233764648438
    9. '   ' → logprob: -22.755233764648438
    10. ' ' → logprob: -23.255233764648438

Token 418: '(H' (ID: 20904)
  Prédit: '(H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -0.0018282189266756177
    2. 'H' → logprob: -6.376828193664551
    3. 'range' → logprob: -10.12682819366455
    4. '(W' → logprob: -10.62682819366455
    5. ' range' → logprob: -10.75182819366455
    6. ' (' → logprob: -10.87682819366455
    7. '(range' → logprob: -11.62682819366455
    8. ' H' → logprob: -11.62682819366455
    9. '(' → logprob: -13.25182819366455
    10. '   ' → logprob: -14.87682819366455

Token 419: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.4378848391061183e-05
    2. ')]' → logprob: -11.250014305114746
    3. ')' → logprob: -14.500014305114746
    4. '2' → logprob: -14.875014305114746
    5. ')]
' → logprob: -15.375014305114746
    6. ')])' → logprob: -15.750014305114746
    7. ')])
' → logprob: -17.375015258789062
    8. '(' → logprob: -17.500015258789062
    9. '_' → logprob: -17.750015258789062
    10. '```' → logprob: -18.125015258789062

Token 420: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -2.816093228830141e-06
    2. ')' → logprob: -13.50000286102295
    3. ']' → logprob: -14.50000286102295
    4. ')]
' → logprob: -15.37500286102295
    5. ' )' → logprob: -15.50000286102295
    6. ')])' → logprob: -16.125001907348633
    7. '))' → logprob: -16.375001907348633
    8. '')]' → logprob: -16.625001907348633
    9. '])]' → logprob: -16.750001907348633
    10. '])' → logprob: -17.000001907348633

Token 421: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013446318916976452
    2. '<|end|>' → logprob: -4.63844633102417
    3. ' W' → logprob: -6.51344633102417
    4. 'W' → logprob: -6.51344633102417
    5. '   ' → logprob: -7.88844633102417
    6. '	W' → logprob: -9.263445854187012
    7. '```' → logprob: -9.888445854187012
    8. ' ' → logprob: -10.138445854187012
    9. '        
' → logprob: -10.388445854187012
    10. '<|end|>' → logprob: -10.388445854187012

Token 422: ' W' (ID: 486)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' (adapté à ' W') → logprob: -0.0012640443164855242
    2. ' W' → logprob: -7.2512640953063965
    3. '       ' → logprob: -7.5012640953063965
    4. '   ' → logprob: -13.501263618469238
    5. '	W' → logprob: -16.501264572143555
    6. 'w' → logprob: -18.376264572143555
    7. ' ' → logprob: -18.876264572143555
    8. '
' → logprob: -19.626264572143555
    9. ',W' → logprob: -19.626264572143555
    10. '           ' → logprob: -19.751264572143555

Token 423: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.4855663721391466e-05
    2. ',' → logprob: -11.375015258789062
    3. ' ' → logprob: -13.375015258789062
    4. '1' → logprob: -13.750015258789062
    5. ',
' → logprob: -15.375015258789062
    6. '=' → logprob: -15.375015258789062
    7. ' ,' → logprob: -16.875015258789062
    8. '
' → logprob: -17.000015258789062
    9. '```' → logprob: -17.250015258789062
    10. '２' → logprob: -17.625015258789062

Token 424: ',H' (ID: 94400)
  Prédit: ',H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',H' → logprob: -5.383526149671525e-05
    2. ',' → logprob: -9.875053405761719
    3. ',int' → logprob: -13.375053405761719
    4. ' ,' → logprob: -14.375053405761719
    5. 'H' → logprob: -16.50005340576172
    6. ',h' → logprob: -16.75005340576172
    7. ',W' → logprob: -17.75005340576172
    8. ',I' → logprob: -18.25005340576172
    9. ',Http' → logprob: -18.87505340576172
    10. ',Q' → logprob: -19.12505340576172

Token 425: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00033760786755010486
    2. ',' → logprob: -8.000337600708008
    3. '1' → logprob: -13.625337600708008
    4. ' ' → logprob: -14.875337600708008
    5. ' ,' → logprob: -15.000337600708008
    6. ',
' → logprob: -15.750337600708008
    7. '```' → logprob: -16.250337600708008
    8. ',int' → logprob: -17.250337600708008
    9. ',user' → logprob: -17.750337600708008
    10. '[' → logprob: -18.000337600708008

Token 426: ',X' (ID: 83943)
  Prédit: ',X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',X' → logprob: -0.16113905608654022
    2. '=' → logprob: -1.9111390113830566
    3. ',Y' → logprob: -7.286139011383057
    4. ',' → logprob: -9.036139488220215
    5. ',map' → logprob: -10.036139488220215
    6. 'X' → logprob: -10.411139488220215
    7. '=X' → logprob: -11.411139488220215
    8. ' =' → logprob: -11.786139488220215
    9. ' ,' → logprob: -12.536139488220215
    10. ',M' → logprob: -12.661139488220215

Token 427: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -7.584239938296378e-06
    2. ',' → logprob: -12.000007629394531
    3. ' ' → logprob: -13.625007629394531
    4. '1' → logprob: -16.87500762939453
    5. '```' → logprob: -17.12500762939453
    6. ' ,' → logprob: -17.25000762939453
    7. '=' → logprob: -17.50000762939453
    8. '   ' → logprob: -17.62500762939453
    9. '₂' → logprob: -18.50000762939453
    10. '  ' → logprob: -19.00000762939453

Token 428: ',Y' (ID: 71464)
  Prédit: ',Y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',Y' → logprob: -0.007675130385905504
    2. '2' → logprob: -4.8826751708984375
    3. ',' → logprob: -10.007675170898438
    4. ' ,' → logprob: -11.632675170898438
    5. 'Y' → logprob: -11.882675170898438
    6. ',int' → logprob: -12.882675170898438
    7. '1' → logprob: -13.757675170898438
    8. ',X' → logprob: -13.757675170898438
    9. ',y' → logprob: -13.882675170898438
    10. ',Z' → logprob: -14.257675170898438

Token 429: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0003631137660704553
    2. '1' → logprob: -8.00036334991455
    3. ',' → logprob: -10.87536334991455
    4. ' ' → logprob: -12.25036334991455
    5. '
' → logprob: -13.62536334991455
    6. '[' → logprob: -14.25036334991455
    7. '   ' → logprob: -14.25036334991455
    8. '```' → logprob: -15.00036334991455
    9. ',int' → logprob: -15.25036334991455
    10. '=' → logprob: -15.87536334991455

Token 430: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -4.320199877838604e-07
    2. ' =' → logprob: -15.25
    3. ',map' → logprob: -16.625
    4. 'map' → logprob: -19.0
    5. '=list' → logprob: -19.375
    6. ')=' → logprob: -20.875
    7. '=input' → logprob: -21.125
    8. '=int' → logprob: -21.5
    9. '=line' → logprob: -22.0
    10. '=sys' → logprob: -22.375

Token 431: 'map' (ID: 3726)
  Prédit: 'map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.0007102862582542002
    2. ' map' → logprob: -7.250710487365723
    3. '   ' → logprob: -15.125710487365723
    4. '	map' → logprob: -17.125709533691406
    5. '    ' → logprob: -17.500709533691406
    6. '  ' → logprob: -19.000709533691406
    7. ' ' → logprob: -19.250709533691406
    8. '       ' → logprob: -19.750709533691406
    9. '
' → logprob: -20.500709533691406
    10. '     ' → logprob: -20.625709533691406

Token 432: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -3.650518920039758e-06
    2. 'int' → logprob: -13.000003814697266
    3. '(map' → logprob: -14.250003814697266
    4. '=int' → logprob: -14.750003814697266
    5. '[int' → logprob: -16.625003814697266
    6. '<int' → logprob: -17.250003814697266
    7. ' (' → logprob: -17.500003814697266
    8. ',int' → logprob: -17.625003814697266
    9. ' int' → logprob: -18.250003814697266
    10. 'map' → logprob: -19.000003814697266

Token 433: ',input' (ID: 123014)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.6573148965835571
    2. '(input' → logprob: -1.6573148965835571
    3. ',input' → logprob: -1.6573148965835571
    4. ',int' → logprob: -2.5323147773742676
    5. 'int' → logprob: -4.532314777374268
    6. 'input' → logprob: -4.657314777374268
    7. '=input' → logprob: -8.032315254211426
    8. ',' → logprob: -8.782315254211426
    9. '=int' → logprob: -8.907315254211426
    10. '<int' → logprob: -10.407315254211426

Token 434: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00012928384239785373
    2. '()' → logprob: -9.000129699707031
    3. '()
' → logprob: -13.125129699707031
    4. '.readline' → logprob: -13.125129699707031
    5. '())' → logprob: -14.625129699707031
    6. '()(' → logprob: -15.125129699707031
    7. '=input' → logprob: -15.625129699707031
    8. '()[' → logprob: -15.750129699707031
    9. '.' → logprob: -15.875129699707031
    10. '()).' → logprob: -16.25012969970703

Token 435: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -2.2200749754119897e-06
    2. '(split' → logprob: -13.500001907348633
    3. 'sys' → logprob: -15.250001907348633
    4. ' split' → logprob: -15.750001907348633
    5. '.split' → logprob: -16.000001907348633
    6. 'strip' → logprob: -16.125001907348633
    7. 'skip' → logprob: -16.375001907348633
    8. 'input' → logprob: -16.375001907348633
    9. '().' → logprob: -17.375001907348633
    10. 'spl' → logprob: -17.875001907348633

Token 436: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.004704595543444157
    2. '())
' → logprob: -5.754704475402832
    3. ')' → logprob: -6.504704475402832
    4. '()' → logprob: -11.129704475402832
    5. '(),' → logprob: -12.504704475402832
    6. '());' → logprob: -12.629704475402832
    7. '()
' → logprob: -13.129704475402832
    8. '()),' → logprob: -13.254704475402832
    9. ')
' → logprob: -13.629704475402832
    10. ' ())' → logprob: -13.754704475402832

Token 437: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 438: ' levels' (ID: 8374)
  Prédit: 'levels'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'levels' (adapté à ' levels') → logprob: -1.318681188422488e-05
    2. ' levels' → logprob: -11.25001335144043
    3. 'level' → logprob: -17.12501335144043
    4. '
' → logprob: -17.75001335144043
    5. '```' → logprob: -17.75001335144043
    6. '       ' → logprob: -17.87501335144043
    7. '[
' → logprob: -20.12501335144043
    8. '_levels' → logprob: -20.50001335144043
    9. 'lines' → logprob: -20.75001335144043
    10. '[' → logprob: -20.87501335144043

Token 439: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.27099974633893e-05
    2. '_' → logprob: -11.375012397766113
    3. '₂' → logprob: -15.250012397766113
    4. '```' → logprob: -15.250012397766113
    5. '=' → logprob: -15.750012397766113
    6. '[' → logprob: -16.37501335144043
    7. '２' → logprob: -16.37501335144043
    8. ' ' → logprob: -16.50001335144043
    9. '   ' → logprob: -16.75001335144043
    10. '=[' → logprob: -16.75001335144043

Token 440: '=[' (ID: 13370)
  Prédit: '=['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=[' → logprob: -4.191489642835222e-05
    2. '=' → logprob: -10.250041961669922
    3. '=[[' → logprob: -12.125041961669922
    4. ' =' → logprob: -15.000041961669922
    5. ' =[' → logprob: -15.250041961669922
    6. '[' → logprob: -15.250041961669922
    7. '=[
' → logprob: -16.250041961669922
    8. '.append' → logprob: -16.375041961669922
    9. '=[]' → logprob: -16.750041961669922
    10. '=[]
' → logprob: -18.125041961669922

Token 441: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.0002072357019642368
    2. '[list' → logprob: -8.50020694732666
    3. ' list' → logprob: -12.50020694732666
    4. '(list' → logprob: -17.500207901000977
    5. '[' → logprob: -18.500207901000977
    6. '=list' → logprob: -20.625207901000977
    7. '	list' → logprob: -21.125207901000977
    8. '.list' → logprob: -21.500207901000977
    9. '[List' → logprob: -21.875207901000977
    10. ':list' → logprob: -22.500207901000977

Token 442: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.10261894762516022
    2. '(int' → logprob: -2.352618932723999
    3. 'map' → logprob: -6.102619171142578
    4. 'int' → logprob: -8.852619171142578
    5. '[int' → logprob: -11.852619171142578
    6. '<int' → logprob: -12.227619171142578
    7. ' (' → logprob: -12.477619171142578
    8. '(' → logprob: -12.977619171142578
    9. ' map' → logprob: -12.977619171142578
    10. '   ' → logprob: -13.102619171142578

Token 443: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.002500152215361595
    2. 'int' → logprob: -6.002500057220459
    3. '[int' → logprob: -12.127500534057617
    4. '=int' → logprob: -12.252500534057617
    5. '```' → logprob: -12.252500534057617
    6. '<int' → logprob: -12.752500534057617
    7. ']int' → logprob: -12.877500534057617
    8. ',int' → logprob: -13.002500534057617
    9. ')' → logprob: -14.752500534057617
    10. ' int' → logprob: -15.002500534057617

Token 444: ',input' (ID: 123014)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.005769992247223854
    2. '=int' → logprob: -5.630770206451416
    3. ',int' → logprob: -6.380770206451416
    4. 'int' → logprob: -8.005769729614258
    5. '(input' → logprob: -9.380769729614258
    6. '<int' → logprob: -10.505769729614258
    7. ',' → logprob: -11.630769729614258
    8. '[int' → logprob: -12.255769729614258
    9. 'input' → logprob: -12.755769729614258
    10. '   ' → logprob: -13.005769729614258

Token 445: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -6.575563020305708e-05
    2. '.split' → logprob: -10.125065803527832
    3. '()' → logprob: -11.250065803527832
    4. '.readline' → logprob: -12.125065803527832
    5. '.' → logprob: -13.500065803527832
    6. '```' → logprob: -13.750065803527832
    7. '.read' → logprob: -13.875065803527832
    8. 'sys' → logprob: -14.625065803527832
    9. '()
' → logprob: -15.125065803527832
    10. '   ' → logprob: -15.250065803527832

Token 446: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00038134094211272895
    2. 'sys' → logprob: -8.000381469726562
    3. 'input' → logprob: -11.000381469726562
    4. '(split' → logprob: -11.750381469726562
    5. '.split' → logprob: -12.000381469726562
    6. 'int' → logprob: -12.500381469726562
    7. 'skip' → logprob: -12.875381469726562
    8. 'strip' → logprob: -13.000381469726562
    9. ')' → logprob: -13.375381469726562
    10. '```' → logprob: -13.875381469726562

Token 447: '()))' (ID: 16829)
  Prédit: '()))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.0002398938377154991
    2. '))' → logprob: -9.125240325927734
    3. '()' → logprob: -9.375240325927734
    4. '())' → logprob: -10.250240325927734
    5. '()))
' → logprob: -12.000240325927734
    6. '())).' → logprob: -13.625240325927734
    7. '()[' → logprob: -13.875240325927734
    8. '().' → logprob: -14.250240325927734
    9. '(' → logprob: -14.625240325927734
    10. '()
' → logprob: -14.875240325927734

Token 448: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.07896777987480164
    2. 'for' → logprob: -2.578967809677124
    3. ')' → logprob: -9.578968048095703
    4. '()' → logprob: -11.703968048095703
    5. '	for' → logprob: -15.203968048095703
    6. '       ' → logprob: -16.203968048095703
    7. '        ' → logprob: -16.328968048095703
    8. ' )' → logprob: -16.453968048095703
    9. 'input' → logprob: -17.328968048095703
    10. ' ' → logprob: -17.328968048095703

Token 449: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.17456717789173126
    2. ' range' → logprob: -2.424567222595215
    3. ' _' → logprob: -2.674567222595215
    4. '_range' → logprob: -6.049567222595215
    5. 'range' → logprob: -8.049567222595215
    6. '_H' → logprob: -11.049567222595215
    7. '_i' → logprob: -12.049567222595215
    8. '_s' → logprob: -12.299567222595215
    9. ' ' → logprob: -12.674567222595215
    10. '_input' → logprob: -12.799567222595215

Token 450: ' in' (ID: 306)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5451165437698364
    2. ' in' → logprob: -1.4201165437698364
    3. 'in' → logprob: -2.545116424560547
    4. 'range' → logprob: -3.670116424560547
    5. ' _' → logprob: -4.420116424560547
    6. '_s' → logprob: -4.795116424560547
    7. 'input' → logprob: -5.045116424560547
    8. ' range' → logprob: -5.295116424560547
    9. '_range' → logprob: -5.295116424560547
    10. 'int' → logprob: -5.295116424560547

Token 451: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.20142202079296112
    2. ' range' → logprob: -1.7014219760894775
    3. '(range' → logprob: -11.951421737670898
    4. '_range' → logprob: -13.451421737670898
    5. '
' → logprob: -14.826421737670898
    6. '(' → logprob: -15.451421737670898
    7. '_' → logprob: -16.2014217376709
    8. '(H' → logprob: -17.2014217376709
    9. '.range' → logprob: -17.3264217376709
    10. ' ' → logprob: -17.3264217376709

Token 452: '(H' (ID: 20904)
  Prédit: '(H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -3.650518920039758e-06
    2. ' (' → logprob: -14.000003814697266
    3. 'range' → logprob: -14.125003814697266
    4. 'H' → logprob: -14.250003814697266
    5. '(int' → logprob: -14.375003814697266
    6. ' range' → logprob: -14.875003814697266
    7. '(' → logprob: -15.875003814697266
    8. ')(' → logprob: -16.125003814697266
    9. '(range' → logprob: -16.250003814697266
    10. ')' → logprob: -16.750003814697266

Token 453: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.696889623621246e-06
    2. '1' → logprob: -12.87500286102295
    3. '```' → logprob: -16.375001907348633
    4. '   ' → logprob: -18.000001907348633
    5. '``' → logprob: -18.125001907348633
    6. ')' → logprob: -18.125001907348633
    7. ' ' → logprob: -18.250001907348633
    8. '
' → logprob: -18.625001907348633
    9. '[' → logprob: -18.875001907348633
    10. ')
' → logprob: -19.125001907348633

Token 454: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.006744031794369221
    2. ']' → logprob: -5.006743907928467
    3. ')]
' → logprob: -11.506744384765625
    4. ')' → logprob: -11.506744384765625
    5. ' ]' → logprob: -12.631744384765625
    6. '])' → logprob: -12.881744384765625
    7. ']
' → logprob: -13.756744384765625
    8. ']]' → logprob: -14.381744384765625
    9. '])]' → logprob: -14.631744384765625
    10. ')]
' → logprob: -15.631744384765625

Token 455: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2263602465391159
    2. 's' → logprob: -1.6013602018356323
    3. ' s' → logprob: -7.726360321044922
    4. '   ' → logprob: -8.226360321044922
    5. 'S' → logprob: -9.476360321044922
    6. '<|end|>' → logprob: -9.476360321044922
    7. '	s' → logprob: -10.226360321044922
    8. '        
' → logprob: -11.351360321044922
    9. ' ' → logprob: -12.101360321044922
    10. ',s' → logprob: -12.476360321044922

Token 456: ' #' (ID: 1069)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.10865083336830139
    2. 'auth' → logprob: -2.3586509227752686
    3. 'l' → logprob: -6.2336506843566895
    4. 'low' → logprob: -6.8586506843566895
    5. 'R' → logprob: -7.3586506843566895
    6. 'max' → logprob: -7.3586506843566895
    7. 'S' → logprob: -7.4836506843566895
    8. 'res' → logprob: -7.6086506843566895
    9. 'for' → logprob: -7.6086506843566895
    10. 'lo' → logprob: -8.108651161193848

Token 457: ' get' (ID: 717)
  Prédit: 'auth'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'auth' → logprob: -0.630009651184082
    2. 'max' → logprob: -1.005009651184082
    3. 'res' → logprob: -3.755009651184082
    4. 'min' → logprob: -3.755009651184082
    5. 'low' → logprob: -4.005009651184082
    6. '#' → logprob: -5.130009651184082
    7. 'l' → logprob: -5.255009651184082
    8. 'lo' → logprob: -5.255009651184082
    9. '   ' → logprob: -5.505009651184082
    10. 'left' → logprob: -5.755009651184082

Token 458: ' unique' (ID: 5746)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.1616591364145279
    2. 'auth' → logprob: -3.0366592407226562
    3. 'res' → logprob: -3.2866592407226562
    4. 'min' → logprob: -3.2866592407226562
    5. '   ' → logprob: -5.411659240722656
    6. 'minimal' → logprob: -5.411659240722656
    7. 'levels' → logprob: -5.411659240722656
    8. ' max' → logprob: -5.536659240722656
    9. 'possible' → logprob: -5.661659240722656
    10. 'unique' → logprob: -6.536659240722656

Token 459: ' levels' (ID: 8374)
  Prédit: '_levels'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_levels' → logprob: -0.008587506599724293
    2. 'levels' → logprob: -5.00858736038208
    3. '_' → logprob: -7.38358736038208
    4. '_auth' → logprob: -7.63358736038208
    5. ' levels' → logprob: -8.258587837219238
    6. 'A' → logprob: -8.383587837219238
    7. '1' → logprob: -8.758587837219238
    8. '```' → logprob: -10.508587837219238
    9. '_lv' → logprob: -10.633587837219238
    10. '_level' → logprob: -11.383587837219238

Token 460: ' +' (ID: 659)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.7816847562789917
    2. '   ' → logprob: -1.2816847562789917
    3. '=set' → logprob: -2.2816848754882812
    4. 's' → logprob: -3.2816848754882812
    5. 'levels' → logprob: -3.5316848754882812
    6. ' =' → logprob: -3.7816848754882812
    7. 'set' → logprob: -3.9066848754882812
    8. 'u' → logprob: -4.156684875488281
    9. '=' → logprob: -4.531684875488281
    10. '_' → logprob: -5.156684875488281

Token 461: ' ' (ID: 220)
  Prédit: 'levels'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'levels' → logprob: -0.8486252427101135
    2. ' levels' → logprob: -1.7236251831054688
    3. ' =' → logprob: -2.7236251831054688
    4. 'u' → logprob: -3.2236251831054688
    5. 'all' → logprob: -3.4736251831054688
    6. ' for' → logprob: -3.5986251831054688
    7. 'vals' → logprob: -3.5986251831054688
    8. '1' → logprob: -3.5986251831054688
    9. 's' → logprob: -3.7236251831054688
    10. 'sorted' → logprob: -3.9736251831054688

Token 462: '0' (ID: 15)
  Prédit: 'levels'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'levels' → logprob: -0.3178047835826874
    2. 'all' → logprob: -2.9428048133850098
    3. 'auth' → logprob: -2.9428048133850098
    4. 'unique' → logprob: -2.9428048133850098
    5. 'sorted' → logprob: -3.0678048133850098
    6. 'vals' → logprob: -3.8178048133850098
    7. 'level' → logprob: -5.19280481338501
    8. '
' → logprob: -5.19280481338501
    9. 'uniq' → logprob: -5.31780481338501
    10. 'la' → logprob: -5.44280481338501

Token 463: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.31402352452278137
    2. '       ' → logprob: -2.064023494720459
    3. 'levels' → logprob: -2.689023494720459
    4. ' levels' → logprob: -3.189023494720459
    5. '
' → logprob: -4.189023494720459
    6. ' for' → logprob: -4.939023494720459
    7. ' in' → logprob: -5.439023494720459
    8. '    
' → logprob: -7.064023494720459
    9. 'for' → logprob: -7.314023494720459
    10. ' =' → logprob: -7.439023494720459

Token 464: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.034457992762327194
    2. '       ' → logprob: -4.784458160400391
    3. 'levels' → logprob: -4.784458160400391
    4. '
' → logprob: -5.034458160400391
    5. ' levels' → logprob: -5.534458160400391
    6. 'u' → logprob: -6.909458160400391
    7. '    
' → logprob: -7.034458160400391
    8. ' for' → logprob: -7.659458160400391
    9. ' unique' → logprob: -7.784458160400391
    10. '    ' → logprob: -7.784458160400391

Token 465: ' lev' (ID: 12114)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0190364122390747
    2. 'u' → logprob: -1.6440364122390747
    3. 'levels' → logprob: -1.6440364122390747
    4. 'unique' → logprob: -2.894036293029785
    5. ' levels' → logprob: -3.144036293029785
    6. ' unique' → logprob: -3.394036293029785
    7. ' u' → logprob: -3.394036293029785
    8. 'A' → logprob: -3.894036293029785
    9. 'ul' → logprob: -4.644036293029785
    10. 'a' → logprob: -5.019036293029785

Token 466: 's' (ID: 82)
  Prédit: 'els'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'els' → logprob: -0.0039886427111923695
    2. '1' → logprob: -5.628988742828369
    3. 'el' → logprob: -8.628988265991211
    4. 's' → logprob: -8.753988265991211
    5. '```' → logprob: -11.378988265991211
    6. '_' → logprob: -11.753988265991211
    7. '   ' → logprob: -12.003988265991211
    8. 'als' → logprob: -12.378988265991211
    9. ' els' → logprob: -12.378988265991211
    10. '[' → logprob: -12.628988265991211

Token 467: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.006155712064355612
    2. '_' → logprob: -5.881155490875244
    3. 'els' → logprob: -6.631155490875244
    4. 's' → logprob: -7.131155490875244
    5. 'el' → logprob: -8.256155967712402
    6. '=' → logprob: -8.256155967712402
    7. '=[' → logprob: -8.631155967712402
    8. '_set' → logprob: -8.756155967712402
    9. ' =' → logprob: -8.881155967712402
    10. '=set' → logprob: -9.256155967712402

Token 468: ' =' (ID: 314)
  Prédit: '=set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=set' → logprob: -0.13537420332431793
    2. '=' → logprob: -2.1353743076324463
    3. '=[' → logprob: -5.635374069213867
    4. '={' → logprob: -6.010374069213867
    5. '=list' → logprob: -6.260374069213867
    6. ' =' → logprob: -7.760374069213867
    7. 'set' → logprob: -11.260374069213867
    8. '=[]
' → logprob: -11.510374069213867
    9. '_set' → logprob: -11.510374069213867
    10. '=[]' → logprob: -11.885374069213867

Token 469: ' set' (ID: 920)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.9613357782363892
    2. 'set' → logprob: -1.2113357782363892
    3. '{' → logprob: -1.4613357782363892
    4. '[' → logprob: -2.4613356590270996
    5. 'list' → logprob: -6.2113356590271
    6. ' sorted' → logprob: -8.086336135864258
    7. ' set' → logprob: -8.586336135864258
    8. ' {' → logprob: -10.336336135864258
    9. ' [' → logprob: -10.836336135864258
    10. '[list' → logprob: -12.336336135864258

Token 470: '()
' (ID: 1234)
  Prédit: '(['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([' → logprob: -0.8074381351470947
    2. '()' → logprob: -1.3074381351470947
    3. '()
' → logprob: -1.3074381351470947
    4. '(level' → logprob: -5.182437896728516
    5. '(l' → logprob: -5.557437896728516
    6. '(' → logprob: -5.807437896728516
    7. '({' → logprob: -8.557437896728516
    8. '(range' → logprob: -8.932437896728516
    9. '()

' → logprob: -9.932437896728516
    10. '(it' → logprob: -10.557437896728516

Token 471: '       ' (ID: 309)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.034412145614624
    2. ' for' → logprob: -1.409412145614624
    3. '       ' → logprob: -1.784412145614624
    4. '<|end|>' → logprob: -1.909412145614624
    5. 'levels' → logprob: -3.409412145614624
    6. '        
' → logprob: -4.409412384033203
    7. '<|end|>' → logprob: -4.909412384033203
    8. '
' → logprob: -5.034412384033203
    9. '()
' → logprob: -5.284412384033203
    10. '(level' → logprob: -5.534412384033203

Token 472: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.5102307200431824
    2. 'lev' → logprob: -1.0102307796478271
    3. ' for' → logprob: -3.510230779647827
    4. ' lev' → logprob: -5.385230541229248
    5. '   ' → logprob: -7.385230541229248
    6. 'levels' → logprob: -8.385231018066406
    7. 'leve' → logprob: -10.760231018066406
    8. '0' → logprob: -10.885231018066406
    9. '	for' → logprob: -10.885231018066406
    10. 'le' → logprob: -10.885231018066406

Token 473: ' row' (ID: 5225)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.01837749592959881
    2. ' row' → logprob: -4.393377304077148
    3. 'i' → logprob: -5.768377304077148
    4. 'h' → logprob: -6.393377304077148
    5. 'y' → logprob: -7.143377304077148
    6. ' i' → logprob: -8.893377304077148
    7. 'r' → logprob: -9.768377304077148
    8. ' y' → logprob: -10.518377304077148
    9. ' h' → logprob: -10.893377304077148
    10. 'l' → logprob: -11.893377304077148

Token 474: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.001511408481746912
    2. 'in' → logprob: -6.501511573791504
    3. 'levels' → logprob: -12.251511573791504
    4. ' ' → logprob: -13.876511573791504
    5. ' levels' → logprob: -13.876511573791504
    6. 's' → logprob: -14.376511573791504
    7. '	in' → logprob: -15.251511573791504
    8. ' i' → logprob: -15.376511573791504
    9. 'level' → logprob: -15.626511573791504
    10. '_levels' → logprob: -15.876511573791504

Token 475: ' levels' (ID: 8374)
  Prédit: 'levels'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'levels' → logprob: -0.011056192219257355
    2. ' levels' → logprob: -4.511056423187256
    3. 'level' → logprob: -11.761055946350098
    4. 'range' → logprob: -15.261055946350098
    5. 'lev' → logprob: -15.386055946350098
    6. 'layers' → logprob: -16.636056900024414
    7. 'ranges' → logprob: -17.886056900024414
    8. '[' → logprob: -18.136056900024414
    9. '_levels' → logprob: -18.636056900024414
    10. '   ' → logprob: -18.761056900024414

Token 476: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00011510594777064398
    2. '2' → logprob: -9.750115394592285
    3. 'levels' → logprob: -10.750115394592285
    4. '   ' → logprob: -11.250115394592285
    5. 's' → logprob: -12.125115394592285
    6. ':
' → logprob: -12.625115394592285
    7. '[' → logprob: -12.875115394592285
    8. ' in' → logprob: -13.125115394592285
    9. 'for' → logprob: -13.500115394592285
    10. '```' → logprob: -13.750115394592285

Token 477: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.38884034752845764
    2. ':
' → logprob: -1.1388403177261353
    3. '   ' → logprob: -6.263840198516846
    4. ' in' → logprob: -11.138840675354004
    5. ' for' → logprob: -11.513840675354004
    6. ' :' → logprob: -11.888840675354004
    7. '[level' → logprob: -11.888840675354004
    8. ':
' → logprob: -12.013840675354004
    9. ' levels' → logprob: -12.388840675354004
    10. 'levels' → logprob: -13.388840675354004

Token 478: '           ' (ID: 352)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5912973880767822
    2. '           ' → logprob: -1.0912973880767822
    3. ' for' → logprob: -2.2162973880767822
    4. '       ' → logprob: -7.091297149658203
    5. ' lev' → logprob: -8.216297149658203
    6. ' ' → logprob: -9.091297149658203
    7. '	   ' → logprob: -9.216297149658203
    8. '   ' → logprob: -9.591297149658203
    9. '	for' → logprob: -10.341297149658203
    10. 'for' → logprob: -10.466297149658203

Token 479: ' lev' (ID: 12114)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.42738398909568787
    2. ' for' → logprob: -1.6773840188980103
    3. 'lev' (adapté à ' lev') → logprob: -1.9273840188980103
    4. ' lev' → logprob: -4.177383899688721
    5. '   ' → logprob: -10.052384376525879
    6. 'leve' → logprob: -12.802384376525879
    7. '	for' → logprob: -12.802384376525879
    8. '
' → logprob: -12.802384376525879
    9. ' leve' → logprob: -13.177384376525879
    10. '```' → logprob: -13.552384376525879

Token 480: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.004143338184803724
    2. 'for' → logprob: -5.879143238067627
    3. ' for' → logprob: -7.254143238067627
    4. '1' → logprob: -8.004143714904785
    5. 'el' → logprob: -8.254143714904785
    6. ' in' → logprob: -12.004143714904785
    7. '   ' → logprob: -12.129143714904785
    8. 'e' → logprob: -12.504143714904785
    9. '       ' → logprob: -12.629143714904785
    10. 'v' → logprob: -12.629143714904785

Token 481: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001652796781854704
    2. 's' → logprob: -8.875164985656738
    3. ' =' → logprob: -11.875164985656738
    4. 'for' → logprob: -12.000164985656738
    5. '.' → logprob: -12.250164985656738
    6. '
' → logprob: -12.875164985656738
    7. '=' → logprob: -13.000164985656738
    8. '=set' → logprob: -14.125164985656738
    9. '.add' → logprob: -14.375164985656738
    10. '.update' → logprob: -14.875164985656738

Token 482: '.update' (ID: 8689)
  Prédit: '.update'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.update' → logprob: -0.012038279324769974
    2. '.' → logprob: -4.512038230895996
    3. ' .' → logprob: -7.137038230895996
    4. '.add' → logprob: -9.262038230895996
    5. '.extend' → logprob: -10.387038230895996
    6. 'update' → logprob: -10.512038230895996
    7. '|' → logprob: -11.012038230895996
    8. '   ' → logprob: -11.637038230895996
    9. '.union' → logprob: -11.637038230895996
    10. ' |=' → logprob: -12.137038230895996

Token 483: '(row' (ID: 15945)
  Prédit: '(row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(row' → logprob: -8.578184497309849e-05
    2. 'row' → logprob: -9.375085830688477
    3. '(set' → logprob: -15.000085830688477
    4. '(' → logprob: -15.000085830688477
    5. ' row' → logprob: -16.500085830688477
    6. '[row' → logprob: -16.625085830688477
    7. '=row' → logprob: -16.625085830688477
    8. '	row' → logprob: -17.250085830688477
    9. ',row' → logprob: -17.625085830688477
    10. '([' → logprob: -17.875085830688477

Token 484: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3150559961795807
    2. ')
' → logprob: -1.3150559663772583
    3. '       ' → logprob: -6.440055847167969
    4. '
' → logprob: -9.565055847167969
    5. '   ' → logprob: -9.690055847167969
    6. ' )' → logprob: -10.690055847167969
    7. ' )
' → logprob: -10.815055847167969
    8. ')
' → logprob: -12.190055847167969
    9. ')

' → logprob: -12.190055847167969
    10. '	' → logprob: -13.190055847167969

Token 485: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.45238080620765686
    2. '       ' → logprob: -1.0773807764053345
    3. '<|end|>' → logprob: -4.327380657196045
    4. '        
' → logprob: -4.702380657196045
    5. '    
' → logprob: -8.827381134033203
    6. '
' → logprob: -8.827381134033203
    7. '<|end|>' → logprob: -8.827381134033203
    8. ' 
' → logprob: -9.077381134033203
    9. '+
' → logprob: -9.577381134033203
    10. '+' → logprob: -9.702381134033203

Token 486: ' lev' (ID: 12114)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9195826649665833
    2. '       ' → logprob: -0.9195826649665833
    3. 'lev' (adapté à ' lev') → logprob: -1.6695826053619385
    4. ' lev' → logprob: -5.044582843780518
    5. '        
' → logprob: -5.794582843780518
    6. '   ' → logprob: -6.294582843780518
    7. ' 
' → logprob: -7.169582843780518
    8. 'le' → logprob: -7.544582843780518
    9. '    
' → logprob: -8.16958236694336
    10. 'levels' → logprob: -8.41958236694336

Token 487: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0002334568416699767
    2. '1' → logprob: -8.62523365020752
    3. 'els' → logprob: -10.25023365020752
    4. '=' → logprob: -11.62523365020752
    5. 'el' → logprob: -12.37523365020752
    6. 'ls' → logprob: -13.75023365020752
    7. ' =' → logprob: -14.37523365020752
    8. '```' → logprob: -14.37523365020752
    9. 'levels' → logprob: -14.50023365020752
    10. '_levels' → logprob: -14.62523365020752

Token 488: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.534558552724775e-05
    2. 's' → logprob: -11.625025749206543
    3. '2' → logprob: -11.750025749206543
    4. ' =' → logprob: -12.500025749206543
    5. '=' → logprob: -13.250025749206543
    6. '_' → logprob: -13.625025749206543
    7. '.add' → logprob: -14.125025749206543
    8. ' ' → logprob: -14.625025749206543
    9. '.' → logprob: -16.125024795532227
    10. 'es' → logprob: -17.375024795532227

Token 489: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.007057880517095327
    2. '=' → logprob: -5.2570576667785645
    3. ' =' → logprob: -6.3820576667785645
    4. '.' → logprob: -9.632058143615723
    5. '.dis' → logprob: -10.632058143615723
    6. ' .' → logprob: -10.882058143615723
    7. 'add' → logprob: -11.507058143615723
    8. '.update' → logprob: -11.757058143615723
    9. '=set' → logprob: -13.632058143615723
    10. '.=' → logprob: -14.257058143615723

Token 490: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -2.7610454708337784e-05
    2. '0' → logprob: -10.500027656555176
    3. '(
' → logprob: -16.87502670288086
    4. ' (' → logprob: -17.37502670288086
    5. ' ' → logprob: -21.12502670288086
    6. '((' → logprob: -22.37502670288086
    7. '()' → logprob: -22.87502670288086
    8. '`' → logprob: -23.00002670288086
    9. '(-' → logprob: -23.12502670288086
    10. '(

' → logprob: -23.75002670288086

Token 491: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -17.875
    3. ')' → logprob: -21.0
    4. '   ' → logprob: -21.125
    5. '```' → logprob: -22.375
    6. '۰' → logprob: -22.75
    7. '00' → logprob: -23.125
    8. '`' → logprob: -23.25
    9. '
' → logprob: -23.25
    10. '000' → logprob: -23.625

Token 492: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005352786974981427
    2. ')
' → logprob: -7.625535488128662
    3. '<|end|>' → logprob: -10.500535011291504
    4. ' )' → logprob: -11.000535011291504
    5. ')set' → logprob: -14.375535011291504
    6. '<|end|>' → logprob: -14.625535011291504
    7. ')return' → logprob: -15.000535011291504
    8. '   ' → logprob: -15.500535011291504
    9. '#' → logprob: -15.750535011291504
    10. ')#' → logprob: -16.00053596496582

Token 493: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05075190216302872
    2. '<|end|>' → logprob: -3.1757519245147705
    3. '
' → logprob: -5.425751686096191
    4. '<|end|>' → logprob: -6.800751686096191
    5. '        
' → logprob: -6.925751686096191
    6. ',' → logprob: -7.925751686096191
    7. '   ' → logprob: -8.175751686096191
    8. ')' → logprob: -8.300751686096191
    9. ' and' → logprob: -10.425751686096191
    10. 'le' → logprob: -10.800751686096191

Token 494: ' lev' (ID: 12114)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.016254538670182228
    2. '<|end|>' → logprob: -4.891254425048828
    3. '        
' → logprob: -5.141254425048828
    4. '   ' → logprob: -7.141254425048828
    5. '
' → logprob: -7.391254425048828
    6. 'lev' (adapté à ' lev') → logprob: -8.266254425048828
    7. '<|end|>' → logprob: -8.641254425048828
    8. '    
' → logprob: -8.641254425048828
    9. ' 
' → logprob: -9.141254425048828
    10. 'le' → logprob: -9.266254425048828

Token 495: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.00017421995289623737
    2. '1' → logprob: -8.750174522399902
    3. 'els' → logprob: -11.375174522399902
    4. 'ls' → logprob: -13.375174522399902
    5. '_levels' → logprob: -13.875174522399902
    6. 'el' → logprob: -14.250174522399902
    7. 'l' → logprob: -14.375174522399902
    8. '=' → logprob: -15.375174522399902
    9. 'levels' → logprob: -15.500174522399902
    10. ' =' → logprob: -16.750173568725586

Token 496: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.020772406831383705
    2. 's' → logprob: -3.8957724571228027
    3. '2' → logprob: -8.395771980285645
    4. '=' → logprob: -13.770771980285645
    5. 'st' → logprob: -14.145771980285645
    6. 'ist' → logprob: -14.270771980285645
    7. 'set' → logprob: -15.145771980285645
    8. ' =' → logprob: -15.145771980285645
    9. 'el' → logprob: -15.145771980285645
    10. 'v' → logprob: -15.395771980285645

Token 497: '=list' (ID: 93413)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.012393096461892128
    2. ' =' → logprob: -4.512392997741699
    3. '=list' → logprob: -6.637392997741699
    4. '=min' → logprob: -11.0123929977417
    5. '=set' → logprob: -12.3873929977417
    6. '=max' → logprob: -13.0123929977417
    7. '=s' → logprob: -13.5123929977417
    8. 'sorted' → logprob: -13.5123929977417
    9. '_sorted' → logprob: -13.7623929977417
    10. '=create' → logprob: -14.0123929977417

Token 498: '(' (ID: 7)
  Prédit: '(sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sorted' → logprob: -0.11639028787612915
    2. '(' → logprob: -2.8663902282714844
    3. 'sorted' → logprob: -2.9913902282714844
    4. '(set' → logprob: -7.116390228271484
    5. '(
' → logprob: -7.991390228271484
    6. 'sort' → logprob: -7.991390228271484
    7. '<|end|>' → logprob: -8.116390228271484
    8. '(sort' → logprob: -8.491390228271484
    9. '(s' → logprob: -8.491390228271484
    10. '.sort' → logprob: -8.741390228271484

Token 499: 'lev' (ID: 3944)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.42898863554000854
    2. 'lev' → logprob: -1.0539886951446533
    3. '(sorted' → logprob: -8.428988456726074
    4. 'sort' → logprob: -10.928988456726074
    5. '   ' → logprob: -11.678988456726074
    6. 'set' → logprob: -11.678988456726074
    7. '(' → logprob: -11.928988456726074
    8. 'leve' → logprob: -12.178988456726074
    9. '{' → logprob: -12.928988456726074
    10. ' sorted' → logprob: -13.053988456726074

Token 500: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0005374244065023959
    2. 'sorted' → logprob: -8.625537872314453
    3. 'st' → logprob: -9.625537872314453
    4. '(s' → logprob: -9.750537872314453
    5. 'sts' → logprob: -9.750537872314453
    6. '_sorted' → logprob: -9.875537872314453
    7. 'ts' → logprob: -10.625537872314453
    8. '(sorted' → logprob: -10.750537872314453
    9. '[' → logprob: -11.125537872314453
    10. 'orted' → logprob: -11.875537872314453

Token 501: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.420598219847307e-05
    2. 's' → logprob: -11.0000638961792
    3. 'st' → logprob: -11.3750638961792
    4. 'ist' → logprob: -11.6250638961792
    5. '```' → logprob: -11.7500638961792
    6. ')' → logprob: -12.7500638961792
    7. '[' → logprob: -12.8750638961792
    8. '
' → logprob: -13.1250638961792
    9. 'sorted' → logprob: -13.2500638961792
    10. '_sorted' → logprob: -13.2500638961792

Token 502: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.026321901008486748
    2. ')' → logprob: -3.6513218879699707
    3. ')
' → logprob: -11.526322364807129
    4. ');' → logprob: -12.776322364807129
    5. '       ' → logprob: -13.526322364807129
    6. '
' → logprob: -13.651322364807129
    7. ';' → logprob: -13.901322364807129
    8. '   ' → logprob: -14.026322364807129
    9. '())
' → logprob: -14.526322364807129
    10. '),' → logprob: -14.526322364807129

Token 503: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00219735992141068
    2. '<|end|>' → logprob: -6.502197265625
    3. '   ' → logprob: -8.252197265625
    4. 'lev' → logprob: -8.627197265625
    5. '.sort' → logprob: -9.127197265625
    6. '<|end|>' → logprob: -9.877197265625
    7. 'sort' → logprob: -10.627197265625
    8. ' lev' → logprob: -11.002197265625
    9. 'le' → logprob: -11.377197265625
    10. '```' → logprob: -12.002197265625

Token 504: ' lev' (ID: 12114)
  Prédit: 'lev'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lev' (adapté à ' lev') → logprob: -0.06363487243652344
    2. ' lev' → logprob: -2.8136348724365234
    3. '       ' → logprob: -6.813634872436523
    4. '   ' → logprob: -7.688634872436523
    5. 'leve' → logprob: -10.063634872436523
    6. ' leve' → logprob: -10.563634872436523
    7. 'le' → logprob: -11.313634872436523
    8. ' ' → logprob: -12.688634872436523
    9. 'lever' → logprob: -12.813634872436523
    10. 'levels' → logprob: -12.813634872436523

Token 505: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -2.7848862373502925e-05
    2. '1' → logprob: -10.625027656555176
    3. 'sort' → logprob: -14.000027656555176
    4. 'el' → logprob: -14.125027656555176
    5. ' s' → logprob: -14.750027656555176
    6. 'l' → logprob: -15.250027656555176
    7. 'sl' → logprob: -15.500027656555176
    8. '```' → logprob: -15.500027656555176
    9. 'sorted' → logprob: -16.000028610229492
    10. 'lev' → logprob: -16.125028610229492

Token 506: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.6934557505883276e-05
    2. 's' → logprob: -9.875057220458984
    3. '.sort' → logprob: -12.875057220458984
    4. '=' → logprob: -14.125057220458984
    5. 'sort' → logprob: -14.375057220458984
    6. '2' → logprob: -15.125057220458984
    7. '```' → logprob: -15.375057220458984
    8. 'el' → logprob: -16.000057220458984
    9. 'l' → logprob: -16.250057220458984
    10. ' =' → logprob: -16.250057220458984

Token 507: '.sort' (ID: 19551)
  Prédit: '.sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.00027099132421426475
    2. '.' → logprob: -8.25027084350586
    3. ' .' → logprob: -11.87527084350586
    4. 'sort' → logprob: -13.25027084350586
    5. '	sort' → logprob: -14.87527084350586
    6. ' sort' → logprob: -15.37527084350586
    7. '.s' → logprob: -16.12527084350586
    8. '.sorted' → logprob: -16.25027084350586
    9. '.Sort' → logprob: -17.12527084350586
    10. '.setdefault' → logprob: -18.00027084350586

Token 508: '()

' (ID: 5874)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 509: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.323350191116333
    2. ' low' → logprob: -2.323350191116333
    3. '   ' → logprob: -2.948350191116333
    4. 'low' → logprob: -2.948350191116333
    5. ' for' → logprob: -3.948350191116333
    6. ' left' → logprob: -4.448349952697754
    7. ' lev' → logprob: -4.823349952697754
    8. 'left' → logprob: -5.073349952697754
    9. 'lev' → logprob: -5.198349952697754
    10. '```' → logprob: -5.823349952697754

Token 510: ' lev' (ID: 12114)
  Prédit: 'lev'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lev' (adapté à ' lev') → logprob: -0.01633499376475811
    2. 'low' → logprob: -4.7663350105285645
    3. 'left' → logprob: -6.1413350105285645
    4. '       ' → logprob: -6.6413350105285645
    5. '   ' → logprob: -7.0163350105285645
    6. ' lev' → logprob: -7.3913350105285645
    7. 'le' → logprob: -7.7663350105285645
    8. 'W' → logprob: -7.7663350105285645
    9. 'min' → logprob: -8.141334533691406
    10. 'lo' → logprob: -8.141334533691406

Token 511: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -5.919942486798391e-05
    2. '2' → logprob: -10.000059127807617
    3. '1' → logprob: -11.375059127807617
    4. '```' → logprob: -13.875059127807617
    5. ' s' → logprob: -15.125059127807617
    6. '=' → logprob: -15.375059127807617
    7. '[' → logprob: -16.937559127807617
    8. 'с' → logprob: -17.375059127807617
    9. 'search' → logprob: -17.500059127807617
    10. ''s' → logprob: -17.625059127807617

Token 512: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00013083349040243775
    2. '1' → logprob: -9.000130653381348
    3. '_' → logprob: -12.250130653381348
    4. 's' → logprob: -13.500130653381348
    5. ' ' → logprob: -14.375130653381348
    6. '<|end|>' → logprob: -16.000131607055664
    7. '=' → logprob: -16.500131607055664
    8. 'import' → logprob: -16.500131607055664
    9. ' =' → logprob: -16.625131607055664
    10. '₂' → logprob: -16.750131607055664

Token 513: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.575965404510498
    2. ' =' → logprob: -0.825965404510498
    3. '=set' → logprob: -10.575965881347656
    4. '＝' → logprob: -16.075965881347656
    5. '=[]' → logprob: -16.075965881347656
    6. ' ' → logprob: -16.200965881347656
    7. '=
' → logprob: -16.825965881347656
    8. '.' → logprob: -17.575965881347656
    9. '(' → logprob: -17.575965881347656
    10. ' =
' → logprob: -17.825965881347656

Token 514: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.0380416102707386
    2. ' set' → logprob: -3.288041591644287
    3. 's' → logprob: -16.663042068481445
    4. '{' → logprob: -16.788042068481445
    5. '(set' → logprob: -17.788042068481445
    6. 'se' → logprob: -18.163042068481445
    7. '	set' → logprob: -18.288042068481445
    8. '=set' → logprob: -18.288042068481445
    9. '0' → logprob: -18.663042068481445
    10. 'list' → logprob: -19.038042068481445

Token 515: '()
' (ID: 1234)
  Prédit: '()
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.01816340535879135
    2. '()' → logprob: -4.018163204193115
    3. '(' → logprob: -12.143163681030273
    4. '()
' → logprob: -12.643163681030273
    5. '(level' → logprob: -12.768163681030273
    6. '()

' → logprob: -13.643163681030273
    7. '(
' → logprob: -15.018163681030273
    8. 'for' → logprob: -15.518163681030273
    9. '([' → logprob: -15.643163681030273
    10. 'lev' → logprob: -16.893163681030273

Token 516: '       ' (ID: 309)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.017464997246861458
    2. '()
' → logprob: -4.517465114593506
    3. '       ' → logprob: -5.142465114593506
    4. ' for' → logprob: -7.767465114593506
    5. '()' → logprob: -9.392464637756348
    6. '   ' → logprob: -10.642464637756348
    7. 'For' → logprob: -12.142464637756348
    8. 'def' → logprob: -12.517464637756348
    9. '(' → logprob: -12.767464637756348
    10. 'lev' → logprob: -13.267464637756348

Token 517: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -2.45848218582978e-06
    2. ' for' → logprob: -13.25000286102295
    3. '       ' → logprob: -14.25000286102295
    4. '	for' → logprob: -20.000001907348633
    5. '```' → logprob: -21.000001907348633
    6. 'For' → logprob: -21.625001907348633
    7. '{
' → logprob: -21.625001907348633
    8. 'from' → logprob: -22.250001907348633
    9. '   ' → logprob: -22.750001907348633
    10. '``' → logprob: -23.000001907348633

Token 518: ' row' (ID: 5225)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.04858794063329697
    2. ' row' → logprob: -3.0485880374908447
    3. '	row' → logprob: -15.298587799072266
    4. '(row' → logprob: -16.173587799072266
    5. 'r' → logprob: -16.298587799072266
    6. '[row' → logprob: -17.423587799072266
    7. 'level' → logprob: -17.548587799072266
    8. ' ' → logprob: -17.798587799072266
    9. '$row' → logprob: -17.798587799072266
    10. 'rows' → logprob: -18.173587799072266

Token 519: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0010336418636143208
    2. 'in' → logprob: -6.876033782958984
    3. 's' → logprob: -15.751033782958984
    4. '	in' → logprob: -16.126033782958984
    5. 'In' → logprob: -16.501033782958984
    6. '   ' → logprob: -16.501033782958984
    7. 'levels' → logprob: -16.501033782958984
    8. ' ' → logprob: -16.626033782958984
    9. '.' → logprob: -16.751033782958984
    10. '<|end|>' → logprob: -16.876033782958984

Token 520: ' levels' (ID: 8374)
  Prédit: 'levels'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'levels' → logprob: -0.005234594456851482
    2. ' levels' → logprob: -5.255234718322754
    3. 'level' → logprob: -14.130234718322754
    4. 'layers' → logprob: -18.755233764648438
    5. '_levels' → logprob: -19.505233764648438
    6. 'ranges' → logprob: -20.380233764648438
    7. ' ' → logprob: -20.380233764648438
    8. '   ' → logprob: -20.380233764648438
    9. '[' → logprob: -20.505233764648438
    10. 'range' → logprob: -20.630233764648438

Token 521: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.041593778878450394
    2. ' in' → logprob: -3.7915937900543213
    3. 'levels' → logprob: -4.166593551635742
    4. ' levels' → logprob: -6.541593551635742
    5. 'in' → logprob: -7.291593551635742
    6. '[' → logprob: -8.416593551635742
    7. '(level' → logprob: -9.041593551635742
    8. '_levels' → logprob: -9.541593551635742
    9. '[level' → logprob: -10.291593551635742
    10. '   ' → logprob: -10.666593551635742

Token 522: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.20848438143730164
    2. '           ' → logprob: -2.458484411239624
    3. ':' → logprob: -2.958484411239624
    4. '   ' → logprob: -3.833484411239624
    5. '       ' → logprob: -4.083484172821045
    6. '.' → logprob: -5.333484172821045
    7. '{
' → logprob: -5.583484172821045
    8. '.update' → logprob: -5.958484172821045
    9. ' in' → logprob: -8.458484649658203
    10. ':
' → logprob: -8.958484649658203

Token 523: '           ' (ID: 352)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04319683834910393
    2. 'lev' → logprob: -3.7931969165802
    3. '           ' → logprob: -4.043196678161621
    4. '       ' → logprob: -6.418196678161621
    5. ' lev' → logprob: -7.543196678161621
    6. '    ' → logprob: -11.418196678161621
    7. '  ' → logprob: -11.543196678161621
    8. ' ' → logprob: -12.168196678161621
    9. 'levels' → logprob: -12.418196678161621
    10. '   ' → logprob: -12.418196678161621

Token 524: ' lev' (ID: 12114)
  Prédit: 'lev'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lev' (adapté à ' lev') → logprob: -0.005341786425560713
    2. ' lev' → logprob: -5.25534200668335
    3. '   ' → logprob: -9.255341529846191
    4. '           ' → logprob: -12.380341529846191
    5. 'row' → logprob: -13.005341529846191
    6. '       ' → logprob: -13.005341529846191
    7. 'level' → logprob: -13.380341529846191
    8. 'leve' → logprob: -14.255341529846191
    9. 'levels' → logprob: -14.880341529846191
    10. 'rev' → logprob: -15.380341529846191

Token 525: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0010469816625118256
    2. '2' → logprob: -6.876047134399414
    3. '1' → logprob: -12.001047134399414
    4. 'els' → logprob: -13.126047134399414
    5. 'el' → logprob: -13.376047134399414
    6. 'l' → logprob: -13.876047134399414
    7. ' s' → logprob: -14.126047134399414
    8. 'levels' → logprob: -14.251047134399414
    9. 'ls' → logprob: -15.001047134399414
    10. 'sl' → logprob: -15.251047134399414

Token 526: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -8.900034299585968e-05
    2. '.add' → logprob: -10.250088691711426
    3. '.update' → logprob: -10.375088691711426
    4. 'add' → logprob: -11.500088691711426
    5. '1' → logprob: -12.375088691711426
    6. '   ' → logprob: -12.750088691711426
    7. 'update' → logprob: -13.000088691711426
    8. 's' → logprob: -14.000088691711426
    9. '       ' → logprob: -14.875088691711426
    10. '.' → logprob: -15.500088691711426

Token 527: '.update' (ID: 8689)
  Prédit: '.update'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.update' → logprob: -0.018397850915789604
    2. '.' → logprob: -4.018397808074951
    3. 'update' → logprob: -8.76839828491211
    4. '.add' → logprob: -9.89339828491211
    5. ' .' → logprob: -10.26839828491211
    6. '       ' → logprob: -12.89339828491211
    7. '.extend' → logprob: -13.39339828491211
    8. '   ' → logprob: -13.51839828491211
    9. 'import' → logprob: -14.64339828491211
    10. ':update' → logprob: -15.51839828491211

Token 528: '(row' (ID: 15945)
  Prédit: '(row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(row' → logprob: -0.006717974785715342
    2. 'row' → logprob: -5.006718158721924
    3. '[row' → logprob: -13.381717681884766
    4. ' row' → logprob: -13.881717681884766
    5. '=row' → logprob: -16.881717681884766
    6. '	row' → logprob: -17.006717681884766
    7. '$row' → logprob: -17.131717681884766
    8. ',row' → logprob: -18.006717681884766
    9. '(' → logprob: -18.756717681884766
    10. ' (' → logprob: -20.381717681884766

Token 529: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5125002264976501
    2. '       ' → logprob: -1.262500286102295
    3. ')
' → logprob: -2.137500286102295
    4. '<|end|>' → logprob: -10.387499809265137
    5. '())' → logprob: -11.137499809265137
    6. ')
' → logprob: -11.262499809265137
    7. '())
' → logprob: -11.512499809265137
    8. '   ' → logprob: -11.637499809265137
    9. '()' → logprob: -11.887499809265137
    10. '()
' → logprob: -12.137499809265137

Token 530: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -8.685467764735222e-05
    2. 'lev' → logprob: -9.625086784362793
    3. '           ' → logprob: -12.125086784362793
    4. '   ' → logprob: -12.125086784362793
    5. '```' → logprob: -12.250086784362793
    6. 'levels' → logprob: -13.250086784362793
    7. '<|end|>' → logprob: -13.625086784362793
    8. '      ' → logprob: -14.375086784362793
    9. '
' → logprob: -15.375086784362793
    10. ' lev' → logprob: -15.625086784362793

Token 531: ' lev' (ID: 12114)
  Prédit: 'lev'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lev' (adapté à ' lev') → logprob: -0.007987858727574348
    2. ' lev' → logprob: -4.882987976074219
    3. '       ' → logprob: -7.882987976074219
    4. 'leve' → logprob: -13.007987976074219
    5. '   ' → logprob: -14.257987976074219
    6. '0' → logprob: -14.757987976074219
    7. 'le' → logprob: -15.632987976074219
    8. ' leve' → logprob: -15.882987976074219
    9. 'lever' → logprob: -16.13298797607422
    10. 'levels' → logprob: -16.13298797607422

Token 532: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.006717863027006388
    2. '2' → logprob: -5.006717681884766
    3. 'ls' → logprob: -13.631717681884766
    4. 'l' → logprob: -15.006717681884766
    5. 'ts' → logprob: -15.631717681884766
    6. '1' → logprob: -15.631717681884766
    7. 'sl' → logprob: -15.881717681884766
    8. '```' → logprob: -16.256717681884766
    9. 'lev' → logprob: -16.631717681884766
    10. 'els' → logprob: -16.881717681884766

Token 533: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.7697225252486533e-06
    2. '.add' → logprob: -13.250003814697266
    3. 's' → logprob: -14.250003814697266
    4. 'add' → logprob: -14.375003814697266
    5. ' ' → logprob: -14.875003814697266
    6. '1' → logprob: -15.500003814697266
    7. '```' → logprob: -17.250003814697266
    8. '.' → logprob: -17.750003814697266
    9. '
' → logprob: -17.875003814697266
    10. '   ' → logprob: -18.125003814697266

Token 534: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.00014978687977418303
    2. '.' → logprob: -9.125149726867676
    3. 'add' → logprob: -10.250149726867676
    4. ' .' → logprob: -12.250149726867676
    5. '.update' → logprob: -16.250150680541992
    6. '.append' → logprob: -16.250150680541992
    7. ')add' → logprob: -16.250150680541992
    8. '.dis' → logprob: -16.375150680541992
    9. ' add' → logprob: -16.625150680541992
    10. ' =' → logprob: -16.875150680541992

Token 535: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -8.41866585687967e-06
    2. '0' → logprob: -11.750008583068848
    3. '(
' → logprob: -14.750008583068848
    4. '({' → logprob: -17.12500762939453
    5. ' (' → logprob: -17.62500762939453
    6. '((' → logprob: -18.00000762939453
    7. '{' → logprob: -18.00000762939453
    8. '()' → logprob: -20.50000762939453
    9. ' ' → logprob: -20.87500762939453
    10. '(

' → logprob: -21.25000762939453

Token 536: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -13.875000953674316
    3. '(' → logprob: -16.125001907348633
    4. '{' → logprob: -18.000001907348633
    5. '00' → logprob: -18.625001907348633
    6. '000' → logprob: -19.875001907348633
    7. '   ' → logprob: -20.250001907348633
    8. '۰' → logprob: -20.687501907348633
    9. ')' → logprob: -20.875001907348633
    10. '
' → logprob: -20.937501907348633

Token 537: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00019197762594558299
    2. ')
' → logprob: -8.625191688537598
    3. '       ' → logprob: -11.625191688537598
    4. ' )' → logprob: -13.125191688537598
    5. '<|end|>' → logprob: -14.000191688537598
    6. '   ' → logprob: -16.000192642211914
    7. ')
' → logprob: -16.500192642211914
    8. ')}' → logprob: -16.750192642211914
    9. '))' → logprob: -17.125192642211914
    10. '}' → logprob: -17.125192642211914

Token 538: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0036512718070298433
    2. '<|end|>' → logprob: -5.628651142120361
    3. '<|end|>' → logprob: -10.50365161895752
    4. 'lev' → logprob: -12.25365161895752
    5. ',' → logprob: -12.50365161895752
    6. '   ' → logprob: -12.75365161895752
    7. '
' → logprob: -12.87865161895752
    8. ')' → logprob: -13.00365161895752
    9. '```' → logprob: -14.00365161895752
    10. '#' → logprob: -14.25365161895752

Token 539: ' lev' (ID: 12114)
  Prédit: 'lev'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lev' (adapté à ' lev') → logprob: -0.004115323536098003
    2. ' lev' → logprob: -5.504115104675293
    3. '       ' → logprob: -10.254115104675293
    4. 'leve' → logprob: -14.129115104675293
    5. 'lever' → logprob: -15.379115104675293
    6. '
' → logprob: -15.879115104675293
    7. '```' → logprob: -16.12911605834961
    8. 'import' → logprob: -16.37911605834961
    9. 'le' → logprob: -16.62911605834961
    10. 'level' → logprob: -16.75411605834961

Token 540: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.00016158436483237892
    2. '2' → logprob: -8.750161170959473
    3. '1' → logprob: -13.250161170959473
    4. ' s' → logprob: -15.000161170959473
    5. 'ls' → logprob: -15.750161170959473
    6. '```' → logprob: -15.875161170959473
    7. 'v' → logprob: -16.00016212463379
    8. 'lev' → logprob: -16.00016212463379
    9. '[' → logprob: -16.62516212463379
    10. 'levels' → logprob: -17.00016212463379

Token 541: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.6240566083070007e-06
    2. '1' → logprob: -13.750001907348633
    3. 's' → logprob: -15.375001907348633
    4. '.add' → logprob: -16.125001907348633
    5. '   ' → logprob: -17.000001907348633
    6. '```' → logprob: -17.500001907348633
    7. '.append' → logprob: -17.750001907348633
    8. '.' → logprob: -18.000001907348633
    9. 'add' → logprob: -18.000001907348633
    10. ' ' → logprob: -18.250001907348633

Token 542: '=list' (ID: 93413)
  Prédit: '=list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=list' → logprob: -0.0011179500725120306
    2. '=' → logprob: -6.876118183135986
    3. 'list' → logprob: -9.876117706298828
    4. ' =' → logprob: -10.876117706298828
    5. '.add' → logprob: -12.251117706298828
    6. '.append' → logprob: -13.626117706298828
    7. ':list' → logprob: -13.626117706298828
    8. '.sort' → logprob: -13.751117706298828
    9. '=len' → logprob: -13.751117706298828
    10. '=view' → logprob: -14.501117706298828

Token 543: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00014740281039848924
    2. '(set' → logprob: -9.125147819519043
    3. '(sorted' → logprob: -10.250147819519043
    4. '(
' → logprob: -13.625147819519043
    5. 'sorted' → logprob: -14.125147819519043
    6. 'set' → logprob: -15.000147819519043
    7. '(range' → logprob: -15.625147819519043
    8. '[' → logprob: -15.875147819519043
    9. '()' → logprob: -16.250146865844727
    10. '```' → logprob: -16.625146865844727

Token 544: 'lev' (ID: 3944)
  Prédit: 'lev'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lev' → logprob: -8.895480277715251e-06
    2. '(' → logprob: -12.125008583068848
    3. 'set' → logprob: -13.125008583068848
    4. '{' → logprob: -14.750008583068848
    5. 'sorted' → logprob: -15.250008583068848
    6. ' lev' → logprob: -15.375008583068848
    7. '
' → logprob: -15.875008583068848
    8. '```' → logprob: -16.625009536743164
    9. 'lav' → logprob: -16.750009536743164
    10. 'leve' → logprob: -16.875009536743164

Token 545: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.04308460280299187
    2. '2' → logprob: -3.1680846214294434
    3. '(' → logprob: -9.543084144592285
    4. '1' → logprob: -12.168084144592285
    5. 'v' → logprob: -12.543084144592285
    6. '(s' → logprob: -13.543084144592285
    7. '{' → logprob: -14.293084144592285
    8. '[' → logprob: -14.918084144592285
    9. '(
' → logprob: -15.418084144592285
    10. 'S' → logprob: -15.418084144592285

Token 546: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.0564331205387134e-05
    2. 'lev' → logprob: -12.12501049041748
    3. 's' → logprob: -12.87501049041748
    4. '(' → logprob: -13.12501049041748
    5. '[' → logprob: -16.250011444091797
    6. '1' → logprob: -16.500011444091797
    7. 'set' → logprob: -17.250011444091797
    8. 'l' → logprob: -17.250011444091797
    9. ')' → logprob: -17.375011444091797
    10. '
' → logprob: -17.500011444091797

Token 547: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11336398869752884
    2. ')
' → logprob: -2.2383639812469482
    3. '<|end|>' → logprob: -8.363364219665527
    4. '.sort' → logprob: -8.738364219665527
    5. ')set' → logprob: -9.488364219665527
    6. 'sorted' → logprob: -11.113364219665527
    7. 'sort' → logprob: -11.613364219665527
    8. ')s' → logprob: -11.613364219665527
    9. '       ' → logprob: -12.488364219665527
    10. ')
' → logprob: -12.738364219665527

Token 548: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0036018555983901024
    2. 'sort' → logprob: -6.253602027893066
    3. '.sort' → logprob: -7.253602027893066
    4. 'lev' → logprob: -7.378602027893066
    5. '   ' → logprob: -8.628602027893066
    6. '<|end|>' → logprob: -10.003602027893066
    7. 'import' → logprob: -10.878602027893066
    8. 'sorted' → logprob: -11.128602027893066
    9. '```' → logprob: -11.253602027893066
    10. '	sort' → logprob: -11.753602027893066

Token 549: ' lev' (ID: 12114)
  Prédit: 'lev'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lev' (adapté à ' lev') → logprob: -9.088346359931165e-07
    2. ' lev' → logprob: -14.250000953674316
    3. 'leve' → logprob: -16.0
    4. '       ' → logprob: -16.375
    5. '   ' → logprob: -18.0
    6. '
' → logprob: -18.75
    7. '#' → logprob: -19.0
    8. 'lever' → logprob: -19.625
    9. 'level' → logprob: -20.0
    10. '        
' → logprob: -21.0

Token 550: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.00010986098641296849
    2. '2' → logprob: -9.125109672546387
    3. '1' → logprob: -14.500109672546387
    4. 'l' → logprob: -16.375110626220703
    5. '[' → logprob: -16.375110626220703
    6. 'v' → logprob: -16.375110626220703
    7. '```' → logprob: -17.000110626220703
    8. 'ls' → logprob: -17.500110626220703
    9. 'lev' → logprob: -18.375110626220703
    10. 'sl' → logprob: -18.625110626220703

Token 551: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0017878713551908731
    2. '.sort' → logprob: -6.3767876625061035
    3. '1' → logprob: -10.251788139343262
    4. 'sort' → logprob: -10.501788139343262
    5. '.' → logprob: -11.251788139343262
    6. 's' → logprob: -12.751788139343262
    7. '.append' → logprob: -13.251788139343262
    8. '```' → logprob: -13.251788139343262
    9. 'sorted' → logprob: -14.626788139343262
    10. '   ' → logprob: -14.876788139343262

Token 552: '.sort' (ID: 19551)
  Prédit: '.sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.000477620807942003
    2. '.' → logprob: -7.7504777908325195
    3. 'sort' → logprob: -10.00047779083252
    4. ' .' → logprob: -14.25047779083252
    5. '	sort' → logprob: -15.37547779083252
    6. '.s' → logprob: -15.75047779083252
    7. '.append' → logprob: -16.000476837158203
    8. '.reverse' → logprob: -16.125476837158203
    9. '.sorted' → logprob: -16.625476837158203
    10. ' sort' → logprob: -16.625476837158203

Token 553: '()

' (ID: 5874)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20584529638290405
    2. '<|end|>' → logprob: -2.330845355987549
    3. '
' → logprob: -2.455845355987549
    4. '<|end|>' → logprob: -6.330845355987549
    5. '        
' → logprob: -7.580845355987549
    6. ',' → logprob: -8.08084487915039
    7. '```' → logprob: -8.45584487915039
    8. '   ' → logprob: -9.33084487915039
    9. ' next' → logprob: -11.20584487915039
    10. 'Next' → logprob: -11.26834487915039

Token 554: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.045140448957681656
    2. '```' → logprob: -3.670140504837036
    3. '       ' → logprob: -4.295140266418457
    4. 'low' → logprob: -6.545140266418457
    5. '    
' → logprob: -6.795140266418457
    6. '
' → logprob: -7.170140266418457
    7. ' low' → logprob: -7.795140266418457
    8. '(low' → logprob: -8.545140266418457
    9. '``' → logprob: -8.670140266418457
    10. ' for' → logprob: -8.920140266418457

Token 555: ' #' (ID: 1069)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -1.568610429763794
    2. 'l' → logprob: -1.943610429763794
    3. 's' → logprob: -1.943610429763794
    4. 'low' → logprob: -2.068610429763794
    5. '       ' → logprob: -2.193610429763794
    6. 'res' → logprob: -2.568610429763794
    7. 'min' → logprob: -2.943610429763794
    8. 'lo' → logprob: -3.443610429763794
    9. 'left' → logprob: -3.568610429763794
    10. 'best' → logprob: -3.943610429763794

Token 556: ' pre' (ID: 876)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.7971047163009644
    2. 'low' → logprob: -1.1721047163009644
    3. 'l' → logprob: -2.047104835510254
    4. 'lo' → logprob: -2.547104835510254
    5. '   ' → logprob: -4.422104835510254
    6. 'min' → logprob: -5.422104835510254
    7. '#' → logprob: -5.672104835510254
    8. 'ans' → logprob: -5.797104835510254
    9. 'def' → logprob: -5.922104835510254
    10. 'res' → logprob: -5.922104835510254

Token 557: 'compute' (ID: 54521)
  Prédit: 'compute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compute' → logprob: -0.09890416264533997
    2. 'computed' → logprob: -3.4739041328430176
    3. 'auth' → logprob: -3.5989041328430176
    4. '#' → logprob: -3.9739041328430176
    5. 'sum' → logprob: -5.973904132843018
    6. '       ' → logprob: -6.598904132843018
    7. 'max' → logprob: -6.598904132843018
    8. 'calc' → logprob: -6.848904132843018
    9. 'def' → logprob: -6.973904132843018
    10. 'levels' → logprob: -6.973904132843018

Token 558: ' number' (ID: 2086)
  Prédit: 'auth'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'auth' → logprob: -0.6246713399887085
    2. ' auth' → logprob: -1.8746713399887085
    3. 'b' → logprob: -2.499671459197998
    4. 'max' → logprob: -3.624671459197998
    5. ' bfs' → logprob: -3.749671459197998
    6. 'possible' → logprob: -3.874671459197998
    7. 'dp' → logprob: -3.874671459197998
    8. 'cnt' → logprob: -3.999671459197998
    9. 'count' → logprob: -3.999671459197998
    10. 'counts' → logprob: -4.374671459197998

Token 559: ' of' (ID: 328)
  Prédit: 'of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'of' → logprob: -0.6441092491149902
    2. '_' → logprob: -2.2691092491149902
    3. '_of' → logprob: -3.0191092491149902
    4. '=' → logprob: -3.2691092491149902
    5. '   ' → logprob: -3.3941092491149902
    6. '       ' → logprob: -3.3941092491149902
    7. 'visited' → logprob: -3.6441092491149902
    8. '_counts' → logprob: -3.7691092491149902
    9. ' =' → logprob: -4.01910924911499
    10. '_rooms' → logprob: -4.01910924911499

Token 560: ' rooms' (ID: 11348)
  Prédit: 'rooms'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rooms' → logprob: -0.4576643109321594
    2. ' rooms' → logprob: -1.3326642513275146
    3. '_rooms' → logprob: -3.0826642513275146
    4. 'reachable' → logprob: -3.9576642513275146
    5. ' reachable' → logprob: -4.582664489746094
    6. 'def' → logprob: -5.457664489746094
    7. 'possible' → logprob: -5.707664489746094
    8. 'room' → logprob: -6.082664489746094
    9. '_' → logprob: -6.207664489746094
    10. 'levels' → logprob: -6.332664489746094

Token 561: ' reachable' (ID: 143580)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8438202738761902
    2. '   ' → logprob: -1.343820333480835
    3. ' for' → logprob: -2.218820333480835
    4. ' =' → logprob: -3.468820333480835
    5. '=' → logprob: -3.593820333480835
    6. 'def' → logprob: -3.593820333480835
    7. 'in' → logprob: -3.593820333480835
    8. ' in' → logprob: -4.468820095062256
    9. '1' → logprob: -4.593820095062256
    10. 'visited' → logprob: -4.718820095062256

Token 562: ' for' (ID: 395)
  Prédit: 'auth'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'auth' → logprob: -1.042316198348999
    2. 'count' → logprob: -1.667316198348999
    3. 'for' → logprob: -2.292316198348999
    4. 'reachable' → logprob: -2.792316198348999
    5. '   ' → logprob: -3.042316198348999
    6. 'reach' → logprob: -3.292316198348999
    7. 'counts' → logprob: -3.542316198348999
    8. 'rooms' → logprob: -3.667316198348999
    9. 'from' → logprob: -3.667316198348999
    10. '=' → logprob: -3.917316198348999

Token 563: ' each' (ID: 2454)
  Prédit: 'auth'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'auth' → logprob: -0.2079143077135086
    2. ' auth' → logprob: -2.957914352416992
    3. 'a' → logprob: -3.457914352416992
    4. 'each' → logprob: -3.707914352416992
    5. ' each' → logprob: -3.832914352416992
    6. 'l' → logprob: -4.332914352416992
    7. 'level' → logprob: -4.457914352416992
    8. 'all' → logprob: -4.582914352416992
    9. 'def' → logprob: -5.707914352416992
    10. 'lev' → logprob: -5.832914352416992

Token 564: ' auth' (ID: 6246)
  Prédit: ' auth'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' auth' → logprob: -0.5256372094154358
    2. 'auth' → logprob: -1.150637149810791
    3. ' lev' → logprob: -3.275637149810791
    4. ' a' → logprob: -5.025637149810791
    5. 'lev' → logprob: -5.150637149810791
    6. 'a' → logprob: -5.150637149810791
    7. ' level' → logprob: -5.150637149810791
    8. 'l' → logprob: -5.275637149810791
    9. ' l' → logprob: -5.275637149810791
    10. ' for' → logprob: -5.400637149810791

Token 565: ' level' (ID: 3211)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.8664910793304443
    2. '   ' → logprob: -1.6164910793304443
    3. 'level' → logprob: -1.8664910793304443
    4. 'for' → logprob: -3.2414910793304443
    5. ' =' → logprob: -3.4914910793304443
    6. ' for' → logprob: -3.4914910793304443
    7. '       ' → logprob: -3.8664910793304443
    8. '_' → logprob: -4.116491317749023
    9. '=' → logprob: -4.241491317749023
    10. ' level' → logprob: -4.366491317749023

Token 566: ' in' (ID: 306)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.030193686485290527
    2. 'levels' → logprob: -5.03019380569458
    3. ' for' → logprob: -5.40519380569458
    4. ' levels' → logprob: -5.78019380569458
    5. 'count' → logprob: -5.90519380569458
    6. ' counts' → logprob: -6.28019380569458
    7. '   ' → logprob: -6.28019380569458
    8. 'def' → logprob: -6.78019380569458
    9. 'counts' → logprob: -6.90519380569458
    10. ' count' → logprob: -6.90519380569458

Token 567: ' each' (ID: 2454)
  Prédit: 'lev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lev' → logprob: -0.12967465817928314
    2. ' lev' → logprob: -2.5046746730804443
    3. 'levels' → logprob: -3.3796746730804443
    4. ' levels' → logprob: -6.129674434661865
    5. '[' → logprob: -6.504674434661865
    6. 'range' → logprob: -7.504674434661865
    7. '[(' → logprob: -7.504674434661865
    8. ' range' → logprob: -7.879674434661865
    9. '(' → logprob: -8.129674911499023
    10. 'level' → logprob: -9.379674911499023

Token 568: ' office' (ID: 6885)
  Prédit: 'office'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'office' → logprob: -0.02857542783021927
    2. ' office' → logprob: -3.6535754203796387
    3. 'def' → logprob: -6.153575420379639
    4. '
' → logprob: -10.653575897216797
    5. '.office' → logprob: -10.653575897216797
    6. ' def' → logprob: -10.903575897216797
    7. 'for' → logprob: -11.403575897216797
    8. 'level' → logprob: -11.778575897216797
    9. '```' → logprob: -11.778575897216797
    10. 'of' → logprob: -11.903575897216797

Token 569: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6440919637680054
    2. 'reachable' → logprob: -2.519092082977295
    3. ' reachable' → logprob: -2.644092082977295
    4. '   ' → logprob: -2.644092082977295
    5. 'count' → logprob: -3.269092082977295
    6. ' counts' → logprob: -3.519092082977295
    7. 'def' → logprob: -3.769092082977295
    8. ' count' → logprob: -3.894092082977295
    9. ' rooms' → logprob: -4.269092082977295
    10. 'counts' → logprob: -4.269092082977295

Token 570: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0040464638732373714
    2. ' for' → logprob: -6.629046440124512
    3. '   ' → logprob: -7.129046440124512
    4. 'for' → logprob: -7.879046440124512
    5. 'def' → logprob: -8.004046440124512
    6. 'res' → logprob: -8.129046440124512
    7. 'count' → logprob: -9.254046440124512
    8. ' res' → logprob: -9.379046440124512
    9. 'counts' → logprob: -9.379046440124512
    10. '<|end|>' → logprob: -9.379046440124512

Token 571: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.6175090074539185
    2. 'auth' → logprob: -1.7425090074539185
    3. 'reach' → logprob: -1.8675090074539185
    4. '   ' → logprob: -2.242508888244629
    5. 'reachable' → logprob: -2.492508888244629
    6. 'count' → logprob: -2.617508888244629
    7. 'pre' → logprob: -2.992508888244629
    8. 'rooms' → logprob: -2.992508888244629
    9. 'cnt' → logprob: -3.742508888244629
    10. 'counts' → logprob: -4.117508888244629

Token 572: ' BFS' (ID: 190016)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0182069540023804
    2. 'pre' → logprob: -1.6432069540023804
    3. 'reach' → logprob: -2.01820707321167
    4. 'auth' → logprob: -2.14320707321167
    5. 'reachable' → logprob: -2.89320707321167
    6. '   ' → logprob: -3.01820707321167
    7. 'dp' → logprob: -3.89320707321167
    8. 'count' → logprob: -4.14320707321167
    9. 'rooms' → logprob: -4.14320707321167
    10. ' pre' → logprob: -4.89320707321167

Token 573: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14621631801128387
    2. ' for' → logprob: -2.89621639251709
    3. 'for' → logprob: -3.27121639251709
    4. 'levels' → logprob: -4.14621639251709
    5. '   ' → logprob: -4.64621639251709
    6. ' levels' → logprob: -5.27121639251709
    7. 'def' → logprob: -5.52121639251709
    8. 'pre' → logprob: -6.52121639251709
    9. '#' → logprob: -7.45871639251709
    10. 'auth' → logprob: -7.70871639251709

Token 574: ' each' (ID: 2454)
  Prédit: 'auth'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'auth' → logprob: -0.6886695623397827
    2. 'lev' → logprob: -1.6886695623397827
    3. 'l' → logprob: -2.3136696815490723
    4. 'a' → logprob: -2.4386696815490723
    5. 'level' → logprob: -2.5636696815490723
    6. 'lvl' → logprob: -3.9386696815490723
    7. ' lev' → logprob: -4.188669681549072
    8. ' auth' → logprob: -5.063669681549072
    9. ' level' → logprob: -6.313669681549072
    10. 'lv' → logprob: -6.438669681549072

Token 575: ' distinct' (ID: 16913)
  Prédit: 'auth'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'auth' → logprob: -1.4257338047027588
    2. ' auth' → logprob: -1.4257338047027588
    3. ' for' → logprob: -1.5507338047027588
    4. ' lev' → logprob: -2.175733804702759
    5. 'lev' → logprob: -2.800733804702759
    6. ' level' → logprob: -3.800733804702759
    7. 'level' → logprob: -3.800733804702759
    8. 'l' → logprob: -3.800733804702759
    9. 'for' → logprob: -3.800733804702759
    10. 'def' → logprob: -4.67573356628418

Token 576: ' auth' (ID: 6246)
  Prédit: 'auth'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'auth' → logprob: -0.40304306149482727
    2. 'lev' → logprob: -2.153043031692505
    3. ' auth' → logprob: -2.278043031692505
    4. 'level' → logprob: -2.778043031692505
    5. ' lev' → logprob: -3.528043031692505
    6. ' level' → logprob: -4.153043270111084
    7. 'l' → logprob: -6.528043270111084
    8. '_auth' → logprob: -6.528043270111084
    9. 'token' → logprob: -6.903043270111084
    10. ' token' → logprob: -8.153042793273926

Token 577: ' level' (ID: 3211)
  Prédit: 'level'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'level' → logprob: -0.5706719756126404
    2. ' level' → logprob: -0.9456719756126404
    3. ' for' → logprob: -3.695672035217285
    4. '_level' → logprob: -4.695672035217285
    5. '   ' → logprob: -5.320672035217285
    6. 'for' → logprob: -5.695672035217285
    7. '_levels' → logprob: -6.820672035217285
    8. 'lev' → logprob: -7.195672035217285
    9. '	level' → logprob: -7.445672035217285
    10. 'levels' → logprob: -7.570672035217285

Token 578: '?' (ID: 30)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006046350579708815
    2. ' for' → logprob: -5.381046295166016
    3. 'for' → logprob: -7.131046295166016
    4. '<|end|>' → logprob: -8.756046295166016
    5. '        
' → logprob: -9.006046295166016
    6. ',' → logprob: -9.631046295166016
    7. '   ' → logprob: -10.131046295166016
    8. 'levels' → logprob: -10.131046295166016
    9. '
' → logprob: -10.131046295166016
    10. '<|end|>' → logprob: -10.506046295166016

Token 579: ' For' (ID: 2214)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.9324333667755127
    2. 'for' → logprob: -1.0574333667755127
    3. '       ' → logprob: -2.5574333667755127
    4. '   ' → logprob: -3.8074333667755127
    5. 'pre' → logprob: -3.8074333667755127
    6. 'results' → logprob: -3.9324333667755127
    7. 'res' → logprob: -3.9324333667755127
    8. 'levels' → logprob: -3.9324333667755127
    9. 'rooms' → logprob: -4.682433128356934
    10. ' pre' → logprob: -4.807433128356934

Token 580: ' large' (ID: 4410)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.414197325706482
    2. ' lev' → logprob: -1.414197325706482
    3. 'lev' → logprob: -1.414197325706482
    4. ' l' → logprob: -1.914197325706482
    5. 'a' → logprob: -3.2891974449157715
    6. ' level' → logprob: -4.0391974449157715
    7. 'level' → logprob: -4.0391974449157715
    8. 'auth' → logprob: -4.2891974449157715
    9. 'la' → logprob: -5.1641974449157715
    10. ' auth' → logprob: -5.2891974449157715

Token 581: ' input' (ID: 3422)
  Prédit: 'levels'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'levels' → logprob: -0.45695674419403076
    2. 'inputs' → logprob: -2.3319568634033203
    3. '#' → logprob: -2.5819568634033203
    4. ' levels' → logprob: -3.2069568634033203
    5. ' inputs' → logprob: -3.9569568634033203
    6. 'W' → logprob: -3.9569568634033203
    7. 'scale' → logprob: -4.20695686340332
    8. 'boards' → logprob: -4.33195686340332
    9. 'input' → logprob: -4.83195686340332
    10. '   ' → logprob: -5.08195686340332

Token 582: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007506418041884899
    2. '<|end|>' → logprob: -6.257506370544434
    3. '        
' → logprob: -6.507506370544434
    4. 'for' → logprob: -7.132506370544434
    5. ' for' → logprob: -7.132506370544434
    6. '#' → logprob: -7.632506370544434
    7. ',' → logprob: -7.882506370544434
    8. '
' → logprob: -8.132506370544434
    9. 'levels' → logprob: -8.382506370544434
    10. 'def' → logprob: -8.382506370544434

Token 583: ' too' (ID: 3101)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.032399844378232956
    2. 'pass' → logprob: -4.407399654388428
    3. ' pass' → logprob: -5.032399654388428
    4. 'continue' → logprob: -5.782399654388428
    5. '
' → logprob: -6.282399654388428
    6. 'import' → logprob: -6.407399654388428
    7. ' #' → logprob: -6.532399654388428
    8. ' continue' → logprob: -6.782399654388428
    9. '       ' → logprob: -7.032399654388428
    10. ' for' → logprob: -7.282399654388428

Token 584: ' costly' (ID: 44091)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8802722692489624
    2. '#' → logprob: -1.5052722692489624
    3. '<|end|>' → logprob: -1.8802722692489624
    4. '...' → logprob: -2.630272388458252
    5. ' for' → logprob: -3.505272388458252
    6. 'levels' → logprob: -3.630272388458252
    7. ' levels' → logprob: -3.755272388458252
    8. 'for' → logprob: -4.255272388458252
    9. '<|end|>' → logprob: -4.630272388458252
    10. 'def' → logprob: -4.880272388458252

Token 585: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05407049134373665
    2. '<|end|>' → logprob: -3.054070472717285
    3. '<|end|>' → logprob: -6.179070472717285
    4. '
' → logprob: -6.179070472717285
    5. ' for' → logprob: -7.929070472717285
    6. '        
' → logprob: -8.304070472717285
    7. ',' → logprob: -8.804070472717285
    8. '#' → logprob: -9.054070472717285
    9. 'for' → logprob: -9.429070472717285
    10. '...' → logprob: -10.054070472717285

Token 586: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003603990189731121
    2. '<|end|>' → logprob: -6.128603935241699
    3. '        
' → logprob: -7.128603935241699
    4. '<|end|>' → logprob: -8.2536039352417
    5. ',' → logprob: -9.1286039352417
    6. '
' → logprob: -9.6286039352417
    7. '#' → logprob: -9.7536039352417
    8. 'import' → logprob: -10.3786039352417
    9. 'def' → logprob: -11.7536039352417
    10. 'for' → logprob: -11.7536039352417

Token 587: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003378999652341008
    2. '#' (adapté à ' #') → logprob: -7.003378868103027
    3. '        
' → logprob: -7.753378868103027
    4. 'levels' → logprob: -8.003378868103027
    5. 'low' → logprob: -8.253378868103027
    6. 'for' → logprob: -8.378378868103027
    7. 'import' → logprob: -8.753378868103027
    8. 'def' → logprob: -8.878378868103027
    9. ' for' → logprob: -9.128378868103027
    10. 'auth' → logprob: -9.253378868103027

Token 588: ' Optimization' (ID: 78012)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.48341041803359985
    2. 'max' → logprob: -1.733410358428955
    3. 'prefix' → logprob: -3.233410358428955
    4. 'pre' → logprob: -3.233410358428955
    5. 'memo' → logprob: -3.358410358428955
    6. 'auth' → logprob: -3.483410358428955
    7. '#' → logprob: -4.233410358428955
    8. 'cache' → logprob: -4.358410358428955
    9. 'def' → logprob: -4.983410358428955
    10. 'from' → logprob: -5.483410358428955

Token 589: ':' (ID: 25)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.318747341632843
    2. '#' → logprob: -2.0687472820281982
    3. ':' → logprob: -2.5687472820281982
    4. 'def' → logprob: -4.193747520446777
    5. '
' → logprob: -4.318747520446777
    6. 'import' → logprob: -4.818747520446777
    7. '        
' → logprob: -5.193747520446777
    8. ':
' → logprob: -5.193747520446777
    9. ' for' → logprob: -5.318747520446777
    10. 'levels' → logprob: -5.443747520446777

Token 590: ' Because' (ID: 13602)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.7706310153007507
    2. '#' → logprob: -2.0206310749053955
    3. 'max' → logprob: -2.0206310749053955
    4. 'prefix' → logprob: -3.2706310749053955
    5. 'for' → logprob: -3.3956310749053955
    6. 'def' → logprob: -3.5206310749053955
    7. 'auth' → logprob: -3.7706310749053955
    8. 'pre' → logprob: -3.8956310749053955
    9. 'pass' → logprob: -4.020630836486816
    10. 'from' → logprob: -4.020630836486816

Token 591: ' levels' (ID: 8374)
  Prédit: 'levels'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'levels' → logprob: -0.3390856087207794
    2. 'auth' → logprob: -1.964085578918457
    3. 'the' → logprob: -3.339085578918457
    4. ' levels' → logprob: -3.589085578918457
    5. ' auth' → logprob: -3.839085578918457
    6. 'for' → logprob: -4.714085578918457
    7. 'b' → logprob: -4.839085578918457
    8. 'we' → logprob: -5.089085578918457
    9. 'reachable' → logprob: -5.214085578918457
    10. ' the' → logprob: -5.589085578918457

Token 592: ' are' (ID: 553)
  Prédit: ' are'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' are' → logprob: -0.14642320573329926
    2. 'are' → logprob: -2.271423101425171
    3. 's' → logprob: -4.64642333984375
    4. '1' → logprob: -4.89642333984375
    5. 'in' → logprob: -5.52142333984375
    6. ' in' → logprob: -5.64642333984375
    7. 'for' → logprob: -6.39642333984375
    8. 'levels' → logprob: -6.64642333984375
    9. ' levels' → logprob: -7.02142333984375
    10. '[' → logprob: -7.14642333984375

Token 593: ' integers' (ID: 54912)
  Prédit: 'non'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'non' → logprob: -0.03809255361557007
    2. ' non' → logprob: -3.913092613220215
    3. 'sorted' → logprob: -4.163092613220215
    4. 'mon' → logprob: -7.038092613220215
    5. 'in' → logprob: -7.788092613220215
    6. ' sorted' → logprob: -8.163092613220215
    7. 'given' → logprob: -8.913092613220215
    8. 'already' → logprob: -10.663092613220215
    9. ' increasing' → logprob: -10.913092613220215
    10. 'strict' → logprob: -11.538092613220215

Token 594: ' and' (ID: 326)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.17189408838748932
    2. 'def' → logprob: -3.171894073486328
    3. '   ' → logprob: -4.046894073486328
    4. '#' → logprob: -4.296894073486328
    5. 'from' → logprob: -4.296894073486328
    6. 'import' → logprob: -4.421894073486328
    7. ' and' → logprob: -4.546894073486328
    8. ' for' → logprob: -4.671894073486328
    9. ' in' → logprob: -4.796894073486328
    10. 'for' → logprob: -5.046894073486328

Token 595: ' auth' (ID: 6246)
  Prédit: 'levels'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'levels' → logprob: -1.0944963693618774
    2. 'non' → logprob: -1.9694963693618774
    3. 'mon' → logprob: -2.469496250152588
    4. 'sorted' → logprob: -2.469496250152588
    5. ' non' → logprob: -2.719496250152588
    6. 'the' → logprob: -2.719496250152588
    7. ' levels' → logprob: -3.094496250152588
    8. 'b' → logprob: -3.719496250152588
    9. 'auth' → logprob: -3.719496250152588
    10. ' increasing' → logprob: -3.844496250152588

Token 596: ' level' (ID: 3211)
  Prédit: 'levels'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'levels' → logprob: -0.876362144947052
    2. ' levels' → logprob: -1.1263620853424072
    3. '_levels' → logprob: -2.2513620853424072
    4. ' can' → logprob: -3.5013620853424072
    5. '=' → logprob: -3.8763620853424072
    6. 'def' → logprob: -4.501362323760986
    7. ' is' → logprob: -4.751362323760986
    8. 'ranges' → logprob: -4.751362323760986
    9. '<|end|>' → logprob: -4.876362323760986
    10. '<|end|>' → logprob: -5.001362323760986

Token 597: ' is' (ID: 382)
  Prédit: ' only'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' only' → logprob: -1.3401679992675781
    2. ' increases' → logprob: -1.8401679992675781
    3. 'only' → logprob: -1.9651679992675781
    4. 'in' → logprob: -2.090167999267578
    5. ' can' → logprob: -2.215167999267578
    6. ' is' → logprob: -2.840167999267578
    7. 'can' → logprob: -3.465167999267578
    8. 'increments' → logprob: -3.465167999267578
    9. 'is' → logprob: -4.340167999267578
    10. 'increase' → logprob: -4.590167999267578

Token 598: ' cutoff' (ID: 100594)
  Prédit: 'non'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'non' → logprob: -0.6196895837783813
    2. 'mon' → logprob: -0.8696895837783813
    3. 'in' → logprob: -3.619689464569092
    4. ' non' → logprob: -4.494689464569092
    5. 'always' → logprob: -6.119689464569092
    6. ' always' → logprob: -7.244689464569092
    7. ' monot' → logprob: -7.619689464569092
    8. ' increasing' → logprob: -8.24468994140625
    9. ' monoton' → logprob: -8.36968994140625
    10. 'at' → logprob: -8.36968994140625

Token 599: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02226826921105385
    2. '<|end|>' → logprob: -5.147268295288086
    3. ' for' → logprob: -5.522268295288086
    4. ',
' → logprob: -5.522268295288086
    5. '   ' → logprob: -6.147268295288086
    6. ' ,' → logprob: -6.647268295288086
    7. '<|end|>' → logprob: -6.897268295288086
    8. ' at' → logprob: -7.272268295288086
    9. ' levels' → logprob: -8.022268295288086
    10. ':' → logprob: -8.272268295288086

Token 600: ' BFS' (ID: 190016)
  Prédit: 'we'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'we' → logprob: -1.4307096004486084
    2. ' we' → logprob: -1.5557096004486084
    3. ' for' → logprob: -2.1807096004486084
    4. 'levels' → logprob: -2.3057096004486084
    5. '#' → logprob: -2.8057096004486084
    6. 'def' → logprob: -2.8057096004486084
    7. '   ' → logprob: -3.0557096004486084
    8. ' levels' → logprob: -3.5557096004486084
    9. 'for' → logprob: -3.5557096004486084
    10. ' the' → logprob: -4.3057098388671875

Token 601: ' reachable' (ID: 143580)
  Prédit: ' can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.7780474424362183
    2. ' for' → logprob: -1.0280474424362183
    3. 'for' → logprob: -3.653047561645508
    4. ' will' → logprob: -3.778047561645508
    5. ' is' → logprob: -4.028047561645508
    6. ' levels' → logprob: -4.153047561645508
    7. '<|end|>' → logprob: -4.403047561645508
    8. ' results' → logprob: -4.528047561645508
    9. ' should' → logprob: -4.653047561645508
    10. 's' → logprob: -4.903047561645508

Token 602: ' rooms' (ID: 11348)
  Prédit: 'counts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'counts' → logprob: -1.1402952671051025
    2. 'count' → logprob: -1.8902952671051025
    3. ' counts' → logprob: -2.0152952671051025
    4. 'for' → logprob: -2.5152952671051025
    5. 'levels' → logprob: -2.5152952671051025
    6. 'rooms' → logprob: -2.7652952671051025
    7. 'def' → logprob: -3.2652952671051025
    8. 'sizes' → logprob: -3.5152952671051025
    9. 'tokens' → logprob: -3.8902952671051025
    10. ' for' → logprob: -4.015295028686523

Token 603: ' are' (ID: 553)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.8189446926116943
    2. 'for' → logprob: -1.8189446926116943
    3. ' counts' → logprob: -2.3189446926116943
    4. ' can' → logprob: -2.8189446926116943
    5. ' count' → logprob: -3.1939446926116943
    6. 'count' → logprob: -3.1939446926116943
    7. '=' → logprob: -3.5689446926116943
    8. ' at' → logprob: -3.6939446926116943
    9. ' is' → logprob: -4.443944931030273
    10. '   ' → logprob: -4.568944931030273

Token 604: ' monot' (ID: 138920)
  Prédit: 'non'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'non' → logprob: -0.11324711889028549
    2. 'mon' → logprob: -2.2382471561431885
    3. ' non' → logprob: -8.23824691772461
    4. 'in' → logprob: -9.36324691772461
    5. ' monoton' → logprob: -10.36324691772461
    6. ' monot' → logprob: -10.73824691772461
    7. '   ' → logprob: -12.36324691772461
    8. '非' → logprob: -12.48824691772461
    9. '
' → logprob: -12.73824691772461
    10. 'nested' → logprob: -12.98824691772461

Token 605: 'onic' (ID: 18294)
  Prédit: 'onic'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'onic' → logprob: -0.16991420090198517
    2. 'one' → logprob: -1.9199142456054688
    3. 'on' → logprob: -5.419914245605469
    4. 'o' → logprob: -6.169914245605469
    5. '   ' → logprob: -6.169914245605469
    6. '       ' → logprob: -8.044914245605469
    7. 'ony' → logprob: -8.044914245605469
    8. '
' → logprob: -9.044914245605469
    9. '```' → logprob: -9.169914245605469
    10. 'onc' → logprob: -10.294914245605469

Token 606: ' increasing' (ID: 11293)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.025900665670633316
    2. '<|end|>' → logprob: -4.775900840759277
    3. 'def' → logprob: -5.650900840759277
    4. '
' → logprob: -5.650900840759277
    5. ' for' → logprob: -6.025900840759277
    6. '   ' → logprob: -6.150900840759277
    7. '<|end|>' → logprob: -6.275900840759277
    8. '#' → logprob: -6.775900840759277
    9. ',' → logprob: -7.025900840759277
    10. '        
' → logprob: -7.275900840759277

Token 607: ' with' (ID: 483)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011037096381187439
    2. '<|end|>' → logprob: -5.0110368728637695
    3. '<|end|>' → logprob: -6.7610368728637695
    4. ',' → logprob: -6.7610368728637695
    5. ' for' → logprob: -7.6360368728637695
    6. 'def' → logprob: -7.6360368728637695
    7. '        
' → logprob: -7.8860368728637695
    8. '
' → logprob: -8.51103687286377
    9. 'for' → logprob: -9.01103687286377
    10. 'import' → logprob: -10.13603687286377

Token 608: ' auth' (ID: 6246)
  Prédit: 'auth'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'auth' → logprob: -0.2656311094760895
    2. 'respect' → logprob: -2.1406311988830566
    3. ' auth' → logprob: -3.0156311988830566
    4. ' respect' → logprob: -3.1406311988830566
    5. 'in' → logprob: -4.265631198883057
    6. ' increasing' → logprob: -5.640631198883057
    7. 'increase' → logprob: -6.640631198883057
    8. 'levels' → logprob: -7.140631198883057
    9. 'level' → logprob: -7.140631198883057
    10. 'authorization' → logprob: -7.640631198883057

Token 609: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03805331513285637
    2. 'levels' → logprob: -4.788053512573242
    3. 'def' → logprob: -5.038053512573242
    4. '<|end|>' → logprob: -5.163053512573242
    5. '
' → logprob: -5.413053512573242
    6. ' levels' → logprob: -5.538053512573242
    7. '<|end|>' → logprob: -6.288053512573242
    8. '#' → logprob: -6.663053512573242
    9. 'import' → logprob: -6.913053512573242
    10. '        
' → logprob: -6.913053512573242

Token 610: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01505010575056076
    2. 'def' → logprob: -5.140049934387207
    3. '<|end|>' → logprob: -6.140049934387207
    4. ',' → logprob: -6.515049934387207
    5. ' for' → logprob: -6.890049934387207
    6. '   ' → logprob: -7.015049934387207
    7. '<|end|>' → logprob: -7.140049934387207
    8. '        
' → logprob: -7.515049934387207
    9. '```' → logprob: -7.515049934387207
    10. '
' → logprob: -8.265049934387207

Token 611: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9658588767051697
    2. 'dp' → logprob: -1.5908589363098145
    3. '#' (adapté à ' #') → logprob: -2.4658589363098145
    4. 'def' → logprob: -2.9658589363098145
    5. 'max' → logprob: -3.3408589363098145
    6. 'reachable' → logprob: -3.3408589363098145
    7. 'pre' → logprob: -3.8408589363098145
    8. 'from' → logprob: -3.8408589363098145
    9. ' pre' → logprob: -4.0908589363098145
    10. 'import' → logprob: -4.3408589363098145

Token 612: ' We'll' (ID: 46830)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.6180043816566467
    2. 'def' → logprob: -2.493004322052002
    3. 'max' → logprob: -2.493004322052002
    4. '#' → logprob: -2.993004322052002
    5. 'reachable' → logprob: -3.243004322052002
    6. 'res' → logprob: -3.368004322052002
    7. 'auth' → logprob: -3.493004322052002
    8. 'reach' → logprob: -4.118004322052002
    9. 'memo' → logprob: -4.368004322052002
    10. 'from' → logprob: -4.368004322052002

Token 613: ' do' (ID: 621)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5437455177307129
    2. 'import' → logprob: -2.168745517730713
    3. 'from' → logprob: -2.293745517730713
    4. 'levels' → logprob: -3.543745517730713
    5. 'for' → logprob: -3.793745517730713
    6. 'auth' → logprob: -4.043745517730713
    7. 'continue' → logprob: -4.168745517730713
    8. 'left' → logprob: -4.293745517730713
    9. '   ' → logprob: -4.293745517730713
    10. '#' → logprob: -4.418745517730713

Token 614: ' BFS' (ID: 190016)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.1795517206192017
    2. ' from' → logprob: -1.6795517206192017
    3. 'dp' → logprob: -2.054551601409912
    4. 'from' → logprob: -2.179551601409912
    5. ' for' → logprob: -3.179551601409912
    6. ' def' → logprob: -3.429551601409912
    7. '#' → logprob: -3.554551601409912
    8. 'left' → logprob: -3.679551601409912
    9. ' left' → logprob: -4.179551601409912
    10. 'auth' → logprob: -4.179551601409912

Token 615: ' only' (ID: 1606)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6018425226211548
    2. 'for' → logprob: -0.9768425226211548
    3. '   ' → logprob: -2.8518424034118652
    4. '<|end|>' → logprob: -5.601842403411865
    5. '<|end|>' → logprob: -5.601842403411865
    6. 'levels' → logprob: -6.101842403411865
    7. '
' → logprob: -6.476842403411865
    8. 'def' → logprob: -6.601842403411865
    9. ',' → logprob: -6.851842403411865
    10. ' levels' → logprob: -7.976842403411865

Token 616: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7344069480895996
    2. 'for' → logprob: -0.8594069480895996
    3. '<|end|>' → logprob: -3.1094069480895996
    4. ' at' → logprob: -3.4844069480895996
    5. 'def' → logprob: -5.1094069480896
    6. '<|end|>' → logprob: -5.6094069480896
    7. 'from' → logprob: -5.7344069480896
    8. 'levels' → logprob: -6.2344069480896
    9. 'at' → logprob: -6.4844069480896
    10. '   ' → logprob: -6.4844069480896

Token 617: ' distinct' (ID: 16913)
  Prédit: 'lev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lev' → logprob: -0.796819269657135
    2. 'the' → logprob: -1.9218192100524902
    3. 'each' → logprob: -2.1718192100524902
    4. '0' → logprob: -2.4218192100524902
    5. 'levels' → logprob: -2.6718192100524902
    6. 'lowest' → logprob: -2.7968192100524902
    7. 'all' → logprob: -3.5468192100524902
    8. 'level' → logprob: -4.17181921005249
    9. ' lev' → logprob: -5.42181921005249
    10. 'max' → logprob: -5.54681921005249

Token 618: ' auth' (ID: 6246)
  Prédit: 'levels'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'levels' → logprob: -0.2285158336162567
    2. ' levels' → logprob: -2.353515863418579
    3. 'auth' → logprob: -2.978515863418579
    4. ' auth' → logprob: -4.103515625
    5. 'lev' → logprob: -4.353515625
    6. '_auth' → logprob: -4.603515625
    7. '_levels' → logprob: -4.603515625
    8. 'level' → logprob: -5.478515625
    9. ' lev' → logprob: -6.478515625
    10. 'tokens' → logprob: -7.478515625

Token 619: ' levels' (ID: 8374)
  Prédit: 'levels'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'levels' → logprob: -0.41468364000320435
    2. '_levels' → logprob: -1.4146835803985596
    3. ' levels' → logprob: -2.5396835803985596
    4. '   ' → logprob: -4.164683818817139
    5. ')' → logprob: -7.539683818817139
    6. '1' → logprob: -8.41468334197998
    7. 'level' → logprob: -8.41468334197998
    8. '    ' → logprob: -8.91468334197998
    9. '<|end|>' → logprob: -9.16468334197998
    10. '_level' → logprob: -9.28968334197998

Token 620: ' in' (ID: 306)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03527295961976051
    2. '<|end|>' → logprob: -3.7852730751037598
    3. ' for' → logprob: -5.03527307510376
    4. '<|end|>' → logprob: -6.28527307510376
    5. 'levels' → logprob: -6.78527307510376
    6. ' levels' → logprob: -6.91027307510376
    7. 'for' → logprob: -7.53527307510376
    8. ',' → logprob: -8.285272598266602
    9. '        
' → logprob: -8.785272598266602
    10. '
' → logprob: -9.035272598266602

Token 621: ' sorted' (ID: 20099)
  Prédit: 'lev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lev' → logprob: -0.08141987770795822
    2. 'levels' → logprob: -2.5814199447631836
    3. '[' → logprob: -6.831419944763184
    4. ' lev' → logprob: -7.456419944763184
    5. '   ' → logprob: -7.831419944763184
    6. 'range' → logprob: -9.081419944763184
    7. 'sorted' → logprob: -9.831419944763184
    8. ' levels' → logprob: -10.081419944763184
    9. 'level' → logprob: -10.081419944763184
    10. 'set' → logprob: -10.581419944763184

Token 622: ' order' (ID: 2569)
  Prédit: 'lev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lev' → logprob: -0.3334009349346161
    2. 'levels' → logprob: -1.5834009647369385
    3. 'for' → logprob: -3.3334009647369385
    4. 'def' → logprob: -3.8334009647369385
    5. '_levels' → logprob: -4.958400726318359
    6. '_' → logprob: -5.583400726318359
    7. '   ' → logprob: -5.583400726318359
    8. '#' → logprob: -6.708400726318359
    9. '1' → logprob: -6.958400726318359
    10. '(' → logprob: -7.208400726318359

Token 623: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013273878023028374
    2. ' for' → logprob: -4.6382737159729
    3. 'for' → logprob: -6.3882737159729
    4. ',' → logprob: -7.3882737159729
    5. '        
' → logprob: -7.5132737159729
    6. '   ' → logprob: -8.888274192810059
    7. '<|end|>' → logprob: -8.888274192810059
    8. 'def' → logprob: -9.263274192810059
    9. '
' → logprob: -10.013274192810059
    10. ' and' → logprob: -10.638274192810059

Token 624: ' using' (ID: 2360)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6609318256378174
    2. '   ' → logprob: -2.1609318256378174
    3. 'reachable' → logprob: -2.4109318256378174
    4. 'res' → logprob: -2.5359318256378174
    5. ' and' → logprob: -3.6609318256378174
    6. 'def' → logprob: -3.7859318256378174
    7. '#' → logprob: -4.035931587219238
    8. 'and' → logprob: -4.160931587219238
    9. 'for' → logprob: -4.160931587219238
    10. 'count' → logprob: -4.160931587219238

Token 625: ' binary' (ID: 15600)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.3958891034126282
    2. 'b' → logprob: -1.8958890438079834
    3. 'possible' → logprob: -3.2708890438079834
    4. 'levels' → logprob: -3.2708890438079834
    5. 'previous' → logprob: -3.7708890438079834
    6. 'the' → logprob: -3.8958890438079834
    7. ' visited' → logprob: -4.0208892822265625
    8. ' levels' → logprob: -4.5208892822265625
    9. ' the' → logprob: -4.5208892822265625
    10. ' possible' → logprob: -5.6458892822265625

Token 626: ' search' (ID: 3684)
  Prédit: 'search'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'search' → logprob: -0.005467113573104143
    2. '_search' → logprob: -5.630466938018799
    3. ' search' → logprob: -6.505466938018799
    4. ' searches' → logprob: -9.505467414855957
    5. 'def' → logprob: -9.755467414855957
    6. 'import' → logprob: -9.880467414855957
    7. '<|end|>' → logprob: -9.880467414855957
    8. 'for' → logprob: -10.880467414855957
    9. '
' → logprob: -10.880467414855957
    10. 's' → logprob: -11.005467414855957

Token 627: ' on' (ID: 402)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.27989813685417175
    2. '<|end|>' → logprob: -1.5298981666564941
    3. '<|end|>' → logprob: -3.904898166656494
    4. 'def' → logprob: -5.904898166656494
    5. ',' → logprob: -6.779898166656494
    6. '
' → logprob: -7.029898166656494
    7. ' for' → logprob: -7.029898166656494
    8. '   ' → logprob: -7.404898166656494
    9. '        
' → logprob: -7.779898166656494
    10. 'import' → logprob: -9.154897689819336

Token 628: ' levels' (ID: 8374)
  Prédit: 'levels'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'levels' → logprob: -0.5614060163497925
    2. 'lev' → logprob: -1.5614060163497925
    3. 'auth' → logprob: -2.061406135559082
    4. 'possible' → logprob: -3.936406135559082
    5. ' levels' → logprob: -4.311406135559082
    6. ' lev' → logprob: -4.311406135559082
    7. 'def' → logprob: -4.436406135559082
    8. 'the' → logprob: -4.686406135559082
    9. 'res' → logprob: -5.061406135559082
    10. ' auth' → logprob: -5.811406135559082

Token 629: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7130818367004395
    2. '<|end|>' → logprob: -0.7130818367004395
    3. '<|end|>' → logprob: -4.0880818367004395
    4. '
' → logprob: -6.4630818367004395
    5. ',' → logprob: -7.5880818367004395
    6. ')' → logprob: -8.838081359863281
    7. '        
' → logprob: -8.963081359863281
    8. 'import' → logprob: -9.088081359863281
    9. 'def' → logprob: -9.088081359863281
    10. '#' → logprob: -9.713081359863281

Token 630: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003492327407002449
    2. '<|end|>' → logprob: -6.37849235534668
    3. ',' → logprob: -7.50349235534668
    4. '        
' → logprob: -7.75349235534668
    5. '
' → logprob: -8.75349235534668
    6. ' for' → logprob: -8.87849235534668
    7. '<|end|>' → logprob: -9.00349235534668
    8. 'def' → logprob: -9.12849235534668
    9. '   ' → logprob: -9.37849235534668
    10. 'import' → logprob: -10.25349235534668

Token 631: ' def' (ID: 1056)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03328220546245575
    2. 'max' → logprob: -5.033282279968262
    3. 'for' → logprob: -5.033282279968262
    4. 'def' (adapté à ' def') → logprob: -5.408282279968262
    5. ' for' → logprob: -5.408282279968262
    6. '#' → logprob: -5.908282279968262
    7. '   ' → logprob: -6.408282279968262
    8. 'auth' → logprob: -6.658282279968262
    9. ' auth' → logprob: -7.033282279968262
    10. 'dp' → logprob: -7.158282279968262

Token 632: ' pre' (ID: 876)
  Prédit: ' bfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bfs' → logprob: -0.5319586396217346
    2. ' binary' → logprob: -2.28195858001709
    3. ' get' → logprob: -2.78195858001709
    4. ' pre' → logprob: -3.03195858001709
    5. ' compute' → logprob: -3.03195858001709
    6. ' calc' → logprob: -3.40695858001709
    7. ' possible' → logprob: -3.65695858001709
    8. ' b' → logprob: -3.90695858001709
    9. ' auth' → logprob: -4.28195858001709
    10. ' check' → logprob: -4.40695858001709

Token 633: 'compute' (ID: 54521)
  Prédit: 'compute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compute' → logprob: -1.4021237802808173e-05
    2. 'def' → logprob: -12.000014305114746
    3. 'dict' → logprob: -12.625014305114746
    4. 'pare' → logprob: -13.625014305114746
    5. 'computed' → logprob: -14.125014305114746
    6. 'comput' → logprob: -14.375014305114746
    7. 'com' → logprob: -14.750014305114746
    8. '_compute' → logprob: -14.875014305114746
    9. 'process' → logprob: -15.125014305114746
    10. 'calculate' → logprob: -15.875014305114746

Token 634: '(W' (ID: 26031)
  Prédit: '(W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(W' → logprob: -0.29551711678504944
    2. '(' → logprob: -1.545517086982727
    3. '_levels' → logprob: -4.2955169677734375
    4. '_auth' → logprob: -4.4205169677734375
    5. '_' → logprob: -4.7955169677734375
    6. '(level' → logprob: -5.2955169677734375
    7. '(_' → logprob: -6.5455169677734375
    8. '_(' → logprob: -7.4205169677734375
    9. 'auth' → logprob: -8.545516967773438
    10. 'levels' → logprob: -8.920516967773438

Token 635: ',H' (ID: 94400)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03239615634083748
    2. ',' → logprob: -3.532396078109741
    3. '_,' → logprob: -6.78239631652832
    4. '_' → logprob: -7.40739631652832
    5. ',_' → logprob: -7.53239631652832
    6. ' ,' → logprob: -9.28239631652832
    7. ',W' → logprob: -9.40739631652832
    8. '):' → logprob: -9.65739631652832
    9. '):
' → logprob: -10.03239631652832
    10. ',H' → logprob: -11.15739631652832

Token 636: ',X' (ID: 83943)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.027291782200336456
    2. ',X' → logprob: -3.777291774749756
    3. ',L' → logprob: -6.777291774749756
    4. ',l' → logprob: -7.027291774749756
    5. ' ,' → logprob: -7.152291774749756
    6. ',s' → logprob: -7.652291774749756
    7. ',x' → logprob: -8.527292251586914
    8. ',Y' → logprob: -8.902292251586914
    9. ',S' → logprob: -9.402292251586914
    10. ',a' → logprob: -9.902292251586914

Token 637: ',Y' (ID: 71464)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.45596206188201904
    2. ',' → logprob: -1.705962061882019
    3. ',Y' → logprob: -1.705962061882019
    4. ',H' → logprob: -6.455962181091309
    5. ',y' → logprob: -7.705962181091309
    6. ' ,' → logprob: -7.830962181091309
    7. ',W' → logprob: -8.580962181091309
    8. ',
' → logprob: -8.830962181091309
    9. 'Y' → logprob: -10.580962181091309
    10. ',S' → logprob: -10.580962181091309

Token 638: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006384541047737002
    2. ' ,' → logprob: -7.500638484954834
    3. ',s' → logprob: -10.250638008117676
    4. ',l' → logprob: -11.250638008117676
    5. ',int' → logprob: -11.875638008117676
    6. ',
' → logprob: -12.125638008117676
    7. ',List' → logprob: -12.500638008117676
    8. '   ' → logprob: -12.625638008117676
    9. ',a' → logprob: -13.125638008117676
    10. ',S' → logprob: -13.625638008117676

Token 639: 'levels' (ID: 97607)
  Prédit: 'levels'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'levels' → logprob: -0.008486210368573666
    2. 'auth' → logprob: -5.008486270904541
    3. ',' → logprob: -7.758486270904541
    4. ' levels' → logprob: -8.383485794067383
    5. '):
' → logprob: -8.508485794067383
    6. '):' → logprob: -8.633485794067383
    7. 's' → logprob: -8.633485794067383
    8. 'level' → logprob: -9.008485794067383
    9. ')' → logprob: -9.508485794067383
    10. '   ' → logprob: -10.008485794067383

Token 640: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.016715355217456818
    2. ',' → logprob: -4.2667155265808105
    3. '):
' → logprob: -6.1417155265808105
    4. ')' → logprob: -8.391715049743652
    5. '   ' → logprob: -9.516715049743652
    6. '):
' → logprob: -10.766715049743652
    7. ',n' → logprob: -11.266715049743652
    8. ' ):' → logprob: -11.516715049743652
    9. ',x' → logprob: -11.516715049743652
    10. ',y' → logprob: -12.141715049743652

Token 641: 'lev' (ID: 3944)
  Prédit: 'auth'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'auth' → logprob: -0.291888028383255
    2. '):
' → logprob: -1.7918879985809326
    3. 'lev' → logprob: -3.0418879985809326
    4. 'levels' → logprob: -4.541888236999512
    5. '):' → logprob: -4.916888236999512
    6. 'max' → logprob: -5.541888236999512
    7. 'unique' → logprob: -5.666888236999512
    8. '   ' → logprob: -5.791888236999512
    9. 'sorted' → logprob: -6.041888236999512
    10. ' auth' → logprob: -6.916888236999512

Token 642: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0032591153867542744
    2. 'els' → logprob: -5.878259181976318
    3. '   ' → logprob: -8.87825870513916
    4. 'ls' → logprob: -9.87825870513916
    5. '```' → logprob: -10.12825870513916
    6. '=' → logprob: -10.12825870513916
    7. 'def' → logprob: -10.25325870513916
    8. 'el' → logprob: -10.37825870513916
    9. '       ' → logprob: -10.75325870513916
    10. ' s' → logprob: -11.12825870513916

Token 643: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.6124180555343628
    2. '):' → logprob: -0.8624180555343628
    3. '1' → logprob: -3.3624181747436523
    4. '):
' → logprob: -7.862418174743652
    5. '   ' → logprob: -8.237418174743652
    6. ')' → logprob: -8.487418174743652
    7. 's' → logprob: -8.987418174743652
    8. '):

' → logprob: -9.737418174743652
    9. ',' → logprob: -10.362418174743652
    10. '_' → logprob: -10.737418174743652

Token 644: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07400575280189514
    2. ':' → logprob: -2.8240058422088623
    3. '   ' → logprob: -5.324005603790283
    4. ',' → logprob: -6.199005603790283
    5. ':
' → logprob: -6.449005603790283
    6. '<|end|>' → logprob: -6.699005603790283
    7. '	   ' → logprob: -7.449005603790283
    8. '        
' → logprob: -8.074006080627441
    9. '<|end|>' → logprob: -8.449006080627441
    10. '    
' → logprob: -8.824006080627441

Token 645: ' res' (ID: 694)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.38171401619911194
    2. 'dp' → logprob: -1.3817139863967896
    3. 'res' (adapté à ' res') → logprob: -3.881714105606079
    4. 'results' → logprob: -4.5067138671875
    5. 'reachable' → logprob: -4.7567138671875
    6. 'visited' → logprob: -5.3817138671875
    7. 'max' → logprob: -5.5067138671875
    8. 'result' → logprob: -6.0067138671875
    9. ' dp' → logprob: -6.1317138671875
    10. 'ans' → logprob: -6.2567138671875

Token 646: ' =' (ID: 314)
  Prédit: '=[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=[]' → logprob: -0.050892625004053116
    2. ' =' → logprob: -3.8008925914764404
    3. '=[' → logprob: -4.1758928298950195
    4. '=' → logprob: -4.9258928298950195
    5. '={}' → logprob: -6.0508928298950195
    6. '=[]
' → logprob: -6.1758928298950195
    7. '=[]
' → logprob: -9.05089282989502
    8. '=[[' → logprob: -10.17589282989502
    9. '   ' → logprob: -10.80089282989502
    10. '=[],' → logprob: -11.55089282989502

Token 647: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.032084617763757706
    2. '[' → logprob: -3.7820847034454346
    3. '[]
' → logprob: -4.7820844650268555
    4. '{}' → logprob: -7.7820844650268555
    5. '{' → logprob: -13.782084465026855
    6. '{}
' → logprob: -14.032084465026855
    7. ' []' → logprob: -14.157084465026855
    8. '[]

' → logprob: -14.657084465026855
    9. '[-' → logprob: -15.282084465026855
    10. '[len' → logprob: -15.532084465026855

Token 648: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 649: ' prev' (ID: 10258)
  Prédit: 'prev'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prev' (adapté à ' prev') → logprob: -1.113267421722412
    2. 'auth' → logprob: -1.613267421722412
    3. 'for' → logprob: -1.863267421722412
    4. 'last' → logprob: -2.488267421722412
    5. 'visited' → logprob: -2.488267421722412
    6. 'count' → logprob: -3.738267421722412
    7. 'current' → logprob: -4.113267421722412
    8. ' auth' → logprob: -4.113267421722412
    9. ' for' → logprob: -4.238267421722412
    10. 'curr' → logprob: -4.363267421722412

Token 650: ' =' (ID: 314)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.8474475145339966
    2. '=' → logprob: -1.0974475145339966
    3. '_count' → logprob: -1.7224475145339966
    4. ' =' → logprob: -4.722447395324707
    5. '=-' → logprob: -4.722447395324707
    6. 'rooms' → logprob: -4.722447395324707
    7. '_cnt' → logprob: -5.347447395324707
    8. '_val' → logprob: -5.347447395324707
    9. '_rooms' → logprob: -5.347447395324707
    10. 'visited' → logprob: -5.472447395324707

Token 651: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.633834958076477
    2. '-' → logprob: -0.758834958076477
    3. '[' → logprob: -7.8838348388671875
    4. '[]
' → logprob: -8.383834838867188
    5. 'set' → logprob: -9.133834838867188
    6. '[]' → logprob: -9.133834838867188
    7. 'None' → logprob: -9.133834838867188
    8. '[-' → logprob: -9.133834838867188
    9. 'b' → logprob: -9.758834838867188
    10. '[[' → logprob: -10.383834838867188

Token 652: '0' (ID: 15)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.2832280397415161
    2. '0' → logprob: -1.4082280397415161
    3. 'float' → logprob: -7.283227920532227
    4. 'None' → logprob: -7.783227920532227
    5. '[' → logprob: -8.658227920532227
    6. '[-' → logprob: -8.658227920532227
    7. 'set' → logprob: -9.033227920532227
    8. '[[' → logprob: -9.533227920532227
    9. '[]' → logprob: -9.658227920532227
    10. 'sys' → logprob: -10.033227920532227

Token 653: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.025119855999946594
    2. '           ' → logprob: -5.150119781494141
    3. '   ' → logprob: -5.150119781494141
    4. '<|end|>' → logprob: -5.525119781494141
    5. '    
' → logprob: -5.900119781494141
    6. '  
' → logprob: -6.275119781494141
    7. ' for' → logprob: -6.400119781494141
    8. '<|end|>' → logprob: -7.525119781494141
    9. ',' → logprob: -7.900119781494141
    10. '
' → logprob: -8.02511978149414

Token 654: '           ' (ID: 352)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9129205346107483
    2. '           ' → logprob: -1.2879204750061035
    3. '<|end|>' → logprob: -1.4129204750061035
    4. '   ' → logprob: -3.2879204750061035
    5. '<|end|>' → logprob: -4.0379204750061035
    6. '    
' → logprob: -5.2879204750061035
    7. 'def' → logprob: -5.6629204750061035
    8. ' for' → logprob: -6.2879204750061035
    9. '  
' → logprob: -6.2879204750061035
    10. ',' → logprob: -6.5379204750061035

Token 655: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.9892865419387817
    2. '           ' → logprob: -1.2392865419387817
    3. ' for' → logprob: -1.2392865419387817
    4. '   ' → logprob: -3.239286422729492
    5. '
' → logprob: -5.364286422729492
    6. 'auth' → logprob: -5.989286422729492
    7. ' auth' → logprob: -7.614286422729492
    8. 'prev' → logprob: -7.864286422729492
    9. 'def' → logprob: -8.239286422729492
    10. '            
' → logprob: -8.489286422729492

Token 656: ' auth' (ID: 6246)
  Prédit: 'auth'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'auth' → logprob: -0.2924292981624603
    2. 'lev' → logprob: -2.042429208755493
    3. 'l' → logprob: -2.667429208755493
    4. 'a' → logprob: -3.417429208755493
    5. 'lv' → logprob: -4.542429447174072
    6. 'level' → logprob: -5.167429447174072
    7. 'lvl' → logprob: -5.667429447174072
    8. ' auth' → logprob: -7.667429447174072
    9. 'al' → logprob: -8.042428970336914
    10. 'val' → logprob: -8.167428970336914

Token 657: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07006148248910904
    2. 'in' → logprob: -2.695061445236206
    3. ' ' → logprob: -10.445061683654785
    4. '_in' → logprob: -10.820061683654785
    5. 'level' → logprob: -11.195061683654785
    6. '	in' → logprob: -11.320061683654785
    7. 's' → logprob: -11.945061683654785
    8. '_' → logprob: -11.945061683654785
    9. 'token' → logprob: -12.632561683654785
    10. ' _' → logprob: -12.820061683654785

Token 658: ' lev' (ID: 12114)
  Prédit: 'lev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lev' → logprob: -6.742448022123426e-05
    2. ' lev' → logprob: -9.625067710876465
    3. '   ' → logprob: -14.875067710876465
    4. 'leve' → logprob: -15.250067710876465
    5. 'leb' → logprob: -16.25006675720215
    6. ' ' → logprob: -16.25006675720215
    7. '
' → logprob: -16.75006675720215
    8. 'le' → logprob: -16.75006675720215
    9. 'lever' → logprob: -17.00006675720215
    10. '  ' → logprob: -17.12506675720215

Token 659: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0001370320824207738
    2. 'lev' → logprob: -10.000137329101562
    3. '```' → logprob: -10.625137329101562
    4. '   ' → logprob: -10.750137329101562
    5. '[' → logprob: -10.750137329101562
    6. 'ls' → logprob: -12.500137329101562
    7. '       ' → logprob: -12.625137329101562
    8. 'vs' → logprob: -12.875137329101562
    9. 'els' → logprob: -13.000137329101562
    10. 'v' → logprob: -13.250137329101562

Token 660: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04301712289452553
    2. ':
' → logprob: -3.1680171489715576
    3. '):
' → logprob: -11.668017387390137
    4. '):' → logprob: -12.418017387390137
    5. ':
' → logprob: -12.918017387390137
    6. ' :' → logprob: -13.168017387390137
    7. ':

' → logprob: -15.543017387390137
    8. '   ' → logprob: -16.04301643371582
    9. ' :
' → logprob: -16.16801643371582
    10. '=' → logprob: -16.29301643371582

Token 661: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.029120923951268196
    2. ':' → logprob: -4.779120922088623
    3. '                
' → logprob: -4.904120922088623
    4. ':
' → logprob: -6.029120922088623
    5. ',' → logprob: -6.029120922088623
    6. '):
' → logprob: -6.529120922088623
    7. '<|end|>' → logprob: -6.654120922088623
    8. '            
' → logprob: -6.779120922088623
    9. '           ' → logprob: -7.029120922088623
    10. '
' → logprob: -7.279120922088623

Token 662: ' if' (ID: 538)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.8562977313995361
    2. 'count' → logprob: -0.9812977313995361
    3. ' cnt' → logprob: -2.981297731399536
    4. '           ' → logprob: -3.106297731399536
    5. ' count' → logprob: -3.481297731399536
    6. 'rooms' → logprob: -4.106297492980957
    7. 'res' → logprob: -4.356297492980957
    8. 'r' → logprob: -4.481297492980957
    9. '               ' → logprob: -4.981297492980957
    10. 'n' → logprob: -5.606297492980957

Token 663: ' auth' (ID: 6246)
  Prédit: 'auth'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'auth' → logprob: -0.0015080781886354089
    2. 'prev' → logprob: -7.3765082359313965
    3. 'res' → logprob: -8.126507759094238
    4. ' auth' → logprob: -8.251507759094238
    5. 'levels' → logprob: -8.501507759094238
    6. 'len' → logprob: -10.376507759094238
    7. '   ' → logprob: -11.001507759094238
    8. 'lev' → logprob: -11.001507759094238
    9. 'pre' → logprob: -11.126507759094238
    10. 'not' → logprob: -11.501507759094238

Token 664: '==' (ID: 560)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.2395559847354889
    2. ' >=' → logprob: -1.6145559549331665
    3. '>' → logprob: -4.614555835723877
    4. ' >' → logprob: -5.989555835723877
    5. '==' → logprob: -7.114555835723877
    6. ' <' → logprob: -8.364556312561035
    7. ' ==' → logprob: -8.614556312561035
    8. '<' → logprob: -8.864556312561035
    9. ' ' → logprob: -9.864556312561035
    10. '<=' → logprob: -10.239556312561035

Token 665: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00010533124441280961
    2. 'prev' → logprob: -9.500104904174805
    3. ' ' → logprob: -10.500104904174805
    4. '   ' → logprob: -14.750104904174805
    5. ' prev' → logprob: -14.812604904174805
    6. '```' → logprob: -14.812604904174805
    7. 'lev' → logprob: -15.125104904174805
    8. '-' → logprob: -15.250104904174805
    9. '  ' → logprob: -16.375104904174805
    10. 'level' → logprob: -16.750104904174805

Token 666: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.05543890222907066
    2. ':' → logprob: -2.930438995361328
    3. '                   ' → logprob: -8.430438995361328
    4. ' or' → logprob: -8.555438995361328
    5. ':
' → logprob: -9.555438995361328
    6. '               ' → logprob: -10.680438995361328
    7. ':return' → logprob: -10.680438995361328
    8. '):
' → logprob: -11.305438995361328
    9. ' and' → logprob: -12.430438995361328
    10. '           ' → logprob: -12.555438995361328

Token 667: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.02924608439207077
    2. ':
' → logprob: -3.9042460918426514
    3. '
' → logprob: -6.154245853424072
    4. '):
' → logprob: -6.279245853424072
    5. ':' → logprob: -6.529245853424072
    6. '               ' → logprob: -7.029245853424072
    7. '           ' → logprob: -7.904245853424072
    8. ',' → logprob: -8.02924633026123
    9. ' continue' → logprob: -8.15424633026123
    10. 'continue' → logprob: -8.27924633026123

Token 668: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -0.010768357664346695
    2. ' res' → logprob: -4.635768413543701
    3. '                   ' → logprob: -7.010768413543701
    4. '0' → logprob: -10.010767936706543
    5. '               ' → logprob: -10.135767936706543
    6. '   ' → logprob: -11.760767936706543
    7. ',res' → logprob: -11.885767936706543
    8. '                       ' → logprob: -13.260767936706543
    9. '           ' → logprob: -13.385767936706543
    10. '
' → logprob: -13.510767936706543

Token 669: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -3.47626737493556e-05
    2. '.' → logprob: -10.37503433227539
    3. 'append' → logprob: -13.25003433227539
    4. '=' → logprob: -13.62503433227539
    5. '.app' → logprob: -16.00003433227539
    6. '.ap' → logprob: -16.12503433227539
    7. ' .' → logprob: -16.12503433227539
    8. '               ' → logprob: -16.62503433227539
    9. '                   ' → logprob: -17.00003433227539
    10. '.extend' → logprob: -17.12503433227539

Token 670: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.005760507192462683
    2. '(prev' → logprob: -5.255760669708252
    3. '0' → logprob: -7.880760669708252
    4. '(pre' → logprob: -9.255760192871094
    5. '((' → logprob: -10.255760192871094
    6. 'prev' → logprob: -11.255760192871094
    7. '(
' → logprob: -14.130760192871094
    8. ' (' → logprob: -14.630760192871094
    9. '(max' → logprob: -14.755760192871094
    10. '([' → logprob: -14.755760192871094

Token 671: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0089421346783638
    2. 'prev' → logprob: -5.258942127227783
    3. '(' → logprob: -6.258942127227783
    4. '1' → logprob: -7.258942127227783
    5. 'pre' → logprob: -7.758942127227783
    6. 'b' → logprob: -8.008942604064941
    7. '[' → logprob: -9.383942604064941
    8. ' ' → logprob: -9.758942604064941
    9. '(prev' → logprob: -9.883942604064941
    10. 'max' → logprob: -10.508942604064941

Token 672: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.6204379200935364
    2. ')' → logprob: -0.9954379200935364
    3. '               ' → logprob: -2.4954378604888916
    4. '                   ' → logprob: -4.620438098907471
    5. ')
' → logprob: -8.495437622070312
    6. 'continue' → logprob: -9.620437622070312
    7. '           ' → logprob: -10.120437622070312
    8. ')return' → logprob: -10.245437622070312
    9. ' continue' → logprob: -10.745437622070312
    10. ' )
' → logprob: -11.620437622070312

Token 673: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.08303613215684891
    2. '                   ' → logprob: -2.583036184310913
    3. 'continue' → logprob: -5.583035945892334
    4. ' continue' → logprob: -8.458036422729492
    5. '           ' → logprob: -9.333036422729492
    6. 'else' → logprob: -11.583036422729492
    7. '       ' → logprob: -11.583036422729492
    8. '   ' → logprob: -11.833036422729492
    9. '<|end|>' → logprob: -11.833036422729492
    10. '	           ' → logprob: -12.208036422729492

Token 674: ' else' (ID: 1203)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.1291610300540924
    2. 'else' (adapté à ' else') → logprob: -2.1291611194610596
    3. ' else' → logprob: -6.3791608810424805
    4. 'elif' → logprob: -7.6291608810424805
    5. '           ' → logprob: -10.62916088104248
    6. ' elif' → logprob: -12.37916088104248
    7. ',' → logprob: -12.37916088104248
    8. '                   ' → logprob: -13.12916088104248
    9. '       ' → logprob: -13.37916088104248
    10. '<|end|>' → logprob: -13.37916088104248

Token 675: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.6437767744064331
    2. ':' → logprob: -0.7687767744064331
    3. '                   ' → logprob: -4.643776893615723
    4. '               ' → logprob: -6.893776893615723
    5. ',' → logprob: -8.893776893615723
    6. '           ' → logprob: -9.268776893615723
    7. '   ' → logprob: -9.643776893615723
    8. ':

' → logprob: -9.893776893615723
    9. ':
' → logprob: -10.143776893615723
    10. '):
' → logprob: -10.518776893615723

Token 676: '                   ' (ID: 699)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.3929821252822876
    2. '                   ' → logprob: -1.1429821252822876
    3. '   ' → logprob: -6.767982006072998
    4. '           ' → logprob: -6.767982006072998
    5. '
' → logprob: -7.017982006072998
    6. ':' → logprob: -7.142982006072998
    7. '```' → logprob: -7.767982006072998
    8. ':
' → logprob: -8.267982482910156
    9. ',' → logprob: -8.517982482910156
    10. '                
' → logprob: -9.142982482910156

Token 677: ' c' (ID: 274)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.1296026110649109
    2. 'count' → logprob: -3.2546026706695557
    3. 'cnt' → logprob: -3.3796026706695557
    4. '                   ' → logprob: -3.6296026706695557
    5. ' res' → logprob: -4.879602432250977
    6. '   ' → logprob: -5.254602432250977
    7. '               ' → logprob: -5.504602432250977
    8. 'val' → logprob: -7.004602432250977
    9. ' cnt' → logprob: -7.379602432250977
    10. 'rooms' → logprob: -7.504602432250977

Token 678: '=b' (ID: 49769)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2010633945465088
    2. '=b' → logprob: -1.8260633945465088
    3. 'ount' → logprob: -4.57606315612793
    4. ' =' → logprob: -4.82606315612793
    5. '=count' → logprob: -6.32606315612793
    6. 'b' → logprob: -7.20106315612793
    7. 'nt' → logprob: -8.82606315612793
    8. '=c' → logprob: -11.07606315612793
    9. '   ' → logprob: -11.32606315612793
    10. 'pre' → logprob: -11.57606315612793

Token 679: 'fs' (ID: 6469)
  Prédit: 'fs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fs' → logprob: -5.319370302458992e-06
    2. 'f' → logprob: -12.500005722045898
    3. 'fsp' → logprob: -14.500005722045898
    4. 'fsm' → logprob: -14.625005722045898
    5. 'count' → logprob: -15.500005722045898
    6. '=' → logprob: -15.875005722045898
    7. 'FS' → logprob: -17.2500057220459
    8. 'b' → logprob: -17.2500057220459
    9. 'fsi' → logprob: -17.8750057220459
    10. ' fs' → logprob: -18.2500057220459

Token 680: '(W' (ID: 26031)
  Prédit: '(W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(W' → logprob: -3.7146746763028204e-05
    2. '(' → logprob: -10.25003719329834
    3. 'W' → logprob: -13.87503719329834
    4. '(
' → logprob: -14.62503719329834
    5. ' (' → logprob: -15.37503719329834
    6. '```' → logprob: -16.625036239624023
    7. '(w' → logprob: -17.875036239624023
    8. '((' → logprob: -18.250036239624023
    9. ')' → logprob: -19.250036239624023
    10. '\(' → logprob: -19.625036239624023

Token 681: ',H' (ID: 94400)
  Prédit: ',H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',H' → logprob: -3.416665640543215e-05
    2. ',' → logprob: -11.12503433227539
    3. '(H' → logprob: -11.25003433227539
    4. 'H' → logprob: -12.25003433227539
    5. ' ,' → logprob: -14.75003433227539
    6. ',
' → logprob: -15.50003433227539
    7. ',W' → logprob: -15.50003433227539
    8. '   ' → logprob: -15.75003433227539
    9. ',Y' → logprob: -16.00003433227539
    10. '(' → logprob: -16.37503433227539

Token 682: ',X' (ID: 83943)
  Prédit: ',X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',X' → logprob: -0.07967739552259445
    2. 'X' → logprob: -2.5796773433685303
    3. ',' → logprob: -7.204677581787109
    4. ' ,' → logprob: -11.45467758178711
    5. ',
' → logprob: -11.57967758178711
    6. '   ' → logprob: -11.82967758178711
    7. '```' → logprob: -12.82967758178711
    8. '(X' → logprob: -13.07967758178711
    9. ',x' → logprob: -13.32967758178711
    10. '       ' → logprob: -13.70467758178711

Token 683: ',Y' (ID: 71464)
  Prédit: ',Y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',Y' → logprob: -0.0002715873415581882
    2. ',' → logprob: -8.625271797180176
    3. 'Y' → logprob: -9.750271797180176
    4. ' ,' → logprob: -10.500271797180176
    5. ',
' → logprob: -13.250271797180176
    6. ',y' → logprob: -13.500271797180176
    7. '   ' → logprob: -14.250271797180176
    8. '                   ' → logprob: -14.750271797180176
    9. '	Y' → logprob: -14.875271797180176
    10. '```' → logprob: -15.125271797180176

Token 684: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.306760805164231e-05
    2. ' ,' → logprob: -11.50001335144043
    3. ',
' → logprob: -14.00001335144043
    4. '```' → logprob: -14.00001335144043
    5. 'levels' → logprob: -14.37501335144043
    6. ',W' → logprob: -15.50001335144043
    7. ',int' → logprob: -16.00001335144043
    8. '
' → logprob: -16.00001335144043
    9. '   ' → logprob: -17.25001335144043
    10. ',w' → logprob: -17.87501335144043

Token 685: 'levels' (ID: 97607)
  Prédit: 'levels'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'levels' → logprob: -3.047134305234067e-05
    2. ' levels' → logprob: -10.500030517578125
    3. ',' → logprob: -13.250030517578125
    4. '
' → logprob: -14.125030517578125
    5. 'level' → logprob: -16.750030517578125
    6. '```' → logprob: -17.000030517578125
    7. 'layers' → logprob: -17.250030517578125
    8. '[' → logprob: -17.500030517578125
    9. '
' → logprob: -17.875030517578125
    10. 'auth' → logprob: -18.125030517578125

Token 686: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.11996734328568e-05
    2. ' ,' → logprob: -10.750041007995605
    3. 'auth' → logprob: -11.500041007995605
    4. '   ' → logprob: -13.000041007995605
    5. ',int' → logprob: -13.500041007995605
    6. ',
' → logprob: -13.625041007995605
    7. ',c' → logprob: -13.875041007995605
    8. '```' → logprob: -14.375041007995605
    9. '                   ' → logprob: -14.625041007995605
    10. '(auth' → logprob: -15.125041007995605

Token 687: 'auth' (ID: 5723)
  Prédit: 'auth'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'auth' → logprob: -1.6240566083070007e-06
    2. ' auth' → logprob: -13.375001907348633
    3. '	auth' → logprob: -17.500001907348633
    4. '
' → logprob: -17.625001907348633
    5. '   ' → logprob: -18.375001907348633
    6. '(auth' → logprob: -18.500001907348633
    7. 'author' → logprob: -20.250001907348633
    8. ')' → logprob: -20.875001907348633
    9. '.auth' → logprob: -21.000001907348633
    10. '               ' → logprob: -21.125001907348633

Token 688: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.22689975798130035
    2. ')' → logprob: -1.6018997430801392
    3. ')-' → logprob: -6.85189962387085
    4. ')
' → logprob: -8.226900100708008
    5. ')+' → logprob: -9.351900100708008
    6. ')

' → logprob: -10.351900100708008
    7. '-' → logprob: -10.601900100708008
    8. ')`
' → logprob: -12.726900100708008
    9. '   ' → logprob: -13.226900100708008
    10. ' )
' → logprob: -13.226900100708008

Token 689: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.005321158561855555
    2. '               ' → logprob: -5.380321025848389
    3. '           ' → logprob: -7.755321025848389
    4. '       ' → logprob: -9.380321502685547
    5. 'res' → logprob: -9.630321502685547
    6. '```' → logprob: -10.255321502685547
    7. '                       ' → logprob: -10.755321502685547
    8. '   ' → logprob: -10.755321502685547
    9. ' res' → logprob: -11.380321502685547
    10. '<|end|>' → logprob: -11.880321502685547

Token 690: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -0.006189360748976469
    2. '                   ' → logprob: -5.631189346313477
    3. ' res' → logprob: -6.506189346313477
    4. '               ' → logprob: -7.381189346313477
    5. '   ' → logprob: -8.506189346313477
    6. '           ' → logprob: -9.006189346313477
    7. '       ' → logprob: -9.381189346313477
    8. '
' → logprob: -10.631189346313477
    9. 'if' → logprob: -10.756189346313477
    10. '                       ' → logprob: -12.506189346313477

Token 691: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00018327576981391758
    2. '.' → logprob: -8.62518310546875
    3. 'append' → logprob: -13.00018310546875
    4. ' .' → logprob: -14.00018310546875
    5. '=' → logprob: -15.37518310546875
    6. '           ' → logprob: -16.25018310546875
    7. '               ' → logprob: -16.25018310546875
    8. '.app' → logprob: -16.37518310546875
    9. '                   ' → logprob: -16.87518310546875
    10. '.extend' → logprob: -17.12518310546875

Token 692: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -2.2200749754119897e-06
    2. 'c' → logprob: -13.625001907348633
    3. '(' → logprob: -13.875001907348633
    4. '(max' → logprob: -17.000001907348633
    5. '©' → logprob: -17.500001907348633
    6. 'max' → logprob: -17.500001907348633
    7. '(
' → logprob: -17.750001907348633
    8. '(count' → logprob: -18.875001907348633
    9. ' (' → logprob: -19.125001907348633
    10. '((' → logprob: -19.375001907348633

Token 693: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006739408243447542
    2. ')
' → logprob: -5.006739616394043
    3. ' )' → logprob: -11.631739616394043
    4. '+' → logprob: -11.881739616394043
    5. ')
' → logprob: -12.631739616394043
    6. ' if' → logprob: -13.881739616394043
    7. '
' → logprob: -14.006739616394043
    8. '           ' → logprob: -14.381739616394043
    9. '               ' → logprob: -14.381739616394043
    10. '   ' → logprob: -14.381739616394043

Token 694: '                   ' (ID: 699)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5845689177513123
    2. '               ' → logprob: -1.209568977355957
    3. 'return' → logprob: -1.959568977355957
    4. '       ' → logprob: -6.084568977355957
    5. ' return' → logprob: -7.709568977355957
    6. '                   ' → logprob: -7.834568977355957
    7. '   ' → logprob: -8.584568977355957
    8. '```' → logprob: -10.209568977355957
    9. 'prev' → logprob: -10.334568977355957
    10. 'else' → logprob: -12.084568977355957

Token 695: ' if' (ID: 538)
  Prédit: 'prev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prev' → logprob: -0.005243002902716398
    2. '           ' → logprob: -6.005242824554443
    3. ' prev' → logprob: -6.630242824554443
    4. '
' → logprob: -7.255242824554443
    5. 'return' → logprob: -8.255243301391602
    6. '       ' → logprob: -8.880243301391602
    7. 'if' (adapté à ' if') → logprob: -9.005243301391602
    8. '                   ' → logprob: -10.130243301391602
    9. '               ' → logprob: -10.380243301391602
    10. '   ' → logprob: -10.505243301391602

Token 696: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.22250622510910034
    2. 'res' → logprob: -1.7225062847137451
    3. ' c' → logprob: -4.347506046295166
    4. ' res' → logprob: -4.847506046295166
    5. 'prev' → logprob: -10.222506523132324
    6. 'len' → logprob: -11.847506523132324
    7. '
' → logprob: -12.285006523132324
    8. ' ' → logprob: -12.285006523132324
    9. 'count' → logprob: -12.597506523132324
    10. '   ' → logprob: -12.597506523132324

Token 697: '==' (ID: 560)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.002366489963606
    2. '==' → logprob: -6.502366542816162
    3. '<=' → logprob: -7.502366542816162
    4. ' <' → logprob: -8.752366065979004
    5. '<c' → logprob: -9.502366065979004
    6. '[' → logprob: -10.502366065979004
    7. '<len' → logprob: -11.127366065979004
    8. '>=' → logprob: -11.877366065979004
    9. '>' → logprob: -12.002366065979004
    10. '<n' → logprob: -12.502366065979004

Token 698: 'prev' (ID: 15969)
  Prédit: 'prev'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prev' → logprob: -0.031583476811647415
    2. '0' → logprob: -3.656583547592163
    3. 'res' → logprob: -5.281583309173584
    4. '1' → logprob: -10.156583786010742
    5. 'W' → logprob: -10.406583786010742
    6. 'len' → logprob: -10.531583786010742
    7. ' prev' → logprob: -10.906583786010742
    8. '   ' → logprob: -11.281583786010742
    9. 'R' → logprob: -11.656583786010742
    10. 'c' → logprob: -11.906583786010742

Token 699: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.23802292346954346
    2. ':' → logprob: -1.6130229234695435
    3. '                   ' → logprob: -5.363022804260254
    4. '       ' → logprob: -5.988022804260254
    5. '                       ' → logprob: -6.238022804260254
    6. '               ' → logprob: -6.488022804260254
    7. ':
' → logprob: -7.738022804260254
    8. '):
' → logprob: -7.863022804260254
    9. ':return' → logprob: -7.988022804260254
    10. '   ' → logprob: -8.238022804260254

Token 700: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.0016220991965383291
    2. '       ' → logprob: -7.376622200012207
    3. '                   ' → logprob: -7.501622200012207
    4. '<|end|>' → logprob: -9.251622200012207
    5. '                        
' → logprob: -9.501622200012207
    6. '               ' → logprob: -9.626622200012207
    7. 'break' → logprob: -10.251622200012207
    8. '           ' → logprob: -10.376622200012207
    9. '	                   ' → logprob: -10.501622200012207
    10. ',' → logprob: -10.876622200012207

Token 701: ' #' (ID: 1069)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.099819116294384
    2. 'res' → logprob: -2.9748191833496094
    3. 'return' → logprob: -3.5998191833496094
    4. ' break' → logprob: -4.724819183349609
    5. '                       ' → logprob: -5.724819183349609
    6. 'continue' → logprob: -5.974819183349609
    7. '                   ' → logprob: -6.599819183349609
    8. ' res' → logprob: -8.72481918334961
    9. ' return' → logprob: -8.84981918334961
    10. '                           ' → logprob: -9.34981918334961

Token 702: ' if' (ID: 538)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.06963115185499191
    2. 'res' → logprob: -3.5696310997009277
    3. 'return' → logprob: -4.194631099700928
    4. ' break' → logprob: -4.444631099700928
    5. 'continue' → logprob: -4.694631099700928
    6. '                   ' → logprob: -6.944631099700928
    7. '                       ' → logprob: -7.069631099700928
    8. '#' → logprob: -7.444631099700928
    9. ' res' → logprob: -8.444631576538086
    10. ' continue' → logprob: -8.819631576538086

Token 703: ' no' (ID: 860)
  Prédit: ' c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' c' → logprob: -1.1985379457473755
    2. ' res' → logprob: -1.1985379457473755
    3. ' not' → logprob: -2.448537826538086
    4. 'res' → logprob: -2.448537826538086
    5. ' auth' → logprob: -2.698537826538086
    6. 'c' → logprob: -3.073537826538086
    7. ' len' → logprob: -3.073537826538086
    8. 'auth' → logprob: -3.573537826538086
    9. 'len' → logprob: -3.823537826538086
    10. ' True' → logprob: -5.573537826538086

Token 704: ' improvement' (ID: 20692)
  Prédit: 'increase'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'increase' → logprob: -0.49359583854675293
    2. ' increase' → logprob: -2.118595838546753
    3. ' further' → logprob: -2.243595838546753
    4. ' more' → logprob: -2.743595838546753
    5. 'f' → logprob: -3.368595838546753
    6. 'more' → logprob: -4.118596076965332
    7. 'change' → logprob: -4.493596076965332
    8. ' change' → logprob: -4.743596076965332
    9. 'increment' → logprob: -4.868596076965332
    10. ' longer' → logprob: -5.368596076965332

Token 705: ',' (ID: 11)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.11160051822662354
    2. '                       ' → logprob: -2.861600399017334
    3. ',' → logprob: -3.736600399017334
    4. '                   ' → logprob: -4.611600399017334
    5. '           ' → logprob: -4.986600399017334
    6. ':' → logprob: -5.361600399017334
    7. ':
' → logprob: -6.986600399017334
    8. ' continue' → logprob: -7.486600399017334
    9. ' break' → logprob: -7.736600399017334
    10. '               ' → logprob: -7.861600399017334

Token 706: ' could' (ID: 2023)
  Prédit: ' break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.71622234582901
    2. 'break' → logprob: -0.84122234582901
    3. 'res' → logprob: -2.9662222862243652
    4. ' res' → logprob: -3.9662222862243652
    5. 'continue' → logprob: -5.716222286224365
    6. '                   ' → logprob: -6.341222286224365
    7. ' continue' → logprob: -6.591222286224365
    8. '                           ' → logprob: -6.966222286224365
    9. '           ' → logprob: -6.966222286224365
    10. '                       ' → logprob: -7.216222286224365

Token 707: ' skip' (ID: 16677)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.19692347943782806
    2. ' break' → logprob: -1.9469234943389893
    3. '                       ' → logprob: -4.07192325592041
    4. '                   ' → logprob: -4.69692325592041
    5. '```' → logprob: -5.69692325592041
    6. 'continue' → logprob: -5.82192325592041
    7. '                           ' → logprob: -7.69692325592041
    8. ' continue' → logprob: -7.69692325592041
    9. '#' → logprob: -8.07192325592041
    10. 'return' → logprob: -8.19692325592041

Token 708: ' but' (ID: 889)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.47341862320899963
    2. 'continue' → logprob: -1.5984185934066772
    3. '                   ' → logprob: -2.098418712615967
    4. ' continue' → logprob: -3.598418712615967
    5. '               ' → logprob: -4.348418712615967
    6. '           ' → logprob: -4.598418712615967
    7. '                           ' → logprob: -7.723418712615967
    8. 'else' → logprob: -8.098418235778809
    9. ' else' → logprob: -8.598418235778809
    10. '   ' → logprob: -8.848418235778809

Token 709: ' keep' (ID: 3357)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.9426590800285339
    2. 'continue' → logprob: -0.9426590800285339
    3. 'break' → logprob: -2.5676591396331787
    4. '                       ' → logprob: -3.0676591396331787
    5. ' pass' → logprob: -3.5676591396331787
    6. ' break' → logprob: -3.9426591396331787
    7. 'pass' → logprob: -4.3176589012146
    8. '           ' → logprob: -4.3176589012146
    9. 'prev' → logprob: -4.9426589012146
    10. '                   ' → logprob: -4.9426589012146

Token 710: ' for' (ID: 395)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.0524325966835022
    2. 'prev' → logprob: -3.9274325370788574
    3. 'app' → logprob: -4.802432537078857
    4. ' res' → logprob: -5.177432537078857
    5. 'continu' → logprob: -5.177432537078857
    6. 'it' → logprob: -6.427432537078857
    7. '
' → logprob: -6.552432537078857
    8. 'going' → logprob: -6.677432537078857
    9. 'the' → logprob: -6.927432537078857
    10. '           ' → logprob: -7.302432537078857

Token 711: ' index' (ID: 3472)
  Prédit: 'cons'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cons' → logprob: -0.3111686110496521
    2. 'continu' → logprob: -1.6861686706542969
    3. 'clar' → logprob: -3.186168670654297
    4. 'com' → logprob: -4.436168670654297
    5. 'code' → logprob: -4.686168670654297
    6. 'simp' → logprob: -4.686168670654297
    7. 'binary' → logprob: -5.186168670654297
    8. 'now' → logprob: -7.061168670654297
    9. 'uniform' → logprob: -7.061168670654297
    10. 'correct' → logprob: -7.436168670654297

Token 712: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.5870662927627563
    2. '           ' → logprob: -1.5870662927627563
    3. '       ' → logprob: -2.212066173553467
    4. 'continu' → logprob: -2.337066173553467
    5. 's' → logprob: -2.712066173553467
    6. 'ing' → logprob: -3.087066173553467
    7. '   ' → logprob: -3.212066173553467
    8. 'else' → logprob: -3.337066173553467
    9. '            
' → logprob: -3.962066173553467
    10. '               ' → logprob: -4.087066173553467

Token 713: '                       ' (ID: 968)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.24605554342269897
    2. '                   ' → logprob: -2.2460556030273438
    3. '           ' → logprob: -2.4960556030273438
    4. '<|end|>' → logprob: -4.496055603027344
    5. '       ' → logprob: -4.871055603027344
    6. '                       ' → logprob: -5.371055603027344
    7. '
' → logprob: -6.121055603027344
    8. '<|end|>' → logprob: -6.621055603027344
    9. '   ' → logprob: -7.246055603027344
    10. '                        
' → logprob: -7.871055603027344

Token 714: ' pass' (ID: 1853)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pass' (adapté à ' pass') → logprob: -0.7400826215744019
    2. ' pass' → logprob: -1.7400826215744019
    3. 'prev' → logprob: -2.1150827407836914
    4. '                       ' → logprob: -2.4900827407836914
    5. '                   ' → logprob: -2.9900827407836914
    6. 'continue' → logprob: -3.4900827407836914
    7. '           ' → logprob: -3.8650827407836914
    8. ' continue' → logprob: -4.240082740783691
    9. ' prev' → logprob: -4.490082740783691
    10. '               ' → logprob: -4.990082740783691

Token 715: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.006730765104293823
    2. '                   ' → logprob: -5.256730556488037
    3. '
' → logprob: -7.006730556488037
    4. '           ' → logprob: -7.506730556488037
    5. 'prev' → logprob: -11.506731033325195
    6. 'else' → logprob: -11.756731033325195
    7. '   ' → logprob: -12.006731033325195
    8. '<|end|>' → logprob: -12.881731033325195
    9. '                
' → logprob: -13.381731033325195
    10. '       ' → logprob: -13.381731033325195

Token 716: '                   ' (ID: 699)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.042348891496658325
    2. '                   ' → logprob: -3.542348861694336
    3. '           ' → logprob: -4.417348861694336
    4. '
' → logprob: -8.542348861694336
    5. '```' → logprob: -9.417348861694336
    6. '   ' → logprob: -10.167348861694336
    7. '       ' → logprob: -10.167348861694336
    8. 'prev' → logprob: -10.417348861694336
    9. '<|end|>' → logprob: -10.667348861694336
    10. 'else' → logprob: -11.292348861694336

Token 717: ' prev' (ID: 10258)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0018135826103389263
    2. '                   ' → logprob: -6.7518134117126465
    3. '           ' → logprob: -7.7518134117126465
    4. 'prev' (adapté à ' prev') → logprob: -8.626813888549805
    5. 'else' → logprob: -11.251813888549805
    6. '
' → logprob: -11.501813888549805
    7. '   ' → logprob: -11.876813888549805
    8. '       ' → logprob: -13.376813888549805
    9. '              ' → logprob: -14.376813888549805
    10. 'return' → logprob: -14.626813888549805

Token 718: '=c' (ID: 43473)
  Prédit: '=c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=c' → logprob: -0.3132629990577698
    2. '=' → logprob: -1.313262939453125
    3. ' =' → logprob: -14.188262939453125
    4. '=max' → logprob: -16.063262939453125
    5. '=
' → logprob: -16.188262939453125
    6. '=b' → logprob: -16.313262939453125
    7. '=

' → logprob: -16.438262939453125
    8. '=cut' → logprob: -17.063262939453125
    9. '=}' → logprob: -17.438262939453125
    10. '=`' → logprob: -17.563262939453125

Token 719: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00478254584595561
    2. 'return' → logprob: -6.004782676696777
    3. '
' → logprob: -6.754782676696777
    4. ' return' → logprob: -7.629782676696777
    5. '       ' → logprob: -8.129782676696777
    6. '               ' → logprob: -8.254782676696777
    7. '<|end|>' → logprob: -10.379782676696777
    8. '            
' → logprob: -11.129782676696777
    9. '   ' → logprob: -11.754782676696777
    10. ',' → logprob: -12.004782676696777

Token 720: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.12641620635986328
    2. ' return' → logprob: -3.2514162063598633
    3. '<|end|>' → logprob: -3.2514162063598633
    4. 'return' → logprob: -3.8764162063598633
    5. '               ' → logprob: -5.501416206359863
    6. '	return' → logprob: -5.501416206359863
    7. '<|end|>' → logprob: -5.501416206359863
    8. '       ' → logprob: -6.251416206359863
    9. '	       ' → logprob: -6.626416206359863
    10. '
' → logprob: -6.751416206359863

Token 721: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.701461672782898
    2. '           ' → logprob: -1.201461672782898
    3. 'return' (adapté à ' return') → logprob: -1.701461672782898
    4. ' return' → logprob: -3.9514617919921875
    5. '   ' → logprob: -6.8264617919921875
    6. '	return' → logprob: -7.9514617919921875
    7. '<|end|>' → logprob: -9.201461791992188
    8. '	   ' → logprob: -9.701461791992188
    9. ' ' → logprob: -10.076461791992188
    10. '               ' → logprob: -11.451461791992188

Token 722: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -2.339278580620885e-06
    2. ' res' → logprob: -13.000001907348633
    3. '[' → logprob: -20.000001907348633
    4. '(res' → logprob: -21.500001907348633
    5. 're' → logprob: -21.625001907348633
    6. '	res' → logprob: -23.250001907348633
    7. '   ' → logprob: -23.500001907348633
    8. '$res' → logprob: -23.875001907348633
    9. ' ' → logprob: -24.250001907348633
    10. 'list' → logprob: -24.625001907348633

Token 723: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 724: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7259068489074707
    2. '   ' → logprob: -1.4759068489074707
    3. '
' → logprob: -2.1009068489074707
    4. 'levels' → logprob: -2.1009068489074707
    5. '        
' → logprob: -4.600906848907471
    6. 'pre' → logprob: -4.725906848907471
    7. '    
' → logprob: -4.975906848907471
    8. 'results' → logprob: -5.475906848907471
    9. ' levels' → logprob: -5.725906848907471
    10. 'res' → logprob: -5.975906848907471

Token 725: ' arr' (ID: 1724)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -1.081611156463623
    2. '   ' → logprob: -1.956611156463623
    3. 'pre' → logprob: -2.081611156463623
    4. '       ' → logprob: -2.331611156463623
    5. 'auth' → logprob: -2.581611156463623
    6. 'reach' → logprob: -2.581611156463623
    7. 'counts' → logprob: -3.456611156463623
    8. 'rooms' → logprob: -3.706611156463623
    9. 'reachable' → logprob: -3.956611156463623
    10. 'count' → logprob: -4.081611156463623

Token 726: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00037025497294962406
    2. '=' → logprob: -8.125370025634766
    3. ' =' → logprob: -10.125370025634766
    4. '_' → logprob: -10.375370025634766
    5. 'arr' → logprob: -13.625370025634766
    6. 's' → logprob: -14.000370025634766
    7. '_=' → logprob: -15.000370025634766
    8. '_arr' → logprob: -15.375370025634766
    9. '=_' → logprob: -16.500370025634766
    10. 'ar' → logprob: -16.625370025634766

Token 727: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00014048899174667895
    2. ' =' → logprob: -8.875140190124512
    3. '=

' → logprob: -15.125140190124512
    4. '=[' → logprob: -15.625140190124512
    5. '=[]' → logprob: -17.000141143798828
    6. '=
' → logprob: -17.125141143798828
    7. '=p' → logprob: -17.250141143798828
    8. '=}' → logprob: -17.500141143798828
    9. '.=' → logprob: -17.625141143798828
    10. '＝' → logprob: -17.750141143798828

Token 728: 'pre' (ID: 2235)
  Prédit: 'pre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pre' → logprob: -2.7968066206085496e-05
    2. '[' → logprob: -10.500027656555176
    3. ' pre' → logprob: -14.750027656555176
    4. '[]
' → logprob: -18.875028610229492
    5. '(pre' → logprob: -19.500028610229492
    6. '[]' → logprob: -19.625028610229492
    7. ' [' → logprob: -20.000028610229492
    8. 'list' → logprob: -21.500028610229492
    9. '[p' → logprob: -21.625028610229492
    10. '	pre' → logprob: -22.500028610229492

Token 729: 'compute' (ID: 54521)
  Prédit: 'compute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compute' → logprob: 0.0
    2. 'computed' → logprob: -18.375
    3. '.compute' → logprob: -18.5
    4. 'computer' → logprob: -18.75
    5. ' compute' → logprob: -18.875
    6. 'com' → logprob: -18.875
    7. 'comput' → logprob: -18.875
    8. '(com' → logprob: -20.125
    9. 'compile' → logprob: -20.25
    10. 'comp' → logprob: -20.25

Token 730: '(W' (ID: 26031)
  Prédit: '(W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(W' → logprob: -4.320199877838604e-07
    2. '(' → logprob: -15.5
    3. ' (' → logprob: -16.0
    4. 'W' → logprob: -16.625
    5. '((' → logprob: -18.625
    6. '```' → logprob: -19.5
    7. '(
' → logprob: -19.75
    8. '(w' → logprob: -20.125
    9. '​' → logprob: -20.25
    10. '   ' → logprob: -20.75

Token 731: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. ',' → logprob: -14.250000953674316
    3. '
' → logprob: -17.125
    4. ',H' → logprob: -17.125
    5. ',
' → logprob: -17.875
    6. '```' → logprob: -18.25
    7. ' ' → logprob: -18.375
    8. ',W' → logprob: -18.5
    9. '   ' → logprob: -18.875
    10. '[' → logprob: -19.5

Token 732: ',H' (ID: 94400)
  Prédit: ',H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',H' → logprob: -0.0006326167494989932
    2. ',' → logprob: -7.3756327629089355
    3. ' ,' → logprob: -12.375632286071777
    4. 'H' → logprob: -14.375632286071777
    5. ',W' → logprob: -14.375632286071777
    6. '   ' → logprob: -15.125632286071777
    7. ',Y' → logprob: -15.250632286071777
    8. ',h' → logprob: -17.000633239746094
    9. ',X' → logprob: -17.500633239746094
    10. ',S' → logprob: -17.750633239746094

Token 733: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004867994866799563
    2. ',X' → logprob: -8.250486373901367
    3. ',' → logprob: -8.625486373901367
    4. 'X' → logprob: -10.750486373901367
    5. ',Y' → logprob: -11.875486373901367
    6. ',H' → logprob: -12.375486373901367
    7. ' ' → logprob: -13.000486373901367
    8. ',
' → logprob: -13.500486373901367
    9. ',S' → logprob: -13.625486373901367
    10. 'Y' → logprob: -13.750486373901367

Token 734: ',X' (ID: 83943)
  Prédit: ',X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',X' → logprob: -0.0021703632082790136
    2. ',' → logprob: -6.502170562744141
    3. 'X' → logprob: -7.377170562744141
    4. ' ,' → logprob: -10.37717056274414
    5. ',
' → logprob: -12.25217056274414
    6. '   ' → logprob: -13.50217056274414
    7. ',x' → logprob: -14.12717056274414
    8. '
' → logprob: -14.12717056274414
    9. ')' → logprob: -14.62717056274414
    10. ' X' → logprob: -14.87717056274414

Token 735: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.3080716346157715e-05
    2. 'X' → logprob: -11.500022888183594
    3. 'Y' → logprob: -12.500022888183594
    4. ',' → logprob: -13.375022888183594
    5. ')' → logprob: -13.500022888183594
    6. '2' → logprob: -13.625022888183594
    7. ',X' → logprob: -13.750022888183594
    8. ',Y' → logprob: -13.875022888183594
    9. '
' → logprob: -14.250022888183594
    10. '```' → logprob: -14.250022888183594

Token 736: ',Y' (ID: 71464)
  Prédit: ',X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',X' → logprob: -0.004655356984585524
    2. ',' → logprob: -6.379655361175537
    3. 'X' → logprob: -6.379655361175537
    4. ',Y' → logprob: -6.754655361175537
    5. ' ,' → logprob: -10.754654884338379
    6. '```' → logprob: -11.004654884338379
    7. '1' → logprob: -11.379654884338379
    8. 'Y' → logprob: -11.504654884338379
    9. ',
' → logprob: -12.004654884338379
    10. ')' → logprob: -12.754654884338379

Token 737: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0564331205387134e-05
    2. ',' → logprob: -12.87501049041748
    3. '2' → logprob: -13.00001049041748
    4. 'Y' → logprob: -13.62501049041748
    5. '
' → logprob: -14.00001049041748
    6. 'X' → logprob: -14.25001049041748
    7. '[' → logprob: -14.37501049041748
    8. '```' → logprob: -14.68751049041748
    9. ' ' → logprob: -15.18751049041748
    10. ')' → logprob: -15.50001049041748

Token 738: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.4849443838757e-06
    2. ' ,' → logprob: -12.750004768371582
    3. ',
' → logprob: -13.750004768371582
    4. ',[' → logprob: -16.000003814697266
    5. '```' → logprob: -16.125003814697266
    6. '
' → logprob: -16.500003814697266
    7. ')' → logprob: -18.125003814697266
    8. '，' → logprob: -18.250003814697266
    9. '[' → logprob: -18.250003814697266
    10. '

' → logprob: -18.375003814697266

Token 739: 'levels' (ID: 97607)
  Prédit: 'levels'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'levels' → logprob: -0.008653218857944012
    2. 'lev' → logprob: -4.758653163909912
    3. 'level' → logprob: -10.63365364074707
    4. ' levels' → logprob: -11.50865364074707
    5. '
' → logprob: -12.88365364074707
    6. 'leve' → logprob: -14.63365364074707
    7. '```' → logprob: -15.25865364074707
    8. ' lev' → logprob: -15.38365364074707
    9. 'lv' → logprob: -16.00865364074707
    10. '_levels' → logprob: -16.25865364074707

Token 740: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ',' → logprob: -16.875
    3. '_' → logprob: -17.875
    4. '[' → logprob: -18.125
    5. ')' → logprob: -18.375
    6. ' ' → logprob: -18.375
    7. '```' → logprob: -19.125
    8. '１' → logprob: -20.375
    9. '۱' → logprob: -20.625
    10. '
' → logprob: -21.25

Token 741: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.33027103543281555
    2. ')' → logprob: -1.3302710056304932
    3. ')
' → logprob: -4.205271244049072
    4. ',)' → logprob: -6.580271244049072
    5. ',)
' → logprob: -8.205270767211914
    6. ',
' → logprob: -8.455270767211914
    7. '   ' → logprob: -10.705270767211914
    8. ' )' → logprob: -11.455270767211914
    9. ')

' → logprob: -11.455270767211914
    10. ')
' → logprob: -11.955270767211914

Token 742: 'lev' (ID: 3944)
  Prédit: 'lev'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lev' → logprob: -0.00012415809032972902
    2. ' lev' → logprob: -9.000123977661133
    3. '   ' → logprob: -15.250123977661133
    4. 'le' → logprob: -16.625123977661133
    5. '
' → logprob: -16.750123977661133
    6. 'leb' → logprob: -17.750123977661133
    7. 'leve' → logprob: -17.750123977661133
    8. '    ' → logprob: -17.875123977661133
    9. '  ' → logprob: -17.875123977661133
    10. ' ' → logprob: -18.000123977661133

Token 743: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -4.320199877838604e-07
    2. '1' → logprob: -14.75
    3. '[' → logprob: -17.5
    4. '```' → logprob: -17.5
    5. ' s' → logprob: -18.125
    6. 'ls' → logprob: -19.375
    7. '[s' → logprob: -19.375
    8. '`s' → logprob: -19.375
    9. '2' → logprob: -20.0
    10. '``' → logprob: -20.375

Token 744: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ')' → logprob: -15.625
    3. '```' → logprob: -18.25
    4. 's' → logprob: -18.375
    5. '[' → logprob: -19.375
    6. ' ' → logprob: -19.875
    7. '_' → logprob: -19.875
    8. ',' → logprob: -20.25
    9. ')
' → logprob: -20.375
    10. '۱' → logprob: -20.875

Token 745: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01105206273496151
    2. ')
' → logprob: -4.511052131652832
    3. ')
' → logprob: -13.386052131652832
    4. ')

' → logprob: -13.511052131652832
    5. ' )' → logprob: -13.761052131652832
    6. '   ' → logprob: -15.761052131652832
    7. ')\
' → logprob: -17.261051177978516
    8. ' )
' → logprob: -17.386051177978516
    9. '),' → logprob: -17.386051177978516
    10. ')#' → logprob: -17.511051177978516

Token 746: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11515355110168457
    2. 'arr' → logprob: -2.2401535511016846
    3. ' arr' → logprob: -6.4901533126831055
    4. '```' → logprob: -7.6151533126831055
    5. '   ' → logprob: -8.865153312683105
    6. '
' → logprob: -9.865153312683105
    7. '        
' → logprob: -9.990153312683105
    8. '	arr' → logprob: -10.365153312683105
    9. '[arr' → logprob: -11.240153312683105
    10. '``' → logprob: -12.115153312683105

Token 747: ' arr' (ID: 1724)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' (adapté à ' arr') → logprob: -0.0005891331238672137
    2. '       ' → logprob: -7.500589370727539
    3. ' arr' → logprob: -10.250589370727539
    4. '   ' → logprob: -14.875589370727539
    5. '	arr' → logprob: -14.875589370727539
    6. '[arr' → logprob: -17.25058937072754
    7. '_arr' → logprob: -17.37558937072754
    8. '(arr' → logprob: -17.75058937072754
    9. '```' → logprob: -17.75058937072754
    10. '$arr' → logprob: -18.12558937072754

Token 748: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -9.014684110297821e-06
    2. '1' → logprob: -12.000008583068848
    3. '=' → logprob: -13.500008583068848
    4. '_' → logprob: -14.125008583068848
    5. ',' → logprob: -15.375008583068848
    6. '[' → logprob: -15.500008583068848
    7. '```' → logprob: -16.250009536743164
    8. ' ' → logprob: -16.625009536743164
    9. ' =' → logprob: -17.500009536743164
    10. 's' → logprob: -18.000009536743164

Token 749: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.3856492842023727e-06
    2. ' =' → logprob: -14.000000953674316
    3. '=_' → logprob: -16.500001907348633
    4. '=

' → logprob: -16.500001907348633
    5. '=s' → logprob: -16.875001907348633
    6. '=.' → logprob: -17.500001907348633
    7. '=b' → logprob: -17.750001907348633
    8. '.=' → logprob: -17.750001907348633
    9. '=}' → logprob: -18.125001907348633
    10. '=p' → logprob: -18.125001907348633

Token 750: 'pre' (ID: 2235)
  Prédit: 'pre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pre' → logprob: -6.704273118884885e-07
    2. ' pre' → logprob: -14.250000953674316
    3. '(pre' → logprob: -22.875
    4. '
' → logprob: -23.0
    5. '	pre' → logprob: -23.125
    6. '[' → logprob: -23.25
    7. 'pread' → logprob: -25.25
    8. 'preh' → logprob: -25.375
    9. '.pre' → logprob: -25.625
    10. 'prech' → logprob: -25.75

Token 751: 'compute' (ID: 54521)
  Prédit: 'compute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compute' → logprob: -1.9504606825648807e-05
    2. 'c' → logprob: -11.875019073486328
    3. 'com' → logprob: -12.375019073486328
    4. ' compute' → logprob: -13.125019073486328
    5. 'comput' → logprob: -13.375019073486328
    6. 'comp' → logprob: -13.875019073486328
    7. 'computed' → logprob: -14.250019073486328
    8. '.compute' → logprob: -14.250019073486328
    9. 'pute' → logprob: -14.500019073486328
    10. 'lev' → logprob: -14.500019073486328

Token 752: '(W' (ID: 26031)
  Prédit: '(W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(W' → logprob: -2.8444881536415778e-05
    2. '(' → logprob: -10.500028610229492
    3. 'W' → logprob: -14.625028610229492
    4. '(
' → logprob: -15.500028610229492
    5. ' (' → logprob: -15.875028610229492
    6. '(V' → logprob: -17.125028610229492
    7. '((' → logprob: -18.750028610229492
    8. '(w' → logprob: -18.875028610229492
    9. '(C' → logprob: -19.750028610229492
    10. '(Q' → logprob: -19.875028610229492

Token 753: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.2113979209971149e-05
    2. 'W' → logprob: -11.750012397766113
    3. '(' → logprob: -13.125012397766113
    4. ' ' → logprob: -13.375012397766113
    5. '(W' → logprob: -15.125012397766113
    6. '```' → logprob: -16.625011444091797
    7. '_' → logprob: -17.000011444091797
    8. '[' → logprob: -17.125011444091797
    9. '1' → logprob: -17.250011444091797
    10. '۲' → logprob: -17.250011444091797

Token 754: ',H' (ID: 94400)
  Prédit: ',H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',H' → logprob: -0.0024517537094652653
    2. '[' → logprob: -6.2524518966674805
    3. 'H' → logprob: -8.00245189666748
    4. ',' → logprob: -9.12745189666748
    5. '(H' → logprob: -9.62745189666748
    6. ' ,' → logprob: -12.25245189666748
    7. ',W' → logprob: -13.25245189666748
    8. '<H' → logprob: -13.25245189666748
    9. ',h' → logprob: -13.37745189666748
    10. '```' → logprob: -14.37745189666748

Token 755: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -8.73314929776825e-05
    2. ',' → logprob: -9.75008773803711
    3. '1' → logprob: -10.87508773803711
    4. '[' → logprob: -11.87508773803711
    5. ' ' → logprob: -14.87508773803711
    6. ')' → logprob: -14.87508773803711
    7. '```' → logprob: -15.12508773803711
    8. 'H' → logprob: -15.25008773803711
    9. '-' → logprob: -15.37508773803711
    10. ']' → logprob: -15.62508773803711

Token 756: ',X' (ID: 83943)
  Prédit: ',X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',X' → logprob: -0.001214879215694964
    2. 'X' → logprob: -6.751214981079102
    3. ',' → logprob: -10.376214981079102
    4. ',Y' → logprob: -12.251214981079102
    5. '[X' → logprob: -13.001214981079102
    6. '(X' → logprob: -13.376214981079102
    7. ' ,' → logprob: -13.626214981079102
    8. '   ' → logprob: -14.376214981079102
    9. ',W' → logprob: -14.626214981079102
    10. '```' → logprob: -15.251214981079102

Token 757: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.003340260125696659
    2. '1' → logprob: -5.753340244293213
    3. 'Y' → logprob: -9.128340721130371
    4. '[' → logprob: -10.878340721130371
    5. ',' → logprob: -11.253340721130371
    6. 'levels' → logprob: -12.253340721130371
    7. '```' → logprob: -12.878340721130371
    8. ')' → logprob: -13.253340721130371
    9. ']' → logprob: -13.378340721130371
    10. ',Y' → logprob: -13.628340721130371

Token 758: ',Y' (ID: 71464)
  Prédit: 'Y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Y' → logprob: -0.35086387395858765
    2. ',Y' → logprob: -1.2258639335632324
    3. ',' → logprob: -6.850863933563232
    4. 'X' → logprob: -7.600863933563232
    5. '1' → logprob: -7.850863933563232
    6. ',X' → logprob: -8.725863456726074
    7. '[' → logprob: -9.225863456726074
    8. '[Y' → logprob: -9.350863456726074
    9. '2' → logprob: -10.350863456726074
    10. ',y' → logprob: -10.475863456726074

Token 759: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.009232751093804836
    2. '2' → logprob: -4.759232521057129
    3. ',' → logprob: -7.634232521057129
    4. '```' → logprob: -9.634232521057129
    5. 'levels' → logprob: -11.134232521057129
    6. '[' → logprob: -11.384232521057129
    7. '],' → logprob: -11.634232521057129
    8. ']' → logprob: -11.884232521057129
    9. 'Y' → logprob: -12.259232521057129
    10. '])' → logprob: -12.509232521057129

Token 760: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.4849443838757e-06
    2. '```' → logprob: -13.500004768371582
    3. ',W' → logprob: -13.875004768371582
    4. ' ,' → logprob: -14.250004768371582
    5. ',[' → logprob: -14.500004768371582
    6. ',l' → logprob: -15.750004768371582
    7. ',X' → logprob: -16.625003814697266
    8. '`' → logprob: -16.750003814697266
    9. '1' → logprob: -16.875003814697266
    10. 'levels' → logprob: -16.875003814697266

Token 761: 'levels' (ID: 97607)
  Prédit: 'levels'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'levels' → logprob: -0.00219118339009583
    2. 'lev' → logprob: -6.127191066741943
    3. 'level' → logprob: -12.877191543579102
    4. ' levels' → logprob: -13.252191543579102
    5. 'W' → logprob: -14.752191543579102
    6. '   ' → logprob: -15.002191543579102
    7. '```' → logprob: -15.877191543579102
    8. 'leve' → logprob: -16.5021915435791
    9. 'lvl' → logprob: -16.5021915435791
    10. ',' → logprob: -16.6271915435791

Token 762: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.008663497865200043
    2. '1' → logprob: -4.758663654327393
    3. '```' → logprob: -10.883663177490234
    4. '[' → logprob: -11.008663177490234
    5. 's' → logprob: -12.383663177490234
    6. ')' → logprob: -12.508663177490234
    7. ',' → logprob: -12.758663177490234
    8. '   ' → logprob: -14.008663177490234
    9. '<|end|>' → logprob: -14.258663177490234
    10. ' ' → logprob: -15.633663177490234

Token 763: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.3856492842023727e-06
    2. ' ,' → logprob: -13.875000953674316
    3. ',
' → logprob: -15.750000953674316
    4. ',len' → logprob: -17.000001907348633
    5. ')' → logprob: -17.375001907348633
    6. ',[' → logprob: -17.625001907348633
    7. '```' → logprob: -18.250001907348633
    8. ',W' → logprob: -18.750001907348633
    9. '[' → logprob: -19.000001907348633
    10. ',int' → logprob: -19.125001907348633

Token 764: 'lev' (ID: 3944)
  Prédit: 'lev'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lev' → logprob: -0.0004932218580506742
    2. 'levels' → logprob: -7.625493049621582
    3. 'level' → logprob: -12.375493049621582
    4. '
' → logprob: -15.625493049621582
    5. '```' → logprob: -15.625493049621582
    6. ' lev' → logprob: -15.625493049621582
    7. '   ' → logprob: -16.1254940032959
    8. 'leve' → logprob: -16.7504940032959
    9. 'let' → logprob: -16.8754940032959
    10. 'W' → logprob: -16.8754940032959

Token 765: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -3.666993507067673e-05
    2. '1' → logprob: -10.375036239624023
    3. '```' → logprob: -13.750036239624023
    4. 'l' → logprob: -13.875036239624023
    5. '2' → logprob: -14.375036239624023
    6. 'levels' → logprob: -14.750036239624023
    7. 'ls' → logprob: -15.125036239624023
    8. 'sl' → logprob: -15.250036239624023
    9. ' s' → logprob: -15.375036239624023
    10. 'el' → logprob: -15.625036239624023

Token 766: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.512236498361744e-07
    2. '[' → logprob: -15.625000953674316
    3. '1' → logprob: -15.750000953674316
    4. '```' → logprob: -15.750000953674316
    5. 's' → logprob: -16.0
    6. ')' → logprob: -17.875
    7. ' ' → logprob: -18.5
    8. '_' → logprob: -18.75
    9. ']' → logprob: -19.125
    10. '   ' → logprob: -19.75

Token 767: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.153795766294934e-06
    2. ')
' → logprob: -12.125005722045898
    3. ')`' → logprob: -15.375005722045898
    4. ' )' → logprob: -15.750005722045898
    5. ')

' → logprob: -16.0000057220459
    6. '   ' → logprob: -16.3750057220459
    7. '))' → logprob: -17.2500057220459
    8. ')
' → logprob: -17.5000057220459
    9. ']' → logprob: -17.5000057220459
    10. '       ' → logprob: -17.6250057220459

Token 768: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02551981620490551
    2. 'low' → logprob: -4.650519847869873
    3. '```' → logprob: -5.275519847869873
    4. '
' → logprob: -6.025519847869873
    5. 'max' → logprob: -6.525519847869873
    6. '   ' → logprob: -6.525519847869873
    7. '#' → logprob: -7.025519847869873
    8. 'min' → logprob: -7.400519847869873
    9. 'best' → logprob: -7.525519847869873
    10. 'left' → logprob: -7.525519847869873

Token 769: ' #' (ID: 1069)
  Prédit: 'low'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'low' → logprob: -0.9030567407608032
    2. 'left' → logprob: -1.0280567407608032
    3. 'lo' → logprob: -2.5280566215515137
    4. 'ans' → logprob: -2.7780566215515137
    5. 'min' → logprob: -2.9030566215515137
    6. 'l' → logprob: -4.153056621551514
    7. 'best' → logprob: -5.028056621551514
    8. '#' (adapté à ' #') → logprob: -5.028056621551514
    9. 'auth' → logprob: -6.028056621551514
    10. 'answer' → logprob: -6.028056621551514

Token 770: ' Now' (ID: 6549)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -1.1350288391113281
    2. 'low' → logprob: -1.2600288391113281
    3. 'l' → logprob: -1.5100288391113281
    4. 'lo' → logprob: -2.385028839111328
    5. 'min' → logprob: -3.635028839111328
    6. '#' → logprob: -3.885028839111328
    7. 'ans' → logprob: -4.385028839111328
    8. 'def' → logprob: -5.135028839111328
    9. 'best' → logprob: -5.135028839111328
    10. '       ' → logprob: -5.510028839111328

Token 771: ' we' (ID: 581)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.015558332204818726
    2. 'left' → logprob: -5.515558242797852
    3. 'res' → logprob: -5.890558242797852
    4. '#' → logprob: -6.140558242797852
    5. 'ans' → logprob: -6.515558242797852
    6. 'import' → logprob: -6.640558242797852
    7. 'low' → logprob: -6.890558242797852
    8. '   ' → logprob: -7.765558242797852
    9. 'best' → logprob: -7.765558242797852
    10. 'def' → logprob: -7.890558242797852

Token 772: ' want' (ID: 1682)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01473935879766941
    2. '#' → logprob: -5.264739513397217
    3. ' for' → logprob: -6.014739513397217
    4. 'import' → logprob: -6.764739513397217
    5. 'def' → logprob: -7.139739513397217
    6. 'for' → logprob: -7.264739513397217
    7. '=' → logprob: -7.639739513397217
    8. ' #' → logprob: -7.764739513397217
    9. 'max' → logprob: -8.014739036560059
    10. 'n' → logprob: -8.139739036560059

Token 773: ' minimal' (ID: 19957)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1148315817117691
    2. 'min' → logprob: -3.1148316860198975
    3. ' to' → logprob: -3.6148316860198975
    4. 'to' → logprob: -4.864831447601318
    5. 'low' → logprob: -5.239831447601318
    6. 'total' → logprob: -5.614831447601318
    7. ' minimal' → logprob: -5.864831447601318
    8. 'best' → logprob: -5.989831447601318
    9. 'minimal' → logprob: -6.114831447601318
    10. '   ' → logprob: -6.114831447601318

Token 774: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -1.0512992143630981
    2. 'total' → logprob: -1.1762992143630981
    3. 'ans' → logprob: -2.1762990951538086
    4. '_sum' → logprob: -2.1762990951538086
    5. 'auth' → logprob: -3.3012990951538086
    6. ' total' → logprob: -3.3012990951538086
    7. ' ans' → logprob: -4.926299095153809
    8. '_total' → logprob: -5.051299095153809
    9. 'answer' → logprob: -5.051299095153809
    10. ' sum' → logprob: -5.051299095153809

Token 775: ' of' (ID: 328)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3188692033290863
    2. '   ' → logprob: -2.068869113922119
    3. 'auth' → logprob: -3.193869113922119
    4. ' of' → logprob: -3.568869113922119
    5. ' auth' → logprob: -3.693869113922119
    6. ' for' → logprob: -4.443869113922119
    7. ' =' → logprob: -4.818869113922119
    8. '_auth' → logprob: -4.818869113922119
    9. ' possible' → logprob: -5.568869113922119
    10. '
' → logprob: -5.568869113922119

Token 776: ' auth' (ID: 6246)
  Prédit: 'auth'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'auth' → logprob: -0.09731791913509369
    2. 'lev' → logprob: -2.472317934036255
    3. 'arr' → logprob: -5.972317695617676
    4. 'levels' → logprob: -6.222317695617676
    5. ' lev' → logprob: -7.972317695617676
    6. 'authorization' → logprob: -8.097317695617676
    7. 'len' → logprob: -8.222317695617676
    8. '0' → logprob: -8.222317695617676
    9. 'min' → logprob: -8.222317695617676
    10. 'la' → logprob: -8.347317695617676

Token 777: '1' (ID: 16)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4227052330970764
    2. '1' → logprob: -1.7977051734924316
    3. 'levels' → logprob: -3.2977051734924316
    4. ' levels' → logprob: -3.5477051734924316
    5. '_levels' → logprob: -3.5477051734924316
    6. '
' → logprob: -3.9227051734924316
    7. '=' → logprob: -4.047705173492432
    8. 'sum' → logprob: -4.547705173492432
    9. 's' → logprob: -4.922705173492432
    10. '   ' → logprob: -5.297705173492432

Token 778: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.11054311692714691
    2. '+
' → logprob: -3.3605430126190186
    3. ',' → logprob: -3.7355430126190186
    4. '   ' → logprob: -4.610543251037598
    5. ' +' → logprob: -4.610543251037598
    6. 'for' → logprob: -5.110543251037598
    7. 'import' → logprob: -5.235543251037598
    8. '       ' → logprob: -6.235543251037598
    9. 'while' → logprob: -6.485543251037598
    10. 'auth' → logprob: -6.735543251037598

Token 779: 'auth' (ID: 5723)
  Prédit: 'auth'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'auth' → logprob: -2.165027217415627e-05
    2. ' auth' → logprob: -10.750021934509277
    3. '   ' → logprob: -17.00002098083496
    4. '	auth' → logprob: -17.37502098083496
    5. '_auth' → logprob: -18.50002098083496
    6. '
' → logprob: -18.50002098083496
    7. '(auth' → logprob: -19.00002098083496
    8. 'Auth' → logprob: -19.62502098083496
    9. 'aut' → logprob: -19.75002098083496
    10. ' ' → logprob: -20.12502098083496

Token 780: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.030723612755537033
    2. '1' → logprob: -3.5307235717773438
    3. '```' → logprob: -7.780723571777344
    4. 'level' → logprob: -8.280723571777344
    5. 'levels' → logprob: -9.280723571777344
    6. '   ' → logprob: -9.780723571777344
    7. '
' → logprob: -10.405723571777344
    8. ' ' → logprob: -10.905723571777344
    9. 's' → logprob: -11.155723571777344
    10. ' levels' → logprob: -11.280723571777344

Token 781: ' with' (ID: 483)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.027258025482296944
    2. '
' → logprob: -4.027257919311523
    3. 'low' → logprob: -6.777257919311523
    4. 'min' → logprob: -6.902257919311523
    5. 'import' → logprob: -7.027257919311523
    6. ',' → logprob: -7.152257919311523
    7. '```' → logprob: -7.152257919311523
    8. '   ' → logprob: -7.277257919311523
    9. 'left' → logprob: -7.277257919311523
    10. 'def' → logprob: -7.652257919311523

Token 782: ' arr' (ID: 1724)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -1.6410473585128784
    2. 'rooms' → logprob: -2.016047477722168
    3. 'count' → logprob: -2.641047477722168
    4. 'at' → logprob: -2.891047477722168
    5. 'max' → logprob: -2.891047477722168
    6. ' at' → logprob: -3.016047477722168
    7. 'possible' → logprob: -3.141047477722168
    8. 'minimum' → logprob: -3.141047477722168
    9. 'target' → logprob: -3.391047477722168
    10. 'def' → logprob: -3.516047477722168

Token 783: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0023838533088564873
    2. '#' → logprob: -8.002384185791016
    3. 'max' → logprob: -8.002384185791016
    4. '   ' → logprob: -8.127384185791016
    5. '2' → logprob: -8.252384185791016
    6. 's' → logprob: -8.877384185791016
    7. 'index' → logprob: -9.502384185791016
    8. ' =' → logprob: -9.502384185791016
    9. '=' → logprob: -9.627384185791016
    10. 'sum' → logprob: -9.877384185791016

Token 784: '[i' (ID: 1768)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.42475712299346924
    2. 'and' → logprob: -2.0497570037841797
    3. '[i' → logprob: -2.2997570037841797
    4. ' and' → logprob: -2.7997570037841797
    5. '[' → logprob: -3.6747570037841797
    6. ',' → logprob: -5.29975700378418
    7. '[count' → logprob: -5.67475700378418
    8. '[idx' → logprob: -5.79975700378418
    9. '=' → logprob: -6.42475700378418
    10. '[len' → logprob: -6.54975700378418

Token 785: ']+' (ID: 15344)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6409004926681519
    2. ']+' → logprob: -1.6409004926681519
    3. ']<=' → logprob: -1.6409004926681519
    4. ']>=' → logprob: -2.5159006118774414
    5. ']<' → logprob: -6.265900611877441
    6. ']>' → logprob: -6.890900611877441
    7. '],' → logprob: -7.390900611877441
    8. ' ]' → logprob: -8.015900611877441
    9. ']!=' → logprob: -8.515900611877441
    10. ']+=' → logprob: -8.640900611877441

Token 786: 'arr' (ID: 1614)
  Prédit: 'arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.0005551783833652735
    2. ' arr' → logprob: -7.500555038452148
    3. '   ' → logprob: -13.875555038452148
    4. '```' → logprob: -14.750555038452148
    5. '`' → logprob: -16.00055503845215
    6. ' ' → logprob: -16.25055503845215
    7. '	arr' → logprob: -16.37555503845215
    8. '(arr' → logprob: -16.37555503845215
    9. '_arr' → logprob: -17.12555503845215
    10. '           ' → logprob: -17.12555503845215

Token 787: '2' (ID: 17)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.9997612833976746
    2. '1' → logprob: -1.3747613430023193
    3. '[i' → logprob: -1.6247613430023193
    4. 's' → logprob: -2.8747613430023193
    5. 'j' → logprob: -2.9997613430023193
    6. '2' → logprob: -3.4997613430023193
    7. '```' → logprob: -4.12476110458374
    8. '[' → logprob: -4.74976110458374
    9. 'i' → logprob: -4.87476110458374
    10. ']' → logprob: -5.99976110458374

Token 788: '[j' (ID: 7895)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.10462227463722229
    2. '[j' → logprob: -2.9796223640441895
    3. '[' → logprob: -4.1046223640441895
    4. '[len' → logprob: -4.6046223640441895
    5. '<|end|>' → logprob: -4.6046223640441895
    6. '[min' → logprob: -5.4796223640441895
    7. '[-' → logprob: -6.3546223640441895
    8. '```' → logprob: -6.8546223640441895
    9. '[I' → logprob: -6.9796223640441895
    10. '<|end|>' → logprob: -7.4796223640441895

Token 789: ']>=' (ID: 185954)
  Prédit: ']>='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']>=' → logprob: -0.034545402973890305
    2. '>=' → logprob: -3.409545421600342
    3. ']' → logprob: -7.284545421600342
    4. ')>=' → logprob: -8.659544944763184
    5. ']>' → logprob: -11.159544944763184
    6. ' >=' → logprob: -11.659544944763184
    7. '[' → logprob: -11.784544944763184
    8. '>' → logprob: -13.034544944763184
    9. '```' → logprob: -13.159544944763184
    10. '[i' → logprob: -13.909544944763184

Token 790: 'R' (ID: 49)
  Prédit: 'R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -1.7120533811976202e-05
    2. ' R' → logprob: -11.000017166137695
    3. '
' → logprob: -16.250017166137695
    4. '   ' → logprob: -16.250017166137695
    5. '[R' → logprob: -16.750017166137695
    6. '	R' → logprob: -17.125017166137695
    7. '[' → logprob: -17.375017166137695
    8. '`' → logprob: -17.625017166137695
    9. '       ' → logprob: -18.250017166137695
    10. '_R' → logprob: -18.750017166137695

Token 791: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05087166279554367
    2. '
' → logprob: -3.0508716106414795
    3. '        
' → logprob: -6.925871849060059
    4. ',' → logprob: -7.925871849060059
    5. '```' → logprob: -8.425871849060059
    6. '   ' → logprob: -8.675871849060059
    7. ' for' → logprob: -9.050871849060059
    8. '
' → logprob: -9.550871849060059
    9. ',
' → logprob: -9.800871849060059
    10. 'for' → logprob: -10.050871849060059

Token 792: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0053855376318097115
    2. '```' → logprob: -5.630385398864746
    3. '
' → logprob: -6.880385398864746
    4. '   ' → logprob: -8.755385398864746
    5. ' for' → logprob: -8.880385398864746
    6. 'for' → logprob: -8.880385398864746
    7. '``' → logprob: -9.380385398864746
    8. '        
' → logprob: -9.880385398864746
    9. 'i' → logprob: -10.255385398864746
    10. 'n' → logprob: -10.630385398864746

Token 793: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004646334331482649
    2. '
' → logprob: -6.004646301269531
    3. 'i' → logprob: -7.254646301269531
    4. '   ' → logprob: -7.504646301269531
    5. '```' → logprob: -8.379646301269531
    6. ' i' → logprob: -8.754646301269531
    7. 'min' → logprob: -9.254646301269531
    8. '        
' → logprob: -10.004646301269531
    9. 'import' → logprob: -10.254646301269531
    10. '``' → logprob: -10.379646301269531

Token 794: ' Use' (ID: 7649)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.4849254786968231
    2. 'i' → logprob: -1.3599255084991455
    3. 'min' → logprob: -2.4849255084991455
    4. '   ' → logprob: -3.8599255084991455
    5. '       ' → logprob: -4.984925270080566
    6. 'best' → logprob: -4.984925270080566
    7. 'res' → logprob: -5.859925270080566
    8. 'answer' → logprob: -5.984925270080566
    9. 'import' → logprob: -6.734925270080566
    10. 'l' → logprob: -7.109925270080566

Token 795: ' two' (ID: 1920)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.058501243591308594
    2. 'two' → logprob: -3.4335012435913086
    3. 'import' → logprob: -4.058501243591309
    4. 'from' → logprob: -6.058501243591309
    5. ' two' → logprob: -6.433501243591309
    6. '
' → logprob: -7.058501243591309
    7. '   ' → logprob: -7.308501243591309
    8. ' i' → logprob: -7.308501243591309
    9. '```' → logprob: -7.683501243591309
    10. 'bis' → logprob: -8.933501243591309

Token 796: ' pointers' (ID: 58762)
  Prédit: ' pointers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pointers' → logprob: -0.01387269888073206
    2. 'pointer' → logprob: -4.7638726234436035
    3. 'p' → logprob: -5.6388726234436035
    4. ' pointer' → logprob: -7.8888726234436035
    5. 'Pointers' → logprob: -7.8888726234436035
    6. '-pointer' → logprob: -8.138873100280762
    7. '	p' → logprob: -9.013873100280762
    8. 'ointers' → logprob: -9.388873100280762
    9. 'ptr' → logprob: -9.513873100280762
    10. '_pointer' → logprob: -9.763873100280762

Token 797: ' on' (ID: 402)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3944699466228485
    2. 'i' → logprob: -1.519469976425171
    3. ' i' → logprob: -2.769469976425171
    4. '   ' → logprob: -3.769469976425171
    5. '```' → logprob: -3.894469976425171
    6. '``' → logprob: -7.519469738006592
    7. '
' → logprob: -8.76947021484375
    8. 'def' → logprob: -8.89447021484375
    9. ' ' → logprob: -9.51947021484375
    10. 'import' → logprob: -10.89447021484375

Token 798: ' lev' (ID: 12114)
  Prédit: 'lev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lev' → logprob: -0.3380252420902252
    2. 'arr' → logprob: -1.4630252122879028
    3. ' lev' → logprob: -3.2130253314971924
    4. 'range' → logprob: -4.838025093078613
    5. 'i' → logprob: -5.963025093078613
    6. ' arr' → logprob: -6.213025093078613
    7. ' range' → logprob: -7.338025093078613
    8. 'len' → logprob: -8.338025093078613
    9. ' i' → logprob: -8.463025093078613
    10. '
' → logprob: -8.713025093078613

Token 799: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -5.319370302458992e-06
    2. '1' → logprob: -12.625005722045898
    3. 'l' → logprob: -14.500005722045898
    4. '       ' → logprob: -14.625005722045898
    5. '   ' → logprob: -15.125005722045898
    6. '```' → logprob: -15.375005722045898
    7. 'ls' → logprob: -16.0000057220459
    8. 'els' → logprob: -16.3750057220459
    9. '_' → logprob: -16.7500057220459
    10. '    ' → logprob: -17.0000057220459

Token 800: '1' (ID: 16)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.46057072281837463
    2. 'i' → logprob: -1.7105706930160522
    3. '       ' → logprob: -1.7105706930160522
    4. '1' → logprob: -5.460570812225342
    5. '   ' → logprob: -5.835570812225342
    6. ' ' → logprob: -8.085570335388184
    7. '      ' → logprob: -11.335570335388184
    8. '     ' → logprob: -11.585570335388184
    9. '_i' → logprob: -11.835570335388184
    10. 'idx' → logprob: -12.085570335388184

Token 801: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7228776216506958
    2. ',i' → logprob: -1.2228776216506958
    3. 'i' → logprob: -1.8478776216506958
    4. '   ' → logprob: -3.8478775024414062
    5. '       ' → logprob: -3.8478775024414062
    6. ' i' → logprob: -4.722877502441406
    7. ' and' → logprob: -5.472877502441406
    8. '```' → logprob: -5.972877502441406
    9. ' ,' → logprob: -6.972877502441406
    10. '[i' → logprob: -7.222877502441406

Token 802: ' lev' (ID: 12114)
  Prédit: 'lev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lev' → logprob: -0.043717753142118454
    2. ' lev' → logprob: -3.168717861175537
    3. '```' → logprob: -8.793717384338379
    4. '0' → logprob: -9.043717384338379
    5. 'i' → logprob: -9.418717384338379
    6. 'arr' → logprob: -9.543717384338379
    7. '   ' → logprob: -9.918717384338379
    8. '
' → logprob: -10.293717384338379
    9. 'len' → logprob: -10.418717384338379
    10. ' i' → logprob: -10.668717384338379

Token 803: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.001199635793454945
    2. '2' → logprob: -7.251199722290039
    3. '1' → logprob: -7.626199722290039
    4. ' s' → logprob: -14.126199722290039
    5. '```' → logprob: -15.376199722290039
    6. '_' → logprob: -15.876199722290039
    7. 'i' → logprob: -16.06369972229004
    8. 'с' → logprob: -16.18869972229004
    9. '-' → logprob: -16.68869972229004
    10. ' ' → logprob: -16.93869972229004

Token 804: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00034476007567718625
    2. '1' → logprob: -8.000345230102539
    3. '
' → logprob: -11.875345230102539
    4. 's' → logprob: -13.750345230102539
    5. '```' → logprob: -14.750345230102539
    6. ' ' → logprob: -15.375345230102539
    7. '   ' → logprob: -16.12534523010254
    8. '`' → logprob: -16.50034523010254
    9. '``' → logprob: -16.75034523010254
    10. 'and' → logprob: -16.81284523010254

Token 805: ' to' (ID: 316)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7124472856521606
    2. 'i' → logprob: -1.3374472856521606
    3. '   ' → logprob: -2.212447166442871
    4. ' i' → logprob: -2.212447166442871
    5. '```' → logprob: -3.712447166442871
    6. '
' → logprob: -6.337447166442871
    7. '``' → logprob: -6.587447166442871
    8. 'j' → logprob: -9.087447166442871
    9. ' ' → logprob: -9.212447166442871
    10. ',i' → logprob: -9.337447166442871

Token 806: ' find' (ID: 1646)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.9293898940086365
    2. 'find' → logprob: -1.0543899536132812
    3. ' find' → logprob: -2.1793899536132812
    4. 'min' → logprob: -2.5543899536132812
    5. ' i' → logprob: -3.4293899536132812
    6. 'j' → logprob: -4.179389953613281
    7. ' minimize' → logprob: -4.804389953613281
    8. 'l' → logprob: -6.304389953613281
    9. '```' → logprob: -6.429389953613281
    10. 'solve' → logprob: -6.929389953613281

Token 807: ' minimal' (ID: 19957)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -1.04171621799469
    2. 'minimal' → logprob: -1.41671621799469
    3. ' minimal' → logprob: -1.54171621799469
    4. 'i' → logprob: -2.1667160987854004
    5. 'minimum' → logprob: -3.4167160987854004
    6. 'best' → logprob: -4.9167160987854
    7. ' i' → logprob: -5.0417160987854
    8. ' minimum' → logprob: -5.1667160987854
    9. ' min' → logprob: -5.2917160987854
    10. '
' → logprob: -5.4167160987854

Token 808: ' sum' (ID: 4215)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.4882483184337616
    2. ' i' → logprob: -0.988248348236084
    3. 'sum' → logprob: -5.738248348236084
    4. 'import' → logprob: -6.238248348236084
    5. ' sum' → logprob: -6.488248348236084
    6. '   ' → logprob: -6.488248348236084
    7. ' ans' → logprob: -6.863248348236084
    8. '
' → logprob: -6.863248348236084
    9. 'ans' → logprob: -6.988248348236084
    10. ' import' → logprob: -7.238248348236084

Token 809: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0789266899228096
    2. 'i' → logprob: -2.9539268016815186
    3. '
' → logprob: -4.7039265632629395
    4. '   ' → logprob: -4.8289265632629395
    5. ' i' → logprob: -5.4539265632629395
    6. '```' → logprob: -6.2039265632629395
    7. '``' → logprob: -8.203927040100098
    8. '        
' → logprob: -10.328927040100098
    9. 'j' → logprob: -10.828927040100098
    10. ' ' → logprob: -11.328927040100098

Token 810: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06784292310476303
    2. 'i' → logprob: -2.817842960357666
    3. '   ' → logprob: -6.067842960357666
    4. '
' → logprob: -6.442842960357666
    5. '```' → logprob: -6.567842960357666
    6. ' i' → logprob: -8.317842483520508
    7. '``' → logprob: -8.692842483520508
    8. 'l' → logprob: -9.442842483520508
    9. 'j' → logprob: -11.442842483520508
    10. 'left' → logprob: -11.442842483520508

Token 811: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.02532537281513214
    2. '   ' → logprob: -3.775325298309326
    3. '       ' → logprob: -7.025325298309326
    4. '```' → logprob: -7.150325298309326
    5. 'j' → logprob: -8.275325775146484
    6. '``' → logprob: -9.775325775146484
    7. '
' → logprob: -9.900325775146484
    8. ' i' → logprob: -10.525325775146484
    9. 'import' → logprob: -12.150325775146484
    10. 'l' → logprob: -12.525325775146484

Token 812: ',j' (ID: 22712)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.26202836632728577
    2. ',j' → logprob: -1.5120283365249634
    3. ',' → logprob: -4.762028217315674
    4. '=j' → logprob: -7.137028217315674
    5. ' =' → logprob: -7.387028217315674
    6. '=len' → logprob: -10.137028694152832
    7. 'j' → logprob: -10.637028694152832
    8. '0' → logprob: -11.512028694152832
    9. 's' → logprob: -13.012028694152832
    10. ',len' → logprob: -13.137028694152832

Token 813: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.005446246825158596
    2. '=len' → logprob: -6.130446434020996
    3. ' =' → logprob: -6.380446434020996
    4. '=i' → logprob: -7.005446434020996
    5. '=j' → logprob: -7.630446434020996
    6. ',j' → logprob: -8.880446434020996
    7. ',' → logprob: -11.005446434020996
    8. ',i' → logprob: -11.630446434020996
    9. ',len' → logprob: -13.505446434020996
    10. '=num' → logprob: -14.255446434020996

Token 814: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0019291093340143561
    2. 'len' → logprob: -6.25192928314209
    3. ' ' → logprob: -15.00192928314209
    4. ' len' → logprob: -17.126928329467773
    5. '(len' → logprob: -17.626928329467773
    6. '```' → logprob: -18.376928329467773
    7. '-' → logprob: -18.626928329467773
    8. '(' → logprob: -18.751928329467773
    9. '[len' → logprob: -18.876928329467773
    10. '00' → logprob: -19.001928329467773

Token 815: ',len' (ID: 73338)
  Prédit: ',j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',j' → logprob: -0.46520042419433594
    2. ',len' → logprob: -1.340200424194336
    3. ',' → logprob: -2.215200424194336
    4. 'len' → logprob: -7.590200424194336
    5. ',i' → logprob: -8.215200424194336
    6. ',l' → logprob: -9.465200424194336
    7. '=len' → logprob: -9.715200424194336
    8. ' ,' → logprob: -9.965200424194336
    9. ',k' → logprob: -10.340200424194336
    10. ',
' → logprob: -10.590200424194336

Token 816: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0003546502848621458
    2. 'lev' → logprob: -8.000354766845703
    3. '(arr' → logprob: -11.500354766845703
    4. 'arr' → logprob: -12.250354766845703
    5. '2' → logprob: -13.875354766845703
    6. '(j' → logprob: -14.125354766845703
    7. '(len' → logprob: -14.750354766845703
    8. '1' → logprob: -15.000354766845703
    9. '(l' → logprob: -15.000354766845703
    10. '[' → logprob: -15.125354766845703

Token 817: 'lev' (ID: 3944)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3871235251426697
    2. 'lev' → logprob: -1.1371235847473145
    3. 'arr' → logprob: -8.637123107910156
    4. '(arr' → logprob: -9.512123107910156
    5. '(level' → logprob: -15.637123107910156
    6. '(l' → logprob: -16.012123107910156
    7. '[' → logprob: -16.012123107910156
    8. 'Lev' → logprob: -16.262123107910156
    9. '{' → logprob: -16.512123107910156
    10. 'LEV' → logprob: -16.637123107910156

Token 818: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.06328513473272324
    2. '2' → logprob: -3.0632851123809814
    3. '(' → logprob: -4.6882853507995605
    4. '1' → logprob: -5.4382853507995605
    5. 'lev' → logprob: -7.5632853507995605
    6. '-' → logprob: -8.313284873962402
    7. '(s' → logprob: -8.563284873962402
    8. ')' → logprob: -10.938284873962402
    9. 'v' → logprob: -11.563284873962402
    10. '(
' → logprob: -11.688284873962402

Token 819: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.025407779961824417
    2. '1' → logprob: -3.7754077911376953
    3. '-' → logprob: -6.525407791137695
    4. '[' → logprob: -8.150407791137695
    5. ')-' → logprob: -8.525407791137695
    6. ')' → logprob: -9.025407791137695
    7. '(' → logprob: -10.150407791137695
    8. '```' → logprob: -10.775407791137695
    9. '_' → logprob: -12.150407791137695
    10. ']-' → logprob: -12.962907791137695

Token 820: ')-' (ID: 14080)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.23697099089622498
    2. ')-' → logprob: -1.6119710206985474
    3. ')' → logprob: -4.486970901489258
    4. '[' → logprob: -9.611970901489258
    5. ' -' → logprob: -9.611970901489258
    6. '1' → logprob: -10.111970901489258
    7. '-)' → logprob: -10.986970901489258
    8. '```' → logprob: -10.986970901489258
    9. '()-' → logprob: -11.486970901489258
    10. ']-' → logprob: -12.736970901489258

Token 821: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1637164789135568e-05
    2. ' ' → logprob: -11.500011444091797
    3. '0' → logprob: -14.250011444091797
    4. '-' → logprob: -14.375011444091797
    5. '```' → logprob: -17.000011444091797
    6. 'len' → logprob: -17.437511444091797
    7. '
' → logprob: -17.812511444091797
    8. '(' → logprob: -18.312511444091797
    9. '   ' → logprob: -18.375011444091797
    10. '2' → logprob: -18.375011444091797

Token 822: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.11534954607486725
    2. '<|end|>' → logprob: -2.740349531173706
    3. 'while' → logprob: -3.240349531173706
    4. ' while' → logprob: -6.490349769592285
    5. '```' → logprob: -7.115349769592285
    6. '  
' → logprob: -7.490349769592285
    7. ')' → logprob: -7.865349769592285
    8. ' 
' → logprob: -7.990349769592285
    9. '<|end|>' → logprob: -8.490349769592285
    10. '   ' → logprob: -8.615349769592285

Token 823: '       ' (ID: 309)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.35327401757240295
    2. '
' → logprob: -1.3532739877700806
    3. ' while' → logprob: -3.72827410697937
    4. '       ' → logprob: -5.103273868560791
    5. '   ' → logprob: -5.603273868560791
    6. '<|end|>' → logprob: -5.853273868560791
    7. '```' → logprob: -6.978273868560791
    8. '        
' → logprob: -7.728273868560791
    9. '	while' → logprob: -8.10327434539795
    10. '    
' → logprob: -8.60327434539795

Token 824: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.03369353339076042
    2. 'res' → logprob: -4.033693313598633
    3. 'min' → logprob: -4.658693313598633
    4. ' ans' → logprob: -5.658693313598633
    5. 'answer' → logprob: -6.908693313598633
    6. 'best' → logprob: -7.158693313598633
    7. 'result' → logprob: -7.908693313598633
    8. 'while' → logprob: -9.158693313598633
    9. '       ' → logprob: -10.033693313598633
    10. '   ' → logprob: -10.158693313598633

Token 825: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01484670303761959
    2. '=-' → logprob: -4.2648468017578125
    3. ' =' → logprob: -7.3898468017578125
    4. '=float' → logprob: -10.639846801757812
    5. '=None' → logprob: -11.014846801757812
    6. '={}' → logprob: -11.264846801757812
    7. '=sys' → logprob: -12.014846801757812
    8. '=[]' → logprob: -13.139846801757812
    9. '=int' → logprob: -13.389846801757812
    10. '=(-' → logprob: -13.389846801757812

Token 826: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.011082245968282223
    2. 'float' → logprob: -4.511082172393799
    3. 'int' → logprob: -10.886082649230957
    4. '1' → logprob: -11.761082649230957
    5. 'sys' → logprob: -11.886082649230957
    6. '100' → logprob: -15.136082649230957
    7. '2' → logprob: -15.511082649230957
    8. ' float' → logprob: -15.761082649230957
    9. 'pow' → logprob: -16.01108169555664
    10. '-' → logprob: -16.26108169555664

Token 827: '**' (ID: 410)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.0059690880589187145
    2. '8' → logprob: -5.130969047546387
    3. '**' → logprob: -10.255969047546387
    4. '```' → logprob: -12.505969047546387
    5. '10' → logprob: -14.380969047546387
    6. '7' → logprob: -14.380969047546387
    7. '09' → logprob: -14.630969047546387
    8. '18' → logprob: -17.505970001220703
    9. '12' → logprob: -17.505970001220703
    10. ' ' → logprob: -17.880970001220703

Token 828: '15' (ID: 1055)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.5583467483520508
    2. '15' → logprob: -0.9333467483520508
    3. '10' → logprob: -3.683346748352051
    4. '18' → logprob: -5.308346748352051
    5. '12' → logprob: -5.933346748352051
    6. '14' → logprob: -7.183346748352051
    7. '16' → logprob: -7.933346748352051
    8. '11' → logprob: -8.05834674835205
    9. '8' → logprob: -8.18334674835205
    10. '13' → logprob: -9.05834674835205

Token 829: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.026585208252072334
    2. '<|end|>' → logprob: -4.026585102081299
    3. 'while' → logprob: -5.526585102081299
    4. ' while' → logprob: -6.651585102081299
    5. '\n' → logprob: -7.651585102081299
    6. '   ' → logprob: -7.776585102081299
    7. '	while' → logprob: -7.901585102081299
    8. '
' → logprob: -8.276585578918457
    9. '```' → logprob: -8.276585578918457
    10. '  
' → logprob: -8.401585578918457

Token 830: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5548589825630188
    2. 'while' → logprob: -1.429858922958374
    3. '```' → logprob: -3.054858922958374
    4. ' while' → logprob: -3.179858922958374
    5. '\n' → logprob: -3.429858922958374
    6. ' 
' → logprob: -4.304859161376953
    7. '<|end|>' → logprob: -4.304859161376953
    8. '	while' → logprob: -4.804859161376953
    9. '\' → logprob: -4.804859161376953
    10. '  
' → logprob: -5.429859161376953

Token 831: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.0028684698045253754
    2. ' while' → logprob: -6.12786865234375
    3. '	while' → logprob: -7.87786865234375
    4. '   ' → logprob: -8.75286865234375
    5. '       ' → logprob: -9.37786865234375
    6. '```' → logprob: -10.25286865234375
    7. 'While' → logprob: -11.25286865234375
    8. '<|end|>' → logprob: -11.75286865234375
    9. '
' → logprob: -13.00286865234375
    10. 'for' → logprob: -13.50286865234375

Token 832: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.001171652227640152
    2. ' i' → logprob: -6.751171588897705
    3. 'j' → logprob: -14.501172065734863
    4. 'True' → logprob: -14.626172065734863
    5. '(i' → logprob: -15.626172065734863
    6. '	i' → logprob: -15.876172065734863
    7. '   ' → logprob: -16.501171112060547
    8. ' ' → logprob: -16.501171112060547
    9. '[i' → logprob: -17.876171112060547
    10. 's' → logprob: -18.251171112060547

Token 833: '<len' (ID: 141365)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.09754177182912827
    2. '<len' → logprob: -2.5975418090820312
    3. ' <' → logprob: -4.097541809082031
    4. '<=' → logprob: -7.347541809082031
    5. ' ' → logprob: -7.972541809082031
    6. '<size' → logprob: -8.347541809082031
    7. '[' → logprob: -9.097541809082031
    8. '<i' → logprob: -9.097541809082031
    9. '<
' → logprob: -9.347541809082031
    10. '<n' → logprob: -9.472541809082031

Token 834: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.1472419600977446e-06
    2. 'lev' → logprob: -13.750000953674316
    3. 'i' → logprob: -17.250001907348633
    4. '1' → logprob: -17.625001907348633
    5. '(i' → logprob: -17.750001907348633
    6. '(
' → logprob: -18.125001907348633
    7. ' (' → logprob: -18.125001907348633
    8. '```' → logprob: -18.375001907348633
    9. '
' → logprob: -19.500001907348633
    10. '`' → logprob: -19.500001907348633

Token 835: 'lev' (ID: 3944)
  Prédit: 'lev'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lev' → logprob: -1.2664456789934775e-06
    2. '(' → logprob: -13.875000953674316
    3. ' lev' → logprob: -16.875001907348633
    4. ')' → logprob: -17.125001907348633
    5. '```' → logprob: -17.250001907348633
    6. '
' → logprob: -17.375001907348633
    7. 'lever' → logprob: -17.500001907348633
    8. 'lew' → logprob: -18.875001907348633
    9. ')
' → logprob: -19.000001907348633
    10. 'leb' → logprob: -19.125001907348633

Token 836: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0019337546546012163
    2. '1' → logprob: -6.251933574676514
    3. 'lev' → logprob: -13.751934051513672
    4. '```' → logprob: -13.876934051513672
    5. '(' → logprob: -15.064434051513672
    6. 'vs' → logprob: -15.376934051513672
    7. ')' → logprob: -15.626934051513672
    8. 'rs' → logprob: -15.876934051513672
    9. 'ls' → logprob: -15.876934051513672
    10. 'v' → logprob: -15.939434051513672

Token 837: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.771655115589965e-05
    2. 'lev' → logprob: -11.375018119812012
    3. 's' → logprob: -13.125018119812012
    4. ')' → logprob: -13.875018119812012
    5. '```' → logprob: -14.000018119812012
    6. '(' → logprob: -14.625018119812012
    7. '
' → logprob: -15.187518119812012
    8. ')
' → logprob: -15.937518119812012
    9. 'l' → logprob: -16.000017166137695
    10. ']' → logprob: -16.000017166137695

Token 838: ')' (ID: 8)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.4869403541088104
    2. 'and' → logprob: -0.9869403839111328
    3. ')' → logprob: -4.361940383911133
    4. '):
' → logprob: -11.611940383911133
    5. '   ' → logprob: -12.611940383911133
    6. '>' → logprob: -12.986940383911133
    7. ' ' → logprob: -13.111940383911133
    8. '```' → logprob: -13.236940383911133
    9. '	and' → logprob: -13.611940383911133
    10. '       ' → logprob: -13.861940383911133

Token 839: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.3869134783744812
    2. 'and' → logprob: -1.136913537979126
    3. '   ' → logprob: -11.011913299560547
    4. ':
' → logprob: -11.886913299560547
    5. '       ' → logprob: -12.261913299560547
    6. '	and' → logprob: -12.386913299560547
    7. '<|end|>' → logprob: -12.511913299560547
    8. ':' → logprob: -12.886913299560547
    9. ' ' → logprob: -14.136913299560547
    10. '```' → logprob: -14.886913299560547

Token 840: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -5.157039049663581e-05
    2. ' j' → logprob: -9.875051498413086
    3. '	j' → logprob: -17.000051498413086
    4. '0' → logprob: -17.375051498413086
    5. '(j' → logprob: -17.875051498413086
    6. '   ' → logprob: -18.000051498413086
    7. 'i' → logprob: -18.250051498413086
    8. '
' → logprob: -18.250051498413086
    9. '[j' → logprob: -18.750051498413086
    10. ',j' → logprob: -18.750051498413086

Token 841: '>=' (ID: 20974)
  Prédit: '>='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.038486313074827194
    2. '>' → logprob: -3.2884862422943115
    3. '>-' → logprob: -7.913486480712891
    4. ' >=' → logprob: -10.66348648071289
    5. ']>=' → logprob: -10.66348648071289
    6. ')>=' → logprob: -10.91348648071289
    7. '≥' → logprob: -12.03848648071289
    8. '0' → logprob: -13.16348648071289
    9. '>
' → logprob: -13.28848648071289
    10. '[' → logprob: -13.28848648071289

Token 842: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.5776860184123507e-06
    2. ' ' → logprob: -12.87500286102295
    3. '   ' → logprob: -20.000001907348633
    4. '۰' → logprob: -20.125001907348633
    5. '<|end|>' → logprob: -20.375001907348633
    6. '```' → logprob: -20.500001907348633
    7. '
' → logprob: -21.625001907348633
    8. '[' → logprob: -22.125001907348633
    9. ')' → logprob: -22.375001907348633
    10. ' ' → logprob: -22.875001907348633

Token 843: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3147638142108917
    2. ':
' → logprob: -1.3147637844085693
    3. ' and' → logprob: -7.064764022827148
    4. '   ' → logprob: -8.564764022827148
    5. '):
' → logprob: -8.564764022827148
    6. '       ' → logprob: -9.189764022827148
    7. '<|end|>' → logprob: -9.564764022827148
    8. 'and' → logprob: -10.939764022827148
    9. ',' → logprob: -11.189764022827148
    10. '):' → logprob: -11.439764022827148

Token 844: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003339432878419757
    2. '<|end|>' → logprob: -6.1283392906188965
    3. '           ' → logprob: -8.378339767456055
    4. '   ' → logprob: -8.878339767456055
    5. '        ' → logprob: -9.503339767456055
    6. '[' → logprob: -9.503339767456055
    7. '	       ' → logprob: -9.628339767456055
    8. '        
' → logprob: -9.753339767456055
    9. '<|end|>' → logprob: -9.753339767456055
    10. '      ' → logprob: -9.878339767456055

Token 845: ' c' (ID: 274)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.0290158987045288
    2. '       ' → logprob: -1.2790158987045288
    3. ' if' → logprob: -1.4040158987045288
    4. '           ' → logprob: -2.9040160179138184
    5. 'count' → logprob: -3.6540160179138184
    6. 'rooms' → logprob: -4.154016017913818
    7. 'sum' → logprob: -5.029016017913818
    8. 'total' → logprob: -5.279016017913818
    9. 'val' → logprob: -6.654016017913818
    10. '   ' → logprob: -7.029016017913818

Token 846: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0009764790302142501
    2. 'arr' → logprob: -7.5009765625
    3. ' =' → logprob: -8.8759765625
    4. '1' → logprob: -9.7509765625
    5. 'sum' → logprob: -10.1259765625
    6. 'total' → logprob: -10.2509765625
    7. '=sum' → logprob: -10.2509765625
    8. '=count' → logprob: -11.0009765625
    9. 'count' → logprob: -11.2509765625
    10. 'cnt' → logprob: -12.0009765625

Token 847: 'arr' (ID: 1614)
  Prédit: 'arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -1.9361264946837764e-07
    2. ' arr' → logprob: -15.875
    3. '(arr' → logprob: -16.875
    4. '_arr' → logprob: -18.625
    5. 'lev' → logprob: -18.875
    6. '	arr' → logprob: -19.375
    7. '0' → logprob: -20.0
    8. 'Arr' → logprob: -20.0
    9. 'ans' → logprob: -20.375
    10. '[arr' → logprob: -20.375

Token 848: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. 's' → logprob: -15.875000953674316
    3. 'i' → logprob: -15.875000953674316
    4. '[' → logprob: -16.25
    5. '```' → logprob: -16.5
    6. '１' → logprob: -17.125
    7. '
' → logprob: -17.5625
    8. 'arr' → logprob: -17.9375
    9. '_' → logprob: -18.0
    10. '۱' → logprob: -18.0625

Token 849: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.676981345459353e-06
    2. '[' → logprob: -13.000005722045898
    3. 'i' → logprob: -13.000005722045898
    4. '           ' → logprob: -14.375005722045898
    5. '```' → logprob: -15.625005722045898
    6. ' [' → logprob: -15.875005722045898
    7. '[j' → logprob: -16.0000057220459
    8. '[
' → logprob: -16.8750057220459
    9. '[I' → logprob: -17.1250057220459
    10. ')[' → logprob: -17.8750057220459

Token 850: ']+' (ID: 15344)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.25476938486099243
    2. ']+' → logprob: -1.5047693252563477
    3. ' +' → logprob: -6.629769325256348
    4. ']' → logprob: -7.254769325256348
    5. ')+' → logprob: -7.379769325256348
    6. '+
' → logprob: -8.754769325256348
    7. ')' → logprob: -11.129769325256348
    8. '+c' → logprob: -13.129769325256348
    9. ']+=' → logprob: -13.504769325256348
    10. '[arr' → logprob: -14.004769325256348

Token 851: 'arr' (ID: 1614)
  Prédit: 'arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -1.9361264946837764e-07
    2. ' arr' → logprob: -16.5
    3. '(arr' → logprob: -19.5
    4. '	arr' → logprob: -20.0
    5. 'ans' → logprob: -20.125
    6. '$arr' → logprob: -22.0
    7. '[arr' → logprob: -22.5
    8. '           ' → logprob: -23.25
    9. '   ' → logprob: -23.375
    10. 'c' → logprob: -23.75

Token 852: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.2246291337069124e-05
    2. '[j' → logprob: -11.875021934509277
    3. 'arr' → logprob: -11.875021934509277
    4. 'j' → logprob: -12.125021934509277
    5. '1' → logprob: -14.125021934509277
    6. 's' → logprob: -14.625021934509277
    7. '   ' → logprob: -15.125021934509277
    8. 'r' → logprob: -15.250021934509277
    9. '[' → logprob: -15.625021934509277
    10. ' ' → logprob: -15.812521934509277

Token 853: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -1.7432603272027336e-06
    2. '[' → logprob: -13.875001907348633
    3. 'j' → logprob: -14.625001907348633
    4. '[i' → logprob: -16.375001907348633
    5. '[
' → logprob: -17.000001907348633
    6. '```' → logprob: -17.250001907348633
    7. '[js' → logprob: -17.375001907348633
    8. '[int' → logprob: -18.625001907348633
    9. ' [' → logprob: -18.625001907348633
    10. '[c' → logprob: -18.750001907348633

Token 854: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1225820779800415
    2. ')>=' → logprob: -1.1225820779800415
    3. '>=' → logprob: -1.2475820779800415
    4. '<|end|>' → logprob: -3.372581958770752
    5. ']>=' → logprob: -4.247581958770752
    6. 'if' → logprob: -5.247581958770752
    7. ')
' → logprob: -5.747581958770752
    8. ' >=' → logprob: -7.247581958770752
    9. '           ' → logprob: -7.372581958770752
    10. '```' → logprob: -7.497581958770752

Token 855: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.015166230499744415
    2. '<|end|>' → logprob: -4.765166282653809
    3. '       ' → logprob: -6.015166282653809
    4. ' if' → logprob: -6.265166282653809
    5. '          ' → logprob: -7.765166282653809
    6. '   ' → logprob: -7.765166282653809
    7. ' ' → logprob: -8.390166282653809
    8. 'if' → logprob: -8.390166282653809
    9. '```' → logprob: -8.390166282653809
    10. '<|end|>' → logprob: -8.515166282653809

Token 856: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.20891280472278595
    2. ' if' → logprob: -1.8339128494262695
    3. 'if' (adapté à ' if') → logprob: -3.5839128494262695
    4. '	if' → logprob: -8.08391284942627
    5. '		' → logprob: -8.70891284942627
    6. '            ' → logprob: -8.95891284942627
    7. '       ' → logprob: -9.33391284942627
    8. '	       ' → logprob: -9.45891284942627
    9. '          ' → logprob: -9.70891284942627
    10. ' ' → logprob: -10.45891284942627

Token 857: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -3.054500666621607e-06
    2. ' c' → logprob: -12.75000286102295
    3. '   ' → logprob: -17.875003814697266
    4. '	c' → logprob: -18.875003814697266
    5. ' ' → logprob: -21.375003814697266
    6. '           ' → logprob: -21.625003814697266
    7. 'cation' → logprob: -21.625003814697266
    8. '  ' → logprob: -22.000003814697266
    9. '
' → logprob: -22.125003814697266
    10. '$c' → logprob: -22.500003814697266

Token 858: '>=' (ID: 20974)
  Prédit: '>='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.005895849317312241
    2. ' >=' → logprob: -5.255895614624023
    3. '>' → logprob: -7.630895614624023
    4. ']>=' → logprob: -9.130895614624023
    5. ')>=' → logprob: -10.130895614624023
    6. '<' → logprob: -11.130895614624023
    7. '[' → logprob: -11.630895614624023
    8. '≥' → logprob: -13.380895614624023
    9. ' <' → logprob: -13.755895614624023
    10. ' ' → logprob: -15.005895614624023

Token 859: 'R' (ID: 49)
  Prédit: 'R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -3.128163257315464e-07
    2. ' R' → logprob: -15.625
    3. '[R' → logprob: -17.125
    4. '	R' → logprob: -18.0
    5. '
' → logprob: -18.125
    6. '<R' → logprob: -18.5
    7. '[' → logprob: -19.5
    8. '`' → logprob: -19.625
    9. '```' → logprob: -19.625
    10. '   ' → logprob: -19.75

Token 860: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.14357303082942963
    2. ':
' → logprob: -2.018573045730591
    3. ' and' → logprob: -7.893572807312012
    4. '           ' → logprob: -8.643572807312012
    5. '):
' → logprob: -9.143572807312012
    6. '       ' → logprob: -10.018572807312012
    7. '               ' → logprob: -10.143572807312012
    8. ',' → logprob: -10.643572807312012
    9. '<|end|>' → logprob: -10.768572807312012
    10. '):' → logprob: -10.893572807312012

Token 861: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.020838480442762375
    2. '           ' → logprob: -4.770838260650635
    3. ' ans' → logprob: -4.895838260650635
    4. ' if' → logprob: -5.895838260650635
    5. 'ans' → logprob: -7.270838260650635
    6. '	           ' → logprob: -8.395838737487793
    7. ' 
' → logprob: -8.895838737487793
    8. ' ' → logprob: -8.895838737487793
    9. '                
' → logprob: -9.145838737487793
    10. ' ' → logprob: -9.145838737487793

Token 862: ' v' (ID: 323)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.005937924608588219
    2. ' ans' → logprob: -5.2559380531311035
    3. '	ans' → logprob: -7.6309380531311035
    4. '           ' → logprob: -8.630937576293945
    5. '               ' → logprob: -10.255937576293945
    6. '(ans' → logprob: -13.380937576293945
    7. 'if' → logprob: -14.005937576293945
    8. '
' → logprob: -14.380937576293945
    9. '   ' → logprob: -14.380937576293945
    10. '                   ' → logprob: -14.505937576293945

Token 863: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.030934728682041168
    2. ' =' → logprob: -4.030934810638428
    3. 'ans' → logprob: -5.155934810638428
    4. 'al' → logprob: -5.155934810638428
    5. '=min' → logprob: -8.28093433380127
    6. '=
' → logprob: -8.53093433380127
    7. '=v' → logprob: -8.65593433380127
    8. '=int' → logprob: -8.78093433380127
    9. 'als' → logprob: -9.65593433380127
    10. '=max' → logprob: -10.03093433380127

Token 864: 'lev' (ID: 3944)
  Prédit: 'lev'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lev' → logprob: -1.1472419600977446e-06
    2. ' lev' → logprob: -13.750000953674316
    3. 'le' → logprob: -17.750001907348633
    4. 'lever' → logprob: -18.375001907348633
    5. 'leb' → logprob: -18.500001907348633
    6. 'lv' → logprob: -18.750001907348633
    7. 'leve' → logprob: -19.000001907348633
    8. 'lep' → logprob: -19.000001907348633
    9. '   ' → logprob: -19.125001907348633
    10. 'vel' → logprob: -19.500001907348633

Token 865: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.8624639324116288e-06
    2. 'v' → logprob: -13.875001907348633
    3. 'i' → logprob: -14.625001907348633
    4. '1' → logprob: -15.375001907348633
    5. '[i' → logprob: -16.375001907348633
    6. 'lev' → logprob: -16.750001907348633
    7. ' s' → logprob: -17.125001907348633
    8. 'vals' → logprob: -17.375001907348633
    9. '```' → logprob: -18.000001907348633
    10. 'sv' → logprob: -18.125001907348633

Token 866: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00010652327910065651
    2. '[i' → logprob: -9.375106811523438
    3. 'i' → logprob: -10.875106811523438
    4. 's' → logprob: -13.625106811523438
    5. '```' → logprob: -14.000106811523438
    6. 'v' → logprob: -15.125106811523438
    7. '[' → logprob: -16.000106811523438
    8. '[
' → logprob: -17.375106811523438
    9. '[v' → logprob: -17.500106811523438
    10. '' → logprob: -17.625106811523438

Token 867: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.796184723294573e-06
    2. 'i' → logprob: -12.125005722045898
    3. '```' → logprob: -15.250005722045898
    4. '[' → logprob: -18.0000057220459
    5. '`' → logprob: -18.2500057220459
    6. '[
' → logprob: -18.5000057220459
    7. ' [' → logprob: -19.2500057220459
    8. '[j' → logprob: -19.7500057220459
    9. '``' → logprob: -19.8750057220459
    10. '
' → logprob: -20.0000057220459

Token 868: ']+' (ID: 15344)
  Prédit: ']+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']+' → logprob: -0.21688348054885864
    2. '+' → logprob: -1.7168834209442139
    3. '+j' → logprob: -4.466883659362793
    4. '[j' → logprob: -6.091883659362793
    5. ']' → logprob: -6.716883659362793
    6. ' +' → logprob: -8.591883659362793
    7. '[' → logprob: -9.091883659362793
    8. '+
' → logprob: -10.091883659362793
    9. '}+' → logprob: -11.341883659362793
    10. '
' → logprob: -11.841883659362793

Token 869: 'lev' (ID: 3944)
  Prédit: 'lev'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lev' → logprob: -1.9361264946837764e-07
    2. ' lev' → logprob: -15.875
    3. 'vel' → logprob: -19.5
    4. '
' → logprob: -19.75
    5. '   ' → logprob: -19.875
    6. 'leve' → logprob: -20.375
    7. 'led' → logprob: -20.5
    8. 'lever' → logprob: -21.0
    9. 'leb' → logprob: -21.25
    10. 'le' → logprob: -21.375

Token 870: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -4.7755875129951164e-05
    2. '2' → logprob: -10.00004768371582
    3. 'v' → logprob: -14.00004768371582
    4. '[' → logprob: -15.00004768371582
    5. '```' → logprob: -15.00004768371582
    6. '1' → logprob: -15.25004768371582
    7. 'vs' → logprob: -15.25004768371582
    8. '[
' → logprob: -17.25004768371582
    9. 'lev' → logprob: -17.62504768371582
    10. '`s' → logprob: -18.00004768371582

Token 871: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0049966671504080296
    2. 's' → logprob: -5.3799967765808105
    3. '1' → logprob: -8.254996299743652
    4. '[j' → logprob: -10.129996299743652
    5. 'j' → logprob: -10.879996299743652
    6. '```' → logprob: -10.879996299743652
    7. 'lev' → logprob: -11.629996299743652
    8. 'v' → logprob: -12.754996299743652
    9. '[' → logprob: -12.879996299743652
    10. 'js' → logprob: -13.379996299743652

Token 872: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -7.896309739408025e-07
    2. 'j' → logprob: -14.125000953674316
    3. '```' → logprob: -18.125
    4. '[
' → logprob: -19.625
    5. '	j' → logprob: -19.75
    6. '[' → logprob: -19.75
    7. '
' → logprob: -21.0
    8. '[i' → logprob: -21.375
    9. '   ' → logprob: -21.75
    10. '`' → logprob: -21.875

Token 873: ']
' (ID: 1592)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.049053430557251
    2. '               ' → logprob: -1.549053430557251
    3. ')' → logprob: -1.924053430557251
    4. 'ans' → logprob: -2.424053430557251
    5. ')
' → logprob: -2.549053430557251
    6. ']' → logprob: -3.424053430557251
    7. '                   ' → logprob: -3.549053430557251
    8. '
' → logprob: -3.799053430557251
    9. ' if' → logprob: -4.049053192138672
    10. ']
' → logprob: -4.799053192138672

Token 874: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.21147605776786804
    2. '
' → logprob: -2.4614760875701904
    3. '           ' → logprob: -2.9614760875701904
    4. ' if' → logprob: -3.7114760875701904
    5. 'if' → logprob: -3.7114760875701904
    6. '                   ' → logprob: -6.711475849151611
    7. '
' → logprob: -7.461475849151611
    8. '                
' → logprob: -7.586475849151611
    9. '```' → logprob: -7.836475849151611
    10. '            
' → logprob: -7.961475849151611

Token 875: ' if' (ID: 538)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.2527864873409271
    2. 'if' (adapté à ' if') → logprob: -1.5027865171432495
    3. '           ' → logprob: -7.252786636352539
    4. ' if' → logprob: -9.252786636352539
    5. '               ' → logprob: -10.502786636352539
    6. ' ans' → logprob: -11.377786636352539
    7. '	ans' → logprob: -11.502786636352539
    8. '
' → logprob: -13.627786636352539
    9. 'answer' → logprob: -13.877786636352539
    10. '(ans' → logprob: -14.252786636352539

Token 876: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -9.088346359931165e-07
    2. ' v' → logprob: -14.125000953674316
    3. '	v' → logprob: -15.875000953674316
    4. '   ' → logprob: -21.875
    5. '_v' → logprob: -22.25
    6. ' ' → logprob: -22.5
    7. '$v' → logprob: -22.5
    8. 'ans' → logprob: -22.625
    9. '<v' → logprob: -23.375
    10. 'vj' → logprob: -23.5

Token 877: '<' (ID: 27)
  Prédit: '<'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.00043817906407639384
    2. '<v' → logprob: -8.00043773651123
    3. ' <' → logprob: -9.50043773651123
    4. '<int' → logprob: -11.87543773651123
    5. '<len' → logprob: -12.12543773651123
    6. '<
' → logprob: -12.25043773651123
    7. 'ans' → logprob: -12.50043773651123
    8. 'v' → logprob: -13.25043773651123
    9. '<arr' → logprob: -14.12543773651123
    10. '<size' → logprob: -14.62543773651123

Token 878: 'ans' (ID: 616)
  Prédit: 'ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: 0.0
    2. ' ans' → logprob: -17.0
    3. '	ans' → logprob: -20.0
    4. '(ans' → logprob: -22.875
    5. '10' → logprob: -23.625
    6. '
' → logprob: -24.25
    7. '_ans' → logprob: -24.5
    8. '=' → logprob: -24.75
    9. 'answer' → logprob: -25.125
    10. 'Ans' → logprob: -25.25

Token 879: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.16208812594413757
    2. ':' → logprob: -1.91208815574646
    3. '                   ' → logprob: -6.787087917327881
    4. '               ' → logprob: -8.162088394165039
    5. 'ans' → logprob: -8.537088394165039
    6. '           ' → logprob: -8.662088394165039
    7. '                       ' → logprob: -10.662088394165039
    8. '):
' → logprob: -11.287088394165039
    9. '(ans' → logprob: -11.412088394165039
    10. ':
' → logprob: -11.662088394165039

Token 880: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.06254712492227554
    2. 'ans' → logprob: -2.937547206878662
    3. '               ' → logprob: -5.312547206878662
    4. '                       ' → logprob: -6.687547206878662
    5. '
' → logprob: -7.187547206878662
    6. '           ' → logprob: -8.437546730041504
    7. '                           ' → logprob: -8.937546730041504
    8. '```' → logprob: -9.062546730041504
    9. ' ans' → logprob: -9.437546730041504
    10. '                               ' → logprob: -10.187546730041504

Token 881: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -1.580929347255733e-05
    2. '                   ' → logprob: -11.250016212463379
    3. ' ans' → logprob: -13.000016212463379
    4. '               ' → logprob: -14.625016212463379
    5. '                       ' → logprob: -17.500015258789062
    6. '	ans' → logprob: -17.500015258789062
    7. 'answer' → logprob: -17.750015258789062
    8. '           ' → logprob: -17.875015258789062
    9. '```' → logprob: -18.125015258789062
    10. '(ans' → logprob: -18.500015258789062

Token 882: '=v' (ID: 89140)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3132777214050293
    2. '=v' → logprob: -1.3132777214050293
    3. ' =' → logprob: -11.063278198242188
    4. '=value' → logprob: -16.188278198242188
    5. 'v' → logprob: -16.563278198242188
    6. ' v' → logprob: -17.313278198242188
    7. '＝' → logprob: -17.438278198242188
    8. '=

' → logprob: -17.563278198242188
    9. '=j' → logprob: -17.688278198242188
    10. '=
' → logprob: -17.688278198242188

Token 883: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.36098605394363403
    2. '                   ' → logprob: -1.2359859943389893
    3. '
' → logprob: -4.735986232757568
    4. '                
' → logprob: -6.610986232757568
    5. '           ' → logprob: -7.110986232757568
    6. '                    
' → logprob: -7.860986232757568
    7. '<|end|>' → logprob: -8.11098575592041
    8. 'j' → logprob: -8.98598575592041
    9. '                ' → logprob: -9.11098575592041
    10. '```' → logprob: -9.23598575592041

Token 884: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.08704468607902527
    2. 'j' → logprob: -3.0870447158813477
    3. '                   ' → logprob: -3.3370447158813477
    4. '           ' → logprob: -6.587044715881348
    5. ' j' → logprob: -8.087044715881348
    6. '[j' → logprob: -8.462044715881348
    7. '```' → logprob: -9.462044715881348
    8. '
' → logprob: -9.837044715881348
    9. ',j' → logprob: -10.337044715881348
    10. '                
' → logprob: -10.712044715881348

Token 885: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' (adapté à ' j') → logprob: -6.933173426659778e-05
    2. '                   ' → logprob: -9.750069618225098
    3. '               ' → logprob: -12.250069618225098
    4. ' j' → logprob: -13.000069618225098
    5. '```' → logprob: -13.500069618225098
    6. '           ' → logprob: -13.625069618225098
    7. '                    
' → logprob: -14.750069618225098
    8. '	j' → logprob: -15.000069618225098
    9. '                
' → logprob: -15.250069618225098
    10. '
' → logprob: -15.750069618225098

Token 886: '-=' (ID: 77519)
  Prédit: '-='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.018223343417048454
    2. '-' → logprob: -4.018223285675049
    3. 'j' → logprob: -10.518223762512207
    4. '```' → logprob: -11.018223762512207
    5. ' -=' → logprob: -11.143223762512207
    6. '=' → logprob: -12.018223762512207
    7. '<|end|>' → logprob: -12.768223762512207
    8. '–' → logprob: -13.143223762512207
    9. '-j' → logprob: -13.643223762512207
    10. '=j' → logprob: -13.893223762512207

Token 887: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.25
    3. '```' → logprob: -21.375
    4. 'j' → logprob: -22.875
    5. '<|end|>' → logprob: -23.0
    6. '+' → logprob: -23.0
    7. '
' → logprob: -23.25
    8. '   ' → logprob: -23.625
    9. '`' → logprob: -24.25
    10. '１' → logprob: -24.5

Token 888: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9071622490882874
    2. '           ' → logprob: -0.9071622490882874
    3. 'else' → logprob: -2.9071621894836426
    4. '<|end|>' → logprob: -3.2821621894836426
    5. '```' → logprob: -3.5321621894836426
    6. '   ' → logprob: -4.282162189483643
    7. 'i' → logprob: -4.532162189483643
    8. ' else' → logprob: -4.907162189483643
    9. '<|end|>' → logprob: -4.907162189483643
    10. ' 
' → logprob: -5.157162189483643

Token 889: '           ' (ID: 352)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.06914468109607697
    2. ' else' → logprob: -3.6941447257995605
    3. '           ' → logprob: -4.1941447257995605
    4. 'i' → logprob: -4.3191447257995605
    5. '```' → logprob: -4.5691447257995605
    6. '
' → logprob: -6.8191447257995605
    7. 'elif' → logprob: -7.5691447257995605
    8. '``' → logprob: -7.9441447257995605
    9. '	else' → logprob: -8.319144248962402
    10. '       ' → logprob: -8.444144248962402

Token 890: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.0417802631855011
    2. ' else' → logprob: -3.2917802333831787
    3. '           ' → logprob: -6.916780471801758
    4. 'elif' → logprob: -6.916780471801758
    5. 'i' → logprob: -7.041780471801758
    6. '```' → logprob: -7.666780471801758
    7. '
' → logprob: -8.916780471801758
    8. '       ' → logprob: -9.166780471801758
    9. '	else' → logprob: -9.666780471801758
    10. '1' → logprob: -10.916780471801758

Token 891: ':
' (ID: 734)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.05767620727419853
    2. '           ' → logprob: -3.057676315307617
    3. ' i' → logprob: -4.807676315307617
    4. '               ' → logprob: -8.057676315307617
    5. '	i' → logprob: -8.432676315307617
    6. '   ' → logprob: -8.432676315307617
    7. '       ' → logprob: -9.932676315307617
    8. '	       ' → logprob: -10.432676315307617
    9. ',i' → logprob: -11.182676315307617
    10. '(i' → logprob: -11.307676315307617

Token 892: '               ' (ID: 506)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.007416136097162962
    2. '           ' → logprob: -5.632416248321533
    3. ' i' → logprob: -5.632416248321533
    4. '   ' → logprob: -9.507415771484375
    5. '               ' → logprob: -9.632415771484375
    6. '	i' → logprob: -10.007415771484375
    7. '       ' → logprob: -10.382415771484375
    8. '[i' → logprob: -13.382415771484375
    9. '	       ' → logprob: -13.507415771484375
    10. '(i' → logprob: -13.507415771484375

Token 893: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -8.375538163818419e-05
    2. ' i' → logprob: -9.750083923339844
    3. '   ' → logprob: -11.375083923339844
    4. '	i' → logprob: -11.500083923339844
    5. '           ' → logprob: -14.375083923339844
    6. 'I' → logprob: -14.875083923339844
    7. 'j' → logprob: -14.875083923339844
    8. '               ' → logprob: -15.000083923339844
    9. '_i' → logprob: -15.125083923339844
    10. ',i' → logprob: -15.375083923339844

Token 894: '+=' (ID: 18287)
  Prédit: '+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.004338021855801344
    2. '+' → logprob: -5.504337787628174
    3. ' +=' → logprob: -8.879338264465332
    4. ']+=' → logprob: -9.754338264465332
    5. '++' → logprob: -10.754338264465332
    6. '+='' → logprob: -11.254338264465332
    7. '[' → logprob: -11.504338264465332
    8. '+="' → logprob: -12.254338264465332
    9. '```' → logprob: -12.504338264465332
    10. 'i' → logprob: -12.504338264465332

Token 895: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.749814019713085e-06
    2. 'i' → logprob: -12.000006675720215
    3. ' ' → logprob: -14.625006675720215
    4. '+' → logprob: -19.00000762939453
    5. ' i' → logprob: -19.00000762939453
    6. '```' → logprob: -20.62500762939453
    7. '(i' → logprob: -22.37500762939453
    8. '   ' → logprob: -22.62500762939453
    9. 'j' → logprob: -23.50000762939453
    10. '`' → logprob: -23.62500762939453

Token 896: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.38107535243034363
    2. '       ' → logprob: -1.256075382232666
    3. '<|end|>' → logprob: -4.131075382232666
    4. '   ' → logprob: -5.131075382232666
    5. 'print' → logprob: -5.506075382232666
    6. 'return' → logprob: -6.131075382232666
    7. '        
' → logprob: -7.131075382232666
    8. ' return' → logprob: -7.256075382232666
    9. '  
' → logprob: -7.506075382232666
    10. '    
' → logprob: -7.756075382232666

Token 897: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13797779381275177
    2. '<|end|>' → logprob: -2.8879778385162354
    3. '   ' → logprob: -3.6379778385162354
    4. '           ' → logprob: -4.512977600097656
    5. '```' → logprob: -5.012977600097656
    6. '    
' → logprob: -5.262977600097656
    7. '        
' → logprob: -5.387977600097656
    8. '<|end|>' → logprob: -5.887977600097656
    9. '  
' → logprob: -6.012977600097656
    10. ' 
' → logprob: -6.137977600097656

Token 898: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.1283172219991684
    2. '
' → logprob: -2.25331711769104
    3. '       ' → logprob: -4.378317356109619
    4. '   ' → logprob: -7.003317356109619
    5. 'return' → logprob: -7.878317356109619
    6. ' print' → logprob: -7.878317356109619
    7. '```' → logprob: -7.878317356109619
    8. '        
' → logprob: -8.503316879272461
    9. '<|end|>' → logprob: -8.628316879272461
    10. '
' → logprob: -8.878316879272461

Token 899: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -7.481510692741722e-05
    2. '()' → logprob: -9.75007438659668
    3. '(' → logprob: -11.75007438659668
    4. 'ans' → logprob: -11.87507438659668
    5. ' (' → logprob: -14.00007438659668
    6. '(int' → logprob: -15.37507438659668
    7. '(f' → logprob: -15.62507438659668
    8. '(
' → logprob: -16.37507438659668
    9. '('' → logprob: -16.75007438659668
    10. '(answer' → logprob: -16.75007438659668

Token 900: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -9.088346359931165e-07
    2. ' )' → logprob: -14.625000953674316
    3. ')`' → logprob: -15.375000953674316
    4. '`)' → logprob: -16.25
    5. ')
' → logprob: -17.375
    6. '')' → logprob: -17.75
    7. '))' → logprob: -17.875
    8. ')}' → logprob: -18.125
    9. '")' → logprob: -18.25
    10. '   ' → logprob: -18.375

Token 901: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0005037044174969196
    2. '
' → logprob: -8.125503540039062
    3. ' if' → logprob: -9.250503540039062
    4. '<|end|>' → logprob: -9.375503540039062
    5. '```' → logprob: -11.375503540039062
    6. '#' → logprob: -12.625503540039062
    7. 'for' → logprob: -12.875503540039062
    8. 'main' → logprob: -13.375503540039062
    9. 'b' → logprob: -13.500503540039062
    10. '  
' → logprob: -13.750503540039062

Token 902: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.5236800909042358
    2. ' __' → logprob: -0.8986800909042358
    3. '_' → logprob: -7.648680210113525
    4. '_name' → logprob: -10.023679733276367
    5. '___' → logprob: -11.648679733276367
    6. ' ' → logprob: -12.148679733276367
    7. '____' → logprob: -12.148679733276367
    8. ' _' → logprob: -12.273679733276367
    9. ' ' → logprob: -12.898679733276367
    10. '​' → logprob: -13.648679733276367

Token 903: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.8944966197013855
    2. '=="' → logprob: -1.2694966793060303
    3. '==' → logprob: -1.3944966793060303
    4. ' ==' → logprob: -3.0194966793060303
    5. '=='' → logprob: -5.019496440887451
    6. '.__' → logprob: -6.269496440887451
    7. '```' → logprob: -6.394496440887451
    8. '__.__' → logprob: -6.644496440887451
    9. 'name' → logprob: -7.144496440887451
    10. 'main' → logprob: -8.64449691772461

Token 904: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -4.704065213445574e-05
    2. '==' → logprob: -10.375046730041504
    3. '=="' → logprob: -11.875046730041504
    4. '__.__' → logprob: -11.875046730041504
    5. '=='' → logprob: -14.625046730041504
    6. '___' → logprob: -14.875046730041504
    7. '__('' → logprob: -15.125046730041504
    8. '____' → logprob: -15.500046730041504
    9. '```' → logprob: -15.750046730041504
    10. '__["' → logprob: -16.25004768371582

Token 905: '=="' (ID: 24027)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6494752764701843
    2. '=="' → logprob: -1.274475336074829
    3. '__' → logprob: -1.899475336074829
    4. '=='' → logprob: -3.149475336074829
    5. ' ==' → logprob: -5.27447509765625
    6. '__.__' → logprob: -9.14947509765625
    7. '==
' → logprob: -9.14947509765625
    8. '()==' → logprob: -9.64947509765625
    9. '()=="' → logprob: -10.02447509765625
    10. '```' → logprob: -10.52447509765625

Token 906: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.009872718714177608
    2. '"' → logprob: -5.009872913360596
    3. ''' → logprob: -5.759872913360596
    4. 'main' → logprob: -14.009872436523438
    5. '___' → logprob: -17.509872436523438
    6. ' __' → logprob: -17.884872436523438
    7. '_main' → logprob: -18.759872436523438
    8. ' "__' → logprob: -18.884872436523438
    9. '____' → logprob: -19.759872436523438
    10. '/__' → logprob: -20.134872436523438

Token 907: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -4.320199877838604e-07
    2. 'name' → logprob: -14.75
    3. ' main' → logprob: -17.625
    4. '"' → logprob: -17.875
    5. '	main' → logprob: -19.625
    6. '_main' → logprob: -19.75
    7. 'built' → logprob: -20.0
    8. '(main' → logprob: -21.25
    9. 'builtin' → logprob: -21.375
    10. 'm' → logprob: -21.5

Token 908: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.0070629664696753025
    2. '__' → logprob: -5.132062911987305
    3. '__':
' → logprob: -6.882062911987305
    4. '```' → logprob: -10.382062911987305
    5. '():
' → logprob: -11.007062911987305
    6. '.' → logprob: -11.257062911987305
    7. '">
' → logprob: -12.007062911987305
    8. '.py' → logprob: -12.007062911987305
    9. '__["' → logprob: -12.257062911987305
    10. ':' → logprob: -12.382062911987305

Token 909: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7009454369544983
    2. 'main' → logprob: -1.0759453773498535
    3. '	main' → logprob: -1.8259453773498535
    4. ' main' → logprob: -6.4509453773498535
    5. '_main' → logprob: -9.200945854187012
    6. '   ' → logprob: -10.325945854187012
    7. ' ' → logprob: -10.950945854187012
    8. '(main' → logprob: -11.075945854187012
    9. '```' → logprob: -11.075945854187012
    10. ' ' → logprob: -11.325945854187012

Token 910: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -4.320199877838604e-07
    2. ' main' → logprob: -15.25
    3. '	main' → logprob: -16.0
    4. '   ' → logprob: -16.875
    5. '_main' → logprob: -20.125
    6. '(main' → logprob: -21.625
    7. '.main' → logprob: -22.125
    8. 'import' → logprob: -22.375
    9. '-main' → logprob: -24.5
    10. 'Main' → logprob: -24.625

Token 911: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 909
Tokens correctement prédits (1ère position, stricte): 404
Tokens correctement prédits (1ère position, avec adaptation): 436
Tokens correctement prédits (top 10): 721
Précision stricte (1ère position): 44.44%
Précision adaptée (1ère position): 47.96%
Précision (top 10): 79.32%
================================================================================
