================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:06:20
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
import math

def can_place_balloon(r, w, needles):
    """
    Vérifie s'il est possible de placer une sphère de rayon r qui repose sur le sol (z=0)
    sans toucher les parois ni les aiguilles.
    
    Arguments:
    - r: rayon de la sphère
    - w: hauteur des murs de la boîte
    - needles: liste de tuples (x_i, y_i, h_i) pour chaque aiguille
    
    Retour:
    - True si placement possible, False sinon
    """
    # Si le ballon a un rayon supérieur à la hauteur des murs,
    # ou s'il va déborder des murs (car il doit être placé sur le sol,
    # son centre est donc en (cx, cy, r) et la sphère entière doit tenir)
    if r > w:
        return False
    
    # Le centre du ballon est donc à hauteur r au-dessus du sol
    # Sa projection dans le plan XY est le point (cx, cy), inconnu
    
    # Pour que la sphère ne touche pas les murs, le centre doit être
    # à au moins une distance r des bords carrés (0,0)-(100,100)
    # donc cx et cy dans [r, 100 - r]
    
    # Pour chaque aiguille, la distance verticale entre le centre du ballon (z=r)
    # et le sommet de l'aiguille (z = h_i) est |h_i - r|. La sphère a rayon r,
    # donc la distance horizontale entre centre ballon et aiguille doit être au moins
    # sqrt(r^2 - (h_i - r)^2), sinon la sphère empiète sur l'aiguille.
    # Si (h_i - r)^2 > r^2 => impossible à cause de la hauteur verticale
    
    # Méthode : sur une grille, on cherche si un point (cx, cy) existe avec
    # r <= cx <= 100-r, r <= cy <= 100-r et à respecter les contraintes.

    # Pour optimisation, on va discrétiser le domaine et faire un test.
    # n discrétisations suffisent pour 0.01 de précision.
    
    steps = 200  # 0.5 unité pour la grille
    delta = (100 - 2 * r) / steps
    if delta < 0:  # pas d'espace possible
        return False
    
    # On crée les listes possibles de positions du centre possible
    x_candidates = [r + i * delta for i in range(steps + 1)]
    y_candidates = x_candidates

    # Pour chaque point du centre, on vérifie les contraintes sur les aiguilles
    for cx in x_candidates:
        for cy in y_candidates:
            ok = True
            for (x_i, y_i, h_i) in needles:
                dz = abs(h_i - r)
                if dz > r:  # La sphère ne pourrait pas éviter l'aiguille en z
                    ok = False
                    break
                # distance horizontale minimale entre centre et aiguille :
                required_dist_xy = math.sqrt(r * r - dz * dz)
                dist_xy = math.hypot(cx - x_i, cy - y_i)
                if dist_xy < required_dist_xy - 1e-14:
                    # empiètement sur l'aiguille
                    ok = False
                    break
            if ok:
                return True
    return False

def solve():
    input = sys.stdin.read().strip().split()
    idx = 0
    results = []
    while True:
        if idx+1 >= len(input):
            break
        n = int(input[idx]); idx+=1
        w = int(input[idx]); idx+=1
        if n == 0 and w == 0:
            break
        needles = []
        for _ in range(n):
            x_i = int(input[idx]); idx+=1
            y_i = int(input[idx]); idx+=1
            h_i = int(input[idx]); idx+=1
            needles.append((x_i, y_i, h_i))

        # La borne supérieure est au maximum w car on ne peut pas dépasser
        # la hauteur des murs (sinon le ballon sort)
        # La borne inférieure est 0.
        low, high = 0.0, float(w)
        for _ in range(40):  # binaire résolution assez fine (1e-12)
            mid = (low + high) / 2
            if can_place_balloon(mid, w, needles):
                low = mid
            else:
                high = mid

        results.append(low)
    for r in results:
        print(f"{r:.5f}")

if __name__ == "__main__":
    solve()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'import' (ID: 561)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.29739612340927124
    2. '\n' → logprob: -1.547396183013916
    3. '<|end|>' → logprob: -3.797396183013916
    4. '\' → logprob: -4.922396183013916
    5. 'newline' → logprob: -5.672396183013916
    6. 'import' → logprob: -5.672396183013916
    7. '<|end|>' → logprob: -6.047396183013916
    8. '
' → logprob: -6.922396183013916
    9. '```' → logprob: -6.922396183013916
    10. '' → logprob: -7.547396183013916

Token 4: ' math' (ID: 13324)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.00020497082732617855
    2. 'os' → logprob: -8.500205039978027
    3. '"os' → logprob: -14.875205039978027
    4. ' math' → logprob: -15.000205039978027
    5. ' re' → logprob: -15.125205039978027
    6. '_os' → logprob: -15.750205039978027
    7. ' json' → logprob: -16.12520408630371
    8. '	os' → logprob: -16.37520408630371
    9. ' ' → logprob: -17.50020408630371
    10. ' ' → logprob: -17.50020408630371

Token 5: '

' (ID: 279)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.16191306710243225
    2. '\' → logprob: -3.2869131565093994
    3. 'import' → logprob: -3.6619131565093994
    4. '\n' → logprob: -3.6619131565093994
    5. '```' → logprob: -4.16191291809082
    6. '<|end|>' → logprob: -4.16191291809082
    7. '
' → logprob: -4.53691291809082
    8. '

' → logprob: -5.16191291809082
    9. '<|end|>' → logprob: -5.78691291809082
    10. '' → logprob: -5.91191291809082

Token 6: 'def' (ID: 1314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -1.1420094966888428
    2. '\' → logprob: -1.3920094966888428
    3. 'import' → logprob: -2.1420094966888428
    4. '\n' → logprob: -2.1420094966888428
    5. '```' → logprob: -2.3920094966888428
    6. 'def' → logprob: -3.2670094966888428
    7. '
' → logprob: -4.142009735107422
    8. ',' → logprob: -4.642009735107422
    9. '`' → logprob: -4.892009735107422
    10. '*' → logprob: -4.892009735107422

Token 7: ' can' (ID: 665)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.02089628390967846
    2. ' calculate' → logprob: -4.5208964347839355
    3. '_' → logprob: -5.2708964347839355
    4. ' space' → logprob: -6.3958964347839355
    5. ' factorial' → logprob: -6.6458964347839355
    6. ' compute' → logprob: -8.145895957946777
    7. ' my' → logprob: -8.770895957946777
    8. ' math' → logprob: -9.020895957946777
    9. ' e' → logprob: -9.270895957946777
    10. ' add' → logprob: -9.395895957946777

Token 8: '_place' (ID: 81501)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.04129549860954285
    2. ' _' → logprob: -4.041295528411865
    3. '_accept' → logprob: -4.791295528411865
    4. '_c' → logprob: -6.041295528411865
    5. ' ' → logprob: -6.041295528411865
    6. '_compute' → logprob: -6.791295528411865
    7. '_continue' → logprob: -7.166295528411865
    8. '_append' → logprob: -7.291295528411865
    9. '_access' → logprob: -7.541295528411865
    10. '_cons' → logprob: -7.541295528411865

Token 9: '_ball' (ID: 138751)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.03257547318935394
    2. ' _' → logprob: -4.532575607299805
    3. '_space' → logprob: -4.657575607299805
    4. ' ' → logprob: -5.782575607299805
    5. '(' → logprob: -6.282575607299805
    6. '_a' → logprob: -6.782575607299805
    7. '_tile' → logprob: -7.032575607299805
    8. '_p' → logprob: -7.532575607299805
    9. '_parent' → logprob: -7.782575607299805
    10. '_s' → logprob: -8.032575607299805

Token 10: 'oon' (ID: 4508)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04796023294329643
    2. '_' → logprob: -3.6729602813720703
    3. '(space' → logprob: -5.54796028137207
    4. '(s' → logprob: -5.67296028137207
    5. ' (' → logprob: -5.79796028137207
    6. 's' → logprob: -5.92296028137207
    7. '_at' → logprob: -6.29796028137207
    8. '_s' → logprob: -6.67296028137207
    9. ')' → logprob: -6.67296028137207
    10. ' ' → logprob: -6.79796028137207

Token 11: '(r' (ID: 4729)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.007378385402262211
    2. '_' → logprob: -6.007378578186035
    3. '(parent' → logprob: -6.757378578186035
    4. ' (' → logprob: -7.257378578186035
    5. '(space' → logprob: -7.382378578186035
    6. '(s' → logprob: -7.382378578186035
    7. '(x' → logprob: -7.632378578186035
    8. 's' → logprob: -8.507378578186035
    9. '(user' → logprob: -9.257378578186035
    10. '_at' → logprob: -9.757378578186035

Token 12: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3290290832519531
    2. 'adius' → logprob: -1.3290290832519531
    3. ',' → logprob: -4.954029083251953
    4. ')' → logprob: -5.079029083251953
    5. ' ):' → logprob: -6.704029083251953
    6. 'ad' → logprob: -8.204029083251953
    7. 'e' → logprob: -8.704029083251953
    8. 'a' → logprob: -8.829029083251953
    9. 'adii' → logprob: -9.079029083251953
    10. '(' → logprob: -9.704029083251953

Token 13: ' w' (ID: 286)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.9582915306091309
    2. ' x' → logprob: -0.9582915306091309
    3. ' h' → logprob: -3.083291530609131
    4. 'c' → logprob: -3.583291530609131
    5. 'h' → logprob: -3.583291530609131
    6. ' R' → logprob: -3.833291530609131
    7. ' c' → logprob: -3.833291530609131
    8. 'R' → logprob: -5.083291530609131
    9. ' d' → logprob: -5.083291530609131
    10. ' w' → logprob: -5.458291530609131

Token 14: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2934858500957489
    2. ',' → logprob: -1.4184858798980713
    3. ')' → logprob: -4.418485641479492
    4. '):
' → logprob: -9.543485641479492
    5. ' ):' → logprob: -10.043485641479492
    6. ')):' → logprob: -10.918485641479492
    7. '),' → logprob: -11.418485641479492
    8. '_,' → logprob: -11.918485641479492
    9. '_' → logprob: -11.918485641479492
    10. ' ' → logprob: -12.168485641479492

Token 15: ' needles' (ID: 94833)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.6721624135971069
    2. ' h' → logprob: -0.7971624135971069
    3. 'x' → logprob: -4.9221625328063965
    4. ' x' → logprob: -4.9221625328063965
    5. ' d' → logprob: -5.1721625328063965
    6. 'd' → logprob: -5.4221625328063965
    7. 'l' → logprob: -5.6721625328063965
    8. ' l' → logprob: -5.6721625328063965
    9. ' n' → logprob: -7.2971625328063965
    10. 'n' → logprob: -7.2971625328063965

Token 16: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00819585844874382
    2. ',' → logprob: -5.133195877075195
    3. ')' → logprob: -6.258195877075195
    4. '):
' → logprob: -8.883195877075195
    5. ' ):' → logprob: -9.258195877075195
    6. 's' → logprob: -10.008195877075195
    7. '):
' → logprob: -11.133195877075195
    8. '):

' → logprob: -12.008195877075195
    9. '_' → logprob: -12.133195877075195
    10. '=' → logprob: -12.258195877075195

Token 17: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.018173474818468094
    2. '):' → logprob: -4.393173694610596
    3. '   ' → logprob: -5.393173694610596
    4. ' :' → logprob: -7.518173694610596
    5. '':' → logprob: -9.268173217773438
    6. '`:' → logprob: -9.393173217773438
    7. ':
' → logprob: -9.518173217773438
    8. '```' → logprob: -9.518173217773438
    9. '):
' → logprob: -10.018173217773438
    10. '():' → logprob: -10.143173217773438

Token 18: ' """
' (ID: 7037)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.17391172051429749
    2. '   ' → logprob: -2.0489118099212646
    3. ' :' → logprob: -4.1739115715026855
    4. '):' → logprob: -5.6739115715026855
    5. ':
' → logprob: -5.7989115715026855
    6. ' ' → logprob: -5.9239115715026855
    7. '    ' → logprob: -6.2989115715026855
    8. ')' → logprob: -7.4239115715026855
    9. ',' → logprob: -7.6739115715026855
    10. '(' → logprob: -8.173912048339844

Token 19: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2287794351577759
    2. ' """
' → logprob: -1.3537794351577759
    3. ' """' → logprob: -1.9787794351577759
    4. '    ' → logprob: -1.9787794351577759
    5. ' ' → logprob: -2.6037793159484863
    6. '"""' → logprob: -4.228779315948486
    7. '#' → logprob: -4.353779315948486
    8. ' #' → logprob: -4.478779315948486
    9. ' )' → logprob: -5.228779315948486
    10. ' if' → logprob: -5.478779315948486

Token 20: ' Vér' (ID: 159169)
  Prédit: ' """'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' """' → logprob: -0.8791902661323547
    2. ' """
' → logprob: -1.12919020652771
    3. '   ' → logprob: -2.37919020652771
    4. '"""' → logprob: -2.87919020652771
    5. ' if' → logprob: -4.129190444946289
    6. '#' → logprob: -4.254190444946289
    7. ' max' → logprob: -4.879190444946289
    8. ' #' → logprob: -5.129190444946289
    9. ' The' → logprob: -5.254190444946289
    10. ')' → logprob: -5.254190444946289

Token 21: 'ifie' (ID: 46409)
  Prédit: 'ifie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifie' → logprob: -0.12705819308757782
    2. 'ifier' → logprob: -2.252058267593384
    3. 'ifi' → logprob: -4.627058029174805
    4. 'if' → logprob: -6.002058029174805
    5. 'ifié' → logprob: -6.752058029174805
    6. 'ifiez' → logprob: -7.502058029174805
    7. 'ification' → logprob: -9.877058029174805
    8. 'ify' → logprob: -10.252058029174805
    9. 'ifies' → logprob: -10.502058029174805
    10. 'ifiée' → logprob: -11.377058029174805

Token 22: ' s' (ID: 265)
  Prédit: ' si'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' si' → logprob: -0.490680992603302
    2. ' if' → logprob: -1.1156809329986572
    3. ' ' → logprob: -2.9906809329986572
    4. ' s' → logprob: -6.115681171417236
    5. ' ' → logprob: -6.115681171417236
    6. ' la' → logprob: -6.615681171417236
    7. 's' → logprob: -6.615681171417236
    8. '   ' → logprob: -7.365681171417236
    9. 'si' → logprob: -7.365681171417236
    10. ' whether' → logprob: -7.615681171417236

Token 23: ''il' (ID: 14683)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.7638334631919861
    2. 'u' → logprob: -1.3888335227966309
    3. ''il' → logprob: -2.013833522796631
    4. ''' → logprob: -2.138833522796631
    5. ' ' → logprob: -4.138833522796631
    6. 'e' → logprob: -5.138833522796631
    7. '   ' → logprob: -5.263833522796631
    8. '’il' → logprob: -6.388833522796631
    9. ' '' → logprob: -6.763833522796631
    10. ''i' → logprob: -6.763833522796631

Token 24: ' est' (ID: 893)
  Prédit: 'est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'est' → logprob: -0.577631413936615
    2. ' est' → logprob: -0.827631413936615
    3. '```' → logprob: -7.45263147354126
    4. ''est' → logprob: -7.95263147354126
    5. 'es' → logprob: -8.702630996704102
    6. ' possible' → logprob: -9.452630996704102
    7. ' ' → logprob: -9.452630996704102
    8. ' y' → logprob: -9.577630996704102
    9. 'f' → logprob: -9.952630996704102
    10. 's' → logprob: -10.077630996704102

Token 25: ' possible' (ID: 4149)
  Prédit: ' possible'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' possible' → logprob: -0.6973915100097656
    2. 'possible' → logprob: -0.6973915100097656
    3. '_possible' → logprob: -5.947391510009766
    4. 'poss' → logprob: -7.197391510009766
    5. 'pos' → logprob: -7.822391510009766
    6. '   ' → logprob: -9.197391510009766
    7. '```' → logprob: -9.197391510009766
    8. ' pos' → logprob: -10.322391510009766
    9. ' poss' → logprob: -10.447391510009766
    10. 'Possible' → logprob: -10.447391510009766

Token 26: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.6893045902252197
    2. ' d' → logprob: -0.8143045902252197
    3. ' ' → logprob: -3.6893045902252197
    4. '<|end|>' → logprob: -4.064304351806641
    5. 'd' → logprob: -5.189304351806641
    6. ' ' → logprob: -5.689304351806641
    7. 'de' → logprob: -6.064304351806641
    8. '    ' → logprob: -7.814304351806641
    9. '```' → logprob: -8.31430435180664
    10. ',' → logprob: -8.93930435180664

Token 27: ' placer' (ID: 55591)
  Prédit: 'placer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'placer' → logprob: -0.0957968533039093
    2. ' placer' → logprob: -2.470796823501587
    3. 'place' → logprob: -6.845797061920166
    4. ' place' → logprob: -7.095797061920166
    5. 'plac' → logprob: -7.345797061920166
    6. ' ' → logprob: -7.470797061920166
    7. '   ' → logprob: -7.783297061920166
    8. 'mettre' → logprob: -8.158296585083008
    9. '```' → logprob: -8.220796585083008
    10. 'installer' → logprob: -8.283296585083008

Token 28: ' une' (ID: 2463)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.014831667765974998
    2. 'un' → logprob: -5.76483154296875
    3. ' une' → logprob: -5.76483154296875
    4. ' le' → logprob: -5.88983154296875
    5. ' des' → logprob: -5.88983154296875
    6. ' les' → logprob: -6.88983154296875
    7. ' au' → logprob: -7.76483154296875
    8. 'le' → logprob: -8.26483154296875
    9. ' ' → logprob: -8.51483154296875
    10. ' a' → logprob: -8.63983154296875

Token 29: ' sph' (ID: 66674)
  Prédit: ' ballon'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ballon' → logprob: -0.1525505930185318
    2. 'ball' → logprob: -2.77755069732666
    3. ' balloon' → logprob: -2.77755069732666
    4. ' ball' → logprob: -4.40255069732666
    5. ' ' → logprob: -6.65255069732666
    6. '```' → logprob: -7.52755069732666
    7. '_ball' → logprob: -8.15255069732666
    8. ' bal' → logprob: -8.46505069732666
    9. ' balle' → logprob: -8.77755069732666
    10. '(ball' → logprob: -8.84005069732666

Token 30: 'ère' (ID: 4346)
  Prédit: 'è'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'è' → logprob: -0.4821133315563202
    2. 'ère' → logprob: -0.9821133613586426
    3. 'èr' → logprob: -5.982113361358643
    4. '`' → logprob: -6.482113361358643
    5. 'é' → logprob: -6.857113361358643
    6. 'à' → logprob: -7.607113361358643
    7. 'ë' → logprob: -8.357112884521484
    8. '�' → logprob: -8.482112884521484
    9. 'érique' → logprob: -8.732112884521484
    10. 'ä' → logprob: -9.107112884521484

Token 31: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.034535963088274
    2. ' ' → logprob: -4.034535884857178
    3. ' d' → logprob: -4.784535884857178
    4. ' dans' → logprob: -6.159535884857178
    5. ' sur' → logprob: -6.784535884857178
    6. 'de' → logprob: -7.034535884857178
    7. '<|end|>' → logprob: -7.034535884857178
    8. ' à' → logprob: -7.409535884857178
    9. ' en' → logprob: -7.909535884857178
    10. ')' → logprob: -8.409536361694336

Token 32: ' rayon' (ID: 80967)
  Prédit: ' rayon'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rayon' → logprob: -0.6467015743255615
    2. ' radius' → logprob: -1.3967015743255615
    3. 'ray' → logprob: -2.6467015743255615
    4. ' r' → logprob: -2.8967015743255615
    5. 'radius' → logprob: -3.0217015743255615
    6. ' ray' → logprob: -4.146701812744141
    7. 'r' → logprob: -4.146701812744141
    8. ' de' → logprob: -4.771701812744141
    9. '```' → logprob: -5.646701812744141
    10. ' un' → logprob: -5.896701812744141

Token 33: ' r' (ID: 428)
  Prédit: ' r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.04707435891032219
    2. 'r' → logprob: -3.172074317932129
    3. ' `' → logprob: -5.922074317932129
    4. ' ' → logprob: -7.172074317932129
    5. ' ' → logprob: -8.922074317932129
    6. 'radius' → logprob: -8.922074317932129
    7. ' '' → logprob: -9.672074317932129
    8. ' radius' → logprob: -9.797074317932129
    9. ' de' → logprob: -10.172074317932129
    10. '`' → logprob: -10.172074317932129

Token 34: ' qui' (ID: 2780)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4613954424858093
    2. ')' → logprob: -2.086395502090454
    3. ' )' → logprob: -2.461395502090454
    4. ' dans' → logprob: -2.586395502090454
    5. '<|end|>' → logprob: -3.961395502090454
    6. '```' → logprob: -4.211395263671875
    7. ' à' → logprob: -4.711395263671875
    8. ' autour' → logprob: -4.836395263671875
    9. ',' → logprob: -4.961395263671875
    10. ' sur' → logprob: -5.211395263671875

Token 35: ' repose' (ID: 135020)
  Prédit: ' passe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' passe' → logprob: -1.7941713333129883
    2. ' soit' → logprob: -1.9191713333129883
    3. ' puisse' → logprob: -2.0441713333129883
    4. 't' → logprob: -2.1691713333129883
    5. ' pass' → logprob: -2.6691713333129883
    6. 'pass' → logprob: -2.9191713333129883
    7. ' ne' → logprob: -3.4191713333129883
    8. ' peut' → logprob: -3.6691713333129883
    9. ' couvre' → logprob: -3.9191713333129883
    10. 's' → logprob: -3.9191713333129883

Token 36: ' sur' (ID: 1512)
  Prédit: ' sur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sur' → logprob: -0.704649806022644
    2. ' ' → logprob: -1.079649806022644
    3. 'sur' → logprob: -1.829649806022644
    4. '_sur' → logprob: -6.079649925231934
    5. 's' → logprob: -6.579649925231934
    6. ' au' → logprob: -6.954649925231934
    7. ' à' → logprob: -8.704649925231934
    8. '<|end|>' → logprob: -9.204649925231934
    9. ' ' → logprob: -9.329649925231934
    10. ' uniquement' → logprob: -9.829649925231934

Token 37: ' le' (ID: 505)
  Prédit: ' au'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' au' → logprob: -1.2138622999191284
    2. ' ' → logprob: -1.5888622999191284
    3. ' la' → logprob: -2.088862419128418
    4. ' les' → logprob: -2.213862419128418
    5. ' une' → logprob: -2.588862419128418
    6. ' l' → logprob: -2.713862419128418
    7. ' ' → logprob: -3.463862419128418
    8. ' deux' → logprob: -4.088862419128418
    9. ' un' → logprob: -4.213862419128418
    10. 'l' → logprob: -4.588862419128418

Token 38: ' sol' (ID: 1887)
  Prédit: ' sol'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sol' → logprob: -0.22281694412231445
    2. ' ' → logprob: -1.8478169441223145
    3. ' même' → logprob: -4.2228169441223145
    4. 'sol' → logprob: -5.4728169441223145
    5. 's' → logprob: -5.8478169441223145
    6. ' plan' → logprob: -5.8478169441223145
    7. ' m' → logprob: -6.6603169441223145
    8. ' t' → logprob: -6.7228169441223145
    9. ' ' → logprob: -6.7853169441223145
    10. ' f' → logprob: -7.0978169441223145

Token 39: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.058968424797058
    2. ' et' → logprob: -1.183968424797058
    3. ' ' → logprob: -1.308968424797058
    4. ' ,' → logprob: -3.8089685440063477
    5. '.' → logprob: -4.558968544006348
    6. ' )' → logprob: -4.683968544006348
    7. ' (' → logprob: -4.808968544006348
    8. ' and' → logprob: -5.433968544006348
    9. ' en' → logprob: -5.433968544006348
    10. 's' → logprob: -5.683968544006348

Token 40: 'z' (ID: 89)
  Prédit: ' )'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' )' → logprob: -0.13923978805541992
    2. ')' → logprob: -2.13923978805542
    3. ' et' → logprob: -5.51423978805542
    4. ' ' → logprob: -6.38923978805542
    5. ' au' → logprob: -6.76423978805542
    6. ',' → logprob: -7.38923978805542
    7. ' la' → logprob: -7.76423978805542
    8. ' and' → logprob: -7.88923978805542
    9. ' ')' → logprob: -7.88923978805542
    10. ' `' → logprob: -8.014240264892578

Token 41: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6610407829284668
    2. ' =' → logprob: -1.4110407829284668
    3. ' >=' → logprob: -2.036040782928467
    4. ' +' → logprob: -3.036040782928467
    5. ')' → logprob: -3.786040782928467
    6. ' ==' → logprob: -4.536040782928467
    7. ' )' → logprob: -4.661040782928467
    8. '+' → logprob: -5.161040782928467
    9. ' <=' → logprob: -5.661040782928467
    10. '>=' → logprob: -6.036040782928467

Token 42: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.09033588320016861
    2. ' ' → logprob: -2.7153358459472656
    3. 'r' → logprob: -4.340335845947266
    4. ' r' → logprob: -4.965335845947266
    5. ' )' → logprob: -9.215335845947266
    6. ')' → logprob: -9.590335845947266
    7. '1' → logprob: -13.527835845947266
    8. '_r' → logprob: -13.590335845947266
    9. '=' → logprob: -13.652835845947266
    10. ' ' → logprob: -13.715335845947266

Token 43: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16170133650302887
    2. ' )' → logprob: -1.9117013216018677
    3. ',' → logprob: -6.661701202392578
    4. ' et' → logprob: -9.536701202392578
    5. '),' → logprob: -10.161701202392578
    6. ' ,' → logprob: -10.786701202392578
    7. ' ' → logprob: -11.161701202392578
    8. ' ),' → logprob: -11.161701202392578
    9. '')' → logprob: -11.911701202392578
    10. ' ' → logprob: -12.161701202392578

Token 44: '   ' (ID: 271)
  Prédit: ' )'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' )' → logprob: -0.748711109161377
    2. ')' → logprob: -0.873711109161377
    3. ',' → logprob: -2.998711109161377
    4. ' et' → logprob: -3.123711109161377
    5. ' ' → logprob: -4.373711109161377
    6. ' ,' → logprob: -6.873711109161377
    7. '   ' → logprob: -8.123710632324219
    8. ' ' → logprob: -8.248710632324219
    9. ' en' → logprob: -8.248710632324219
    10. 'et' → logprob: -8.498710632324219

Token 45: ' sans' (ID: 9828)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7572514414787292
    2. ' et' → logprob: -1.382251501083374
    3. ' )' → logprob: -2.382251501083374
    4. ',' → logprob: -2.382251501083374
    5. ' ' → logprob: -2.882251501083374
    6. ' en' → logprob: -4.757251262664795
    7. 'et' → logprob: -4.757251262664795
    8. '   ' → logprob: -4.882251262664795
    9. ' avec' → logprob: -5.882251262664795
    10. ' dans' → logprob: -6.257251262664795

Token 46: ' toucher' (ID: 127487)
  Prédit: ' intersect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' intersect' → logprob: -0.17968903481960297
    2. ' intersection' → logprob: -2.9296889305114746
    3. ' entrer' → logprob: -3.6796889305114746
    4. ' toucher' → logprob: -3.6796889305114746
    5. ' péné' → logprob: -4.429688930511475
    6. 'inter' → logprob: -4.554688930511475
    7. 'intersection' → logprob: -4.679688930511475
    8. ' inter' → logprob: -4.929688930511475
    9. 'entr' → logprob: -5.804688930511475
    10. ' dépasser' → logprob: -5.929688930511475

Token 47: ' les' (ID: 1341)
  Prédit: ' aucun'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' aucun' → logprob: -0.8161746263504028
    2. ' les' → logprob: -1.0661746263504028
    3. ' aucune' → logprob: -2.8161745071411133
    4. 'les' → logprob: -3.0661745071411133
    5. ' aux' → logprob: -3.3161745071411133
    6. 'auc' → logprob: -3.5661745071411133
    7. ' auc' → logprob: -3.8161745071411133
    8. ' ' → logprob: -5.191174507141113
    9. '```' → logprob: -5.941174507141113
    10. 'aux' → logprob: -5.941174507141113

Token 48: ' par' (ID: 686)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6896716356277466
    2. ' aigu' → logprob: -1.6896716356277466
    3. ' a' → logprob: -2.189671516418457
    4. ' autres' → logprob: -3.064671516418457
    5. 'aut' → logprob: -3.814671516418457
    6. ' points' → logprob: -3.939671516418457
    7. 'c' → logprob: -4.314671516418457
    8. '```' → logprob: -4.439671516418457
    9. 'points' → logprob: -4.564671516418457
    10. ' aig' → logprob: -4.814671516418457

Token 49: 'ois' (ID: 20671)
  Prédit: 'ois'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ois' → logprob: -0.06711985170841217
    2. 'o' → logprob: -3.442119836807251
    3. 'oi' → logprob: -3.442119836807251
    4. '```' → logprob: -7.69212007522583
    5. 'oir' → logprob: -9.192119598388672
    6. 'e' → logprob: -10.317119598388672
    7. '   ' → logprob: -10.817119598388672
    8. 'a' → logprob: -11.004619598388672
    9. 'oit' → logprob: -11.129619598388672
    10. '**' → logprob: -11.254619598388672

Token 50: ' ni' (ID: 2565)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.40927964448928833
    2. '.' → logprob: -1.5342795848846436
    3. ')' → logprob: -3.4092795848846436
    4. '   ' → logprob: -3.5342795848846436
    5. ' ' → logprob: -3.9092795848846436
    6. ':' → logprob: -4.159279823303223
    7. ' ,' → logprob: -5.284279823303223
    8. ' :' → logprob: -5.909279823303223
    9. ' )' → logprob: -6.034279823303223
    10. ' (' → logprob: -6.034279823303223

Token 51: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.4104260206222534
    2. 'les' → logprob: -1.1604260206222534
    3. ' le' → logprob: -4.910426139831543
    4. 'le' → logprob: -5.972926139831543
    5. ' l' → logprob: -6.097926139831543
    6. 'auc' → logprob: -6.410426139831543
    7. 'l' → logprob: -6.722926139831543
    8. ' la' → logprob: -6.910426139831543
    9. ' ' → logprob: -7.160426139831543
    10. ' des' → logprob: -7.160426139831543

Token 52: ' aigu' (ID: 186800)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.7952307462692261
    2. ' aigu' → logprob: -1.045230746269226
    3. ' a' → logprob: -2.9202308654785156
    4. 'pi' → logprob: -3.4202308654785156
    5. ' pi' → logprob: -4.107730865478516
    6. ' ' → logprob: -4.170230865478516
    7. ' aig' → logprob: -4.232730865478516
    8. '```' → logprob: -4.232730865478516
    9. '``' → logprob: -5.420230865478516
    10. ' point' → logprob: -5.795230865478516

Token 53: 'illes' (ID: 16849)
  Prédit: 'illes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'illes' → logprob: -0.4613032042980194
    2. 'es' → logprob: -1.3363032341003418
    3. 'e' → logprob: -3.461303234100342
    4. 'uille' → logprob: -3.711303234100342
    5. 'u' → logprob: -3.961303234100342
    6. 's' → logprob: -4.336303234100342
    7. 'lles' → logprob: -4.961303234100342
    8. 'les' → logprob: -5.711303234100342
    9. 'l' → logprob: -5.836303234100342
    10. 'ues' → logprob: -6.211303234100342

Token 54: '.
' (ID: 558)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8707627058029175
    2. ':' → logprob: -1.6207627058029175
    3. '.' → logprob: -1.8707627058029175
    4. '   ' → logprob: -2.495762825012207
    5. ')' → logprob: -2.620762825012207
    6. '):' → logprob: -3.245762825012207
    7. ' ' → logprob: -4.370762825012207
    8. ' :' → logprob: -4.620762825012207
    9. ' ,' → logprob: -5.995762825012207
    10. '```' → logprob: -6.370762825012207

Token 55: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5999928712844849
    2. ')' → logprob: -1.8499928712844849
    3. '\n' → logprob: -2.5999927520751953
    4. '"""' → logprob: -2.5999927520751953
    5. '```' → logprob: -3.2249927520751953
    6. ' ' → logprob: -3.4749927520751953
    7. ':' → logprob: -4.099992752075195
    8. ',' → logprob: -4.974992752075195
    9. ''' → logprob: -5.224992752075195
    10. ' )' → logprob: -5.224992752075195

Token 56: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011072111316025257
    2. '```' → logprob: -5.261072158813477
    3. '    ' → logprob: -6.886072158813477
    4. ' ' → logprob: -7.011072158813477
    5. '"""' → logprob: -7.011072158813477
    6. ' ' → logprob: -7.011072158813477
    7. ' """' → logprob: -7.511072158813477
    8. 'r' → logprob: -8.636072158813477
    9. '\n' → logprob: -8.886072158813477
    10. ' """
' → logprob: -8.886072158813477

Token 57: ' Arguments' (ID: 63373)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7226254343986511
    2. '   ' → logprob: -1.722625494003296
    3. 'for' → logprob: -1.972625494003296
    4. ' """' → logprob: -3.222625494003296
    5. ' max' → logprob: -3.722625494003296
    6. ' space' → logprob: -3.847625494003296
    7. ' radius' → logprob: -4.347625255584717
    8. 'max' → logprob: -4.347625255584717
    9. '#' → logprob: -4.972625255584717
    10. ' if' → logprob: -5.222625255584717

Token 58: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07341598719358444
    2. ' :' → logprob: -2.823415994644165
    3. ',' → logprob: -5.073415756225586
    4. ')' → logprob: -6.573415756225586
    5. 'r' → logprob: -6.948415756225586
    6. ' r' → logprob: -7.073415756225586
    7. '):' → logprob: -7.323415756225586
    8. '(r' → logprob: -8.323415756225586
    9. ' ' → logprob: -8.823415756225586
    10. '```' → logprob: -8.823415756225586

Token 59: '   ' (ID: 271)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.7753715515136719
    2. ' ' → logprob: -1.4003715515136719
    3. ' r' → logprob: -1.4003715515136719
    4. ')' → logprob: -3.650371551513672
    5. ' )' → logprob: -5.025371551513672
    6. ' 
' → logprob: -5.525371551513672
    7. '   ' → logprob: -5.650371551513672
    8. ''' → logprob: -6.900371551513672
    9. '```' → logprob: -7.025371551513672
    10. '    ' → logprob: -7.400371551513672

Token 60: ' -' (ID: 533)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.5577073693275452
    2. ' r' → logprob: -0.9327073693275452
    3. '   ' → logprob: -4.8077073097229
    4. '```' → logprob: -4.9327073097229
    5. ')' → logprob: -5.1827073097229
    6. ' ' → logprob: -5.5577073097229
    7. ' 
' → logprob: -5.9327073097229
    8. ''' → logprob: -6.1827073097229
    9. 'n' → logprob: -7.1827073097229
    10. ' )' → logprob: -7.5577073097229

Token 61: ' r' (ID: 428)
  Prédit: ' r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.06223330274224281
    2. 'r' → logprob: -2.8122332096099854
    3. ' radius' → logprob: -8.937232971191406
    4. '```' → logprob: -10.937232971191406
    5. ' ' → logprob: -11.062232971191406
    6. ' `' → logprob: -11.187232971191406
    7. ' ' → logprob: -11.437232971191406
    8. '   ' → logprob: -11.687232971191406
    9. 'radius' → logprob: -11.812232971191406
    10. ' def' → logprob: -11.874732971191406

Token 62: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07948087900876999
    2. ':' → logprob: -2.7044808864593506
    3. '):' → logprob: -5.2044806480407715
    4. ')' → logprob: -6.2044806480407715
    5. ' :' → logprob: -7.0794806480407715
    6. ' ,' → logprob: -7.5794806480407715
    7. ' (' → logprob: -8.45448112487793
    8. ' ):' → logprob: -8.82948112487793
    9. ':int' → logprob: -9.95448112487793
    10. ' )' → logprob: -10.32948112487793

Token 63: ' rayon' (ID: 80967)
  Prédit: ' rayon'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rayon' → logprob: -0.5215232968330383
    2. ' float' → logprob: -1.8965232372283936
    3. ' radius' → logprob: -1.8965232372283936
    4. ' ' → logprob: -2.8965232372283936
    5. 'ray' → logprob: -4.021523475646973
    6. ' ray' → logprob: -4.396523475646973
    7. ' le' → logprob: -5.521523475646973
    8. ' la' → logprob: -5.771523475646973
    9. 'Ray' → logprob: -5.896523475646973
    10. 'radius' → logprob: -5.896523475646973

Token 64: ' de' (ID: 334)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6874887943267822
    2. ')' → logprob: -1.9374887943267822
    3. '<|end|>' → logprob: -1.9374887943267822
    4. ' de' → logprob: -2.8124887943267822
    5. ' )' → logprob: -2.8124887943267822
    6. ',' → logprob: -3.1874887943267822
    7. ' (' → logprob: -4.062488555908203
    8. ' ,' → logprob: -4.562488555908203
    9. ' du' → logprob: -4.562488555908203
    10. '<|end|>' → logprob: -6.187488555908203

Token 65: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.009184789843857288
    2. 'la' → logprob: -5.259184837341309
    3. 'l' → logprob: -6.384184837341309
    4. ' l' → logprob: -6.509184837341309
    5. 'r' → logprob: -8.634184837341309
    6. ' ballon' → logprob: -8.759184837341309
    7. 'b' → logprob: -9.134184837341309
    8. ' ' → logprob: -9.259184837341309
    9. ' r' → logprob: -10.384184837341309
    10. ' the' → logprob: -10.509184837341309

Token 66: ' sph' (ID: 66674)
  Prédit: ' sph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sph' → logprob: -0.09294658154249191
    2. 's' → logprob: -3.8429465293884277
    3. ' ' → logprob: -3.9679465293884277
    4. 'b' → logprob: -4.092946529388428
    5. ' boule' → logprob: -4.717946529388428
    6. ' sphere' → logprob: -5.342946529388428
    7. ' ballon' → logprob: -5.592946529388428
    8. ' balloon' → logprob: -5.717946529388428
    9. ' balle' → logprob: -5.717946529388428
    10. 'bou' → logprob: -6.217946529388428

Token 67: 'ère' (ID: 4346)
  Prédit: 'è'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'è' → logprob: -0.6347963809967041
    2. 'ère' → logprob: -0.7597963809967041
    3. 'èr' → logprob: -7.009796142578125
    4. 'é' → logprob: -7.634796142578125
    5. 'ê' → logprob: -8.384796142578125
    6. '�' → logprob: -8.884796142578125
    7. '`' → logprob: -9.384796142578125
    8. 'ë' → logprob: -9.509796142578125
    9. 'ė' → logprob: -10.634796142578125
    10. 'e' → logprob: -11.009796142578125

Token 68: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4762756824493408
    2. ')' → logprob: -1.6012756824493408
    3. '<|end|>' → logprob: -2.476275682449341
    4. ' )' → logprob: -3.226275682449341
    5. ' ,' → logprob: -3.351275682449341
    6. ' ' → logprob: -4.851275444030762
    7. '<|end|>' → logprob: -5.976275444030762
    8. '
' → logprob: -6.351275444030762
    9. ' (' → logprob: -6.726275444030762
    10. ',
' → logprob: -6.976275444030762

Token 69: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7128573656082153
    2. ' ' → logprob: -1.5878573656082153
    3. ',' → logprob: -1.7128573656082153
    4. ' )' → logprob: -2.837857246398926
    5. '   ' → logprob: -3.837857246398926
    6. ' ,' → logprob: -4.087857246398926
    7. ''' → logprob: -4.587857246398926
    8. '```' → logprob: -5.837857246398926
    9. '<|end|>' → logprob: -5.962857246398926
    10. ''s' → logprob: -6.337857246398926

Token 70: ' -' (ID: 533)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.34587740898132324
    2. ')' → logprob: -2.4708774089813232
    3. '   ' → logprob: -2.8458774089813232
    4. ''' → logprob: -3.4708774089813232
    5. ',' → logprob: -3.5958774089813232
    6. '  
' → logprob: -3.8458774089813232
    7. '```' → logprob: -4.220877647399902
    8. ' )' → logprob: -4.470877647399902
    9. ''s' → logprob: -4.720877647399902
    10. ' 
' → logprob: -4.845877647399902

Token 71: ' w' (ID: 286)
  Prédit: ' w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' w' → logprob: -0.5763888359069824
    2. 'w' → logprob: -0.8263888359069824
    3. ' ' → logprob: -9.01388931274414
    4. 'W' → logprob: -10.20138931274414
    5. '   ' → logprob: -10.38888931274414
    6. '```' → logprob: -10.57638931274414
    7. ' t' → logprob: -10.70138931274414
    8. 't' → logprob: -10.88888931274414
    9. ' W' → logprob: -11.13888931274414
    10. 'l' → logprob: -11.26388931274414

Token 72: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5458195209503174
    2. ' :' → logprob: -1.4208195209503174
    3. '):' → logprob: -2.4208195209503174
    4. ' ):' → logprob: -2.7958195209503174
    5. ',' → logprob: -4.045819282531738
    6. ')' → logprob: -5.045819282531738
    7. ' ' → logprob: -5.795819282531738
    8. ' ,' → logprob: -7.170819282531738
    9. ' )' → logprob: -7.545819282531738
    10. ' =' → logprob: -8.295819282531738

Token 73: ' hauteur' (ID: 72987)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.6804912090301514
    2. ' largeur' → logprob: -1.4304912090301514
    3. ' la' → logprob: -1.9304912090301514
    4. ' ' → logprob: -3.0554912090301514
    5. ' float' → logprob: -3.6804912090301514
    6. ' w' → logprob: -4.6804914474487305
    7. 'l' → logprob: -5.0554914474487305
    8. ' le' → logprob: -5.5554914474487305
    9. ' large' → logprob: -5.8054914474487305
    10. ' int' → logprob: -6.0554914474487305

Token 74: ' des' (ID: 731)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4753812253475189
    2. ' )' → logprob: -2.1003811359405518
    3. ' de' → logprob: -2.2253811359405518
    4. ' du' → logprob: -2.3503811359405518
    5. ',' → logprob: -3.6003811359405518
    6. ' ,' → logprob: -5.100381374359131
    7. 'de' → logprob: -5.850381374359131
    8. 'du' → logprob: -6.100381374359131
    9. ' ' → logprob: -6.350381374359131
    10. '=' → logprob: -6.475381374359131

Token 75: ' murs' (ID: 103025)
  Prédit: ' par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.08129020780324936
    2. 'par' → logprob: -3.2062902450561523
    3. ' ' → logprob: -4.831290245056152
    4. 'a' → logprob: -4.956290245056152
    5. ' a' → logprob: -4.956290245056152
    6. ' murs' → logprob: -5.331290245056152
    7. 'p' → logprob: -6.456290245056152
    8. ' pa' → logprob: -6.831290245056152
    9. 'c' → logprob: -6.956290245056152
    10. ' p' → logprob: -7.018790245056152

Token 76: ' de' (ID: 334)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6132778525352478
    2. ',' → logprob: -1.6132779121398926
    3. '   ' → logprob: -1.6132779121398926
    4. '
' → logprob: -3.6132779121398926
    5. '```' → logprob: -4.738277912139893
    6. '):
' → logprob: -5.238277912139893
    7. '\n' → logprob: -5.238277912139893
    8. ' )' → logprob: -5.863277912139893
    9. '):' → logprob: -6.363277912139893
    10. ')
' → logprob: -6.488277912139893

Token 77: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.27983587980270386
    2. ' l' → logprob: -2.0298359394073486
    3. 'la' → logprob: -3.1548359394073486
    4. 'l' → logprob: -3.4048359394073486
    5. ' ' → logprob: -3.4048359394073486
    6. ' w' → logprob: -6.0298357009887695
    7. '1' → logprob: -8.40483570098877
    8. ' the' → logprob: -8.65483570098877
    9. 's' → logprob: -9.27983570098877
    10. 'w' → logprob: -9.52983570098877

Token 78: ' boîte' (ID: 104481)
  Prédit: 'pi'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pi' → logprob: -0.6638821959495544
    2. 'c' → logprob: -1.2888822555541992
    3. 's' → logprob: -3.413882255554199
    4. ' pièce' → logprob: -3.538882255554199
    5. 'bo' → logprob: -3.663882255554199
    6. ' boîte' → logprob: -3.913882255554199
    7. 'cu' → logprob: -4.663882255554199
    8. 'par' → logprob: -4.788882255554199
    9. 'ch' → logprob: -4.788882255554199
    10. 'f' → logprob: -5.038882255554199

Token 79: '
' (ID: 198)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.15693573653697968
    2. '   ' → logprob: -2.781935691833496
    3. ',' → logprob: -3.656935691833496
    4. '
' → logprob: -3.906935691833496
    5. '```' → logprob: -4.156935691833496
    6. ' )' → logprob: -4.906935691833496
    7. '<|end|>' → logprob: -6.031935691833496
    8. ')
' → logprob: -6.031935691833496
    9. ' 
' → logprob: -6.656935691833496
    10. '\n' → logprob: -6.781935691833496

Token 80: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6438074707984924
    2. ')' → logprob: -1.3938074111938477
    3. ',' → logprob: -1.7688074111938477
    4. ' ,' → logprob: -4.268807411193848
    5. ' )' → logprob: -4.518807411193848
    6. '
' → logprob: -4.643807411193848
    7. ' ' → logprob: -5.393807411193848
    8. '```' → logprob: -5.393807411193848
    9. '  ' → logprob: -6.768807411193848
    10. '):
' → logprob: -6.893807411193848

Token 81: ' -' (ID: 533)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2752392888069153
    2. ',' → logprob: -2.1502392292022705
    3. '\n' → logprob: -2.9002392292022705
    4. '
' → logprob: -4.52523946762085
    5. ')' → logprob: -4.52523946762085
    6. '```' → logprob: -4.65023946762085
    7. '\' → logprob: -5.02523946762085
    8. '    
' → logprob: -5.27523946762085
    9. ' ' → logprob: -5.27523946762085
    10. ',
' → logprob: -5.52523946762085

Token 82: ' needles' (ID: 94833)
  Prédit: ' needles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' needles' → logprob: -0.012043577618896961
    2. ' ' → logprob: -6.012043476104736
    3. ' n' → logprob: -6.699543476104736
    4. ' ' → logprob: -6.762043476104736
    5. ' needle' → logprob: -7.074543476104736
    6. '   ' → logprob: -7.074543476104736
    7. 'n' → logprob: -7.512043476104736
    8. 'need' → logprob: -7.824543476104736
    9. '```' → logprob: -7.887043476104736
    10. ' aigu' → logprob: -8.012043952941895

Token 83: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.15529027581214905
    2. ':' → logprob: -2.030290365219116
    3. ',' → logprob: -4.780290126800537
    4. ' :' → logprob: -5.905290126800537
    5. ' ):' → logprob: -6.905290126800537
    6. ' =' → logprob: -9.155290603637695
    7. ')' → logprob: -9.780290603637695
    8. ' ,' → logprob: -9.905290603637695
    9. '   ' → logprob: -10.155290603637695
    10. '=' → logprob: -10.655290603637695

Token 84: ' liste' (ID: 31719)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.9412440657615662
    2. ' ' → logprob: -1.691244125366211
    3. ' list' → logprob: -2.191244125366211
    4. ' needles' → logprob: -2.191244125366211
    5. ' [(' → logprob: -2.566244125366211
    6. '[' → logprob: -2.816244125366211
    7. ' []' → logprob: -3.066244125366211
    8. ' [
' → logprob: -5.191244125366211
    9. '[]' → logprob: -5.316244125366211
    10. '[(' → logprob: -6.316244125366211

Token 85: ' de' (ID: 334)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.3912658989429474
    2. ' of' → logprob: -1.891265869140625
    3. ' de' → logprob: -2.391265869140625
    4. ' d' → logprob: -3.641265869140625
    5. '<|end|>' → logprob: -3.766265869140625
    6. ')' → logprob: -4.016265869140625
    7. '[' → logprob: -5.641265869140625
    8. ' ' → logprob: -6.266265869140625
    9. ',' → logprob: -6.391265869140625
    10. '[]' → logprob: -7.016265869140625

Token 86: ' tuples' (ID: 112464)
  Prédit: ' tuples'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tuples' → logprob: -0.6024429798126221
    2. ' (' → logprob: -0.8524429798126221
    3. '(' → logprob: -3.852442979812622
    4. ' positions' → logprob: -6.977442741394043
    5. '<|end|>' → logprob: -7.352442741394043
    6. ' coordonnées' → logprob: -7.602442741394043
    7. '(t' → logprob: -7.977442741394043
    8. ' points' → logprob: -7.977442741394043
    9. '(points' → logprob: -8.102442741394043
    10. 'positions' → logprob: -8.227442741394043

Token 87: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.0014569011982530355
    2. ' representing' → logprob: -8.501457214355469
    3. '(r' → logprob: -8.751457214355469
    4. '(n' → logprob: -8.751457214355469
    5. '(' → logprob: -9.001457214355469
    6. '(x' → logprob: -9.126457214355469
    7. ' de' → logprob: -9.251457214355469
    8. ')' → logprob: -9.251457214355469
    9. ' représentant' → logprob: -9.251457214355469
    10. '   ' → logprob: -9.626457214355469

Token 88: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.015078173018991947
    2. ' x' → logprob: -4.265078067779541
    3. '(x' → logprob: -7.640078067779541
    4. ' (' → logprob: -8.1400785446167
    5. '(' → logprob: -10.2650785446167
    6. ')' → logprob: -10.5150785446167
    7. ')x' → logprob: -10.6400785446167
    8. ' ' → logprob: -11.5150785446167
    9. 'float' → logprob: -11.6400785446167
    10. 'xi' → logprob: -12.0150785446167

Token 89: '_i' (ID: 10853)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0036587452050298452
    2. ',y' → logprob: -6.503658771514893
    3. 'n' → logprob: -6.753658771514893
    4. '_n' → logprob: -8.128658294677734
    5. 'y' → logprob: -8.753658294677734
    6. '1' → logprob: -8.878658294677734
    7. 'a' → logprob: -9.253658294677734
    8. ' ,' → logprob: -9.628658294677734
    9. 'c' → logprob: -9.878658294677734
    10. '0' → logprob: -10.503658294677734

Token 90: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00038419815246015787
    2. ',y' → logprob: -8.375384330749512
    3. ' ,' → logprob: -8.875384330749512
    4. '<|end|>' → logprob: -12.000384330749512
    5. 'y' → logprob: -13.500384330749512
    6. ')' → logprob: -13.875384330749512
    7. ',
' → logprob: -14.125384330749512
    8. ' ' → logprob: -14.500384330749512
    9. ',n' → logprob: -14.875384330749512
    10. '‌,' → logprob: -15.000384330749512

Token 91: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.03805181756615639
    2. ' y' → logprob: -3.2880518436431885
    3. 'z' → logprob: -12.03805160522461
    4. ' ' → logprob: -13.28805160522461
    5. ',y' → logprob: -13.91305160522461
    6. ',' → logprob: -14.03805160522461
    7. '  ' → logprob: -15.53805160522461
    8. '0' → logprob: -15.53805160522461
    9. '	y' → logprob: -15.91305160522461
    10. ' z' → logprob: -16.53805160522461

Token 92: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.0001544321421533823
    2. 'i' → logprob: -9.250154495239258
    3. ',' → logprob: -9.875154495239258
    4. '_' → logprob: -12.125154495239258
    5. ',i' → logprob: -14.250154495239258
    6. ')' → logprob: -15.000154495239258
    7. ' i' → logprob: -16.250154495239258
    8. '[i' → logprob: -16.625154495239258
    9. ' _' → logprob: -17.125154495239258
    10. '_,' → logprob: -17.250154495239258

Token 93: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00533443596214056
    2. ')' → logprob: -5.255334377288818
    3. ' ,' → logprob: -10.255334854125977
    4. '),' → logprob: -10.630334854125977
    5. ',z' → logprob: -11.255334854125977
    6. 'e' → logprob: -12.255334854125977
    7. 'z' → logprob: -12.505334854125977
    8. ' ' → logprob: -13.255334854125977
    9. ',i' → logprob: -13.380334854125977
    10. 'i' → logprob: -13.505334854125977

Token 94: ' h' (ID: 312)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.014259763062000275
    2. ' z' → logprob: -4.2642598152160645
    3. ' ' → logprob: -10.389259338378906
    4. '0' → logprob: -10.764259338378906
    5. '   ' → logprob: -10.764259338378906
    6. '  ' → logprob: -12.014259338378906
    7. ')' → logprob: -12.639259338378906
    8. 'x' → logprob: -12.764259338378906
    9. '	z' → logprob: -12.889259338378906
    10. '    ' → logprob: -13.826759338378906

Token 95: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.016627896577119827
    2. ')' → logprob: -4.141627788543701
    3. 'a' → logprob: -7.891627788543701
    4. 'i' → logprob: -8.89162826538086
    5. '_a' → logprob: -10.64162826538086
    6. '),' → logprob: -11.01662826538086
    7. ')i' → logprob: -11.76662826538086
    8. ',' → logprob: -12.14162826538086
    9. '_n' → logprob: -12.39162826538086
    10. 't' → logprob: -12.64162826538086

Token 96: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005658994195982814
    2. '),' → logprob: -7.875566005706787
    3. ',' → logprob: -8.875565528869629
    4. ' )' → logprob: -10.625565528869629
    5. ')
' → logprob: -12.375565528869629
    6. '):' → logprob: -12.500565528869629
    7. '):
' → logprob: -13.250565528869629
    8. '):

' → logprob: -13.375565528869629
    9. ' ' → logprob: -13.625565528869629
    10. ')...' → logprob: -13.875565528869629

Token 97: ' pour' (ID: 1930)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7820388674736023
    2. '   ' → logprob: -0.7820388674736023
    3. '):' → logprob: -3.282038927078247
    4. ',' → logprob: -3.782038927078247
    5. ' )' → logprob: -4.907038688659668
    6. '):
' → logprob: -5.282038688659668
    7. '
' → logprob: -5.532038688659668
    8. '),' → logprob: -5.907038688659668
    9. '  ' → logprob: -6.657038688659668
    10. ' ,' → logprob: -7.032038688659668

Token 98: ' chaque' (ID: 21194)
  Prédit: ' chaque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.28165748715400696
    2. ' les' → logprob: -2.4066574573516846
    3. ' each' → logprob: -2.7816574573516846
    4. ' i' → logprob: -3.4066574573516846
    5. 'each' → logprob: -4.156657695770264
    6. ' ' → logprob: -4.406657695770264
    7. ' chacune' → logprob: -4.531657695770264
    8. ' x' → logprob: -4.906657695770264
    9. '  ' → logprob: -5.531657695770264
    10. ' needles' → logprob: -6.156657695770264

Token 99: ' aig' (ID: 61108)
  Prédit: ' aigu'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' aigu' → logprob: -1.1188799142837524
    2. 'a' → logprob: -1.6188799142837524
    3. ' aig' → logprob: -1.8688799142837524
    4. ' a' → logprob: -1.9938799142837524
    5. ' ' → logprob: -2.118879795074463
    6. 'needle' → logprob: -3.743879795074463
    7. ' needle' → logprob: -4.493879795074463
    8. ' point' → logprob: -4.743879795074463
    9. '   ' → logprob: -5.618879795074463
    10. ' )' → logprob: -6.181379795074463

Token 100: 'uille' (ID: 47118)
  Prédit: 'uille'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uille' → logprob: -0.039995670318603516
    2. 'u' → logprob: -3.2899956703186035
    3. 'neau' → logprob: -7.5399956703186035
    4. 'needle' → logprob: -7.7899956703186035
    5. 'ne' → logprob: -8.789995193481445
    6. 'le' → logprob: -8.789995193481445
    7. ' needle' → logprob: -9.039995193481445
    8. 'ue' → logprob: -9.414995193481445
    9. ' u' → logprob: -9.539995193481445
    10. 'nee' → logprob: -9.664995193481445

Token 101: '
    
' (ID: 15698)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6221500039100647
    2. '):' → logprob: -1.24714994430542
    3. '   ' → logprob: -2.74714994430542
    4. ',' → logprob: -2.74714994430542
    5. '):
' → logprob: -3.24714994430542
    6. ' )' → logprob: -6.37214994430542
    7. ' ,' → logprob: -6.62214994430542
    8. '),' → logprob: -6.99714994430542
    9. 's' → logprob: -7.12214994430542
    10. '
' → logprob: -7.24714994430542

Token 102: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9487125277519226
    2. '):' → logprob: -1.0737125873565674
    3. ')' → logprob: -1.9487125873565674
    4. '):
' → logprob: -2.0737125873565674
    5. '
' → logprob: -7.198712348937988
    6. ',' → logprob: -7.323712348937988
    7. ' )' → logprob: -8.198712348937988
    8. ' ):' → logprob: -8.448712348937988
    9. ' ' → logprob: -8.573712348937988
    10. '```' → logprob: -8.698712348937988

Token 103: ' Retour' (ID: 146830)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0378570482134819
    2. '
' → logprob: -3.9128570556640625
    3. '    
' → logprob: -4.7878570556640625
    4. '```' → logprob: -6.7878570556640625
    5. '  
' → logprob: -7.0378570556640625
    6. 'for' → logprob: -7.1628570556640625
    7. ')' → logprob: -7.1628570556640625
    8. ' 
' → logprob: -7.1628570556640625
    9. ' for' → logprob: -7.4128570556640625
    10. '    ' → logprob: -7.5378570556640625

Token 104: ':
' (ID: 734)
  Prédit: 'ne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ne' → logprob: -0.006010683253407478
    2. '   ' → logprob: -5.88101053237915
    3. 'nne' → logprob: -6.75601053237915
    4. 'nera' → logprob: -7.13101053237915
    5. 'n' → logprob: -7.75601053237915
    6. 'na' → logprob: -8.506011009216309
    7. 'ner' → logprob: -8.506011009216309
    8. 'neur' → logprob: -8.631011009216309
    9. '    ' → logprob: -10.381011009216309
    10. 'nez' → logprob: -10.631011009216309

Token 105: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.44823867082595825
    2. '    ' → logprob: -1.5732386112213135
    3. ' True' → logprob: -2.4482386112213135
    4. ' None' → logprob: -3.9482386112213135
    5. ' 
' → logprob: -4.073238849639893
    6. ' bool' → logprob: -5.198238849639893
    7. ' ' → logprob: -5.198238849639893
    8. 'True' → logprob: -5.573238849639893
    9. ' False' → logprob: -5.698238849639893
    10. '    
' → logprob: -5.823238849639893

Token 106: ' -' (ID: 533)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.41944101452827454
    2. ' True' → logprob: -1.4194409847259521
    3. ' bool' → logprob: -2.669440984725952
    4. '    ' → logprob: -4.169441223144531
    5. 'True' → logprob: -5.419441223144531
    6. ' 
' → logprob: -5.669441223144531
    7. '
' → logprob: -5.794441223144531
    8. ' return' → logprob: -7.044441223144531
    9. 'bool' → logprob: -7.044441223144531
    10. '    
' → logprob: -7.419441223144531

Token 107: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.11116199195384979
    2. ' bool' → logprob: -2.986161947250366
    3. 'True' → logprob: -3.111161947250366
    4. 'bool' → logprob: -4.861162185668945
    5. '   ' → logprob: -6.111162185668945
    6. ' boolean' → logprob: -9.736162185668945
    7. ' true' → logprob: -10.611162185668945
    8. ' return' → logprob: -10.611162185668945
    9. ' False' → logprob: -10.986162185668945
    10. '    ' → logprob: -11.486162185668945

Token 108: ' si' (ID: 1784)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.1480408012866974
    2. ' si' → logprob: -2.773040771484375
    3. 'if' → logprob: -3.273040771484375
    4. ',' → logprob: -4.148040771484375
    5. '<|end|>' → logprob: -4.148040771484375
    6. 'si' → logprob: -6.773040771484375
    7. '```' → logprob: -6.773040771484375
    8. ' ' → logprob: -7.148040771484375
    9. ' or' → logprob: -7.398040771484375
    10. 's' → logprob: -7.523040771484375

Token 109: ' placement' (ID: 29002)
  Prédit: ' il'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' il' → logprob: -0.9426213502883911
    2. ' on' → logprob: -1.4426213502883911
    3. ' la' → logprob: -1.4426213502883911
    4. ' une' → logprob: -2.3176212310791016
    5. 'une' → logprob: -4.317621231079102
    6. 'on' → logprob: -4.442621231079102
    7. ' possible' → logprob: -5.692621231079102
    8. 'il' → logprob: -5.942621231079102
    9. 'la' → logprob: -6.067621231079102
    10. ' le' → logprob: -6.567621231079102

Token 110: ' possible' (ID: 4149)
  Prédit: ' possible'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' possible' → logprob: -0.05636361613869667
    2. '_possible' → logprob: -3.806363582611084
    3. 'possible' → logprob: -3.931363582611084
    4. ' est' → logprob: -4.431363582611084
    5. ' feasible' → logprob: -8.806364059448242
    6. '   ' → logprob: -8.806364059448242
    7. ' is' → logprob: -9.056364059448242
    8. ',' → logprob: -9.056364059448242
    9. ' ' → logprob: -9.056364059448242
    10. ' correct' → logprob: -10.056364059448242

Token 111: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005982831586152315
    2. '   ' → logprob: -5.255982875823975
    3. ',
' → logprob: -7.505982875823975
    4. '```' → logprob: -9.005982398986816
    5. ' ,' → logprob: -10.380982398986816
    6. '<|end|>' → logprob: -10.630982398986816
    7. '
' → logprob: -12.630982398986816
    8. 'def' → logprob: -12.880982398986816
    9. ')' → logprob: -13.130982398986816
    10. '    ' → logprob: -13.380982398986816

Token 112: ' False' (ID: 7983)
  Prédit: ' False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' False' → logprob: -0.049051590263843536
    2. 'False' → logprob: -3.049051523208618
    3. '   ' → logprob: -8.174051284790039
    4. ' sinon' → logprob: -8.674051284790039
    5. '    ' → logprob: -12.924051284790039
    6. '  ' → logprob: -13.299051284790039
    7. ' else' → logprob: -13.549051284790039
    8. ' ' → logprob: -13.799051284790039
    9. ' autrement' → logprob: -13.799051284790039
    10. ' True' → logprob: -14.049051284790039

Token 113: ' sinon' (ID: 52915)
  Prédit: ' sinon'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sinon' → logprob: -0.035579945892095566
    2. ' autrement' → logprob: -3.6605799198150635
    3. ' otherwise' → logprob: -4.785580158233643
    4. 'otherwise' → logprob: -8.535579681396484
    5. '   ' → logprob: -8.660579681396484
    6. 'sin' → logprob: -9.035579681396484
    7. '```' → logprob: -9.160579681396484
    8. ',' → logprob: -9.785579681396484
    9. ' si' → logprob: -9.910579681396484
    10. '<|end|>' → logprob: -10.410579681396484

Token 114: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005670187063515186
    2. '
' → logprob: -5.630670070648193
    3. '):
' → logprob: -7.380670070648193
    4. ')' → logprob: -7.630670070648193
    5. '"""
' → logprob: -8.255670547485352
    6. '"""' → logprob: -8.380670547485352
    7. '):' → logprob: -8.755670547485352
    8. '```' → logprob: -8.755670547485352
    9. '    
' → logprob: -9.755670547485352
    10. ':' → logprob: -10.380670547485352

Token 115: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0036460417322814465
    2. '
' → logprob: -6.253645896911621
    3. '    
' → logprob: -7.003645896911621
    4. ')' → logprob: -8.128645896911621
    5. '"""' → logprob: -8.253645896911621
    6. '"""
' → logprob: -9.378645896911621
    7. '```' → logprob: -9.628645896911621
    8. '\n' → logprob: -9.753645896911621
    9. ')
' → logprob: -11.503645896911621
    10. '  
' → logprob: -12.128645896911621

Token 116: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.019272904843091965
    2. '
' → logprob: -5.144272804260254
    3. ')' → logprob: -5.769272804260254
    4. '```' → logprob: -5.894272804260254
    5. '):
' → logprob: -6.019272804260254
    6. '):' → logprob: -6.269272804260254
    7. ')
' → logprob: -7.144272804260254
    8. '    
' → logprob: -7.644272804260254
    9. '"""' → logprob: -7.644272804260254
    10. ':' → logprob: -7.769272804260254

Token 117: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002626669593155384
    2. '
' → logprob: -6.752626895904541
    3. '    
' → logprob: -7.377626895904541
    4. ' 
' → logprob: -8.627626419067383
    5. '    ' → logprob: -8.877626419067383
    6. ' indentation' → logprob: -9.252626419067383
    7. 'indent' → logprob: -9.502626419067383
    8. ':' → logprob: -9.752626419067383
    9. ' indent' → logprob: -10.002626419067383
    10. ')' → logprob: -10.252626419067383

Token 118: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.4830637276172638
    2. 'if' → logprob: -1.8580636978149414
    3. 'for' → logprob: -2.3580636978149414
    4. 'epsilon' → logprob: -3.6080636978149414
    5. '   ' → logprob: -3.7330636978149414
    6. 'eps' → logprob: -4.108063697814941
    7. 'def' → logprob: -4.108063697814941
    8. 'import' → logprob: -4.358063697814941
    9. 'min' → logprob: -4.483063697814941
    10. 'n' → logprob: -4.983063697814941

Token 119: ' Si' (ID: 7832)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.9370697736740112
    2. 'import' → logprob: -1.5620697736740112
    3. 'for' → logprob: -1.6870697736740112
    4. ' if' → logprob: -2.937069892883301
    5. '#' → logprob: -3.437069892883301
    6. 'min' → logprob: -3.687069892883301
    7. 'max' → logprob: -3.812069892883301
    8. ' for' → logprob: -4.312069892883301
    9. 'z' → logprob: -4.562069892883301
    10. 'distance' → logprob: -4.562069892883301

Token 120: ' le' (ID: 505)
  Prédit: ' r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.046322572976350784
    2. 'r' → logprob: -3.1713225841522217
    3. ' ' → logprob: -5.921322345733643
    4. '2' → logprob: -7.921322345733643
    5. ' w' → logprob: -8.7963228225708
    6. 'w' → logprob: -9.7963228225708
    7. '   ' → logprob: -11.1713228225708
    8. ' (' → logprob: -12.0463228225708
    9. '

' → logprob: -12.2338228225708
    10. ' ' → logprob: -12.2963228225708

Token 121: ' ballon' (ID: 135405)
  Prédit: 'ray'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ray' → logprob: -0.4622136950492859
    2. 'r' → logprob: -1.0872137546539307
    3. 'radius' → logprob: -4.337213516235352
    4. ' rayon' → logprob: -4.837213516235352
    5. 'ball' → logprob: -5.087213516235352
    6. 'diam' → logprob: -7.087213516235352
    7. 'mur' → logprob: -7.462213516235352
    8. '```' → logprob: -7.462213516235352
    9. 'sphere' → logprob: -8.212213516235352
    10. '2' → logprob: -8.337213516235352

Token 122: ' a' (ID: 261)
  Prédit: 'est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'est' → logprob: -1.2774466276168823
    2. 'r' → logprob: -1.4024466276168823
    3. 'ray' → logprob: -1.7774466276168823
    4. ' est' → logprob: -2.402446746826172
    5. 'radius' → logprob: -3.027446746826172
    6. '.' → logprob: -3.402446746826172
    7. ' ne' → logprob: -3.777446746826172
    8. ' r' → logprob: -4.277446746826172
    9. ' peut' → logprob: -4.527446746826172
    10. '=' → logprob: -4.652446746826172

Token 123: ' un' (ID: 537)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.38988226652145386
    2. ' r' → logprob: -1.7648823261260986
    3. 't' → logprob: -2.8898823261260986
    4. ' ' → logprob: -3.8898823261260986
    5. ' un' → logprob: -4.3898820877075195
    6. '   ' → logprob: -4.6398820877075195
    7. 'ur' → logprob: -5.2648820877075195
    8. ')' → logprob: -5.5148820877075195
    9. ' été' → logprob: -5.5148820877075195
    10. ' radius' → logprob: -5.6398820877075195

Token 124: ' rayon' (ID: 80967)
  Prédit: 'ray'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ray' → logprob: -0.11507152765989304
    2. 'diam' → logprob: -3.1150715351104736
    3. 'r' → logprob: -3.6150715351104736
    4. 'radius' → logprob: -3.7400715351104736
    5. '
' → logprob: -5.3650712966918945
    6. '```' → logprob: -5.4900712966918945
    7. '   ' → logprob: -7.1150712966918945
    8. ' rayon' → logprob: -7.3650712966918945
    9. ' diamètre' → logprob: -7.9900712966918945
    10. '2' → logprob: -7.9900712966918945

Token 125: ' supérieur' (ID: 98491)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -1.6463958024978638
    2. ' trop' → logprob: -2.146395683288574
    3. ' <=' → logprob: -2.396395683288574
    4. '==' → logprob: -2.396395683288574
    5. ' supérieur' → logprob: -2.396395683288574
    6. ' plus' → logprob: -2.646395683288574
    7. ' >' → logprob: -2.646395683288574
    8. 'r' → logprob: -2.771395683288574
    9. '<=' → logprob: -3.021395683288574
    10. ' >=' → logprob: -3.521395683288574

Token 126: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.35298192501068115
    2. ' ou' → logprob: -1.7279819250106812
    3. 'à' → logprob: -2.7279820442199707
    4. '   ' → logprob: -4.227982044219971
    5. 'ou' → logprob: -4.352982044219971
    6. 'au' → logprob: -4.477982044219971
    7. ' ' → logprob: -5.352982044219971
    8. ' au' → logprob: -6.102982044219971
    9. ' strict' → logprob: -6.352982044219971
    10. '=' → logprob: -6.477982044219971

Token 127: ' la' (ID: 557)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.014329214580357075
    2. ' w' → logprob: -4.264329433441162
    3. ' la' → logprob: -9.389328956604004
    4. 'la' → logprob: -10.139328956604004
    5. '0' → logprob: -11.139328956604004
    6. 'r' → logprob: -11.889328956604004
    7. '(w' → logprob: -12.014328956604004
    8. ' ' → logprob: -12.389328956604004
    9. 'l' → logprob: -12.639328956604004
    10. '	w' → logprob: -13.639328956604004

Token 128: ' hauteur' (ID: 72987)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'w' → logprob: -7.481510692741722e-05
    2. ' w' → logprob: -9.87507438659668
    3. '(w' → logprob: -11.50007438659668
    4. 'r' → logprob: -12.25007438659668
    5. '0' → logprob: -12.62507438659668
    6. '```' → logprob: -14.25007438659668
    7. 'wall' → logprob: -14.37507438659668
    8. 'mo' → logprob: -14.37507438659668
    9. 'half' → logprob: -14.37507438659668
    10. '	w' → logprob: -14.75007438659668

Token 129: ' des' (ID: 731)
  Prédit: ' du'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' du' → logprob: -0.24030548334121704
    2. '   ' → logprob: -2.1153054237365723
    3. ' de' → logprob: -2.8653054237365723
    4. 'du' → logprob: -3.7403054237365723
    5. 'r' → logprob: -5.740305423736572
    6. 'de' → logprob: -6.365305423736572
    7. ' ' → logprob: -6.490305423736572
    8. ' ou' → logprob: -6.615305423736572
    9. ' r' → logprob: -6.990305423736572
    10. ' des' → logprob: -7.865305423736572

Token 130: ' murs' (ID: 103025)
  Prédit: ' murs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' murs' → logprob: -0.014306765049695969
    2. 'm' → logprob: -4.514306545257568
    3. ' walls' → logprob: -5.889306545257568
    4. ' m' → logprob: -9.014307022094727
    5. 'mur' → logprob: -9.514307022094727
    6. ' ' → logprob: -9.764307022094727
    7. 'w' → logprob: -9.764307022094727
    8. ' w' → logprob: -10.389307022094727
    9. 'walls' → logprob: -10.389307022094727
    10. ' par' → logprob: -10.389307022094727

Token 131: ',
' (ID: 412)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007134470157325268
    2. ':' → logprob: -5.382134437561035
    3. ',' → logprob: -6.507134437561035
    4. ' if' → logprob: -7.382134437561035
    5. ' or' → logprob: -9.007134437561035
    6. ' >=' → logprob: -9.132134437561035
    7. ' and' → logprob: -9.757134437561035
    8. 'if' → logprob: -10.507134437561035
    9. ' et' → logprob: -11.132134437561035
    10. '  ' → logprob: -11.882134437561035

Token 132: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.031058037653565407
    2. ' return' → logprob: -3.5310580730438232
    3. 'return' → logprob: -6.906057834625244
    4. '    ' → logprob: -8.406058311462402
    5. '	return' → logprob: -11.156058311462402
    6. ' retourner' → logprob: -11.531058311462402
    7. '    
' → logprob: -11.781058311462402
    8. '  ' → logprob: -11.906058311462402
    9. '       ' → logprob: -11.906058311462402
    10. '   ' → logprob: -11.906058311462402

Token 133: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4051397442817688
    2. ' return' → logprob: -1.280139684677124
    3. 'return' → logprob: -2.905139684677124
    4. '	return' → logprob: -9.155139923095703
    5. ' retourner' → logprob: -9.780139923095703
    6. '   ' → logprob: -10.030139923095703
    7. ' ' → logprob: -10.280139923095703
    8. '   ' → logprob: -10.530139923095703
    9. '    ' → logprob: -10.655139923095703
    10. ' retourne' → logprob: -10.905139923095703

Token 134: ' ou' (ID: 2031)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.592880368232727
    2. ' return' → logprob: -0.842880368232727
    3. '   ' → logprob: -4.0928802490234375
    4. '	return' → logprob: -10.717880249023438
    5. ' retourner' → logprob: -10.842880249023438
    6. ' ' → logprob: -10.967880249023438
    7. ' retour' → logprob: -11.467880249023438
    8. '#' → logprob: -11.592880249023438
    9. '   ' → logprob: -11.967880249023438
    10. 'ret' → logprob: -11.967880249023438

Token 135: ' s' (ID: 265)
  Prédit: ' r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.05349966138601303
    2. 'r' → logprob: -3.178499698638916
    3. '   ' → logprob: -5.303499698638916
    4. ' if' → logprob: -5.928499698638916
    5. ' si' → logprob: -6.928499698638916
    6. ' return' → logprob: -7.178499698638916
    7. ' ' → logprob: -8.553499221801758
    8. 'if' → logprob: -8.803499221801758
    9. '  ' → logprob: -9.053499221801758
    10. 'return' → logprob: -9.428499221801758

Token 136: ''il' (ID: 14683)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.7184029221534729
    2. '   ' → logprob: -1.3434028625488281
    3. ''il' → logprob: -2.093402862548828
    4. 'i' → logprob: -2.968402862548828
    5. 'ur' → logprob: -2.968402862548828
    6. ' r' → logprob: -4.468402862548828
    7. 'on' → logprob: -5.718402862548828
    8. 'uper' → logprob: -6.468402862548828
    9. 'if' → logprob: -6.968402862548828
    10. 'u' → logprob: -7.218402862548828

Token 137: ' va' (ID: 3423)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.9003869891166687
    2. ' r' → logprob: -1.5253870487213135
    3. 'est' → logprob: -2.0253870487213135
    4. ' est' → logprob: -2.6503870487213135
    5. ' dépasse' → logprob: -2.7753870487213135
    6. ' y' → logprob: -3.0253870487213135
    7. ' n' → logprob: -4.025386810302734
    8. 'n' → logprob: -5.150386810302734
    9. '>' → logprob: -5.150386810302734
    10. ' place' → logprob: -5.400386810302734

Token 138: ' dé' (ID: 2393)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.6596842408180237
    2. ' dépasser' → logprob: -1.784684181213379
    3. ' toucher' → logprob: -2.284684181213379
    4. 'dé' → logprob: -2.534684181213379
    5. 'touch' → logprob: -3.909684181213379
    6. 'dep' → logprob: -3.909684181213379
    7. ' dé' → logprob: -4.409684181213379
    8. ' au' → logprob: -4.909684181213379
    9. '```' → logprob: -4.909684181213379
    10. 'au' → logprob: -5.159684181213379

Token 139: 'border' (ID: 18709)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pass' → logprob: -0.35581985116004944
    2. 'border' → logprob: -1.230819821357727
    3. 'pas' → logprob: -5.4808197021484375
    4. 'p' → logprob: -6.6058197021484375
    5. 'placer' → logprob: -7.2308197021484375
    6. '
' → logprob: -7.9808197021484375
    7. 'bord' → logprob: -8.605819702148438
    8. ' passer' → logprob: -8.730819702148438
    9. 'bor' → logprob: -9.230819702148438
    10. 'b' → logprob: -9.605819702148438

Token 140: ' des' (ID: 731)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.4112124741077423
    2. ' du' → logprob: -1.66121244430542
    3. ',' → logprob: -3.03621244430542
    4. ' sur' → logprob: -3.41121244430542
    5. ' ,' → logprob: -3.66121244430542
    6. ' des' → logprob: -4.66121244430542
    7. ' )' → logprob: -5.53621244430542
    8. 'de' → logprob: -5.66121244430542
    9. 'sur' → logprob: -5.66121244430542
    10. 'du' → logprob: -5.78621244430542

Token 141: ' murs' (ID: 103025)
  Prédit: ' murs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' murs' → logprob: -0.11412331461906433
    2. ' b' → logprob: -2.9891233444213867
    3. ' par' → logprob: -3.8641233444213867
    4. 'm' → logprob: -4.239123344421387
    5. ' côtés' → logprob: -4.614123344421387
    6. ' walls' → logprob: -5.239123344421387
    7. 'b' → logprob: -5.989123344421387
    8. ' limites' → logprob: -6.489123344421387
    9. ' ' → logprob: -7.614123344421387
    10. ' bo' → logprob: -7.989123344421387

Token 142: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4160684049129486
    2. ' or' → logprob: -1.541068434715271
    3. '   ' → logprob: -3.0410683155059814
    4. ':' → logprob: -3.2910683155059814
    5. ' ou' → logprob: -3.7910683155059814
    6. ' ,' → logprob: -4.7910685539245605
    7. ' de' → logprob: -5.4160685539245605
    8. ' return' → logprob: -6.6660685539245605
    9. ':return' → logprob: -6.7910685539245605
    10. ' (' → logprob: -7.2910685539245605

Token 143: 'car' (ID: 6830)
  Prédit: ' r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.8636276125907898
    2. 'r' → logprob: -1.1136276721954346
    3. ' return' → logprob: -2.1136276721954346
    4. 'return' → logprob: -2.8636276721954346
    5. '   ' → logprob: -3.4886276721954346
    6. ' if' → logprob: -4.4886274337768555
    7. '2' → logprob: -4.4886274337768555
    8. ')' → logprob: -4.8636274337768555
    9. ' or' → logprob: -5.6136274337768555
    10. ' w' → logprob: -6.7386274337768555

Token 144: ' il' (ID: 1793)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.10134482383728027
    2. ' r' → logprob: -2.6013448238372803
    3. '2' → logprob: -3.8513448238372803
    4. ' ' → logprob: -7.101345062255859
    5. '   ' → logprob: -10.35134506225586
    6. 'x' → logprob: -11.47634506225586
    7. ' le' → logprob: -11.60134506225586
    8. ' ' → logprob: -11.72634506225586
    9. 'le' → logprob: -11.85134506225586
    10. '  ' → logprob: -12.22634506225586

Token 145: ' doit' (ID: 21822)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.15822435915470123
    2. ' +' → logprob: -3.40822434425354
    3. ' r' → logprob: -3.78322434425354
    4. '+' → logprob: -3.78322434425354
    5. ' >' → logprob: -3.90822434425354
    6. '>' → logprob: -4.158224582672119
    7. '+r' → logprob: -4.908224582672119
    8. ' dépasse' → logprob: -5.283224582672119
    9. 'radius' → logprob: -5.533224582672119
    10. ' plus' → logprob: -6.283224582672119

Token 146: ' être' (ID: 9104)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -1.2262629270553589
    2. 're' → logprob: -1.8512629270553589
    3. 'être' → logprob: -1.8512629270553589
    4. 'se' → logprob: -2.1012630462646484
    5. ' être' → logprob: -2.7262630462646484
    6. 'tenir' → logprob: -3.4762630462646484
    7. ' rester' → logprob: -4.101263046264648
    8. ' se' → logprob: -4.351263046264648
    9. 'etre' → logprob: -4.601263046264648
    10. 'touch' → logprob: -4.726263046264648

Token 147: ' placé' (ID: 147030)
  Prédit: 'posé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'posé' → logprob: -0.9443468451499939
    2. 'ent' → logprob: -1.8193469047546387
    3. 'pos' → logprob: -2.0693469047546387
    4. ' placé' → logprob: -2.1943469047546387
    5. 'plac' → logprob: -3.0693469047546387
    6. ' posé' → logprob: -3.0693469047546387
    7. 'à' → logprob: -3.5693469047546387
    8. 'r' → logprob: -3.8193469047546387
    9. 'conten' → logprob: -4.194346904754639
    10. 'au' → logprob: -4.444346904754639

Token 148: ' sur' (ID: 1512)
  Prédit: ' sur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sur' → logprob: -1.3456417322158813
    2. ' au' → logprob: -1.7206417322158813
    3. 'dans' → logprob: -1.8456417322158813
    4. ' à' → logprob: -2.095641613006592
    5. 'sur' → logprob: -2.345641613006592
    6. ' dans' → logprob: -2.470641613006592
    7. ' entre' → logprob: -2.970641613006592
    8. 'à' → logprob: -4.345641613006592
    9. 'au' → logprob: -4.595641613006592
    10. ' ' → logprob: -5.345641613006592

Token 149: ' le' (ID: 505)
  Prédit: ' le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.6741926074028015
    2. 'le' → logprob: -0.9241926074028015
    3. 'les' → logprob: -3.6741926670074463
    4. '0' → logprob: -3.7991926670074463
    5. ' les' → logprob: -3.7991926670074463
    6. ' la' → logprob: -4.549192428588867
    7. ' ' → logprob: -5.549192428588867
    8. 'la' → logprob: -5.549192428588867
    9. ' une' → logprob: -6.924192428588867
    10. 'l' → logprob: -7.799192428588867

Token 150: ' sol' (ID: 1887)
  Prédit: 'sol'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sol' → logprob: -0.5251187086105347
    2. ' sol' → logprob: -0.9001187086105347
    3. 'z' → logprob: -7.025118827819824
    4. '```' → logprob: -8.275118827819824
    5. '0' → logprob: -8.400118827819824
    6. 'plan' → logprob: -8.900118827819824
    7. 'floor' → logprob: -9.025118827819824
    8. ' z' → logprob: -9.650118827819824
    9. ' sols' → logprob: -9.775118827819824
    10. ' ' → logprob: -10.025118827819824

Token 151: ',
' (ID: 412)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.5480074882507324
    2. ',' → logprob: -1.1730074882507324
    3. ' ),' → logprob: -2.5480074882507324
    4. ')' → logprob: -4.423007488250732
    5. '),
' → logprob: -5.423007488250732
    6. ' ,' → logprob: -5.548007488250732
    7. '   ' → logprob: -5.798007488250732
    8. ' )' → logprob: -6.173007488250732
    9. ' ),
' → logprob: -6.673007488250732
    10. ',
' → logprob: -6.673007488250732

Token 152: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21726757287979126
    2. ' il' → logprob: -2.7172675132751465
    3. '#' → logprob: -3.0922675132751465
    4. ' return' → logprob: -3.7172675132751465
    5. ')' → logprob: -4.2172675132751465
    6. 'return' → logprob: -4.9672675132751465
    7. '    ' → logprob: -5.4672675132751465
    8. ' #' → logprob: -5.4672675132751465
    9. ' ou' → logprob: -5.5922675132751465
    10. ' c' → logprob: -5.8422675132751465

Token 153: ' #' (ID: 1069)
  Prédit: ' il'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' il' → logprob: -0.4742615520954132
    2. '   ' → logprob: -1.7242615222930908
    3. ')' → logprob: -2.349261522293091
    4. ' la' → logprob: -3.974261522293091
    5. ' )' → logprob: -4.47426176071167
    6. ' le' → logprob: -4.47426176071167
    7. 'le' → logprob: -4.59926176071167
    8. '#' (adapté à ' #') → logprob: -4.72426176071167
    9. ' return' → logprob: -5.22426176071167
    10. ' c' → logprob: -5.47426176071167

Token 154: ' son' (ID: 2391)
  Prédit: ' il'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' il' → logprob: -0.6174854636192322
    2. ' et' → logprob: -2.742485523223877
    3. 'il' → logprob: -3.117485523223877
    4. '#' → logprob: -3.117485523223877
    5. ' ou' → logprob: -3.242485523223877
    6. 'et' → logprob: -3.367485523223877
    7. ' la' → logprob: -3.617485523223877
    8. ' x' → logprob: -3.742485523223877
    9. '   ' → logprob: -3.742485523223877
    10. 'x' → logprob: -3.992485523223877

Token 155: ' centre' (ID: 13268)
  Prédit: 'centre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'centre' → logprob: -0.5655264258384705
    2. ' centre' → logprob: -1.4405264854431152
    3. 'diam' → logprob: -2.5655264854431152
    4. 'center' → logprob: -2.5655264854431152
    5. ' center' → logprob: -4.190526485443115
    6. ' diamètre' → logprob: -4.815526485443115
    7. 'x' → logprob: -5.190526485443115
    8. ' rayon' → logprob: -5.440526485443115
    9. ' x' → logprob: -6.440526485443115
    10. 'cent' → logprob: -6.440526485443115

Token 156: ' est' (ID: 893)
  Prédit: ' doit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' doit' → logprob: -0.500184178352356
    2. '[' → logprob: -1.750184178352356
    3. ' z' → logprob: -2.6251840591430664
    4. ' devra' → logprob: -2.8751840591430664
    5. 'z' → logprob: -3.2501840591430664
    6. ' ' → logprob: -4.375184059143066
    7. ' must' → logprob: -4.750184059143066
    8. ' a' → logprob: -5.500184059143066
    9. ' =' → logprob: -5.625184059143066
    10. ' est' → logprob: -5.750184059143066

Token 157: ' donc' (ID: 14206)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.1490393579006195
    2. 'à' → logprob: -2.7740392684936523
    3. ' au' → logprob: -3.1490392684936523
    4. 'r' → logprob: -5.024039268493652
    5. ' situé' → logprob: -5.024039268493652
    6. ' forcément' → logprob: -5.024039268493652
    7. 'au' → logprob: -5.649039268493652
    8. ' placé' → logprob: -5.899039268493652
    9. ' ' → logprob: -6.149039268493652
    10. 'z' → logprob: -7.149039268493652

Token 158: ' en' (ID: 469)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.49160847067832947
    2. ' au' → logprob: -1.8666085004806519
    3. 'à' → logprob: -1.8666085004806519
    4. 'au' → logprob: -3.7416083812713623
    5. 'r' → logprob: -4.241608619689941
    6. ' situé' → logprob: -4.241608619689941
    7. ' forcément' → logprob: -4.991608619689941
    8. ' placé' → logprob: -4.991608619689941
    9. 'z' → logprob: -6.116608619689941
    10. 'situ' → logprob: -6.241608619689941

Token 159: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.7889348864555359
    2. 'z' → logprob: -1.7889349460601807
    3. '(' → logprob: -2.0389349460601807
    4. ' z' → logprob: -2.0389349460601807
    5. 'r' → logprob: -2.9139349460601807
    6. '(r' → logprob: -3.2889349460601807
    7. '(z' → logprob: -4.038934707641602
    8. ' r' → logprob: -5.538934707641602
    9. '(x' → logprob: -6.663934707641602
    10. ' ' → logprob: -7.038934707641602

Token 160: 'cx' (ID: 47207)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.04306336119771004
    2. ' r' → logprob: -3.1680634021759033
    3. '0' → logprob: -10.793063163757324
    4. ' ' → logprob: -10.918063163757324
    5. 'x' → logprob: -11.418063163757324
    6. '(r' → logprob: -11.418063163757324
    7. ' x' → logprob: -14.418063163757324
    8. ' (' → logprob: -14.668063163757324
    9. '	r' → logprob: -14.793063163757324
    10. ',' → logprob: -15.043063163757324

Token 161: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0595196932554245
    2. 'x' → logprob: -3.6845197677612305
    3. 'r' → logprob: -4.8095197677612305
    4. ' ,' → logprob: -5.0595197677612305
    5. ' +' → logprob: -5.3095197677612305
    6. '=' → logprob: -5.5595197677612305
    7. ')' → logprob: -6.0595197677612305
    8. ' =' → logprob: -6.1845197677612305
    9. ',r' → logprob: -6.4345197677612305
    10. '+' → logprob: -7.0595197677612305

Token 162: ' cy' (ID: 5504)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.14893563091754913
    2. ' r' → logprob: -2.023935556411743
    3. 'cy' → logprob: -5.773935794830322
    4. ' cy' → logprob: -7.023935794830322
    5. ',' → logprob: -7.523935794830322
    6. '

' → logprob: -8.273935317993164
    7. ' ' → logprob: -8.398935317993164
    8. 'cz' → logprob: -8.648935317993164
    9. 'y' → logprob: -8.773935317993164
    10. '0' → logprob: -9.023935317993164

Token 163: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.029238441959023476
    2. ' +' → logprob: -4.404238224029541
    3. '+' → logprob: -4.654238224029541
    4. ')' → logprob: -5.279238224029541
    5. ' ,' → logprob: -7.029238224029541
    6. '+r' → logprob: -7.779238224029541
    7. '),' → logprob: -8.1542387008667
    8. 'r' → logprob: -8.9042387008667
    9. ',r' → logprob: -9.9042387008667
    10. '=' → logprob: -10.1542387008667

Token 164: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.055032361298799515
    2. ' r' → logprob: -2.930032253265381
    3. ')' → logprob: -9.555032730102539
    4. ' ' → logprob: -10.680032730102539
    5. '   ' → logprob: -11.055032730102539
    6. ' ' → logprob: -11.555032730102539
    7. '
' → logprob: -12.492532730102539
    8. '  ' → logprob: -12.555032730102539
    9. ',' → logprob: -12.617532730102539
    10. '    ' → logprob: -12.992532730102539

Token 165: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0036823786795139313
    2. '),' → logprob: -6.503682613372803
    3. '))' → logprob: -6.628682613372803
    4. ' )' → logprob: -7.878682613372803
    5. ')
' → logprob: -8.378682136535645
    6. '+' → logprob: -9.378682136535645
    7. ').' → logprob: -10.503682136535645
    8. ',' → logprob: -10.753682136535645
    9. ' ' → logprob: -10.878682136535645
    10. ')))' → logprob: -11.003682136535645

Token 166: ' et' (ID: 859)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7978039383888245
    2. '),' → logprob: -0.9228039383888245
    3. '   ' → logprob: -2.1728038787841797
    4. ',' → logprob: -3.4228038787841797
    5. '):' → logprob: -6.17280387878418
    6. '):
' → logprob: -7.04780387878418
    7. ')
' → logprob: -7.17280387878418
    8. ' )' → logprob: -7.17280387878418
    9. ' ),' → logprob: -7.42280387878418
    10. ').' → logprob: -8.42280387878418

Token 167: ' la' (ID: 557)
  Prédit: 'cx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cx' → logprob: -0.6936707496643066
    2. ' doit' → logprob: -2.3186707496643066
    3. ' le' → logprob: -2.4436707496643066
    4. ' cx' → logprob: -2.5686707496643066
    5. 'r' → logprob: -3.0686707496643066
    6. ' son' → logprob: -3.3186707496643066
    7. ' r' → logprob: -3.9436707496643066
    8. 'le' → logprob: -3.9436707496643066
    9. ' ' → logprob: -4.068670749664307
    10. ' il' → logprob: -4.318670749664307

Token 168: ' sph' (ID: 66674)
  Prédit: ' distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' distance' → logprob: -0.7508704662322998
    2. 'distance' → logprob: -1.3758704662322998
    3. ' sph' → logprob: -3.1258704662323
    4. ' position' → logprob: -3.2508704662323
    5. ' surface' → logprob: -3.6258704662323
    6. 'position' → logprob: -3.7508704662323
    7. ' sphere' → logprob: -4.125870704650879
    8. 'sphere' → logprob: -4.125870704650879
    9. ' center' → logprob: -4.625870704650879
    10. ' hauteur' → logprob: -4.750870704650879

Token 169: 'ère' (ID: 4346)
  Prédit: 'ère'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ère' → logprob: -0.04941360652446747
    2. 'è' → logprob: -3.0494136810302734
    3. '   ' → logprob: -8.674413681030273
    4. 'èr' → logprob: -9.049413681030273
    5. 'érique' → logprob: -9.174413681030273
    6. 'ére' → logprob: -9.299413681030273
    7. ')' → logprob: -9.424413681030273
    8. '`' → logprob: -9.549413681030273
    9. 'e' → logprob: -10.924413681030273
    10. '=' → logprob: -11.049413681030273

Token 170: ' entière' (ID: 61583)
  Prédit: ' doit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' doit' → logprob: -0.15024621784687042
    2. ' ne' → logprob: -2.4002461433410645
    3. 'do' → logprob: -3.4002461433410645
    4. 'ne' → logprob: -5.4002461433410645
    5. ' devra' → logprob: -5.7752461433410645
    6. ' do' → logprob: -6.2752461433410645
    7. ')' → logprob: -6.2752461433410645
    8. 't' → logprob: -7.6502461433410645
    9. 'touch' → logprob: -7.6502461433410645
    10. ' peut' → logprob: -7.6502461433410645

Token 171: ' doit' (ID: 21822)
  Prédit: ' doit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' doit' → logprob: -0.045849014073610306
    2. ' ne' → logprob: -3.670849084854126
    3. ')' → logprob: -5.295848846435547
    4. ' peut' → logprob: -5.545848846435547
    5. ' est' → logprob: -5.795848846435547
    6. ' dépasse' → logprob: -6.170848846435547
    7. ' touche' → logprob: -6.920848846435547
    8. ' devra' → logprob: -7.170848846435547
    9. 'ne' → logprob: -7.170848846435547
    10. ' )' → logprob: -8.045848846435547

Token 172: ' tenir' (ID: 57709)
  Prédit: ' être'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' être' → logprob: -0.9492630362510681
    2. 'être' → logprob: -1.574263095855713
    3. ' rester' → logprob: -1.824263095855713
    4. ' rentrer' → logprob: -2.949263095855713
    5. ' tenir' → logprob: -3.199263095855713
    6. ' ' → logprob: -4.449263095855713
    7. 'se' → logprob: -4.574263095855713
    8. 'r' → logprob: -4.574263095855713
    9. ' se' → logprob: -4.574263095855713
    10. 'entr' → logprob: -4.824263095855713

Token 173: ')
' (ID: 446)
  Prédit: 'dans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dans' → logprob: -0.14931322634220123
    2. ' dans' → logprob: -2.02431321144104
    3. ')' → logprob: -5.399313449859619
    4. 'ent' → logprob: -7.149313449859619
    5. ' within' → logprob: -7.899313449859619
    6. 'within' → logprob: -8.524312973022461
    7. ' )' → logprob: -8.774312973022461
    8. ' à' → logprob: -9.149312973022461
    9. 'inside' → logprob: -9.649312973022461
    10. ' in' → logprob: -10.149312973022461

Token 174: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22643771767616272
    2. ',' → logprob: -1.7264376878738403
    3. ':' → logprob: -3.72643780708313
    4. '):' → logprob: -8.85143756866455
    5. '    
' → logprob: -9.22643756866455
    6. '.' → logprob: -9.60143756866455
    7. ')' → logprob: -9.72643756866455
    8. ' ,' → logprob: -9.97643756866455
    9. ':
' → logprob: -9.97643756866455
    10. ',
' → logprob: -10.35143756866455

Token 175: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.045224878937006
    2. ' if' → logprob: -3.920224905014038
    3. 'if' (adapté à ' if') → logprob: -4.045224666595459
    4. '
' → logprob: -5.170224666595459
    5. '    
' → logprob: -7.420224666595459
    6. 'import' → logprob: -9.045225143432617
    7. 'for' → logprob: -9.420225143432617
    8. ' for' → logprob: -9.420225143432617
    9. 'max' → logprob: -9.545225143432617
    10. '  ' → logprob: -10.420225143432617

Token 176: ' r' (ID: 428)
  Prédit: ' r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.25337448716163635
    2. 'r' → logprob: -1.503374457359314
    3. ' ' → logprob: -7.1283745765686035
    4. '2' → logprob: -7.3783745765686035
    5. '   ' → logprob: -11.253374099731445
    6. '	r' → logprob: -13.378374099731445
    7. '3' → logprob: -14.128374099731445
    8. ' ' → logprob: -14.253374099731445
    9. '  ' → logprob: -14.878374099731445
    10. '(r' → logprob: -14.878374099731445

Token 177: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.22657419741153717
    2. '>' → logprob: -1.601574182510376
    3. ' >=' → logprob: -7.351574420928955
    4. '>=' → logprob: -7.976574420928955
    5. '*' → logprob: -8.726573944091797
    6. ' ' → logprob: -12.226573944091797
    7. ' *' → logprob: -12.476573944091797
    8. ' ' → logprob: -14.226573944091797
    9. '+' → logprob: -14.476573944091797
    10. '>w' → logprob: -14.476573944091797

Token 178: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.12693136930465698
    2. ' w' → logprob: -2.1269314289093018
    3. '	w' → logprob: -13.876931190490723
    4. '(w' → logprob: -14.001931190490723
    5. '0' → logprob: -14.501931190490723
    6. '=w' → logprob: -14.626931190490723
    7. ' (' → logprob: -15.626931190490723
    8. '   ' → logprob: -15.751931190490723
    9. ' ' → logprob: -15.876931190490723
    10. '=' → logprob: -17.12693214416504

Token 179: ':
' (ID: 734)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.2854696214199066
    2. ':' → logprob: -1.410469651222229
    3. ' :' → logprob: -6.6604695320129395
    4. ' -' → logprob: -6.6604695320129395
    5. 'or' → logprob: -7.2854695320129395
    6. ':
' → logprob: -7.9104695320129395
    7. '-' → logprob: -8.160470008850098
    8. ' ' → logprob: -8.160470008850098
    9. ':return' → logprob: -10.285470008850098
    10. ' /' → logprob: -10.410470008850098

Token 180: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.38629692792892456
    2. '   ' → logprob: -1.3862969875335693
    3. ':
' → logprob: -3.3862969875335693
    4. '
' → logprob: -3.6362969875335693
    5. ':' → logprob: -5.26129674911499
    6. ' return' → logprob: -6.26129674911499
    7. ':return' → logprob: -6.76129674911499
    8. ' or' → logprob: -7.88629674911499
    9. ' :
' → logprob: -8.261297225952148
    10. '	return' → logprob: -8.386297225952148

Token 181: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.5814286470413208
    2. 'return' (adapté à ' return') → logprob: -0.8314286470413208
    3. '   ' → logprob: -5.456428527832031
    4. '       ' → logprob: -6.831428527832031
    5. '	return' → logprob: -9.206428527832031
    6. '
' → logprob: -10.956428527832031
    7. '    ' → logprob: -12.956428527832031
    8. ' ' → logprob: -13.456428527832031
    9. ':return' → logprob: -13.706428527832031
    10. '    
' → logprob: -14.331428527832031

Token 182: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.3868710398674011
    2. ' False' → logprob: -1.136871099472046
    3. '(False' → logprob: -18.261871337890625
    4. ' ' → logprob: -18.636871337890625
    5. 'True' → logprob: -19.011871337890625
    6. ' True' → logprob: -19.386871337890625
    7. '   ' → logprob: -19.511871337890625
    8. '=False' → logprob: -20.511871337890625
    9. ' false' → logprob: -21.136871337890625
    10. 'false' → logprob: -21.261871337890625

Token 183: '
    
' (ID: 15698)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.290159672498703
    2. '<|end|>' → logprob: -1.9151597023010254
    3. '   ' → logprob: -2.5401597023010254
    4. '    
' → logprob: -4.165159702301025
    5. '  
' → logprob: -5.540159702301025
    6. '\n' → logprob: -5.790159702301025
    7. ' 
' → logprob: -6.665159702301025
    8. '<|end|>' → logprob: -7.915159702301025
    9. ')' → logprob: -8.040159225463867
    10. '   
' → logprob: -8.040159225463867

Token 184: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7740126252174377
    2. '#' → logprob: -2.024012565612793
    3. ' for' → logprob: -2.149012565612793
    4. 'for' → logprob: -2.774012565612793
    5. 'import' → logprob: -2.774012565612793
    6. 'n' → logprob: -3.274012565612793
    7. '
' → logprob: -3.649012565612793
    8. ' #' → logprob: -3.774012565612793
    9. 'max' → logprob: -3.899012565612793
    10. 'if' → logprob: -4.649012565612793

Token 185: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.6377220749855042
    2. 'for' → logprob: -1.0127220153808594
    3. 'if' → logprob: -3.3877220153808594
    4. '   ' → logprob: -4.387722015380859
    5. 'max' → logprob: -4.387722015380859
    6. 'def' → logprob: -4.387722015380859
    7. 'n' → logprob: -4.512722015380859
    8. ' for' → logprob: -5.262722015380859
    9. 'return' → logprob: -5.387722015380859
    10. 'import' → logprob: -5.762722015380859

Token 186: ' Le' (ID: 2018)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7710263133049011
    2. 'for' → logprob: -0.7710263133049011
    3. 'max' → logprob: -3.396026372909546
    4. 'import' → logprob: -5.146026134490967
    5. 'radius' → logprob: -5.271026134490967
    6. ' for' → logprob: -5.396026134490967
    7. 'center' → logprob: -5.396026134490967
    8. 'return' → logprob: -5.896026134490967
    9. 'min' → logprob: -6.146026134490967
    10. 'if' → logprob: -6.271026134490967

Token 187: ' centre' (ID: 13268)
  Prédit: 'center'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'center' → logprob: -1.409311294555664
    2. ' center' → logprob: -1.909311294555664
    3. '#' → logprob: -2.034311294555664
    4. 'def' → logprob: -3.034311294555664
    5. 'for' → logprob: -3.034311294555664
    6. 'max' → logprob: -3.034311294555664
    7. ' min' → logprob: -3.159311294555664
    8. 'min' → logprob: -3.284311294555664
    9. ' max' → logprob: -3.284311294555664
    10. ' for' → logprob: -3.659311294555664

Token 188: ' du' (ID: 1462)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1907033771276474
    2. '_x' → logprob: -2.1907033920288086
    3. 'x' → logprob: -3.1907033920288086
    4. ' de' → logprob: -4.815703392028809
    5. '=' → logprob: -5.190703392028809
    6. ' x' → logprob: -5.690703392028809
    7. ' du' → logprob: -6.690703392028809
    8. '_' → logprob: -7.690703392028809
    9. 'de' → logprob: -7.690703392028809
    10. ' doit' → logprob: -7.940703392028809

Token 189: ' ballon' (ID: 135405)
  Prédit: 'ball'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ball' → logprob: -0.3563598394393921
    2. ' ballon' → logprob: -1.356359839439392
    3. ' balloon' → logprob: -4.481359958648682
    4. 'sphere' → logprob: -4.481359958648682
    5. ' sphere' → logprob: -4.856359958648682
    6. 's' → logprob: -5.481359958648682
    7. ' ball' → logprob: -5.856359958648682
    8. 'c' → logprob: -6.481359958648682
    9. ' sph' → logprob: -7.231359958648682
    10. 'b' → logprob: -7.981359958648682

Token 190: ' est' (ID: 893)
  Prédit: ' doit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' doit' → logprob: -0.06415890902280807
    2. ' devra' → logprob: -3.9391589164733887
    3. ' est' → logprob: -4.189158916473389
    4. ' must' → logprob: -4.564158916473389
    5. ' peut' → logprob: -5.189158916473389
    6. ' ne' → logprob: -6.439158916473389
    7. 'must' → logprob: -6.564158916473389
    8. 'x' → logprob: -6.814158916473389
    9. ' =' → logprob: -6.939158916473389
    10. ' se' → logprob: -7.189158916473389

Token 191: ' donc' (ID: 14206)
  Prédit: ' au'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' au' → logprob: -0.7399892210960388
    2. ' à' → logprob: -1.4899892807006836
    3. ' situé' → logprob: -2.7399892807006836
    4. ' placé' → logprob: -2.7399892807006836
    5. ' (' → logprob: -2.9899892807006836
    6. ' forcément' → logprob: -3.3649892807006836
    7. 'à' → logprob: -3.9899892807006836
    8. ' suppos' → logprob: -4.614989280700684
    9. 'au' → logprob: -4.864989280700684
    10. '(r' → logprob: -5.239989280700684

Token 192: ' à' (ID: 1221)
  Prédit: 'à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'à' → logprob: -1.5289198160171509
    2. ' à' → logprob: -1.6539198160171509
    3. ' au' → logprob: -1.6539198160171509
    4. ' placé' → logprob: -2.4039196968078613
    5. ' (' → logprob: -2.6539196968078613
    6. ' situé' → logprob: -2.9039196968078613
    7. 'au' → logprob: -3.4039196968078613
    8. ' forcément' → logprob: -3.4039196968078613
    9. '(r' → logprob: -3.9039196968078613
    10. ' en' → logprob: -3.9039196968078613

Token 193: ' hauteur' (ID: 72987)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.2747054100036621
    2. '(r' → logprob: -2.024705410003662
    3. 'r' → logprob: -2.399705410003662
    4. ' r' → logprob: -5.774705410003662
    5. ' hauteur' → logprob: -5.899705410003662
    6. '(' → logprob: -6.149705410003662
    7. ' une' → logprob: -6.399705410003662
    8. 'z' → logprob: -6.649705410003662
    9. ' [' → logprob: -6.649705410003662
    10. '(x' → logprob: -7.024705410003662

Token 194: ' r' (ID: 428)
  Prédit: ' r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.47412821650505066
    2. 'r' → logprob: -0.974128246307373
    3. ' de' → logprob: -10.849127769470215
    4. ' ' → logprob: -11.724127769470215
    5. 'de' → logprob: -11.974127769470215
    6. ' =' → logprob: -12.474127769470215
    7. '=r' → logprob: -12.849127769470215
    8. 'z' → logprob: -12.974127769470215
    9. '   ' → logprob: -13.224127769470215
    10. ' z' → logprob: -13.724127769470215

Token 195: ' au' (ID: 2791)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.562227189540863
    2. ',' → logprob: -0.937227189540863
    3. '    
' → logprob: -4.562227249145508
    4. '.' → logprob: -5.312227249145508
    5. ' (' → logprob: -5.437227249145508
    6. ' ,' → logprob: -5.687227249145508
    7. '<|end|>' → logprob: -5.687227249145508
    8. '  
' → logprob: -6.187227249145508
    9. '
' → logprob: -6.437227249145508
    10. 'import' → logprob: -6.812227249145508

Token 196: '-dessus' (ID: 74812)
  Prédit: '-dessus'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-dessus' → logprob: -0.41299960017204285
    2. 'dess' → logprob: -1.7879996299743652
    3. 'minimum' → logprob: -2.2879996299743652
    4. 'z' → logprob: -3.1629996299743652
    5. 'sol' → logprob: -4.037999629974365
    6. ' dessus' → logprob: -5.412999629974365
    7. 'moins' → logprob: -6.037999629974365
    8. 'centre' → logprob: -7.037999629974365
    9. 'mo' → logprob: -7.412999629974365
    10. 'niveau' → logprob: -8.162999153137207

Token 197: ' du' (ID: 1462)
  Prédit: ' du'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' du' → logprob: -0.5662418007850647
    2. 'du' → logprob: -1.06624174118042
    3. '   ' → logprob: -2.56624174118042
    4. ' de' → logprob: -5.19124174118042
    5. 'de' → logprob: -5.31624174118042
    6. 'del' → logprob: -8.816242218017578
    7. ' ' → logprob: -8.941242218017578
    8. 'def' → logprob: -9.066242218017578
    9. 'sol' → logprob: -9.191242218017578
    10. 'import' → logprob: -9.566242218017578

Token 198: ' sol' (ID: 1887)
  Prédit: 'sol'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sol' → logprob: -0.3485693037509918
    2. ' sol' → logprob: -1.2235692739486694
    3. 'z' → logprob: -9.9735689163208
    4. '0' → logprob: -10.0985689163208
    5. 'ground' → logprob: -11.4735689163208
    6. '```' → logprob: -12.2235689163208
    7. ' sols' → logprob: -12.2235689163208
    8. 'plan' → logprob: -13.0985689163208
    9. ' ' → logprob: -13.3485689163208
    10. 'surface' → logprob: -13.4735689163208

Token 199: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04736465588212013
    2. '    
' → logprob: -3.6723647117614746
    3. '<|end|>' → logprob: -4.922364711761475
    4. ',' → logprob: -5.297364711761475
    5. '  
' → logprob: -5.922364711761475
    6. '
' → logprob: -6.797364711761475
    7. '\n' → logprob: -7.297364711761475
    8. '    ' → logprob: -7.297364711761475
    9. ' ' → logprob: -7.547364711761475
    10. '  ' → logprob: -7.547364711761475

Token 200: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0874604880809784
    2. '<|end|>' → logprob: -3.212460517883301
    3. '    
' → logprob: -3.462460517883301
    4. '  
' → logprob: -5.712460517883301
    5. '    ' → logprob: -6.212460517883301
    6. '
' → logprob: -6.587460517883301
    7. ',' → logprob: -6.837460517883301
    8. '  ' → logprob: -6.962460517883301
    9. '\n' → logprob: -7.212460517883301
    10. ' 
' → logprob: -7.212460517883301

Token 201: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6274567246437073
    2. '#' (adapté à ' #') → logprob: -2.0024566650390625
    3. ' #' → logprob: -3.0024566650390625
    4. '
' → logprob: -3.2524566650390625
    5. 'import' → logprob: -3.5024566650390625
    6. ' for' → logprob: -3.5024566650390625
    7. '    
' → logprob: -3.6274566650390625
    8. '<|end|>' → logprob: -4.0024566650390625
    9. ' 
' → logprob: -4.1274566650390625
    10. 'def' → logprob: -4.3774566650390625

Token 202: ' Sa' (ID: 8455)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7845417857170105
    2. '   ' → logprob: -1.5345418453216553
    3. 'import' → logprob: -2.5345418453216553
    4. ' for' → logprob: -3.1595418453216553
    5. ' #' → logprob: -3.1595418453216553
    6. 'for' → logprob: -3.1595418453216553
    7. 'def' → logprob: -3.6595418453216553
    8. 'return' → logprob: -3.7845418453216553
    9. ' return' → logprob: -4.659541606903076
    10. 'max' → logprob: -4.784541606903076

Token 203: ' projection' (ID: 41244)
  Prédit: 'center'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'center' → logprob: -0.8338372707366943
    2. 'position' → logprob: -0.9588372707366943
    3. 'distance' → logprob: -2.0838372707366943
    4. 'surface' → logprob: -4.458837509155273
    5. 'centre' → logprob: -4.958837509155273
    6. 'radius' → logprob: -4.958837509155273
    7. 'ray' → logprob: -5.583837509155273
    8. '#' → logprob: -5.833837509155273
    9. 'base' → logprob: -5.833837509155273
    10. 'import' → logprob: -6.083837509155273

Token 204: ' dans' (ID: 2671)
  Prédit: ' sur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sur' → logprob: -0.30616945028305054
    2. ' au' → logprob: -1.8061695098876953
    3. ' en' → logprob: -3.8061695098876953
    4. ' dans' → logprob: -3.9311695098876953
    5. 'sur' → logprob: -4.681169509887695
    6. ' doit' → logprob: -4.806169509887695
    7. ' est' → logprob: -5.181169509887695
    8. ' xy' → logprob: -5.181169509887695
    9. ' ' → logprob: -5.306169509887695
    10. ' on' → logprob: -5.556169509887695

Token 205: ' le' (ID: 505)
  Prédit: ' le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.49811914563179016
    2. 'le' → logprob: -1.2481191158294678
    3. ' l' → logprob: -3.4981191158294678
    4. 'l' → logprob: -3.8731191158294678
    5. ' la' → logprob: -4.248119354248047
    6. ' xy' → logprob: -4.248119354248047
    7. 'xy' → logprob: -4.373119354248047
    8. 'x' → logprob: -5.623119354248047
    9. 'la' → logprob: -6.248119354248047
    10. ' ' → logprob: -6.498119354248047

Token 206: ' plan' (ID: 3496)
  Prédit: 'xy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xy' → logprob: -0.4855954647064209
    2. 'plan' → logprob: -1.110595464706421
    3. ' plan' → logprob: -3.110595464706421
    4. ' xy' → logprob: -5.360595703125
    5. 'plane' → logprob: -6.110595703125
    6. 'x' → logprob: -6.610595703125
    7. 'pl' → logprob: -6.985595703125
    8. 'plans' → logprob: -7.485595703125
    9. ' plans' → logprob: -8.360595703125
    10. ' (' → logprob: -8.610595703125

Token 207: ' XY' (ID: 71987)
  Prédit: ' xy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' xy' → logprob: -0.33100664615631104
    2. 'xy' → logprob: -1.331006646156311
    3. ' (' → logprob: -4.3310065269470215
    4. ' XY' → logprob: -5.9560065269470215
    5. ' x' → logprob: -7.0810065269470215
    6. 'XY' → logprob: -8.20600700378418
    7. '(x' → logprob: -8.20600700378418
    8. 'x' → logprob: -8.20600700378418
    9. '_xy' → logprob: -9.58100700378418
    10. 'xz' → logprob: -10.08100700378418

Token 208: ' est' (ID: 893)
  Prédit: ' est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.2352992594242096
    2. ' doit' → logprob: -1.6102992296218872
    3. ' se' → logprob: -5.860299110412598
    4. '   ' → logprob: -6.610299110412598
    5. ' is' → logprob: -6.860299110412598
    6. ' (' → logprob: -7.110299110412598
    7. 'est' → logprob: -7.360299110412598
    8. ' peut' → logprob: -7.360299110412598
    9. ' devra' → logprob: -7.735299110412598
    10. ' must' → logprob: -8.485299110412598

Token 209: ' le' (ID: 505)
  Prédit: 'dans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dans' → logprob: -1.2756052017211914
    2. ' dans' → logprob: -1.4006052017211914
    3. ' au' → logprob: -1.6506052017211914
    4. ' un' → logprob: -2.9006052017211914
    5. ' à' → logprob: -2.9006052017211914
    6. ' limitée' → logprob: -3.5256052017211914
    7. ' forcément' → logprob: -4.150605201721191
    8. 'à' → logprob: -4.525605201721191
    9. 'au' → logprob: -4.525605201721191
    10. ' située' → logprob: -4.650605201721191

Token 210: ' point' (ID: 2438)
  Prédit: ' centre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' centre' → logprob: -0.8922675251960754
    2. 'centre' → logprob: -1.7672674655914307
    3. ' center' → logprob: -2.5172674655914307
    4. ' point' → logprob: -2.7672674655914307
    5. 'c' → logprob: -3.0172674655914307
    6. 'point' → logprob: -3.1422674655914307
    7. ' cercle' → logprob: -3.2672674655914307
    8. ' (' → logprob: -3.2672674655914307
    9. 'center' → logprob: -3.3922674655914307
    10. '(' → logprob: -4.26726770401001

Token 211: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.020035842433571815
    2. '(' → logprob: -4.270035743713379
    3. '(cx' → logprob: -6.145035743713379
    4. ' ' → logprob: -7.395035743713379
    5. '(center' → logprob: -7.395035743713379
    6. ' de' → logprob: -7.520035743713379
    7. '(x' → logprob: -7.645035743713379
    8. ' center' → logprob: -7.770035743713379
    9. ' central' → logprob: -8.520035743713379
    10. '   ' → logprob: -8.895035743713379

Token 212: 'cx' (ID: 47207)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.02000347338616848
    2. '0' → logprob: -4.520003318786621
    3. 'w' → logprob: -4.895003318786621
    4. ' r' → logprob: -6.645003318786621
    5. ' ' → logprob: -10.270003318786621
    6. ' w' → logprob: -10.645003318786621
    7. 'x' → logprob: -10.770003318786621
    8. 'cx' → logprob: -10.770003318786621
    9. ')' → logprob: -12.020003318786621
    10. '(r' → logprob: -12.145003318786621

Token 213: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001380113884806633
    2. ' ,' → logprob: -6.62637996673584
    3. ')' → logprob: -10.12637996673584
    4. ' ' → logprob: -12.75137996673584
    5. '_,' → logprob: -12.87637996673584
    6. ' )' → logprob: -13.00137996673584
    7. '),' → logprob: -13.75137996673584
    8. ',)' → logprob: -14.00137996673584
    9. '  ' → logprob: -14.25137996673584
    10. 'x' → logprob: -14.62637996673584

Token 214: ' cy' (ID: 5504)
  Prédit: ' cy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cy' → logprob: -0.28168952465057373
    2. 'cy' → logprob: -1.4066895246505737
    3. ' r' → logprob: -8.156689643859863
    4. ' ' → logprob: -9.406689643859863
    5. 'r' → logprob: -10.156689643859863
    6. ',' → logprob: -10.156689643859863
    7. ' cx' → logprob: -10.156689643859863
    8. 'cx' → logprob: -11.656689643859863
    9. '   ' → logprob: -12.156689643859863
    10. '0' → logprob: -12.156689643859863

Token 215: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05067450925707817
    2. ',' → logprob: -3.1756744384765625
    3. ' )' → logprob: -5.0506744384765625
    4. ' ,' → logprob: -7.8006744384765625
    5. '),' → logprob: -8.050674438476562
    6. 'import' → logprob: -8.425674438476562
    7. '   ' → logprob: -9.300674438476562
    8. ',)' → logprob: -9.675674438476562
    9. ').' → logprob: -10.925674438476562
    10. 'def' → logprob: -10.925674438476562

Token 216: ' incon' (ID: 30223)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6560419797897339
    2. ' and' → logprob: -2.7810420989990234
    3. ' et' → logprob: -2.7810420989990234
    4. '<|end|>' → logprob: -3.0310420989990234
    5. ' mais' → logprob: -3.0310420989990234
    6. '#' → logprob: -3.4060420989990234
    7. '...' → logprob: -3.5310420989990234
    8. 'import' → logprob: -3.5310420989990234
    9. ' which' → logprob: -3.7810420989990234
    10. ')' → logprob: -4.156042098999023

Token 217: 'nu' (ID: 8502)
  Prédit: 'nu'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nu' → logprob: -0.00028135839966125786
    2. 't' → logprob: -9.00028133392334
    3. 'n' → logprob: -9.25028133392334
    4. 'u' → logprob: -9.87528133392334
    5. '#' → logprob: -12.87528133392334
    6. 'nus' → logprob: -13.62528133392334
    7. 'ν' → logprob: -14.12528133392334
    8. '\n' → logprob: -14.37528133392334
    9. '```' → logprob: -15.00028133392334
    10. '   ' → logprob: -15.12528133392334

Token 218: '
    
' (ID: 15698)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11482181400060654
    2. ',' → logprob: -2.8648219108581543
    3. '<|end|>' → logprob: -4.114821910858154
    4. '.' → logprob: -4.864821910858154
    5. '#' → logprob: -4.989821910858154
    6. 'import' → logprob: -5.614821910858154
    7. '    
' → logprob: -5.739821910858154
    8. ' ' → logprob: -5.864821910858154
    9. '
' → logprob: -6.489821910858154
    10. ':' → logprob: -6.614821910858154

Token 219: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.022349992766976357
    2. '#' → logprob: -4.522349834442139
    3. '    
' → logprob: -5.772349834442139
    4. 'import' → logprob: -6.022349834442139
    5. ' #' → logprob: -6.772349834442139
    6. ' for' → logprob: -7.147349834442139
    7. '    ' → logprob: -7.147349834442139
    8. '
' → logprob: -7.397349834442139
    9. 'def' → logprob: -7.397349834442139
    10. '  
' → logprob: -8.272350311279297

Token 220: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.3321268856525421
    2. '   ' → logprob: -1.5821268558502197
    3. 'import' → logprob: -3.8321268558502197
    4. 'for' → logprob: -4.082127094268799
    5. ' #' → logprob: -4.832127094268799
    6. 'possible' → logprob: -4.832127094268799
    7. 'min' → logprob: -5.207127094268799
    8. 'def' → logprob: -5.832127094268799
    9. 'return' → logprob: -5.957127094268799
    10. 'max' → logprob: -6.207127094268799

Token 221: ' Pour' (ID: 13931)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.3438414931297302
    2. 'for' → logprob: -1.968841552734375
    3. 'def' → logprob: -3.343841552734375
    4. 'import' → logprob: -3.468841552734375
    5. 'n' → logprob: -3.968841552734375
    6. 'min' → logprob: -4.093841552734375
    7. 'from' → logprob: -4.218841552734375
    8. ' for' → logprob: -5.093841552734375
    9. 'return' → logprob: -5.593841552734375
    10. 'left' → logprob: -5.968841552734375

Token 222: ' que' (ID: 661)
  Prédit: ' cx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' cx' → logprob: -0.3468032479286194
    2. 'cx' → logprob: -2.0968031883239746
    3. 'x' → logprob: -2.2218031883239746
    4. ' x' → logprob: -3.4718031883239746
    5. ' i' → logprob: -4.846803188323975
    6. ' trouver' → logprob: -5.846803188323975
    7. ' le' → logprob: -5.971803188323975
    8. ' l' → logprob: -6.221803188323975
    9. 'l' → logprob: -6.346803188323975
    10. 'placer' → logprob: -6.346803188323975

Token 223: ' la' (ID: 557)
  Prédit: ' cx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' cx' → logprob: -0.07450689375400543
    2. 'cx' → logprob: -2.824506998062134
    3. ' le' → logprob: -5.824506759643555
    4. '(cx' → logprob: -6.699506759643555
    5. ' x' → logprob: -6.949506759643555
    6. ' r' → logprob: -6.949506759643555
    7. ' chaque' → logprob: -6.949506759643555
    8. 'x' → logprob: -7.199506759643555
    9. ' px' → logprob: -7.699506759643555
    10. ' every' → logprob: -7.824506759643555

Token 224: ' sph' (ID: 66674)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.6092950105667114
    2. 'ball' → logprob: -1.4842950105667114
    3. ' ballon' → logprob: -3.109294891357422
    4. 'center' → logprob: -3.609294891357422
    5. 'def' → logprob: -3.859294891357422
    6. ' r' → logprob: -4.359294891357422
    7. 'radius' → logprob: -4.484294891357422
    8. ' placement' → logprob: -4.734294891357422
    9. 'sphere' → logprob: -4.734294891357422
    10. 'placement' → logprob: -4.859294891357422

Token 225: 'ère' (ID: 4346)
  Prédit: 'ère'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ère' → logprob: -0.02053161896765232
    2. 'ere' → logprob: -6.14553165435791
    3. '`' → logprob: -6.27053165435791
    4. 'sphere' → logprob: -6.39553165435791
    5. 'r' → logprob: -6.52053165435791
    6. 'érer' → logprob: -6.64553165435791
    7. '   ' → logprob: -6.89553165435791
    8. 'érique' → logprob: -6.89553165435791
    9. 'èr' → logprob: -7.02053165435791
    10. 'ètre' → logprob: -7.14553165435791

Token 226: ' ne' (ID: 453)
  Prédit: ' puisse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' puisse' → logprob: -0.040272921323776245
    2. ' soit' → logprob: -3.4152729511260986
    3. ' ne' → logprob: -6.0402727127075195
    4. 'pu' → logprob: -6.4152727127075195
    5. 'so' → logprob: -7.5402727127075195
    6. ' puissent' → logprob: -7.7902727127075195
    7. 'center' → logprob: -8.16527271270752
    8. 'p' → logprob: -8.66527271270752
    9. '   ' → logprob: -8.91527271270752
    10. ' possa' → logprob: -9.29027271270752

Token 227: ' touche' (ID: 77303)
  Prédit: ' touche'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' touche' → logprob: -0.6012260913848877
    2. 't' → logprob: -0.8512260913848877
    3. 'touch' → logprob: -4.726225852966309
    4. 'p' → logprob: -5.601225852966309
    5. ' soit' → logprob: -5.726225852966309
    6. 'so' → logprob: -6.226225852966309
    7. ' dépasse' → logprob: -6.351225852966309
    8. ' puisse' → logprob: -6.851225852966309
    9. 'd' → logprob: -7.101225852966309
    10. ' touch' → logprob: -7.601225852966309

Token 228: ' pas' (ID: 2173)
  Prédit: ' pas'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pas' → logprob: -0.23690994083881378
    2. ' aucun' → logprob: -2.236909866333008
    3. ' aucune' → logprob: -3.236909866333008
    4. ' les' → logprob: -3.861909866333008
    5. ' le' → logprob: -3.986909866333008
    6. ' ni' → logprob: -4.611909866333008
    7. ' jamais' → logprob: -5.361909866333008
    8. 'pas' → logprob: -5.611909866333008
    9. ' ' → logprob: -5.736909866333008
    10. ' aux' → logprob: -7.236909866333008

Token 229: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.14626339077949524
    2. 'les' → logprob: -2.021263360977173
    3. ' le' → logprob: -6.896263599395752
    4. ' la' → logprob: -7.646263599395752
    5. ' ' → logprob: -7.896263599395752
    6. 'le' → logprob: -8.021263122558594
    7. ' ni' → logprob: -8.646263122558594
    8. ' l' → logprob: -8.896263122558594
    9. 'l' → logprob: -9.146263122558594
    10. '   ' → logprob: -9.146263122558594

Token 230: ' murs' (ID: 103025)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'par' → logprob: -0.7790428400039673
    2. ' par' → logprob: -1.1540428400039673
    3. ' murs' → logprob: -1.7790428400039673
    4. 'm' → logprob: -3.0290427207946777
    5. 'b' → logprob: -5.529042720794678
    6. ' b' → logprob: -5.654042720794678
    7. '```' → logprob: -8.654043197631836
    8. ' côtés' → logprob: -8.904043197631836
    9. ' ' → logprob: -9.404043197631836
    10. ' m' → logprob: -9.404043197631836

Token 231: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.27150776982307434
    2. '   ' → logprob: -2.021507740020752
    3. ' ni' → logprob: -2.396507740020752
    4. ' ,' → logprob: -4.896507740020752
    5. ' et' → logprob: -6.521507740020752
    6. ' du' → logprob: -6.646507740020752
    7. ' ou' → logprob: -7.021507740020752
    8. ' il' → logprob: -7.146507740020752
    9. ' (' → logprob: -7.146507740020752
    10. ' nor' → logprob: -8.14650821685791

Token 232: ' le' (ID: 505)
  Prédit: ' il'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' il' → logprob: -0.11580917239189148
    2. ' le' → logprob: -3.365809202194214
    3. '   ' → logprob: -3.615809202194214
    4. ' the' → logprob: -4.115808963775635
    5. 'il' → logprob: -5.240808963775635
    6. ' la' → logprob: -5.365808963775635
    7. ' cx' → logprob: -5.615808963775635
    8. ' les' → logprob: -5.740808963775635
    9. ' on' → logprob: -5.740808963775635
    10. 'the' → logprob: -5.990808963775635

Token 233: ' centre' (ID: 13268)
  Prédit: 'cx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cx' → logprob: -0.4689599871635437
    2. ' cx' → logprob: -1.0939600467681885
    3. ' center' → logprob: -4.593959808349609
    4. ' centre' → logprob: -4.843959808349609
    5. 'center' → logprob: -4.843959808349609
    6. 'r' → logprob: -5.343959808349609
    7. 'centre' → logprob: -5.343959808349609
    8. '(cx' → logprob: -6.593959808349609
    9. 'x' → logprob: -7.843959808349609
    10. ' r' → logprob: -7.968959808349609

Token 234: ' doit' (ID: 21822)
  Prédit: ' doit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' doit' → logprob: -0.012284528464078903
    2. ' must' → logprob: -4.762284755706787
    3. ' x' → logprob: -6.012284755706787
    4. '_x' → logprob: -8.387284278869629
    5. '   ' → logprob: -8.637284278869629
    6. ' devra' → logprob: -8.637284278869629
    7. 'x' → logprob: -8.762284278869629
    8. ' doivent' → logprob: -9.512284278869629
    9. ' ne' → logprob: -9.762284278869629
    10. ' )' → logprob: -9.887284278869629

Token 235: ' être' (ID: 9104)
  Prédit: ' être'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' être' → logprob: -1.0232700109481812
    2. ' se' → logprob: -1.3982700109481812
    3. '<|end|>' → logprob: -1.6482700109481812
    4. ' be' → logprob: -2.3982701301574707
    5. ' ' → logprob: -3.6482701301574707
    6. 'se' → logprob: -4.398270130157471
    7. ' etre' → logprob: -4.523270130157471
    8. 'être' → logprob: -4.648270130157471
    9. ' avoir' → logprob: -4.773270130157471
    10. ' au' → logprob: -5.148270130157471

Token 236: '
' (ID: 198)
  Prédit: ' placé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' placé' → logprob: -1.0811411142349243
    2. 'au' → logprob: -1.3311411142349243
    3. ' au' → logprob: -1.3311411142349243
    4. ' à' → logprob: -3.2061409950256348
    5. 'r' → logprob: -3.3311409950256348
    6. ' placed' → logprob: -3.9561409950256348
    7. 'à' → logprob: -4.706140995025635
    8. 'placed' → logprob: -5.206140995025635
    9. ' situé' → logprob: -5.206140995025635
    10. 'plac' → logprob: -5.456140995025635

Token 237: '   ' (ID: 271)
  Prédit: ' au'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' au' → logprob: -0.5816881656646729
    2. 'au' → logprob: -1.5816881656646729
    3. ' à' → logprob: -1.5816881656646729
    4. 'à' → logprob: -4.206687927246094
    5. ' situé' → logprob: -5.081687927246094
    6. ' placé' → logprob: -5.706687927246094
    7. ' at' → logprob: -6.956687927246094
    8. ' ' → logprob: -6.956687927246094
    9. 'd' → logprob: -7.206687927246094
    10. '   ' → logprob: -7.581687927246094

Token 238: ' #' (ID: 1069)
  Prédit: ' r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.08076383918523788
    2. 'r' → logprob: -2.580763816833496
    3. ' ' → logprob: -6.955763816833496
    4. '   ' → logprob: -7.705763816833496
    5. ' at' → logprob: -9.080763816833496
    6. ' x' → logprob: -9.705763816833496
    7. ' (' → logprob: -9.705763816833496
    8. ')' → logprob: -10.330763816833496
    9. '_r' → logprob: -10.455763816833496
    10. 'x' → logprob: -10.580763816833496

Token 239: ' à' (ID: 1221)
  Prédit: ' r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.5238361954689026
    2. 'r' → logprob: -0.8988361954689026
    3. ' at' → logprob: -8.273836135864258
    4. '   ' → logprob: -8.273836135864258
    5. ' (' → logprob: -9.148836135864258
    6. ' ' → logprob: -10.773836135864258
    7. '(r' → logprob: -10.898836135864258
    8. 'distance' → logprob: -11.898836135864258
    9. '	r' → logprob: -12.023836135864258
    10. '[r' → logprob: -12.086336135864258

Token 240: ' au' (ID: 2791)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.05465397611260414
    2. 'distance' → logprob: -3.4296538829803467
    3. ' r' → logprob: -5.179654121398926
    4. 'least' → logprob: -5.179654121398926
    5. ' least' → logprob: -5.304654121398926
    6. 'au' → logprob: -5.929654121398926
    7. ' distance' → logprob: -7.554654121398926
    8. ' au' → logprob: -8.054654121398926
    9. 'min' → logprob: -8.429654121398926
    10. 'minimum' → logprob: -8.554654121398926

Token 241: ' moins' (ID: 15924)
  Prédit: 'moins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'moins' → logprob: -0.15339510142803192
    2. ' moins' → logprob: -2.153395175933838
    3. 'mo' → logprob: -4.403395175933838
    4. 'least' → logprob: -5.028395175933838
    5. ' least' → logprob: -6.278395175933838
    6. 'r' → logprob: -6.778395175933838
    7. 'menos' → logprob: -6.778395175933838
    8. 'min' → logprob: -6.903395175933838
    9. 'm' → logprob: -7.403395175933838
    10. ' menos' → logprob: -7.653395175933838

Token 242: ' une' (ID: 2463)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.4287765920162201
    2. ' r' → logprob: -1.0537766218185425
    3. 'distance' → logprob: -10.803776741027832
    4. '```' → logprob: -11.428776741027832
    5. ' ' → logprob: -11.678776741027832
    6. ' a' → logprob: -12.178776741027832
    7. ' distance' → logprob: -12.428776741027832
    8. '_r' → logprob: -12.553776741027832
    9. '   ' → logprob: -12.678776741027832
    10. '	r' → logprob: -13.053776741027832

Token 243: ' distance' (ID: 9324)
  Prédit: ' distance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' distance' → logprob: -0.2273513525724411
    2. 'distance' → logprob: -1.7273513078689575
    3. ' r' → logprob: -4.227351188659668
    4. 'r' → logprob: -4.602351188659668
    5. ' ' → logprob: -7.477351188659668
    6. 'dist' → logprob: -8.852351188659668
    7. '_distance' → logprob: -9.727351188659668
    8. 'radius' → logprob: -10.102351188659668
    9. ' radius' → logprob: -10.352351188659668
    10. '   ' → logprob: -10.477351188659668

Token 244: ' r' (ID: 428)
  Prédit: ' r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.2520076632499695
    2. 'r' → logprob: -1.5020077228546143
    3. ' ' → logprob: -10.127007484436035
    4. 'au' → logprob: -12.002007484436035
    5. 'd' → logprob: -12.252007484436035
    6. ' de' → logprob: -12.377007484436035
    7. '   ' → logprob: -12.502007484436035
    8. '_r' → logprob: -12.752007484436035
    9. '	r' → logprob: -13.127007484436035
    10. 'min' → logprob: -13.627007484436035

Token 245: ' des' (ID: 731)
  Prédit: ' from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' from' → logprob: -0.3182283043861389
    2. ' du' → logprob: -1.9432282447814941
    3. ' des' → logprob: -2.943228244781494
    4. 'from' → logprob: -3.318228244781494
    5. ' r' → logprob: -4.318228244781494
    6. '   ' → logprob: -4.818228244781494
    7. 'du' → logprob: -4.943228244781494
    8. ' de' → logprob: -5.943228244781494
    9. '```' → logprob: -6.068228244781494
    10. 'de' → logprob: -6.068228244781494

Token 246: ' b' (ID: 287)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.9832691550254822
    2. 'b' → logprob: -1.608269214630127
    3. ' b' → logprob: -1.733269214630127
    4. '0' → logprob: -2.233269214630127
    5. 'par' → logprob: -2.733269214630127
    6. ' par' → logprob: -2.858269214630127
    7. ' murs' → logprob: -4.608269214630127
    8. ' ' → logprob: -4.983269214630127
    9. 'c' → logprob: -7.108269214630127
    10. 'bord' → logprob: -7.483269214630127

Token 247: 'ords' (ID: 9142)
  Prédit: 'ords'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ords' → logprob: -0.002778962254524231
    2. 'ord' → logprob: -6.502779006958008
    3. '#' → logprob: -8.252779006958008
    4. '##' → logprob: -8.377779006958008
    5. '```' → logprob: -8.877779006958008
    6. '0' → logprob: -8.877779006958008
    7. '_' → logprob: -9.752779006958008
    8. 'ors' → logprob: -10.127779006958008
    9. '}' → logprob: -10.127779006958008
    10. 'orn' → logprob: -10.127779006958008

Token 248: ' carr' (ID: 18321)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3322701156139374
    2. ',' → logprob: -1.8322701454162598
    3. ':' → logprob: -3.3322701454162598
    4. ' (' → logprob: -3.5822701454162598
    5. ' du' → logprob: -4.20727014541626
    6. '.' → logprob: -4.33227014541626
    7. ' de' → logprob: -5.20727014541626
    8. ' ' → logprob: -5.20727014541626
    9. ' ,' → logprob: -5.45727014541626
    10. ' :' → logprob: -6.20727014541626

Token 249: 'és' (ID: 1756)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -1.3750929832458496
    2. 'ée' → logprob: -1.3750929832458496
    3. 'er' → logprob: -1.6250929832458496
    4. 'é' → logprob: -1.8750929832458496
    5. 'és' → logprob: -3.1250929832458496
    6. 'ées' → logprob: -3.2500929832458496
    7. 'es' → logprob: -3.2500929832458496
    8. 'ers' → logprob: -4.50009298324585
    9. 'iers' → logprob: -5.37509298324585
    10. 'ier' → logprob: -6.00009298324585

Token 250: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1530747413635254
    2. ' (' → logprob: -1.5280747413635254
    3. ' ' → logprob: -2.0280747413635254
    4. ' de' → logprob: -2.1530747413635254
    5. ' ,' → logprob: -2.7780747413635254
    6. ':' → logprob: -3.2780747413635254
    7. ' du' → logprob: -3.2780747413635254
    8. '.' → logprob: -3.5280747413635254
    9. '   ' → logprob: -4.153074741363525
    10. ' :' → logprob: -4.653074741363525

Token 251: '0' (ID: 15)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.14817258715629578
    2. ' r' → logprob: -2.523172616958618
    3. '0' → logprob: -3.523172616958618
    4. ')' → logprob: -3.773172616958618
    5. ' ' → logprob: -6.898172378540039
    6. ' )' → logprob: -7.148172378540039
    7. '   ' → logprob: -7.398172378540039
    8. 'def' → logprob: -7.523172378540039
    9. ',' → logprob: -8.023172378540039
    10. '1' → logprob: -8.023172378540039

Token 252: ',' (ID: 11)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.37075063586235046
    2. '+' → logprob: -1.8707506656646729
    3. ',' → logprob: -2.120750665664673
    4. '+r' → logprob: -3.745750665664673
    5. ' ,' → logprob: -4.870750427246094
    6. ')' → logprob: -6.370750427246094
    7. '),' → logprob: -6.495750427246094
    8. ' ),' → logprob: -8.120750427246094
    9. ' ' → logprob: -8.370750427246094
    10. '+,' → logprob: -8.495750427246094

Token 253: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.18657198548316956
    2. 'w' → logprob: -2.6865720748901367
    3. ' ' → logprob: -2.8115720748901367
    4. ' w' → logprob: -3.1865720748901367
    5. ' r' → logprob: -8.436572074890137
    6. 'r' → logprob: -8.561572074890137
    7. ',' → logprob: -9.436572074890137
    8. '<|end|>' → logprob: -9.686572074890137
    9. ')' → logprob: -9.811572074890137
    10. '  ' → logprob: -11.311572074890137

Token 254: ')-(' (ID: 111485)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04023810848593712
    2. '),' → logprob: -3.29023814201355
    3. ' )' → logprob: -6.415237903594971
    4. ',' → logprob: -8.415238380432129
    5. ' ),' → logprob: -8.790238380432129
    6. '),(' → logprob: -9.790238380432129
    7. 'et' → logprob: -10.040238380432129
    8. ' et' → logprob: -10.165238380432129
    9. ' ' → logprob: -11.415238380432129
    10. ')
' → logprob: -11.790238380432129

Token 255: '100' (ID: 1353)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.04416906461119652
    2. ' w' → logprob: -3.1691689491271973
    3. '1' → logprob: -7.294168949127197
    4. '100' → logprob: -8.294169425964355
    5. '0' → logprob: -9.169169425964355
    6. ' ' → logprob: -10.294169425964355
    7. 'W' → logprob: -10.419169425964355
    8. '10' → logprob: -10.544169425964355
    9. '   ' → logprob: -11.294169425964355
    10. '50' → logprob: -11.919169425964355

Token 256: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.21336780488491058
    2. ',' → logprob: -1.9633678197860718
    3. ' )' → logprob: -3.7133677005767822
    4. ' ,' → logprob: -4.088367938995361
    5. '100' → logprob: -5.713367938995361
    6. '),' → logprob: -5.838367938995361
    7. ' ' → logprob: -5.963367938995361
    8. '0' → logprob: -7.338367938995361
    9. '   ' → logprob: -7.463367938995361
    10. ' ),' → logprob: -8.338367462158203

Token 257: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.1613588184118271
    2. ' ' → logprob: -1.9113588333129883
    3. '0' → logprob: -6.786358833312988
    4. ' ' → logprob: -13.286358833312988
    5. ')' → logprob: -13.786358833312988
    6. ',' → logprob: -13.911358833312988
    7. '   ' → logprob: -15.036358833312988
    8. '	' → logprob: -15.786358833312988
    9. '  ' → logprob: -15.911358833312988
    10. ' )' → logprob: -16.223857879638672

Token 258: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.015246666967868805
    2. ' )' → logprob: -5.015246868133545
    3. '):' → logprob: -6.140246868133545
    4. '),' → logprob: -6.140246868133545
    5. ')
' → logprob: -6.640246868133545
    6. ').' → logprob: -7.015246868133545
    7. '   ' → logprob: -7.140246868133545
    8. '):
' → logprob: -7.640246868133545
    9. ',' → logprob: -8.015246391296387
    10. ' ' → logprob: -10.140246391296387

Token 259: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0038487708661705256
    2. ':' → logprob: -7.003848552703857
    3. '    
' → logprob: -7.128848552703857
    4. ' ' → logprob: -7.753848552703857
    5. ' if' → logprob: -7.753848552703857
    6. '  ' → logprob: -8.378849029541016
    7. ' :' → logprob: -8.503849029541016
    8. ',' → logprob: -8.628849029541016
    9. '  
' → logprob: -8.878849029541016
    10. '    ' → logprob: -9.003849029541016

Token 260: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05729994922876358
    2. ' if' → logprob: -3.932299852371216
    3. ' for' → logprob: -4.807300090789795
    4. 'if' → logprob: -5.307300090789795
    5. 'for' → logprob: -5.557300090789795
    6. 'cx' → logprob: -5.807300090789795
    7. '    
' → logprob: -5.932300090789795
    8. ' ' → logprob: -6.182300090789795
    9. '
' → logprob: -6.307300090789795
    10. ' 
' → logprob: -6.432300090789795

Token 261: ' donc' (ID: 14206)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.09579598903656
    2. ' for' → logprob: -1.59579598903656
    3. 'min' → logprob: -2.0957961082458496
    4. 'for' → logprob: -2.2207961082458496
    5. ' min' → logprob: -2.3457961082458496
    6. ' margin' → logprob: -3.5957961082458496
    7. 'possible' → logprob: -3.7207961082458496
    8. ' possible' → logprob: -3.8457961082458496
    9. 'margin' → logprob: -4.47079610824585
    10. 'cx' → logprob: -4.59579610824585

Token 262: ' cx' (ID: 44448)
  Prédit: ' r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.5458952188491821
    2. '   ' → logprob: -1.5458952188491821
    3. 'r' → logprob: -1.7958952188491821
    4. '100' → logprob: -4.795895099639893
    5. ' ' → logprob: -4.920895099639893
    6. ' for' → logprob: -5.170895099639893
    7. 'def' → logprob: -5.420895099639893
    8. ' possible' → logprob: -6.295895099639893
    9. ' minimum' → logprob: -6.420895099639893
    10. 'for' → logprob: -6.670895099639893

Token 263: ' et' (ID: 859)
  Prédit: ' >='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.14879736304283142
    2. '>=' → logprob: -2.0237972736358643
    3. '>' → logprob: -6.148797512054443
    4. ' >' → logprob: -6.523797512054443
    5. '   ' → logprob: -6.648797512054443
    6. ' ' → logprob: -7.523797512054443
    7. ',' → logprob: -8.273797035217285
    8. ' must' → logprob: -8.898797035217285
    9. '≥' → logprob: -9.898797035217285
    10. ')' → logprob: -10.273797035217285

Token 264: ' cy' (ID: 5504)
  Prédit: ' cy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cy' → logprob: -0.0844380259513855
    2. 'cy' → logprob: -2.7094380855560303
    3. ' r' → logprob: -4.709437847137451
    4. 'r' → logprob: -5.334437847137451
    5. ' ' → logprob: -8.45943832397461
    6. ' ' → logprob: -8.58443832397461
    7. ' ry' → logprob: -9.08443832397461
    8. '   ' → logprob: -11.08443832397461
    9. 'ry' → logprob: -11.45943832397461
    10. '  ' → logprob: -12.58443832397461

Token 265: ' dans' (ID: 2671)
  Prédit: ' >='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >=' → logprob: -1.019697904586792
    2. '>=' → logprob: -1.019697904586792
    3. ' doivent' → logprob: -1.894697904586792
    4. ' must' → logprob: -2.144697904586792
    5. ' doit' → logprob: -5.269698143005371
    6. 'must' → logprob: -6.519698143005371
    7. '   ' → logprob: -6.769698143005371
    8. '≥' → logprob: -6.894698143005371
    9. '>' → logprob: -7.644698143005371
    10. ' ' → logprob: -8.019698143005371

Token 266: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.1811753213405609
    2. '[r' → logprob: -2.4311752319335938
    3. ' range' → logprob: -3.4311752319335938
    4. '[' → logprob: -3.4311752319335938
    5. 'range' → logprob: -4.431175231933594
    6. 'r' → logprob: -7.806175231933594
    7. ' r' → logprob: -8.181175231933594
    8. '   ' → logprob: -8.931175231933594
    9. ' (' → logprob: -9.056175231933594
    10. ' the' → logprob: -10.306175231933594

Token 267: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0789095088839531
    2. ' r' → logprob: -2.578909397125244
    3. '   ' → logprob: -11.578909873962402
    4. ' ' → logprob: -12.578909873962402
    5. '	r' → logprob: -12.828909873962402
    6. '(r' → logprob: -13.828909873962402
    7. '0' → logprob: -14.203909873962402
    8. '[r' → logprob: -14.703909873962402
    9. ''r' → logprob: -14.703909873962402
    10. 'range' → logprob: -14.828909873962402

Token 268: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.011050889268517494
    2. ' ,' → logprob: -4.511050701141357
    3. '100' → logprob: -12.761051177978516
    4. ' ' → logprob: -16.386051177978516
    5. '   ' → logprob: -16.511051177978516
    6. ';' → logprob: -17.511051177978516
    7. ',
' → logprob: -17.886051177978516
    8. '```' → logprob: -17.886051177978516
    9. '+' → logprob: -18.761051177978516
    10. '.,' → logprob: -19.011051177978516

Token 269: ' ' (ID: 220)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.023286012932658195
    2. ' ' → logprob: -3.7732861042022705
    3. '   ' → logprob: -10.398285865783691
    4. ',' → logprob: -13.085785865783691
    5. '```' → logprob: -13.585785865783691
    6. ' ' → logprob: -13.898285865783691
    7. '  ' → logprob: -14.273285865783691
    8. ']' → logprob: -14.273285865783691
    9. '(' → logprob: -14.335785865783691
    10. '
' → logprob: -14.460785865783691

Token 270: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.002807013690471649
    2. ' ' → logprob: -5.877807140350342
    3. '   ' → logprob: -14.252806663513184
    4. ',' → logprob: -14.627806663513184
    5. '```' → logprob: -14.752806663513184
    6. '(' → logprob: -15.752806663513184
    7. ']' → logprob: -16.3153076171875
    8. '
' → logprob: -16.5653076171875
    9. '1' → logprob: -16.6278076171875
    10. '`' → logprob: -16.8153076171875

Token 271: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.07238166779279709
    2. '-' → logprob: -2.8223817348480225
    3. '-r' → logprob: -4.572381496429443
    4. ']' → logprob: -10.822381973266602
    5. ' ' → logprob: -12.322381973266602
    6. ')' → logprob: -13.822381973266602
    7. ',' → logprob: -15.072381973266602
    8. ' ' → logprob: -15.322381973266602
    9. 'r' → logprob: -15.447381973266602
    10. ' ]' → logprob: -15.822381973266602

Token 272: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.011047935113310814
    2. ' r' → logprob: -4.511047840118408
    3. ' ' → logprob: -16.26104736328125
    4. '	r' → logprob: -18.51104736328125
    5. '_r' → logprob: -19.26104736328125
    6. ')' → logprob: -19.51104736328125
    7. ' ' → logprob: -20.26104736328125
    8. ']' → logprob: -20.51104736328125
    9. '   ' → logprob: -20.88604736328125
    10. '  ' → logprob: -21.63604736328125

Token 273: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0006859870045445859
    2. ']:' → logprob: -7.625686168670654
    3. ' ]' → logprob: -8.625685691833496
    4. ')' → logprob: -11.500685691833496
    5. '])' → logprob: -13.500685691833496
    6. ']
' → logprob: -13.625685691833496
    7. '],' → logprob: -14.000685691833496
    8. ']:
' → logprob: -14.125685691833496
    9. '].' → logprob: -14.250685691833496
    10. '']' → logprob: -14.375685691833496

Token 274: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02843778394162655
    2. '    
' → logprob: -4.153437614440918
    3. '<|end|>' → logprob: -5.528437614440918
    4. '  
' → logprob: -5.903437614440918
    5. ':' → logprob: -6.528437614440918
    6. '
' → logprob: -7.028437614440918
    7. ' 
' → logprob: -7.153437614440918
    8. ',' → logprob: -7.528437614440918
    9. ' ' → logprob: -8.153437614440918
    10. '   
' → logprob: -8.278437614440918

Token 275: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09157876670360565
    2. '    
' → logprob: -2.716578722000122
    3. ' 
' → logprob: -4.966578960418701
    4. '  
' → logprob: -5.216578960418701
    5. '
' → logprob: -5.591578960418701
    6. '    ' → logprob: -6.966578960418701
    7. '   
' → logprob: -7.216578960418701
    8. '#' → logprob: -7.341578960418701
    9. 'def' → logprob: -7.716578960418701
    10. ' ' → logprob: -7.841578960418701

Token 276: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.9685162305831909
    2. '   ' → logprob: -1.218516230583191
    3. '#' (adapté à ' #') → logprob: -1.843516230583191
    4. 'return' → logprob: -3.5935163497924805
    5. 'possible' → logprob: -3.5935163497924805
    6. 'step' → logprob: -3.7185163497924805
    7. ' for' → logprob: -3.7185163497924805
    8. 'max' → logprob: -4.2185163497924805
    9. 'import' → logprob: -4.7185163497924805
    10. 'cx' → logprob: -4.9685163497924805

Token 277: ' Pour' (ID: 13931)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.632086455821991
    2. 'possible' → logprob: -1.2570865154266357
    3. 'min' → logprob: -3.0070865154266357
    4. '#' → logprob: -3.1320865154266357
    5. 'step' → logprob: -4.257086277008057
    6. 'import' → logprob: -4.632086277008057
    7. 'x' → logprob: -4.632086277008057
    8. 'def' → logprob: -4.632086277008057
    9. 'Possible' → logprob: -4.882086277008057
    10. 'max' → logprob: -5.132086277008057

Token 278: ' chaque' (ID: 21194)
  Prédit: ' cx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' cx' → logprob: -0.666911780834198
    2. 'cx' → logprob: -1.5419118404388428
    3. ' trouver' → logprob: -2.2919118404388428
    4. ' placer' → logprob: -3.1669118404388428
    5. 'placer' → logprob: -3.4169118404388428
    6. 'x' → logprob: -3.9169118404388428
    7. ' i' → logprob: -4.041911602020264
    8. ' place' → logprob: -4.416911602020264
    9. 'i' → logprob: -4.916911602020264
    10. ' x' → logprob: -5.541911602020264

Token 279: ' aig' (ID: 61108)
  Prédit: 'needle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'needle' → logprob: -0.7064039707183838
    2. ' needle' → logprob: -1.7064039707183838
    3. 'cx' → logprob: -2.456403970718384
    4. ' cx' → logprob: -2.831403970718384
    5. '(cx' → logprob: -2.956403970718384
    6. ' (' → logprob: -3.081403970718384
    7. '(x' → logprob: -4.081403732299805
    8. 'x' → logprob: -4.581403732299805
    9. '(' → logprob: -5.331403732299805
    10. 'i' → logprob: -5.393903732299805

Token 280: 'uille' (ID: 47118)
  Prédit: 'uille'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uille' → logprob: -0.026444505900144577
    2. 'needle' → logprob: -4.776444435119629
    3. 'u' → logprob: -5.151444435119629
    4. 'ule' → logprob: -5.401444435119629
    5. 'une' → logprob: -5.651444435119629
    6. 'le' → logprob: -6.776444435119629
    7. 'ne' → logprob: -7.651444435119629
    8. 'ulle' → logprob: -7.776444435119629
    9. 'gle' → logprob: -8.026444435119629
    10. 'l' → logprob: -8.776444435119629

Token 281: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5674732327461243
    2. ',' → logprob: -0.9424732327461243
    3. ' in' → logprob: -4.192473411560059
    4. ' (' → logprob: -4.942473411560059
    5. '(x' → logprob: -5.192473411560059
    6. '   ' → logprob: -5.567473411560059
    7. 'in' → logprob: -6.067473411560059
    8. ' :' → logprob: -6.317473411560059
    9. ' ,' → logprob: -6.317473411560059
    10. ':
' → logprob: -6.567473411560059

Token 282: ' la' (ID: 557)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.38862964510917664
    2. 'for' → logprob: -1.763629674911499
    3. '   ' → logprob: -2.388629674911499
    4. ' on' → logprob: -3.388629674911499
    5. ' x' → logprob: -4.51362943649292
    6. ' if' → logprob: -5.63862943649292
    7. ' il' → logprob: -6.26362943649292
    8. 'import' → logprob: -6.38862943649292
    9. 'x' → logprob: -6.51362943649292
    10. 'def' → logprob: -6.88862943649292

Token 283: ' distance' (ID: 9324)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.54042649269104
    2. ' for' → logprob: -1.66542649269104
    3. 'def' → logprob: -2.29042649269104
    4. 'import' → logprob: -3.41542649269104
    5. 'min' → logprob: -3.66542649269104
    6. 'distance' → logprob: -4.415426254272461
    7. 'x' → logprob: -4.665426254272461
    8. 'r' → logprob: -5.040426254272461
    9. 'n' → logprob: -5.165426254272461
    10. ' min' → logprob: -5.290426254272461

Token 284: ' verticale' (ID: 199428)
  Prédit: '_x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_x' → logprob: -1.2696059942245483
    2. ' minimale' → logprob: -2.144606113433838
    3. '_token' → logprob: -2.519606113433838
    4. ' =' → logprob: -2.644606113433838
    5. ' (' → logprob: -3.144606113433838
    6. '_min' → logprob: -3.269606113433838
    7. 'x' → logprob: -3.394606113433838
    8. '(' → logprob: -3.394606113433838
    9. '(x' → logprob: -3.519606113433838
    10. ')' → logprob: -3.519606113433838

Token 285: ' entre' (ID: 3853)
  Prédit: ' between'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' between' → logprob: -0.754137396812439
    2. ' entre' → logprob: -1.379137396812439
    3. 'from' → logprob: -2.3791375160217285
    4. 'between' → logprob: -2.6291375160217285
    5. ' minimale' → logprob: -3.8791375160217285
    6. ' =' → logprob: -4.1291375160217285
    7. ' from' → logprob: -4.2541375160217285
    8. '   ' → logprob: -4.8791375160217285
    9. 'entre' → logprob: -4.8791375160217285
    10. ' (' → logprob: -5.1291375160217285

Token 286: ' le' (ID: 505)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.8005385994911194
    2. ' le' → logprob: -1.3005385398864746
    3. ' la' → logprob: -2.5505385398864746
    4. 'la' → logprob: -2.9255385398864746
    5. 'r' → logprob: -3.3005385398864746
    6. ' r' → logprob: -3.6755385398864746
    7. ' son' → logprob: -3.8005385398864746
    8. 'l' → logprob: -4.300538539886475
    9. 'leur' → logprob: -4.425538539886475
    10. 'son' → logprob: -4.550538539886475

Token 287: ' centre' (ID: 13268)
  Prédit: 'centre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'centre' → logprob: -0.24423961341381073
    2. ' centre' → logprob: -1.7442395687103271
    3. 'center' → logprob: -4.119239807128906
    4. 'ball' → logprob: -4.994239807128906
    5. 'point' → logprob: -5.244239807128906
    6. ' rayon' → logprob: -5.869239807128906
    7. 'cent' → logprob: -6.244239807128906
    8. 'ray' → logprob: -6.244239807128906
    9. ' center' → logprob: -6.369239807128906
    10. ' point' → logprob: -6.869239807128906

Token 288: ' du' (ID: 1462)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0991071462631226
    2. '   ' → logprob: -1.2241071462631226
    3. ' et' → logprob: -2.349107265472412
    4. ' du' → logprob: -2.474107265472412
    5. ' ,' → logprob: -2.974107265472412
    6. ' (' → logprob: -2.974107265472412
    7. 'def' → logprob: -4.349107265472412
    8. ' =' → logprob: -4.474107265472412
    9. '(' → logprob: -4.724107265472412
    10. '    ' → logprob: -5.099107265472412

Token 289: ' ballon' (ID: 135405)
  Prédit: 'ball'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ball' → logprob: -0.4415951669216156
    2. ' ballon' → logprob: -1.066595196723938
    3. ' balloon' → logprob: -4.691595077514648
    4. 'bal' → logprob: -6.941595077514648
    5. ' ball' → logprob: -7.191595077514648
    6. 'b' → logprob: -7.691595077514648
    7. 'sphere' → logprob: -7.941595077514648
    8. ' sphere' → logprob: -8.441595077514648
    9. 's' → logprob: -8.566595077514648
    10. 'c' → logprob: -9.566595077514648

Token 290: ' (' (ID: 350)
  Prédit: ' et'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' et' → logprob: -1.1255571842193604
    2. ' and' → logprob: -1.7505571842193604
    3. '<|end|>' → logprob: -1.7505571842193604
    4. 'et' → logprob: -1.8755571842193604
    5. 'and' → logprob: -2.1255571842193604
    6. ',' → logprob: -4.250556945800781
    7. '   ' → logprob: -4.375556945800781
    8. '#' → logprob: -5.125556945800781
    9. ' (' → logprob: -5.250556945800781
    10. '  ' → logprob: -6.125556945800781

Token 291: 'z' (ID: 89)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.1320534944534302
    2. ',' → logprob: -1.2570534944534302
    3. ' ,' → logprob: -1.7570534944534302
    4. 'r' → logprob: -2.3820533752441406
    5. ')' → logprob: -3.3820533752441406
    6. ' (' → logprob: -3.5070533752441406
    7. 'cx' → logprob: -4.007053375244141
    8. ' x' → logprob: -4.882053375244141
    9. '(cx' → logprob: -4.882053375244141
    10. 'z' → logprob: -5.257053375244141

Token 292: '=r' (ID: 67845)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.05116064473986626
    2. ')' → logprob: -4.17616081237793
    3. ' =' → logprob: -4.42616081237793
    4. '=r' → logprob: -4.80116081237793
    5. ' -' → logprob: -4.92616081237793
    6. '-' → logprob: -5.30116081237793
    7. 'r' → logprob: -7.17616081237793
    8. ',' → logprob: -8.55116081237793
    9. '-r' → logprob: -8.80116081237793
    10. ' +' → logprob: -8.80116081237793

Token 293: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04480448737740517
    2. ' -' → logprob: -3.419804573059082
    3. '-' → logprob: -5.044804573059082
    4. '+' → logprob: -6.419804573059082
    5. ' +' → logprob: -6.669804573059082
    6. ' )' → logprob: -6.794804573059082
    7. '-r' → logprob: -8.544804573059082
    8. 'r' → logprob: -9.544804573059082
    9. ')
' → logprob: -10.044804573059082
    10. '),' → logprob: -10.169804573059082

Token 294: '   ' (ID: 271)
  Prédit: ' et'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' et' → logprob: -0.850935161113739
    2. ' and' → logprob: -1.2259352207183838
    3. '   ' → logprob: -1.7259352207183838
    4. 'et' → logprob: -3.350935220718384
    5. 'and' → logprob: -3.600935220718384
    6. '#' → logprob: -4.100934982299805
    7. ')' → logprob: -4.975934982299805
    8. ' #' → logprob: -5.350934982299805
    9. ',' → logprob: -5.475934982299805
    10. '<|end|>' → logprob: -6.100934982299805

Token 295: ' #' (ID: 1069)
  Prédit: ' et'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' et' → logprob: -0.2244696319103241
    2. ' and' → logprob: -2.3494696617126465
    3. ')' → logprob: -2.9744696617126465
    4. '   ' → logprob: -3.5994696617126465
    5. '#' (adapté à ' #') → logprob: -4.9744696617126465
    6. 'et' → logprob: -4.9744696617126465
    7. 'and' → logprob: -5.2244696617126465
    8. ',' → logprob: -5.7244696617126465
    9. ' #' → logprob: -6.7244696617126465
    10. '  ' → logprob: -6.9744696617126465

Token 296: ' et' (ID: 859)
  Prédit: ' et'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' et' → logprob: -0.8191738128662109
    2. 'et' → logprob: -1.694173812866211
    3. 'and' → logprob: -1.694173812866211
    4. ' and' → logprob: -1.944173812866211
    5. '#' → logprob: -3.819173812866211
    6. '-' → logprob: -5.319173812866211
    7. ',' → logprob: -5.319173812866211
    8. 'import' → logprob: -5.319173812866211
    9. '   ' → logprob: -5.944173812866211
    10. ')' → logprob: -6.069173812866211

Token 297: ' le' (ID: 505)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.8825643658638
    2. 'l' → logprob: -1.2575643062591553
    3. 'la' → logprob: -2.8825643062591553
    4. ' l' → logprob: -3.0075643062591553
    5. '(h' → logprob: -3.1325643062591553
    6. ' h' → logprob: -3.2575643062591553
    7. ' la' → logprob: -3.3825643062591553
    8. ' (' → logprob: -4.007564544677734
    9. 'son' → logprob: -4.007564544677734
    10. 'les' → logprob: -4.507564544677734

Token 298: ' sommet' (ID: 130502)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.25824129581451416
    2. ' h' → logprob: -2.6332411766052246
    3. 'a' → logprob: -2.7582411766052246
    4. 'ha' → logprob: -3.3832411766052246
    5. 'needle' → logprob: -3.6332411766052246
    6. 'hi' → logprob: -4.758241176605225
    7. ' needle' → logprob: -5.008241176605225
    8. ' aigu' → logprob: -5.258241176605225
    9. ' a' → logprob: -6.383241176605225
    10. 'pi' → logprob: -6.633241176605225

Token 299: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.13170935213565826
    2. ' (' → logprob: -2.756709337234497
    3. 'de' → logprob: -3.256709337234497
    4. ' z' → logprob: -5.131709575653076
    5. '   ' → logprob: -5.381709575653076
    6. ' of' → logprob: -5.756709575653076
    7. '(' → logprob: -6.256709575653076
    8. 'z' → logprob: -6.881709575653076
    9. ' =' → logprob: -7.506709575653076
    10. '(z' → logprob: -7.506709575653076

Token 300: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.022270595654845238
    2. 'a' → logprob: -4.647270679473877
    3. ' l' → logprob: -4.897270679473877
    4. 'la' → logprob: -5.522270679473877
    5. 'cha' → logprob: -8.897270202636719
    6. 'needle' → logprob: -9.334770202636719
    7. ''a' → logprob: -9.834770202636719
    8. '  ' → logprob: -10.022270202636719
    9. ' ' → logprob: -10.272270202636719
    10. '   ' → logprob: -10.334770202636719

Token 301: ''a' (ID: 10443)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.06468111276626587
    2. ''a' → logprob: -2.939681053161621
    3. 'needle' → logprob: -5.064681053161621
    4. 'ball' → logprob: -6.064681053161621
    5. '```' → logprob: -8.314681053161621
    6. ' aig' → logprob: -8.314681053161621
    7. '’a' → logprob: -9.877181053161621
    8. ' a' → logprob: -10.064681053161621
    9. ' needle' → logprob: -10.314681053161621
    10. '``' → logprob: -10.314681053161621

Token 302: 'ig' (ID: 343)
  Prédit: 'ig'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ig' → logprob: -0.0007738933200016618
    2. 'igu' → logprob: -8.000773429870605
    3. 'g' → logprob: -8.625773429870605
    4. 'needle' → logprob: -9.500773429870605
    5. 'gu' → logprob: -10.000773429870605
    6. '"' → logprob: -10.250773429870605
    7. '
' → logprob: -12.063273429870605
    8. '   ' → logprob: -12.438273429870605
    9. 'a' → logprob: -12.438273429870605
    10. '`' → logprob: -12.563273429870605

Token 303: 'uille' (ID: 47118)
  Prédit: 'uille'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uille' → logprob: -0.007785839028656483
    2. 'u' → logprob: -5.757785797119141
    3. 'le' → logprob: -6.507785797119141
    4. 'ille' → logprob: -7.382785797119141
    5. 'needle' → logprob: -7.382785797119141
    6. 'ulle' → logprob: -7.382785797119141
    7. 'e' → logprob: -7.632785797119141
    8. 'ule' → logprob: -8.50778579711914
    9. 'uil' → logprob: -9.25778579711914
    10. 'lle' → logprob: -9.38278579711914

Token 304: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.559037446975708
    2. ' est' → logprob: -1.434037446975708
    3. ' doit' → logprob: -2.309037446975708
    4. ')' → logprob: -3.684037446975708
    5. '(' → logprob: -4.059037208557129
    6. '(i' → logprob: -4.684037208557129
    7. '(z' → logprob: -5.184037208557129
    8. 'z' → logprob: -5.434037208557129
    9. '(x' → logprob: -5.559037208557129
    10. ',' → logprob: -5.934037208557129

Token 305: 'z' (ID: 89)
  Prédit: 'z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -1.13413405418396
    2. '(x' → logprob: -1.63413405418396
    3. 'x' → logprob: -1.75913405418396
    4. ')' → logprob: -2.88413405418396
    5. ' (' → logprob: -3.00913405418396
    6. 'h' → logprob: -3.00913405418396
    7. '(' → logprob: -3.13413405418396
    8. ' needles' → logprob: -3.13413405418396
    9. 'xi' → logprob: -4.134134292602539
    10. ',' → logprob: -4.134134292602539

Token 306: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8253628611564636
    2. '=r' → logprob: -1.9503629207611084
    3. '+r' → logprob: -2.7003629207611084
    4. '-r' → logprob: -2.9503629207611084
    5. ' -' → logprob: -3.0753629207611084
    6. '_i' → logprob: -3.3253629207611084
    7. ' +' → logprob: -3.3253629207611084
    8. '+h' → logprob: -3.4503629207611084
    9. '+' → logprob: -3.8253629207611084
    10. 'r' → logprob: -3.9503629207611084

Token 307: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.0028033405542373657
    2. ' h' → logprob: -6.377803325653076
    3. 'hi' → logprob: -7.377803325653076
    4. ' needles' → logprob: -8.252803802490234
    5. 'needle' → logprob: -9.627803802490234
    6. 'need' → logprob: -9.877803802490234
    7. '   ' → logprob: -10.002803802490234
    8. '	h' → logprob: -11.815303802490234
    9. ' ' → logprob: -12.377803802490234
    10. '
' → logprob: -12.690303802490234

Token 308: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.011422444134950638
    2. '[i' → logprob: -4.511422634124756
    3. 'i' → logprob: -8.386422157287598
    4. ')' → logprob: -9.511422157287598
    5. '   ' → logprob: -10.386422157287598
    6. '[' → logprob: -11.386422157287598
    7. '_n' → logprob: -11.761422157287598
    8. '[n' → logprob: -13.136422157287598
    9. 'needle' → logprob: -13.136422157287598
    10. '
' → logprob: -13.386422157287598

Token 309: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04260344058275223
    2. ' -' → logprob: -3.4176034927368164
    3. ' )' → logprob: -6.042603492736816
    4. ' +' → logprob: -6.292603492736816
    5. '-' → logprob: -6.542603492736816
    6. '-r' → logprob: -6.792603492736816
    7. '+' → logprob: -7.542603492736816
    8. 'r' → logprob: -7.792603492736816
    9. '   ' → logprob: -8.167603492736816
    10. '),' → logprob: -8.917603492736816

Token 310: ' est' (ID: 893)
  Prédit: ' doit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' doit' → logprob: -0.48887863755226135
    2. ',' → logprob: -2.1138787269592285
    3. '   ' → logprob: -2.2388787269592285
    4. '>' → logprob: -2.9888787269592285
    5. ' must' → logprob: -3.9888787269592285
    6. ' est' → logprob: -4.1138787269592285
    7. ' >=' → logprob: -4.3638787269592285
    8. ')' → logprob: -4.4888787269592285
    9. ' >' → logprob: -4.8638787269592285
    10. '>=' → logprob: -5.4888787269592285

Token 311: ' |' (ID: 1022)
  Prédit: ' abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' abs' → logprob: -0.23213143646717072
    2. 'abs' → logprob: -1.7321314811706543
    3. '    ' → logprob: -4.607131481170654
    4. ' r' → logprob: -5.232131481170654
    5. ' at' → logprob: -5.357131481170654
    6. ' ' → logprob: -6.107131481170654
    7. 'r' → logprob: -6.482131481170654
    8. ' >=' → logprob: -6.732131481170654
    9. ' au' → logprob: -6.732131481170654
    10. '   ' → logprob: -6.857131481170654

Token 312: 'h' (ID: 71)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.07746797800064087
    2. 'h' → logprob: -3.202467918395996
    3. ' r' → logprob: -3.577467918395996
    4. ' h' → logprob: -5.202467918395996
    5. '(r' → logprob: -8.952467918395996
    6. 'z' → logprob: -9.327467918395996
    7. '(' → logprob: -10.077467918395996
    8. '(h' → logprob: -10.202467918395996
    9. ' (' → logprob: -10.452467918395996
    10. ' ' → logprob: -10.577467918395996

Token 313: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.00010330478107789531
    2. 'i' → logprob: -9.375102996826172
    3. 'r' → logprob: -11.625102996826172
    4. '[i' → logprob: -12.500102996826172
    5. '_r' → logprob: -12.625102996826172
    6. ' -' → logprob: -13.625102996826172
    7. '   ' → logprob: -14.750102996826172
    8. '_' → logprob: -15.625102996826172
    9. ' i' → logprob: -15.750102996826172
    10. '```' → logprob: -16.375102996826172

Token 314: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.029873251914978027
    2. '-' → logprob: -3.5298733711242676
    3. '-r' → logprob: -9.40487289428711
    4. ' ' → logprob: -10.40487289428711
    5. ' ' → logprob: -12.52987289428711
    6. '   ' → logprob: -13.27987289428711
    7. 'r' → logprob: -13.40487289428711
    8. '  ' → logprob: -13.77987289428711
    9. '[' → logprob: -14.15487289428711
    10. ' r' → logprob: -15.02987289428711

Token 315: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.20141470432281494
    2. ' r' → logprob: -1.701414704322815
    3. ' ' → logprob: -14.201415061950684
    4. ' ' → logprob: -14.826415061950684
    5. '(r' → logprob: -16.326414108276367
    6. '```' → logprob: -16.826414108276367
    7. '	r' → logprob: -17.076414108276367
    8. '_r' → logprob: -17.201414108276367
    9. ' (' → logprob: -17.451414108276367
    10. '   ' → logprob: -17.951414108276367

Token 316: '|' (ID: 91)
  Prédit: '|'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '|' → logprob: -0.000845364120323211
    2. ' |' → logprob: -7.750845432281494
    3. ')' → logprob: -8.500844955444336
    4. '|
' → logprob: -8.625844955444336
    5. ')|' → logprob: -11.375844955444336
    6. '|`
' → logprob: -12.625844955444336
    7. '   ' → logprob: -13.000844955444336
    8. '|\' → logprob: -13.250844955444336
    9. ' ' → logprob: -13.375844955444336
    10. '|,
' → logprob: -13.500844955444336

Token 317: '.' (ID: 13)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22715920209884644
    2. '<|end|>' → logprob: -1.9771592617034912
    3. ',' → logprob: -3.352159261703491
    4. '    
' → logprob: -4.602159023284912
    5. '<|end|>' → logprob: -5.102159023284912
    6. '  ' → logprob: -5.727159023284912
    7. '    ' → logprob: -6.102159023284912
    8. ')' → logprob: -6.102159023284912
    9. '.' → logprob: -6.102159023284912
    10. ' ' → logprob: -6.477159023284912

Token 318: ' La' (ID: 3038)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09449073672294617
    2. ' ' → logprob: -3.5944907665252686
    3. '<|end|>' → logprob: -3.5944907665252686
    4. '    ' → logprob: -4.4694905281066895
    5. '    
' → logprob: -4.7194905281066895
    6. ' 
' → logprob: -4.9694905281066895
    7. '\n' → logprob: -6.5944905281066895
    8. '  ' → logprob: -6.9694905281066895
    9. '  
' → logprob: -6.9694905281066895
    10. '<|end|>' → logprob: -7.0944905281066895

Token 319: ' sph' (ID: 66674)
  Prédit: ' distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' distance' → logprob: -0.44399216771125793
    2. 'distance' → logprob: -1.5689921379089355
    3. ' horizontal' → logprob: -2.4439921379089355
    4. ' dist' → logprob: -4.1939921379089355
    5. ' base' → logprob: -4.9439921379089355
    6. 'horizontal' → logprob: -4.9439921379089355
    7. '#' → logprob: -5.8189921379089355
    8. 'dist' → logprob: -5.9439921379089355
    9. ' horizont' → logprob: -6.0689921379089355
    10. ' vertical' → logprob: -6.3189921379089355

Token 320: 'ère' (ID: 4346)
  Prédit: 'ère'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ère' → logprob: -0.02495906688272953
    2. 'è' → logprob: -4.149959087371826
    3. '`' → logprob: -5.774959087371826
    4. '#' → logprob: -7.524959087371826
    5. '   ' → logprob: -7.649959087371826
    6. 'érique' → logprob: -7.774959087371826
    7. '[' → logprob: -7.899959087371826
    8. '**' → logprob: -8.024958610534668
    9. '\' → logprob: -8.149958610534668
    10. '?' → logprob: -8.274958610534668

Token 321: ' a' (ID: 261)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 322: ' rayon' (ID: 80967)
  Prédit: ' une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.5189745426177979
    2. ' un' → logprob: -1.5189745426177979
    3. 'ray' → logprob: -2.768974542617798
    4. 'un' → logprob: -3.518974542617798
    5. ' rayon' → logprob: -3.893974542617798
    6. ' ray' → logprob: -4.018974304199219
    7. 'une' → logprob: -4.518974304199219
    8. ' au' → logprob: -4.768974304199219
    9. ' radius' → logprob: -4.768974304199219
    10. ' ' → logprob: -5.143974304199219

Token 323: ' r' (ID: 428)
  Prédit: ' r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.21005108952522278
    2. 'r' → logprob: -1.9600510597229004
    3. ' ' → logprob: -3.0850510597229004
    4. ' >=' → logprob: -7.0850510597229
    5. ' -' → logprob: -7.8350510597229
    6. ',' → logprob: -8.335051536560059
    7. ' )' → logprob: -8.960051536560059
    8. ' >' → logprob: -9.147551536560059
    9. ' ,' → logprob: -9.147551536560059
    10. '```' → logprob: -9.460051536560059

Token 324: ',
' (ID: 412)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.014128250069916248
    2. '   ' → logprob: -5.1391282081604
    3. ',
' → logprob: -5.8891282081604
    4. '.' → logprob: -6.2641282081604
    5. ' ,' → logprob: -6.8891282081604
    6. '<|end|>' → logprob: -7.5141282081604
    7. ')' → logprob: -7.6391282081604
    8. ' et' → logprob: -8.389128684997559
    9. '    
' → logprob: -8.514128684997559
    10. '  
' → logprob: -8.514128684997559

Token 325: '   ' (ID: 271)
  Prédit: ' donc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' donc' → logprob: -0.6533471941947937
    2. '   ' → logprob: -1.0283472537994385
    3. '<|end|>' → logprob: -3.6533472537994385
    4. ' et' → logprob: -3.7783472537994385
    5. ' so' → logprob: -4.278347015380859
    6. 'et' → logprob: -4.403347015380859
    7. '    ' → logprob: -4.778347015380859
    8. ' ' → logprob: -4.903347015380859
    9. ' and' → logprob: -4.903347015380859
    10. ',' → logprob: -5.028347015380859

Token 326: ' #' (ID: 1069)
  Prédit: ' donc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' donc' → logprob: -0.2517624795436859
    2. '   ' → logprob: -1.7517625093460083
    3. 'don' → logprob: -4.626762390136719
    4. ' et' → logprob: -4.626762390136719
    5. 'et' → logprob: -5.001762390136719
    6. '#' (adapté à ' #') → logprob: -5.251762390136719
    7. 'so' → logprob: -5.501762390136719
    8. ' so' → logprob: -5.626762390136719
    9. ' il' → logprob: -5.876762390136719
    10. ',' → logprob: -6.501762390136719

Token 327: ' donc' (ID: 14206)
  Prédit: ' donc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' donc' → logprob: -0.08630082756280899
    2. '#' → logprob: -4.586300849914551
    3. 'don' → logprob: -4.711300849914551
    4. 'et' → logprob: -4.836300849914551
    5. '   ' → logprob: -4.836300849914551
    6. 'so' → logprob: -4.961300849914551
    7. ' et' → logprob: -5.086300849914551
    8. ' ' → logprob: -5.086300849914551
    9. ' so' → logprob: -5.461300849914551
    10. ' #' → logprob: -5.836300849914551

Token 328: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -1.4396775960922241
    2. 'la' → logprob: -1.9396775960922241
    3. '   ' → logprob: -2.4396777153015137
    4. ' math' → logprob: -2.4396777153015137
    5. 'math' → logprob: -2.5646777153015137
    6. 'if' → logprob: -2.6896777153015137
    7. 'import' → logprob: -2.8146777153015137
    8. '(math' → logprob: -2.8146777153015137
    9. 'abs' → logprob: -3.3146777153015137
    10. ' (' → logprob: -3.6896777153015137

Token 329: ' distance' (ID: 9324)
  Prédit: 'distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'distance' → logprob: -0.06365948170423508
    2. ' distance' → logprob: -2.813659429550171
    3. 'dist' → logprob: -7.56365966796875
    4. 's' → logprob: -8.56365966796875
    5. 'surface' → logprob: -8.56365966796875
    6. 'd' → logprob: -9.43865966796875
    7. 'vertical' → logprob: -9.56365966796875
    8. 'diff' → logprob: -9.93865966796875
    9. 'sphere' → logprob: -9.93865966796875
    10. '#' → logprob: -10.06365966796875

Token 330: ' horizont' (ID: 69308)
  Prédit: ' horizont'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' horizont' → logprob: -0.24660585820674896
    2. 'h' → logprob: -1.8716058731079102
    3. ' ' → logprob: -4.37160587310791
    4. ' verticale' → logprob: -4.62160587310791
    5. 'horizontal' → logprob: -4.74660587310791
    6. ' minimale' → logprob: -5.24660587310791
    7. ' au' → logprob: -5.62160587310791
    8. '   ' → logprob: -5.62160587310791
    9. 'eu' → logprob: -5.74660587310791
    10. 'au' → logprob: -5.87160587310791

Token 331: 'ale' (ID: 1167)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.3660237789154053
    2. ' ' → logprob: -1.3660237789154053
    3. '_' → logprob: -3.8660237789154053
    4. ' e' → logprob: -4.366024017333984
    5. 'a' → logprob: -5.491024017333984
    6. '   ' → logprob: -5.991024017333984
    7. '  ' → logprob: -6.116024017333984
    8. 'aire' → logprob: -6.616024017333984
    9. ' a' → logprob: -6.991024017333984
    10. ')' → logprob: -7.116024017333984

Token 332: ' entre' (ID: 3853)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 333: ' centre' (ID: 13268)
  Prédit: ' le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.7096245288848877
    2. '(cx' → logprob: -1.7096245288848877
    3. 'le' → logprob: -2.0846245288848877
    4. ' cx' → logprob: -2.2096245288848877
    5. ' (' → logprob: -3.2096245288848877
    6. 'cx' → logprob: -3.4596245288848877
    7. ' the' → logprob: -5.084624290466309
    8. ' la' → logprob: -5.834624290466309
    9. 'the' → logprob: -5.834624290466309
    10. '(' → logprob: -6.084624290466309

Token 334: ' ballon' (ID: 135405)
  Prédit: ' du'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' du' → logprob: -0.347065806388855
    2. ' ' → logprob: -2.9720659255981445
    3. ',' → logprob: -3.2220659255981445
    4. ' )' → logprob: -3.3470659255981445
    5. ' ,' → logprob: -3.3470659255981445
    6. '   ' → logprob: -3.5970659255981445
    7. '    ' → logprob: -4.3470659255981445
    8. ' =' → logprob: -4.4720659255981445
    9. ' (' → logprob: -4.5970659255981445
    10. ')' → logprob: -4.5970659255981445

Token 335: ' et' (ID: 859)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6005376577377319
    2. ',' → logprob: -1.725537657737732
    3. ' ,' → logprob: -2.6005377769470215
    4. ' )' → logprob: -2.8505377769470215
    5. ' (' → logprob: -3.3505377769470215
    6. ' doit' → logprob: -3.7255377769470215
    7. ' must' → logprob: -3.9755377769470215
    8. '   ' → logprob: -4.4755377769470215
    9. ')' → logprob: -4.6005377769470215
    10. '<|end|>' → logprob: -4.7255377769470215

Token 336: ' aig' (ID: 61108)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.08722168952226639
    2. '(x' → logprob: -2.712221622467041
    3. ' l' → logprob: -5.337221622467041
    4. '(' → logprob: -5.462221622467041
    5. ' les' → logprob: -6.337221622467041
    6. ' needles' → logprob: -6.337221622467041
    7. '(s' → logprob: -6.587221622467041
    8. '(cx' → logprob: -7.087221622467041
    9. 'les' → logprob: -7.837221622467041
    10. 'l' → logprob: -7.837221622467041

Token 337: 'uille' (ID: 47118)
  Prédit: 'uille'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uille' → logprob: -0.026728447526693344
    2. 'u' → logprob: -3.776728391647339
    3. 'needle' → logprob: -6.276728630065918
    4. 'uil' → logprob: -7.526728630065918
    5. 'ulle' → logprob: -8.776728630065918
    6. ' needles' → logprob: -9.026728630065918
    7. ' needle' → logprob: -9.276728630065918
    8. '   ' → logprob: -10.026728630065918
    9. 'ille' → logprob: -10.026728630065918
    10. 'n' → logprob: -10.276728630065918

Token 338: ' doit' (ID: 21822)
  Prédit: ' doit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' doit' → logprob: -0.0876329317688942
    2. ' must' → logprob: -3.087632894515991
    3. '   ' → logprob: -4.08763313293457
    4. ' ' → logprob: -5.33763313293457
    5. ' doivent' → logprob: -6.21263313293457
    6. ' )' → logprob: -6.21263313293457
    7. ')' → logprob: -6.21263313293457
    8. ' (' → logprob: -6.58763313293457
    9. ' est' → logprob: -6.96263313293457
    10. '>' → logprob: -7.21263313293457

Token 339: ' être' (ID: 9104)
  Prédit: ' être'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' être' → logprob: -0.45630204677581787
    2. ' be' → logprob: -1.3313020467758179
    3. 'être' → logprob: -2.8313021659851074
    4. '<|end|>' → logprob: -4.456302165985107
    5. ' etre' → logprob: -4.956302165985107
    6. ' >=' → logprob: -5.081302165985107
    7. '>' → logprob: -5.581302165985107
    8. ' ' → logprob: -5.831302165985107
    9. '>=' → logprob: -5.956302165985107
    10. ' >' → logprob: -5.956302165985107

Token 340: ' au' (ID: 2791)
  Prédit: ' >='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -1.0110570192337036
    2. ' >' → logprob: -1.3860570192337036
    3. '>' → logprob: -1.5110570192337036
    4. '>=' → logprob: -2.011056900024414
    5. '≥' → logprob: -4.886056900024414
    6. '    ' → logprob: -5.011056900024414
    7. ' ' → logprob: -5.261056900024414
    8. ' ≥' → logprob: -5.511056900024414
    9. 'strict' → logprob: -6.386056900024414
    10. ' au' → logprob: -6.386056900024414

Token 341: ' moins' (ID: 15924)
  Prédit: 'moins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'moins' → logprob: -0.4171573519706726
    2. ' moins' → logprob: -1.2921574115753174
    3. 'least' → logprob: -3.2921574115753174
    4. ' least' → logprob: -4.167157173156738
    5. ' menos' → logprob: -5.542157173156738
    6. 'menos' → logprob: -6.292157173156738
    7. 'mo' → logprob: -6.417157173156738
    8. '   ' → logprob: -6.792157173156738
    9. 'plus' → logprob: -7.042157173156738
    10. 'm' → logprob: -7.417157173156738

Token 342: '
' (ID: 198)
  Prédit: ' r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.25566545128822327
    2. 'r' → logprob: -1.5056654214859009
    3. '2' → logprob: -6.255665302276611
    4. ' ' → logprob: -6.380665302276611
    5. ' '' → logprob: -10.75566577911377
    6. ''' → logprob: -11.00566577911377
    7. ' (' → logprob: -11.38066577911377
    8. ' math' → logprob: -11.38066577911377
    9. '   ' → logprob: -11.50566577911377
    10. '(r' → logprob: -12.13066577911377

Token 343: '   ' (ID: 271)
  Prédit: ' r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.22942082583904266
    2. 'r' → logprob: -1.604420781135559
    3. ' ' → logprob: -5.7294206619262695
    4. '   ' → logprob: -7.8544206619262695
    5. '    ' → logprob: -8.60442066192627
    6. ''' → logprob: -10.60442066192627
    7. ' ' → logprob: -11.10442066192627
    8. ')' → logprob: -11.22942066192627
    9. ' (' → logprob: -11.60442066192627
    10. 's' → logprob: -11.97942066192627

Token 344: ' #' (ID: 1069)
  Prédit: ' r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.5761446952819824
    2. 'r' → logprob: -0.8261446952819824
    3. ' ' → logprob: -8.70114517211914
    4. ' math' → logprob: -10.95114517211914
    5. '2' → logprob: -12.57614517211914
    6. '   ' → logprob: -12.95114517211914
    7. ' abs' → logprob: -13.07614517211914
    8. ' (' → logprob: -13.20114517211914
    9. 'abs' → logprob: -13.32614517211914
    10. 'int' → logprob: -13.82614517211914

Token 345: ' sqrt' (ID: 44237)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.12234466522932053
    2. '2' → logprob: -2.497344732284546
    3. ' r' → logprob: -3.497344732284546
    4. ' ' → logprob: -5.997344493865967
    5. '0' → logprob: -10.122344970703125
    6. '1' → logprob: -10.872344970703125
    7. '   ' → logprob: -11.997344970703125
    8. ' math' → logprob: -12.247344970703125
    9. '```' → logprob: -12.372344970703125
    10. '3' → logprob: -12.872344970703125

Token 346: '(r' (ID: 4729)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.6213343143463135
    2. '(r' → logprob: -1.2463343143463135
    3. '(' → logprob: -1.7463343143463135
    4. 'r' → logprob: -7.746334075927734
    5. ' (' → logprob: -8.996334075927734
    6. '(max' → logprob: -9.246334075927734
    7. '(x' → logprob: -10.246334075927734
    8. '```' → logprob: -10.371334075927734
    9. '(
' → logprob: -10.996334075927734
    10. ' ' → logprob: -11.746334075927734

Token 347: '^' (ID: 61)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.004919093102216721
    2. '*' → logprob: -5.754919052124023
    3. '2' → logprob: -6.504919052124023
    4. ')' → logprob: -9.129919052124023
    5. ' **' → logprob: -9.629919052124023
    6. '²' → logprob: -10.379919052124023
    7. ')**' → logprob: -10.879919052124023
    8. ' *' → logprob: -12.004919052124023
    9. '*r' → logprob: -12.379919052124023
    10. '^' → logprob: -12.504919052124023

Token 348: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00036394817288964987
    2. '**' → logprob: -8.125364303588867
    3. '*' → logprob: -10.875364303588867
    4. '
' → logprob: -11.250364303588867
    5. ')' → logprob: -11.625364303588867
    6. ' ' → logprob: -11.625364303588867
    7. '²' → logprob: -11.750364303588867
    8. '

' → logprob: -12.250364303588867
    9. '```' → logprob: -13.500364303588867
    10. ')**' → logprob: -14.375364303588867

Token 349: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.02511601895093918
    2. '-' → logprob: -4.275115966796875
    3. ')' → logprob: -4.525115966796875
    4. ' ' → logprob: -10.525115966796875
    5. '2' → logprob: -12.025115966796875
    6. ',' → logprob: -12.275115966796875
    7. '"' → logprob: -12.525115966796875
    8. '*' → logprob: -12.775115966796875
    9. '),' → logprob: -12.900115966796875
    10. ' ' → logprob: -12.900115966796875

Token 350: ' (' (ID: 350)
  Prédit: '(h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.12295164167881012
    2. '(abs' → logprob: -2.7479517459869385
    3. ' (' → logprob: -2.9979517459869385
    4. '(r' → logprob: -7.372951507568359
    5. 'abs' → logprob: -7.497951507568359
    6. '(' → logprob: -8.12295150756836
    7. '((' → logprob: -8.99795150756836
    8. ' abs' → logprob: -9.37295150756836
    9. '   ' → logprob: -10.74795150756836
    10. '(math' → logprob: -12.24795150756836

Token 351: 'h' (ID: 71)
  Prédit: '(h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.01858275942504406
    2. '(abs' → logprob: -4.268582820892334
    3. ' (' → logprob: -5.893582820892334
    4. 'abs' → logprob: -6.643582820892334
    5. '(r' → logprob: -9.393582344055176
    6. ' abs' → logprob: -9.393582344055176
    7. 'h' → logprob: -9.643582344055176
    8. '|' → logprob: -10.018582344055176
    9. '(' → logprob: -10.018582344055176
    10. '((' → logprob: -11.143582344055176

Token 352: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.007164535578340292
    2. ' -' → logprob: -5.382164478302002
    3. '-' → logprob: -6.882164478302002
    4. '-i' → logprob: -7.382164478302002
    5. '-r' → logprob: -7.882164478302002
    6. '_' → logprob: -8.50716495513916
    7. 'i' → logprob: -9.13216495513916
    8. '   ' → logprob: -9.63216495513916
    9. '_r' → logprob: -9.88216495513916
    10. 'r' → logprob: -10.88216495513916

Token 353: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.038234490901231766
    2. '-' → logprob: -3.2882344722747803
    3. '-r' → logprob: -8.66323471069336
    4. ')' → logprob: -11.16323471069336
    5. ' ' → logprob: -13.41323471069336
    6. '  ' → logprob: -14.03823471069336
    7. '   ' → logprob: -14.41323471069336
    8. ' r' → logprob: -14.66323471069336
    9. '-)' → logprob: -14.78823471069336
    10. ' ' → logprob: -14.91323471069336

Token 354: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0022771733347326517
    2. ' r' → logprob: -6.127277374267578
    3. '2' → logprob: -10.502277374267578
    4. '(r' → logprob: -10.877277374267578
    5. ')' → logprob: -11.377277374267578
    6. ' ' → logprob: -12.127277374267578
    7. '1' → logprob: -12.127277374267578
    8. ' (' → logprob: -12.502277374267578
    9. 'z' → logprob: -12.627277374267578
    10. '_r' → logprob: -12.752277374267578

Token 355: ')^' (ID: 73602)
  Prédit: ')**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')**' → logprob: -0.34889882802963257
    2. ')' → logprob: -1.2238988876342773
    3. ' )' → logprob: -7.848898887634277
    4. '))' → logprob: -10.223898887634277
    5. ')^' → logprob: -11.723898887634277
    6. ' ' → logprob: -12.723898887634277
    7. '**' → logprob: -12.723898887634277
    8. '[' → logprob: -12.848898887634277
    9. 'r' → logprob: -13.473898887634277
    10. '   ' → logprob: -13.598898887634277

Token 356: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00011903966515092179
    2. ' ' → logprob: -9.37511920928955
    3. ')' → logprob: -11.12511920928955
    4. '**' → logprob: -11.25011920928955
    5. ')**' → logprob: -12.62511920928955
    6. '```' → logprob: -13.62511920928955
    7. '²' → logprob: -14.75011920928955
    8. '   ' → logprob: -15.12511920928955
    9. '*' → logprob: -15.12511920928955
    10. ' )' → logprob: -15.75011920928955

Token 357: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002103275153785944
    2. ' )' → logprob: -6.252103328704834
    3. '   ' → logprob: -9.002102851867676
    4. ')
' → logprob: -11.627102851867676
    5. '))' → logprob: -11.752102851867676
    6. '),' → logprob: -12.252102851867676
    7. ')**' → logprob: -12.502102851867676
    8. ' ' → logprob: -12.627102851867676
    9. '_' → logprob: -12.752102851867676
    10. ' ' → logprob: -13.127102851867676

Token 358: ' sinon' (ID: 52915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.452492594718933
    2. ' or' → logprob: -1.827492594718933
    3. '   ' → logprob: -2.0774927139282227
    4. ' ' → logprob: -2.3274927139282227
    5. ' 
' → logprob: -2.3274927139282227
    6. ' if' → logprob: -2.4524927139282227
    7. '<|end|>' → logprob: -3.0774927139282227
    8. '\n' → logprob: -3.2024927139282227
    9. ''' → logprob: -3.5774927139282227
    10. '    
' → logprob: -4.327492713928223

Token 359: ' la' (ID: 557)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.5043954849243164
    2. 'return' → logprob: -1.3793954849243164
    3. ' False' → logprob: -2.8793954849243164
    4. ' ' → logprob: -3.6293954849243164
    5. ' ' → logprob: -4.379395484924316
    6. '   ' → logprob: -4.754395484924316
    7. 'False' → logprob: -4.754395484924316
    8. ' )' → logprob: -5.129395484924316
    9. '    ' → logprob: -5.504395484924316
    10. ')' → logprob: -6.004395484924316

Token 360: ' sph' (ID: 66674)
  Prédit: ' sphere'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sphere' → logprob: -0.9023321270942688
    2. 'sphere' → logprob: -0.9023321270942688
    3. 's' → logprob: -2.652332067489624
    4. 'ball' → logprob: -3.777332067489624
    5. ' sph' → logprob: -4.652332305908203
    6. ' code' → logprob: -4.652332305908203
    7. ')' → logprob: -4.902332305908203
    8. ' return' → logprob: -5.027332305908203
    9. 'return' → logprob: -5.027332305908203
    10. ' ball' → logprob: -5.152332305908203

Token 361: 'ère' (ID: 4346)
  Prédit: 'ère'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ère' → logprob: -0.1824183166027069
    2. ')' → logprob: -2.3074183464050293
    3. 'ere' → logprob: -3.9324183464050293
    4. 'è' → logprob: -5.057418346405029
    5. '   ' → logprob: -5.432418346405029
    6. '`' → logprob: -5.557418346405029
    7. 'e' → logprob: -5.682418346405029
    8. '`)' → logprob: -5.932418346405029
    9. '```' → logprob: -6.182418346405029
    10. 'èr' → logprob: -6.307418346405029

Token 362: ' em' (ID: 863)
  Prédit: ' ne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ne' → logprob: -0.3525458872318268
    2. ')' → logprob: -2.727545976638794
    3. ' toucher' → logprob: -2.727545976638794
    4. ' touches' → logprob: -3.227545976638794
    5. '<|end|>' → logprob: -3.227545976638794
    6. ' touche' → logprob: -3.727545976638794
    7. 'touch' → logprob: -3.977545976638794
    8. ' n' → logprob: -4.852545738220215
    9. ' touching' → logprob: -4.977545738220215
    10. ' )' → logprob: -5.852545738220215

Token 363: 'pi' (ID: 3455)
  Prédit: 'pi'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pi' → logprob: -0.5341154932975769
    2. 'p' → logprob: -0.9091154932975769
    3. 'pe' → logprob: -5.409115314483643
    4. 'b' → logprob: -6.034115314483643
    5. 'pie' → logprob: -6.409115314483643
    6. 'plit' → logprob: -8.0341157913208
    7. 'pit' → logprob: -8.1591157913208
    8. 'pir' → logprob: -8.1591157913208
    9. '**' → logprob: -8.9091157913208
    10. 'picker' → logprob: -9.0341157913208

Token 364: 'ète' (ID: 28789)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.23475219309329987
    2. 't' → logprob: -2.9847521781921387
    3. 'tr' → logprob: -3.6097521781921387
    4. 'tre' → logprob: -3.9847521781921387
    5. 'rt' → logprob: -4.109752178192139
    6. 'l' → logprob: -4.484752178192139
    7. 're' → logprob: -4.484752178192139
    8. 'rite' → logprob: -4.609752178192139
    9. 'ît' → logprob: -4.859752178192139
    10. 'riter' → logprob: -4.984752178192139

Token 365: ' sur' (ID: 1512)
  Prédit: ' sur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sur' → logprob: -0.5031301975250244
    2. 'sur' → logprob: -1.6281301975250244
    3. ')' → logprob: -2.0031301975250244
    4. 'ra' → logprob: -4.753129959106445
    5. '```' → logprob: -4.878129959106445
    6. '   ' → logprob: -5.003129959106445
    7. ' )' → logprob: -5.003129959106445
    8. ' ' → logprob: -5.128129959106445
    9. 'rait' → logprob: -5.753129959106445
    10. 'e' → logprob: -6.128129959106445

Token 366: ' l' (ID: 305)
  Prédit: ' needles'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' needles' → logprob: -1.3584879636764526
    2. ' )' → logprob: -1.6084879636764526
    3. ' (' → logprob: -1.7334879636764526
    4. ')' → logprob: -2.358488082885742
    5. ' ' → logprob: -2.858488082885742
    6. ' ' → logprob: -3.108488082885742
    7. ' l' → logprob: -3.233488082885742
    8. '<|end|>' → logprob: -3.858488082885742
    9. ' la' → logprob: -3.983488082885742
    10. 'needle' → logprob: -4.358488082885742

Token 367: ''a' (ID: 10443)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.2194295972585678
    2. ''espace' → logprob: -2.3444294929504395
    3. 'es' → logprob: -3.3444294929504395
    4. 'ball' → logprob: -4.5944294929504395
    5. 'needle' → logprob: -4.5944294929504395
    6. '```' → logprob: -5.5944294929504395
    7. 'aire' → logprob: -5.7819294929504395
    8. 'space' → logprob: -5.9069294929504395
    9. ' espace' → logprob: -5.9069294929504395
    10. '’espace' → logprob: -6.0319294929504395

Token 368: 'ig' (ID: 343)
  Prédit: 'ig'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ig' → logprob: -0.02724202163517475
    2. 'igu' → logprob: -4.027242183685303
    3. 'rea' → logprob: -6.027242183685303
    4. 'ra' → logprob: -6.902242183685303
    5. 'r' → logprob: -7.277242183685303
    6. 'rray' → logprob: -8.027241706848145
    7. 'll' → logprob: -8.277241706848145
    8. 'u' → logprob: -8.402241706848145
    9. 'p' → logprob: -8.402241706848145
    10. 'lg' → logprob: -8.402241706848145

Token 369: 'uille' (ID: 47118)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.1186988428235054
    2. 'ne' → logprob: -3.493698835372925
    3. 'ale' → logprob: -3.493698835372925
    4. 'les' → logprob: -4.118699073791504
    5. 'nal' → logprob: -5.118699073791504
    6. 'nale' → logprob: -5.118699073791504
    7. 'ence' → logprob: -5.243699073791504
    8. 'ance' → logprob: -5.368699073791504
    9. 'n' → logprob: -5.993699073791504
    10. 'l' → logprob: -5.993699073791504

Token 370: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18959112465381622
    2. 'def' → logprob: -2.5645911693573
    3. ':' → logprob: -3.4395911693573
    4. 'import' → logprob: -3.8145911693573
    5. '    
' → logprob: -4.564590930938721
    6. ')' → logprob: -4.939590930938721
    7. '.' → logprob: -5.439590930938721
    8. '
' → logprob: -5.689590930938721
    9. ',' → logprob: -5.689590930938721
    10. '#' → logprob: -6.439590930938721

Token 371: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013109402731060982
    2. ' ' → logprob: -6.01310920715332
    3. '    ' → logprob: -6.01310920715332
    4. '    
' → logprob: -6.13810920715332
    5. '<|end|>' → logprob: -6.26310920715332
    6. ')' → logprob: -7.26310920715332
    7. 'def' → logprob: -7.63810920715332
    8. ''' → logprob: -8.26310920715332
    9. ' 
' → logprob: -8.38810920715332
    10. ':' → logprob: -8.38810920715332

Token 372: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01398942619562149
    2. '    
' → logprob: -5.138989448547363
    3. '
' → logprob: -6.388989448547363
    4. ')' → logprob: -6.888989448547363
    5. ' 
' → logprob: -7.388989448547363
    6. '<|end|>' → logprob: -7.513989448547363
    7. '    ' → logprob: -7.638989448547363
    8. 'import' → logprob: -7.763989448547363
    9. ' ' → logprob: -7.763989448547363
    10. '\n' → logprob: -8.138989448547363

Token 373: ' Si' (ID: 7832)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.025711646303534508
    2. '    
' → logprob: -4.275711536407471
    3. ' 
' → logprob: -6.025711536407471
    4. '    ' → logprob: -6.275711536407471
    5. ' ' → logprob: -6.775711536407471
    6. '\n' → logprob: -7.025711536407471
    7. ' for' → logprob: -7.150711536407471
    8. '
' → logprob: -7.150711536407471
    9. ')' → logprob: -7.775711536407471
    10. '\' → logprob: -7.775711536407471

Token 374: ' (' (ID: 350)
  Prédit: ' abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' abs' → logprob: -0.5315446257591248
    2. 'abs' → logprob: -0.9065446257591248
    3. '(abs' → logprob: -5.7815446853637695
    4. ' (' → logprob: -6.9065446853637695
    5. '(h' → logprob: -7.2815446853637695
    6. 'r' → logprob: -7.2815446853637695
    7. ' h' → logprob: -7.2815446853637695
    8. 'h' → logprob: -7.2815446853637695
    9. ' r' → logprob: -7.4065446853637695
    10. '(r' → logprob: -8.15654468536377

Token 375: 'h' (ID: 71)
  Prédit: 'h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.7115094661712646
    2. 'abs' → logprob: -1.0865094661712646
    3. 'r' → logprob: -2.2115094661712646
    4. ' abs' → logprob: -3.8365094661712646
    5. '(h' → logprob: -4.086509704589844
    6. ' h' → logprob: -4.961509704589844
    7. 'w' → logprob: -5.586509704589844
    8. '(abs' → logprob: -5.586509704589844
    9. ' r' → logprob: -5.961509704589844
    10. ' (' → logprob: -6.086509704589844

Token 376: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -4.842555426876061e-06
    2. '   ' → logprob: -13.875004768371582
    3. 'i' → logprob: -14.375004768371582
    4. '_' → logprob: -14.375004768371582
    5. '>' → logprob: -14.500004768371582
    6. ' _' → logprob: -15.000004768371582
    7. ')' → logprob: -15.000004768371582
    8. '[i' → logprob: -15.125004768371582
    9. '
' → logprob: -15.625004768371582
    10. '_r' → logprob: -16.1250057220459

Token 377: ' -' (ID: 533)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.738004207611084
    2. ' -' → logprob: -1.238004207611084
    3. ' <' → logprob: -1.863004207611084
    4. '_i' → logprob: -3.363004207611084
    5. ')' → logprob: -4.113004207611084
    6. '>' → logprob: -4.988004207611084
    7. ' ==' → logprob: -5.488004207611084
    8. ' >=' → logprob: -5.613004207611084
    9. '-i' → logprob: -6.613004207611084
    10. '-' → logprob: -6.613004207611084

Token 378: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.014164687134325504
    2. ' r' → logprob: -4.264164924621582
    3. '   ' → logprob: -14.139164924621582
    4. ' ' → logprob: -15.014164924621582
    5. ')' → logprob: -17.889163970947266
    6. '
' → logprob: -18.264163970947266
    7. '```' → logprob: -18.389163970947266
    8. '	r' → logprob: -18.639163970947266
    9. '  ' → logprob: -18.764163970947266
    10. '       ' → logprob: -19.139163970947266

Token 379: ')^' (ID: 73602)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6377930641174316
    2. ')**' → logprob: -0.7627930641174316
    3. ')>' → logprob: -5.887793064117432
    4. ')^' → logprob: -6.637793064117432
    5. ' )' → logprob: -7.637793064117432
    6. '|' → logprob: -9.012792587280273
    7. '>' → logprob: -9.262792587280273
    8. '   ' → logprob: -9.262792587280273
    9. ')>=' → logprob: -9.387792587280273
    10. ')==' → logprob: -10.137792587280273

Token 380: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.4078685939311981
    2. '>' → logprob: -1.4078686237335205
    3. 'abs' → logprob: -3.4078686237335205
    4. '**' → logprob: -3.7828686237335205
    5. ' >' → logprob: -4.282868385314941
    6. '   ' → logprob: -4.782868385314941
    7. ')' → logprob: -5.782868385314941
    8. '>=' → logprob: -5.782868385314941
    9. ' ' → logprob: -6.157868385314941
    10. ' abs' → logprob: -7.157868385314941

Token 381: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.182721808552742
    2. '>' → logprob: -1.8077218532562256
    3. ' >=' → logprob: -6.3077216148376465
    4. ' <=' → logprob: -7.9327216148376465
    5. ')' → logprob: -8.057722091674805
    6. '>=' → logprob: -8.057722091674805
    7. ' <' → logprob: -9.807722091674805
    8. '<=' → logprob: -10.182722091674805
    9. ')>' → logprob: -10.807722091674805
    10. ' ' → logprob: -11.682722091674805

Token 382: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.47409942746162415
    2. ' r' → logprob: -0.9740993976593018
    3. ' ' → logprob: -10.724099159240723
    4. '(r' → logprob: -15.224099159240723
    5. '   ' → logprob: -16.72410011291504
    6. '	r' → logprob: -16.97410011291504
    7. ' (' → logprob: -17.09910011291504
    8. '  ' → logprob: -18.09910011291504
    9. '[r' → logprob: -19.59910011291504
    10. '```' → logprob: -19.72410011291504

Token 383: '^' (ID: 61)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.268858939409256
    2. '2' → logprob: -1.5188589096069336
    3. '²' → logprob: -4.643858909606934
    4. '^' → logprob: -5.268858909606934
    5. '*' → logprob: -7.393858909606934
    6. ' ' → logprob: -7.518858909606934
    7. 'r' → logprob: -8.268858909606934
    8. ' r' → logprob: -8.393858909606934
    9. ' **' → logprob: -9.393858909606934
    10. 's' → logprob: -9.643858909606934

Token 384: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.3464544432936236e-05
    2. ' ' → logprob: -10.125043869018555
    3. '```' → logprob: -13.750043869018555
    4. '   ' → logprob: -14.250043869018555
    5. '**' → logprob: -14.500043869018555
    6. '²' → logprob: -14.875043869018555
    7. '
' → logprob: -15.250043869018555
    8. ')' → logprob: -17.000043869018555
    9. '^' → logprob: -17.000043869018555
    10. '4' → logprob: -17.375043869018555

Token 385: ' =>' (ID: 871)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08459150046110153
    2. ':
' → logprob: -2.9595913887023926
    3. '   ' → logprob: -4.334591388702393
    4. ',' → logprob: -4.584591388702393
    5. '       ' → logprob: -6.084591388702393
    6. ':return' → logprob: -6.334591388702393
    7. ' or' → logprob: -7.334591388702393
    8. '):' → logprob: -7.459591388702393
    9. ')' → logprob: -8.45959186553955
    10. '):
' → logprob: -8.83459186553955

Token 386: ' impossible' (ID: 19786)
  Prédit: ' True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.9300721287727356
    2. ' False' → logprob: -0.9300721287727356
    3. 'False' → logprob: -1.9300720691680908
    4. 'True' → logprob: -3.430072069168091
    5. ' continue' → logprob: -3.930072069168091
    6. ' return' → logprob: -5.18007230758667
    7. 'continue' → logprob: -5.80507230758667
    8. '   ' → logprob: -5.80507230758667
    9. 'return' → logprob: -6.55507230758667
    10. ' #' → logprob: -8.055071830749512

Token 387: ' à' (ID: 1221)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3273746073246002
    2. ':' → logprob: -1.5773745775222778
    3. '
' → logprob: -4.202374458312988
    4. ')' → logprob: -4.452374458312988
    5. '\n' → logprob: -4.952374458312988
    6. 'def' → logprob: -5.202374458312988
    7. '    
' → logprob: -5.202374458312988
    8. ':
' → logprob: -5.202374458312988
    9. '):' → logprob: -5.577374458312988
    10. ',' → logprob: -5.577374458312988

Token 388: ' cause' (ID: 7075)
  Prédit: 'placer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'placer' → logprob: -0.015036135911941528
    2. 's' → logprob: -5.890036106109619
    3. 'cont' → logprob: -6.390036106109619
    4. 'position' → logprob: -6.390036106109619
    5. 'atte' → logprob: -6.515036106109619
    6. 'respect' → logprob: -7.140036106109619
    7. 'place' → logprob: -7.265036106109619
    8. 'ac' → logprob: -7.765036106109619
    9. 'poser' → logprob: -7.765036106109619
    10. 'con' → logprob: -8.015036582946777

Token 389: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.3774476945400238
    2. '   ' → logprob: -2.1274476051330566
    3. ' des' → logprob: -2.1274476051330566
    4. ' du' → logprob: -3.2524476051330566
    5. ' d' → logprob: -3.8774476051330566
    6. '    ' → logprob: -4.502447605133057
    7. 'de' → logprob: -6.377447605133057
    8. 'd' → logprob: -7.127447605133057
    9. ' horizont' → logprob: -7.127447605133057
    10. ' l' → logprob: -8.002448081970215

Token 390: ' la' (ID: 557)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.5861152410507202
    2. ' la' → logprob: -1.2111152410507202
    3. 'l' → logprob: -2.2111153602600098
    4. 'la' → logprob: -3.7111153602600098
    5. ' distance' → logprob: -5.71111536026001
    6. 'distance' → logprob: -6.33611536026001
    7. ' vertical' → logprob: -6.33611536026001
    8. ' une' → logprob: -7.08611536026001
    9. ' hauteur' → logprob: -7.46111536026001
    10. 'vertical' → logprob: -7.71111536026001

Token 391: ' hauteur' (ID: 72987)
  Prédit: 'distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'distance' → logprob: -2.1313283443450928
    2. ' hauteur' → logprob: -2.1313283443450928
    3. 'par' → logprob: -2.3813283443450928
    4. ' par' → logprob: -2.3813283443450928
    5. 'm' → logprob: -2.5063283443450928
    6. ' distance' → logprob: -2.7563283443450928
    7. 'sphere' → logprob: -3.1313283443450928
    8. 's' → logprob: -3.2563283443450928
    9. ' sphere' → logprob: -3.6313283443450928
    10. 'touch' → logprob: -3.6313283443450928

Token 392: ' verticale' (ID: 199428)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.26962438225746155
    2. ':' → logprob: -2.0196244716644287
    3. '    
' → logprob: -3.5196244716644287
    4. ')' → logprob: -4.01962423324585
    5. '
' → logprob: -4.14462423324585
    6. '):' → logprob: -4.64462423324585
    7. ',' → logprob: -5.39462423324585
    8. 'def' → logprob: -5.64462423324585
    9. ':
' → logprob: -5.64462423324585
    10. ' ' → logprob: -6.26962423324585

Token 393: '
    
' (ID: 15698)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3151504397392273
    2. 'def' → logprob: -2.440150499343872
    3. '
' → logprob: -3.315150499343872
    4. ')' → logprob: -3.690150499343872
    5. '\n' → logprob: -3.815150499343872
    6. ':' → logprob: -3.940150499343872
    7. 'import' → logprob: -4.315150260925293
    8. 'for' → logprob: -4.315150260925293
    9. ' for' → logprob: -4.440150260925293
    10. '    
' → logprob: -4.690150260925293

Token 394: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11594367027282715
    2. ':' → logprob: -2.615943670272827
    3. ')' → logprob: -4.490943908691406
    4. ',' → logprob: -4.740943908691406
    5. '    
' → logprob: -5.365943908691406
    6. '):' → logprob: -5.490943908691406
    7. '    ' → logprob: -6.615943908691406
    8. ' :' → logprob: -6.615943908691406
    9. ' ' → logprob: -7.240943908691406
    10. ':
' → logprob: -7.865943908691406

Token 395: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06356876343488693
    2. '    
' → logprob: -3.4385688304901123
    3. ' 
' → logprob: -4.063568592071533
    4. '\n' → logprob: -6.188568592071533
    5. ' ' → logprob: -6.438568592071533
    6. '    ' → logprob: -6.563568592071533
    7. '  
' → logprob: -6.688568592071533
    8. '   
' → logprob: -6.938568592071533
    9. '     
' → logprob: -7.313568592071533
    10. ':' → logprob: -7.313568592071533

Token 396: ' Mé' (ID: 23435)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.8240037560462952
    2. 'import' → logprob: -2.3240036964416504
    3. '#' → logprob: -2.4490036964416504
    4. 'step' → logprob: -2.4490036964416504
    5. 'from' → logprob: -2.8240036964416504
    6. 'for' → logprob: -2.9490036964416504
    7. 'epsilon' → logprob: -3.1990036964416504
    8. 'min' → logprob: -3.6990036964416504
    9. 'possible' → logprob: -3.6990036964416504
    10. 'low' → logprob: -4.07400369644165

Token 397: 'th' (ID: 404)
  Prédit: 'th'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'th' → logprob: -0.008303331211209297
    2. 'def' → logprob: -5.383303165435791
    3. 'max' → logprob: -7.258303165435791
    4. '   ' → logprob: -7.508303165435791
    5. 'moire' → logprob: -7.508303165435791
    6. 'threshold' → logprob: -7.633303165435791
    7. 'ax' → logprob: -8.38330364227295
    8. 't' → logprob: -8.50830364227295
    9. 'mo' → logprob: -8.50830364227295
    10. 'm' → logprob: -9.25830364227295

Token 398: 'ode' (ID: 676)
  Prédit: 'ode'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ode' → logprob: -0.28246596455574036
    2. 'odes' → logprob: -1.532465934753418
    3. 'od' → logprob: -3.532465934753418
    4. 'def' → logprob: -8.157465934753418
    5. 'ods' → logprob: -8.407465934753418
    6. '   ' → logprob: -9.032465934753418
    7. 'odo' → logprob: -9.532465934753418
    8. 'odel' → logprob: -10.407465934753418
    9. 'oded' → logprob: -10.407465934753418
    10. 'oda' → logprob: -11.282465934753418

Token 399: ' :' (ID: 712)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.6507147550582886
    2. '   ' → logprob: -1.1507147550582886
    3. 'def' → logprob: -2.525714874267578
    4. '=' → logprob: -4.025714874267578
    5. ' de' → logprob: -4.525714874267578
    6. '#' → logprob: -4.650714874267578
    7. ' =' → logprob: -5.025714874267578
    8. ' for' → logprob: -5.150714874267578
    9. ':' → logprob: -5.150714874267578
    10. ' import' → logprob: -5.525714874267578

Token 400: ' sur' (ID: 1512)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.6603680849075317
    2. 'from' → logprob: -2.035367965698242
    3. ' for' → logprob: -2.285367965698242
    4. 'import' → logprob: -2.410367965698242
    5. 'def' → logprob: -2.410367965698242
    6. ' low' → logprob: -2.785367965698242
    7. ' epsilon' → logprob: -3.035367965698242
    8. ' #' → logprob: -3.160367965698242
    9. 'for' → logprob: -3.160367965698242
    10. ' step' → logprob: -3.285367965698242

Token 401: ' une' (ID: 2463)
  Prédit: ' une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.37331265211105347
    2. ' un' → logprob: -1.8733127117156982
    3. 'une' → logprob: -1.9983127117156982
    4. 'un' → logprob: -4.498312473297119
    5. 'import' → logprob: -5.748312473297119
    6. ' grid' → logprob: -5.748312473297119
    7. ' grille' → logprob: -6.998312473297119
    8. ' ' → logprob: -7.248312473297119
    9. ' des' → logprob: -7.498312473297119
    10. ' la' → logprob: -7.748312473297119

Token 402: ' grille' (ID: 99153)
  Prédit: 'gr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gr' → logprob: -0.10956397652626038
    2. ' grille' → logprob: -2.8595640659332275
    3. '   ' → logprob: -3.8595640659332275
    4. ' ' → logprob: -4.484563827514648
    5. 'grid' → logprob: -4.859563827514648
    6. '  ' → logprob: -6.859563827514648
    7. 'quadr' → logprob: -7.359563827514648
    8. 'quad' → logprob: -7.734563827514648
    9. '     ' → logprob: -7.859563827514648
    10. 'ma' → logprob: -7.859563827514648

Token 403: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9925055503845215
    2. ':' → logprob: -1.6175055503845215
    3. '_' → logprob: -1.8675055503845215
    4. ' ' → logprob: -2.1175055503845215
    5. ',' → logprob: -2.9925055503845215
    6. 'def' → logprob: -3.4925055503845215
    7. ' :' → logprob: -4.4925055503845215
    8. '<|end|>' → logprob: -4.4925055503845215
    9. ' ,' → logprob: -5.1175055503845215
    10. '#' → logprob: -5.1175055503845215

Token 404: ' on' (ID: 402)
  Prédit: ' step'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' step' → logprob: -0.017626766115427017
    2. 'step' → logprob: -4.892626762390137
    3. ' for' → logprob: -5.517626762390137
    4. ' pas' → logprob: -6.017626762390137
    5. ' spacing' → logprob: -7.017626762390137
    6. ' dx' → logprob: -7.892626762390137
    7. ' margin' → logprob: -8.142626762390137
    8. ' grid' → logprob: -8.267626762390137
    9. 'for' → logprob: -8.267626762390137
    10. '   ' → logprob: -8.267626762390137

Token 405: ' cherche' (ID: 52345)
  Prédit: 'expl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'expl' → logprob: -1.0195502042770386
    2. ' explore' → logprob: -1.8945502042770386
    3. ' test' → logprob: -2.144550323486328
    4. 'cherche' → logprob: -2.769550323486328
    5. 'import' → logprob: -2.894550323486328
    6. 'for' → logprob: -3.019550323486328
    7. ' for' → logprob: -3.019550323486328
    8. 'test' → logprob: -3.269550323486328
    9. '   ' → logprob: -3.769550323486328
    10. ' continue' → logprob: -4.769550323486328

Token 406: ' si' (ID: 1784)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.7341888546943665
    2. ' un' → logprob: -0.8591888546943665
    3. ' cx' → logprob: -3.4841887950897217
    4. ' de' → logprob: -4.609189033508301
    5. ' ' → logprob: -4.734189033508301
    6. ' une' → logprob: -4.984189033508301
    7. ' if' → logprob: -5.109189033508301
    8. ' si' → logprob: -5.609189033508301
    9. 'cx' → logprob: -5.609189033508301
    10. ' les' → logprob: -5.734189033508301

Token 407: ' un' (ID: 537)
  Prédit: ' il'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' il' → logprob: -0.8659212589263916
    2. ' un' → logprob: -1.4909212589263916
    3. 'import' → logprob: -2.9909212589263916
    4. ' there' → logprob: -3.1159212589263916
    5. ' a' → logprob: -3.2409212589263916
    6. ' ' → logprob: -3.3659212589263916
    7. ' cx' → logprob: -3.3659212589263916
    8. ' ' → logprob: -4.1159210205078125
    9. ' une' → logprob: -4.6159210205078125
    10. ' l' → logprob: -4.7409210205078125

Token 408: ' point' (ID: 2438)
  Prédit: ' point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' point' → logprob: -0.3847738206386566
    2. 'point' → logprob: -1.634773850440979
    3. ' cx' → logprob: -2.6347737312316895
    4. 'cx' → logprob: -4.0097737312316895
    5. ' emplacement' → logprob: -5.3847737312316895
    6. ' position' → logprob: -5.5097737312316895
    7. 'position' → logprob: -5.8847737312316895
    8. ' possible' → logprob: -6.0097737312316895
    9. ' center' → logprob: -6.0097737312316895
    10. ' centre' → logprob: -6.0097737312316895

Token 409: ' (' (ID: 350)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 410: 'cx' (ID: 47207)
  Prédit: ' cx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cx' → logprob: -1.11310613155365
    2. 'x' → logprob: -1.23810613155365
    3. 'cx' → logprob: -1.23810613155365
    4. ' x' → logprob: -2.9881062507629395
    5. ')' → logprob: -3.6131062507629395
    6. ' )' → logprob: -4.4881062507629395
    7. ' ' → logprob: -6.7381062507629395
    8. '(cx' → logprob: -7.1131062507629395
    9. 'c' → logprob: -8.238105773925781
    10. ',' → logprob: -8.863105773925781

Token 411: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.011672258377075195
    2. ' ,' → logprob: -4.761672019958496
    3. ')' → logprob: -5.886672019958496
    4. '_,' → logprob: -9.136672019958496
    5. ' )' → logprob: -9.511672019958496
    6. '+,' → logprob: -10.386672019958496
    7. ',x' → logprob: -11.136672019958496
    8. '+' → logprob: -11.886672019958496
    9. ',y' → logprob: -12.386672019958496
    10. ' ' → logprob: -12.511672019958496

Token 412: ' cy' (ID: 5504)
  Prédit: 'cy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cy' → logprob: -0.089399054646492
    2. ' cy' → logprob: -2.4643990993499756
    3. ',' → logprob: -7.7143988609313965
    4. ' ' → logprob: -12.089399337768555
    5. ')' → logprob: -12.839399337768555
    6. ' ,' → logprob: -13.339399337768555
    7. '.cy' → logprob: -14.464399337768555
    8. '   ' → logprob: -14.714399337768555
    9. 'cx' → logprob: -15.089399337768555
    10. ' cyc' → logprob: -15.339399337768555

Token 413: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0036297659389674664
    2. ' )' → logprob: -5.628629684448242
    3. ',' → logprob: -11.378629684448242
    4. '   ' → logprob: -12.753629684448242
    5. '),' → logprob: -12.753629684448242
    6. 'possible' → logprob: -13.253629684448242
    7. ')
' → logprob: -13.503629684448242
    8. '')' → logprob: -13.628629684448242
    9. ' peut' → logprob: -14.253629684448242
    10. 'r' → logprob: -14.503629684448242

Token 414: ' existe' (ID: 19498)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 415: ' avec' (ID: 3937)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1388234794139862
    2. ':' → logprob: -2.3888235092163086
    3. ',' → logprob: -4.638823509216309
    4. ' :' → logprob: -4.888823509216309
    5. ' for' → logprob: -5.763823509216309
    6. 'import' → logprob: -5.888823509216309
    7. ')' → logprob: -5.888823509216309
    8. '<|end|>' → logprob: -6.263823509216309
    9. ' ' → logprob: -6.763823509216309
    10. '.' → logprob: -7.138823509216309

Token 416: '
' (ID: 198)
  Prédit: 'un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'un' → logprob: -1.451960802078247
    2. ' un' → logprob: -1.451960802078247
    3. 'une' → logprob: -1.576960802078247
    4. ' une' → logprob: -2.326960802078247
    5. 'distance' → logprob: -3.076960802078247
    6. '```' → logprob: -3.451960802078247
    7. ' des' → logprob: -3.826960802078247
    8. 'r' → logprob: -3.826960802078247
    9. 'dx' → logprob: -4.576960563659668
    10. 's' → logprob: -4.701960563659668

Token 417: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6329503059387207
    2. ')' → logprob: -2.3829503059387207
    3. '#' → logprob: -2.8829503059387207
    4. ' ' → logprob: -3.1329503059387207
    5. '    ' → logprob: -3.1329503059387207
    6. 'x' → logprob: -3.3829503059387207
    7. ' x' → logprob: -3.7579503059387207
    8. ' #' → logprob: -3.8829503059387207
    9. 'range' → logprob: -3.8829503059387207
    10. ' un' → logprob: -4.257950305938721

Token 418: ' #' (ID: 1069)
  Prédit: ' step'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' step' → logprob: -0.8331127762794495
    2. 'step' → logprob: -1.0831127166748047
    3. ' pas' → logprob: -2.4581127166748047
    4. 'pas' → logprob: -3.4581127166748047
    5. ' un' → logprob: -3.8331127166748047
    6. ' une' → logprob: -3.9581127166748047
    7. 'une' → logprob: -4.208112716674805
    8. 'un' → logprob: -4.458112716674805
    9. ' spacing' → logprob: -5.333112716674805
    10. 'steps' → logprob: -5.458112716674805

Token 419: ' r' (ID: 428)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.3283872604370117
    2. 'step' → logprob: -2.0783872604370117
    3. ' step' → logprob: -2.9533872604370117
    4. ' pas' → logprob: -3.2033872604370117
    5. ' un' → logprob: -4.328387260437012
    6. 'une' → logprob: -4.703387260437012
    7. ' une' → logprob: -4.703387260437012
    8. 'l' → logprob: -4.703387260437012
    9. 'un' → logprob: -4.828387260437012
    10. 'dx' → logprob: -6.328387260437012

Token 420: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -1.3858109712600708
    2. ')' → logprob: -2.0108108520507812
    3. ',' → logprob: -2.3858108520507812
    4. ' ' → logprob: -2.5108108520507812
    5. '+' → logprob: -2.7608108520507812
    6. '=' → logprob: -3.1358108520507812
    7. ' ,' → logprob: -3.5108108520507812
    8. 'e' → logprob: -3.5108108520507812
    9. '<=' → logprob: -3.5108108520507812
    10. 'ange' → logprob: -3.6358108520507812

Token 421: ' cx' (ID: 44448)
  Prédit: 'cx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cx' → logprob: -0.043096479028463364
    2. ' cx' → logprob: -3.1680965423583984
    3. '100' → logprob: -9.793096542358398
    4. 'r' → logprob: -11.293096542358398
    5. '(cx' → logprob: -12.043096542358398
    6. ' ' → logprob: -12.168096542358398
    7. 'c' → logprob: -12.293096542358398
    8. 'x' → logprob: -12.293096542358398
    9. '   ' → logprob: -13.418096542358398
    10. ' r' → logprob: -13.418096542358398

Token 422: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.31378158926963806
    2. '<=' → logprob: -1.3137816190719604
    3. ',' → logprob: -8.43878173828125
    4. '+' → logprob: -9.06378173828125
    5. ' and' → logprob: -9.43878173828125
    6. 'and' → logprob: -9.81378173828125
    7. ' ' → logprob: -11.18878173828125
    8. '=' → logprob: -11.81378173828125
    9. ' +' → logprob: -12.06378173828125
    10. '   ' → logprob: -12.18878173828125

Token 423: ' ' (ID: 220)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.033667489886283875
    2. ' ' → logprob: -3.40866756439209
    3. '(' → logprob: -11.40866756439209
    4. ' (' → logprob: -12.03366756439209
    5. '   ' → logprob: -13.03366756439209
    6. 'r' → logprob: -13.65866756439209
    7. '1' → logprob: -15.03366756439209
    8. ' ' → logprob: -15.84616756439209
    9. '  ' → logprob: -16.096166610717773
    10. 'w' → logprob: -16.158666610717773

Token 424: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.0015042672166600823
    2. ' ' → logprob: -6.501504421234131
    3. '(' → logprob: -13.501503944396973
    4. 'r' → logprob: -15.376503944396973
    5. ' (' → logprob: -16.00150489807129
    6. '   ' → logprob: -16.00150489807129
    7. '1' → logprob: -18.00150489807129
    8. ',' → logprob: -18.00150489807129
    9. 'w' → logprob: -18.12650489807129
    10. '10' → logprob: -18.12650489807129

Token 425: '-r' (ID: 6335)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.03750230744481087
    2. '-r' → logprob: -3.5375022888183594
    3. '   ' → logprob: -5.537502288818359
    4. '-' → logprob: -6.162502288818359
    5. ',' → logprob: -6.912502288818359
    6. ' and' → logprob: -7.787502288818359
    7. '    ' → logprob: -9.78750228881836
    8. ')' → logprob: -9.78750228881836
    9. ' ,' → logprob: -10.03750228881836
    10. ' ' → logprob: -10.53750228881836

Token 426: ',' (ID: 11)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.6107211709022522
    2. '   ' → logprob: -0.8607211709022522
    3. ',' → logprob: -3.9857211112976074
    4. 'and' → logprob: -4.735721111297607
    5. ' et' → logprob: -5.860721111297607
    6. ')' → logprob: -6.610721111297607
    7. '    
' → logprob: -6.860721111297607
    8. '    ' → logprob: -7.985721111297607
    9. ' ' → logprob: -8.485721588134766
    10. '<|end|>' → logprob: -8.485721588134766

Token 427: ' r' (ID: 428)
  Prédit: ' r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.3287728726863861
    2. 'r' → logprob: -1.8287729024887085
    3. '   ' → logprob: -2.328772783279419
    4. ' cy' → logprob: -4.828773021697998
    5. ' and' → logprob: -4.953773021697998
    6. 'cy' → logprob: -5.828773021697998
    7. 'and' → logprob: -6.703773021697998
    8. ' ' → logprob: -6.828773021697998
    9. ' et' → logprob: -8.07877254486084
    10. ' #' → logprob: -8.20377254486084

Token 428: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.04891242831945419
    2. '<=' → logprob: -3.173912525177002
    3. '+' → logprob: -5.673912525177002
    4. ',' → logprob: -6.923912525177002
    5. ' +' → logprob: -7.048912525177002
    6. ' ,' → logprob: -8.798912048339844
    7. ' <' → logprob: -9.298912048339844
    8. '=' → logprob: -9.548912048339844
    9. ' +=' → logprob: -9.798912048339844
    10. ' ' → logprob: -10.298912048339844

Token 429: ' cy' (ID: 5504)
  Prédit: 'cy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cy' → logprob: -0.006717505399137735
    2. ' cy' → logprob: -5.006717681884766
    3. ' ' → logprob: -13.756717681884766
    4. '   ' → logprob: -14.131717681884766
    5. 'cx' → logprob: -15.756717681884766
    6. ' ' → logprob: -16.256717681884766
    7. '  ' → logprob: -16.256717681884766
    8. '.cy' → logprob: -17.256717681884766
    9. '	c' → logprob: -18.006717681884766
    10. 'cyj' → logprob: -18.131717681884766

Token 430: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.07018817961215973
    2. '<=' → logprob: -2.695188283920288
    3. '   ' → logprob: -9.570188522338867
    4. '<|end|>' → logprob: -9.695188522338867
    5. ')<=' → logprob: -10.570188522338867
    6. ']<=' → logprob: -10.945188522338867
    7. '    ' → logprob: -11.445188522338867
    8. '<|end|>' → logprob: -11.570188522338867
    9. 'r' → logprob: -12.195188522338867
    10. ' <' → logprob: -12.195188522338867

Token 431: ' ' (ID: 220)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.16022665798664093
    2. ' ' → logprob: -1.9102267026901245
    3. ' ' → logprob: -13.785226821899414
    4. '   ' → logprob: -14.160226821899414
    5. 'r' → logprob: -15.660226821899414
    6. '(' → logprob: -15.660226821899414
    7. ' (' → logprob: -16.222726821899414
    8. '  ' → logprob: -16.410226821899414
    9. ',' → logprob: -17.660226821899414
    10. '
' → logprob: -17.785226821899414

Token 432: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.001929228543303907
    2. ' ' → logprob: -6.25192928314209
    3. '   ' → logprob: -14.87692928314209
    4. 'r' → logprob: -16.001928329467773
    5. '(' → logprob: -17.501928329467773
    6. ' ' → logprob: -18.126928329467773
    7. ' (' → logprob: -18.189428329467773
    8. '  ' → logprob: -18.439428329467773
    9. '１００' → logprob: -18.689428329467773
    10. '
' → logprob: -18.814428329467773

Token 433: '-r' (ID: 6335)
  Prédit: '-r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-r' → logprob: -0.009091351181268692
    2. ' -' → logprob: -5.134091377258301
    3. '-' → logprob: -5.759091377258301
    4. '   ' → logprob: -13.6340913772583
    5. 'r' → logprob: -13.8840913772583
    6. ' ' → logprob: -15.5090913772583
    7. '-R' → logprob: -15.6340913772583
    8. '-р' → logprob: -15.6340913772583
    9. ')' → logprob: -16.134090423583984
    10. '‌' → logprob: -16.634090423583984

Token 434: ' et' (ID: 859)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14791032671928406
    2. ':' → logprob: -2.0229103565216064
    3. '    
' → logprob: -6.397910118103027
    4. ':
' → logprob: -7.022910118103027
    5. '
' → logprob: -7.272910118103027
    6. ',' → logprob: -7.522910118103027
    7. 'def' → logprob: -7.897910118103027
    8. ')' → logprob: -8.522910118103027
    9. ' :' → logprob: -9.022910118103027
    10. ' for' → logprob: -9.397910118103027

Token 435: ' à' (ID: 1221)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.1701288223266602
    2. ' all' → logprob: -1.4201288223266602
    3. 'for' → logprob: -2.04512882232666
    4. 'all' → logprob: -2.92012882232666
    5. ' math' → logprob: -3.17012882232666
    6. ' pour' → logprob: -3.42012882232666
    7. ' (' → logprob: -3.42012882232666
    8. ' not' → logprob: -3.54512882232666
    9. 'not' → logprob: -3.67012882232666
    10. 'import' → logprob: -3.79512882232666

Token 436: ' respecter' (ID: 107203)
  Prédit: 'distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'distance' → logprob: -0.09606144577264786
    2. 'une' → logprob: -2.5960614681243896
    3. 'au' → logprob: -5.2210612297058105
    4. ' une' → logprob: -5.4710612297058105
    5. 'least' → logprob: -5.9710612297058105
    6. ' distance' → logprob: -6.2210612297058105
    7. 's' → logprob: -6.9710612297058105
    8. 'dist' → logprob: -7.2210612297058105
    9. 't' → logprob: -7.9710612297058105
    10. 'minimum' → logprob: -9.096061706542969

Token 437: ' les' (ID: 1341)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09350129216909409
    2. ' un' → logprob: -3.718501329421997
    3. ' une' → logprob: -4.218501091003418
    4. 'import' → logprob: -4.843501091003418
    5. ' des' → logprob: -4.843501091003418
    6. '    ' → logprob: -4.968501091003418
    7. 'e' → logprob: -5.343501091003418
    8. ' les' → logprob: -5.968501091003418
    9. 'un' → logprob: -6.093501091003418
    10. 'es' → logprob: -6.343501091003418

Token 438: ' contraintes' (ID: 167366)
  Prédit: ' contraintes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' contraintes' → logprob: -0.46079936623573303
    2. ' distances' → logprob: -2.0857994556427
    3. 'constraints' → logprob: -2.4607994556427
    4. 'dist' → logprob: -2.7107994556427
    5. ' constraints' → logprob: -3.9607994556427
    6. 'contra' → logprob: -4.085799217224121
    7. 'distance' → logprob: -4.210799217224121
    8. ' espac' → logprob: -4.585799217224121
    9. ' spacing' → logprob: -5.335799217224121
    10. 'conditions' → logprob: -5.460799217224121

Token 439: '.

' (ID: 364)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0038124262355268
    2. '    
' → logprob: -5.878812313079834
    3. '
' → logprob: -8.003812789916992
    4. 'def' → logprob: -8.628812789916992
    5. ':' → logprob: -8.878812789916992
    6. ' for' → logprob: -9.503812789916992
    7. ',' → logprob: -10.003812789916992
    8. '    ' → logprob: -10.128812789916992
    9. '  
' → logprob: -10.503812789916992
    10. '.' → logprob: -10.628812789916992

Token 440: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004900465719401836
    2. ' step' → logprob: -6.1299004554748535
    3. 'step' → logprob: -6.7549004554748535
    4. ' for' → logprob: -7.7549004554748535
    5. 'for' → logprob: -8.004900932312012
    6. '
' → logprob: -8.254900932312012
    7. '    ' → logprob: -8.504900932312012
    8. '    
' → logprob: -9.379900932312012
    9. 'def' → logprob: -10.129900932312012
    10. ' spacing' → logprob: -10.254900932312012

Token 441: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3565673232078552
    2. ' step' → logprob: -1.8565673828125
    3. 'step' → logprob: -2.1065673828125
    4. 'pas' → logprob: -5.2315673828125
    5. '
' → logprob: -5.8565673828125
    6. ' for' → logprob: -5.9815673828125
    7. ' grid' → logprob: -6.1065673828125
    8. ' pas' → logprob: -6.3565673828125
    9. 'grid' → logprob: -6.3565673828125
    10. 'for' → logprob: -6.7315673828125

Token 442: ' Pour' (ID: 13931)
  Prédit: 'step'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'step' → logprob: -0.17141331732273102
    2. ' step' → logprob: -2.0464134216308594
    3. '   ' → logprob: -3.9214134216308594
    4. 'grid' → logprob: -5.171413421630859
    5. ' grid' → logprob: -6.296413421630859
    6. 'def' → logprob: -8.17141342163086
    7. 'import' → logprob: -9.04641342163086
    8. 'steps' → logprob: -9.17141342163086
    9. 'for' → logprob: -9.67141342163086
    10. 'size' → logprob: -9.92141342163086

Token 443: ' optimisation' (ID: 139802)
  Prédit: ' cx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' cx' → logprob: -1.2871218919754028
    2. 'cx' → logprob: -1.2871218919754028
    3. 'step' → logprob: -1.7871218919754028
    4. ' step' → logprob: -1.9121218919754028
    5. 'r' → logprob: -3.1621217727661133
    6. 'radius' → logprob: -3.5371217727661133
    7. ' radius' → logprob: -4.287121772766113
    8. ' r' → logprob: -4.662121772766113
    9. 'dx' → logprob: -4.662121772766113
    10. 'dist' → logprob: -5.162121772766113

Token 444: ',' (ID: 11)
  Prédit: 'step'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'step' → logprob: -0.5395621061325073
    2. ',' → logprob: -1.4145621061325073
    3. ' step' → logprob: -2.914562225341797
    4. 'grid' → logprob: -3.789562225341797
    5. '   ' → logprob: -4.039562225341797
    6. 'range' → logprob: -4.664562225341797
    7. ' grid' → logprob: -4.789562225341797
    8. 'import' → logprob: -4.789562225341797
    9. 'margin' → logprob: -5.039562225341797
    10. 'steps' → logprob: -5.164562225341797

Token 445: ' on' (ID: 402)
  Prédit: 'step'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'step' → logprob: -0.389423668384552
    2. ' step' → logprob: -1.1394236087799072
    3. ' grid' → logprob: -6.764423847198486
    4. 'grid' → logprob: -6.764423847198486
    5. '   ' → logprob: -9.639423370361328
    6. 'pas' → logprob: -9.639423370361328
    7. ' pas' → logprob: -11.014423370361328
    8. 'import' → logprob: -11.014423370361328
    9. 'steps' → logprob: -11.139423370361328
    10. 'def' → logprob: -11.264423370361328

Token 446: ' va' (ID: 3423)
  Prédit: 'cherche'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cherche' → logprob: -2.425396680831909
    2. 'fait' → logprob: -2.550396680831909
    3. 'import' → logprob: -2.675396680831909
    4. 'avance' → logprob: -2.800396680831909
    5. 'continue' → logprob: -2.925396680831909
    6. 'util' → logprob: -3.050396680831909
    7. ' crée' → logprob: -3.675396680831909
    8. 'reste' → logprob: -3.675396680831909
    9. 'for' → logprob: -3.800396680831909
    10. 'importe' → logprob: -3.800396680831909

Token 447: ' discr' (ID: 23059)
  Prédit: 'step'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'step' → logprob: -1.0474724769592285
    2. 'import' → logprob: -2.4224724769592285
    3. 'pas' → logprob: -2.4224724769592285
    4. 'def' → logprob: -2.4224724769592285
    5. ' step' → logprob: -2.6724724769592285
    6. ' pas' → logprob: -3.1724724769592285
    7. 'dx' → logprob: -3.5474724769592285
    8. '   ' → logprob: -3.5474724769592285
    9. 'int' → logprob: -3.6724724769592285
    10. ' tester' → logprob: -3.7974724769592285

Token 448: 'ét' (ID: 3913)
  Prédit: 'et'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'et' → logprob: -0.2813401222229004
    2. 'ét' → logprob: -1.4063401222229004
    3. 'èt' → logprob: -10.281339645385742
    4. 't' → logprob: -10.406339645385742
    5. 'é' → logprob: -10.406339645385742
    6. 'éter' → logprob: -10.531339645385742
    7. 'ètement' → logprob: -11.281339645385742
    8. 'it' → logprob: -11.656339645385742
    9. 'êt' → logprob: -12.031339645385742
    10. 'ret' → logprob: -12.406339645385742

Token 449: 'iser' (ID: 7466)
  Prédit: 'iser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iser' → logprob: -0.005261033773422241
    2. 'izer' → logprob: -6.005260944366455
    3. 'ize' → logprob: -6.380260944366455
    4. 'er' → logprob: -8.005261421203613
    5. 'ise' → logprob: -8.130261421203613
    6. 'is' → logprob: -8.255261421203613
    7. 'i' → logprob: -10.130261421203613
    8. 'e' → logprob: -11.130261421203613
    9. 'isé' → logprob: -11.255261421203613
    10. '-' → logprob: -11.380261421203613

Token 450: ' le' (ID: 505)
  Prédit: ' step'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' step' → logprob: -0.07052561640739441
    2. 'step' → logprob: -3.195525646209717
    3. ' pas' → logprob: -4.820525646209717
    4. '   ' → logprob: -5.070525646209717
    5. ' grid' → logprob: -6.070525646209717
    6. ' x' → logprob: -6.195525646209717
    7. ' ' → logprob: -6.945525646209717
    8. ' dx' → logprob: -6.945525646209717
    9. 'pas' → logprob: -6.945525646209717
    10. ' steps' → logprob: -7.070525646209717

Token 451: ' domaine' (ID: 46481)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.7607982754707336
    2. 'step' → logprob: -1.5107982158660889
    3. ' step' → logprob: -2.135798215866089
    4. ' pas' → logprob: -2.510798215866089
    5. 'space' → logprob: -2.885798215866089
    6. ' espace' → logprob: -4.260798454284668
    7. ' space' → logprob: -4.760798454284668
    8. 'r' → logprob: -5.135798454284668
    9. 'grid' → logprob: -5.135798454284668
    10. ' grid' → logprob: -5.510798454284668

Token 452: ' et' (ID: 859)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.32083991169929504
    2. ' step' → logprob: -2.0708398818969727
    3. ' en' → logprob: -2.4458398818969727
    4. ':' → logprob: -4.320839881896973
    5. ' =' → logprob: -4.695839881896973
    6. 'step' → logprob: -5.070839881896973
    7. '
' → logprob: -5.195839881896973
    8. ',' → logprob: -5.320839881896973
    9. '    
' → logprob: -5.945839881896973
    10. ' :' → logprob: -6.320839881896973

Token 453: ' faire' (ID: 8119)
  Prédit: ' tester'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' tester' → logprob: -1.8692214488983154
    2. ' vérifier' → logprob: -2.1192214488983154
    3. ' check' → logprob: -2.2442214488983154
    4. '   ' → logprob: -2.2442214488983154
    5. ' for' → logprob: -2.2442214488983154
    6. 'for' → logprob: -2.3692214488983154
    7. ' step' → logprob: -3.1192214488983154
    8. 'step' → logprob: -3.3692214488983154
    9. ' test' → logprob: -3.8692214488983154
    10. ' pas' → logprob: -3.8692214488983154

Token 454: ' un' (ID: 537)
  Prédit: 'une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'une' → logprob: -0.3936017155647278
    2. ' une' → logprob: -2.143601655960083
    3. 'un' → logprob: -2.268601655960083
    4. ' un' → logprob: -3.018601655960083
    5. 'des' → logprob: -3.768601655960083
    6. '   ' → logprob: -4.393601894378662
    7. ' des' → logprob: -4.518601894378662
    8. 'pas' → logprob: -5.018601894378662
    9. ' ' → logprob: -7.143601894378662
    10. 'import' → logprob: -7.393601894378662

Token 455: ' test' (ID: 1746)
  Prédit: 'step'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'step' → logprob: -0.6267431974411011
    2. 'pas' → logprob: -0.8767431974411011
    3. 'for' → logprob: -3.2517433166503906
    4. ' step' → logprob: -5.501743316650391
    5. 'import' → logprob: -6.626743316650391
    6. ' for' → logprob: -6.626743316650391
    7. ' pas' → logprob: -6.751743316650391
    8. 'grid' → logprob: -7.126743316650391
    9. 'increment' → logprob: -7.376743316650391
    10. 'gran' → logprob: -8.12674331665039

Token 456: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02890484221279621
    2. ' step' → logprob: -3.778904914855957
    3. '    
' → logprob: -6.403904914855957
    4. 'step' → logprob: -7.028904914855957
    5. '
' → logprob: -7.278904914855957
    6. ' de' → logprob: -7.403904914855957
    7. ':' → logprob: -7.653904914855957
    8. 'import' → logprob: -8.653904914855957
    9. ' pas' → logprob: -8.778904914855957
    10. 'n' → logprob: -8.903904914855957

Token 457: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01355745829641819
    2. '
' → logprob: -4.888557434082031
    3. '    
' → logprob: -6.263557434082031
    4. ' step' → logprob: -6.263557434082031
    5. 'step' → logprob: -6.763557434082031
    6. ' 
' → logprob: -8.138557434082031
    7. 'n' → logprob: -8.513557434082031
    8. 'for' → logprob: -9.388557434082031
    9. ' for' → logprob: -9.513557434082031
    10. '  
' → logprob: -9.888557434082031

Token 458: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22440552711486816
    2. ' step' → logprob: -1.9744055271148682
    3. 'step' → logprob: -2.849405527114868
    4. '
' → logprob: -6.099405288696289
    5. ' grid' → logprob: -7.349405288696289
    6. 'grid' → logprob: -8.349405288696289
    7. ' for' → logprob: -8.474405288696289
    8. '    
' → logprob: -8.974405288696289
    9. 'n' → logprob: -9.224405288696289
    10. ' spacing' → logprob: -9.224405288696289

Token 459: ' n' (ID: 297)
  Prédit: 'step'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'step' → logprob: -0.21146835386753082
    2. ' step' → logprob: -1.7114683389663696
    3. '   ' → logprob: -5.46146821975708
    4. 'grid' → logprob: -5.58646821975708
    5. ' grid' → logprob: -6.33646821975708
    6. 'steps' → logprob: -9.586468696594238
    7. ' ' → logprob: -9.961468696594238
    8. 'STEP' → logprob: -10.711468696594238
    9. 'pas' → logprob: -11.211468696594238
    10. 'size' → logprob: -11.461468696594238

Token 460: ' discr' (ID: 23059)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7787123322486877
    2. '_steps' → logprob: -1.153712272644043
    3. '_points' → logprob: -2.528712272644043
    4. '=' → logprob: -3.028712272644043
    5. '   ' → logprob: -3.403712272644043
    6. '_grid' → logprob: -3.653712272644043
    7. '_' → logprob: -4.278712272644043
    8. 'um' → logprob: -4.653712272644043
    9. '_step' → logprob: -5.278712272644043
    10. 'steps' → logprob: -6.153712272644043

Token 461: 'ét' (ID: 3913)
  Prédit: 'et'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'et' → logprob: -0.041154783219099045
    2. '=' → logprob: -4.291154861450195
    3. 'ret' → logprob: -4.291154861450195
    4. 'cret' → logprob: -4.916154861450195
    5. 'ét' → logprob: -6.041154861450195
    6. 'e' → logprob: -7.666154861450195
    7. ' =' → logprob: -7.666154861450195
    8. 't' → logprob: -8.166154861450195
    9. '   ' → logprob: -8.416154861450195
    10. 'er' → logprob: -9.041154861450195

Token 462: 'isations' (ID: 59651)
  Prédit: 'ize'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ize' → logprob: -0.5952679514884949
    2. 'et' → logprob: -1.8452680110931396
    3. 'ized' → logprob: -1.9702680110931396
    4. '=' → logprob: -2.9702680110931396
    5. ' =' → logprob: -3.4702680110931396
    6. 't' → logprob: -3.9702680110931396
    7. 'er' → logprob: -4.9702677726745605
    8. 'ise' → logprob: -5.5952677726745605
    9. 'izer' → logprob: -5.5952677726745605
    10. 'iser' → logprob: -5.5952677726745605

Token 463: ' suff' (ID: 9490)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3134194314479828
    2. '=' → logprob: -1.3134194612503052
    3. '   ' → logprob: -9.188419342041016
    4. '=int' → logprob: -10.938419342041016
    5. ' =
' → logprob: -11.563419342041016
    6. '_' → logprob: -12.313419342041016
    7. '=n' → logprob: -12.313419342041016
    8. '=
' → logprob: -12.563419342041016
    9. '_points' → logprob: -12.563419342041016
    10. '_n' → logprob: -12.938419342041016

Token 464: 'isent' (ID: 68781)
  Prédit: 'it'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.07659097015857697
    2. 'isant' → logprob: -3.7015910148620605
    3. 'isent' → logprob: -4.2015910148620605
    4. 'ices' → logprob: -4.4515910148620605
    5. 'icient' → logprob: -5.0765910148620605
    6. '=' → logprob: -5.3265910148620605
    7. 'is' → logprob: -5.9515910148620605
    8. 'ient' → logprob: -5.9515910148620605
    9. 'i' → logprob: -6.3265910148620605
    10. 'ice' → logprob: -6.7015910148620605

Token 465: ' pour' (ID: 1930)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5264884829521179
    2. ' =' → logprob: -0.9014884829521179
    3. '   ' → logprob: -5.776488304138184
    4. '=
' → logprob: -10.026488304138184
    5. '=n' → logprob: -10.026488304138184
    6. ' =
' → logprob: -10.026488304138184
    7. 'n' → logprob: -10.276488304138184
    8. ',' → logprob: -10.651488304138184
    9. '=int' → logprob: -11.526488304138184
    10. 'def' → logprob: -11.526488304138184

Token 466: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9700354337692261
    2. ' i' → logprob: -1.595035433769226
    3. 'int' → logprob: -2.4700355529785156
    4. ' range' → logprob: -2.5950355529785156
    5. ' n' → logprob: -3.0950355529785156
    6. ' cx' → logprob: -3.3450355529785156
    7. 'range' → logprob: -3.7200355529785156
    8. '100' → logprob: -3.8450355529785156
    9. 'i' → logprob: -4.095035552978516
    10. ' int' → logprob: -4.220035552978516

Token 467: '0' (ID: 15)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '100' → logprob: -0.2756320834159851
    2. 'n' → logprob: -2.65063214302063
    3. 'i' → logprob: -3.27563214302063
    4. '50' → logprob: -3.65063214302063
    5. 'int' → logprob: -3.65063214302063
    6. ' ' → logprob: -4.025631904602051
    7. 'r' → logprob: -4.025631904602051
    8. 'range' → logprob: -4.650631904602051
    9. 'x' → logprob: -4.900631904602051
    10. 'l' → logprob: -5.275631904602051

Token 468: '.' (ID: 13)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.42277276515960693
    2. ',' → logprob: -2.4227728843688965
    3. ' =' → logprob: -2.6727728843688965
    4. '100' → logprob: -2.7977728843688965
    5. '.' → logprob: -3.0477728843688965
    6. '<=' → logprob: -4.0477728843688965
    7. ' <=' → logprob: -4.1727728843688965
    8. ' ,' → logprob: -4.1727728843688965
    9. ' ' → logprob: -4.6727728843688965
    10. '0' → logprob: -4.7977728843688965

Token 469: '01' (ID: 2290)
  Prédit: '01'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '01' → logprob: -0.5883690118789673
    2. '1' → logprob: -0.8383690118789673
    3. '5' → logprob: -5.463368892669678
    4. '001' → logprob: -5.463368892669678
    5. '0' → logprob: -5.713368892669678
    6. '05' → logprob: -8.213369369506836
    7. ' ' → logprob: -8.463369369506836
    8. 'r' → logprob: -10.963369369506836
    9. '   ' → logprob: -11.213369369506836
    10. '005' → logprob: -11.713369369506836

Token 470: ' de' (ID: 334)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.34440627694129944
    2. '   ' → logprob: -1.719406247138977
    3. 'n' → logprob: -2.3444063663482666
    4. '    
' → logprob: -5.8444061279296875
    5. ' =' → logprob: -6.0944061279296875
    6. ' n' → logprob: -6.0944061279296875
    7. '=' → logprob: -6.2194061279296875
    8. ')' → logprob: -6.5944061279296875
    9. 'w' → logprob: -7.0944061279296875
    10. '0' → logprob: -7.7194061279296875

Token 471: ' précision' (ID: 130591)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.10394865274429321
    2. 'l' → logprob: -3.7289485931396484
    3. 'pr' → logprob: -4.228948593139648
    4. 'r' → logprob: -4.478948593139648
    5. ' pas' → logprob: -4.603948593139648
    6. 'la' → logprob: -4.853948593139648
    7. 'precision' → logprob: -4.978948593139648
    8. ' précision' → logprob: -4.978948593139648
    9. 'm' → logprob: -5.228948593139648
    10. 'rés' → logprob: -5.478948593139648

Token 472: '.
' (ID: 558)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.8851994276046753
    2. '   ' → logprob: -0.8851994276046753
    3. '
' → logprob: -1.7601994276046753
    4. ' n' → logprob: -6.260199546813965
    5. '    
' → logprob: -8.385199546813965
    6. '\n' → logprob: -8.760199546813965
    7. ' 
' → logprob: -9.135199546813965
    8. '	n' → logprob: -9.635199546813965
    9. ',' → logprob: -9.885199546813965
    10. '=' → logprob: -10.385199546813965

Token 473: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16986209154129028
    2. 'n' → logprob: -1.9198620319366455
    3. ' n' → logprob: -5.294862270355225
    4. '
' → logprob: -5.544862270355225
    5. '    
' → logprob: -7.669862270355225
    6. ' 
' → logprob: -9.419861793518066
    7. '\n' → logprob: -10.169861793518066
    8. '	n' → logprob: -10.169861793518066
    9. '```' → logprob: -10.919861793518066
    10. '  
' → logprob: -11.294861793518066

Token 474: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02422802709043026
    2. 'n' → logprob: -3.774228096008301
    3. ' n' → logprob: -7.149228096008301
    4. '
' → logprob: -8.7742280960083
    5. '    
' → logprob: -10.1492280960083
    6. '	n' → logprob: -13.6492280960083
    7. '```' → logprob: -14.3992280960083
    8. ' 
' → logprob: -14.8992280960083
    9. '   ' → logprob: -15.5242280960083
    10. 'def' → logprob: -15.5242280960083

Token 475: ' steps' (ID: 10331)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4408533573150635
    2. 'n' → logprob: -1.3158533573150635
    3. ' n' → logprob: -2.4408533573150635
    4. '
' → logprob: -7.190853118896484
    5. ' for' → logprob: -8.440853118896484
    6. 'for' → logprob: -9.565853118896484
    7. ' ' → logprob: -9.690853118896484
    8. '	n' → logprob: -10.440853118896484
    9. '    
' → logprob: -11.065853118896484
    10. '  ' → logprob: -12.190853118896484

Token 476: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759409070014954
    2. ' =' → logprob: -0.8259409070014954
    3. '=int' → logprob: -14.20094108581543
    4. '   ' → logprob: -14.45094108581543
    5. ',' → logprob: -16.70094108581543
    6. '＝' → logprob: -17.07594108581543
    7. 's' → logprob: -17.07594108581543
    8. '_' → logprob: -17.07594108581543
    9. ' ' → logprob: -17.32594108581543
    10. ')' → logprob: -17.82594108581543

Token 477: ' ' (ID: 220)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.08511190116405487
    2. 'int' → logprob: -2.5851118564605713
    3. ' ' → logprob: -5.71011209487915
    4. ' int' → logprob: -5.96011209487915
    5. '101' → logprob: -8.085111618041992
    6. '201' → logprob: -14.460111618041992
    7. '200' → logprob: -14.710111618041992
    8. '500' → logprob: -14.835111618041992
    9. '   ' → logprob: -14.960111618041992
    10. '10' → logprob: -15.335111618041992

Token 478: '200' (ID: 1179)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '100' → logprob: -0.38708335161209106
    2. 'int' → logprob: -1.1370832920074463
    3. ' int' → logprob: -8.637083053588867
    4. '101' → logprob: -11.512083053588867
    5. '(int' → logprob: -11.512083053588867
    6. ' ' → logprob: -11.637083053588867
    7. '(' → logprob: -13.637083053588867
    8. '[int' → logprob: -13.637083053588867
    9. 'math' → logprob: -13.637083053588867
    10. '10' → logprob: -13.762083053588867

Token 479: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0029516739305108786
    2. '    
' → logprob: -7.252951622009277
    3. '   ' → logprob: -7.502951622009277
    4. 'import' → logprob: -7.627951622009277
    5. ',' → logprob: -8.377951622009277
    6. 'for' → logprob: -8.502951622009277
    7. '  
' → logprob: -8.627951622009277
    8. 'x' → logprob: -9.252951622009277
    9. '
' → logprob: -9.752951622009277
    10. '<|end|>' → logprob: -9.877951622009277

Token 480: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.00023083435371518135
    2. '    
' → logprob: -9.25023078918457
    3. '   ' → logprob: -9.50023078918457
    4. '  
' → logprob: -10.75023078918457
    5. '
' → logprob: -11.37523078918457
    6. 'import' → logprob: -12.12523078918457
    7. '0' → logprob: -12.37523078918457
    8. ' 
' → logprob: -12.75023078918457
    9. '

' → logprob: -13.12523078918457
    10. 'range' → logprob: -13.37523078918457

Token 481: ' ' (ID: 220)
  Prédit: ' step'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' step' → logprob: -0.5624454617500305
    2. 'step' → logprob: -1.6874454021453857
    3. ' delta' → logprob: -2.6874454021453857
    4. 'range' → logprob: -3.5624454021453857
    5. 'delta' → logprob: -3.6874454021453857
    6. ' spacing' → logprob: -3.6874454021453857
    7. ' range' → logprob: -4.062445640563965
    8. ' size' → logprob: -4.312445640563965
    9. ' grid' → logprob: -4.437445640563965
    10. ' margin' → logprob: -4.812445640563965

Token 482: '0' (ID: 15)
  Prédit: 'step'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'step' → logprob: -0.44115591049194336
    2. 'int' → logprob: -1.6911559104919434
    3. '100' → logprob: -2.9411559104919434
    4. 'precision' → logprob: -3.1911559104919434
    5. 'resolution' → logprob: -4.191155910491943
    6. 'import' → logprob: -4.441155910491943
    7. 'pas' → logprob: -4.941155910491943
    8. '1' → logprob: -5.316155910491943
    9. 'grid' → logprob: -5.691155910491943
    10. 'interval' → logprob: -5.816155910491943

Token 483: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0007154120248742402
    2. ' .' → logprob: -7.250715255737305
    3. '..' → logprob: -13.000715255737305
    4. ' ' → logprob: -13.750715255737305
    5. '0' → logprob: -14.625715255737305
    6. ',' → logprob: -14.750715255737305
    7. '
' → logprob: -14.750715255737305
    8. '.
' → logprob: -15.125715255737305
    9. '#' → logprob: -16.500715255737305
    10. '...' → logprob: -16.563215255737305

Token 484: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.002922087674960494
    2. '01' → logprob: -6.377922058105469
    3. '05' → logprob: -7.377922058105469
    4. '49' → logprob: -8.252922058105469
    5. '0' → logprob: -8.752922058105469
    6. '005' → logprob: -9.002922058105469
    7. '495' → logprob: -10.627922058105469
    8. '50' → logprob: -10.877922058105469
    9. '1' → logprob: -12.377922058105469
    10. '51' → logprob: -13.252922058105469

Token 485: ' unité' (ID: 181741)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.8644970655441284
    2. '
' → logprob: -1.6144970655441284
    3. '<|end|>' → logprob: -1.7394970655441284
    4. 'import' → logprob: -2.614497184753418
    5. ' ' → logprob: -3.614497184753418
    6. 'steps' → logprob: -3.739497184753418
    7. '000' → logprob: -3.864497184753418
    8. '.' → logprob: -4.114497184753418
    9. ')' → logprob: -4.614497184753418
    10. '00' → logprob: -5.114497184753418

Token 486: ' pour' (ID: 1930)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.19977210462093353
    2. '   ' → logprob: -2.4497721195220947
    3. '    
' → logprob: -2.5747721195220947
    4. '  
' → logprob: -5.324771881103516
    5. '<|end|>' → logprob: -6.074771881103516
    6. ',' → logprob: -6.199771881103516
    7. 'step' → logprob: -6.449771881103516
    8. 'range' → logprob: -6.574771881103516
    9. ' 
' → logprob: -6.949771881103516
    10. '   
' → logprob: -7.199771881103516

Token 487: ' la' (ID: 557)
  Prédit: 'step'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'step' → logprob: -1.4578343629837036
    2. 'la' → logprob: -1.7078343629837036
    3. ' la' → logprob: -2.207834243774414
    4. 'x' → logprob: -2.832834243774414
    5. ' pas' → logprob: -2.832834243774414
    6. 'le' → logprob: -2.832834243774414
    7. 'l' → logprob: -2.957834243774414
    8. ' step' → logprob: -2.957834243774414
    9. 'pas' → logprob: -3.082834243774414
    10. ' ' → logprob: -3.582834243774414

Token 488: ' grille' (ID: 99153)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.39032694697380066
    2. ' pas' → logprob: -2.515326976776123
    3. 'gr' → logprob: -3.015326976776123
    4. 'step' → logprob: -3.640326976776123
    5. 'placement' → logprob: -3.765326976776123
    6. 'center' → logprob: -4.265326976776123
    7. 'd' → logprob: -4.515326976776123
    8. 'precision' → logprob: -4.515326976776123
    9. ' grille' → logprob: -4.765326976776123
    10. 'centre' → logprob: -4.890326976776123

Token 489: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.05038413777947426
    2. '   ' → logprob: -3.425384044647217
    3. '<|end|>' → logprob: -5.175384044647217
    4. '    
' → logprob: -5.425384044647217
    5. 'x' → logprob: -7.050384044647217
    6. 'range' → logprob: -7.175384044647217
    7. 'for' → logprob: -7.300384044647217
    8. 'step' → logprob: -7.300384044647217
    9. 'delta' → logprob: -7.425384044647217
    10. ',' → logprob: -7.800384044647217

Token 490: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22183598577976227
    2. '
' → logprob: -1.721835970878601
    3. '    
' → logprob: -4.846836090087891
    4. ' for' → logprob: -5.971836090087891
    5. 'step' → logprob: -5.971836090087891
    6. ' step' → logprob: -6.096836090087891
    7. 'for' → logprob: -6.721836090087891
    8. ' spacing' → logprob: -7.221836090087891
    9. '  
' → logprob: -7.721836090087891
    10. 'delta' → logprob: -8.09683609008789

Token 491: ' delta' (ID: 18800)
  Prédit: ' step'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' step' → logprob: -0.46490949392318726
    2. ' for' → logprob: -2.214909553527832
    3. 'step' → logprob: -2.464909553527832
    4. ' dx' → logprob: -2.589909553527832
    5. 'for' → logprob: -3.714909553527832
    6. '
' → logprob: -4.214909553527832
    7. ' grid' → logprob: -4.464909553527832
    8. ' spacing' → logprob: -4.714909553527832
    9. 'dx' → logprob: -4.839909553527832
    10. ' min' → logprob: -4.964909553527832

Token 492: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10076717287302017
    2. '=' → logprob: -2.350767135620117
    3. ' ' → logprob: -7.850767135620117
    4. '_' → logprob: -9.225767135620117
    5. 'x' → logprob: -10.350767135620117
    6. '_x' → logprob: -10.475767135620117
    7. 's' → logprob: -12.350767135620117
    8. '_=' → logprob: -12.725767135620117
    9. 'r' → logprob: -13.225767135620117
    10. '_step' → logprob: -14.850767135620117

Token 493: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.06009291112422943
    2. ' ' → logprob: -3.1850929260253906
    3. '0' → logprob: -4.560092926025391
    4. '(' → logprob: -5.185092926025391
    5. '50' → logprob: -7.935092926025391
    6. '(r' → logprob: -8.18509292602539
    7. '100' → logprob: -8.43509292602539
    8. 'r' → logprob: -11.31009292602539
    9. '500' → logprob: -12.31009292602539
    10. ' r' → logprob: -12.43509292602539

Token 494: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -1.9266199160483666e-05
    2. ' ' → logprob: -11.000019073486328
    3. '(' → logprob: -13.125019073486328
    4. '   ' → logprob: -15.625019073486328
    5. '101' → logprob: -16.375019073486328
    6. ')' → logprob: -16.625019073486328
    7. '１００' → logprob: -17.500019073486328
    8. ' (' → logprob: -18.500019073486328
    9. '=' → logprob: -18.875019073486328
    10. '1' → logprob: -19.000019073486328

Token 495: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.16030049324035645
    2. '-' → logprob: -1.9103004932403564
    3. ' ' → logprob: -10.160300254821777
    4. '.' → logprob: -10.410300254821777
    5. '   ' → logprob: -12.535300254821777
    6. ')' → logprob: -12.660300254821777
    7. '  ' → logprob: -15.660300254821777
    8. ' ' → logprob: -15.785300254821777
    9. '0' → logprob: -16.285301208496094
    10. ',' → logprob: -16.910301208496094

Token 496: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.06994488090276718
    2. ' ' → logprob: -2.6949448585510254
    3. '   ' → logprob: -11.819945335388184
    4. '  ' → logprob: -13.944945335388184
    5. '    ' → logprob: -16.444944381713867
    6. 'r' → logprob: -16.444944381713867
    7. '(' → logprob: -16.569944381713867
    8. '	' → logprob: -16.819944381713867
    9. '0' → logprob: -16.944944381713867
    10. '     ' → logprob: -17.319944381713867

Token 497: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0013270224444568157
    2. ' ' → logprob: -6.626327037811279
    3. '   ' → logprob: -14.001326560974121
    4. 'r' → logprob: -16.126327514648438
    5. '  ' → logprob: -16.626327514648438
    6. '(' → logprob: -17.001327514648438
    7. '	' → logprob: -18.376327514648438
    8. '0' → logprob: -18.626327514648438
    9. ' (' → logprob: -18.751327514648438
    10. '    ' → logprob: -19.126327514648438

Token 498: ' *' (ID: 425)
  Prédit: '*r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*r' → logprob: -0.07235825806856155
    2. ' *' → logprob: -2.8223583698272705
    3. '*' → logprob: -4.572358131408691
    4. 'r' → logprob: -13.072358131408691
    5. '   ' → logprob: -14.072358131408691
    6. ')' → logprob: -16.072359085083008
    7. ' ' → logprob: -16.197359085083008
    8. ' r' → logprob: -17.072359085083008
    9. ' ' → logprob: -17.947359085083008
    10. '	r' → logprob: -17.947359085083008

Token 499: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -4.5491004129871726e-05
    2. ' r' → logprob: -10.000045776367188
    3. '	r' → logprob: -17.875045776367188
    4. '   ' → logprob: -18.125045776367188
    5. '_r' → logprob: -20.750045776367188
    6. '*r' → logprob: -20.750045776367188
    7. ' ' → logprob: -21.750045776367188
    8. ')' → logprob: -22.375045776367188
    9. '  ' → logprob: -23.125045776367188
    10. '
' → logprob: -23.625045776367188

Token 500: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.2961512513575144e-05
    2. ' )' → logprob: -11.000022888183594
    3. ')/' → logprob: -12.000022888183594
    4. '   ' → logprob: -17.500022888183594
    5. ')
' → logprob: -17.625022888183594
    6. ')/(' → logprob: -18.125022888183594
    7. '）' → logprob: -20.375022888183594
    8. ' ' → logprob: -20.625022888183594
    9. ')

' → logprob: -20.625022888183594
    10. ' ' → logprob: -21.000022888183594

Token 501: ' /' (ID: 820)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.0788988247513771
    2. ' /' → logprob: -2.5788989067077637
    3. '   ' → logprob: -11.828898429870605
    4. '/
' → logprob: -13.828898429870605
    5. '
' → logprob: -14.453898429870605
    6. 'steps' → logprob: -16.453899383544922
    7. ')' → logprob: -17.328899383544922
    8. 's' → logprob: -17.703899383544922
    9. ' /
' → logprob: -17.828899383544922
    10. '/d' → logprob: -17.953899383544922

Token 502: ' steps' (ID: 10331)
  Prédit: 'steps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'steps' → logprob: -0.0002632430987432599
    2. ' steps' → logprob: -8.250263214111328
    3. '(' → logprob: -13.250263214111328
    4. 'step' → logprob: -15.375263214111328
    5. '200' → logprob: -17.375263214111328
    6. 'float' → logprob: -17.750263214111328
    7. '   ' → logprob: -18.125263214111328
    8. ' (' → logprob: -18.750263214111328
    9. '_steps' → logprob: -19.250263214111328
    10. 'Steps' → logprob: -19.375263214111328

Token 503: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6138644218444824
    2. '
' → logprob: -0.9888644218444824
    3. '    
' → logprob: -2.9888644218444824
    4. '\n' → logprob: -4.488864421844482
    5. '<|end|>' → logprob: -4.613864421844482
    6. '  
' → logprob: -5.363864421844482
    7. ' 
' → logprob: -6.113864421844482
    8. 'for' → logprob: -6.238864421844482
    9. ' for' → logprob: -6.363864421844482
    10. ')' → logprob: -6.738864421844482

Token 504: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9530977606773376
    2. '   ' → logprob: -1.3280978202819824
    3. '    
' → logprob: -1.9530978202819824
    4. 'for' → logprob: -2.0780978202819824
    5. ' for' → logprob: -3.2030978202819824
    6. '\n' → logprob: -3.7030978202819824
    7. '  
' → logprob: -4.953097820281982
    8. ' 
' → logprob: -5.078097820281982
    9. '   
' → logprob: -6.453097820281982
    10. '```' → logprob: -7.203097820281982

Token 505: ' if' (ID: 538)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6098667979240417
    2. 'for' → logprob: -0.9848667979240417
    3. '
' → logprob: -2.7348668575286865
    4. '   ' → logprob: -4.484866619110107
    5. ' 
' → logprob: -5.734866619110107
    6. '    
' → logprob: -6.359866619110107
    7. '\n' → logprob: -6.609866619110107
    8. '  
' → logprob: -8.234867095947266
    9. '   
' → logprob: -8.859867095947266
    10. '```' → logprob: -9.984867095947266

Token 506: ' delta' (ID: 18800)
  Prédit: ' delta'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' delta' → logprob: -0.8030957579612732
    2. ' r' → logprob: -1.178095817565918
    3. 'r' → logprob: -2.053095817565918
    4. 'delta' → logprob: -2.428095817565918
    5. ' ' → logprob: -4.053095817565918
    6. '100' → logprob: -5.428095817565918
    7. ' (' → logprob: -5.803095817565918
    8. '(' → logprob: -6.553095817565918
    9. '(delta' → logprob: -7.678095817565918
    10. ' not' → logprob: -8.803095817565918

Token 507: ' <' (ID: 464)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.25208780169487
    2. ' <=' → logprob: -1.5020878314971924
    3. '==' → logprob: -9.127087593078613
    4. '<' → logprob: -10.252087593078613
    5. ' <' → logprob: -11.752087593078613
    6. ' ==' → logprob: -12.002087593078613
    7. '=' → logprob: -15.502087593078613
    8. '>' → logprob: -15.752087593078613
    9. ')<=' → logprob: -15.752087593078613
    10. ' ' → logprob: -16.25208854675293

Token 508: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06049042567610741
    2. ' ' → logprob: -3.185490369796753
    3. '1' → logprob: -4.060490608215332
    4. 'r' → logprob: -9.560490608215332
    5. '   ' → logprob: -11.560490608215332
    6. ' r' → logprob: -11.810490608215332
    7. '=' → logprob: -12.810490608215332
    8. '10' → logprob: -13.185490608215332
    9. '>' → logprob: -13.310490608215332
    10. '2' → logprob: -13.810490608215332

Token 509: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.014728427864611149
    2. '1' → logprob: -4.264728546142578
    3. ' ' → logprob: -7.514728546142578
    4. 'r' → logprob: -11.389728546142578
    5. '10' → logprob: -12.764728546142578
    6. '=' → logprob: -13.639728546142578
    7. '5' → logprob: -13.889728546142578
    8. '2' → logprob: -14.014728546142578
    9. '   ' → logprob: -14.514728546142578
    10. '4' → logprob: -15.014728546142578

Token 510: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4804052710533142
    2. ':
' → logprob: -0.9804052710533142
    3. '   ' → logprob: -5.230405330657959
    4. ':return' → logprob: -7.730405330657959
    5. '       ' → logprob: -7.980405330657959
    6. ' :
' → logprob: -9.3554048538208
    7. ' :' → logprob: -9.9804048538208
    8. ':
' → logprob: -10.8554048538208
    9. ' or' → logprob: -11.4804048538208
    10. '):
' → logprob: -12.7304048538208

Token 511: ' ' (ID: 220)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008888965472579002
    2. '   ' → logprob: -5.008889198303223
    3. ' return' → logprob: -6.883889198303223
    4. '
' → logprob: -7.508889198303223
    5. 'return' → logprob: -7.633889198303223
    6. '0' → logprob: -10.258889198303223
    7. '1' → logprob: -10.883889198303223
    8. '    ' → logprob: -11.133889198303223
    9. '	return' → logprob: -11.508889198303223
    10. '    
' → logprob: -12.133889198303223

Token 512: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.3758091330528259
    2. '       ' → logprob: -1.6258091926574707
    3. '   ' → logprob: -2.6258091926574707
    4. ' return' → logprob: -3.1258091926574707
    5. '	return' → logprob: -8.750808715820312
    6. '
' → logprob: -9.750808715820312
    7. ':return' → logprob: -12.375808715820312
    8. ' ' → logprob: -13.000808715820312
    9. '    ' → logprob: -13.500808715820312
    10. 'eturn' → logprob: -13.625808715820312

Token 513: ' pas' (ID: 2173)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.4086635708808899
    2. ' return' → logprob: -1.1586635112762451
    3. '   ' → logprob: -3.908663511276245
    4. '       ' → logprob: -7.283663749694824
    5. '	return' → logprob: -7.283663749694824
    6. 'False' → logprob: -9.408663749694824
    7. '
' → logprob: -11.408663749694824
    8. ' False' → logprob: -12.033663749694824
    9. ' ' → logprob: -12.158663749694824
    10. '    ' → logprob: -12.658663749694824

Token 514: ' d' (ID: 272)
  Prédit: ' possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' possible' → logprob: -0.509376049041748
    2. 'possible' → logprob: -1.134376049041748
    3. ' de' → logprob: -2.634376049041748
    4. 'de' → logprob: -5.884376049041748
    5. '_possible' → logprob: -6.884376049041748
    6. 'able' → logprob: -7.884376049041748
    7. '#' → logprob: -8.134376525878906
    8. ' return' → logprob: -8.259376525878906
    9. 'Possible' → logprob: -8.259376525878906
    10. 'poss' → logprob: -8.884376525878906

Token 515: ''espace' (ID: 118124)
  Prédit: ' place'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' place' → logprob: -0.7992897629737854
    2. ' possibilité' → logprob: -1.2992897033691406
    3. ' possible' → logprob: -1.7992897033691406
    4. ' chance' → logprob: -3.7992897033691406
    5. ' placement' → logprob: -4.299289703369141
    6. 'poss' → logprob: -4.424289703369141
    7. 'place' → logprob: -4.549289703369141
    8. ' space' → logprob: -4.549289703369141
    9. ' espace' → logprob: -4.674289703369141
    10. ' e' → logprob: -4.674289703369141

Token 516: ' possible' (ID: 4149)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16536447405815125
    2. '   ' → logprob: -2.0403645038604736
    3. ':' → logprob: -3.9153645038604736
    4. ':
' → logprob: -6.1653642654418945
    5. '    ' → logprob: -8.665364265441895
    6. ':return' → logprob: -10.040364265441895
    7. ' :' → logprob: -10.165364265441895
    8. '      ' → logprob: -10.790364265441895
    9. '           ' → logprob: -10.790364265441895
    10. ' :
' → logprob: -10.915364265441895

Token 517: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004399855621159077
    2. '   ' → logprob: -5.87939977645874
    3. '
' → logprob: -7.12939977645874
    4. ':' → logprob: -7.75439977645874
    5. ':
' → logprob: -8.254400253295898
    6. '    ' → logprob: -11.004400253295898
    7. ':return' → logprob: -11.004400253295898
    8. '    
' → logprob: -11.504400253295898
    9. ',' → logprob: -11.879400253295898
    10. ' return' → logprob: -11.879400253295898

Token 518: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0001347672223346308
    2. '   ' → logprob: -9.500134468078613
    3. 'return' → logprob: -10.125134468078613
    4. '
' → logprob: -11.375134468078613
    5. ' return' → logprob: -12.250134468078613
    6. '	' → logprob: -13.500134468078613
    7. '	   ' → logprob: -14.250134468078613
    8. '	return' → logprob: -14.375134468078613
    9. '        
' → logprob: -15.250134468078613
    10. '           ' → logprob: -15.625134468078613

Token 519: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.006697846110910177
    2. ' return' → logprob: -5.631697654724121
    3. '       ' → logprob: -6.256697654724121
    4. '   ' → logprob: -6.756697654724121
    5. '	return' → logprob: -11.381697654724121
    6. 'eturn' → logprob: -15.756697654724121
    7. '
' → logprob: -15.881697654724121
    8. ' ' → logprob: -15.881697654724121
    9. '{return' → logprob: -16.006698608398438
    10. ':return' → logprob: -16.256698608398438

Token 520: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.0009114635176956654
    2. ' False' → logprob: -7.000911235809326
    3. '   ' → logprob: -20.375911712646484
    4. 'True' → logprob: -20.875911712646484
    5. '(False' → logprob: -21.000911712646484
    6. 'false' → logprob: -21.750911712646484
    7. '=False' → logprob: -21.875911712646484
    8. 'None' → logprob: -22.375911712646484
    9. '_false' → logprob: -22.875911712646484
    10. ' ' → logprob: -23.125911712646484

Token 521: '
    
' (ID: 15698)
  Prédit: '    
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '    
' → logprob: -0.9890824556350708
    2. '
' → logprob: -1.2390824556350708
    3. '   ' → logprob: -1.4890824556350708
    4. '\n' → logprob: -2.4890823364257812
    5. '  
' → logprob: -3.7390823364257812
    6. ' 
' → logprob: -5.989082336425781
    7. '   
' → logprob: -7.239082336425781
    8. '<|end|>' → logprob: -7.239082336425781
    9. '\' → logprob: -7.364082336425781
    10. '        
' → logprob: -8.114082336425781

Token 522: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.8119887113571167
    2. 'for' → logprob: -1.0619887113571167
    3. '   ' → logprob: -1.5619887113571167
    4. '
' → logprob: -8.061988830566406
    5. '    
' → logprob: -8.811988830566406
    6. ' 
' → logprob: -10.436988830566406
    7. '	for' → logprob: -11.061988830566406
    8. '  
' → logprob: -11.936988830566406
    9. '   
' → logprob: -12.311988830566406
    10. ' ' → logprob: -12.436988830566406

Token 523: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0003023345780093223
    2. 'possible' → logprob: -9.2503023147583
    3. '   ' → logprob: -9.8753023147583
    4. 'import' → logprob: -10.0003023147583
    5. ' for' → logprob: -10.0003023147583
    6. 'valid' → logprob: -10.2503023147583
    7. 'step' → logprob: -12.2503023147583
    8. 'needle' → logprob: -12.5003023147583
    9. 'radius' → logprob: -12.8753023147583
    10. 'r' → logprob: -13.0003023147583

Token 524: ' On' (ID: 2160)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0029496510978788137
    2. 'import' → logprob: -6.7529497146606445
    3. ' for' → logprob: -7.3779497146606445
    4. 'possible' → logprob: -7.5029497146606445
    5. '   ' → logprob: -8.377949714660645
    6. 'valid' → logprob: -8.752949714660645
    7. 'step' → logprob: -10.377949714660645
    8. 'def' → logprob: -10.627949714660645
    9. 'cx' → logprob: -10.627949714660645
    10. 'from' → logprob: -10.752949714660645

Token 525: ' crée' (ID: 102256)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4741077125072479
    2. ' for' → logprob: -0.9741077423095703
    3. 'import' → logprob: -10.97410774230957
    4. '   ' → logprob: -12.34910774230957
    5. 'range' → logprob: -13.22410774230957
    6. ' continue' → logprob: -13.59910774230957
    7. 'continue' → logprob: -13.59910774230957
    8. 'def' → logprob: -13.72410774230957
    9. 'r' → logprob: -14.22410774230957
    10. ' import' → logprob: -14.59910774230957

Token 526: ' les' (ID: 1341)
  Prédit: ' une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.6710280179977417
    2. ' un' → logprob: -1.2960280179977417
    3. ' a' → logprob: -1.7960280179977417
    4. '   ' → logprob: -4.421028137207031
    5. 'a' → logprob: -4.796028137207031
    6. 'for' → logprob: -5.046028137207031
    7. 'une' → logprob: -5.296028137207031
    8. 'import' → logprob: -5.296028137207031
    9. 'un' → logprob: -5.671028137207031
    10. ' for' → logprob: -5.796028137207031

Token 527: ' listes' (ID: 179198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.718966007232666
    2. 'c' → logprob: -1.718966007232666
    3. 'possible' → logprob: -2.468966007232666
    4. 'points' → logprob: -3.093966007232666
    5. 'gr' → logprob: -3.218966007232666
    6. 'x' → logprob: -3.468966007232666
    7. 'positions' → logprob: -3.718966007232666
    8. 'import' → logprob: -3.843966007232666
    9. 'cx' → logprob: -3.843966007232666
    10. 'grid' → logprob: -4.218966007232666

Token 528: ' possibles' (ID: 97753)
  Prédit: ' cx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' cx' → logprob: -0.6596295237541199
    2. 'cx' → logprob: -0.9096295237541199
    3. 'x' → logprob: -3.0346295833587646
    4. ' x' → logprob: -4.5346293449401855
    5. '   ' → logprob: -5.0346293449401855
    6. ' des' → logprob: -5.7846293449401855
    7. 'import' → logprob: -5.7846293449401855
    8. ' of' → logprob: -6.9096293449401855
    9. 'possible' → logprob: -6.9096293449401855
    10. 'xs' → logprob: -7.0346293449401855

Token 529: ' de' (ID: 334)
  Prédit: 'cx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cx' → logprob: -0.36024704575538635
    2. ' cx' → logprob: -1.610247015953064
    3. '   ' → logprob: -2.7352471351623535
    4. 'x' → logprob: -3.4852471351623535
    5. 'possible' → logprob: -5.8602471351623535
    6. '(cx' → logprob: -6.9852471351623535
    7. ' possible' → logprob: -7.2352471351623535
    8. ' x' → logprob: -7.3602471351623535
    9. 'range' → logprob: -8.235246658325195
    10. '_x' → logprob: -8.360246658325195

Token 530: ' positions' (ID: 15897)
  Prédit: 'cx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cx' → logprob: -0.04656542092561722
    2. 'positions' → logprob: -3.296565532684326
    3. 'x' → logprob: -5.296565532684326
    4. ' cx' → logprob: -6.296565532684326
    5. 'c' → logprob: -6.921565532684326
    6. 'pos' → logprob: -8.546565055847168
    7. 'cent' → logprob: -8.671565055847168
    8. ' positions' → logprob: -9.296565055847168
    9. 'coords' → logprob: -9.546565055847168
    10. 'xs' → logprob: -10.546565055847168

Token 531: ' du' (ID: 1462)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7912390828132629
    2. 'cx' → logprob: -0.7912390828132629
    3. ' cx' → logprob: -2.416239023208618
    4. 'x' → logprob: -6.166239261627197
    5. '(cx' → logprob: -6.916239261627197
    6. '
' → logprob: -8.166238784790039
    7. 'c' → logprob: -9.041238784790039
    8. 'possible' → logprob: -9.041238784790039
    9. 'import' → logprob: -9.291238784790039
    10. '.cx' → logprob: -9.416238784790039

Token 532: ' centre' (ID: 13268)
  Prédit: 'centre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'centre' → logprob: -0.11662720143795013
    2. 'center' → logprob: -2.3666272163391113
    3. 'cx' → logprob: -4.241627216339111
    4. 'cent' → logprob: -6.741627216339111
    5. 'c' → logprob: -7.741627216339111
    6. ' centre' → logprob: -8.491626739501953
    7. 'x' → logprob: -10.741626739501953
    8. 'cen' → logprob: -11.241626739501953
    9. 'centr' → logprob: -11.491626739501953
    10. ' center' → logprob: -11.741626739501953

Token 533: ' possible' (ID: 4149)
  Prédit: 'cx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cx' → logprob: -0.1272856742143631
    2. ' cx' → logprob: -2.7522857189178467
    3. '   ' → logprob: -3.1272857189178467
    4. '(cx' → logprob: -5.502285480499268
    5. 'x' → logprob: -5.627285480499268
    6. 'cent' → logprob: -7.377285480499268
    7. '
' → logprob: -7.502285480499268
    8. '_x' → logprob: -7.502285480499268
    9. 'positions' → logprob: -7.877285480499268
    10. 'center' → logprob: -7.877285480499268

Token 534: '
' (ID: 198)
  Prédit: 'cx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cx' → logprob: -0.4380059540271759
    2. '   ' → logprob: -1.3130059242248535
    3. ' cx' → logprob: -3.3130059242248535
    4. 'x' → logprob: -3.6880059242248535
    5. '(cx' → logprob: -4.5630059242248535
    6. '
' → logprob: -4.9380059242248535
    7. '    
' → logprob: -6.1880059242248535
    8. '_x' → logprob: -6.6880059242248535
    9. 's' → logprob: -7.5630059242248535
    10. '.cx' → logprob: -8.313006401062012

Token 535: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03161061182618141
    2. 'cx' → logprob: -3.9066107273101807
    3. ' cx' → logprob: -5.156610488891602
    4. 'positions' → logprob: -6.656610488891602
    5. 'x' → logprob: -6.906610488891602
    6. '(cx' → logprob: -7.031610488891602
    7. '    
' → logprob: -7.531610488891602
    8. '
' → logprob: -7.781610488891602
    9. 'possible' → logprob: -7.906610488891602
    10. ' positions' → logprob: -8.406610488891602

Token 536: ' x' (ID: 1215)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0460134744644165
    2. ' cx' → logprob: -1.1710134744644165
    3. 'cx' → logprob: -1.6710134744644165
    4. 'possible' → logprob: -2.671013355255127
    5. 'positions' → logprob: -3.546013355255127
    6. ' possible' → logprob: -3.796013355255127
    7. ' positions' → logprob: -4.421013355255127
    8. 'x' (adapté à ' x') → logprob: -5.546013355255127
    9. 'xs' → logprob: -5.671013355255127
    10. 'pos' → logprob: -5.921013355255127

Token 537: '_candidates' (ID: 186937)
  Prédit: '_positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_positions' → logprob: -0.07109923660755157
    2. 's' → logprob: -3.071099281311035
    3. '_pos' → logprob: -4.821099281311035
    4. '_vals' → logprob: -4.946099281311035
    5. '_cent' → logprob: -5.446099281311035
    6. '_values' → logprob: -6.696099281311035
    7. '_candidates' → logprob: -7.196099281311035
    8. '_coords' → logprob: -7.946099281311035
    9. '_list' → logprob: -8.696099281311035
    10. '_' → logprob: -9.821099281311035

Token 538: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20141451060771942
    2. ' =' → logprob: -1.7014144659042358
    3. ',' → logprob: -14.076414108276367
    4. ' ' → logprob: -15.701414108276367
    5. '=[]' → logprob: -16.076414108276367
    6. '   ' → logprob: -16.326414108276367
    7. '=[' → logprob: -17.201414108276367
    8. '＝' → logprob: -17.451414108276367
    9. ')' → logprob: -17.451414108276367
    10. '[' → logprob: -17.826414108276367

Token 539: ' [' (ID: 723)
  Prédit: '[r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -0.004737226292490959
    2. '[' → logprob: -5.754737377166748
    3. ' [' → logprob: -6.504737377166748
    4. '[x' → logprob: -10.25473690032959
    5. '[i' → logprob: -11.50473690032959
    6. '[line' → logprob: -12.37973690032959
    7. '[pos' → logprob: -13.12973690032959
    8. '[num' → logprob: -13.62973690032959
    9. '[l' → logprob: -13.87973690032959
    10. '[row' → logprob: -14.12973690032959

Token 540: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -5.512236498361744e-07
    2. 'round' → logprob: -15.750000953674316
    3. ' r' → logprob: -15.875000953674316
    4. '(r' → logprob: -15.875000953674316
    5. '   ' → logprob: -16.125
    6. 'i' → logprob: -18.0
    7. '0' → logprob: -18.125
    8. 'max' → logprob: -19.5
    9. '	r' → logprob: -19.625
    10. '[r' → logprob: -19.625

Token 541: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.2524467408657074
    2. '+' → logprob: -1.5024467706680298
    3. '+i' → logprob: -7.62744665145874
    4. ' ' → logprob: -11.377447128295898
    5. ']' → logprob: -12.252447128295898
    6. '+
' → logprob: -12.502447128295898
    7. '+r' → logprob: -12.877447128295898
    8. '+k' → logprob: -13.252447128295898
    9. '+x' → logprob: -13.877447128295898
    10. '+j' → logprob: -14.377447128295898

Token 542: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00156152353156358
    2. 'delta' → logprob: -6.626561641693115
    3. ' i' → logprob: -8.751561164855957
    4. 'k' → logprob: -10.251561164855957
    5. 'j' → logprob: -10.251561164855957
    6. '(i' → logprob: -12.626561164855957
    7. ' delta' → logprob: -13.626561164855957
    8. '   ' → logprob: -13.751561164855957
    9. 'step' → logprob: -15.001561164855957
    10. '_i' → logprob: -15.376561164855957

Token 543: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.06196768581867218
    2. ' *' → logprob: -2.811967611312866
    3. ' ' → logprob: -17.436967849731445
    4. ' ' → logprob: -17.561967849731445
    5. '*d' → logprob: -18.936967849731445
    6. '*object' → logprob: -19.061967849731445
    7. '   ' → logprob: -19.311967849731445
    8. '*s' → logprob: -20.061967849731445
    9. '**' → logprob: -20.186967849731445
    10. '*out' → logprob: -21.311967849731445

Token 544: ' delta' (ID: 18800)
  Prédit: 'delta'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'delta' → logprob: -0.006715370807796717
    2. ' delta' → logprob: -5.006715297698975
    3. '_delta' → logprob: -19.506715774536133
    4. '(delta' → logprob: -19.881715774536133
    5. '.delta' → logprob: -20.881715774536133
    6. 'delimiter' → logprob: -21.756715774536133
    7. 'Delta' → logprob: -22.131715774536133
    8. 'δ' → logprob: -22.256715774536133
    9. ' ' → logprob: -22.381715774536133
    10. 'd' → logprob: -22.631715774536133

Token 545: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.03805181756615639
    2. 'for' → logprob: -3.2880518436431885
    3. ' ' → logprob: -11.53805160522461
    4. '	for' → logprob: -14.28805160522461
    5. ' ' → logprob: -18.28805160522461
    6. '
' → logprob: -19.16305160522461
    7. ']' → logprob: -19.16305160522461
    8. '```' → logprob: -19.41305160522461
    9. ' 
' → logprob: -19.53805160522461
    10. ')' → logprob: -19.53805160522461

Token 546: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.013845302164554596
    2. 'range' → logprob: -4.513845443725586
    3. ' range' → logprob: -6.513845443725586
    4. ' i' → logprob: -6.638845443725586
    5. 'in' → logprob: -13.388845443725586
    6. ' ' → logprob: -15.263845443725586
    7. 'x' → logprob: -15.513845443725586
    8. ' in' → logprob: -15.638845443725586
    9. '   ' → logprob: -16.763845443725586
    10. '  ' → logprob: -17.263845443725586

Token 547: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01816246658563614
    2. 'in' → logprob: -4.018162250518799
    3. 'range' → logprob: -12.143162727355957
    4. ' ' → logprob: -12.393162727355957
    5. ' i' → logprob: -14.018162727355957
    6. 'i' → logprob: -14.268162727355957
    7. ')' → logprob: -14.893162727355957
    8. ']' → logprob: -15.393162727355957
    9. 'import' → logprob: -15.393162727355957
    10. ',' → logprob: -15.768162727355957

Token 548: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.01416350994259119
    2. ' range' → logprob: -4.264163494110107
    3. '	range' → logprob: -19.639163970947266
    4. '(range' → logprob: -20.139163970947266
    5. ' ' → logprob: -21.139163970947266
    6. ' xrange' → logprob: -21.389163970947266
    7. '   ' → logprob: -22.764163970947266
    8. 'x' → logprob: -23.264163970947266
    9. '
' → logprob: -23.264163970947266
    10. 'rang' → logprob: -23.264163970947266

Token 549: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.010036430321633816
    2. 'steps' → logprob: -4.635036468505859
    3. ' (' → logprob: -8.76003646850586
    4. ' steps' → logprob: -9.13503646850586
    5. '(step' → logprob: -11.38503646850586
    6. '(int' → logprob: -13.01003646850586
    7. '_steps' → logprob: -14.63503646850586
    8. '((' → logprob: -15.26003646850586
    9. '   ' → logprob: -15.63503646850586
    10. '0' → logprob: -15.76003646850586

Token 550: 'steps' (ID: 27176)
  Prédit: 'steps'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'steps' → logprob: -0.00038598617538809776
    2. ' steps' → logprob: -7.875385761260986
    3. '(' → logprob: -13.250386238098145
    4. '0' → logprob: -13.250386238098145
    5. 'int' → logprob: -13.250386238098145
    6. '   ' → logprob: -15.000386238098145
    7. 'step' → logprob: -15.500386238098145
    8. '
' → logprob: -17.750385284423828
    9. '.steps' → logprob: -17.750385284423828
    10. '(int' → logprob: -17.875385284423828

Token 551: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5861953496932983
    2. ' +' → logprob: -1.3361953496932983
    3. ')]' → logprob: -1.7111953496932983
    4. ' )' → logprob: -9.83619499206543
    5. ')' → logprob: -12.08619499206543
    6. ')]
' → logprob: -13.33619499206543
    7. ' ]' → logprob: -13.58619499206543
    8. '   ' → logprob: -13.96119499206543
    9. ' ' → logprob: -14.58619499206543
    10. '1' → logprob: -14.71119499206543

Token 552: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.4855663721391466e-05
    2. ' ' → logprob: -11.125015258789062
    3. '   ' → logprob: -17.875015258789062
    4. '2' → logprob: -19.250015258789062
    5. ')' → logprob: -20.250015258789062
    6. '  ' → logprob: -21.000015258789062
    7. '```' → logprob: -21.500015258789062
    8. '0' → logprob: -21.625015258789062
    9. '１' → logprob: -21.875015258789062
    10. '
' → logprob: -21.875015258789062

Token 553: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.125000953674316
    3. '   ' → logprob: -20.125
    4. '2' → logprob: -20.5
    5. '１' → logprob: -21.375
    6. '
' → logprob: -21.5
    7. '```' → logprob: -21.5
    8. '

' → logprob: -22.25
    9. '۱' → logprob: -22.5
    10. '0' → logprob: -22.5

Token 554: ')]
' (ID: 11587)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.006878999527543783
    2. ')]' → logprob: -5.006878852844238
    3. ' ]' → logprob: -8.756878852844238
    4. ')' → logprob: -12.131878852844238
    5. ']
' → logprob: -14.381878852844238
    6. ']

' → logprob: -15.881878852844238
    7. ']
' → logprob: -17.381879806518555
    8. ']]' → logprob: -17.506879806518555
    9. '`]' → logprob: -17.631879806518555
    10. '>]' → logprob: -17.756879806518555

Token 555: '   ' (ID: 271)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.2853279113769531
    2. ' y' → logprob: -1.5353279113769531
    3. '   ' → logprob: -4.035327911376953
    4. '
' → logprob: -4.410327911376953
    5. ',y' → logprob: -6.785327911376953
    6. ',' → logprob: -7.660327911376953
    7. '    
' → logprob: -7.660327911376953
    8. ' ' → logprob: -8.535327911376953
    9. '  
' → logprob: -8.660327911376953
    10. ' 
' → logprob: -8.910327911376953

Token 556: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' (adapté à ' y') → logprob: -0.0011703446507453918
    2. ' y' → logprob: -6.7511701583862305
    3. '	y' → logprob: -17.001171112060547
    4. '   ' → logprob: -17.126171112060547
    5. 'yc' → logprob: -17.126171112060547
    6. ' ' → logprob: -17.501171112060547
    7. 'cy' → logprob: -18.251171112060547
    8. '_y' → logprob: -18.376171112060547
    9. '```' → logprob: -19.376171112060547
    10. 'y's' → logprob: -19.376171112060547

Token 557: '_candidates' (ID: 186937)
  Prédit: '_candidates'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_candidates' → logprob: -1.2664456789934775e-06
    2. '_candidate' → logprob: -14.250000953674316
    3. '_' → logprob: -14.875000953674316
    4. 'Candidates' → logprob: -17.375001907348633
    5. '```' → logprob: -17.375001907348633
    6. ' _' → logprob: -17.500001907348633
    7. '}_' → logprob: -17.625001907348633
    8. '_positions' → logprob: -17.875001907348633
    9. ']_' → logprob: -18.000001907348633
    10. '_s' → logprob: -18.125001907348633

Token 558: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.029751067981123924
    2. '=' → logprob: -3.5297510623931885
    3. ' =[' → logprob: -14.40475082397461
    4. '=[' → logprob: -16.77975082397461
    5. '[' → logprob: -18.65475082397461
    6. ' ' → logprob: -19.15475082397461
    7. ' [' → logprob: -19.15475082397461
    8. ']' → logprob: -19.90475082397461
    9. ')' → logprob: -20.02975082397461
    10. ' ' → logprob: -20.15475082397461

Token 559: ' x' (ID: 1215)
  Prédit: '[r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -0.16046753525733948
    2. ' [' → logprob: -1.910467505455017
    3. '[' → logprob: -8.535467147827148
    4. '[x' → logprob: -10.035467147827148
    5. 'x' → logprob: -13.535467147827148
    6. '   ' → logprob: -14.285467147827148
    7. 'r' → logprob: -14.785467147827148
    8. ' ' → logprob: -15.535467147827148
    9. ' x' → logprob: -15.785467147827148
    10. ' r' → logprob: -16.28546714782715

Token 560: '_candidates' (ID: 186937)
  Prédit: '_candidates'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_candidates' → logprob: -1.5048530030981055e-06
    2. 'x' → logprob: -14.875001907348633
    3. '[' → logprob: -15.250001907348633
    4. '+' → logprob: -15.375001907348633
    5. '_candidate' → logprob: -15.625001907348633
    6. 'Candidates' → logprob: -15.875001907348633
    7. ' +' → logprob: -17.125001907348633
    8. 'c' → logprob: -17.125001907348633
    9. '_choices' → logprob: -17.250001907348633
    10. '_' → logprob: -17.500001907348633

Token 561: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 562: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.14459998905658722
    2. ' for' → logprob: -2.1445999145507812
    3. '   ' → logprob: -4.144599914550781
    4. '
' → logprob: -6.644599914550781
    5. '    
' → logprob: -8.269599914550781
    6. '	for' → logprob: -10.394599914550781
    7. '```' → logprob: -10.644599914550781
    8. '  
' → logprob: -11.019599914550781
    9. '<|end|>' → logprob: -11.269599914550781
    10. ':' → logprob: -12.019599914550781

Token 563: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00012987985974177718
    2. ' for' → logprob: -9.000129699707031
    3. '   ' → logprob: -12.125129699707031
    4. 'import' → logprob: -14.125129699707031
    5. '
' → logprob: -15.250129699707031
    6. 'from' → logprob: -17.00012969970703
    7. '	for' → logprob: -17.12512969970703
    8. '    
' → logprob: -17.37512969970703
    9. '#' (adapté à ' #') → logprob: -17.87512969970703
    10. '```' → logprob: -18.25012969970703

Token 564: ' Pour' (ID: 13931)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -6.778209353797138e-05
    2. 'import' → logprob: -9.750067710876465
    3. 'def' → logprob: -12.125067710876465
    4. ' for' → logprob: -13.125067710876465
    5. 'from' → logprob: -13.750067710876465
    6. '   ' → logprob: -15.000067710876465
    7. '
' → logprob: -15.750067710876465
    8. '#' → logprob: -15.875067710876465
    9. '	for' → logprob: -16.62506866455078
    10. 'possible' → logprob: -16.62506866455078

Token 565: ' chaque' (ID: 21194)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.5633243322372437
    2. ' x' → logprob: -1.0633243322372437
    3. ' cx' → logprob: -2.688324451446533
    4. 'cx' → logprob: -4.188324451446533
    5. ' y' → logprob: -6.438324451446533
    6. 'y' → logprob: -7.938324451446533
    7. ' i' → logprob: -9.813323974609375
    8. 'i' → logprob: -10.438323974609375
    9. 'c' → logprob: -10.813323974609375
    10. 'xc' → logprob: -10.938323974609375

Token 566: ' point' (ID: 2438)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.28373557329177856
    2. ' x' → logprob: -1.9087355136871338
    3. ' cx' → logprob: -2.908735513687134
    4. 'cx' → logprob: -3.158735513687134
    5. 'xc' → logprob: -6.658735752105713
    6. ' xc' → logprob: -8.783735275268555
    7. 'y' → logprob: -9.408735275268555
    8. '_x' → logprob: -9.658735275268555
    9. ' y' → logprob: -9.783735275268555
    10. '(cx' → logprob: -10.658735275268555

Token 567: ' du' (ID: 1462)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.533226490020752
    2. 'x' → logprob: -1.408226490020752
    3. ' in' → logprob: -2.658226490020752
    4. ' x' → logprob: -2.908226490020752
    5. '(x' → logprob: -3.908226490020752
    6. '(cx' → logprob: -4.408226490020752
    7. '   ' → logprob: -5.783226490020752
    8. ' for' → logprob: -5.908226490020752
    9. '_x' → logprob: -6.283226490020752
    10. '(' → logprob: -7.158226490020752

Token 568: ' centre' (ID: 13268)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.5383395552635193
    2. 'grid' → logprob: -1.913339614868164
    3. ' grid' → logprob: -2.538339614868164
    4. ' x' → logprob: -2.913339614868164
    5. ' grille' → logprob: -3.663339614868164
    6. ' y' → logprob: -3.788339614868164
    7. ' plan' → logprob: -3.913339614868164
    8. 'y' → logprob: -3.913339614868164
    9. 'plan' → logprob: -4.163339614868164
    10. 'gr' → logprob: -5.163339614868164

Token 569: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.05096093937754631
    2. ',' → logprob: -4.550961017608643
    3. '_possible' → logprob: -4.675961017608643
    4. ' possible' → logprob: -5.675961017608643
    5. ' :' → logprob: -5.925961017608643
    6. ' in' → logprob: -6.050961017608643
    7. '_' → logprob: -6.175961017608643
    8. '_x' → logprob: -6.300961017608643
    9. 'x' → logprob: -6.300961017608643
    10. ' (' → logprob: -6.425961017608643

Token 570: ' on' (ID: 402)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.21197834610939026
    2. 'for' → logprob: -1.7119783163070679
    3. '   ' → logprob: -4.586978435516357
    4. '       ' → logprob: -8.9619779586792
    5. '    ' → logprob: -9.5869779586792
    6. ' found' → logprob: -10.2119779586792
    7. ' pour' → logprob: -11.2119779586792
    8. ' possible' → logprob: -11.5869779586792
    9. ' on' → logprob: -11.9619779586792
    10. ' valid' → logprob: -11.9619779586792

Token 571: ' vér' (ID: 42524)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.34202951192855835
    2. ':' → logprob: -1.7170295715332031
    3. ' for' → logprob: -2.592029571533203
    4. 'try' → logprob: -4.717029571533203
    5. 'continue' → logprob: -5.467029571533203
    6. '   ' → logprob: -5.592029571533203
    7. ' checks' → logprob: -6.467029571533203
    8. 'check' → logprob: -6.467029571533203
    9. 'checks' → logprob: -6.717029571533203
    10. 'contin' → logprob: -6.842029571533203

Token 572: 'ifie' (ID: 46409)
  Prédit: 'ifie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifie' → logprob: -0.000730185944121331
    2. 'f' → logprob: -7.500730037689209
    3. 'if' → logprob: -9.125730514526367
    4. 'ife' → logprob: -10.000730514526367
    5. 'rif' → logprob: -12.250730514526367
    6. '```' → logprob: -12.375730514526367
    7. '   ' → logprob: -13.375730514526367
    8. '
' → logprob: -14.000730514526367
    9. 'r' → logprob: -14.125730514526367
    10. 't' → logprob: -14.125730514526367

Token 573: ' les' (ID: 1341)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.11177313327789307
    2. ' for' → logprob: -3.1117730140686035
    3. '   ' → logprob: -3.8617730140686035
    4. ' si' → logprob: -4.2367730140686035
    5. ' s' → logprob: -4.4867730140686035
    6. 'if' → logprob: -5.2367730140686035
    7. 'for' → logprob: -5.3617730140686035
    8. ' ' → logprob: -6.3617730140686035
    9. ' les' → logprob: -7.4867730140686035
    10. ' la' → logprob: -7.6117730140686035

Token 574: ' contraintes' (ID: 167366)
  Prédit: ' contraintes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' contraintes' → logprob: -0.185163676738739
    2. 'contra' → logprob: -3.435163736343384
    3. ' aigu' → logprob: -3.685163736343384
    4. 'constraints' → logprob: -3.810163736343384
    5. 'a' → logprob: -4.185163497924805
    6. ' distances' → logprob: -4.310163497924805
    7. ' obstacles' → logprob: -4.435163497924805
    8. ' constraints' → logprob: -4.810163497924805
    9. ' conditions' → logprob: -4.935163497924805
    10. 'conditions' → logprob: -5.185163497924805

Token 575: ' sur' (ID: 1512)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4327325224876404
    2. ':' → logprob: -2.057732582092285
    3. ' for' → logprob: -2.307732582092285
    4. '
' → logprob: -3.182732582092285
    5. '    
' → logprob: -3.307732582092285
    6. 'for' → logprob: -3.807732582092285
    7. '  
' → logprob: -4.432732582092285
    8. ':
' → logprob: -5.182732582092285
    9. '\n' → logprob: -6.682732582092285
    10. '   
' → logprob: -6.807732582092285

Token 576: ' les' (ID: 1341)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.1577647179365158
    2. ' les' → logprob: -3.0327646732330322
    3. ' x' → logprob: -3.1577646732330322
    4. ' needles' → logprob: -4.032764911651611
    5. 'y' → logprob: -5.032764911651611
    6. 'l' → logprob: -5.032764911651611
    7. ' y' → logprob: -5.282764911651611
    8. 'les' → logprob: -5.282764911651611
    9. ' l' → logprob: -5.532764911651611
    10. ' la' → logprob: -6.032764911651611

Token 577: ' aigu' (ID: 186800)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.2241108417510986
    2. 'a' → logprob: -1.4741108417510986
    3. ' aigu' → logprob: -1.7241108417510986
    4. ' murs' → logprob: -2.4741108417510986
    5. 'par' → logprob: -3.4741108417510986
    6. 'm' → logprob: -3.7241108417510986
    7. ' needles' → logprob: -4.0991106033325195
    8. ' par' → logprob: -4.2241106033325195
    9. ' x' → logprob: -4.4741106033325195
    10. 'for' → logprob: -4.4741106033325195

Token 578: 'illes' (ID: 16849)
  Prédit: 'illes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'illes' → logprob: -0.5416537523269653
    2. 'lles' → logprob: -1.1666537523269653
    3. 'les' → logprob: -2.541653633117676
    4. 'ille' → logprob: -4.541653633117676
    5. 'elles' → logprob: -5.791653633117676
    6. 'e' → logprob: -5.916653633117676
    7. 'le' → logprob: -6.291653633117676
    8. 'es' → logprob: -6.416653633117676
    9. 'lle' → logprob: -6.416653633117676
    10. 'l' → logprob: -6.666653633117676

Token 579: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04452326148748398
    2. 'for' → logprob: -4.169523239135742
    3. ' for' → logprob: -4.419523239135742
    4. '
' → logprob: -4.544523239135742
    5. '    
' → logprob: -5.544523239135742
    6. ':' → logprob: -7.419523239135742
    7. '  
' → logprob: -7.544523239135742
    8. ',' → logprob: -8.669523239135742
    9. '   
' → logprob: -10.294523239135742
    10. '<|end|>' → logprob: -10.669523239135742

Token 580: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0049620321951806545
    2. 'for' → logprob: -6.004961967468262
    3. ' for' → logprob: -6.129961967468262
    4. '    
' → logprob: -8.504961967468262
    5. ',' → logprob: -10.879961967468262
    6. '<|end|>' → logprob: -10.879961967468262
    7. '
' → logprob: -11.129961967468262
    8. ':' → logprob: -11.379961967468262
    9. '```' → logprob: -11.629961967468262
    10. '	for' → logprob: -12.129961967468262

Token 581: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6409634351730347
    2. 'for' (adapté à ' for') → logprob: -0.8909634351730347
    3. '   ' → logprob: -2.765963554382324
    4. '
' → logprob: -11.390963554382324
    5. '	for' → logprob: -11.390963554382324
    6. '    
' → logprob: -11.890963554382324
    7. '```' → logprob: -12.015963554382324
    8. ' ' → logprob: -13.265963554382324
    9. ' 
' → logprob: -14.390963554382324
    10. '  ' → logprob: -14.515963554382324

Token 582: ' cx' (ID: 44448)
  Prédit: ' cx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cx' → logprob: -0.3467197120189667
    2. 'cx' → logprob: -1.971719741821289
    3. 'x' → logprob: -2.346719741821289
    4. ' x' → logprob: -2.846719741821289
    5. '(cx' → logprob: -11.221719741821289
    6. '_x' → logprob: -11.346719741821289
    7. 'xc' → logprob: -11.596719741821289
    8. ' cy' → logprob: -11.971719741821289
    9. ' xc' → logprob: -12.346719741821289
    10. ' y' → logprob: -12.846719741821289

Token 583: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.012567342258989811
    2. 'in' → logprob: -4.387567520141602
    3. ',' → logprob: -10.637567520141602
    4. ' ' → logprob: -10.887567520141602
    5. ' ,' → logprob: -11.637567520141602
    6. '_' → logprob: -13.137567520141602
    7. ' ' → logprob: -14.012567520141602
    8. '_in' → logprob: -14.262567520141602
    9. ')' → logprob: -14.887567520141602
    10. 'n' → logprob: -15.012567520141602

Token 584: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.03804194927215576
    2. ' x' → logprob: -3.2880420684814453
    3. '   ' → logprob: -15.913042068481445
    4. ' ' → logprob: -16.038042068481445
    5. '	x' → logprob: -16.538042068481445
    6. 'y' → logprob: -16.538042068481445
    7. 'c' → logprob: -17.413042068481445
    8. '(x' → logprob: -18.413042068481445
    9. '{x' → logprob: -18.538042068481445
    10. '_x' → logprob: -18.538042068481445

Token 585: '_candidates' (ID: 186937)
  Prédit: '_candidates'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_candidates' → logprob: -1.9361264946837764e-07
    2. '_c' → logprob: -17.5
    3. '_candidate' → logprob: -17.625
    4. '_' → logprob: -17.875
    5. '_choices' → logprob: -18.75
    6. 's' → logprob: -20.0
    7. 'andidates' → logprob: -20.25
    8. '   ' → logprob: -20.75
    9. ')' → logprob: -20.75
    10. 'Candidates' → logprob: -20.875

Token 586: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.003640215378254652
    2. ':
' → logprob: -5.628640174865723
    3. '   ' → logprob: -10.503640174865723
    4. '       ' → logprob: -12.128640174865723
    5. ',' → logprob: -13.003640174865723
    6. ':
' → logprob: -13.503640174865723
    7. '):
' → logprob: -13.753640174865723
    8. ' :' → logprob: -14.378640174865723
    9. '):' → logprob: -14.378640174865723
    10. '=' → logprob: -15.503640174865723

Token 587: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.046182695776224136
    2. ' for' → logprob: -3.546182632446289
    3. '   ' → logprob: -4.171182632446289
    4. '<|end|>' → logprob: -8.296182632446289
    5. 'for' → logprob: -8.796182632446289
    6. '    ' → logprob: -9.046182632446289
    7. '	   ' → logprob: -9.921182632446289
    8. '    ' → logprob: -10.046182632446289
    9. '	for' → logprob: -10.296182632446289
    10. ' ' → logprob: -10.296182632446289

Token 588: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.1522839516401291
    2. '   ' → logprob: -2.6522839069366455
    3. 'for' (adapté à ' for') → logprob: -2.7772839069366455
    4. '       ' → logprob: -4.777284145355225
    5. ' ' → logprob: -9.277283668518066
    6. ' ' → logprob: -11.027283668518066
    7. '   ' → logprob: -11.402283668518066
    8. '    ' → logprob: -11.777283668518066
    9. '	for' → logprob: -12.027283668518066
    10. '   ' → logprob: -13.277283668518066

Token 589: ' cy' (ID: 5504)
  Prédit: 'cy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cy' → logprob: -0.011048170737922192
    2. ' cy' → logprob: -4.511048316955566
    3. ' ' → logprob: -15.011048316955566
    4. 'cx' → logprob: -18.38604736328125
    5. '   ' → logprob: -18.88604736328125
    6. '  ' → logprob: -19.38604736328125
    7. '.cy' → logprob: -20.01104736328125
    8. 'Cy' → logprob: -20.13604736328125
    9. 'y' → logprob: -20.13604736328125
    10. ' y' → logprob: -21.26104736328125

Token 590: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0015042672166600823
    2. 'in' → logprob: -6.501504421234131
    3. ' ' → logprob: -13.376503944396973
    4. 'In' → logprob: -16.50150489807129
    5. '	in' → logprob: -16.62650489807129
    6. '_in' → logprob: -16.87650489807129
    7. ' ' → logprob: -17.00150489807129
    8. '<|end|>' → logprob: -17.62650489807129
    9. '_' → logprob: -17.87650489807129
    10. ')' → logprob: -18.00150489807129

Token 591: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.3132619559764862
    2. ' y' → logprob: -1.3132619857788086
    3. 'x' → logprob: -15.438261985778809
    4. '	y' → logprob: -16.938261032104492
    5. ' ' → logprob: -18.188261032104492
    6. '[y' → logprob: -18.313261032104492
    7. '   ' → logprob: -18.438261032104492
    8. 'user' → logprob: -18.563261032104492
    9. '(y' → logprob: -19.063261032104492
    10. 'yl' → logprob: -19.688261032104492

Token 592: '_candidates' (ID: 186937)
  Prédit: '_candidates'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_candidates' → logprob: -1.1994775377388578e-05
    2. 'andidates' → logprob: -11.375012397766113
    3. 'c' → logprob: -14.875012397766113
    4. 'Candidates' → logprob: -17.250011444091797
    5. '_choices' → logprob: -17.625011444091797
    6. 'x' → logprob: -18.250011444091797
    7. 'cand' → logprob: -18.750011444091797
    8. ' candidates' → logprob: -19.000011444091797
    9. '   ' → logprob: -19.125011444091797
    10. 'andidate' → logprob: -19.250011444091797

Token 593: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1369851529598236
    2. ':
' → logprob: -2.2619850635528564
    3. '           ' → logprob: -3.7619850635528564
    4. '       ' → logprob: -7.6369853019714355
    5. ',' → logprob: -9.886984825134277
    6. '):
' → logprob: -11.136984825134277
    7. ':

' → logprob: -11.261984825134277
    8. '():
' → logprob: -11.386984825134277
    9. ' :' → logprob: -11.386984825134277
    10. '<|end|>' → logprob: -11.511984825134277

Token 594: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00019889144459739327
    2. ' if' → logprob: -8.750199317932129
    3. 'if' → logprob: -11.250199317932129
    4. '               ' → logprob: -11.500199317932129
    5. '            
' → logprob: -12.000199317932129
    6. '       ' → logprob: -12.750199317932129
    7. '```' → logprob: -12.875199317932129
    8. '
' → logprob: -13.375199317932129
    9. '	       ' → logprob: -14.000199317932129
    10. '          ' → logprob: -14.000199317932129

Token 595: ' ok' (ID: 4763)
  Prédit: 'valid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'valid' → logprob: -0.4824911653995514
    2. ' valid' → logprob: -1.482491135597229
    3. 'possible' → logprob: -2.2324912548065186
    4. '           ' → logprob: -4.2324910163879395
    5. ' possible' → logprob: -4.4824910163879395
    6. 'ok' (adapté à ' ok') → logprob: -5.4824910163879395
    7. 'touch' → logprob: -5.6074910163879395
    8. ' ok' → logprob: -5.7324910163879395
    9. 'can' → logprob: -6.3574910163879395
    10. ' feasible' → logprob: -6.7324910163879395

Token 596: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.029847797006368637
    2. '=' → logprob: -3.5298478603363037
    3. '=True' → logprob: -9.404848098754883
    4. ':' → logprob: -11.904848098754883
    5. '=False' → logprob: -12.029848098754883
    6. ' ' → logprob: -13.404848098754883
    7. '   ' → logprob: -15.279848098754883
    8. '  ' → logprob: -15.404848098754883
    9. '_' → logprob: -16.154848098754883
    10. '    ' → logprob: -17.154848098754883

Token 597: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.011047814972698689
    2. ' True' → logprob: -4.511047840118408
    3. '   ' → logprob: -16.76104736328125
    4. '(True' → logprob: -19.01104736328125
    5. '=True' → logprob: -20.38604736328125
    6. '       ' → logprob: -21.26104736328125
    7. 'true' → logprob: -22.01104736328125
    8. '           ' → logprob: -22.76104736328125
    9. '    ' → logprob: -23.76104736328125
    10. ' ' → logprob: -24.51104736328125

Token 598: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0002931558701675385
    2. '<|end|>' → logprob: -8.500292778015137
    3. '            
' → logprob: -10.375292778015137
    4. '<|end|>' → logprob: -11.000292778015137
    5. '
' → logprob: -11.625292778015137
    6. '       ' → logprob: -11.875292778015137
    7. ' for' → logprob: -12.250292778015137
    8. '	       ' → logprob: -12.250292778015137
    9. '               ' → logprob: -12.625292778015137
    10. '  
' → logprob: -13.250292778015137

Token 599: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0020318960305303335
    2. '<|end|>' → logprob: -6.5020318031311035
    3. '            
' → logprob: -8.877032279968262
    4. '	       ' → logprob: -9.252032279968262
    5. '<|end|>' → logprob: -9.502032279968262
    6. '       ' → logprob: -9.752032279968262
    7. ' for' → logprob: -10.502032279968262
    8. '               ' → logprob: -10.877032279968262
    9. '    
' → logprob: -10.877032279968262
    10. '		' → logprob: -10.877032279968262

Token 600: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.586459755897522
    2. ' for' → logprob: -1.336459755897522
    3. '           ' → logprob: -1.711459755897522
    4. '       ' → logprob: -8.21146011352539
    5. '   ' → logprob: -11.33646011352539
    6. '            
' → logprob: -11.33646011352539
    7. '
' → logprob: -11.46146011352539
    8. '               ' → logprob: -11.96146011352539
    9. '	       ' → logprob: -12.71146011352539
    10. '	for' → logprob: -12.71146011352539

Token 601: ' (' (ID: 350)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.8725388050079346
    2. 'x' → logprob: -1.4975388050079346
    3. ' (' → logprob: -1.4975388050079346
    4. ' x' → logprob: -2.1225388050079346
    5. '(' → logprob: -4.8725385665893555
    6. 'needle' → logprob: -5.9975385665893555
    7. 'xi' → logprob: -6.2475385665893555
    8. ' xi' → logprob: -6.9975385665893555
    9. ' needle' → logprob: -7.1225385665893555
    10. '(h' → logprob: -8.372538566589355

Token 602: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0007177923689596355
    2. 'xi' → logprob: -7.250717639923096
    3. 'nx' → logprob: -12.125718116760254
    4. ' x' → logprob: -13.375718116760254
    5. 'xn' → logprob: -14.125718116760254
    6. '_x' → logprob: -17.250717163085938
    7. 'xx' → logprob: -18.500717163085938
    8. '	x' → logprob: -18.500717163085938
    9. 'needle' → logprob: -18.500717163085938
    10. 'ix' → logprob: -18.750717163085938

Token 603: '_i' (ID: 10853)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.7802456021308899
    2. '_i' → logprob: -1.0302455425262451
    3. ',' → logprob: -1.7802455425262451
    4. 'n' → logprob: -4.280245780944824
    5. '_n' → logprob: -6.780245780944824
    6. 'needle' → logprob: -7.655245780944824
    7. '_,' → logprob: -8.155245780944824
    8. '_' → logprob: -8.780245780944824
    9. ',i' → logprob: -9.530245780944824
    10. 'a' → logprob: -10.030245780944824

Token 604: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004837001906707883
    2. ',y' → logprob: -8.250483512878418
    3. ' ,' → logprob: -8.500483512878418
    4. ',x' → logprob: -11.750483512878418
    5. '_,' → logprob: -12.500483512878418
    6. ',i' → logprob: -12.500483512878418
    7. ',n' → logprob: -13.750483512878418
    8. '‌,' → logprob: -14.250483512878418
    9. ',c' → logprob: -14.750483512878418
    10. '_i' → logprob: -15.125483512878418

Token 605: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.5759894251823425
    2. ' y' → logprob: -0.8259894251823425
    3. ',' → logprob: -10.325989723205566
    4. ',y' → logprob: -11.075989723205566
    5. ' ' → logprob: -14.200989723205566
    6. '	y' → logprob: -15.325989723205566
    7. '<|end|>' → logprob: -15.325989723205566
    8. ' ,' → logprob: -15.700989723205566
    9. ')' → logprob: -16.57598876953125
    10. 'yi' → logprob: -16.70098876953125

Token 606: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -6.511406809295295e-06
    2. 'i' → logprob: -12.000006675720215
    3. ',' → logprob: -17.0000057220459
    4. '}_' → logprob: -17.5000057220459
    5. ')_' → logprob: -17.6250057220459
    6. ')' → logprob: -17.7500057220459
    7. '_,' → logprob: -18.0000057220459
    8. ' _' → logprob: -18.1250057220459
    9. '```' → logprob: -18.3750057220459
    10. '[i' → logprob: -18.6250057220459

Token 607: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007194612408056855
    2. ' ,' → logprob: -7.2507195472717285
    3. '),' → logprob: -12.50071907043457
    4. '_,' → logprob: -12.87571907043457
    5. ')' → logprob: -13.37571907043457
    6. ',i' → logprob: -14.87571907043457
    7. '           ' → logprob: -15.62571907043457
    8. ',y' → logprob: -16.00071907043457
    9. ',r' → logprob: -16.00071907043457
    10. ',x' → logprob: -16.12571907043457

Token 608: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.00014323067443910986
    2. ' h' → logprob: -8.875143051147461
    3. 'hi' → logprob: -13.000143051147461
    4. ')' → logprob: -14.000143051147461
    5. ',' → logprob: -16.37514305114746
    6. 'z' → logprob: -17.12514305114746
    7. '	h' → logprob: -17.25014305114746
    8. '           ' → logprob: -17.75014305114746
    9. '       ' → logprob: -17.87514305114746
    10. '```' → logprob: -17.87514305114746

Token 609: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -4.320199877838604e-07
    2. ')' → logprob: -15.0
    3. 'i' → logprob: -17.0
    4. ')_' → logprob: -17.875
    5. '[i' → logprob: -20.125
    6. '_)' → logprob: -20.25
    7. ' _' → logprob: -20.25
    8. '_j' → logprob: -20.75
    9. '_' → logprob: -20.875
    10. '```' → logprob: -21.125

Token 610: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.749814019713085e-06
    2. ' )' → logprob: -12.375006675720215
    3. '),' → logprob: -14.125006675720215
    4. ')
' → logprob: -14.375006675720215
    5. ' in' → logprob: -15.000006675720215
    6. 'in' → logprob: -15.000006675720215
    7. '           ' → logprob: -15.500006675720215
    8. '):
' → logprob: -15.750006675720215
    9. '               ' → logprob: -17.25000762939453
    10. '   ' → logprob: -17.50000762939453

Token 611: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0892668142914772
    2. ')' → logprob: -2.839266777038574
    3. 'in' → logprob: -3.714266777038574
    4. ':' → logprob: -7.589266777038574
    5. '               ' → logprob: -7.714266777038574
    6. ',' → logprob: -7.714266777038574
    7. '):
' → logprob: -7.714266777038574
    8. '           ' → logprob: -8.089266777038574
    9. '):' → logprob: -9.589266777038574
    10. '   ' → logprob: -10.089266777038574

Token 612: ' needles' (ID: 94833)
  Prédit: 'need'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'need' → logprob: -0.005135084968060255
    2. ' needles' → logprob: -5.3801350593566895
    3. 'needle' → logprob: -8.380135536193848
    4. 'needs' → logprob: -8.505135536193848
    5. '   ' → logprob: -10.630135536193848
    6. ' need' → logprob: -10.630135536193848
    7. 'Need' → logprob: -11.255135536193848
    8. ')' → logprob: -11.505135536193848
    9. '_need' → logprob: -13.005135536193848
    10. '```' → logprob: -13.130135536193848

Token 613: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5061308741569519
    2. ':
' → logprob: -1.0061309337615967
    3. '               ' → logprob: -3.5061309337615967
    4. '):
' → logprob: -7.256130695343018
    5. '           ' → logprob: -7.756130695343018
    6. ',' → logprob: -8.631131172180176
    7. '	           ' → logprob: -9.881131172180176
    8. ':

' → logprob: -10.131131172180176
    9. '():
' → logprob: -10.756131172180176
    10. '):' → logprob: -11.381131172180176

Token 614: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -8.64970643306151e-05
    2. '	           ' → logprob: -9.875086784362793
    3. '                
' → logprob: -11.750086784362793
    4. '           ' → logprob: -11.750086784362793
    5. '		       ' → logprob: -12.500086784362793
    6. '                   ' → logprob: -12.750086784362793
    7. ' if' → logprob: -13.125086784362793
    8. '              ' → logprob: -13.625086784362793
    9. '       ' → logprob: -14.000086784362793
    10. '			' → logprob: -14.125086784362793

Token 615: ' dz' (ID: 17303)
  Prédit: ' dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dx' → logprob: -0.20780177414417267
    2. 'dx' → logprob: -2.2078018188476562
    3. '               ' → logprob: -2.8328018188476562
    4. ' dz' → logprob: -5.082801818847656
    5. ' horizontal' → logprob: -5.582801818847656
    6. 'horizontal' → logprob: -5.832801818847656
    7. 'dist' → logprob: -6.957801818847656
    8. 'dz' (adapté à ' dz') → logprob: -6.957801818847656
    9. ' horiz' → logprob: -7.082801818847656
    10. ' dist' → logprob: -7.832801818847656

Token 616: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10021357238292694
    2. '=' → logprob: -2.3502135276794434
    3. '=r' → logprob: -12.600214004516602
    4. ' ' → logprob: -13.225214004516602
    5. '_abs' → logprob: -14.975214004516602
    6. '=h' → logprob: -15.350214004516602
    7. ')' → logprob: -15.350214004516602
    8. ',' → logprob: -16.1002140045166
    9. '=int' → logprob: -16.6002140045166
    10. '	' → logprob: -16.6002140045166

Token 617: ' abs' (ID: 8443)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.2545580565929413
    2. ' h' → logprob: -1.6295580863952637
    3. ' abs' → logprob: -4.129558086395264
    4. 'abs' → logprob: -4.379558086395264
    5. '(h' → logprob: -9.754557609558105
    6. '(abs' → logprob: -11.004557609558105
    7. 'r' → logprob: -11.629557609558105
    8. ' (' → logprob: -11.879557609558105
    9. '	h' → logprob: -12.879557609558105
    10. '   ' → logprob: -13.129557609558105

Token 618: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.0002314303710591048
    2. 'h' → logprob: -8.375231742858887
    3. '(' → logprob: -14.000231742858887
    4. '((' → logprob: -17.50023078918457
    5. '	h' → logprob: -17.75023078918457
    6. ' h' → logprob: -18.75023078918457
    7. '[h' → logprob: -19.12523078918457
    8. ' (' → logprob: -19.87523078918457
    9. '(c' → logprob: -20.12523078918457
    10. '(r' → logprob: -20.62523078918457

Token 619: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -3.128163257315464e-07
    2. 'i' → logprob: -16.25
    3. ' _' → logprob: -16.25
    4. '[i' → logprob: -16.875
    5. '_' → logprob: -18.125
    6. '[' → logprob: -18.25
    7. '   ' → logprob: -18.375
    8. '_r' → logprob: -18.375
    9. '_a' → logprob: -19.25
    10. '```' → logprob: -19.5

Token 620: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.02060074731707573
    2. '-' → logprob: -3.8956007957458496
    3. ' ' → logprob: -9.895600318908691
    4. '-r' → logprob: -12.145600318908691
    5. ' r' → logprob: -14.145600318908691
    6. '[' → logprob: -14.395600318908691
    7. 'r' → logprob: -14.770600318908691
    8. ')' → logprob: -14.895600318908691
    9. '<|end|>' → logprob: -15.020600318908691
    10. ' ' → logprob: -15.770600318908691

Token 621: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0013259568950161338
    2. ' r' → logprob: -6.626326084136963
    3. '	r' → logprob: -18.251325607299805
    4. '   ' → logprob: -18.876325607299805
    5. ' ' → logprob: -18.876325607299805
    6. ')' → logprob: -19.251325607299805
    7. '```' → logprob: -19.251325607299805
    8. '<|end|>' → logprob: -19.751325607299805
    9. '
' → logprob: -19.876325607299805
    10. ',' → logprob: -20.251325607299805

Token 622: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008697065524756908
    2. ')
' → logprob: -4.758697032928467
    3. '               ' → logprob: -9.633697509765625
    4. ' )' → logprob: -11.758697509765625
    5. ')
' → logprob: -12.258697509765625
    6. '           ' → logprob: -13.508697509765625
    7. ' )
' → logprob: -13.883697509765625
    8. '                   ' → logprob: -14.008697509765625
    9. ')

' → logprob: -14.633697509765625
    10. '                ' → logprob: -16.133697509765625

Token 623: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0004213786742184311
    2. '                
' → logprob: -8.375421524047852
    3. '           ' → logprob: -9.875421524047852
    4. ')' → logprob: -10.375421524047852
    5. '                ' → logprob: -10.375421524047852
    6. '              ' → logprob: -11.250421524047852
    7. '<|end|>' → logprob: -11.625421524047852
    8. '                   ' → logprob: -11.750421524047852
    9. ',' → logprob: -12.250421524047852
    10. '
' → logprob: -12.500421524047852

Token 624: ' if' (ID: 538)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.6399162411689758
    2. 'if' (adapté à ' if') → logprob: -1.889916181564331
    3. ' dx' → logprob: -2.264916181564331
    4. '               ' → logprob: -2.264916181564331
    5. ' if' → logprob: -2.514916181564331
    6. 'dh' → logprob: -4.01491641998291
    7. 'dist' → logprob: -6.13991641998291
    8. 'horizontal' → logprob: -6.13991641998291
    9. 'hx' → logprob: -6.38991641998291
    10. 'dr' → logprob: -6.63991641998291

Token 625: ' dz' (ID: 17303)
  Prédit: 'dz'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dz' → logprob: -0.00936951208859682
    2. ' dz' → logprob: -4.759369373321533
    3. '(d' → logprob: -7.884369373321533
    4. '   ' → logprob: -8.884369850158691
    5. ' (' → logprob: -8.884369850158691
    6. '(' → logprob: -10.509369850158691
    7. ' ' → logprob: -10.509369850158691
    8. '  ' → logprob: -11.259369850158691
    9. 'd' → logprob: -11.259369850158691
    10. '	d' → logprob: -11.384369850158691

Token 626: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.19025591015815735
    2. '>' → logprob: -1.815255880355835
    3. ' >=' → logprob: -5.315256118774414
    4. ')' → logprob: -6.315256118774414
    5. '**' → logprob: -6.690256118774414
    6. '>=' → logprob: -6.690256118774414
    7. '*' → logprob: -7.065256118774414
    8. ' ' → logprob: -8.940256118774414
    9. ' *' → logprob: -9.440256118774414
    10. '*r' → logprob: -9.940256118774414

Token 627: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0001234428636962548
    2. ' r' → logprob: -9.000123023986816
    3. '2' → logprob: -17.500123977661133
    4. '=r' → logprob: -18.125123977661133
    5. '=' → logprob: -18.375123977661133
    6. '	r' → logprob: -19.375123977661133
    7. '```' → logprob: -20.125123977661133
    8. '0' → logprob: -20.750123977661133
    9. 'd' → logprob: -20.750123977661133
    10. 'radius' → logprob: -20.875123977661133

Token 628: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.34221121668815613
    2. ' or' → logprob: -2.2172112464904785
    3. ':
' → logprob: -2.2172112464904785
    4. '               ' → logprob: -2.8422112464904785
    5. '                   ' → logprob: -4.5922112464904785
    6. '           ' → logprob: -6.7172112464904785
    7. ':return' → logprob: -6.9672112464904785
    8. '                       ' → logprob: -7.7172112464904785
    9. '                           ' → logprob: -8.71721076965332
    10. '):
' → logprob: -8.71721076965332

Token 629: ' ' (ID: 220)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.049531713128089905
    2. '               ' → logprob: -4.049531936645508
    3. ' continue' → logprob: -4.049531936645508
    4. '                               ' → logprob: -5.549531936645508
    5. 'continue' → logprob: -5.799531936645508
    6. '                       ' → logprob: -6.299531936645508
    7. '                           ' → logprob: -6.549531936645508
    8. '                                       ' → logprob: -7.174531936645508
    9. '                                           ' → logprob: -7.299531936645508
    10. ')' → logprob: -8.299531936645508

Token 630: ' #' (ID: 1069)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.08521755039691925
    2. 'continue' → logprob: -3.2102174758911133
    3. '               ' → logprob: -3.5852174758911133
    4. 'return' → logprob: -5.335217475891113
    5. ' continue' → logprob: -5.710217475891113
    6. '                       ' → logprob: -6.085217475891113
    7. ' return' → logprob: -6.960217475891113
    8. '   ' → logprob: -7.210217475891113
    9. '
' → logprob: -8.210217475891113
    10. '                           ' → logprob: -8.585217475891113

Token 631: ' La' (ID: 3038)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.26472389698028564
    2. ' ok' → logprob: -2.389723777770996
    3. '               ' → logprob: -3.014723777770996
    4. ' continue' → logprob: -3.264723777770996
    5. 'continue' → logprob: -4.014723777770996
    6. 'ok' → logprob: -4.139723777770996
    7. '
' → logprob: -4.514723777770996
    8. '   ' → logprob: -6.139723777770996
    9. '                       ' → logprob: -6.889723777770996
    10. ' return' → logprob: -7.014723777770996

Token 632: ' sph' (ID: 66674)
  Prédit: ' sphere'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sphere' → logprob: -0.6667913794517517
    2. 'sphere' → logprob: -1.4167914390563965
    3. ' sph' → logprob: -1.5417914390563965
    4. 'distance' → logprob: -4.0417914390563965
    5. ' distance' → logprob: -4.5417914390563965
    6. ' spherical' → logprob: -7.1667914390563965
    7. '   ' → logprob: -8.291790962219238
    8. 's' → logprob: -8.291790962219238
    9. 'istance' → logprob: -9.916790962219238
    10. 'return' → logprob: -10.041790962219238

Token 633: 'ère' (ID: 4346)
  Prédit: 'ère'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ère' → logprob: -0.0012119027087464929
    2. 'è' → logprob: -7.751212120056152
    3. '`' → logprob: -8.376212120056152
    4. 'ere' → logprob: -9.001212120056152
    5. '   ' → logprob: -9.251212120056152
    6. 'èr' → logprob: -9.751212120056152
    7. '**' → logprob: -10.376212120056152
    8. '=' → logprob: -10.876212120056152
    9. '\' → logprob: -10.876212120056152
    10. '+' → logprob: -11.001212120056152

Token 634: ' ne' (ID: 453)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.5943257212638855
    2. '               ' → logprob: -1.0943257808685303
    3. 'continue' → logprob: -3.2193257808685303
    4. '                       ' → logprob: -4.219325542449951
    5. ' continue' → logprob: -4.344325542449951
    6. ')' → logprob: -4.719325542449951
    7. '   ' → logprob: -4.969325542449951
    8. ' em' → logprob: -5.344325542449951
    9. ' continues' → logprob: -5.344325542449951
    10. 'contin' → logprob: -5.344325542449951

Token 635: ' pourrait' (ID: 39622)
  Prédit: 'pe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pe' → logprob: -0.4951140582561493
    2. ' peut' → logprob: -1.4951140880584717
    3. 't' → logprob: -2.7451140880584717
    4. 'pas' → logprob: -3.3701140880584717
    5. 'pour' → logprob: -3.4951140880584717
    6. 'p' → logprob: -4.745113849639893
    7. 'touch' → logprob: -4.745113849639893
    8. ' pourra' → logprob: -5.745113849639893
    9. ' pourrait' → logprob: -5.870113849639893
    10. ' peux' → logprob: -6.370113849639893

Token 636: ' pas' (ID: 2173)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.29337456822395325
    2. ' pas' → logprob: -1.5433745384216309
    3. 'ex' → logprob: -4.168374538421631
    4. ' jamais' → logprob: -4.293374538421631
    5. 's' → logprob: -6.168374538421631
    6. ' ex' → logprob: -6.293374538421631
    7. 'pass' → logprob: -6.793374538421631
    8. ' être' → logprob: -6.793374538421631
    9. 'jam' → logprob: -7.168374538421631
    10. 't' → logprob: -7.168374538421631

Token 637: ' éviter' (ID: 64013)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ex' → logprob: -1.646031379699707
    2. 'pas' → logprob: -1.896031379699707
    3. 'pass' → logprob: -2.146031379699707
    4. 'être' → logprob: -2.646031379699707
    5. 's' → logprob: -2.771031379699707
    6. 't' → logprob: -2.896031379699707
    7. 'tenir' → logprob: -2.896031379699707
    8. 'em' → logprob: -3.021031379699707
    9. 'ne' → logprob: -3.521031379699707
    10. 'se' → logprob: -3.771031379699707

Token 638: ' l' (ID: 305)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -1.47006094455719
    2. ' le' → logprob: -1.72006094455719
    3. '               ' → logprob: -2.3450608253479004
    4. ' de' → logprob: -2.7200608253479004
    5. 'l' → logprob: -2.8450608253479004
    6. 'le' → logprob: -2.8450608253479004
    7. ' l' → logprob: -3.2200608253479004
    8. ' ce' → logprob: -3.4700608253479004
    9. 'la' → logprob: -3.4700608253479004
    10. 'les' → logprob: -3.4700608253479004

Token 639: ''a' (ID: 10443)
  Prédit: 'contact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'contact' → logprob: -0.3455061614513397
    2. 'a' → logprob: -2.220506191253662
    3. 'es' → logprob: -2.595506191253662
    4. ''em' → logprob: -3.720506191253662
    5. 'e' → logprob: -3.970506191253662
    6. 'em' → logprob: -3.970506191253662
    7. 'collision' → logprob: -4.095506191253662
    8. 'intersection' → logprob: -4.470506191253662
    9. 'touch' → logprob: -5.220506191253662
    10. ' contact' → logprob: -5.595506191253662

Token 640: 'ig' (ID: 343)
  Prédit: 'pp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pp' → logprob: -1.725447177886963
    2. 'u' → logprob: -1.975447177886963
    3. 'touch' → logprob: -2.225447177886963
    4. 'bs' → logprob: -2.350447177886963
    5. 'pro' → logprob: -2.475447177886963
    6. 'distance' → logprob: -2.975447177886963
    7. 'cc' → logprob: -3.100447177886963
    8. 'r' → logprob: -3.225447177886963
    9. 't' → logprob: -3.475447177886963
    10. 'ccess' → logprob: -3.600447177886963

Token 641: 'uille' (ID: 47118)
  Prédit: 'uille'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uille' → logprob: -0.20651324093341827
    2. 'le' → logprob: -2.3315131664276123
    3. 'ne' → logprob: -3.0815131664276123
    4. 'les' → logprob: -4.331513404846191
    5. 'u' → logprob: -4.706513404846191
    6. 'nes' → logprob: -4.956513404846191
    7. 'ues' → logprob: -5.706513404846191
    8. 'ule' → logprob: -6.081513404846191
    9. 'ue' → logprob: -6.206513404846191
    10. 'e' → logprob: -6.706513404846191

Token 642: ' en' (ID: 469)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.5884931683540344
    2. '               ' → logprob: -0.8384931683540344
    3. ':' → logprob: -5.213493347167969
    4. ':
' → logprob: -5.463493347167969
    5. ',' → logprob: -6.838493347167969
    6. '                       ' → logprob: -7.213493347167969
    7. '           ' → logprob: -8.088493347167969
    8. '                ' → logprob: -9.213493347167969
    9. ' or' → logprob: -9.213493347167969
    10. ')' → logprob: -9.463493347167969

Token 643: ' z' (ID: 579)
  Prédit: 'touch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'touch' → logprob: -0.4041273593902588
    2. 'horizontal' → logprob: -1.7791273593902588
    3. 'vertical' → logprob: -2.779127359390259
    4. 'distance' → logprob: -3.029127359390259
    5. 'em' → logprob: -4.52912712097168
    6. 't' → logprob: -4.77912712097168
    7. 'z' → logprob: -5.40412712097168
    8. 'vert' → logprob: -5.65412712097168
    9. 'contact' → logprob: -5.65412712097168
    10. '```' → logprob: -5.65412712097168

Token 644: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.7572394013404846
    2. ')' → logprob: -2.38223934173584
    3. '                   ' → logprob: -2.38223934173584
    4. '           ' → logprob: -2.38223934173584
    5. '**' → logprob: -2.75723934173584
    6. '):
' → logprob: -3.75723934173584
    7. ':' → logprob: -3.75723934173584
    8. ',' → logprob: -4.00723934173584
    9. '   ' → logprob: -4.00723934173584
    10. ':
' → logprob: -4.00723934173584

Token 645: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.2273922711610794
    2. '               ' → logprob: -1.602392315864563
    3. '                       ' → logprob: -6.727392196655273
    4. ':
' → logprob: -8.477392196655273
    5. ':' → logprob: -8.602392196655273
    6. '                               ' → logprob: -9.352392196655273
    7. '                           ' → logprob: -9.477392196655273
    8. '                ' → logprob: -9.852392196655273
    9. '   ' → logprob: -9.977392196655273
    10. '           ' → logprob: -10.602392196655273

Token 646: ' ok' (ID: 4763)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.01951364055275917
    2. 'continue' → logprob: -4.7695136070251465
    3. '                   ' → logprob: -5.0195136070251465
    4. ' return' → logprob: -5.7695136070251465
    5. '               ' → logprob: -7.1445136070251465
    6. '                       ' → logprob: -8.894514083862305
    7. 'ok' (adapté à ' ok') → logprob: -9.144514083862305
    8. '   ' → logprob: -10.269514083862305
    9. 'break' → logprob: -10.769514083862305
    10. ' continue' → logprob: -12.019514083862305

Token 647: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06406466662883759
    2. ' =' → logprob: -2.8140647411346436
    3. '=False' → logprob: -6.1890645027160645
    4. '==' → logprob: -11.314064979553223
    5. '                   ' → logprob: -11.689064979553223
    6. '               ' → logprob: -11.939064979553223
    7. '           ' → logprob: -12.189064979553223
    8. '=True' → logprob: -12.689064979553223
    9. '                       ' → logprob: -12.814064979553223
    10. '                           ' → logprob: -13.314064979553223

Token 648: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.00020354038861114532
    2. ' False' → logprob: -8.500203132629395
    3. '(False' → logprob: -19.62520408630371
    4. '   ' → logprob: -20.50020408630371
    5. 'false' → logprob: -20.62520408630371
    6. 'True' → logprob: -20.75020408630371
    7. '=False' → logprob: -20.75020408630371
    8. '_false' → logprob: -22.00020408630371
    9. 'F' → logprob: -23.00020408630371
    10. '.False' → logprob: -23.50020408630371

Token 649: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.010197760537266731
    2. '               ' → logprob: -4.760197639465332
    3. '<|end|>' → logprob: -7.635197639465332
    4. '                       ' → logprob: -7.760197639465332
    5. '                           ' → logprob: -7.885197639465332
    6. '           ' → logprob: -9.010197639465332
    7. '                               ' → logprob: -10.510197639465332
    8. '                  ' → logprob: -11.010197639465332
    9. '       ' → logprob: -11.010197639465332
    10. '                ' → logprob: -11.260197639465332

Token 650: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.004761783871799707
    2. '               ' → logprob: -5.504761695861816
    3. '                       ' → logprob: -7.754761695861816
    4. '           ' → logprob: -9.629761695861816
    5. '                           ' → logprob: -9.629761695861816
    6. '<|end|>' → logprob: -10.004761695861816
    7. '                  ' → logprob: -11.504761695861816
    8. '       ' → logprob: -11.629761695861816
    9. '                    ' → logprob: -11.754761695861816
    10. '                               ' → logprob: -11.754761695861816

Token 651: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.476931095123291
    2. '                   ' → logprob: -0.976931095123291
    3. ' break' → logprob: -6.351931095123291
    4. '                       ' → logprob: -7.476931095123291
    5. 'continue' → logprob: -8.476930618286133
    6. '               ' → logprob: -8.601930618286133
    7. '	break' → logprob: -9.601930618286133
    8. '                           ' → logprob: -10.726930618286133
    9. '				' → logprob: -10.851930618286133
    10. '           ' → logprob: -11.101930618286133

Token 652: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0008168928325176239
    2. '                
' → logprob: -7.250816822052002
    3. '           ' → logprob: -10.75081729888916
    4. '                   ' → logprob: -11.37581729888916
    5. '  
' → logprob: -11.62581729888916
    6. '
' → logprob: -11.62581729888916
    7. '               
' → logprob: -11.62581729888916
    8. '<|end|>' → logprob: -11.62581729888916
    9. '              ' → logprob: -11.75081729888916
    10. '                    
' → logprob: -12.25081729888916

Token 653: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00047487911069765687
    2. '                
' → logprob: -8.00047492980957
    3. '              ' → logprob: -10.25047492980957
    4. '           ' → logprob: -10.75047492980957
    5. '                   ' → logprob: -10.75047492980957
    6. '               
' → logprob: -11.00047492980957
    7. '                ' → logprob: -11.12547492980957
    8. '```' → logprob: -12.12547492980957
    9. '                    
' → logprob: -12.62547492980957
    10. '			' → logprob: -12.75047492980957

Token 654: ' #' (ID: 1069)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.4996558725833893
    2. ' dx' → logprob: -1.124655842781067
    3. '               ' → logprob: -2.7496559619903564
    4. 'dist' → logprob: -6.624655723571777
    5. 'distance' → logprob: -6.999655723571777
    6. 'dh' → logprob: -7.249655723571777
    7. ' dist' → logprob: -8.124655723571777
    8. 'dy' → logprob: -8.624655723571777
    9. ' dh' → logprob: -8.749655723571777
    10. 'horizontal' → logprob: -9.124655723571777

Token 655: ' distance' (ID: 9324)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.33593669533729553
    2. 'dist' → logprob: -1.4609366655349731
    3. ' dx' → logprob: -4.210936546325684
    4. 'd' → logprob: -4.460936546325684
    5. 'horizontal' → logprob: -5.085936546325684
    6. 'dh' → logprob: -5.210936546325684
    7. ' dist' → logprob: -5.335936546325684
    8. 'distance' → logprob: -5.460936546325684
    9. 'dr' → logprob: -6.335936546325684
    10. 'h' → logprob: -7.085936546325684

Token 656: ' horizont' (ID: 69308)
  Prédit: '_h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_h' → logprob: -0.10567572712898254
    2. 'h' → logprob: -2.98067569732666
    3. '_xy' → logprob: -3.60567569732666
    4. '_horizontal' → logprob: -4.35567569732666
    5. ' =' → logprob: -5.85567569732666
    6. 'xy' → logprob: -6.10567569732666
    7. 'hor' → logprob: -6.73067569732666
    8. 'horizontal' → logprob: -6.85567569732666
    9. '_x' → logprob: -7.35567569732666
    10. '_sq' → logprob: -7.48067569732666

Token 657: 'ale' (ID: 1167)
  Prédit: 'ance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ance' → logprob: -0.00220461655408144
    2. 'aire' → logprob: -6.252204418182373
    3. '   ' → logprob: -10.127204895019531
    4. '           ' → logprob: -10.252204895019531
    5. 'e' → logprob: -10.502204895019531
    6. 'ce' → logprob: -10.752204895019531
    7. 'ale' → logprob: -10.877204895019531
    8. '               ' → logprob: -10.877204895019531
    9. 'anc' → logprob: -11.252204895019531
    10. 'distance' → logprob: -11.502204895019531

Token 658: ' minimale' (ID: 143217)
  Prédit: '_h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_h' → logprob: -0.8430471420288086
    2. ' =' → logprob: -0.9680471420288086
    3. 'h' → logprob: -2.2180471420288086
    4. '=' → logprob: -3.2180471420288086
    5. '_horizontal' → logprob: -4.968047142028809
    6. 'horizontal' → logprob: -5.218047142028809
    7. 'dist' → logprob: -5.343047142028809
    8. '               ' → logprob: -5.718047142028809
    9. '=h' → logprob: -5.718047142028809
    10. ' horiz' → logprob: -5.718047142028809

Token 659: ' entre' (ID: 3853)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6589598059654236
    2. '_required' → logprob: -2.1589598655700684
    3. '               ' → logprob: -2.9089598655700684
    4. '_needed' → logprob: -2.9089598655700684
    5. ' horiz' → logprob: -3.0339598655700684
    6. 'required' → logprob: -3.5339598655700684
    7. 'h' → logprob: -3.6589598655700684
    8. 'needed' → logprob: -3.7839598655700684
    9. '_h' → logprob: -3.7839598655700684
    10. ' horizont' → logprob: -4.158959865570068

Token 660: ' centre' (ID: 13268)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.16665425896644592
    2. 'centre' → logprob: -2.791654348373413
    3. 'cx' → logprob: -2.916654348373413
    4. 'center' → logprob: -3.916654348373413
    5. ' le' → logprob: -4.791654109954834
    6. 'la' → logprob: -5.541654109954834
    7. '(cx' → logprob: -6.291654109954834
    8. 'ball' → logprob: -6.541654109954834
    9. 'cent' → logprob: -7.416654109954834
    10. ' centre' → logprob: -7.666654109954834

Token 661: ' et' (ID: 859)
  Prédit: '(cx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(cx' → logprob: -0.7310991287231445
    2. 'cx' → logprob: -1.7310991287231445
    3. ' cx' → logprob: -2.6060991287231445
    4. '(ball' → logprob: -2.6060991287231445
    5. ' ballon' → logprob: -3.1060991287231445
    6. 'ball' → logprob: -3.2310991287231445
    7. '(center' → logprob: -3.3560991287231445
    8. '_ball' → logprob: -3.6060991287231445
    9. ' -' → logprob: -4.8560991287231445
    10. ' (' → logprob: -4.8560991287231445

Token 662: ' aig' (ID: 61108)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.1332557201385498
    2. ' (' → logprob: -2.38325572013855
    3. 'math' → logprob: -4.133255958557129
    4. 'x' → logprob: -4.758255958557129
    5. ' math' → logprob: -5.508255958557129
    6. '(math' → logprob: -6.258255958557129
    7. ' x' → logprob: -7.883255958557129
    8. '(' → logprob: -8.008255958557129
    9. 'xy' → logprob: -8.383255958557129
    10. '(cx' → logprob: -8.383255958557129

Token 663: 'uille' (ID: 47118)
  Prédit: 'uille'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uille' → logprob: -0.000377049611415714
    2. 'u' → logprob: -8.62537670135498
    3. 'ille' → logprob: -9.25037670135498
    4. 'ulle' → logprob: -9.62537670135498
    5. 'uil' → logprob: -11.12537670135498
    6. 'ule' → logprob: -11.62537670135498
    7. 'le' → logprob: -12.62537670135498
    8. 'uelle' → logprob: -12.87537670135498
    9. 'ue' → logprob: -13.25037670135498
    10. 'lle' → logprob: -13.50037670135498

Token 664: ' :
' (ID: 10039)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.027521206066012383
    2. ' =' → logprob: -3.7775211334228516
    3. '=' → logprob: -7.027521133422852
    4. ' dx' → logprob: -7.152521133422852
    5. ' if' → logprob: -7.902521133422852
    6. ' >=' → logprob: -8.027521133422852
    7. 'distance' → logprob: -8.402521133422852
    8. ' distance' → logprob: -8.527521133422852
    9. ',' → logprob: -8.902521133422852
    10. ' ' → logprob: -8.902521133422852

Token 665: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.3750330209732056
    2. ' ' → logprob: -1.8750330209732056
    3. ' sqrt' → logprob: -2.250032901763916
    4. '                   ' → logprob: -2.375032901763916
    5. ' math' → logprob: -2.750032901763916
    6. ' max' → logprob: -2.875032901763916
    7. ' ' → logprob: -3.375032901763916
    8. ' if' → logprob: -3.500032901763916
    9. ' distance' → logprob: -3.750032901763916
    10. '                ' → logprob: -3.875032901763916

Token 666: ' required' (ID: 3759)
  Prédit: ' dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dx' → logprob: -0.9499625563621521
    2. ' d' → logprob: -1.5749626159667969
    3. ' dist' → logprob: -1.6999626159667969
    4. ' horiz' → logprob: -2.949962615966797
    5. 'dist' → logprob: -3.449962615966797
    6. ' math' → logprob: -3.949962615966797
    7. 'd' → logprob: -4.074962615966797
    8. '               ' → logprob: -4.199962615966797
    9. ' min' → logprob: -4.199962615966797
    10. ' distance' → logprob: -4.324962615966797

Token 667: '_dist' (ID: 37968)
  Prédit: '_dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -0.5818513035774231
    2. '_distance' → logprob: -0.8318513035774231
    3. '_horizontal' → logprob: -5.331851482391357
    4. '_dx' → logprob: -7.831851482391357
    5. '_h' → logprob: -8.8318510055542
    6. '_radius' → logprob: -8.8318510055542
    7. '_' → logprob: -9.2068510055542
    8. '=' → logprob: -9.4568510055542
    9. ' =' → logprob: -9.7068510055542
    10. '_d' → logprob: -9.9568510055542

Token 668: '_xy' (ID: 99656)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25194743275642395
    2. '=' → logprob: -1.5019474029541016
    3. '_squared' → logprob: -12.126947402954102
    4. '_sq' → logprob: -12.626947402954102
    5. '   ' → logprob: -12.876947402954102
    6. '=s' → logprob: -13.001947402954102
    7. ' ' → logprob: -13.876947402954102
    8. '=min' → logprob: -14.251947402954102
    9. 'ance' → logprob: -15.001947402954102
    10. '	' → logprob: -15.626947402954102

Token 669: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.575939953327179
    2. '=' → logprob: -0.825939953327179
    3. '=s' → logprob: -15.450940132141113
    4. ' ' → logprob: -16.325939178466797
    5. '   ' → logprob: -16.825939178466797
    6. '=r' → logprob: -16.825939178466797
    7. '=int' → logprob: -17.450939178466797
    8. '	' → logprob: -17.825939178466797
    9. 's' → logprob: -17.825939178466797
    10. '_squared' → logprob: -18.075939178466797

Token 670: ' math' (ID: 13324)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.09685306996107101
    2. '(math' → logprob: -2.846853017807007
    3. ' math' → logprob: -3.596853017807007
    4. '(r' → logprob: -5.096853256225586
    5. ' (' → logprob: -7.221853256225586
    6. 'r' → logprob: -10.846853256225586
    7. '   ' → logprob: -12.346853256225586
    8. '(' → logprob: -14.346853256225586
    9. ' r' → logprob: -14.471853256225586
    10. '.math' → logprob: -14.971853256225586

Token 671: '.sqrt' (ID: 38011)
  Prédit: '.sqrt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sqrt' → logprob: -0.0005669722449965775
    2. 'sqrt' → logprob: -7.5005669593811035
    3. '.' → logprob: -11.500567436218262
    4. '```' → logprob: -13.375567436218262
    5. '.Sqrt' → logprob: -13.875567436218262
    6. ' sqrt' → logprob: -14.625567436218262
    7. '.ceil' → logprob: -14.625567436218262
    8. '.dist' → logprob: -16.125566482543945
    9. '.h' → logprob: -16.375566482543945
    10. '.pow' → logprob: -16.500566482543945

Token 672: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.003630242543295026
    2. '(max' → logprob: -6.2536301612854
    3. '(' → logprob: -7.2536301612854
    4. 'r' → logprob: -7.6286301612854
    5. 'max' → logprob: -7.6286301612854
    6. '(
' → logprob: -11.503630638122559
    7. '(abs' → logprob: -12.753630638122559
    8. '((' → logprob: -13.003630638122559
    9. ' (' → logprob: -13.128630638122559
    10. ' r' → logprob: -13.503630638122559

Token 673: ' *' (ID: 425)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.015709958970546722
    2. '*r' → logprob: -4.26570987701416
    3. '*' → logprob: -6.76570987701416
    4. '2' → logprob: -8.39070987701416
    5. ' **' → logprob: -9.01570987701416
    6. ' *' → logprob: -10.51570987701416
    7. ')**' → logprob: -12.64070987701416
    8. 'r' → logprob: -13.26570987701416
    9. '²' → logprob: -13.39070987701416
    10. '```' → logprob: -13.39070987701416

Token 674: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.04991145431995392
    2. '2' → logprob: -3.0499114990234375
    3. ' r' → logprob: -6.9249114990234375
    4. '*r' → logprob: -8.299911499023438
    5. '**' → logprob: -10.049911499023438
    6. '*' → logprob: -11.174911499023438
    7. '²' → logprob: -11.549911499023438
    8. ' ' → logprob: -11.799911499023438
    9. ')' → logprob: -12.049911499023438
    10. '^' → logprob: -12.299911499023438

Token 675: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6931703090667725
    2. ' -' → logprob: -0.6931703090667725
    3. ')' → logprob: -11.568170547485352
    4. ' ' → logprob: -11.693170547485352
    5. '   ' → logprob: -12.568170547485352
    6. '  ' → logprob: -14.693170547485352
    7. ',' → logprob: -15.568170547485352
    8. ' ' → logprob: -15.693170547485352
    9. '```' → logprob: -15.818170547485352
    10. '               ' → logprob: -15.943170547485352

Token 676: ' dz' (ID: 17303)
  Prédit: 'dz'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dz' → logprob: -0.001279045594856143
    2. '(d' → logprob: -6.876278877258301
    3. ' dz' → logprob: -8.3762788772583
    4. ' (' → logprob: -11.5012788772583
    5. 'd' → logprob: -13.0012788772583
    6. '   ' → logprob: -13.1262788772583
    7. '(' → logprob: -14.2512788772583
    8. ' ' → logprob: -15.0012788772583
    9. '	d' → logprob: -15.1262788772583
    10. 'dzi' → logprob: -16.251279830932617

Token 677: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.0506913885474205
    2. ' *' → logprob: -3.0506913661956787
    3. '**' → logprob: -6.300691604614258
    4. '*d' → logprob: -8.425691604614258
    5. '*r' → logprob: -10.675691604614258
    6. ' ' → logprob: -11.675691604614258
    7. '*z' → logprob: -12.050691604614258
    8. ' **' → logprob: -12.925691604614258
    9. '*object' → logprob: -13.050691604614258
    10. ')' → logprob: -13.300691604614258

Token 678: ' dz' (ID: 17303)
  Prédit: 'dz'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dz' → logprob: -0.0017878713551908731
    2. ' dz' → logprob: -6.3767876625061035
    3. '2' → logprob: -9.751788139343262
    4. ' ' → logprob: -11.376788139343262
    5. '   ' → logprob: -12.001788139343262
    6. 'd' → logprob: -13.251788139343262
    7. '**' → logprob: -13.501788139343262
    8. '  ' → logprob: -13.626788139343262
    9. 'dzi' → logprob: -13.626788139343262
    10. '*' → logprob: -13.876788139343262

Token 679: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002894393866881728
    2. '               ' → logprob: -6.377894401550293
    3. ')
' → logprob: -7.002894401550293
    4. ' )' → logprob: -8.252894401550293
    5. '           ' → logprob: -11.627894401550293
    6. '                   ' → logprob: -11.752894401550293
    7. ' )
' → logprob: -13.252894401550293
    8. ')
' → logprob: -14.377894401550293
    9. '                       ' → logprob: -15.127894401550293
    10. '                           ' → logprob: -15.252894401550293

Token 680: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.03542657569050789
    2. '           ' → logprob: -3.660426616668701
    3. '                
' → logprob: -5.660426616668701
    4. '            
' → logprob: -6.660426616668701
    5. '<|end|>' → logprob: -6.785426616668701
    6. ' 
' → logprob: -7.285426616668701
    7. ' if' → logprob: -7.285426616668701
    8. ' ' → logprob: -7.785426616668701
    9. '  
' → logprob: -7.785426616668701
    10. '                   ' → logprob: -8.785426139831543

Token 681: ' dist' (ID: 3601)
  Prédit: ' dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dx' → logprob: -0.5914409160614014
    2. 'dist' (adapté à ' dist') → logprob: -1.7164409160614014
    3. 'dx' → logprob: -1.9664409160614014
    4. ' dist' → logprob: -2.8414409160614014
    5. '               ' → logprob: -3.5914409160614014
    6. ' if' → logprob: -3.9664409160614014
    7. '           ' → logprob: -4.2164411544799805
    8. 'if' → logprob: -5.5914411544799805
    9. 'distance' → logprob: -6.5914411544799805
    10. 'd' → logprob: -7.0914411544799805

Token 682: '_xy' (ID: 99656)
  Prédit: '_xy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_xy' → logprob: -0.06559251993894577
    2. ' =' → logprob: -2.9405925273895264
    3. '=' → logprob: -5.065592288970947
    4. '_x' → logprob: -5.565592288970947
    5. 'xy' → logprob: -8.315592765808105
    6. '           ' → logprob: -9.190592765808105
    7. '_sq' → logprob: -9.315592765808105
    8. '   ' → logprob: -10.940592765808105
    9. '               ' → logprob: -11.065592765808105
    10. '_squared' → logprob: -11.940592765808105

Token 683: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06197025999426842
    2. ' =' → logprob: -2.8119702339172363
    3. '           ' → logprob: -13.561970710754395
    4. '   ' → logprob: -15.311970710754395
    5. ' ' → logprob: -15.436970710754395
    6. '               ' → logprob: -15.811970710754395
    7. '       ' → logprob: -16.311969757080078
    8. '	' → logprob: -16.311969757080078
    9. '＝' → logprob: -16.686969757080078
    10. '                   ' → logprob: -16.936969757080078

Token 684: ' math' (ID: 13324)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.02976033091545105
    2. ' math' → logprob: -3.5297603607177734
    3. '(math' → logprob: -11.529760360717773
    4. '((' → logprob: -16.904760360717773
    5. 'Math' → logprob: -19.279760360717773
    6. '   ' → logprob: -19.404760360717773
    7. ' ((' → logprob: -19.779760360717773
    8. ' ' → logprob: -20.404760360717773
    9. ' (' → logprob: -20.779760360717773
    10. '.math' → logprob: -20.904760360717773

Token 685: '.h' (ID: 1508)
  Prédit: '.sqrt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sqrt' → logprob: -0.002956066280603409
    2. '.h' → logprob: -5.877955913543701
    3. '.dist' → logprob: -9.00295639038086
    4. 'sqrt' → logprob: -11.00295639038086
    5. '```' → logprob: -12.37795639038086
    6. 'dist' → logprob: -12.62795639038086
    7. '.Sqrt' → logprob: -13.75295639038086
    8. '.atan' → logprob: -13.87795639038086
    9. 'hyp' → logprob: -14.50295639038086
    10. '.' → logprob: -14.75295639038086

Token 686: 'yp' (ID: 1785)
  Prédit: 'sqrt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sqrt' → logprob: -0.4241032004356384
    2. '.sqrt' → logprob: -1.4241032600402832
    3. 'yp' → logprob: -3.174103260040283
    4. 'ot' → logprob: -3.674103260040283
    5. 'at' → logprob: -4.049103260040283
    6. 'dist' → logprob: -4.424103260040283
    7. 'sq' → logprob: -6.174103260040283
    8. 'd' → logprob: -6.299103260040283
    9. 'f' → logprob: -6.549103260040283
    10. 'hyp' → logprob: -7.424103260040283

Token 687: 'ot' (ID: 346)
  Prédit: 'ot'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ot' → logprob: -4.320199877838604e-07
    2. 'at' → logprob: -15.625
    3. '**' → logprob: -16.875
    4. 'oton' → logprob: -16.875
    5. 'sqrt' → logprob: -17.0
    6. 'otp' → logprob: -17.125
    7. '(x' → logprob: -17.25
    8. '```' → logprob: -17.375
    9. 't' → logprob: -17.5
    10. 'otl' → logprob: -17.75

Token 688: '(cx' (ID: 116103)
  Prédit: '(cx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cx' → logprob: -4.320199877838604e-07
    2. '(x' → logprob: -15.375
    3. 'cx' → logprob: -16.25
    4. '(' → logprob: -17.0
    5. '((' → logprob: -18.375
    6. '(c' → logprob: -19.375
    7. '.cx' → logprob: -20.625
    8. '(cursor' → logprob: -21.75
    9. '(dx' → logprob: -21.75
    10. '(px' → logprob: -22.0

Token 689: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.10020893067121506
    2. '-' → logprob: -2.3502089977264404
    3. '-x' → logprob: -13.47520923614502
    4. ' ' → logprob: -14.47520923614502
    5. '-c' → logprob: -16.100208282470703
    6. '   ' → logprob: -16.725208282470703
    7. 'x' → logprob: -16.975208282470703
    8. ' ' → logprob: -17.100208282470703
    9. '  ' → logprob: -17.100208282470703
    10. '```' → logprob: -17.725208282470703

Token 690: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0009114635176956654
    2. ' x' → logprob: -7.000911235809326
    3. '	x' → logprob: -18.000911712646484
    4. '(x' → logprob: -18.125911712646484
    5. '<|end|>' → logprob: -18.500911712646484
    6. ' ' → logprob: -18.875911712646484
    7. ')x' → logprob: -19.750911712646484
    8. 'user' → logprob: -20.125911712646484
    9. '$x' → logprob: -20.125911712646484
    10. ',x' → logprob: -20.250911712646484

Token 691: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.00010902655776590109
    2. 'i' → logprob: -9.12510871887207
    3. '```' → logprob: -18.62510871887207
    4. ' i' → logprob: -19.12510871887207
    5. ',' → logprob: -19.25010871887207
    6. '[i' → logprob: -19.62510871887207
    7. '<|end|>' → logprob: -20.25010871887207
    8. ',i' → logprob: -20.50010871887207
    9. '­i' → logprob: -20.62510871887207
    10. ')' → logprob: -20.87510871887207

Token 692: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00020509003661572933
    2. ' ,' → logprob: -8.500205039978027
    3. ',
' → logprob: -13.750205039978027
    4. ',y' → logprob: -15.375205039978027
    5. '‌,' → logprob: -16.250205993652344
    6. '_,' → logprob: -16.875205993652344
    7. ',

' → logprob: -17.750205993652344
    8. '<|end|>' → logprob: -17.750205993652344
    9. '```' → logprob: -17.875205993652344
    10. ',user' → logprob: -18.250205993652344

Token 693: ' cy' (ID: 5504)
  Prédit: 'cy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cy' → logprob: -0.0011703446507453918
    2. ' cy' → logprob: -6.7511701583862305
    3. ' ' → logprob: -16.751171112060547
    4. 'y' → logprob: -17.876171112060547
    5. '   ' → logprob: -18.376171112060547
    6. '  ' → logprob: -18.501171112060547
    7. 'cyj' → logprob: -18.751171112060547
    8. '.cy' → logprob: -19.251171112060547
    9. ' y' → logprob: -19.501171112060547
    10. 'icy' → logprob: -19.626171112060547

Token 694: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.04859861359000206
    2. '-' → logprob: -3.048598527908325
    3. ' ' → logprob: -12.548598289489746
    4. '<|end|>' → logprob: -12.673598289489746
    5. ')' → logprob: -13.923598289489746
    6. '```' → logprob: -14.173598289489746
    7. 'user' → logprob: -14.673598289489746
    8. '+' → logprob: -14.923598289489746
    9. ',' → logprob: -15.173598289489746
    10. '[' → logprob: -15.298598289489746

Token 695: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0004903609515167773
    2. ' y' → logprob: -7.625490188598633
    3. 'yi' → logprob: -13.000490188598633
    4. '	y' → logprob: -17.500490188598633
    5. '(y' → logprob: -17.750490188598633
    6. ' ' → logprob: -18.250490188598633
    7. ' yi' → logprob: -18.750490188598633
    8. 'yii' → logprob: -19.125490188598633
    9. ''y' → logprob: -19.375490188598633
    10. '   ' → logprob: -19.625490188598633

Token 696: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.0021859495900571346
    2. 'i' → logprob: -6.127185821533203
    3. '```' → logprob: -14.502185821533203
    4. ')' → logprob: -16.252185821533203
    5. 'ic' → logprob: -16.502185821533203
    6. '[i' → logprob: -16.877185821533203
    7. '_' → logprob: -17.752185821533203
    8. '<|end|>' → logprob: -18.002185821533203
    9. ' i' → logprob: -18.127185821533203
    10. 'c' → logprob: -18.377185821533203

Token 697: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00542585039511323
    2. ')
' → logprob: -5.380425930023193
    3. '               ' → logprob: -7.505425930023193
    4. ' )' → logprob: -8.505425453186035
    5. ')>' → logprob: -11.130425453186035
    6. '                   ' → logprob: -11.255425453186035
    7. ' )
' → logprob: -12.130425453186035
    8. ')<' → logprob: -12.380425453186035
    9. ')
' → logprob: -12.880425453186035
    10. ')

' → logprob: -13.505425453186035

Token 698: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.002496587112545967
    2. '           ' → logprob: -6.002496719360352
    3. '<|end|>' → logprob: -12.002496719360352
    4. '```' → logprob: -12.127496719360352
    5. '	           ' → logprob: -13.252496719360352
    6. '       ' → logprob: -13.502496719360352
    7. '                   ' → logprob: -13.627496719360352
    8. '              ' → logprob: -14.127496719360352
    9. ' if' → logprob: -14.252496719360352
    10. '                
' → logprob: -14.252496719360352

Token 699: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7503536343574524
    2. 'if' (adapté à ' if') → logprob: -1.2503535747528076
    3. '               ' → logprob: -1.5003535747528076
    4. '           ' → logprob: -4.000353813171387
    5. ' ' → logprob: -11.250353813171387
    6. '   ' → logprob: -11.875353813171387
    7. '	if' → logprob: -13.000353813171387
    8. '                   ' → logprob: -13.125353813171387
    9. '	           ' → logprob: -13.125353813171387
    10. '       ' → logprob: -13.250353813171387

Token 700: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.12694165110588074
    2. ' dist' → logprob: -2.126941680908203
    3. '               ' → logprob: -11.501941680908203
    4. '                   ' → logprob: -13.376941680908203
    5. '	dist' → logprob: -13.751941680908203
    6. '(dist' → logprob: -14.751941680908203
    7. '   ' → logprob: -15.876941680908203
    8. ' ' → logprob: -16.501941680908203
    9. '                ' → logprob: -17.001941680908203
    10. '           ' → logprob: -17.001941680908203

Token 701: '_xy' (ID: 99656)
  Prédit: '_xy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_xy' → logprob: -1.1472419600977446e-06
    2. 'xy' → logprob: -13.875000953674316
    3. '<' → logprob: -16.375001907348633
    4. '_xyz' → logprob: -17.375001907348633
    5. 'dist' → logprob: -17.625001907348633
    6. '   ' → logprob: -18.125001907348633
    7. ' <' → logprob: -18.375001907348633
    8. '
' → logprob: -19.000001907348633
    9. '_x' → logprob: -19.125001907348633
    10. '_' → logprob: -19.375001907348633

Token 702: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.05796186998486519
    2. '<' → logprob: -2.932961940765381
    3. ' <=' → logprob: -5.932961940765381
    4. '<=' → logprob: -7.932961940765381
    5. ' ' → logprob: -9.807961463928223
    6. '<|end|>' → logprob: -12.307961463928223
    7. '[' → logprob: -13.182961463928223
    8. ' ' → logprob: -14.182961463928223
    9. ' <
' → logprob: -14.307961463928223
    10. ' ≤' → logprob: -14.682961463928223

Token 703: ' required' (ID: 3759)
  Prédit: 'required'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'required' → logprob: -0.12692926824092865
    2. ' required' → logprob: -2.12692928314209
    3. '	required' → logprob: -14.37692928314209
    4. '(required' → logprob: -14.62692928314209
    5. '_required' → logprob: -16.501928329467773
    6. 'requested' → logprob: -17.126928329467773
    7. 'r' → logprob: -17.751928329467773
    8. ' ' → logprob: -17.876928329467773
    9. 'require' → logprob: -18.126928329467773
    10. '.required' → logprob: -18.501928329467773

Token 704: '_dist' (ID: 37968)
  Prédit: '_dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -2.2200749754119897e-06
    2. 'dist' → logprob: -13.125001907348633
    3. 'Dist' → logprob: -16.500001907348633
    4. ' _' → logprob: -17.500001907348633
    5. '_' → logprob: -17.875001907348633
    6. '	dist' → logprob: -18.125001907348633
    7. '-dist' → logprob: -18.625001907348633
    8. '_DIST' → logprob: -18.875001907348633
    9. '_distance' → logprob: -18.875001907348633
    10. '```' → logprob: -19.125001907348633

Token 705: '_xy' (ID: 99656)
  Prédit: '_xy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_xy' → logprob: -0.00026300468016415834
    2. 'xy' → logprob: -8.250263214111328
    3. '_xyz' → logprob: -14.750263214111328
    4. 'required' → logprob: -15.125263214111328
    5. 'dist' → logprob: -15.375263214111328
    6. '   ' → logprob: -15.375263214111328
    7. 'distance' → logprob: -15.875263214111328
    8. '.xy' → logprob: -16.000263214111328
    9. 'XY' → logprob: -16.250263214111328
    10. '```' → logprob: -16.375263214111328

Token 706: ' -' (ID: 533)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.6433795690536499
    2. ':' → logprob: -1.01837956905365
    3. '                   ' → logprob: -2.5183796882629395
    4. '               ' → logprob: -3.5183796882629395
    5. '                       ' → logprob: -6.0183796882629395
    6. '           ' → logprob: -8.018379211425781
    7. '                           ' → logprob: -9.393379211425781
    8. ' :
' → logprob: -10.643379211425781
    9. '   ' → logprob: -10.893379211425781
    10. ' or' → logprob: -11.018379211425781

Token 707: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0011708177626132965
    2. ' ' → logprob: -6.751170635223389
    3. '   ' → logprob: -14.876171112060547
    4. ' ' → logprob: -16.501171112060547
    5. '0' → logprob: -16.876171112060547
    6. '  ' → logprob: -17.501171112060547
    7. '10' → logprob: -17.626171112060547
    8. '=' → logprob: -18.001171112060547
    9. '```' → logprob: -18.376171112060547
    10. '+' → logprob: -19.001171112060547

Token 708: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.625000953674316
    3. '   ' → logprob: -17.625
    4. '=' → logprob: -18.125
    5. '0' → logprob: -18.375
    6. '10' → logprob: -18.625
    7. '**' → logprob: -19.125
    8. '```' → logprob: -19.25
    9. '*' → logprob: -19.375
    10. '-' → logprob: -19.625

Token 709: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -3.128163257315464e-07
    2. 'E' → logprob: -15.125
    3. '.e' → logprob: -18.0
    4. 'е' → logprob: -20.5
    5. '1' → logprob: -21.0
    6. 'eps' → logprob: -21.25
    7. '.' → logprob: -21.375
    8. '0' → logprob: -21.5
    9. '*' → logprob: -21.5
    10. '_e' → logprob: -22.0

Token 710: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.002221272327005863
    2. '9' → logprob: -6.25222110748291
    3. '8' → logprob: -8.50222110748291
    4. '7' → logprob: -9.87722110748291
    5. '12' → logprob: -11.12722110748291
    6. '10' → logprob: -11.25222110748291
    7. '6' → logprob: -11.50222110748291
    8. '```' → logprob: -14.87722110748291
    9. ' ' → logprob: -16.627222061157227
    10. '−' → logprob: -17.002222061157227

Token 711: '14' (ID: 1265)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.13981357216835022
    2. '8' → logprob: -2.7648136615753174
    3. '12' → logprob: -3.2648136615753174
    4. '10' → logprob: -4.014813423156738
    5. '7' → logprob: -4.889813423156738
    6. '6' → logprob: -5.639813423156738
    7. '14' → logprob: -9.514813423156738
    8. '15' → logprob: -10.514813423156738
    9. '09' → logprob: -10.514813423156738
    10. '13' → logprob: -11.389813423156738

Token 712: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10931319743394852
    2. ':
' → logprob: -2.4843132495880127
    3. '                   ' → logprob: -4.609313011169434
    4. '               ' → logprob: -4.859313011169434
    5. '                       ' → logprob: -6.859313011169434
    6. '           ' → logprob: -7.609313011169434
    7. '<|end|>' → logprob: -8.234313011169434
    8. '                           ' → logprob: -8.984313011169434
    9. '):
' → logprob: -9.609313011169434
    10. '              ' → logprob: -10.109313011169434

Token 713: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.003163818269968033
    2. '               ' → logprob: -6.003163814544678
    3. '                       ' → logprob: -7.503163814544678
    4. '                           ' → logprob: -10.253164291381836
    5. '           ' → logprob: -10.378164291381836
    6. '                    
' → logprob: -10.378164291381836
    7. '                  ' → logprob: -11.503164291381836
    8. '   ' → logprob: -12.253164291381836
    9. '                 ' → logprob: -12.378164291381836
    10. '                               ' → logprob: -12.628164291381836

Token 714: ' #' (ID: 1069)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.6083196401596069
    2. 'ok' → logprob: -0.8583196401596069
    3. '                       ' → logprob: -4.3583197593688965
    4. ' ok' → logprob: -4.3583197593688965
    5. '               ' → logprob: -5.1083197593688965
    6. '           ' → logprob: -9.108319282531738
    7. '   ' → logprob: -10.233319282531738
    8. '                           ' → logprob: -10.858319282531738
    9. '       ' → logprob: -11.233319282531738
    10. '	ok' → logprob: -11.733319282531738

Token 715: ' em' (ID: 863)
  Prédit: 'ok'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ok' → logprob: -0.025563033297657967
    2. ' ok' → logprob: -3.7755630016326904
    3. '                   ' → logprob: -6.2755632400512695
    4. '                       ' → logprob: -8.40056324005127
    5. '               ' → logprob: -8.65056324005127
    6. '           ' → logprob: -11.52556324005127
    7. '   ' → logprob: -12.15056324005127
    8. '	ok' → logprob: -12.40056324005127
    9. '                           ' → logprob: -12.65056324005127
    10. 'Ok' → logprob: -13.15056324005127

Token 716: 'pi' (ID: 3455)
  Prédit: 'pi'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pi' → logprob: -0.010133909992873669
    2. 'p' → logprob: -4.635133743286133
    3. 'pie' → logprob: -8.885133743286133
    4. 'pit' → logprob: -9.510133743286133
    5. 'pite' → logprob: -9.760133743286133
    6. 'pir' → logprob: -10.260133743286133
    7. 'pier' → logprob: -11.135133743286133
    8. 'pis' → logprob: -11.510133743286133
    9. 'piec' → logprob: -11.635133743286133
    10. 'pic' → logprob: -11.885133743286133

Token 717: 'ètement' (ID: 66251)
  Prédit: 'te'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'te' → logprob: -0.510878324508667
    2. 'ète' → logprob: -1.135878324508667
    3. 'nte' → logprob: -3.260878324508667
    4. 't' → logprob: -4.135878562927246
    5. 'n' → logprob: -4.260878562927246
    6. 'ètement' → logprob: -6.135878562927246
    7. 'que' → logprob: -6.385878562927246
    8. 'ête' → logprob: -7.010878562927246
    9. 'ete' → logprob: -7.385878562927246
    10. 'r' → logprob: -7.510878562927246

Token 718: ' sur' (ID: 1512)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0014801019569858909
    2. '                       ' → logprob: -7.3764801025390625
    3. '               ' → logprob: -7.6264801025390625
    4. ' =' → logprob: -8.376480102539062
    5. ',' → logprob: -10.626480102539062
    6. '           ' → logprob: -11.001480102539062
    7. '                  ' → logprob: -11.001480102539062
    8. 'n' → logprob: -11.251480102539062
    9. '                    ' → logprob: -12.126480102539062
    10. '   ' → logprob: -12.126480102539062

Token 719: ' l' (ID: 305)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.45067790150642395
    2. ' la' → logprob: -1.0756778717041016
    3. 'le' → logprob: -4.700677871704102
    4. 'r' → logprob: -5.075677871704102
    5. 'l' → logprob: -5.700677871704102
    6. ' le' → logprob: -6.575677871704102
    7. 'the' → logprob: -7.450677871704102
    8. 'sphere' → logprob: -7.575677871704102
    9. ' sphere' → logprob: -8.450677871704102
    10. 's' → logprob: -8.825677871704102

Token 720: ''a' (ID: 10443)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.027821887284517288
    2. ''a' → logprob: -4.027822017669678
    3. 's' → logprob: -5.527822017669678
    4. 'sphere' → logprob: -5.527822017669678
    5. '   ' → logprob: -8.40282154083252
    6. 'es' → logprob: -8.52782154083252
    7. ''objet' → logprob: -8.65282154083252
    8. ''espace' → logprob: -8.90282154083252
    9. 'ball' → logprob: -9.40282154083252
    10. '```' → logprob: -9.46532154083252

Token 721: 'ig' (ID: 343)
  Prédit: 'ig'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ig' → logprob: -0.016823912039399147
    2. 'igu' → logprob: -4.516823768615723
    3. 'g' → logprob: -5.891823768615723
    4. 'uille' → logprob: -6.516823768615723
    5. 'u' → logprob: -8.766823768615723
    6. 'a' → logprob: -8.766823768615723
    7. 'igue' → logprob: -8.891823768615723
    8. 'ige' → logprob: -9.641823768615723
    9. 'ug' → logprob: -9.766823768615723
    10. 'igure' → logprob: -9.829323768615723

Token 722: 'uille' (ID: 47118)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.09915250539779663
    2. 'uille' → logprob: -2.5991525650024414
    3. 'ule' → logprob: -5.224152565002441
    4. 'ile' → logprob: -6.224152565002441
    5. 'üe' → logprob: -6.349152565002441
    6. 'gle' → logprob: -6.474152565002441
    7. 'ne' → logprob: -6.599152565002441
    8. 'ale' → logprob: -6.599152565002441
    9. 'ue' → logprob: -6.599152565002441
    10. 'e' → logprob: -7.349152565002441

Token 723: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0164344422519207
    2. '                       ' → logprob: -4.141434669494629
    3. '               ' → logprob: -8.016434669494629
    4. '                           ' → logprob: -10.516434669494629
    5. '                    
' → logprob: -11.766434669494629
    6. '                        
' → logprob: -12.016434669494629
    7. '
' → logprob: -12.266434669494629
    8. '           ' → logprob: -12.391434669494629
    9. ':
' → logprob: -12.516434669494629
    10. '<|end|>' → logprob: -12.766434669494629

Token 724: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.002584339352324605
    2. '                       ' → logprob: -6.127584457397461
    3. '               ' → logprob: -7.877584457397461
    4. '                           ' → logprob: -12.252584457397461
    5. '           ' → logprob: -12.502584457397461
    6. '                    
' → logprob: -12.627584457397461
    7. ' =' → logprob: -13.002584457397461
    8. '                        
' → logprob: -14.002584457397461
    9. '
' → logprob: -14.127584457397461
    10. '                  ' → logprob: -14.252584457397461

Token 725: ' ok' (ID: 4763)
  Prédit: 'ok'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ok' (adapté à ' ok') → logprob: -0.26262807846069336
    2. '                   ' → logprob: -1.5126280784606934
    3. '                       ' → logprob: -5.387628078460693
    4. '               ' → logprob: -5.512628078460693
    5. ' ok' → logprob: -6.387628078460693
    6. '           ' → logprob: -8.762628555297852
    7. '   ' → logprob: -9.762628555297852
    8. '	ok' → logprob: -9.762628555297852
    9. '       ' → logprob: -10.137628555297852
    10. '                           ' → logprob: -10.887628555297852

Token 726: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07412531226873398
    2. ' =' → logprob: -3.199125289916992
    3. '                   ' → logprob: -4.074125289916992
    4. '=False' → logprob: -4.324125289916992
    5. '                       ' → logprob: -8.574125289916992
    6. '               ' → logprob: -8.824125289916992
    7. '=True' → logprob: -10.449125289916992
    8. '           ' → logprob: -11.699125289916992
    9. '==' → logprob: -12.324125289916992
    10. '                           ' → logprob: -12.574125289916992

Token 727: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.0007099286303855479
    2. ' False' → logprob: -7.2507100105285645
    3. '(False' → logprob: -19.000709533691406
    4. '=False' → logprob: -19.375709533691406
    5. '_false' → logprob: -20.250709533691406
    6. 'false' → logprob: -21.500709533691406
    7. '   ' → logprob: -21.875709533691406
    8. 'True' → logprob: -22.000709533691406
    9. 'F' → logprob: -22.500709533691406
    10. '.False' → logprob: -22.625709533691406

Token 728: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0006850333884358406
    2. '               ' → logprob: -7.750685214996338
    3. '                       ' → logprob: -8.75068473815918
    4. '<|end|>' → logprob: -10.25068473815918
    5. '           ' → logprob: -11.37568473815918
    6. '                  ' → logprob: -11.50068473815918
    7. '                    
' → logprob: -11.87568473815918
    8. '       ' → logprob: -12.00068473815918
    9. '                    ' → logprob: -12.00068473815918
    10. '   ' → logprob: -12.62568473815918

Token 729: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0002702760975807905
    2. '                       ' → logprob: -9.000269889831543
    3. '               ' → logprob: -9.125269889831543
    4. '				' → logprob: -11.875269889831543
    5. '       ' → logprob: -12.000269889831543
    6. '                  ' → logprob: -12.125269889831543
    7. '           ' → logprob: -12.375269889831543
    8. '<|end|>' → logprob: -12.375269889831543
    9. '                           ' → logprob: -12.625269889831543
    10. '   ' → logprob: -13.000269889831543

Token 730: ' break' (ID: 2338)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.47460436820983887
    2. 'break' (adapté à ' break') → logprob: -0.9746043682098389
    3. '               ' → logprob: -8.599604606628418
    4. ' break' → logprob: -8.849604606628418
    5. '                       ' → logprob: -8.974604606628418
    6. '				' → logprob: -10.099604606628418
    7. '	break' → logprob: -11.349604606628418
    8. '           ' → logprob: -11.599604606628418
    9. 'continue' → logprob: -12.599604606628418
    10. '                           ' → logprob: -13.349604606628418

Token 731: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0022504113148897886
    2. '               ' → logprob: -6.2522501945495605
    3. '		' → logprob: -9.377250671386719
    4. '       ' → logprob: -9.502250671386719
    5. '                   ' → logprob: -9.627250671386719
    6. '            
' → logprob: -10.627250671386719
    7. '	       ' → logprob: -11.377250671386719
    8. '	           ' → logprob: -11.752250671386719
    9. '```' → logprob: -11.752250671386719
    10. '                       ' → logprob: -12.252250671386719

Token 732: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0011031834874302149
    2. '               ' → logprob: -7.126103401184082
    3. '		' → logprob: -9.251103401184082
    4. '       ' → logprob: -9.376103401184082
    5. '	       ' → logprob: -10.376103401184082
    6. '                   ' → logprob: -10.876103401184082
    7. '	           ' → logprob: -11.126103401184082
    8. '          ' → logprob: -11.501103401184082
    9. '<|end|>' → logprob: -11.626103401184082
    10. '            
' → logprob: -11.626103401184082

Token 733: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002398482523858547
    2. '       ' → logprob: -6.127398490905762
    3. '	       ' → logprob: -9.627398490905762
    4. '   ' → logprob: -10.127398490905762
    5. '		' → logprob: -10.377398490905762
    6. 'if' (adapté à ' if') → logprob: -10.627398490905762
    7. '	   ' → logprob: -11.252398490905762
    8. '               ' → logprob: -11.502398490905762
    9. '          ' → logprob: -11.752398490905762
    10. '<|end|>' → logprob: -12.002398490905762

Token 734: ' ok' (ID: 4763)
  Prédit: ' ok'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ok' → logprob: -0.03369906544685364
    2. 'ok' → logprob: -3.4086990356445312
    3. '	ok' → logprob: -10.783699035644531
    4. 'Ok' → logprob: -12.033699035644531
    5. 'not' → logprob: -12.033699035644531
    6. ' ' → logprob: -12.408699035644531
    7. ' okay' → logprob: -12.783699035644531
    8. '   ' → logprob: -13.033699035644531
    9. ' not' → logprob: -13.158699035644531
    10. '(ok' → logprob: -13.408699035644531

Token 735: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0064011733047664165
    2. ':' → logprob: -5.631401062011719
    3. ':
' → logprob: -6.006401062011719
    4. '           ' → logprob: -8.881401062011719
    5. ':return' → logprob: -9.006401062011719
    6. '                       ' → logprob: -10.631401062011719
    7. '                   ' → logprob: -11.131401062011719
    8. ' and' → logprob: -12.131401062011719
    9. ' return' → logprob: -12.256401062011719
    10. 'return' → logprob: -12.631401062011719

Token 736: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0006342819542624056
    2. 'return' → logprob: -7.50063419342041
    3. ' return' → logprob: -9.87563419342041
    4. '           ' → logprob: -10.75063419342041
    5. '       ' → logprob: -11.87563419342041
    6. '                   ' → logprob: -13.75063419342041
    7. '   ' → logprob: -14.87563419342041
    8. '                       ' → logprob: -16.500635147094727
    9. '```' → logprob: -17.250635147094727
    10. '	return' → logprob: -17.500635147094727

Token 737: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.005941479001194239
    2. '               ' → logprob: -5.255941390991211
    3. ' return' → logprob: -7.255941390991211
    4. '   ' → logprob: -14.880941390991211
    5. '                   ' → logprob: -14.880941390991211
    6. '       ' → logprob: -15.005941390991211
    7. '	return' → logprob: -15.130941390991211
    8. '           ' → logprob: -15.755941390991211
    9. '```' → logprob: -18.00594139099121
    10. ':return' → logprob: -18.13094139099121

Token 738: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.07891424000263214
    2. ' True' → logprob: -2.578914165496826
    3. '(True' → logprob: -11.203914642333984
    4. '(cx' → logprob: -12.203914642333984
    5. ' cx' → logprob: -12.703914642333984
    6. 'cx' → logprob: -13.078914642333984
    7. ' (' → logprob: -14.328914642333984
    8. 'False' → logprob: -16.953914642333984
    9. ' ' → logprob: -17.453914642333984
    10. '(c' → logprob: -17.953914642333984

Token 739: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.7261145114898682
    2. '   ' → logprob: -1.8511145114898682
    3. '           ' → logprob: -1.8511145114898682
    4. ' 
' → logprob: -1.8511145114898682
    5. '    
' → logprob: -2.226114511489868
    6. '        
' → logprob: -2.726114511489868
    7. '<|end|>' → logprob: -2.851114511489868
    8. '            
' → logprob: -3.851114511489868
    9. ' ' → logprob: -4.101114273071289
    10. '    ' → logprob: -4.476114273071289

Token 740: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0029428005218506
    2. '    
' → logprob: -1.8779428005218506
    3. ' 
' → logprob: -1.8779428005218506
    4. ' ' → logprob: -2.8779428005218506
    5. ' return' → logprob: -2.8779428005218506
    6. '       ' → logprob: -3.2529428005218506
    7. '    ' → logprob: -3.5029428005218506
    8. '<|end|>' → logprob: -3.7529428005218506
    9. '        
' → logprob: -4.00294303894043
    10. '           ' → logprob: -4.00294303894043

Token 741: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.03373778611421585
    2. '   ' → logprob: -3.658737897872925
    3. ' return' → logprob: -5.158737659454346
    4. 'False' → logprob: -7.033737659454346
    5. '	return' → logprob: -7.658737659454346
    6. '    
' → logprob: -8.783738136291504
    7. '
' → logprob: -10.033738136291504
    8. '       ' → logprob: -10.408738136291504
    9. 'None' → logprob: -10.783738136291504
    10. '```' → logprob: -11.033738136291504

Token 742: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.029750484973192215
    2. ' False' → logprob: -3.5297505855560303
    3. '(False' → logprob: -19.40475082397461
    4. 'True' → logprob: -20.02975082397461
    5. '_false' → logprob: -20.65475082397461
    6. '=False' → logprob: -21.40475082397461
    7. '.False' → logprob: -22.02975082397461
    8. ' ' → logprob: -22.40475082397461
    9. 'false' → logprob: -22.65475082397461
    10. '   ' → logprob: -22.77975082397461

Token 743: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 744: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2434968203306198
    2. '<|end|>' → logprob: -1.9934967756271362
    3. '#' → logprob: -2.868496894836426
    4. '```' → logprob: -4.118496894836426
    5. '<|end|>' → logprob: -5.868496894836426
    6. 'import' → logprob: -5.993496894836426
    7. '.' → logprob: -8.243496894836426
    8. 'r' → logprob: -8.368496894836426
    9. 'w' → logprob: -8.493496894836426
    10. '...' → logprob: -8.618496894836426

Token 745: ' solve' (ID: 17722)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.6809162497520447
    2. ' main' → logprob: -0.8059162497520447
    3. ' find' → logprob: -4.3059163093566895
    4. 'binary' → logprob: -4.5559163093566895
    5. 'find' → logprob: -4.6809163093566895
    6. 'solve' → logprob: -5.4309163093566895
    7. ' binary' → logprob: -5.8059163093566895
    8. 'max' → logprob: -6.4309163093566895
    9. 'minimum' → logprob: -7.0559163093566895
    10. ' solve' → logprob: -7.4309163093566895

Token 746: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.22741203010082245
    2. '(r' → logprob: -2.102411985397339
    3. '(' → logprob: -2.977411985397339
    4. '(radius' → logprob: -3.852411985397339
    5. '()' → logprob: -5.852412223815918
    6. '(depth' → logprob: -6.602412223815918
    7. '(size' → logprob: -7.477412223815918
    8. '(n' → logprob: -7.477412223815918
    9. ' (' → logprob: -7.602412223815918
    10. '():
' → logprob: -7.602412223815918

Token 747: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15809430181980133
    2. 'n' → logprob: -2.6580944061279297
    3. ' n' → logprob: -2.7830944061279297
    4. 't' → logprob: -5.40809440612793
    5. ' t' → logprob: -5.65809440612793
    6. ' input' → logprob: -5.90809440612793
    7. '```' → logprob: -6.65809440612793
    8. 'import' → logprob: -7.28309440612793
    9. ' w' → logprob: -7.90809440612793
    10. 'input' → logprob: -8.28309440612793

Token 748: ' input' (ID: 3422)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.8020886778831482
    2. 't' → logprob: -1.052088737487793
    3. 'T' → logprob: -2.052088737487793
    4. 'input' (adapté à ' input') → logprob: -2.802088737487793
    5. ' input' → logprob: -4.802088737487793
    6. 'import' → logprob: -6.052088737487793
    7. ' t' → logprob: -6.802088737487793
    8. '   ' → logprob: -7.052088737487793
    9. ' T' → logprob: -7.927088737487793
    10. ' n' → logprob: -8.177088737487793

Token 749: ' =' (ID: 314)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.12972354888916016
    2. '_line' → logprob: -2.87972354888916
    3. '_data' → logprob: -3.00472354888916
    4. '=' → logprob: -4.87972354888916
    5. ' =' → logprob: -5.75472354888916
    6. '_lines' → logprob: -5.75472354888916
    7. '_' → logprob: -7.12972354888916
    8. 'data' → logprob: -7.62972354888916
    9. 's' → logprob: -8.25472354888916
    10. 'line' → logprob: -9.12972354888916

Token 750: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.004078401252627373
    2. ' sys' → logprob: -5.504078388214111
    3. '	sys' → logprob: -17.004077911376953
    4. '(sys' → logprob: -17.504077911376953
    5. '=sys' → logprob: -17.754077911376953
    6. 'input' → logprob: -20.004077911376953
    7. 'lambda' → logprob: -22.254077911376953
    8. '_sys' → logprob: -22.754077911376953
    9. '.sys' → logprob: -23.004077911376953
    10. '```' → logprob: -23.504077911376953

Token 751: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -6.153795766294934e-06
    2. 'stdin' → logprob: -12.375005722045898
    3. '.stdout' → logprob: -13.500005722045898
    4. '.argv' → logprob: -15.625005722045898
    5. '.std' → logprob: -15.750005722045898
    6. '.readline' → logprob: -16.7500057220459
    7. '(stdin' → logprob: -17.1250057220459
    8. ' stdin' → logprob: -17.1250057220459
    9. '.' → logprob: -17.6250057220459
    10. '.input' → logprob: -18.8750057220459

Token 752: '.read' (ID: 7211)
  Prédit: '.readline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.4743475019931793
    2. 'read' → logprob: -0.9743474721908569
    3. ' readline' → logprob: -9.224347114562988
    4. 'stdin' → logprob: -9.599347114562988
    5. '.read' → logprob: -10.349347114562988
    6. 'readonly' → logprob: -10.474347114562988
    7. 'reader' → logprob: -10.724347114562988
    8. 'buffer' → logprob: -12.099347114562988
    9. 'rea' → logprob: -12.224347114562988
    10. '_read' → logprob: -12.349347114562988

Token 753: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.006747581530362368
    2. '()' → logprob: -5.006747722625732
    3. '()
' → logprob: -10.506747245788574
    4. 'line' → logprob: -12.631747245788574
    5. '()

' → logprob: -14.256747245788574
    6. '()\' → logprob: -15.131747245788574
    7. '_line' → logprob: -16.13174819946289
    8. 'Line' → logprob: -16.63174819946289
    9. 'lines' → logprob: -16.63174819946289
    10. '()).' → logprob: -16.63174819946289

Token 754: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.0033532092347741127
    2. 'split' → logprob: -5.753353118896484
    3. 'decode' → logprob: -9.003353118896484
    4. 'rstrip' → logprob: -10.378353118896484
    5. 'read' → logprob: -10.753353118896484
    6. 'replace' → logprob: -17.003353118896484
    7. ' strip' → logprob: -17.378353118896484
    8. 'trim' → logprob: -18.753353118896484
    9. 'str' → logprob: -19.878353118896484
    10. 'string' → logprob: -20.253353118896484

Token 755: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.018158020451664925
    2. '()' → logprob: -4.018157958984375
    3. '()
' → logprob: -12.018157958984375
    4. '()

' → logprob: -14.393157958984375
    5. 'split' → logprob: -14.768157958984375
    6. '()`' → logprob: -15.268157958984375
    7. '.split' → logprob: -15.643157958984375
    8. '()\' → logprob: -15.768157958984375
    9. '.' → logprob: -15.893157958984375
    10. '(' → logprob: -15.893157958984375

Token 756: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: 0.0
    2. ' split' → logprob: -17.125
    3. '(split' → logprob: -18.0
    4. 'decode' → logprob: -20.375
    5. 'spl' → logprob: -20.375
    6. 'strip' → logprob: -20.875
    7. '_split' → logprob: -21.25
    8. 'plit' → logprob: -21.625
    9. 'rstrip' → logprob: -21.75
    10. 's' → logprob: -23.0

Token 757: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.09101471304893494
    2. '('' → logprob: -2.5910146236419678
    3. '(' → logprob: -4.591014862060547
    4. '('\' → logprob: -6.966014862060547
    5. '("("' → logprob: -7.216014862060547
    6. '('.')' → logprob: -9.716014862060547
    7. 'lines' → logprob: -10.341014862060547
    8. '(',' → logprob: -10.841014862060547
    9. '()[' → logprob: -11.091014862060547
    10. 'tokens' → logprob: -11.216014862060547

Token 758: '   ' (ID: 271)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.35616999864578247
    2. '   ' → logprob: -1.2311699390411377
    3. 't' → logprob: -5.731170177459717
    4. 'T' → logprob: -5.981170177459717
    5. ' n' → logprob: -7.106170177459717
    6. '```' → logprob: -7.231170177459717
    7. 'r' → logprob: -8.606169700622559
    8. 'N' → logprob: -9.481169700622559
    9. 'size' → logprob: -10.606169700622559
    10. '	n' → logprob: -10.731169700622559

Token 759: ' idx' (ID: 14016)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.11417733877897263
    2. 't' → logprob: -2.9891772270202637
    3. 'T' → logprob: -3.3641772270202637
    4. 'w' → logprob: -3.9891772270202637
    5. 'N' → logprob: -5.489177227020264
    6. 'W' → logprob: -9.614177703857422
    7. 'r' → logprob: -10.114177703857422
    8. 'k' → logprob: -10.239177703857422
    9. 'max' → logprob: -10.364177703857422
    10. 'L' → logprob: -10.739177703857422

Token 760: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.35867786407470703
    2. '=' → logprob: -1.233677864074707
    3. ' +=' → logprob: -4.733677864074707
    4. '+=' → logprob: -6.733677864074707
    5. '   ' → logprob: -9.483677864074707
    6. '()' → logprob: -10.358677864074707
    7. '_' → logprob: -10.483677864074707
    8. '  ' → logprob: -11.483677864074707
    9. '(' → logprob: -11.608677864074707
    10. '+' → logprob: -12.233677864074707

Token 761: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00018089536752086133
    2. ' ' → logprob: -8.625181198120117
    3. '1' → logprob: -13.625181198120117
    4. '2' → logprob: -18.000181198120117
    5. '```' → logprob: -18.625181198120117
    6. '   ' → logprob: -19.125181198120117
    7. '[' → logprob: -19.812681198120117
    8. '۰' → logprob: -20.250181198120117
    9. '<|end|>' → logprob: -20.250181198120117
    10. '  ' → logprob: -20.562681198120117

Token 762: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.319370302458992e-06
    2. '1' → logprob: -12.750005722045898
    3. ' ' → logprob: -13.000005722045898
    4. '2' → logprob: -16.8750057220459
    5. '```' → logprob: -19.5000057220459
    6. '   ' → logprob: -19.8750057220459
    7. '[' → logprob: -20.3750057220459
    8. '3' → logprob: -20.6250057220459
    9. 'int' → logprob: -20.8125057220459
    10. '  ' → logprob: -21.5625057220459

Token 763: '
' (ID: 198)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.38026437163352966
    2. 't' → logprob: -2.1302642822265625
    3. '   ' → logprob: -2.1302642822265625
    4. 'T' → logprob: -2.6302642822265625
    5. ' T' → logprob: -6.5052642822265625
    6. '
' → logprob: -6.7552642822265625
    7. ' n' → logprob: -6.8802642822265625
    8. 'num' → logprob: -7.0052642822265625
    9. 'while' → logprob: -7.1302642822265625
    10. ' t' → logprob: -7.2552642822265625

Token 764: '   ' (ID: 271)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6633690595626831
    2. 't' → logprob: -1.038369059562683
    3. '   ' → logprob: -2.5383691787719727
    4. 'T' → logprob: -3.0383691787719727
    5. ' t' → logprob: -6.038369178771973
    6. ' n' → logprob: -7.163369178771973
    7. ' T' → logprob: -7.913369178771973
    8. '```' → logprob: -8.538369178771973
    9. 'N' → logprob: -9.538369178771973
    10. 'num' → logprob: -10.038369178771973

Token 765: ' results' (ID: 4376)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.47651100158691406
    2. 'T' → logprob: -1.726511001586914
    3. 'n' → logprob: -1.976511001586914
    4. 'while' → logprob: -2.851511001586914
    5. '   ' → logprob: -5.851511001586914
    6. ' while' → logprob: -7.476511001586914
    7. ' t' → logprob: -8.101511001586914
    8. ' T' → logprob: -8.226511001586914
    9. 'results' (adapté à ' results') → logprob: -8.351511001586914
    10. 'N' → logprob: -8.476511001586914

Token 766: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.576224148273468
    2. '=' → logprob: -0.826224148273468
    3. '=[]' → logprob: -8.201224327087402
    4. '=[]
' → logprob: -12.076224327087402
    5. '[]' → logprob: -12.951224327087402
    6. '   ' → logprob: -13.701224327087402
    7. ']' → logprob: -15.576224327087402
    8. '[:]' → logprob: -15.576224327087402
    9. '=[]
' → logprob: -15.951224327087402
    10. ')' → logprob: -16.201223373413086

Token 767: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.002488022670149803
    2. '[]
' → logprob: -6.002488136291504
    3. ' []' → logprob: -11.752488136291504
    4. '[]

' → logprob: -12.877488136291504
    5. '[' → logprob: -13.252488136291504
    6. ' []
' → logprob: -16.002487182617188
    7. '[]"' → logprob: -16.377487182617188
    8. '[]}' → logprob: -18.377487182617188
    9. '   ' → logprob: -18.877487182617188
    10. '=[]' → logprob: -19.127487182617188

Token 768: '   ' (ID: 271)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.026054563000798225
    2. '   ' → logprob: -3.901054620742798
    3. ' while' → logprob: -5.526054382324219
    4. 't' → logprob: -7.276054382324219
    5. '```' → logprob: -7.401054382324219
    6. 'n' → logprob: -8.776054382324219
    7. '	while' → logprob: -11.151054382324219
    8. '    
' → logprob: -11.276054382324219
    9. 'T' → logprob: -11.276054382324219
    10. '
' → logprob: -11.401054382324219

Token 769: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.050294019281864166
    2. 't' → logprob: -3.5502939224243164
    3. 'n' → logprob: -4.550293922424316
    4. 'T' → logprob: -4.800293922424316
    5. ' while' → logprob: -6.550293922424316
    6. '   ' → logprob: -10.050293922424316
    7. 'num' → logprob: -10.300293922424316
    8. '```' → logprob: -11.050293922424316
    9. ' t' → logprob: -12.050293922424316
    10. 'q' → logprob: -12.800293922424316

Token 770: ' True' (ID: 6432)
  Prédit: ' idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' idx' → logprob: -0.22715893387794495
    2. 'idx' → logprob: -2.227159023284912
    3. ' True' → logprob: -2.477159023284912
    4. 'True' → logprob: -4.477159023284912
    5. '(idx' → logprob: -11.227158546447754
    6. '(True' → logprob: -12.102158546447754
    7. '	idx' → logprob: -12.977158546447754
    8. ' len' → logprob: -13.852158546447754
    9. ' ' → logprob: -14.477158546447754
    10. '   ' → logprob: -14.602158546447754

Token 771: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.11757154017686844
    2. ':
' → logprob: -2.9925715923309326
    3. '       ' → logprob: -3.6175715923309326
    4. '   ' → logprob: -3.6175715923309326
    5. '<|end|>' → logprob: -5.4925713539123535
    6. '<|end|>' → logprob: -7.1175713539123535
    7. ',' → logprob: -7.2425713539123535
    8. '):
' → logprob: -8.242571830749512
    9. ' and' → logprob: -8.492571830749512
    10. '):' → logprob: -8.617571830749512

Token 772: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09401925653219223
    2. '   ' → logprob: -3.3440191745758057
    3. ' if' → logprob: -3.5940191745758057
    4. 'n' → logprob: -4.469019412994385
    5. 'if' → logprob: -4.594019412994385
    6. '        
' → logprob: -6.844019412994385
    7. '<|end|>' → logprob: -6.969019412994385
    8. ' n' → logprob: -7.094019412994385
    9. 'token' → logprob: -7.594019412994385
    10. '    
' → logprob: -7.969019412994385

Token 773: ' if' (ID: 538)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.10758710652589798
    2. 'if' (adapté à ' if') → logprob: -2.6075870990753174
    3. 'w' → logprob: -4.9825873374938965
    4. 'N' → logprob: -4.9825873374938965
    5. '   ' → logprob: -4.9825873374938965
    6. 'r' → logprob: -5.9825873374938965
    7. 'R' → logprob: -6.4825873374938965
    8. ' if' → logprob: -6.7325873374938965
    9. 'W' → logprob: -6.9825873374938965
    10. 'L' → logprob: -7.1075873374938965

Token 774: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.005234594456851482
    2. ' idx' → logprob: -5.255234718322754
    3. '	idx' → logprob: -14.505234718322754
    4. '(idx' → logprob: -15.505234718322754
    5. 'len' → logprob: -17.755233764648438
    6. '[idx' → logprob: -18.380233764648438
    7. '   ' → logprob: -18.630233764648438
    8. '_idx' → logprob: -18.630233764648438
    9. 'int' → logprob: -19.130233764648438
    10. 'index' → logprob: -19.255233764648438

Token 775: '+' (ID: 10)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.023352395743131638
    2. ' >=' → logprob: -3.7733523845672607
    3. ']>=' → logprob: -10.27335262298584
    4. '+' → logprob: -10.52335262298584
    5. '==' → logprob: -10.52335262298584
    6. ')>=' → logprob: -11.02335262298584
    7. '≥' → logprob: -14.52335262298584
    8. '[' → logprob: -14.89835262298584
    9. '=' → logprob: -15.02335262298584
    10. '   ' → logprob: -15.39835262298584

Token 776: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.27561306953430176
    2. '3' → logprob: -1.6506130695343018
    3. '1' → logprob: -3.2756130695343018
    4. '4' → logprob: -4.525612831115723
    5. '5' → logprob: -8.650612831115723
    6. '0' → logprob: -8.900612831115723
    7. '6' → logprob: -10.775612831115723
    8. ' ' → logprob: -12.525612831115723
    9. '=' → logprob: -13.525612831115723
    10. '7' → logprob: -13.775612831115723

Token 777: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.016451673582196236
    2. ' >=' → logprob: -4.141451835632324
    3. '>' → logprob: -8.391451835632324
    4. ']>=' → logprob: -8.766451835632324
    5. ')>=' → logprob: -10.516451835632324
    6. ' >' → logprob: -13.266451835632324
    7. ']' → logprob: -13.641451835632324
    8. '==' → logprob: -13.891451835632324
    9. '```' → logprob: -13.891451835632324
    10. '   ' → logprob: -14.141451835632324

Token 778: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -2.1008713702030946e-06
    2. ' len' → logprob: -13.875001907348633
    3. '(len' → logprob: -14.500001907348633
    4. '=len' → logprob: -14.500001907348633
    5. '[len' → logprob: -16.750001907348633
    6. '	len' → logprob: -17.500001907348633
    7. '<len' → logprob: -17.500001907348633
    8. ',len' → logprob: -17.750001907348633
    9. 'length' → logprob: -19.000001907348633
    10. 'input' → logprob: -19.125001907348633

Token 779: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.10025520622730255
    2. 'input' → logprob: -2.350255250930786
    3. ' input' → logprob: -9.975255012512207
    4. '=input' → logprob: -13.600255012512207
    5. ',input' → logprob: -15.225255012512207
    6. '<input' → logprob: -15.850255012512207
    7. '   ' → logprob: -16.725255966186523
    8. 'Input' → logprob: -16.850255966186523
    9. '[input' → logprob: -16.850255966186523
    10. '	input' → logprob: -17.100255966186523

Token 780: '):
' (ID: 1883)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.03179273381829262
    2. 'or' → logprob: -3.531792640686035
    3. ':
' → logprob: -6.531792640686035
    4. ':' → logprob: -8.031792640686035
    5. ')' → logprob: -9.281792640686035
    6. '   ' → logprob: -9.781792640686035
    7. '):
' → logprob: -10.156792640686035
    8. '	or' → logprob: -10.281792640686035
    9. '       ' → logprob: -11.406792640686035
    10. ' and' → logprob: -11.656792640686035

Token 781: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6367220282554626
    2. '       ' → logprob: -0.7617220282554626
    3. '   ' → logprob: -5.511722087860107
    4. ' ' → logprob: -11.51172161102295
    5. ' break' → logprob: -11.63672161102295
    6. '	   ' → logprob: -11.76172161102295
    7. '<|end|>' → logprob: -11.76172161102295
    8. '```' → logprob: -12.01172161102295
    9. '		' → logprob: -12.13672161102295
    10. 'break' → logprob: -12.38672161102295

Token 782: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.16771145164966583
    2. '       ' → logprob: -2.6677114963531494
    3. '           ' → logprob: -2.6677114963531494
    4. ' break' → logprob: -4.91771125793457
    5. 'return' → logprob: -5.04271125793457
    6. '	break' → logprob: -6.54271125793457
    7. '   ' → logprob: -8.66771125793457
    8. '               ' → logprob: -8.91771125793457
    9. ' return' → logprob: -11.04271125793457
    10. '_break' → logprob: -11.41771125793457

Token 783: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.020336439833045006
    2. '   ' → logprob: -4.520336627960205
    3. '        
' → logprob: -5.145336627960205
    4. '
' → logprob: -6.895336627960205
    5. '<|end|>' → logprob: -6.895336627960205
    6. '    
' → logprob: -7.645336627960205
    7. '  
' → logprob: -8.645336151123047
    8. '```' → logprob: -8.895336151123047
    9. ' ' → logprob: -9.270336151123047
    10. 'def' → logprob: -10.020336151123047

Token 784: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.035020798444747925
    2. 'n' → logprob: -4.53502082824707
    3. 'r' → logprob: -5.16002082824707
    4. '   ' → logprob: -5.28502082824707
    5. 'w' → logprob: -5.66002082824707
    6. '        
' → logprob: -5.66002082824707
    7. 's' → logprob: -6.41002082824707
    8. '```' → logprob: -6.66002082824707
    9. '
' → logprob: -7.16002082824707
    10. 'size' → logprob: -7.28502082824707

Token 785: ' n' (ID: 297)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.03649388626217842
    2. 'n' (adapté à ' n') → logprob: -4.16149377822876
    3. 'r' → logprob: -4.16149377822876
    4. 'W' → logprob: -6.03649377822876
    5. 'R' → logprob: -7.66149377822876
    6. 'L' → logprob: -7.78649377822876
    7. '   ' → logprob: -7.78649377822876
    8. 'h' → logprob: -8.161494255065918
    9. 'N' → logprob: -8.411494255065918
    10. 'l' → logprob: -8.786494255065918

Token 786: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12701410055160522
    2. ' =' → logprob: -2.12701416015625
    3. '=int' → logprob: -9.37701416015625
    4. ',' → logprob: -14.50201416015625
    5. '=
' → logprob: -14.50201416015625
    6. '=num' → logprob: -16.62701416015625
    7. '   ' → logprob: -16.62701416015625
    8. ' ' → logprob: -17.12701416015625
    9. '=n' → logprob: -17.12701416015625
    10. ' =
' → logprob: -17.37701416015625

Token 787: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0015023599844425917
    2. ' int' → logprob: -6.501502513885498
    3. ' ' → logprob: -18.751502990722656
    4. '  ' → logprob: -20.251502990722656
    5. '	int' → logprob: -21.126502990722656
    6. '   ' → logprob: -21.376502990722656
    7. '=int' → logprob: -21.751502990722656
    8. '[int' → logprob: -21.751502990722656
    9. '(int' → logprob: -21.751502990722656
    10. '<int' → logprob: -24.376502990722656

Token 788: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.000205566844670102
    2. '(' → logprob: -9.125205993652344
    3. 'input' → logprob: -9.250205993652344
    4. ' (' → logprob: -15.750205993652344
    5. ' input' → logprob: -16.000205993652344
    6. '=input' → logprob: -16.625205993652344
    7. '(
' → logprob: -16.875205993652344
    8. ',input' → logprob: -17.000205993652344
    9. '[input' → logprob: -17.625205993652344
    10. ')' → logprob: -17.875205993652344

Token 789: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -5.512236498361744e-07
    2. '[' → logprob: -14.750000953674316
    3. ' [' → logprob: -16.625
    4. '   ' → logprob: -18.375
    5. 'idx' → logprob: -18.375
    6. ' idx' → logprob: -20.125
    7. ')[' → logprob: -20.5
    8. '	idx' → logprob: -20.5
    9. '(idx' → logprob: -20.875
    10. '[
' → logprob: -21.5

Token 790: ']);' (ID: 34389)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.47947996854782104
    2. '])
' → logprob: -0.979479968547821
    3. ']);' → logprob: -5.229479789733887
    4. '])
' → logprob: -11.354479789733887
    5. ' ])
' → logprob: -11.729479789733887
    6. ' ])' → logprob: -11.854479789733887
    7. '])

' → logprob: -12.979479789733887
    8. ']);
' → logprob: -14.104479789733887
    9. ' ' → logprob: -14.229479789733887
    10. ')' → logprob: -14.604479789733887

Token 791: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.005588752683252096
    2. ' idx' → logprob: -5.380588531494141
    3. 'if' → logprob: -7.755588531494141
    4. 'r' → logprob: -8.00558853149414
    5. 'w' → logprob: -8.75558853149414
    6. '	idx' → logprob: -10.50558853149414
    7. ' if' → logprob: -11.25558853149414
    8. '   ' → logprob: -12.38058853149414
    9. '  ' → logprob: -13.88058853149414
    10. '_idx' → logprob: -14.13058853149414

Token 792: '+=' (ID: 18287)
  Prédit: '+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0019422034965828061
    2. ' +=' → logprob: -6.251942157745361
    3. '+' → logprob: -11.75194263458252
    4. ']+=' → logprob: -12.37694263458252
    5. '+='' → logprob: -14.25194263458252
    6. '+="' → logprob: -15.00194263458252
    7. '++' → logprob: -15.25194263458252
    8. '+=(' → logprob: -15.37694263458252
    9. '=' → logprob: -16.626941680908203
    10. '```' → logprob: -17.626941680908203

Token 793: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.125
    3. '2' → logprob: -19.25
    4. '   ' → logprob: -20.75
    5. '```' → logprob: -21.625
    6. '１' → logprob: -22.0
    7. '
' → logprob: -22.625
    8. '+' → logprob: -22.75
    9. '0' → logprob: -23.0
    10. '  ' → logprob: -23.75

Token 794: '
' (ID: 198)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.006777542643249035
    2. 'r' → logprob: -5.756777763366699
    3. 'if' → logprob: -5.756777763366699
    4. '   ' → logprob: -8.8817777633667
    5. '<|end|>' → logprob: -9.6317777633667
    6. ' w' → logprob: -9.7567777633667
    7. '       ' → logprob: -9.8817777633667
    8. 'h' → logprob: -9.8817777633667
    9. ' if' → logprob: -10.6317777633667
    10. 't' → logprob: -11.1317777633667

Token 795: '       ' (ID: 309)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.0032410474959760904
    2. '   ' → logprob: -5.753241062164307
    3. '       ' → logprob: -10.253240585327148
    4. 'h' → logprob: -11.378240585327148
    5. ' w' → logprob: -11.753240585327148
    6. '	w' → logprob: -12.378240585327148
    7. 't' → logprob: -13.753240585327148
    8. 'if' → logprob: -14.003240585327148
    9. 'r' → logprob: -14.253240585327148
    10. 'W' → logprob: -14.628240585327148

Token 796: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' (adapté à ' w') → logprob: -0.0004374638374429196
    2. 'if' → logprob: -7.750437259674072
    3. ' w' → logprob: -12.75043773651123
    4. 'W' → logprob: -13.50043773651123
    5. '   ' → logprob: -15.37543773651123
    6. 'k' → logprob: -15.50043773651123
    7. 'l' → logprob: -15.50043773651123
    8. 't' → logprob: -15.62543773651123
    9. 'r' → logprob: -15.75043773651123
    10. 'break' → logprob: -15.75043773651123

Token 797: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759410262107849
    2. ' =' → logprob: -0.8259410262107849
    3. '=int' → logprob: -13.45094108581543
    4. ' ' → logprob: -17.07594108581543
    5. '<|end|>' → logprob: -17.07594108581543
    6. '＝' → logprob: -17.95094108581543
    7. '   ' → logprob: -18.32594108581543
    8. ',' → logprob: -18.70094108581543
    9. '  ' → logprob: -19.20094108581543
    10. ')' → logprob: -19.20094108581543

Token 798: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0055797407403588295
    2. 'float' → logprob: -5.255579948425293
    3. ' int' → logprob: -8.005579948425293
    4. ' float' → logprob: -11.380579948425293
    5. '   ' → logprob: -14.005579948425293
    6. ' ' → logprob: -16.505578994750977
    7. '  ' → logprob: -17.755578994750977
    8. '	int' → logprob: -18.380578994750977
    9. '    ' → logprob: -19.005578994750977
    10. '[int' → logprob: -19.005578994750977

Token 799: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0005541055579669774
    2. 'input' → logprob: -7.500554084777832
    3. ' input' → logprob: -14.250554084777832
    4. '[input' → logprob: -15.375554084777832
    5. '=input' → logprob: -15.875554084777832
    6. ',input' → logprob: -16.25055503845215
    7. '<input' → logprob: -17.62555503845215
    8. '(' → logprob: -18.50055503845215
    9. '	input' → logprob: -18.62555503845215
    10. 'import' → logprob: -19.50055503845215

Token 800: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -5.438573680294212e-06
    2. 'idx' → logprob: -12.125005722045898
    3. '(idx' → logprob: -18.2500057220459
    4. ' idx' → logprob: -18.2500057220459
    5. '	idx' → logprob: -19.1250057220459
    6. '   ' → logprob: -22.3750057220459
    7. '[input' → logprob: -22.7500057220459
    8. '
' → logprob: -22.7500057220459
    9. '_idx' → logprob: -23.3750057220459
    10. ' [' → logprob: -23.3750057220459

Token 801: ']);' (ID: 34389)
  Prédit: ');'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ');' → logprob: -0.0015192650025710464
    2. ')' → logprob: -6.501519203186035
    3. ' );' → logprob: -11.126519203186035
    4. ']);' → logprob: -13.876519203186035
    5. '];' → logprob: -14.251519203186035
    6. ')
' → logprob: -15.251519203186035
    7. ';' → logprob: -16.25152015686035
    8. '));' → logprob: -16.75152015686035
    9. '),' → logprob: -16.87652015686035
    10. ' )' → logprob: -17.50152015686035

Token 802: ' idx' (ID: 14016)
  Prédit: ' idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' idx' → logprob: -0.01816621422767639
    2. 'idx' → logprob: -4.0181660652160645
    3. '	idx' → logprob: -11.143166542053223
    4. '[idx' → logprob: -13.393166542053223
    5. '(idx' → logprob: -15.518166542053223
    6. '_idx' → logprob: -16.393165588378906
    7. '.idx' → logprob: -17.268165588378906
    8. 'Idx' → logprob: -19.143165588378906
    9. '   ' → logprob: -20.018165588378906
    10. '
' → logprob: -20.268165588378906

Token 803: '+=' (ID: 18287)
  Prédit: '+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -1.0280383548888494e-06
    2. ' +=' → logprob: -14.000000953674316
    3. ']+=' → logprob: -16.125001907348633
    4. '+' → logprob: -19.375001907348633
    5. '+=(' → logprob: -20.500001907348633
    6. '+='' → logprob: -21.250001907348633
    7. '=' → logprob: -21.500001907348633
    8. '+="' → logprob: -21.625001907348633
    9. '   ' → logprob: -22.375001907348633
    10. '-=' → logprob: -23.125001907348633

Token 804: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.875
    3. '   ' → logprob: -20.0
    4. '```' → logprob: -20.25
    5. '１' → logprob: -21.375
    6. '۱' → logprob: -23.25
    7. '১' → logprob: -23.6875
    8. '१' → logprob: -23.8125
    9. '0' → logprob: -23.875
    10. '
' → logprob: -24.1875

Token 805: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19141122698783875
    2. 'if' → logprob: -1.8164112567901611
    3. ' if' → logprob: -4.816411018371582
    4. '   ' → logprob: -5.691411018371582
    5. '<|end|>' → logprob: -9.566411018371582
    6. '	if' → logprob: -11.066411018371582
    7. 'import' → logprob: -11.441411018371582
    8. 'If' → logprob: -11.566411018371582
    9. '        
' → logprob: -11.816411018371582
    10. ' ' → logprob: -12.066411018371582

Token 806: '       ' (ID: 309)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.2990694046020508
    2. '       ' → logprob: -1.4240694046020508
    3. ' if' → logprob: -4.674069404602051
    4. '   ' → logprob: -4.799069404602051
    5. '<|end|>' → logprob: -9.42406940460205
    6. '```' → logprob: -10.04906940460205
    7. '	if' → logprob: -10.67406940460205
    8. '        
' → logprob: -11.29906940460205
    9. 'import' → logprob: -11.79906940460205
    10. 'If' → logprob: -12.04906940460205

Token 807: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -8.315936429426074e-05
    2. '       ' → logprob: -9.500082969665527
    3. ' if' → logprob: -11.875082969665527
    4. 'ball' → logprob: -15.125082969665527
    5. 'If' → logprob: -15.625082969665527
    6. '```' → logprob: -15.750082969665527
    7. '	if' → logprob: -16.000083923339844
    8. 's' → logprob: -16.250083923339844
    9. 'balls' → logprob: -16.375083923339844
    10. '   ' → logprob: -16.500083923339844

Token 808: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -3.650518920039758e-06
    2. ' n' → logprob: -13.000003814697266
    3. '(n' → logprob: -14.000003814697266
    4. 'w' → logprob: -14.625003814697266
    5. '	n' → logprob: -18.000003814697266
    6. ' ' → logprob: -18.625003814697266
    7. '(' → logprob: -19.000003814697266
    8. '[n' → logprob: -19.625003814697266
    9. 'not' → logprob: -21.000003814697266
    10. '$n' → logprob: -21.375003814697266

Token 809: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.3486402928829193
    2. ' ==' → logprob: -1.2236403226852417
    3. '=' → logprob: -8.723640441894531
    4. '0' → logprob: -11.598640441894531
    5. '==-' → logprob: -11.723640441894531
    6. ')==' → logprob: -12.598640441894531
    7. ']==' → logprob: -12.723640441894531
    8. '===' → logprob: -13.098640441894531
    9. '<=' → logprob: -13.473640441894531
    10. '()==' → logprob: -13.598640441894531

Token 810: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.961759259458631e-06
    2. ' ' → logprob: -12.250004768371582
    3. '-' → logprob: -15.875004768371582
    4. '
' → logprob: -19.2500057220459
    5. '```' → logprob: -19.6250057220459
    6. 'w' → logprob: -19.7500057220459
    7. '=' → logprob: -19.7500057220459
    8. '۰' → logprob: -20.1250057220459
    9. ' -' → logprob: -20.2500057220459
    10. '   ' → logprob: -20.3750057220459

Token 811: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.375000953674316
    3. '-' → logprob: -19.25
    4. '
' → logprob: -21.125
    5. '۰' → logprob: -21.25
    6. '=' → logprob: -22.625
    7. ' -' → logprob: -23.375
    8. '```' → logprob: -23.5
    9. 'and' → logprob: -23.875
    10. '٠' → logprob: -23.875

Token 812: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.20406579971313477
    2. 'and' → logprob: -1.7040657997131348
    3. ':' → logprob: -6.329065799713135
    4. '   ' → logprob: -7.704065799713135
    5. ':
' → logprob: -8.079065322875977
    6. ':return' → logprob: -10.329065322875977
    7. ' ' → logprob: -10.579065322875977
    8. '	and' → logprob: -10.829065322875977
    9. '  ' → logprob: -11.579065322875977
    10. '           ' → logprob: -12.329065322875977

Token 813: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.006715370807796717
    2. ' w' → logprob: -5.006715297698975
    3. '	w' → logprob: -18.506715774536133
    4. '   ' → logprob: -21.006715774536133
    5. '_w' → logprob: -23.631715774536133
    6. '  ' → logprob: -23.881715774536133
    7. ' ' → logprob: -24.256715774536133
    8. 'W' → logprob: -24.631715774536133
    9. '<w' → logprob: -25.006715774536133
    10. '&w' → logprob: -25.256715774536133

Token 814: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.029755808413028717
    2. ' ==' → logprob: -3.5297558307647705
    3. '=' → logprob: -12.779755592346191
    4. '===' → logprob: -14.029755592346191
    5. ']==' → logprob: -14.654755592346191
    6. ')==' → logprob: -14.904755592346191
    7. '0' → logprob: -14.904755592346191
    8. '()==' → logprob: -15.029755592346191
    9. '<|end|>' → logprob: -16.029756546020508
    10. '==-' → logprob: -16.904756546020508

Token 815: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.1008713702030946e-06
    2. ' ' → logprob: -13.125001907348633
    3. '۰' → logprob: -22.250001907348633
    4. '<|end|>' → logprob: -23.250001907348633
    5. '  ' → logprob: -24.125001907348633
    6. '   ' → logprob: -24.250001907348633
    7. '০' → logprob: -24.375001907348633
    8. '=' → logprob: -24.500001907348633
    9. '00' → logprob: -24.625001907348633
    10. '```' → logprob: -25.125001907348633

Token 816: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -13.750000953674316
    3. '۰' → logprob: -21.500001907348633
    4. '00' → logprob: -22.875001907348633
    5. '০' → logprob: -23.500001907348633
    6. '<|end|>' → logprob: -23.500001907348633
    7. '```' → logprob: -23.500001907348633
    8. '०' → logprob: -24.000001907348633
    9. '000' → logprob: -24.000001907348633
    10. '  ' → logprob: -24.000001907348633

Token 817: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.20147521793842316
    2. ':
' → logprob: -1.7014752626419067
    3. '   ' → logprob: -10.201475143432617
    4. '       ' → logprob: -11.451475143432617
    5. ':return' → logprob: -11.451475143432617
    6. ':
' → logprob: -13.451475143432617
    7. ' :' → logprob: -14.451475143432617
    8. ' :
' → logprob: -14.951475143432617
    9. '           ' → logprob: -15.076475143432617
    10. '):
' → logprob: -15.326475143432617

Token 818: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0008288058452308178
    2. '       ' → logprob: -7.125828742980957
    3. ':' → logprob: -11.875828742980957
    4. '		' → logprob: -12.375828742980957
    5. '	       ' → logprob: -12.500828742980957
    6. '   ' → logprob: -13.000828742980957
    7. '          ' → logprob: -13.000828742980957
    8. '               ' → logprob: -13.125828742980957
    9. ':
' → logprob: -14.000828742980957
    10. ' break' → logprob: -14.625828742980957

Token 819: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.08312279731035233
    2. ' break' → logprob: -2.583122730255127
    3. '           ' → logprob: -5.958122730255127
    4. 'return' → logprob: -6.958122730255127
    5. '       ' → logprob: -8.083123207092285
    6. '	break' → logprob: -8.208123207092285
    7. '               ' → logprob: -9.333123207092285
    8. ' return' → logprob: -11.458123207092285
    9. '   ' → logprob: -12.208123207092285
    10. '_break' → logprob: -12.958123207092285

Token 820: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02539813332259655
    2. '   ' → logprob: -4.775398254394531
    3. '        
' → logprob: -4.775398254394531
    4. '
' → logprob: -4.900398254394531
    5. '    
' → logprob: -7.650398254394531
    6. '<|end|>' → logprob: -8.900398254394531
    7. 'def' → logprob: -10.025398254394531
    8. '```' → logprob: -10.400398254394531
    9. '  
' → logprob: -10.650398254394531
    10. 'n' → logprob: -11.275398254394531

Token 821: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03275211900472641
    2. '   ' → logprob: -3.53275203704834
    3. 'max' → logprob: -6.53275203704834
    4. 'r' → logprob: -7.03275203704834
    5. '        
' → logprob: -8.40775203704834
    6. '
' → logprob: -8.90775203704834
    7. ' max' → logprob: -9.28275203704834
    8. '```' → logprob: -9.65775203704834
    9. ' r' → logprob: -11.03275203704834
    10. '    
' → logprob: -11.03275203704834

Token 822: ' needles' (ID: 94833)
  Prédit: 'need'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'need' → logprob: -0.537043035030365
    2. '   ' → logprob: -0.912043035030365
    3. '       ' → logprob: -4.53704309463501
    4. 'needle' → logprob: -7.16204309463501
    5. ' needles' → logprob: -7.41204309463501
    6. 'n' → logprob: -7.66204309463501
    7. 'needs' → logprob: -7.78704309463501
    8. '```' → logprob: -7.91204309463501
    9. 'Need' → logprob: -9.662042617797852
    10. '  ' → logprob: -9.912042617797852

Token 823: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2014857530593872
    2. '=' → logprob: -1.7014857530593872
    3. '=[]' → logprob: -9.826485633850098
    4. '   ' → logprob: -11.076485633850098
    5. ',' → logprob: -13.826485633850098
    6. ' ' → logprob: -14.451485633850098
    7. '=[]
' → logprob: -14.701485633850098
    8. '＝' → logprob: -15.576485633850098
    9. '	' → logprob: -15.701485633850098
    10. '    ' → logprob: -15.951485633850098

Token 824: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.07939917594194412
    2. '[]
' → logprob: -2.5793991088867188
    3. '[' → logprob: -7.829399108886719
    4. '[(' → logprob: -9.579399108886719
    5. '[int' → logprob: -10.954399108886719
    6. '[]

' → logprob: -11.954399108886719
    7. '[size' → logprob: -13.329399108886719
    8. '[str' → logprob: -13.454399108886719
    9. ' []' → logprob: -13.579399108886719
    10. '[array' → logprob: -13.829399108886719

Token 825: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02525470219552517
    2. 'for' → logprob: -3.900254726409912
    3. ' for' → logprob: -5.400254726409912
    4. '   ' → logprob: -9.650254249572754
    5. '<|end|>' → logprob: -9.775254249572754
    6. '	for' → logprob: -9.900254249572754
    7. '	   ' → logprob: -12.400254249572754
    8. '```' → logprob: -12.525254249572754
    9. '	' → logprob: -13.650254249572754
    10. '<|end|>' → logprob: -13.900254249572754

Token 826: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0006357124075293541
    2. '       ' → logprob: -8.000636100769043
    3. ' for' → logprob: -8.125636100769043
    4. '	for' → logprob: -12.500636100769043
    5. '   ' → logprob: -14.375636100769043
    6. '        
' → logprob: -17.250635147094727
    7. ' ' → logprob: -18.625635147094727
    8. 'while' → logprob: -18.750635147094727
    9. '           ' → logprob: -19.500635147094727
    10. '
' → logprob: -19.625635147094727

Token 827: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.006809633690863848
    2. '_i' → logprob: -5.006809711456299
    3. ' _' → logprob: -9.88180923461914
    4. 'i' → logprob: -10.88180923461914
    5. '_j' → logprob: -11.00680923461914
    6. '_in' → logprob: -12.50680923461914
    7. ' i' → logprob: -13.63180923461914
    8. '_range' → logprob: -14.38180923461914
    9. '_=' → logprob: -14.75680923461914
    10. '_k' → logprob: -15.25680923461914

Token 828: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.005147300660610199
    2. 'in' → logprob: -6.255147457122803
    3. 'range' → logprob: -6.505147457122803
    4. 'i' → logprob: -7.255147457122803
    5. '_' → logprob: -7.255147457122803
    6. ' range' → logprob: -8.130146980285645
    7. ' ' → logprob: -12.380146980285645
    8. ' i' → logprob: -12.880146980285645
    9. ' _' → logprob: -13.130146980285645
    10. '_range' → logprob: -14.630146980285645

Token 829: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0015023599844425917
    2. ' range' → logprob: -6.501502513885498
    3. '	range' → logprob: -17.001502990722656
    4. '_range' → logprob: -18.501502990722656
    5. '_' → logprob: -19.376502990722656
    6. '(range' → logprob: -20.001502990722656
    7. 'in' → logprob: -20.001502990722656
    8. ' in' → logprob: -20.376502990722656
    9. 'rang' → logprob: -20.501502990722656
    10. '0' → logprob: -20.626502990722656

Token 830: '(n' (ID: 2406)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3873108923435211
    2. '(n' → logprob: -1.1373108625411987
    3. ' n' → logprob: -7.762310981750488
    4. '	n' → logprob: -11.887310981750488
    5. 'range' → logprob: -12.762310981750488
    6. '_n' → logprob: -13.262310981750488
    7. ' (' → logprob: -14.262310981750488
    8. '(' → logprob: -14.387310981750488
    9. ' in' → logprob: -14.887310981750488
    10. '   ' → logprob: -14.887310981750488

Token 831: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.00997623335570097
    2. '):' → logprob: -4.759976387023926
    3. ':
' → logprob: -7.759976387023926
    4. '       ' → logprob: -8.259976387023926
    5. '           ' → logprob: -8.509976387023926
    6. '   ' → logprob: -8.884976387023926
    7. ':' → logprob: -9.009976387023926
    8. '):
' → logprob: -9.259976387023926
    9. '():
' → logprob: -10.134976387023926
    10. '<|end|>' → logprob: -10.634976387023926

Token 832: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.025482969358563423
    2. '<|end|>' → logprob: -4.650483131408691
    3. ' x' → logprob: -5.275483131408691
    4. '	       ' → logprob: -5.275483131408691
    5. 'x' → logprob: -5.650483131408691
    6. '		   ' → logprob: -8.150483131408691
    7. '```' → logprob: -8.400483131408691
    8. '<|end|>' → logprob: -8.650483131408691
    9. '    	   ' → logprob: -8.775483131408691
    10. '	   ' → logprob: -9.087983131408691

Token 833: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.0007139815716072917
    2. ' x' → logprob: -7.25071382522583
    3. '	x' → logprob: -12.875714302062988
    4. '           ' → logprob: -14.250714302062988
    5. 'xi' → logprob: -14.250714302062988
    6. '   ' → logprob: -15.875714302062988
    7. '               ' → logprob: -16.375713348388672
    8. '_x' → logprob: -16.750713348388672
    9. ' ' → logprob: -17.375713348388672
    10. '       ' → logprob: -18.375713348388672

Token 834: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.9709872007369995
    2. '=' → logprob: -1.2209872007369995
    3. ' =' → logprob: -1.2209872007369995
    4. 'i' → logprob: -3.845987319946289
    5. '_=' → logprob: -5.595987319946289
    6. '_' → logprob: -6.095987319946289
    7. ',' → logprob: -6.095987319946289
    8. '=int' → logprob: -7.220987319946289
    9. '   ' → logprob: -8.095987319946289
    10. 'n' → logprob: -8.970987319946289

Token 835: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6379818916320801
    2. ' =' → logprob: -0.7629818916320801
    3. '=int' → logprob: -5.26298189163208
    4. ',' → logprob: -8.887981414794922
    5. '   ' → logprob: -10.512981414794922
    6. '=float' → logprob: -11.512981414794922
    7. 'int' → logprob: -11.887981414794922
    8. ' ' → logprob: -13.762981414794922
    9. '=
' → logprob: -14.137981414794922
    10. ',int' → logprob: -14.512981414794922

Token 836: ' int' (ID: 677)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.10201233625411987
    2. 'int' → logprob: -2.3520123958587646
    3. ' float' → logprob: -6.3520121574401855
    4. ' int' → logprob: -9.727012634277344
    5. '   ' → logprob: -13.977012634277344
    6. '	float' → logprob: -15.477012634277344
    7. '    ' → logprob: -16.352012634277344
    8. '(float' → logprob: -17.977012634277344
    9. '=float' → logprob: -17.977012634277344
    10. '	int' → logprob: -18.227012634277344

Token 837: '(input' (ID: 10054)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.31329524517059326
    2. '(input' → logprob: -1.3132952451705933
    3. ' input' → logprob: -10.688295364379883
    4. '[input' → logprob: -12.813295364379883
    5. ',input' → logprob: -12.813295364379883
    6. '=input' → logprob: -12.938295364379883
    7. '<input' → logprob: -13.438295364379883
    8. '	input' → logprob: -14.063295364379883
    9. '   ' → logprob: -14.938295364379883
    10. 'import' → logprob: -16.313295364379883

Token 838: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -7.896309739408025e-07
    2. 'idx' → logprob: -14.125000953674316
    3. '(idx' → logprob: -17.125
    4. '   ' → logprob: -18.625
    5. ' idx' → logprob: -18.625
    6. ' [' → logprob: -18.625
    7. '[input' → logprob: -18.75
    8. '
' → logprob: -20.75
    9. '	idx' → logprob: -20.875
    10. '[' → logprob: -21.625

Token 839: ']);' (ID: 34389)
  Prédit: ');'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ');' → logprob: -0.19359508156776428
    2. ']);' → logprob: -1.818595051765442
    3. ')' → logprob: -4.443594932556152
    4. '])' → logprob: -7.318594932556152
    5. ')
' → logprob: -7.318594932556152
    6. '];' → logprob: -7.443594932556152
    7. '])
' → logprob: -9.943594932556152
    8. '});' → logprob: -11.693594932556152
    9. '");' → logprob: -11.943594932556152
    10. '[idx' → logprob: -12.068594932556152

Token 840: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.3873761296272278
    2. ' idx' → logprob: -1.137376070022583
    3. '	idx' → logprob: -7.637376308441162
    4. '[idx' → logprob: -11.637375831604004
    5. '   ' → logprob: -11.762375831604004
    6. '_idx' → logprob: -12.762375831604004
    7. '       ' → logprob: -13.512375831604004
    8. ' ' → logprob: -14.137375831604004
    9. '(idx' → logprob: -14.137375831604004
    10. '           ' → logprob: -15.137375831604004

Token 841: '+=' (ID: 18287)
  Prédit: '+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -5.676981345459353e-06
    2. ' +=' → logprob: -12.500005722045898
    3. '+' → logprob: -13.875005722045898
    4. ']+=' → logprob: -14.125005722045898
    5. 'idx' → logprob: -16.5000057220459
    6. '+='' → logprob: -17.2500057220459
    7. '++' → logprob: -17.6250057220459
    8. '+="' → logprob: -18.0000057220459
    9. '++;' → logprob: -18.0000057220459
    10. '```' → logprob: -18.2500057220459

Token 842: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.375
    3. '```' → logprob: -20.875
    4. '+' → logprob: -21.375
    5. '   ' → logprob: -22.125
    6. '0' → logprob: -22.125
    7. '１' → logprob: -22.375
    8. 'idx' → logprob: -22.625
    9. '2' → logprob: -23.125
    10. '-' → logprob: -23.375

Token 843: '
' (ID: 198)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.1978711634874344
    2. ' y' → logprob: -2.197871208190918
    3. '           ' → logprob: -2.697871208190918
    4. '   ' → logprob: -7.197871208190918
    5. ' ' → logprob: -8.697871208190918
    6. '       ' → logprob: -9.197871208190918
    7. '	y' → logprob: -9.322871208190918
    8. ',y' → logprob: -11.447871208190918
    9. '  ' → logprob: -12.572871208190918
    10. '          ' → logprob: -12.822871208190918

Token 844: '           ' (ID: 352)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.5391614437103271
    2. '           ' → logprob: -1.2891614437103271
    3. ' y' → logprob: -2.039161443710327
    4. '   ' → logprob: -5.039161682128906
    5. '	y' → logprob: -5.914161682128906
    6. ' ' → logprob: -7.039161682128906
    7. '       ' → logprob: -7.414161682128906
    8. '<|end|>' → logprob: -8.914161682128906
    9. '		' → logprob: -9.664161682128906
    10. ',y' → logprob: -10.164161682128906

Token 845: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' (adapté à ' y') → logprob: -2.15310683415737e-05
    2. ' y' → logprob: -10.750021934509277
    3. '           ' → logprob: -17.25002098083496
    4. '	y' → logprob: -17.87502098083496
    5. '   ' → logprob: -20.50002098083496
    6. ' ' → logprob: -22.12502098083496
    7. '       ' → logprob: -22.12502098083496
    8. '  ' → logprob: -22.37502098083496
    9. ',y' → logprob: -22.37502098083496
    10. '‘y' → logprob: -22.87502098083496

Token 846: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.08803942799568176
    2. '=' → logprob: -3.5880393981933594
    3. '[idx' → logprob: -3.7130393981933594
    4. ' =' → logprob: -4.088039398193359
    5. '[i' → logprob: -5.338039398193359
    6. '[int' → logprob: -5.463039398193359
    7. 'i' → logprob: -6.213039398193359
    8. '<|end|>' → logprob: -6.213039398193359
    9. '_' → logprob: -7.338039398193359
    10. '=int' → logprob: -7.588039398193359

Token 847: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1278606802225113
    2. ' =' → logprob: -2.1278607845306396
    3. '=int' → logprob: -7.0028605461120605
    4. '<|end|>' → logprob: -10.877861022949219
    5. 'int' → logprob: -13.127861022949219
    6. '=
' → logprob: -14.377861022949219
    7. '   ' → logprob: -14.752861022949219
    8. '[int' → logprob: -14.877861022949219
    9. ')' → logprob: -16.00286102294922
    10. ' ' → logprob: -16.12786102294922

Token 848: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -6.2729995988775045e-06
    2. ' int' → logprob: -12.000006675720215
    3. '=int' → logprob: -16.7500057220459
    4. '[int' → logprob: -18.3750057220459
    5. '(int' → logprob: -19.0000057220459
    6. '<int' → logprob: -19.3750057220459
    7. ':int' → logprob: -21.6250057220459
    8. '   ' → logprob: -21.8750057220459
    9. '	int' → logprob: -23.3750057220459
    10. ']int' → logprob: -23.5000057220459

Token 849: '(input' (ID: 10054)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0002465582510922104
    2. 'input' → logprob: -8.50024700164795
    3. '(int' → logprob: -11.00024700164795
    4. '(input' → logprob: -11.00024700164795
    5. ' int' → logprob: -11.75024700164795
    6. '[int' → logprob: -13.25024700164795
    7. '=int' → logprob: -16.875246047973633
    8. '<int' → logprob: -17.875246047973633
    9. '[input' → logprob: -18.125246047973633
    10. ' input' → logprob: -18.625246047973633

Token 850: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.0005537479883059859
    2. 'idx' → logprob: -7.500553607940674
    3. ' idx' → logprob: -14.250554084777832
    4. '	idx' → logprob: -16.000553131103516
    5. '(idx' → logprob: -17.250553131103516
    6. '```' → logprob: -17.875553131103516
    7. '_idx' → logprob: -19.375553131103516
    8. '
' → logprob: -19.750553131103516
    9. '[int' → logprob: -19.875553131103516
    10. '[
' → logprob: -20.000553131103516

Token 851: ']);' (ID: 34389)
  Prédit: ');'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ');' → logprob: -0.0025373713579028845
    2. '];' → logprob: -6.752537250518799
    3. ')' → logprob: -7.252537250518799
    4. ']);' → logprob: -7.502537250518799
    5. '[idx' → logprob: -10.252537727355957
    6. ' );' → logprob: -10.877537727355957
    7. '           ' → logprob: -11.752537727355957
    8. '+=' → logprob: -11.877537727355957
    9. '   ' → logprob: -12.002537727355957
    10. '       ' → logprob: -12.002537727355957

Token 852: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.0015071245143190026
    2. ' idx' → logprob: -6.50150728225708
    3. '	idx' → logprob: -12.626506805419922
    4. '[idx' → logprob: -13.876506805419922
    5. '_idx' → logprob: -15.501506805419922
    6. '(idx' → logprob: -17.001506805419922
    7. '+=' → logprob: -17.126506805419922
    8. '=' → logprob: -17.376506805419922
    9. '   ' → logprob: -17.376506805419922
    10. ' =' → logprob: -17.751506805419922

Token 853: '+=' (ID: 18287)
  Prédit: '+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -3.292907877039397e-06
    2. ' +=' → logprob: -13.12500286102295
    3. '+' → logprob: -14.00000286102295
    4. ']+=' → logprob: -14.75000286102295
    5. '```' → logprob: -18.125003814697266
    6. '=' → logprob: -18.375003814697266
    7. 'idx' → logprob: -18.875003814697266
    8. '+='' → logprob: -20.125003814697266
    9. '++;' → logprob: -20.625003814697266
    10. '+="' → logprob: -20.750003814697266

Token 854: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.375
    3. '```' → logprob: -17.875
    4. 'int' → logprob: -18.625
    5. '
' → logprob: -19.375
    6. '   ' → logprob: -20.0625
    7. '+' → logprob: -20.125
    8. '１' → logprob: -20.25
    9. '``' → logprob: -20.6875
    10. '0' → logprob: -21.0625

Token 855: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.16158266365528107
    2. 'h' → logprob: -1.9115827083587646
    3. ' h' → logprob: -6.6615824699401855
    4. '```' → logprob: -10.036582946777344
    5. 'z' → logprob: -11.411582946777344
    6. '	h' → logprob: -11.786582946777344
    7. '   ' → logprob: -12.286582946777344
    8. '		' → logprob: -12.661582946777344
    9. ' ' → logprob: -13.286582946777344
    10. '
' → logprob: -13.286582946777344

Token 856: '           ' (ID: 352)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.10563411563634872
    2. '           ' → logprob: -2.4806342124938965
    3. ' h' → logprob: -4.1056342124938965
    4. '```' → logprob: -10.230633735656738
    5. '	h' → logprob: -11.230633735656738
    6. '   ' → logprob: -11.605633735656738
    7. '       ' → logprob: -11.980633735656738
    8. ' ' → logprob: -11.980633735656738
    9. '[h' → logprob: -14.105633735656738
    10. 'z' → logprob: -14.230633735656738

Token 857: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' (adapté à ' h') → logprob: -0.004080062732100487
    2. ' h' → logprob: -5.504080295562744
    3. '           ' → logprob: -13.379079818725586
    4. '```' → logprob: -17.004079818725586
    5. '	h' → logprob: -18.129079818725586
    6. '
' → logprob: -18.754079818725586
    7. 'z' → logprob: -19.379079818725586
    8. '   ' → logprob: -19.754079818725586
    9. '       ' → logprob: -19.879079818725586
    10. ' ' → logprob: -20.129079818725586

Token 858: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.00033200893085449934
    2. 'i' → logprob: -8.50033187866211
    3. ' =' → logprob: -9.87533187866211
    4. '   ' → logprob: -10.50033187866211
    5. '=' → logprob: -11.00033187866211
    6. 's' → logprob: -11.75033187866211
    7. '_=' → logprob: -12.37533187866211
    8. 'int' → logprob: -12.62533187866211
    9. '```' → logprob: -13.00033187866211
    10. 'idx' → logprob: -13.00033187866211

Token 859: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06199805438518524
    2. ' =' → logprob: -2.811998128890991
    3. '=int' → logprob: -10.43699836730957
    4. '   ' → logprob: -13.93699836730957
    5. ' ' → logprob: -15.93699836730957
    6. 'int' → logprob: -18.18699836730957
    7. '=input' → logprob: -18.68699836730957
    8. '  ' → logprob: -18.93699836730957
    9. '           ' → logprob: -19.06199836730957
    10. '       ' → logprob: -19.18699836730957

Token 860: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -2.9875325708417222e-05
    2. ' int' → logprob: -10.500029563903809
    3. 'float' → logprob: -13.000029563903809
    4. '   ' → logprob: -19.125030517578125
    5. '(int' → logprob: -20.375030517578125
    6. '=int' → logprob: -21.250030517578125
    7. '<int' → logprob: -21.500030517578125
    8. '[int' → logprob: -21.625030517578125
    9. '	int' → logprob: -22.125030517578125
    10. ' float' → logprob: -22.250030517578125

Token 861: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.007897263392806053
    2. 'input' → logprob: -5.00789737701416
    3. 'int' → logprob: -6.75789737701416
    4. '(int' → logprob: -11.25789737701416
    5. '[input' → logprob: -12.50789737701416
    6. ' input' → logprob: -13.63289737701416
    7. '=input' → logprob: -14.00789737701416
    8. 'import' → logprob: -15.00789737701416
    9. '<input' → logprob: -15.00789737701416
    10. ',input' → logprob: -16.257896423339844

Token 862: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -6.704273118884885e-07
    2. 'idx' → logprob: -14.375000953674316
    3. '[int' → logprob: -17.625
    4. '(idx' → logprob: -18.0
    5. '[input' → logprob: -18.25
    6. ' idx' → logprob: -18.75
    7. '	idx' → logprob: -19.375
    8. '[index' → logprob: -19.75
    9. '```' → logprob: -20.375
    10. '       ' → logprob: -20.875

Token 863: ']);' (ID: 34389)
  Prédit: ');'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ');' → logprob: -0.0011662953766062856
    2. '];' → logprob: -7.001166343688965
    3. ']);' → logprob: -9.001166343688965
    4. ')' → logprob: -9.001166343688965
    5. ' );' → logprob: -13.501166343688965
    6. '   ' → logprob: -13.751166343688965
    7. '       ' → logprob: -13.876166343688965
    8. '           ' → logprob: -14.001166343688965
    9. '");' → logprob: -14.251166343688965
    10. ');}' → logprob: -14.751166343688965

Token 864: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.048614732921123505
    2. ' idx' → logprob: -3.048614740371704
    3. '	idx' → logprob: -11.173614501953125
    4. '[idx' → logprob: -11.548614501953125
    5. '(idx' → logprob: -12.923614501953125
    6. '_idx' → logprob: -14.923614501953125
    7. '```' → logprob: -15.048614501953125
    8. '   ' → logprob: -15.423614501953125
    9. '       ' → logprob: -16.423614501953125
    10. '=' → logprob: -16.673614501953125

Token 865: '+=' (ID: 18287)
  Prédit: '+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -3.7697225252486533e-06
    2. ' +=' → logprob: -13.000003814697266
    3. ']+=' → logprob: -13.875003814697266
    4. '+' → logprob: -14.875003814697266
    5. '```' → logprob: -17.000003814697266
    6. '+='' → logprob: -17.500003814697266
    7. '+="' → logprob: -18.000003814697266
    8. '=' → logprob: -18.375003814697266
    9. '+=(' → logprob: -19.375003814697266
    10. '-=' → logprob: -20.250003814697266

Token 866: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.875
    3. 'int' → logprob: -18.25
    4. '```' → logprob: -19.125
    5. '   ' → logprob: -19.875
    6. '
' → logprob: -20.5
    7. '１' → logprob: -20.75
    8. '``' → logprob: -21.5
    9. '0' → logprob: -21.625
    10. '+' → logprob: -21.875

Token 867: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0005486258305609226
    2. '       ' → logprob: -7.750548839569092
    3. '<|end|>' → logprob: -10.375548362731934
    4. '   ' → logprob: -10.500548362731934
    5. ' needles' → logprob: -10.625548362731934
    6. '
' → logprob: -11.625548362731934
    7. '```' → logprob: -12.375548362731934
    8. '          ' → logprob: -12.500548362731934
    9. '<|end|>' → logprob: -12.875548362731934
    10. '         ' → logprob: -13.125548362731934

Token 868: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0004408015520311892
    2. '       ' → logprob: -7.87544059753418
    3. ' needles' → logprob: -10.37544059753418
    4. '   ' → logprob: -11.12544059753418
    5. '         ' → logprob: -12.87544059753418
    6. '          ' → logprob: -12.87544059753418
    7. '<|end|>' → logprob: -13.37544059753418
    8. '	       ' → logprob: -13.62544059753418
    9. 'needle' → logprob: -13.75044059753418
    10. '               ' → logprob: -13.75044059753418

Token 869: ' needles' (ID: 94833)
  Prédit: 'need'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'need' → logprob: -0.0340970903635025
    2. 'needle' → logprob: -4.284097194671631
    3. ' needles' → logprob: -4.659097194671631
    4. '           ' → logprob: -4.659097194671631
    5. '       ' → logprob: -7.784097194671631
    6. 'needs' → logprob: -8.534096717834473
    7. '   ' → logprob: -9.534096717834473
    8. 'Need' → logprob: -10.034096717834473
    9. '_need' → logprob: -11.534096717834473
    10. '```' → logprob: -11.659096717834473

Token 870: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -2.2246291337069124e-05
    2. '.' → logprob: -11.000021934509277
    3. ' .' → logprob: -12.875021934509277
    4. ').' → logprob: -13.250021934509277
    5. '.app' → logprob: -14.500021934509277
    6. '.ap' → logprob: -14.875021934509277
    7. '.Append' → logprob: -16.250022888183594
    8. 'append' → logprob: -16.500022888183594
    9. '].' → logprob: -17.500022888183594
    10. '.extend' → logprob: -18.000022888183594

Token 871: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.2841239273548126
    2. '(x' → logprob: -1.7841238975524902
    3. '(' → logprob: -2.5341238975524902
    4. ' (' → logprob: -10.034124374389648
    5. '(
' → logprob: -12.534124374389648
    6. '   ' → logprob: -13.409124374389648
    7. '(input' → logprob: -14.284124374389648
    8. '```' → logprob: -14.909124374389648
    9. '(tuple' → logprob: -14.909124374389648
    10. ' ((' → logprob: -15.409124374389648

Token 872: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.7432603272027336e-06
    2. ' x' → logprob: -13.500001907348633
    3. '(x' → logprob: -15.375001907348633
    4. ')x' → logprob: -20.125001907348633
    5. ',x' → logprob: -21.625001907348633
    6. '	x' → logprob: -21.750001907348633
    7. '   ' → logprob: -22.375001907348633
    8. '{x' → logprob: -23.000001907348633
    9. '"x' → logprob: -23.125001907348633
    10. '
' → logprob: -23.250001907348633

Token 873: '_i' (ID: 10853)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.00175419170409441
    2. '_i' → logprob: -6.376754283905029
    3. '_x' → logprob: -10.376753807067871
    4. 'i' → logprob: -11.376753807067871
    5. ' x' → logprob: -12.126753807067871
    6. ',x' → logprob: -13.876753807067871
    7. '(x' → logprob: -14.126753807067871
    8. '_' → logprob: -14.626753807067871
    9. 's' → logprob: -15.251753807067871
    10. '	x' → logprob: -15.376753807067871

Token 874: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000375380739569664
    2. ',y' → logprob: -8.125375747680664
    3. ' ,' → logprob: -9.500375747680664
    4. ',
' → logprob: -12.625375747680664
    5. ',x' → logprob: -14.000375747680664
    6. '<|end|>' → logprob: -15.750375747680664
    7. ',user' → logprob: -16.875375747680664
    8. '
' → logprob: -18.000375747680664
    9. 'y' → logprob: -18.000375747680664
    10. ',p' → logprob: -18.125375747680664

Token 875: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0004307884373702109
    2. ' y' → logprob: -7.750430583953857
    3. '   ' → logprob: -17.125431060791016
    4. '	y' → logprob: -17.250431060791016
    5. '       ' → logprob: -18.000431060791016
    6. '           ' → logprob: -18.125431060791016
    7. '    ' → logprob: -18.750431060791016
    8. '          ' → logprob: -18.750431060791016
    9. ')y' → logprob: -19.125431060791016
    10. ' ' → logprob: -19.375431060791016

Token 876: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.00038086410495452583
    2. 'i' → logprob: -7.875380992889404
    3. ',' → logprob: -14.875380516052246
    4. 'I' → logprob: -16.000381469726562
    5. ')' → logprob: -16.375381469726562
    6. ' i' → logprob: -17.000381469726562
    7. ',i' → logprob: -17.375381469726562
    8. '<|end|>' → logprob: -17.625381469726562
    9. '```' → logprob: -17.750381469726562
    10. 'y' → logprob: -18.000381469726562

Token 877: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007642415002919734
    2. ',h' → logprob: -7.2507643699646
    3. ' ,' → logprob: -10.500763893127441
    4. ',y' → logprob: -11.125763893127441
    5. ',
' → logprob: -11.875763893127441
    6. ',x' → logprob: -13.250763893127441
    7. ',w' → logprob: -13.625763893127441
    8. '<|end|>' → logprob: -14.125763893127441
    9. ')' → logprob: -15.375763893127441
    10. ',user' → logprob: -15.625763893127441

Token 878: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -7.941850526549388e-06
    2. ' h' → logprob: -11.750007629394531
    3. '
' → logprob: -18.25000762939453
    4. '           ' → logprob: -18.87500762939453
    5. '                   ' → logprob: -19.12500762939453
    6. '               ' → logprob: -19.75000762939453
    7. '```' → logprob: -19.75000762939453
    8. '       ' → logprob: -20.12500762939453
    9. '                       ' → logprob: -20.25000762939453
    10. '   ' → logprob: -20.62500762939453

Token 879: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.0008074867073446512
    2. 'i' → logprob: -7.125807285308838
    3. '```' → logprob: -13.750807762145996
    4. ')' → logprob: -14.250807762145996
    5. '   ' → logprob: -14.500807762145996
    6. 'I' → logprob: -15.875807762145996
    7. '
' → logprob: -16.12580680847168
    8. ' i' → logprob: -16.75080680847168
    9. '``' → logprob: -16.75080680847168
    10. '       ' → logprob: -16.87580680847168

Token 880: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.00026646157493814826
    2. '))
' → logprob: -8.250266075134277
    3. ')' → logprob: -12.500266075134277
    4. ' ))' → logprob: -14.250266075134277
    5. '))

' → logprob: -15.125266075134277
    6. '   ' → logprob: -15.375266075134277
    7. ')))' → logprob: -16.250267028808594
    8. '       ' → logprob: -16.625267028808594
    9. '           ' → logprob: -16.750267028808594
    10. '));' → logprob: -16.875267028808594

Token 881: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3499920666217804
    2. '
' → logprob: -1.349992036819458
    3. '    
' → logprob: -4.474992275238037
    4. 'r' → logprob: -4.849992275238037
    5. '```' → logprob: -5.099992275238037
    6. 'min' → logprob: -5.224992275238037
    7. 'def' → logprob: -5.849992275238037
    8. 'max' → logprob: -6.599992275238037
    9. 'low' → logprob: -8.099991798400879
    10. ' min' → logprob: -8.849991798400879

Token 882: ' #' (ID: 1069)
  Prédit: 'low'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'low' → logprob: -0.1548723429441452
    2. 'left' → logprob: -2.279872417449951
    3. 'r' → logprob: -3.779872417449951
    4. 'l' → logprob: -4.904872417449951
    5. 'lo' → logprob: -5.154872417449951
    6. '#' (adapté à ' #') → logprob: -5.904872417449951
    7. '   ' → logprob: -7.029872417449951
    8. '```' → logprob: -7.404872417449951
    9. 'min' → logprob: -7.654872417449951
    10. ' low' → logprob: -8.529871940612793

Token 883: ' La' (ID: 3038)
  Prédit: 'low'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'low' → logprob: -0.24227510392665863
    2. 'left' → logprob: -1.6172751188278198
    3. '#' → logprob: -4.492275238037109
    4. 'lo' → logprob: -5.492275238037109
    5. 'l' → logprob: -6.867275238037109
    6. 'L' → logprob: -9.49227523803711
    7. 'min' → logprob: -9.61727523803711
    8. 'def' → logprob: -9.74227523803711
    9. 'lower' → logprob: -10.11727523803711
    10. 'lb' → logprob: -10.74227523803711

Token 884: ' borne' (ID: 111819)
  Prédit: 'low'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'low' → logprob: -0.23097123205661774
    2. 'left' → logprob: -1.9809712171554565
    3. '#' → logprob: -2.980971336364746
    4. 'lo' → logprob: -5.105971336364746
    5. ' low' → logprob: -5.730971336364746
    6. 'min' → logprob: -6.230971336364746
    7. 'r' → logprob: -6.230971336364746
    8. ' left' → logprob: -6.605971336364746
    9. 'max' → logprob: -6.730971336364746
    10. 'lower' → logprob: -7.605971336364746

Token 885: ' supérieure' (ID: 106336)
  Prédit: 'low'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'low' → logprob: -0.7389214634895325
    2. 'min' → logprob: -1.9889214038848877
    3. 'inf' → logprob: -2.1139214038848877
    4. '   ' → logprob: -2.1139214038848877
    5. '       ' → logprob: -2.8639214038848877
    6. 'lower' → logprob: -3.2389214038848877
    7. 'b' → logprob: -3.4889214038848877
    8. 'left' → logprob: -5.613921642303467
    9. 'lo' → logprob: -5.738921642303467
    10. ' low' → logprob: -5.988921642303467

Token 886: ' est' (ID: 893)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08947917073965073
    2. '=' → logprob: -2.5894792079925537
    3. ',' → logprob: -5.089478969573975
    4. '   ' → logprob: -5.964478969573975
    5. '       ' → logprob: -7.214478969573975
    6. 'b' → logprob: -8.214479446411133
    7. 'inf' → logprob: -8.214479446411133
    8. '=max' → logprob: -8.839479446411133
    9. 'max' → logprob: -9.339479446411133
    10. 'r' → logprob: -9.589479446411133

Token 887: ' au' (ID: 2791)
  Prédit: ' w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' w' → logprob: -0.5996400117874146
    2. 'w' → logprob: -0.8496400117874146
    3. '100' → logprob: -4.099639892578125
    4. ' =' → logprob: -5.974639892578125
    5. '=' → logprob: -6.224639892578125
    6. ' ' → logprob: -7.474639892578125
    7. '=w' → logprob: -7.474639892578125
    8. '   ' → logprob: -7.974639892578125
    9. '    ' → logprob: -8.224639892578125
    10. ' float' → logprob: -8.599639892578125

Token 888: ' maximum' (ID: 10562)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.6957625150680542
    2. 'w' → logprob: -1.6957625150680542
    3. 'max' → logprob: -1.8207625150680542
    4. ' maximum' → logprob: -3.6957626342773438
    5. ' moins' → logprob: -3.8207626342773438
    6. 'plus' → logprob: -3.8207626342773438
    7. '=' → logprob: -4.070762634277344
    8. 'maximum' → logprob: -4.070762634277344
    9. '   ' → logprob: -4.320762634277344
    10. ' max' → logprob: -4.445762634277344

Token 889: ' w' (ID: 286)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5872880816459656
    2. '=' → logprob: -1.2122881412506104
    3. '   ' → logprob: -2.4622881412506104
    4. '100' → logprob: -3.0872881412506104
    5. '       ' → logprob: -5.462287902832031
    6. 'w' → logprob: -5.712287902832031
    7. ' w' → logprob: -6.462287902832031
    8. ' possible' → logprob: -6.462287902832031
    9. ',' → logprob: -6.587287902832031
    10. ' max' → logprob: -7.712287902832031

Token 890: ' car' (ID: 1669)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.38131657242774963
    2. '       ' → logprob: -1.3813165426254272
    3. '   ' → logprob: -3.256316661834717
    4. '    
' → logprob: -5.131316661834717
    5. '        
' → logprob: -5.256316661834717
    6. 'max' → logprob: -5.381316661834717
    7. ',' → logprob: -6.131316661834717
    8. 'r' → logprob: -6.381316661834717
    9. ' =' → logprob: -6.381316661834717
    10. '+' → logprob: -6.381316661834717

Token 891: ' on' (ID: 402)
  Prédit: ' le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.7745732069015503
    2. ' la' → logprob: -1.6495732069015503
    3. 'le' → logprob: -1.8995732069015503
    4. 'r' → logprob: -2.52457332611084
    5. 'la' → logprob: -2.77457332611084
    6. ' on' → logprob: -3.89957332611084
    7. ' r' → logprob: -4.77457332611084
    8. 'def' → logprob: -5.27457332611084
    9. 'w' → logprob: -5.89957332611084
    10. 'ball' → logprob: -5.89957332611084

Token 892: ' ne' (ID: 453)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8318269848823547
    2. 'def' → logprob: -1.83182692527771
    3. '<=' → logprob: -2.45682692527771
    4. ' =' → logprob: -2.70682692527771
    5. ' <=' → logprob: -3.08182692527771
    6. ' peut' → logprob: -3.45682692527771
    7. ' cannot' → logprob: -3.58182692527771
    8. '   ' → logprob: -3.83182692527771
    9. 'w' → logprob: -4.081827163696289
    10. ' can' → logprob: -4.331827163696289

Token 893: ' peut' (ID: 9216)
  Prédit: ' peux'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' peux' → logprob: -0.4712212383747101
    2. 'pe' → logprob: -1.5962212085723877
    3. ' peut' → logprob: -2.4712212085723877
    4. 'can' → logprob: -3.7212212085723877
    5. ' can' → logprob: -4.096221446990967
    6. '```' → logprob: -4.596221446990967
    7. 'met' → logprob: -4.971221446990967
    8. 's' → logprob: -5.346221446990967
    9. 'place' → logprob: -5.471221446990967
    10. 'veux' → logprob: -5.971221446990967

Token 894: ' pas' (ID: 2173)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.15335407853126526
    2. ' pas' → logprob: -2.0283541679382324
    3. 'placer' → logprob: -4.903354167938232
    4. ' dépasser' → logprob: -7.028354167938232
    5. ' jamais' → logprob: -7.403354167938232
    6. 'r' → logprob: -7.903354167938232
    7. '   ' → logprob: -8.528353691101074
    8. 'dé' → logprob: -8.528353691101074
    9. 'plus' → logprob: -8.653353691101074
    10. ' placer' → logprob: -8.778353691101074

Token 895: ' dépasser' (ID: 187375)
  Prédit: 'placer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'placer' → logprob: -0.37545672059059143
    2. ' dépasser' → logprob: -2.3754568099975586
    3. ' placer' → logprob: -2.6254568099975586
    4. 'dé' → logprob: -2.8754568099975586
    5. 'mettre' → logprob: -2.8754568099975586
    6. 'avoir' → logprob: -4.250456809997559
    7. ' avoir' → logprob: -5.125456809997559
    8. '   ' → logprob: -5.750456809997559
    9. ' mettre' → logprob: -6.375456809997559
    10. 'd' → logprob: -6.500456809997559

Token 896: '
' (ID: 198)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.537827730178833
    2. ' w' → logprob: -1.537827730178833
    3. 'w' → logprob: -1.787827730178833
    4. 'la' → logprob: -4.162827491760254
    5. '   ' → logprob: -5.162827491760254
    6. ' l' → logprob: -5.787827491760254
    7. ' r' → logprob: -6.412827491760254
    8. 'r' → logprob: -6.537827491760254
    9. 'l' → logprob: -6.537827491760254
    10. ' celle' → logprob: -6.662827491760254

Token 897: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5226677656173706
    2. ' w' → logprob: -1.2726677656173706
    3. 'w' → logprob: -2.64766788482666
    4. '   ' → logprob: -4.52266788482666
    5. ' de' → logprob: -4.52266788482666
    6. 'r' → logprob: -4.52266788482666
    7. ' r' → logprob: -5.27266788482666
    8. ' dans' → logprob: -5.77266788482666
    9. ',' → logprob: -6.27266788482666
    10. ' d' → logprob: -6.39766788482666

Token 898: ' #' (ID: 1069)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.10805149376392365
    2. 'r' → logprob: -3.2330515384674072
    3. '       ' → logprob: -3.4830515384674072
    4. 'low' → logprob: -4.608051300048828
    5. 'left' → logprob: -4.733051300048828
    6. 'upper' → logprob: -4.858051300048828
    7. 'lo' → logprob: -6.483051300048828
    8. ' max' → logprob: -6.483051300048828
    9. '   ' → logprob: -7.483051300048828
    10. 'right' → logprob: -7.608051300048828

Token 899: ' la' (ID: 557)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.6038540005683899
    2. 'max' → logprob: -1.4788539409637451
    3. 'low' → logprob: -2.103853940963745
    4. 'left' → logprob: -2.478853940963745
    5. 'lo' → logprob: -5.353854179382324
    6. ' left' → logprob: -5.478854179382324
    7. 'radius' → logprob: -5.478854179382324
    8. ' max' → logprob: -6.353854179382324
    9. 'high' → logprob: -6.728854179382324
    10. ' low' → logprob: -6.728854179382324

Token 900: ' hauteur' (ID: 72987)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.010676376521587372
    2. ' w' → logprob: -4.885676383972168
    3. 'wall' → logprob: -6.885676383972168
    4. '100' → logprob: -7.510676383972168
    5. ' hauteur' → logprob: -7.885676383972168
    6. ' wall' → logprob: -8.385676383972168
    7. 'max' → logprob: -8.510676383972168
    8. 'ha' → logprob: -8.885676383972168
    9. 'sol' → logprob: -9.760676383972168
    10. 'surface' → logprob: -9.885676383972168

Token 901: ' des' (ID: 731)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9363280534744263
    2. '       ' → logprob: -1.5613280534744263
    3. 'r' → logprob: -2.1863279342651367
    4. ' de' → logprob: -2.4363279342651367
    5. 'w' → logprob: -3.0613279342651367
    6. ' =' → logprob: -3.1863279342651367
    7. ' w' → logprob: -3.1863279342651367
    8. ' du' → logprob: -3.6863279342651367
    9. ' r' → logprob: -4.186327934265137
    10. ' max' → logprob: -4.811327934265137

Token 902: ' murs' (ID: 103025)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.3642664849758148
    2. ' murs' → logprob: -1.2392665147781372
    3. 'w' → logprob: -4.864266395568848
    4. 'mur' → logprob: -5.239266395568848
    5. 'walls' → logprob: -6.739266395568848
    6. 'ball' → logprob: -7.239266395568848
    7. ' walls' → logprob: -8.114266395568848
    8. ' m' → logprob: -8.239266395568848
    9. 'r' → logprob: -9.864266395568848
    10. 'par' → logprob: -10.489266395568848

Token 903: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.023133547976613045
    2. 'max' → logprob: -5.273133754730225
    3. ',' → logprob: -5.523133754730225
    4. '   ' → logprob: -5.773133754730225
    5. ' upper' → logprob: -5.898133754730225
    6. 'upper' → logprob: -6.148133754730225
    7. '
' → logprob: -6.148133754730225
    8. '        
' → logprob: -6.273133754730225
    9. ' max' → logprob: -7.523133754730225
    10. '    
' → logprob: -7.773133754730225

Token 904: 'sin' (ID: 23516)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.22941192984580994
    2. ')' → logprob: -1.8544119596481323
    3. ' r' → logprob: -3.2294118404388428
    4. ')
' → logprob: -5.479412078857422
    5. ').' → logprob: -7.229412078857422
    6. ' )' → logprob: -7.229412078857422
    7. '       ' → logprob: -7.479412078857422
    8. '   ' → logprob: -7.604412078857422
    9. '),' → logprob: -7.854412078857422
    10. 'max' → logprob: -7.854412078857422

Token 905: 'on' (ID: 263)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.07746190577745438
    2. 't' → logprob: -3.5774619579315186
    3. '(r' → logprob: -4.5774617195129395
    4. 'ce' → logprob: -4.7024617195129395
    5. 'gle' → logprob: -4.8274617195129395
    6. 'c' → logprob: -5.7024617195129395
    7. ' r' → logprob: -5.7024617195129395
    8. '=' → logprob: -5.8274617195129395
    9. '   ' → logprob: -6.3274617195129395
    10. ')' → logprob: -6.4524617195129395

Token 906: ' le' (ID: 505)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.5600669384002686
    2. ' return' → logprob: -1.5600669384002686
    3. 'return' → logprob: -2.9350669384002686
    4. ' la' → logprob: -3.0600669384002686
    5. ' on' → logprob: -3.4350669384002686
    6. ' le' → logprob: -3.5600669384002686
    7. ' r' → logprob: -3.9350669384002686
    8. ' impossible' → logprob: -4.935067176818848
    9. 'le' → logprob: -5.310067176818848
    10. ')' → logprob: -5.560067176818848

Token 907: ' ballon' (ID: 135405)
  Prédit: ' ballon'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ballon' → logprob: -0.7883663177490234
    2. 'r' → logprob: -1.5383663177490234
    3. 'ball' → logprob: -2.0383663177490234
    4. 'ray' → logprob: -2.1633663177490234
    5. ' rayon' → logprob: -3.0383663177490234
    6. ' balloon' → logprob: -3.9133663177490234
    7. 'radius' → logprob: -4.663366317749023
    8. ' r' → logprob: -6.163366317749023
    9. ' radius' → logprob: -6.413366317749023
    10. ' ray' → logprob: -7.288366317749023

Token 908: ' sort' (ID: 4506)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.5077364444732666
    2. ')
' → logprob: -1.5077364444732666
    3. ' est' → logprob: -2.3827364444732666
    4. ' ne' → logprob: -2.5077364444732666
    5. 'r' → logprob: -2.7577364444732666
    6. ' sera' → logprob: -3.3827364444732666
    7. ' doit' → logprob: -3.7577364444732666
    8. ' continue' → logprob: -3.7577364444732666
    9. ' peut' → logprob: -3.8827364444732666
    10. ').' → logprob: -3.8827364444732666

Token 909: ')
' (ID: 446)
  Prédit: 'ira'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ira' → logprob: -0.6678847670555115
    2. ' du' → logprob: -0.7928847670555115
    3. ' de' → logprob: -4.292884826660156
    4. 'ir' → logprob: -4.542884826660156
    5. 'du' → logprob: -5.667884826660156
    6. 'ant' → logprob: -6.292884826660156
    7. 'ra' → logprob: -6.417884826660156
    8. ')' → logprob: -6.792884826660156
    9. 'it' → logprob: -7.042884826660156
    10. 'ent' → logprob: -7.917884826660156

Token 910: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3720225989818573
    2. '
' → logprob: -1.2470226287841797
    3. '    
' → logprob: -4.12202262878418
    4. 'r' → logprob: -6.24702262878418
    5. ' r' → logprob: -6.74702262878418
    6. '        
' → logprob: -6.99702262878418
    7. '```' → logprob: -6.99702262878418
    8. '       ' → logprob: -7.24702262878418
    9. 'max' → logprob: -7.49702262878418
    10. ' max' → logprob: -8.12202262878418

Token 911: ' #' (ID: 1069)
  Prédit: 'low'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'low' → logprob: -0.44642290472984314
    2. 'left' → logprob: -1.5714229345321655
    3. 'max' → logprob: -2.696422815322876
    4. '   ' → logprob: -3.696422815322876
    5. 'lo' → logprob: -4.196423053741455
    6. 'r' → logprob: -4.446423053741455
    7. '
' → logprob: -5.071423053741455
    8. ' low' → logprob: -5.071423053741455
    9. 'upper' → logprob: -5.196423053741455
    10. ' left' → logprob: -5.196423053741455

Token 912: ' La' (ID: 3038)
  Prédit: 'low'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'low' → logprob: -0.3798580765724182
    2. 'max' → logprob: -2.0048580169677734
    3. 'left' → logprob: -3.0048580169677734
    4. 'lo' → logprob: -3.0048580169677734
    5. ' low' → logprob: -3.2548580169677734
    6. 'r' → logprob: -4.629858016967773
    7. '   ' → logprob: -4.754858016967773
    8. ' left' → logprob: -5.129858016967773
    9. '       ' → logprob: -5.504858016967773
    10. 'l' → logprob: -5.754858016967773

Token 913: ' borne' (ID: 111819)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.949873149394989
    2. 'low' → logprob: -0.949873149394989
    3. ' low' → logprob: -2.699873208999634
    4. 'lo' → logprob: -3.324873208999634
    5. 'def' → logprob: -3.449873208999634
    6. 'left' → logprob: -3.824873208999634
    7. '
' → logprob: -4.574872970581055
    8. '#' → logprob: -4.699872970581055
    9. ' lo' → logprob: -4.699872970581055
    10. 'max' → logprob: -4.824872970581055

Token 914: ' inf' (ID: 5603)
  Prédit: '_sup'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_sup' → logprob: -0.6367583870887756
    2. '_inf' → logprob: -1.2617583274841309
    3. ' supérieure' → logprob: -2.636758327484131
    4. 'sup' → logprob: -2.886758327484131
    5. ' =' → logprob: -4.261758327484131
    6. '_max' → logprob: -4.636758327484131
    7. 'inf' → logprob: -4.761758327484131
    8. '_min' → logprob: -5.011758327484131
    9. '_lower' → logprob: -5.511758327484131
    10. '_upper' → logprob: -5.511758327484131

Token 915: 'érieure' (ID: 45836)
  Prédit: 'érieure'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'érieure' → logprob: -0.8954290151596069
    2. ' =' → logprob: -1.395429015159607
    3. 'er' → logprob: -1.895429015159607
    4. '_inf' → logprob: -2.2704291343688965
    5. 'inf' → logprob: -3.1454291343688965
    6. '=' → logprob: -3.6454291343688965
    7. ',' → logprob: -5.0204291343688965
    8. '   ' → logprob: -5.3954291343688965
    9. 'érieur' → logprob: -6.2704291343688965
    10. ' inf' → logprob: -6.6454291343688965

Token 916: ' est' (ID: 893)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.006735026836395264
    2. '=' → logprob: -5.131734848022461
    3. ',' → logprob: -7.131734848022461
    4. 'r' → logprob: -13.381734848022461
    5. '   ' → logprob: -13.631734848022461
    6. ' ' → logprob: -13.881734848022461
    7. '=r' → logprob: -14.131734848022461
    8. ' ,' → logprob: -14.381734848022461
    9. 's' → logprob: -14.881734848022461
    10. ',r' → logprob: -15.631734848022461

Token 917: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1131584495306015
    2. ' ' → logprob: -2.2381584644317627
    3. '   ' → logprob: -9.113158226013184
    4. '=' → logprob: -9.238158226013184
    5. ' =' → logprob: -9.613158226013184
    6. 'r' → logprob: -10.738158226013184
    7. '1' → logprob: -10.863158226013184
    8. ' r' → logprob: -11.238158226013184
    9. '<|end|>' → logprob: -13.238158226013184
    10. ':' → logprob: -13.488158226013184

Token 918: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001438266917830333
    2. ' ' → logprob: -8.875144004821777
    3. '   ' → logprob: -13.000144004821777
    4. '=' → logprob: -13.875144004821777
    5. '1' → logprob: -14.750144004821777
    6. '```' → logprob: -15.500144004821777
    7. ' =' → logprob: -16.75014305114746
    8. '
' → logprob: -17.62514305114746
    9. '  ' → logprob: -17.87514305114746
    10. ':' → logprob: -18.00014305114746

Token 919: '.
' (ID: 558)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5582262873649597
    2. '   ' → logprob: -1.6832263469696045
    3. '    
' → logprob: -2.3082263469696045
    4. ' =' → logprob: -3.4332263469696045
    5. '.' → logprob: -3.5582263469696045
    6. 'r' → logprob: -3.6832263469696045
    7. ',' → logprob: -4.558226108551025
    8. '=' → logprob: -4.683226108551025
    9. '  
' → logprob: -4.808226108551025
    10. ' 
' → logprob: -5.433226108551025

Token 920: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.22378289699554443
    2. 'low' → logprob: -2.348783016204834
    3. ' low' → logprob: -3.723783016204834
    4. 'lower' → logprob: -3.848783016204834
    5. '    
' → logprob: -4.098783016204834
    6. 'r' → logprob: -4.473783016204834
    7. 'lo' → logprob: -4.598783016204834
    8. '   ' → logprob: -4.848783016204834
    9. 'l' → logprob: -5.723783016204834
    10. ' lower' → logprob: -5.723783016204834

Token 921: ' low' (ID: 4465)
  Prédit: 'low'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'low' (adapté à ' low') → logprob: -0.1042155995965004
    2. 'lo' → logprob: -2.979215621948242
    3. '
' → logprob: -3.479215621948242
    4. 'left' → logprob: -4.729215621948242
    5. 'r' → logprob: -5.729215621948242
    6. ' low' → logprob: -5.854215621948242
    7. 'l' → logprob: -6.604215621948242
    8. 'lower' → logprob: -8.229215621948242
    9. '        
' → logprob: -8.854215621948242
    10. '       ' → logprob: -9.229215621948242

Token 922: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0327298529446125
    2. ',' → logprob: -3.6577298641204834
    3. '=' → logprob: -5.282729625701904
    4. ' ,' → logprob: -6.657729625701904
    5. ' ' → logprob: -10.407730102539062
    6. '<|end|>' → logprob: -11.657730102539062
    7. 'space' → logprob: -13.032730102539062
    8. '  ' → logprob: -14.032730102539062
    9. '.' → logprob: -14.407730102539062
    10. '_space' → logprob: -14.532730102539062

Token 923: ' high' (ID: 1932)
  Prédit: ' high'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' high' → logprob: -0.6931517124176025
    2. 'high' → logprob: -0.6931517124176025
    3. '=' → logprob: -12.818151473999023
    4. 'up' → logprob: -14.443151473999023
    5. ' =' → logprob: -14.568151473999023
    6. '_high' → logprob: -15.443151473999023
    7. '.high' → logprob: -15.818151473999023
    8. 'hi' → logprob: -15.943151473999023
    9. 'High' → logprob: -16.318151473999023
    10. '(high' → logprob: -16.443151473999023

Token 924: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16023631393909454
    2. '=' → logprob: -1.9102363586425781
    3. ',' → logprob: -11.785236358642578
    4. ' ' → logprob: -12.535236358642578
    5. '  ' → logprob: -15.660236358642578
    6. '=float' → logprob: -15.910236358642578
    7. '=int' → logprob: -16.160236358642578
    8. '    ' → logprob: -16.160236358642578
    9. '   ' → logprob: -16.410236358642578
    10. ' ,' → logprob: -16.660236358642578

Token 925: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.694766489090398e-05
    2. ' ' → logprob: -9.625066757202148
    3. '=' → logprob: -14.875066757202148
    4. '1' → logprob: -15.500066757202148
    5. 'w' → logprob: -16.62506675720215
    6. '```' → logprob: -17.00006675720215
    7. '   ' → logprob: -17.25006675720215
    8. ' =' → logprob: -17.81256675720215
    9. '
' → logprob: -17.81256675720215
    10. ',' → logprob: -18.06256675720215

Token 926: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.5776860184123507e-06
    2. ' ' → logprob: -13.12500286102295
    3. '1' → logprob: -14.75000286102295
    4. '=' → logprob: -17.250001907348633
    5. '   ' → logprob: -17.500001907348633
    6. '```' → logprob: -17.687501907348633
    7. '۰' → logprob: -18.750001907348633
    8. '.' → logprob: -18.750001907348633
    9. 'float' → logprob: -18.812501907348633
    10. 'import' → logprob: -19.250001907348633

Token 927: '.' (ID: 13)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006739289034157991
    2. ' ,' → logprob: -5.256739139556885
    3. ',w' → logprob: -6.506739139556885
    4. ',
' → logprob: -12.006739616394043
    5. '.' → logprob: -13.006739616394043
    6. 'w' → logprob: -14.006739616394043
    7. '   ' → logprob: -14.131739616394043
    8. '=' → logprob: -14.881739616394043
    9. '.,' → logprob: -15.881739616394043
    10. ' =' → logprob: -15.881739616394043

Token 928: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.02312527783215046
    2. 'w' → logprob: -5.023125171661377
    3. '5' → logprob: -5.148125171661377
    4. '1' → logprob: -5.273125171661377
    5. 'float' → logprob: -6.648125171661377
    6. '
' → logprob: -7.273125171661377
    7. 'import' → logprob: -7.648125171661377
    8. '99' → logprob: -7.898125171661377
    9. '+' → logprob: -8.023125648498535
    10. '```' → logprob: -8.273125648498535

Token 929: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.022142350673675537
    2. ' ,' → logprob: -3.8971424102783203
    3. ',w' → logprob: -6.64714241027832
    4. ',
' → logprob: -8.14714241027832
    5. '
' → logprob: -12.27214241027832
    6. 'w' → logprob: -12.89714241027832
    7. ' ,
' → logprob: -13.14714241027832
    8. '   ' → logprob: -14.14714241027832
    9. ',float' → logprob: -14.39714241027832
    10. ' 
' → logprob: -15.64714241027832

Token 930: ' float' (ID: 4428)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.008156602270901203
    2. 'float' → logprob: -4.883156776428223
    3. ' w' → logprob: -7.883156776428223
    4. '100' → logprob: -8.883156776428223
    5. ' float' → logprob: -10.383156776428223
    6. 'max' → logprob: -14.258156776428223
    7. '=float' → logprob: -14.258156776428223
    8. '=w' → logprob: -14.758156776428223
    9. '   ' → logprob: -14.883156776428223
    10. '	w' → logprob: -15.008156776428223

Token 931: '(w' (ID: 7420)
  Prédit: '(w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(w' → logprob: -0.0011709370883181691
    2. 'w' → logprob: -6.751171112060547
    3. '(' → logprob: -14.126171112060547
    4. '	w' → logprob: -17.376171112060547
    5. ' (' → logprob: -17.876171112060547
    6. 's' → logprob: -18.751171112060547
    7. ' w' → logprob: -19.001171112060547
    8. '('' → logprob: -19.126171112060547
    9. '_w' → logprob: -19.251171112060547
    10. '(
' → logprob: -19.626171112060547

Token 932: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0009240844519808888
    2. ')
' → logprob: -7.000924110412598
    3. ' )' → logprob: -11.375924110412598
    4. '<|end|>' → logprob: -14.875924110412598
    5. ')

' → logprob: -15.375924110412598
    6. '+' → logprob: -16.00092315673828
    7. ')
' → logprob: -16.25092315673828
    8. ' )
' → logprob: -16.75092315673828
    9. '),' → logprob: -17.25092315673828
    10. ')#' → logprob: -17.50092315673828

Token 933: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6033390760421753
    2. '
' → logprob: -1.1033390760421753
    3. '    
' → logprob: -3.478339195251465
    4. ' 
' → logprob: -3.978339195251465
    5. '<|end|>' → logprob: -3.978339195251465
    6. '  
' → logprob: -4.103339195251465
    7. '```' → logprob: -4.103339195251465
    8. ' while' → logprob: -4.978339195251465
    9. 'while' → logprob: -5.853339195251465
    10. ',' → logprob: -6.478339195251465

Token 934: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1309548318386078
    2. '
' → logprob: -3.6309547424316406
    3. ' while' → logprob: -3.8809547424316406
    4. 'while' → logprob: -3.8809547424316406
    5. '    
' → logprob: -4.005954742431641
    6. ' for' → logprob: -4.130954742431641
    7. '       ' → logprob: -4.880954742431641
    8. 'for' (adapté à ' for') → logprob: -5.130954742431641
    9. ' 
' → logprob: -5.630954742431641
    10. '        
' → logprob: -6.755954742431641

Token 935: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.06197631359100342
    2. '_' → logprob: -2.811976432800293
    3. ' i' → logprob: -12.061976432800293
    4. '_i' → logprob: -13.311976432800293
    5. ' ' → logprob: -14.311976432800293
    6. '_iter' → logprob: -15.436976432800293
    7. '_iteration' → logprob: -16.186975479125977
    8. ' step' → logprob: -16.561975479125977
    9. '_step' → logprob: -16.936975479125977
    10. '__' → logprob: -16.936975479125977

Token 936: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.08190151304006577
    2. ' ' → logprob: -2.9569015502929688
    3. ' range' → logprob: -4.456901550292969
    4. ' _' → logprob: -4.581901550292969
    5. 'range' → logprob: -6.206901550292969
    6. '  ' → logprob: -6.956901550292969
    7. '_' → logprob: -7.331901550292969
    8. 'in' → logprob: -8.331901550292969
    9. '100' → logprob: -8.456901550292969
    10. ' i' → logprob: -8.456901550292969

Token 937: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0011714138090610504
    2. ' range' → logprob: -6.751171588897705
    3. '_range' → logprob: -14.376171112060547
    4. '_' → logprob: -14.751171112060547
    5. '(range' → logprob: -16.126171112060547
    6. ' ' → logprob: -16.251171112060547
    7. '   ' → logprob: -17.376171112060547
    8. '  ' → logprob: -18.001171112060547
    9. '	range' → logprob: -18.251171112060547
    10. '[' → logprob: -18.376171112060547

Token 938: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0016985106049105525
    2. ' ' → logprob: -6.6266984939575195
    3. '50' → logprob: -8.62669849395752
    4. '60' → logprob: -9.25169849395752
    5. '100' → logprob: -10.12669849395752
    6. '40' → logprob: -10.62669849395752
    7. '
' → logprob: -12.00169849395752
    8. '30' → logprob: -12.00169849395752
    9. '20' → logprob: -12.25169849395752
    10. '   ' → logprob: -13.12669849395752

Token 939: '40' (ID: 1723)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.5015770792961121
    2. '50' → logprob: -1.2515771389007568
    3. '60' → logprob: -2.251577138900757
    4. '40' → logprob: -6.376576900482178
    5. '70' → logprob: -7.626576900482178
    6. '80' → logprob: -8.251577377319336
    7. '64' → logprob: -8.376577377319336
    8. '30' → logprob: -8.751577377319336
    9. '200' → logprob: -9.251577377319336
    10. ' ' → logprob: -9.376577377319336

Token 940: '):' (ID: 3127)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5291844010353088
    2. '):
' → logprob: -1.529184341430664
    3. '):' → logprob: -2.529184341430664
    4. ':
' → logprob: -2.654184341430664
    5. '   ' → logprob: -3.779184341430664
    6. '       ' → logprob: -4.904184341430664
    7. ' :' → logprob: -5.529184341430664
    8. ')' → logprob: -6.029184341430664
    9. '<|end|>' → logprob: -6.279184341430664
    10. '           ' → logprob: -6.529184341430664

Token 941: ' ' (ID: 220)
  Prédit: ' mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' mid' → logprob: -0.32504984736442566
    2. '           ' → logprob: -1.575049877166748
    3. 'mid' → logprob: -3.200049877166748
    4. '   ' → logprob: -4.450049877166748
    5. '       ' → logprob: -5.575049877166748
    6. '<|end|>' → logprob: -5.575049877166748
    7. ' midpoint' → logprob: -5.825049877166748
    8. ' mids' → logprob: -6.075049877166748
    9. '_mid' → logprob: -6.450049877166748
    10. '	       ' → logprob: -6.700049877166748

Token 942: ' #' (ID: 1069)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mid' → logprob: -0.2037377655506134
    2. ' mid' → logprob: -1.703737735748291
    3. '           ' → logprob: -6.328737735748291
    4. 'm' → logprob: -8.32873821258545
    5. '   ' → logprob: -8.32873821258545
    6. '       ' → logprob: -10.82873821258545
    7. 'middle' → logprob: -11.45373821258545
    8. '_mid' → logprob: -11.82873821258545
    9. ' midpoint' → logprob: -12.20373821258545
    10. 'midd' → logprob: -12.95373821258545

Token 943: ' b' (ID: 287)
  Prédit: ' mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' mid' → logprob: -0.37640997767448425
    2. 'mid' → logprob: -1.2514100074768066
    3. 'm' → logprob: -5.126410007476807
    4. ' middle' → logprob: -5.251410007476807
    5. ' midpoint' → logprob: -5.251410007476807
    6. '           ' → logprob: -5.751410007476807
    7. ' midd' → logprob: -6.126410007476807
    8. '_mid' → logprob: -6.251410007476807
    9. ' mids' → logprob: -6.501410007476807
    10. 'middle' → logprob: -7.126410007476807

Token 944: 'inaire' (ID: 41465)
  Prédit: 'inary'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inary' → logprob: -0.15518596768379211
    2. 'in' → logprob: -2.2801859378814697
    3. 'inaire' → logprob: -4.030186176300049
    4. 'is' → logprob: -4.405186176300049
    5. 'inar' → logprob: -5.530186176300049
    6. 'search' → logprob: -6.280186176300049
    7. 'r' → logprob: -6.780186176300049
    8. 'ina' → logprob: -6.780186176300049
    9. '   ' → logprob: -6.905186176300049
    10. '       ' → logprob: -7.530186176300049

Token 945: ' résolution' (ID: 147402)
  Prédit: ' search'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' search' → logprob: -0.7180420756340027
    2. '_search' → logprob: -0.8430420756340027
    3. 'search' → logprob: -2.5930421352386475
    4. 'Search' → logprob: -6.593041896820068
    5. ' Search' → logprob: -6.843041896820068
    6. '_' → logprob: -6.968041896820068
    7. '-search' → logprob: -7.093041896820068
    8. ' _' → logprob: -7.718041896820068
    9. 'e' → logprob: -7.718041896820068
    10. '   ' → logprob: -7.843041896820068

Token 946: ' assez' (ID: 33376)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8766311407089233
    2. '           ' → logprob: -1.2516311407089233
    3. '   ' → logprob: -2.251631259918213
    4. ':' → logprob: -3.001631259918213
    5. '<|end|>' → logprob: -3.126631259918213
    6. '<|end|>' → logprob: -4.001631259918213
    7. ':
' → logprob: -4.126631259918213
    8. ' 
' → logprob: -4.876631259918213
    9. '        
' → logprob: -5.126631259918213
    10. '    
' → logprob: -5.501631259918213

Token 947: ' fine' (ID: 8975)
  Prédit: 'prec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prec' → logprob: -0.46918433904647827
    2. 'pr' → logprob: -1.219184398651123
    3. ' précise' → logprob: -2.844184398651123
    4. '_prec' → logprob: -5.094184398651123
    5. 'fine' → logprob: -5.719184398651123
    6. '_pr' → logprob: -6.094184398651123
    7. '精' → logprob: -6.844184398651123
    8. ' precise' → logprob: -6.844184398651123
    9. ' fine' → logprob: -6.969184398651123
    10. 'precision' → logprob: -7.094184398651123

Token 948: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.27761396765708923
    2. '           ' → logprob: -1.9026139974594116
    3. '   ' → logprob: -3.402613878250122
    4. '<|end|>' → logprob: -4.027614116668701
    5. ':' → logprob: -4.277614116668701
    6. ':
' → logprob: -4.777614116668701
    7. '<|end|>' → logprob: -5.152614116668701
    8. '        
' → logprob: -6.402614116668701
    9. '=' → logprob: -6.527614116668701
    10. '
' → logprob: -6.777614116668701

Token 949: '1' (ID: 16)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7649540901184082
    2. '):
' → logprob: -1.5149540901184082
    3. '40' → logprob: -2.639954090118408
    4. ')' → logprob: -2.639954090118408
    5. '
' → logprob: -3.264954090118408
    6. '       ' → logprob: -3.389954090118408
    7. '   ' → logprob: -3.639954090118408
    8. ' ' → logprob: -4.389954090118408
    9. '           ' → logprob: -4.639954090118408
    10. ')
' → logprob: -4.889954090118408

Token 950: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.0023187955375760794
    2. '0' → logprob: -6.252318859100342
    3. '-' → logprob: -8.002318382263184
    4. '.' → logprob: -11.252318382263184
    5. '
' → logprob: -11.752318382263184
    6. 'E' → logprob: -12.127318382263184
    7. ' -' → logprob: -12.127318382263184
    8. '1' → logprob: -12.252318382263184
    9. ' ' → logprob: -12.502318382263184
    10. ' /' → logprob: -12.627318382263184

Token 951: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -4.320199877838604e-07
    2. ' -' → logprob: -15.75
    3. '```' → logprob: -16.0
    4. '   ' → logprob: -16.375
    5. '−' → logprob: -16.875
    6. '{-' → logprob: -17.375
    7. '0' → logprob: -18.875
    8. '6' → logprob: -18.875
    9. '    ' → logprob: -19.0
    10. '``' → logprob: -19.125

Token 952: '12' (ID: 899)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.8102559447288513
    2. '7' → logprob: -0.8102559447288513
    3. '12' → logprob: -3.685256004333496
    4. '-' → logprob: -3.810256004333496
    5. '4' → logprob: -3.810256004333496
    6. '5' → logprob: -3.810256004333496
    7. '3' → logprob: -4.685256004333496
    8. '2' → logprob: -5.435256004333496
    9. '8' → logprob: -5.810256004333496
    10. '10' → logprob: -6.435256004333496

Token 953: ')
' (ID: 446)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.5816829204559326
    2. ')' → logprob: -1.4566829204559326
    3. ')
' → logprob: -2.2066829204559326
    4. '       ' → logprob: -3.3316829204559326
    5. ' ):
' → logprob: -3.5816829204559326
    6. ' )
' → logprob: -4.331683158874512
    7. ' )' → logprob: -4.956683158874512
    8. '
' → logprob: -5.331683158874512
    9. '           ' → logprob: -5.456683158874512
    10. '   ' → logprob: -5.831683158874512

Token 954: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.747808575630188
    2. ' mid' → logprob: -0.997808575630188
    3. '           ' → logprob: -2.4978084564208984
    4. '   ' → logprob: -3.3728084564208984
    5. 'mid' → logprob: -3.4978084564208984
    6. '<|end|>' → logprob: -5.372808456420898
    7. '```' → logprob: -6.747808456420898
    8. ' midpoint' → logprob: -6.997808456420898
    9. '_mid' → logprob: -7.372808456420898
    10. ' mids' → logprob: -7.497808456420898

Token 955: ' mid' (ID: 6959)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mid' (adapté à ' mid') → logprob: -0.25235283374786377
    2. ' mid' → logprob: -1.5023528337478638
    3. '           ' → logprob: -8.252352714538574
    4. 'm' → logprob: -9.502352714538574
    5. 'middle' → logprob: -10.502352714538574
    6. ' midpoint' → logprob: -10.502352714538574
    7. '_mid' → logprob: -11.252352714538574
    8. ' middle' → logprob: -11.752352714538574
    9. 'midd' → logprob: -12.252352714538574
    10. ' mids' → logprob: -13.002352714538574

Token 956: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.061972059309482574
    2. '=' → logprob: -2.811972141265869
    3. ')' → logprob: -13.561971664428711
    4. '=(' → logprob: -14.311971664428711
    5. '<|end|>' → logprob: -14.311971664428711
    6. ' =(' → logprob: -14.811971664428711
    7. ' ' → logprob: -15.311971664428711
    8. '=float' → logprob: -15.436971664428711
    9. 'space' → logprob: -15.936971664428711
    10. ',' → logprob: -16.43697166442871

Token 957: ' (' (ID: 350)
  Prédit: '(low'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(low' → logprob: -0.023333992809057236
    2. ' (' → logprob: -3.77333402633667
    3. '(high' → logprob: -9.773333549499512
    4. '(lower' → logprob: -10.773333549499512
    5. '(mid' → logprob: -12.898333549499512
    6. '(left' → logprob: -13.273333549499512
    7. '(lo' → logprob: -13.398333549499512
    8. ' ' → logprob: -13.398333549499512
    9. '(' → logprob: -13.898333549499512
    10. 'low' → logprob: -14.523333549499512

Token 958: 'low' (ID: 14739)
  Prédit: 'low'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'low' → logprob: -1.688212614681106e-05
    2. ' low' → logprob: -11.000017166137695
    3. 'high' → logprob: -16.625017166137695
    4. '(low' → logprob: -17.250017166137695
    5. '_low' → logprob: -19.000017166137695
    6. '.low' → logprob: -19.875017166137695
    7. 'Low' → logprob: -20.250017166137695
    8. '
' → logprob: -20.750017166137695
    9. ')' → logprob: -21.500017166137695
    10. '-low' → logprob: -21.750017166137695

Token 959: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0067154900170862675
    2. ' +' → logprob: -5.006715297698975
    3. '+
' → logprob: -16.256715774536133
    4. '＋' → logprob: -17.506715774536133
    5. ' +
' → logprob: -19.756715774536133
    6. '
' → logprob: -20.756715774536133
    7. '+b' → logprob: -20.881715774536133
    8. '```' → logprob: -21.256715774536133
    9. '+x' → logprob: -21.506715774536133
    10. ' plus' → logprob: -21.756715774536133

Token 960: ' high' (ID: 1932)
  Prédit: 'high'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'high' → logprob: -0.0009115827269852161
    2. ' high' → logprob: -7.000911712646484
    3. ' ' → logprob: -18.125911712646484
    4. '(high' → logprob: -18.375911712646484
    5. '   ' → logprob: -18.625911712646484
    6. '
' → logprob: -18.750911712646484
    7. 'High' → logprob: -19.000911712646484
    8. 'right' → logprob: -19.375911712646484
    9. '.high' → logprob: -20.000911712646484
    10. ')' → logprob: -20.000911712646484

Token 961: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001596771035110578
    2. ')/' → logprob: -8.75015926361084
    3. ' )' → logprob: -13.62515926361084
    4. '   ' → logprob: -17.375160217285156
    5. ')
' → logprob: -18.625160217285156
    6. ')*' → logprob: -19.125160217285156
    7. ')>>' → logprob: -19.250160217285156
    8. '）' → logprob: -19.500160217285156
    9. ' ' → logprob: -19.500160217285156
    10. ' +' → logprob: -20.000160217285156

Token 962: ' /' (ID: 820)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.1130499541759491
    2. ' /' → logprob: -2.2380499839782715
    3. '*' → logprob: -8.863049507141113
    4. ' *' → logprob: -10.738049507141113
    5. ')' → logprob: -10.863049507141113
    6. '   ' → logprob: -11.113049507141113
    7. ' ' → logprob: -11.238049507141113
    8. ' ' → logprob: -11.863049507141113
    9. ')/' → logprob: -12.738049507141113
    10. '0' → logprob: -13.363049507141113

Token 963: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00012368128227535635
    2. ' ' → logprob: -9.000123977661133
    3. '   ' → logprob: -15.625123977661133
    4. '```' → logprob: -16.125123977661133
    5. '
' → logprob: -18.750123977661133
    6. '  ' → logprob: -18.875123977661133
    7. '۲' → logprob: -19.500123977661133
    8. '=' → logprob: -19.625123977661133
    9. '``' → logprob: -19.625123977661133
    10. '２' → logprob: -20.375123977661133

Token 964: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.036524842376821e-05
    2. ' ' → logprob: -10.125040054321289
    3. '   ' → logprob: -15.750040054321289
    4. '```' → logprob: -17.12504005432129
    5. '۲' → logprob: -18.12504005432129
    6. '  ' → logprob: -18.37504005432129
    7. '２' → logprob: -18.93754005432129
    8. '=' → logprob: -19.06254005432129
    9. '(' → logprob: -19.50004005432129
    10. '
' → logprob: -20.00004005432129

Token 965: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8703115582466125
    2. '<|end|>' → logprob: -0.8703115582466125
    3. ' 
' → logprob: -2.6203114986419678
    4. '  
' → logprob: -2.6203114986419678
    5. '<|end|>' → logprob: -5.370311737060547
    6. '    
' → logprob: -5.620311737060547
    7. '            
' → logprob: -6.370311737060547
    8. '   
' → logprob: -6.495311737060547
    9. ')' → logprob: -6.995311737060547
    10. ' ' → logprob: -7.120311737060547

Token 966: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.22994013130664825
    2. '
' → logprob: -2.854940176010132
    3. '<|end|>' → logprob: -2.854940176010132
    4. ' if' → logprob: -3.104940176010132
    5. '            
' → logprob: -3.854940176010132
    6. ' 
' → logprob: -4.854939937591553
    7. 'if' → logprob: -5.729939937591553
    8. '  
' → logprob: -5.729939937591553
    9. '       ' → logprob: -5.854939937591553
    10. '<|end|>' → logprob: -5.979939937591553

Token 967: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.1891137659549713
    2. 'if' (adapté à ' if') → logprob: -1.939113736152649
    3. '           ' → logprob: -3.5641138553619385
    4. '<|end|>' → logprob: -9.68911361694336
    5. '            
' → logprob: -9.81411361694336
    6. '
' → logprob: -11.81411361694336
    7. ' ' → logprob: -12.81411361694336
    8. '               ' → logprob: -12.81411361694336
    9. ' 
' → logprob: -12.81411361694336
    10. 'If' → logprob: -12.93911361694336

Token 968: ' can' (ID: 665)
  Prédit: 'can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'can' → logprob: -0.12692862749099731
    2. ' can' → logprob: -2.1269285678863525
    3. '	can' → logprob: -14.751928329467773
    4. ' not' → logprob: -16.251928329467773
    5. '(can' → logprob: -16.751928329467773
    6. '_can' → logprob: -17.626928329467773
    7. '.can' → logprob: -17.876928329467773
    8. 'not' → logprob: -18.251928329467773
    9. '   ' → logprob: -18.626928329467773
    10. ' ' → logprob: -18.876928329467773

Token 969: '_place' (ID: 81501)
  Prédit: '_place'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_place' → logprob: -3.173704271830502e-06
    2. '_' → logprob: -12.87500286102295
    3. 'place' → logprob: -14.75000286102295
    4. ' place' → logprob: -16.750003814697266
    5. '_places' → logprob: -17.000003814697266
    6. '_can' → logprob: -18.000003814697266
    7. '_PLACE' → logprob: -18.000003814697266
    8. '_put' → logprob: -18.250003814697266
    9. 'Place' → logprob: -18.500003814697266
    10. ' _' → logprob: -18.500003814697266

Token 970: '_ball' (ID: 138751)
  Prédit: '_ball'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ball' → logprob: -4.966313281329349e-05
    2. '_b' → logprob: -10.875049591064453
    3. '_bal' → logprob: -10.875049591064453
    4. '_' → logprob: -12.250049591064453
    5. '_place' → logprob: -12.875049591064453
    6. ' _' → logprob: -13.750049591064453
    7. '_token' → logprob: -14.125049591064453
    8. 'ball' → logprob: -14.875049591064453
    9. '(ball' → logprob: -14.875049591064453
    10. ')_' → logprob: -15.000049591064453

Token 971: 'oon' (ID: 4508)
  Prédit: 'oon'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oon' → logprob: -0.07391653209924698
    2. '_' → logprob: -3.823916435241699
    3. '_ball' → logprob: -4.073916435241699
    4. 'ow' → logprob: -4.198916435241699
    5. 'on' → logprob: -5.198916435241699
    6. '_r' → logprob: -5.573916435241699
    7. 'o' → logprob: -5.573916435241699
    8. 'own' → logprob: -6.948916435241699
    9. 'r' → logprob: -7.573916435241699
    10. 'a' → logprob: -7.573916435241699

Token 972: '(mid' (ID: 121498)
  Prédit: '(mid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(mid' → logprob: -0.0031934010330587626
    2. '(' → logprob: -5.753193378448486
    3. ' (' → logprob: -11.128193855285645
    4. '(
' → logprob: -14.378193855285645
    5. '(m' → logprob: -16.003192901611328
    6. '(max' → logprob: -16.503192901611328
    7. '[mid' → logprob: -17.128192901611328
    8. '(mi' → logprob: -17.253192901611328
    9. '(r' → logprob: -17.628192901611328
    10. '(

' → logprob: -18.128192901611328

Token 973: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0016188843874260783
    2. ',w' → logprob: -6.5016188621521
    3. ' ,' → logprob: -9.126619338989258
    4. ',
' → logprob: -12.626619338989258
    5. 'w' → logprob: -12.751619338989258
    6. ')' → logprob: -14.376619338989258
    7. '(w' → logprob: -14.876619338989258
    8. '',' → logprob: -16.251619338989258
    9. ',n' → logprob: -16.376619338989258
    10. ',r' → logprob: -16.501619338989258

Token 974: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.0024756586644798517
    2. ' w' → logprob: -6.002475738525391
    3. '	w' → logprob: -19.87747573852539
    4. '   ' → logprob: -21.37747573852539
    5. '_w' → logprob: -21.50247573852539
    6. ')' → logprob: -23.75247573852539
    7. 'W' → logprob: -23.75247573852539
    8. '<w' → logprob: -24.37747573852539
    9. '-w' → logprob: -24.50247573852539
    10. '.w' → logprob: -24.50247573852539

Token 975: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.607391408877447e-05
    2. ' ,' → logprob: -10.250036239624023
    3. '           ' → logprob: -14.625036239624023
    4. ',
' → logprob: -16.500036239624023
    5. ',w' → logprob: -17.125036239624023
    6. '```' → logprob: -17.125036239624023
    7. ',n' → logprob: -17.625036239624023
    8. ')' → logprob: -17.750036239624023
    9. '       ' → logprob: -17.875036239624023
    10. 'w' → logprob: -18.750036239624023

Token 976: ' needles' (ID: 94833)
  Prédit: 'need'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'need' → logprob: -0.00023965541913639754
    2. ' needles' → logprob: -8.625239372253418
    3. 'needs' → logprob: -10.250239372253418
    4. 'needle' → logprob: -10.750239372253418
    5. ' need' → logprob: -13.500239372253418
    6. 'Need' → logprob: -13.625239372253418
    7. '_need' → logprob: -15.250239372253418
    8. 'kn' → logprob: -15.250239372253418
    9. '```' → logprob: -16.625240325927734
    10. ' Need' → logprob: -17.000240325927734

Token 977: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.10022662580013275
    2. '):' → logprob: -2.350226640701294
    3. '):
' → logprob: -11.850226402282715
    4. ')' → logprob: -12.350226402282715
    5. ' ):
' → logprob: -12.600226402282715
    6. ':' → logprob: -13.225226402282715
    7. ' ):' → logprob: -13.850226402282715
    8. ':
' → logprob: -14.225226402282715
    9. '           ' → logprob: -14.475226402282715
    10. '):

' → logprob: -15.100226402282715

Token 978: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.18954476714134216
    2. '
' → logprob: -2.564544677734375
    3. ' low' → logprob: -2.564544677734375
    4. 'low' → logprob: -4.564544677734375
    5. ' high' → logprob: -5.939544677734375
    6. ' 
' → logprob: -6.439544677734375
    7. '           ' → logprob: -7.064544677734375
    8. '                
' → logprob: -7.564544677734375
    9. ':
' → logprob: -7.939544677734375
    10. 'high' → logprob: -7.939544677734375

Token 979: ' low' (ID: 4465)
  Prédit: 'low'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'low' (adapté à ' low') → logprob: -0.005235887598246336
    2. ' low' → logprob: -5.25523567199707
    3. '
' → logprob: -13.75523567199707
    4. '   ' → logprob: -14.50523567199707
    5. '           ' → logprob: -16.38023567199707
    6. 'high' → logprob: -16.38023567199707
    7. '.low' → logprob: -16.50523567199707
    8. 'Low' → logprob: -16.50523567199707
    9. '_low' → logprob: -16.63023567199707
    10. '               ' → logprob: -16.75523567199707

Token 980: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47407716512680054
    2. '=' → logprob: -0.9740771651268005
    3. '<|end|>' → logprob: -17.099077224731445
    4. ' ' → logprob: -17.474077224731445
    5. '＝' → logprob: -17.474077224731445
    6. '=end' → logprob: -17.599077224731445
    7. '=line' → logprob: -18.099077224731445
    8. '=cut' → logprob: -18.849077224731445
    9. ' =
' → logprob: -18.849077224731445
    10. ',' → logprob: -18.849077224731445

Token 981: ' mid' (ID: 6959)
  Prédit: ' mid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mid' → logprob: -0.048587486147880554
    2. 'mid' → logprob: -3.0485875606536865
    3. '(mid' → logprob: -16.298587799072266
    4. ' midpoint' → logprob: -17.548587799072266
    5. '[mid' → logprob: -17.923587799072266
    6. '_mid' → logprob: -18.423587799072266
    7. ' mids' → logprob: -19.298587799072266
    8. ' middle' → logprob: -19.673587799072266
    9. '.mid' → logprob: -19.923587799072266
    10. ' ' → logprob: -20.548587799072266

Token 982: '
' (ID: 198)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.5463666915893555
    2. ' else' → logprob: -0.9213666915893555
    3. '
' → logprob: -4.1713666915893555
    4. '<|end|>' → logprob: -5.5463666915893555
    5. ' 
' → logprob: -5.7963666915893555
    6. '           ' → logprob: -8.296366691589355
    7. '  
' → logprob: -9.671366691589355
    8. '#else' → logprob: -9.796366691589355
    9. '            
' → logprob: -9.796366691589355
    10. '    
' → logprob: -9.921366691589355

Token 983: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.038668807595968246
    2. 'else' → logprob: -3.2886688709259033
    3. ' else' → logprob: -7.413668632507324
    4. '
' → logprob: -11.663668632507324
    5. 'high' → logprob: -11.788668632507324
    6. '       ' → logprob: -12.913668632507324
    7. '```' → logprob: -13.163668632507324
    8. '               ' → logprob: -13.788668632507324
    9. '            
' → logprob: -14.538668632507324
    10. ' high' → logprob: -15.038668632507324

Token 984: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.014354129321873188
    2. ' else' → logprob: -4.264354228973389
    3. '           ' → logprob: -8.88935375213623
    4. '       ' → logprob: -9.88935375213623
    5. '	else' → logprob: -13.88935375213623
    6. '<|end|>' → logprob: -14.88935375213623
    7. '```' → logprob: -15.26435375213623
    8. 'elser' → logprob: -16.139354705810547
    9. '   ' → logprob: -16.389354705810547
    10. 'elif' → logprob: -16.389354705810547

Token 985: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.8072310090065002
    2. ':
' → logprob: -1.0572309494018555
    3. ':' → logprob: -2.4322309494018555
    4. '           ' → logprob: -2.4322309494018555
    5. '       ' → logprob: -4.8072309494018555
    6. ' high' → logprob: -4.8072309494018555
    7. '<|end|>' → logprob: -5.0572309494018555
    8. 'high' → logprob: -6.6822309494018555
    9. '```' → logprob: -7.1822309494018555
    10. '   ' → logprob: -7.5572309494018555

Token 986: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.7765816450119019
    2. ' high' → logprob: -1.1515816450119019
    3. 'high' → logprob: -1.5265816450119019
    4. '           ' → logprob: -5.651581764221191
    5. '       ' → logprob: -5.901581764221191
    6. '(high' → logprob: -9.151581764221191
    7. '   ' → logprob: -9.526581764221191
    8. '.high' → logprob: -9.901581764221191
    9. '_high' → logprob: -10.276581764221191
    10. '```' → logprob: -10.901581764221191

Token 987: ' high' (ID: 1932)
  Prédit: ' high'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' high' → logprob: -0.07890080660581589
    2. 'high' (adapté à ' high') → logprob: -2.5789008140563965
    3. '               ' → logprob: -12.578900337219238
    4. '_high' → logprob: -12.828900337219238
    5. '           ' → logprob: -12.953900337219238
    6. '.high' → logprob: -13.828900337219238
    7. '(high' → logprob: -13.828900337219238
    8. '       ' → logprob: -15.328900337219238
    9. 'High' → logprob: -15.953900337219238
    10. '   ' → logprob: -16.328901290893555

Token 988: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3868710398674011
    2. '=' → logprob: -1.136871099472046
    3. '＝' → logprob: -18.761871337890625
    4. '=end' → logprob: -19.636871337890625
    5. ' =
' → logprob: -20.261871337890625
    6. ' ' → logprob: -21.011871337890625
    7. ')' → logprob: -21.136871337890625
    8. ',' → logprob: -21.636871337890625
    9. '=
' → logprob: -21.636871337890625
    10. '=cut' → logprob: -21.761871337890625

Token 989: ' mid' (ID: 6959)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mid' → logprob: -0.01416350994259119
    2. ' mid' → logprob: -4.264163494110107
    3. '(mid' → logprob: -18.139163970947266
    4. 'middle' → logprob: -18.764163970947266
    5. '_mid' → logprob: -19.014163970947266
    6. '[mid' → logprob: -19.264163970947266
    7. 'm' → logprob: -20.639163970947266
    8. ' midpoint' → logprob: -21.139163970947266
    9. '.mid' → logprob: -22.264163970947266
    10. ' middle' → logprob: -22.389163970947266

Token 990: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24564413726329803
    2. '    
' → logprob: -2.3706440925598145
    3. '       ' → logprob: -2.6206440925598145
    4. '
' → logprob: -3.7456440925598145
    5. '<|end|>' → logprob: -3.9956440925598145
    6. '        
' → logprob: -4.9956440925598145
    7. '  
' → logprob: -7.2456440925598145
    8. ' 
' → logprob: -7.7456440925598145
    9. '[' → logprob: -8.245644569396973
    10. '   
' → logprob: -8.495644569396973

Token 991: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10356680303812027
    2. 'print' → logprob: -2.353566884994507
    3. ' print' → logprob: -5.853566646575928
    4. '
' → logprob: -8.103567123413086
    5. 'return' → logprob: -9.353567123413086
    6. ' return' → logprob: -9.978567123413086
    7. '```' → logprob: -10.353567123413086
    8. '    
' → logprob: -11.103567123413086
    9. '       ' → logprob: -14.103567123413086
    10. '	print' → logprob: -14.728567123413086

Token 992: ' results' (ID: 4376)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' (adapté à ' results') → logprob: -0.003310915781185031
    2. ' results' → logprob: -5.753310680389404
    3. 'print' → logprob: -9.503311157226562
    4. '   ' → logprob: -9.878311157226562
    5. '
' → logprob: -12.628311157226562
    6. '	results' → logprob: -12.878311157226562
    7. 'result' → logprob: -14.003311157226562
    8. '       ' → logprob: -15.753311157226562
    9. ' print' → logprob: -16.628311157226562
    10. '(results' → logprob: -16.753311157226562

Token 993: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -7.505351095460355e-05
    2. '.' → logprob: -9.500075340270996
    3. '.app' → logprob: -16.75007438659668
    4. '.ap' → logprob: -17.12507438659668
    5. 'append' → logprob: -18.75007438659668
    6. '.extend' → logprob: -19.12507438659668
    7. ' .' → logprob: -19.50007438659668
    8. '.Append' → logprob: -19.75007438659668
    9. '_append' → logprob: -20.00007438659668
    10. '.push' → logprob: -22.25007438659668

Token 994: '(low' (ID: 119835)
  Prédit: '(f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.026549458503723145
    2. '(round' → logprob: -4.026549339294434
    3. '(low' → logprob: -4.901549339294434
    4. '(' → logprob: -7.901549339294434
    5. '(format' → logprob: -8.651549339294434
    6. '((' → logprob: -8.776549339294434
    7. '("' → logprob: -9.651549339294434
    8. '(str' → logprob: -10.026549339294434
    9. '(int' → logprob: -10.276549339294434
    10. '('' → logprob: -10.651549339294434

Token 995: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006843181326985359
    2. ')
' → logprob: -8.12568473815918
    3. '<|end|>' → logprob: -8.12568473815918
    4. ')}' → logprob: -11.25068473815918
    5. '<|end|>' → logprob: -11.25068473815918
    6. '*' → logprob: -11.75068473815918
    7. ',' → logprob: -11.87568473815918
    8. '
' → logprob: -12.00068473815918
    9. ')return' → logprob: -12.25068473815918
    10. ' )' → logprob: -12.37568473815918

Token 996: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.18520309031009674
    2. ' for' → logprob: -2.1852030754089355
    3. '
' → logprob: -3.0602030754089355
    4. '   ' → logprob: -5.1852030754089355
    5. '    
' → logprob: -6.9352030754089355
    6. '```' → logprob: -6.9352030754089355
    7. '<|end|>' → logprob: -7.0602030754089355
    8. '	for' → logprob: -7.0602030754089355
    9. 'print' → logprob: -8.560203552246094
    10. '  
' → logprob: -9.310203552246094

Token 997: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.007555271498858929
    2. ' for' → logprob: -5.0075554847717285
    3. '```' → logprob: -7.8825554847717285
    4. '
' → logprob: -8.25755500793457
    5. '   ' → logprob: -8.63255500793457
    6. 'print' → logprob: -11.00755500793457
    7. '    
' → logprob: -12.75755500793457
    8. '	for' → logprob: -12.88255500793457
    9. '``' → logprob: -13.00755500793457
    10. '  
' → logprob: -15.38255500793457

Token 998: ' r' (ID: 428)
  Prédit: ' res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' res' → logprob: -0.3128834068775177
    2. 'r' → logprob: -2.0628833770751953
    3. ' r' → logprob: -2.0628833770751953
    4. 'res' → logprob: -4.312883377075195
    5. ' result' → logprob: -7.687883377075195
    6. 'result' → logprob: -7.812883377075195
    7. ' radius' → logprob: -8.937883377075195
    8. 'radius' → logprob: -9.312883377075195
    9. ' size' → logprob: -11.812883377075195
    10. 'size' → logprob: -12.687883377075195

Token 999: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0011809427523985505
    2. 'in' → logprob: -6.751181125640869
    3. ' ' → logprob: -11.751180648803711
    4. 'ange' → logprob: -13.751180648803711
    5. 'es' → logprob: -13.876180648803711
    6. 'e' → logprob: -15.126180648803711
    7. ' ' → logprob: -15.376180648803711
    8. 'adius' → logprob: -16.25118064880371
    9. '_in' → logprob: -16.50118064880371
    10. '  ' → logprob: -16.62618064880371

Token 1000: ' results' (ID: 4376)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' → logprob: -0.004078401252627373
    2. ' results' → logprob: -5.504078388214111
    3. '
' → logprob: -18.254077911376953
    4. 'result' → logprob: -18.254077911376953
    5. '(results' → logprob: -19.004077911376953
    6. '	results' → logprob: -19.379077911376953
    7. '_results' → logprob: -22.129077911376953
    8. '.results' → logprob: -22.879077911376953
    9. 'Results' → logprob: -23.004077911376953
    10. '   ' → logprob: -23.254077911376953

Token 1001: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06498902291059494
    2. ':
' → logprob: -2.9399890899658203
    3. '   ' → logprob: -5.43998908996582
    4. 'print' → logprob: -5.68998908996582
    5. '.println' → logprob: -7.43998908996582
    6. '.print' → logprob: -7.56498908996582
    7. ' print' → logprob: -7.93998908996582
    8. '.printf' → logprob: -9.06498908996582
    9. ',' → logprob: -9.18998908996582
    10. '       ' → logprob: -9.18998908996582

Token 1002: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21611592173576355
    2. '   ' → logprob: -1.716115951538086
    3. 'print' → logprob: -4.591115951538086
    4. '```' → logprob: -6.091115951538086
    5. ' print' → logprob: -6.216115951538086
    6. ':' → logprob: -9.966115951538086
    7. ':
' → logprob: -10.216115951538086
    8. '	print' → logprob: -10.341115951538086
    9. '<|end|>' → logprob: -11.591115951538086
    10. 'import' → logprob: -11.716115951538086

Token 1003: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.024853715673089027
    2. '   ' → logprob: -3.7748537063598633
    3. '       ' → logprob: -7.024853706359863
    4. ' print' → logprob: -7.274853706359863
    5. '```' → logprob: -10.649853706359863
    6. '	print' → logprob: -14.399853706359863
    7. 'printf' → logprob: -15.399853706359863
    8. '#print' → logprob: -16.52485466003418
    9. '``' → logprob: -17.14985466003418
    10. ' ' → logprob: -17.39985466003418

Token 1004: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.00044711565715260804
    2. '("{' → logprob: -7.7504472732543945
    3. '("%.' → logprob: -11.500447273254395
    4. 'f' → logprob: -13.125447273254395
    5. '(round' → logprob: -13.125447273254395
    6. '(' → logprob: -13.750447273254395
    7. '(format' → logprob: -14.000447273254395
    8. '('{' → logprob: -15.250447273254395
    9. '{' → logprob: -16.375446319580078
    10. '"{' → logprob: -17.375446319580078

Token 1005: '"{' (ID: 27510)
  Prédit: '("{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("{' → logprob: -0.4591734707355499
    2. '{' → logprob: -1.7091734409332275
    3. '"{' → logprob: -1.7091734409332275
    4. '({' → logprob: -5.834173679351807
    5. '(f' → logprob: -5.959173679351807
    6. '("%.' → logprob: -7.709173679351807
    7. '('{' → logprob: -8.834173202514648
    8. '(' → logprob: -10.459173202514648
    9. ''{' → logprob: -11.084173202514648
    10. '{"' → logprob: -11.584173202514648

Token 1006: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: 0.0
    2. ' r' → logprob: -17.5
    3. '{' → logprob: -20.75
    4. 'round' → logprob: -22.25
    5. '_r' → logprob: -24.125
    6. '0' → logprob: -24.125
    7. '	r' → logprob: -24.375
    8. '   ' → logprob: -25.375
    9. '(r' → logprob: -25.5
    10. 'runde' → logprob: -26.125

Token 1007: ':.' (ID: 27474)
  Prédit: ':.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':.' → logprob: -2.816093228830141e-06
    2. '.' → logprob: -13.12500286102295
    3. ':' → logprob: -14.50000286102295
    4. ' :.' → logprob: -15.25000286102295
    5. '}' → logprob: -18.625001907348633
    6. '   ' → logprob: -19.750001907348633
    7. '=.' → logprob: -19.875001907348633
    8. '{' → logprob: -20.750001907348633
    9. ' .' → logprob: -20.750001907348633
    10. '(.' → logprob: -21.250001907348633

Token 1008: '5' (ID: 20)
  Prédit: '12'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '12' → logprob: -0.9931626319885254
    2. '6' → logprob: -1.2431626319885254
    3. '9' → logprob: -1.7431626319885254
    4. '10' → logprob: -2.6181626319885254
    5. '8' → logprob: -2.9931626319885254
    6. '7' → logprob: -3.9931626319885254
    7. '15' → logprob: -4.368162631988525
    8. '13' → logprob: -5.368162631988525
    9. '11' → logprob: -5.618162631988525
    10. '14' → logprob: -6.243162631988525

Token 1009: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: 0.0
    2. 'g' → logprob: -19.0
    3. 'e' → logprob: -22.125
    4. '6' → logprob: -22.5
    5. 'lf' → logprob: -22.875
    6. 'ф' → logprob: -23.25
    7. '}' → logprob: -23.5
    8. '```' → logprob: -23.5
    9. 'fi' → logprob: -24.75
    10. 'F' → logprob: -24.75

Token 1010: '}")

' (ID: 119200)
  Prédit: '}")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}")' → logprob: -1.8074162653647363e-05
    2. '")' → logprob: -11.000018119812012
    3. '}")
' → logprob: -14.250018119812012
    4. ')")' → logprob: -14.250018119812012
    5. ' }' → logprob: -17.375017166137695
    6. '}")
' → logprob: -18.250017166137695
    7. '})' → logprob: -18.625017166137695
    8. '}")

' → logprob: -19.000017166137695
    9. '}"' → logprob: -19.125017166137695
    10. '}' → logprob: -19.375017166137695

Token 1011: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.009577584452927113
    2. '<|end|>' → logprob: -5.384577751159668
    3. '```' → logprob: -6.259577751159668
    4. 'solve' → logprob: -6.509577751159668
    5. '
' → logprob: -7.009577751159668
    6. ' if' → logprob: -7.509577751159668
    7. '#' → logprob: -9.884577751159668
    8. '<|end|>' → logprob: -11.759577751159668
    9. ' solve' → logprob: -11.884577751159668
    10. '``' → logprob: -12.509577751159668

Token 1012: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.0031857939902693033
    2. '__' → logprob: -5.753185749053955
    3. '_' → logprob: -12.753186225891113
    4. '___' → logprob: -13.253186225891113
    5. '_name' → logprob: -13.628186225891113
    6. ' ___' → logprob: -13.753186225891113
    7. ' _' → logprob: -14.628186225891113
    8. 'name' → logprob: -15.128186225891113
    9. ' ' → logprob: -16.003185272216797
    10. ' ' → logprob: -16.253185272216797

Token 1013: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.09409553557634354
    2. ' ==' → logprob: -2.719095468521118
    3. 'name' → logprob: -5.094095706939697
    4. '==' → logprob: -5.344095706939697
    5. '.__' → logprob: -6.094095706939697
    6. ' __' → logprob: -6.219095706939697
    7. '.name' → logprob: -6.844095706939697
    8. '=="' → logprob: -7.219095706939697
    9. '_' → logprob: -7.344095706939697
    10. '_name' → logprob: -7.344095706939697

Token 1014: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -6.635164754698053e-05
    2. '__.__' → logprob: -10.375066757202148
    3. '==' → logprob: -10.750066757202148
    4. '=="' → logprob: -11.750066757202148
    5. '___' → logprob: -13.625066757202148
    6. '____' → logprob: -13.750066757202148
    7. '__.' → logprob: -14.000066757202148
    8. ' ==' → logprob: -14.125066757202148
    9. '__('' → logprob: -14.875066757202148
    10. '__["' → logprob: -15.125066757202148

Token 1015: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.03655216470360756
    2. '==' → logprob: -3.9115521907806396
    3. '=="' → logprob: -4.5365519523620605
    4. ' ==' → logprob: -5.2865519523620605
    5. '__.__' → logprob: -9.661552429199219
    6. '=='' → logprob: -10.286552429199219
    7. '___' → logprob: -12.786552429199219
    8. '__["' → logprob: -12.911552429199219
    9. '==="' → logprob: -13.536552429199219
    10. '__.' → logprob: -13.536552429199219

Token 1016: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.006739881355315447
    2. ''' → logprob: -5.006740093231201
    3. '__' → logprob: -11.256739616394043
    4. ' "__' → logprob: -11.381739616394043
    5. ' '__' → logprob: -16.63174057006836
    6. '"_' → logprob: -17.13174057006836
    7. '"name' → logprob: -17.75674057006836
    8. '`' → logprob: -17.88174057006836
    9. '("__' → logprob: -18.00674057006836
    10. ''"' → logprob: -18.38174057006836

Token 1017: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.39929065108299255
    2. '__' → logprob: -1.149290680885315
    3. '"' → logprob: -4.524290561676025
    4. ''' → logprob: -6.524290561676025
    5. 'name' → logprob: -10.899291038513184
    6. '__":
' → logprob: -11.899291038513184
    7. '=="' → logprob: -13.524291038513184
    8. '```' → logprob: -14.274291038513184
    9. 'built' → logprob: -14.399291038513184
    10. '==' → logprob: -14.774291038513184

Token 1018: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.014623529277741909
    2. '__' → logprob: -4.514623641967773
    3. '__':
' → logprob: -5.639623641967773
    4. '__["' → logprob: -12.264623641967773
    5. '__
' → logprob: -12.889623641967773
    6. '__.' → logprob: -13.139623641967773
    7. '__.__' → logprob: -14.014623641967773
    8. '__()
' → logprob: -14.389623641967773
    9. '__:' → logprob: -14.389623641967773
    10. '():
' → logprob: -14.639623641967773

Token 1019: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003048415994271636
    2. 'solve' → logprob: -5.878048419952393
    3. ' solve' → logprob: -8.378047943115234
    4. 'main' → logprob: -12.378047943115234
    5. '```' → logprob: -13.128047943115234
    6. '   ' → logprob: -13.253047943115234
    7. '.solve' → logprob: -13.503047943115234
    8. '	s' → logprob: -13.628047943115234
    9. '    
' → logprob: -14.128047943115234
    10. '__' → logprob: -14.253047943115234

Token 1020: ' solve' (ID: 17722)
  Prédit: 'solve'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solve' (adapté à ' solve') → logprob: -3.128163257315464e-07
    2. ' solve' → logprob: -15.75
    3. '   ' → logprob: -17.0
    4. '.solve' → logprob: -20.125
    5. 'import' → logprob: -21.75
    6. 'resolve' → logprob: -22.5
    7. 'main' → logprob: -23.0
    8. 'sys' → logprob: -23.25
    9. 'save' → logprob: -23.875
    10. 'simulate' → logprob: -24.375

Token 1021: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1019
Tokens correctement prédits (1ère position, stricte): 348
Tokens correctement prédits (1ère position, avec adaptation): 375
Tokens correctement prédits (top 10): 756
Précision stricte (1ère position): 34.15%
Précision adaptée (1ère position): 36.80%
Précision (top 10): 74.19%
================================================================================
