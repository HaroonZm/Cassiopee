================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:00:39
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
while True:
    K = int(input())
    if K == 0:
        break
    values = list(map(int, input().split()))
    # total sum of pairs is sum of ci
    total_pairs_sum = sum(values)
    # sum of all cakes = 2 * total_pairs_sum / (K * (K-1))
    total_cakes_sum = 2 * total_pairs_sum // (K * (K - 1))
    print(total_cakes_sum)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'while' (ID: 7032)
  → Token d'amorce (pas de prédiction)

Token 1: ' True' (ID: 6432)
  → Token d'amorce (pas de prédiction)

Token 2: ':
' (ID: 734)
  → Token d'amorce (pas de prédiction)

Token 3: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5957265496253967
    2. '\' → logprob: -2.220726490020752
    3. ' ' → logprob: -2.470726490020752
    4. '```' → logprob: -2.845726490020752
    5. '    ' → logprob: -2.970726490020752
    6. '    
' → logprob: -3.220726490020752
    7. '\n' → logprob: -3.720726490020752
    8. ' 
' → logprob: -3.845726490020752
    9. '<|end|>' → logprob: -3.970726490020752
    10. '  
' → logprob: -5.095726490020752

Token 4: ' K' (ID: 658)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4779955744743347
    2. '    ' → logprob: -1.7279956340789795
    3. ' ' → logprob: -1.9779956340789795
    4. '```' → logprob: -3.6029956340789795
    5. '       ' → logprob: -4.7279953956604
    6. '  ' → logprob: -5.3529953956604
    7. '    
' → logprob: -5.6029953956604
    8. '        
' → logprob: -6.6029953956604
    9. '`' → logprob: -6.7279953956604
    10. 'pass' → logprob: -6.7279953956604

Token 5: ' =' (ID: 314)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.7602896094322205
    2. ':' → logprob: -1.1352896690368652
    3. '=' → logprob: -2.7602896690368652
    4. ' =' → logprob: -3.7602896690368652
    5. '(' → logprob: -4.010289669036865
    6. '_' → logprob: -4.010289669036865
    7. 'i' → logprob: -4.010289669036865
    8. '.' → logprob: -4.135289669036865
    9. '[' → logprob: -4.135289669036865
    10. ')' → logprob: -5.135289669036865

Token 6: ' int' (ID: 677)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.25314778089523315
    2. 'input' → logprob: -2.253147840499878
    3. ' K' → logprob: -2.753147840499878
    4. ' int' → logprob: -3.253147840499878
    5. 'int' → logprob: -5.128147602081299
    6. 'K' → logprob: -5.878147602081299
    7. ' ' → logprob: -6.878147602081299
    8. '   ' → logprob: -6.878147602081299
    9. ' randint' → logprob: -7.690647602081299
    10. 'i' → logprob: -7.878147602081299

Token 7: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0010144683765247464
    2. '(input' → logprob: -7.501014232635498
    3. ' (' → logprob: -8.751014709472656
    4. '```' → logprob: -9.751014709472656
    5. '()' → logprob: -10.001014709472656
    6. '(K' → logprob: -10.126014709472656
    7. 'K' → logprob: -10.376014709472656
    8. ')' → logprob: -10.876014709472656
    9. ''' → logprob: -10.876014709472656
    10. '('' → logprob: -11.001014709472656

Token 8: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.014793036505579948
    2. ')' → logprob: -5.0147929191589355
    3. '()' → logprob: -5.0147929191589355
    4. '())' → logprob: -7.7647929191589355
    5. '(
' → logprob: -8.389793395996094
    6. '('' → logprob: -8.514793395996094
    7. '```' → logprob: -9.014793395996094
    8. '("("' → logprob: -9.139793395996094
    9. ''' → logprob: -9.764793395996094
    10. ' ' → logprob: -10.139793395996094

Token 9: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.0971205234527588
    2. '   ' → logprob: -1.8471205234527588
    3. ':' → logprob: -2.097120523452759
    4. '<|end|>' → logprob: -2.347120523452759
    5. ' if' → logprob: -2.597120523452759
    6. ')' → logprob: -2.597120523452759
    7. '```' → logprob: -3.597120523452759
    8. '  ' → logprob: -3.722120523452759
    9. ',' → logprob: -3.847120523452759
    10. '#' → logprob: -4.84712028503418

Token 10: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7758361101150513
    2. '   ' → logprob: -1.1508361101150513
    3. ' ' → logprob: -2.7758359909057617
    4. '<|end|>' → logprob: -2.7758359909057617
    5. ')' → logprob: -3.2758359909057617
    6. 'if' (adapté à ' if') → logprob: -4.275835990905762
    7. '    ' → logprob: -4.275835990905762
    8. '  ' → logprob: -4.900835990905762
    9. '```' → logprob: -5.275835990905762
    10. ' )' → logprob: -5.650835990905762

Token 11: ' K' (ID: 658)
  Prédit: ' K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' K' → logprob: -0.0387578010559082
    2. ' ' → logprob: -3.288757801055908
    3. ' not' → logprob: -7.413757801055908
    4. 'K' → logprob: -9.66375732421875
    5. '  ' → logprob: -10.66375732421875
    6. ' ' → logprob: -11.03875732421875
    7. ')' → logprob: -12.28875732421875
    8. '<|end|>' → logprob: -12.91375732421875
    9. 'not' → logprob: -13.91375732421875
    10. ' (' → logprob: -14.16375732421875

Token 12: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.7889702916145325
    2. ' >' → logprob: -1.0389702320098877
    3. ' <=' → logprob: -2.5389702320098877
    4. ' >=' → logprob: -3.4139702320098877
    5. ' <' → logprob: -3.5389702320098877
    6. ' ' → logprob: -3.6639702320098877
    7. '>' → logprob: -5.038970470428467
    8. '==' → logprob: -5.163970470428467
    9. ' !=' → logprob: -5.538970470428467
    10. ')' → logprob: -6.038970470428467

Token 13: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.04859725013375282
    2. '0' → logprob: -3.0485973358154297
    3. ' -' → logprob: -13.29859733581543
    4. '1' → logprob: -13.42359733581543
    5. ' ' → logprob: -13.42359733581543
    6. '100' → logprob: -13.92359733581543
    7. '  ' → logprob: -14.04859733581543
    8. '20' → logprob: -14.92359733581543
    9. ')' → logprob: -14.98609733581543
    10. '10' → logprob: -15.04859733581543

Token 14: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.006206192541867495
    2. ' ' → logprob: -5.131206035614014
    3. '-' → logprob: -8.881206512451172
    4. '1' → logprob: -10.256206512451172
    5. '42' → logprob: -10.381206512451172
    6. ' -' → logprob: -11.506206512451172
    7. '   ' → logprob: -11.631206512451172
    8. '7' → logprob: -12.006206512451172
    9. '999' → logprob: -12.006206512451172
    10. '69' → logprob: -12.256206512451172

Token 15: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00023560250701848418
    2. ':
' → logprob: -8.625235557556152
    3. '   ' → logprob: -10.375235557556152
    4. '       ' → logprob: -11.000235557556152
    5. ' :' → logprob: -12.125235557556152
    6. ' break' → logprob: -14.125235557556152
    7. ':return' → logprob: -14.750235557556152
    8. '    ' → logprob: -14.875235557556152
    9. '	break' → logprob: -15.125235557556152
    10. '      ' → logprob: -15.750235557556152

Token 16: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00287489197216928
    2. '   ' → logprob: -6.377874851226807
    3. ' break' → logprob: -6.877874851226807
    4. '	break' → logprob: -9.627875328063965
    5. '\t' → logprob: -10.877875328063965
    6. 'break' → logprob: -11.752875328063965
    7. '    ' → logprob: -12.002875328063965
    8. '      ' → logprob: -12.002875328063965
    9. '     ' → logprob: -12.377875328063965
    10. ':' → logprob: -12.377875328063965

Token 17: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.11201860010623932
    2. '       ' → logprob: -2.737018585205078
    3. 'break' (adapté à ' break') → logprob: -3.237018585205078
    4. '   ' → logprob: -6.737018585205078
    5. '	break' → logprob: -7.362018585205078
    6. '_break' → logprob: -10.612018585205078
    7. '```' → logprob: -11.237018585205078
    8. '        
' → logprob: -11.237018585205078
    9. '\n' → logprob: -11.362018585205078
    10. ' ' → logprob: -11.862018585205078

Token 18: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19934099912643433
    2. '\n' → logprob: -2.949341058731079
    3. ')' → logprob: -3.199341058731079
    4. '<|end|>' → logprob: -3.949341058731079
    5. ' ' → logprob: -4.1993408203125
    6. '#' → logprob: -4.3243408203125
    7. '    
' → logprob: -4.4493408203125
    8. ':' → logprob: -4.9493408203125
    9. ' 
' → logprob: -5.6993408203125
    10. '\' → logprob: -6.4493408203125

Token 19: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.021843455731868744
    2. '    
' → logprob: -4.021843433380127
    3. 'print' → logprob: -7.396843433380127
    4. '<|end|>' → logprob: -7.521843433380127
    5. '    ' → logprob: -8.146843910217285
    6. ')' → logprob: -8.271843910217285
    7. ' ' → logprob: -8.271843910217285
    8. '[' → logprob: -8.521843910217285
    9. '\n' → logprob: -8.521843910217285
    10. '#' → logprob: -8.646843910217285

Token 20: ' values' (ID: 4824)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.35160478949546814
    2. ' ' → logprob: -1.8516048192977905
    3. 'n' → logprob: -3.226604700088501
    4. ')' → logprob: -3.351604700088501
    5. '    ' → logprob: -4.72660493850708
    6. '[' → logprob: -4.72660493850708
    7. '\n' → logprob: -4.97660493850708
    8. ',' → logprob: -5.22660493850708
    9. 'print' → logprob: -5.22660493850708
    10. ':' → logprob: -5.47660493850708

Token 21: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05641036853194237
    2. '=' → logprob: -2.931410312652588
    3. '[' → logprob: -6.681410312652588
    4. '   ' → logprob: -9.806410789489746
    5. ')' → logprob: -10.056410789489746
    6. '.' → logprob: -10.056410789489746
    7. '_' → logprob: -10.556410789489746
    8. ' ' → logprob: -10.806410789489746
    9. ',' → logprob: -11.181410789489746
    10. '[:]' → logprob: -11.181410789489746

Token 22: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.30533450841903687
    2. ' []' → logprob: -2.1803345680236816
    3. 'list' → logprob: -2.5553345680236816
    4. ' [' → logprob: -3.0553345680236816
    5. '[]' → logprob: -4.055334568023682
    6. '[' → logprob: -4.930334568023682
    7. '[list' → logprob: -8.180334091186523
    8. ' input' → logprob: -8.680334091186523
    9. '[input' → logprob: -9.555334091186523
    10. 'input' → logprob: -9.680334091186523

Token 23: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.028346821665763855
    2. '(values' → logprob: -4.028347015380859
    3. '(map' → logprob: -5.278347015380859
    4. '(range' → logprob: -6.278347015380859
    5. '(input' → logprob: -6.528347015380859
    6. '(int' → logprob: -6.528347015380859
    7. '()' → logprob: -9.27834701538086
    8. '(eval' → logprob: -10.40334701538086
    9. '(
' → logprob: -10.65334701538086
    10. '(

' → logprob: -11.52834701538086

Token 24: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.002235186053439975
    2. '(' → logprob: -6.127235412597656
    3. 'int' → logprob: -10.502235412597656
    4. '(str' → logprob: -11.877235412597656
    5. ')' → logprob: -12.377235412597656
    6. '(lambda' → logprob: -12.502235412597656
    7. '```' → logprob: -13.127235412597656
    8. '<int' → logprob: -13.127235412597656
    9. '=int' → logprob: -13.877235412597656
    10. ' int' → logprob: -14.127235412597656

Token 25: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.033541154116392136
    2. '(' → logprob: -3.908541202545166
    3. ',input' → logprob: -4.533541202545166
    4. 'input' → logprob: -6.283541202545166
    5. ',' → logprob: -9.033540725708008
    6. '(
' → logprob: -9.783540725708008
    7. ')' → logprob: -9.908540725708008
    8. ' input' → logprob: -10.533540725708008
    9. '=input' → logprob: -11.408540725708008
    10. '   ' → logprob: -11.658540725708008

Token 26: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.47409483790397644
    2. 'input' → logprob: -0.9740948677062988
    3. '(input' → logprob: -12.34909439086914
    4. ',input' → logprob: -12.47409439086914
    5. ')' → logprob: -12.59909439086914
    6. '	input' → logprob: -12.84909439086914
    7. '=input' → logprob: -14.22409439086914
    8. '<input' → logprob: -14.34909439086914
    9. '   ' → logprob: -14.59909439086914
    10. '[input' → logprob: -14.97409439086914

Token 27: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.05833089351654053
    2. '()' → logprob: -3.55833101272583
    3. '(' → logprob: -4.05833101272583
    4. '())' → logprob: -5.18333101272583
    5. '()))' → logprob: -5.43333101272583
    6. ')' → logprob: -8.433330535888672
    7. '()));' → logprob: -8.933330535888672
    8. '(input' → logprob: -9.058330535888672
    9. '())))' → logprob: -9.808330535888672
    10. '('' → logprob: -9.933330535888672

Token 28: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0009193199803121388
    2. 'strip' → logprob: -7.000919342041016
    3. 'rstrip' → logprob: -12.125919342041016
    4. ' split' → logprob: -13.000919342041016
    5. '(split' → logprob: -16.125919342041016
    6. 'spl' → logprob: -16.250919342041016
    7. ' strip' → logprob: -18.000919342041016
    8. 's' → logprob: -18.375919342041016
    9. 'sp' → logprob: -18.875919342041016
    10. '.split' → logprob: -19.625919342041016

Token 29: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.3280772566795349
    2. '())' → logprob: -1.3280773162841797
    3. '()' → logprob: -4.82807731628418
    4. '(' → logprob: -5.57807731628418
    5. '))' → logprob: -6.32807731628418
    6. ')' → logprob: -7.57807731628418
    7. '('' → logprob: -8.20307731628418
    8. '())))' → logprob: -8.20307731628418
    9. '()))
' → logprob: -10.95307731628418
    10. '("' → logprob: -11.45307731628418

Token 30: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16471032798290253
    2. ')' → logprob: -3.289710283279419
    3. ' if' → logprob: -4.039710521697998
    4. 'n' → logprob: -4.289710521697998
    5. ':' → logprob: -4.539710521697998
    6. 'if' → logprob: -4.664710521697998
    7. '    
' → logprob: -4.664710521697998
    8. ' ' → logprob: -4.664710521697998
    9. '[' → logprob: -4.914710521697998
    10. '```' → logprob: -5.289710521697998

Token 31: ' #' (ID: 1069)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.483536958694458
    2. ' if' → logprob: -2.233536958694458
    3. 'if' → logprob: -2.358536958694458
    4. 's' → logprob: -2.358536958694458
    5. 'count' → logprob: -2.608536958694458
    6. ')' → logprob: -2.858536958694458
    7. '   ' → logprob: -3.233536958694458
    8. 'sum' → logprob: -3.358536958694458
    9. 'c' → logprob: -3.608536958694458
    10. 'result' → logprob: -3.983536958694458

Token 32: ' total' (ID: 3609)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.727760672569275
    2. ' s' → logprob: -1.977760672569275
    3. ' n' → logprob: -2.2277607917785645
    4. ' values' → logprob: -2.3527607917785645
    5. 's' → logprob: -2.6027607917785645
    6. ' max' → logprob: -2.9777607917785645
    7. ' sum' → logprob: -3.2277607917785645
    8. ' total' → logprob: -3.4777607917785645
    9. 'n' → logprob: -3.6027607917785645
    10. 'sum' → logprob: -3.7277607917785645

Token 33: ' sum' (ID: 4215)
  Prédit: '_sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.34276282787323
    2. '_' → logprob: -1.34276282787323
    3. ' =' → logprob: -3.9677629470825195
    4. '=' → logprob: -5.4677629470825195
    5. '_count' → logprob: -6.0927629470825195
    6. 'sum' → logprob: -6.5927629470825195
    7. '_values' → logprob: -7.7177629470825195
    8. '(' → logprob: -7.8427629470825195
    9. '_total' → logprob: -8.34276294708252
    10. '_value' → logprob: -8.46776294708252

Token 34: ' of' (ID: 328)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3800991475582123
    2. '=' → logprob: -1.3800991773605347
    3. '_' → logprob: -3.005099058151245
    4. '   ' → logprob: -4.505099296569824
    5. '_values' → logprob: -7.130099296569824
    6. 'total' → logprob: -7.380099296569824
    7. '_sum' → logprob: -7.380099296569824
    8. 'sum' → logprob: -7.755099296569824
    9. '_total' → logprob: -8.130099296569824
    10. 's' → logprob: -8.130099296569824

Token 35: ' pairs' (ID: 24702)
  Prédit: ' values'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' values' → logprob: -0.008838393725454807
    2. 'values' → logprob: -4.758838176727295
    3. ' the' → logprob: -9.383838653564453
    4. '(values' → logprob: -10.008838653564453
    5. ' ' → logprob: -10.133838653564453
    6. ' all' → logprob: -10.883838653564453
    7. '	values' → logprob: -11.258838653564453
    8. '_values' → logprob: -11.883838653564453
    9. ' value' → logprob: -13.008838653564453
    10. ' a' → logprob: -13.383838653564453

Token 36: ' is' (ID: 382)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.5442664623260498
    2. '   ' → logprob: -1.6692664623260498
    3. 'sum' → logprob: -2.41926646232605
    4. '(' → logprob: -2.54426646232605
    5. '_sum' → logprob: -2.54426646232605
    6. 's' → logprob: -2.66926646232605
    7. ' ' → logprob: -3.16926646232605
    8. ')' → logprob: -3.16926646232605
    9. '\' → logprob: -3.54426646232605
    10. ' =' → logprob: -3.66926646232605

Token 37: ' sum' (ID: 4215)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -1.2370644807815552
    2. ' sum' → logprob: -1.2370644807815552
    3. ' ' → logprob: -1.6120644807815552
    4. '0' → logprob: -2.3620643615722656
    5. ' K' → logprob: -2.9870643615722656
    6. ' values' → logprob: -3.3620643615722656
    7. 'sum' → logprob: -4.487064361572266
    8. ' len' → logprob: -4.612064361572266
    9. 'max' → logprob: -5.237064361572266
    10. '   ' → logprob: -5.362064361572266

Token 38: ' of' (ID: 328)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3177652955055237
    2. '(values' → logprob: -1.442765235900879
    3. '_' → logprob: -3.692765235900879
    4. 'values' → logprob: -5.817765235900879
    5. '_values' → logprob: -6.192765235900879
    6. '(sum' → logprob: -6.317765235900879
    7. 's' → logprob: -6.817765235900879
    8. '   ' → logprob: -7.067765235900879
    9. '(s' → logprob: -7.567765235900879
    10. '=' → logprob: -7.692765235900879

Token 39: ' ci' (ID: 7405)
  Prédit: 'values'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'values' → logprob: -0.6448628902435303
    2. ' values' → logprob: -0.7698628902435303
    3. '(values' → logprob: -5.019863128662109
    4. ' pairs' → logprob: -7.144863128662109
    5. '	values' → logprob: -7.644863128662109
    6. '[i' → logprob: -7.769863128662109
    7. ' two' → logprob: -7.894863128662109
    8. ' the' → logprob: -8.14486312866211
    9. ' i' → logprob: -8.14486312866211
    10. ' all' → logprob: -8.26986312866211

Token 40: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.10624829679727554
    2. '_' → logprob: -3.231248378753662
    3. 's' → logprob: -3.481248378753662
    4. '_values' → logprob: -5.106248378753662
    5. '   ' → logprob: -5.731248378753662
    6. 'values' → logprob: -5.856248378753662
    7. ' ' → logprob: -5.981248378753662
    8. '[' → logprob: -6.106248378753662
    9. '=' → logprob: -6.356248378753662
    10. ')' → logprob: -6.606248378753662

Token 41: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15223880112171173
    2. '=' → logprob: -3.0272388458251953
    3. ' ' → logprob: -3.6522388458251953
    4. 'c' → logprob: -4.027238845825195
    5. '_' → logprob: -4.652238845825195
    6. ')' → logprob: -5.027238845825195
    7. ' =' → logprob: -5.027238845825195
    8. 's' → logprob: -5.777238845825195
    9. '(' → logprob: -6.027238845825195
    10. 'sum' → logprob: -6.152238845825195

Token 42: ' total' (ID: 3609)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.286764532327652
    2. 'c' → logprob: -1.7867645025253296
    3. 'n' → logprob: -4.286764621734619
    4. 'sum' → logprob: -4.661764621734619
    5. 'total' (adapté à ' total') → logprob: -4.786764621734619
    6. 's' → logprob: -4.786764621734619
    7. ' c' → logprob: -4.911764621734619
    8. '_' → logprob: -5.036764621734619
    9. ' ' → logprob: -5.536764621734619
    10. '=' → logprob: -5.911764621734619

Token 43: '_pairs' (ID: 90005)
  Prédit: '_sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.0541275255382061
    2. '_' → logprob: -3.0541274547576904
    3. '_pairs' → logprob: -5.5541276931762695
    4. ' =' → logprob: -7.3041276931762695
    5. '_s' → logprob: -7.9291276931762695
    6. '=' → logprob: -8.55412769317627
    7. '_values' → logprob: -9.67912769317627
    8. '_pair' → logprob: -9.80412769317627
    9. '_val' → logprob: -9.92912769317627
    10. '_value' → logprob: -9.92912769317627

Token 44: '_sum' (ID: 29859)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.041304074227809906
    2. '=' → logprob: -3.291304111480713
    3. '_' → logprob: -5.791304111480713
    4. ' _' → logprob: -9.666303634643555
    5. ' ' → logprob: -10.291303634643555
    6. ' +=' → logprob: -10.541303634643555
    7. ')' → logprob: -10.791303634643555
    8. '_sum' → logprob: -10.916303634643555
    9. '=sum' → logprob: -10.916303634643555
    10. ',' → logprob: -12.541303634643555

Token 45: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03425584360957146
    2. '=' → logprob: -3.4092557430267334
    3. ' +=' → logprob: -7.6592559814453125
    4. '_' → logprob: -9.534255981445312
    5. '(' → logprob: -10.534255981445312
    6. ')' → logprob: -11.159255981445312
    7. ' ' → logprob: -11.784255981445312
    8. '   ' → logprob: -12.534255981445312
    9. ' ==' → logprob: -13.534255981445312
    10. ',' → logprob: -13.659255981445312

Token 46: ' sum' (ID: 4215)
  Prédit: ' sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.18880756199359894
    2. 'sum' → logprob: -1.8138076066970825
    3. '0' → logprob: -4.938807487487793
    4. ' values' → logprob: -6.938807487487793
    5. ' ' → logprob: -7.813807487487793
    6. 'values' → logprob: -8.313807487487793
    7. '(sum' → logprob: -9.563807487487793
    8. ' K' → logprob: -9.938807487487793
    9. ' max' → logprob: -9.938807487487793
    10. '   ' → logprob: -10.688807487487793

Token 47: '(values' (ID: 40883)
  Prédit: '(values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(values' → logprob: -0.01105170976370573
    2. '(' → logprob: -4.511051654815674
    3. '(vals' → logprob: -13.636052131652832
    4. '(value' → logprob: -13.761052131652832
    5. ' (' → logprob: -14.636052131652832
    6. '(

' → logprob: -15.136052131652832
    7. '((' → logprob: -15.511052131652832
    8. '(
' → logprob: -15.636052131652832
    9. 'values' → logprob: -15.761052131652832
    10. '(total' → logprob: -16.761051177978516

Token 48: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.0484450437361374e-05
    2. '))' → logprob: -11.375040054321289
    3. ' )' → logprob: -11.500040054321289
    4. '   ' → logprob: -11.500040054321289
    5. '[' → logprob: -12.500040054321289
    6. ')
' → logprob: -12.750040054321289
    7. '.values' → logprob: -14.750040054321289
    8. ')))' → logprob: -15.250040054321289
    9. ' ' → logprob: -15.500040054321289
    10. '[i' → logprob: -15.750040054321289

Token 49: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2613750398159027
    2. '
' → logprob: -1.761375069618225
    3. '<|end|>' → logprob: -3.3863749504089355
    4. ' ' → logprob: -4.8863749504089355
    5. '    
' → logprob: -5.3863749504089355
    6. ')' → logprob: -5.7613749504089355
    7. ' 
' → logprob: -6.8863749504089355
    8. '+' → logprob: -6.8863749504089355
    9. '\n' → logprob: -7.1363749504089355
    10. '  ' → logprob: -7.2613749504089355

Token 50: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.30441588163375854
    2. '
' → logprob: -2.6794159412384033
    3. ' ' → logprob: -2.6794159412384033
    4. '    
' → logprob: -3.6794159412384033
    5. '<|end|>' → logprob: -3.9294159412384033
    6. ')' → logprob: -4.054415702819824
    7. '\n' → logprob: -4.304415702819824
    8. ' 
' → logprob: -4.429415702819824
    9. '    ' → logprob: -4.929415702819824
    10. '\' → logprob: -5.054415702819824

Token 51: ' sum' (ID: 4215)
  Prédit: ' dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.931589663028717
    2. ' max' → logprob: -2.1815896034240723
    3. ' if' → logprob: -2.8065896034240723
    4. ' ans' → logprob: -3.0565896034240723
    5. ' total' → logprob: -3.0565896034240723
    6. ' for' → logprob: -3.0565896034240723
    7. ' pairs' → logprob: -3.6815896034240723
    8. ' print' → logprob: -3.6815896034240723
    9. 'dp' → logprob: -3.9315896034240723
    10. ' answer' → logprob: -4.056589603424072

Token 52: ' of' (ID: 328)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.32662948966026306
    2. '_values' → logprob: -1.7016295194625854
    3. '_of' → logprob: -3.326629400253296
    4. '_pairs' → logprob: -3.826629400253296
    5. '_s' → logprob: -4.951629638671875
    6. ' =' → logprob: -5.451629638671875
    7. '_so' → logprob: -5.701629638671875
    8. '_c' → logprob: -5.826629638671875
    9. '_val' → logprob: -6.076629638671875
    10. '_remaining' → logprob: -6.201629638671875

Token 53: ' all' (ID: 722)
  Prédit: ' values'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' values' → logprob: -0.5643555521965027
    2. 'values' → logprob: -1.0643556118011475
    3. ' total' → logprob: -4.189355373382568
    4. ' pairs' → logprob: -4.314355373382568
    5. '(values' → logprob: -4.564355373382568
    6. ' ci' → logprob: -5.064355373382568
    7. 'ci' → logprob: -5.689355373382568
    8. 'total' → logprob: -5.814355373382568
    9. 'pairs' → logprob: -5.814355373382568
    10. ' all' → logprob: -5.939355373382568

Token 54: ' cakes' (ID: 61222)
  Prédit: 'values'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'values' → logprob: -0.3766843378543854
    2. ' values' → logprob: -1.751684308052063
    3. '_values' → logprob: -2.8766844272613525
    4. '(values' → logprob: -3.3766844272613525
    5. '_pairs' → logprob: -4.126684188842773
    6. 'pairs' → logprob: -4.376684188842773
    7. ' pairs' → logprob: -4.626684188842773
    8. '(range' → logprob: -6.501684188842773
    9. 'range' → logprob: -6.751684188842773
    10. 's' → logprob: -6.876684188842773

Token 55: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05748319625854492
    2. '_values' → logprob: -3.682483196258545
    3. '=' → logprob: -4.432483196258545
    4. 's' → logprob: -4.807483196258545
    5. '_' → logprob: -5.182483196258545
    6. ' ' → logprob: -6.807483196258545
    7. '_s' → logprob: -7.557483196258545
    8. '   ' → logprob: -7.557483196258545
    9. '_sum' → logprob: -7.807483196258545
    10. '<|end|>' → logprob: -7.807483196258545

Token 56: ' ' (ID: 220)
  Prédit: ' total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.06951194256544113
    2. 'total' → logprob: -3.194511890411377
    3. ' sum' → logprob: -4.069511890411377
    4. ' ' → logprob: -5.694511890411377
    5. ' values' → logprob: -6.069511890411377
    6. ' K' → logprob: -6.569511890411377
    7. 'sum' → logprob: -7.444511890411377
    8. '2' → logprob: -7.569511890411377
    9. '0' → logprob: -8.069512367248535
    10. ' max' → logprob: -8.319512367248535

Token 57: '2' (ID: 17)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.29607313871383667
    2. ' total' → logprob: -1.5460731983184814
    3. 'sum' → logprob: -4.046072959899902
    4. '2' → logprob: -4.296072959899902
    5. ' sum' → logprob: -5.046072959899902
    6. ' ' → logprob: -6.296072959899902
    7. '   ' → logprob: -6.421072959899902
    8. ' K' → logprob: -7.421072959899902
    9. '0' → logprob: -7.796072959899902
    10. 'K' → logprob: -8.296072959899902

Token 58: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.016044575721025467
    2. '*' → logprob: -4.141044616699219
    3. ' ' → logprob: -12.016044616699219
    4. ' ' → logprob: -13.141044616699219
    5. ' **' → logprob: -14.016044616699219
    6. '**' → logprob: -14.766044616699219
    7. '*object' → logprob: -15.016044616699219
    8. '0' → logprob: -15.391044616699219
    9. '.' → logprob: -16.01604461669922
    10. ')' → logprob: -16.26604461669922

Token 59: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.1799217015504837
    2. ' total' → logprob: -1.8049217462539673
    3. 'sum' → logprob: -9.304922103881836
    4. '   ' → logprob: -10.304922103881836
    5. ' ' → logprob: -10.679922103881836
    6. ' sum' → logprob: -11.179922103881836
    7. ' K' → logprob: -12.929922103881836
    8. '  ' → logprob: -12.929922103881836
    9. '	total' → logprob: -12.929922103881836
    10. 'values' → logprob: -13.054922103881836

Token 60: '_pairs' (ID: 90005)
  Prédit: '_pairs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pairs' → logprob: -0.07907363772392273
    2. '_sum' → logprob: -3.329073667526245
    3. '_' → logprob: -3.704073667526245
    4. '_values' → logprob: -4.704073429107666
    5. ' _' → logprob: -5.704073429107666
    6. '_s' → logprob: -6.954073429107666
    7. '_c' → logprob: -6.954073429107666
    8. '_total' → logprob: -7.204073429107666
    9. 'sum' → logprob: -8.579073905944824
    10. ' ' → logprob: -9.079073905944824

Token 61: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.003701735520735383
    2. '_' → logprob: -6.128701686859131
    3. '_s' → logprob: -7.253701686859131
    4. 'sum' → logprob: -8.128702163696289
    5. '_pairs' → logprob: -8.628702163696289
    6. 's' → logprob: -9.253702163696289
    7. ' _' → logprob: -9.878702163696289
    8. '_values' → logprob: -10.003702163696289
    9. '_total' → logprob: -10.128702163696289
    10. '   ' → logprob: -10.503702163696289

Token 62: ' /' (ID: 820)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2085655778646469
    2. '
' → logprob: -1.833565592765808
    3. '<|end|>' → logprob: -4.583565711975098
    4. '    
' → logprob: -4.833565711975098
    5. ' ' → logprob: -5.333565711975098
    6. '\n' → logprob: -6.708565711975098
    7. ' 
' → logprob: -7.083565711975098
    8. ')' → logprob: -7.208565711975098
    9. '  
' → logprob: -8.083565711975098
    10. '  ' → logprob: -8.208565711975098

Token 63: ' (' (ID: 350)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.16975818574428558
    2. 'len' → logprob: -2.7947580814361572
    3. '(len' → logprob: -2.9197580814361572
    4. '(' → logprob: -3.7947580814361572
    5. '(K' → logprob: -5.169758319854736
    6. ' K' → logprob: -5.544758319854736
    7. 'N' → logprob: -6.169758319854736
    8. 'n' → logprob: -6.544758319854736
    9. '(n' → logprob: -6.669758319854736
    10. ' (' → logprob: -6.794758319854736

Token 64: 'K' (ID: 42)
  Prédit: 'K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.3462373614311218
    2. '(K' → logprob: -2.2212374210357666
    3. '(len' → logprob: -2.7212374210357666
    4. 'len' → logprob: -2.7212374210357666
    5. '(' → logprob: -3.3462374210357666
    6. ' K' → logprob: -5.0962371826171875
    7. ' (' → logprob: -5.3462371826171875
    8. '   ' → logprob: -6.3462371826171875
    9. ' len' → logprob: -6.4712371826171875
    10. 'n' → logprob: -7.5962371826171875

Token 65: ' *' (ID: 425)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20264266431331635
    2. ' )' → logprob: -1.7026426792144775
    3. '-' → logprob: -7.827642440795898
    4. ' -' → logprob: -8.452642440795898
    5. '+' → logprob: -8.577642440795898
    6. ' ' → logprob: -8.702642440795898
    7. ' +' → logprob: -10.077642440795898
    8. '*' → logprob: -10.577642440795898
    9. '))' → logprob: -10.577642440795898
    10. '   ' → logprob: -11.077642440795898

Token 66: ' (' (ID: 350)
  Prédit: '(K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(K' → logprob: -0.3346930742263794
    2. '(' → logprob: -1.3346930742263794
    3. ' (' → logprob: -4.33469295501709
    4. ')' → logprob: -5.33469295501709
    5. 'K' → logprob: -6.45969295501709
    6. ' K' → logprob: -7.58469295501709
    7. '(k' → logprob: -7.95969295501709
    8. '(
' → logprob: -8.33469295501709
    9. ' ' → logprob: -9.08469295501709
    10. ' )' → logprob: -9.20969295501709

Token 67: 'K' (ID: 42)
  Prédit: 'K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.1360512524843216
    2. '(K' → logprob: -2.2610511779785156
    3. '   ' → logprob: -4.636051177978516
    4. '(' → logprob: -4.761051177978516
    5. '-' → logprob: -6.511051177978516
    6. ' K' → logprob: -6.886051177978516
    7. ' (' → logprob: -7.386051177978516
    8. '1' → logprob: -7.761051177978516
    9. '  ' → logprob: -7.886051177978516
    10. ' ' → logprob: -8.011051177978516

Token 68: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.42989495396614075
    2. ' -' → logprob: -1.0548949241638184
    3. ' ' → logprob: -7.304894924163818
    4. '+' → logprob: -7.929894924163818
    5. '   ' → logprob: -9.929895401000977
    6. '1' → logprob: -10.179895401000977
    7. ')' → logprob: -10.304895401000977
    8. '))' → logprob: -11.679895401000977
    9. '  ' → logprob: -11.804895401000977
    10. ' +' → logprob: -12.304895401000977

Token 69: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002942287246696651
    2. '   ' → logprob: -8.62529468536377
    3. ' ' → logprob: -9.75029468536377
    4. '```' → logprob: -10.87529468536377
    5. '2' → logprob: -11.25029468536377
    6. '    ' → logprob: -12.00029468536377
    7. '  ' → logprob: -12.00029468536377
    8. ')' → logprob: -12.25029468536377
    9. '-' → logprob: -13.50029468536377
    10. '     ' → logprob: -13.81279468536377

Token 70: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06290674209594727
    2. '))' → logprob: -2.8129067420959473
    3. ' )' → logprob: -7.187906742095947
    4. ' ))' → logprob: -9.437906265258789
    5. ')))' → logprob: -9.812906265258789
    6. ')
' → logprob: -11.062906265258789
    7. ' ' → logprob: -12.312906265258789
    8. '))
' → logprob: -12.687906265258789
    9. '*' → logprob: -12.937906265258789
    10. '**' → logprob: -13.062906265258789

Token 71: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3657204210758209
    2. '   ' → logprob: -2.240720510482788
    3. '*' → logprob: -3.115720510482788
    4. ' ' → logprob: -3.240720510482788
    5. '\n' → logprob: -3.865720510482788
    6. '(' → logprob: -4.240720272064209
    7. '=' → logprob: -4.490720272064209
    8. '**' → logprob: -4.990720272064209
    9. ' *' → logprob: -4.990720272064209
    10. '
' → logprob: -5.115720272064209

Token 72: ' total' (ID: 3609)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.3371602296829224
    2. '   ' → logprob: -1.7121602296829224
    3. ')' → logprob: -1.8371602296829224
    4. ' )' → logprob: -1.9621602296829224
    5. ' =' → logprob: -2.587160110473633
    6. '2' → logprob: -3.337160110473633
    7. ' *' → logprob: -3.837160110473633
    8. '=' → logprob: -3.837160110473633
    9. ' (' → logprob: -3.962160110473633
    10. '(' → logprob: -4.087160110473633

Token 73: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.16256436705589294
    2. '_sum' → logprob: -2.162564277648926
    3. '_' → logprob: -3.412564277648926
    4. '_s' → logprob: -6.787564277648926
    5. '_pairs' → logprob: -7.287564277648926
    6. ' _' → logprob: -9.162564277648926
    7. '_value' → logprob: -10.662564277648926
    8. 's' → logprob: -11.162564277648926
    9. '_values' → logprob: -11.287564277648926
    10. 'sum' → logprob: -11.287564277648926

Token 74: 'akes' (ID: 6861)
  Prédit: 'akes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'akes' → logprob: -0.01691393181681633
    2. 'cakes' → logprob: -4.516913890838623
    3. 'sum' → logprob: -6.641913890838623
    4. 'ake' → logprob: -6.766913890838623
    5. '   ' → logprob: -6.891913890838623
    6. '_sum' → logprob: -7.266913890838623
    7. 'ak' → logprob: -7.891913890838623
    8. '_' → logprob: -8.141914367675781
    9. '```' → logprob: -8.266914367675781
    10. 'a' → logprob: -9.016914367675781

Token 75: '_sum' (ID: 29859)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.015436016954481602
    2. '=' → logprob: -4.515436172485352
    3. '_' → logprob: -5.515436172485352
    4. ' _' → logprob: -8.765436172485352
    5. ' ' → logprob: -9.390436172485352
    6. 's' → logprob: -9.765436172485352
    7. ')' → logprob: -11.140436172485352
    8. '_space' → logprob: -12.015436172485352
    9. '_=' → logprob: -12.140436172485352
    10. '_s' → logprob: -12.765436172485352

Token 76: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.001930301426909864
    2. '=' → logprob: -6.251930236816406
    3. ' =)' → logprob: -13.876930236816406
    4. ' ' → logprob: -14.876930236816406
    5. ' =
' → logprob: -16.001930236816406
    6. ')' → logprob: -16.126930236816406
    7. ' )' → logprob: -16.751930236816406
    8. ' ' → logprob: -16.876930236816406
    9. ' +=' → logprob: -17.876930236816406
    10. ' ==' → logprob: -17.876930236816406

Token 77: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8637990951538086
    2. ' (' → logprob: -0.9887990951538086
    3. '2' → logprob: -1.7387990951538086
    4. '(' → logprob: -3.4887990951538086
    5. '   ' → logprob: -10.238799095153809
    6. '((' → logprob: -11.113799095153809
    7. ' int' → logprob: -11.238799095153809
    8. '  ' → logprob: -11.238799095153809
    9. '"' → logprob: -11.363799095153809
    10. '(total' → logprob: -11.488799095153809

Token 78: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.3508308231830597
    2. '(' → logprob: -1.2258307933807373
    3. ' (' → logprob: -6.475831031799316
    4. ' ' → logprob: -7.100831031799316
    5. '   ' → logprob: -11.600831031799316
    6. '((' → logprob: -12.475831031799316
    7. '(total' → logprob: -13.850831031799316
    8. '  ' → logprob: -13.975831031799316
    9. '```' → logprob: -14.225831031799316
    10. 'total' → logprob: -14.475831031799316

Token 79: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.2519480884075165
    2. ' *' → logprob: -1.5019481182098389
    3. ' ' → logprob: -11.126948356628418
    4. '**' → logprob: -13.251948356628418
    5. ' ' → logprob: -14.251948356628418
    6. '.' → logprob: -14.376948356628418
    7. '   ' → logprob: -14.876948356628418
    8. '  ' → logprob: -15.001948356628418
    9. ' **' → logprob: -15.376948356628418
    10. '*object' → logprob: -16.1269474029541

Token 80: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.12692883610725403
    2. ' total' → logprob: -2.1269288063049316
    3. ' ' → logprob: -14.50192928314209
    4. '(total' → logprob: -16.501928329467773
    5. '   ' → logprob: -16.751928329467773
    6. '	total' → logprob: -17.001928329467773
    7. 't' → logprob: -17.251928329467773
    8. 'to' → logprob: -17.251928329467773
    9. 'tot' → logprob: -17.751928329467773
    10. ' tot' → logprob: -18.001928329467773

Token 81: '_pairs' (ID: 90005)
  Prédit: '_pairs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pairs' → logprob: -5.512236498361744e-07
    2. '_c' → logprob: -15.375000953674316
    3. '_' → logprob: -16.375
    4. '_pair' → logprob: -17.25
    5. '_parts' → logprob: -17.375
    6. ''_' → logprob: -17.5
    7. 'pairs' → logprob: -17.5
    8. '_p' → logprob: -17.75
    9. '```' → logprob: -17.875
    10. '*_' → logprob: -18.125

Token 82: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.00010890735575230792
    2. '_pairs' → logprob: -10.12510871887207
    3. '_s' → logprob: -10.25010871887207
    4. 'sum' → logprob: -11.00010871887207
    5. 's' → logprob: -11.25010871887207
    6. '_' → logprob: -13.12510871887207
    7. '_val' → logprob: -14.87510871887207
    8. ' _' → logprob: -15.00010871887207
    9. '_values' → logprob: -16.25010871887207
    10. ')_' → logprob: -16.50010871887207

Token 83: ' //' (ID: 602)
  Prédit: ' /'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.041621219366788864
    2. '/' → logprob: -3.291621208190918
    3. ' ' → logprob: -5.791621208190918
    4. '  ' → logprob: -9.291621208190918
    5. ' /(' → logprob: -9.416621208190918
    6. '<|end|>' → logprob: -9.416621208190918
    7. ' ' → logprob: -10.041621208190918
    8. ')' → logprob: -10.041621208190918
    9. '    ' → logprob: -10.291621208190918
    10. '/(' → logprob: -10.666621208190918

Token 84: ' (' (ID: 350)
  Prédit: '(K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(K' → logprob: -0.0015884159365668893
    2. '(' → logprob: -6.501588344573975
    3. ' (' → logprob: -9.876588821411133
    4. '(k' → logprob: -10.501588821411133
    5. '((' → logprob: -12.001588821411133
    6. 'K' → logprob: -14.126588821411133
    7. '   ' → logprob: -16.751588821411133
    8. '(KERN' → logprob: -17.501588821411133
    9. ' K' → logprob: -17.751588821411133
    10. '(C' → logprob: -17.876588821411133

Token 85: 'K' (ID: 42)
  Prédit: '(K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(K' → logprob: -0.2431756854057312
    2. 'K' → logprob: -1.618175745010376
    3. '(' → logprob: -4.118175506591797
    4. ' K' → logprob: -6.868175506591797
    5. ' (' → logprob: -8.243175506591797
    6. '((' → logprob: -11.868175506591797
    7. '(k' → logprob: -12.618175506591797
    8. ')' → logprob: -12.618175506591797
    9. '   ' → logprob: -12.868175506591797
    10. '(
' → logprob: -12.868175506591797

Token 86: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.5299609303474426
    2. ' *' → logprob: -0.9049609303474426
    3. '*(' → logprob: -5.029961109161377
    4. ' ' → logprob: -8.654960632324219
    5. ')' → logprob: -9.654960632324219
    6. ' *(' → logprob: -11.279960632324219
    7. ' (' → logprob: -12.154960632324219
    8. '(' → logprob: -12.154960632324219
    9. ' ' → logprob: -12.404960632324219
    10. ' )' → logprob: -13.029960632324219

Token 87: ' (' (ID: 350)
  Prédit: '(K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(K' → logprob: -0.025903455913066864
    2. ' (' → logprob: -3.7759034633636475
    3. '(' → logprob: -6.025903224945068
    4. '(k' → logprob: -9.025903701782227
    5. '   ' → logprob: -9.900903701782227
    6. '(Q' → logprob: -10.025903701782227
    7. ')' → logprob: -12.150903701782227
    8. '(KERN' → logprob: -12.400903701782227
    9. '(
' → logprob: -12.525903701782227
    10. '(int' → logprob: -13.525903701782227

Token 88: 'K' (ID: 42)
  Prédit: '(K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(K' → logprob: -0.0008833571337163448
    2. '(' → logprob: -7.12588357925415
    3. 'K' → logprob: -9.875883102416992
    4. '(
' → logprob: -11.250883102416992
    5. ' (' → logprob: -12.000883102416992
    6. '1' → logprob: -12.375883102416992
    7. ')' → logprob: -13.500883102416992
    8. '   ' → logprob: -14.375883102416992
    9. '(k' → logprob: -14.500883102416992
    10. '((' → logprob: -14.750883102416992

Token 89: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0005667338264174759
    2. ' -' → logprob: -7.5005669593811035
    3. ')' → logprob: -11.375566482543945
    4. '1' → logprob: -14.125566482543945
    5. '-)' → logprob: -14.250566482543945
    6. '))' → logprob: -14.250566482543945
    7. '−' → logprob: -16.750566482543945
    8. ')))' → logprob: -17.250566482543945
    9. '   ' → logprob: -17.500566482543945
    10. '-
' → logprob: -17.875566482543945

Token 90: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003497666330076754
    2. ' ' → logprob: -8.000349998474121
    3. ')' → logprob: -11.250349998474121
    4. '   ' → logprob: -14.375349998474121
    5. '```' → logprob: -15.500349998474121
    6. ' ' → logprob: -16.125349044799805
    7. '  ' → logprob: -16.625349044799805
    8. '

' → logprob: -16.625349044799805
    9. '<|end|>' → logprob: -16.625349044799805
    10. '۱' → logprob: -16.937849044799805

Token 91: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8550976164988242e-05
    2. ' ' → logprob: -11.250018119812012
    3. '2' → logprob: -12.500018119812012
    4. ')' → logprob: -13.875018119812012
    5. '   ' → logprob: -15.187518119812012
    6. '```' → logprob: -15.500018119812012
    7. '１' → logprob: -16.312519073486328
    8. '

' → logprob: -16.437519073486328
    9. '  ' → logprob: -16.687519073486328
    10. '۱' → logprob: -16.750019073486328

Token 92: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1269347220659256
    2. '))' → logprob: -2.126934766769409
    3. ')))' → logprob: -12.251935005187988
    4. ' )' → logprob: -14.001935005187988
    5. ')
' → logprob: -14.626935005187988
    6. ' ))' → logprob: -15.251935005187988
    7. '))
' → logprob: -15.876935005187988
    8. '   ' → logprob: -16.876934051513672
    9. ''))' → logprob: -16.876934051513672
    10. '')' → logprob: -17.126934051513672

Token 93: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6045532822608948
    2. '
' → logprob: -0.9795532822608948
    3. '    
' → logprob: -3.47955322265625
    4. '\n' → logprob: -3.97955322265625
    5. '<|end|>' → logprob: -4.47955322265625
    6. 'n' → logprob: -6.22955322265625
    7. ')' → logprob: -6.35455322265625
    8. 'values' → logprob: -6.35455322265625
    9. 'c' → logprob: -6.35455322265625
    10. '#' → logprob: -6.60455322265625

Token 94: ' print' (ID: 2123)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.542245626449585
    2. 'c' → logprob: -2.042245626449585
    3. '    
' → logprob: -2.792245626449585
    4. '   ' → logprob: -2.792245626449585
    5. 'n' → logprob: -3.292245626449585
    6. '\n' → logprob: -3.417245626449585
    7. '' → logprob: -3.667245626449585
    8. '#' → logprob: -4.042245864868164
    9. 'r' → logprob: -5.167245864868164
    10. '\' → logprob: -5.167245864868164

Token 95: '(total' (ID: 39744)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.01600280962884426
    2. '(total' → logprob: -4.266002655029297
    3. '(values' → logprob: -6.641002655029297
    4. '()' → logprob: -8.391002655029297
    5. '('' → logprob: -8.641002655029297
    6. ' (' → logprob: -10.141002655029297
    7. '(sum' → logprob: -10.141002655029297
    8. 'total' → logprob: -10.516002655029297
    9. 'values' → logprob: -12.391002655029297
    10. '("' → logprob: -12.516002655029297

Token 96: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -4.961759259458631e-06
    2. '_' → logprob: -13.000004768371582
    3. ')_' → logprob: -13.875004768371582
    4. '_pairs' → logprob: -14.250004768371582
    5. ')' → logprob: -14.875004768371582
    6. 'cakes' → logprob: -15.375004768371582
    7. '_co' → logprob: -15.875004768371582
    8. '_p' → logprob: -16.1250057220459
    9. '"_' → logprob: -17.1250057220459
    10. '_b' → logprob: -17.3750057220459

Token 97: 'akes' (ID: 6861)
  Prédit: 'akes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'akes' → logprob: -0.0028278196696192026
    2. '_' → logprob: -6.6278276443481445
    3. 'a' → logprob: -7.1278276443481445
    4. 'ak' → logprob: -8.252827644348145
    5. 'cakes' → logprob: -9.252827644348145
    6. '```' → logprob: -9.377827644348145
    7. '_sum' → logprob: -10.377827644348145
    8. '_a' → logprob: -10.502827644348145
    9. 'ake' → logprob: -10.752827644348145
    10. '_c' → logprob: -11.002827644348145

Token 98: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -4.191489642835222e-05
    2. '_s' → logprob: -10.500041961669922
    3. '_' → logprob: -11.375041961669922
    4. ')_' → logprob: -13.500041961669922
    5. ')' → logprob: -13.875041961669922
    6. ' _' → logprob: -15.750041961669922
    7. '_val' → logprob: -16.375041961669922
    8. '_)' → logprob: -16.750041961669922
    9. ''_' → logprob: -17.250041961669922
    10. 'sum' → logprob: -17.625041961669922

Token 99: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.339278580620885e-06
    2. ' )' → logprob: -13.125001907348633
    3. ')`' → logprob: -16.125001907348633
    4. '))' → logprob: -16.250001907348633
    5. '`)' → logprob: -16.875001907348633
    6. ')
' → logprob: -17.125001907348633
    7. '')' → logprob: -17.125001907348633
    8. '(' → logprob: -18.000001907348633
    9. '   ' → logprob: -19.000001907348633
    10. '()' → logprob: -19.125001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 97
Tokens correctement prédits (1ère position, stricte): 42
Tokens correctement prédits (1ère position, avec adaptation): 42
Tokens correctement prédits (top 10): 75
Précision stricte (1ère position): 43.30%
Précision adaptée (1ère position): 43.30%
Précision (top 10): 77.32%
================================================================================
