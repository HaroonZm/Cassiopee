================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:25:04
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
# Solution Python pour le problème "A + B Problem"
# L'approche :
# - Lire chaque ligne de l'entrée standard jusqu'à la fin de fichier (EOF)
# - Pour chaque ligne, extraire les deux entiers A et B
# - Calculer la somme A + B
# - Afficher la somme
# Les contraintes sont respectées car on n'a pas besoin d'aucune structure particulière, juste une lecture ligne par ligne.

import sys

def main():
    for line in sys.stdin:
        # Nettoyer la ligne pour éviter les problèmes d'espaces ou de retour à la ligne
        line = line.strip()
        if not line:
            continue
        # Extraire les deux entiers A et B
        parts = line.split()
        # On s'assure qu'on a bien deux éléments
        if len(parts) != 2:
            continue
        try:
            A = int(parts[0])
            B = int(parts[1])
        except ValueError:
            # Si la conversion échoue, on ignore la ligne
            continue
        # Calculer et afficher la somme
        print(A + B)

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#' (ID: 2)
  → Token d'amorce (pas de prédiction)

Token 1: ' Solution' (ID: 20858)
  → Token d'amorce (pas de prédiction)

Token 2: ' Python' (ID: 26534)
  → Token d'amorce (pas de prédiction)

Token 3: ' pour' (ID: 1930)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.45217034220695496
    2. '```' → logprob: -1.0771703720092773
    3. 'def' → logprob: -5.202170372009277
    4. '\' → logprob: -5.327170372009277
    5. '#' → logprob: -5.577170372009277
    6. ':def' → logprob: -6.077170372009277
    7. '\n' → logprob: -6.202170372009277
    8. '
' → logprob: -6.452170372009277
    9. '``' → logprob: -6.702170372009277
    10. ':
' → logprob: -7.452170372009277

Token 4: ' le' (ID: 505)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -1.1512655019760132
    2. 'l' → logprob: -1.4012655019760132
    3. ' ' → logprob: -2.9012656211853027
    4. ' l' → logprob: -3.0262656211853027
    5. 'la' → logprob: -3.1512656211853027
    6. ' résoudre' → logprob: -3.1512656211853027
    7. '```' → logprob: -3.5262656211853027
    8. '#' → logprob: -3.6512656211853027
    9. 'le' → logprob: -3.6512656211853027
    10. 'contin' → logprob: -3.7762656211853027

Token 5: ' problème' (ID: 35630)
  Prédit: 'pro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pro' → logprob: -0.20793600380420685
    2. ' problème' → logprob: -2.4579360485076904
    3. ' probl' → logprob: -3.8329360485076904
    4. '#' → logprob: -4.332935810089111
    5. ' prochain' → logprob: -4.957935810089111
    6. 'me' → logprob: -5.082935810089111
    7. ' ' → logprob: -5.082935810089111
    8. ' #' → logprob: -5.082935810089111
    9. ' code' → logprob: -5.332935810089111
    10. 'tri' → logprob: -5.457935810089111

Token 6: ' "' (ID: 392)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3148079216480255
    2. ' :' → logprob: -1.4398078918457031
    3. '```' → logprob: -3.939807891845703
    4. '\' → logprob: -5.564807891845703
    5. '#' → logprob: -5.689807891845703
    6. '\n' → logprob: -5.814807891845703
    7. 's' → logprob: -7.314807891845703
    8. ' ' → logprob: -7.439807891845703
    9. '.' → logprob: -8.064807891845703
    10. ':
' → logprob: -8.564807891845703

Token 7: 'A' (ID: 32)
  Prédit: 'Two'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Two' → logprob: -1.4462202787399292
    2. 'de' → logprob: -2.4462203979492188
    3. 'def' → logprob: -2.5712203979492188
    4. '"' → logprob: -2.8212203979492188
    5. '2' → logprob: -2.9462203979492188
    6. 'N' → logprob: -2.9462203979492188
    7. ' Two' → logprob: -3.0712203979492188
    8. ' des' → logprob: -3.1962203979492188
    9. 'n' → logprob: -3.3212203979492188
    10. 'two' → logprob: -3.9462203979492188

Token 8: ' +' (ID: 659)
  Prédit: '+B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+B' → logprob: -0.6145411729812622
    2. '+' → logprob: -1.2395411729812622
    3. 'BC' → logprob: -2.6145410537719727
    4. 'B' → logprob: -3.9895410537719727
    5. ' +' → logprob: -4.239541053771973
    6. ' B' → logprob: -4.364541053771973
    7. '"' → logprob: -4.989541053771973
    8. 'bc' → logprob: -5.614541053771973
    9. '+b' → logprob: -5.739541053771973
    10. ' "' → logprob: -5.864541053771973

Token 9: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.3888687789440155
    2. ' B' → logprob: -1.138868808746338
    3. ' ' → logprob: -6.638868808746338
    4. 'A' → logprob: -7.888868808746338
    5. ' A' → logprob: -8.76386833190918
    6. '#' → logprob: -9.63886833190918
    7. ' ' → logprob: -10.88886833190918
    8. 'b' → logprob: -11.76386833190918
    9. '	B' → logprob: -11.76386833190918
    10. '+B' → logprob: -11.88886833190918

Token 10: ' Problem' (ID: 26113)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.46713200211524963
    2. ')' → logprob: -1.0921319723129272
    3. '")' → logprob: -4.717132091522217
    4. '```' → logprob: -5.217132091522217
    5. '"""' → logprob: -5.342132091522217
    6. '">' → logprob: -5.967132091522217
    7. '#' → logprob: -6.092132091522217
    8. ':' → logprob: -6.092132091522217
    9. ' )' → logprob: -6.217132091522217
    10. '\' → logprob: -6.467132091522217

Token 11: '"
' (ID: 1092)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.1658399105072021
    2. '\n' → logprob: -1.1658399105072021
    3. '```' → logprob: -2.290839910507202
    4. ')' → logprob: -2.415839910507202
    5. '#' → logprob: -2.790839910507202
    6. '"""' → logprob: -3.290839910507202
    7. '"' → logprob: -3.540839910507202
    8. '
' → logprob: -4.165840148925781
    9. '\' → logprob: -4.290840148925781
    10. ' :' → logprob: -4.540840148925781

Token 12: '#' (ID: 2)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.5323173999786377
    2. '\n' → logprob: -1.4073173999786377
    3. '
' → logprob: -2.1573173999786377
    4. 'def' → logprob: -4.282317161560059
    5. 'a' → logprob: -4.407317161560059
    6. '\' → logprob: -4.532317161560059
    7. 'n' → logprob: -4.657317161560059
    8. 'print' → logprob: -6.282317161560059
    9. '``' → logprob: -6.282317161560059
    10. '#' → logprob: -6.657317161560059

Token 13: ' L' (ID: 451)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.6332610845565796
    2. 'a' → logprob: -0.8832610845565796
    3. ' ' → logprob: -3.758261203765869
    4. ' A' → logprob: -4.133261203765869
    5. 'def' → logprob: -4.508261203765869
    6. ' def' → logprob: -6.008261203765869
    7. ' ```' → logprob: -7.633261203765869
    8. 'A' → logprob: -7.883261203765869
    9. 's' → logprob: -8.258260726928711
    10. '```' → logprob: -8.258260726928711

Token 14: ''appro' (ID: 134343)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.4702315330505371
    2. '#' → logprob: -1.720231533050537
    3. 'a' → logprob: -2.595231533050537
    4. 'ine' → logprob: -3.595231533050537
    5. 'i' → logprob: -3.845231533050537
    6. 'es' → logprob: -4.095231533050537
    7. ''' → logprob: -4.720231533050537
    8. 'u' → logprob: -5.345231533050537
    9. 'igne' → logprob: -5.470231533050537
    10. 'et' → logprob: -5.845231533050537

Token 15: 'che' (ID: 926)
  Prédit: 'che'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'che' → logprob: -0.026786591857671738
    2. '#' → logprob: -4.151786804199219
    3. 'x' → logprob: -4.651786804199219
    4. 'visionnement' → logprob: -7.776786804199219
    5. ' che' → logprob: -8.901786804199219
    6. '_che' → logprob: -9.276786804199219
    7. 'ch' → logprob: -9.401786804199219
    8. 's' → logprob: -10.026786804199219
    9. 'de' → logprob: -10.276786804199219
    10. 'ches' → logprob: -10.401786804199219

Token 16: ' :
' (ID: 10039)
  Prédit: ' :'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' :' → logprob: -0.6149571537971497
    2. ':' → logprob: -0.8649571537971497
    3. ' =' → logprob: -3.989957094192505
    4. ' ' → logprob: -4.364957332611084
    5. '=' → logprob: -6.114957332611084
    6. 'est' → logprob: -6.614957332611084
    7. ' ' → logprob: -7.364957332611084
    8. ' #' → logprob: -7.614957332611084
    9. ' la' → logprob: -7.739957332611084
    10. ' est' → logprob: -7.864957332611084

Token 17: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.9183844923973083
    2. ' #' → logprob: -1.4183845520019531
    3. ' on' → logprob: -1.9183845520019531
    4. ' On' → logprob: -2.918384552001953
    5. ' addition' → logprob: -3.543384552001953
    6. 'On' → logprob: -3.918384552001953
    7. ' Ajouter' → logprob: -4.043384552001953
    8. ' ' → logprob: -4.293384552001953
    9. 'Addition' → logprob: -4.793384552001953
    10. 's' → logprob: -5.293384552001953

Token 18: ' -' (ID: 533)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.45757049322128296
    2. ' #' → logprob: -1.8325705528259277
    3. ' On' → logprob: -2.5825705528259277
    4. ' Calcul' → logprob: -3.2075705528259277
    5. ' Util' → logprob: -3.7075705528259277
    6. 'On' → logprob: -4.082570552825928
    7. ' on' → logprob: -4.707570552825928
    8. ' Ajouter' → logprob: -4.832570552825928
    9. ' Lire' → logprob: -5.332570552825928
    10. 'Calcul' → logprob: -5.457570552825928

Token 19: ' Lire' (ID: 57624)
  Prédit: ' Lire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Lire' → logprob: -0.4149765968322754
    2. 'Lire' → logprob: -2.1649765968322754
    3. ' On' → logprob: -2.9149765968322754
    4. ' Calcul' → logprob: -2.9149765968322754
    5. ' lire' → logprob: -2.9149765968322754
    6. ' Util' → logprob: -4.539976596832275
    7. ' on' → logprob: -5.414976596832275
    8. '#' → logprob: -5.539976596832275
    9. 'On' → logprob: -5.664976596832275
    10. ' Addition' → logprob: -5.789976596832275

Token 20: ' chaque' (ID: 21194)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.48568692803382874
    2. ' les' → logprob: -1.6106868982315063
    3. ' l' → logprob: -1.8606868982315063
    4. ' la' → logprob: -4.860686779022217
    5. 'l' → logprob: -5.110686779022217
    6. ' deux' → logprob: -5.110686779022217
    7. 'les' → logprob: -5.735686779022217
    8. '  ' → logprob: -5.985686779022217
    9. ' un' → logprob: -7.485686779022217
    10. ' des' → logprob: -7.610686779022217

Token 21: ' ligne' (ID: 19583)
  Prédit: ' ligne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ligne' → logprob: -0.4303370714187622
    2. 'ligne' → logprob: -2.4303369522094727
    3. 'entrée' → logprob: -2.6803369522094727
    4. 's' → logprob: -3.3053369522094727
    5. ' nombre' → logprob: -3.3053369522094727
    6. 'a' → logprob: -3.5553369522094727
    7. ' a' → logprob: -4.430336952209473
    8. '```' → logprob: -4.430336952209473
    9. 'l' → logprob: -4.930336952209473
    10. 'nombre' → logprob: -5.055336952209473

Token 22: ' de' (ID: 334)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4898993670940399
    2. ' de' → logprob: -2.2398993968963623
    3. ' ,' → logprob: -2.3648993968963623
    4. ' du' → logprob: -2.8648993968963623
    5. ' jusqu' → logprob: -3.6148993968963623
    6. ' suivante' → logprob: -3.6148993968963623
    7. ' ' → logprob: -4.614899158477783
    8. ' et' → logprob: -4.739899158477783
    9. 'du' → logprob: -4.864899158477783
    10. ' en' → logprob: -4.864899158477783

Token 23: ' l' (ID: 305)
  Prédit: ' code'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' code' → logprob: -1.0183472633361816
    2. ' l' → logprob: -1.6433472633361816
    3. ' input' → logprob: -1.6433472633361816
    4. 'l' → logprob: -2.3933472633361816
    5. 'entrée' → logprob: -2.5183472633361816
    6. 'code' → logprob: -3.5183472633361816
    7. ' entrée' → logprob: -4.143347263336182
    8. ' stdin' → logprob: -4.143347263336182
    9. 'input' → logprob: -4.643347263336182
    10. 'stdin' → logprob: -5.518347263336182

Token 24: ''entrée' (ID: 115820)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -1.2544376850128174
    2. ''entrée' → logprob: -1.3794376850128174
    3. 'input' → logprob: -1.6294376850128174
    4. 'a' → logprob: -1.6294376850128174
    5. 'e' → logprob: -3.5044376850128174
    6. 'entrée' → logprob: -5.254437446594238
    7. '')' → logprob: -5.254437446594238
    8. '#' → logprob: -5.504437446594238
    9. 'es' → logprob: -5.754437446594238
    10. ''''' → logprob: -5.879437446594238

Token 25: ' standard' (ID: 7024)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.16594298183918
    2. ' for' → logprob: -3.165942907333374
    3. ' ,' → logprob: -4.165943145751953
    4. 's' → logprob: -4.290943145751953
    5. 'for' → logprob: -4.290943145751953
    6. ' while' → logprob: -4.415943145751953
    7. 'n' → logprob: -4.665943145751953
    8. ' ' → logprob: -4.915943145751953
    9. 'import' → logprob: -5.040943145751953
    10. 'while' → logprob: -5.540943145751953

Token 26: ' jusqu' (ID: 21961)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1089839935302734
    2. ' ' → logprob: -1.7339839935302734
    3. ' for' → logprob: -2.2339839935302734
    4. ' while' → logprob: -2.8589839935302734
    5. 'for' → logprob: -2.8589839935302734
    6. 's' → logprob: -3.1089839935302734
    7. 'import' → logprob: -3.2339839935302734
    8. 'n' → logprob: -3.2339839935302734
    9. ' ,' → logprob: -3.6089839935302734
    10. '```' → logprob: -3.6089839935302734

Token 27: ''à' (ID: 33688)
  Prédit: ''à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''à' → logprob: -0.003785227658227086
    2. '’à' → logprob: -6.253785133361816
    3. ' à' → logprob: -7.503785133361816
    4. 'à' → logprob: -7.628785133361816
    5. ''au' → logprob: -7.753785133361816
    6. ''' → logprob: -8.128785133361816
    7. ''a' → logprob: -10.003785133361816
    8. ' ' → logprob: -10.753785133361816
    9. 'a' → logprob: -12.003785133361816
    10. '_' → logprob: -12.003785133361816

Token 28: ' la' (ID: 557)
  Prédit: ' EOF'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' EOF' → logprob: -0.3866526484489441
    2. ' la' → logprob: -1.3866527080535889
    3. 'EOF' → logprob: -2.886652708053589
    4. 'la' → logprob: -4.63665246963501
    5. ' ce' → logprob: -6.01165246963501
    6. ' eof' → logprob: -7.76165246963501
    7. 'l' → logprob: -8.136652946472168
    8. 'a' → logprob: -8.136652946472168
    9. '```' → logprob: -8.136652946472168
    10. 'ce' → logprob: -8.324152946472168

Token 29: ' fin' (ID: 2131)
  Prédit: ' fin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' fin' → logprob: -0.5383927226066589
    2. 'fin' → logprob: -1.5383927822113037
    3. ' EOF' → logprob: -2.5383927822113037
    4. 'f' → logprob: -3.0383927822113037
    5. 'n' → logprob: -3.5383927822113037
    6. ' ' → logprob: -4.038392543792725
    7. 'EOF' → logprob: -4.663392543792725
    8. '```' → logprob: -5.413392543792725
    9. ' ' → logprob: -6.163392543792725
    10. 'a' → logprob: -6.600892543792725

Token 30: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.5706644654273987
    2. ':' → logprob: -1.945664405822754
    3. '```' → logprob: -2.570664405822754
    4. '\' → logprob: -3.320664405822754
    5. '.' → logprob: -3.320664405822754
    6. '#' → logprob: -3.820664405822754
    7. ' des' → logprob: -4.195664405822754
    8. '-' → logprob: -4.320664405822754
    9. ' (' → logprob: -4.570664405822754
    10. 'import' → logprob: -4.695664405822754

Token 31: ' fichier' (ID: 69637)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.24975530803203583
    2. 'l' → logprob: -1.6247552633285522
    3. ' fichier' → logprob: -4.499755382537842
    4. '```' → logprob: -5.874755382537842
    5. 'la' → logprob: -6.124755382537842
    6. 'le' → logprob: -6.374755382537842
    7. 'file' → logprob: -6.749755382537842
    8. '-' → logprob: -6.874755382537842
    9. '	f' → logprob: -7.749755382537842
    10. 'entrée' → logprob: -7.749755382537842

Token 32: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.23157882690429688
    2. '```' → logprob: -1.8565788269042969
    3. 'while' → logprob: -3.731578826904297
    4. ' while' → logprob: -4.606578826904297
    5. ':
' → logprob: -5.356578826904297
    6. '.' → logprob: -5.856578826904297
    7. ',' → logprob: -6.606578826904297
    8. '``' → logprob: -6.606578826904297
    9. '
' → logprob: -6.731578826904297
    10. ' :' → logprob: -6.856578826904297

Token 33: 'EOF' (ID: 54793)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.18496602773666382
    2. ')
' → logprob: -2.4349660873413086
    3. ' )' → logprob: -3.1849660873413086
    4. ' )
' → logprob: -4.559966087341309
    5. ').' → logprob: -4.684966087341309
    6. 'EOF' → logprob: -5.059966087341309
    7. ')
' → logprob: -6.559966087341309
    8. '):' → logprob: -6.684966087341309
    9. ' EOF' → logprob: -6.684966087341309
    10. '),' → logprob: -6.809966087341309

Token 34: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007165000773966312
    2. ' )' → logprob: -5.63216495513916
    3. ')
' → logprob: -6.00716495513916
    4. ').' → logprob: -7.13216495513916
    5. '):' → logprob: -9.25716495513916
    6. ' )
' → logprob: -10.00716495513916
    7. '#' → logprob: -10.13216495513916
    8. ')
' → logprob: -10.63216495513916
    9. '")' → logprob: -10.63216495513916
    10. ')

' → logprob: -11.13216495513916

Token 35: '#' (ID: 2)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.6550952792167664
    2. ':' → logprob: -1.5300953388214111
    3. '```' → logprob: -2.280095338821411
    4. '#' → logprob: -3.655095338821411
    5. '\' → logprob: -3.655095338821411
    6. '
' → logprob: -3.655095338821411
    7. '\n' → logprob: -3.780095338821411
    8. 'n' → logprob: -4.155095100402832
    9. 'import' → logprob: -4.280095100402832
    10. ' while' → logprob: -4.280095100402832

Token 36: ' -' (ID: 533)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.17573393881320953
    2. ' while' → logprob: -2.675734043121338
    3. '```' → logprob: -3.175734043121338
    4. '
' → logprob: -3.925734043121338
    5. 'import' → logprob: -4.300734043121338
    6. ':' → logprob: -4.675734043121338
    7. 'for' → logprob: -6.050734043121338
    8. '``' → logprob: -6.925734043121338
    9. ':
' → logprob: -7.175734043121338
    10. 'try' → logprob: -7.300734043121338

Token 37: ' Pour' (ID: 13931)
  Prédit: ' effectuer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' effectuer' → logprob: -1.380864143371582
    2. ' try' → logprob: -1.880864143371582
    3. ' continuer' → logprob: -1.880864143371582
    4. ' while' → logprob: -2.005864143371582
    5. ' traiter' → logprob: -2.005864143371582
    6. ' calcul' → logprob: -3.130864143371582
    7. ' essayer' → logprob: -3.505864143371582
    8. ' faire' → logprob: -4.255864143371582
    9. ' for' → logprob: -4.380864143371582
    10. ' ex' → logprob: -4.630864143371582

Token 38: ' chaque' (ID: 21194)
  Prédit: ' chaque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.007058472838252783
    2. ' each' → logprob: -5.382058620452881
    3. ' ' → logprob: -7.257058620452881
    4. ' calcul' → logprob: -8.007058143615723
    5. ' chacune' → logprob: -8.132058143615723
    6. ' cha' → logprob: -8.632058143615723
    7. 'cha' → logprob: -9.132058143615723
    8. ' Chaque' → logprob: -9.257058143615723
    9. ' lire' → logprob: -9.382058143615723
    10. 'Chaque' → logprob: -9.382058143615723

Token 39: ' ligne' (ID: 19583)
  Prédit: ' ligne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ligne' → logprob: -0.03250105679035187
    2. 'ligne' → logprob: -3.907500982284546
    3. ' line' → logprob: -5.157501220703125
    4. ' ' → logprob: -5.782501220703125
    5. ' a' → logprob: -6.907501220703125
    6. 'a' → logprob: -8.032501220703125
    7. 'line' → logprob: -8.032501220703125
    8. 'l' → logprob: -8.532501220703125
    9. ' lignes' → logprob: -8.907501220703125
    10. 'entrée' → logprob: -8.907501220703125

Token 40: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1053076833486557
    2. ':' → logprob: -2.6053075790405273
    3. ' ,' → logprob: -4.105307579040527
    4. ' :' → logprob: -5.480307579040527
    5. ' ' → logprob: -5.730307579040527
    6. '   ' → logprob: -7.230307579040527
    7. ':
' → logprob: -7.605307579040527
    8. '#' → logprob: -8.730307579040527
    9. '.' → logprob: -9.480307579040527
    10. '  ' → logprob: -9.605307579040527

Token 41: ' extra' (ID: 5018)
  Prédit: ' effectuer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' effectuer' → logprob: -0.135475292801857
    2. ' calcul' → logprob: -3.1354753971099854
    3. ' faire' → logprob: -3.5104753971099854
    4. ' continuer' → logprob: -4.385475158691406
    5. ' lire' → logprob: -4.510475158691406
    6. ' addition' → logprob: -4.885475158691406
    7. ' ajouter' → logprob: -5.385475158691406
    8. ' on' → logprob: -5.385475158691406
    9. ' effect' → logprob: -6.135475158691406
    10. ' afficher' → logprob: -6.510475158691406

Token 42: 'ire' (ID: 594)
  Prédit: 'ire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ire' → logprob: -0.27589401602745056
    2. 'ct' → logprob: -1.650894045829773
    3. 'r' → logprob: -4.6508941650390625
    4. 'm' → logprob: -4.7758941650390625
    5. 'cter' → logprob: -5.1508941650390625
    6. 'i' → logprob: -5.2758941650390625
    7. 'c' → logprob: -5.6508941650390625
    8. '   ' → logprob: -6.0258941650390625
    9. '```' → logprob: -6.4008941650390625
    10. 'uire' → logprob: -6.7758941650390625

Token 43: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.7126561999320984
    2. 'les' → logprob: -0.8376561999320984
    3. 'a' → logprob: -2.962656259536743
    4. 'l' → logprob: -4.962656021118164
    5. ' a' → logprob: -5.712656021118164
    6. ' l' → logprob: -5.837656021118164
    7. 'A' → logprob: -5.962656021118164
    8. 's' → logprob: -6.087656021118164
    9. ' deux' → logprob: -6.712656021118164
    10. 'le' → logprob: -6.837656021118164

Token 44: ' deux' (ID: 10301)
  Prédit: ' nombres'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombres' → logprob: -0.050940997898578644
    2. ' nombre' → logprob: -4.425940990447998
    3. 'de' → logprob: -4.675940990447998
    4. ' deux' → logprob: -4.800940990447998
    5. ' ent' → logprob: -5.675940990447998
    6. 's' → logprob: -5.925940990447998
    7. ' valeurs' → logprob: -6.175940990447998
    8. 'nombre' → logprob: -6.175940990447998
    9. 'a' → logprob: -6.300940990447998
    10. ' chiffres' → logprob: -6.300940990447998

Token 45: ' ent' (ID: 1121)
  Prédit: ' nombres'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombres' → logprob: -0.04297007992863655
    2. ' ent' → logprob: -3.2929701805114746
    3. 'ent' → logprob: -6.042970180511475
    4. 'nombre' → logprob: -7.042970180511475
    5. 'n' → logprob: -7.167970180511475
    6. ' nombre' → logprob: -7.667970180511475
    7. ' integers' → logprob: -9.417969703674316
    8. ' ' → logprob: -9.542969703674316
    9. ' valeurs' → logprob: -9.917969703674316
    10. ' chiffres' → logprob: -10.042969703674316

Token 46: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.043393637984991074
    2. 'i' → logprob: -3.168393611907959
    3. 'ières' → logprob: -8.043394088745117
    4. 'ié' → logprob: -10.168394088745117
    5. ' i' → logprob: -10.793394088745117
    6. 'ier' → logprob: -12.168394088745117
    7. '```' → logprob: -13.043394088745117
    8. '	i' → logprob: -13.543394088745117
    9. '_i' → logprob: -13.793394088745117
    10. 'ers' → logprob: -13.918394088745117

Token 47: ' A' (ID: 355)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.43282803893089294
    2. ' a' → logprob: -1.4328280687332153
    3. ',' → logprob: -2.432827949523926
    4. ' A' → logprob: -4.307827949523926
    5. 'A' → logprob: -5.432827949523926
    6. ' ,' → logprob: -5.807827949523926
    7. ' ' → logprob: -6.307827949523926
    8. 'i' → logprob: -7.682827949523926
    9. ' (' → logprob: -7.807827949523926
    10. 's' → logprob: -7.807827949523926

Token 48: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03357631713151932
    2. ' ,' → logprob: -3.908576250076294
    3. ' et' → logprob: -4.658576488494873
    4. ' ' → logprob: -6.033576488494873
    5. 'et' → logprob: -7.158576488494873
    6. ' and' → logprob: -8.533576011657715
    7. '  ' → logprob: -11.158576011657715
    8. ' и' → logprob: -11.158576011657715
    9. 'e' → logprob: -11.783576011657715
    10. '<|end|>' → logprob: -11.783576011657715

Token 49: ' B' (ID: 418)
  Prédit: ' B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' B' → logprob: -0.061976756900548935
    2. 'B' → logprob: -2.811976671218872
    3. '<|end|>' → logprob: -12.436976432800293
    4. ' ' → logprob: -13.061976432800293
    5. ' ' → logprob: -13.686976432800293
    6. '>B' → logprob: -14.186976432800293
    7. '<B' → logprob: -14.936976432800293
    8. '  ' → logprob: -15.436976432800293
    9. '	B' → logprob: -15.561976432800293
    10. '<|end|>' → logprob: -15.936976432800293

Token 50: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5304244756698608
    2. '#' → logprob: -2.1554245948791504
    3. 'for' → logprob: -2.4054245948791504
    4. '```' → logprob: -2.7804245948791504
    5. 'while' → logprob: -3.4054245948791504
    6. ' for' → logprob: -3.7804245948791504
    7. ' ' → logprob: -3.9054245948791504
    8. '
' → logprob: -4.15542459487915
    9. ' ,' → logprob: -5.03042459487915
    10. ',
' → logprob: -5.03042459487915

Token 51: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.24627307057380676
    2. ',' → logprob: -2.6212730407714844
    3. '```' → logprob: -2.8712730407714844
    4. 'for' → logprob: -3.2462730407714844
    5. ' for' → logprob: -4.496273040771484
    6. ':' → logprob: -4.746273040771484
    7. '\' → logprob: -5.121273040771484
    8. ' ' → logprob: -5.621273040771484
    9. '
' → logprob: -5.621273040771484
    10. ' #' → logprob: -5.871273040771484

Token 52: ' -' (ID: 533)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.25275057554244995
    2. ' for' → logprob: -2.1277506351470947
    3. '#' → logprob: -3.1277506351470947
    4. 'while' → logprob: -3.8777506351470947
    5. '```' → logprob: -4.127750396728516
    6. ',' → logprob: -5.127750396728516
    7. 'import' → logprob: -5.377750396728516
    8. ' #' → logprob: -5.877750396728516
    9. ' while' → logprob: -6.002750396728516
    10. ' ' → logprob: -6.377750396728516

Token 53: ' Calcul' (ID: 57243)
  Prédit: ' calcul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' calcul' → logprob: -0.1490480899810791
    2. ' afficher' → logprob: -2.649048089981079
    3. ' addition' → logprob: -3.774048089981079
    4. ' print' → logprob: -4.3990478515625
    5. ' effectuer' → logprob: -4.8990478515625
    6. '#' → logprob: -5.5240478515625
    7. 'aff' → logprob: -5.5240478515625
    8. 'calcul' → logprob: -6.1490478515625
    9. ' impr' → logprob: -6.2740478515625
    10. ' calc' → logprob: -6.2740478515625

Token 54: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.0001596771035110578
    2. '#' → logprob: -9.25015926361084
    3. 'e' → logprob: -9.87515926361084
    4. 'é' → logprob: -13.12515926361084
    5. ' er' → logprob: -13.25015926361084
    6. '```' → logprob: -13.62515926361084
    7. 'ate' → logprob: -14.12515926361084
    8. '­er' → logprob: -14.37515926361084
    9. 'uler' → logprob: -14.62515926361084
    10. 'ter' → logprob: -14.62515926361084

Token 55: ' la' (ID: 557)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6066965460777283
    2. ' la' → logprob: -1.356696605682373
    3. ' leur' → logprob: -2.356696605682373
    4. ' et' → logprob: -2.981696605682373
    5. ' l' → logprob: -3.856696605682373
    6. 'leur' → logprob: -4.106696605682373
    7. 'la' → logprob: -5.981696605682373
    8. 's' → logprob: -6.106696605682373
    9. ' their' → logprob: -6.481696605682373
    10. 'l' → logprob: -6.731696605682373

Token 56: ' somme' (ID: 64484)
  Prédit: ' somme'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' somme' → logprob: -0.11784215271472931
    2. 's' → logprob: -2.242842197418213
    3. ' som' → logprob: -5.867842197418213
    4. ' ' → logprob: -6.617842197418213
    5. ' sum' → logprob: -7.867842197418213
    6. 'som' → logprob: -9.367841720581055
    7. 'sum' → logprob: -9.617841720581055
    8. ' soma' → logprob: -9.992841720581055
    9. ' s' → logprob: -10.242841720581055
    10. ' somm' → logprob: -10.617841720581055

Token 57: ' A' (ID: 355)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9018223881721497
    2. ',' → logprob: -1.7768223285675049
    3. ' =' → logprob: -2.526822328567505
    4. '.' → logprob: -2.651822328567505
    5. '\' → logprob: -3.026822328567505
    6. ' (' → logprob: -3.651822328567505
    7. '=' → logprob: -4.026822566986084
    8. '```' → logprob: -4.151822566986084
    9. 's' → logprob: -4.276822566986084
    10. ' A' → logprob: -4.276822566986084

Token 58: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.34869280457496643
    2. ' +' → logprob: -1.223692774772644
    3. ' ' → logprob: -8.473692893981934
    4. ' plus' → logprob: -10.973692893981934
    5. ' ' → logprob: -12.223692893981934
    6. '+B' → logprob: -13.098692893981934
    7. '+b' → logprob: -13.348692893981934
    8. ')' → logprob: -13.348692893981934
    9. '<|end|>' → logprob: -13.473692893981934
    10. ' ,' → logprob: -13.848692893981934

Token 59: ' B' (ID: 418)
  Prédit: ' B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' B' → logprob: -0.07047562301158905
    2. 'B' → logprob: -2.6954755783081055
    3. ' ' → logprob: -7.5704755783081055
    4. ' ' → logprob: -11.195475578308105
    5. '  ' → logprob: -12.695475578308105
    6. '1' → logprob: -13.820475578308105
    7. '	B' → logprob: -14.195475578308105
    8. '```' → logprob: -14.320475578308105
    9. '_B' → logprob: -14.695475578308105
    10. '=B' → logprob: -14.757975578308105

Token 60: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5251132845878601
    2. 'while' → logprob: -1.7751133441925049
    3. '\n' → logprob: -2.525113344192505
    4. '```' → logprob: -2.650113344192505
    5. '\' → logprob: -3.525113344192505
    6. 'for' → logprob: -3.650113344192505
    7. '#' → logprob: -4.025113105773926
    8. 'import' → logprob: -5.775113105773926
    9. '
' → logprob: -6.150113105773926
    10. '' → logprob: -6.275113105773926

Token 61: '#' (ID: 2)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.49561887979507446
    2. '\n' → logprob: -1.4956188201904297
    3. 'while' → logprob: -2.7456188201904297
    4. '
' → logprob: -2.7456188201904297
    5. 'import' → logprob: -4.49561882019043
    6. '\' → logprob: -4.49561882019043
    7. 'for' → logprob: -4.74561882019043
    8. '``' → logprob: -5.87061882019043
    9. '#' → logprob: -6.12061882019043
    10. 'n' → logprob: -6.74561882019043

Token 62: ' -' (ID: 533)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.3671444356441498
    2. '```' → logprob: -1.6171444654464722
    3. 'for' → logprob: -2.8671443462371826
    4. 'import' → logprob: -3.8671443462371826
    5. '
' → logprob: -4.117144584655762
    6. '\n' → logprob: -4.742144584655762
    7. '``' → logprob: -6.242144584655762
    8. 'n' → logprob: -6.492144584655762
    9. '\' → logprob: -6.492144584655762
    10. ' while' → logprob: -7.617144584655762

Token 63: ' Aff' (ID: 13741)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.05258563533425331
    2. ' afficher' → logprob: -4.052585601806641
    3. ' impr' → logprob: -4.177585601806641
    4. 'print' → logprob: -4.177585601806641
    5. 'Afficher' → logprob: -6.927585601806641
    6. ' Aff' → logprob: -6.927585601806641
    7. '#' → logprob: -7.552585601806641
    8. 'aff' → logprob: -9.17758560180664
    9. ' aff' → logprob: -9.42758560180664
    10. ' for' → logprob: -9.42758560180664

Token 64: 'icher' (ID: 13617)
  Prédit: 'icher'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'icher' → logprob: -0.010730377398431301
    2. 'ic' → logprob: -5.760730266571045
    3. 'i' → logprob: -6.010730266571045
    4. '#' → logprob: -6.135730266571045
    5. 'ichage' → logprob: -6.510730266571045
    6. 'ich' → logprob: -7.385730266571045
    7. 'iche' → logprob: -7.885730266571045
    8. 'ichier' → logprob: -9.010730743408203
    9. 'ichert' → logprob: -9.635730743408203
    10. '```' → logprob: -9.760730743408203

Token 65: ' la' (ID: 557)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.32500702142715454
    2. ' la' → logprob: -1.9500069618225098
    3. ' (' → logprob: -2.8250069618225098
    4. ' ' → logprob: -3.2000069618225098
    5. ' le' → logprob: -5.32500696182251
    6. '()' → logprob: -5.70000696182251
    7. '("' → logprob: -5.82500696182251
    8. 's' → logprob: -5.82500696182251
    9. '('' → logprob: -6.07500696182251
    10. '(sum' → logprob: -6.07500696182251

Token 66: ' somme' (ID: 64484)
  Prédit: ' résultat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' résultat' → logprob: -0.9621109962463379
    2. ' somme' → logprob: -1.212110996246338
    3. 's' → logprob: -1.462110996246338
    4. 'rés' → logprob: -3.462110996246338
    5. ' result' → logprob: -3.962110996246338
    6. ' resultat' → logprob: -4.087110996246338
    7. ' solution' → logprob: -5.462110996246338
    8. ' résult' → logprob: -5.462110996246338
    9. ' ' → logprob: -5.712110996246338
    10. ' s' → logprob: -6.337110996246338

Token 67: '
' (ID: 198)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.12976762652397156
    2. 'n' → logprob: -2.879767656326294
    3. 'while' → logprob: -4.004767417907715
    4. '
' → logprob: -4.129767417907715
    5. '\n' → logprob: -4.379767417907715
    6. 'import' → logprob: -4.379767417907715
    7. '``' → logprob: -5.754767417907715
    8. 'a' → logprob: -7.254767417907715
    9. 'i' → logprob: -7.379767417907715
    10. '\' → logprob: -7.629767417907715

Token 68: '#' (ID: 2)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.05756794661283493
    2. 'n' → logprob: -3.307567834854126
    3. '\n' → logprob: -5.182568073272705
    4. '
' → logprob: -5.432568073272705
    5. '``' → logprob: -5.432568073272705
    6. 'a' → logprob: -6.557568073272705
    7. 'import' → logprob: -6.557568073272705
    8. 'i' → logprob: -6.932568073272705
    9. '\' → logprob: -7.682568073272705
    10. 'while' → logprob: -8.057567596435547

Token 69: ' Les' (ID: 7029)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.3541184067726135
    2. 'n' → logprob: -1.7291183471679688
    3. 'while' → logprob: -2.7291183471679688
    4. 'import' → logprob: -3.4791183471679688
    5. '
' → logprob: -4.979118347167969
    6. '\n' → logprob: -5.354118347167969
    7. '``' → logprob: -5.479118347167969
    8. 'i' → logprob: -5.854118347167969
    9. 'a' → logprob: -6.354118347167969
    10. 'for' → logprob: -6.854118347167969

Token 70: ' contraintes' (ID: 167366)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.038154296576976776
    2. ' import' → logprob: -4.788154125213623
    3. ' lignes' → logprob: -5.038154125213623
    4. 'import' → logprob: -5.288154125213623
    5. '  ' → logprob: -5.413154125213623
    6. ' #' → logprob: -6.413154125213623
    7. ' entr' → logprob: -6.538154125213623
    8. ' input' → logprob: -6.913154125213623
    9. ' code' → logprob: -7.038154125213623
    10. 's' → logprob: -7.663154125213623

Token 71: ' sont' (ID: 5242)
  Prédit: ' :'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' :' → logprob: -0.5656020641326904
    2. ' ' → logprob: -1.9406020641326904
    3. 's' → logprob: -2.1906020641326904
    4. ':' → logprob: -2.8156020641326904
    5. ' de' → logprob: -3.3156020641326904
    6. ' ,' → logprob: -3.9406020641326904
    7. ',' → logprob: -4.3156023025512695
    8. ' #' → logprob: -4.9406023025512695
    9. ' sont' → logprob: -5.1906023025512695
    10. '#' → logprob: -5.3156023025512695

Token 72: ' respect' (ID: 5618)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.0615845918655396
    2. ' :' → logprob: -1.6865845918655396
    3. ' souvent' → logprob: -2.18658447265625
    4. ' généralement' → logprob: -2.18658447265625
    5. 's' → logprob: -2.93658447265625
    6. ' ' → logprob: -3.93658447265625
    7. ' strict' → logprob: -4.06158447265625
    8. ' les' → logprob: -4.18658447265625
    9. ' not' → logprob: -4.31158447265625
    10. '  ' → logprob: -4.43658447265625

Token 73: 'ées' (ID: 5161)
  Prédit: 'ées'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ées' → logprob: -0.035805054008960724
    2. 'é' → logprob: -3.4108049869537354
    3. 'ée' → logprob: -6.7858052253723145
    4. 'és' → logprob: -7.1608052253723145
    5. 'e' → logprob: -9.660804748535156
    6. 'u' → logprob: -10.035804748535156
    7. 'er' → logprob: -10.035804748535156
    8. '#' → logprob: -10.535804748535156
    9. 'ees' → logprob: -11.035804748535156
    10. 'ant' → logprob: -11.410804748535156

Token 74: ' car' (ID: 1669)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8871733546257019
    2. 'import' → logprob: -1.1371734142303467
    3. '```' → logprob: -1.5121734142303467
    4. 'while' → logprob: -4.262173175811768
    5. '\n' → logprob: -4.762173175811768
    6. 'n' → logprob: -4.762173175811768
    7. '

' → logprob: -4.887173175811768
    8. ':' → logprob: -5.262173175811768
    9. '``' → logprob: -7.262173175811768
    10. 'def' → logprob: -7.637173175811768

Token 75: ' on' (ID: 402)
  Prédit: ' le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.9892049431800842
    2. ' la' → logprob: -1.3642048835754395
    3. ' on' → logprob: -2.1142048835754395
    4. ' les' → logprob: -2.1142048835754395
    5. ' chaque' → logprob: -3.1142048835754395
    6. ' nous' → logprob: -3.2392048835754395
    7. ' l' → logprob: -3.8642048835754395
    8. ' the' → logprob: -5.2392048835754395
    9. ' we' → logprob: -5.7392048835754395
    10. 'le' → logprob: -5.7392048835754395

Token 76: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -1.0374969244003296
    2. ' peut' → logprob: -1.4124969244003296
    3. ' lit' → logprob: -2.037497043609619
    4. ' continue' → logprob: -3.162497043609619
    5. ' utilise' → logprob: -3.287497043609619
    6. ' traite' → logprob: -3.287497043609619
    7. 'n' → logprob: -3.412497043609619
    8. ' ' → logprob: -3.787497043609619
    9. ' respecte' → logprob: -3.787497043609619
    10. ' g' → logprob: -4.162497043609619

Token 77: ''a' (ID: 10443)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.06220945343375206
    2. ' '' → logprob: -3.812209367752075
    3. ''a' → logprob: -4.312209606170654
    4. ' e' → logprob: -4.812209606170654
    5. 'a' → logprob: -5.437209606170654
    6. ''' → logprob: -5.812209606170654
    7. ''util' → logprob: -6.187209606170654
    8. ' peut' → logprob: -6.312209606170654
    9. ' a' → logprob: -6.562209606170654
    10. ''oubl' → logprob: -7.562209606170654

Token 78: ' pas' (ID: 2173)
  Prédit: ' pas'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pas' → logprob: -0.08114445954561234
    2. 'pas' → logprob: -2.9561445713043213
    3. ' a' → logprob: -5.206144332885742
    4. 'a' → logprob: -5.456144332885742
    5. 't' → logprob: -5.956144332885742
    6. ' peut' → logprob: -6.331144332885742
    7. 'e' → logprob: -6.831144332885742
    8. ' ' → logprob: -6.956144332885742
    9. ' jamais' → logprob: -7.081144332885742
    10. ' aucun' → logprob: -7.081144332885742

Token 79: ' besoin' (ID: 27703)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.7744656801223755
    2. ' ' → logprob: -1.1494656801223755
    3. ' besoin' → logprob: -2.024465560913086
    4. ' d' → logprob: -3.399465560913086
    5. ' à' → logprob: -4.274465560913086
    6. 'de' → logprob: -4.899465560913086
    7. ' plus' → logprob: -5.024465560913086
    8. ' pas' → logprob: -5.399465560913086
    9. 'd' → logprob: -5.649465560913086
    10. ' limite' → logprob: -6.149465560913086

Token 80: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.261552631855011
    2. ' de' → logprob: -1.5115525722503662
    3. 'd' → logprob: -4.761552810668945
    4. 'de' → logprob: -7.136552810668945
    5. ' ' → logprob: -8.761552810668945
    6. '_de' → logprob: -11.011552810668945
    7. ' of' → logprob: -11.261552810668945
    8. ' des' → logprob: -11.761552810668945
    9. '_d' → logprob: -11.761552810668945
    10. '_' → logprob: -12.636552810668945

Token 81: ''' (ID: 6)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.035557158291339874
    2. 'u' → logprob: -4.410557270050049
    3. ''u' → logprob: -5.160557270050049
    4. ''' → logprob: -5.410557270050049
    5. ''utiliser' → logprob: -5.535557270050049
    6. 'é' → logprob: -6.785557270050049
    7. ''effect' → logprob: -6.785557270050049
    8. ''é' → logprob: -6.785557270050049
    9. ''un' → logprob: -7.535557270050049
    10. ''import' → logprob: -7.910557270050049

Token 82: 'auc' (ID: 11816)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.28582823276519775
    2. ''utiliser' → logprob: -2.285828113555908
    3. 'a' → logprob: -2.910828113555908
    4. 'u' → logprob: -4.285828113555908
    5. 'import' → logprob: -4.535828113555908
    6. ''import' → logprob: -4.785828113555908
    7. 'aller' → logprob: -4.910828113555908
    8. 'é' → logprob: -5.035828113555908
    9. ''att' → logprob: -5.160828113555908
    10. 'all' → logprob: -5.160828113555908

Token 83: 'une' (ID: 2561)
  Prédit: 'un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'un' → logprob: -0.22773513197898865
    2. 'une' → logprob: -1.727735161781311
    3. 'u' → logprob: -3.7277350425720215
    4. 'e' → logprob: -7.1027350425720215
    5. 'ún' → logprob: -8.35273551940918
    6. '#' → logprob: -8.35273551940918
    7. '```' → logprob: -9.41523551940918
    8. 'ue' → logprob: -9.54023551940918
    9. 'unes' → logprob: -9.97773551940918
    10. 'uns' → logprob: -10.54023551940918

Token 84: ' structure' (ID: 8866)
  Prédit: ' entr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' entr' → logprob: -0.6150326728820801
    2. ' entrée' → logprob: -1.49003267288208
    3. ' import' → logprob: -2.36503267288208
    4. ' input' → logprob: -2.99003267288208
    5. 'entrée' → logprob: -3.36503267288208
    6. ' bibliothèque' → logprob: -4.24003267288208
    7. ' variable' → logprob: -5.36503267288208
    8. 'entr' → logprob: -5.61503267288208
    9. 'import' → logprob: -5.74003267288208
    10. ' limite' → logprob: -5.99003267288208

Token 85: ' particulière' (ID: 123511)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6133710741996765
    2. ' de' → logprob: -2.1133711338043213
    3. 'import' → logprob: -2.3633711338043213
    4. 'n' → logprob: -2.4883711338043213
    5. ',' → logprob: -3.8633711338043213
    6. '.' → logprob: -4.113370895385742
    7. ' ' → logprob: -4.363370895385742
    8. ' d' → logprob: -4.363370895385742
    9. ' s' → logprob: -4.738370895385742
    10. ' 
' → logprob: -4.863370895385742

Token 86: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.063251793384552
    2. '

' → logprob: -3.6882517337799072
    3. '```' → logprob: -3.8132517337799072
    4. 'import' → logprob: -5.188251972198486
    5. '\n' → logprob: -5.313251972198486
    6. 'n' → logprob: -5.813251972198486
    7. '
 
' → logprob: -8.688251495361328
    8. '``' → logprob: -8.813251495361328
    9. '
' → logprob: -9.688251495361328
    10. '


' → logprob: -9.688251495361328

Token 87: ' juste' (ID: 31553)
  Prédit: ' et'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' et' → logprob: -1.0024538040161133
    2. ' juste' → logprob: -1.7524538040161133
    3. ' simplement' → logprob: -2.0024538040161133
    4. ' on' → logprob: -2.6274538040161133
    5. ' while' → logprob: -3.0024538040161133
    6. ' just' → logprob: -3.2524538040161133
    7. ' chaque' → logprob: -3.8774538040161133
    8. ' donc' → logprob: -4.002453804016113
    9. 'while' → logprob: -4.127453804016113
    10. ' ce' → logprob: -4.127453804016113

Token 88: ' une' (ID: 2463)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.3090519607067108
    2. ' d' → logprob: -2.309051990509033
    3. 'de' → logprob: -2.434051990509033
    4. 'd' → logprob: -3.059051990509033
    5. ' un' → logprob: -4.184051990509033
    6. 'une' → logprob: -5.809051990509033
    7. 'un' → logprob: -5.934051990509033
    8. ' une' → logprob: -6.184051990509033
    9. ' ' → logprob: -6.434051990509033
    10. 'l' → logprob: -6.934051990509033

Token 89: ' lecture' (ID: 31993)
  Prédit: ' boucle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' boucle' → logprob: -0.015131603926420212
    2. 'bou' → logprob: -4.89013147354126
    3. ' bou' → logprob: -5.39013147354126
    4. ' while' → logprob: -7.14013147354126
    5. ' simple' → logprob: -7.26513147354126
    6. ' loop' → logprob: -7.51513147354126
    7. 'while' → logprob: -8.640131950378418
    8. ' ligne' → logprob: -8.890131950378418
    9. ' solution' → logprob: -10.015131950378418
    10. ' ' → logprob: -10.140131950378418

Token 90: ' ligne' (ID: 19583)
  Prédit: ' en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' en' → logprob: -1.1393494606018066
    2. ' while' → logprob: -1.3893494606018066
    3. 'while' → logprob: -1.6393494606018066
    4. 'import' → logprob: -2.3893494606018066
    5. ' try' → logprob: -3.2643494606018066
    6. ' infin' → logprob: -4.139349460601807
    7. ' import' → logprob: -4.264349460601807
    8. ' continue' → logprob: -4.264349460601807
    9. '```' → logprob: -4.389349460601807
    10. 'en' → logprob: -4.639349460601807

Token 91: ' par' (ID: 686)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.5481992959976196
    2. ' par' → logprob: -1.7981992959976196
    3. 's' → logprob: -1.9231992959976196
    4. 'par' → logprob: -2.79819917678833
    5. 'import' → logprob: -3.67319917678833
    6. 'es' → logprob: -5.42319917678833
    7. ' e' → logprob: -5.79819917678833
    8. '_par' → logprob: -5.92319917678833
    9. 'def' → logprob: -6.17319917678833
    10. ' à' → logprob: -6.42319917678833

Token 92: ' ligne' (ID: 19583)
  Prédit: 'ligne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ligne' → logprob: -0.030258800834417343
    2. ' ligne' → logprob: -3.905258893966675
    3. 'l' → logprob: -4.905258655548096
    4. '-l' → logprob: -7.530258655548096
    5. '```' → logprob: -7.780258655548096
    6. 'lig' → logprob: -8.030259132385254
    7. 'lin' → logprob: -9.155259132385254
    8. 'line' → logprob: -9.280259132385254
    9. '>' → logprob: -9.655259132385254
    10. 'import' → logprob: -9.780259132385254

Token 93: '.

' (ID: 364)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.05250193923711777
    2. '

' → logprob: -3.552501916885376
    3. '```' → logprob: -4.302502155303955
    4. 'import' → logprob: -5.177502155303955
    5. '\n' → logprob: -6.302502155303955
    6. 'while' → logprob: -7.552502155303955
    7. 'n' → logprob: -7.677502155303955
    8. ':' → logprob: -8.427501678466797
    9. '``' → logprob: -9.177501678466797
    10. '
' → logprob: -10.177501678466797

Token 94: 'import' (ID: 561)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.16319094598293304
    2. 'import' → logprob: -2.6631908416748047
    3. 'while' → logprob: -2.6631908416748047
    4. '
' → logprob: -5.163190841674805
    5. '``' → logprob: -5.913190841674805
    6. 'n' → logprob: -6.538190841674805
    7. 'i' → logprob: -7.788190841674805
    8. 'for' → logprob: -8.288190841674805
    9. '\n' → logprob: -8.788190841674805
    10. ' while' → logprob: -8.913190841674805

Token 95: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -1.3856492842023727e-06
    2. 'sys' → logprob: -14.125000953674316
    3. '	sys' → logprob: -14.250000953674316
    4. '=sys' → logprob: -17.375001907348633
    5. ' ' → logprob: -17.875001907348633
    6. ' ' → logprob: -19.125001907348633
    7. ' sy' → logprob: -19.125001907348633
    8. '.sys' → logprob: -20.250001907348633
    9. '(sys' → logprob: -20.750001907348633
    10. '/sys' → logprob: -22.250001907348633

Token 96: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.07922540605068207
    2. '
' → logprob: -2.7042253017425537
    3. '

' → logprob: -4.829225540161133
    4. ' for' → logprob: -6.704225540161133
    5. '
' → logprob: -11.454225540161133
    6. '```' → logprob: -12.704225540161133
    7. '\n' → logprob: -12.829225540161133
    8. '<|end|>' → logprob: -12.954225540161133
    9. '


' → logprob: -13.204225540161133
    10. '' → logprob: -13.204225540161133

Token 97: 'def' (ID: 1314)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -4.320199877838604e-07
    2. '```' → logprob: -15.375
    3. ' for' → logprob: -16.25
    4. 'def' → logprob: -19.0
    5. 'while' → logprob: -20.625
    6. '
' → logprob: -21.25
    7. '

' → logprob: -21.5
    8. '	for' → logprob: -21.75
    9. '``' → logprob: -22.0
    10. 'try' → logprob: -22.375

Token 98: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.03368811681866646
    2. ' solve' → logprob: -3.9086880683898926
    3. ' solution' → logprob: -4.408688068389893
    4. ' a' → logprob: -8.40868854522705
    5. ' sum' → logprob: -8.78368854522705
    6. '```' → logprob: -9.15868854522705
    7. ' ' → logprob: -9.78368854522705
    8. 'main' → logprob: -9.90868854522705
    9. ' add' → logprob: -10.03368854522705
    10. ' somme' → logprob: -10.15868854522705

Token 99: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -9.746380237629637e-05
    2. ' ():' → logprob: -9.625097274780273
    3. '(' → logprob: -11.375097274780273
    4. '()' → logprob: -11.625097274780273
    5. ':' → logprob: -12.000097274780273
    6. '():
' → logprob: -12.375097274780273
    7. '(":' → logprob: -15.250097274780273
    8. '):' → logprob: -16.250097274780273
    9. ' :' → logprob: -16.875097274780273
    10. '>:' → logprob: -17.500097274780273

Token 100: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.023338066413998604
    2. ' for' → logprob: -3.7733380794525146
    3. 'for' → logprob: -9.398338317871094
    4. ' while' → logprob: -12.648338317871094
    5. '   ' → logprob: -12.898338317871094
    6. ' try' → logprob: -13.773338317871094
    7. '    
' → logprob: -14.398338317871094
    8. '    ' → logprob: -14.648338317871094
    9. ' with' → logprob: -14.773338317871094
    10. ' ' → logprob: -14.898338317871094

Token 101: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.04376864805817604
    2. ' for' → logprob: -3.2937686443328857
    3. '   ' → logprob: -5.168768882751465
    4. 'while' → logprob: -11.168768882751465
    5. ' ' → logprob: -13.043768882751465
    6. ' while' → logprob: -14.168768882751465
    7. 'import' → logprob: -14.293768882751465
    8. '  ' → logprob: -14.543768882751465
    9. 'try' → logprob: -14.918768882751465
    10. '	for' → logprob: -15.043768882751465

Token 102: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.0007923588855192065
    2. 'line' → logprob: -7.625792503356934
    3. ' ligne' → logprob: -8.875792503356934
    4. ' ' → logprob: -9.000792503356934
    5. '	line' → logprob: -10.375792503356934
    6. ' ' → logprob: -12.000792503356934
    7. 'ligne' → logprob: -13.625792503356934
    8. ' lin' → logprob: -14.125792503356934
    9. ' linha' → logprob: -14.500792503356934
    10. ' l' → logprob: -14.625792503356934

Token 103: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.00021831797494087368
    2. 'in' → logprob: -8.500218391418457
    3. ' ' → logprob: -11.875218391418457
    4. 's' → logprob: -12.375218391418457
    5. '  ' → logprob: -13.875218391418457
    6. ' ' → logprob: -14.375218391418457
    7. ' i' → logprob: -14.625218391418457
    8. '	in' → logprob: -14.750218391418457
    9. 'e' → logprob: -15.687718391418457
    10. '```' → logprob: -16.12521743774414

Token 104: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.01607331819832325
    2. 'sys' → logprob: -4.141073226928711
    3. '=sys' → logprob: -10.516073226928711
    4. '	sys' → logprob: -11.641073226928711
    5. '(sys' → logprob: -13.141073226928711
    6. ' iter' → logprob: -14.891073226928711
    7. ' in' → logprob: -15.391073226928711
    8. 's' → logprob: -16.14107322692871
    9. ' ' → logprob: -16.39107322692871
    10. 'in' → logprob: -16.39107322692871

Token 105: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.005994443781673908
    2. '.' → logprob: -5.1309943199157715
    3. '.readline' → logprob: -10.00599479675293
    4. 'stdin' → logprob: -11.63099479675293
    5. 'import' → logprob: -12.88099479675293
    6. '.stdout' → logprob: -13.25599479675293
    7. ' .' → logprob: -13.50599479675293
    8. '.argv' → logprob: -13.75599479675293
    9. '.readlines' → logprob: -13.75599479675293
    10. '(stdin' → logprob: -14.13099479675293

Token 106: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0020541429985314608
    2. '.readline' → logprob: -6.752054214477539
    3. ':
' → logprob: -8.002054214477539
    4. '):' → logprob: -8.627054214477539
    5. '.rstrip' → logprob: -9.377054214477539
    6. ' in' → logprob: -9.502054214477539
    7. '.strip' → logprob: -9.502054214477539
    8. '.readlines' → logprob: -9.752054214477539
    9. ' :' → logprob: -10.252054214477539
    10. '():' → logprob: -10.877054214477539

Token 107: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008278522291220725
    2. '    ' → logprob: -8.12582778930664
    3. ':' → logprob: -8.25082778930664
    4. '        
' → logprob: -9.12582778930664
    5. '   ' → logprob: -9.75082778930664
    6. '      ' → logprob: -10.62582778930664
    7. '        ' → logprob: -11.25082778930664
    8. '.rstrip' → logprob: -11.50082778930664
    9. '    
' → logprob: -11.62582778930664
    10. '.strip' → logprob: -12.00082778930664

Token 108: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3898383677005768
    2. ' if' → logprob: -1.6398383378982544
    3. ' line' → logprob: -2.264838457107544
    4. '   ' → logprob: -5.514838218688965
    5. ' a' → logprob: -5.639838218688965
    6. 'if' → logprob: -5.764838218688965
    7. '    ' → logprob: -5.764838218688965
    8. '        ' → logprob: -6.139838218688965
    9. ' stripped' → logprob: -6.139838218688965
    10. 'line' → logprob: -6.264838218688965

Token 109: ' Netto' (ID: 178906)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.4237552285194397
    2. ' if' → logprob: -2.298755168914795
    3. 'line' → logprob: -2.298755168914795
    4. '       ' → logprob: -2.548755168914795
    5. 'if' → logprob: -3.173755168914795
    6. ' stripped' → logprob: -4.423755168914795
    7. 'strip' → logprob: -5.298755168914795
    8. ' parts' → logprob: -6.048755168914795
    9. ' s' → logprob: -6.673755168914795
    10. 's' → logprob: -7.423755168914795

Token 110: 'yer' (ID: 14497)
  Prédit: 'yer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yer' → logprob: -0.05293676629662514
    2. 'oyer' → logprob: -3.9279367923736572
    3. 'yez' → logprob: -4.052936553955078
    4. 'u' → logprob: -5.177936553955078
    5. 'uye' → logprob: -6.052936553955078
    6. '       ' → logprob: -6.177936553955078
    7. 'yage' → logprob: -6.802936553955078
    8. 'y' → logprob: -7.052936553955078
    9. 'oy' → logprob: -7.052936553955078
    10. 'uyer' → logprob: -7.802936553955078

Token 111: ' la' (ID: 557)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9144257307052612
    2. ' line' → logprob: -1.6644257307052612
    3. 'line' → logprob: -2.164425849914551
    4. ' la' → logprob: -2.164425849914551
    5. '(line' → logprob: -2.914425849914551
    6. ' l' → logprob: -3.289425849914551
    7. '=line' → logprob: -3.289425849914551
    8. '	line' → logprob: -4.414425849914551
    9. '()' → logprob: -4.914425849914551
    10. '        ' → logprob: -5.289425849914551

Token 112: ' ligne' (ID: 19583)
  Prédit: 'ligne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ligne' → logprob: -0.35821565985679626
    2. ' ligne' → logprob: -1.4832156896591187
    3. 'line' → logprob: -2.733215570449829
    4. ' line' → logprob: -4.858215808868408
    5. 'l' → logprob: -7.108215808868408
    6. '   ' → logprob: -8.10821533203125
    7. 'chaine' → logprob: -9.73321533203125
    8. 's' → logprob: -10.35821533203125
    9. '	line' → logprob: -10.85821533203125
    10. 'entrée' → logprob: -10.98321533203125

Token 113: ' pour' (ID: 1930)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2592938542366028
    2. '       ' → logprob: -1.759293794631958
    3. '=line' → logprob: -3.259293794631958
    4. '.strip' → logprob: -4.759294033050537
    5. '=' → logprob: -4.884294033050537
    6. '.rstrip' → logprob: -7.134294033050537
    7. ',' → logprob: -8.384293556213379
    8. 'rstrip' → logprob: -8.634293556213379
    9. 'strip' → logprob: -9.634293556213379
    10. '()' → logprob: -9.759293556213379

Token 114: ' éviter' (ID: 64013)
  Prédit: ' supprimer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' supprimer' → logprob: -0.9901955127716064
    2. ' enlever' → logprob: -1.1151955127716064
    3. ' éviter' → logprob: -2.2401955127716064
    4. ' retirer' → logprob: -2.7401955127716064
    5. 'strip' → logprob: -3.9901955127716064
    6. ' s' → logprob: -4.115195274353027
    7. ' élim' → logprob: -4.365195274353027
    8. ' line' → logprob: -4.365195274353027
    9. 'rstrip' → logprob: -4.615195274353027
    10. 's' → logprob: -4.615195274353027

Token 115: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.03132656589150429
    2. 'les' → logprob: -3.9063265323638916
    3. ' l' → logprob: -4.781326770782471
    4. 's' → logprob: -7.406326770782471
    5. ' ' → logprob: -7.906326770782471
    6. '   ' → logprob: -8.656326293945312
    7. 'l' → logprob: -9.031326293945312
    8. '    ' → logprob: -9.156326293945312
    9. '\' → logprob: -9.156326293945312
    10. ' espaces' → logprob: -9.156326293945312

Token 116: ' problèmes' (ID: 49822)
  Prédit: ' espaces'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' espaces' → logprob: -0.09632023423910141
    2. 'esp' → logprob: -2.596320152282715
    3. '\n' → logprob: -5.221320152282715
    4. 'spaces' → logprob: -5.721320152282715
    5. 'es' → logprob: -5.721320152282715
    6. 'car' → logprob: -6.846320152282715
    7. ' blancs' → logprob: -6.846320152282715
    8. 's' → logprob: -6.971320152282715
    9. ' \' → logprob: -7.471320152282715
    10. '\' → logprob: -7.846320152282715

Token 117: ' d' (ID: 272)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23945635557174683
    2. ' de' → logprob: -1.8644564151763916
    3. ' d' → logprob: -3.3644564151763916
    4. 'de' → logprob: -5.2394561767578125
    5. 's' → logprob: -5.4894561767578125
    6. '   ' → logprob: -5.4894561767578125
    7. 'd' → logprob: -5.8644561767578125
    8. ' =' → logprob: -5.9894561767578125
    9. '    ' → logprob: -7.6144561767578125
    10. '.strip' → logprob: -7.7394561767578125

Token 118: ''esp' (ID: 73244)
  Prédit: ' espaces'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' espaces' → logprob: -0.7215257287025452
    2. ''esp' → logprob: -1.0965256690979004
    3. 'esp' → logprob: -1.8465256690979004
    4. ''espace' → logprob: -4.4715256690979
    5. 'es' → logprob: -5.2215256690979
    6. 'e' → logprob: -6.8465256690979
    7. '’esp' → logprob: -6.9715256690979
    8. ' espace' → logprob: -7.0965256690979
    9. ''enc' → logprob: -7.0965256690979
    10. ''' → logprob: -7.2215256690979

Token 119: 'aces' (ID: 3247)
  Prédit: 'aces'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aces' → logprob: -0.10316185653209686
    2. 'ace' → logprob: -2.7281618118286133
    3. 'acement' → logprob: -3.4781618118286133
    4. 'âce' → logprob: -7.478161811828613
    5. '```' → logprob: -7.478161811828613
    6. 'ces' → logprob: -8.853161811828613
    7. 'èces' → logprob: -8.978161811828613
    8. 'ac' → logprob: -10.228161811828613
    9. ' ace' → logprob: -10.603161811828613
    10. 'a' → logprob: -10.603161811828613

Token 120: ' ou' (ID: 2031)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.020259462296962738
    2. ' =' → logprob: -4.770259380340576
    3. '.strip' → logprob: -5.645259380340576
    4. '        ' → logprob: -6.020259380340576
    5. ',' → logprob: -6.645259380340576
    6. '    ' → logprob: -7.270259380340576
    7. '      ' → logprob: -7.520259380340576
    8. '=' → logprob: -7.770259380340576
    9. '   ' → logprob: -7.770259380340576
    10. '.rstrip' → logprob: -8.020259857177734

Token 121: ' de' (ID: 334)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.28815093636512756
    2. ' de' → logprob: -2.4131510257720947
    3. 'ret' → logprob: -2.6631510257720947
    4. 'car' → logprob: -3.5381510257720947
    5. '\n' → logprob: -3.6631510257720947
    6. 's' → logprob: -4.788150787353516
    7. '\t' → logprob: -4.913150787353516
    8. 't' → logprob: -5.663150787353516
    9. ' caractères' → logprob: -5.663150787353516
    10. 'n' → logprob: -5.788150787353516

Token 122: ' retour' (ID: 30714)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.7904613614082336
    2. 'ret' → logprob: -1.2904613018035889
    3. 's' → logprob: -2.165461301803589
    4. '\t' → logprob: -2.790461301803589
    5. 'n' → logprob: -3.165461301803589
    6. 'car' → logprob: -3.915461301803589
    7. 'newline' → logprob: -5.040461540222168
    8. 'nou' → logprob: -5.165461540222168
    9. 'tabs' → logprob: -5.665461540222168
    10. '```' → logprob: -5.790461540222168

Token 123: ' à' (ID: 1221)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.2992464303970337
    2. 'ch' → logprob: -1.9242464303970337
    3. 'char' → logprob: -2.299246311187744
    4. ' ch' → logprob: -2.424246311187744
    5. ' à' → logprob: -2.424246311187744
    6. '\n' → logprob: -2.549246311187744
    7. '  ' → logprob: -3.174246311187744
    8. '   ' → logprob: -3.174246311187744
    9. '\' → logprob: -3.549246311187744
    10. '\r' → logprob: -3.549246311187744

Token 124: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.009956062771379948
    2. 'l' → logprob: -4.759955883026123
    3. 'ligne' → logprob: -7.509955883026123
    4. ' ' → logprob: -8.009956359863281
    5. 'lal' → logprob: -9.134956359863281
    6. 'laf' → logprob: -9.759956359863281
    7. 'lac' → logprob: -10.134956359863281
    8. '```' → logprob: -10.259956359863281
    9. 'line' → logprob: -10.634956359863281
    10. '	' → logprob: -10.884956359863281

Token 125: ' ligne' (ID: 19583)
  Prédit: 'ligne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ligne' → logprob: -0.005069618113338947
    2. 'l' → logprob: -5.505069732666016
    3. 'line' → logprob: -7.630069732666016
    4. 'fin' → logprob: -8.755069732666016
    5. 'lin' → logprob: -9.505069732666016
    6. '\n' → logprob: -9.630069732666016
    7. 'la' → logprob: -9.755069732666016
    8. ' ligne' → logprob: -10.255069732666016
    9. 'lig' → logprob: -11.130069732666016
    10. '10' → logprob: -11.255069732666016

Token 126: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0016822017496451735
    2. ' =' → logprob: -7.376682281494141
    3. '.strip' → logprob: -7.876682281494141
    4. ',' → logprob: -7.876682281494141
    5. '        
' → logprob: -9.25168228149414
    6. '.rstrip' → logprob: -10.12668228149414
    7. '        ' → logprob: -10.75168228149414
    8. 'rstrip' → logprob: -11.00168228149414
    9. 'strip' → logprob: -11.12668228149414
    10. '=' → logprob: -11.12668228149414

Token 127: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00022999993234407157
    2. '        
' → logprob: -9.750229835510254
    3. ' =' → logprob: -10.000229835510254
    4. '.strip' → logprob: -10.125229835510254
    5. ',' → logprob: -10.625229835510254
    6. '.rstrip' → logprob: -11.375229835510254
    7. 'rstrip' → logprob: -11.500229835510254
    8. 'strip' → logprob: -11.875229835510254
    9. '      ' → logprob: -11.875229835510254
    10. 's' → logprob: -12.125229835510254

Token 128: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' (adapté à ' line') → logprob: -0.32339781522750854
    2. ' line' → logprob: -1.3233978748321533
    3. '       ' → logprob: -5.323397636413574
    4. 'parts' → logprob: -6.698397636413574
    5. ' parts' → logprob: -7.198397636413574
    6. 'numbers' → logprob: -7.198397636413574
    7. 'clean' → logprob: -7.573397636413574
    8. ' numbers' → logprob: -8.073397636413574
    9. 'ligne' → logprob: -8.323397636413574
    10. 'strip' → logprob: -8.448397636413574

Token 129: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6951330304145813
    2. ' =' → logprob: -0.6951330304145813
    3. '.strip' → logprob: -6.945133209228516
    4. '=line' → logprob: -6.945133209228516
    5. '.rstrip' → logprob: -10.695133209228516
    6. 'strip' → logprob: -11.570133209228516
    7. 's' → logprob: -11.570133209228516
    8. '.' → logprob: -12.320133209228516
    9. '_strip' → logprob: -13.070133209228516
    10. 'rstrip' → logprob: -13.320133209228516

Token 130: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.018150296062231064
    2. ' line' → logprob: -4.018150329589844
    3. '=line' → logprob: -15.518150329589844
    4. '	line' → logprob: -15.768150329589844
    5. '#line' → logprob: -17.768150329589844
    6. '(line' → logprob: -18.018150329589844
    7. 'ligne' → logprob: -18.518150329589844
    8. '_line' → logprob: -18.893150329589844
    9. ' ' → logprob: -18.893150329589844
    10. '[line' → logprob: -19.393150329589844

Token 131: '.strip' (ID: 40613)
  Prédit: '.strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.0017947778105735779
    2. '.rstrip' → logprob: -6.501794815063477
    3. 'strip' → logprob: -8.251794815063477
    4. '.' → logprob: -10.501794815063477
    5. 'rstrip' → logprob: -12.876794815063477
    6. ' strip' → logprob: -13.751794815063477
    7. '_strip' → logprob: -15.876794815063477
    8. '.readline' → logprob: -16.501794815063477
    9. '-strip' → logprob: -16.501794815063477
    10. '(strip' → logprob: -16.751794815063477

Token 132: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -9.849109119386412e-06
    2. '()
' → logprob: -11.875009536743164
    3. '())' → logprob: -13.125009536743164
    4. '()

' → logprob: -15.125009536743164
    5. '()`' → logprob: -15.500009536743164
    6. '(' → logprob: -15.625009536743164
    7. ')' → logprob: -16.125009536743164
    8. '()"' → logprob: -17.375009536743164
    9. '()\' → logprob: -17.625009536743164
    10. '()
' → logprob: -17.750009536743164

Token 133: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004653691779822111
    2. ' if' → logprob: -6.254653453826904
    3. 'if' → logprob: -6.254653453826904
    4. '        
' → logprob: -8.129653930664062
    5. '<|end|>' → logprob: -8.754653930664062
    6. '   ' → logprob: -8.879653930664062
    7. '
' → logprob: -9.004653930664062
    8. ',' → logprob: -10.629653930664062
    9. '  
' → logprob: -10.754653930664062
    10. '    
' → logprob: -12.004653930664062

Token 134: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.000432695698691532
    2. '       ' → logprob: -8.000432968139648
    3. ' if' → logprob: -9.250432968139648
    4. '   ' → logprob: -14.125432968139648
    5. '        
' → logprob: -15.250432968139648
    6. '	if' → logprob: -17.00043296813965
    7. 'i' → logprob: -17.00043296813965
    8. 'If' → logprob: -17.12543296813965
    9. '#' → logprob: -17.50043296813965
    10. 'try' → logprob: -18.00043296813965

Token 135: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.006151562090963125
    2. ' line' → logprob: -5.3811516761779785
    3. 'not' → logprob: -6.5061516761779785
    4. 'line' → logprob: -10.63115119934082
    5. ' ' → logprob: -11.50615119934082
    6. ' no' → logprob: -14.50615119934082
    7. ' len' → logprob: -14.63115119934082
    8. '	not' → logprob: -15.63115119934082
    9. ' ' → logprob: -15.88115119934082
    10. '	line' → logprob: -16.25615119934082

Token 136: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.02975187823176384
    2. 'line' → logprob: -3.529751777648926
    3. '	line' → logprob: -14.029751777648926
    4. ' ' → logprob: -14.904751777648926
    5. '#line' → logprob: -17.154752731323242
    6. ' ligne' → logprob: -17.279752731323242
    7. '(line' → logprob: -17.279752731323242
    8. 'Line' → logprob: -17.404752731323242
    9. '```' → logprob: -17.904752731323242
    10. ' ' → logprob: -18.029752731323242

Token 137: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.000373950315406546
    2. ':
' → logprob: -8.750373840332031
    3. ' :' → logprob: -9.250373840332031
    4. '<|end|>' → logprob: -9.375373840332031
    5. '):' → logprob: -11.125373840332031
    6. ':return' → logprob: -12.375373840332031
    7. ' or' → logprob: -12.500373840332031
    8. '<|end|>' → logprob: -12.625373840332031
    9. ':**' → logprob: -13.250373840332031
    10. '.' → logprob: -13.750373840332031

Token 138: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.016158943995833397
    2. ':' → logprob: -4.1411590576171875
    3. '       ' → logprob: -10.141159057617188
    4. ':
' → logprob: -10.516159057617188
    5. ' continue' → logprob: -11.141159057617188
    6. '          ' → logprob: -11.391159057617188
    7. ',' → logprob: -12.141159057617188
    8. ' :' → logprob: -12.516159057617188
    9. '	       ' → logprob: -12.766159057617188
    10. ' break' → logprob: -12.891159057617188

Token 139: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -1.1231669187545776
    2. ' continue' → logprob: -1.3731669187545776
    3. ' break' → logprob: -1.4981669187545776
    4. 'break' → logprob: -1.8731669187545776
    5. '           ' → logprob: -3.123167037963867
    6. '               ' → logprob: -9.373167037963867
    7. '       ' → logprob: -9.873167037963867
    8. '	continue' → logprob: -10.498167037963867
    9. '	break' → logprob: -10.498167037963867
    10. '   ' → logprob: -11.123167037963867

Token 140: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0017483653500676155
    2. '        
' → logprob: -6.626748561859131
    3. '
' → logprob: -7.876748561859131
    4. '<|end|>' → logprob: -10.376748085021973
    5. '      ' → logprob: -12.751748085021973
    6. '       
' → logprob: -13.001748085021973
    7. '            
' → logprob: -13.501748085021973
    8. '        ' → logprob: -13.876748085021973
    9. '<|end|>' → logprob: -14.376748085021973
    10. '  
' → logprob: -14.626748085021973

Token 141: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007813957636244595
    2. '        
' → logprob: -7.250781536102295
    3. '
' → logprob: -11.000781059265137
    4. '<|end|>' → logprob: -11.250781059265137
    5. '   ' → logprob: -11.625781059265137
    6. '    
' → logprob: -11.875781059265137
    7. '  
' → logprob: -12.500781059265137
    8. '      ' → logprob: -12.625781059265137
    9. ',' → logprob: -12.750781059265137
    10. ' 
' → logprob: -12.875781059265137

Token 142: ' #' (ID: 1069)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5917380452156067
    2. 'A' → logprob: -0.8417380452156067
    3. '       ' → logprob: -4.716738224029541
    4. 'parts' → logprob: -5.216738224029541
    5. ' A' → logprob: -7.466738224029541
    6. ' a' → logprob: -7.841738224029541
    7. ' parts' → logprob: -8.591737747192383
    8. 'tokens' → logprob: -9.216737747192383
    9. 'numbers' → logprob: -10.716737747192383
    10. 'nums' → logprob: -11.466737747192383

Token 143: ' Extra' (ID: 31621)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.6474844217300415
    2. 'a' → logprob: -1.1474844217300415
    3. 'parts' → logprob: -1.8974844217300415
    4. ' parts' → logprob: -5.772484302520752
    5. 'try' → logprob: -5.897484302520752
    6. 'numbers' → logprob: -6.897484302520752
    7. ' A' → logprob: -7.272484302520752
    8. 'nums' → logprob: -7.522484302520752
    9. '#' → logprob: -7.647484302520752
    10. 'tokens' → logprob: -7.897484302520752

Token 144: 'ire' (ID: 594)
  Prédit: 'ct'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ct' → logprob: -0.7806426286697388
    2. 'ire' → logprob: -0.7806426286697388
    3. '   ' → logprob: -3.780642509460449
    4. '       ' → logprob: -4.280642509460449
    5. 'cter' → logprob: -4.280642509460449
    6. 'er' → logprob: -4.655642509460449
    7. 'irer' → logprob: -5.405642509460449
    8. '#' → logprob: -5.530642509460449
    9. 'r' → logprob: -6.030642509460449
    10. 're' → logprob: -6.280642509460449

Token 145: ' les' (ID: 1341)
  Prédit: ' A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -1.2015002965927124
    2. 'A' → logprob: -1.3265002965927124
    3. ' a' → logprob: -1.4515002965927124
    4. 'a' → logprob: -1.7015002965927124
    5. ' les' → logprob: -4.451500415802002
    6. ' parts' → logprob: -6.326500415802002
    7. 's' → logprob: -7.201500415802002
    8. '_a' → logprob: -7.826500415802002
    9. 'les' → logprob: -7.951500415802002
    10. 'tokens' → logprob: -8.076499938964844

Token 146: ' deux' (ID: 10301)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.7783527374267578
    2. ' A' → logprob: -1.2783527374267578
    3. 'a' → logprob: -1.9033527374267578
    4. ' nombres' → logprob: -3.028352737426758
    5. ' a' → logprob: -3.903352737426758
    6. 'de' → logprob: -4.278352737426758
    7. 'n' → logprob: -4.903352737426758
    8. ' ent' → logprob: -5.028352737426758
    9. ' parts' → logprob: -5.278352737426758
    10. 'ent' → logprob: -5.278352737426758

Token 147: ' ent' (ID: 1121)
  Prédit: ' nombres'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombres' → logprob: -0.05125725641846657
    2. 'ent' → logprob: -3.801257371902466
    3. ' ent' → logprob: -3.801257371902466
    4. 'nombre' → logprob: -6.301257133483887
    5. 'n' → logprob: -7.301257133483887
    6. 'val' → logprob: -7.426257133483887
    7. 'numbers' → logprob: -7.676257133483887
    8. ' numbers' → logprob: -7.676257133483887
    9. ' valeurs' → logprob: -8.051257133483887
    10. 'num' → logprob: -8.426257133483887

Token 148: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.3074723780155182
    2. 't' → logprob: -1.5574723482131958
    3. 'ti' → logprob: -3.0574724674224854
    4. 'i' → logprob: -6.182472229003906
    5. 'tiers' → logprob: -6.557472229003906
    6. 'ités' → logprob: -7.057472229003906
    7. 'ts' → logprob: -7.682472229003906
    8. 'ières' → logprob: -7.807472229003906
    9. '   ' → logprob: -8.182472229003906
    10. 'tokens' → logprob: -8.307472229003906

Token 149: ' A' (ID: 355)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.043744008988142014
    2. ' A' → logprob: -3.4187440872192383
    3. ',' → logprob: -5.668744087219238
    4. ' a' → logprob: -5.918744087219238
    5. 'A' → logprob: -5.918744087219238
    6. 'a' → logprob: -6.918744087219238
    7. '   ' → logprob: -9.918744087219238
    8. ',A' → logprob: -10.668744087219238
    9. ' parts' → logprob: -10.668744087219238
    10. ' ,' → logprob: -10.793744087219238

Token 150: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000736846646759659
    2. ' ,' → logprob: -7.750736713409424
    3. ' et' → logprob: -8.500737190246582
    4. 'et' → logprob: -9.375737190246582
    5. '       ' → logprob: -11.875737190246582
    6. ',b' → logprob: -13.375737190246582
    7. ' and' → logprob: -13.375737190246582
    8. ',A' → logprob: -13.375737190246582
    9. ',a' → logprob: -13.750737190246582
    10. 's' → logprob: -14.125737190246582

Token 151: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.38687509298324585
    2. ' B' → logprob: -1.1368751525878906
    3. ' ' → logprob: -13.01187515258789
    4. '_B' → logprob: -14.51187515258789
    5. ' ' → logprob: -14.76187515258789
    6. 'b' → logprob: -15.13687515258789
    7. '	B' → logprob: -15.26187515258789
    8. '>B' → logprob: -15.76187515258789
    9. '  ' → logprob: -16.38687515258789
    10. '   ' → logprob: -17.13687515258789

Token 152: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7075833678245544
    2. ' =' → logprob: -0.7075833678245544
    3. ',' → logprob: -4.332583427429199
    4. '=' → logprob: -7.207583427429199
    5. '        ' → logprob: -8.8325834274292
    6. '        
' → logprob: -9.7075834274292
    7. 's' → logprob: -10.3325834274292
    8. ' ,' → logprob: -10.4575834274292
    9. 'A' → logprob: -10.7075834274292
    10. ' A' → logprob: -10.9575834274292

Token 153: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2518814504146576
    2. ' =' → logprob: -1.62688148021698
    3. ',' → logprob: -3.7518813610076904
    4. '=' → logprob: -6.7518815994262695
    5. ' A' → logprob: -8.00188159942627
    6. '        
' → logprob: -8.12688159942627
    7. ':' → logprob: -8.87688159942627
    8. '        ' → logprob: -9.00188159942627
    9. ' ,' → logprob: -9.12688159942627
    10. 'A' → logprob: -9.37688159942627

Token 154: ' parts' (ID: 7881)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.4154150187969208
    2. 'a' → logprob: -1.2904150485992432
    3. ' A' → logprob: -2.915415048599243
    4. ' a' → logprob: -4.790414810180664
    5. ' parts' → logprob: -6.790414810180664
    6. '       ' → logprob: -7.415414810180664
    7. 'parts' (adapté à ' parts') → logprob: -7.540414810180664
    8. '   ' → logprob: -11.290414810180664
    9. 'tokens' → logprob: -12.165414810180664
    10. '_a' → logprob: -13.165414810180664

Token 155: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.011048170737922192
    2. '=' → logprob: -4.511048316955566
    3. '=line' → logprob: -15.261048316955566
    4. 's' → logprob: -17.38604736328125
    5. '   ' → logprob: -18.26104736328125
    6. '.' → logprob: -19.01104736328125
    7. ' ' → logprob: -19.01104736328125
    8. '[' → logprob: -19.26104736328125
    9. '＝' → logprob: -19.38604736328125
    10. ')' → logprob: -19.38604736328125

Token 156: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.6931489706039429
    2. ' line' → logprob: -0.6931489706039429
    3. '	line' → logprob: -13.443148612976074
    4. '[line' → logprob: -16.06814956665039
    5. '   ' → logprob: -16.44314956665039
    6. '=line' → logprob: -17.31814956665039
    7. '(line' → logprob: -17.31814956665039
    8. '_line' → logprob: -17.44314956665039
    9. 'Line' → logprob: -17.69314956665039
    10. '#line' → logprob: -18.06814956665039

Token 157: '.split' (ID: 10347)
  Prédit: '.split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.split' → logprob: -0.0016326900804415345
    2. '.' → logprob: -6.5016326904296875
    3. '.strip' → logprob: -9.001632690429688
    4. ' .' → logprob: -12.001632690429688
    5. '.s' → logprob: -14.751632690429688
    6. 'split' → logprob: -15.251632690429688
    7. '.Split' → logprob: -15.751632690429688
    8. '.rstrip' → logprob: -15.751632690429688
    9. 'spl' → logprob: -18.251632690429688
    10. ' split' → logprob: -19.001632690429688

Token 158: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.02174605429172516
    2. '('' → logprob: -3.8967461585998535
    3. '(' → logprob: -6.7717461585998535
    4. '("' → logprob: -10.271745681762695
    5. '())' → logprob: -11.771745681762695
    6. '()
' → logprob: -12.271745681762695
    7. '()]' → logprob: -12.896745681762695
    8. ' ()' → logprob: -13.771745681762695
    9. '()

' → logprob: -14.021745681762695
    10. '()"' → logprob: -14.271745681762695

Token 159: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002748053753748536
    2. '[' → logprob: -6.877748012542725
    3. '        
' → logprob: -8.002748489379883
    4. ' ' → logprob: -8.502748489379883
    5. ' A' → logprob: -8.502748489379883
    6. ',' → logprob: -8.502748489379883
    7. '   ' → logprob: -8.627748489379883
    8. '      ' → logprob: -9.127748489379883
    9. '<|end|>' → logprob: -9.127748489379883
    10. 'A' → logprob: -9.752748489379883

Token 160: ' #' (ID: 1069)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.06259392946958542
    2. 'a' → logprob: -2.812593936920166
    3. ' A' → logprob: -8.312593460083008
    4. '       ' → logprob: -8.687593460083008
    5. '   ' → logprob: -8.937593460083008
    6. 'if' → logprob: -9.562593460083008
    7. ' a' → logprob: -11.812593460083008
    8. ' if' → logprob: -13.437593460083008
    9. '	A' → logprob: -14.437593460083008
    10. '	a' → logprob: -15.437593460083008

Token 161: ' On' (ID: 2160)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.08724331855773926
    2. 'a' → logprob: -2.8372433185577393
    3. ' A' → logprob: -3.8372433185577393
    4. 'if' → logprob: -6.21224308013916
    5. ' a' → logprob: -7.21224308013916
    6. ' if' → logprob: -7.58724308013916
    7. '   ' → logprob: -9.58724308013916
    8. '       ' → logprob: -9.71224308013916
    9. 'try' → logprob: -11.21224308013916
    10. '#' → logprob: -12.83724308013916

Token 162: ' s' (ID: 265)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.8509479761123657
    2. ' A' → logprob: -1.2259479761123657
    3. 'A' → logprob: -1.8509479761123657
    4. 'if' → logprob: -2.600947856903076
    5. ' a' → logprob: -3.225947856903076
    6. 'a' → logprob: -5.350947856903076
    7. ' try' → logprob: -6.725947856903076
    8. ' =' → logprob: -7.725947856903076
    9. ' continue' → logprob: -7.850947856903076
    10. ' ' → logprob: -7.975947856903076

Token 163: ''ass' (ID: 43919)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.39042067527771
    2. ''ass' → logprob: -1.64042067527771
    3. 'ure' → logprob: -2.01542067527771
    4. '   ' → logprob: -2.64042067527771
    5. ''assurer' → logprob: -3.01542067527771
    6. '       ' → logprob: -3.26542067527771
    7. 'ass' → logprob: -3.26542067527771
    8. 'u' → logprob: -3.64042067527771
    9. 'ur' → logprob: -3.76542067527771
    10. '=' → logprob: -4.140420913696289

Token 164: 'ure' (ID: 627)
  Prédit: 'ure'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ure' → logprob: -0.0017864444525912404
    2. 'ert' → logprob: -6.501786231994629
    3. 'e' → logprob: -9.251786231994629
    4. 'ur' → logprob: -9.501786231994629
    5. 'uret' → logprob: -10.001786231994629
    6. 'urent' → logprob: -10.501786231994629
    7. 'ume' → logprob: -11.626786231994629
    8. 'eur' → logprob: -11.751786231994629
    9. '#' → logprob: -11.876786231994629
    10. '[' → logprob: -13.501786231994629

Token 165: ' qu' (ID: 474)
  Prédit: ' que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.057344190776348114
    2. ' ' → logprob: -3.6823441982269287
    3. '   ' → logprob: -4.93234395980835
    4. '    ' → logprob: -5.30734395980835
    5. ' that' → logprob: -5.68234395980835
    6. '<|end|>' → logprob: -5.80734395980835
    7. '  ' → logprob: -6.30734395980835
    8. '       ' → logprob: -6.30734395980835
    9. ' d' → logprob: -6.43234395980835
    10. ' de' → logprob: -6.55734395980835

Token 166: ''on' (ID: 25812)
  Prédit: ' len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.018296843394637108
    2. 'len' → logprob: -4.018296718597412
    3. '(len' → logprob: -9.26829719543457
    4. '=len' → logprob: -11.14329719543457
    5. '	len' → logprob: -11.14329719543457
    6. 'e' → logprob: -12.01829719543457
    7. '   ' → logprob: -12.39329719543457
    8. ' parts' → logprob: -12.76829719543457
    9. '    ' → logprob: -13.39329719543457
    10. ' ' → logprob: -13.51829719543457

Token 167: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.3048899173736572
    2. 'len' → logprob: -1.9298899173736572
    3. 'a' → logprob: -3.0548899173736572
    4. ' len' → logprob: -3.0548899173736572
    5. ' has' → logprob: -4.679889678955078
    6. ' have' → logprob: -4.929889678955078
    7. ' ' → logprob: -6.429889678955078
    8. ' continue' → logprob: -7.054889678955078
    9. 'if' → logprob: -7.179889678955078
    10. '<|end|>' → logprob: -7.554889678955078

Token 168: ' bien' (ID: 5340)
  Prédit: ' len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.03804860636591911
    2. 'len' → logprob: -3.288048505783081
    3. '	len' → logprob: -12.91304874420166
    4. '(len' → logprob: -13.41304874420166
    5. ' ' → logprob: -13.91304874420166
    6. '=len' → logprob: -14.03804874420166
    7. ' au' → logprob: -14.16304874420166
    8. ' la' → logprob: -15.16304874420166
    9. ' deux' → logprob: -15.41304874420166
    10. ' exactement' → logprob: -16.288047790527344

Token 169: ' deux' (ID: 10301)
  Prédit: ' len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.38689112663269043
    2. 'len' → logprob: -1.1368911266326904
    3. ' deux' → logprob: -11.38689136505127
    4. ' ' → logprob: -12.88689136505127
    5. '(len' → logprob: -13.26189136505127
    6. '2' → logprob: -13.51189136505127
    7. '	len' → logprob: -13.63689136505127
    8. '=len' → logprob: -13.88689136505127
    9. 'de' → logprob: -15.26189136505127
    10. ' au' → logprob: -15.76189136505127

Token 170: ' éléments' (ID: 57375)
  Prédit: 'tokens'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tokens' → logprob: -0.2006835639476776
    2. '<|end|>' → logprob: -2.82568359375
    3. 'parts' → logprob: -3.07568359375
    4. ' parts' → logprob: -3.07568359375
    5. ' tokens' → logprob: -3.95068359375
    6. ' éléments' → logprob: -5.32568359375
    7. 'elements' → logprob: -6.07568359375
    8. 'élé' → logprob: -6.57568359375
    9. ' ' → logprob: -7.57568359375
    10. ' elements' → logprob: -7.82568359375

Token 171: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.026507195085287094
    2. ',' → logprob: -3.9015071392059326
    3. ' if' → logprob: -5.526507377624512
    4. '<|end|>' → logprob: -6.901507377624512
    5. 'if' → logprob: -8.276507377624512
    6. ':' → logprob: -8.276507377624512
    7. '        
' → logprob: -9.151507377624512
    8. ' and' → logprob: -9.651507377624512
    9. '      ' → logprob: -9.901507377624512
    10. '<|end|>' → logprob: -10.151507377624512

Token 172: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02494640089571476
    2. ' if' → logprob: -3.899946451187134
    3. ',' → logprob: -6.149946212768555
    4. '<|end|>' → logprob: -7.024946212768555
    5. '        
' → logprob: -7.649946212768555
    6. 'if' → logprob: -7.649946212768555
    7. '   ' → logprob: -9.274946212768555
    8. ':' → logprob: -9.899946212768555
    9. ' and' → logprob: -10.149946212768555
    10. '      ' → logprob: -10.149946212768555

Token 173: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.47632136940956116
    2. ' if' → logprob: -0.9763213396072388
    3. '       ' → logprob: -6.101321220397949
    4. '	if' → logprob: -14.22632122039795
    5. '   ' → logprob: -14.35132122039795
    6. ' ' → logprob: -15.47632122039795
    7. 'If' → logprob: -16.101322174072266
    8. 'i' → logprob: -16.601322174072266
    9. ' i' → logprob: -16.851322174072266
    10. ',' → logprob: -17.226322174072266

Token 174: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.0003455944824963808
    2. 'len' → logprob: -8.000345230102539
    3. ' ' → logprob: -11.875345230102539
    4. '	len' → logprob: -13.375345230102539
    5. '(len' → logprob: -13.875345230102539
    6. ' parts' → logprob: -15.000345230102539
    7. '  ' → logprob: -16.75034523010254
    8. '=len' → logprob: -16.87534523010254
    9. ' length' → logprob: -17.00034523010254
    10. ' le' → logprob: -17.37534523010254

Token 175: '(parts' (ID: 102573)
  Prédit: '(parts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(parts' → logprob: -2.935296834039036e-06
    2. '(' → logprob: -12.75000286102295
    3. 'parts' → logprob: -17.500003814697266
    4. ' parts' → logprob: -17.875003814697266
    5. ' (' → logprob: -18.375003814697266
    6. '(part' → logprob: -18.750003814697266
    7. '(points' → logprob: -19.000003814697266
    8. '(
' → logprob: -21.375003814697266
    9. '(posts' → logprob: -21.750003814697266
    10. '_parts' → logprob: -22.000003814697266

Token 176: ')' (ID: 8)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.2525293529033661
    2. ' ==' → logprob: -2.3775293827056885
    3. ')' → logprob: -2.5025293827056885
    4. '!=' → logprob: -3.5025293827056885
    5. '==' → logprob: -4.127529144287109
    6. ' )' → logprob: -7.377529144287109
    7. ')!=' → logprob: -7.377529144287109
    8. ' <' → logprob: -7.502529144287109
    9. ' ' → logprob: -8.87752914428711
    10. '<' → logprob: -9.00252914428711

Token 177: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.4111831486225128
    2. '!=' → logprob: -1.1611831188201904
    3. '==' → logprob: -4.1611833572387695
    4. ' ==' → logprob: -4.9111833572387695
    5. '<' → logprob: -7.1611833572387695
    6. ' <' → logprob: -8.41118335723877
    7. ' ' → logprob: -10.41118335723877
    8. '=' → logprob: -11.53618335723877
    9. '()!=' → logprob: -11.78618335723877
    10. ' ' → logprob: -12.78618335723877

Token 178: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.14267535507678986
    2. '2' → logprob: -2.0176753997802734
    3. '```' → logprob: -15.892675399780273
    4. '  ' → logprob: -17.017675399780273
    5. ' ' → logprob: -17.205175399780273
    6. '1' → logprob: -17.767675399780273
    7. '   ' → logprob: -17.892675399780273
    8. '0' → logprob: -18.205175399780273
    9. '3' → logprob: -18.892675399780273
    10. ')' → logprob: -19.080175399780273

Token 179: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.623244553338736e-05
    2. ' ' → logprob: -9.625065803527832
    3. '۲' → logprob: -16.75006675720215
    4. '２' → logprob: -16.87506675720215
    5. '   ' → logprob: -17.56256675720215
    6. '```' → logprob: -18.00006675720215
    7. '২' → logprob: -18.50006675720215
    8. '  ' → logprob: -18.87506675720215
    9. '२' → logprob: -18.87506675720215
    10. '٢' → logprob: -19.06256675720215

Token 180: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0008197537390515208
    2. ':
' → logprob: -7.125819683074951
    3. ' or' → logprob: -11.87582015991211
    4. '):' → logprob: -12.62582015991211
    5. ':return' → logprob: -12.75082015991211
    6. ' :' → logprob: -13.50082015991211
    7. ',' → logprob: -16.12582015991211
    8. ')' → logprob: -16.12582015991211
    9. '   ' → logprob: -16.37582015991211
    10. ':

' → logprob: -16.37582015991211

Token 181: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0025074053555727005
    2. ' continue' → logprob: -6.127507209777832
    3. 'continue' → logprob: -8.877507209777832
    4. '       ' → logprob: -8.877507209777832
    5. ':' → logprob: -10.377507209777832
    6. ',' → logprob: -13.127507209777832
    7. '          ' → logprob: -13.252507209777832
    8. '	continue' → logprob: -13.502507209777832
    9. ' continues' → logprob: -13.627507209777832
    10. '	       ' → logprob: -13.627507209777832

Token 182: ' continue' (ID: 4901)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.11916835606098175
    2. ' continue' → logprob: -2.494168281555176
    3. 'continue' (adapté à ' continue') → logprob: -3.744168281555176
    4. '       ' → logprob: -5.119168281555176
    5. '               ' → logprob: -9.244168281555176
    6. 'break' → logprob: -11.494168281555176
    7. ' break' → logprob: -11.619168281555176
    8. '	continue' → logprob: -11.744168281555176
    9. '   ' → logprob: -11.994168281555176
    10. '          ' → logprob: -13.244168281555176

Token 183: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02206701785326004
    2. '
' → logprob: -4.397067070007324
    3. '        
' → logprob: -5.022067070007324
    4. '<|end|>' → logprob: -6.272067070007324
    5. '    
' → logprob: -7.897067070007324
    6. ' 
' → logprob: -8.897067070007324
    7. ':' → logprob: -9.147067070007324
    8. '  
' → logprob: -9.522067070007324
    9. ',' → logprob: -9.647067070007324
    10. '   ' → logprob: -9.897067070007324

Token 184: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006100374273955822
    2. '        
' → logprob: -5.506100177764893
    3. '
' → logprob: -6.381100177764893
    4. '    
' → logprob: -9.75610065460205
    5. ' A' → logprob: -9.88110065460205
    6. ',' → logprob: -10.13110065460205
    7. '   ' → logprob: -10.13110065460205
    8. 'A' → logprob: -10.50610065460205
    9. '  
' → logprob: -11.13110065460205
    10. '<|end|>' → logprob: -11.25610065460205

Token 185: ' try' (ID: 2075)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.12808337807655334
    2. 'a' → logprob: -2.7530834674835205
    3. '       ' → logprob: -3.6280834674835205
    4. ' A' → logprob: -3.6280834674835205
    5. ' a' → logprob: -5.753083229064941
    6. '   ' → logprob: -9.378083229064941
    7. '        
' → logprob: -10.378083229064941
    8. 'try' (adapté à ' try') → logprob: -10.503083229064941
    9. ',' → logprob: -11.128083229064941
    10. '_a' → logprob: -12.253083229064941

Token 186: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0017382439691573381
    2. ':
' → logprob: -6.37673807144165
    3. '<|end|>' → logprob: -11.126738548278809
    4. ' :' → logprob: -11.501738548278809
    5. '):' → logprob: -12.251738548278809
    6. '<|end|>' → logprob: -12.876738548278809
    7. '       ' → logprob: -14.126738548278809
    8. ':

' → logprob: -14.251738548278809
    9. '   ' → logprob: -14.501738548278809
    10. '           ' → logprob: -14.626738548278809

Token 187: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1627475470304489
    2. ':' → logprob: -1.9127475023269653
    3. ':
' → logprob: -6.537747383117676
    4. '<|end|>' → logprob: -8.162747383117676
    5. '<|end|>' → logprob: -8.287747383117676
    6. '       ' → logprob: -8.537747383117676
    7. '	       ' → logprob: -8.787747383117676
    8. 'A' → logprob: -10.537747383117676
    9. '):' → logprob: -10.787747383117676
    10. '    	   ' → logprob: -10.912747383117676

Token 188: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' (adapté à ' A') → logprob: -0.5298572182655334
    2. ' A' → logprob: -1.2798571586608887
    3. 'a' → logprob: -2.2798571586608887
    4. ' a' → logprob: -3.5298571586608887
    5. '           ' → logprob: -6.779857158660889
    6. '   ' → logprob: -7.904857158660889
    7. '       ' → logprob: -9.529857635498047
    8. '               ' → logprob: -10.404857635498047
    9. ' ' → logprob: -11.654857635498047
    10. '    ' → logprob: -12.904857635498047

Token 189: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07908608019351959
    2. '=' → logprob: -2.8290860652923584
    3. ',' → logprob: -4.2040863037109375
    4. '=int' → logprob: -6.2040863037109375
    5. ' ,' → logprob: -11.829086303710938
    6. ',int' → logprob: -12.454086303710938
    7. 'int' → logprob: -12.704086303710938
    8. ' =
' → logprob: -14.079086303710938
    9. ')' → logprob: -14.704086303710938
    10. ' ' → logprob: -14.954086303710938

Token 190: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.06196768581867218
    2. ' int' → logprob: -2.811967611312866
    3. '[int' → logprob: -16.811967849731445
    4. '	int' → logprob: -18.686967849731445
    5. '=int' → logprob: -18.686967849731445
    6. '<int' → logprob: -19.061967849731445
    7. '(int' → logprob: -19.311967849731445
    8. ']int' → logprob: -19.936967849731445
    9. 'ints' → logprob: -20.936967849731445
    10. ':int' → logprob: -21.061967849731445

Token 191: '(parts' (ID: 102573)
  Prédit: '(parts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(parts' → logprob: -3.500108141452074e-05
    2. '(' → logprob: -10.375035285949707
    3. 'parts' → logprob: -12.625035285949707
    4. ' parts' → logprob: -14.750035285949707
    5. '(points' → logprob: -17.75003433227539
    6. '_parts' → logprob: -18.75003433227539
    7. ' (' → logprob: -18.87503433227539
    8. 'Parts' → logprob: -18.87503433227539
    9. '(part' → logprob: -18.87503433227539
    10. '('' → logprob: -19.25003433227539

Token 192: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -8.685467764735222e-05
    2. '0' → logprob: -9.375086784362793
    3. ' [' → logprob: -13.875086784362793
    4. ')' → logprob: -14.625086784362793
    5. '   ' → logprob: -15.125086784362793
    6. '1' → logprob: -16.50008773803711
    7. '(' → logprob: -16.75008773803711
    8. ' ' → logprob: -16.75008773803711
    9. ')[' → logprob: -17.00008773803711
    10. '[
' → logprob: -17.37508773803711

Token 193: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.676981345459353e-06
    2. '[' → logprob: -12.375005722045898
    3. ' ' → logprob: -14.000005722045898
    4. '1' → logprob: -14.625005722045898
    5. ')' → logprob: -16.0000057220459
    6. '   ' → logprob: -17.6875057220459
    7. '```' → logprob: -18.0625057220459
    8. ']' → logprob: -18.7500057220459
    9. '-' → logprob: -19.3125057220459
    10. '۰' → logprob: -19.6875057220459

Token 194: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001561009994475171
    2. ' )' → logprob: -9.00015640258789
    3. ')
' → logprob: -10.37515640258789
    4. '])' → logprob: -15.12515640258789
    5. '<|end|>' → logprob: -15.25015640258789
    6. '))' → logprob: -15.87515640258789
    7. ')

' → logprob: -15.87515640258789
    8. '),' → logprob: -16.00015640258789
    9. ']' → logprob: -16.37515640258789
    10. ' )
' → logprob: -16.50015640258789

Token 195: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 196: ' B' (ID: 418)
  Prédit: ' B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' B' → logprob: -0.03764846920967102
    2. 'B' (adapté à ' B') → logprob: -3.4126484394073486
    3. ' ' → logprob: -5.537648677825928
    4. ' ' → logprob: -10.53764820098877
    5. '    ' → logprob: -11.28764820098877
    6. '            ' → logprob: -11.66264820098877
    7. ' )' → logprob: -13.16264820098877
    8. ')' → logprob: -13.66264820098877
    9. '           ' → logprob: -13.78764820098877
    10. '     ' → logprob: -13.91264820098877

Token 197: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.036765679717063904
    2. '=' → logprob: -3.4117655754089355
    3. ')' → logprob: -5.7867655754089355
    4. '<|end|>' → logprob: -10.661766052246094
    5. ' )' → logprob: -11.911766052246094
    6. ')=' → logprob: -12.286766052246094
    7. ' ' → logprob: -12.661766052246094
    8. ' =)' → logprob: -13.036766052246094
    9. ']' → logprob: -13.161766052246094
    10. '=int' → logprob: -13.411766052246094

Token 198: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.1002078503370285
    2. ' int' → logprob: -2.350207805633545
    3. '<int' → logprob: -14.600208282470703
    4. '=int' → logprob: -14.975208282470703
    5. '[int' → logprob: -15.350208282470703
    6. '(int' → logprob: -15.850208282470703
    7. '	int' → logprob: -17.100208282470703
    8. ':int' → logprob: -17.600208282470703
    9. 'ints' → logprob: -17.850208282470703
    10. ']int' → logprob: -17.850208282470703

Token 199: '(parts' (ID: 102573)
  Prédit: '(parts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(parts' → logprob: -0.0018856844399124384
    2. ' parts' → logprob: -6.376885890960693
    3. 'parts' → logprob: -8.751885414123535
    4. '(' → logprob: -10.751885414123535
    5. ' (' → logprob: -13.126885414123535
    6. ')' → logprob: -14.501885414123535
    7. 'int' → logprob: -14.626885414123535
    8. '(int' → logprob: -14.751885414123535
    9. '(part' → logprob: -15.001885414123535
    10. 'Parts' → logprob: -16.12688636779785

Token 200: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.017440982162952423
    2. '])' → logprob: -4.1424407958984375
    3. '1' → logprob: -6.7674407958984375
    4. ']' → logprob: -9.017440795898438
    5. ')' → logprob: -9.267440795898438
    6. '])
' → logprob: -11.392440795898438
    7. '][' → logprob: -12.267440795898438
    8. '0' → logprob: -12.517440795898438
    9. ' ' → logprob: -12.517440795898438
    10. '   ' → logprob: -12.642440795898438

Token 201: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.729906196298543e-06
    2. ' ' → logprob: -11.625009536743164
    3. '])' → logprob: -14.375009536743164
    4. '0' → logprob: -16.500009536743164
    5. '   ' → logprob: -18.250009536743164
    6. ']' → logprob: -18.500009536743164
    7. '])
' → logprob: -18.750009536743164
    8. '  ' → logprob: -19.125009536743164
    9. '[' → logprob: -19.250009536743164
    10. '１' → logprob: -19.375009536743164

Token 202: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02338477037847042
    2. '])' → logprob: -3.8983848094940186
    3. ')
' → logprob: -5.8983845710754395
    4. '])
' → logprob: -10.273385047912598
    5. '))' → logprob: -10.898385047912598
    6. '       ' → logprob: -11.148385047912598
    7. ']' → logprob: -11.898385047912598
    8. '）' → logprob: -12.273385047912598
    9. ')])' → logprob: -12.273385047912598
    10. ')]' → logprob: -12.523385047912598

Token 203: '       ' (ID: 309)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0007787733338773251
    2. '       ' → logprob: -7.625778675079346
    3. '
' → logprob: -8.750779151916504
    4. '            
' → logprob: -9.625779151916504
    5. ' except' → logprob: -10.875779151916504
    6. '<|end|>' → logprob: -11.125779151916504
    7. 'except' → logprob: -11.125779151916504
    8. ')' → logprob: -12.000779151916504
    9. '#' → logprob: -13.250779151916504
    10. '          ' → logprob: -13.250779151916504

Token 204: ' except' (ID: 6384)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0748498439788818
    2. 'except' (adapté à ' except') → logprob: -1.1998498439788818
    3. ' except' → logprob: -1.3248498439788818
    4. '           ' → logprob: -2.574849843978882
    5. '<|end|>' → logprob: -4.949850082397461
    6. '
' → logprob: -6.074850082397461
    7. ')' → logprob: -6.324850082397461
    8. '	except' → logprob: -6.574850082397461
    9. ',' → logprob: -7.199850082397461
    10. '<|end|>' → logprob: -7.449850082397461

Token 205: ' Value' (ID: 9963)
  Prédit: ' Value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Value' → logprob: -7.517272024415433e-05
    2. 'Value' → logprob: -9.750075340270996
    3. '(Value' → logprob: -11.375075340270996
    4. '	Value' → logprob: -12.375075340270996
    5. '_Value' → logprob: -14.375075340270996
    6. ' ' → logprob: -15.375075340270996
    7. '_value' → logprob: -15.625075340270996
    8. '.Value' → logprob: -16.00007438659668
    9. '<Value' → logprob: -17.37507438659668
    10. ':' → logprob: -18.12507438659668

Token 206: 'Error' (ID: 2255)
  Prédit: 'rror'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rror' → logprob: -0.002838514745235443
    2. 'Error' → logprob: -6.252838611602783
    3. 'ror' → logprob: -7.002838611602783
    4. 'r' → logprob: -16.252838134765625
    5. 'rr' → logprob: -16.877838134765625
    6. 'error' → logprob: -17.252838134765625
    7. 'ROR' → logprob: -18.627838134765625
    8. 'or' → logprob: -19.752838134765625
    9. 'ro' → logprob: -20.002838134765625
    10. 'RR' → logprob: -20.502838134765625

Token 207: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0017042214749380946
    2. ':
' → logprob: -6.376704216003418
    3. '):' → logprob: -13.501704216003418
    4. '           ' → logprob: -15.126704216003418
    5. ':

' → logprob: -16.376705169677734
    6. ':return' → logprob: -16.501705169677734
    7. ' :' → logprob: -16.876705169677734
    8. ':
' → logprob: -17.251705169677734
    9. '       ' → logprob: -17.251705169677734
    10. '):
' → logprob: -17.626705169677734

Token 208: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00035238542477600276
    2. ' continue' → logprob: -8.00035285949707
    3. 'continue' → logprob: -11.37535285949707
    4. '       ' → logprob: -12.50035285949707
    5. '   ' → logprob: -14.87535285949707
    6. '	       ' → logprob: -15.25035285949707
    7. '               ' → logprob: -15.75035285949707
    8. ':' → logprob: -15.75035285949707
    9. '          ' → logprob: -15.75035285949707
    10. '	continue' → logprob: -16.25035285949707

Token 209: ' #' (ID: 1069)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.5517017841339111
    2. '           ' → logprob: -1.5517017841339111
    3. 'continue' → logprob: -1.5517017841339111
    4. '       ' → logprob: -8.426701545715332
    5. '	continue' → logprob: -11.051701545715332
    6. '               ' → logprob: -12.176701545715332
    7. 'break' → logprob: -12.301701545715332
    8. ' break' → logprob: -12.426701545715332
    9. '   ' → logprob: -12.676701545715332
    10. '_continue' → logprob: -13.051701545715332

Token 210: ' Si' (ID: 7832)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.39208921790122986
    2. ' continue' → logprob: -1.1420892477035522
    3. '           ' → logprob: -5.392089366912842
    4. '       ' → logprob: -7.517089366912842
    5. '   ' → logprob: -10.517088890075684
    6. 'contin' → logprob: -10.517088890075684
    7. 'pass' → logprob: -10.767088890075684
    8. 'continu' → logprob: -11.892088890075684
    9. '	continue' → logprob: -12.267088890075684
    10. '#' → logprob: -12.642088890075684

Token 211: ' la' (ID: 557)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.44917306303977966
    2. 'continue' → logprob: -2.0741729736328125
    3. '           ' → logprob: -2.3241729736328125
    4. ' not' → logprob: -2.4491729736328125
    5. ' continuer' → logprob: -4.0741729736328125
    6. 'contin' → logprob: -4.5741729736328125
    7. '       ' → logprob: -5.3241729736328125
    8. ' True' → logprob: -5.3241729736328125
    9. '	continue' → logprob: -6.1991729736328125
    10. '   ' → logprob: -6.3241729736328125

Token 212: ' conversion' (ID: 22165)
  Prédit: ' ligne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ligne' → logprob: -0.24106790125370026
    2. 'ligne' → logprob: -1.866067886352539
    3. ' line' → logprob: -3.991067886352539
    4. 'input' → logprob: -4.991067886352539
    5. 'line' → logprob: -5.116067886352539
    6. ' input' → logprob: -5.241067886352539
    7. 'suite' → logprob: -5.241067886352539
    8. 'entrée' → logprob: -5.491067886352539
    9. ' suite' → logprob: -5.741067886352539
    10. ' valeur' → logprob: -5.991067886352539

Token 213: ' éch' (ID: 74009)
  Prédit: ' éch'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' éch' → logprob: -0.6999193429946899
    2. ' fail' → logprob: -1.69991934299469
    3. 'fail' → logprob: -1.82491934299469
    4. ' continue' → logprob: -3.1999192237854004
    5. 'continue' → logprob: -3.6999192237854004
    6. 'n' → logprob: -3.8249192237854004
    7. ' ' → logprob: -3.9499192237854004
    8. ' fails' → logprob: -4.1999192237854
    9. ' n' → logprob: -4.5749192237854
    10. ' failed' → logprob: -4.8249192237854

Token 214: 'oue' (ID: 76041)
  Prédit: 'oue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oue' → logprob: -0.00017481597024016082
    2. 'oué' → logprob: -9.500174522399902
    3. 'e' → logprob: -9.750174522399902
    4. 'ou' → logprob: -10.125174522399902
    5. 'oque' → logprob: -14.750174522399902
    6. 'ouez' → logprob: -15.375174522399902
    7. 'ouer' → logprob: -15.750174522399902
    8. '#' → logprob: -16.12517547607422
    9. 'èque' → logprob: -16.12517547607422
    10. 'oute' → logprob: -16.12517547607422

Token 215: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05732731148600578
    2. ',' → logprob: -3.0573272705078125
    3. ':' → logprob: -4.9323272705078125
    4. ':
' → logprob: -6.8073272705078125
    5. 'continue' → logprob: -8.932327270507812
    6. ' continue' → logprob: -9.057327270507812
    7. '               ' → logprob: -9.182327270507812
    8. '       ' → logprob: -11.682327270507812
    9. ',
' → logprob: -11.932327270507812
    10. '	       ' → logprob: -12.057327270507812

Token 216: ' on' (ID: 402)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.22073820233345032
    2. ' continue' → logprob: -1.845738172531128
    3. 'continue' → logprob: -3.220738172531128
    4. ' continuer' → logprob: -9.345738410949707
    5. '               ' → logprob: -9.845738410949707
    6. '       ' → logprob: -9.970738410949707
    7. '	continue' → logprob: -10.970738410949707
    8. 'contin' → logprob: -11.095738410949707
    9. '		' → logprob: -12.345738410949707
    10. '	       ' → logprob: -12.845738410949707

Token 217: ' ignore' (ID: 17887)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2891320586204529
    2. ' continue' → logprob: -1.6641321182250977
    3. 'continue' → logprob: -2.7891321182250977
    4. '	continue' → logprob: -9.539132118225098
    5. '       ' → logprob: -10.289132118225098
    6. '   ' → logprob: -10.289132118225098
    7. 'contin' → logprob: -10.539132118225098
    8. '_continue' → logprob: -10.914132118225098
    9. '          ' → logprob: -11.414132118225098
    10. '         ' → logprob: -12.039132118225098

Token 218: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.19523747265338898
    2. '       ' → logprob: -2.320237398147583
    3. 'la' → logprob: -3.695237398147583
    4. ' cette' → logprob: -4.070237636566162
    5. '<|end|>' → logprob: -4.195237636566162
    6. '   ' → logprob: -4.320237636566162
    7. 'continue' → logprob: -6.320237636566162
    8. '           ' → logprob: -6.445237636566162
    9. ' ' → logprob: -6.570237636566162
    10. ' the' → logprob: -7.570237636566162

Token 219: ' ligne' (ID: 19583)
  Prédit: 'ligne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ligne' → logprob: -0.03824482858181
    2. ' ligne' → logprob: -3.2882447242736816
    3. 'l' → logprob: -8.66324520111084
    4. 'line' → logprob: -10.91324520111084
    5. 'lin' → logprob: -12.41324520111084
    6. ' ' → logprob: -12.91324520111084
    7. 'suite' → logprob: -13.41324520111084
    8. 'lig' → logprob: -13.91324520111084
    9. ' line' → logprob: -14.78824520111084
    10. 'continue' → logprob: -14.91324520111084

Token 220: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0008454833878204226
    2. '       ' → logprob: -7.125845432281494
    3. ' continue' → logprob: -10.750845909118652
    4. 'continue' → logprob: -11.875845909118652
    5. ',' → logprob: -12.125845909118652
    6. '		' → logprob: -12.750845909118652
    7. '               ' → logprob: -13.000845909118652
    8. '	       ' → logprob: -14.500845909118652
    9. '<|end|>' → logprob: -14.875845909118652
    10. '          ' → logprob: -15.250845909118652

Token 221: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00011343709047650918
    2. '       ' → logprob: -9.625113487243652
    3. 'continue' → logprob: -10.625113487243652
    4. ' continue' → logprob: -10.875113487243652
    5. '		' → logprob: -12.750113487243652
    6. '               ' → logprob: -14.000113487243652
    7. '          ' → logprob: -16.750112533569336
    8. ',' → logprob: -17.125112533569336
    9. '	       ' → logprob: -17.125112533569336
    10. '	continue' → logprob: -17.750112533569336

Token 222: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.3064011335372925
    2. '           ' → logprob: -1.8064011335372925
    3. ' continue' → logprob: -2.306401252746582
    4. '       ' → logprob: -10.306401252746582
    5. '   ' → logprob: -12.056401252746582
    6. '	continue' → logprob: -12.931401252746582
    7. '               ' → logprob: -13.306401252746582
    8. '_continue' → logprob: -14.181401252746582
    9. 'continu' → logprob: -14.806401252746582
    10. 'contin' → logprob: -15.306401252746582

Token 223: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5797582268714905
    2. '
' → logprob: -0.8297582268714905
    3. '        
' → logprob: -5.579758167266846
    4. '
' → logprob: -11.329758644104004
    5. '    
' → logprob: -11.454758644104004
    6. '            
' → logprob: -11.954758644104004
    7. '       
' → logprob: -13.329758644104004
    8. '  
' → logprob: -13.454758644104004
    9. '<|end|>' → logprob: -13.829758644104004
    10. '   ' → logprob: -14.454758644104004

Token 224: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0014991489006206393
    2. '
' → logprob: -6.876499176025391
    3. '        
' → logprob: -7.751499176025391
    4. '    
' → logprob: -11.25149917602539
    5. '   ' → logprob: -11.75149917602539
    6. '           ' → logprob: -12.25149917602539
    7. '  
' → logprob: -13.12649917602539
    8. 'print' → logprob: -13.87649917602539
    9. '            
' → logprob: -13.87649917602539
    10. '       
' → logprob: -14.00149917602539

Token 225: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.11946713179349899
    2. '       ' → logprob: -2.36946702003479
    3. ' print' → logprob: -3.99446702003479
    4. 'result' → logprob: -7.619467258453369
    5. 'sum' → logprob: -9.994466781616211
    6. '        
' → logprob: -9.994466781616211
    7. '   ' → logprob: -10.119466781616211
    8. ' result' → logprob: -11.119466781616211
    9. '
' → logprob: -12.119466781616211
    10. '```' → logprob: -12.994466781616211

Token 226: ' Calcul' (ID: 57243)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.06186807528138161
    2. ' print' → logprob: -3.061868190765381
    3. 'result' → logprob: -4.436868190765381
    4. ' result' → logprob: -6.811868190765381
    5. 'sum' → logprob: -9.061867713928223
    6. 's' → logprob: -9.311867713928223
    7. ' somme' → logprob: -11.436867713928223
    8. '       ' → logprob: -11.561867713928223
    9. '   ' → logprob: -11.686867713928223
    10. ' sum' → logprob: -12.061867713928223

Token 227: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.27899280190467834
    2. '       ' → logprob: -1.528992772102356
    3. '           ' → logprob: -4.028992652893066
    4. ' =' → logprob: -5.403992652893066
    5. '   ' → logprob: -6.028992652893066
    6. '=' → logprob: -8.028992652893066
    7. '        ' → logprob: -8.153992652893066
    8. ' de' → logprob: -8.403992652893066
    9. '    ' → logprob: -8.903992652893066
    10. 'result' → logprob: -9.028992652893066

Token 228: ' et' (ID: 859)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.18054935336112976
    2. '       ' → logprob: -2.555549383163452
    3. 'result' → logprob: -3.180549383163452
    4. 'sum' → logprob: -4.305549144744873
    5. ' s' → logprob: -4.680549144744873
    6. ' result' → logprob: -5.055549144744873
    7. 's' → logprob: -5.305549144744873
    8. 'la' → logprob: -5.305549144744873
    9. '        
' → logprob: -6.805549144744873
    10. ' sum' → logprob: -6.930549144744873

Token 229: ' afficher' (ID: 146524)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.1628434658050537
    2. ' afficher' → logprob: -2.5378434658050537
    3. 'print' → logprob: -2.6628434658050537
    4. ' impr' → logprob: -6.912843704223633
    5. 'aff' → logprob: -8.537843704223633
    6. '   ' → logprob: -8.787843704223633
    7. '       ' → logprob: -10.287843704223633
    8. ' affich' → logprob: -10.537843704223633
    9. ' aff' → logprob: -10.912843704223633
    10. ' imprimir' → logprob: -11.162843704223633

Token 230: ' la' (ID: 557)
  Prédit: '(A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.056249793618917465
    2. ' A' → logprob: -3.5562498569488525
    3. 'A' → logprob: -4.056249618530273
    4. '(' → logprob: -5.181249618530273
    5. '   ' → logprob: -6.306249618530273
    6. ' la' → logprob: -7.431249618530273
    7. 'print' → logprob: -8.681249618530273
    8. '()' → logprob: -8.806249618530273
    9. '       ' → logprob: -9.181249618530273
    10. '    ' → logprob: -9.556249618530273

Token 231: ' somme' (ID: 64484)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.8414613604545593
    2. ' somme' → logprob: -1.216461420059204
    3. 's' → logprob: -1.841461420059204
    4. ' résultat' → logprob: -3.341461420059204
    5. ' print' → logprob: -3.591461420059204
    6. 'rés' → logprob: -4.341461181640625
    7. ' A' → logprob: -4.591461181640625
    8. 'A' → logprob: -4.591461181640625
    9. 'sum' → logprob: -5.216461181640625
    10. 'result' → logprob: -5.216461181640625

Token 232: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0002266622323077172
    2. 'print' → logprob: -8.625226974487305
    3. ' print' → logprob: -10.000226974487305
    4. '           ' → logprob: -14.625226974487305
    5. '
' → logprob: -15.000226974487305
    6. '   ' → logprob: -15.250226974487305
    7. '        
' → logprob: -15.375226974487305
    8. '      ' → logprob: -16.000226974487305
    9. ',' → logprob: -16.375226974487305
    10. '```' → logprob: -16.750226974487305

Token 233: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00012809180771000683
    2. 'print' → logprob: -9.000127792358398
    3. ' print' → logprob: -12.500127792358398
    4. '   ' → logprob: -14.875127792358398
    5. '           ' → logprob: -15.500127792358398
    6. '      ' → logprob: -16.1251277923584
    7. '	' → logprob: -17.1251277923584
    8. '```' → logprob: -17.2501277923584
    9. '    ' → logprob: -17.2501277923584
    10. '
' → logprob: -17.7501277923584

Token 234: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.04957219958305359
    2. ' print' → logprob: -3.049572229385376
    3. '       ' → logprob: -6.924571990966797
    4. '   ' → logprob: -14.424571990966797
    5. '	print' → logprob: -15.424571990966797
    6. '```' → logprob: -16.299571990966797
    7. '
' → logprob: -16.924571990966797
    8. 'result' → logprob: -16.924571990966797
    9. '        
' → logprob: -17.299571990966797
    10. 'pr' → logprob: -17.674571990966797

Token 235: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.01816023886203766
    2. '(' → logprob: -4.018160343170166
    3. '(f' → logprob: -12.518159866333008
    4. ' (' → logprob: -13.018159866333008
    5. '(a' → logprob: -13.518159866333008
    6. '("' → logprob: -13.893159866333008
    7. '()' → logprob: -14.268159866333008
    8. '('' → logprob: -14.393159866333008
    9. '(
' → logprob: -14.643159866333008
    10. '((' → logprob: -15.643159866333008

Token 236: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.10037025064229965
    2. '+' → logprob: -2.350370168685913
    3. '+B' → logprob: -8.850370407104492
    4. ')' → logprob: -11.100370407104492
    5. ' ,' → logprob: -13.725370407104492
    6. ' ' → logprob: -13.850370407104492
    7. ',' → logprob: -13.975370407104492
    8. ' ' → logprob: -14.100370407104492
    9. '+b' → logprob: -14.975370407104492
    10. ')+' → logprob: -15.100370407104492

Token 237: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.25192928314208984
    2. ' B' → logprob: -1.5019292831420898
    3. ' ' → logprob: -16.001930236816406
    4. ')' → logprob: -16.751930236816406
    5. '	B' → logprob: -17.751930236816406
    6. ' ' → logprob: -18.251930236816406
    7. '```' → logprob: -19.001930236816406
    8. '   ' → logprob: -19.126930236816406
    9. '    ' → logprob: -20.251930236816406
    10. ',' → logprob: -20.501930236816406

Token 238: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -6.704273118884885e-07
    2. ')
' → logprob: -15.000000953674316
    3. ' )' → logprob: -15.250000953674316
    4. '())' → logprob: -18.0
    5. ')`' → logprob: -18.625
    6. ')#' → logprob: -19.0
    7. '),' → logprob: -19.125
    8. '))' → logprob: -19.25
    9. ')}' → logprob: -19.5
    10. '<|end|>' → logprob: -19.75

Token 239: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.18645744025707245
    2. '
' → logprob: -1.8114573955535889
    3. '<|end|>' → logprob: -5.311457633972168
    4. '\n' → logprob: -6.811457633972168
    5. 'main' → logprob: -8.311457633972168
    6. '```' → logprob: -8.436457633972168
    7. '  
' → logprob: -9.436457633972168
    8. ' if' → logprob: -9.936457633972168
    9. '    
' → logprob: -11.061457633972168
    10. '

' → logprob: -11.186457633972168

Token 240: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.008408546447753906
    2. '__' → logprob: -4.883408546447754
    3. ' ' → logprob: -7.508408546447754
    4. ' ' → logprob: -9.133408546447754
    5. '_' → logprob: -9.508408546447754
    6. ' _' → logprob: -10.133408546447754
    7. ' main' → logprob: -11.258408546447754
    8. '  ' → logprob: -12.258408546447754
    9. ' ' → logprob: -13.258408546447754
    10. '_main' → logprob: -13.633408546447754

Token 241: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.067754365503788
    2. '.__' → logprob: -2.9427542686462402
    3. '==' → logprob: -5.44275426864624
    4. ' ==' → logprob: -5.56775426864624
    5. '__.__' → logprob: -6.31775426864624
    6. '.' → logprob: -6.94275426864624
    7. '__.' → logprob: -7.06775426864624
    8. ' __' → logprob: -7.44275426864624
    9. '[' → logprob: -8.942754745483398
    10. ' .' → logprob: -9.817754745483398

Token 242: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -8.2994620242971e-06
    2. '__.__' → logprob: -11.750008583068848
    3. '__.' → logprob: -15.875008583068848
    4. '____' → logprob: -16.37500762939453
    5. '==' → logprob: -17.00000762939453
    6. '__
' → logprob: -17.00000762939453
    7. ' __' → logprob: -17.12500762939453
    8. '___' → logprob: -17.25000762939453
    9. '__["' → logprob: -18.00000762939453
    10. '_' → logprob: -18.12500762939453

Token 243: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.4732886254787445
    2. '__' → logprob: -1.098288655281067
    3. '==' → logprob: -3.3482885360717773
    4. '=="' → logprob: -4.848288536071777
    5. '=='' → logprob: -8.848288536071777
    6. '"' → logprob: -9.223288536071777
    7. '["' → logprob: -9.473288536071777
    8. '.__' → logprob: -9.598288536071777
    9. '__.__' → logprob: -10.223288536071777
    10. '[' → logprob: -10.348288536071777

Token 244: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.01420088391751051
    2. ''' → logprob: -4.264200687408447
    3. ' "__' → logprob: -10.264201164245605
    4. '__' → logprob: -13.139201164245605
    5. ' '__' → logprob: -14.889201164245605
    6. ' "' → logprob: -16.88920021057129
    7. '"_' → logprob: -17.26420021057129
    8. '"user' → logprob: -17.63920021057129
    9. ''"' → logprob: -18.13920021057129
    10. '"name' → logprob: -18.63920021057129

Token 245: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -3.8889261304575484e-06
    2. '__' → logprob: -13.000003814697266
    3. '_main' → logprob: -13.750003814697266
    4. 'name' → logprob: -15.250003814697266
    5. ' main' → logprob: -16.000003814697266
    6. 'ma' → logprob: -16.375003814697266
    7. 'built' → logprob: -17.000003814697266
    8. '-main' → logprob: -18.375003814697266
    9. 'py' → logprob: -18.500003814697266
    10. 'm' → logprob: -19.000003814697266

Token 246: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.126943439245224
    2. '__' → logprob: -2.126943349838257
    3. '__':
' → logprob: -11.501943588256836
    4. '_' → logprob: -12.501943588256836
    5. '__.' → logprob: -14.501943588256836
    6. '__:' → logprob: -14.751943588256836
    7. '__["' → logprob: -14.876943588256836
    8. '__",' → logprob: -16.376943588256836
    9. '__.__' → logprob: -17.001943588256836
    10. '__("' → logprob: -17.251943588256836

Token 247: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.03911828622221947
    2. ' main' → logprob: -3.2891182899475098
    3. '   ' → logprob: -7.03911828994751
    4. '	main' → logprob: -8.539117813110352
    5. '_main' → logprob: -13.039117813110352
    6. '(main' → logprob: -14.789117813110352
    7. '    
' → logprob: -14.914117813110352
    8. '  ' → logprob: -15.289117813110352
    9. '.main' → logprob: -15.539117813110352
    10. ' ' → logprob: -16.16411781311035

Token 248: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -4.320199877838604e-07
    2. ' main' → logprob: -15.0
    3. '	main' → logprob: -21.75
    4. '   ' → logprob: -24.875
    5. '.main' → logprob: -25.375
    6. '(main' → logprob: -25.875
    7. 'ma' → logprob: -26.0
    8. '_main' → logprob: -26.875
    9. 'Main' → logprob: -27.0
    10. 'mai' → logprob: -27.25

Token 249: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 247
Tokens correctement prédits (1ère position, stricte): 84
Tokens correctement prédits (1ère position, avec adaptation): 93
Tokens correctement prédits (top 10): 181
Précision stricte (1ère position): 34.01%
Précision adaptée (1ère position): 37.65%
Précision (top 10): 73.28%
================================================================================
