================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:16:53
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
while True:
    try:
        a = list(map(int, input().split()))
        b = list(map(int, input().split()))
    except EOFError:
        break
    hit = 0
    blow = 0
    for i in range(4):
        if a[i] == b[i]:
            hit += 1
    for i in range(4):
        for j in range(4):
            if i != j and a[i] == b[j]:
                blow += 1
    print(hit, blow)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'while' (ID: 7032)
  → Token d'amorce (pas de prédiction)

Token 1: ' True' (ID: 6432)
  → Token d'amorce (pas de prédiction)

Token 2: ':
' (ID: 734)
  → Token d'amorce (pas de prédiction)

Token 3: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2772314250469208
    2. ' ' → logprob: -1.9022314548492432
    3. '\' → logprob: -3.902231454849243
    4. '    ' → logprob: -4.152231216430664
    5. '    
' → logprob: -4.527231216430664
    6. ' 
' → logprob: -4.777231216430664
    7. '```' → logprob: -4.777231216430664
    8. '\n' → logprob: -5.277231216430664
    9. '<|end|>' → logprob: -5.277231216430664
    10. ''' → logprob: -5.902231216430664

Token 4: ' try' (ID: 2075)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20415055751800537
    2. '    ' → logprob: -2.579150676727295
    3. ' ' → logprob: -3.079150676727295
    4. '```' → logprob: -3.204150676727295
    5. '       ' → logprob: -5.204150676727295
    6. '    
' → logprob: -5.704150676727295
    7. ' pass' → logprob: -5.954150676727295
    8. '  ' → logprob: -6.454150676727295
    9. 'pass' → logprob: -6.454150676727295
    10. ' ```' → logprob: -6.954150676727295

Token 5: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0006892018136568367
    2. ' :' → logprob: -7.3756890296936035
    3. ':
' → logprob: -10.625689506530762
    4. '   ' → logprob: -11.500689506530762
    5. '):' → logprob: -11.750689506530762
    6. '       ' → logprob: -12.000689506530762
    7. '    ' → logprob: -12.625689506530762
    8. '():' → logprob: -13.000689506530762
    9. '':' → logprob: -13.750689506530762
    10. '":' → logprob: -14.250689506530762

Token 6: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003841636935248971
    2. '   ' → logprob: -5.753841400146484
    3. ':' → logprob: -8.128841400146484
    4. '    ' → logprob: -9.378841400146484
    5. ' :' → logprob: -9.378841400146484
    6. ':
' → logprob: -9.753841400146484
    7. ' ' → logprob: -10.378841400146484
    8. '```' → logprob: -10.878841400146484
    9. '           ' → logprob: -11.628841400146484
    10. '     ' → logprob: -11.628841400146484

Token 7: ' a' (ID: 261)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.037089668214321136
    2. '   ' → logprob: -5.287089824676514
    3. '       ' → logprob: -5.287089824676514
    4. 'input' → logprob: -5.287089824676514
    5. 'print' → logprob: -5.787089824676514
    6. 'data' → logprob: -6.037089824676514
    7. 'response' → logprob: -6.037089824676514
    8. 'value' → logprob: -7.037089824676514
    9. 'x' → logprob: -7.162089824676514
    10. ' readline' → logprob: -7.162089824676514

Token 8: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6761173605918884
    2. '+' → logprob: -1.6761174201965332
    3. ' ' → logprob: -2.426117420196533
    4. ' =' → logprob: -2.801117420196533
    5. '   ' → logprob: -3.676117420196533
    6. '.' → logprob: -3.926117420196533
    7. ' +' → logprob: -4.176117420196533
    8. 'd' → logprob: -4.301117420196533
    9. 'r' → logprob: -4.551117420196533
    10. ' +=' → logprob: -4.551117420196533

Token 9: ' list' (ID: 1562)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.2842644155025482
    2. 'int' → logprob: -1.4092644453048706
    3. 'input' → logprob: -6.53426456451416
    4. ' input' → logprob: -6.65926456451416
    5. ' float' → logprob: -8.90926456451416
    6. '   ' → logprob: -9.15926456451416
    7. ' ' → logprob: -10.03426456451416
    8. 'float' → logprob: -10.15926456451416
    9. ' next' → logprob: -11.40926456451416
    10. '1' → logprob: -11.65926456451416

Token 10: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0025147777050733566
    2. '(input' → logprob: -6.252514839172363
    3. '(range' → logprob: -8.252514839172363
    4. '(int' → logprob: -9.127514839172363
    5. '(eval' → logprob: -9.752514839172363
    6. '(
' → logprob: -10.127514839172363
    7. '(map' → logprob: -10.127514839172363
    8. '(a' → logprob: -11.127514839172363
    9. '(str' → logprob: -11.752514839172363
    10. '((' → logprob: -11.752514839172363

Token 11: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06720054894685745
    2. '(int' → logprob: -2.9422006607055664
    3. '(lambda' → logprob: -4.817200660705566
    4. '(str' → logprob: -5.567200660705566
    5. '(
' → logprob: -8.942200660705566
    6. '(eval' → logprob: -9.817200660705566
    7. '(input' → logprob: -10.192200660705566
    8. ')' → logprob: -10.317200660705566
    9. 'int' → logprob: -10.817200660705566
    10. ' (' → logprob: -11.817200660705566

Token 12: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.20571401715278625
    2. '(' → logprob: -1.9557139873504639
    3. '<|end|>' → logprob: -3.455713987350464
    4. '))' → logprob: -5.705714225769043
    5. ')' → logprob: -5.830714225769043
    6. 'input' → logprob: -5.830714225769043
    7. '<|end|>' → logprob: -7.580714225769043
    8. ',input' → logprob: -7.580714225769043
    9. '(user' → logprob: -7.955714225769043
    10. '(
' → logprob: -8.330714225769043

Token 13: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.2817933261394501
    2. ' input' → logprob: -1.4067933559417725
    3. '(input' → logprob: -7.406793117523193
    4. ',input' → logprob: -10.906793594360352
    5. ')' → logprob: -11.656793594360352
    6. '	input' → logprob: -13.406793594360352
    7. '=input' → logprob: -13.406793594360352
    8. '))' → logprob: -13.406793594360352
    9. '[input' → logprob: -13.656793594360352
    10. '   ' → logprob: -14.156793594360352

Token 14: '().' (ID: 1454)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.11977332830429077
    2. '('' → logprob: -3.1197733879089355
    3. '()))' → logprob: -3.6197733879089355
    4. '()' → logprob: -4.2447733879089355
    5. '(()' → logprob: -4.6197733879089355
    6. '(""))' → logprob: -4.7447733879089355
    7. '("("' → logprob: -6.2447733879089355
    8. '("")' → logprob: -6.7447733879089355
    9. '())))' → logprob: -6.7447733879089355
    10. '())' → logprob: -7.1197733879089355

Token 15: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0005624461336992681
    2. 'strip' → logprob: -7.50056266784668
    3. 'rstrip' → logprob: -12.00056266784668
    4. ' split' → logprob: -12.75056266784668
    5. '(split' → logprob: -14.75056266784668
    6. 'replace' → logprob: -18.50056266784668
    7. 'spl' → logprob: -18.75056266784668
    8. ' strip' → logprob: -18.87556266784668
    9. '.split' → logprob: -19.37556266784668
    10. ' ' → logprob: -19.75056266784668

Token 16: '()))
' (ID: 24521)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.4090304374694824
    2. '))' → logprob: -1.5340304374694824
    3. ')))' → logprob: -1.5340304374694824
    4. '()))' → logprob: -1.6590304374694824
    5. '())' → logprob: -2.4090304374694824
    6. '())))' → logprob: -3.6590304374694824
    7. '()' → logprob: -4.659030437469482
    8. '(' → logprob: -4.784030437469482
    9. ' ' → logprob: -9.40903091430664
    10. '('' → logprob: -9.65903091430664

Token 17: '       ' (ID: 309)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05085885897278786
    2. ':' → logprob: -3.800858974456787
    3. '):' → logprob: -4.175858974456787
    4. '))' → logprob: -5.425858974456787
    5. '       ' → logprob: -5.550858974456787
    6. '[' → logprob: -7.050858974456787
    7. 'if' → logprob: -7.800858974456787
    8. ':)' → logprob: -7.800858974456787
    9. '()' → logprob: -8.050858497619629
    10. '           ' → logprob: -8.550858497619629

Token 18: ' b' (ID: 287)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07685395330190659
    2. ')' → logprob: -3.2018539905548096
    3. ' if' → logprob: -4.4518537521362305
    4. '           ' → logprob: -4.5768537521362305
    5. 'if' → logprob: -4.8268537521362305
    6. '[' → logprob: -6.2018537521362305
    7. '   ' → logprob: -8.07685375213623
    8. ':' → logprob: -9.32685375213623
    9. ')
' → logprob: -9.32685375213623
    10. '```' → logprob: -9.32685375213623

Token 19: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.030320432037115097
    2. '=' → logprob: -3.655320405960083
    3. '[' → logprob: -5.655320644378662
    4. '.' → logprob: -8.530320167541504
    5. ')' → logprob: -9.030320167541504
    6. '.append' → logprob: -9.405320167541504
    7. ',' → logprob: -10.405320167541504
    8. '[]' → logprob: -11.530320167541504
    9. '_' → logprob: -11.655320167541504
    10. '[:]' → logprob: -11.655320167541504

Token 20: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.011833076365292072
    2. 'list' → logprob: -5.011833190917969
    3. ' a' → logprob: -5.386833190917969
    4. 'a' → logprob: -8.136833190917969
    5. ' int' → logprob: -9.636833190917969
    6. ' input' → logprob: -10.011833190917969
    7. ' [' → logprob: -10.761833190917969
    8. ' len' → logprob: -11.011833190917969
    9. ' []' → logprob: -11.261833190917969
    10. ' ' → logprob: -11.511833190917969

Token 21: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.5765448808670044
    2. '(' → logprob: -0.8265448808670044
    3. '(int' → logprob: -8.076544761657715
    4. ' (' → logprob: -9.576544761657715
    5. '(
' → logprob: -9.701544761657715
    6. '(lambda' → logprob: -10.826544761657715
    7. 'map' → logprob: -11.201544761657715
    8. '.map' → logprob: -11.326544761657715
    9. '(range' → logprob: -11.701544761657715
    10. '(list' → logprob: -11.826544761657715

Token 22: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.011719271540641785
    2. '(' → logprob: -4.511719226837158
    3. '<int' → logprob: -8.636719703674316
    4. '(str' → logprob: -8.886719703674316
    5. ' (' → logprob: -9.261719703674316
    6. '=int' → logprob: -9.511719703674316
    7. 'int' → logprob: -9.761719703674316
    8. '[int' → logprob: -9.886719703674316
    9. ' int' → logprob: -10.386719703674316
    10. ',int' → logprob: -11.136719703674316

Token 23: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01008953619748354
    2. ',input' → logprob: -4.63508939743042
    3. ',int' → logprob: -8.385089874267578
    4. '(),' → logprob: -10.260089874267578
    5. '(input' → logprob: -10.885089874267578
    6. ' ,' → logprob: -11.385089874267578
    7. ',float' → logprob: -11.760089874267578
    8. 'input' → logprob: -12.010089874267578
    9. ')' → logprob: -12.510089874267578
    10. '(' → logprob: -12.635089874267578

Token 24: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.014297730289399624
    2. 'input' → logprob: -4.264297962188721
    3. ' int' → logprob: -9.514297485351562
    4. '(input' → logprob: -10.264297485351562
    5. 'int' → logprob: -10.639297485351562
    6. ',input' → logprob: -14.639297485351562
    7. '=input' → logprob: -14.764297485351562
    8. '<input' → logprob: -15.764297485351562
    9. '[input' → logprob: -15.764297485351562
    10. ' str' → logprob: -16.576797485351562

Token 25: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -4.084206375409849e-05
    2. '()' → logprob: -10.125041007995605
    3. ' ().' → logprob: -14.500041007995605
    4. '.' → logprob: -15.750041007995605
    5. '()).' → logprob: -16.75004005432129
    6. '(' → logprob: -16.75004005432129
    7. ' .' → logprob: -17.87504005432129
    8. '   ' → logprob: -18.00004005432129
    9. ').' → logprob: -18.37504005432129
    10. '()
' → logprob: -18.50004005432129

Token 26: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.6240566083070007e-06
    2. ' split' → logprob: -13.875001907348633
    3. '(split' → logprob: -14.625001907348633
    4. 'strip' → logprob: -16.625001907348633
    5. 'plit' → logprob: -18.125001907348633
    6. ')' → logprob: -18.375001907348633
    7. '.split' → logprob: -18.500001907348633
    8. 'spl' → logprob: -18.875001907348633
    9. 'rstrip' → logprob: -19.875001907348633
    10. '```' → logprob: -20.250001907348633

Token 27: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.009800123982131481
    2. '))' → logprob: -5.259799957275391
    3. '()' → logprob: -5.759799957275391
    4. '())' → logprob: -6.759799957275391
    5. '()))
' → logprob: -8.63479995727539
    6. '(' → logprob: -11.00979995727539
    7. '()));' → logprob: -11.00979995727539
    8. '())).' → logprob: -11.88479995727539
    9. '()))

' → logprob: -11.88479995727539
    10. '())))' → logprob: -12.13479995727539

Token 28: '   ' (ID: 271)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0010420980397611856
    2. '           ' → logprob: -7.876041889190674
    3. ')' → logprob: -8.126042366027832
    4. 'except' → logprob: -8.376042366027832
    5. '   ' → logprob: -10.251042366027832
    6. ' except' → logprob: -10.751042366027832
    7. ',' → logprob: -11.001042366027832
    8. '        
' → logprob: -11.626042366027832
    9. '<|end|>' → logprob: -12.001042366027832
    10. '#' → logprob: -12.251042366027832

Token 29: ' except' (ID: 6384)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012326570227742195
    2. 'except' (adapté à ' except') → logprob: -4.887326717376709
    3. '   ' → logprob: -6.512326717376709
    4. '           ' → logprob: -6.512326717376709
    5. ')' → logprob: -7.262326717376709
    6. ' except' → logprob: -7.512326717376709
    7. '```' → logprob: -9.01232624053955
    8. '#' → logprob: -10.13732624053955
    9. '[' → logprob: -10.13732624053955
    10. '<|end|>' → logprob: -10.26232624053955

Token 30: ' EOF' (ID: 72412)
  Prédit: ' EOF'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' EOF' → logprob: -0.2028743177652359
    2. ' Value' → logprob: -1.8278743028640747
    3. ' ' → logprob: -4.952874183654785
    4. 'EOF' → logprob: -5.202874183654785
    5. ' Exception' → logprob: -5.702874183654785
    6. ' (' → logprob: -5.827874183654785
    7. 'Value' → logprob: -6.452874183654785
    8. '(Value' → logprob: -6.577874183654785
    9. ' ' → logprob: -8.327874183654785
    10. '(Exception' → logprob: -8.827874183654785

Token 31: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: 0.0
    2. 'rror' → logprob: -17.0
    3. 'error' → logprob: -18.75
    4. ' Error' → logprob: -18.875
    5. ':' → logprob: -21.0
    6. '   ' → logprob: -21.25
    7. 'E' → logprob: -21.25
    8. 'Er' → logprob: -21.375
    9. '```' → logprob: -21.375
    10. 'LError' → logprob: -21.75

Token 32: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00022272850037552416
    2. ':
' → logprob: -9.000223159790039
    3. '       ' → logprob: -9.250223159790039
    4. '   ' → logprob: -13.750223159790039
    5. '):' → logprob: -13.750223159790039
    6. ' :' → logprob: -15.000223159790039
    7. ':return' → logprob: -15.500223159790039
    8. ':**' → logprob: -15.750223159790039
    9. '           ' → logprob: -15.875223159790039
    10. '():' → logprob: -16.25022315979004

Token 33: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00012403888104017824
    2. '   ' → logprob: -9.375123977661133
    3. ' break' → logprob: -10.500123977661133
    4. '    ' → logprob: -12.125123977661133
    5. '           ' → logprob: -13.000123977661133
    6. 'break' → logprob: -13.750123977661133
    7. '        ' → logprob: -13.875123977661133
    8. '      ' → logprob: -15.250123977661133
    9. '	break' → logprob: -15.375123977661133
    10. ' ' → logprob: -15.375123977661133

Token 34: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.03952996805310249
    2. 'break' (adapté à ' break') → logprob: -3.289530038833618
    3. '       ' → logprob: -6.914529800415039
    4. '   ' → logprob: -7.789529800415039
    5. '	break' → logprob: -9.664529800415039
    6. '_break' → logprob: -11.914529800415039
    7. '    
' → logprob: -13.414529800415039
    8. '           ' → logprob: -13.539529800415039
    9. '```' → logprob: -13.664529800415039
    10. '        
' → logprob: -13.664529800415039

Token 35: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1487734168767929
    2. '<|end|>' → logprob: -3.023773431777954
    3. ':' → logprob: -3.523773431777954
    4. '    
' → logprob: -4.148773193359375
    5. ')' → logprob: -4.148773193359375
    6. '\n' → logprob: -5.148773193359375
    7. '#' → logprob: -5.398773193359375
    8. '[' → logprob: -5.648773193359375
    9. '\' → logprob: -5.773773193359375
    10. ':
' → logprob: -6.398773193359375

Token 36: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11520422250032425
    2. ':' → logprob: -2.490204334259033
    3. '<|end|>' → logprob: -4.365204334259033
    4. ')' → logprob: -5.740204334259033
    5. '    
' → logprob: -5.865204334259033
    6. '#' → logprob: -6.615204334259033
    7. '[' → logprob: -6.615204334259033
    8. '       ' → logprob: -7.240204334259033
    9. ':
' → logprob: -7.490204334259033
    10. ' ' → logprob: -7.615204334259033

Token 37: ' hit' (ID: 7103)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008160856552422047
    2. '    
' → logprob: -5.1331610679626465
    3. ' if' → logprob: -7.0081610679626465
    4. '
' → logprob: -7.5081610679626465
    5. '       ' → logprob: -8.383160591125488
    6. '```' → logprob: -9.008160591125488
    7. 'if' → logprob: -9.508160591125488
    8. '        
' → logprob: -9.758160591125488
    9. 'n' → logprob: -9.883160591125488
    10. '  
' → logprob: -10.133160591125488

Token 38: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.22254915535449982
    2. ' =' → logprob: -2.3475492000579834
    3. ',' → logprob: -2.5975492000579834
    4. '=' → logprob: -3.5975492000579834
    5. '_count' → logprob: -7.097548961639404
    6. ')' → logprob: -7.472548961639404
    7. '_' → logprob: -7.847548961639404
    8. ' ,' → logprob: -9.347549438476562
    9. ' ' → logprob: -10.472549438476562
    10. '_counts' → logprob: -10.597549438476562

Token 39: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.24512220919132233
    2. ' ' → logprob: -2.120122194290161
    3. ' sum' → logprob: -3.620122194290161
    4. ' set' → logprob: -3.870122194290161
    5. 'sum' → logprob: -3.870122194290161
    6. 'set' → logprob: -4.49512243270874
    7. ' len' → logprob: -4.74512243270874
    8. 'len' → logprob: -4.99512243270874
    9. ' [' → logprob: -6.99512243270874
    10. '[' → logprob: -7.99512243270874

Token 40: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.23351700603961945
    2. 'sum' → logprob: -1.983517050743103
    3. 'len' → logprob: -3.1085169315338135
    4. 'set' → logprob: -4.733517169952393
    5. ' sum' → logprob: -4.983517169952393
    6. ' ' → logprob: -5.108517169952393
    7. ' len' → logprob: -5.983517169952393
    8. ' set' → logprob: -7.483517169952393
    9. '[' → logprob: -8.108516693115234
    10. 'a' → logprob: -8.233516693115234

Token 41: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 42: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.44851693511009216
    2. '<|end|>' → logprob: -1.0735169649124146
    3. ' ' → logprob: -4.573516845703125
    4. '<|end|>' → logprob: -6.073516845703125
    5. '    ' → logprob: -6.198516845703125
    6. '  ' → logprob: -6.323516845703125
    7. 'for' → logprob: -7.448516845703125
    8. ' for' → logprob: -7.448516845703125
    9. '    
' → logprob: -7.573516845703125
    10. '       ' → logprob: -8.323516845703125

Token 43: ' blow' (ID: 23420)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.12425829470157623
    2. ' for' → logprob: -2.374258279800415
    3. '   ' → logprob: -3.749258279800415
    4. ' ' → logprob: -9.624258041381836
    5. 'space' → logprob: -10.249258041381836
    6. '```' → logprob: -10.749258041381836
    7. '    ' → logprob: -11.124258041381836
    8. '	for' → logprob: -11.249258041381836
    9. 'i' → logprob: -11.374258041381836
    10. 'n' → logprob: -11.624258041381836

Token 44: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16022950410842896
    2. '=' → logprob: -1.9102294445037842
    3. ' ' → logprob: -13.285229682922363
    4. 's' → logprob: -14.035229682922363
    5. '   ' → logprob: -14.160229682922363
    6. ' +=' → logprob: -14.410229682922363
    7. ')' → logprob: -14.660229682922363
    8. '>' → logprob: -15.535229682922363
    9. ',' → logprob: -15.785229682922363
    10. '    ' → logprob: -15.785229682922363

Token 45: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6326116323471069
    2. ' ' → logprob: -0.7576116323471069
    3. '   ' → logprob: -12.007611274719238
    4. ' ' → logprob: -12.757611274719238
    5. '  ' → logprob: -13.757611274719238
    6. ' len' → logprob: -14.570111274719238
    7. '    ' → logprob: -14.695111274719238
    8. ' sum' → logprob: -15.695111274719238
    9. 'len' → logprob: -15.757611274719238
    10. '1' → logprob: -16.070112228393555

Token 46: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0024775585625320673
    2. ' ' → logprob: -6.002477645874023
    3. 'sum' → logprob: -14.127477645874023
    4. 'len' → logprob: -15.127477645874023
    5. ' sum' → logprob: -15.252477645874023
    6. '   ' → logprob: -15.752477645874023
    7. '  ' → logprob: -16.127477645874023
    8. 'b' → logprob: -16.252477645874023
    9. ' len' → logprob: -16.877477645874023
    10. 'a' → logprob: -17.377477645874023

Token 47: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1251107007265091
    2. '<|end|>' → logprob: -2.500110626220703
    3. ' for' → logprob: -4.375110626220703
    4. 'for' → logprob: -4.500110626220703
    5. '
' → logprob: -5.000110626220703
    6. ' ' → logprob: -6.500110626220703
    7. '<|end|>' → logprob: -7.000110626220703
    8. '    
' → logprob: -7.375110626220703
    9. '  ' → logprob: -7.625110626220703
    10. '\n' → logprob: -7.625110626220703

Token 48: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09768503159284592
    2. 'for' → logprob: -2.7226850986480713
    3. ' for' → logprob: -3.9726850986480713
    4. '<|end|>' → logprob: -4.847684860229492
    5. '
' → logprob: -8.722684860229492
    6. '    
' → logprob: -8.972684860229492
    7. '<|end|>' → logprob: -9.097684860229492
    8. '  ' → logprob: -9.347684860229492
    9. ' ' → logprob: -9.847684860229492
    10. '    ' → logprob: -9.847684860229492

Token 49: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.053826745599508286
    2. ' for' → logprob: -3.4288268089294434
    3. '   ' → logprob: -3.9288268089294434
    4. 'n' → logprob: -9.303826332092285
    5. 'counter' → logprob: -10.428826332092285
    6. '```' → logprob: -10.553826332092285
    7. 'length' → logprob: -11.053826332092285
    8. '
' → logprob: -11.053826332092285
    9. 'count' → logprob: -11.178826332092285
    10. 'len' → logprob: -11.303826332092285

Token 50: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.00527478801086545
    2. 'i' → logprob: -5.255274772644043
    3. ' a' → logprob: -11.005274772644043
    4. ' ' → logprob: -12.130274772644043
    5. ' x' → logprob: -12.130274772644043
    6. ' _' → logprob: -13.380274772644043
    7. '(i' → logprob: -13.505274772644043
    8. ' j' → logprob: -13.505274772644043
    9. '   ' → logprob: -14.005274772644043
    10. 'a' → logprob: -14.005274772644043

Token 51: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03379657492041588
    2. 'in' → logprob: -3.408796548843384
    3. ' ' → logprob: -9.033796310424805
    4. '<|end|>' → logprob: -11.158796310424805
    5. ',' → logprob: -12.533796310424805
    6. '  ' → logprob: -12.908796310424805
    7. 'range' → logprob: -13.033796310424805
    8. 's' → logprob: -13.408796310424805
    9. '	in' → logprob: -13.783796310424805
    10. 'n' → logprob: -13.908796310424805

Token 52: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.2519325911998749
    2. 'range' → logprob: -1.5019326210021973
    3. 'a' → logprob: -13.126932144165039
    4. ' a' → logprob: -14.126932144165039
    5. ' ' → logprob: -15.126932144165039
    6. '	range' → logprob: -15.751932144165039
    7. '   ' → logprob: -16.12693214416504
    8. '(range' → logprob: -16.75193214416504
    9. ' xrange' → logprob: -17.37693214416504
    10. '  ' → logprob: -17.87693214416504

Token 53: '(' (ID: 7)
  Prédit: '(len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.019130466505885124
    2. '(' → logprob: -4.019130229949951
    3. ' (' → logprob: -7.019130229949951
    4. ' len' → logprob: -9.39413070678711
    5. 'len' → logprob: -14.26913070678711
    6. '(s' → logprob: -14.89413070678711
    7. '(a' → logprob: -15.26913070678711
    8. '   ' → logprob: -15.51913070678711
    9. '(n' → logprob: -15.64413070678711
    10. '(
' → logprob: -15.89413070678711

Token 54: '4' (ID: 19)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.05731717124581337
    2. '4' → logprob: -2.9323172569274902
    3. ' len' → logprob: -6.30731725692749
    4. '3' → logprob: -8.057316780090332
    5. ' ' → logprob: -9.182316780090332
    6. '   ' → logprob: -9.557316780090332
    7. 'min' → logprob: -9.932316780090332
    8. '5' → logprob: -10.307316780090332
    9. '6' → logprob: -11.432316780090332
    10. '(len' → logprob: -11.557316780090332

Token 55: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00015097891446202993
    2. ')' → logprob: -9.375150680541992
    3. '):
' → logprob: -10.125150680541992
    4. ' ):' → logprob: -11.000150680541992
    5. ':' → logprob: -11.875150680541992
    6. '   ' → logprob: -13.250150680541992
    7. '4' → logprob: -15.875150680541992
    8. '):
' → logprob: -16.375150680541992
    9. '():' → logprob: -16.875150680541992
    10. ' ' → logprob: -16.875150680541992

Token 56: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05814700946211815
    2. '<|end|>' → logprob: -3.1831469535827637
    3. '   ' → logprob: -5.308146953582764
    4. ':' → logprob: -5.683146953582764
    5. ' if' → logprob: -6.183146953582764
    6. '    ' → logprob: -6.433146953582764
    7. ' ' → logprob: -6.808146953582764
    8. ' for' → logprob: -7.308146953582764
    9. '<|end|>' → logprob: -7.933146953582764
    10. ':
' → logprob: -8.683147430419922

Token 57: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.64581698179245
    2. 'if' (adapté à ' if') → logprob: -0.77081698179245
    3. '       ' → logprob: -5.020816802978516
    4. '   ' → logprob: -5.145816802978516
    5. ' for' → logprob: -8.520816802978516
    6. '    ' → logprob: -8.645816802978516
    7. '<|end|>' → logprob: -8.770816802978516
    8. 'for' → logprob: -9.645816802978516
    9. '```' → logprob: -10.395816802978516
    10. ' ' → logprob: -10.395816802978516

Token 58: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.03805997222661972
    2. 'a' → logprob: -3.288059949874878
    3. ' b' → logprob: -12.038060188293457
    4. '   ' → logprob: -12.163060188293457
    5. '	a' → logprob: -13.038060188293457
    6. '    ' → logprob: -13.163060188293457
    7. ' ' → logprob: -13.663060188293457
    8. 'b' → logprob: -13.788060188293457
    9. '(a' → logprob: -14.663060188293457
    10. ' (' → logprob: -15.975560188293457

Token 59: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.005244072061032057
    2. '[' → logprob: -5.255244255065918
    3. ' [' → logprob: -11.880244255065918
    4. '[j' → logprob: -14.130244255065918
    5. '[a' → logprob: -14.255244255065918
    6. '[I' → logprob: -14.505244255065918
    7. '```' → logprob: -15.005244255065918
    8. '==' → logprob: -15.380244255065918
    9. '[index' → logprob: -15.380244255065918
    10. ' ==' → logprob: -16.2552433013916

Token 60: ']' (ID: 60)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6615755558013916
    2. ']' → logprob: -1.1615755558013916
    3. ']==' → logprob: -2.1615755558013916
    4. ' ==' → logprob: -2.9115755558013916
    5. ')' → logprob: -6.7865753173828125
    6. ')==' → logprob: -8.536575317382812
    7. ' ]' → logprob: -9.911575317382812
    8. '=' → logprob: -10.536575317382812
    9. '']==' → logprob: -11.911575317382812
    10. '```' → logprob: -12.411575317382812

Token 61: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.22549958527088165
    2. ' ==' → logprob: -1.6004996299743652
    3. '=' → logprob: -9.475499153137207
    4. ']==' → logprob: -12.600499153137207
    5. ' ' → logprob: -13.350499153137207
    6. ')' → logprob: -13.600499153137207
    7. ')==' → logprob: -13.725499153137207
    8. '!=' → logprob: -14.350499153137207
    9. '===' → logprob: -14.600499153137207
    10. '[' → logprob: -14.725499153137207

Token 62: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.5759509205818176
    2. ' b' → logprob: -0.8259509205818176
    3. ' ' → logprob: -11.575950622558594
    4. '   ' → logprob: -13.700950622558594
    5. '	b' → logprob: -14.450950622558594
    6. '  ' → logprob: -15.825950622558594
    7. '    ' → logprob: -15.950950622558594
    8. ')b' → logprob: -16.450950622558594
    9. ' ' → logprob: -16.825950622558594
    10. ' б' → logprob: -17.075950622558594

Token 63: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.3856492842023727e-06
    2. '[' → logprob: -13.750000953674316
    3. ' [' → logprob: -15.625000953674316
    4. '   ' → logprob: -17.375001907348633
    5. '```' → logprob: -17.375001907348633
    6. 'i' → logprob: -17.500001907348633
    7. '[j' → logprob: -18.375001907348633
    8. '[I' → logprob: -19.000001907348633
    9. '       ' → logprob: -19.625001907348633
    10. '[
' → logprob: -19.750001907348633

Token 64: ']:
' (ID: 22152)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0041742026805877686
    2. '):
' → logprob: -5.75417423248291
    3. ')' → logprob: -7.37917423248291
    4. ':' → logprob: -8.00417423248291
    5. '):
' → logprob: -11.12917423248291
    6. ']:' → logprob: -11.50417423248291
    7. ' ):' → logprob: -12.25417423248291
    8. '       ' → logprob: -12.87917423248291
    9. '   ' → logprob: -13.75417423248291
    10. '）：' → logprob: -14.00417423248291

Token 65: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.018738260492682457
    2. '       ' → logprob: -5.143738269805908
    3. ' hit' → logprob: -5.143738269805908
    4. ':
' → logprob: -5.893738269805908
    5. ':' → logprob: -6.643738269805908
    6. '               ' → logprob: -6.893738269805908
    7. 'hit' → logprob: -7.143738269805908
    8. '(hit' → logprob: -7.518738269805908
    9. '<|end|>' → logprob: -8.51873779296875
    10. '   ' → logprob: -9.64373779296875

Token 66: ' hit' (ID: 7103)
  Prédit: ' hit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' hit' → logprob: -0.4547913670539856
    2. 'hit' (adapté à ' hit') → logprob: -1.0797913074493408
    3. '           ' → logprob: -3.829791307449341
    4. '               ' → logprob: -5.57979154586792
    5. '(hit' → logprob: -8.829791069030762
    6. '   ' → logprob: -10.079791069030762
    7. '       ' → logprob: -10.454791069030762
    8. '_hit' → logprob: -10.704791069030762
    9. '.hit' → logprob: -12.079791069030762
    10. '                   ' → logprob: -12.454791069030762

Token 67: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.6947473287582397
    2. '+=' → logprob: -0.6947473287582397
    3. '+' → logprob: -6.444747447967529
    4. ']+=' → logprob: -12.819746971130371
    5. '=' → logprob: -12.944746971130371
    6. '           ' → logprob: -13.944746971130371
    7. ' +' → logprob: -14.319746971130371
    8. '   ' → logprob: -14.569746971130371
    9. 's' → logprob: -14.694746971130371
    10. '            ' → logprob: -14.819746971130371

Token 68: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.01603436842560768
    2. ' ' → logprob: -4.1410346031188965
    3. '   ' → logprob: -16.391035079956055
    4. '```' → logprob: -18.141035079956055
    5. '           ' → logprob: -19.266035079956055
    6. ' ' → logprob: -19.391035079956055
    7. '１' → logprob: -19.641035079956055
    8. '  ' → logprob: -19.828535079956055
    9. '       ' → logprob: -19.891035079956055
    10. '0' → logprob: -20.266035079956055

Token 69: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.000001907348633
    3. '   ' → logprob: -19.375001907348633
    4. '```' → logprob: -19.625001907348633
    5. '<|end|>' → logprob: -19.875001907348633
    6. '１' → logprob: -20.375001907348633
    7. '  ' → logprob: -21.375001907348633
    8. '१' → logprob: -21.625001907348633
    9. '۱' → logprob: -21.812501907348633
    10. '+' → logprob: -22.000001907348633

Token 70: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5101903080940247
    2. '   ' → logprob: -1.3851902484893799
    3. '<|end|>' → logprob: -2.76019024848938
    4. ' ' → logprob: -4.010190486907959
    5. ' else' → logprob: -4.260190486907959
    6. ' elif' → logprob: -4.510190486907959
    7. '    ' → logprob: -4.760190486907959
    8. '
' → logprob: -4.760190486907959
    9. 'elif' → logprob: -4.885190486907959
    10. 'else' → logprob: -5.010190486907959

Token 71: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5324657559394836
    2. '       ' → logprob: -1.2824656963348389
    3. ' else' → logprob: -2.782465696334839
    4. ' for' → logprob: -3.282465696334839
    5. 'else' → logprob: -3.657465696334839
    6. 'elif' → logprob: -5.657465934753418
    7. 'for' → logprob: -5.907465934753418
    8. '```' → logprob: -6.157465934753418
    9. ' elif' → logprob: -6.657465934753418
    10. '    ' → logprob: -8.032465934753418

Token 72: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3390990197658539
    2. 'for' (adapté à ' for') → logprob: -1.8390990495681763
    3. '   ' → logprob: -3.0890989303588867
    4. ' else' → logprob: -3.2140989303588867
    5. 'else' → logprob: -3.2140989303588867
    6. '       ' → logprob: -6.714098930358887
    7. 'elif' → logprob: -7.714098930358887
    8. '    ' → logprob: -8.089098930358887
    9. ' ' → logprob: -8.464098930358887
    10. '```' → logprob: -8.839098930358887

Token 73: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5210185647010803
    2. ' i' → logprob: -1.3960185050964355
    3. 'j' → logprob: -2.2710185050964355
    4. ' j' → logprob: -2.8960185050964355
    5. ' ' → logprob: -10.271018981933594
    6. 'range' → logprob: -13.021018981933594
    7. 'num' → logprob: -13.146018981933594
    8. ' range' → logprob: -13.271018981933594
    9. 'b' → logprob: -13.396018981933594
    10. 'value' → logprob: -13.521018981933594

Token 74: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.002825561910867691
    2. 'in' → logprob: -6.127825736999512
    3. ' range' → logprob: -7.877825736999512
    4. 'range' → logprob: -8.502825736999512
    5. ' ' → logprob: -9.877825736999512
    6. '  ' → logprob: -12.502825736999512
    7. '   ' → logprob: -13.377825736999512
    8. '(range' → logprob: -14.377825736999512
    9. '    ' → logprob: -14.502825736999512
    10. '<|end|>' → logprob: -15.502825736999512

Token 75: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.42870765924453735
    2. ' range' → logprob: -1.0537075996398926
    3. ' ' → logprob: -12.55370807647705
    4. '   ' → logprob: -14.17870807647705
    5. '	range' → logprob: -14.30370807647705
    6. '(range' → logprob: -14.55370807647705
    7. '  ' → logprob: -15.05370807647705
    8. 'rang' → logprob: -15.42870807647705
    9. 'ran' → logprob: -15.80370807647705
    10. ')' → logprob: -15.92870807647705

Token 76: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -2.868328920158092e-05
    2. '4' → logprob: -10.875028610229492
    3. '(len' → logprob: -12.375028610229492
    4. ' ' → logprob: -13.125028610229492
    5. '(
' → logprob: -13.250028610229492
    6. '((' → logprob: -15.000028610229492
    7. ' (' → logprob: -15.187528610229492
    8. '   ' → logprob: -16.062528610229492
    9. '(-' → logprob: -16.250028610229492
    10. '()' → logprob: -16.375028610229492

Token 77: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.00010366239439463243
    2. ' ' → logprob: -9.250103950500488
    3. '   ' → logprob: -13.000103950500488
    4. ')' → logprob: -13.500103950500488
    5. 'len' → logprob: -13.500103950500488
    6. '(' → logprob: -14.375103950500488
    7. '  ' → logprob: -14.375103950500488
    8. '1' → logprob: -14.812603950500488
    9. '0' → logprob: -14.937603950500488
    10. '```' → logprob: -16.375102996826172

Token 78: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.6933706402778625
    2. '):' → logprob: -0.6933706402778625
    3. ':' → logprob: -9.193370819091797
    4. '   ' → logprob: -9.443370819091797
    5. '):
' → logprob: -11.318370819091797
    6. ':
' → logprob: -11.818370819091797
    7. ')' → logprob: -11.943370819091797
    8. '**' → logprob: -12.568370819091797
    9. '):

' → logprob: -12.693370819091797
    10. '       ' → logprob: -13.318370819091797

Token 79: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.062666155397892
    2. '   ' → logprob: -3.187666177749634
    3. ' for' → logprob: -4.187665939331055
    4. 'for' → logprob: -6.312665939331055
    5. ' if' → logprob: -6.312665939331055
    6. 'if' → logprob: -7.437665939331055
    7. '	   ' → logprob: -10.687665939331055
    8. '	for' → logprob: -10.812665939331055
    9. '<|end|>' → logprob: -11.812665939331055
    10. '	if' → logprob: -11.937665939331055

Token 80: ' for' (ID: 395)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.1514217108488083
    2. 'for' (adapté à ' for') → logprob: -2.1514217853546143
    3. ' if' → logprob: -4.276421546936035
    4. ' for' → logprob: -5.026421546936035
    5. '   ' → logprob: -5.776421546936035
    6. '       ' → logprob: -7.401421546936035
    7. '	if' → logprob: -11.401421546936035
    8. ' ' → logprob: -11.526421546936035
    9. '	for' → logprob: -12.401421546936035
    10. '<|end|>' → logprob: -13.401421546936035

Token 81: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.31326448917388916
    2. ' j' → logprob: -1.3132644891738892
    3. '	j' → logprob: -13.563264846801758
    4. '   ' → logprob: -14.188264846801758
    5. ' ' → logprob: -14.313264846801758
    6. '_j' → logprob: -16.688264846801758
    7. '  ' → logprob: -16.688264846801758
    8. '    ' → logprob: -17.813264846801758
    9. '$j' → logprob: -18.563264846801758
    10. ':j' → logprob: -18.688264846801758

Token 82: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0022280486300587654
    2. 'in' → logprob: -6.252228260040283
    3. ' range' → logprob: -9.127227783203125
    4. '<|end|>' → logprob: -9.502227783203125
    5. ' ' → logprob: -10.002227783203125
    6. 'range' → logprob: -10.127227783203125
    7. '   ' → logprob: -11.752227783203125
    8. '=' → logprob: -12.252227783203125
    9. '(' → logprob: -12.377227783203125
    10. '4' → logprob: -12.877227783203125

Token 83: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.12693524360656738
    2. 'range' → logprob: -2.1269352436065674
    3. '(range' → logprob: -12.001935005187988
    4. '	range' → logprob: -14.501935005187988
    5. ' ' → logprob: -15.626935005187988
    6. '[' → logprob: -15.876935005187988
    7. '4' → logprob: -16.126935958862305
    8. '(' → logprob: -16.501935958862305
    9. ' xrange' → logprob: -16.751935958862305
    10. '.range' → logprob: -17.001935958862305

Token 84: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0003297440707683563
    2. 'range' → logprob: -8.625329971313477
    3. '4' → logprob: -9.000329971313477
    4. ' range' → logprob: -10.625329971313477
    5. '   ' → logprob: -13.875329971313477
    6. ' (' → logprob: -14.000329971313477
    7. '(range' → logprob: -14.500329971313477
    8. ' ' → logprob: -16.000329971313477
    9. '       ' → logprob: -16.500329971313477
    10. 'Range' → logprob: -18.125329971313477

Token 85: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -1.27099974633893e-05
    2. ' ' → logprob: -11.625012397766113
    3. '   ' → logprob: -12.875012397766113
    4. 'range' → logprob: -14.375012397766113
    5. 'i' → logprob: -15.625012397766113
    6. ')' → logprob: -16.12501335144043
    7. '  ' → logprob: -16.87501335144043
    8. ' range' → logprob: -17.12501335144043
    9. '       ' → logprob: -17.50001335144043
    10. '           ' → logprob: -17.93751335144043

Token 86: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.008249660022556782
    2. ':' → logprob: -5.258249759674072
    3. '):
' → logprob: -5.883249759674072
    4. '       ' → logprob: -9.383249282836914
    5. ')' → logprob: -9.758249282836914
    6. '           ' → logprob: -11.008249282836914
    7. '   ' → logprob: -11.008249282836914
    8. 'if' → logprob: -11.133249282836914
    9. '):

' → logprob: -11.883249282836914
    10. ' ):' → logprob: -11.883249282836914

Token 87: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03427554666996002
    2. ' if' → logprob: -3.909275531768799
    3. '               ' → logprob: -5.409275531768799
    4. '<|end|>' → logprob: -5.409275531768799
    5. '       ' → logprob: -5.909275531768799
    6. '            ' → logprob: -7.784275531768799
    7. 'if' → logprob: -7.784275531768799
    8. '        ' → logprob: -8.284276008605957
    9. ' and' → logprob: -8.659276008605957
    10. ':' → logprob: -8.784276008605957

Token 88: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3015345633029938
    2. 'if' (adapté à ' if') → logprob: -1.5515345335006714
    3. '               ' → logprob: -3.051534652709961
    4. '           ' → logprob: -6.926534652709961
    5. '       ' → logprob: -9.301534652709961
    6. '            ' → logprob: -11.301534652709961
    7. '   ' → logprob: -12.051534652709961
    8. ' ' → logprob: -12.426534652709961
    9. '                   ' → logprob: -13.051534652709961
    10. '                ' → logprob: -13.301534652709961

Token 89: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.0287810564041138
    2. ' i' → logprob: -1.0287810564041138
    3. 'a' → logprob: -1.7787810564041138
    4. ' a' → logprob: -2.153780937194824
    5. '(i' → logprob: -9.278780937194824
    6. ' (' → logprob: -9.903780937194824
    7. '   ' → logprob: -10.528780937194824
    8. ' ' → logprob: -10.528780937194824
    9. '	i' → logprob: -11.903780937194824
    10. '(a' → logprob: -12.028780937194824

Token 90: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.6931560039520264
    2. '!=' → logprob: -0.6931560039520264
    3. ']!=' → logprob: -12.818156242370605
    4. ')!=' → logprob: -13.193156242370605
    5. '!==' → logprob: -13.818156242370605
    6. ' ' → logprob: -14.193156242370605
    7. '==' → logprob: -14.443156242370605
    8. '()!=' → logprob: -14.568156242370605
    9. '<|end|>' → logprob: -14.943156242370605
    10. '!' → logprob: -15.568156242370605

Token 91: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -2.15310683415737e-05
    2. ' j' → logprob: -10.750021934509277
    3. '	j' → logprob: -17.00002098083496
    4. ' ' → logprob: -17.75002098083496
    5. '   ' → logprob: -17.75002098083496
    6. '  ' → logprob: -20.75002098083496
    7. '     ' → logprob: -21.37502098083496
    8. '    ' → logprob: -21.50002098083496
    9. '```' → logprob: -21.62502098083496
    10. '_j' → logprob: -21.87502098083496

Token 92: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.0013921386562287807
    2. 'and' → logprob: -6.626392364501953
    3. '           ' → logprob: -10.251392364501953
    4. '               ' → logprob: -10.626392364501953
    5. ' ' → logprob: -13.001392364501953
    6. '            ' → logprob: -13.751392364501953
    7. '<|end|>' → logprob: -14.001392364501953
    8. '	and' → logprob: -14.751392364501953
    9. ' ' → logprob: -15.251392364501953
    10. '              ' → logprob: -15.626392364501953

Token 93: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.16101597249507904
    2. 'a' → logprob: -1.9110159873962402
    3. ' b' → logprob: -8.036015510559082
    4. 'b' → logprob: -8.411015510559082
    5. '   ' → logprob: -8.911015510559082
    6. '           ' → logprob: -10.286015510559082
    7. '	a' → logprob: -10.536015510559082
    8. ' ' → logprob: -11.036015510559082
    9. '(a' → logprob: -11.161015510559082
    10. '    ' → logprob: -11.911015510559082

Token 94: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0009579126490280032
    2. '[j' → logprob: -7.00095796585083
    3. '[' → logprob: -10.000957489013672
    4. '```' → logprob: -15.000957489013672
    5. '[a' → logprob: -15.500957489013672
    6. '[I' → logprob: -15.750957489013672
    7. ' [' → logprob: -15.750957489013672
    8. 'i' → logprob: -16.125957489013672
    9. '[
' → logprob: -17.000957489013672
    10. '   ' → logprob: -17.125957489013672

Token 95: ']' (ID: 60)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.9204620122909546
    2. ']' → logprob: -1.2954620122909546
    3. ' ==' → logprob: -1.2954620122909546
    4. ']==' → logprob: -2.920462131500244
    5. ')' → logprob: -9.045461654663086
    6. '=' → logprob: -10.670461654663086
    7. ')==' → logprob: -11.045461654663086
    8. ' ' → logprob: -11.420461654663086
    9. '']==' → logprob: -11.420461654663086
    10. ' ]' → logprob: -11.670461654663086

Token 96: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.10024819523096085
    2. ' ==' → logprob: -2.350248098373413
    3. ']==' → logprob: -10.975248336791992
    4. '=' → logprob: -11.600248336791992
    5. ')' → logprob: -12.100248336791992
    6. ')==' → logprob: -12.225248336791992
    7. '===' → logprob: -12.725248336791992
    8. ' ' → logprob: -14.600248336791992
    9. '==
' → logprob: -15.100248336791992
    10. ']' → logprob: -15.350248336791992

Token 97: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.048587486147880554
    2. ' b' → logprob: -3.0485875606536865
    3. '   ' → logprob: -16.423587799072266
    4. ' ' → logprob: -16.798587799072266
    5. ')b' → logprob: -17.423587799072266
    6. '	b' → logprob: -17.673587799072266
    7. '```' → logprob: -18.923587799072266
    8. ' б' → logprob: -18.923587799072266
    9. '    ' → logprob: -19.048587799072266
    10. '>b' → logprob: -19.048587799072266

Token 98: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -1.1472419600977446e-06
    2. 'j' → logprob: -14.500000953674316
    3. '[i' → logprob: -14.875000953674316
    4. '[' → logprob: -15.625000953674316
    5. ' [' → logprob: -18.000001907348633
    6. '```' → logprob: -18.250001907348633
    7. '   ' → logprob: -18.375001907348633
    8. '       ' → logprob: -19.125001907348633
    9. '[
' → logprob: -20.125001907348633
    10. '	j' → logprob: -20.250001907348633

Token 99: ']:
' (ID: 22152)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3639645278453827
    2. '):' → logprob: -1.238964557647705
    3. ']:' → logprob: -4.988964557647705
    4. ':
' → logprob: -5.488964557647705
    5. '):
' → logprob: -5.988964557647705
    6. '       ' → logprob: -6.863964557647705
    7. '<|end|>' → logprob: -8.363964080810547
    8. '               ' → logprob: -8.613964080810547
    9. '           ' → logprob: -8.988964080810547
    10. ')' → logprob: -8.988964080810547

Token 100: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.19593985378742218
    2. ' blow' → logprob: -1.8209398984909058
    3. 'bl' → logprob: -4.195940017700195
    4. '           ' → logprob: -7.445940017700195
    5. '       ' → logprob: -8.445940017700195
    6. '                   ' → logprob: -10.195940017700195
    7. ':
' → logprob: -10.195940017700195
    8. '   ' → logprob: -10.195940017700195
    9. '			' → logprob: -11.070940017700195
    10. '                       ' → logprob: -11.195940017700195

Token 101: ' blow' (ID: 23420)
  Prédit: 'bl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bl' → logprob: -0.13527122139930725
    2. ' blow' → logprob: -2.1352713108062744
    3. '               ' → logprob: -5.135271072387695
    4. 'blower' → logprob: -6.635271072387695
    5. '           ' → logprob: -7.635271072387695
    6. '                   ' → logprob: -8.010271072387695
    7. '   ' → logprob: -9.135271072387695
    8. 'blast' → logprob: -10.135271072387695
    9. '       ' → logprob: -10.135271072387695
    10. '                       ' → logprob: -10.760271072387695

Token 102: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.018152514472603798
    2. '+=' → logprob: -4.018152713775635
    3. '+' → logprob: -13.143152236938477
    4. ' +' → logprob: -15.393152236938477
    5. '                ' → logprob: -16.018152236938477
    6. '=' → logprob: -16.018152236938477
    7. '            ' → logprob: -16.518152236938477
    8. '               ' → logprob: -17.143152236938477
    9. ' ' → logprob: -17.268152236938477
    10. ' =' → logprob: -17.393152236938477

Token 103: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0028049908578395844
    2. ' ' → logprob: -5.877804756164551
    3. '   ' → logprob: -16.377805709838867
    4. '+' → logprob: -18.002805709838867
    5. '0' → logprob: -18.252805709838867
    6. '           ' → logprob: -18.377805709838867
    7. '```' → logprob: -18.502805709838867
    8. '<|end|>' → logprob: -18.752805709838867
    9. '１' → logprob: -18.815305709838867
    10. '                   ' → logprob: -19.690305709838867

Token 104: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.625000953674316
    3. '１' → logprob: -20.625
    4. '0' → logprob: -21.0
    5. '   ' → logprob: -21.25
    6. '<|end|>' → logprob: -21.25
    7. '```' → logprob: -21.25
    8. '۱' → logprob: -21.875
    9. '  ' → logprob: -22.875
    10. '           ' → logprob: -23.0625

Token 105: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 106: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 107: ' print' (ID: 2123)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 108: '(hit' (ID: 147063)
  Prédit: '(hit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(hit' → logprob: -0.011341936886310577
    2. '(f' → logprob: -5.1363420486450195
    3. '(' → logprob: -5.8863420486450195
    4. '(h' → logprob: -6.5113420486450195
    5. '("' → logprob: -7.0113420486450195
    6. '('' → logprob: -8.51134204864502
    7. '((' → logprob: -11.26134204864502
    8. 'hit' → logprob: -11.76134204864502
    9. '()' → logprob: -12.76134204864502
    10. '("{}' → logprob: -13.38634204864502

Token 109: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5773236751556396
    2. ')' → logprob: -0.8273236751556396
    3. ',b' → logprob: -7.577323913574219
    4. '   ' → logprob: -7.827323913574219
    5. ' ,' → logprob: -8.327323913574219
    6. '+' → logprob: -9.452323913574219
    7. ' )' → logprob: -9.452323913574219
    8. ',)' → logprob: -11.327323913574219
    9. '))' → logprob: -11.702323913574219
    10. ' +' → logprob: -11.827323913574219

Token 110: ' blow' (ID: 23420)
  Prédit: 'bl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bl' → logprob: -0.10022101551294327
    2. ' blow' → logprob: -2.3502209186553955
    3. '(bl' → logprob: -12.725220680236816
    4. 'blast' → logprob: -13.225220680236816
    5. 'blower' → logprob: -13.475220680236816
    6. 'b' → logprob: -13.600220680236816
    7. ' blown' → logprob: -14.100220680236816
    8. ' bl' → logprob: -14.225220680236816
    9. 'ble' → logprob: -14.225220680236816
    10. ' blows' → logprob: -14.475220680236816

Token 111: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.5577775128767826e-06
    2. ')
' → logprob: -12.250005722045898
    3. ' )' → logprob: -15.000005722045898
    4. ')`' → logprob: -15.875005722045898
    5. '))' → logprob: -16.1250057220459
    6. '),' → logprob: -17.3750057220459
    7. ')}' → logprob: -17.5000057220459
    8. '   ' → logprob: -17.7500057220459
    9. ')**' → logprob: -18.2500057220459
    10. '`)' → logprob: -18.6250057220459


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 109
Tokens correctement prédits (1ère position, stricte): 57
Tokens correctement prédits (1ère position, avec adaptation): 58
Tokens correctement prédits (top 10): 93
Précision stricte (1ère position): 52.29%
Précision adaptée (1ère position): 53.21%
Précision (top 10): 85.32%
================================================================================
