================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:09:29
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
import threading
from typing import List, Tuple, Dict, Optional
import heapq

class Edge:
    def __init__(self, from_island: int, to_island: int, tide_time: int):
        self.from_island = from_island
        self.to_island = to_island
        self.tide_time = tide_time

class IslandGraph:
    def __init__(self, num_islands: int):
        self.num_islands = num_islands
        # adjacency list: island -> list of edges
        self.adj: Dict[int, List[Edge]] = {i:[] for i in range(1, num_islands +1)}
    
    def add_bridge(self, from_island: int, to_island: int, tide_time: int):
        edge = Edge(from_island, to_island, tide_time)
        self.adj[from_island].append(edge)

class State:
    """
    Represents the arrival time at an island during the search, 
    facilitating a priority queue ordering by earliest arrival.
    """
    def __init__(self, island: int, arrival_time: int):
        self.island = island
        self.arrival_time = arrival_time
    
    def __lt__(self, other):
        return self.arrival_time < other.arrival_time

class OneTimePathSolver:
    def __init__(self, graph: IslandGraph):
        self.graph = graph
        self.N = graph.num_islands
        # earliest arrival time initialized as None, meaning unreachable yet
        self.earliest_arrival: List[Optional[int]] = [None] * (self.N + 1)
    
    def solve(self) -> int:
        """
        Performs a shortest path style search on the time-labeled edges 
        to find the maximum waiting time at islands before reaching the last island.
        Returns:
            max_wait_time (int) if reachable, else -1
        """
        # Initialize earliest arrival times
        self.earliest_arrival[1] = 0  # start island at time 0
        
        # Priority queue for Dijkstra-like approach pushing (arrival_time, island)
        heap: List[Tuple[int,int]] = []
        heapq.heappush(heap, (0,1))
        
        while heap:
            current_time, island = heapq.heappop(heap)
            if self.earliest_arrival[island] is not None and current_time > self.earliest_arrival[island]:
                continue
            # Explore neighbors
            for edge in self.graph.adj[island]:
                # Wait until bridge tide_time c_i
                if edge.tide_time >= current_time:
                    new_arrival = edge.tide_time
                    # If we can reach to_island earlier, update and push to heap
                    if (self.earliest_arrival[edge.to_island] is None or self.earliest_arrival[edge.to_island] > new_arrival):
                        self.earliest_arrival[edge.to_island] = new_arrival
                        heapq.heappush(heap, (new_arrival, edge.to_island))
        
        # If last island unreachable, return -1
        if self.earliest_arrival[self.N] is None:
            return -1
        
        # Compute max waiting time on islands before last island
        # According to problem, output the max arrival time at any island from 1 to N-1 along the path
        # The path is implicitly given by earliest arrivals that allowed arrival at N
        # Actually, we can safely return earliest_arrival[N], since waiting is max among islands before reaching N
        # Because arrival to N means waiting at previous island until that bridge's tide_time,
        # and arrival times to nodes are non-decreasing (waiting only).
        max_wait_time = -1
        for i in range(1, self.N):
            if self.earliest_arrival[i] is not None:
                if self.earliest_arrival[i] > max_wait_time:
                    max_wait_time = self.earliest_arrival[i]
        return max_wait_time

class InputHandler:
    def __init__(self):
        self.N = 0
        self.M = 0
        self.bridges: List[Tuple[int,int,int]] = []
    
    def read_input(self):
        self.N, self.M = map(int, sys.stdin.readline().split())
        for _ in range(self.M):
            a,b,c = map(int, sys.stdin.readline().split())
            self.bridges.append((a,b,c))

class OutputHandler:
    @staticmethod
    def print_result(result: int):
        print(result)

class OneTimePathApp:
    def __init__(self):
        self.input_handler = InputHandler()
        self.graph: Optional[IslandGraph] = None
        self.solver: Optional[OneTimePathSolver] = None
        self.output_handler = OutputHandler()
    
    def run(self):
        self.input_handler.read_input()
        self.graph = IslandGraph(self.input_handler.N)
        for (a,b,c) in self.input_handler.bridges:
            self.graph.add_bridge(a,b,c)
        self.solver = OneTimePathSolver(self.graph)
        answer = self.solver.solve()
        self.output_handler.print_result(answer)

def main():
    app = OneTimePathApp()
    app.run()

if __name__ == '__main__':
    threading.Thread(target=main,).start()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'import' (ID: 561)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.21183791756629944
    2. '.' → logprob: -2.3368380069732666
    3. '<|end|>' → logprob: -2.8368380069732666
    4. '\' → logprob: -4.7118377685546875
    5. 'newline' → logprob: -5.0868377685546875
    6. 'import' → logprob: -5.0868377685546875
    7. '
' → logprob: -5.7118377685546875
    8. '' → logprob: -5.8368377685546875
    9. '<|end|>' → logprob: -5.8368377685546875
    10. '\r' → logprob: -6.3368377685546875

Token 4: ' threading' (ID: 72047)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -1.259079363080673e-05
    2. 'os' → logprob: -11.375012397766113
    3. ' math' → logprob: -14.875012397766113
    4. '"os' → logprob: -15.250012397766113
    5. ' re' → logprob: -15.875012397766113
    6. ' json' → logprob: -16.00001335144043
    7. '_os' → logprob: -17.00001335144043
    8. '	os' → logprob: -17.00001335144043
    9. ' ' → logprob: -17.25001335144043
    10. ' argparse' → logprob: -17.25001335144043

Token 5: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8691912293434143
    2. '\n' → logprob: -1.3691911697387695
    3. '

' → logprob: -2.2441911697387695
    4. '.' → logprob: -2.3691911697387695
    5. '\' → logprob: -2.9941911697387695
    6. '```' → logprob: -3.6191911697387695
    7. 'import' → logprob: -4.1191911697387695
    8. '.Thread' → logprob: -4.9941911697387695
    9. ',' → logprob: -5.3691911697387695
    10. '#' → logprob: -5.4941911697387695

Token 6: 'from' (ID: 2845)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.7684133052825928
    2. '\n' → logprob: -1.7684133052825928
    3. '
' → logprob: -1.8934133052825928
    4. 'import' → logprob: -2.8934133052825928
    5. '\' → logprob: -3.0184133052825928
    6. '

' → logprob: -3.5184133052825928
    7. '.Thread' → logprob: -4.018413543701172
    8. '' → logprob: -4.143413543701172
    9. '```' → logprob: -4.143413543701172
    10. ',' → logprob: -4.643413543701172

Token 7: ' typing' (ID: 34152)
  Prédit: ' queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' queue' → logprob: -0.009118394926190376
    2. ' socket' → logprob: -5.259118556976318
    3. 'queue' → logprob: -6.384118556976318
    4. ' concurrent' → logprob: -7.509118556976318
    5. ' collections' → logprob: -7.634118556976318
    6. ' time' → logprob: -7.759118556976318
    7. ' io' → logprob: -8.63411808013916
    8. ' os' → logprob: -8.88411808013916
    9. ' functools' → logprob: -9.38411808013916
    10. ' multiprocessing' → logprob: -9.38411808013916

Token 8: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.05616741627454758
    2. 'import' → logprob: -2.9311673641204834
    3. '.' → logprob: -6.8061676025390625
    4. ' ' → logprob: -9.556167602539062
    5. '	import' → logprob: -10.556167602539062
    6. '.import' → logprob: -11.181167602539062
    7. '<|end|>' → logprob: -11.431167602539062
    8. '_import' → logprob: -11.431167602539062
    9. '[' → logprob: -11.931167602539062
    10. '```' → logprob: -12.056167602539062

Token 9: ' List' (ID: 2655)
  Prédit: ' Any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Any' → logprob: -0.4453463554382324
    2. ' List' → logprob: -1.1953463554382324
    3. ' Callable' → logprob: -3.1953463554382324
    4. 'Any' → logprob: -4.945346355438232
    5. ' Generator' → logprob: -5.445346355438232
    6. ' Optional' → logprob: -5.820346355438232
    7. 'List' → logprob: -7.570346355438232
    8. ' Union' → logprob: -8.32034683227539
    9. 'Callable' → logprob: -8.69534683227539
    10. ' Iterable' → logprob: -9.07034683227539

Token 10: ',' (ID: 11)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.5121549367904663
    2. '
' → logprob: -2.012155055999756
    3. '```' → logprob: -2.012155055999756
    4. '\n' → logprob: -2.887155055999756
    5. 'import' → logprob: -3.262155055999756
    6. 'class' → logprob: -4.387155055999756
    7. '\' → logprob: -4.762155055999756
    8. ',' → logprob: -5.012155055999756
    9. '<|end|>' → logprob: -5.887155055999756
    10. 'def' → logprob: -6.012155055999756

Token 11: ' Tuple' (ID: 50841)
  Prédit: ' Optional'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Optional' → logprob: -0.6803152561187744
    2. 'Optional' → logprob: -1.5553152561187744
    3. 'Any' → logprob: -2.5553152561187744
    4. ' Callable' → logprob: -2.5553152561187744
    5. ' Any' → logprob: -2.9303152561187744
    6. 'Tuple' → logprob: -4.180315017700195
    7. ' Tuple' → logprob: -4.180315017700195
    8. 'Callable' → logprob: -4.555315017700195
    9. ' Dict' → logprob: -4.680315017700195
    10. 'Dict' → logprob: -4.805315017700195

Token 12: ',' (ID: 11)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.323446273803711
    2. 'class' → logprob: -1.573446273803711
    3. 'def' → logprob: -1.948446273803711
    4. '
' → logprob: -2.073446273803711
    5. 'import' → logprob: -2.323446273803711
    6. '```' → logprob: -2.823446273803711
    7. '\' → logprob: -3.073446273803711
    8. '

' → logprob: -3.573446273803711
    9. '#' → logprob: -4.448446273803711
    10. ',' → logprob: -5.323446273803711

Token 13: ' Dict' (ID: 55179)
  Prédit: ' Optional'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Optional' → logprob: -1.2946733236312866
    2. ' Callable' → logprob: -1.9196733236312866
    3. 'Optional' → logprob: -2.169673442840576
    4. 'Any' → logprob: -2.419673442840576
    5. ' Any' → logprob: -2.544673442840576
    6. ' Union' → logprob: -2.669673442840576
    7. ' Dict' → logprob: -3.044673442840576
    8. 'Callable' → logprob: -3.294673442840576
    9. 'Dict' → logprob: -3.419673442840576
    10. 'Union' → logprob: -3.794673442840576

Token 14: ',' (ID: 11)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -1.2821521759033203
    2. '\n' → logprob: -1.6571521759033203
    3. '
' → logprob: -2.1571521759033203
    4. 'class' → logprob: -2.1571521759033203
    5. '

' → logprob: -2.2821521759033203
    6. '```' → logprob: -2.2821521759033203
    7. '\' → logprob: -3.4071521759033203
    8. ',' → logprob: -3.7821521759033203
    9. 'def' → logprob: -3.9071521759033203
    10. '#' → logprob: -5.40715217590332

Token 15: ' Optional' (ID: 19351)
  Prédit: ' Any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Any' → logprob: -1.1990512609481812
    2. ' Optional' → logprob: -1.4490512609481812
    3. ' Union' → logprob: -1.8240512609481812
    4. 'Any' → logprob: -1.9490512609481812
    5. ' Set' → logprob: -2.8240513801574707
    6. ' Callable' → logprob: -3.6990513801574707
    7. 'Optional' → logprob: -3.8240513801574707
    8. 'Set' → logprob: -4.199051380157471
    9. ' defaultdict' → logprob: -4.449051380157471
    10. 'Union' → logprob: -4.574051380157471

Token 16: '
' (ID: 198)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.23335246741771698
    2. '
' → logprob: -1.9833524227142334
    3. '\n' → logprob: -3.3583524227142334
    4. 'import' → logprob: -4.1083526611328125
    5. '```' → logprob: -4.9833526611328125
    6. 'class' → logprob: -5.1083526611328125
    7. '\' → logprob: -6.2333526611328125
    8. ',' → logprob: -7.1083526611328125
    9. 'def' → logprob: -7.3583526611328125
    10. '


' → logprob: -7.3583526611328125

Token 17: 'import' (ID: 561)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.4572997987270355
    2. '

' → logprob: -2.0822997093200684
    3. 'import' → logprob: -2.7072997093200684
    4. 'def' → logprob: -3.0822997093200684
    5. '```' → logprob: -3.0822997093200684
    6. '
' → logprob: -3.2072997093200684
    7. '\n' → logprob: -3.5822997093200684
    8. '\' → logprob: -5.457299709320068
    9. '#' → logprob: -5.832299709320068
    10. ',' → logprob: -6.082299709320068

Token 18: ' heap' (ID: 37237)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.028514254838228226
    2. ' collections' → logprob: -4.028514385223389
    3. ' re' → logprob: -6.028514385223389
    4. ' json' → logprob: -6.153514385223389
    5. ' time' → logprob: -6.403514385223389
    6. ' typing' → logprob: -7.028514385223389
    7. ' asyncio' → logprob: -7.278514385223389
    8. ' functools' → logprob: -7.403514385223389
    9. ' math' → logprob: -7.653514385223389
    10. ' logging' → logprob: -8.15351390838623

Token 19: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -7.481510692741722e-05
    2. '.' → logprob: -10.25007438659668
    3. '_' → logprob: -11.12507438659668
    4. 'queue' → logprob: -11.75007438659668
    5. '#' → logprob: -12.37507438659668
    6. '=' → logprob: -12.50007438659668
    7. '_queue' → logprob: -13.25007438659668
    8. 'ify' → logprob: -13.62507438659668
    9. ')' → logprob: -13.87507438659668
    10. 's' → logprob: -14.50007438659668

Token 20: '

' (ID: 279)
  Prédit: '

'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.07141406089067459
    2. '
' → logprob: -2.696413993835449
    3. 'class' → logprob: -7.196413993835449
    4. 'def' → logprob: -8.69641399383545
    5. '


' → logprob: -8.82141399383545
    6. '```' → logprob: -9.19641399383545
    7. '
' → logprob: -9.44641399383545
    8. 'import' → logprob: -9.82141399383545
    9. '\n' → logprob: -9.94641399383545
    10. '' → logprob: -10.44641399383545

Token 21: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.08354956656694412
    2. 'def' → logprob: -3.2085494995117188
    3. '
' → logprob: -3.3335494995117188
    4. 'clas' → logprob: -6.583549499511719
    5. '

' → logprob: -7.458549499511719
    6. 'c' → logprob: -7.583549499511719
    7. '```' → logprob: -7.958549499511719
    8. 'd' → logprob: -8.208549499511719
    9. 'cla' → logprob: -8.458549499511719
    10. 'cl' → logprob: -8.833549499511719

Token 22: ' Edge' (ID: 16396)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.15901383757591248
    2. ' Priority' → logprob: -2.4090137481689453
    3. ' A' → logprob: -3.4090137481689453
    4. ' My' → logprob: -4.409013748168945
    5. ' D' → logprob: -6.284013748168945
    6. ' Task' → logprob: -6.659013748168945
    7. ' Heap' → logprob: -6.784013748168945
    8. ' Min' → logprob: -7.284013748168945
    9. ' Scheduler' → logprob: -7.284013748168945
    10. ' Node' → logprob: -7.409013748168945

Token 23: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0006548931705765426
    2. '(' → logprob: -7.375654697418213
    3. ' :' → logprob: -11.625655174255371
    4. ':
' → logprob: -12.250655174255371
    5. '):' → logprob: -12.375655174255371
    6. ':**' → logprob: -12.625655174255371
    7. '():' → logprob: -13.000655174255371
    8. '(:' → logprob: -13.125655174255371
    9. '<|end|>' → logprob: -13.750655174255371
    10. '>:' → logprob: -14.875655174255371

Token 24: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0006633530138060451
    2. '<|end|>' → logprob: -8.250663757324219
    3. ':
' → logprob: -8.875663757324219
    4. ' :' → logprob: -9.125663757324219
    5. '(' → logprob: -9.625663757324219
    6. '   ' → logprob: -10.375663757324219
    7. ' ' → logprob: -11.375663757324219
    8. '(object' → logprob: -11.625663757324219
    9. '```' → logprob: -11.625663757324219
    10. ' (' → logprob: -12.125663757324219

Token 25: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.26877790689468384
    2. ':' → logprob: -2.018777847290039
    3. 'def' (adapté à ' def') → logprob: -3.268777847290039
    4. ' def' → logprob: -3.643777847290039
    5. 'class' → logprob: -3.893777847290039
    6. '(' → logprob: -5.143777847290039
    7. '```' → logprob: -5.268777847290039
    8. ' ' → logprob: -6.018777847290039
    9. ' :' → logprob: -6.643777847290039
    10. ' (' → logprob: -7.393777847290039

Token 26: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.025106139481067657
    2. ' init' → logprob: -4.400105953216553
    3. 'init' → logprob: -5.525105953216553
    4. '__' → logprob: -6.025105953216553
    5. '_' → logprob: -6.400105953216553
    6. 'itialize' → logprob: -6.400105953216553
    7. '_init' → logprob: -6.900105953216553
    8. ' ' → logprob: -7.900105953216553
    9. ' def' → logprob: -7.900105953216553
    10. ' _' → logprob: -7.900105953216553

Token 27: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -1.1472419600977446e-06
    2. 'ini' → logprob: -14.750000953674316
    3. ' init' → logprob: -15.000000953674316
    4. 'in' → logprob: -15.875000953674316
    5. 'inite' → logprob: -16.000001907348633
    6. '	init' → logprob: -18.000001907348633
    7. 'int' → logprob: -18.250001907348633
    8. 'inti' → logprob: -18.750001907348633
    9. '   ' → logprob: -19.375001907348633
    10. 'initi' → logprob: -19.625001907348633

Token 28: '__(' (ID: 8241)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.007554454728960991
    2. '__(' → logprob: -5.757554531097412
    3. ' (' → logprob: -6.007554531097412
    4. '_' → logprob: -7.132554531097412
    5. '(self' → logprob: -7.632554531097412
    6. '_(' → logprob: -8.257554054260254
    7. '<|end|>' → logprob: -8.632554054260254
    8. '__(
' → logprob: -10.507554054260254
    9. '__' → logprob: -10.632554054260254
    10. '```' → logprob: -10.757554054260254

Token 29: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.003604224883019924
    2. ' self' → logprob: -5.628604412078857
    3. '(self' → logprob: -12.6286039352417
    4. '	self' → logprob: -15.5036039352417
    5. 's' → logprob: -15.7536039352417
    6. '_self' → logprob: -16.003604888916016
    7. ' ' → logprob: -16.128604888916016
    8. ')' → logprob: -16.378604888916016
    9. 'elf' → logprob: -16.628604888916016
    10. '0' → logprob: -16.753604888916016

Token 30: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4347801208496094
    2. ' ,' → logprob: -1.0597801208496094
    3. '(self' → logprob: -6.684780120849609
    4. 'self' → logprob: -6.684780120849609
    5. ' (' → logprob: -6.809780120849609
    6. ' self' → logprob: -7.434780120849609
    7. '(' → logprob: -8.05978012084961
    8. ' )' → logprob: -8.05978012084961
    9. ')' → logprob: -8.18478012084961
    10. '_,' → logprob: -8.30978012084961

Token 31: ' from' (ID: 591)
  Prédit: ' u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' u' → logprob: -0.9145224094390869
    2. ' self' → logprob: -1.539522409439087
    3. ' source' → logprob: -1.914522409439087
    4. 'self' → logprob: -2.289522409439087
    5. 'u' → logprob: -2.664522409439087
    6. 'source' → logprob: -3.539522409439087
    7. ' from' → logprob: -4.289522171020508
    8. ' src' → logprob: -4.914522171020508
    9. 'from' → logprob: -5.289522171020508
    10. ' start' → logprob: -5.289522171020508

Token 32: '_is' (ID: 15224)
  Prédit: '_node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.019178880378603935
    2. '_' → logprob: -4.019178867340088
    3. '_vertex' → logprob: -6.894178867340088
    4. '_,' → logprob: -12.269179344177246
    5. '_NODE' → logprob: -13.394179344177246
    6. '_id' → logprob: -13.394179344177246
    7. '_)' → logprob: -13.519179344177246
    8. '_Node' → logprob: -13.519179344177246
    9. '_nodes' → logprob: -13.894179344177246
    10. '_city' → logprob: -14.644179344177246

Token 33: 'land' (ID: 2117)
  Prédit: '_node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.46904584765434265
    2. 'land' → logprob: -1.844045877456665
    3. 'de' → logprob: -2.469045877456665
    4. 'd' → logprob: -2.969045877456665
    5. '_' → logprob: -3.219045877456665
    6. 'node' → logprob: -3.719045877456665
    7. 'ode' → logprob: -5.094045639038086
    8. 't' → logprob: -5.594045639038086
    9. ' node' → logprob: -6.469045639038086
    10. 'e' → logprob: -6.594045639038086

Token 34: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.049903858453035355
    2. ':' → logprob: -3.0499038696289062
    3. '_id' → logprob: -7.049903869628906
    4. ' ,' → logprob: -8.049903869628906
    5. ':int' → logprob: -9.674903869628906
    6. ':,' → logprob: -10.674903869628906
    7. '_,' → logprob: -10.799903869628906
    8. ':str' → logprob: -12.549903869628906
    9. '_:' → logprob: -12.674903869628906
    10. ' :' → logprob: -13.049903869628906

Token 35: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.2613987326622009
    2. 'int' → logprob: -1.5113987922668457
    3. ' str' → logprob: -4.761398792266846
    4. 'str' → logprob: -7.636398792266846
    5. ':int' → logprob: -8.886398315429688
    6. ' ' → logprob: -9.136398315429688
    7. '[int' → logprob: -9.261398315429688
    8. '=int' → logprob: -11.011398315429688
    9. '<int' → logprob: -11.886398315429688
    10. ' '' → logprob: -12.511398315429688

Token 36: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00043102685594931245
    2. ' ,' → logprob: -7.750431060791016
    3. '‌,' → logprob: -16.250431060791016
    4. ',int' → logprob: -16.500431060791016
    5. ',
' → logprob: -16.750431060791016
    6. '<|end|>' → logprob: -17.250431060791016
    7. ')' → logprob: -17.625431060791016
    8. 'to' → logprob: -17.625431060791016
    9. ':' → logprob: -17.750431060791016
    10. '_,' → logprob: -18.000431060791016

Token 37: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.3134196996688843
    2. 'to' → logprob: -1.3134196996688843
    3. 'from' → logprob: -9.438419342041016
    4. ' from' → logprob: -9.563419342041016
    5. ' ' → logprob: -12.438419342041016
    6. ' ' → logprob: -13.563419342041016
    7. 'To' → logprob: -14.313419342041016
    8. '	to' → logprob: -14.313419342041016
    9. ',to' → logprob: -14.438419342041016
    10. '_to' → logprob: -14.938419342041016

Token 38: '_is' (ID: 15224)
  Prédit: '_is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_is' → logprob: -2.534558552724775e-05
    2. '_' → logprob: -11.000025749206543
    3. 'is' → logprob: -13.500025749206543
    4. '```' → logprob: -13.500025749206543
    5. ' _' → logprob: -14.375025749206543
    6. '_code' → logprob: -14.625025749206543
    7. '_ai' → logprob: -14.750025749206543
    8. '=is' → logprob: -14.875025749206543
    9. ':' → logprob: -15.250025749206543
    10. '_node' → logprob: -15.250025749206543

Token 39: 'land' (ID: 2117)
  Prédit: 'land'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'land' → logprob: -0.000998155795969069
    2. 'and' → logprob: -7.000998020172119
    3. '_land' → logprob: -10.375998497009277
    4. 'al' → logprob: -11.250998497009277
    5. ' land' → logprob: -12.125998497009277
    6. 'aland' → logprob: -12.125998497009277
    7. '__' → logprob: -12.625998497009277
    8. 'l' → logprob: -12.750998497009277
    9. '_' → logprob: -12.875998497009277
    10. 'Land' → logprob: -13.000998497009277

Token 40: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0001681405701674521
    2. ':int' → logprob: -9.125167846679688
    3. ' :' → logprob: -10.375167846679688
    4. ',' → logprob: -10.625167846679688
    5. '):' → logprob: -13.000167846679688
    6. ')' → logprob: -14.625167846679688
    7. '_:' → logprob: -15.500167846679688
    8. 'int' → logprob: -16.000167846679688
    9. ' ,' → logprob: -16.375167846679688
    10. 's' → logprob: -16.375167846679688

Token 41: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.06198718398809433
    2. 'int' → logprob: -2.8119871616363525
    3. ':int' → logprob: -11.811986923217773
    4. '[int' → logprob: -11.936986923217773
    5. '=int' → logprob: -12.936986923217773
    6. '	int' → logprob: -13.936986923217773
    7. '<int' → logprob: -14.186986923217773
    8. ' ' → logprob: -14.936986923217773
    9. ' ' → logprob: -14.936986923217773
    10. ']int' → logprob: -15.061986923217773

Token 42: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0087516784551553e-05
    2. ' ,' → logprob: -11.75001049041748
    3. '):' → logprob: -13.25001049041748
    4. ')' → logprob: -16.000009536743164
    5. ':' → logprob: -16.500009536743164
    6. ',
' → logprob: -16.875009536743164
    7. '‌,' → logprob: -17.375009536743164
    8. ',int' → logprob: -18.250009536743164
    9. ',

' → logprob: -18.875009536743164
    10. '   ' → logprob: -19.125009536743164

Token 43: ' tide' (ID: 69214)
  Prédit: ' cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' cost' → logprob: -0.3376190960407257
    2. ' weight' → logprob: -1.3376190662384033
    3. ' distance' → logprob: -4.337619304656982
    4. ' length' → logprob: -5.087619304656982
    5. 'cost' → logprob: -6.337619304656982
    6. ' time' → logprob: -7.212619304656982
    7. 'weight' → logprob: -7.337619304656982
    8. 'distance' → logprob: -8.212618827819824
    9. ' travel' → logprob: -8.337618827819824
    10. ' capacity' → logprob: -8.587618827819824

Token 44: '_time' (ID: 6425)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7288373708724976
    2. '_level' → logprob: -1.4788373708724976
    3. '_time' → logprob: -2.478837490081787
    4. '_period' → logprob: -2.478837490081787
    5. '_levels' → logprob: -3.353837490081787
    6. '_height' → logprob: -4.103837490081787
    7. '_cycle' → logprob: -4.228837490081787
    8. '_strength' → logprob: -4.603837490081787
    9. '_interval' → logprob: -5.228837490081787
    10. '_delay' → logprob: -5.228837490081787

Token 45: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0008399999933317304
    2. ' :' → logprob: -7.750840187072754
    3. 's' → logprob: -8.375840187072754
    4. ',' → logprob: -9.500840187072754
    5. '):' → logprob: -10.000840187072754
    6. '_:' → logprob: -10.625840187072754
    7. ':int' → logprob: -11.500840187072754
    8. ')' → logprob: -11.750840187072754
    9. '_s' → logprob: -13.000840187072754
    10. '_' → logprob: -13.750840187072754

Token 46: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.044322337955236435
    2. 'int' → logprob: -3.1693222522735596
    3. ' Optional' → logprob: -7.044322490692139
    4. ' List' → logprob: -9.04432201385498
    5. ' ' → logprob: -9.29432201385498
    6. ':int' → logprob: -9.66932201385498
    7. 'Optional' → logprob: -9.79432201385498
    8. ' float' → logprob: -9.91932201385498
    9. '[int' → logprob: -11.04432201385498
    10. ' Tuple' → logprob: -11.29432201385498

Token 47: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.007259685546159744
    2. ',' → logprob: -5.007259845733643
    3. ')' → logprob: -7.632259845733643
    4. ' ):' → logprob: -10.507259368896484
    5. ':' → logprob: -11.007259368896484
    6. '):
' → logprob: -11.257259368896484
    7. '):
' → logprob: -13.632259368896484
    8. '   ' → logprob: -15.007259368896484
    9. ' ,' → logprob: -15.757259368896484
    10. '=' → logprob: -15.757259368896484

Token 48: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01917175017297268
    2. '):' → logprob: -4.269171714782715
    3. ':' → logprob: -5.769171714782715
    4. ')' → logprob: -6.519171714782715
    5. 'self' → logprob: -9.019171714782715
    6. ',' → logprob: -9.144171714782715
    7. '<|end|>' → logprob: -9.644171714782715
    8. '):
' → logprob: -10.519171714782715
    9. '   ' → logprob: -11.019171714782715
    10. '```' → logprob: -11.144171714782715

Token 49: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.23958957195281982
    2. '       ' → logprob: -2.2395896911621094
    3. ' self' → logprob: -2.2395896911621094
    4. ' ' → logprob: -11.23958969116211
    5. '   ' → logprob: -11.61458969116211
    6. 'super' → logprob: -11.73958969116211
    7. '        ' → logprob: -12.11458969116211
    8. '	self' → logprob: -12.73958969116211
    9. '```' → logprob: -13.23958969116211
    10. ' super' → logprob: -13.61458969116211

Token 50: '.from' (ID: 10935)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.02069813944399357
    2. '.from' → logprob: -3.895698070526123
    3. ' .' → logprob: -9.020698547363281
    4. 'from' → logprob: -10.645698547363281
    5. '   ' → logprob: -12.770698547363281
    6. '       ' → logprob: -13.270698547363281
    7. ' ' → logprob: -13.395698547363281
    8. ' from' → logprob: -14.020698547363281
    9. '.to' → logprob: -14.270698547363281
    10. ').' → logprob: -15.020698547363281

Token 51: '_is' (ID: 15224)
  Prédit: '_is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_is' → logprob: -5.12127808178775e-05
    2. '_' → logprob: -10.000051498413086
    3. '_s' → logprob: -13.250051498413086
    4. 'Is' → logprob: -14.750051498413086
    5. '_user' → logprob: -15.000051498413086
    6. '_code' → logprob: -15.250051498413086
    7. '_source' → logprob: -15.500051498413086
    8. '```' → logprob: -15.750051498413086
    9. '_to' → logprob: -15.875051498413086
    10. '_use' → logprob: -16.000051498413086

Token 52: 'land' (ID: 2117)
  Prédit: 'land'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'land' → logprob: -0.001354402513243258
    2. '_land' → logprob: -7.251354217529297
    3. 'and' → logprob: -7.501354217529297
    4. 'al' → logprob: -10.001354217529297
    5. 'aland' → logprob: -10.501354217529297
    6. '_' → logprob: -12.626354217529297
    7. 'eland' → logprob: -12.751354217529297
    8. '_is' → logprob: -13.126354217529297
    9. 'd' → logprob: -13.751354217529297
    10. '```' → logprob: -13.751354217529297

Token 53: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31437528133392334
    2. '=' → logprob: -1.3143752813339233
    3. ',' → logprob: -7.314375400543213
    4. ')' → logprob: -8.564374923706055
    5. '<|end|>' → logprob: -8.814374923706055
    6. ' ' → logprob: -10.564374923706055
    7. '_' → logprob: -10.689374923706055
    8. '    ' → logprob: -11.689374923706055
    9. '   ' → logprob: -12.064374923706055
    10. ' ,' → logprob: -12.064374923706055

Token 54: ' from' (ID: 591)
  Prédit: ' from'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' from' → logprob: -0.061978891491889954
    2. 'from' → logprob: -2.811978816986084
    3. ' to' → logprob: -11.561979293823242
    4. ' ' → logprob: -14.436979293823242
    5. '	from' → logprob: -14.436979293823242
    6. '[from' → logprob: -15.436979293823242
    7. 'to' → logprob: -16.311979293823242
    8. ' ' → logprob: -16.311979293823242
    9. '(from' → logprob: -16.936979293823242
    10. '```' → logprob: -17.311979293823242

Token 55: '_is' (ID: 15224)
  Prédit: '_is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_is' → logprob: -0.0005625653429888189
    2. '_' → logprob: -7.50056266784668
    3. 'is' → logprob: -11.87556266784668
    4. ' _' → logprob: -14.75056266784668
    5. '_s' → logprob: -15.12556266784668
    6. '_edge' → logprob: -15.50056266784668
    7. '_to' → logprob: -15.62556266784668
    8. '_
' → logprob: -15.75056266784668
    9. '_i' → logprob: -16.12556266784668
    10. '_source' → logprob: -16.50056266784668

Token 56: 'land' (ID: 2117)
  Prédit: 'land'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'land' → logprob: -0.001209518639370799
    2. 'and' → logprob: -6.751209735870361
    3. 'al' → logprob: -11.001209259033203
    4. '_land' → logprob: -11.376209259033203
    5. 'aland' → logprob: -12.501209259033203
    6. ' land' → logprob: -13.626209259033203
    7. '   ' → logprob: -14.001209259033203
    8. 'l' → logprob: -14.501209259033203
    9. 'eland' → logprob: -14.751209259033203
    10. 'lan' → logprob: -14.751209259033203

Token 57: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03901063650846481
    2. '<|end|>' → logprob: -3.289010524749756
    3. '
' → logprob: -8.289011001586914
    4. '<|end|>' → logprob: -8.414011001586914
    5. '        ' → logprob: -8.539011001586914
    6. '   ' → logprob: -9.414011001586914
    7. ',' → logprob: -10.164011001586914
    8. '        
' → logprob: -10.414011001586914
    9. ' ' → logprob: -10.539011001586914
    10. ')' → logprob: -10.664011001586914

Token 58: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0011217609280720353
    2. 'self' → logprob: -6.876121997833252
    3. '<|end|>' → logprob: -10.001121520996094
    4. ',' → logprob: -11.126121520996094
    5. ' self' → logprob: -11.376121520996094
    6. '   ' → logprob: -12.001121520996094
    7. '
' → logprob: -13.126121520996094
    8. '<|end|>' → logprob: -13.376121520996094
    9. ')' → logprob: -13.501121520996094
    10. ' ' → logprob: -14.376121520996094

Token 59: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.1082802340388298
    2. ' self' → logprob: -2.7332801818847656
    3. '       ' → logprob: -3.3582801818847656
    4. 'to' → logprob: -6.233280181884766
    5. ' to' → logprob: -7.233280181884766
    6. 'from' → logprob: -10.358280181884766
    7. '
' → logprob: -10.858280181884766
    8. '   ' → logprob: -10.858280181884766
    9. '	self' → logprob: -10.858280181884766
    10. '        ' → logprob: -11.233280181884766

Token 60: '.to' (ID: 3552)
  Prédit: '.to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.to' → logprob: -0.002840537577867508
    2. '.' → logprob: -6.127840518951416
    3. '.t' → logprob: -7.752840518951416
    4. '.from' → logprob: -8.627840995788574
    5. 'to' → logprob: -10.752840995788574
    6. ' .' → logprob: -11.502840995788574
    7. '.is' → logprob: -12.127840995788574
    8. '._' → logprob: -12.752840995788574
    9. 'from' → logprob: -13.502840995788574
    10. '_to' → logprob: -14.002840995788574

Token 61: '_is' (ID: 15224)
  Prédit: '_is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_is' → logprob: -4.36574100604048e-06
    2. 'is' → logprob: -13.625004768371582
    3. '_' → logprob: -14.000004768371582
    4. ' _' → logprob: -14.375004768371582
    5. '```' → logprob: -14.375004768371582
    6. ')_' → logprob: -15.750004768371582
    7. '_to' → logprob: -16.000003814697266
    8. '_edge' → logprob: -17.000003814697266
    9. '=is' → logprob: -17.000003814697266
    10. '_f' → logprob: -17.500003814697266

Token 62: 'land' (ID: 2117)
  Prédit: 'land'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'land' → logprob: -0.0038329751696437597
    2. '_land' → logprob: -6.128832817077637
    3. '_is' → logprob: -6.878832817077637
    4. 'and' → logprob: -7.628832817077637
    5. 'is' → logprob: -9.878832817077637
    6. '_' → logprob: -10.378832817077637
    7. 'aland' → logprob: -10.628832817077637
    8. 'al' → logprob: -12.253832817077637
    9. 'eland' → logprob: -12.753832817077637
    10. '_and' → logprob: -12.878832817077637

Token 63: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.28187623620033264
    2. '=' → logprob: -1.4068762063980103
    3. '<|end|>' → logprob: -7.531876087188721
    4. ')' → logprob: -8.906876564025879
    5. '_' → logprob: -10.531876564025879
    6. ' ' → logprob: -12.406876564025879
    7. '<|end|>' → logprob: -12.406876564025879
    8. ',' → logprob: -12.406876564025879
    9. '```' → logprob: -12.781876564025879
    10. '       ' → logprob: -13.281876564025879

Token 64: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.47407805919647217
    2. ' to' → logprob: -0.9740780591964722
    3. '(to' → logprob: -14.724078178405762
    4. '[to' → logprob: -15.099078178405762
    5. '	to' → logprob: -15.974078178405762
    6. 't' → logprob: -16.849077224731445
    7. '```' → logprob: -16.849077224731445
    8. 'toc' → logprob: -16.974077224731445
    9. ' ' → logprob: -17.099077224731445
    10. 'from' → logprob: -17.224077224731445

Token 65: '_is' (ID: 15224)
  Prédit: '_is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_is' → logprob: -0.018163636326789856
    2. 'is' → logprob: -4.018163681030273
    3. '_' → logprob: -12.643163681030273
    4. 'Island' → logprob: -12.643163681030273
    5. '_land' → logprob: -13.768163681030273
    6. 'isl' → logprob: -13.768163681030273
    7. ' _' → logprob: -14.143163681030273
    8. '_s' → logprob: -14.143163681030273
    9. '```' → logprob: -14.393163681030273
    10. 's' → logprob: -14.643163681030273

Token 66: 'land' (ID: 2117)
  Prédit: 'land'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'land' → logprob: -0.0025963459629565477
    2. 'and' → logprob: -6.002596378326416
    3. 'aland' → logprob: -9.877595901489258
    4. 's' → logprob: -10.752595901489258
    5. '_land' → logprob: -10.877595901489258
    6. 'eland' → logprob: -12.002595901489258
    7. 'al' → logprob: -13.002595901489258
    8. '_' → logprob: -13.377595901489258
    9. 'sand' → logprob: -13.502595901489258
    10. '   ' → logprob: -13.752595901489258

Token 67: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007366081699728966
    2. 'self' → logprob: -7.500736713409424
    3. '
' → logprob: -9.250736236572266
    4. '<|end|>' → logprob: -10.000736236572266
    5. '   ' → logprob: -11.500736236572266
    6. '```' → logprob: -12.125736236572266
    7. ',' → logprob: -12.375736236572266
    8. ' self' → logprob: -12.500736236572266
    9. '        
' → logprob: -12.625736236572266
    10. 't' → logprob: -13.000736236572266

Token 68: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00040886594797484577
    2. 't' → logprob: -8.250409126281738
    3. '<|end|>' → logprob: -9.750409126281738
    4. '
' → logprob: -10.625409126281738
    5. 'self' → logprob: -10.625409126281738
    6. ',' → logprob: -11.500409126281738
    7. '```' → logprob: -11.750409126281738
    8. '   ' → logprob: -12.375409126281738
    9. '<|end|>' → logprob: -12.500409126281738
    10. ')' → logprob: -13.250409126281738

Token 69: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.02519378811120987
    2. ' self' → logprob: -3.900193691253662
    3. '       ' → logprob: -5.400193691253662
    4. 't' → logprob: -9.15019416809082
    5. '
' → logprob: -12.15019416809082
    6. '   ' → logprob: -12.27519416809082
    7. '	self' → logprob: -12.90019416809082
    8. '```' → logprob: -13.15019416809082
    9. ' ' → logprob: -14.40019416809082
    10. '           ' → logprob: -14.52519416809082

Token 70: '.t' (ID: 1370)
  Prédit: '.t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.t' → logprob: -0.34871354699134827
    2. '.' → logprob: -1.2237135171890259
    3. ' .' → logprob: -8.473713874816895
    4. '=' → logprob: -10.848713874816895
    5. '.time' → logprob: -11.223713874816895
    6. 't' → logprob: -11.973713874816895
    7. ' =' → logprob: -12.223713874816895
    8. '=t' → logprob: -12.848713874816895
    9. '._' → logprob: -13.098713874816895
    10. '.
' → logprob: -13.848713874816895

Token 71: 'ide' (ID: 617)
  Prédit: 'ide'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ide' → logprob: -0.003229994559660554
    2. 'ime' → logprob: -5.753230094909668
    3. 'id' → logprob: -11.128230094909668
    4. 'ides' → logprob: -11.628230094909668
    5. 't' → logprob: -12.628230094909668
    6. 'time' → logprob: -12.628230094909668
    7. '_' → logprob: -12.753230094909668
    8. 'i' → logprob: -13.378230094909668
    9. '_time' → logprob: -13.753230094909668
    10. ' tide' → logprob: -13.878230094909668

Token 72: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -9.221884101862088e-05
    2. '_' → logprob: -10.375092506408691
    3. '_period' → logprob: -11.250092506408691
    4. '_cycle' → logprob: -11.750092506408691
    5. '_duration' → logprob: -12.125092506408691
    6. '_times' → logprob: -12.125092506408691
    7. 'time' → logprob: -12.250092506408691
    8. '_t' → logprob: -12.625092506408691
    9. '_start' → logprob: -12.875092506408691
    10. '_change' → logprob: -12.875092506408691

Token 73: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.006718332413583994
    2. '=' → logprob: -5.006718158721924
    3. ' ' → logprob: -12.756718635559082
    4. '   ' → logprob: -17.006717681884766
    5. '    ' → logprob: -17.506717681884766
    6. ' ' → logprob: -17.631717681884766
    7. ')' → logprob: -17.631717681884766
    8. ' =
' → logprob: -17.881717681884766
    9. '        ' → logprob: -18.256717681884766
    10. ',' → logprob: -18.631717681884766

Token 74: ' tide' (ID: 69214)
  Prédit: ' tide'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tide' → logprob: -0.0337044820189476
    2. 't' → logprob: -3.4087045192718506
    3. 'tid' → logprob: -10.90870475769043
    4. ' tidal' → logprob: -10.90870475769043
    5. ' t' → logprob: -11.53370475769043
    6. ' ' → logprob: -12.40870475769043
    7. '   ' → logprob: -13.53370475769043
    8. '	t' → logprob: -13.53370475769043
    9. ' tides' → logprob: -13.78370475769043
    10. ' ' → logprob: -14.03370475769043

Token 75: '_time' (ID: 6425)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.16052398085594177
    2. '_time' → logprob: -1.9105240106582642
    3. 'm' → logprob: -8.785524368286133
    4. '_t' → logprob: -9.785524368286133
    5. '_m' → logprob: -10.035524368286133
    6. '_
' → logprob: -11.160524368286133
    7. ' _' → logprob: -11.410524368286133
    8. '_

' → logprob: -11.660524368286133
    9. '_
' → logprob: -13.035524368286133
    10. 'ime' → logprob: -13.660524368286133

Token 76: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.045128364115953445
    2. '   ' → logprob: -3.920128345489502
    3. '    
' → logprob: -4.920128345489502
    4. '<|end|>' → logprob: -5.170128345489502
    5. '\n' → logprob: -5.545128345489502
    6. '' → logprob: -5.920128345489502
    7. '

' → logprob: -7.045128345489502
    8. '```' → logprob: -7.045128345489502
    9. ' 
' → logprob: -7.170128345489502
    10. 'newline' → logprob: -7.920128345489502

Token 77: 'class' (ID: 1444)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0007675791857764125
    2. '

' → logprob: -7.625767707824707
    3. 'class' → logprob: -8.500767707824707
    4. '
' → logprob: -10.625767707824707
    5. '    
' → logprob: -11.125767707824707
    6. '<|end|>' → logprob: -12.000767707824707
    7. '```' → logprob: -12.500767707824707
    8. '


' → logprob: -12.625767707824707
    9. ' 
' → logprob: -12.625767707824707
    10. '   ' → logprob: -12.750767707824707

Token 78: ' Island' (ID: 14226)
  Prédit: ' Graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Graph' → logprob: -0.04634431377053261
    2. ' Island' → logprob: -3.42134428024292
    3. 'Graph' → logprob: -4.54634428024292
    4. ' Solution' → logprob: -7.17134428024292
    5. ' Node' → logprob: -7.79634428024292
    6. 'Island' → logprob: -8.546344757080078
    7. ' Islands' → logprob: -8.796344757080078
    8. ' D' → logprob: -9.296344757080078
    9. ' Tide' → logprob: -9.421344757080078
    10. ' Solver' → logprob: -9.421344757080078

Token 79: 'Graph' (ID: 9922)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00024251631111837924
    2. '(' → logprob: -10.000242233276367
    3. 's' → logprob: -10.000242233276367
    4. 'Graph' → logprob: -10.250242233276367
    5. '):' → logprob: -10.500242233276367
    6. 'Traversal' → logprob: -10.750242233276367
    7. '():' → logprob: -10.875242233276367
    8. ':
' → logprob: -11.625242233276367
    9. 'Explorer' → logprob: -12.375242233276367
    10. 'Router' → logprob: -12.625242233276367

Token 80: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00017028623551595956
    2. '(' → logprob: -9.000170707702637
    3. ' :' → logprob: -11.000170707702637
    4. '):' → logprob: -11.875170707702637
    5. ':
' → logprob: -12.250170707702637
    6. '<|end|>' → logprob: -12.250170707702637
    7. '```' → logprob: -12.875170707702637
    8. '():' → logprob: -13.250170707702637
    9. ':def' → logprob: -13.250170707702637
    10. ':**' → logprob: -13.375170707702637

Token 81: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04083864763379097
    2. '   ' → logprob: -3.4158387184143066
    3. ':
' → logprob: -5.290838718414307
    4. ' :' → logprob: -6.915838718414307
    5. ' def' → logprob: -8.040838241577148
    6. ' :
' → logprob: -8.790838241577148
    7. '```' → logprob: -8.915838241577148
    8. 'def' → logprob: -9.415838241577148
    9. '  ' → logprob: -9.415838241577148
    10. '<|end|>' → logprob: -9.665838241577148

Token 82: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.015206505544483662
    2. 'def' (adapté à ' def') → logprob: -4.265206336975098
    3. '   ' → logprob: -6.890206336975098
    4. '	def' → logprob: -11.265206336975098
    5. ':def' → logprob: -12.515206336975098
    6. '    ' → logprob: -12.515206336975098
    7. ':' → logprob: -13.015206336975098
    8. ' 
' → logprob: -14.390206336975098
    9. '    
' → logprob: -14.890206336975098
    10. '```' → logprob: -15.640206336975098

Token 83: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.1866869181394577
    2. ' ' → logprob: -1.9366868734359741
    3. ' init' → logprob: -4.311686992645264
    4. ' _' → logprob: -5.561686992645264
    5. ' ' → logprob: -5.686686992645264
    6. ' def' → logprob: -6.061686992645264
    7. '_init' → logprob: -6.311686992645264
    8. 'init' → logprob: -7.561686992645264
    9. ' ```' → logprob: -7.561686992645264
    10. ' `' → logprob: -8.811686515808105

Token 84: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.0003839597338810563
    2. 'i' → logprob: -8.000384330749512
    3. 'in' → logprob: -10.500384330749512
    4. ' init' → logprob: -12.000384330749512
    5. '   ' → logprob: -12.250384330749512
    6. 'ini' → logprob: -12.250384330749512
    7. 'int' → logprob: -13.750384330749512
    8. ' i' → logprob: -14.250384330749512
    9. '```' → logprob: -14.250384330749512
    10. '  ' → logprob: -14.375384330749512

Token 85: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.10563797503709793
    2. '(self' → logprob: -2.730638027191162
    3. '(' → logprob: -3.480638027191162
    4. '__(
' → logprob: -5.855638027191162
    5. '__' → logprob: -7.480638027191162
    6. ' (' → logprob: -8.105637550354004
    7. ')(' → logprob: -8.355637550354004
    8. '```' → logprob: -8.980637550354004
    9. 'self' → logprob: -10.105637550354004
    10. '__((' → logprob: -10.980637550354004

Token 86: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -9.567575034452602e-05
    2. ' self' → logprob: -9.37509536743164
    3. ')' → logprob: -11.50009536743164
    4. '   ' → logprob: -15.12509536743164
    5. '):
' → logprob: -16.25009536743164
    6. '	self' → logprob: -17.12509536743164
    7. '0' → logprob: -17.25009536743164
    8. '(self' → logprob: -17.25009536743164
    9. '
' → logprob: -17.37509536743164
    10. '       ' → logprob: -17.37509536743164

Token 87: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00031258241506293416
    2. '):' → logprob: -8.500312805175781
    3. ' ,' → logprob: -9.625312805175781
    4. ')' → logprob: -10.625312805175781
    5. ':' → logprob: -11.125312805175781
    6. ' ):' → logprob: -13.000312805175781
    7. 'self' → logprob: -14.500312805175781
    8. ' )' → logprob: -15.000312805175781
    9. ' ' → logprob: -15.500312805175781
    10. '```' → logprob: -15.875312805175781

Token 88: ' num' (ID: 2269)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.3867447078227997
    2. ' num' → logprob: -1.261744737625122
    3. 'n' → logprob: -4.136744499206543
    4. 'num' → logprob: -5.261744499206543
    5. ' self' → logprob: -5.261744499206543
    6. ')' → logprob: -5.386744499206543
    7. ' )' → logprob: -6.011744499206543
    8. '   ' → logprob: -7.011744499206543
    9. ' islands' → logprob: -7.011744499206543
    10. 'self' → logprob: -7.386744499206543

Token 89: '_is' (ID: 15224)
  Prédit: '_is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_is' → logprob: -0.02239929884672165
    2. '_' → logprob: -4.147399425506592
    3. ' _' → logprob: -5.897399425506592
    4. '_nodes' → logprob: -6.522399425506592
    5. '_spaces' → logprob: -7.522399425506592
    6. '_s' → logprob: -7.772399425506592
    7. ')_' → logprob: -8.772398948669434
    8. '_vertices' → logprob: -8.772398948669434
    9. '<|end|>' → logprob: -9.022398948669434
    10. 's' → logprob: -9.397398948669434

Token 90: 'lands' (ID: 10186)
  Prédit: 'lands'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lands' → logprob: -0.01305387169122696
    2. 'land' → logprob: -4.388053894042969
    3. 'ands' → logprob: -8.888053894042969
    4. '_' → logprob: -9.388053894042969
    5. '```' → logprob: -9.388053894042969
    6. '=' → logprob: -10.513053894042969
    7. 'al' → logprob: -10.513053894042969
    8. '1' → logprob: -10.888053894042969
    9. '[' → logprob: -11.013053894042969
    10. ' lands' → logprob: -11.013053894042969

Token 91: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0490611307322979
    2. '):' → logprob: -3.0490610599517822
    3. ':int' → logprob: -7.924061298370361
    4. ' ):' → logprob: -9.799060821533203
    5. ',' → logprob: -10.799060821533203
    6. ')' → logprob: -10.924060821533203
    7. ' :' → logprob: -11.299060821533203
    8. '):
' → logprob: -12.674060821533203
    9. '}:' → logprob: -13.924060821533203
    10. '>:' → logprob: -15.049060821533203

Token 92: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.04860859736800194
    2. 'int' → logprob: -3.0486085414886475
    3. ' ' → logprob: -11.923608779907227
    4. ':int' → logprob: -12.048608779907227
    5. '=int' → logprob: -12.673608779907227
    6. '[int' → logprob: -13.173608779907227
    7. ' ' → logprob: -13.798608779907227
    8. ',int' → logprob: -13.798608779907227
    9. ']int' → logprob: -14.673608779907227
    10. ')' → logprob: -15.048608779907227

Token 93: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6355131268501282
    2. '):' → logprob: -0.7605131268501282
    3. ')' → logprob: -5.8855133056640625
    4. ':' → logprob: -9.260513305664062
    5. ' ):' → logprob: -10.635513305664062
    6. '):
' → logprob: -12.260513305664062
    7. ' ,' → logprob: -13.260513305664062
    8. '),' → logprob: -14.385513305664062
    9. '   ' → logprob: -14.385513305664062
    10. ' ' → logprob: -14.760513305664062

Token 94: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0034104858059436083
    2. '   ' → logprob: -5.878410339355469
    3. '    ' → logprob: -8.503410339355469
    4. '<|end|>' → logprob: -8.753410339355469
    5. '        ' → logprob: -9.753410339355469
    6. ' ' → logprob: -10.378410339355469
    7. ' self' → logprob: -10.503410339355469
    8. '        
' → logprob: -10.753410339355469
    9. '     ' → logprob: -11.003410339355469
    10. 'self' → logprob: -11.253410339355469

Token 95: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.21308079361915588
    2. 'self' (adapté à ' self') → logprob: -1.7130807638168335
    3. '       ' → logprob: -4.463080883026123
    4. '	self' → logprob: -10.088080406188965
    5. ' ' → logprob: -11.338080406188965
    6. '        ' → logprob: -11.838080406188965
    7. 'import' → logprob: -12.588080406188965
    8. ' ' → logprob: -12.838080406188965
    9. '   ' → logprob: -13.213080406188965
    10. 'Self' → logprob: -13.963080406188965

Token 96: '.num' (ID: 19403)
  Prédit: '.is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.is' → logprob: -0.7147135734558105
    2. '.edges' → logprob: -1.4647135734558105
    3. '.' → logprob: -1.8397135734558105
    4. '._' → logprob: -3.0897135734558105
    5. ' .' → logprob: -3.3397135734558105
    6. '.nodes' → logprob: -4.4647135734558105
    7. '.num' → logprob: -4.9647135734558105
    8. '   ' → logprob: -5.3397135734558105
    9. '_edges' → logprob: -5.9647135734558105
    10. '.graph' → logprob: -6.0897135734558105

Token 97: '_is' (ID: 15224)
  Prédit: '_is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_is' → logprob: -8.172891830326989e-05
    2. '_' → logprob: -9.750082015991211
    3. '_s' → logprob: -12.625082015991211
    4. ')_' → logprob: -13.000082015991211
    5. '```' → logprob: -13.375082015991211
    6. '_ins' → logprob: -13.375082015991211
    7. '_in' → logprob: -13.625082015991211
    8. ' _' → logprob: -13.625082015991211
    9. 's' → logprob: -14.000082015991211
    10. '_nodes' → logprob: -14.000082015991211

Token 98: 'lands' (ID: 10186)
  Prédit: 'lands'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lands' → logprob: -0.00029995047952979803
    2. 'land' → logprob: -8.375300407409668
    3. 'ands' → logprob: -10.875300407409668
    4. '_' → logprob: -11.375300407409668
    5. 'l' → logprob: -11.875300407409668
    6. 'al' → logprob: -12.000300407409668
    7. ' lands' → logprob: -12.375300407409668
    8. '   ' → logprob: -12.375300407409668
    9. '```' → logprob: -12.625300407409668
    10. '
' → logprob: -13.625300407409668

Token 99: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07918465882539749
    2. '=' → logprob: -2.5791847705841064
    3. ':' → logprob: -8.704184532165527
    4. ')' → logprob: -9.954184532165527
    5. ' ' → logprob: -10.454184532165527
    6. '<|end|>' → logprob: -10.704184532165527
    7. ',' → logprob: -11.329184532165527
    8. '   ' → logprob: -12.454184532165527
    9. '=int' → logprob: -12.579184532165527
    10. ' =
' → logprob: -12.579184532165527

Token 100: ' num' (ID: 2269)
  Prédit: ' num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' num' → logprob: -0.16023652255535126
    2. 'num' → logprob: -1.9102364778518677
    3. ' ' → logprob: -11.910236358642578
    4. '	num' → logprob: -12.285236358642578
    5. '_num' → logprob: -14.910236358642578
    6. ' ' → logprob: -15.785236358642578
    7. '=num' → logprob: -16.035236358642578
    8. '(num' → logprob: -16.285236358642578
    9. '0' → logprob: -16.785236358642578
    10. '[num' → logprob: -16.785236358642578

Token 101: '_is' (ID: 15224)
  Prédit: '_is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_is' → logprob: -2.3795937522663735e-05
    2. 'is' → logprob: -11.00002384185791
    3. '_' → logprob: -12.25002384185791
    4. '\' → logprob: -14.12502384185791
    5. '```' → logprob: -14.87502384185791
    6. ' _' → logprob: -15.12502384185791
    7. '   ' → logprob: -16.250022888183594
    8. 's' → logprob: -16.500022888183594
    9. 'Is' → logprob: -16.625022888183594
    10. '__' → logprob: -16.875022888183594

Token 102: 'lands' (ID: 10186)
  Prédit: 'lands'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lands' → logprob: -0.0009333750349469483
    2. 'land' → logprob: -7.6259331703186035
    3. 'ands' → logprob: -8.750933647155762
    4. ' lands' → logprob: -9.500933647155762
    5. 'nds' → logprob: -10.000933647155762
    6. 'al' → logprob: -10.250933647155762
    7. 's' → logprob: -10.500933647155762
    8. 'l' → logprob: -10.750933647155762
    9. '_' → logprob: -11.375933647155762
    10. 'als' → logprob: -12.125933647155762

Token 103: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.39162182807922363
    2. '       ' → logprob: -1.1416218280792236
    3. '<|end|>' → logprob: -6.0166215896606445
    4. 'self' → logprob: -7.1416215896606445
    5. ',' → logprob: -7.3916215896606445
    6. '        
' → logprob: -7.8916215896606445
    7. ' self' → logprob: -8.766621589660645
    8. '
' → logprob: -9.016621589660645
    9. '  
' → logprob: -9.516621589660645
    10. ' 
' → logprob: -10.391621589660645

Token 104: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0036893896758556366
    2. '
' → logprob: -5.753689289093018
    3. 'self' → logprob: -8.503689765930176
    4. ',' → logprob: -9.128689765930176
    5. '<|end|>' → logprob: -9.128689765930176
    6. ' self' → logprob: -10.003689765930176
    7. '        
' → logprob: -11.003689765930176
    8. '   ' → logprob: -12.003689765930176
    9. '```' → logprob: -12.253689765930176
    10. ' ' → logprob: -12.378689765930176

Token 105: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2818065285682678
    2. 'self' → logprob: -1.531806468963623
    3. ' self' → logprob: -3.531806468963623
    4. '
' → logprob: -9.406806945800781
    5. '   ' → logprob: -9.781806945800781
    6. ' ' → logprob: -11.156806945800781
    7. '	self' → logprob: -11.531806945800781
    8. '```' → logprob: -12.781806945800781
    9. '        
' → logprob: -13.031806945800781
    10. '0' → logprob: -13.156806945800781

Token 106: ' adjacency' (ID: 177015)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.10580667853355408
    2. 'self' → logprob: -2.355806589126587
    3. '       ' → logprob: -6.230806827545166
    4. ' adjacency' → logprob: -7.105806827545166
    5. ' ' → logprob: -7.980806827545166
    6. 'from' → logprob: -8.105806350708008
    7. '   ' → logprob: -8.230806350708008
    8. '_' → logprob: -8.480806350708008
    9. ' def' → logprob: -8.855806350708008
    10. ' _' → logprob: -8.855806350708008

Token 107: ' list' (ID: 1562)
  Prédit: '_list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.030258920043706894
    2. '_' → logprob: -3.905258893966675
    3. '_lists' → logprob: -5.030259132385254
    4. 's' → logprob: -7.030259132385254
    5. ' =' → logprob: -7.155259132385254
    6. 'list' → logprob: -7.405259132385254
    7. ' ' → logprob: -8.155259132385254
    8. ' list' → logprob: -8.780259132385254
    9. 'List' → logprob: -8.905259132385254
    10. '_l' → logprob: -9.030259132385254

Token 108: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.034526973962783813
    2. ':' → logprob: -3.659527063369751
    3. '=' → logprob: -4.909526824951172
    4. ' self' → logprob: -8.159526824951172
    5. 'self' → logprob: -8.284526824951172
    6. ' :' → logprob: -9.409526824951172
    7. ' ' → logprob: -9.409526824951172
    8. '<|end|>' → logprob: -10.284526824951172
    9. '       ' → logprob: -10.659526824951172
    10. ',' → logprob: -11.284526824951172

Token 109: ' island' (ID: 18149)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.5810955762863159
    2. ' self' → logprob: -0.8310955762863159
    3. 'Dict' → logprob: -5.8310956954956055
    4. ' Dict' → logprob: -6.9560956954956055
    5. ' {' → logprob: -7.8310956954956055
    6. '[self' → logprob: -8.206095695495605
    7. 'List' → logprob: -8.456095695495605
    8. '{' → logprob: -8.456095695495605
    9. ' List' → logprob: -9.456095695495605
    10. ' defaultdict' → logprob: -10.581095695495605

Token 110: ' ->' (ID: 2747)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.23514209687709808
    2. ':' → logprob: -1.7351421117782593
    3. 's' → logprob: -3.4851419925689697
    4. '=' → logprob: -7.110142230987549
    5. ' ->' → logprob: -7.860142230987549
    6. ')' → logprob: -8.23514175415039
    7. ',' → logprob: -8.23514175415039
    8. ' to' → logprob: -8.73514175415039
    9. '   ' → logprob: -9.48514175415039
    10. '<|end|>' → logprob: -9.61014175415039

Token 111: ' list' (ID: 1562)
  Prédit: ' List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' List' → logprob: -0.029789136722683907
    2. 'List' → logprob: -3.5297892093658447
    3. ' list' → logprob: -10.404788970947266
    4. '[List' → logprob: -12.154788970947266
    5. 'list' → logprob: -13.279788970947266
    6. '	List' → logprob: -13.654788970947266
    7. '_list' → logprob: -16.529788970947266
    8. ' ' → logprob: -16.779788970947266
    9. '```' → logprob: -18.154788970947266
    10. '<List' → logprob: -18.154788970947266

Token 112: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.0950656458735466
    2. '[' → logprob: -2.5950655937194824
    3. '<|end|>' → logprob: -4.345065593719482
    4. '[List' → logprob: -5.970065593719482
    5. '[
' → logprob: -8.59506607055664
    6. '<|end|>' → logprob: -9.22006607055664
    7. ' ' → logprob: -9.72006607055664
    8. 'of' → logprob: -10.34506607055664
    9. '<Edge' → logprob: -10.47006607055664
    10. '```' → logprob: -10.84506607055664

Token 113: ' edges' (ID: 22569)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.5805651545524597
    2. ' Edge' → logprob: -1.3305652141571045
    3. ' edges' → logprob: -1.8305652141571045
    4. '(edges' → logprob: -5.205564975738525
    5. 'Edge' → logprob: -6.205564975738525
    6. ' List' → logprob: -6.205564975738525
    7. ' tuples' → logprob: -6.455564975738525
    8. '(' → logprob: -6.455564975738525
    9. 'Edges' → logprob: -7.080564975738525
    10. 'edges' → logprob: -7.455564975738525

Token 114: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.918903112411499
    2. 'self' → logprob: -1.543903112411499
    3. ' self' → logprob: -2.293903112411499
    4. '<|end|>' → logprob: -2.293903112411499
    5. ',' → logprob: -3.043903112411499
    6. ' =' → logprob: -3.293903112411499
    7. ' ' → logprob: -3.543903112411499
    8. ':' → logprob: -4.168903350830078
    9. ' defaultdict' → logprob: -4.543903350830078
    10. '   ' → logprob: -4.543903350830078

Token 115: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014873011037707329
    2. ' self' → logprob: -4.389873027801514
    3. 'self' → logprob: -6.889873027801514
    4. ' ' → logprob: -7.514873027801514
    5. '<|end|>' → logprob: -8.264872550964355
    6. ' defaultdict' → logprob: -8.389872550964355
    7. '
' → logprob: -9.264872550964355
    8. '   ' → logprob: -9.514872550964355
    9. ',' → logprob: -10.139872550964355
    10. '	self' → logprob: -10.889872550964355

Token 116: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.5327134728431702
    2. ' self' → logprob: -0.9077134728431702
    3. '       ' → logprob: -4.657713413238525
    4. ' ' → logprob: -10.782713890075684
    5. '	self' → logprob: -11.032713890075684
    6. 'import' → logprob: -12.157713890075684
    7. '   ' → logprob: -12.407713890075684
    8. 's' → logprob: -12.407713890075684
    9. '[self' → logprob: -14.032713890075684
    10. '(self' → logprob: -14.157713890075684

Token 117: '.ad' (ID: 19775)
  Prédit: '.ad'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.ad' → logprob: -1.0085045099258423
    2. '.edges' → logprob: -1.1335045099258423
    3. ' .' → logprob: -1.2585045099258423
    4. '.' → logprob: -4.008504390716553
    5. '._' → logprob: -4.758504390716553
    6. '.connections' → logprob: -7.133504390716553
    7. '.graph' → logprob: -8.008504867553711
    8. '_edges' → logprob: -8.383504867553711
    9. '.s' → logprob: -9.258504867553711
    10. '.edge' → logprob: -9.383504867553711

Token 118: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.014172682538628578
    2. 'jac' → logprob: -4.264172554016113
    3. 'd' → logprob: -12.014172554016113
    4. 'js' → logprob: -13.014172554016113
    5. 'ja' → logprob: -14.764172554016113
    6. '_j' → logprob: -16.38917350769043
    7. 'jl' → logprob: -16.51417350769043
    8. 'acency' → logprob: -16.51417350769043
    9. 'jc' → logprob: -16.63917350769043
    10. ' j' → logprob: -16.76417350769043

Token 119: ':' (ID: 25)
  Prédit: 'acency'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'acency' → logprob: -0.023165591061115265
    2. '_list' → logprob: -4.523165702819824
    3. ' =' → logprob: -4.648165702819824
    4. '=' → logprob: -7.023165702819824
    5. 'acent' → logprob: -7.523165702819824
    6. '_' → logprob: -7.773165702819824
    7. '[' → logprob: -8.273165702819824
    8. 'ac' → logprob: -8.773165702819824
    9. '_lists' → logprob: -9.773165702819824
    10. 'list' → logprob: -9.773165702819824

Token 120: ' Dict' (ID: 55179)
  Prédit: ' Dict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Dict' → logprob: -0.4317530691623688
    2. ' List' → logprob: -1.6817530393600464
    3. 'Dict' → logprob: -1.9317530393600464
    4. 'List' → logprob: -3.931753158569336
    5. '[List' → logprob: -9.681753158569336
    6. ' ' → logprob: -11.181753158569336
    7. '   ' → logprob: -13.806753158569336
    8. '	List' → logprob: -14.181753158569336
    9. '[' → logprob: -14.431753158569336
    10. '.Dict' → logprob: -15.181753158569336

Token 121: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -3.249780638725497e-05
    2. '<int' → logprob: -10.750032424926758
    3. '[' → logprob: -11.625032424926758
    4. '[Int' → logprob: -14.500032424926758
    5. '[List' → logprob: -14.625032424926758
    6. 'int' → logprob: -14.875032424926758
    7. '[
' → logprob: -15.000032424926758
    8. '[i' → logprob: -15.875032424926758
    9. '[in' → logprob: -16.000032424926758
    10. '```' → logprob: -16.375032424926758

Token 122: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009913649410009384
    2. ',List' → logprob: -7.000991344451904
    3. ' ,' → logprob: -9.625991821289062
    4. '[List' → logprob: -11.500991821289062
    5. 'List' → logprob: -13.000991821289062
    6. ',list' → logprob: -14.625991821289062
    7. '   ' → logprob: -15.000991821289062
    8. ',
' → logprob: -15.875991821289062
    9. '       ' → logprob: -16.500991821289062
    10. ' ' → logprob: -16.625991821289062

Token 123: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.6932154297828674
    2. ' List' → logprob: -0.6932154297828674
    3. '	List' → logprob: -10.568215370178223
    4. '[List' → logprob: -10.568215370178223
    5. ' ' → logprob: -11.693215370178223
    6. ']' → logprob: -12.693215370178223
    7. 'list' → logprob: -13.568215370178223
    8. '   ' → logprob: -14.318215370178223
    9. '<List' → logprob: -14.318215370178223
    10. '```' → logprob: -14.318215370178223

Token 124: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.5213274309644476e-05
    2. ']' → logprob: -11.500015258789062
    3. '<Edge' → logprob: -12.375015258789062
    4. '[
' → logprob: -15.500015258789062
    5. '[List' → logprob: -15.625015258789062
    6. 'Edge' → logprob: -15.750015258789062
    7. ' [' → logprob: -16.500015258789062
    8. '```' → logprob: -16.750015258789062
    9. '[int' → logprob: -17.125015258789062
    10. '[Index' → logprob: -17.125015258789062

Token 125: 'Edge' (ID: 16577)
  Prédit: 'Edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Edge' → logprob: -4.811348480870947e-05
    2. ' Edge' → logprob: -10.12504768371582
    3. '[' → logprob: -11.87504768371582
    4. '<Edge' → logprob: -14.50004768371582
    5. 'Edges' → logprob: -15.12504768371582
    6. ']' → logprob: -15.50004768371582
    7. '.Edge' → logprob: -17.37504768371582
    8. 'Tuple' → logprob: -17.75004768371582
    9. '   ' → logprob: -17.75004768371582
    10. '_edge' → logprob: -17.75004768371582

Token 126: ']]' (ID: 8928)
  Prédit: ']]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']]' → logprob: -4.704065213445574e-05
    2. ']]=' → logprob: -10.625046730041504
    3. ']' → logprob: -10.750046730041504
    4. ' ]]' → logprob: -14.625046730041504
    5. '']]' → logprob: -15.500046730041504
    6. ')]' → logprob: -15.875046730041504
    7. ']]]' → logprob: -15.875046730041504
    8. ']=' → logprob: -16.37504768371582
    9. '"]]' → logprob: -16.50004768371582
    10. ']]
' → logprob: -16.87504768371582

Token 127: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.023258639499545097
    2. '=' → logprob: -3.773258686065674
    3. ']' → logprob: -11.773258209228516
    4. ' ' → logprob: -13.023258209228516
    5. ')' → logprob: -13.523258209228516
    6. '=[]' → logprob: -13.898258209228516
    7. '[' → logprob: -15.023258209228516
    8. ' =
' → logprob: -15.398258209228516
    9. '<|end|>' → logprob: -15.523258209228516
    10. '[]' → logprob: -16.523258209228516

Token 128: ' {' (ID: 354)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.024803372099995613
    2. '{' → logprob: -3.774803400039673
    3. ' {}' → logprob: -7.399803161621094
    4. 'default' → logprob: -7.524803161621094
    5. '[]' → logprob: -8.524803161621094
    6. ' defaultdict' → logprob: -9.024803161621094
    7. ' {' → logprob: -9.774803161621094
    8. 'dict' → logprob: -10.774803161621094
    9. 'collections' → logprob: -12.524803161621094
    10. ' ' → logprob: -13.149803161621094

Token 129: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.002811290556564927
    2. ' i' → logprob: -5.877811431884766
    3. '   ' → logprob: -12.127811431884766
    4. '}' → logprob: -15.377811431884766
    5. '(i' → logprob: -15.377811431884766
    6. 'node' → logprob: -15.627811431884766
    7. 'k' → logprob: -16.127811431884766
    8. '	i' → logprob: -16.127811431884766
    9. '       ' → logprob: -17.002811431884766
    10. ' ' → logprob: -17.752811431884766

Token 130: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -2.0339031834737398e-05
    2. ' :' → logprob: -11.125020027160645
    3. ':i' → logprob: -12.500020027160645
    4. ':list' → logprob: -14.125020027160645
    5. ':index' → logprob: -15.000020027160645
    6. ':end' → logprob: -15.750020027160645
    7. ':int' → logprob: -16.50002098083496
    8. ':set' → logprob: -16.87502098083496
    9. ':[' → logprob: -17.00002098083496
    10. ':init' → logprob: -17.12502098083496

Token 131: '[]' (ID: 1951)
  Prédit: '[]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.10026749968528748
    2. ' []' → logprob: -2.3502674102783203
    3. '[]}' → logprob: -9.72526741027832
    4. '[])' → logprob: -14.97526741027832
    5. '[]
' → logprob: -15.60026741027832
    6. ' ' → logprob: -15.60026741027832
    7. '[]>' → logprob: -15.72526741027832
    8. '[]

' → logprob: -16.10026741027832
    9. '[' → logprob: -16.60026741027832
    10. ' [])' → logprob: -16.97526741027832

Token 132: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.004673156887292862
    2. 'for' → logprob: -5.379673004150391
    3. ' ' → logprob: -10.00467300415039
    4. ')' → logprob: -12.75467300415039
    5. '}' → logprob: -13.25467300415039
    6. ' i' → logprob: -13.75467300415039
    7. '	for' → logprob: -14.12967300415039
    8. '()' → logprob: -14.37967300415039
    9. ' }' → logprob: -15.87967300415039
    10. ',' → logprob: -16.50467300415039

Token 133: ' i' (ID: 575)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.08471297472715378
    2. 'range' → logprob: -2.8347129821777344
    3. ' i' → logprob: -3.8347129821777344
    4. 'i' → logprob: -7.084712982177734
    5. '(range' → logprob: -11.084712982177734
    6. ' ' → logprob: -11.834712982177734
    7. ' in' → logprob: -12.584712982177734
    8. '_' → logprob: -12.709712982177734
    9. '	range' → logprob: -12.709712982177734
    10. '_range' → logprob: -12.959712982177734

Token 134: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0007530473521910608
    2. 'in' → logprob: -7.375752925872803
    3. ' range' → logprob: -9.500753402709961
    4. 'range' → logprob: -10.000753402709961
    5. ' ' → logprob: -12.375753402709961
    6. ' i' → logprob: -13.625753402709961
    7. '<|end|>' → logprob: -14.500753402709961
    8. '(range' → logprob: -16.00075340270996
    9. '	in' → logprob: -16.00075340270996
    10. ' _' → logprob: -16.87575340270996

Token 135: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.31326285004615784
    2. 'range' → logprob: -1.3132628202438354
    3. '	range' → logprob: -14.188262939453125
    4. '(range' → logprob: -15.813262939453125
    5. '   ' → logprob: -17.063262939453125
    6. ' ' → logprob: -17.313262939453125
    7. '_range' → logprob: -17.563262939453125
    8. '```' → logprob: -18.313262939453125
    9. 'Range' → logprob: -18.688262939453125
    10. '    ' → logprob: -18.688262939453125

Token 136: '(' (ID: 7)
  Prédit: '(num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(num' → logprob: -0.039900489151477814
    2. '(self' → logprob: -3.289900541305542
    3. '(' → logprob: -6.289900302886963
    4. ' (' → logprob: -13.289900779724121
    5. '(n' → logprob: -15.164900779724121
    6. '(number' → logprob: -15.664900779724121
    7. 'num' → logprob: -16.664899826049805
    8. '(
' → logprob: -17.039899826049805
    9. '(len' → logprob: -17.164899826049805
    10. ' num' → logprob: -17.789899826049805

Token 137: '1' (ID: 16)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.015104012563824654
    2. ' num' → logprob: -4.265103816986084
    3. 'self' → logprob: -7.015103816986084
    4. ' self' → logprob: -10.265104293823242
    5. '(num' → logprob: -12.515104293823242
    6. '   ' → logprob: -13.140104293823242
    7. '	num' → logprob: -14.015104293823242
    8. ',num' → logprob: -15.265104293823242
    9. ' ' → logprob: -16.015104293823242
    10. '_num' → logprob: -16.765104293823242

Token 138: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0041067772544920444
    2. ' ,' → logprob: -5.5041069984436035
    3. ',self' → logprob: -11.004106521606445
    4. ' ' → logprob: -12.504106521606445
    5. ',num' → logprob: -12.629106521606445
    6. '<|end|>' → logprob: -13.004106521606445
    7. ',
' → logprob: -13.754106521606445
    8. ' ,
' → logprob: -15.004106521606445
    9. ')' → logprob: -15.379106521606445
    10. '

' → logprob: -15.879106521606445

Token 139: ' num' (ID: 2269)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.5283089876174927
    2. ' num' → logprob: -0.9033089876174927
    3. 'self' → logprob: -5.653308868408203
    4. ' self' → logprob: -6.403308868408203
    5. ' ' → logprob: -12.778308868408203
    6. '	num' → logprob: -13.778308868408203
    7. '```' → logprob: -13.778308868408203
    8. '=num' → logprob: -13.903308868408203
    9. '(num' → logprob: -14.028308868408203
    10. '    ' → logprob: -14.153308868408203

Token 140: '_is' (ID: 15224)
  Prédit: '_is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_is' → logprob: -6.392202976712724e-06
    2. '_' → logprob: -13.000006675720215
    3. 'is' → logprob: -13.000006675720215
    4. '   ' → logprob: -14.250006675720215
    5. '```' → logprob: -15.750006675720215
    6. '+' → logprob: -15.875006675720215
    7. '           ' → logprob: -15.875006675720215
    8. ' _' → logprob: -16.1250057220459
    9. ' ' → logprob: -16.1250057220459
    10. 'Is' → logprob: -16.2500057220459

Token 141: 'lands' (ID: 10186)
  Prédit: 'lands'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lands' → logprob: -0.0007364890188910067
    2. 'ands' → logprob: -8.000736236572266
    3. ' lands' → logprob: -8.750736236572266
    4. 'land' → logprob: -9.250736236572266
    5. 'nds' → logprob: -9.750736236572266
    6. 'lds' → logprob: -11.500736236572266
    7. '```' → logprob: -11.500736236572266
    8. ' islands' → logprob: -11.625736236572266
    9. ')' → logprob: -12.000736236572266
    10. 'al' → logprob: -12.125736236572266

Token 142: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.3132779896259308
    2. '+' → logprob: -1.3132779598236084
    3. ' ' → logprob: -11.063278198242188
    4. ')+' → logprob: -16.063278198242188
    5. ' +
' → logprob: -16.313278198242188
    6. ')' → logprob: -16.688278198242188
    7. '()+' → logprob: -16.813278198242188
    8. '   ' → logprob: -17.063278198242188
    9. '```' → logprob: -17.188278198242188
    10. '+i' → logprob: -17.313278198242188

Token 143: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3132617771625519
    2. ' ' → logprob: -1.3132617473602295
    3. '   ' → logprob: -17.688261032104492
    4. '```' → logprob: -17.688261032104492
    5. ')' → logprob: -17.813261032104492
    6. ' ' → logprob: -17.938261032104492
    7. '  ' → logprob: -18.188261032104492
    8. '2' → logprob: -18.938261032104492
    9. '

' → logprob: -19.375761032104492
    10. '_' → logprob: -19.688261032104492

Token 144: ')}
' (ID: 19324)
  Prédit: ')}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')}' → logprob: -0.0030586346983909607
    2. ')' → logprob: -5.878058433532715
    3. ' )' → logprob: -8.378058433532715
    4. '}' → logprob: -11.128058433532715
    5. ')}}' → logprob: -12.628058433532715
    6. ');}' → logprob: -13.128058433532715
    7. '})' → logprob: -13.878058433532715
    8. ')}
' → logprob: -14.753058433532715
    9. ')}

' → logprob: -14.878058433532715
    10. '))' → logprob: -14.878058433532715

Token 145: '    
' (ID: 1944)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.06538395583629608
    2. '   ' → logprob: -3.1903839111328125
    3. '<|end|>' → logprob: -4.1903839111328125
    4. '

' → logprob: -5.8153839111328125
    5. '    
' → logprob: -5.9403839111328125
    6. 'def' → logprob: -7.6903839111328125
    7. '  
' → logprob: -8.565383911132812
    8. '<|end|>' → logprob: -8.940383911132812
    9. ' 
' → logprob: -9.065383911132812
    10. ')' → logprob: -9.315383911132812

Token 146: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16301566362380981
    2. 'def' → logprob: -1.913015604019165
    3. ' def' → logprob: -5.913015842437744
    4. '
' → logprob: -10.413015365600586
    5. '    
' → logprob: -10.538015365600586
    6. ' ' → logprob: -11.788015365600586
    7. '<|end|>' → logprob: -11.788015365600586
    8. '	def' → logprob: -12.413015365600586
    9. '       ' → logprob: -13.413015365600586
    10. '

' → logprob: -13.538015365600586

Token 147: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.00027432903880253434
    2. ' def' → logprob: -8.250274658203125
    3. '   ' → logprob: -11.250274658203125
    4. 'de' → logprob: -17.375274658203125
    5. ' ' → logprob: -18.750274658203125
    6. ')' → logprob: -19.375274658203125
    7. '	def' → logprob: -20.875274658203125
    8. '```' → logprob: -21.250274658203125
    9. 'Def' → logprob: -21.875274658203125
    10. '  ' → logprob: -22.250274658203125

Token 148: ' add' (ID: 1147)
  Prédit: ' add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' add' → logprob: -0.00014644917973782867
    2. 'add' → logprob: -9.500146865844727
    3. '_add' → logprob: -9.750146865844727
    4. ' ' → logprob: -11.625146865844727
    5. '	add' → logprob: -13.750146865844727
    6. ' def' → logprob: -14.000146865844727
    7. '.add' → logprob: -14.250146865844727
    8. '_' → logprob: -15.000146865844727
    9. 'Add' → logprob: -15.125146865844727
    10. ' ad' → logprob: -15.375146865844727

Token 149: '_bridge' (ID: 138885)
  Prédit: '_edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edge' → logprob: -0.005256883800029755
    2. '_' → logprob: -5.255256652832031
    3. '_connection' → logprob: -11.255256652832031
    4. '_edges' → logprob: -13.380256652832031
    5. '_node' → logprob: -14.005256652832031
    6. '_line' → logprob: -14.005256652832031
    7. '_e' → logprob: -14.255256652832031
    8. '_bridge' → logprob: -14.255256652832031
    9. ' _' → logprob: -14.755256652832031
    10. '_ed' → logprob: -14.880256652832031

Token 150: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0003392767102923244
    2. '(' → logprob: -8.00033950805664
    3. ' (' → logprob: -12.75033950805664
    4. '(
' → logprob: -14.62533950805664
    5. 'self' → logprob: -15.62533950805664
    6. '(s' → logprob: -16.50033950805664
    7. '   ' → logprob: -17.50033950805664
    8. ' self' → logprob: -18.37533950805664
    9. '       ' → logprob: -18.75033950805664
    10. '	self' → logprob: -18.87533950805664

Token 151: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.065608562901616e-05
    2. ' ,' → logprob: -9.500081062316895
    3. 'self' → logprob: -12.750081062316895
    4. ',self' → logprob: -14.500081062316895
    5. '_,' → logprob: -14.500081062316895
    6. ',
' → logprob: -15.125081062316895
    7. ',int' → logprob: -15.750081062316895
    8. '       ' → logprob: -16.000080108642578
    9. '_edge' → logprob: -16.000080108642578
    10. '(self' → logprob: -16.000080108642578

Token 152: ' from' (ID: 591)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.08095713704824448
    2. ' from' → logprob: -2.5809571743011475
    3. 'u' → logprob: -6.705956935882568
    4. ' u' → logprob: -7.455956935882568
    5. '   ' → logprob: -9.580957412719727
    6. ')' → logprob: -9.955957412719727
    7. '	from' → logprob: -9.955957412719727
    8. ' edge' → logprob: -10.830957412719727
    9. 'frm' → logprob: -10.955957412719727
    10. 'edge' → logprob: -11.080957412719727

Token 153: '_is' (ID: 15224)
  Prédit: '_is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_is' → logprob: -0.0010604370618239045
    2. '_' → logprob: -7.376060485839844
    3. '_bridge' → logprob: -8.126060485839844
    4. ')_' → logprob: -10.001060485839844
    5. ')' → logprob: -10.001060485839844
    6. '_from' → logprob: -11.251060485839844
    7. '_to' → logprob: -11.876060485839844
    8. '_i' → logprob: -12.001060485839844
    9. '_edge' → logprob: -12.626060485839844
    10. '_)' → logprob: -13.126060485839844

Token 154: 'land' (ID: 2117)
  Prédit: 'land'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'land' → logprob: -0.0005893715424463153
    2. '_land' → logprob: -7.750589370727539
    3. 'and' → logprob: -9.000589370727539
    4. 'aland' → logprob: -11.500589370727539
    5. '_is' → logprob: -12.375589370727539
    6. 'eland' → logprob: -12.500589370727539
    7. 'is' → logprob: -12.625589370727539
    8. 'Island' → logprob: -13.000589370727539
    9. '_' → logprob: -13.250589370727539
    10. 'iland' → logprob: -13.750589370727539

Token 155: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.18425996601581573
    2. ':' → logprob: -1.8092600107192993
    3. ':int' → logprob: -5.43425989151001
    4. ' ,' → logprob: -9.059260368347168
    5. ' :' → logprob: -11.184260368347168
    6. ',int' → logprob: -12.184260368347168
    7. '   ' → logprob: -13.559260368347168
    8. '```' → logprob: -14.059260368347168
    9. 'int' → logprob: -14.559260368347168
    10. ':Int' → logprob: -14.684260368347168

Token 156: ' int' (ID: 677)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.9047838449478149
    2. ' int' → logprob: -1.279783844947815
    3. 'int' → logprob: -2.0297837257385254
    4. ',' → logprob: -2.0297837257385254
    5. 'to' → logprob: -3.0297837257385254
    6. ' ,' → logprob: -5.529783725738525
    7. ',int' → logprob: -6.654783725738525
    8. ':int' → logprob: -7.529783725738525
    9. 'from' → logprob: -9.029784202575684
    10. ',to' → logprob: -9.029784202575684

Token 157: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.65707261255011e-06
    2. ' ,' → logprob: -11.750008583068848
    3. ',to' → logprob: -14.750008583068848
    4. ',
' → logprob: -16.000009536743164
    5. '‌,' → logprob: -16.250009536743164
    6. 'to' → logprob: -17.125009536743164
    7. ',int' → logprob: -17.250009536743164
    8. ',

' → logprob: -17.625009536743164
    9. ')' → logprob: -18.125009536743164
    10. '_,' → logprob: -18.875009536743164

Token 158: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.03804252669215202
    2. 'to' → logprob: -3.2880425453186035
    3. '	to' → logprob: -14.288042068481445
    4. 'To' → logprob: -16.038042068481445
    5. '_to' → logprob: -16.038042068481445
    6. ',to' → logprob: -16.538042068481445
    7. ',' → logprob: -16.788042068481445
    8. ' ' → logprob: -16.788042068481445
    9. '[to' → logprob: -17.038042068481445
    10. ' from' → logprob: -17.288042068481445

Token 159: '_is' (ID: 15224)
  Prédit: '_is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_is' → logprob: -6.372916686814278e-05
    2. '_bridge' → logprob: -10.6250638961792
    3. ')_' → logprob: -10.6250638961792
    4. '_' → logprob: -12.7500638961792
    5. '```' → logprob: -13.0000638961792
    6. '=is' → logprob: -13.3750638961792
    7. ')' → logprob: -13.6250638961792
    8. '   ' → logprob: -13.7500638961792
    9. ' _' → logprob: -13.7500638961792
    10. '_f' → logprob: -14.7500638961792

Token 160: 'land' (ID: 2117)
  Prédit: 'land'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'land' → logprob: -0.22023017704486847
    2. '_land' → logprob: -1.845230221748352
    3. '_is' → logprob: -3.3452301025390625
    4. 's' → logprob: -6.5952301025390625
    5. '_s' → logprob: -6.8452301025390625
    6. '_' → logprob: -7.5952301025390625
    7. 'is' → logprob: -7.7202301025390625
    8. 'aland' → logprob: -7.9702301025390625
    9. '_bridge' → logprob: -8.720230102539062
    10. 'and' → logprob: -8.970230102539062

Token 161: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1606580913066864
    2. ':' → logprob: -1.9106581211090088
    3. ':int' → logprob: -8.28565788269043
    4. ' ,' → logprob: -9.78565788269043
    5. '):' → logprob: -9.78565788269043
    6. ',int' → logprob: -10.91065788269043
    7. ')' → logprob: -11.16065788269043
    8. ' :' → logprob: -11.78565788269043
    9. '<|end|>' → logprob: -11.78565788269043
    10. '=' → logprob: -12.16065788269043

Token 162: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.3869176208972931
    2. 'int' → logprob: -1.1369175910949707
    3. ':int' → logprob: -10.886918067932129
    4. ' ' → logprob: -11.886918067932129
    5. ')' → logprob: -12.011918067932129
    6. ',int' → logprob: -12.511918067932129
    7. ',' → logprob: -12.636918067932129
    8. '=int' → logprob: -12.886918067932129
    9. '[int' → logprob: -13.261918067932129
    10. '<int' → logprob: -14.011918067932129

Token 163: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.227250610711053e-05
    2. ' ,' → logprob: -10.125041961669922
    3. ')' → logprob: -13.625041961669922
    4. ',
' → logprob: -15.000041961669922
    5. ',int' → logprob: -15.000041961669922
    6. '):' → logprob: -16.125041961669922
    7. '‌,' → logprob: -16.750041961669922
    8. '   ' → logprob: -17.000041961669922
    9. '```' → logprob: -17.625041961669922
    10. '),' → logprob: -17.750041961669922

Token 164: ' tide' (ID: 69214)
  Prédit: ' tide'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tide' → logprob: -0.051181595772504807
    2. 't' → logprob: -3.0511815547943115
    3. ' tidal' → logprob: -6.426181793212891
    4. ' int' → logprob: -8.05118179321289
    5. ' t' → logprob: -8.67618179321289
    6. ' ' → logprob: -9.17618179321289
    7. 'int' → logprob: -9.55118179321289
    8. ' tides' → logprob: -9.80118179321289
    9. ' timedelta' → logprob: -9.92618179321289
    10. 'tid' → logprob: -10.17618179321289

Token 165: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -4.429896944202483e-05
    2. '_' → logprob: -10.625043869018555
    3. '_t' → logprob: -11.250043869018555
    4. '_times' → logprob: -13.000043869018555
    5. ' _' → logprob: -13.375043869018555
    6. ')_' → logprob: -13.625043869018555
    7. '   ' → logprob: -14.500043869018555
    8. '_timer' → logprob: -15.250043869018555
    9. '_tim' → logprob: -15.750043869018555
    10. ',' → logprob: -16.375043869018555

Token 166: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.021719470620155334
    2. '):' → logprob: -3.896719455718994
    3. ':int' → logprob: -7.146719455718994
    4. ')' → logprob: -8.021719932556152
    5. ' ):' → logprob: -10.396719932556152
    6. '):
' → logprob: -10.896719932556152
    7. ' :' → logprob: -12.146719932556152
    8. '   ' → logprob: -13.521719932556152
    9. '```' → logprob: -14.021719932556152
    10. ' )' → logprob: -14.021719932556152

Token 167: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.14275339245796204
    2. ' int' → logprob: -2.0177533626556396
    3. ')' → logprob: -10.517753601074219
    4. '):' → logprob: -11.517753601074219
    5. ':int' → logprob: -11.642753601074219
    6. '   ' → logprob: -11.642753601074219
    7. ' ' → logprob: -12.017753601074219
    8. '):
' → logprob: -12.642753601074219
    9. ' )' → logprob: -12.642753601074219
    10. 't' → logprob: -13.142753601074219

Token 168: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.004685849417001009
    2. ')' → logprob: -5.379685878753662
    3. '):
' → logprob: -10.129685401916504
    4. ' ):' → logprob: -10.879685401916504
    5. ':' → logprob: -12.629685401916504
    6. '   ' → logprob: -13.379685401916504
    7. '):
' → logprob: -13.879685401916504
    8. ')->' → logprob: -14.629685401916504
    9. ' )' → logprob: -15.629685401916504
    10. ' ' → logprob: -15.879685401916504

Token 169: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008471485925838351
    2. '):' → logprob: -8.125846862792969
    3. ':' → logprob: -8.250846862792969
    4. ')' → logprob: -9.250846862792969
    5. ' self' → logprob: -9.750846862792969
    6. '):
' → logprob: -10.250846862792969
    7. ',' → logprob: -10.375846862792969
    8. '   ' → logprob: -10.625846862792969
    9. '        
' → logprob: -11.125846862792969
    10. '<|end|>' → logprob: -11.875846862792969

Token 170: ' edge' (ID: 11165)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -1.0454767942428589
    2. ' edge' → logprob: -1.0454767942428589
    3. 'self' → logprob: -2.0454769134521484
    4. '       ' → logprob: -2.4204769134521484
    5. 'edge' (adapté à ' edge') → logprob: -2.5454769134521484
    6. ' new' → logprob: -8.545476913452148
    7. 'new' → logprob: -10.420476913452148
    8. ' if' → logprob: -10.920476913452148
    9. 'e' → logprob: -11.295476913452148
    10. '   ' → logprob: -11.920476913452148

Token 171: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01815415732562542
    2. '=' → logprob: -4.018154144287109
    3. 's' → logprob: -13.14315414428711
    4. '.' → logprob: -13.26815414428711
    5. '1' → logprob: -15.01815414428711
    6. ')' → logprob: -15.89315414428711
    7. ' ' → logprob: -17.14315414428711
    8. '_' → logprob: -17.39315414428711
    9. ' =
' → logprob: -18.01815414428711
    10. '   ' → logprob: -18.26815414428711

Token 172: ' Edge' (ID: 16396)
  Prédit: ' Edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Edge' → logprob: -0.07888978719711304
    2. 'Edge' → logprob: -2.578889846801758
    3. '<Edge' → logprob: -18.453889846801758
    4. ' edge' → logprob: -19.703889846801758
    5. '.Edge' → logprob: -20.203889846801758
    6. ' ' → logprob: -20.703889846801758
    7. '_edge' → logprob: -20.953889846801758
    8. 'edge' → logprob: -21.328889846801758
    9. ' Ed' → logprob: -21.828889846801758
    10. 'Edges' → logprob: -21.953889846801758

Token 173: '(from' (ID: 32142)
  Prédit: '(from'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(from' → logprob: -1.0564331205387134e-05
    2. '(' → logprob: -11.50001049041748
    3. ' (' → logprob: -16.000011444091797
    4. 'from' → logprob: -16.375011444091797
    5. ' from' → logprob: -17.000011444091797
    6. '(to' → logprob: -17.125011444091797
    7. '(for' → logprob: -18.000011444091797
    8. '(
' → logprob: -18.250011444091797
    9. ')' → logprob: -19.000011444091797
    10. '[from' → logprob: -19.500011444091797

Token 174: '_is' (ID: 15224)
  Prédit: '_is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_is' → logprob: -2.451116051815916e-05
    2. 'is' → logprob: -11.000024795532227
    3. '_' → logprob: -12.875024795532227
    4. ')' → logprob: -13.750024795532227
    5. '```' → logprob: -14.000024795532227
    6. 'from' → logprob: -15.000024795532227
    7. 'Is' → logprob: -15.125024795532227
    8. '_to' → logprob: -15.250024795532227
    9. '=is' → logprob: -15.250024795532227
    10. '   ' → logprob: -15.250024795532227

Token 175: 'land' (ID: 2117)
  Prédit: 'land'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'land' → logprob: -0.0771780014038086
    2. 'is' → logprob: -2.9521780014038086
    3. '_is' → logprob: -4.077178001403809
    4. '_land' → logprob: -5.952178001403809
    5. 's' → logprob: -7.327178001403809
    6. 'and' → logprob: -7.452178001403809
    7. 'Island' → logprob: -7.952178001403809
    8. '_' → logprob: -8.577178001403809
    9. '_bridge' → logprob: -9.577178001403809
    10. 'aland' → logprob: -9.702178001403809

Token 176: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.8074162653647363e-05
    2. ' ,' → logprob: -11.625018119812012
    3. ')' → logprob: -12.750018119812012
    4. '<|end|>' → logprob: -13.250018119812012
    5. ',to' → logprob: -13.250018119812012
    6. ',
' → logprob: -13.625018119812012
    7. 'from' → logprob: -15.250018119812012
    8. ',

' → logprob: -15.625018119812012
    9. '‌,' → logprob: -15.625018119812012
    10. '<|end|>' → logprob: -15.625018119812012

Token 177: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.5231688618659973
    2. ' to' → logprob: -0.8981688618659973
    3. ')' → logprob: -10.773168563842773
    4. '   ' → logprob: -11.898168563842773
    5. '	to' → logprob: -12.648168563842773
    6. ',' → logprob: -12.648168563842773
    7. 'from' → logprob: -13.398168563842773
    8. ' ' → logprob: -13.523168563842773
    9. '    ' → logprob: -13.648168563842773
    10. ' )' → logprob: -13.898168563842773

Token 178: '_is' (ID: 15224)
  Prédit: '_is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_is' → logprob: -0.0009701796225272119
    2. 'is' → logprob: -7.000970363616943
    3. 'Island' → logprob: -11.000969886779785
    4. ' _' → logprob: -11.500969886779785
    5. '```' → logprob: -11.500969886779785
    6. '_' → logprob: -12.125969886779785
    7. '_bridge' → logprob: -12.625969886779785
    8. ')' → logprob: -13.250969886779785
    9. '=is' → logprob: -13.625969886779785
    10. ' island' → logprob: -13.750969886779785

Token 179: 'land' (ID: 2117)
  Prédit: 'land'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'land' → logprob: -0.0014424959663301706
    2. 'and' → logprob: -6.6264424324035645
    3. '_land' → logprob: -9.501442909240723
    4. '_' → logprob: -11.501442909240723
    5. 'aland' → logprob: -12.126442909240723
    6. '   ' → logprob: -12.876442909240723
    7. '1' → logprob: -12.876442909240723
    8. 'Land' → logprob: -13.251442909240723
    9. ' land' → logprob: -13.376442909240723
    10. 'Island' → logprob: -13.626442909240723

Token 180: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006467910134233534
    2. ')' → logprob: -7.375646591186523
    3. ' ,' → logprob: -11.125646591186523
    4. ',
' → logprob: -13.625646591186523
    5. ',t' → logprob: -14.000646591186523
    6. ',)' → logprob: -14.000646591186523
    7. '   ' → logprob: -14.125646591186523
    8. '),' → logprob: -14.875646591186523
    9. '```' → logprob: -15.125646591186523
    10. ' )' → logprob: -15.375646591186523

Token 181: ' tide' (ID: 69214)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.2258271872997284
    2. ' tide' → logprob: -1.6008272171020508
    3. ' t' → logprob: -8.85082721710205
    4. ')' → logprob: -9.47582721710205
    5. ' tidal' → logprob: -9.72582721710205
    6. 'tid' → logprob: -10.22582721710205
    7. ')t' → logprob: -11.22582721710205
    8. '
' → logprob: -11.47582721710205
    9. ' tides' → logprob: -11.47582721710205
    10. '	t' → logprob: -11.91332721710205

Token 182: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -1.0325924449716695e-05
    2. '_' → logprob: -12.37501049041748
    3. ')' → logprob: -12.62501049041748
    4. '_t' → logprob: -13.75001049041748
    5. ' _' → logprob: -14.25001049041748
    6. ')_' → logprob: -14.87501049041748
    7. '   ' → logprob: -15.50001049041748
    8. 'time' → logprob: -15.62501049041748
    9. '_code' → logprob: -15.87501049041748
    10. ' )' → logprob: -16.125009536743164

Token 183: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.04860372841358185
    2. ')' → logprob: -3.0486037731170654
    3. ' )
' → logprob: -11.423604011535645
    4. ')
' → logprob: -12.423604011535645
    5. ')

' → logprob: -14.173604011535645
    6. '       ' → logprob: -14.798604011535645
    7. ' )' → logprob: -15.798604011535645
    8. '   ' → logprob: -16.173603057861328
    9. ' ' → logprob: -17.173603057861328
    10. ')`
' → logprob: -19.548603057861328

Token 184: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.000509187753777951
    2. '
' → logprob: -8.500509262084961
    3. ')' → logprob: -8.875509262084961
    4. 'self' → logprob: -9.250509262084961
    5. ',' → logprob: -10.375509262084961
    6. ')
' → logprob: -11.250509262084961
    7. ' self' → logprob: -11.375509262084961
    8. '        
' → logprob: -12.375509262084961
    9. '   ' → logprob: -13.875509262084961
    10. '<|end|>' → logprob: -14.000509262084961

Token 185: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.02800898626446724
    2. ' self' → logprob: -3.9030089378356934
    3. '       ' → logprob: -4.903008937835693
    4. '
' → logprob: -11.778009414672852
    5. '   ' → logprob: -12.528009414672852
    6. '	self' → logprob: -13.153009414672852
    7. '        
' → logprob: -14.778009414672852
    8. ' ' → logprob: -15.153009414672852
    9. '```' → logprob: -15.403009414672852
    10. '[self' → logprob: -15.778009414672852

Token 186: '.ad' (ID: 19775)
  Prédit: '.ad'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.ad' → logprob: -0.0002525184245314449
    2. '.' → logprob: -8.375252723693848
    3. ' .' → logprob: -11.000252723693848
    4. '   ' → logprob: -13.750252723693848
    5. '`.' → logprob: -14.625252723693848
    6. 'adj' → logprob: -14.875252723693848
    7. '
' → logprob: -15.000252723693848
    8. ').' → logprob: -15.125252723693848
    9. '.ind' → logprob: -15.375252723693848
    10. '```' → logprob: -15.375252723693848

Token 187: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.00034392563975416124
    2. 'jac' → logprob: -8.875344276428223
    3. '[' → logprob: -9.875344276428223
    4. 'd' → logprob: -10.250344276428223
    5. 'adj' → logprob: -10.750344276428223
    6. '.j' → logprob: -10.875344276428223
    7. '[j' → logprob: -11.000344276428223
    8. '.ad' → logprob: -11.250344276428223
    9. '.' → logprob: -11.250344276428223
    10. '```' → logprob: -12.125344276428223

Token 188: '[from' (ID: 157148)
  Prédit: '[from'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[from' → logprob: -2.7014437364414334e-05
    2. '[' → logprob: -10.75002670288086
    3. '[to' → logprob: -12.12502670288086
    4. '[first' → logprob: -17.50002670288086
    5. '[df' → logprob: -17.87502670288086
    6. '[f' → logprob: -17.87502670288086
    7. '[source' → logprob: -18.25002670288086
    8. ')[' → logprob: -18.37502670288086
    9. 'from' → logprob: -18.37502670288086
    10. ' [' → logprob: -18.75002670288086

Token 189: '_is' (ID: 15224)
  Prédit: '_is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_is' → logprob: -3.404745439183898e-05
    2. 'is' → logprob: -10.37503433227539
    3. '_' → logprob: -14.12503433227539
    4. '```' → logprob: -14.62503433227539
    5. '_bridge' → logprob: -15.25003433227539
    6. ')' → logprob: -15.62503433227539
    7. '_to' → logprob: -16.12503433227539
    8. '           ' → logprob: -16.12503433227539
    9. '   ' → logprob: -16.75003433227539
    10. ')_' → logprob: -16.75003433227539

Token 190: 'land' (ID: 2117)
  Prédit: 'land'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'land' → logprob: -0.05572182685136795
    2. 'and' → logprob: -2.9307217597961426
    3. '_land' → logprob: -7.555721759796143
    4. 'lands' → logprob: -9.6807222366333
    5. 'al' → logprob: -10.0557222366333
    6. '   ' → logprob: -10.1807222366333
    7. 'aland' → logprob: -10.8057222366333
    8. '[' → logprob: -10.8057222366333
    9. ']' → logprob: -11.4307222366333
    10. '```' → logprob: -11.6807222366333

Token 191: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -4.143808109802194e-05
    2. ']' → logprob: -10.125041007995605
    3. ' ].' → logprob: -13.750041007995605
    4. '.' → logprob: -16.000041961669922
    5. '.append' → logprob: -16.125041961669922
    6. '   ' → logprob: -17.375041961669922
    7. ').' → logprob: -18.250041961669922
    8. ' ' → logprob: -18.375041961669922
    9. '][' → logprob: -18.625041961669922
    10. '[' → logprob: -19.000041961669922

Token 192: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -4.320199877838604e-07
    2. ' append' → logprob: -15.625
    3. '.append' → logprob: -15.625
    4. 'appen' → logprob: -17.75
    5. 'push' → logprob: -18.625
    6. 'app' → logprob: -19.375
    7. '_append' → logprob: -19.75
    8. '	append' → logprob: -20.375
    9. 'Append' → logprob: -21.0
    10. '```' → logprob: -21.875

Token 193: '(edge' (ID: 84023)
  Prédit: '(edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(edge' → logprob: -7.822646693966817e-06
    2. '(' → logprob: -12.250007629394531
    3. 'edge' → logprob: -12.750007629394531
    4. ' edge' → logprob: -17.25000762939453
    5. ' (' → logprob: -17.37500762939453
    6. '=edge' → logprob: -17.75000762939453
    7. '(
' → logprob: -17.87500762939453
    8. '((' → logprob: -18.75000762939453
    9. '(edges' → logprob: -20.12500762939453
    10. '(angle' → logprob: -20.37500762939453

Token 194: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03816404938697815
    2. ')
' → logprob: -3.2881641387939453
    3. '       ' → logprob: -9.663164138793945
    4. ' )' → logprob: -10.038164138793945
    5. ' )
' → logprob: -11.288164138793945
    6. ')

' → logprob: -13.663164138793945
    7. ')
' → logprob: -13.913164138793945
    8. '   ' → logprob: -15.038164138793945
    9. ')add' → logprob: -16.913164138793945
    10. '),' → logprob: -17.038164138793945

Token 195: 'class' (ID: 1444)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9745813012123108
    2. '<|end|>' → logprob: -1.099581241607666
    3. '   ' → logprob: -1.349581241607666
    4. '       ' → logprob: -4.349581241607666
    5. '<|end|>' → logprob: -4.349581241607666
    6. '    
' → logprob: -5.849581241607666
    7. 'def' → logprob: -7.849581241607666
    8. '  
' → logprob: -7.974581241607666
    9. ' ' → logprob: -8.724581718444824
    10. '        
' → logprob: -8.849581718444824

Token 196: ' State' (ID: 5388)
  Prédit: ' Island'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Island' → logprob: -0.852275013923645
    2. ' Solution' → logprob: -2.2272748947143555
    3. ' Tide' → logprob: -2.6022748947143555
    4. 'Solution' → logprob: -2.8522748947143555
    5. ' Solver' → logprob: -2.9772748947143555
    6. 'Island' → logprob: -3.1022748947143555
    7. ' Bridge' → logprob: -3.1022748947143555
    8. ' T' → logprob: -3.3522748947143555
    9. ' Path' → logprob: -3.3522748947143555
    10. 'T' → logprob: -3.4772748947143555

Token 197: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0019437457667663693
    2. '):' → logprob: -7.376943588256836
    3. '<|end|>' → logprob: -7.501943588256836
    4. '(' → logprob: -7.751943588256836
    5. '():' → logprob: -9.001943588256836
    6. ' :' → logprob: -9.751943588256836
    7. '>:' → logprob: -10.126943588256836
    8. ':
' → logprob: -10.376943588256836
    9. '(object' → logprob: -10.876943588256836
    10. ':**' → logprob: -11.001943588256836

Token 198: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04089689999818802
    2. ':' → logprob: -3.2908968925476074
    3. ':
' → logprob: -6.915896892547607
    4. '<|end|>' → logprob: -6.915896892547607
    5. '  ' → logprob: -8.415897369384766
    6. '):
' → logprob: -8.915897369384766
    7. ' ' → logprob: -9.040897369384766
    8. '):' → logprob: -9.040897369384766
    9. '(' → logprob: -9.665897369384766
    10. ')' → logprob: -10.040897369384766

Token 199: ' """
' (ID: 7037)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.26877984404563904
    2. ' def' → logprob: -1.8937798738479614
    3. '   ' → logprob: -2.768779754638672
    4. ' __' → logprob: -4.268779754638672
    5. '__' → logprob: -4.893779754638672
    6. ':' → logprob: -8.143779754638672
    7. '  ' → logprob: -8.143779754638672
    8. ' ' → logprob: -9.143779754638672
    9. '    ' → logprob: -9.768779754638672
    10. '```' → logprob: -9.893779754638672

Token 200: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.44088074564933777
    2. ' def' → logprob: -1.1908807754516602
    3. 'init' → logprob: -3.81588077545166
    4. '__' → logprob: -4.56588077545166
    5. '   ' → logprob: -4.81588077545166
    6. ' __' → logprob: -4.94088077545166
    7. 'class' → logprob: -5.44088077545166
    8. 'from' → logprob: -9.19088077545166
    9. '  ' → logprob: -9.31588077545166
    10. 'python' → logprob: -9.69088077545166

Token 201: ' Represents' (ID: 84592)
  Prédit: 'Rep'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Rep' → logprob: -0.3577747046947479
    2. ' Represents' → logprob: -1.4827747344970703
    3. 'Represent' → logprob: -3.8577747344970703
    4. '   ' → logprob: -3.8577747344970703
    5. ' Represent' → logprob: -5.23277473449707
    6. 'def' → logprob: -5.60777473449707
    7. 'class' → logprob: -5.73277473449707
    8. ' Holds' → logprob: -5.73277473449707
    9. 'rep' → logprob: -5.85777473449707
    10. ' Used' → logprob: -6.23277473449707

Token 202: ' the' (ID: 290)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.022199135273694992
    2. ' the' → logprob: -3.8971991539001465
    3. ' an' → logprob: -6.5221991539001465
    4. 'a' → logprob: -9.522198677062988
    5. '   ' → logprob: -10.022198677062988
    6. 'the' → logprob: -10.397198677062988
    7. ' current' → logprob: -10.522198677062988
    8. ' each' → logprob: -12.772198677062988
    9. '<|end|>' → logprob: -13.147198677062988
    10. 'current' → logprob: -13.772198677062988

Token 203: ' arrival' (ID: 24861)
  Prédit: ' current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.6871544122695923
    2. 'current' → logprob: -0.8121544122695923
    3. 'state' → logprob: -3.0621542930603027
    4. ' state' → logprob: -5.187154293060303
    5. 'position' → logprob: -8.562154769897461
    6. 'time' → logprob: -9.687154769897461
    7. 'arrival' → logprob: -9.687154769897461
    8. '(current' → logprob: -9.937154769897461
    9. '   ' → logprob: -10.062154769897461
    10. ' position' → logprob: -10.187154769897461

Token 204: ' time' (ID: 1058)
  Prédit: ' time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' time' → logprob: -0.29296740889549255
    2. '_time' → logprob: -1.417967438697815
    3. ' ' → logprob: -5.417967319488525
    4. '_' → logprob: -6.042967319488525
    5. ' at' → logprob: -6.417967319488525
    6. ' _' → logprob: -7.167967319488525
    7. '<|end|>' → logprob: -7.417967319488525
    8. '   ' → logprob: -7.667967319488525
    9. 'time' → logprob: -7.667967319488525
    10. 'Time' → logprob: -9.042967796325684

Token 205: ' at' (ID: 540)
  Prédit: ' at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' at' → logprob: -0.490581214427948
    2. ' and' → logprob: -1.8655812740325928
    3. '<|end|>' → logprob: -2.1155812740325928
    4. ',' → logprob: -2.8655812740325928
    5. ' in' → logprob: -3.9905812740325928
    6. '<|end|>' → logprob: -4.615581035614014
    7. '   ' → logprob: -4.990581035614014
    8. 'at' → logprob: -5.490581035614014
    9. ' ,' → logprob: -5.990581035614014
    10. ' ' → logprob: -6.115581035614014

Token 206: ' an' (ID: 448)
  Prédit: ' an'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' an' → logprob: -0.02143911086022854
    2. ' a' → logprob: -4.271439075469971
    3. 'an' → logprob: -5.521439075469971
    4. 'a' → logprob: -6.271439075469971
    5. ' the' → logprob: -6.771439075469971
    6. '   ' → logprob: -9.146439552307129
    7. 'the' → logprob: -9.646439552307129
    8. ' island' → logprob: -11.146439552307129
    9. ' each' → logprob: -11.771439552307129
    10. 'is' → logprob: -12.271439552307129

Token 207: ' island' (ID: 18149)
  Prédit: ' island'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' island' → logprob: -0.2017538994550705
    2. 'is' → logprob: -1.701753854751587
    3. '<|end|>' → logprob: -9.326753616333008
    4. ' is' → logprob: -9.701753616333008
    5. ' isla' → logprob: -10.576753616333008
    6. ' current' → logprob: -10.951753616333008
    7. ' isle' → logprob: -11.201753616333008
    8. '
' → logprob: -11.201753616333008
    9. '   ' → logprob: -11.451753616333008
    10. ' edge' → logprob: -11.451753616333008

Token 208: ' during' (ID: 3354)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5960670113563538
    2. ' and' → logprob: -1.096066951751709
    3. ',' → logprob: -3.096066951751709
    4. '.' → logprob: -3.346066951751709
    5. ' in' → logprob: -4.346066951751709
    6. ' with' → logprob: -4.846066951751709
    7. ' at' → logprob: -5.096066951751709
    8. '<|end|>' → logprob: -6.846066951751709
    9. ':' → logprob: -7.096066951751709
    10. 'and' → logprob: -7.221066951751709

Token 209: ' the' (ID: 290)
  Prédit: 'low'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'low' → logprob: -0.7067050337791443
    2. 'high' → logprob: -1.581705093383789
    3. ' low' → logprob: -2.331705093383789
    4. 'a' → logprob: -2.581705093383789
    5. 'the' → logprob: -2.956705093383789
    6. ' high' → logprob: -3.706705093383789
    7. 'which' → logprob: -3.956705093383789
    8. 't' → logprob: -4.956705093383789
    9. ' a' → logprob: -5.081705093383789
    10. ' the' → logprob: -5.081705093383789

Token 210: ' search' (ID: 3684)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.4028962254524231
    2. 'low' → logprob: -2.1528961658477783
    3. 'day' → logprob: -2.6528961658477783
    4. 'bridge' → logprob: -3.5278961658477783
    5. 'jour' → logprob: -3.9028961658477783
    6. 'high' → logprob: -4.027896404266357
    7. 'current' → logprob: -4.652896404266357
    8. 'f' → logprob: -4.902896404266357
    9. 'night' → logprob: -4.902896404266357
    10. 'tid' → logprob: -5.402896404266357

Token 211: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03916390612721443
    2. '.' → logprob: -3.664163827896118
    3. ',' → logprob: -5.664164066314697
    4. ' at' → logprob: -6.039164066314697
    5. ' and' → logprob: -6.414164066314697
    6. ':' → logprob: -6.539164066314697
    7. ' with' → logprob: -6.664164066314697
    8. ' in' → logprob: -6.789164066314697
    9. '<|end|>' → logprob: -8.289163589477539
    10. ' for' → logprob: -8.414163589477539

Token 212: ' 
' (ID: 793)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3225635886192322
    2. ' including' → logprob: -2.072563648223877
    3. ' with' → logprob: -3.322563648223877
    4. ' the' → logprob: -3.697563648223877
    5. ' used' → logprob: -3.822563648223877
    6. ' and' → logprob: -4.322563648223877
    7. ' allowing' → logprob: -4.447563648223877
    8. ' which' → logprob: -4.572563648223877
    9. 'including' → logprob: -4.697563648223877
    10. ' along' → logprob: -5.697563648223877

Token 213: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.128021702170372
    2. ' the' → logprob: -3.128021717071533
    3. ' including' → logprob: -4.003021717071533
    4. '#' → logprob: -4.878021717071533
    5. ' and' → logprob: -5.003021717071533
    6. ' allowing' → logprob: -5.003021717071533
    7. 'including' → logprob: -5.128021717071533
    8. ' with' → logprob: -5.128021717071533
    9. 'the' → logprob: -5.253021717071533
    10. 'and' → logprob: -5.503021717071533

Token 214: ' facilitating' (ID: 97471)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.41596537828445435
    2. '#' → logprob: -2.1659653186798096
    3. ' including' → logprob: -2.9159653186798096
    4. ' used' → logprob: -3.1659653186798096
    5. 'including' → logprob: -3.4159653186798096
    6. ' allowing' → logprob: -3.5409653186798096
    7. 'def' → logprob: -4.415965557098389
    8. 'used' → logprob: -4.665965557098389
    9. 'and' → logprob: -5.040965557098389
    10. ' with' → logprob: -5.165965557098389

Token 215: ' a' (ID: 261)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.8712341785430908
    2. 'priority' → logprob: -1.6212341785430908
    3. ' comparison' → logprob: -1.9962341785430908
    4. ' priority' → logprob: -2.121234178543091
    5. ' ordering' → logprob: -2.871234178543091
    6. 'heap' → logprob: -4.246233940124512
    7. 'the' → logprob: -4.371233940124512
    8. 'comparison' → logprob: -4.371233940124512
    9. '   ' → logprob: -4.496233940124512
    10. ' comparisons' → logprob: -5.121233940124512

Token 216: ' priority' (ID: 17621)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.9991909861564636
    2. 'priority' → logprob: -1.4991910457611084
    3. 'dj' → logprob: -2.3741910457611084
    4. ' priority' → logprob: -2.8741910457611084
    5. 'v' → logprob: -2.9991910457611084
    6. 'ble' → logprob: -3.1241910457611084
    7. 'ny' → logprob: -3.6241910457611084
    8. 'def' → logprob: -4.124190807342529
    9. 't' → logprob: -4.249190807342529
    10. 'heap' → logprob: -4.249190807342529

Token 217: ' queue' (ID: 13661)
  Prédit: ' queue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' queue' → logprob: -0.008668106980621815
    2. 'queue' → logprob: -5.133667945861816
    3. '_' → logprob: -6.508667945861816
    4. '_queue' → logprob: -7.008667945861816
    5. ' ' → logprob: -8.883667945861816
    6. '   ' → logprob: -9.383667945861816
    7. '-' → logprob: -9.508667945861816
    8. 'q' → logprob: -11.258667945861816
    9. ' que' → logprob: -11.258667945861816
    10. 'que' → logprob: -11.883667945861816

Token 218: ' ordering' (ID: 30931)
  Prédit: ' entry'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' entry' → logprob: -1.0250338315963745
    2. ' item' → logprob: -1.5250338315963745
    3. ' for' → logprob: -2.525033950805664
    4. ' element' → logprob: -2.525033950805664
    5. '   ' → logprob: -2.650033950805664
    6. ' ' → logprob: -3.775033950805664
    7. ' with' → logprob: -3.900033950805664
    8. ' to' → logprob: -4.025033950805664
    9. '<|end|>' → logprob: -4.025033950805664
    10. '.' → logprob: -4.025033950805664

Token 219: ' by' (ID: 656)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8852795362472534
    2. '   ' → logprob: -1.1352795362472534
    3. '<|end|>' → logprob: -2.010279655456543
    4. '.' → logprob: -3.260279655456543
    5. ':
' → logprob: -4.135279655456543
    6. ',' → logprob: -4.385279655456543
    7. ' by' → logprob: -4.385279655456543
    8. ' with' → logprob: -5.010279655456543
    9. ' and' → logprob: -5.260279655456543
    10. '<|end|>' → logprob: -5.260279655456543

Token 220: ' earliest' (ID: 48721)
  Prédit: 'arrival'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'arrival' → logprob: -0.8462435007095337
    2. ' arrival' → logprob: -1.0962435007095337
    3. ' time' → logprob: -1.9712435007095337
    4. 'time' → logprob: -2.471243381500244
    5. 't' → logprob: -4.971243381500244
    6. ' the' → logprob: -5.971243381500244
    7. ' t' → logprob: -7.221243381500244
    8. ' total' → logprob: -7.721243381500244
    9. ' current' → logprob: -7.721243381500244
    10. 'self' → logprob: -8.221243858337402

Token 221: ' arrival' (ID: 24861)
  Prédit: ' arrival'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' arrival' → logprob: -0.4536173641681671
    2. 'arrival' → logprob: -1.7036173343658447
    3. '<|end|>' → logprob: -2.7036173343658447
    4. '_time' → logprob: -2.9536173343658447
    5. ' time' → logprob: -3.5786173343658447
    6. 'time' → logprob: -3.8286173343658447
    7. '_arr' → logprob: -4.578617572784424
    8. '_' → logprob: -6.203617572784424
    9. '<|end|>' → logprob: -7.578617572784424
    10. 'arr' → logprob: -7.828617572784424

Token 222: '.
' (ID: 558)
  Prédit: '_time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.05657891184091568
    2. 'time' → logprob: -3.4315788745880127
    3. ' time' → logprob: -4.306579113006592
    4. '   ' → logprob: -4.806579113006592
    5. ')' → logprob: -7.681579113006592
    6. 'Time' → logprob: -8.181578636169434
    7. '_' → logprob: -9.181578636169434
    8. '  ' → logprob: -10.431578636169434
    9. '.' → logprob: -10.806578636169434
    10. '    ' → logprob: -11.181578636169434

Token 223: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008407007902860641
    2. '"""' → logprob: -5.633407115936279
    3. '"""
' → logprob: -6.008407115936279
    4. ')' → logprob: -6.633407115936279
    5. ' """
' → logprob: -7.383407115936279
    6. '    ' → logprob: -9.008406639099121
    7. '
' → logprob: -9.383406639099121
    8. ')
' → logprob: -9.758406639099121
    9. '    
' → logprob: -10.008406639099121
    10. '```' → logprob: -10.383406639099121

Token 224: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01371866837143898
    2. ')' → logprob: -4.763718605041504
    3. '"""' → logprob: -6.013718605041504
    4. ' """
' → logprob: -7.638718605041504
    5. ' """' → logprob: -7.888718605041504
    6. '
' → logprob: -8.013718605041504
    7. 'def' → logprob: -8.263718605041504
    8. '    
' → logprob: -8.388718605041504
    9. '"""
' (adapté à ' """
') → logprob: -8.513718605041504
    10. ' def' → logprob: -8.638718605041504

Token 225: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04737795889377594
    2. 'def' → logprob: -3.5473780632019043
    3. ' def' → logprob: -4.047378063201904
    4. '    
' → logprob: -13.172377586364746
    5. '    ' → logprob: -13.672377586364746
    6. '
' → logprob: -14.547377586364746
    7. '	def' → logprob: -14.922377586364746
    8. ' ' → logprob: -15.172377586364746
    9. ' 
' → logprob: -15.297377586364746
    10. '  ' → logprob: -15.922377586364746

Token 226: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.03839970380067825
    2. ' def' → logprob: -3.2883996963500977
    3. '__' → logprob: -8.288399696350098
    4. ' __' → logprob: -9.538399696350098
    5. '   ' → logprob: -10.288399696350098
    6. 'import' → logprob: -15.038399696350098
    7. 'from' → logprob: -15.913399696350098
    8. 'de' → logprob: -16.538400650024414
    9. ' ' → logprob: -17.038400650024414
    10. '```' → logprob: -17.663400650024414

Token 227: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.02788112871348858
    2. '__' → logprob: -3.652881145477295
    3. ' def' → logprob: -6.777881145477295
    4. 'init' → logprob: -8.652880668640137
    5. 'def' → logprob: -9.027880668640137
    6. '_init' → logprob: -9.277880668640137
    7. '```' → logprob: -10.902880668640137
    8. ' dat' → logprob: -11.652880668640137
    9. 'int' → logprob: -12.027880668640137
    10. '___' → logprob: -12.652880668640137

Token 228: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.16022422909736633
    2. 'lt' → logprob: -1.910224199295044
    3. ' init' → logprob: -16.78522491455078
    4. '
' → logprob: -17.41022491455078
    5. '```' → logprob: -17.53522491455078
    6. 'inite' → logprob: -18.66022491455078
    7. 'int' → logprob: -18.66022491455078
    8. 'eq' → logprob: -19.28522491455078
    9. ' lt' → logprob: -19.28522491455078
    10. 'in' → logprob: -19.66022491455078

Token 229: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.0033782843966037035
    2. '__' → logprob: -5.753378391265869
    3. '(self' → logprob: -8.878377914428711
    4. '__(
' → logprob: -10.128377914428711
    5. '__((' → logprob: -10.878377914428711
    6. '__,' → logprob: -14.378377914428711
    7. '__('' → logprob: -14.878377914428711
    8. ' (' → logprob: -15.128377914428711
    9. '_(' → logprob: -15.128377914428711
    10. 'self' → logprob: -15.503377914428711

Token 230: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00027301779482513666
    2. ' self' → logprob: -8.250272750854492
    3. ',' → logprob: -11.750272750854492
    4. '(self' → logprob: -13.500272750854492
    5. '
' → logprob: -14.000272750854492
    6. ',self' → logprob: -14.000272750854492
    7. 'arrival' → logprob: -14.750272750854492
    8. '   ' → logprob: -15.875272750854492
    9. '	self' → logprob: -16.500272750854492
    10. '__,' → logprob: -16.750272750854492

Token 231: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.018168790265917778
    2. ' ,' → logprob: -4.018168926239014
    3. '‌,' → logprob: -13.018168449401855
    4. 'self' → logprob: -13.143168449401855
    5. ',int' → logprob: -13.143168449401855
    6. 'arrival' → logprob: -13.268168449401855
    7. ')' → logprob: -13.393168449401855
    8. 'from' → logprob: -13.393168449401855
    9. '<|end|>' → logprob: -13.393168449401855
    10. '_,' → logprob: -13.768168449401855

Token 232: ' island' (ID: 18149)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.7337021827697754
    2. 'arrival' → logprob: -0.9837021827697754
    3. 'is' → logprob: -2.2337021827697754
    4. ' time' → logprob: -4.108702182769775
    5. 'current' → logprob: -4.608702182769775
    6. ' island' → logprob: -5.108702182769775
    7. ' arrival' → logprob: -5.983702182769775
    8. 'arr' → logprob: -6.483702182769775
    9. 'cost' → logprob: -7.233702182769775
    10. ' current' → logprob: -7.608702182769775

Token 233: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0048214648850262165
    2. ':' → logprob: -5.379821300506592
    3. ':int' → logprob: -9.12982177734375
    4. ' ,' → logprob: -9.75482177734375
    5. ',int' → logprob: -11.75482177734375
    6. '_time' → logprob: -11.87982177734375
    7. '<|end|>' → logprob: -12.25482177734375
    8. '_id' → logprob: -12.62982177734375
    9. '_,' → logprob: -12.87982177734375
    10. '=' → logprob: -13.12982177734375

Token 234: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.3133132755756378
    2. ' int' → logprob: -1.3133132457733154
    3. ':int' → logprob: -10.938313484191895
    4. '[int' → logprob: -11.188313484191895
    5. ',int' → logprob: -11.313313484191895
    6. ',' → logprob: -12.563313484191895
    7. '=int' → logprob: -13.188313484191895
    8. '(int' → logprob: -14.063313484191895
    9. '	int' → logprob: -14.563313484191895
    10. '<int' → logprob: -14.938313484191895

Token 235: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.465036105713807e-06
    2. ' ,' → logprob: -11.875007629394531
    3. '‌,' → logprob: -15.500007629394531
    4. ',
' → logprob: -15.500007629394531
    5. ',time' → logprob: -17.87500762939453
    6. ')' → logprob: -18.25000762939453
    7. '   ' → logprob: -18.62500762939453
    8. ',int' → logprob: -18.62500762939453
    9. ',

' → logprob: -19.25000762939453
    10. '‍,' → logprob: -19.37500762939453

Token 236: ' arrival' (ID: 24861)
  Prédit: 'arrival'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arrival' → logprob: -0.13488079607486725
    2. 'time' → logprob: -2.884880781173706
    3. ' arrival' → logprob: -2.884880781173706
    4. ' time' → logprob: -4.759881019592285
    5. 'arr' → logprob: -5.884881019592285
    6. 'current' → logprob: -6.134881019592285
    7. ' current' → logprob: -7.259881019592285
    8. '   ' → logprob: -9.259881019592285
    9. 'curr' → logprob: -10.384881019592285
    10. ' ' → logprob: -10.634881019592285

Token 237: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -4.961759259458631e-06
    2. '_' → logprob: -12.750004768371582
    3. '_times' → logprob: -14.250004768371582
    4. '_t' → logprob: -14.750004768371582
    5. ')_' → logprob: -15.375004768371582
    6. '_timestamp' → logprob: -15.500004768371582
    7. 'time' → logprob: -15.625004768371582
    8. 'Time' → logprob: -16.0000057220459
    9. ' _' → logprob: -16.2500057220459
    10. '_Time' → logprob: -16.7500057220459

Token 238: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.14731986820697784
    2. ':' → logprob: -2.022319793701172
    3. ',' → logprob: -5.897319793701172
    4. '):
' → logprob: -6.897319793701172
    5. ')' → logprob: -7.772319793701172
    6. ' ):' → logprob: -8.147319793701172
    7. '=' → logprob: -9.022319793701172
    8. ':int' → logprob: -10.522319793701172
    9. ' :' → logprob: -12.147319793701172
    10. '<|end|>' → logprob: -12.522319793701172

Token 239: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.012575346045196056
    2. ' int' → logprob: -4.387575149536133
    3. ')' → logprob: -10.262575149536133
    4. ':int' → logprob: -11.012575149536133
    5. '[int' → logprob: -11.512575149536133
    6. 'float' → logprob: -14.012575149536133
    7. ']int' → logprob: -14.262575149536133
    8. '(int' → logprob: -14.512575149536133
    9. 'Optional' → logprob: -14.637575149536133
    10. '):
' → logprob: -14.762575149536133

Token 240: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.001846293918788433
    2. '):
' → logprob: -6.3768463134765625
    3. ',' → logprob: -9.001846313476562
    4. ')' → logprob: -11.126846313476562
    5. ' ):' → logprob: -12.626846313476562
    6. '):
' → logprob: -13.501846313476562
    7. ':' → logprob: -14.126846313476562
    8. '   ' → logprob: -14.376846313476562
    9. '       ' → logprob: -16.376846313476562
    10. '):

' → logprob: -16.376846313476562

Token 241: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -9.353008499601856e-05
    2. 'self' → logprob: -9.500093460083008
    3. ' self' → logprob: -11.750093460083008
    4. ')' → logprob: -12.000093460083008
    5. ',' → logprob: -13.500093460083008
    6. '   ' → logprob: -13.625093460083008
    7. '):' → logprob: -14.875093460083008
    8. '.' → logprob: -15.000093460083008
    9. '      ' → logprob: -15.000093460083008
    10. '<|end|>' → logprob: -15.125093460083008

Token 242: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0022637327201664448
    2. ' self' → logprob: -6.25226354598999
    3. '       ' → logprob: -8.002264022827148
    4. '   ' → logprob: -15.377264022827148
    5. '	self' → logprob: -16.25226402282715
    6. '(self' → logprob: -18.25226402282715
    7. '        ' → logprob: -20.12726402282715
    8. '           ' → logprob: -20.25226402282715
    9. 'is' → logprob: -20.37726402282715
    10. '     ' → logprob: -21.25226402282715

Token 243: '.is' (ID: 3109)
  Prédit: '.is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.is' → logprob: -0.01004764437675476
    2. '.' → logprob: -4.635047435760498
    3. ' .' → logprob: -8.385047912597656
    4. 'is' → logprob: -10.010047912597656
    5. '=is' → logprob: -12.010047912597656
    6. '   ' → logprob: -13.385047912597656
    7. '._' → logprob: -13.760047912597656
    8. '.has' → logprob: -14.135047912597656
    9. ',' → logprob: -14.260047912597656
    10. ' =' → logprob: -14.385047912597656

Token 244: 'land' (ID: 2117)
  Prédit: 'land'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'land' → logprob: -2.339278580620885e-06
    2. '_land' → logprob: -13.500001907348633
    3. 'and' → logprob: -15.250001907348633
    4. '_' → logprob: -15.500001907348633
    5. '__' → logprob: -15.500001907348633
    6. ' land' → logprob: -16.500001907348633
    7. '=' → logprob: -16.875001907348633
    8. '
' → logprob: -17.750001907348633
    9. '   ' → logprob: -17.750001907348633
    10. '[' → logprob: -18.250001907348633

Token 245: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6381941437721252
    2. '=' → logprob: -0.7631941437721252
    3. ',' → logprob: -5.2631940841674805
    4. '<|end|>' → logprob: -8.88819408416748
    5. '   ' → logprob: -9.26319408416748
    6. ' ' → logprob: -9.76319408416748
    7. '       ' → logprob: -10.38819408416748
    8. ' ,' → logprob: -11.01319408416748
    9. ' =
' → logprob: -11.13819408416748
    10. '    ' → logprob: -11.88819408416748

Token 246: ' island' (ID: 18149)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.0232466422021389
    2. ' island' → logprob: -3.7732465267181396
    3. ' isla' → logprob: -15.148246765136719
    4. '(is' → logprob: -15.773246765136719
    5. '   ' → logprob: -15.898246765136719
    6. ' is' → logprob: -16.14824676513672
    7. '_is' → logprob: -16.14824676513672
    8. ' islands' → logprob: -16.27324676513672
    9. '=is' → logprob: -16.52324676513672
    10. ' ilha' → logprob: -16.64824676513672

Token 247: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04462050646543503
    2. '<|end|>' → logprob: -3.5446205139160156
    3. ',' → logprob: -4.794620513916016
    4. '
' → logprob: -5.419620513916016
    5. 'self' → logprob: -6.669620513916016
    6. '        
' → logprob: -8.294620513916016
    7. ',
' → logprob: -8.794620513916016
    8. ' ' → logprob: -9.169620513916016
    9. '<|end|>' → logprob: -9.669620513916016
    10. '   ' → logprob: -10.044620513916016

Token 248: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0032976088114082813
    2. 'self' → logprob: -5.753297805786133
    3. ' self' → logprob: -9.503297805786133
    4. ',' → logprob: -11.003297805786133
    5. '<|end|>' → logprob: -11.503297805786133
    6. '
' → logprob: -11.628297805786133
    7. '        
' → logprob: -12.378297805786133
    8. ' ' → logprob: -13.753297805786133
    9. '   ' → logprob: -14.003297805786133
    10. '	self' → logprob: -14.253297805786133

Token 249: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0014544015284627676
    2. 'arrival' → logprob: -7.1264543533325195
    3. ' self' → logprob: -7.3764543533325195
    4. '       ' → logprob: -10.75145435333252
    5. ' arrival' → logprob: -13.50145435333252
    6. '   ' → logprob: -14.37645435333252
    7. 'arr' → logprob: -14.75145435333252
    8. '(self' → logprob: -16.876455307006836
    9. '	self' → logprob: -17.251455307006836
    10. '[self' → logprob: -17.751455307006836

Token 250: '.arr' (ID: 76200)
  Prédit: '.arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.arr' → logprob: -0.01496239472180605
    2. '.' → logprob: -4.264962196350098
    3. 'arrival' → logprob: -7.264962196350098
    4. '_arr' → logprob: -10.389962196350098
    5. ' .' → logprob: -10.389962196350098
    6. 'arr' → logprob: -12.014962196350098
    7. '[arr' → logprob: -12.389962196350098
    8. ' arrival' → logprob: -12.389962196350098
    9. '._' → logprob: -12.514962196350098
    10. 'Arrival' → logprob: -12.764962196350098

Token 251: 'ival' (ID: 4552)
  Prédit: 'ival'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ival' → logprob: -7.624555291840807e-05
    2. '_time' → logprob: -10.000076293945312
    3. '_val' → logprob: -11.125076293945312
    4. '_' → logprob: -11.875076293945312
    5. 'val' → logprob: -12.875076293945312
    6. 'IVAL' → logprob: -13.625076293945312
    7. 'iv' → logprob: -13.750076293945312
    8. ' ' → logprob: -13.750076293945312
    9. ' _' → logprob: -14.000076293945312
    10. '   ' → logprob: -14.500076293945312

Token 252: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -1.5213274309644476e-05
    2. '_' → logprob: -11.125015258789062
    3. ' _' → logprob: -14.875015258789062
    4. '_token' → logprob: -17.125015258789062
    5. '_times' → logprob: -17.875015258789062
    6. '_code' → logprob: -18.125015258789062
    7. '_t' → logprob: -18.125015258789062
    8. '_state' → logprob: -18.625015258789062
    9. '   ' → logprob: -18.875015258789062
    10. ')_' → logprob: -19.125015258789062

Token 253: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.18000157177448273
    2. ' =' → logprob: -1.8050016164779663
    3. '<|end|>' → logprob: -8.930001258850098
    4. ')' → logprob: -10.180001258850098
    5. ',' → logprob: -10.430001258850098
    6. ' ' → logprob: -10.555001258850098
    7. '   ' → logprob: -12.055001258850098
    8. '_' → logprob: -12.180001258850098
    9. ' +=' → logprob: -12.180001258850098
    10. '    ' → logprob: -12.430001258850098

Token 254: ' arrival' (ID: 24861)
  Prédit: ' arrival'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' arrival' → logprob: -0.6931955218315125
    2. 'arrival' → logprob: -0.6931955218315125
    3. 'arr' → logprob: -9.943195343017578
    4. 'Arrival' → logprob: -15.943195343017578
    5. ' ' → logprob: -17.568195343017578
    6. 'int' → logprob: -17.943195343017578
    7. '
' → logprob: -17.943195343017578
    8. '_arr' → logprob: -18.193195343017578
    9. 'arra' → logprob: -18.193195343017578
    10. ' ' → logprob: -18.568195343017578

Token 255: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -4.246537173457909e-06
    2. '_' → logprob: -12.625003814697266
    3. ' _' → logprob: -14.875003814697266
    4. '_token' → logprob: -16.125003814697266
    5. '   ' → logprob: -16.250003814697266
    6. 'time' → logprob: -16.250003814697266
    7. '```' → logprob: -17.125003814697266
    8. '_code' → logprob: -17.375003814697266
    9. '_t' → logprob: -17.500003814697266
    10. '_TIME' → logprob: -17.750003814697266

Token 256: '
    
' (ID: 15698)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6606249213218689
    2. '<|end|>' → logprob: -0.7856249213218689
    3. '   ' → logprob: -3.7856249809265137
    4. '<|end|>' → logprob: -6.035624980926514
    5. '    
' → logprob: -6.535624980926514
    6. '

' → logprob: -8.035624504089355
    7. '       ' → logprob: -8.660624504089355
    8. '  
' → logprob: -9.410624504089355
    9. '\n' → logprob: -9.410624504089355
    10. ' 
' → logprob: -9.410624504089355

Token 257: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5782391428947449
    2. 'def' → logprob: -0.8282391428947449
    3. ' def' → logprob: -6.0782389640808105
    4. '	def' → logprob: -13.453239440917969
    5. '    
' → logprob: -13.578239440917969
    6. '
' → logprob: -13.578239440917969
    7. '       ' → logprob: -14.578239440917969
    8. 'import' → logprob: -15.703239440917969
    9. '   ' → logprob: -15.828239440917969
    10. '        
' → logprob: -16.70323944091797

Token 258: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -6.704273118884885e-07
    2. ' def' → logprob: -14.250000953674316
    3. '   ' → logprob: -17.25
    4. '	def' → logprob: -21.375
    5. '__' → logprob: -24.875
    6. '_def' → logprob: -25.0
    7. '    
' → logprob: -25.125
    8. '  ' → logprob: -26.375
    9. 'import' → logprob: -26.75
    10. '-def' → logprob: -26.75

Token 259: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.5764713287353516
    2. '__' → logprob: -0.8264713287353516
    3. '.__' → logprob: -8.701471328735352
    4. 'def' → logprob: -9.076471328735352
    5. ' def' → logprob: -9.201471328735352
    6. '   ' → logprob: -10.076471328735352
    7. 'lt' → logprob: -10.451471328735352
    8. '<' → logprob: -10.451471328735352
    9. ' <' → logprob: -11.076471328735352
    10. ' ' → logprob: -11.076471328735352

Token 260: 'lt' (ID: 3199)
  Prédit: 'lt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lt' → logprob: 0.0
    2. 'eq' → logprob: -21.0
    3. ' lt' → logprob: -21.75
    4. 'gt' → logprob: -23.875
    5. '_lt' → logprob: -24.5
    6. 'LT' → logprob: -26.375
    7. '.lt' → logprob: -27.75
    8. 'le' → logprob: -28.5
    9. '<' → logprob: -28.5
    10. 'init' → logprob: -28.625

Token 261: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.038090262562036514
    2. '__' → logprob: -3.288090229034424
    3. '__((' → logprob: -10.538090705871582
    4. '__('' → logprob: -10.913090705871582
    5. '__(
' → logprob: -13.038090705871582
    6. '__("' → logprob: -13.663090705871582
    7. '__(*' → logprob: -14.663090705871582
    8. '___' → logprob: -16.038089752197266
    9. '__.__' → logprob: -16.163089752197266
    10. '(' → logprob: -17.163089752197266

Token 262: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -5.240481914370321e-05
    2. 'other' → logprob: -10.000052452087402
    3. ' self' → logprob: -11.875052452087402
    4. ' other' → logprob: -17.750051498413086
    5. '(self' → logprob: -18.000051498413086
    6. ',' → logprob: -18.750051498413086
    7. ',self' → logprob: -20.000051498413086
    8. '0' → logprob: -21.000051498413086
    9. '	self' → logprob: -21.000051498413086
    10. ')' → logprob: -21.000051498413086

Token 263: ',' (ID: 11)
  Prédit: '__('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.6418682932853699
    2. '__' → logprob: -0.7668682932853699
    3. '__,' → logprob: -5.0168681144714355
    4. '__((' → logprob: -7.0168681144714355
    5. '__)' → logprob: -7.2668681144714355
    6. '__('' → logprob: -7.5168681144714355
    7. '__(*' → logprob: -8.141868591308594
    8. '__.__' → logprob: -10.266868591308594
    9. '__("' → logprob: -10.641868591308594
    10. '__(
' → logprob: -10.641868591308594

Token 264: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.018150178715586662
    2. ' other' → logprob: -4.018150329589844
    3. 'Other' → logprob: -16.143150329589844
    4. '(other' → logprob: -16.518150329589844
    5. 'o' → logprob: -16.768150329589844
    6. 'oth' → logprob: -16.893150329589844
    7. 'self' → logprob: -17.393150329589844
    8. '_other' → logprob: -17.393150329589844
    9. '.other' → logprob: -17.643150329589844
    10. ' o' → logprob: -18.893150329589844

Token 265: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.005476721096783876
    2. ')' → logprob: -5.380476951599121
    3. ' ):' → logprob: -7.630476951599121
    4. ':' → logprob: -8.505476951599121
    5. '):
' → logprob: -9.005476951599121
    6. ' )' → logprob: -11.630476951599121
    7. '<|end|>' → logprob: -12.005476951599121
    8. '>):' → logprob: -12.255476951599121
    9. 'self' → logprob: -12.505476951599121
    10. '__:' → logprob: -12.880476951599121

Token 266: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8832746148109436
    2. ' return' → logprob: -1.6332745552062988
    3. 'self' → logprob: -1.8832745552062988
    4. ' self' → logprob: -1.8832745552062988
    5. 'return' → logprob: -2.508274555206299
    6. ' other' → logprob: -5.383274555206299
    7. 'other' → logprob: -7.633274555206299
    8. '   ' → logprob: -7.633274555206299
    9. '(self' → logprob: -9.258275032043457
    10. ' (' → logprob: -12.008275032043457

Token 267: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.00013810492237098515
    2. ' return' → logprob: -9.500138282775879
    3. 'self' → logprob: -10.250138282775879
    4. '       ' → logprob: -10.500138282775879
    5. '   ' → logprob: -15.875138282775879
    6. '	return' → logprob: -17.250137329101562
    7. '           ' → logprob: -17.750137329101562
    8. '
' → logprob: -18.875137329101562
    9. 'eturn' → logprob: -18.875137329101562
    10. '{return' → logprob: -19.750137329101562

Token 268: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.04858816787600517
    2. ' self' → logprob: -3.048588275909424
    3. '(self' → logprob: -14.173587799072266
    4. '   ' → logprob: -16.673587799072266
    5. '	self' → logprob: -16.673587799072266
    6. 'Self' → logprob: -17.923587799072266
    7. '_self' → logprob: -18.673587799072266
    8. ' ' → logprob: -19.173587799072266
    9. ' ' → logprob: -19.298587799072266
    10. '[self' → logprob: -19.423587799072266

Token 269: '.arr' (ID: 76200)
  Prédit: '.arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.arr' → logprob: -5.5577775128767826e-06
    2. 'arrival' → logprob: -12.500005722045898
    3. ' .' → logprob: -14.000005722045898
    4. '.' → logprob: -14.750005722045898
    5. '.ar' → logprob: -15.625005722045898
    6. '.ass' → logprob: -16.3750057220459
    7. '[arr' → logprob: -16.7500057220459
    8. '.att' → logprob: -17.5000057220459
    9. '<arr' → logprob: -17.6250057220459
    10. ' arrival' → logprob: -18.5000057220459

Token 270: 'ival' (ID: 4552)
  Prédit: 'ival'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ival' → logprob: -1.9361264946837764e-07
    2. 'val' → logprob: -16.125
    3. 'iv' → logprob: -18.375
    4. 'IVAL' → logprob: -18.625
    5. '_time' → logprob: -18.75
    6. '_val' → logprob: -19.375
    7. 'ive' → logprob: -19.625
    8. 'iva' → logprob: -20.5
    9. 'ivals' → logprob: -20.625
    10. 'ived' → logprob: -21.0

Token 271: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: 0.0
    2. 'time' → logprob: -17.875
    3. 'y' → logprob: -18.625
    4. '_times' → logprob: -19.125
    5. '._' → logprob: -19.25
    6. '_t' → logprob: -19.5
    7. '_' → logprob: -19.5
    8. '__' → logprob: -20.125
    9. '_arr' → logprob: -20.125
    10. '_tim' → logprob: -20.375

Token 272: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.07889771461486816
    2. '<' → logprob: -2.578897714614868
    3. ' <=' → logprob: -12.453897476196289
    4. ' ' → logprob: -12.578897476196289
    5. ' >' → logprob: -15.953897476196289
    6. '<=' → logprob: -16.07889747619629
    7. ' <
' → logprob: -16.32889747619629
    8. '[' → logprob: -16.57889747619629
    9. ' ' → logprob: -16.95389747619629
    10. '<int' → logprob: -17.20389747619629

Token 273: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.20141352713108063
    2. ' other' → logprob: -1.7014135122299194
    3. '(other' → logprob: -15.45141315460205
    4. '.other' → logprob: -17.576414108276367
    5. '_other' → logprob: -17.701414108276367
    6. 'self' → logprob: -18.076414108276367
    7. 'othe' → logprob: -18.076414108276367
    8. 'Other' → logprob: -18.326414108276367
    9. 'oth' → logprob: -19.201414108276367
    10. ' oth' → logprob: -19.451414108276367

Token 274: '.arr' (ID: 76200)
  Prédit: '.arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.arr' → logprob: -0.0020810244604945183
    2. '._' → logprob: -6.502080917358398
    3. 'arrival' → logprob: -7.752080917358398
    4. '_arr' → logprob: -9.377080917358398
    5. ' .' → logprob: -10.502080917358398
    6. '_.' → logprob: -10.877080917358398
    7. '.' → logprob: -11.752080917358398
    8. '_time' → logprob: -12.627080917358398
    9. '.ar' → logprob: -13.502080917358398
    10. ' arrival' → logprob: -13.752080917358398

Token 275: 'ival' (ID: 4552)
  Prédit: 'ival'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ival' → logprob: -7.922563963802531e-05
    2. '_time' → logprob: -9.750079154968262
    3. 'val' → logprob: -11.375079154968262
    4. 'time' → logprob: -12.500079154968262
    5. 'arrival' → logprob: -13.375079154968262
    6. 'ive' → logprob: -14.125079154968262
    7. 'al' → logprob: -14.125079154968262
    8. 'iv' → logprob: -14.375079154968262
    9. 'IVAL' → logprob: -14.875079154968262
    10. 'ived' → logprob: -15.125079154968262

Token 276: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -7.941850526549388e-06
    2. 'time' → logprob: -12.125007629394531
    3. '._' → logprob: -13.875007629394531
    4. '_state' → logprob: -14.000007629394531
    5. 'ime' → logprob: -14.375007629394531
    6. '_t' → logprob: -16.75000762939453
    7. '.time' → logprob: -17.75000762939453
    8. '_tim' → logprob: -18.00000762939453
    9. '_' → logprob: -18.25000762939453
    10. ' _' → logprob: -18.62500762939453

Token 277: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0954069271683693
    2. 'def' → logprob: -2.470407009124756
    3. '    
' → logprob: -5.720407009124756
    4. '

' → logprob: -6.220407009124756
    5. 'class' → logprob: -7.970407009124756
    6. '   ' → logprob: -8.095406532287598
    7. ' 
' → logprob: -8.970406532287598
    8. '<|end|>' → logprob: -9.720406532287598
    9. '        
' → logprob: -9.845406532287598
    10. '  
' → logprob: -9.970406532287598

Token 278: 'class' (ID: 1444)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2522751986980438
    2. 'class' → logprob: -1.5022752285003662
    3. '
' → logprob: -8.377275466918945
    4. '   ' → logprob: -9.752275466918945
    5. '    
' → logprob: -11.252275466918945
    6. ' def' → logprob: -11.377275466918945
    7. '

' → logprob: -11.627275466918945
    8. '```' → logprob: -11.627275466918945
    9. '<|end|>' → logprob: -12.502275466918945
    10. 'import' → logprob: -12.877275466918945

Token 279: ' One' (ID: 5108)
  Prédit: 'Island'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Island' → logprob: -0.5227929353713989
    2. 'Solution' → logprob: -1.897792935371399
    3. 'T' → logprob: -2.3977928161621094
    4. ' Island' → logprob: -2.7727928161621094
    5. 'Solver' → logprob: -2.8977928161621094
    6. 'Path' → logprob: -4.022792816162109
    7. ' Solver' → logprob: -5.022792816162109
    8. ' Tide' → logprob: -5.272792816162109
    9. ' Pathfinder' → logprob: -5.647792816162109
    10. ' Solution' → logprob: -5.647792816162109

Token 280: 'Time' (ID: 1929)
  Prédit: 'Way'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Way' → logprob: -0.007887093350291252
    2. 'Island' → logprob: -5.25788688659668
    3. 'way' → logprob: -7.38288688659668
    4. 'Time' → logprob: -7.75788688659668
    5. 'Bridge' → logprob: -8.00788688659668
    6. 'Step' → logprob: -8.00788688659668
    7. 'Hop' → logprob: -8.38288688659668
    8. 'Path' → logprob: -8.38288688659668
    9. 'Shot' → logprob: -9.00788688659668
    10. 'Waypoint' → logprob: -9.38288688659668

Token 281: 'Path' (ID: 2619)
  Prédit: 'Bridge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Bridge' → logprob: -0.09012632071971893
    2. 'Path' → logprob: -3.2151262760162354
    3. 'Cross' → logprob: -3.9651262760162354
    4. 'Use' → logprob: -4.4651265144348145
    5. 'Pass' → logprob: -5.0901265144348145
    6. 'Traversal' → logprob: -6.3401265144348145
    7. 'Visit' → logprob: -6.8401265144348145
    8. 'T' → logprob: -6.9651265144348145
    9. 'Tunnel' → logprob: -7.0901265144348145
    10. 'Connection' → logprob: -7.2151265144348145

Token 282: 'Solver' (ID: 70484)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04377971589565277
    2. 'Finder' → logprob: -3.4187796115875244
    3. 'Searcher' → logprob: -4.9187798500061035
    4. ':
' → logprob: -6.9187798500061035
    5. '(' → logprob: -7.1687798500061035
    6. 'Solver' → logprob: -8.418779373168945
    7. 'Planner' → logprob: -8.418779373168945
    8. 'Search' → logprob: -8.543779373168945
    9. '{' → logprob: -9.668779373168945
    10. 'finder' → logprob: -9.793779373168945

Token 283: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0004452083958312869
    2. ':
' → logprob: -7.750445365905762
    3. '(' → logprob: -12.375445365905762
    4. ':def' → logprob: -12.375445365905762
    5. '():' → logprob: -13.375445365905762
    6. ':

' → logprob: -13.625445365905762
    7. '(I' → logprob: -14.250445365905762
    8. '(object' → logprob: -14.250445365905762
    9. '(Abstract' → logprob: -15.375445365905762
    10. '):' → logprob: -15.375445365905762

Token 284: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0010685354936867952
    2. ' def' → logprob: -7.501068592071533
    3. 'def' → logprob: -8.376068115234375
    4. ':' → logprob: -8.501068115234375
    5. '    
' → logprob: -10.251068115234375
    6. ':
' → logprob: -10.376068115234375
    7. '	def' → logprob: -11.751068115234375
    8. '```' → logprob: -13.376068115234375
    9. ':def' → logprob: -13.626068115234375
    10. '<|end|>' → logprob: -14.251068115234375

Token 285: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.2840757369995117
    2. 'def' (adapté à ' def') → logprob: -1.7840757369995117
    3. '   ' → logprob: -2.5340757369995117
    4. '	def' → logprob: -13.534075736999512
    5. 'import' → logprob: -15.034075736999512
    6. ' ' → logprob: -15.409075736999512
    7. '```' → logprob: -15.409075736999512
    8. '  ' → logprob: -15.534075736999512
    9. ':def' → logprob: -15.534075736999512
    10. '    
' → logprob: -15.659075736999512

Token 286: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.5912776589393616
    2. ' __' → logprob: -1.4662775993347168
    3. 'init' → logprob: -1.8412775993347168
    4. '_init' → logprob: -2.966277599334717
    5. ' def' → logprob: -5.841277599334717
    6. ' init' → logprob: -6.841277599334717
    7. 'def' → logprob: -6.966277599334717
    8. '(init' → logprob: -8.216278076171875
    9. '__(' → logprob: -8.966278076171875
    10. '```' → logprob: -9.966278076171875

Token 287: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: 0.0
    2. ' init' → logprob: -20.0
    3. '_init' → logprob: -20.75
    4. 'def' → logprob: -21.25
    5. '```' → logprob: -22.25
    6. '   ' → logprob: -22.875
    7. 'inite' → logprob: -23.0
    8. '
' → logprob: -23.25
    9. '(init' → logprob: -23.5
    10. 'int' → logprob: -23.5

Token 288: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -1.7120533811976202e-05
    2. '__' → logprob: -11.125017166137695
    3. '__(
' → logprob: -13.625017166137695
    4. '(self' → logprob: -13.875017166137695
    5. '_(' → logprob: -15.875017166137695
    6. '__((' → logprob: -16.625017166137695
    7. '__('' → logprob: -17.750017166137695
    8. '__("' → logprob: -19.750017166137695
    9. 'self' → logprob: -19.875017166137695
    10. '__[' → logprob: -19.875017166137695

Token 289: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00026419671485200524
    2. ' self' → logprob: -8.375264167785645
    3. ',' → logprob: -10.500264167785645
    4. '(self' → logprob: -13.000264167785645
    5. '
' → logprob: -13.375264167785645
    6. ')' → logprob: -14.125264167785645
    7. '   ' → logprob: -14.500264167785645
    8. ',self' → logprob: -14.750264167785645
    9. 'num' → logprob: -15.000264167785645
    10. '       ' → logprob: -16.37526512145996

Token 290: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006260605878196657
    2. 'self' → logprob: -7.500626087188721
    3. ' ,' → logprob: -10.125625610351562
    4. '(self' → logprob: -10.500625610351562
    5. ',self' → logprob: -13.000625610351562
    6. ',
' → logprob: -13.625625610351562
    7. ')' → logprob: -14.500625610351562
    8. ' (' → logprob: -14.625625610351562
    9. ' self' → logprob: -14.625625610351562
    10. ',num' → logprob: -16.000625610351562

Token 291: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.050838470458984375
    2. ' graph' → logprob: -3.1758384704589844
    3. 'num' → logprob: -5.175838470458984
    4. 'is' → logprob: -7.050838470458984
    5. ' num' → logprob: -7.550838470458984
    6. 'self' → logprob: -8.050838470458984
    7. '   ' → logprob: -8.550838470458984
    8. ' island' → logprob: -8.925838470458984
    9. ')' → logprob: -10.425838470458984
    10. ' self' → logprob: -11.175838470458984

Token 292: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00017648482753429562
    2. '):' → logprob: -8.750176429748535
    3. ',' → logprob: -11.250176429748535
    4. '):
' → logprob: -13.125176429748535
    5. ')' → logprob: -13.250176429748535
    6. ' :' → logprob: -14.000176429748535
    7. '_:' → logprob: -15.500176429748535
    8. ' ):' → logprob: -16.75017738342285
    9. '   ' → logprob: -17.00017738342285
    10. '>:' → logprob: -17.37517738342285

Token 293: ' Island' (ID: 14226)
  Prédit: 'Island'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Island' → logprob: -0.17996013164520264
    2. ' Island' → logprob: -1.8049601316452026
    3. 'Is' → logprob: -9.554960250854492
    4. ')' → logprob: -9.554960250854492
    5. 'Graph' → logprob: -9.679960250854492
    6. 'graph' → logprob: -13.554960250854492
    7. '   ' → logprob: -13.679960250854492
    8. ' Islands' → logprob: -13.804960250854492
    9. ' island' → logprob: -13.804960250854492
    10. '):
' → logprob: -14.179960250854492

Token 294: 'Graph' (ID: 9922)
  Prédit: 'Graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Graph' → logprob: -4.320199877838604e-07
    2. 'raph' → logprob: -15.25
    3. 'graph' → logprob: -16.0
    4. '.Graph' → logprob: -17.625
    5. 'Graphs' → logprob: -17.875
    6. '(Graph' → logprob: -18.875
    7. '_graph' → logprob: -19.0
    8. ' Graph' → logprob: -19.25
    9. ')' → logprob: -19.75
    10. '_GRAPH' → logprob: -19.875

Token 295: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08947078883647919
    2. '):' → logprob: -2.464470863342285
    3. '):
' → logprob: -7.589470863342285
    4. ')' → logprob: -11.589470863342285
    5. ' ,' → logprob: -12.214470863342285
    6. ' ):' → logprob: -12.589470863342285
    7. '   ' → logprob: -12.589470863342285
    8. ',
' → logprob: -13.839470863342285
    9. '):
' → logprob: -13.964470863342285
    10. ':' → logprob: -14.089470863342285

Token 296: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00716630881652236
    2. ',' → logprob: -5.382166385650635
    3. 'self' → logprob: -6.257166385650635
    4. ' self' → logprob: -7.507166385650635
    5. ':' → logprob: -10.257165908813477
    6. '   ' → logprob: -11.507165908813477
    7. '):
' → logprob: -11.632165908813477
    8. ',self' → logprob: -11.757165908813477
    9. '(self' → logprob: -12.382165908813477
    10. '):' → logprob: -12.757165908813477

Token 297: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.09492557495832443
    2. '       ' → logprob: -3.09492564201355
    3. ' self' → logprob: -3.09492564201355
    4. '	self' → logprob: -13.344925880432129
    5. '(self' → logprob: -14.969925880432129
    6. '   ' → logprob: -14.969925880432129
    7. ' ' → logprob: -16.219924926757812
    8. '```' → logprob: -16.719924926757812
    9. ' ' → logprob: -16.969924926757812
    10. 'def' → logprob: -17.344924926757812

Token 298: '.graph' (ID: 18104)
  Prédit: '.graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.graph' → logprob: -0.0014178573619574308
    2. ' .' → logprob: -6.626417636871338
    3. '.' → logprob: -9.626418113708496
    4. 'graph' → logprob: -10.751418113708496
    5. '	graph' → logprob: -13.251418113708496
    6. ' graph' → logprob: -13.626418113708496
    7. '   ' → logprob: -15.251418113708496
    8. '.g' → logprob: -15.376418113708496
    9. '.Graph' → logprob: -15.376418113708496
    10. '.geometry' → logprob: -16.12641716003418

Token 299: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10020937025547028
    2. '=' → logprob: -2.3502094745635986
    3. ' =
' → logprob: -13.85020923614502
    4. '   ' → logprob: -14.35020923614502
    5. ':' → logprob: -15.10020923614502
    6. '.graph' → logprob: -15.35020923614502
    7. '.' → logprob: -15.35020923614502
    8. ',' → logprob: -15.85020923614502
    9. '=
' → logprob: -16.225210189819336
    10. ')' → logprob: -16.475210189819336

Token 300: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.12692904472351074
    2. ' graph' → logprob: -2.1269290447235107
    3. '	graph' → logprob: -14.00192928314209
    4. '(graph' → logprob: -16.626928329467773
    5. '_graph' → logprob: -18.876928329467773
    6. '.graph' → logprob: -19.376928329467773
    7. 'Graph' → logprob: -19.626928329467773
    8. 'graphql' → logprob: -21.501928329467773
    9. ' ' → logprob: -22.126928329467773
    10. 'raph' → logprob: -22.501928329467773

Token 301: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4912225902080536
    2. '<|end|>' → logprob: -0.991222620010376
    3. '    
' → logprob: -5.241222381591797
    4. '   ' → logprob: -5.366222381591797
    5. '<|end|>' → logprob: -5.741222381591797
    6. '       ' → logprob: -6.116222381591797
    7. '  
' → logprob: -7.741222381591797
    8. 'def' → logprob: -7.741222381591797
    9. '        
' → logprob: -8.241222381591797
    10. ',' → logprob: -9.116222381591797

Token 302: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6429004073143005
    2. '   ' → logprob: -1.6429004669189453
    3. '<|end|>' → logprob: -1.7679004669189453
    4. 'def' → logprob: -3.0179004669189453
    5. '    
' → logprob: -3.0179004669189453
    6. '       ' → logprob: -5.892900466918945
    7. '<|end|>' → logprob: -5.892900466918945
    8. ' def' → logprob: -6.017900466918945
    9. '        
' → logprob: -6.517900466918945
    10. '  
' → logprob: -6.767900466918945

Token 303: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0002444125711917877
    2. 'import' → logprob: -9.125244140625
    3. '#' → logprob: -9.500244140625
    4. 'def' → logprob: -10.250244140625
    5. 'from' → logprob: -11.250244140625
    6. '       ' → logprob: -12.125244140625
    7. ' self' → logprob: -12.375244140625
    8. 'pass' → logprob: -13.125244140625
    9. '   ' → logprob: -15.000244140625
    10. '        
' → logprob: -16.375244140625

Token 304: '.N' (ID: 4439)
  Prédit: '.dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.dist' → logprob: -0.048232220113277435
    2. '.best' → logprob: -4.298232078552246
    3. '.distance' → logprob: -5.048232078552246
    4. '.' → logprob: -5.298232078552246
    5. '.inf' → logprob: -5.298232078552246
    6. '.arr' → logprob: -5.298232078552246
    7. '.num' → logprob: -5.673232078552246
    8. '.vis' → logprob: -6.048232078552246
    9. '.min' → logprob: -6.673232078552246
    10. 'dist' → logprob: -6.923232078552246

Token 305: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07897648960351944
    2. '=' → logprob: -2.5789763927459717
    3. ',' → logprob: -10.32897663116455
    4. 'um' → logprob: -10.82897663116455
    5. '   ' → logprob: -11.20397663116455
    6. '  ' → logprob: -12.32897663116455
    7. ' ' → logprob: -12.82897663116455
    8. 'ext' → logprob: -13.07897663116455
    9. '    ' → logprob: -13.20397663116455
    10. '=self' → logprob: -13.32897663116455

Token 306: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.061993010342121124
    2. ' graph' → logprob: -2.81199312210083
    3. 'self' → logprob: -10.686992645263672
    4. ' self' → logprob: -13.436992645263672
    5. '	graph' → logprob: -13.936992645263672
    6. '(graph' → logprob: -16.061992645263672
    7. '.graph' → logprob: -18.686992645263672
    8. '   ' → logprob: -18.811992645263672
    9. 'graf' → logprob: -19.561992645263672
    10. 'graphql' → logprob: -19.561992645263672

Token 307: '.num' (ID: 19403)
  Prédit: '.num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.num' → logprob: -9.491498531133402e-06
    2. '.' → logprob: -11.750009536743164
    3. '.number' → logprob: -14.625009536743164
    4. ' .' → logprob: -14.750009536743164
    5. '.n' → logprob: -15.000009536743164
    6. 'num' → logprob: -15.375009536743164
    7. '.nb' → logprob: -17.750009536743164
    8. '	num' → logprob: -17.875009536743164
    9. '.NUM' → logprob: -18.000009536743164
    10. '<num' → logprob: -18.375009536743164

Token 308: '_is' (ID: 15224)
  Prédit: '_is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_is' → logprob: -0.00015872348740231246
    2. 'is' → logprob: -8.750158309936523
    3. 'Is' → logprob: -15.250158309936523
    4. '\' → logprob: -17.625158309936523
    5. '```' → logprob: -18.375158309936523
    6. 's' → logprob: -18.875158309936523
    7. '-is' → logprob: -18.875158309936523
    8. '_' → logprob: -18.875158309936523
    9. ' islands' → logprob: -19.000158309936523
    10. '(is' → logprob: -19.250158309936523

Token 309: 'lands' (ID: 10186)
  Prédit: 'lands'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lands' → logprob: -0.00015300170343834907
    2. 'ands' → logprob: -9.000152587890625
    3. 'land' → logprob: -10.625152587890625
    4. 'al' → logprob: -13.875152587890625
    5. '_' → logprob: -14.125152587890625
    6. '[' → logprob: -15.000152587890625
    7. 's' → logprob: -15.000152587890625
    8. 'l' → logprob: -15.250152587890625
    9. '=' → logprob: -15.500152587890625
    10. '(' → logprob: -15.500152587890625

Token 310: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.12524554133415222
    2. '<|end|>' → logprob: -2.7502455711364746
    3. '       ' → logprob: -3.1252455711364746
    4. '    
' → logprob: -5.500245571136475
    5. 'def' → logprob: -6.375245571136475
    6. '        
' → logprob: -6.500245571136475
    7. '   ' → logprob: -7.500245571136475
    8. 'self' → logprob: -7.500245571136475
    9. ',' → logprob: -8.125245094299316
    10. ' 
' → logprob: -8.250245094299316

Token 311: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.019893279299139977
    2. '
' → logprob: -4.019893169403076
    3. '<|end|>' → logprob: -6.894893169403076
    4. 'self' → logprob: -8.269893646240234
    5. '        
' → logprob: -8.769893646240234
    6. '   ' → logprob: -9.269893646240234
    7. ',' → logprob: -9.644893646240234
    8. 'def' → logprob: -9.894893646240234
    9. ' self' → logprob: -10.269893646240234
    10. '    
' → logprob: -10.644893646240234

Token 312: ' #' (ID: 1069)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0015071245143190026
    2. 'def' → logprob: -7.00150728225708
    3. ' self' → logprob: -8.001506805419922
    4. '       ' → logprob: -8.501506805419922
    5. '
' → logprob: -11.001506805419922
    6. '   ' → logprob: -11.126506805419922
    7. 'import' → logprob: -11.751506805419922
    8. '#' (adapté à ' #') → logprob: -12.376506805419922
    9. '        
' → logprob: -13.001506805419922
    10. 'pass' → logprob: -13.126506805419922

Token 313: ' earliest' (ID: 48721)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.062133047729730606
    2. 'import' → logprob: -3.6871330738067627
    3. 'def' → logprob: -4.062132835388184
    4. 'from' → logprob: -4.812132835388184
    5. '#' → logprob: -5.062132835388184
    6. 'INF' → logprob: -6.562132835388184
    7. ' self' → logprob: -7.687132835388184
    8. 'sys' → logprob: -7.687132835388184
    9. 'inf' → logprob: -7.937132835388184
    10. 'IN' → logprob: -8.187132835388184

Token 314: ' arrival' (ID: 24861)
  Prédit: '_arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_arr' → logprob: -0.0002142650482710451
    2. '_times' → logprob: -9.000214576721191
    3. '_time' → logprob: -10.250214576721191
    4. 'arrival' → logprob: -10.625214576721191
    5. 'arr' → logprob: -11.125214576721191
    6. 'Arrival' → logprob: -11.875214576721191
    7. '_depart' → logprob: -13.125214576721191
    8. ' arrival' → logprob: -13.375214576721191
    9. '_' → logprob: -13.750214576721191
    10. '[]' → logprob: -13.750214576721191

Token 315: ' time' (ID: 1058)
  Prédit: '_times'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_times' → logprob: -0.38828983902931213
    2. 'times' → logprob: -1.8882898092269897
    3. '_time' → logprob: -2.1382899284362793
    4. ' =' → logprob: -3.3882899284362793
    5. 'time' → logprob: -4.888289928436279
    6. 'self' → logprob: -5.513289928436279
    7. ' times' → logprob: -5.513289928436279
    8. '=' → logprob: -6.763289928436279
    9. '[' → logprob: -7.263289928436279
    10. '[]' → logprob: -8.013289451599121

Token 316: ' initialized' (ID: 40319)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03183188661932945
    2. '=' → logprob: -3.906831979751587
    3. 's' → logprob: -5.031831741333008
    4. ':' → logprob: -6.031831741333008
    5. 'self' → logprob: -6.906831741333008
    6. ' at' → logprob: -7.656831741333008
    7. ' self' → logprob: -8.031831741333008
    8. '       ' → logprob: -8.406831741333008
    9. '   ' → logprob: -9.031831741333008
    10. ',' → logprob: -10.531831741333008

Token 317: ' as' (ID: 472)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1782914251089096
    2. '=' → logprob: -2.1782913208007812
    3. ' to' → logprob: -3.3032913208007812
    4. ',' → logprob: -5.428291320800781
    5. ' with' → logprob: -5.553291320800781
    6. 'self' → logprob: -6.553291320800781
    7. ' as' → logprob: -7.053291320800781
    8. ' self' → logprob: -7.553291320800781
    9. '   ' → logprob: -7.928291320800781
    10. ':' → logprob: -7.928291320800781

Token 318: ' None' (ID: 4662)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.07881730049848557
    2. ' [' → logprob: -3.078817367553711
    3. '{' → logprob: -4.203817367553711
    4. '[int' → logprob: -4.453817367553711
    5. 'float' → logprob: -5.953817367553711
    6. 'sys' → logprob: -8.453817367553711
    7. ' {' → logprob: -8.578817367553711
    8. '[in' → logprob: -9.703817367553711
    9. '[self' → logprob: -10.328817367553711
    10. '[List' → logprob: -10.578817367553711

Token 319: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.45293521881103516
    2. 'self' → logprob: -1.3279352188110352
    3. ' self' → logprob: -2.452935218811035
    4. ' for' → logprob: -4.577935218811035
    5. '   ' → logprob: -7.202935218811035
    6. ',' → logprob: -7.452935218811035
    7. 'for' → logprob: -7.952935218811035
    8. ' or' → logprob: -8.077935218811035
    9. '(self' → logprob: -8.952935218811035
    10. '
' → logprob: -8.952935218811035

Token 320: ' meaning' (ID: 10915)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.4508368670940399
    2. ' self' → logprob: -1.0758368968963623
    3. '       ' → logprob: -3.9508368968963623
    4. '[self' → logprob: -6.450836658477783
    5. ' for' → logprob: -8.575837135314941
    6. ' None' → logprob: -8.825837135314941
    7. '   ' → logprob: -9.450837135314941
    8. '[' → logprob: -9.700837135314941
    9. 'None' → logprob: -9.825837135314941
    10. ' or' → logprob: -9.825837135314941

Token 321: ' unreachable' (ID: 171303)
  Prédit: 'no'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'no' → logprob: -0.819139301776886
    2. 'not' → logprob: -1.3191392421722412
    3. ' no' → logprob: -1.6941392421722412
    4. 'un' → logprob: -2.944139242172241
    5. ' not' → logprob: -4.06913948059082
    6. 'unknown' → logprob: -4.31913948059082
    7. 'in' → logprob: -4.69413948059082
    8. 'inf' → logprob: -5.56913948059082
    9. ' unreachable' → logprob: -5.69413948059082
    10. 'arrival' → logprob: -6.06913948059082

Token 322: ' yet' (ID: 5073)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.693929135799408
    2. '       ' → logprob: -1.1939291954040527
    3. ' self' → logprob: -1.8189291954040527
    4. ' for' → logprob: -3.5689291954040527
    5. 'for' → logprob: -6.193929195404053
    6. ' at' → logprob: -6.318929195404053
    7. ' or' → logprob: -6.943929195404053
    8. '
' → logprob: -7.568929195404053
    9. '   ' → logprob: -7.693929195404053
    10. '(self' → logprob: -7.818929195404053

Token 323: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6511581540107727
    2. 'self' → logprob: -0.9011581540107727
    3. ' self' → logprob: -2.651158094406128
    4. '
' → logprob: -6.651158332824707
    5. '   ' → logprob: -8.651158332824707
    6. ',' → logprob: -9.026158332824707
    7. ' for' → logprob: -9.276158332824707
    8. '(self' → logprob: -10.276158332824707
    9. ' ' → logprob: -10.401158332824707
    10. '        
' → logprob: -10.651158332824707

Token 324: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04649282619357109
    2. 'self' → logprob: -3.1714928150177
    3. ' self' → logprob: -5.671493053436279
    4. '   ' → logprob: -10.671492576599121
    5. ',' → logprob: -11.921492576599121
    6. '(self' → logprob: -12.921492576599121
    7. ' ' → logprob: -13.046492576599121
    8. '
' → logprob: -13.171492576599121
    9. ')' → logprob: -13.421492576599121
    10. '[self' → logprob: -13.546492576599121

Token 325: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -6.2729995988775045e-06
    2. '       ' → logprob: -12.250006675720215
    3. ' self' → logprob: -13.500006675720215
    4. '   ' → logprob: -18.7500057220459
    5. '[self' → logprob: -20.7500057220459
    6. '	self' → logprob: -21.5000057220459
    7. '           ' → logprob: -22.1250057220459
    8. '(self' → logprob: -22.3750057220459
    9. '        
' → logprob: -23.0000057220459
    10. 'from' → logprob: -23.0000057220459

Token 326: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.01179750170558691
    2. '.arr' → logprob: -4.7617974281311035
    3. '.dist' → logprob: -5.7617974281311035
    4. '.best' → logprob: -10.886797904968262
    5. '.times' → logprob: -12.011797904968262
    6. '.distance' → logprob: -12.636797904968262
    7. '.dp' → logprob: -14.136797904968262
    8. 'ear' → logprob: -14.886797904968262
    9. '.d' → logprob: -15.011797904968262
    10. 'arrival' → logprob: -15.011797904968262

Token 327: 'ear' (ID: 830)
  Prédit: 'ear'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ear' → logprob: -0.0252334326505661
    2. 'arrival' → logprob: -4.275233268737793
    3. 'dist' → logprob: -4.525233268737793
    4. 'arr' → logprob: -9.525233268737793
    5. 'distance' → logprob: -10.650233268737793
    6. ' earliest' → logprob: -10.650233268737793
    7. 'early' → logprob: -10.775233268737793
    8. 'best' → logprob: -11.150233268737793
    9. 'dp' → logprob: -11.650233268737793
    10. 'times' → logprob: -12.025233268737793

Token 328: 'liest' (ID: 34647)
  Prédit: 'liest'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'liest' → logprob: -0.00037895687273703516
    2. 'li' → logprob: -8.500378608703613
    3. 'list' → logprob: -8.875378608703613
    4. 'ly' → logprob: -11.000378608703613
    5. 'lies' → logprob: -12.250378608703613
    6. '__' → logprob: -12.375378608703613
    7. 'lier' → logprob: -13.250378608703613
    8. 'l' → logprob: -13.875378608703613
    9. 'lest' → logprob: -13.875378608703613
    10. ' liest' → logprob: -13.875378608703613

Token 329: '_arr' (ID: 25121)
  Prédit: '_arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_arr' → logprob: -0.0003122247871942818
    2. 'arrival' → logprob: -9.000311851501465
    3. '_times' → logprob: -9.375311851501465
    4. '_time' → logprob: -9.375311851501465
    5. 'arr' → logprob: -11.375311851501465
    6. 'Arrival' → logprob: -12.875311851501465
    7. ' =' → logprob: -13.250311851501465
    8. '_' → logprob: -13.500311851501465
    9. '=' → logprob: -14.125311851501465
    10. '```' → logprob: -15.375311851501465

Token 330: 'ival' (ID: 4552)
  Prédit: 'ival'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ival' → logprob: -0.00035060103982686996
    2. 'val' → logprob: -8.875350952148438
    3. '   ' → logprob: -9.875350952148438
    4. 'ivals' → logprob: -10.375350952148438
    5. 'ibal' → logprob: -10.875350952148438
    6. ' ' → logprob: -11.125350952148438
    7. 'al' → logprob: -11.250350952148438
    8. '       ' → logprob: -11.375350952148438
    9. '_time' → logprob: -11.875350952148438
    10. 'ial' → logprob: -12.125350952148438

Token 331: ':' (ID: 25)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7867497801780701
    2. ' =' → logprob: -1.0367498397827148
    3. ':' → logprob: -1.6617498397827148
    4. ' :' → logprob: -8.786749839782715
    5. 's' → logprob: -10.286749839782715
    6. '   ' → logprob: -10.286749839782715
    7. '_time' → logprob: -10.911749839782715
    8. ' ' → logprob: -11.411749839782715
    9. ')' → logprob: -12.786749839782715
    10. '[' → logprob: -12.911749839782715

Token 332: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.25208067893981934
    2. 'Dict' → logprob: -1.5020806789398193
    3. ' List' → logprob: -9.377080917358398
    4. '[List' → logprob: -9.877080917358398
    5. 'Optional' → logprob: -11.752080917358398
    6. ' Dict' → logprob: -12.252080917358398
    7. '   ' → logprob: -13.627080917358398
    8. '[' → logprob: -13.752080917358398
    9. '	List' → logprob: -15.377080917358398
    10. 'list' → logprob: -16.0020809173584

Token 333: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0001955537445610389
    2. '=' → logprob: -8.875195503234863
    3. ' =' → logprob: -10.250195503234863
    4. 'Optional' → logprob: -11.500195503234863
    5. '   ' → logprob: -11.875195503234863
    6. '```' → logprob: -13.500195503234863
    7. '(Optional' → logprob: -14.500195503234863
    8. '[
' → logprob: -14.625195503234863
    9. '	Optional' → logprob: -15.500195503234863
    10. '	' → logprob: -15.875195503234863

Token 334: 'Optional' (ID: 21633)
  Prédit: 'Optional'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Optional' → logprob: -8.149051427608356e-05
    2. '[' → logprob: -9.875081062316895
    3. ' Optional' → logprob: -10.750081062316895
    4. '   ' → logprob: -12.125081062316895
    5. '	Optional' → logprob: -13.375081062316895
    6. '(Optional' → logprob: -14.375081062316895
    7. 'optional' → logprob: -14.875081062316895
    8. 'int' → logprob: -15.125081062316895
    9. '  ' → logprob: -16.37508201599121
    10. '```' → logprob: -16.37508201599121

Token 335: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -4.692145012086257e-05
    2. 'int' → logprob: -10.000046730041504
    3. '[' → logprob: -14.000046730041504
    4. ']int' → logprob: -15.375046730041504
    5. '=int' → logprob: -16.12504768371582
    6. ']' → logprob: -16.62504768371582
    7. '   ' → logprob: -16.87504768371582
    8. '<int' → logprob: -17.12504768371582
    9. '[in' → logprob: -17.37504768371582
    10. '[Int' → logprob: -17.50004768371582

Token 336: ']]' (ID: 8928)
  Prédit: ']]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']]' → logprob: -0.00037836082628928125
    2. ']' → logprob: -8.375378608703613
    3. ']]=' → logprob: -8.875378608703613
    4. ']=' → logprob: -12.750378608703613
    5. ')]' → logprob: -13.000378608703613
    6. ']]]' → logprob: -14.250378608703613
    7. ' ]]' → logprob: -14.375378608703613
    8. '>]' → logprob: -14.375378608703613
    9. '[' → logprob: -15.000378608703613
    10. ']>' → logprob: -15.500378608703613

Token 337: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.038042180240154266
    2. ' =' → logprob: -3.2880420684814453
    3. ' ' → logprob: -15.538042068481445
    4. '=[' → logprob: -15.788042068481445
    5. ' =[' → logprob: -16.288042068481445
    6. '[' → logprob: -16.913042068481445
    7. '=None' → logprob: -17.038042068481445
    8. ']=' → logprob: -17.663042068481445
    9. '＝' → logprob: -17.788042068481445
    10. '   ' → logprob: -17.913042068481445

Token 338: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0032101573888212442
    2. ' [' → logprob: -5.753210067749023
    3. '[N' → logprob: -11.003210067749023
    4. '[self' → logprob: -11.378210067749023
    5. '[n' → logprob: -13.253210067749023
    6. '[node' → logprob: -14.003210067749023
    7. '   ' → logprob: -14.003210067749023
    8. '[int' → logprob: -15.378210067749023
    9. '[num' → logprob: -15.628210067749023
    10. '[class' → logprob: -16.253210067749023

Token 339: 'None' (ID: 8505)
  Prédit: 'None'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -4.60414821645827e-06
    2. ' None' → logprob: -12.500004768371582
    3. '   ' → logprob: -14.375004768371582
    4. 'float' → logprob: -16.250003814697266
    5. '(None' → logprob: -16.625003814697266
    6. 'sys' → logprob: -18.250003814697266
    7. '       ' → logprob: -18.625003814697266
    8. '=None' → logprob: -19.500003814697266
    9. '0' → logprob: -19.875003814697266
    10. '```' → logprob: -19.875003814697266

Token 340: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.07239396870136261
    2. ' for' → logprob: -2.6973938941955566
    3. ',' → logprob: -6.572393894195557
    4. ' ]' → logprob: -7.572393894195557
    5. ']*' → logprob: -8.447394371032715
    6. 'for' → logprob: -8.447394371032715
    7. ']*(' → logprob: -9.822394371032715
    8. ']+' → logprob: -9.947394371032715
    9. ' ' → logprob: -12.822394371032715
    10. ')' → logprob: -13.197394371032715

Token 341: ' *' (ID: 425)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.13943754136562347
    2. ']' → logprob: -2.514437437057495
    3. 'for' → logprob: -3.514437437057495
    4. ']*(' → logprob: -4.889437675476074
    5. ' *' → logprob: -5.389437675476074
    6. ']+' → logprob: -6.014437675476074
    7. '*(' → logprob: -6.639437675476074
    8. '+' → logprob: -7.139437675476074
    9. ' +' → logprob: -7.514437675476074
    10. ',' → logprob: -7.639437675476074

Token 342: ' (' (ID: 350)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00012809180771000683
    2. ' (' → logprob: -9.125127792358398
    3. '(N' → logprob: -11.625127792358398
    4. '((' → logprob: -12.375127792358398
    5. '(' → logprob: -12.875127792358398
    6. '(graph' → logprob: -13.125127792358398
    7. '(n' → logprob: -14.625127792358398
    8. 'self' → logprob: -14.625127792358398
    9. '(this' → logprob: -15.500127792358398
    10. '(next' → logprob: -16.2501277923584

Token 343: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0019106694962829351
    2. '(self' → logprob: -6.50191068649292
    3. ' self' → logprob: -8.251910209655762
    4. 'graph' → logprob: -9.126910209655762
    5. '   ' → logprob: -10.626910209655762
    6. '
' → logprob: -12.251910209655762
    7. ' (' → logprob: -13.251910209655762
    8. '(graph' → logprob: -13.251910209655762
    9. '       ' → logprob: -13.501910209655762
    10. '(' → logprob: -13.626910209655762

Token 344: '.N' (ID: 4439)
  Prédit: '.N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.N' → logprob: -0.004137887619435787
    2. '.graph' → logprob: -5.504137992858887
    3. 'graph' → logprob: -10.379137992858887
    4. '.' → logprob: -10.754137992858887
    5. 'N' → logprob: -12.879137992858887
    6. ' .' → logprob: -13.379137992858887
    7. ' graph' → logprob: -14.754137992858887
    8. '.
' → logprob: -14.754137992858887
    9. '.user' → logprob: -14.754137992858887
    10. '	graph' → logprob: -15.129137992858887

Token 345: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.31334108114242554
    2. ' +' → logprob: -1.3133411407470703
    3. ')' → logprob: -9.93834114074707
    4. ' +
' → logprob: -11.68834114074707
    5. '+
' → logprob: -11.68834114074707
    6. ' ' → logprob: -12.31334114074707
    7. ' )' → logprob: -13.06334114074707
    8. '+)' → logprob: -13.18834114074707
    9. '   ' → logprob: -13.93834114074707
    10. '<|end|>' → logprob: -14.18834114074707

Token 346: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.688212614681106e-05
    2. ' ' → logprob: -11.000017166137695
    3. '2' → logprob: -15.875017166137695
    4. '   ' → logprob: -17.750017166137695
    5. '１' → logprob: -20.625017166137695
    6. '```' → logprob: -20.750017166137695
    7. '
' → logprob: -20.875017166137695
    8. '  ' → logprob: -21.000017166137695
    9. '۱' → logprob: -22.250017166137695
    10. '0' → logprob: -22.750017166137695

Token 347: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. '2' → logprob: -15.125000953674316
    3. ' ' → logprob: -15.375000953674316
    4. '   ' → logprob: -19.125
    5. '１' → logprob: -20.75
    6. '```' → logprob: -21.0
    7. '
' → logprob: -21.75
    8. '۱' → logprob: -22.125
    9. '  ' → logprob: -22.5
    10. '{' → logprob: -23.4375

Token 348: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.4656579120783135e-05
    2. '<|end|>' → logprob: -10.250044822692871
    3. ')
' → logprob: -12.000044822692871
    4. ' )' → logprob: -13.375044822692871
    5. ']' → logprob: -14.625044822692871
    6. '       ' → logprob: -15.125044822692871
    7. '   ' → logprob: -15.375044822692871
    8. ')]' → logprob: -16.125043869018555
    9. '}' → logprob: -16.500043869018555
    10. '<|end|>' → logprob: -16.750043869018555

Token 349: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4322470426559448
    2. '
' → logprob: -2.0572471618652344
    3. '    
' → logprob: -2.0572471618652344
    4. '<|end|>' → logprob: -2.9322471618652344
    5. 'def' → logprob: -3.9322471618652344
    6. ' 
' → logprob: -4.557247161865234
    7. '  
' → logprob: -6.182247161865234
    8. ' def' → logprob: -6.307247161865234
    9. '        
' → logprob: -6.307247161865234
    10. '```' → logprob: -6.557247161865234

Token 350: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10149281471967697
    2. 'def' → logprob: -2.3514928817749023
    3. ' def' → logprob: -6.726492881774902
    4. '    
' → logprob: -9.476492881774902
    5. '
' → logprob: -11.976492881774902
    6. '	def' → logprob: -13.351492881774902
    7. '        
' → logprob: -13.976492881774902
    8. '```' → logprob: -14.476492881774902
    9. '<|end|>' → logprob: -15.351492881774902
    10. '<|end|>' → logprob: -15.976492881774902

Token 351: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0003445216570980847
    2. ' def' → logprob: -8.000344276428223
    3. '   ' → logprob: -11.625344276428223
    4. '	def' → logprob: -16.62534523010254
    5. 'de' → logprob: -17.87534523010254
    6. ' ' → logprob: -19.25034523010254
    7. 'ndef' → logprob: -19.37534523010254
    8. '
' → logprob: -19.62534523010254
    9. '  ' → logprob: -20.00034523010254
    10. 'd' → logprob: -20.12534523010254

Token 352: ' solve' (ID: 17722)
  Prédit: ' find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' find' → logprob: -0.4801594018936157
    2. 'find' → logprob: -1.2301594018936157
    3. 'solve' → logprob: -3.355159282684326
    4. 'def' → logprob: -3.480159282684326
    5. ' solve' → logprob: -4.980159282684326
    6. ' shortest' → logprob: -5.105159282684326
    7. 'd' → logprob: -5.855159282684326
    8. ' def' → logprob: -5.980159282684326
    9. ' earliest' → logprob: -6.230159282684326
    10. 'ear' → logprob: -6.855159282684326

Token 353: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0004927450208924711
    2. '(' → logprob: -7.625492572784424
    3. ' (' → logprob: -12.375493049621582
    4. '(
' → logprob: -15.000493049621582
    5. 'self' → logprob: -16.250492095947266
    6. '(s' → logprob: -16.875492095947266
    7. '(sel' → logprob: -17.375492095947266
    8. '   ' → logprob: -18.000492095947266
    9. '(se' → logprob: -19.000492095947266
    10. ' ' → logprob: -19.125492095947266

Token 354: ')' (ID: 8)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0019527795957401395
    2. ' ,' → logprob: -6.251952648162842
    3. 'self' → logprob: -11.001953125
    4. '_,' → logprob: -12.001953125
    5. ',start' → logprob: -15.251953125
    6. ',self' → logprob: -15.376953125
    7. ',
' → logprob: -15.501953125
    8. '(self' → logprob: -15.626953125
    9. 'def' → logprob: -16.376953125
    10. ',node' → logprob: -16.751953125

Token 355: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.005778762046247721
    2. '(' → logprob: -5.505778789520264
    3. ':' → logprob: -6.505778789520264
    4. '       ' → logprob: -9.505778312683105
    5. 'self' → logprob: -10.505778312683105
    6. ' (' → logprob: -10.880778312683105
    7. '(
' → logprob: -11.005778312683105
    8. '(s' → logprob: -11.255778312683105
    9. '   ' → logprob: -11.505778312683105
    10. ' :' → logprob: -11.755778312683105

Token 356: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.45942986011505127
    2. ' int' → logprob: -1.7094298601150513
    3. 'Optional' → logprob: -2.4594297409057617
    4. ' Optional' → logprob: -2.5844297409057617
    5. 'None' → logprob: -4.209429740905762
    6. ' None' → logprob: -4.459429740905762
    7. '(Optional' → logprob: -11.584429740905762
    8. 'bool' → logprob: -11.834429740905762
    9. '(int' → logprob: -12.584429740905762
    10. ' ' → logprob: -12.584429740905762

Token 357: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03934718668460846
    2. '       ' → logprob: -3.4143471717834473
    3. ':
' → logprob: -5.664347171783447
    4. '(self' → logprob: -6.539347171783447
    5. '():' → logprob: -8.039347648620605
    6. '):' → logprob: -8.539347648620605
    7. '   ' → logprob: -8.914347648620605
    8. '(' → logprob: -10.664347648620605
    9. '):
' → logprob: -11.164347648620605
    10. ',' → logprob: -11.289347648620605

Token 358: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -7.874882430769503e-05
    2. '```' → logprob: -10.375079154968262
    3. 'import' → logprob: -11.250079154968262
    4. '        
' → logprob: -11.625079154968262
    5. '
' → logprob: -12.000079154968262
    6. '0' → logprob: -13.000079154968262
    7. '   ' → logprob: -13.125079154968262
    8. 'n' → logprob: -13.375079154968262
    9. '           ' → logprob: -13.500079154968262
    10. 'return' → logprob: -13.625079154968262

Token 359: ' """
' (ID: 7037)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9417676329612732
    2. 'import' → logprob: -0.9417676329612732
    3. 'self' → logprob: -2.191767692565918
    4. 'start' → logprob: -2.691767692565918
    5. 'heap' → logprob: -3.691767692565918
    6. 'pq' → logprob: -4.316767692565918
    7. 'queue' → logprob: -6.816767692565918
    8. 'hq' → logprob: -7.441767692565918
    9. '```' → logprob: -8.316767692565918
    10. 'from' → logprob: -9.441767692565918

Token 360: '       ' (ID: 309)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.1913650780916214
    2. 'start' → logprob: -2.3163650035858154
    3. '       ' → logprob: -2.6913650035858154
    4. ' import' → logprob: -5.8163652420043945
    5. 'heap' → logprob: -6.0663652420043945
    6. 'self' → logprob: -7.6913652420043945
    7. ' start' → logprob: -7.6913652420043945
    8. 'if' → logprob: -7.6913652420043945
    9. 'from' → logprob: -7.8163652420043945
    10. 'pq' → logprob: -8.816365242004395

Token 361: ' Performs' (ID: 118692)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.889066219329834
    2. 'import' → logprob: -1.264066219329834
    3. 'start' → logprob: -1.889066219329834
    4. '       ' → logprob: -2.139066219329834
    5. 'Initialize' → logprob: -5.139066219329834
    6. '"""
' → logprob: -5.514066219329834
    7. '"""' → logprob: -5.514066219329834
    8. 'Start' → logprob: -5.764066219329834
    9. 'Starts' → logprob: -5.764066219329834
    10. 'Implement' → logprob: -6.014066219329834

Token 362: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -1.3255081176757812
    2. 'import' → logprob: -1.4505081176757812
    3. 'a' → logprob: -1.5755081176757812
    4. 'd' → logprob: -2.4505081176757812
    5. '       ' → logprob: -2.5755081176757812
    6. 'the' → logprob: -2.9505081176757812
    7. 'def' → logprob: -3.4505081176757812
    8. ' the' → logprob: -3.7005081176757812
    9. '   ' → logprob: -4.825508117675781
    10. ' import' → logprob: -6.200508117675781

Token 363: ' shortest' (ID: 70564)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.80869460105896
    2. 'd' → logprob: -1.43369460105896
    3. 'def' → logprob: -1.93369460105896
    4. 'heap' → logprob: -2.18369460105896
    5. 'D' → logprob: -3.93369460105896
    6. 'short' → logprob: -4.058694839477539
    7. 'priority' → logprob: -4.808694839477539
    8. 'modified' → logprob: -5.058694839477539
    9. ' D' → logprob: -5.933694839477539
    10. 'best' → logprob: -6.808694839477539

Token 364: ' path' (ID: 3104)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.8314083814620972
    2. '_path' → logprob: -0.8314083814620972
    3. ' path' → logprob: -2.0814085006713867
    4. '-path' → logprob: -5.456408500671387
    5. '_' → logprob: -9.831408500671387
    6. '_paths' → logprob: -11.456408500671387
    7. 'time' → logprob: -11.581408500671387
    8. 'Path' → logprob: -12.081408500671387
    9. '_time' → logprob: -12.206408500671387
    10. '-' → logprob: -12.206408500671387

Token 365: ' style' (ID: 2713)
  Prédit: ' search'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' search' → logprob: -0.025031622499227524
    2. 'search' → logprob: -4.025031566619873
    3. ' calculation' → logprob: -5.275031566619873
    4. ' computation' → logprob: -6.400031566619873
    5. '_search' → logprob: -10.275032043457031
    6. '       ' → logprob: -10.900032043457031
    7. '   ' → logprob: -12.150032043457031
    8. 'finding' → logprob: -12.150032043457031
    9. ' algorithm' → logprob: -12.650032043457031
    10. 'cal' → logprob: -12.775032043457031

Token 366: ' search' (ID: 3684)
  Prédit: ' search'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' search' → logprob: -0.34863507747650146
    2. 'search' → logprob: -1.2236350774765015
    3. ' traversal' → logprob: -8.973634719848633
    4. ' computation' → logprob: -10.723634719848633
    5. ' calculation' → logprob: -11.973634719848633
    6. 'arrival' → logprob: -12.098634719848633
    7. 'time' → logprob: -12.223634719848633
    8. '```' → logprob: -12.973634719848633
    9. ' algorithm' → logprob: -13.098634719848633
    10. '_search' → logprob: -13.223634719848633

Token 367: ' on' (ID: 402)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09768558293581009
    2. ' to' → logprob: -2.8476855754852295
    3. ' using' → logprob: -4.347685813903809
    4. ',' → logprob: -4.597685813903809
    5. ' with' → logprob: -4.847685813903809
    6. ' for' → logprob: -6.847685813903809
    7. ' that' → logprob: -7.347685813903809
    8. ' from' → logprob: -7.972685813903809
    9. '   ' → logprob: -8.097685813903809
    10. ' starting' → logprob: -8.347685813903809

Token 368: ' the' (ID: 290)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.7873480319976807
    2. 'the' → logprob: -0.7873480319976807
    3. ' the' → logprob: -2.6623480319976807
    4. ' self' → logprob: -4.037347793579102
    5. '       ' → logprob: -6.162347793579102
    6. 'a' → logprob: -8.912347793579102
    7. '   ' → logprob: -9.912347793579102
    8. ' a' → logprob: -10.037347793579102
    9. '```' → logprob: -10.037347793579102
    10. '(self' → logprob: -11.162347793579102

Token 369: ' time' (ID: 1058)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.08180166780948639
    2. ' graph' → logprob: -2.956801652908325
    3. 'self' → logprob: -3.706801652908325
    4. '       ' → logprob: -7.956801891326904
    5. ' self' → logprob: -8.331801414489746
    6. 'bridge' → logprob: -8.831801414489746
    7. 'time' → logprob: -8.956801414489746
    8. 'queue' → logprob: -8.956801414489746
    9. 'def' → logprob: -9.081801414489746
    10. '   ' → logprob: -9.081801414489746

Token 370: '-l' (ID: 2887)
  Prédit: ' graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' graph' → logprob: -0.6189584732055664
    2. 'graph' → logprob: -1.6189584732055664
    3. '       ' → logprob: -1.7439584732055664
    4. '-' → logprob: -4.118958473205566
    5. ' schedule' → logprob: -4.118958473205566
    6. 'dependent' → logprob: -4.243958473205566
    7. '-dependent' → logprob: -4.368958473205566
    8. '   ' → logprob: -4.618958473205566
    9. ' dependent' → logprob: -4.743958473205566
    10. ' line' → logprob: -6.493958473205566

Token 371: 'abeled' (ID: 38049)
  Prédit: 'ine'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ine' → logprob: -0.037790026515722275
    2. 'imited' → logprob: -3.662790060043335
    3. 'imit' → logprob: -4.787789821624756
    4. 'e' → logprob: -6.662789821624756
    5. 'inear' → logprob: -7.537789821624756
    6. 'ength' → logprob: -7.787789821624756
    7. 'eft' → logprob: -8.412790298461914
    8. 'ined' → logprob: -8.537790298461914
    9. 'ist' → logprob: -9.412790298461914
    10. 'ike' → logprob: -9.787790298461914

Token 372: ' edges' (ID: 22569)
  Prédit: ' graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' graph' → logprob: -0.3978580832481384
    2. 'graph' → logprob: -1.1478581428527832
    3. ' bridges' → logprob: -5.147858142852783
    4. 'brid' → logprob: -6.397858142852783
    5. 'edges' → logprob: -6.772858142852783
    6. ' edges' → logprob: -7.022858142852783
    7. '       ' → logprob: -8.147857666015625
    8. ' network' → logprob: -8.397857666015625
    9. '   ' → logprob: -8.522857666015625
    10. 'bridge' → logprob: -8.647857666015625

Token 373: ' 
' (ID: 793)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03438393026590347
    2. ',' → logprob: -3.90938401222229
    3. ' to' → logprob: -4.534383773803711
    4. '.' → logprob: -6.284383773803711
    5. ' for' → logprob: -7.659383773803711
    6. ':' → logprob: -8.909383773803711
    7. ' with' → logprob: -9.159383773803711
    8. ' that' → logprob: -9.284383773803711
    9. '   ' → logprob: -9.659383773803711
    10. '        
' → logprob: -9.909383773803711

Token 374: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12559004127979279
    2. ' to' → logprob: -2.2505900859832764
    3. ',' → logprob: -4.625589847564697
    4. 'to' → logprob: -6.875589847564697
    5. ' that' → logprob: -7.750589847564697
    6. '.' → logprob: -8.000590324401855
    7. ' for' → logprob: -8.125590324401855
    8. '   ' → logprob: -8.750590324401855
    9. ' with' → logprob: -9.000590324401855
    10. ' from' → logprob: -9.250590324401855

Token 375: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.7432184219360352
    2. '       ' → logprob: -0.8682184219360352
    3. 'to' (adapté à ' to') → logprob: -2.618218421936035
    4. ',' → logprob: -3.618218421936035
    5. ' using' → logprob: -6.368218421936035
    6. ' with' → logprob: -6.743218421936035
    7. 'using' → logprob: -7.493218421936035
    8. 'with' → logprob: -7.743218421936035
    9. ' that' → logprob: -8.243218421936035
    10. '.' → logprob: -8.868218421936035

Token 376: ' find' (ID: 1646)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.1685914695262909
    2. ' find' → logprob: -2.0435914993286133
    3. 'det' → logprob: -4.418591499328613
    4. '   ' → logprob: -5.168591499328613
    5. '       ' → logprob: -5.668591499328613
    6. '```' → logprob: -6.168591499328613
    7. 'reach' → logprob: -7.543591499328613
    8. 'return' → logprob: -7.668591499328613
    9. ' reach' → logprob: -8.168591499328613
    10. 'compute' → logprob: -8.293591499328613

Token 377: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.20148281753063202
    2. 'the' → logprob: -1.7014827728271484
    3. '       ' → logprob: -9.826482772827148
    4. ' an' → logprob: -12.201482772827148
    5. ' earliest' → logprob: -12.701482772827148
    6. '   ' → logprob: -13.201482772827148
    7. 'an' → logprob: -13.451482772827148
    8. '```' → logprob: -14.201482772827148
    9. ' ' → logprob: -14.326482772827148
    10. ' a' → logprob: -14.701482772827148

Token 378: ' maximum' (ID: 10562)
  Prédit: ' earliest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' earliest' → logprob: -0.6030939817428589
    2. 'ear' → logprob: -1.2280939817428589
    3. 'minimum' → logprob: -2.4780941009521484
    4. ' shortest' → logprob: -2.9780941009521484
    5. ' minimum' → logprob: -4.228094100952148
    6. 'short' → logprob: -5.728094100952148
    7. ' fastest' → logprob: -6.103094100952148
    8. 'minimal' → logprob: -6.478094100952148
    9. ' quickest' → logprob: -6.478094100952148
    10. ' minimal' → logprob: -6.728094100952148

Token 379: ' waiting' (ID: 12028)
  Prédit: ' time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' time' → logprob: -1.7136129140853882
    2. ' waiting' → logprob: -1.9636129140853882
    3. 'time' → logprob: -2.0886130332946777
    4. ' delay' → logprob: -2.4636130332946777
    5. 'delay' → logprob: -2.4636130332946777
    6. 'waiting' → logprob: -2.5886130332946777
    7. 'arrival' → logprob: -2.7136130332946777
    8. ' safe' → logprob: -2.7136130332946777
    9. ' arrival' → logprob: -2.8386130332946777
    10. ' wait' → logprob: -2.9636130332946777

Token 380: ' time' (ID: 1058)
  Prédit: '_time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.131723552942276
    2. 'time' → logprob: -2.631723642349243
    3. ' time' → logprob: -3.006723642349243
    4. '_' → logprob: -6.881723403930664
    5. '_for' → logprob: -7.756723403930664
    6. ' _' → logprob: -8.381723403930664
    7. '   ' → logprob: -9.131723403930664
    8. '_period' → logprob: -9.881723403930664
    9. 'for' → logprob: -10.256723403930664
    10. '_to' → logprob: -11.131723403930664

Token 381: ' at' (ID: 540)
  Prédit: ' at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' at' → logprob: -1.401768684387207
    2. '   ' → logprob: -1.901768684387207
    3. '.' → logprob: -2.276768684387207
    4. '       ' → logprob: -2.526768684387207
    5. ' that' → logprob: -2.526768684387207
    6. ' possible' → logprob: -2.776768684387207
    7. ' before' → logprob: -2.901768684387207
    8. ' for' → logprob: -3.026768684387207
    9. ' between' → logprob: -4.026768684387207
    10. 'possible' → logprob: -4.026768684387207

Token 382: ' islands' (ID: 45758)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.8155702352523804
    2. 'any' → logprob: -1.1905702352523804
    3. 'an' → logprob: -1.9405702352523804
    4. 'each' → logprob: -3.06557035446167
    5. 'is' → logprob: -3.44057035446167
    6. ' the' → logprob: -4.94057035446167
    7. 'a' → logprob: -5.56557035446167
    8. ' any' → logprob: -5.69057035446167
    9. 'start' → logprob: -5.94057035446167
    10. 'brid' → logprob: -6.06557035446167

Token 383: ' before' (ID: 2254)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.434436559677124
    2. '.' → logprob: -1.809436559677124
    3. ',' → logprob: -2.309436559677124
    4. ' before' → logprob: -3.309436559677124
    5. ' for' → logprob: -4.309436798095703
    6. ' that' → logprob: -4.434436798095703
    7. ' while' → logprob: -4.684436798095703
    8. ' to' → logprob: -5.059436798095703
    9. ':' → logprob: -5.934436798095703
    10. ' after' → logprob: -6.309436798095703

Token 384: ' reaching' (ID: 29787)
  Prédit: ' crossing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' crossing' → logprob: -0.6167652010917664
    2. 'starting' → logprob: -2.366765260696411
    3. 'taking' → logprob: -2.366765260696411
    4. 'cross' → logprob: -2.491765260696411
    5. 'moving' → logprob: -3.116765260696411
    6. 'depart' → logprob: -3.241765260696411
    7. '   ' → logprob: -3.991765260696411
    8. 'continu' → logprob: -4.241765022277832
    9. ' moving' → logprob: -4.366765022277832
    10. '```' → logprob: -4.616765022277832

Token 385: ' the' (ID: 290)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.20024923980236053
    2. ' the' → logprob: -1.950249195098877
    3. ' island' → logprob: -3.700249195098877
    4. 'destination' → logprob: -4.825249195098877
    5. 'is' → logprob: -5.575249195098877
    6. ' destination' → logprob: -7.075249195098877
    7. 'Island' → logprob: -7.450249195098877
    8. '   ' → logprob: -7.825249195098877
    9. '```' → logprob: -9.200249671936035
    10. '       ' → logprob: -9.450249671936035

Token 386: ' last' (ID: 2174)
  Prédit: 'destination'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'destination' → logprob: -0.650203287601471
    2. 'final' → logprob: -1.0252032279968262
    3. 'end' → logprob: -3.400203227996826
    4. 'target' → logprob: -3.775203227996826
    5. 'last' → logprob: -4.025203227996826
    6. ' destination' → logprob: -4.150203227996826
    7. ' final' → logprob: -4.275203227996826
    8. ' last' → logprob: -5.525203227996826
    9. 'goal' → logprob: -5.900203227996826
    10. ' end' → logprob: -6.650203227996826

Token 387: ' island' (ID: 18149)
  Prédit: ' island'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' island' → logprob: -0.09959360957145691
    2. '_is' → logprob: -3.2245936393737793
    3. '_' → logprob: -3.4745936393737793
    4. 'is' → logprob: -4.224593639373779
    5. ' _' → logprob: -4.724593639373779
    6. 'Island' → logprob: -8.974593162536621
    7. ' ' → logprob: -9.474593162536621
    8. '島' → logprob: -9.849593162536621
    9. '   ' → logprob: -10.474593162536621
    10. ' ' → logprob: -10.599593162536621

Token 388: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08055093884468079
    2. '.' → logprob: -2.7055509090423584
    3. ',' → logprob: -5.3305511474609375
    4. ':' → logprob: -5.4555511474609375
    5. '        
' → logprob: -7.9555511474609375
    6. '
' → logprob: -8.080551147460938
    7. '.
' → logprob: -8.830551147460938
    8. '(self' → logprob: -9.080551147460938
    9. '```' → logprob: -9.455551147460938
    10. 'import' → logprob: -9.955551147460938

Token 389: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002254218328744173
    2. '
' → logprob: -6.752254009246826
    3. '        
' → logprob: -7.002254009246826
    4. '```' → logprob: -9.002254486083984
    5. '\n' → logprob: -11.002254486083984
    6. ' 
' → logprob: -12.127254486083984
    7. '   ' → logprob: -12.377254486083984
    8. '    
' → logprob: -12.627254486083984
    9. '"""' → logprob: -13.377254486083984
    10. '       
' → logprob: -13.377254486083984

Token 390: ' Returns' (ID: 9609)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005604391917586327
    2. '
' → logprob: -5.505604267120361
    3. '        
' → logprob: -6.630604267120361
    4. '```' → logprob: -9.38060474395752
    5. '\n' → logprob: -9.75560474395752
    6. '  
' → logprob: -11.50560474395752
    7. ' 
' → logprob: -11.50560474395752
    8. '    
' → logprob: -11.75560474395752
    9. 'n' → logprob: -12.13060474395752
    10. '   ' → logprob: -12.25560474395752

Token 391: ':
' (ID: 734)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.5814014673233032
    2. ' -' → logprob: -1.0814014673233032
    3. ' self' → logprob: -2.7064013481140137
    4. 'self' → logprob: -3.7064013481140137
    5. '0' → logprob: -4.831401348114014
    6. ' the' → logprob: -6.706401348114014
    7. '-self' → logprob: -8.206401824951172
    8. 'max' → logprob: -8.331401824951172
    9. 'the' → logprob: -8.456401824951172
    10. ' max' → logprob: -8.581401824951172

Token 392: '           ' (ID: 352)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.5819085836410522
    2. ' -' → logprob: -1.2069085836410522
    3. '0' → logprob: -2.956908702850342
    4. 'int' → logprob: -3.206908702850342
    5. ' self' → logprob: -3.831908702850342
    6. 'self' → logprob: -4.081908702850342
    7. '       ' → logprob: -5.206908702850342
    8. ' int' → logprob: -6.206908702850342
    9. 'max' → logprob: -6.206908702850342
    10. ' max' → logprob: -7.706908702850342

Token 393: ' max' (ID: 2999)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.005854489281773567
    2. ' int' → logprob: -5.255854606628418
    3. 'Optional' → logprob: -7.505854606628418
    4. ' Optional' → logprob: -9.880854606628418
    5. '       ' → logprob: -11.005854606628418
    6. 'self' → logprob: -13.755854606628418
    7. 'max' (adapté à ' max') → logprob: -14.380854606628418
    8. 'The' → logprob: -15.005854606628418
    9. '-' → logprob: -15.255854606628418
    10. '[int' → logprob: -16.1308536529541

Token 394: '_wait' (ID: 44250)
  Prédit: '_wait'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_wait' → logprob: -0.001884849858470261
    2. '_' → logprob: -6.626884937286377
    3. '_max' → logprob: -9.251884460449219
    4. ' _' → logprob: -9.251884460449219
    5. '(' → logprob: -9.376884460449219
    6. '_time' → logprob: -9.376884460449219
    7. '_w' → logprob: -9.751884460449219
    8. '(wait' → logprob: -10.251884460449219
    9. '```' → logprob: -10.876884460449219
    10. '(_' → logprob: -11.376884460449219

Token 395: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.11873430758714676
    2. 'ing' → logprob: -2.243734359741211
    3. '_wait' → logprob: -6.118734359741211
    4. '_' → logprob: -6.118734359741211
    5. 'ed' → logprob: -7.868734359741211
    6. '_max' → logprob: -7.868734359741211
    7. '   ' → logprob: -8.743734359741211
    8. ' =' → logprob: -9.118734359741211
    9. '_for' → logprob: -9.493734359741211
    10. '       ' → logprob: -9.868734359741211

Token 396: ' (' (ID: 350)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16913749277591705
    2. ':' → logprob: -1.9191374778747559
    3. '=' → logprob: -5.169137477874756
    4. '       ' → logprob: -6.044137477874756
    5. '   ' → logprob: -8.419137954711914
    6. ':int' → logprob: -8.919137954711914
    7. ' :' → logprob: -9.044137954711914
    8. '(self' → logprob: -9.419137954711914
    9. ',' → logprob: -9.919137954711914
    10. '_' → logprob: -10.794137954711914

Token 397: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.09342984855175018
    2. ')' → logprob: -2.5934298038482666
    3. 'Optional' → logprob: -4.968430042266846
    4. ' int' → logprob: -5.093430042266846
    5. '):' → logprob: -7.218430042266846
    6. ' Optional' → logprob: -8.343429565429688
    7. ':' → logprob: -9.093429565429688
    8. '[int' → logprob: -9.093429565429688
    9. ':int' → logprob: -9.718429565429688
    10. ' )' → logprob: -10.343429565429688

Token 398: ')' (ID: 8)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.25411537289619446
    2. ')' → logprob: -1.504115343093872
    3. '):
' → logprob: -6.254115581512451
    4. '       ' → logprob: -9.129115104675293
    5. ',' → logprob: -10.379115104675293
    6. ':' → logprob: -10.629115104675293
    7. '   ' → logprob: -10.629115104675293
    8. ' ):' → logprob: -10.629115104675293
    9. '):
' → logprob: -10.754115104675293
    10. '):

' → logprob: -11.504115104675293

Token 399: ' if' (ID: 538)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3661673665046692
    2. '       ' → logprob: -1.2411673069000244
    3. ':
' → logprob: -4.4911675453186035
    4. '):' → logprob: -5.8661675453186035
    5. '
' → logprob: -6.3661675453186035
    6. '):
' → logprob: -7.6161675453186035
    7. '        
' → logprob: -8.116167068481445
    8. ')' → logprob: -8.366167068481445
    9. ',' → logprob: -8.991167068481445
    10. '#' → logprob: -9.241167068481445

Token 400: ' reachable' (ID: 143580)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.8133299350738525
    2. ' self' → logprob: -0.9383299350738525
    3. 'possible' → logprob: -2.9383299350738525
    4. ' possible' → logprob: -3.6883299350738525
    5. 'max' → logprob: -3.8133299350738525
    6. 'reachable' → logprob: -3.9383299350738525
    7. 'the' → logprob: -4.438329696655273
    8. ' the' → logprob: -4.688329696655273
    9. ' reachable' → logprob: -4.813329696655273
    10. ' max' → logprob: -5.563329696655273

Token 401: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5796160101890564
    2. ',' → logprob: -0.9546160101890564
    3. '
' → logprob: -3.704616069793701
    4. ' else' → logprob: -3.704616069793701
    5. 'else' → logprob: -5.704616069793701
    6. ',
' → logprob: -6.454616069793701
    7. ' or' → logprob: -8.329615592956543
    8. '        
' → logprob: -8.704615592956543
    9. ':' → logprob: -8.954615592956543
    10. ';' → logprob: -9.454615592956543

Token 402: ' else' (ID: 1203)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0531720332801342
    2. '       ' → logprob: -3.4281721115112305
    3. ' -' → logprob: -4.9281721115112305
    4. 'else' → logprob: -5.3031721115112305
    5. ' else' → logprob: -5.5531721115112305
    6. '           ' → logprob: -5.9281721115112305
    7. ' None' → logprob: -8.92817211151123
    8. 'otherwise' → logprob: -9.05317211151123
    9. 'None' → logprob: -9.05317211151123
    10. ' or' → logprob: -9.42817211151123

Token 403: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.026334786787629128
    2. ' -' → logprob: -3.651334762573242
    3. 'None' → logprob: -10.901334762573242
    4. ' None' → logprob: -11.651334762573242
    5. '       ' → logprob: -12.901334762573242
    6. '           ' → logprob: -13.151334762573242
    7. '-f' → logprob: -14.651334762573242
    8. '   ' → logprob: -14.651334762573242
    9. ' ' → logprob: -14.901334762573242
    10. '-s' → logprob: -15.151334762573242

Token 404: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. '2' → logprob: -17.125
    3. ' ' → logprob: -17.875
    4. '-' → logprob: -18.875
    5. '   ' → logprob: -20.0
    6. '```' → logprob: -20.125
    7. ' -' → logprob: -21.125
    8. '１' → logprob: -21.125
    9. 'sys' → logprob: -21.25
    10. '_' → logprob: -21.25

Token 405: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.029390789568424225
    2. '
' → logprob: -3.654390811920166
    3. ')' → logprob: -6.529390811920166
    4. '```' → logprob: -7.529390811920166
    5. '        
' → logprob: -7.779390811920166
    6. '<|end|>' → logprob: -8.404390335083008
    7. '\n' → logprob: -9.029390335083008
    8. ':' → logprob: -9.404390335083008
    9. '   ' → logprob: -10.279390335083008
    10. '.' → logprob: -10.404390335083008

Token 406: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014391837641596794
    2. ':' → logprob: -4.514391899108887
    3. ':
' → logprob: -6.889391899108887
    4. '):' → logprob: -7.139391899108887
    5. '):
' → logprob: -7.139391899108887
    6. '
' → logprob: -8.014391899108887
    7. '```' → logprob: -8.889391899108887
    8. '        
' → logprob: -9.139391899108887
    9. ')' → logprob: -9.639391899108887
    10. '   ' → logprob: -10.389391899108887

Token 407: ' """
' (ID: 7037)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0020743636414408684
    2. '
' → logprob: -6.627074241638184
    3. '        
' → logprob: -7.252074241638184
    4. '```' → logprob: -10.877074241638184
    5. '    
' → logprob: -12.627074241638184
    6. 'def' → logprob: -13.002074241638184
    7. '   ' → logprob: -13.127074241638184
    8. '        ' → logprob: -13.377074241638184
    9. 'import' → logprob: -13.502074241638184
    10. 'self' → logprob: -13.502074241638184

Token 408: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -2.5822400857578032e-05
    2. 'import' → logprob: -11.000025749206543
    3. 'heap' → logprob: -12.250025749206543
    4. 'queue' → logprob: -13.500025749206543
    5. '        
' → logprob: -14.125025749206543
    6. '```' → logprob: -14.375025749206543
    7. 'start' → logprob: -14.500025749206543
    8. '   ' → logprob: -14.625025749206543
    9. 'def' → logprob: -16.00002670288086
    10. 'from' → logprob: -16.00002670288086

Token 409: ' #' (ID: 1069)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.23467545211315155
    2. 'start' → logprob: -1.734675407409668
    3. 'self' → logprob: -4.484675407409668
    4. 'pq' → logprob: -4.609675407409668
    5. 'heap' → logprob: -5.234675407409668
    6. '       ' → logprob: -5.359675407409668
    7. 'from' → logprob: -7.609675407409668
    8. 'queue' → logprob: -8.109675407409668
    9. 'max' → logprob: -8.484675407409668
    10. 'hq' → logprob: -8.484675407409668

Token 410: ' Initialize' (ID: 19496)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.0949435830116272
    2. 'start' → logprob: -2.9699435234069824
    3. 'self' → logprob: -4.094943523406982
    4. 'pq' → logprob: -4.344943523406982
    5. 'heap' → logprob: -4.969943523406982
    6. 'if' → logprob: -6.719943523406982
    7. 'from' → logprob: -7.094943523406982
    8. 'queue' → logprob: -8.21994400024414
    9. 'hq' → logprob: -8.96994400024414
    10. '#' → logprob: -9.09494400024414

Token 411: ' earliest' (ID: 48721)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.026367876678705215
    2. 'self' → logprob: -4.276367664337158
    3. 'pq' → logprob: -4.776367664337158
    4. 'start' → logprob: -5.776367664337158
    5. 'heap' → logprob: -8.151368141174316
    6. ' import' → logprob: -9.151368141174316
    7. 'queue' → logprob: -9.401368141174316
    8. 'max' → logprob: -9.901368141174316
    9. 'from' → logprob: -10.526368141174316
    10. '   ' → logprob: -11.276368141174316

Token 412: ' arrival' (ID: 24861)
  Prédit: '_arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_arr' → logprob: -0.0003896815178450197
    2. 'arrival' → logprob: -7.875389575958252
    3. 'arr' → logprob: -11.87539005279541
    4. 'Arrival' → logprob: -13.75039005279541
    5. ' arrival' → logprob: -13.87539005279541
    6. '   ' → logprob: -15.37539005279541
    7. '```' → logprob: -16.375389099121094
    8. '\' → logprob: -17.250389099121094
    9. '_queue' → logprob: -17.250389099121094
    10. 'queue' → logprob: -17.250389099121094

Token 413: ' times' (ID: 4238)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.08556779474020004
    2. '_time' → logprob: -3.0855677127838135
    3. '       ' → logprob: -3.8355677127838135
    4. '[self' → logprob: -4.835567951202393
    5. 'self' → logprob: -5.710567951202393
    6. 'time' → logprob: -7.085567951202393
    7. '   ' → logprob: -7.210567951202393
    8. '_times' → logprob: -7.585567951202393
    9. 'times' → logprob: -7.835567951202393
    10. ' =' → logprob: -8.085567474365234

Token 414: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02536861225962639
    2. 'self' → logprob: -3.9003686904907227
    3. '[' → logprob: -6.025368690490723
    4. ' self' → logprob: -7.275368690490723
    5. '
' → logprob: -7.775368690490723
    6. ' for' → logprob: -7.775368690490723
    7. 'import' → logprob: -7.900368690490723
    8. '        
' → logprob: -8.900368690490723
    9. '[self' → logprob: -9.150368690490723
    10. ' =' → logprob: -9.150368690490723

Token 415: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006962585728615522
    2. 'self' → logprob: -5.131962776184082
    3. ' for' → logprob: -7.881962776184082
    4. ' self' → logprob: -8.006962776184082
    5. ' at' → logprob: -8.881962776184082
    6. ' and' → logprob: -9.631962776184082
    7. 'for' → logprob: -10.256962776184082
    8. 'import' → logprob: -11.006962776184082
    9. ',' → logprob: -11.006962776184082
    10. '[' → logprob: -11.131962776184082

Token 416: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.042926449328660965
    2. 'import' → logprob: -3.917926549911499
    3. '       ' → logprob: -4.04292631149292
    4. ' self' → logprob: -5.79292631149292
    5. 'for' → logprob: -6.54292631149292
    6. 'from' → logprob: -10.292926788330078
    7. ' import' → logprob: -10.542926788330078
    8. ' for' → logprob: -10.792926788330078
    9. '```' → logprob: -12.167926788330078
    10. 'heap' → logprob: -12.542926788330078

Token 417: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -6.034592388459714e-06
    2. ' .' → logprob: -12.750005722045898
    3. 'ear' → logprob: -12.875005722045898
    4. '```' → logprob: -16.2500057220459
    5. '​.' → logprob: -16.6250057220459
    6. '\.' → logprob: -17.1250057220459
    7. '._' → logprob: -17.2500057220459
    8. '
' → logprob: -17.3750057220459
    9. '`.' → logprob: -17.6250057220459
    10. '.e' → logprob: -17.6250057220459

Token 418: 'ear' (ID: 830)
  Prédit: 'ear'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ear' → logprob: -3.054500666621607e-06
    2. ' earliest' → logprob: -13.00000286102295
    3. 'arrival' → logprob: -15.00000286102295
    4. 'def' → logprob: -15.37500286102295
    5. 'import' → logprob: -16.625003814697266
    6. 'early' → logprob: -16.875003814697266
    7. '   ' → logprob: -16.875003814697266
    8. '
' → logprob: -18.000003814697266
    9. 'for' → logprob: -18.625003814697266
    10. 'heap' → logprob: -19.250003814697266

Token 419: 'liest' (ID: 34647)
  Prédit: 'est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'est' → logprob: -0.04711097106337547
    2. 'ar' → logprob: -4.2971110343933105
    3. 'al' → logprob: -4.6721110343933105
    4. 'liest' → logprob: -5.0471110343933105
    5. 'arl' → logprob: -5.6721110343933105
    6. 'arr' → logprob: -5.7971110343933105
    7. 'ear' → logprob: -5.7971110343933105
    8. 'alist' → logprob: -6.6721110343933105
    9. 'arst' → logprob: -7.1721110343933105
    10. 'rest' → logprob: -7.1721110343933105

Token 420: '_arr' (ID: 25121)
  Prédit: '_arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_arr' → logprob: -9.088346359931165e-07
    2. '```' → logprob: -15.875000953674316
    3. '[' → logprob: -16.0
    4. '[_' → logprob: -16.25
    5. '[arr' → logprob: -16.25
    6. 'arrival' → logprob: -16.25
    7. '_' → logprob: -16.5
    8. '\' → logprob: -16.875
    9. '_time' → logprob: -17.0
    10. ' _' → logprob: -17.125

Token 421: 'ival' (ID: 4552)
  Prédit: 'ival'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ival' → logprob: -5.085517113911919e-05
    2. 'val' → logprob: -10.00005054473877
    3. 'al' → logprob: -12.75005054473877
    4. '_val' → logprob: -13.50005054473877
    5. '_arr' → logprob: -15.50005054473877
    6. '_time' → logprob: -16.000051498413086
    7. 'oval' → logprob: -16.125051498413086
    8. 'ivals' → logprob: -16.375051498413086
    9. 't' → logprob: -16.625051498413086
    10. '[' → logprob: -16.625051498413086

Token 422: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.842555426876061e-06
    2. '=' → logprob: -12.875004768371582
    3. ' =' → logprob: -13.250004768371582
    4. ' [' → logprob: -15.000004768371582
    5. '```' → logprob: -16.8750057220459
    6. '=[' → logprob: -17.0000057220459
    7. '   ' → logprob: -17.3750057220459
    8. '][' → logprob: -19.2500057220459
    9. '[self' → logprob: -19.7500057220459
    10. '
' → logprob: -19.8750057220459

Token 423: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.246537173457909e-06
    2. '[' → logprob: -13.250003814697266
    3. ']' → logprob: -13.625003814697266
    4. '][' → logprob: -14.375003814697266
    5. '0' → logprob: -14.750003814697266
    6. ' ' → logprob: -15.125003814697266
    7. 'start' → logprob: -16.750003814697266
    8. '   ' → logprob: -17.500003814697266
    9. ',' → logprob: -17.625003814697266
    10. '
' → logprob: -17.750003814697266

Token 424: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.000840715249069035
    2. ' ]' → logprob: -7.250840663909912
    3. ']=' → logprob: -9.12584114074707
    4. '=' → logprob: -11.12584114074707
    5. ' =' → logprob: -11.87584114074707
    6. '0' → logprob: -16.25084114074707
    7. ')' → logprob: -16.50084114074707
    8. ',' → logprob: -17.12584114074707
    9. '`]' → logprob: -18.12584114074707
    10. '[' → logprob: -18.50084114074707

Token 425: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.029750484973192215
    2. ' =' → logprob: -3.5297505855560303
    3. ']=' → logprob: -17.90475082397461
    4. '0' → logprob: -18.02975082397461
    5. ']' → logprob: -18.52975082397461
    6. ')' → logprob: -19.02975082397461
    7. '＝' → logprob: -19.02975082397461
    8. ')=' → logprob: -19.15475082397461
    9. '=int' → logprob: -19.90475082397461
    10. ' ' → logprob: -20.02975082397461

Token 426: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.5048530030981055e-06
    2. '1' → logprob: -14.250001907348633
    3. ' ' → logprob: -14.375001907348633
    4. '-' → logprob: -16.875001907348633
    5. '```' → logprob: -17.187501907348633
    6. '   ' → logprob: -17.500001907348633
    7. '۰' → logprob: -17.812501907348633
    8. '_' → logprob: -18.187501907348633
    9. ' ' → logprob: -18.250001907348633
    10. '00' → logprob: -18.375001907348633

Token 427: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.4849443838757e-06
    2. '1' → logprob: -12.625004768371582
    3. '-' → logprob: -15.000004768371582
    4. ' ' → logprob: -15.000004768371582
    5. '```' → logprob: -17.375003814697266
    6. '9' → logprob: -17.500003814697266
    7. '۰' → logprob: -17.500003814697266
    8. '00' → logprob: -17.625003814697266
    9. '10' → logprob: -17.750003814697266
    10. '2' → logprob: -17.812503814697266

Token 428: ' ' (ID: 220)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02711033821105957
    2. '
' → logprob: -3.6521103382110596
    3. 'queue' → logprob: -8.27711009979248
    4. '        
' → logprob: -8.52711009979248
    5. 'heap' → logprob: -9.27711009979248
    6. 'import' → logprob: -9.65211009979248
    7. '
' → logprob: -10.15211009979248
    8. '```' → logprob: -10.15211009979248
    9. 'pq' → logprob: -10.27711009979248
    10. '' → logprob: -10.90211009979248

Token 429: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0018998401938006282
    2. '
' → logprob: -7.001899719238281
    3. 'queue' → logprob: -7.751899719238281
    4. 'heap' → logprob: -7.876899719238281
    5. 'pq' → logprob: -9.251899719238281
    6. 'priority' → logprob: -10.626899719238281
    7. 'import' → logprob: -11.126899719238281
    8. '        
' → logprob: -11.251899719238281
    9. '	' → logprob: -12.001899719238281
    10. '   ' → logprob: -12.251899719238281

Token 430: ' start' (ID: 1604)
  Prédit: 'pq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pq' → logprob: -1.3441005945205688
    2. 'import' → logprob: -1.5941005945205688
    3. 'heap' → logprob: -1.7191005945205688
    4. '       ' → logprob: -1.9691005945205688
    5. 'start' → logprob: -2.0941004753112793
    6. 'queue' → logprob: -2.4691004753112793
    7. ' heap' → logprob: -5.469100475311279
    8. '#' → logprob: -6.594100475311279
    9. ' pq' → logprob: -7.469100475311279
    10. '        
' → logprob: -7.594100475311279

Token 431: ' island' (ID: 18149)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.021981652826070786
    2. '
' → logprob: -3.896981716156006
    3. '        
' → logprob: -6.896981716156006
    4. 'import' → logprob: -9.146981239318848
    5. ' queue' → logprob: -9.396981239318848
    6. 'queue' → logprob: -10.021981239318848
    7. '<|end|>' → logprob: -10.271981239318848
    8. '        ' → logprob: -10.771981239318848
    9. 'time' → logprob: -10.896981239318848
    10. ',' → logprob: -11.146981239318848

Token 432: ' at' (ID: 540)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005507661495357752
    2. '
' → logprob: -5.255507469177246
    3. 'queue' → logprob: -10.005507469177246
    4. ',' → logprob: -10.130507469177246
    5. 'import' → logprob: -10.380507469177246
    6. 'heap' → logprob: -10.505507469177246
    7. '        
' → logprob: -10.630507469177246
    8. '   ' → logprob: -11.130507469177246
    9. '<|end|>' → logprob: -11.130507469177246
    10. ' queue' → logprob: -11.255507469177246

Token 433: ' time' (ID: 1058)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.20166923105716705
    2. 'time' → logprob: -1.7016692161560059
    3. ' time' → logprob: -9.076669692993164
    4. 'arrival' → logprob: -9.201669692993164
    5. ' ' → logprob: -10.826669692993164
    6. 'start' → logprob: -11.576669692993164
    7. 'zero' → logprob: -11.701669692993164
    8. 'departure' → logprob: -13.451669692993164
    9. 't' → logprob: -13.951669692993164
    10. '```' → logprob: -15.576669692993164

Token 434: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.15310683415737e-05
    2. ' ' → logprob: -10.750021934509277
    3. '```' → logprob: -20.50002098083496
    4. '=' → logprob: -21.12502098083496
    5. '1' → logprob: -21.25002098083496
    6. '_' → logprob: -22.87502098083496
    7. '00' → logprob: -22.87502098083496
    8. '   ' → logprob: -22.87502098083496
    9. '`' → logprob: -22.87502098083496
    10. '       ' → logprob: -23.00002098083496

Token 435: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.125
    3. '```' → logprob: -20.375
    4. '=' → logprob: -21.25
    5. '۰' → logprob: -21.625
    6. '   ' → logprob: -21.625
    7. '000' → logprob: -21.75
    8. '00' → logprob: -21.75
    9. '
' → logprob: -22.125
    10. 'zero' → logprob: -22.125

Token 436: '
        
' (ID: 20417)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001183204003609717
    2. '
' → logprob: -7.001183032989502
    3. '        
' → logprob: -8.62618350982666
    4. 'queue' → logprob: -10.62618350982666
    5. 'pq' → logprob: -10.62618350982666
    6. 'import' → logprob: -11.37618350982666
    7. 'heap' → logprob: -11.75118350982666
    8. 'priority' → logprob: -11.75118350982666
    9. '   ' → logprob: -12.50118350982666
    10. '	' → logprob: -12.62618350982666

Token 437: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -8.780830830801278e-05
    2. 'import' → logprob: -9.62508773803711
    3. 'queue' → logprob: -11.12508773803711
    4. 'heap' → logprob: -12.62508773803711
    5. 'pq' → logprob: -13.37508773803711
    6. '   ' → logprob: -13.75008773803711
    7. 'priority' → logprob: -15.25008773803711
    8. '	' → logprob: -15.25008773803711
    9. '```' → logprob: -15.25008773803711
    10. '           ' → logprob: -16.62508773803711

Token 438: ' #' (ID: 1069)
  Prédit: 'pq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pq' → logprob: -0.24405819177627563
    2. 'heap' → logprob: -1.7440581321716309
    3. 'import' → logprob: -3.494058132171631
    4. 'queue' → logprob: -4.494058132171631
    5. 'priority' → logprob: -9.494058609008789
    6. '   ' → logprob: -9.994058609008789
    7. 'hq' → logprob: -9.994058609008789
    8. '       ' → logprob: -10.744058609008789
    9. ' pq' → logprob: -12.619058609008789
    10. 'min' → logprob: -13.244058609008789

Token 439: ' Priority' (ID: 54625)
  Prédit: 'pq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pq' → logprob: -0.49457213282585144
    2. 'heap' → logprob: -0.9945721626281738
    3. 'import' → logprob: -4.494572162628174
    4. 'queue' → logprob: -4.744572162628174
    5. 'priority' → logprob: -8.244571685791016
    6. 'hq' → logprob: -8.994571685791016
    7. 'min' → logprob: -10.619571685791016
    8. ' heap' → logprob: -12.994571685791016
    9. ' pq' → logprob: -12.994571685791016
    10. '   ' → logprob: -14.119571685791016

Token 440: ' queue' (ID: 13661)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.5062233805656433
    2. '_queue' → logprob: -1.006223440170288
    3. 'q' → logprob: -3.756223440170288
    4. ' queue' → logprob: -4.881223201751709
    5. 'que' → logprob: -7.506223201751709
    6. 'Queue' → logprob: -9.756223678588867
    7. '_' → logprob: -10.631223678588867
    8. '   ' → logprob: -11.381223678588867
    9. 'heap' → logprob: -11.631223678588867
    10. '_q' → logprob: -12.131223678588867

Token 441: ' for' (ID: 395)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9268124103546143
    2. 'pq' → logprob: -1.3018124103546143
    3. '       ' → logprob: -2.0518124103546143
    4. 'queue' → logprob: -2.3018124103546143
    5. 'heap' → logprob: -3.4268124103546143
    6. '=' → logprob: -3.4268124103546143
    7. 'q' → logprob: -4.426812171936035
    8. ' queue' → logprob: -4.426812171936035
    9. ' pq' → logprob: -4.926812171936035
    10. ' heap' → logprob: -5.176812171936035

Token 442: ' D' (ID: 415)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.013290932402014732
    2. 'pq' → logprob: -5.013290882110596
    3. 'queue' → logprob: -5.888290882110596
    4. ' heap' → logprob: -5.888290882110596
    5. 'states' → logprob: -7.513290882110596
    6. 'q' → logprob: -8.263291358947754
    7. 'hq' → logprob: -9.888291358947754
    8. '   ' → logprob: -10.138291358947754
    9. ' states' → logprob: -10.388291358947754
    10. 'state' → logprob: -10.763291358947754

Token 443: 'ijkstra' (ID: 124290)
  Prédit: 'ijkstra'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ijkstra' → logprob: -0.004656188189983368
    2. 'ijk' → logprob: -6.0046563148498535
    3. 'ij' → logprob: -7.3796563148498535
    4. 'ef' → logprob: -7.5046563148498535
    5. '   ' → logprob: -7.8796563148498535
    6. 'jik' → logprob: -8.504655838012695
    7. 'fs' → logprob: -9.879655838012695
    8. '-' → logprob: -9.879655838012695
    9. '[' → logprob: -10.004655838012695
    10. 'efs' → logprob: -10.004655838012695

Token 444: '-like' (ID: 22085)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8141772150993347
    2. 'queue' → logprob: -1.6891772747039795
    3. 'q' → logprob: -2.3141772747039795
    4. ' =' → logprob: -2.6891772747039795
    5. 'pq' → logprob: -2.8141772747039795
    6. 'heap' → logprob: -2.9391772747039795
    7. '=' → logprob: -3.4391772747039795
    8. ' queue' → logprob: -3.5641772747039795
    9. '(queue' → logprob: -4.1891770362854
    10. '(heap' → logprob: -5.1891770362854

Token 445: ' approach' (ID: 7139)
  Prédit: ' search'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' search' → logprob: -0.6485733985900879
    2. 'search' → logprob: -1.648573398590088
    3. ' processing' → logprob: -2.648573398590088
    4. ' algorithm' → logprob: -2.898573398590088
    5. 'algorithm' → logprob: -3.648573398590088
    6. 'heap' → logprob: -3.648573398590088
    7. ' states' → logprob: -3.898573398590088
    8. 'queue' → logprob: -4.148573398590088
    9. ' queue' → logprob: -4.523573398590088
    10. ' heap' → logprob: -4.523573398590088

Token 446: ' pushing' (ID: 34364)
  Prédit: 'pq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pq' → logprob: -0.6114148497581482
    2. '       ' → logprob: -1.361414909362793
    3. 'queue' → logprob: -2.111414909362793
    4. 'heap' → logprob: -2.861414909362793
    5. ' queue' → logprob: -4.611414909362793
    6. ' heap' → logprob: -5.236414909362793
    7. ' pq' → logprob: -5.486414909362793
    8. 'q' → logprob: -6.236414909362793
    9. '
' → logprob: -7.361414909362793
    10. 'import' → logprob: -7.986414909362793

Token 447: ' (' (ID: 350)
  Prédit: 'State'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'State' → logprob: -0.02080567553639412
    2. ' State' → logprob: -4.270805835723877
    3. 'heap' → logprob: -5.395805835723877
    4. '   ' → logprob: -6.770805835723877
    5. '       ' → logprob: -7.270805835723877
    6. '(State' → logprob: -8.895805358886719
    7. '           ' → logprob: -10.645805358886719
    8. ' heap' → logprob: -10.770805358886719
    9. '_state' → logprob: -10.895805358886719
    10. '	State' → logprob: -11.770805358886719

Token 448: 'arrival' (ID: 183251)
  Prédit: 'State'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'State' → logprob: -0.0010330495424568653
    2. 'self' → logprob: -7.126032829284668
    3. ' State' → logprob: -9.126032829284668
    4. 'state' → logprob: -9.751032829284668
    5. '       ' → logprob: -10.751032829284668
    6. '   ' → logprob: -10.876032829284668
    7. '(State' → logprob: -12.501032829284668
    8. '           ' → logprob: -12.751032829284668
    9. ')' → logprob: -12.876032829284668
    10. 'heap' → logprob: -13.001032829284668

Token 449: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.00042507401667535305
    2. '_' → logprob: -9.250425338745117
    3. 'time' → logprob: -9.250425338745117
    4. ',' → logprob: -9.500425338745117
    5. ')' → logprob: -9.625425338745117
    6. '       ' → logprob: -9.875425338745117
    7. ')_' → logprob: -11.375425338745117
    8. '_state' → logprob: -11.500425338745117
    9. 'Time' → logprob: -12.000425338745117
    10. '   ' → logprob: -12.750425338745117

Token 450: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001458808546885848
    2. ')' → logprob: -6.626458644866943
    3. ' ,' → logprob: -10.001459121704102
    4. ',
' → logprob: -10.126459121704102
    5. ',)' → logprob: -11.251459121704102
    6. 'import' → logprob: -11.626459121704102
    7. '[' → logprob: -12.376459121704102
    8. ',state' → logprob: -12.376459121704102
    9. '       ' → logprob: -12.626459121704102
    10. '   ' → logprob: -13.376459121704102

Token 451: ' island' (ID: 18149)
  Prédit: 'State'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'State' → logprob: -0.055709872394800186
    2. 'is' → logprob: -3.8057098388671875
    3. ' State' → logprob: -3.9307098388671875
    4. '1' → logprob: -5.4307098388671875
    5. 'self' → logprob: -5.8057098388671875
    6. 'state' → logprob: -6.3057098388671875
    7. 'Island' → logprob: -6.5557098388671875
    8. ' island' → logprob: -7.4307098388671875
    9. '0' → logprob: -8.430709838867188
    10. ' self' → logprob: -8.555709838867188

Token 452: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005001319805160165
    2. ')
' → logprob: -7.750500202178955
    3. ' )' → logprob: -10.375499725341797
    4. ',' → logprob: -10.875499725341797
    5. '),' → logprob: -11.875499725341797
    6. '   ' → logprob: -12.500499725341797
    7. '       ' → logprob: -13.000499725341797
    8. '))' → logprob: -13.125499725341797
    9. 'state' → logprob: -13.625499725341797
    10. ').' → logprob: -15.125499725341797

Token 453: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.45655542612075806
    2. 'heap' → logprob: -1.7065553665161133
    3. 'pq' → logprob: -2.0815553665161133
    4. 'queue' → logprob: -3.3315553665161133
    5. 'import' → logprob: -4.581555366516113
    6. ' heap' → logprob: -4.706555366516113
    7. ',' → logprob: -6.456555366516113
    8. 'q' → logprob: -6.706555366516113
    9. '
' → logprob: -6.956555366516113
    10. ' queue' → logprob: -7.706555366516113

Token 454: ' heap' (ID: 37237)
  Prédit: 'pq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pq' → logprob: -0.27118125557899475
    2. 'heap' (adapté à ' heap') → logprob: -1.5211812257766724
    3. 'queue' → logprob: -4.271181106567383
    4. '       ' → logprob: -6.021181106567383
    5. 'import' → logprob: -6.021181106567383
    6. '   ' → logprob: -9.146181106567383
    7. 'hq' → logprob: -9.146181106567383
    8. ' heap' → logprob: -11.146181106567383
    9. ' pq' → logprob: -11.146181106567383
    10. 'priority' → logprob: -12.646181106567383

Token 455: ':' (ID: 25)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.011951349675655365
    2. '.' → logprob: -4.886951446533203
    3. '.he' → logprob: -6.261951446533203
    4. '.push' → logprob: -7.261951446533203
    5. '.heap' → logprob: -7.261951446533203
    6. ' =' → logprob: -8.011951446533203
    7. '=' → logprob: -8.261951446533203
    8. ' .' → logprob: -8.636951446533203
    9. '.q' → logprob: -8.761951446533203
    10. '.append' → logprob: -11.136951446533203

Token 456: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.005539547186344862
    2. ' List' → logprob: -6.005539417266846
    3. '[]' → logprob: -6.505539417266846
    4. '[List' → logprob: -6.505539417266846
    5. 'list' → logprob: -9.755539894104004
    6. '[]
' → logprob: -12.380539894104004
    7. '=[]' → logprob: -13.505539894104004
    8. '[' → logprob: -13.505539894104004
    9. ' []' → logprob: -13.755539894104004
    10. '[(' → logprob: -14.005539894104004

Token 457: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.028141124173998833
    2. '[(' → logprob: -3.6531410217285156
    3. '   ' → logprob: -7.028141021728516
    4. '=' → logprob: -7.653141021728516
    5. '[
' → logprob: -8.528141021728516
    6. '       ' → logprob: -9.528141021728516
    7. '[List' → logprob: -10.153141021728516
    8. ' =' → logprob: -10.653141021728516
    9. 'import' → logprob: -10.778141021728516
    10. '```' → logprob: -11.028141021728516

Token 458: 'Tuple' (ID: 40048)
  Prédit: 'Tuple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tuple' → logprob: -0.012568755075335503
    2. 'State' → logprob: -4.387568950653076
    3. '[' → logprob: -10.137568473815918
    4. ' Tuple' → logprob: -11.012568473815918
    5. 'tuple' → logprob: -13.137568473815918
    6. '   ' → logprob: -14.637568473815918
    7. ' State' → logprob: -15.637568473815918
    8. 'state' → logprob: -16.012569427490234
    9. 'Tu' → logprob: -16.387569427490234
    10. 'Optional' → logprob: -16.887569427490234

Token 459: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -7.896309739408025e-07
    2. ',int' → logprob: -15.125000953674316
    3. '(int' → logprob: -15.500000953674316
    4. 'int' → logprob: -17.0
    5. '[' → logprob: -17.125
    6. '[in' → logprob: -17.375
    7. ']' → logprob: -18.0
    8. '[(' → logprob: -18.375
    9. '   ' → logprob: -19.0
    10. '[
' → logprob: -19.5

Token 460: ',int' (ID: 20909)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004803784657269716
    2. ',int' → logprob: -5.379803657531738
    3. '[int' → logprob: -8.629803657531738
    4. ' ,' → logprob: -13.254803657531738
    5. 'int' → logprob: -13.504803657531738
    6. ',List' → logprob: -14.379803657531738
    7. ',
' → logprob: -14.879803657531738
    8. '[' → logprob: -15.379803657531738
    9. '   ' → logprob: -15.504803657531738
    10. ',Integer' → logprob: -16.254804611206055

Token 461: ']]' (ID: 8928)
  Prédit: ']]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']]' → logprob: -0.0025988419074565172
    2. ',' → logprob: -6.002598762512207
    3. ']]=' → logprob: -9.502598762512207
    4. ']' → logprob: -10.877598762512207
    5. ']]
' → logprob: -11.252598762512207
    6. ' ]]' → logprob: -11.627598762512207
    7. '   ' → logprob: -13.377598762512207
    8. ')]' → logprob: -13.877598762512207
    9. ']]]' → logprob: -14.002598762512207
    10. ']],' → logprob: -14.127598762512207

Token 462: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6939670443534851
    2. ' =' → logprob: -0.6939670443534851
    3. '=[]' → logprob: -7.318966865539551
    4. '=[]
' → logprob: -10.19396686553955
    5. '       ' → logprob: -10.31896686553955
    6. '.append' → logprob: -10.31896686553955
    7. '   ' → logprob: -11.31896686553955
    8. ',' → logprob: -11.44396686553955
    9. ')' → logprob: -12.31896686553955
    10. '=[' → logprob: -12.69396686553955

Token 463: ' []
' (ID: 8911)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.0013191659236326814
    2. '[]
' → logprob: -7.50131893157959
    3. '[]' → logprob: -7.75131893157959
    4. ' [(' → logprob: -8.00131893157959
    5. '[' → logprob: -14.75131893157959
    6. ' []
' → logprob: -15.75131893157959
    7. '[]

' → logprob: -16.251319885253906
    8. '[
' → logprob: -17.376319885253906
    9. ' []' → logprob: -17.626319885253906
    10. '[((' → logprob: -17.751319885253906

Token 464: '       ' (ID: 309)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.07419770210981369
    2. ' heap' → logprob: -3.074197769165039
    3. '       ' → logprob: -3.699197769165039
    4. '(heap' → logprob: -7.949197769165039
    5. 'he' → logprob: -9.324197769165039
    6. '.heap' → logprob: -9.824197769165039
    7. 'import' → logprob: -10.824197769165039
    8. ',' → logprob: -11.449197769165039
    9. '_heap' → logprob: -12.824197769165039
    10. '```' → logprob: -13.074197769165039

Token 465: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' (adapté à ' heap') → logprob: -0.002493256703019142
    2. ' heap' → logprob: -6.127493381500244
    3. '       ' → logprob: -8.252492904663086
    4. 'import' → logprob: -10.252492904663086
    5. 'he' → logprob: -11.752492904663086
    6. '(heap' → logprob: -12.752492904663086
    7. '.heap' → logprob: -14.752492904663086
    8. '   ' → logprob: -15.627492904663086
    9. '```' → logprob: -15.877492904663086
    10. '_heap' → logprob: -16.002492904663086

Token 466: 'q' (ID: 80)
  Prédit: '.he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.he' → logprob: -0.9335029125213623
    2. '.' → logprob: -1.1835029125213623
    3. '.append' → logprob: -2.0585029125213623
    4. 'q' → logprob: -2.0585029125213623
    5. '.push' → logprob: -3.3085029125213623
    6. '.heap' → logprob: -4.933503150939941
    7. ').' → logprob: -7.808503150939941
    8. 'app' → logprob: -8.433503150939941
    9. ' .' → logprob: -8.933503150939941
    10. '.put' → logprob: -9.058503150939941

Token 467: '.he' (ID: 67786)
  Prédit: '.he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.he' → logprob: -0.0003396343090571463
    2. '.heap' → logprob: -8.12533950805664
    3. '.' → logprob: -10.12533950805664
    4. '.push' → logprob: -12.87533950805664
    5. '.put' → logprob: -14.75033950805664
    6. ').' → logprob: -15.50033950805664
    7. 'he' → logprob: -16.00033950805664
    8. '.enqueue' → logprob: -16.50033950805664
    9. ' .' → logprob: -16.75033950805664
    10. '.h' → logprob: -17.87533950805664

Token 468: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -9.014684110297821e-06
    2. 'ap' → logprob: -11.750008583068848
    3. 'pp' → logprob: -13.750008583068848
    4. 'a' → logprob: -18.625009536743164
    5. 'push' → logprob: -19.125009536743164
    6. 'appen' → logprob: -20.500009536743164
    7. '```' → logprob: -20.750009536743164
    8. '[' → logprob: -21.250009536743164
    9. 'q' → logprob: -21.625009536743164
    10. ' app' → logprob: -21.625009536743164

Token 469: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -0.32784590125083923
    2. 'push' → logprob: -1.3278459310531616
    3. 'p' → logprob: -5.452846050262451
    4. 'n' → logprob: -6.077846050262451
    5. 'Push' → logprob: -6.452846050262451
    6. 'r' → logprob: -6.702846050262451
    7. 'nd' → logprob: -6.827846050262451
    8. 'app' → logprob: -7.202846050262451
    9. 'm' → logprob: -7.577846050262451
    10. 'u' → logprob: -7.952846050262451

Token 470: '(heap' (ID: 173794)
  Prédit: '(heap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(heap' → logprob: -1.9361264946837764e-07
    2. '(' → logprob: -15.75
    3. 'heap' → logprob: -17.875
    4. ' (' → logprob: -20.0
    5. '(h' → logprob: -20.25
    6. '(queue' → logprob: -20.875
    7. '(hit' → logprob: -21.5
    8. '(hero' → logprob: -21.625
    9. '(hash' → logprob: -21.875
    10. '.heap' → logprob: -21.875

Token 471: ',' (ID: 11)
  Prédit: '(heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(heap' → logprob: -8.828512363834307e-05
    2. ',' → logprob: -10.000088691711426
    3. '(' → logprob: -10.500088691711426
    4. ')' → logprob: -11.500088691711426
    5. ' (' → logprob: -13.125088691711426
    6. '((' → logprob: -14.000088691711426
    7. 'heap' → logprob: -14.125088691711426
    8. ')(' → logprob: -14.625088691711426
    9. ',(' → logprob: -14.875088691711426
    10. '```' → logprob: -15.000088691711426

Token 472: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.004094073548913002
    2. '(State' → logprob: -5.504094123840332
    3. ' (' → logprob: -11.129094123840332
    4. 'State' → logprob: -14.254094123840332
    5. '(state' → logprob: -15.504094123840332
    6. '(self' → logprob: -16.629093170166016
    7. ')' → logprob: -18.129093170166016
    8. '(S' → logprob: -18.504093170166016
    9. '<State' → logprob: -19.004093170166016
    10. '(Status' → logprob: -19.879093170166016

Token 473: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -16.75
    3. 'self' → logprob: -17.875
    4. '   ' → logprob: -19.75
    5. ')' → logprob: -20.75
    6. '(' → logprob: -20.875
    7. '۰' → logprob: -20.875
    8. '00' → logprob: -21.1875
    9. '```' → logprob: -21.9375
    10. '1' → logprob: -22.0625

Token 474: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.080963092041202e-06
    2. ' ,' → logprob: -12.375004768371582
    3. '1' → logprob: -14.125004768371582
    4. ',
' → logprob: -16.2500057220459
    5. '```' → logprob: -18.5000057220459
    6. '<|end|>' → logprob: -19.2500057220459
    7. '‌,' → logprob: -19.3750057220459
    8. ' ' → logprob: -20.0000057220459
    9. '   ' → logprob: -20.3750057220459
    10. ')' → logprob: -20.3750057220459

Token 475: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.625000953674316
    3. '   ' → logprob: -18.500001907348633
    4. '```' → logprob: -20.125001907348633
    5. ')' → logprob: -21.625001907348633
    6. '۱' → logprob: -21.875001907348633
    7. '`' → logprob: -22.000001907348633
    8. '  ' → logprob: -22.375001907348633
    9. '<|end|>' → logprob: -22.375001907348633
    10. '１' → logprob: -22.750001907348633

Token 476: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0003855093673337251
    2. ')' → logprob: -7.875385284423828
    3. '))
' → logprob: -12.375385284423828
    4. ' ))' → logprob: -14.375385284423828
    5. ')))' → logprob: -15.125385284423828
    6. '       ' → logprob: -16.500385284423828
    7. '));' → logprob: -16.625385284423828
    8. '))

' → logprob: -17.125385284423828
    9. '),' → logprob: -17.750385284423828
    10. ')
' → logprob: -17.875385284423828

Token 477: '        
' (ID: 3564)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12933649122714996
    2. 'while' → logprob: -2.1293365955352783
    3. ' while' → logprob: -6.879336357116699
    4. '
' → logprob: -7.004336357116699
    5. '        
' → logprob: -8.0043363571167
    6. '   ' → logprob: -9.5043363571167
    7. '	while' → logprob: -10.1293363571167
    8. '    
' → logprob: -11.7543363571167
    9. '```' → logprob: -11.7543363571167
    10. '	' → logprob: -13.6293363571167

Token 478: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00863324198871851
    2. 'while' → logprob: -4.758633136749268
    3. ' while' → logprob: -11.633633613586426
    4. '   ' → logprob: -11.633633613586426
    5. '	while' → logprob: -14.383633613586426
    6. '
' → logprob: -15.633633613586426
    7. '        
' → logprob: -16.25863265991211
    8. '	' → logprob: -16.38363265991211
    9. '```' → logprob: -16.88363265991211
    10. '           ' → logprob: -17.63363265991211

Token 479: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -1.0683535037969705e-05
    2. '       ' → logprob: -11.50001049041748
    3. ' while' → logprob: -14.50001049041748
    4. '	while' → logprob: -19.250011444091797
    5. 'While' → logprob: -20.250011444091797
    6. '   ' → logprob: -20.750011444091797
    7. '```' → logprob: -20.750011444091797
    8. '        
' → logprob: -21.000011444091797
    9. 'for' → logprob: -22.250011444091797
    10. '
' → logprob: -22.500011444091797

Token 480: ' heap' (ID: 37237)
  Prédit: ' heap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' heap' → logprob: -0.12693418562412262
    2. 'heap' → logprob: -2.126934289932251
    3. '(heap' → logprob: -12.751934051513672
    4. ' len' → logprob: -13.126934051513672
    5. 'len' → logprob: -13.751934051513672
    6. '.heap' → logprob: -15.876934051513672
    7. '```' → logprob: -18.001934051513672
    8. 'Heap' → logprob: -18.126934051513672
    9. ' ' → logprob: -18.251934051513672
    10. '_heap' → logprob: -18.501934051513672

Token 481: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01643373630940914
    2. ':
' → logprob: -4.1414337158203125
    3. ' and' → logprob: -8.766433715820312
    4. '[' → logprob: -9.141433715820312
    5. '):' → logprob: -9.766433715820312
    6. ',' → logprob: -10.016433715820312
    7. 'and' → logprob: -11.766433715820312
    8. '       ' → logprob: -12.141433715820312
    9. '):
' → logprob: -12.266433715820312
    10. '.' → logprob: -12.891433715820312

Token 482: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01073804497718811
    2. ',' → logprob: -4.885737895965576
    3. 'arrival' → logprob: -6.510737895965576
    4. 'time' → logprob: -6.885737895965576
    5. '_,' → logprob: -8.385738372802734
    6. ',time' → logprob: -9.260738372802734
    7. ' ,' → logprob: -9.760738372802734
    8. ' arrival' → logprob: -9.885738372802734
    9. '```' → logprob: -10.510738372802734
    10. ' time' → logprob: -10.885738372802734

Token 483: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' (adapté à ' current') → logprob: -0.46230918169021606
    2. 'curr' → logprob: -1.2123091220855713
    3. 'cur' → logprob: -3.2123091220855713
    4. 'arrival' → logprob: -3.4623091220855713
    5. ' curr' → logprob: -7.71230936050415
    6. ' current' → logprob: -8.087308883666992
    7. 'arr' → logprob: -9.087308883666992
    8. '           ' → logprob: -9.212308883666992
    9. '(current' → logprob: -10.837308883666992
    10. '   ' → logprob: -11.462308883666992

Token 484: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.0006085559725761414
    2. '_arr' → logprob: -7.500608444213867
    3. '_t' → logprob: -10.000608444213867
    4. '_' → logprob: -12.125608444213867
    5. 'time' → logprob: -13.125608444213867
    6. ')' → logprob: -15.125608444213867
    7. '_distance' → logprob: -15.250608444213867
    8. 'arrival' → logprob: -15.250608444213867
    9. 't' → logprob: -15.375608444213867
    10. '_dist' → logprob: -15.625608444213867

Token 485: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.85104202805087e-05
    2. ',current' → logprob: -9.750078201293945
    3. ' ,' → logprob: -11.375078201293945
    4. ',
' → logprob: -13.125078201293945
    5. ',_' → logprob: -13.125078201293945
    6. ',next' → logprob: -13.750078201293945
    7. ',user' → logprob: -14.125078201293945
    8. ',node' → logprob: -14.750078201293945
    9. ',index' → logprob: -15.250078201293945
    10. ',new' → logprob: -15.250078201293945

Token 486: ' island' (ID: 18149)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.07050350308418274
    2. 'is' → logprob: -3.0705034732818604
    3. ' current' → logprob: -3.9455034732818604
    4. 'u' → logprob: -6.8205037117004395
    5. ' island' → logprob: -7.0705037117004395
    6. 'curr' → logprob: -8.570503234863281
    7. 'node' → logprob: -9.320503234863281
    8. 'cur' → logprob: -9.570503234863281
    9. ' u' → logprob: -11.195503234863281
    10. '```' → logprob: -11.695503234863281

Token 487: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0619712732732296
    2. '=' → logprob: -2.8119711875915527
    3. ')' → logprob: -13.436971664428711
    4. ',' → logprob: -14.686971664428711
    5. ' =
' → logprob: -15.186971664428711
    6. ' ' → logprob: -15.311971664428711
    7. '   ' → logprob: -15.811971664428711
    8. '           ' → logprob: -15.811971664428711
    9. ')=' → logprob: -15.936971664428711
    10. '    ' → logprob: -16.06197166442871

Token 488: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.04858986660838127
    2. ' heap' → logprob: -3.0485899448394775
    3. 'he' → logprob: -13.423589706420898
    4. '(heap' → logprob: -14.673589706420898
    5. '.heap' → logprob: -15.048589706420898
    6. '_heap' → logprob: -16.0485897064209
    7. 'Heap' → logprob: -16.6735897064209
    8. 'hep' → logprob: -17.5485897064209
    9. ' he' → logprob: -18.2985897064209
    10. 'h' → logprob: -18.9235897064209

Token 489: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.00017112065688706934
    2. '[' → logprob: -8.875170707702637
    3. ' =' → logprob: -11.250170707702637
    4. '.pop' → logprob: -11.625170707702637
    5. '.he' → logprob: -12.625170707702637
    6. '=' → logprob: -13.125170707702637
    7. '   ' → logprob: -13.125170707702637
    8. '       ' → logprob: -14.000170707702637
    9. '[q' → logprob: -15.625170707702637
    10. 'Q' → logprob: -15.875170707702637

Token 490: '.he' (ID: 67786)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.20435765385627747
    2. '.he' → logprob: -1.829357624053955
    3. 'app' → logprob: -3.829357624053955
    4. 'op' → logprob: -6.704357624053955
    5. 'he' → logprob: -7.204357624053955
    6. '.' → logprob: -7.954357624053955
    7. '[' → logprob: -9.579358100891113
    8. 'pp' → logprob: -9.954358100891113
    9. '.pop' → logprob: -10.204358100891113
    10. '.heap' → logprob: -10.204358100891113

Token 491: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.10070348531007767
    2. 'pp' → logprob: -2.350703477859497
    3. 'pop' → logprob: -7.975703716278076
    4. 'op' → logprob: -9.475703239440918
    5. 'p' → logprob: -10.225703239440918
    6. '[' → logprob: -10.850703239440918
    7. 'ap' → logprob: -11.225703239440918
    8. 'q' → logprob: -12.725703239440918
    9. '```' → logprob: -13.975703239440918
    10. '.pop' → logprob: -14.475703239440918

Token 492: 'op' (ID: 467)
  Prédit: 'op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.01028790045529604
    2. 'ush' → logprob: -4.760287761688232
    3. 'app' → logprob: -6.635287761688232
    4. 'pop' → logprob: -8.13528823852539
    5. 'pp' → logprob: -10.13528823852539
    6. '[' → logprob: -11.76028823852539
    7. 'p' → logprob: -12.13528823852539
    8. '```' → logprob: -12.38528823852539
    9. 'ap' → logprob: -12.51028823852539
    10. 'q' → logprob: -13.63528823852539

Token 493: '(heap' (ID: 173794)
  Prédit: '(heap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(heap' → logprob: -2.5107177862082608e-05
    2. 'heap' → logprob: -10.625024795532227
    3. '(' → logprob: -14.500024795532227
    4. '(queue' → logprob: -16.125024795532227
    5. '```' → logprob: -16.875024795532227
    6. '(
' → logprob: -17.625024795532227
    7. ' heap' → logprob: -17.875024795532227
    8. ' (' → logprob: -18.125024795532227
    9. '.heap' → logprob: -18.625024795532227
    10. '(host' → logprob: -19.875024795532227

Token 494: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001817297888919711
    2. ')
' → logprob: -8.625182151794434
    3. '           ' → logprob: -13.875182151794434
    4. ')
' → logprob: -15.000182151794434
    5. ')`' → logprob: -15.125182151794434
    6. ' )' → logprob: -15.500182151794434
    7. ')

' → logprob: -16.250181198120117
    8. '       ' → logprob: -16.375181198120117
    9. '))' → logprob: -17.375181198120117
    10. ')#' → logprob: -17.625181198120117

Token 495: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.018216552212834358
    2. '       ' → logprob: -4.268216609954834
    3. '            
' → logprob: -6.768216609954834
    4. 'if' → logprob: -7.143216609954834
    5. '        
' → logprob: -7.268216609954834
    6. ' if' → logprob: -7.393216609954834
    7. '
' → logprob: -7.643216609954834
    8. '```' → logprob: -9.393216133117676
    9. '<|end|>' → logprob: -9.643216133117676
    10. '  
' → logprob: -10.518216133117676

Token 496: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.15209802985191345
    2. '           ' → logprob: -2.6520979404449463
    3. ' if' → logprob: -2.6520979404449463
    4. '       ' → logprob: -9.652097702026367
    5. '            
' → logprob: -11.027097702026367
    6. '               ' → logprob: -13.527097702026367
    7. '
' → logprob: -13.527097702026367
    8. '        
' → logprob: -13.527097702026367
    9. '   ' → logprob: -14.027097702026367
    10. '#' → logprob: -14.152097702026367

Token 497: ' self' (ID: 1051)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.4195796251296997
    2. ' island' → logprob: -1.9195796251296997
    3. 'self' → logprob: -2.04457950592041
    4. ' self' → logprob: -2.79457950592041
    5. ' current' → logprob: -5.41957950592041
    6. 'current' → logprob: -7.04457950592041
    7. ' isla' → logprob: -11.16957950592041
    8. ' ' → logprob: -11.16957950592041
    9. '	self' → logprob: -11.48207950592041
    10. ' isle' → logprob: -11.73207950592041

Token 498: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.038159001618623734
    2. 'ear' → logprob: -3.288158893585205
    3. '.is' → logprob: -9.538159370422363
    4. '.num' → logprob: -11.413159370422363
    5. '.current' → logprob: -11.413159370422363
    6. 'Ear' → logprob: -12.288159370422363
    7. '_' → logprob: -12.413159370422363
    8. '.arr' → logprob: -12.538159370422363
    9. '==' → logprob: -13.663159370422363
    10. 'EAR' → logprob: -13.663159370422363

Token 499: 'ear' (ID: 830)
  Prédit: 'ear'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ear' → logprob: -3.8889261304575484e-06
    2. 'early' → logprob: -12.625003814697266
    3. ' earliest' → logprob: -15.125003814697266
    4. 'is' → logprob: -16.625003814697266
    5. 'ears' → logprob: -17.125003814697266
    6. 'visited' → logprob: -17.750003814697266
    7. 'latest' → logprob: -17.875003814697266
    8. '
' → logprob: -18.250003814697266
    9. '```' → logprob: -18.500003814697266
    10. '`' → logprob: -18.625003814697266

Token 500: 'liest' (ID: 34647)
  Prédit: 'st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'st' → logprob: -0.8215280771255493
    2. 'arr' → logprob: -1.5715280771255493
    3. 'arst' → logprob: -2.1965279579162598
    4. 'ar' → logprob: -2.5715279579162598
    5. 'arrival' → logprob: -2.6965279579162598
    6. 'lst' → logprob: -4.44652795791626
    7. '_arr' → logprob: -4.44652795791626
    8. 'val' → logprob: -4.69652795791626
    9. 'r' → logprob: -4.94652795791626
    10. 'sted' → logprob: -5.19652795791626

Token 501: '_arr' (ID: 25121)
  Prédit: '_arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_arr' → logprob: -2.141186450899113e-05
    2. 'arrival' → logprob: -11.000020980834961
    3. '[arr' → logprob: -12.750020980834961
    4. 'arr' → logprob: -13.625020980834961
    5. '[' → logprob: -15.250020980834961
    6. 'Arrival' → logprob: -16.37502098083496
    7. '	arr' → logprob: -17.50002098083496
    8. '_ar' → logprob: -17.50002098083496
    9. '[current' → logprob: -17.50002098083496
    10. '```' → logprob: -17.50002098083496

Token 502: 'ival' (ID: 4552)
  Prédit: 'ival'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ival' → logprob: -0.0014189229113981128
    2. 'al' → logprob: -6.8764190673828125
    3. 'val' → logprob: -8.001419067382812
    4. '[' → logprob: -10.626419067382812
    5. 'oval' → logprob: -12.126419067382812
    6. 'ive' → logprob: -12.626419067382812
    7. '_time' → logprob: -12.876419067382812
    8. '_val' → logprob: -12.876419067382812
    9. '_arr' → logprob: -13.501419067382812
    10. 'arrival' → logprob: -13.501419067382812

Token 503: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.816093228830141e-06
    2. 'is' → logprob: -13.12500286102295
    3. '```' → logprob: -14.87500286102295
    4. '[ind' → logprob: -15.75000286102295
    5. '   ' → logprob: -16.500001907348633
    6. ' [' → logprob: -16.625001907348633
    7. '[current' → logprob: -17.250001907348633
    8. ')[' → logprob: -18.875001907348633
    9. ' island' → logprob: -19.000001907348633
    10. '[i' → logprob: -19.250001907348633

Token 504: 'is' (ID: 276)
  Prédit: 'is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -2.129266067640856e-05
    2. '[' → logprob: -10.875020980834961
    3. ' island' → logprob: -13.125020980834961
    4. '```' → logprob: -16.00002098083496
    5. ']' → logprob: -16.12502098083496
    6. '][' → logprob: -17.12502098083496
    7. '
' → logprob: -17.62502098083496
    8. '           ' → logprob: -17.75002098083496
    9. '   ' → logprob: -17.75002098083496
    10. ')' → logprob: -18.00002098083496

Token 505: 'land' (ID: 2117)
  Prédit: 'land'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'land' → logprob: -3.1186566047836095e-05
    2. 'and' → logprob: -10.500031471252441
    3. '[' → logprob: -13.000031471252441
    4. 'al' → logprob: -14.750031471252441
    5. 'Land' → logprob: -15.500031471252441
    6. ']' → logprob: -15.875031471252441
    7. 'lan' → logprob: -16.750030517578125
    8. '{' → logprob: -16.875030517578125
    9. 'l' → logprob: -17.250030517578125
    10. '_land' → logprob: -17.375030517578125

Token 506: ']' (ID: 60)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.49126797914505005
    2. '<' → logprob: -1.6162679195404053
    3. ' <' → logprob: -1.7412679195404053
    4. '!=' → logprob: -4.866268157958984
    5. ' !=' → logprob: -5.741268157958984
    6. '<int' → logprob: -6.741268157958984
    7. ')' → logprob: -8.241268157958984
    8. 'is' → logprob: -8.366268157958984
    9. ')<' → logprob: -8.491268157958984
    10. '<data' → logprob: -8.991268157958984

Token 507: ' is' (ID: 382)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.21135081350803375
    2. ' <' → logprob: -2.211350917816162
    3. ' is' → logprob: -2.961350917816162
    4. '!=' → logprob: -3.836350917816162
    5. ' !=' → logprob: -5.211350917816162
    6. '<int' → logprob: -6.586350917816162
    7. 'is' → logprob: -9.586350440979004
    8. '<len' → logprob: -9.586350440979004
    9. '<data' → logprob: -9.711350440979004
    10. '<com' → logprob: -9.711350440979004

Token 508: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.009211604483425617
    2. ' not' → logprob: -5.009211540222168
    3. 'None' → logprob: -6.009211540222168
    4. ' None' → logprob: -10.259211540222168
    5. 'Not' → logprob: -14.259211540222168
    6. 'n' → logprob: -15.009211540222168
    7. '	not' → logprob: -15.134211540222168
    8. '_not' → logprob: -15.259211540222168
    9. 'none' → logprob: -15.259211540222168
    10. 'current' → logprob: -15.884211540222168

Token 509: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -4.584861744660884e-05
    2. ' None' → logprob: -10.000045776367188
    3. 'not' → logprob: -15.625045776367188
    4. '_None' → logprob: -16.500045776367188
    5. '(None' → logprob: -17.250045776367188
    6. 'none' → logprob: -17.500045776367188
    7. 'current' → logprob: -17.875045776367188
    8. '=None' → logprob: -18.375045776367188
    9. '```' → logprob: -19.000045776367188
    10. '   ' → logprob: -19.000045776367188

Token 510: ' and' (ID: 326)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.5768254399299622
    2. ' and' → logprob: -0.8268254399299622
    3. '               ' → logprob: -7.3268256187438965
    4. '           ' → logprob: -8.451825141906738
    5. '                   ' → logprob: -12.201825141906738
    6. '	and' → logprob: -13.326825141906738
    7. '                       ' → logprob: -13.451825141906738
    8. '            ' → logprob: -13.701825141906738
    9. '              ' → logprob: -13.951825141906738
    10. '          ' → logprob: -13.951825141906738

Token 511: ' current' (ID: 2208)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.5816386342048645
    2. 'current' → logprob: -0.8316386342048645
    3. ' current' → logprob: -5.331638813018799
    4. ' self' → logprob: -7.081638813018799
    5. '   ' → logprob: -12.20663833618164
    6. '  ' → logprob: -14.95663833618164
    7. ' ' → logprob: -15.20663833618164
    8. '	current' → logprob: -15.45663833618164
    9. '$current' → logprob: -15.83163833618164
    10. '(current' → logprob: -16.08163833618164

Token 512: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -3.8889261304575484e-06
    2. 'time' → logprob: -12.750003814697266
    3. '>' → logprob: -15.375003814697266
    4. '           ' → logprob: -15.625003814697266
    5. '_arr' → logprob: -16.000003814697266
    6. '_' → logprob: -16.125003814697266
    7. '   ' → logprob: -16.250003814697266
    8. 'Time' → logprob: -17.000003814697266
    9. '       ' → logprob: -17.250003814697266
    10. '_times' → logprob: -17.375003814697266

Token 513: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.0036109976936131716
    2. ' >' → logprob: -5.628611087799072
    3. '">' → logprob: -12.753610610961914
    4. '>
' → logprob: -13.253610610961914
    5. ')>' → logprob: -14.128610610961914
    6. '[' → logprob: -14.253610610961914
    7. '&gt' → logprob: -14.753610610961914
    8. '_' → logprob: -14.753610610961914
    9. '<|end|>' → logprob: -15.003610610961914
    10. ' ' → logprob: -15.128610610961914

Token 514: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0019291093340143561
    2. ' self' → logprob: -6.25192928314209
    3. '   ' → logprob: -15.00192928314209
    4. '=self' → logprob: -17.001928329467773
    5. '	self' → logprob: -17.126928329467773
    6. ' ' → logprob: -17.376928329467773
    7. '```' → logprob: -17.626928329467773
    8. '           ' → logprob: -17.626928329467773
    9. '(self' → logprob: -17.876928329467773
    10. '[self' → logprob: -18.126928329467773

Token 515: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.00029959288076497614
    2. 'ear' → logprob: -8.125299453735352
    3. '._' → logprob: -14.250299453735352
    4. '_' → logprob: -14.625299453735352
    5. '```' → logprob: -14.625299453735352
    6. '.arr' → logprob: -14.875299453735352
    7. '[' → logprob: -15.375299453735352
    8. 'EAR' → logprob: -15.625299453735352
    9. '.e' → logprob: -15.625299453735352
    10. 'Ear' → logprob: -16.12529945373535

Token 516: 'ear' (ID: 830)
  Prédit: 'ear'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ear' → logprob: -2.935296834039036e-06
    2. 'early' → logprob: -12.87500286102295
    3. ' earliest' → logprob: -16.000003814697266
    4. '.' → logprob: -16.750003814697266
    5. '```' → logprob: -17.375003814697266
    6. 'latest' → logprob: -17.375003814697266
    7. '`' → logprob: -18.375003814697266
    8. '_' → logprob: -18.625003814697266
    9. '
' → logprob: -19.000003814697266
    10. 'earth' → logprob: -19.250003814697266

Token 517: 'liest' (ID: 34647)
  Prédit: 'al'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'al' → logprob: -0.7270437479019165
    2. 'est' → logprob: -0.9770437479019165
    3. 'ival' → logprob: -2.477043628692627
    4. 'liest' → logprob: -3.477043628692627
    5. '_arr' → logprob: -4.352043628692627
    6. 'iest' → logprob: -5.227043628692627
    7. 'val' → logprob: -5.727043628692627
    8. 'arr' → logprob: -6.727043628692627
    9. 'st' → logprob: -7.477043628692627
    10. '_val' → logprob: -8.352044105529785

Token 518: '_arr' (ID: 25121)
  Prédit: '_arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_arr' → logprob: -3.273621405242011e-05
    2. 'arrival' → logprob: -10.500032424926758
    3. 'arr' → logprob: -12.625032424926758
    4. '_time' → logprob: -13.625032424926758
    5. 'Arrival' → logprob: -15.625032424926758
    6. '_ar' → logprob: -16.375032424926758
    7. '_is' → logprob: -16.750032424926758
    8. 'time' → logprob: -17.125032424926758
    9. '```' → logprob: -17.375032424926758
    10. '[arr' → logprob: -17.500032424926758

Token 519: 'ival' (ID: 4552)
  Prédit: 'ival'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ival' → logprob: -3.166338137816638e-05
    2. 'val' → logprob: -10.875031471252441
    3. 'al' → logprob: -12.375031471252441
    4. 'iv' → logprob: -13.125031471252441
    5. '[' → logprob: -13.375031471252441
    6. '_val' → logprob: -13.375031471252441
    7. '_arr' → logprob: -13.625031471252441
    8. ' ' → logprob: -14.375031471252441
    9. 'ibal' → logprob: -15.750031471252441
    10. 'ive' → logprob: -15.875031471252441

Token 520: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.128163257315464e-07
    2. '```' → logprob: -16.375
    3. '           ' → logprob: -16.875
    4. '   ' → logprob: -17.75
    5. ' [' → logprob: -17.875
    6. '       ' → logprob: -18.0
    7. 'is' → logprob: -18.125
    8. '               ' → logprob: -18.625
    9. '][' → logprob: -18.75
    10. '[
' → logprob: -19.0

Token 521: 'is' (ID: 276)
  Prédit: 'is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -1.7954958821064793e-05
    2. '[' → logprob: -11.625018119812012
    3. ' island' → logprob: -11.875018119812012
    4. '```' → logprob: -13.875018119812012
    5. ']' → logprob: -15.250018119812012
    6. '
' → logprob: -15.875018119812012
    7. 'Island' → logprob: -16.000017166137695
    8. ')' → logprob: -16.000017166137695
    9. '`' → logprob: -16.250017166137695
    10. '(is' → logprob: -16.750017166137695

Token 522: 'land' (ID: 2117)
  Prédit: 'land'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'land' → logprob: -0.03805674985051155
    2. 'and' → logprob: -3.2880568504333496
    3. 'd' → logprob: -12.163056373596191
    4. 'al' → logprob: -12.663056373596191
    5. '[' → logprob: -13.288056373596191
    6. ']' → logprob: -13.538056373596191
    7. '{' → logprob: -14.663056373596191
    8. ')' → logprob: -14.788056373596191
    9. 'el' → logprob: -14.788056373596191
    10. '   ' → logprob: -15.038056373596191

Token 523: ']:
' (ID: 22152)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.27166396379470825
    2. '):' → logprob: -1.5216639041900635
    3. ':
' → logprob: -4.646664142608643
    4. '):
' → logprob: -4.896664142608643
    5. '           ' → logprob: -6.771664142608643
    6. ']:' → logprob: -8.021663665771484
    7. ':return' → logprob: -8.021663665771484
    8. '               ' → logprob: -8.146663665771484
    9. ')' → logprob: -8.896663665771484
    10. '<|end|>' → logprob: -10.146663665771484

Token 524: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0020109564065933228
    2. 'continue' → logprob: -6.627010822296143
    3. ' continue' → logprob: -7.377010822296143
    4. ':' → logprob: -10.2520112991333
    5. '           ' → logprob: -11.0020112991333
    6. '                   ' → logprob: -12.7520112991333
    7. '_continue' → logprob: -13.5020112991333
    8. ':
' → logprob: -13.6270112991333
    9. 'Continue' → logprob: -14.7520112991333
    10. ' continues' → logprob: -14.8770112991333

Token 525: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.5122410655021667
    2. ' continue' → logprob: -1.0122411251068115
    3. '           ' → logprob: -3.7622411251068115
    4. '               ' → logprob: -4.262240886688232
    5. '_continue' → logprob: -9.38724136352539
    6. '	continue' → logprob: -10.51224136352539
    7. '```' → logprob: -12.51224136352539
    8. '                   ' → logprob: -12.51224136352539
    9. '   ' → logprob: -13.38724136352539
    10. 'Continue' → logprob: -14.13724136352539

Token 526: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.009407306089997292
    2. '       ' → logprob: -5.1344075202941895
    3. '            
' → logprob: -6.5094075202941895
    4. '        
' → logprob: -6.8844075202941895
    5. '    
' → logprob: -7.7594075202941895
    6. '
' → logprob: -8.259407043457031
    7. '   ' → logprob: -9.134407043457031
    8. '  
' → logprob: -10.384407043457031
    9. '<|end|>' → logprob: -10.384407043457031
    10. ' for' → logprob: -11.009407043457031

Token 527: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6481526494026184
    2. '           ' → logprob: -0.7731526494026184
    3. '        
' → logprob: -5.273152828216553
    4. '   ' → logprob: -5.398152828216553
    5. '    
' → logprob: -6.273152828216553
    6. ' for' → logprob: -6.648152828216553
    7. '            
' → logprob: -7.398152828216553
    8. 'for' → logprob: -7.398152828216553
    9. '<|end|>' → logprob: -7.648152828216553
    10. '
' → logprob: -7.898152828216553

Token 528: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1179240420460701
    2. 'for' → logprob: -2.3679239749908447
    3. '           ' → logprob: -4.742924213409424
    4. ' for' → logprob: -4.742924213409424
    5. '        
' → logprob: -9.242923736572266
    6. '   ' → logprob: -10.492923736572266
    7. '```' → logprob: -12.992923736572266
    8. '            
' → logprob: -13.117923736572266
    9. '	for' → logprob: -13.492923736572266
    10. ' ' → logprob: -14.492923736572266

Token 529: ' Explore' (ID: 48055)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00017147827020380646
    2. 'if' → logprob: -8.875171661376953
    3. '           ' → logprob: -10.750171661376953
    4. ' for' → logprob: -11.625171661376953
    5. '       ' → logprob: -14.000171661376953
    6. '            
' → logprob: -15.750171661376953
    7. '   ' → logprob: -16.500171661376953
    8. '#' → logprob: -16.500171661376953
    9. '```' → logprob: -16.625171661376953
    10. 'edges' → logprob: -17.250171661376953

Token 530: ' neighbors' (ID: 31655)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.11511136591434479
    2. 'for' → logprob: -2.3651113510131836
    3. ' edges' → logprob: -4.740111351013184
    4. '           ' → logprob: -5.365111351013184
    5. 'edges' → logprob: -7.240111351013184
    6. ' neighbors' → logprob: -7.990111351013184
    7. '   ' → logprob: -8.865111351013184
    8. '       ' → logprob: -9.240111351013184
    9. 'neighbors' → logprob: -9.740111351013184
    10. '               ' → logprob: -11.365111351013184

Token 531: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.001698749023489654
    2. '       ' → logprob: -6.751698970794678
    3. ' for' → logprob: -7.876698970794678
    4. 'for' → logprob: -9.00169849395752
    5. '        
' → logprob: -12.00169849395752
    6. '            
' → logprob: -12.75169849395752
    7. '
' → logprob: -12.87669849395752
    8. ',' → logprob: -12.87669849395752
    9. '<|end|>' → logprob: -13.00169849395752
    10. '   ' → logprob: -13.37669849395752

Token 532: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.025250984355807304
    2. '       ' → logprob: -4.1502509117126465
    3. ' for' → logprob: -4.9002509117126465
    4. 'for' → logprob: -6.4002509117126465
    5. '   ' → logprob: -10.900251388549805
    6. '
' → logprob: -11.900251388549805
    7. '        
' → logprob: -12.150251388549805
    8. '	       ' → logprob: -12.150251388549805
    9. '```' → logprob: -12.275251388549805
    10. '          ' → logprob: -12.275251388549805

Token 533: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.058667637407779694
    2. '           ' → logprob: -3.5586676597595215
    3. ' for' → logprob: -3.5586676597595215
    4. '       ' → logprob: -11.308667182922363
    5. 'edges' → logprob: -12.183667182922363
    6. '   ' → logprob: -12.558667182922363
    7. '```' → logprob: -12.558667182922363
    8. '            
' → logprob: -14.308667182922363
    9. '	for' → logprob: -14.683667182922363
    10. '               ' → logprob: -15.433667182922363

Token 534: ' edge' (ID: 11165)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edge' → logprob: -0.011048762127757072
    2. ' edge' → logprob: -4.511048793792725
    3. '   ' → logprob: -14.886048316955566
    4. 'e' → logprob: -15.011048316955566
    5. 'Edge' → logprob: -17.136049270629883
    6. '(edge' → logprob: -17.261049270629883
    7. 'neighbor' → logprob: -17.386049270629883
    8. '```' → logprob: -17.386049270629883
    9. '       ' → logprob: -17.761049270629883
    10. '_edge' → logprob: -17.761049270629883

Token 535: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0036050593480467796
    2. 'in' → logprob: -5.628604888916016
    3. '	in' → logprob: -12.753604888916016
    4. ' ' → logprob: -14.253604888916016
    5. 's' → logprob: -14.878604888916016
    6. '_in' → logprob: -15.503604888916016
    7. 'import' → logprob: -15.503604888916016
    8. '  ' → logprob: -16.128604888916016
    9. '   ' → logprob: -16.316104888916016
    10. 'edge' → logprob: -16.503604888916016

Token 536: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0028368495404720306
    2. ' self' → logprob: -5.87783670425415
    3. '           ' → logprob: -10.377837181091309
    4. '               ' → logprob: -15.252837181091309
    5. '(self' → logprob: -15.752837181091309
    6. '[self' → logprob: -15.877837181091309
    7. '   ' → logprob: -16.377836227416992
    8. '       ' → logprob: -16.502836227416992
    9. '                   ' → logprob: -16.752836227416992
    10. '	self' → logprob: -17.252836227416992

Token 537: '.graph' (ID: 18104)
  Prédit: '.graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.graph' → logprob: -0.005374271888285875
    2. '.ad' → logprob: -5.255374431610107
    3. '.' → logprob: -9.25537395477295
    4. 'graph' → logprob: -10.13037395477295
    5. '	graph' → logprob: -13.13037395477295
    6. ' .' → logprob: -13.88037395477295
    7. 'adj' → logprob: -13.88037395477295
    8. ' graph' → logprob: -15.63037395477295
    9. '.edge' → logprob: -15.75537395477295
    10. '.g' → logprob: -15.75537395477295

Token 538: '.ad' (ID: 19775)
  Prédit: '.ad'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.ad' → logprob: -6.873571692267433e-05
    2. ' .' → logprob: -9.875068664550781
    3. '.from' → logprob: -11.250068664550781
    4. '[' → logprob: -12.750068664550781
    5. '.Ad' → logprob: -14.500068664550781
    6. '.' → logprob: -14.875068664550781
    7. '   ' → logprob: -16.00006866455078
    8. '```' → logprob: -16.62506866455078
    9. 'adj' → logprob: -16.87506866455078
    10. '[from' → logprob: -17.00006866455078

Token 539: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -5.3120038501219824e-05
    2. 'jac' → logprob: -10.375053405761719
    3. '[' → logprob: -11.500053405761719
    4. 'adj' → logprob: -12.375053405761719
    5. '[j' → logprob: -12.625053405761719
    6. 'js' → logprob: -13.500053405761719
    7. 'd' → logprob: -14.000053405761719
    8. 'J' → logprob: -14.875053405761719
    9. 'aj' → logprob: -14.875053405761719
    10. 'dj' → logprob: -16.25005340576172

Token 540: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.320199877838604e-07
    2. '[current' → logprob: -15.625
    3. '[from' → logprob: -15.875
    4. '[to' → logprob: -17.25
    5. '```' → logprob: -17.75
    6. 'is' → logprob: -17.875
    7. ' [' → logprob: -18.0
    8. '[in' → logprob: -18.5
    9. '[ind' → logprob: -19.125
    10. '[node' → logprob: -19.375

Token 541: 'is' (ID: 276)
  Prédit: 'is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.0036035135854035616
    2. '[' → logprob: -5.628603458404541
    3. '```' → logprob: -13.7536039352417
    4. ' island' → logprob: -14.0036039352417
    5. ')' → logprob: -15.3786039352417
    6. '   ' → logprob: -15.3786039352417
    7. '][' → logprob: -15.6286039352417
    8. ')is' → logprob: -15.7536039352417
    9. ']' → logprob: -16.003602981567383
    10. '(is' → logprob: -16.128602981567383

Token 542: 'land' (ID: 2117)
  Prédit: 'land'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'land' → logprob: -0.004634707234799862
    2. 'and' → logprob: -5.379634857177734
    3. 'al' → logprob: -12.004634857177734
    4. '[' → logprob: -12.879634857177734
    5. '.land' → logprob: -14.379634857177734
    6. '_land' → logprob: -14.379634857177734
    7. '```' → logprob: -14.379634857177734
    8. 'l' → logprob: -14.504634857177734
    9. 'eland' → logprob: -14.629634857177734
    10. 'Land' → logprob: -15.129634857177734

Token 543: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.0014378506457433105
    2. ']:
' → logprob: -6.626437664031982
    3. ']' → logprob: -9.50143814086914
    4. ']:
' → logprob: -11.50143814086914
    5. '       ' → logprob: -12.00143814086914
    6. ':' → logprob: -12.00143814086914
    7. '):' → logprob: -12.25143814086914
    8. ']):' → logprob: -13.00143814086914
    9. ']:

' → logprob: -13.12643814086914
    10. ' ]' → logprob: -13.75143814086914

Token 544: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.15470436215400696
    2. '           ' → logprob: -2.0297043323516846
    3. '```' → logprob: -5.404704570770264
    4. '                
' → logprob: -5.904704570770264
    5. '
' → logprob: -6.029704570770264
    6. '            
' → logprob: -7.154704570770264
    7. ' if' → logprob: -8.154704093933105
    8. ',' → logprob: -8.404704093933105
    9. 'next' → logprob: -8.904704093933105
    10. '``' → logprob: -9.279704093933105

Token 545: ' #' (ID: 1069)
  Prédit: 'wait'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'wait' → logprob: -0.48335617780685425
    2. 'next' → logprob: -1.608356237411499
    3. '               ' → logprob: -2.858356237411499
    4. 'arrival' → logprob: -3.483356237411499
    5. 'if' → logprob: -3.608356237411499
    6. ' wait' → logprob: -4.10835599899292
    7. 'arr' → logprob: -4.98335599899292
    8. '                   ' → logprob: -5.10835599899292
    9. 'waiting' → logprob: -5.10835599899292
    10. '```' → logprob: -5.23335599899292

Token 546: ' Wait' (ID: 24305)
  Prédit: 'wait'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'wait' → logprob: -1.0230402946472168
    2. 'next' → logprob: -1.5230402946472168
    3. 'if' → logprob: -1.6480402946472168
    4. 'arrival' → logprob: -2.273040294647217
    5. 'available' → logprob: -3.648040294647217
    6. 'arr' → logprob: -3.773040294647217
    7. 'departure' → logprob: -4.023040294647217
    8. '#' → logprob: -4.148040294647217
    9. 'possible' → logprob: -4.773040294647217
    10. 'new' → logprob: -4.898040294647217

Token 547: ' until' (ID: 4609)
  Prédit: '_time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.006572669371962547
    2. '_' → logprob: -6.006572723388672
    3. '_until' → logprob: -6.381572723388672
    4. ' =' → logprob: -7.006572723388672
    5. '_for' → logprob: -7.631572723388672
    6. '=' → logprob: -8.006572723388672
    7. '_needed' → logprob: -8.256572723388672
    8. '_t' → logprob: -8.881572723388672
    9. 'time' → logprob: -10.006572723388672
    10. '_duration' → logprob: -10.006572723388672

Token 548: ' bridge' (ID: 23273)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edge' → logprob: -0.018625929951667786
    2. ' edge' → logprob: -4.143625736236572
    3. 'current' → logprob: -6.143625736236572
    4. '(edge' → logprob: -8.51862621307373
    5. ' current' → logprob: -9.01862621307373
    6. 'max' → logprob: -9.76862621307373
    7. 'the' → logprob: -10.76862621307373
    8. '=edge' → logprob: -10.89362621307373
    9. ' the' → logprob: -12.26862621307373
    10. ' max' → logprob: -12.76862621307373

Token 549: ' tide' (ID: 69214)
  Prédit: '_time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.6439916491508484
    2. '_t' → logprob: -1.3939917087554932
    3. 't' → logprob: -2.643991708755493
    4. '.t' → logprob: -3.143991708755493
    5. '.' → logprob: -3.393991708755493
    6. 'time' → logprob: -4.018991470336914
    7. '               ' → logprob: -4.518991470336914
    8. ' is' → logprob: -4.893991470336914
    9. '.time' → logprob: -5.268991470336914
    10. '_available' → logprob: -5.393991470336914

Token 550: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.13616758584976196
    2. ' <=' → logprob: -3.261167526245117
    3. '<=' → logprob: -3.886167526245117
    4. ' >=' → logprob: -4.386167526245117
    5. ' if' → logprob: -4.511167526245117
    6. 'time' → logprob: -4.511167526245117
    7. '>=' → logprob: -4.886167526245117
    8. '==' → logprob: -5.261167526245117
    9. 'if' → logprob: -5.386167526245117
    10. '           ' → logprob: -5.761167526245117

Token 551: ' c' (ID: 274)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.5078860521316528
    2. ' if' → logprob: -1.6328860521316528
    3. ' <=' → logprob: -1.8828860521316528
    4. ',' → logprob: -2.1328859329223633
    5. '<=' → logprob: -2.7578859329223633
    6. ' =' → logprob: -3.2578859329223633
    7. '=' → logprob: -3.2578859329223633
    8. '                   ' → logprob: -3.3828859329223633
    9. ' >=' → logprob: -3.5078859329223633
    10. '>=' → logprob: -3.6328859329223633

Token 552: '_i' (ID: 10853)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.8547025322914124
    2. '>=' → logprob: -1.2297024726867676
    3. ' <=' → logprob: -1.8547024726867676
    4. ' >=' → logprob: -2.3547024726867676
    5. 'le' → logprob: -5.354702472686768
    6. 'om' → logprob: -5.479702472686768
    7. '==' → logprob: -5.729702472686768
    8. '>' → logprob: -6.104702472686768
    9. '=' → logprob: -6.229702472686768
    10. 'urrent' → logprob: -6.729702472686768

Token 553: '
' (ID: 198)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -1.193764328956604
    2. '>=' → logprob: -1.443764328956604
    3. ' >=' → logprob: -1.693764328956604
    4. ' if' → logprob: -2.8187642097473145
    5. ' <=' → logprob: -2.8187642097473145
    6. '<=' → logprob: -3.1937642097473145
    7. '-' → logprob: -3.6937642097473145
    8. ',' → logprob: -3.8187642097473145
    9. '               ' → logprob: -4.0687642097473145
    10. 'if' → logprob: -4.4437642097473145

Token 554: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.020238669589161873
    2. '=' → logprob: -5.020238876342773
    3. ' =' → logprob: -5.770238876342773
    4. ' if' → logprob: -5.895238876342773
    5. ',' → logprob: -6.270238876342773
    6. '                
' → logprob: -6.270238876342773
    7. ' and' → logprob: -6.770238876342773
    8. 'if' → logprob: -7.645238876342773
    9. '                   ' → logprob: -7.770238876342773
    10. '+' → logprob: -7.895238876342773

Token 555: ' if' (ID: 538)
  Prédit: 'wait'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wait' → logprob: -0.8129100203514099
    2. '               ' → logprob: -1.6879100799560547
    3. ' wait' → logprob: -2.1879100799560547
    4. 'next' → logprob: -2.5629100799560547
    5. 'if' (adapté à ' if') → logprob: -2.6879100799560547
    6. ' if' → logprob: -3.0629100799560547
    7. ' next' → logprob: -3.9379100799560547
    8. 'arrival' → logprob: -4.562910079956055
    9. 'new' → logprob: -5.062910079956055
    10. 't' → logprob: -5.062910079956055

Token 556: ' edge' (ID: 11165)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edge' → logprob: -0.7261824011802673
    2. 'current' → logprob: -1.226182460784912
    3. ' edge' → logprob: -1.976182460784912
    4. ' current' → logprob: -2.476182460784912
    5. '   ' → logprob: -10.101181983947754
    6. '(edge' → logprob: -10.101181983947754
    7. 'c' → logprob: -11.038681983947754
    8. ' ' → logprob: -11.163681983947754
    9. '=edge' → logprob: -11.663681983947754
    10. '	current' → logprob: -11.663681983947754

Token 557: '.t' (ID: 1370)
  Prédit: '.t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.t' → logprob: -0.00018732868193183094
    2. '.' → logprob: -9.000186920166016
    3. '.to' → logprob: -10.250186920166016
    4. '.from' → logprob: -12.625186920166016
    5. ' .' → logprob: -13.000186920166016
    6. '```' → logprob: -13.000186920166016
    7. '   ' → logprob: -13.125186920166016
    8. 'from' → logprob: -13.250186920166016
    9. '`.' → logprob: -13.250186920166016
    10. '_.' → logprob: -13.375186920166016

Token 558: 'ide' (ID: 617)
  Prédit: 'ide'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ide' → logprob: -0.4527681767940521
    2. 'ime' → logprob: -1.2027682065963745
    3. 'edge' → logprob: -2.952768087387085
    4. 'e' → logprob: -5.952768325805664
    5. '_time' → logprob: -6.452768325805664
    6. 'time' → logprob: -6.952768325805664
    7. 'i' → logprob: -7.077768325805664
    8. '>' → logprob: -7.202768325805664
    9. '<=' → logprob: -7.202768325805664
    10. '```' → logprob: -7.702768325805664

Token 559: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -9.13388703338569e-06
    2. 'time' → logprob: -12.125009536743164
    3. '_' → logprob: -13.125009536743164
    4. '_t' → logprob: -14.250009536743164
    5. '_tim' → logprob: -14.625009536743164
    6. '_times' → logprob: -16.000009536743164
    7. 'Time' → logprob: -16.125009536743164
    8. 't' → logprob: -17.000009536743164
    9. '>' → logprob: -17.000009536743164
    10. ' time' → logprob: -17.250009536743164

Token 560: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.2603178322315216
    2. ' >=' → logprob: -1.5103178024291992
    3. '<' → logprob: -5.135317802429199
    4. ' <' → logprob: -6.260317802429199
    5. '>' → logprob: -7.760317802429199
    6. '<=' → logprob: -10.6353178024292
    7. ']>=' → logprob: -10.6353178024292
    8. ')>=' → logprob: -10.8853178024292
    9. ' >' → logprob: -11.0103178024292
    10. ' ' → logprob: -11.0103178024292

Token 561: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.0031781906727701426
    2. ' current' → logprob: -5.753178119659424
    3. '=current' → logprob: -15.503178596496582
    4. '_current' → logprob: -16.003177642822266
    5. 'self' → logprob: -17.378177642822266
    6. '(current' → logprob: -17.628177642822266
    7. '$current' → logprob: -17.753177642822266
    8. '	current' → logprob: -18.253177642822266
    9. '[current' → logprob: -18.253177642822266
    10. 'cur' → logprob: -18.503177642822266

Token 562: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -2.5776860184123507e-06
    2. 'time' → logprob: -13.00000286102295
    3. '_' → logprob: -15.87500286102295
    4. '_t' → logprob: -16.250001907348633
    5. 'Time' → logprob: -17.875001907348633
    6. '_tim' → logprob: -18.250001907348633
    7. '"time' → logprob: -19.250001907348633
    8. '_times' → logprob: -19.500001907348633
    9. '   ' → logprob: -19.500001907348633
    10. ' time' → logprob: -19.625001907348633

Token 563: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.47855085134506226
    2. ':
' → logprob: -0.9785508513450623
    3. ' and' → logprob: -6.228550910949707
    4. '               ' → logprob: -6.978550910949707
    5. '                   ' → logprob: -6.978550910949707
    6. ',' → logprob: -8.228550910949707
    7. '                       ' → logprob: -8.978550910949707
    8. '):
' → logprob: -9.603550910949707
    9. ':

' → logprob: -10.103550910949707
    10. ':
' → logprob: -10.353550910949707

Token 564: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.014747697860002518
    2. ':' → logprob: -5.014747619628906
    3. '               ' → logprob: -5.139747619628906
    4. '                       ' → logprob: -6.764747619628906
    5. ':
' → logprob: -8.389747619628906
    6. ',' → logprob: -8.389747619628906
    7. '                           ' → logprob: -9.139747619628906
    8. '                    
' → logprob: -9.389747619628906
    9. ' and' → logprob: -9.639747619628906
    10. '                    ' → logprob: -9.889747619628906

Token 565: ' new' (ID: 620)
  Prédit: 'wait'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'wait' → logprob: -0.7615371942520142
    2. ' wait' → logprob: -1.1365371942520142
    3. '                   ' → logprob: -1.6365371942520142
    4. 'next' → logprob: -5.261537075042725
    5. 'waiting' → logprob: -5.261537075042725
    6. ' next' → logprob: -6.386537075042725
    7. 'arrival' → logprob: -6.511537075042725
    8. '               ' → logprob: -6.511537075042725
    9. ' waiting' → logprob: -6.636537075042725
    10. ' arrival' → logprob: -8.386537551879883

Token 566: '_arr' (ID: 25121)
  Prédit: '_time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.25208503007888794
    2. '_arr' → logprob: -1.5020849704742432
    3. '_wait' → logprob: -9.252084732055664
    4. 'arrival' → logprob: -10.002084732055664
    5. 'time' → logprob: -12.002084732055664
    6. 'arr' → logprob: -12.877084732055664
    7. '_t' → logprob: -13.377084732055664
    8. '_' → logprob: -14.127084732055664
    9. '```' → logprob: -14.127084732055664
    10. 'Arrival' → logprob: -14.502084732055664

Token 567: 'ival' (ID: 4552)
  Prédit: 'ival'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ival' → logprob: -0.0014623809838667512
    2. 'val' → logprob: -6.751462459564209
    3. '_time' → logprob: -8.50146198272705
    4. 'al' → logprob: -10.25146198272705
    5. '_val' → logprob: -10.62646198272705
    6. '           ' → logprob: -12.12646198272705
    7. '   ' → logprob: -12.50146198272705
    8. '_arr' → logprob: -12.50146198272705
    9. 'arrival' → logprob: -12.75146198272705
    10. '       ' → logprob: -12.87646198272705

Token 568: ' =' (ID: 314)
  Prédit: '_time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.013584024272859097
    2. ' =' → logprob: -4.513584136962891
    3. '=' → logprob: -6.013584136962891
    4. '=_' → logprob: -10.13858413696289
    5. 'time' → logprob: -10.76358413696289
    6. 'Time' → logprob: -11.13858413696289
    7. '_' → logprob: -12.38858413696289
    8. '=time' → logprob: -12.76358413696289
    9. '```' → logprob: -13.63858413696289
    10. '_TIME' → logprob: -13.63858413696289

Token 569: ' edge' (ID: 11165)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edge' → logprob: -0.07891137897968292
    2. ' edge' → logprob: -2.578911304473877
    3. '                   ' → logprob: -11.203911781311035
    4. '=edge' → logprob: -12.453911781311035
    5. '(edge' → logprob: -12.703911781311035
    6. '_edge' → logprob: -15.453911781311035
    7. '   ' → logprob: -15.578911781311035
    8. '               ' → logprob: -15.703911781311035
    9. '                       ' → logprob: -16.20391082763672
    10. '.edge' → logprob: -16.20391082763672

Token 570: '.t' (ID: 1370)
  Prédit: '.t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.t' → logprob: -0.0010412635747343302
    2. '.' → logprob: -6.876041412353516
    3. '`.' → logprob: -13.501041412353516
    4. '.edge' → logprob: -13.501041412353516
    5. '.to' → logprob: -14.126041412353516
    6. '```' → logprob: -14.376041412353516
    7. ' .' → logprob: -14.501041412353516
    8. '.time' → logprob: -14.626041412353516
    9. '\.' → logprob: -15.001041412353516
    10. '       ' → logprob: -15.376041412353516

Token 571: 'ide' (ID: 617)
  Prédit: 'ide'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ide' → logprob: -0.019053511321544647
    2. 't' → logprob: -4.1440534591674805
    3. 'de' → logprob: -7.1440534591674805
    4. 'ime' → logprob: -7.2690534591674805
    5. 'ade' → logprob: -8.01905345916748
    6. '.t' → logprob: -8.26905345916748
    7. 'time' → logprob: -8.26905345916748
    8. 'ode' → logprob: -9.26905345916748
    9. ' tide' → logprob: -9.26905345916748
    10. '_t' → logprob: -9.39405345916748

Token 572: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -3.650518920039758e-06
    2. 'time' → logprob: -12.625003814697266
    3. 'e' → logprob: -16.500003814697266
    4. 'ime' → logprob: -17.250003814697266
    5. '_TIME' → logprob: -17.625003814697266
    6. '.time' → logprob: -17.750003814697266
    7. '               ' → logprob: -17.750003814697266
    8. '_t' → logprob: -17.750003814697266
    9. 'Time' → logprob: -17.875003814697266
    10. '   ' → logprob: -18.125003814697266

Token 573: '
' (ID: 198)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.44705629348754883
    2. '+' → logprob: -1.1970562934875488
    3. '<|end|>' → logprob: -2.947056293487549
    4. '                   ' → logprob: -5.947056293487549
    5. '
' → logprob: -7.197056293487549
    6. '               ' → logprob: -7.322056293487549
    7. '<|end|>' → logprob: -7.447056293487549
    8. '```' → logprob: -8.32205581665039
    9. ',' → logprob: -8.57205581665039
    10. '                        
' → logprob: -8.94705581665039

Token 574: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.3736148774623871
    2. '               ' → logprob: -1.3736149072647095
    3. '<|end|>' → logprob: -3.24861478805542
    4. ')' → logprob: -4.62361478805542
    5. '                    
' → logprob: -5.62361478805542
    6. '                        
' → logprob: -7.12361478805542
    7. '                       ' → logprob: -7.12361478805542
    8. '+' → logprob: -7.24861478805542
    9. '           ' → logprob: -7.37361478805542
    10. '                
' → logprob: -7.49861478805542

Token 575: ' #' (ID: 1069)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -1.0283123254776
    2. 'if' → logprob: -1.4033123254776
    3. '               ' → logprob: -1.4033123254776
    4. ' if' → logprob: -1.9033123254776
    5. '                    
' → logprob: -7.5283122062683105
    6. 'next' → logprob: -8.653312683105469
    7. '                
' → logprob: -8.778312683105469
    8. '           ' → logprob: -9.028312683105469
    9. ' next' → logprob: -9.153312683105469
    10. '#' (adapté à ' #') → logprob: -9.153312683105469

Token 576: ' If' (ID: 1843)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0062720514833927155
    2. '                   ' → logprob: -5.256271839141846
    3. ' if' → logprob: -7.381271839141846
    4. '               ' → logprob: -8.256272315979004
    5. 'current' → logprob: -10.506272315979004
    6. 'next' → logprob: -10.506272315979004
    7. 'existing' → logprob: -10.506272315979004
    8. 'prev' → logprob: -10.631272315979004
    9. 'old' → logprob: -10.881272315979004
    10. '#' → logprob: -11.131272315979004

Token 577: ' we' (ID: 581)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.019683727994561195
    2. ' self' → logprob: -4.019683837890625
    3. '(self' → logprob: -6.769683837890625
    4. '                   ' → logprob: -8.519683837890625
    5. ' (' → logprob: -8.769683837890625
    6. '(' → logprob: -11.019683837890625
    7. '               ' → logprob: -11.769683837890625
    8. '                       ' → logprob: -13.019683837890625
    9. '           ' → logprob: -13.519683837890625
    10. '(
' → logprob: -14.144683837890625

Token 578: ' can' (ID: 665)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.33139362931251526
    2. 'ear' → logprob: -2.2063937187194824
    3. '.' → logprob: -2.9563937187194824
    4. '                   ' → logprob: -4.081393718719482
    5. '[self' → logprob: -4.081393718719482
    6. ' self' → logprob: -4.331393718719482
    7. ' have' → logprob: -4.331393718719482
    8. '                       ' → logprob: -4.456393718719482
    9. ' can' → logprob: -4.456393718719482
    10. 'have' → logprob: -5.331393718719482

Token 579: ' reach' (ID: 7627)
  Prédit: 'im'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'im' → logprob: -0.22012965381145477
    2. 'update' → logprob: -2.5951297283172607
    3. 'arr' → logprob: -2.9701297283172607
    4. ' improve' → logprob: -3.4701297283172607
    5. ' update' → logprob: -4.345129489898682
    6. 'reach' → logprob: -5.095129489898682
    7. ' relax' → logprob: -5.470129489898682
    8. 'rel' → logprob: -5.720129489898682
    9. 'visit' → logprob: -6.220129489898682
    10. ' reach' → logprob: -6.345129489898682

Token 580: ' to' (ID: 316)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.13703963160514832
    2. '[self' → logprob: -3.2620396614074707
    3. ' self' → logprob: -3.3870396614074707
    4. 'edge' → logprob: -3.8870396614074707
    5. 'new' → logprob: -4.262039661407471
    6. '                   ' → logprob: -5.262039661407471
    7. ' new' → logprob: -5.512039661407471
    8. 'the' → logprob: -5.762039661407471
    9. '[new' → logprob: -6.137039661407471
    10. ' the' → logprob: -6.137039661407471

Token 581: '_is' (ID: 15224)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edge' → logprob: -0.30427202582359314
    2. 'self' → logprob: -2.179271936416626
    3. 'new' → logprob: -2.929271936416626
    4. 'the' → logprob: -3.054271936416626
    5. ' edge' → logprob: -4.429272174835205
    6. 'is' → logprob: -4.554272174835205
    7. '_edge' → logprob: -4.554272174835205
    8. ' the' → logprob: -5.304272174835205
    9. '_is' → logprob: -5.929272174835205
    10. ' new' → logprob: -6.054272174835205

Token 582: 'land' (ID: 2117)
  Prédit: 'land'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'land' → logprob: -0.0010763956233859062
    2. 'and' → logprob: -6.8760762214660645
    3. 'Island' → logprob: -11.501076698303223
    4. '_land' → logprob: -11.876076698303223
    5. 'l' → logprob: -12.501076698303223
    6. 'ld' → logprob: -13.001076698303223
    7. 't' → logprob: -13.126076698303223
    8. '
' → logprob: -13.376076698303223
    9. '_' → logprob: -13.501076698303223
    10. 'Land' → logprob: -13.626076698303223

Token 583: ' earlier' (ID: 11965)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.9150137305259705
    2. '                   ' → logprob: -1.0400137901306152
    3. ' with' → logprob: -1.7900137901306152
    4. 'and' → logprob: -3.2900137901306152
    5. ' for' → logprob: -4.290013790130615
    6. 'with' → logprob: -4.290013790130615
    7. ',' → logprob: -5.665013790130615
    8. ' without' → logprob: -6.165013790130615
    9. '               ' → logprob: -6.540013790130615
    10. ' =' → logprob: -6.790013790130615

Token 584: ',' (ID: 11)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.2722160220146179
    2. '                   ' → logprob: -2.1472160816192627
    3. 'or' → logprob: -2.8972160816192627
    4. ' and' → logprob: -3.0222160816192627
    5. 'and' → logprob: -4.147215843200684
    6. ',' → logprob: -7.022215843200684
    7. '                       ' → logprob: -7.647215843200684
    8. '               ' → logprob: -8.647215843200684
    9. ' than' → logprob: -9.772215843200684
    10. '=' → logprob: -9.897215843200684

Token 585: ' update' (ID: 4027)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0497141107916832
    2. ' if' → logprob: -3.6747140884399414
    3. '                       ' → logprob: -4.424714088439941
    4. 'if' → logprob: -4.799714088439941
    5. '               ' → logprob: -6.049714088439941
    6. '                    ' → logprob: -9.049714088439941
    7. '                    
' → logprob: -9.674714088439941
    8. ' existing' → logprob: -9.674714088439941
    9. 'existing' → logprob: -10.174714088439941
    10. '                        
' → logprob: -10.424714088439941

Token 586: ' and' (ID: 326)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.023567941039800644
    2. ' and' → logprob: -4.773568153381348
    3. ' if' → logprob: -5.648568153381348
    4. '                    
' → logprob: -6.023568153381348
    5. ',' → logprob: -6.273568153381348
    6. '               ' → logprob: -6.398568153381348
    7. ')' → logprob: -6.398568153381348
    8. 'and' → logprob: -7.023568153381348
    9. '                       ' → logprob: -7.523568153381348
    10. 'if' → logprob: -8.023568153381348

Token 587: ' push' (ID: 9349)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.0010780644370242953
    2. ' heap' → logprob: -7.251078128814697
    3. '               ' → logprob: -9.001077651977539
    4. 'push' → logprob: -9.126077651977539
    5. '                   ' → logprob: -9.626077651977539
    6. '           ' → logprob: -10.251077651977539
    7. 'continue' → logprob: -11.251077651977539
    8. '   ' → logprob: -12.001077651977539
    9. '```' → logprob: -12.251077651977539
    10. '                       ' → logprob: -12.876077651977539

Token 588: ' to' (ID: 316)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.02805454097688198
    2. ',' → logprob: -4.653054714202881
    3. '               ' → logprob: -4.903054714202881
    4. '                       ' → logprob: -5.403054714202881
    5. ')' → logprob: -6.153054714202881
    6. ' (' → logprob: -7.278054714202881
    7. '(' → logprob: -7.653054714202881
    8. '                    ' → logprob: -7.653054714202881
    9. '                    
' → logprob: -7.653054714202881
    10. '           ' → logprob: -8.153054237365723

Token 589: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.00013166792632546276
    2. ' heap' → logprob: -9.375131607055664
    3. 'queue' → logprob: -10.750131607055664
    4. 'the' → logprob: -10.875131607055664
    5. '           ' → logprob: -12.625131607055664
    6. '```' → logprob: -13.625131607055664
    7. '(heap' → logprob: -14.625131607055664
    8. '
' → logprob: -14.625131607055664
    9. '               ' → logprob: -14.875131607055664
    10. ' the' → logprob: -15.500131607055664

Token 590: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.001905319862999022
    2. '               ' → logprob: -6.62690544128418
    3. '                    
' → logprob: -8.75190544128418
    4. ',' → logprob: -9.00190544128418
    5. '                       ' → logprob: -9.37690544128418
    6. '<|end|>' → logprob: -9.87690544128418
    7. '           ' → logprob: -10.12690544128418
    8. ')' → logprob: -10.75190544128418
    9. ':' → logprob: -10.87690544128418
    10. '                    ' → logprob: -11.25190544128418

Token 591: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.005517969373613596
    2. '               ' → logprob: -5.505517959594727
    3. '                    
' → logprob: -7.130517959594727
    4. '
' → logprob: -8.630517959594727
    5. '                       ' → logprob: -9.005517959594727
    6. ',' → logprob: -9.505517959594727
    7. '           ' → logprob: -9.755517959594727
    8. '                
' → logprob: -10.505517959594727
    9. '                  ' → logprob: -10.630517959594727
    10. '                        
' → logprob: -10.880517959594727

Token 592: ' if' (ID: 538)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.19463829696178436
    2. ' if' → logprob: -1.9446382522583008
    3. 'if' (adapté à ' if') → logprob: -3.569638252258301
    4. '               ' → logprob: -5.319638252258301
    5. '                    
' → logprob: -8.0696382522583
    6. '                       ' → logprob: -8.9446382522583
    7. '           ' → logprob: -9.5696382522583
    8. '                    ' → logprob: -9.8196382522583
    9. '   ' → logprob: -10.1946382522583
    10. '                  ' → logprob: -10.6946382522583

Token 593: ' (' (ID: 350)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.15280938148498535
    2. ' self' → logprob: -2.0278093814849854
    3. '(self' → logprob: -5.152809143066406
    4. '                   ' → logprob: -6.027809143066406
    5. ' (' → logprob: -6.402809143066406
    6. '                       ' → logprob: -8.652809143066406
    7. '(' → logprob: -10.277809143066406
    8. '               ' → logprob: -12.152809143066406
    9. '(
' → logprob: -12.402809143066406
    10. '                    ' → logprob: -12.652809143066406

Token 594: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0006952775875106454
    2. '                   ' → logprob: -7.75069522857666
    3. ' self' → logprob: -8.37569522857666
    4. '(self' → logprob: -11.00069522857666
    5. '               ' → logprob: -11.62569522857666
    6. '                       ' → logprob: -11.87569522857666
    7. '   ' → logprob: -13.87569522857666
    8. '           ' → logprob: -16.000696182250977
    9. '[self' → logprob: -16.250696182250977
    10. '                           ' → logprob: -16.375696182250977

Token 595: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.00019889144459739327
    2. 'ear' → logprob: -8.625199317932129
    3. 'self' → logprob: -11.375199317932129
    4. '           ' → logprob: -13.625199317932129
    5. '.is' → logprob: -14.000199317932129
    6. '```' → logprob: -14.750199317932129
    7. '.e' → logprob: -14.875199317932129
    8. ').' → logprob: -15.000199317932129
    9. ')' → logprob: -15.000199317932129
    10. 'new' → logprob: -15.125199317932129

Token 596: 'ear' (ID: 830)
  Prédit: 'ear'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ear' → logprob: -3.531315314830863e-06
    2. ' earliest' → logprob: -13.375003814697266
    3. 'early' → logprob: -13.375003814697266
    4. '
' → logprob: -16.750003814697266
    5. '   ' → logprob: -16.750003814697266
    6. 'latest' → logprob: -16.875003814697266
    7. '```' → logprob: -17.250003814697266
    8. '`' → logprob: -17.500003814697266
    9. 'is' → logprob: -17.500003814697266
    10. 'None' → logprob: -18.125003814697266

Token 597: 'liest' (ID: 34647)
  Prédit: '_arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_arr' → logprob: -0.3637225031852722
    2. 'est' → logprob: -2.363722562789917
    3. 'arr' → logprob: -2.613722562789917
    4. 'ival' → logprob: -3.488722562789917
    5. 'ear' → logprob: -3.738722562789917
    6. '[' → logprob: -3.988722562789917
    7. 'al' → logprob: -3.988722562789917
    8. 'arrival' → logprob: -4.363722324371338
    9. 'val' → logprob: -4.738722324371338
    10. '_' → logprob: -5.613722324371338

Token 598: '_arr' (ID: 25121)
  Prédit: '_arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_arr' → logprob: -3.8889261304575484e-06
    2. 'arrival' → logprob: -12.750003814697266
    3. '[arr' → logprob: -14.375003814697266
    4. 'arr' → logprob: -15.375003814697266
    5. 'Arrival' → logprob: -17.250003814697266
    6. '```' → logprob: -17.375003814697266
    7. '_av' → logprob: -18.000003814697266
    8. '_ar' → logprob: -18.000003814697266
    9. '[' → logprob: -18.250003814697266
    10. '[_' → logprob: -18.750003814697266

Token 599: 'ival' (ID: 4552)
  Prédit: 'ival'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ival' → logprob: -0.4566030204296112
    2. 'al' → logprob: -1.5816030502319336
    3. 'val' → logprob: -1.9566030502319336
    4. '[' → logprob: -4.581603050231934
    5. '[self' → logprob: -6.331603050231934
    6. '_val' → logprob: -6.581603050231934
    7. '_arr' → logprob: -6.581603050231934
    8. 'aval' → logprob: -6.956603050231934
    9. 'ial' → logprob: -7.706603050231934
    10. '   ' → logprob: -8.081603050231934

Token 600: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.127333340875339e-06
    2. '               ' → logprob: -13.250003814697266
    3. ')[' → logprob: -13.500003814697266
    4. '=edge' → logprob: -15.250003814697266
    5. '                   ' → logprob: -15.375003814697266
    6. ')' → logprob: -16.250003814697266
    7. 'edge' → logprob: -16.375003814697266
    8. '           ' → logprob: -16.500003814697266
    9. ' [' → logprob: -16.750003814697266
    10. '(edge' → logprob: -17.125003814697266

Token 601: 'edge' (ID: 13457)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.029840858653187752
    2. 'edge' → logprob: -3.5298409461975098
    3. '(edge' → logprob: -10.029840469360352
    4. '=edge' → logprob: -10.279840469360352
    5. ')[' → logprob: -12.279840469360352
    6. '[
' → logprob: -13.529840469360352
    7. ' edge' → logprob: -13.529840469360352
    8. ')' → logprob: -13.529840469360352
    9. '```' → logprob: -14.404840469360352
    10. '   ' → logprob: -14.779840469360352

Token 602: '.to' (ID: 3552)
  Prédit: '.to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.to' → logprob: -9.014684110297821e-06
    2. '.from' → logprob: -12.125008583068848
    3. '.' → logprob: -12.625008583068848
    4. 'to' → logprob: -16.750009536743164
    5. '].' → logprob: -17.625009536743164
    6. '.t' → logprob: -17.625009536743164
    7. '   ' → logprob: -18.000009536743164
    8. ').' → logprob: -18.625009536743164
    9. '[to' → logprob: -18.750009536743164
    10. '.
' → logprob: -18.875009536743164

Token 603: '_is' (ID: 15224)
  Prédit: '_is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_is' → logprob: -0.001389996730722487
    2. 'is' → logprob: -6.626389980316162
    3. '```' → logprob: -10.75139045715332
    4. '_bridge' → logprob: -11.12639045715332
    5. 'Is' → logprob: -12.62639045715332
    6. 'Island' → logprob: -12.75139045715332
    7. '_edge' → logprob: -12.87639045715332
    8. ')' → logprob: -13.00139045715332
    9. '[' → logprob: -13.25139045715332
    10. '_to' → logprob: -13.25139045715332

Token 604: 'land' (ID: 2117)
  Prédit: 'land'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'land' → logprob: -0.3883601427078247
    2. 'and' → logprob: -1.1383601427078247
    3. 'al' → logprob: -6.763360023498535
    4. '[' → logprob: -9.513360023498535
    5. 'aland' → logprob: -9.763360023498535
    6. '_land' → logprob: -9.888360023498535
    7. '   ' → logprob: -10.638360023498535
    8. 'Land' → logprob: -10.763360023498535
    9. ']' → logprob: -11.388360023498535
    10. 'd' → logprob: -11.638360023498535

Token 605: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.35922637581825256
    2. ' is' → logprob: -1.2342263460159302
    3. 'is' → logprob: -4.859226226806641
    4. '[' → logprob: -5.984226226806641
    5. ' ]' → logprob: -8.60922622680664
    6. ')' → logprob: -9.23422622680664
    7. ']==' → logprob: -10.60922622680664
    8. '            ' → logprob: -10.85922622680664
    9. '```' → logprob: -11.10922622680664
    10. '   ' → logprob: -11.23422622680664

Token 606: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.014185246080160141
    2. 'is' → logprob: -4.264185428619385
    3. ')' → logprob: -11.389184951782227
    4. ')is' → logprob: -12.139184951782227
    5. '	is' → logprob: -13.764184951782227
    6. '[' → logprob: -13.889184951782227
    7. '                    ' → logprob: -14.514184951782227
    8. '                   ' → logprob: -15.014184951782227
    9. '==' → logprob: -15.139184951782227
    10. '    ' → logprob: -15.264184951782227

Token 607: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.2519330680370331
    2. ' None' → logprob: -1.5019330978393555
    3. '=None' → logprob: -13.126933097839355
    4. '(None' → logprob: -14.376933097839355
    5. '_None' → logprob: -14.876933097839355
    6. '_none' → logprob: -15.126933097839355
    7. ' not' → logprob: -15.251933097839355
    8. 'not' → logprob: -15.876933097839355
    9. ',None' → logprob: -16.00193214416504
    10. 'none' → logprob: -16.62693214416504

Token 608: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.027547532692551613
    2. 'or' → logprob: -3.902547597885132
    3. ')' → logprob: -5.402547359466553
    4. '                   ' → logprob: -6.527547359466553
    5. '                    ' → logprob: -7.152547359466553
    6. '                       ' → logprob: -8.777547836303711
    7. '                        ' → logprob: -11.277547836303711
    8. '	or' → logprob: -11.277547836303711
    9. '                           ' → logprob: -11.527547836303711
    10. '                ' → logprob: -11.777547836303711

Token 609: ' self' (ID: 1051)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.45093604922294617
    2. ' new' → logprob: -1.3259360790252686
    3. 'self' → logprob: -2.8259360790252686
    4. ' self' → logprob: -4.0759358406066895
    5. '                   ' → logprob: -4.7009358406066895
    6. 'edge' → logprob: -4.9509358406066895
    7. ' edge' → logprob: -5.5759358406066895
    8. '                    ' → logprob: -7.0759358406066895
    9. '                       ' → logprob: -8.575936317443848
    10. '                ' → logprob: -10.325936317443848

Token 610: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.06253144145011902
    2. 'ear' → logprob: -2.8125314712524414
    3. '.t' → logprob: -8.937531471252441
    4. '           ' → logprob: -9.562531471252441
    5. 'new' → logprob: -9.562531471252441
    6. 'self' → logprob: -10.187531471252441
    7. '               ' → logprob: -10.437531471252441
    8. ' earliest' → logprob: -10.562531471252441
    9. 't' → logprob: -10.687531471252441
    10. 'e' → logprob: -10.687531471252441

Token 611: 'ear' (ID: 830)
  Prédit: 'ear'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ear' → logprob: -2.069664333248511e-05
    2. ' earliest' → logprob: -11.625020980834961
    3. 'early' → logprob: -12.000020980834961
    4. 't' → logprob: -12.250020980834961
    5. '.' → logprob: -14.875020980834961
    6. '
' → logprob: -15.875020980834961
    7. '   ' → logprob: -17.25002098083496
    8. 'est' → logprob: -17.62502098083496
    9. 'latest' → logprob: -17.87502098083496
    10. '```' → logprob: -17.87502098083496

Token 612: 'liest' (ID: 34647)
  Prédit: 'liest'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'liest' → logprob: -0.007848294451832771
    2. 'est' → logprob: -5.632848262786865
    3. 'iest' → logprob: -5.757848262786865
    4. 'al' → logprob: -7.257848262786865
    5. 'ival' → logprob: -9.632848739624023
    6. 'lest' → logprob: -10.132848739624023
    7. 'lier' → logprob: -10.257848739624023
    8. 'ly' → logprob: -10.507848739624023
    9. 'list' → logprob: -10.632848739624023
    10. 'alist' → logprob: -10.632848739624023

Token 613: '_arr' (ID: 25121)
  Prédit: '_arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_arr' → logprob: -0.001077110879123211
    2. 'arrival' → logprob: -7.251077175140381
    3. 'arr' → logprob: -8.501076698303223
    4. '.arr' → logprob: -10.001076698303223
    5. '[arr' → logprob: -10.251076698303223
    6. '           ' → logprob: -10.501076698303223
    7. '                   ' → logprob: -11.751076698303223
    8. '               ' → logprob: -11.876076698303223
    9. '[' → logprob: -12.126076698303223
    10. 'Arrival' → logprob: -12.126076698303223

Token 614: 'ival' (ID: 4552)
  Prédit: 'ival'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ival' → logprob: -0.02056197077035904
    2. 'val' → logprob: -4.145562171936035
    3. 'al' → logprob: -5.895562171936035
    4. '_val' → logprob: -8.270562171936035
    5. 'iv' → logprob: -8.395562171936035
    6. 'arrival' → logprob: -8.645562171936035
    7. '_arr' → logprob: -8.770562171936035
    8. 'ial' → logprob: -8.895562171936035
    9. '_time' → logprob: -9.270562171936035
    10. '   ' → logprob: -9.770562171936035

Token 615: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.8624639324116288e-06
    2. '[
' → logprob: -14.625001907348633
    3. ')[' → logprob: -14.875001907348633
    4. 'edge' → logprob: -15.250001907348633
    5. '=edge' → logprob: -15.375001907348633
    6. '               ' → logprob: -16.000001907348633
    7. ' [' → logprob: -16.125001907348633
    8. '][' → logprob: -16.500001907348633
    9. '           ' → logprob: -16.750001907348633
    10. '```' → logprob: -16.750001907348633

Token 616: 'edge' (ID: 13457)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00043674863991327584
    2. 'edge' → logprob: -7.750436782836914
    3. '[
' → logprob: -12.875436782836914
    4. '=edge' → logprob: -14.250436782836914
    5. '
' → logprob: -14.500436782836914
    6. ')[' → logprob: -14.750436782836914
    7. '][' → logprob: -14.750436782836914
    8. ')' → logprob: -15.000436782836914
    9. '(edge' → logprob: -15.125436782836914
    10. '```' → logprob: -15.375436782836914

Token 617: '.to' (ID: 3552)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.8312110304832458
    2. '[to' → logprob: -1.2062110900878906
    3. '.to' → logprob: -1.3312110900878906
    4. 'to' → logprob: -7.206211090087891
    5. 'edge' → logprob: -9.20621109008789
    6. '.edge' → logprob: -9.33121109008789
    7. '_to' → logprob: -10.95621109008789
    8. '               ' → logprob: -11.70621109008789
    9. '```' → logprob: -12.58121109008789
    10. '       ' → logprob: -12.70621109008789

Token 618: '_is' (ID: 15224)
  Prédit: '_is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_is' → logprob: -0.034146521240472794
    2. 'is' → logprob: -3.534146547317505
    3. '[to' → logprob: -6.784146308898926
    4. 'Island' → logprob: -7.659146308898926
    5. 'to' → logprob: -7.659146308898926
    6. 'edge' → logprob: -7.784146308898926
    7. '```' → logprob: -7.909146308898926
    8. '島' → logprob: -7.909146308898926
    9. 'Is' → logprob: -8.409146308898926
    10. '_edge' → logprob: -9.034146308898926

Token 619: 'land' (ID: 2117)
  Prédit: 'land'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'land' → logprob: -0.0014572588261216879
    2. 'and' → logprob: -6.751457214355469
    3. 'al' → logprob: -10.001457214355469
    4. 'lan' → logprob: -10.626457214355469
    5. 'oland' → logprob: -10.626457214355469
    6. 'lands' → logprob: -10.751457214355469
    7. '_land' → logprob: -10.876457214355469
    8. 'aland' → logprob: -10.876457214355469
    9. 'Land' → logprob: -11.376457214355469
    10. 'eland' → logprob: -11.501457214355469

Token 620: ']' (ID: 60)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.38829872012138367
    2. ' >' → logprob: -1.138298749923706
    3. ']' → logprob: -6.888298511505127
    4. ']>' → logprob: -8.638298988342285
    5. ' is' → logprob: -9.513298988342285
    6. ')' → logprob: -9.763298988342285
    7. '```' → logprob: -11.013298988342285
    8. '[' → logprob: -11.138298988342285
    9. ')>' → logprob: -11.513298988342285
    10. '>
' → logprob: -11.638298988342285

Token 621: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.03807339444756508
    2. ' >' → logprob: -3.2880733013153076
    3. ' is' → logprob: -11.913073539733887
    4. 'new' → logprob: -12.288073539733887
    5. '>
' → logprob: -12.413073539733887
    6. '>`' → logprob: -13.163073539733887
    7. '```' → logprob: -13.163073539733887
    8. '>

' → logprob: -13.413073539733887
    9. '>
' → logprob: -13.788073539733887
    10. '[' → logprob: -13.788073539733887

Token 622: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.5231682062149048
    2. ' new' → logprob: -0.8981682062149048
    3. '                   ' → logprob: -10.523168563842773
    4. '                    ' → logprob: -11.523168563842773
    5. 'edge' → logprob: -13.398168563842773
    6. '                       ' → logprob: -14.148168563842773
    7. '
' → logprob: -14.273168563842773
    8. '                        ' → logprob: -14.648168563842773
    9. '                  ' → logprob: -14.773168563842773
    10. '                ' → logprob: -14.898168563842773

Token 623: '_arr' (ID: 25121)
  Prédit: '_arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_arr' → logprob: -1.2664456789934775e-06
    2. '_ar' → logprob: -14.875000953674316
    3. '_' → logprob: -15.125000953674316
    4. 'arrival' → logprob: -15.250000953674316
    5. 'Arrival' → logprob: -16.375001907348633
    6. '_
' → logprob: -16.500001907348633
    7. '```' → logprob: -17.375001907348633
    8. ' _' → logprob: -17.500001907348633
    9. 'arr' → logprob: -17.875001907348633
    10. '_a' → logprob: -18.125001907348633

Token 624: 'ival' (ID: 4552)
  Prédit: 'ival'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ival' → logprob: -0.0007591230678372085
    2. 'val' → logprob: -7.500759124755859
    3. 'al' → logprob: -10.00075912475586
    4. 'arrival' → logprob: -10.00075912475586
    5. '_arr' → logprob: -10.75075912475586
    6. '_val' → logprob: -11.12575912475586
    7. 'ial' → logprob: -11.12575912475586
    8. 'iv' → logprob: -11.37575912475586
    9. '   ' → logprob: -12.00075912475586
    10. ' arrival' → logprob: -12.12575912475586

Token 625: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.3923160433769226
    2. '):' → logprob: -1.1423161029815674
    3. '                   ' → logprob: -6.142315864562988
    4. '                       ' → logprob: -6.642315864562988
    5. '):
' → logprob: -7.392315864562988
    6. ')' → logprob: -7.517315864562988
    7. '               ' → logprob: -8.017315864562988
    8. ' ):
' → logprob: -8.267315864562988
    9. ' ):' → logprob: -9.517315864562988
    10. ':' → logprob: -10.267315864562988

Token 626: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.0015900811413303018
    2. '                   ' → logprob: -7.501590251922607
    3. '                           ' → logprob: -7.876590251922607
    4. '                        
' → logprob: -8.37658977508545
    5. ':' → logprob: -9.62658977508545
    6. '                        ' → logprob: -9.75158977508545
    7. '               ' → logprob: -9.75158977508545
    8. '                               ' → logprob: -9.87658977508545
    9. '```' → logprob: -10.00158977508545
    10. '<|end|>' → logprob: -10.62658977508545

Token 627: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.07276401668787003
    2. '                       ' → logprob: -2.8227639198303223
    3. ' self' → logprob: -4.572763919830322
    4. '                           ' → logprob: -8.07276439666748
    5. '                   ' → logprob: -9.94776439666748
    6. '           ' → logprob: -10.82276439666748
    7. '               ' → logprob: -11.57276439666748
    8. '   ' → logprob: -11.94776439666748
    9. '```' → logprob: -12.19776439666748
    10. '                               ' → logprob: -12.94776439666748

Token 628: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -6.027225754223764e-05
    2. 'ear' → logprob: -9.750060081481934
    3. ' .' → logprob: -13.625060081481934
    4. '```' → logprob: -15.750060081481934
    5. '​.' → logprob: -16.12506103515625
    6. '`.' → logprob: -16.12506103515625
    7. '._' → logprob: -16.75006103515625
    8. 'EAR' → logprob: -16.87506103515625
    9. '>.' → logprob: -17.12506103515625
    10. '.e' → logprob: -17.25006103515625

Token 629: 'ear' (ID: 830)
  Prédit: 'ear'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ear' → logprob: -1.3856492842023727e-06
    2. 'early' → logprob: -13.750000953674316
    3. ' earliest' → logprob: -15.375000953674316
    4. '   ' → logprob: -17.750001907348633
    5. '
' → logprob: -18.000001907348633
    6. 'def' → logprob: -18.625001907348633
    7. 'heap' → logprob: -18.750001907348633
    8. 'earth' → logprob: -20.250001907348633
    9. 'self' → logprob: -20.375001907348633
    10. '       ' → logprob: -20.500001907348633

Token 630: 'liest' (ID: 34647)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -1.4153752326965332
    2. 'est' → logprob: -1.7903752326965332
    3. 'liest' → logprob: -1.7903752326965332
    4. 'ar' → logprob: -1.9153752326965332
    5. 'r' → logprob: -2.540375232696533
    6. '_arr' → logprob: -3.165375232696533
    7. 'ear' → logprob: -3.415375232696533
    8. 'arl' → logprob: -3.665375232696533
    9. 'al' → logprob: -3.790375232696533
    10. 'ral' → logprob: -4.290375232696533

Token 631: '_arr' (ID: 25121)
  Prédit: '_arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_arr' → logprob: -1.3544423381972592e-05
    2. 'arrival' → logprob: -11.25001335144043
    3. 'arr' → logprob: -15.25001335144043
    4. '[arr' → logprob: -15.87501335144043
    5. 'Arrival' → logprob: -17.12501335144043
    6. ' arrival' → logprob: -18.25001335144043
    7. '_ar' → logprob: -18.25001335144043
    8. '[' → logprob: -18.37501335144043
    9. '_av' → logprob: -18.62501335144043
    10. '_ass' → logprob: -19.37501335144043

Token 632: 'ival' (ID: 4552)
  Prédit: 'ival'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ival' → logprob: -0.0001757696009008214
    2. 'val' → logprob: -8.750175476074219
    3. 'al' → logprob: -12.500175476074219
    4. '_arr' → logprob: -12.625175476074219
    5. '_val' → logprob: -13.125175476074219
    6. 'ial' → logprob: -13.375175476074219
    7. 'arrival' → logprob: -13.500175476074219
    8. '[' → logprob: -13.625175476074219
    9. 'iv' → logprob: -14.500175476074219
    10. 'ivel' → logprob: -14.750175476074219

Token 633: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -8.41866585687967e-06
    2. '=edge' → logprob: -12.000008583068848
    3. '[event' → logprob: -14.500008583068848
    4. '[
' → logprob: -15.250008583068848
    5. '```' → logprob: -15.625008583068848
    6. 'edge' → logprob: -15.750008583068848
    7. '\[' → logprob: -15.750008583068848
    8. '[new' → logprob: -15.875008583068848
    9. '(edge' → logprob: -15.875008583068848
    10. '[element' → logprob: -16.00000762939453

Token 634: 'edge' (ID: 13457)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6931875348091125
    2. 'edge' → logprob: -0.6931875348091125
    3. '(edge' → logprob: -11.318187713623047
    4. '[
' → logprob: -11.943187713623047
    5. '
' → logprob: -11.943187713623047
    6. '=edge' → logprob: -12.068187713623047
    7. ' [' → logprob: -13.443187713623047
    8. ' edge' → logprob: -13.443187713623047
    9. ')' → logprob: -13.568187713623047
    10. '```' → logprob: -13.943187713623047

Token 635: '.to' (ID: 3552)
  Prédit: '.to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.to' → logprob: -0.0007711516227573156
    2. '[to' → logprob: -7.7507710456848145
    3. '[' → logprob: -8.000771522521973
    4. 'to' → logprob: -13.375771522521973
    5. '.from' → logprob: -13.625771522521973
    6. '.' → logprob: -13.875771522521973
    7. '.[' → logprob: -15.000771522521973
    8. '       ' → logprob: -15.125771522521973
    9. '```' → logprob: -15.500771522521973
    10. '_to' → logprob: -15.750771522521973

Token 636: '_is' (ID: 15224)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.252094566822052
    2. '_is' → logprob: -1.5020945072174072
    3. '```' → logprob: -9.627094268798828
    4. '島' → logprob: -10.627094268798828
    5. 'Island' → logprob: -11.002094268798828
    6. '_land' → logprob: -11.752094268798828
    7. '
' → logprob: -11.877094268798828
    8. '``' → logprob: -12.127094268798828
    9. 'to' → logprob: -12.377094268798828
    10. '[' → logprob: -12.502094268798828

Token 637: 'land' (ID: 2117)
  Prédit: 'land'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'land' → logprob: -0.002040817867964506
    2. 'and' → logprob: -6.252040863037109
    3. '[' → logprob: -10.25204086303711
    4. 'al' → logprob: -11.25204086303711
    5. '_' → logprob: -11.75204086303711
    6. 'lan' → logprob: -12.25204086303711
    7. '__' → logprob: -12.62704086303711
    8. '2' → logprob: -12.62704086303711
    9. 'Island' → logprob: -12.62704086303711
    10. '_land' → logprob: -12.62704086303711

Token 638: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3260020613670349
    2. ' =' → logprob: -1.3260021209716797
    3. ']' → logprob: -4.57600212097168
    4. ']=' → logprob: -6.82600212097168
    5. '=edge' → logprob: -6.82600212097168
    6. '[' → logprob: -8.70100212097168
    7. ')' → logprob: -11.20100212097168
    8. ' ]' → logprob: -11.57600212097168
    9. ')=' → logprob: -13.45100212097168
    10. ',' → logprob: -14.82600212097168

Token 639: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12692883610725403
    2. ' =' → logprob: -2.1269288063049316
    3. '=new' → logprob: -15.12692928314209
    4. '=
' → logprob: -15.50192928314209
    5. '＝' → logprob: -15.75192928314209
    6. '=edge' → logprob: -17.001928329467773
    7. '=

' → logprob: -17.626928329467773
    8. ' =
' → logprob: -18.001928329467773
    9. '[' → logprob: -18.501928329467773
    10. '=create' → logprob: -19.251928329467773

Token 640: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.10020741820335388
    2. ' new' → logprob: -2.3502073287963867
    3. 'edge' → logprob: -14.350207328796387
    4. ' edge' → logprob: -16.850208282470703
    5. '                   ' → logprob: -17.100208282470703
    6. '	new' → logprob: -18.100208282470703
    7. '```' → logprob: -18.350208282470703
    8. '_new' → logprob: -18.725208282470703
    9. '
' → logprob: -18.850208282470703
    10. '                       ' → logprob: -19.350208282470703

Token 641: '_arr' (ID: 25121)
  Prédit: '_arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_arr' → logprob: -0.00015038289711810648
    2. 'arrival' → logprob: -8.875150680541992
    3. 'arr' → logprob: -11.625150680541992
    4. 'Arrival' → logprob: -13.750150680541992
    5. '	arr' → logprob: -16.750150680541992
    6. '\' → logprob: -16.750150680541992
    7. ' arrival' → logprob: -16.875150680541992
    8. 't' → logprob: -17.125150680541992
    9. '```' → logprob: -17.125150680541992
    10. 'Arr' → logprob: -17.375150680541992

Token 642: 'ival' (ID: 4552)
  Prédit: 'ival'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ival' → logprob: -0.0007570966263301671
    2. 'val' → logprob: -7.500757217407227
    3. 'al' → logprob: -8.750757217407227
    4. '_val' → logprob: -10.250757217407227
    5. '_arr' → logprob: -11.875757217407227
    6. 'oval' → logprob: -13.625757217407227
    7. 'erval' → logprob: -15.125757217407227
    8. 'ivel' → logprob: -15.375757217407227
    9. 'new' → logprob: -15.625757217407227
    10. 'arrival' → logprob: -15.750757217407227

Token 643: '
' (ID: 198)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.0025679259561002254
    2. '                        
' → logprob: -7.127567768096924
    3. 'heap' → logprob: -7.377567768096924
    4. '                           ' → logprob: -7.627567768096924
    5. '                   ' → logprob: -8.877568244934082
    6. '```' → logprob: -8.877568244934082
    7. '               ' → logprob: -9.252568244934082
    8. '<|end|>' → logprob: -9.627568244934082
    9. ')' → logprob: -9.752568244934082
    10. '                        ' → logprob: -10.377568244934082

Token 644: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.0010799680603668094
    2. '```' → logprob: -7.37608003616333
    3. '                        
' → logprob: -9.126079559326172
    4. '                   ' → logprob: -9.126079559326172
    5. '                           ' → logprob: -9.376079559326172
    6. '               ' → logprob: -9.876079559326172
    7. 'heap' → logprob: -10.751079559326172
    8. '<|end|>' → logprob: -11.001079559326172
    9. ',' → logprob: -11.126079559326172
    10. '           ' → logprob: -11.251079559326172

Token 645: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' (adapté à ' heap') → logprob: -0.08808275312185287
    2. '                       ' → logprob: -2.588082790374756
    3. ' heap' → logprob: -4.713082790374756
    4. '                           ' → logprob: -9.213082313537598
    5. '                   ' → logprob: -10.088082313537598
    6. '```' → logprob: -11.338082313537598
    7. '               ' → logprob: -12.088082313537598
    8. '           ' → logprob: -12.463082313537598
    9. '                        
' → logprob: -12.963082313537598
    10. '(heap' → logprob: -13.213082313537598

Token 646: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -9.088346359931165e-07
    2. '.he' → logprob: -14.000000953674316
    3. 'he' → logprob: -17.25
    4. '```' → logprob: -18.375
    5. 'h' → logprob: -18.75
    6. 'heap' → logprob: -19.625
    7. '.' → logprob: -19.875
    8. '.heap' → logprob: -20.0
    9. 'p' → logprob: -20.375
    10. 'push' → logprob: -20.625

Token 647: '.he' (ID: 67786)
  Prédit: '.he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.he' → logprob: -2.339278580620885e-06
    2. '.heap' → logprob: -13.375001907348633
    3. 'he' → logprob: -14.500001907348633
    4. '.' → logprob: -16.250001907348633
    5. '.push' → logprob: -16.500001907348633
    6. 'q' → logprob: -16.500001907348633
    7. ' .' → logprob: -17.375001907348633
    8. '```' → logprob: -17.875001907348633
    9. '.h' → logprob: -18.125001907348633
    10. '_he' → logprob: -19.000001907348633

Token 648: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.0070596542209386826
    2. 'pp' → logprob: -5.007059574127197
    3. 'push' → logprob: -8.132060050964355
    4. 'ush' → logprob: -10.007060050964355
    5. 'he' → logprob: -13.007060050964355
    6. 'p' → logprob: -14.007060050964355
    7. '```' → logprob: -14.382060050964355
    8. 'ap' → logprob: -14.632060050964355
    9. 'appen' → logprob: -14.632060050964355
    10. 'e' → logprob: -15.757060050964355

Token 649: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -2.5822400857578032e-05
    2. 'push' → logprob: -10.750025749206543
    3. 'op' → logprob: -12.750025749206543
    4. 'sh' → logprob: -13.750025749206543
    5. 'app' → logprob: -15.375025749206543
    6. 'p' → logprob: -17.62502670288086
    7. '```' → logprob: -17.75002670288086
    8. 'us' → logprob: -17.87502670288086
    9. '_push' → logprob: -18.50002670288086
    10. 'e' → logprob: -18.62502670288086

Token 650: '(heap' (ID: 173794)
  Prédit: '(heap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(heap' → logprob: -4.723352049040841e-06
    2. 'heap' → logprob: -12.875004768371582
    3. '(' → logprob: -13.625004768371582
    4. '(
' → logprob: -14.375004768371582
    5. '```' → logprob: -15.375004768371582
    6. ' heap' → logprob: -16.875003814697266
    7. '(h' → logprob: -17.375003814697266
    8. '(queue' → logprob: -17.750003814697266
    9. '.heap' → logprob: -18.000003814697266
    10. '(hero' → logprob: -18.500003814697266

Token 651: ',' (ID: 11)
  Prédit: '(heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(heap' → logprob: -0.000714935187716037
    2. ',' → logprob: -7.3757147789001465
    3. '(' → logprob: -9.500715255737305
    4. 'heap' → logprob: -12.500715255737305
    5. ',(' → logprob: -12.625715255737305
    6. '(
' → logprob: -13.000715255737305
    7. ')' → logprob: -13.625715255737305
    8. '(h' → logprob: -13.625715255737305
    9. ' (' → logprob: -14.625715255737305
    10. ' heap' → logprob: -14.750715255737305

Token 652: ' (' (ID: 350)
  Prédit: '(new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(new' → logprob: -0.007143701892346144
    2. ' (' → logprob: -5.007143497467041
    3. '(' → logprob: -7.757143497467041
    4. '(next' → logprob: -16.007143020629883
    5. '   ' → logprob: -16.882143020629883
    6. '(New' → logprob: -16.882143020629883
    7. '(current' → logprob: -17.132143020629883
    8. '[new' → logprob: -17.257143020629883
    9. '(n' → logprob: -17.382143020629883
    10. '((' → logprob: -17.507143020629883

Token 653: 'new' (ID: 1389)
  Prédit: 'new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -3.292907877039397e-06
    2. ' new' → logprob: -12.75000286102295
    3. 'edge' → logprob: -16.625003814697266
    4. '```' → logprob: -17.125003814697266
    5. '                   ' → logprob: -17.250003814697266
    6. '                       ' → logprob: -17.500003814697266
    7. ')new' → logprob: -17.625003814697266
    8. '(new' → logprob: -18.250003814697266
    9. '               ' → logprob: -18.375003814697266
    10. '   ' → logprob: -18.500003814697266

Token 654: '_arr' (ID: 25121)
  Prédit: '_arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_arr' → logprob: -1.9361264946837764e-07
    2. '_ar' → logprob: -16.625
    3. 'arrival' → logprob: -17.125
    4. '
' → logprob: -17.5
    5. 'arr' → logprob: -18.375
    6. 'Arrival' → logprob: -18.75
    7. '.arr' → logprob: -18.875
    8. '```' → logprob: -19.375
    9. ')' → logprob: -19.625
    10. '	arr' → logprob: -19.625

Token 655: 'ival' (ID: 4552)
  Prédit: '_arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_arr' → logprob: -0.008510672487318516
    2. 'al' → logprob: -5.383510589599609
    3. 'ival' → logprob: -5.758510589599609
    4. 'arrival' → logprob: -7.883510589599609
    5. 'val' → logprob: -9.00851058959961
    6. 'arr' → logprob: -9.25851058959961
    7. '_val' → logprob: -9.38351058959961
    8. ' arrival' → logprob: -10.75851058959961
    9. '_al' → logprob: -11.88351058959961
    10. 'aval' → logprob: -12.13351058959961

Token 656: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.839121826691553e-05
    2. ',
' → logprob: -9.500078201293945
    3. '=edge' → logprob: -14.250078201293945
    4. '(edge' → logprob: -14.500078201293945
    5. 'edge' → logprob: -14.625078201293945
    6. ' ,' → logprob: -14.875078201293945
    7. '<|end|>' → logprob: -15.000078201293945
    8. '‌,' → logprob: -15.500078201293945
    9. '```' → logprob: -15.750078201293945
    10. ',\
' → logprob: -16.250078201293945

Token 657: ' edge' (ID: 11165)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edge' → logprob: -0.04858794063329697
    2. ' edge' → logprob: -3.0485880374908447
    3. '(edge' → logprob: -15.298587799072266
    4. '                   ' → logprob: -16.173587799072266
    5. '                       ' → logprob: -16.298587799072266
    6. '=edge' → logprob: -16.548587799072266
    7. '                        ' → logprob: -17.423587799072266
    8. '                           ' → logprob: -17.923587799072266
    9. '.edge' → logprob: -18.173587799072266
    10. '                    ' → logprob: -18.423587799072266

Token 658: '.to' (ID: 3552)
  Prédit: '.to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.to' → logprob: -5.438573680294212e-06
    2. '.' → logprob: -12.750005722045898
    3. 'to' → logprob: -13.125005722045898
    4. '.t' → logprob: -14.875005722045898
    5. '```' → logprob: -17.1250057220459
    6. 'To' → logprob: -17.6250057220459
    7. '.
' → logprob: -17.8750057220459
    8. '.from' → logprob: -18.0000057220459
    9. ').' → logprob: -18.0000057220459
    10. ' to' → logprob: -18.3750057220459

Token 659: '_is' (ID: 15224)
  Prédit: '_is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_is' → logprob: -0.06136145070195198
    2. 'is' → logprob: -3.31136155128479
    3. '.is' → logprob: -4.311361312866211
    4. '.to' → logprob: -4.686361312866211
    5. 'Island' → logprob: -8.936361312866211
    6. 'to' → logprob: -9.686361312866211
    7. '_bridge' → logprob: -9.686361312866211
    8. '```' → logprob: -10.561361312866211
    9. 'Is' → logprob: -11.061361312866211
    10. 'bridge' → logprob: -11.186361312866211

Token 660: 'land' (ID: 2117)
  Prédit: 'land'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'land' → logprob: -0.009828576818108559
    2. 'and' → logprob: -4.634828567504883
    3. 'aland' → logprob: -10.134828567504883
    4. 'al' → logprob: -11.509828567504883
    5. 'd' → logprob: -12.384828567504883
    6. 'eland' → logprob: -12.384828567504883
    7. 'iland' → logprob: -12.509828567504883
    8. '_land' → logprob: -12.509828567504883
    9. 'Island' → logprob: -13.759828567504883
    10. '[' → logprob: -14.009828567504883

Token 661: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0005290837725624442
    2. ')' → logprob: -7.7505292892456055
    3. '                       ' → logprob: -9.625529289245605
    4. '))
' → logprob: -10.750529289245605
    5. '                   ' → logprob: -12.250529289245605
    6. '               ' → logprob: -12.875529289245605
    7. '           ' → logprob: -13.500529289245605
    8. ')))' → logprob: -13.750529289245605
    9. ' ))' → logprob: -14.875529289245605
    10. '                           ' → logprob: -15.000529289245605

Token 662: '        
' (ID: 3564)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3453809320926666
    2. '
' → logprob: -1.9703809022903442
    3. '        
' → logprob: -2.220381021499634
    4. 'return' → logprob: -3.595381021499634
    5. '```' → logprob: -5.095380783081055
    6. '<|end|>' → logprob: -5.345380783081055
    7. '#' → logprob: -6.845380783081055
    8. '    
' → logprob: -7.220380783081055
    9. '		
' → logprob: -7.345380783081055
    10. '\' → logprob: -7.970380783081055

Token 663: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0011642689350992441
    2. '        
' → logprob: -7.626164436340332
    3. '#' → logprob: -8.126164436340332
    4. '```' → logprob: -8.751164436340332
    5. 'if' → logprob: -9.251164436340332
    6. 'return' → logprob: -10.001164436340332
    7. '
' → logprob: -10.626164436340332
    8. '   ' → logprob: -10.751164436340332
    9. '           ' → logprob: -12.126164436340332
    10. 'i' → logprob: -12.126164436340332

Token 664: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.006916537880897522
    2. '       ' → logprob: -5.256916522979736
    3. '```' → logprob: -6.506916522979736
    4. '#' (adapté à ' #') → logprob: -9.631916999816895
    5. 'max' → logprob: -9.631916999816895
    6. ' if' → logprob: -10.506916999816895
    7. 'return' → logprob: -10.881916999816895
    8. 'result' → logprob: -12.006916999816895
    9. '``' → logprob: -13.631916999816895
    10. '   ' → logprob: -13.881916999816895

Token 665: ' If' (ID: 1843)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0036814322229474783
    2. 'max' → logprob: -6.253681659698486
    3. '#' → logprob: -6.503681659698486
    4. 'return' → logprob: -8.503681182861328
    5. '       ' → logprob: -10.503681182861328
    6. 'result' → logprob: -11.753681182861328
    7. ' if' → logprob: -12.253681182861328
    8. 'final' → logprob: -12.378681182861328
    9. '```' → logprob: -13.628681182861328
    10. 'target' → logprob: -13.753681182861328

Token 666: ' last' (ID: 2174)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.318681188422488e-05
    2. ' self' → logprob: -11.25001335144043
    3. '       ' → logprob: -16.12501335144043
    4. '   ' → logprob: -16.75001335144043
    5. '(self' → logprob: -19.12501335144043
    6. '        
' → logprob: -19.87501335144043
    7. '
' → logprob: -20.62501335144043
    8. '    ' → logprob: -21.00001335144043
    9. '           ' → logprob: -21.50001335144043
    10. '[self' → logprob: -21.62501335144043

Token 667: ' island' (ID: 18149)
  Prédit: '_is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_is' → logprob: -0.099359430372715
    2. 'is' → logprob: -3.2243595123291016
    3. ' island' → logprob: -3.5993595123291016
    4. '_' → logprob: -3.8493595123291016
    5. '```' → logprob: -5.599359512329102
    6. '   ' → logprob: -6.974359512329102
    7. ' ==' → logprob: -7.474359512329102
    8. '==' → logprob: -8.599359512329102
    9. '       ' → logprob: -9.099359512329102
    10. '`' → logprob: -9.724359512329102

Token 668: ' unreachable' (ID: 171303)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.7625200748443604
    2. '       ' → logprob: -1.6375200748443604
    3. 'not' → logprob: -2.2625200748443604
    4. '==' → logprob: -3.2625200748443604
    5. ' in' → logprob: -3.2625200748443604
    6. 'in' → logprob: -3.3875200748443604
    7. ' ==' → logprob: -3.3875200748443604
    8. ' is' → logprob: -3.8875200748443604
    9. '   ' → logprob: -4.012519836425781
    10. '[' → logprob: -4.012519836425781

Token 669: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.151001438498497
    2. 'if' → logprob: -2.901001453399658
    3. ':' → logprob: -3.151001453399658
    4. '==' → logprob: -4.151001453399658
    5. ',' → logprob: -4.526001453399658
    6. ' if' → logprob: -4.776001453399658
    7. ' ==' → logprob: -5.776001453399658
    8. ':
' → logprob: -6.276001453399658
    9. ' or' → logprob: -6.651001453399658
    10. '           ' → logprob: -7.901001453399658

Token 670: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.20229050517082214
    2. ' return' → logprob: -1.7022905349731445
    3. '       ' → logprob: -7.0772905349731445
    4. ' if' → logprob: -10.952290534973145
    5. 'if' → logprob: -11.202290534973145
    6. '           ' → logprob: -14.577290534973145
    7. '```' → logprob: -14.702290534973145
    8. '{return' → logprob: -14.952290534973145
    9. ':return' → logprob: -15.327290534973145
    10. '_return' → logprob: -16.577289581298828

Token 671: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.004078401252627373
    2. ' -' → logprob: -5.504078388214111
    3. '       ' → logprob: -17.504077911376953
    4. '```' → logprob: -18.504077911376953
    5. '   ' → logprob: -19.629077911376953
    6. ' ' → logprob: -20.504077911376953
    7. '`' → logprob: -20.879077911376953
    8. '
' → logprob: -21.129077911376953
    9. '           ' → logprob: -21.254077911376953
    10. '−' → logprob: -21.629077911376953

Token 672: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. '-' → logprob: -16.0
    3. '```' → logprob: -17.25
    4. ' ' → logprob: -19.75
    5. ' -' → logprob: -20.5
    6. '`' → logprob: -20.75
    7. '１' → logprob: -21.5
    8. '
' → logprob: -21.5
    9. '   ' → logprob: -21.5
    10. '2' → logprob: -21.875

Token 673: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03772779926657677
    2. 'if' → logprob: -4.0377278327941895
    3. 'return' → logprob: -4.4127278327941895
    4. ' if' → logprob: -5.5377278327941895
    5. '
' → logprob: -6.7877278327941895
    6. '        
' → logprob: -6.7877278327941895
    7. '```' → logprob: -7.9127278327941895
    8. '   ' → logprob: -8.037727355957031
    9. ' return' → logprob: -8.287727355957031
    10. '    
' → logprob: -10.287727355957031

Token 674: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007304243044927716
    2. 'return' → logprob: -7.500730514526367
    3. '
' → logprob: -9.250730514526367
    4. '        
' → logprob: -10.250730514526367
    5. ' return' → logprob: -11.000730514526367
    6. '   ' → logprob: -12.250730514526367
    7. '```' → logprob: -12.250730514526367
    8. ',' → logprob: -12.375730514526367
    9. '<|end|>' → logprob: -12.375730514526367
    10. ' if' → logprob: -12.750730514526367

Token 675: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.10369522869586945
    2. '       ' → logprob: -2.6036951541900635
    3. ' if' → logprob: -3.8536951541900635
    4. 'return' → logprob: -5.728695392608643
    5. '```' → logprob: -10.228694915771484
    6. ' return' → logprob: -11.728694915771484
    7. '   ' → logprob: -12.728694915771484
    8. '	if' → logprob: -15.478694915771484
    9. '{return' → logprob: -16.853694915771484
    10. '``' → logprob: -16.978694915771484

Token 676: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.07889088988304138
    2. ' self' → logprob: -2.578890800476074
    3. '       ' → logprob: -13.953890800476074
    4. '(self' → logprob: -15.703890800476074
    5. '[self' → logprob: -17.45389175415039
    6. '   ' → logprob: -17.57889175415039
    7. '           ' → logprob: -17.82889175415039
    8. '        ' → logprob: -18.07889175415039
    9. '    ' → logprob: -18.82889175415039
    10. '	self' → logprob: -18.95389175415039

Token 677: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -9.031157969729975e-05
    2. 'ear' → logprob: -9.875090599060059
    3. '.num' → logprob: -10.750090599060059
    4. ' .' → logprob: -12.625090599060059
    5. '​.' → logprob: -13.125090599060059
    6. '.N' → logprob: -13.250090599060059
    7. '.self' → logprob: -13.375090599060059
    8. 'self' → logprob: -13.500090599060059
    9. '
' → logprob: -13.625090599060059
    10. '```' → logprob: -13.750090599060059

Token 678: 'ear' (ID: 830)
  Prédit: 'ear'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ear' → logprob: -3.292907877039397e-06
    2. 'None' → logprob: -13.00000286102295
    3. ' earliest' → logprob: -14.00000286102295
    4. 'early' → logprob: -17.125003814697266
    5. 'is' → logprob: -18.625003814697266
    6. 'self' → logprob: -18.625003814697266
    7. '```' → logprob: -18.625003814697266
    8. '   ' → logprob: -18.750003814697266
    9. 'N' → logprob: -19.000003814697266
    10. '`' → logprob: -19.125003814697266

Token 679: 'liest' (ID: 34647)
  Prédit: '_is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_is' → logprob: -0.474424809217453
    2. '_arr' → logprob: -1.0994248390197754
    3. '_' → logprob: -4.599424839019775
    4. '.is' → logprob: -4.599424839019775
    5. 'arr' → logprob: -4.849424839019775
    6. 'is' → logprob: -5.599424839019775
    7. '.arr' → logprob: -5.724424839019775
    8. '_re' → logprob: -5.849424839019775
    9. '[' → logprob: -6.099424839019775
    10. 'arrival' → logprob: -6.849424839019775

Token 680: '_arr' (ID: 25121)
  Prédit: '_arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_arr' → logprob: -4.36574100604048e-06
    2. 'arrival' → logprob: -13.125004768371582
    3. '_is' → logprob: -13.625004768371582
    4. 'arr' → logprob: -15.000004768371582
    5. '[' → logprob: -15.250004768371582
    6. '[arr' → logprob: -15.625004768371582
    7. '[_' → logprob: -16.625003814697266
    8. 'Arrival' → logprob: -17.000003814697266
    9. '_ar' → logprob: -17.875003814697266
    10. '_av' → logprob: -17.875003814697266

Token 681: 'ival' (ID: 4552)
  Prédit: 'ival'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ival' → logprob: -0.0005523175350390375
    2. 'al' → logprob: -7.875552177429199
    3. 'val' → logprob: -9.1255521774292
    4. '[' → logprob: -10.0005521774292
    5. '_val' → logprob: -11.7505521774292
    6. 'ial' → logprob: -13.6255521774292
    7. 'ive' → logprob: -13.7505521774292
    8. 'iv' → logprob: -13.8755521774292
    9. 'ivals' → logprob: -13.8755521774292
    10. '_' → logprob: -14.2505521774292

Token 682: '[self' (ID: 33734)
  Prédit: '[self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[self' → logprob: -0.33213192224502563
    2. '[-' → logprob: -1.3321318626403809
    3. '[' → logprob: -4.082131862640381
    4. '[len' → logprob: -6.332131862640381
    5. '==' → logprob: -10.832132339477539
    6. '```' → logprob: -11.457132339477539
    7. 'self' → logprob: -12.707132339477539
    8. ' ==' → logprob: -12.707132339477539
    9. ' [' → logprob: -13.582132339477539
    10. '[N' → logprob: -13.707132339477539

Token 683: '.N' (ID: 4439)
  Prédit: '.N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.N' → logprob: -4.4849443838757e-06
    2. 'N' → logprob: -12.625004768371582
    3. '.num' → logprob: -14.250004768371582
    4. '.graph' → logprob: -15.625004768371582
    5. '.' → logprob: -16.375003814697266
    6. '```' → logprob: -16.500003814697266
    7. 'graph' → logprob: -16.625003814697266
    8. ' .' → logprob: -17.125003814697266
    9. '_N' → logprob: -17.250003814697266
    10. '.n' → logprob: -18.125003814697266

Token 684: ']' (ID: 60)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.08784912526607513
    2. 'is' → logprob: -2.5878491401672363
    3. ')' → logprob: -4.962849140167236
    4. ')is' → logprob: -6.712849140167236
    5. ']' → logprob: -7.462849140167236
    6. '==' → logprob: -9.587848663330078
    7. ']==' → logprob: -11.212848663330078
    8. ' )' → logprob: -11.337848663330078
    9. '[' → logprob: -11.587848663330078
    10. ')==' → logprob: -12.337848663330078

Token 685: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.008686074987053871
    2. 'is' → logprob: -4.758686065673828
    3. '==' → logprob: -9.758686065673828
    4. ' ==' → logprob: -11.258686065673828
    5. ' ' → logprob: -15.133686065673828
    6. '[' → logprob: -15.383686065673828
    7. '	is' → logprob: -16.008686065673828
    8. ')is' → logprob: -17.008686065673828
    9. 'in' → logprob: -17.133686065673828
    10. ')' → logprob: -17.508686065673828

Token 686: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.023246407508850098
    2. ' None' → logprob: -3.7732462882995605
    3. '_None' → logprob: -14.273246765136719
    4. '=None' → logprob: -16.39824676513672
    5. '   ' → logprob: -17.02324676513672
    6. '(None' → logprob: -17.39824676513672
    7. 'not' → logprob: -17.64824676513672
    8. ',None' → logprob: -18.14824676513672
    9. ' ' → logprob: -18.77324676513672
    10. '_none' → logprob: -18.89824676513672

Token 687: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.13246726989746094
    2. ':
' → logprob: -2.132467269897461
    3. ':return' → logprob: -5.257467269897461
    4. '       ' → logprob: -8.757467269897461
    5. '           ' → logprob: -9.757467269897461
    6. '   ' → logprob: -10.507467269897461
    7. 'return' → logprob: -10.632467269897461
    8. ')' → logprob: -11.007467269897461
    9. '):
' → logprob: -11.632467269897461
    10. ',' → logprob: -12.007467269897461

Token 688: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.010113373398780823
    2. 'return' → logprob: -4.63511323928833
    3. ' return' → logprob: -8.010113716125488
    4. ':return' → logprob: -12.135113716125488
    5. '{return' → logprob: -12.385113716125488
    6. '   ' → logprob: -12.385113716125488
    7. '               ' → logprob: -12.510113716125488
    8. '       ' → logprob: -12.635113716125488
    9. '                           ' → logprob: -13.885113716125488
    10. '                       ' → logprob: -14.135113716125488

Token 689: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.06760340929031372
    2. '           ' → logprob: -2.817603349685669
    3. ' return' → logprob: -5.192603588104248
    4. '```' → logprob: -10.69260311126709
    5. '	return' → logprob: -11.56760311126709
    6. ':return' → logprob: -11.81760311126709
    7. '   ' → logprob: -11.94260311126709
    8. '{return' → logprob: -12.31760311126709
    9. '       ' → logprob: -12.44260311126709
    10. '		' → logprob: -13.06760311126709

Token 690: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -2.15310683415737e-05
    2. ' -' → logprob: -10.750021934509277
    3. '   ' → logprob: -22.00002098083496
    4. '-int' → logprob: -23.87502098083496
    5. '-p' → logprob: -23.87502098083496
    6. '```' → logprob: -24.25002098083496
    7. '−' → logprob: -24.50002098083496
    8. '\-' → logprob: -24.62502098083496
    9. '-i' → logprob: -24.87502098083496
    10. '-c' → logprob: -25.00002098083496

Token 691: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -19.625
    3. '```' → logprob: -20.0
    4. '2' → logprob: -21.625
    5. '
' → logprob: -22.25
    6. '-' → logprob: -22.5
    7. '0' → logprob: -23.0
    8. '   ' → logprob: -23.0
    9. '۱' → logprob: -23.625
    10. '`' → logprob: -23.625

Token 692: '
        
' (ID: 20417)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04036486893892288
    2. '        
' → logprob: -3.415364980697632
    3. '
' → logprob: -5.540364742279053
    4. 'return' → logprob: -6.915364742279053
    5. '<|end|>' → logprob: -7.665364742279053
    6. '    
' → logprob: -7.915364742279053
    7. '  
' → logprob: -8.165365219116211
    8. '```' → logprob: -8.415365219116211
    9. '\
' → logprob: -8.915365219116211
    10. '        
        
' → logprob: -10.540365219116211

Token 693: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12845300137996674
    2. 'return' → logprob: -2.503453016281128
    3. 'max' → logprob: -3.378453016281128
    4. 'wait' → logprob: -6.128452777862549
    5. '```' → logprob: -6.253452777862549
    6. 'result' → logprob: -9.128453254699707
    7. 'current' → logprob: -9.253453254699707
    8. ' max' → logprob: -9.503453254699707
    9. 'arrival' → logprob: -9.628453254699707
    10. ' return' → logprob: -9.878453254699707

Token 694: ' #' (ID: 1069)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.004591638222336769
    2. 'wait' → logprob: -5.504591464996338
    3. 'return' → logprob: -8.004591941833496
    4. '       ' → logprob: -9.379591941833496
    5. '#' (adapté à ' #') → logprob: -10.129591941833496
    6. 'waiting' → logprob: -11.004591941833496
    7. '```' → logprob: -11.254591941833496
    8. ' max' → logprob: -11.629591941833496
    9. 'latest' → logprob: -12.379591941833496
    10. 'result' → logprob: -12.754591941833496

Token 695: ' Compute' (ID: 45438)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.008114744909107685
    2. 'wait' → logprob: -5.258114814758301
    3. '#' → logprob: -6.133114814758301
    4. 'return' → logprob: -7.633114814758301
    5. 'waiting' → logprob: -9.0081148147583
    6. 'total' → logprob: -10.5081148147583
    7. 'current' → logprob: -10.8831148147583
    8. '   ' → logprob: -11.6331148147583
    9. ' max' → logprob: -11.8831148147583
    10. '       ' → logprob: -12.0081148147583

Token 696: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.0007530473521910608
    2. 'wait' → logprob: -7.250752925872803
    3. 'waiting' → logprob: -10.625753402709961
    4. ' max' → logprob: -11.125753402709961
    5. '```' → logprob: -12.875753402709961
    6. 'current' → logprob: -13.875753402709961
    7. 'maximum' → logprob: -15.500753402709961
    8. '       ' → logprob: -15.500753402709961
    9. 'min' → logprob: -16.50075340270996
    10. 'prev' → logprob: -17.12575340270996

Token 697: ' waiting' (ID: 12028)
  Prédit: '_wait'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_wait' → logprob: -8.268254896393046e-05
    2. 'wait' → logprob: -9.875082969665527
    3. '_max' → logprob: -10.500082969665527
    4. 'max' → logprob: -13.125082969665527
    5. '_' → logprob: -14.375082969665527
    6. '```' → logprob: -14.750082969665527
    7. 'waiting' → logprob: -16.37508201599121
    8. '(wait' → logprob: -16.50008201599121
    9. '_WAIT' → logprob: -16.50008201599121
    10. '_w' → logprob: -16.50008201599121

Token 698: ' time' (ID: 1058)
  Prédit: '_time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.08108630776405334
    2. '_wait' → logprob: -2.5810863971710205
    3. 'time' → logprob: -7.331086158752441
    4. '       ' → logprob: -7.831086158752441
    5. '_max' → logprob: -7.831086158752441
    6. '_times' → logprob: -8.206086158752441
    7. 'max' → logprob: -8.331086158752441
    8. 'wait' → logprob: -9.081086158752441
    9. '=' → logprob: -9.831086158752441
    10. ' =' → logprob: -10.706086158752441

Token 699: ' on' (ID: 402)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15266767144203186
    2. 'max' → logprob: -2.027667760848999
    3. 'wait' → logprob: -5.15266752243042
    4. ' max' → logprob: -6.27766752243042
    5. '```' → logprob: -7.15266752243042
    6. 'waiting' → logprob: -7.52766752243042
    7. '        
' → logprob: -7.90266752243042
    8. ',' → logprob: -9.277667999267578
    9. 'prev' → logprob: -9.277667999267578
    10. '=' → logprob: -9.777667999267578

Token 700: ' islands' (ID: 45758)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.9031776189804077
    2. 'self' → logprob: -1.0281776189804077
    3. 'is' → logprob: -2.2781777381896973
    4. 'range' → logprob: -2.7781777381896973
    5. 'path' → logprob: -3.5281777381896973
    6. 'any' → logprob: -4.278177738189697
    7. 'edges' → logprob: -5.778177738189697
    8. 'max' → logprob: -5.903177738189697
    9. 'arrival' → logprob: -5.903177738189697
    10. 'brid' → logprob: -6.028177738189697

Token 701: ' before' (ID: 2254)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.5900037884712219
    2. '       ' → logprob: -0.8400037884712219
    3. 'wait' → logprob: -4.715003967285156
    4. ' max' → logprob: -6.090003967285156
    5. 'waiting' → logprob: -6.215003967285156
    6. '```' → logprob: -8.465003967285156
    7. '
' → logprob: -8.965003967285156
    8. '   ' → logprob: -9.340003967285156
    9. '        
' → logprob: -9.465003967285156
    10. ' waiting' → logprob: -10.090003967285156

Token 702: ' last' (ID: 2174)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.7153074741363525
    2. 're' → logprob: -0.8403074741363525
    3. 'self' → logprob: -2.9653074741363525
    4. ' reaching' → logprob: -4.215307235717773
    5. 'last' → logprob: -5.340307235717773
    6. ' the' → logprob: -5.965307235717773
    7. '```' → logprob: -5.965307235717773
    8. 'return' → logprob: -6.465307235717773
    9. 'final' → logprob: -7.715307235717773
    10. '   ' → logprob: -8.215307235717773

Token 703: ' island' (ID: 18149)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.06783033907413483
    2. '       ' → logprob: -3.1928303241729736
    3. '
' → logprob: -4.442830562591553
    4. 'wait' → logprob: -5.317830562591553
    5. ' max' → logprob: -6.067830562591553
    6. '        
' → logprob: -6.067830562591553
    7. 'waiting' → logprob: -6.567830562591553
    8. 'result' → logprob: -7.817830562591553
    9. '```' → logprob: -7.817830562591553
    10. 'time' → logprob: -7.942830562591553

Token 704: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.48146307468414307
    2. 'max' → logprob: -0.9814630746841431
    3. 'wait' → logprob: -5.3564629554748535
    4. ' max' → logprob: -6.8564629554748535
    5. 'waiting' → logprob: -6.9814629554748535
    6. '```' → logprob: -8.231463432312012
    7. '        
' → logprob: -9.106463432312012
    8. '   ' → logprob: -9.731463432312012
    9. ',' → logprob: -9.856463432312012
    10. '
' → logprob: -9.981463432312012

Token 705: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014103681780397892
    2. 'max' → logprob: -4.389103889465332
    3. ' max' → logprob: -7.014103889465332
    4. '
' → logprob: -8.139103889465332
    5. '        
' → logprob: -8.764103889465332
    6. 'wait' → logprob: -9.264103889465332
    7. '```' → logprob: -9.264103889465332
    8. ',' → logprob: -11.014103889465332
    9. '   ' → logprob: -11.514103889465332
    10. 'waiting' → logprob: -12.264103889465332

Token 706: ' #' (ID: 1069)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.0005281301564536989
    2. '       ' → logprob: -8.000528335571289
    3. 'wait' → logprob: -8.875528335571289
    4. ' max' → logprob: -10.250528335571289
    5. 'waiting' → logprob: -11.500528335571289
    6. '```' → logprob: -12.000528335571289
    7. '   ' → logprob: -14.375528335571289
    8. 'return' → logprob: -14.500528335571289
    9. '``' → logprob: -16.37552833557129
    10. 'maximum' → logprob: -16.87552833557129

Token 707: ' According' (ID: 16344)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.0006917051505297422
    2. ' max' → logprob: -8.000691413879395
    3. '       ' → logprob: -8.375691413879395
    4. 'wait' → logprob: -9.500691413879395
    5. 'waiting' → logprob: -10.000691413879395
    6. '```' → logprob: -12.625691413879395
    7. '   ' → logprob: -13.500691413879395
    8. 'prev' → logprob: -15.500691413879395
    9. '``' → logprob: -15.500691413879395
    10. 'return' → logprob: -15.625691413879395

Token 708: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.2345622330904007
    2. ' to' → logprob: -2.2345621585845947
    3. '       ' → logprob: -2.3595621585845947
    4. '_to' → logprob: -5.234562397003174
    5. '=' → logprob: -6.984562397003174
    6. '   ' → logprob: -7.609562397003174
    7. 'for' → logprob: -8.484561920166016
    8. 'ly' → logprob: -8.734561920166016
    9. ' =' → logprob: -8.734561920166016
    10. 'self' → logprob: -9.734561920166016

Token 709: ' problem' (ID: 4792)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.32932618260383606
    2. 'self' → logprob: -1.4543261528015137
    3. 'problem' → logprob: -4.579326152801514
    4. 'def' → logprob: -4.704326152801514
    5. 'arrival' → logprob: -5.454326152801514
    6. 'max' → logprob: -5.454326152801514
    7. '#' → logprob: -5.704326152801514
    8. 'path' → logprob: -5.954326152801514
    9. 'D' → logprob: -6.204326152801514
    10. 'for' → logprob: -6.329326152801514

Token 710: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0086201429367065
    2. '       ' → logprob: -1.0086201429367065
    3. ' max' → logprob: -2.008620262145996
    4. 'max' → logprob: -2.633620262145996
    5. '        
' → logprob: -3.508620262145996
    6. ' waiting' → logprob: -4.758620262145996
    7. '#' → logprob: -5.508620262145996
    8. 'wait' → logprob: -5.633620262145996
    9. 'time' → logprob: -5.758620262145996
    10. 'arrival' → logprob: -6.258620262145996

Token 711: ' output' (ID: 4733)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.039056140929460526
    2. '#' → logprob: -3.9140560626983643
    3. ' max' → logprob: -4.789056301116943
    4. 'wait' → logprob: -5.664056301116943
    5. 'waiting' → logprob: -5.914056301116943
    6. 'prev' → logprob: -6.289056301116943
    7. 'return' → logprob: -7.664056301116943
    8. 'current' → logprob: -7.914056301116943
    9. 'arrival' → logprob: -8.164055824279785
    10. 'result' → logprob: -9.039055824279785

Token 712: ' the' (ID: 290)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.40319085121154785
    2. ' =' → logprob: -2.403190851211548
    3. 'return' → logprob: -2.653190851211548
    4. ' max' → logprob: -3.028190851211548
    5. '=' → logprob: -3.153190851211548
    6. ' is' → logprob: -3.403190851211548
    7. '=max' → logprob: -4.153190612792969
    8. 'self' → logprob: -4.403190612792969
    9. ' return' → logprob: -4.778190612792969
    10. 'is' → logprob: -5.778190612792969

Token 713: ' max' (ID: 2999)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.5829164385795593
    2. 'max' → logprob: -0.8329164385795593
    3. 'maximum' → logprob: -5.457916259765625
    4. 'return' → logprob: -7.082916259765625
    5. ' max' → logprob: -8.082916259765625
    6. 'ear' → logprob: -8.082916259765625
    7. ' self' → logprob: -8.207916259765625
    8. 'arrival' → logprob: -8.457916259765625
    9. 'difference' → logprob: -8.457916259765625
    10. '```' → logprob: -9.332916259765625

Token 714: ' arrival' (ID: 24861)
  Prédit: 'wait'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'wait' → logprob: -0.5010481476783752
    2. '_wait' → logprob: -1.1260480880737305
    3. 'waiting' → logprob: -2.8760480880737305
    4. 'max' → logprob: -4.7510480880737305
    5. '       ' → logprob: -6.2510480880737305
    6. '```' → logprob: -6.7510480880737305
    7. ' wait' → logprob: -7.3760480880737305
    8. ' waiting' → logprob: -8.25104808807373
    9. 'arrival' → logprob: -8.87604808807373
    10. '        
' → logprob: -9.50104808807373

Token 715: ' time' (ID: 1058)
  Prédit: '_time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.0021620409097522497
    2. 'time' → logprob: -6.252161979675293
    3. '_' → logprob: -8.877161979675293
    4. '_times' → logprob: -10.627161979675293
    5. '_arr' → logprob: -10.627161979675293
    6. ' time' → logprob: -10.877161979675293
    7. '   ' → logprob: -12.752161979675293
    8. '[' → logprob: -12.877161979675293
    9. '       ' → logprob: -13.002161979675293
    10. 'arrival' → logprob: -13.002161979675293

Token 716: ' at' (ID: 540)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011328501626849174
    2. 'return' → logprob: -4.51132869720459
    3. ' return' → logprob: -9.01132869720459
    4. '        
' → logprob: -9.51132869720459
    5. '```' → logprob: -10.63632869720459
    6. ',' → logprob: -11.26132869720459
    7. '
' → logprob: -11.26132869720459
    8. '	' → logprob: -12.01132869720459
    9. '   ' → logprob: -12.13632869720459
    10. '           ' → logprob: -12.38632869720459

Token 717: ' any' (ID: 1062)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.09653868526220322
    2. 'any' → logprob: -2.596538782119751
    3. 'is' → logprob: -4.346538543701172
    4. 'the' → logprob: -6.971538543701172
    5. 'max' → logprob: -7.096538543701172
    6. 'all' → logprob: -7.096538543701172
    7. '[self' → logprob: -7.096538543701172
    8. '(self' → logprob: -7.971538543701172
    9. 'an' → logprob: -8.346538543701172
    10. 'last' → logprob: -8.721538543701172

Token 718: ' island' (ID: 18149)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.010370016098022461
    2. 'node' → logprob: -4.885370254516602
    3. '```' → logprob: -7.010370254516602
    4. ' island' → logprob: -7.260370254516602
    5. 'inter' → logprob: -8.135370254516602
    6. 'visited' → logprob: -8.635370254516602
    7. 'self' → logprob: -8.760370254516602
    8. 'point' → logprob: -9.510370254516602
    9. '[node' → logprob: -10.260370254516602
    10. '[i' → logprob: -10.260370254516602

Token 719: ' from' (ID: 591)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09231285005807877
    2. 'return' → logprob: -2.467312812805176
    3. '
' → logprob: -6.842312812805176
    4. 'max' → logprob: -6.967312812805176
    5. ' return' → logprob: -7.592312812805176
    6. '        
' → logprob: -7.592312812805176
    7. '```' → logprob: -8.967312812805176
    8. ',' → logprob: -9.092312812805176
    9. '   ' → logprob: -10.217312812805176
    10. ' max' → logprob: -10.967312812805176

Token 720: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3454021215438843
    2. 'which' → logprob: -1.3454021215438843
    3. '0' → logprob: -4.470402240753174
    4. 'the' → logprob: -4.845402240753174
    5. 'range' → logprob: -5.470402240753174
    6. 'self' → logprob: -5.595402240753174
    7. '[' → logprob: -5.970402240753174
    8. ' which' → logprob: -7.345402240753174
    9. '```' → logprob: -8.220401763916016
    10. 'is' → logprob: -8.845401763916016

Token 721: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.49602219462394714
    2. 'which' → logprob: -0.9960222244262695
    3. '0' → logprob: -5.1210222244262695
    4. 'the' → logprob: -5.2460222244262695
    5. 'range' → logprob: -5.6210222244262695
    6. 'is' → logprob: -6.4960222244262695
    7. 'arrival' → logprob: -6.6210222244262695
    8. '```' → logprob: -6.9960222244262695
    9. 'time' → logprob: -7.7460222244262695
    10. 'start' → logprob: -7.7460222244262695

Token 722: ' to' (ID: 316)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1721394956111908
    2. '[' → logprob: -2.9221394062042236
    3. '        ' → logprob: -3.5471394062042236
    4. '
' → logprob: -3.9221394062042236
    5. ')' → logprob: -4.172139644622803
    6. '        
' → logprob: -4.672139644622803
    7. ',' → logprob: -4.922139644622803
    8. ' +' → logprob: -5.047139644622803
    9. '+' → logprob: -5.422139644622803
    10. '[self' → logprob: -6.047139644622803

Token 723: ' N' (ID: 478)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0003672748862300068
    2. ' self' → logprob: -8.000367164611816
    3. '(self' → logprob: -10.750367164611816
    4. '
' → logprob: -11.875367164611816
    5. '```' → logprob: -13.375367164611816
    6. '[self' → logprob: -14.125367164611816
    7. '`' → logprob: -15.250367164611816
    8. '   ' → logprob: -15.500367164611816
    9. '	self' → logprob: -15.875367164611816
    10. '       ' → logprob: -16.000368118286133

Token 724: '-' (ID: 12)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0419415719807148
    2. 'return' → logprob: -3.5419416427612305
    3. 'max' → logprob: -4.7919416427612305
    4. '```' → logprob: -5.6669416427612305
    5. '        
' → logprob: -8.91694164276123
    6. ' return' → logprob: -10.04194164276123
    7. '   ' → logprob: -10.16694164276123
    8. ' max' → logprob: -10.54194164276123
    9. '``' → logprob: -11.16694164276123
    10. ',' → logprob: -11.16694164276123

Token 725: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.729906196298543e-06
    2. ' ' → logprob: -12.750009536743164
    3. '
' → logprob: -13.250009536743164
    4. '```' → logprob: -13.375009536743164
    5. ')' → logprob: -13.750009536743164
    6. '2' → logprob: -14.250009536743164
    7. '+' → logprob: -14.375009536743164
    8. '-' → logprob: -15.500009536743164
    9. 's' → logprob: -15.500009536743164
    10. ',' → logprob: -15.750009536743164

Token 726: ' along' (ID: 4251)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20307575166225433
    2. 'max' → logprob: -2.203075647354126
    3. '        
' → logprob: -3.203075647354126
    4. '
' → logprob: -3.703075647354126
    5. '```' → logprob: -6.078075885772705
    6. 'return' → logprob: -6.453075885772705
    7. ' max' → logprob: -6.578075885772705
    8. '    
' → logprob: -7.328075885772705
    9. '\' → logprob: -8.078075408935547
    10. '   ' → logprob: -8.203075408935547

Token 727: ' the' (ID: 290)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.29668372869491577
    2. 'with' → logprob: -1.9216837882995605
    3. 'path' → logprob: -2.5466837882995605
    4. 'range' → logprob: -3.7966837882995605
    5. ' the' → logprob: -5.4216837882995605
    6. 'which' → logprob: -6.0466837882995605
    7. ' with' → logprob: -7.1716837882995605
    8. 'route' → logprob: -7.5466837882995605
    9. ' path' → logprob: -7.9216837882995605
    10. '```' → logprob: -8.171683311462402

Token 728: ' path' (ID: 3104)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.041635625064373016
    2. ' path' → logprob: -4.041635513305664
    3. 'way' → logprob: -4.041635513305664
    4. 'route' → logprob: -5.791635513305664
    5. 'range' → logprob: -6.541635513305664
    6. '
' → logprob: -8.291635513305664
    7. ' route' → logprob: -8.541635513305664
    8. '```' → logprob: -8.666635513305664
    9. '   ' → logprob: -9.041635513305664
    10. ' way' → logprob: -9.541635513305664

Token 729: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6445031762123108
    2. 'max' → logprob: -0.7695031762123108
    3. ' max' → logprob: -4.894503116607666
    4. '```' → logprob: -6.394503116607666
    5. '        
' → logprob: -6.644503116607666
    6. 'wait' → logprob: -7.519503116607666
    7. 'return' → logprob: -8.144503593444824
    8. '
' → logprob: -8.769503593444824
    9. 'waiting' → logprob: -9.394503593444824
    10. '   ' → logprob: -10.019503593444824

Token 730: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012281707488000393
    2. '
' → logprob: -5.262281894683838
    3. '<|end|>' → logprob: -5.387281894683838
    4. '        
' → logprob: -7.262281894683838
    5. '+' → logprob: -8.01228141784668
    6. '\' → logprob: -8.13728141784668
    7. '   ' → logprob: -8.51228141784668
    8. ' +' → logprob: -8.63728141784668
    9. '\n' → logprob: -9.01228141784668
    10. 'return' → logprob: -9.01228141784668

Token 731: ' #' (ID: 1069)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.1685992330312729
    2. '       ' → logprob: -1.918599247932434
    3. 'return' → logprob: -5.2935991287231445
    4. 'wait' → logprob: -6.6685991287231445
    5. '```' → logprob: -6.9185991287231445
    6. 'current' → logprob: -8.043599128723145
    7. ' max' → logprob: -8.293599128723145
    8. 'waiting' → logprob: -8.668599128723145
    9. '        
' → logprob: -9.168599128723145
    10. '   ' → logprob: -9.793599128723145

Token 732: ' The' (ID: 623)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.08291082829236984
    2. '       ' → logprob: -3.0829107761383057
    3. 'return' → logprob: -3.4579107761383057
    4. 'wait' → logprob: -7.332911014556885
    5. 'current' → logprob: -7.457911014556885
    6. '```' → logprob: -8.207910537719727
    7. 'curr' → logprob: -8.457910537719727
    8. 'waiting' → logprob: -8.582910537719727
    9. ' max' → logprob: -9.832910537719727
    10. 'result' → logprob: -9.832910537719727

Token 733: ' path' (ID: 3104)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.027608992531895638
    2. '#' → logprob: -4.277608871459961
    3. 'def' → logprob: -5.527608871459961
    4. 'path' → logprob: -6.152608871459961
    5. 'current' → logprob: -6.402608871459961
    6. '       ' → logprob: -6.527608871459961
    7. 'waiting' → logprob: -6.902608871459961
    8. 'arrival' → logprob: -6.902608871459961
    9. 'curr' → logprob: -7.777608871459961
    10. 'wait' → logprob: -7.902608871459961

Token 734: ' is' (ID: 382)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.0130131244659424
    2. '_time' → logprob: -1.2630131244659424
    3. '=' → logprob: -2.0130131244659424
    4. 'def' → logprob: -3.2630131244659424
    5. 'time' → logprob: -3.2630131244659424
    6. '       ' → logprob: -3.5130131244659424
    7. '_path' → logprob: -3.5130131244659424
    8. '#' → logprob: -3.6380131244659424
    9. 'arrival' → logprob: -4.638012886047363
    10. 'arr' → logprob: -5.013012886047363

Token 735: ' implicitly' (ID: 133788)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.4550333023071289
    2. '[]' → logprob: -1.205033302307129
    3. '[' → logprob: -3.955033302307129
    4. ' self' → logprob: -4.455033302307129
    5. '[self' → logprob: -4.455033302307129
    6. 'not' → logprob: -5.205033302307129
    7. '[]
' → logprob: -5.455033302307129
    8. '1' → logprob: -5.955033302307129
    9. ' []' → logprob: -5.955033302307129
    10. '[-' → logprob: -6.330033302307129

Token 736: ' given' (ID: 4335)
  Prédit: 'determ'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'determ' → logprob: -0.6944307684898376
    2. 'defined' → logprob: -1.6944308280944824
    3. 'stored' → logprob: -2.3194308280944824
    4. 'found' → logprob: -3.1944308280944824
    5. 'self' → logprob: -3.3194308280944824
    6. 'tracked' → logprob: -3.4444308280944824
    7. 'the' → logprob: -3.5694308280944824
    8. 'encoded' → logprob: -4.819430828094482
    9. 'given' → logprob: -5.069430828094482
    10. 're' → logprob: -5.069430828094482

Token 737: ' by' (ID: 656)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.32253336906433105
    2. '
' → logprob: -1.822533369064331
    3. '        
' → logprob: -2.947533369064331
    4. '<|end|>' → logprob: -3.072533369064331
    5. '.' → logprob: -6.19753360748291
    6. '        ' → logprob: -6.44753360748291
    7. '  
' → logprob: -6.44753360748291
    8. ',' → logprob: -6.57253360748291
    9. '#' → logprob: -6.82253360748291
    10. '```' → logprob: -6.94753360748291

Token 738: ' earliest' (ID: 48721)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.5785040855407715
    2. 'max' → logprob: -0.8285040855407715
    3. 'min' → logprob: -7.3285040855407715
    4. ' max' → logprob: -7.8285040855407715
    5. 'the' → logprob: -7.8285040855407715
    6. '[self' → logprob: -8.20350456237793
    7. ' self' → logprob: -8.45350456237793
    8. '[max' → logprob: -8.45350456237793
    9. 'for' → logprob: -8.70350456237793
    10. '#' → logprob: -9.57850456237793

Token 739: ' arrivals' (ID: 126339)
  Prédit: '_arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_arr' → logprob: -0.026350347325205803
    2. 'arrival' → logprob: -4.151350498199463
    3. 'return' → logprob: -5.651350498199463
    4. 'arr' → logprob: -6.151350498199463
    5. '```' → logprob: -6.651350498199463
    6. '_return' → logprob: -6.651350498199463
    7. '_' → logprob: -7.526350498199463
    8. '_times' → logprob: -8.026350021362305
    9. '_time' → logprob: -8.401350021362305
    10. '`' → logprob: -8.401350021362305

Token 740: ' that' (ID: 484)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09083729237318039
    2. 'max' → logprob: -2.965837240219116
    3. '        
' → logprob: -3.590837240219116
    4. '
' → logprob: -5.715837478637695
    5. 'return' → logprob: -6.590837478637695
    6. ' max' → logprob: -6.715837478637695
    7. '```' → logprob: -8.215837478637695
    8. 'time' → logprob: -8.465837478637695
    9. '<|end|>' → logprob: -8.840837478637695
    10. '   ' → logprob: -9.090837478637695

Token 741: ' allowed' (ID: 9279)
  Prédit: 'allow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'allow' → logprob: -1.1190953254699707
    2. 'can' → logprob: -1.4940953254699707
    3. 'lead' → logprob: -2.4940953254699707
    4. ' can' → logprob: -2.9940953254699707
    5. 'end' → logprob: -3.2440953254699707
    6. '```' → logprob: -3.3690953254699707
    7. 'def' → logprob: -3.6190953254699707
    8. 'must' → logprob: -3.7440953254699707
    9. ' lead' → logprob: -3.7440953254699707
    10. 'allows' → logprob: -3.8690953254699707

Token 742: ' arrival' (ID: 24861)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 're' → logprob: -1.4977024793624878
    2. 'the' → logprob: -1.6227024793624878
    3. 'for' → logprob: -1.8727024793624878
    4. 'to' → logprob: -1.9977024793624878
    5. 'us' → logprob: -2.4977025985717773
    6. 'arrival' → logprob: -3.4977025985717773
    7. 'max' → logprob: -3.9977025985717773
    8. 'pass' → logprob: -3.9977025985717773
    9. '```' → logprob: -4.122702598571777
    10. 'them' → logprob: -4.247702598571777

Token 743: ' at' (ID: 540)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.041901107877492905
    2. '        
' → logprob: -4.291901111602783
    3. '<|end|>' → logprob: -4.791901111602783
    4. ' at' → logprob: -5.166901111602783
    5. 'return' → logprob: -5.541901111602783
    6. '
' → logprob: -5.666901111602783
    7. '        ' → logprob: -6.166901111602783
    8. '[' → logprob: -7.041901111602783
    9. '```' → logprob: -7.791901111602783
    10. '.' → logprob: -8.166900634765625

Token 744: ' N' (ID: 478)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00605298625305295
    2. 'the' → logprob: -5.1310529708862305
    3. '```' → logprob: -9.88105297088623
    4. ' self' → logprob: -10.25605297088623
    5. 'last' → logprob: -11.13105297088623
    6. '[self' → logprob: -11.88105297088623
    7. 'N' → logprob: -12.00605297088623
    8. ' the' → logprob: -12.88105297088623
    9. 'edge' → logprob: -13.25605297088623
    10. 'each' → logprob: -13.88105297088623

Token 745: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7297259569168091
    2. 'max' → logprob: -0.8547259569168091
    3. '        
' → logprob: -3.2297258377075195
    4. '
' → logprob: -3.3547258377075195
    5. '```' → logprob: -4.8547258377075195
    6. 'return' → logprob: -6.3547258377075195
    7. ' max' → logprob: -6.3547258377075195
    8. 'prev' → logprob: -6.7297258377075195
    9. 'wait' → logprob: -6.9797258377075195
    10. 'current' → logprob: -7.3547258377075195

Token 746: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0023870645090937614
    2. '        
' → logprob: -7.002387046813965
    3. 'return' → logprob: -7.877387046813965
    4. '```' → logprob: -8.127387046813965
    5. '<|end|>' → logprob: -8.627387046813965
    6. '   ' → logprob: -8.877387046813965
    7. 'max' → logprob: -9.002387046813965
    8. '
' → logprob: -9.127387046813965
    9. '#' → logprob: -9.752387046813965
    10. 'def' → logprob: -10.752387046813965

Token 747: ' #' (ID: 1069)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.11799503117799759
    2. '       ' → logprob: -2.242995023727417
    3. 'return' → logprob: -5.867995262145996
    4. ' max' → logprob: -7.117995262145996
    5. 'wait' → logprob: -7.742995262145996
    6. '        
' → logprob: -8.117995262145996
    7. '#' (adapté à ' #') → logprob: -8.117995262145996
    8. 'current' → logprob: -8.242995262145996
    9. '   ' → logprob: -9.867995262145996
    10. '
' → logprob: -9.992995262145996

Token 748: ' Actually' (ID: 50557)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.011913181282579899
    2. '       ' → logprob: -5.136913299560547
    3. 'return' → logprob: -5.386913299560547
    4. '#' → logprob: -6.886913299560547
    5. 'wait' → logprob: -9.386913299560547
    6. 'current' → logprob: -9.636913299560547
    7. 'def' → logprob: -9.761913299560547
    8. '```' → logprob: -10.011913299560547
    9. 'waiting' → logprob: -10.511913299560547
    10. ' max' → logprob: -11.011913299560547

Token 749: ',' (ID: 11)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.3817789554595947
    2. '#' → logprob: -2.1317789554595947
    3. ' max' → logprob: -2.2567789554595947
    4. '       ' → logprob: -3.5067789554595947
    5. 'def' → logprob: -3.8817789554595947
    6. '
' → logprob: -4.256778717041016
    7. 'arrival' → logprob: -4.756778717041016
    8. 'current' → logprob: -5.506778717041016
    9. ' #' → logprob: -5.881778717041016
    10. 'waiting' → logprob: -6.006778717041016

Token 750: ' we' (ID: 581)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.06907537579536438
    2. '#' → logprob: -3.069075345993042
    3. 'return' → logprob: -4.069075584411621
    4. 'def' → logprob: -6.444075584411621
    5. 'current' → logprob: -7.694075584411621
    6. 'wait' → logprob: -7.944075584411621
    7. 'curr' → logprob: -8.569075584411621
    8. 'path' → logprob: -8.819075584411621
    9. 'waiting' → logprob: -9.444075584411621
    10. ' max' → logprob: -9.569075584411621

Token 751: ' can' (ID: 665)
  Prédit: 'need'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'need' → logprob: -0.08146976679563522
    2. ' need' → logprob: -3.081469774246216
    3. 'can' → logprob: -4.581469535827637
    4. 'def' → logprob: -5.206469535827637
    5. 'cannot' → logprob: -5.831469535827637
    6. ' can' → logprob: -5.831469535827637
    7. 'don't' → logprob: -5.956469535827637
    8. 'should' → logprob: -6.206469535827637
    9. 'return' → logprob: -7.081469535827637
    10. 'could' → logprob: -7.456469535827637

Token 752: ' safely' (ID: 29018)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.5465096831321716
    2. 're' → logprob: -1.4215097427368164
    3. 'def' → logprob: -2.7965097427368164
    4. 'trace' → logprob: -3.0465097427368164
    5. '#' → logprob: -3.7965097427368164
    6. 'reverse' → logprob: -4.546509742736816
    7. 'find' → logprob: -5.046509742736816
    8. '```' → logprob: -5.171509742736816
    9. 'back' → logprob: -5.421509742736816
    10. 'use' → logprob: -5.546509742736816

Token 753: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.005147896707057953
    2. 'max' → logprob: -5.380147933959961
    3. 'consider' → logprob: -9.005147933959961
    4. 'def' → logprob: -9.130147933959961
    5. ' return' → logprob: -9.630147933959961
    6. 'ass' → logprob: -9.880147933959961
    7. 'take' → logprob: -10.005147933959961
    8. '```' → logprob: -10.630147933959961
    9. '       ' → logprob: -11.005147933959961
    10. 'answer' → logprob: -11.630147933959961

Token 754: ' earliest' (ID: 48721)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.6932106614112854
    2. 'max' → logprob: -0.6932106614112854
    3. ' max' → logprob: -10.19321060180664
    4. ' self' → logprob: -11.06821060180664
    5. 'min' → logprob: -12.31821060180664
    6. '   ' → logprob: -12.94321060180664
    7. '       ' → logprob: -13.69321060180664
    8. 'return' → logprob: -15.06821060180664
    9. 'maximum' → logprob: -15.19321060180664
    10. '(self' → logprob: -15.31821060180664

Token 755: '_arr' (ID: 25121)
  Prédit: '_arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_arr' → logprob: -0.0003321281401440501
    2. 'arrival' → logprob: -8.12533187866211
    3. 'arr' → logprob: -10.87533187866211
    4. 'Arrival' → logprob: -12.50033187866211
    5. '```' → logprob: -12.75033187866211
    6. 'return' → logprob: -12.75033187866211
    7. '[arr' → logprob: -13.25033187866211
    8. ' arrival' → logprob: -13.75033187866211
    9. 'time' → logprob: -14.00033187866211
    10. '[' → logprob: -14.25033187866211

Token 756: 'ival' (ID: 4552)
  Prédit: 'ival'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ival' → logprob: -0.00018732868193183094
    2. 'val' → logprob: -8.625186920166016
    3. 'al' → logprob: -12.125186920166016
    4. '[' → logprob: -14.000186920166016
    5. 'iv' → logprob: -15.125186920166016
    6. '_val' → logprob: -15.125186920166016
    7. 'ial' → logprob: -15.375186920166016
    8. 'ivals' → logprob: -15.375186920166016
    9. 'iva' → logprob: -16.375186920166016
    10. 'ive' → logprob: -17.000186920166016

Token 757: '[N' (ID: 49776)
  Prédit: '[self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[self' → logprob: -0.011445540003478527
    2. '[' → logprob: -4.88644552230835
    3. '<|end|>' → logprob: -5.88644552230835
    4. 'self' → logprob: -7.76144552230835
    5. '[
' → logprob: -8.511445999145508
    6. '[max' → logprob: -9.011445999145508
    7. '[:-' → logprob: -9.761445999145508
    8. ')' → logprob: -10.261445999145508
    9. '[:]' → logprob: -10.261445999145508
    10. '```' → logprob: -10.261445999145508

Token 758: '],' (ID: 2155)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.052272409200668335
    2. ']-' → logprob: -4.177272319793701
    3. '-' → logprob: -4.427272319793701
    4. ' -' → logprob: -4.552272319793701
    5. ' ]' → logprob: -5.052272319793701
    6. '])' → logprob: -5.552272319793701
    7. '[' → logprob: -6.677272319793701
    8. ')' → logprob: -6.802272319793701
    9. '])-' → logprob: -8.67727279663086
    10. ' ])' → logprob: -9.17727279663086

Token 759: ' since' (ID: 3630)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 760: ' waiting' (ID: 12028)
  Prédit: 'it'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'it' → logprob: -1.0311692953109741
    2. 'self' → logprob: -1.0311692953109741
    3. 'the' → logprob: -1.9061692953109741
    4. 'max' → logprob: -2.9061694145202637
    5. 'waiting' → logprob: -3.5311694145202637
    6. 'it's' → logprob: -4.531169414520264
    7. 'that' → logprob: -4.906169414520264
    8. 'we' → logprob: -5.031169414520264
    9. 'ear' → logprob: -5.156169414520264
    10. '0' → logprob: -5.281169414520264

Token 761: ' is' (ID: 382)
  Prédit: '_time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.5762429237365723
    2. ' at' → logprob: -1.9512429237365723
    3. 'time' → logprob: -2.0762429237365723
    4. '_' → logprob: -2.4512429237365723
    5. '_times' → logprob: -3.8262429237365723
    6. 'at' → logprob: -3.9512429237365723
    7. '<|end|>' → logprob: -4.076242923736572
    8. ' time' → logprob: -4.451242923736572
    9. '[' → logprob: -5.576242923736572
    10. ' times' → logprob: -6.076242923736572

Token 762: ' max' (ID: 2999)
  Prédit: 'ear'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ear' → logprob: -0.9781658053398132
    2. 'self' → logprob: -1.228165864944458
    3. 'max' → logprob: -1.478165864944458
    4. ' self' → logprob: -2.978165864944458
    5. ' earliest' → logprob: -3.603165864944458
    6. ' max' → logprob: -4.728165626525879
    7. 'the' → logprob: -5.478165626525879
    8. 'equal' → logprob: -6.228165626525879
    9. 'arrival' → logprob: -6.603165626525879
    10. ' at' → logprob: -6.853165626525879

Token 763: ' among' (ID: 6200)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.0176751613616943
    2. '(self' → logprob: -1.1426751613616943
    3. '(
' → logprob: -2.5176751613616943
    4. 'self' → logprob: -2.6426751613616943
    5. '_' → logprob: -3.5176751613616943
    6. '(max' → logprob: -3.7676751613616943
    7. '_arr' → logprob: -3.8926751613616943
    8. '_time' → logprob: -4.142675399780273
    9. '       ' → logprob: -4.892675399780273
    10. 'arrival' → logprob: -5.017675399780273

Token 764: ' islands' (ID: 45758)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.01450441312044859
    2. '[self' → logprob: -5.014504432678223
    3. 'all' → logprob: -6.014504432678223
    4. '[' → logprob: -6.389504432678223
    5. 'the' → logprob: -6.764504432678223
    6. 'ear' → logprob: -6.764504432678223
    7. 'arrival' → logprob: -7.264504432678223
    8. ' self' → logprob: -8.264504432678223
    9. '[
' → logprob: -8.514504432678223
    10. 'arr' → logprob: -10.514504432678223

Token 765: ' before' (ID: 2254)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 766: ' reaching' (ID: 29787)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.015150860883295536
    2. ' self' → logprob: -5.140151023864746
    3. 'N' → logprob: -5.265151023864746
    4. 'the' → logprob: -6.390151023864746
    5. '```' → logprob: -6.390151023864746
    6. '[self' → logprob: -8.890151023864746
    7. '`' → logprob: -9.015151023864746
    8. ' N' → logprob: -9.390151023864746
    9. ' the' → logprob: -9.890151023864746
    10. '   ' → logprob: -10.265151023864746

Token 767: ' N' (ID: 478)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.06483262032270432
    2. 'N' → logprob: -3.5648326873779297
    3. ' self' → logprob: -4.56483268737793
    4. 'the' → logprob: -4.68983268737793
    5. '[N' → logprob: -5.68983268737793
    6. ' N' → logprob: -5.81483268737793
    7. '```' → logprob: -5.81483268737793
    8. '[self' → logprob: -5.93983268737793
    9. ' the' → logprob: -6.81483268737793
    10. '`' → logprob: -7.43983268737793

Token 768: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 769: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08244581520557404
    2. '<|end|>' → logprob: -3.2074458599090576
    3. '
' → logprob: -4.5824456214904785
    4. '[' → logprob: -5.4574456214904785
    5. '        
' → logprob: -5.4574456214904785
    6. '+' → logprob: -5.7074456214904785
    7. '        ' → logprob: -5.9574456214904785
    8. ' +' → logprob: -6.0824456214904785
    9. 'return' → logprob: -6.0824456214904785
    10. ')' → logprob: -6.0824456214904785

Token 770: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20851922035217285
    2. 'return' → logprob: -1.7085192203521729
    3. ' return' → logprob: -5.208518981933594
    4. '        
' → logprob: -6.583518981933594
    5. '	' → logprob: -9.833518981933594
    6. '   ' → logprob: -10.333518981933594
    7. ' ' → logprob: -10.833518981933594
    8. '	return' → logprob: -11.208518981933594
    9. '.' → logprob: -11.208518981933594
    10. '\' → logprob: -11.333518981933594

Token 771: ' Because' (ID: 13602)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.10033746063709259
    2. '       ' → logprob: -2.350337505340576
    3. ' return' → logprob: -9.100337028503418
    4. '```' → logprob: -11.100337028503418
    5. '   ' → logprob: -12.850337028503418
    6. '	return' → logprob: -14.475337028503418
    7. '        
' → logprob: -14.475337028503418
    8. '
' → logprob: -16.475337982177734
    9. '{return' → logprob: -16.725337982177734
    10. '``' → logprob: -16.725337982177734

Token 772: ' arrival' (ID: 24861)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -1.1089290380477905
    2. 'waiting' → logprob: -1.1089290380477905
    3. 'arrival' → logprob: -2.48392915725708
    4. 'ear' → logprob: -2.60892915725708
    5. 'self' → logprob: -2.60892915725708
    6. 'we' → logprob: -3.60892915725708
    7. 'all' → logprob: -3.85892915725708
    8. 'any' → logprob: -3.98392915725708
    9. 'arr' → logprob: -4.48392915725708
    10. 'edges' → logprob: -5.48392915725708

Token 773: ' to' (ID: 316)
  Prédit: '_time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.12518095970153809
    2. '[' → logprob: -3.000180959701538
    3. '_' → logprob: -3.250180959701538
    4. '[N' → logprob: -4.250181198120117
    5. '[_' → logprob: -5.000181198120117
    6. '_times' → logprob: -5.750181198120117
    7. '
' → logprob: -7.000181198120117
    8. '[
' → logprob: -7.500181198120117
    9. '_[' → logprob: -7.500181198120117
    10. ']' → logprob: -7.625181198120117

Token 774: ' N' (ID: 478)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.22123681008815765
    2. 'the' → logprob: -1.9712368249893188
    3. 'N' → logprob: -3.0962367057800293
    4. 'is' → logprob: -5.096236705780029
    5. 'last' → logprob: -5.346236705780029
    6. ' self' → logprob: -6.471236705780029
    7. ' the' → logprob: -7.846236705780029
    8. ' N' → logprob: -8.346237182617188
    9. '```' → logprob: -8.721237182617188
    10. 'final' → logprob: -9.221237182617188

Token 775: ' means' (ID: 4748)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.633521318435669
    2. 'is' → logprob: -1.383521318435669
    3. ')' → logprob: -2.508521318435669
    4. ' represents' → logprob: -3.758521318435669
    5. ']' → logprob: -3.883521318435669
    6. '-' → logprob: -3.883521318435669
    7. 'rep' → logprob: -5.00852108001709
    8. ' can' → logprob: -5.00852108001709
    9. '>' → logprob: -5.38352108001709
    10. 'includes' → logprob: -5.50852108001709

Token 776: ' waiting' (ID: 12028)
  Prédit: 'waiting'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'waiting' → logprob: -0.1005253940820694
    2. ' waiting' → logprob: -3.725525379180908
    3. 'the' → logprob: -4.225525379180908
    4. 'we' → logprob: -4.225525379180908
    5. 'arrival' → logprob: -4.225525379180908
    6. 'arr' → logprob: -4.975525379180908
    7. 'all' → logprob: -5.850525379180908
    8. 'no' → logprob: -5.850525379180908
    9. 'that' → logprob: -6.350525379180908
    10. 're' → logprob: -6.475525379180908

Token 777: ' at' (ID: 540)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3414897322654724
    2. '[' → logprob: -1.8414897918701172
    3. '[self' → logprob: -2.841489791870117
    4. '[n' → logprob: -4.216489791870117
    5. '[N' → logprob: -4.341489791870117
    6. '
' → logprob: -4.591489791870117
    7. '        
' → logprob: -4.841489791870117
    8. ' at' → logprob: -4.841489791870117
    9. 'return' → logprob: -5.466489791870117
    10. '        ' → logprob: -5.716489791870117

Token 778: ' previous' (ID: 5880)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.3849271535873413
    2. 'previous' → logprob: -2.384927272796631
    3. 'inter' → logprob: -2.759927272796631
    4. 'the' → logprob: -2.884927272796631
    5. 'any' → logprob: -3.884927272796631
    6. 'N' → logprob: -4.134927272796631
    7. 'each' → logprob: -4.134927272796631
    8. 'last' → logprob: -4.384927272796631
    9. 'an' → logprob: -4.759927272796631
    10. 'some' → logprob: -5.134927272796631

Token 779: ' island' (ID: 18149)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.0210316963493824
    2. ' islands' → logprob: -5.146031856536865
    3. '_is' → logprob: -5.771031856536865
    4. ' island' → logprob: -5.896031856536865
    5. 'edges' → logprob: -6.146031856536865
    6. ')' → logprob: -6.271031856536865
    7. 'nodes' → logprob: -7.021031856536865
    8. '+' → logprob: -7.396031856536865
    9. '
' → logprob: -7.396031856536865
    10. 'bridge' → logprob: -7.771031856536865

Token 780: ' until' (ID: 4609)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10648109763860703
    2. 'return' → logprob: -2.4814810752868652
    3. '        
' → logprob: -4.231481075286865
    4. '
' → logprob: -6.356481075286865
    5. ' return' → logprob: -7.231481075286865
    6. '	' → logprob: -9.731481552124023
    7. '        ' → logprob: -9.856481552124023
    8. '    
' → logprob: -10.356481552124023
    9. '   ' → logprob: -10.481481552124023
    10. ',' → logprob: -10.481481552124023

Token 781: ' that' (ID: 484)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edge' → logprob: -0.1753641664981842
    2. 'the' → logprob: -2.5503642559051514
    3. 'that' → logprob: -3.8003642559051514
    4. 't' → logprob: -4.050364017486572
    5. 'bridge' → logprob: -4.300364017486572
    6. 'self' → logprob: -4.425364017486572
    7. 'arrival' → logprob: -4.425364017486572
    8. 'ear' → logprob: -5.800364017486572
    9. 'time' → logprob: -7.550364017486572
    10. 'edges' → logprob: -8.30036449432373

Token 782: ' bridge' (ID: 23273)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.4604264497756958
    2. ')' → logprob: -2.2104263305664062
    3. '_time' → logprob: -2.5854263305664062
    4. 'arrival' → logprob: -2.8354263305664062
    5. 'point' → logprob: -2.9604263305664062
    6. ' time' → logprob: -4.085426330566406
    7. 'return' → logprob: -4.210426330566406
    8. 'self' → logprob: -4.585426330566406
    9. '
' → logprob: -5.585426330566406
    10. 'is' → logprob: -5.585426330566406

Token 783: ''s' (ID: 885)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4409969449043274
    2. '
' → logprob: -1.3159968852996826
    3. '        
' → logprob: -2.6909968852996826
    4. 'return' → logprob: -4.315997123718262
    5. '[' → logprob: -5.815997123718262
    6. '+' → logprob: -7.315997123718262
    7. '[self' → logprob: -7.565997123718262
    8. '        ' → logprob: -7.690997123718262
    9. ' +' → logprob: -7.940997123718262
    10. ',' → logprob: -8.440997123718262

Token 784: ' tide' (ID: 69214)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.050886962562799454
    2. 'time' → logprob: -3.050886869430542
    3. ' tide' → logprob: -6.800887107849121
    4. 'tid' → logprob: -8.050887107849121
    5. 'c' → logprob: -8.425887107849121
    6. 'opening' → logprob: -8.675887107849121
    7. 'edge' → logprob: -8.925887107849121
    8. '```' → logprob: -9.550887107849121
    9. 'departure' → logprob: -9.675887107849121
    10. ' time' → logprob: -10.550887107849121

Token 785: '_time' (ID: 6425)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.76603764295578
    2. '
' → logprob: -1.5160377025604248
    3. '        
' → logprob: -1.7660377025604248
    4. '[' → logprob: -3.016037702560425
    5. '[self' → logprob: -3.766037702560425
    6. ' +' → logprob: -3.891037702560425
    7. '+' → logprob: -4.516037464141846
    8. 'return' → logprob: -4.766037464141846
    9. '<|end|>' → logprob: -4.766037464141846
    10. ')' → logprob: -5.391037464141846

Token 786: ',
' (ID: 412)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05364236980676651
    2. 'return' → logprob: -3.0536422729492188
    3. '        
' → logprob: -6.178642272949219
    4. '
' → logprob: -6.553642272949219
    5. ' return' → logprob: -6.678642272949219
    6. '	' → logprob: -9.178642272949219
    7. '   ' → logprob: -9.678642272949219
    8. ',' → logprob: -10.803642272949219
    9. '    
' → logprob: -11.053642272949219
    10. '  
' → logprob: -11.303642272949219

Token 787: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013147995807230473
    2. 'return' → logprob: -4.513147830963135
    3. ' return' → logprob: -6.513147830963135
    4. '        
' → logprob: -8.388148307800293
    5. '   ' → logprob: -8.888148307800293
    6. '           ' → logprob: -9.513148307800293
    7. ' and' → logprob: -10.513148307800293
    8. ')' → logprob: -11.013148307800293
    9. '               ' → logprob: -11.138148307800293
    10. '      ' → logprob: -11.388148307800293

Token 788: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.047049108892679214
    2. 'return' → logprob: -3.797049045562744
    3. ' return' → logprob: -4.547049045562744
    4. ')' → logprob: -5.172049045562744
    5. ' and' → logprob: -6.172049045562744
    6. '        
' → logprob: -6.422049045562744
    7. '   ' → logprob: -7.047049045562744
    8. ' ' → logprob: -7.297049045562744
    9. '           ' → logprob: -7.672049045562744
    10. '
' → logprob: -8.797049522399902

Token 789: ' and' (ID: 326)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.04427957534790039
    2. '       ' → logprob: -3.2942795753479004
    3. '#' → logprob: -5.6692795753479
    4. ' return' → logprob: -5.9192795753479
    5. '   ' → logprob: -10.169279098510742
    6. '        
' → logprob: -11.294279098510742
    7. '
' → logprob: -12.044279098510742
    8. 'else' → logprob: -12.044279098510742
    9. '```' → logprob: -12.169279098510742
    10. ' #' → logprob: -12.669279098510742

Token 790: ' arrival' (ID: 24861)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.6972581744194031
    2. 'return' → logprob: -0.8222581744194031
    3. 'the' → logprob: -4.072257995605469
    4. 'we' → logprob: -4.197257995605469
    5. ' self' → logprob: -4.697257995605469
    6. ' return' → logprob: -5.072257995605469
    7. '```' → logprob: -6.072257995605469
    8. ' the' → logprob: -6.197257995605469
    9. 'arrival' → logprob: -6.197257995605469
    10. '       ' → logprob: -6.322257995605469

Token 791: ' times' (ID: 4238)
  Prédit: ' at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' at' → logprob: -0.8004435896873474
    2. '_time' → logprob: -0.8004435896873474
    3. '[' → logprob: -3.175443649291992
    4. ' to' → logprob: -3.675443649291992
    5. 'to' → logprob: -4.800443649291992
    6. '_to' → logprob: -4.925443649291992
    7. ' time' → logprob: -5.425443649291992
    8. '_times' → logprob: -5.550443649291992
    9. 'at' → logprob: -5.800443649291992
    10. '_' → logprob: -5.800443649291992

Token 792: ' to' (ID: 316)
  Prédit: ' at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' at' → logprob: -0.4072665870189667
    2. '[self' → logprob: -2.032266616821289
    3. '[' → logprob: -2.282266616821289
    4. '[-' → logprob: -3.032266616821289
    5. '[end' → logprob: -4.532266616821289
    6. ' are' → logprob: -4.782266616821289
    7. 'at' → logprob: -5.282266616821289
    8. ' can' → logprob: -5.782266616821289
    9. ')' → logprob: -5.907266616821289
    10. '.' → logprob: -6.282266616821289

Token 793: ' nodes' (ID: 15749)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -1.2382574081420898
    2. 'is' → logprob: -1.4882574081420898
    3. 'each' → logprob: -2.11325740814209
    4. 'all' → logprob: -2.23825740814209
    5. 'the' → logprob: -2.61325740814209
    6. 'self' → logprob: -2.73825740814209
    7. 'any' → logprob: -2.86325740814209
    8. 'previous' → logprob: -4.11325740814209
    9. 'inter' → logprob: -4.23825740814209
    10. 'other' → logprob: -4.86325740814209

Token 794: ' are' (ID: 553)
  Prédit: '[:-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:-' → logprob: -0.2698799669742584
    2. ' are' → logprob: -2.5198800563812256
    3. '[' → logprob: -3.2698800563812256
    4. ')' → logprob: -3.5198800563812256
    5. '[self' → logprob: -3.5198800563812256
    6. ']' → logprob: -3.7698800563812256
    7. '[:' → logprob: -5.2698798179626465
    8. 'except' → logprob: -5.6448798179626465
    9. '[-' → logprob: -5.6448798179626465
    10. 'are' → logprob: -5.8948798179626465

Token 795: ' non' (ID: 2893)
  Prédit: 'non'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'non' → logprob: -0.059433434158563614
    2. 'mon' → logprob: -3.5594334602355957
    3. ' non' → logprob: -5.059433460235596
    4. 'in' → logprob: -5.434433460235596
    5. 'always' → logprob: -5.559433460235596
    6. 'exact' → logprob: -5.559433460235596
    7. 'the' → logprob: -5.934433460235596
    8. 'strict' → logprob: -6.809433460235596
    9. 'c' → logprob: -7.184433460235596
    10. 'all' → logprob: -7.434433460235596

Token 796: '-de' (ID: 8797)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.02353615127503872
    2. '-de' → logprob: -3.773536205291748
    3. ' decreasing' → logprob: -8.89853572845459
    4. '   ' → logprob: -9.02353572845459
    5. '_de' → logprob: -10.89853572845459
    6. '-' → logprob: -11.89853572845459
    7. '```' → logprob: -13.02353572845459
    8. '       ' → logprob: -13.39853572845459
    9. 'strict' → logprob: -13.77353572845459
    10. 'descending' → logprob: -13.77353572845459

Token 797: 'creasing' (ID: 57252)
  Prédit: 'creasing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'creasing' → logprob: -1.9361264946837764e-07
    2. 'cre' → logprob: -16.375
    3. 'crement' → logprob: -17.0
    4. 'crease' → logprob: -17.0
    5. 'creased' → logprob: -17.125
    6. 'creating' → logprob: -19.25
    7. '...' → logprob: -19.75
    8. 'creases' → logprob: -19.875
    9. '```' → logprob: -20.0
    10. '
' → logprob: -21.0

Token 798: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2928038239479065
    2. 'return' → logprob: -1.5428037643432617
    3. '
' → logprob: -3.9178037643432617
    4. '        
' → logprob: -4.042803764343262
    5. ' return' → logprob: -6.917803764343262
    6. '<|end|>' → logprob: -8.042803764343262
    7. '	' → logprob: -8.292803764343262
    8. '		
' → logprob: -8.667803764343262
    9. ',' → logprob: -9.292803764343262
    10. '.' → logprob: -9.417803764343262

Token 799: 'waiting' (ID: 103123)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.262153685092926
    2. ')
' → logprob: -1.7621536254882812
    3. '),' → logprob: -3.1371536254882812
    4. '       ' → logprob: -5.637153625488281
    5. 'due' → logprob: -5.887153625488281
    6. 'and' → logprob: -6.512153625488281
    7. ').' → logprob: -6.637153625488281
    8. ' due' → logprob: -6.887153625488281
    9. ' )' → logprob: -7.012153625488281
    10. ' )
' → logprob: -7.637153625488281

Token 800: ' only' (ID: 1606)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9420093894004822
    2. ' times' → logprob: -1.942009449005127
    3. ' until' → logprob: -1.942009449005127
    4. ' at' → logprob: -2.192009449005127
    5. ' for' → logprob: -3.567009449005127
    6. 'until' → logprob: -3.692009449005127
    7. 'times' → logprob: -3.817009449005127
    8. ' )' → logprob: -3.942009449005127
    9. ' or' → logprob: -4.067009449005127
    10. 'at' → logprob: -4.317009449005127

Token 801: ').
' (ID: 6294)
  Prédit: 'or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.6452893614768982
    2. ' or' → logprob: -1.395289421081543
    3. 'in' → logprob: -2.395289421081543
    4. ')' → logprob: -2.520289421081543
    5. 'at' → logprob: -4.395289421081543
    6. 'increments' → logprob: -4.770289421081543
    7. ' increases' → logprob: -4.895289421081543
    8. 'to' → logprob: -5.645289421081543
    9. '),' → logprob: -5.770289421081543
    10. ' at' → logprob: -5.770289421081543

Token 802: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014589693397283554
    2. 'return' → logprob: -4.264589786529541
    3. ' return' → logprob: -8.514589309692383
    4. '        
' → logprob: -9.139589309692383
    5. '	' → logprob: -10.014589309692383
    6. '   ' → logprob: -10.139589309692383
    7. '
' → logprob: -11.139589309692383
    8. '           ' → logprob: -11.514589309692383
    9. '               ' → logprob: -12.764589309692383
    10. '	return' → logprob: -13.514589309692383

Token 803: ' max' (ID: 2999)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12753838300704956
    2. 'return' → logprob: -2.1275384426116943
    3. '        
' → logprob: -8.252538681030273
    4. ' return' → logprob: -8.377538681030273
    5. '
' → logprob: -9.127538681030273
    6. '   ' → logprob: -12.502538681030273
    7. '```' → logprob: -13.127538681030273
    8. '	' → logprob: -13.377538681030273
    9. '	return' → logprob: -13.877538681030273
    10. '  
' → logprob: -14.377538681030273

Token 804: '_wait' (ID: 44250)
  Prédit: '_wait'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_wait' → logprob: -0.027605632320046425
    2. '_arr' → logprob: -4.0276055335998535
    3. '_' → logprob: -5.1526055335998535
    4. '_time' → logprob: -5.6526055335998535
    5. '_return' → logprob: -9.902606010437012
    6. ' _' → logprob: -11.277606010437012
    7. '_w' → logprob: -11.902606010437012
    8. '_times' → logprob: -12.152606010437012
    9. '_WAIT' → logprob: -12.277606010437012
    10. 'Wait' → logprob: -12.402606010437012

Token 805: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.019056202843785286
    2. '_' → logprob: -4.76905632019043
    3. ' =' → logprob: -4.89405632019043
    4. '=' → logprob: -6.01905632019043
    5. 'ing' → logprob: -8.39405632019043
    6. '=_' → logprob: -9.14405632019043
    7. 'ed' → logprob: -9.39405632019043
    8. '_=' → logprob: -11.89405632019043
    9. '_times' → logprob: -12.01905632019043
    10. '   ' → logprob: -12.14405632019043

Token 806: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3132745921611786
    2. ' =' → logprob: -1.313274621963501
    3. '=self' → logprob: -11.313274383544922
    4. ' ' → logprob: -15.563274383544922
    5. ',' → logprob: -15.938274383544922
    6. '=max' → logprob: -16.438274383544922
    7. '=int' → logprob: -16.563274383544922
    8. '=
' → logprob: -16.563274383544922
    9. ':' → logprob: -16.938274383544922
    10. ' =
' → logprob: -17.063274383544922

Token 807: ' -' (ID: 533)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.2567543685436249
    2. 'max' → logprob: -1.5067543983459473
    3. '0' → logprob: -5.381754398345947
    4. ' self' → logprob: -8.881753921508789
    5. ' max' → logprob: -9.631753921508789
    6. '-' → logprob: -13.006753921508789
    7. 'min' → logprob: -14.006753921508789
    8. '(self' → logprob: -14.006753921508789
    9. '[self' → logprob: -14.006753921508789
    10. '-self' → logprob: -14.006753921508789

Token 808: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.007446425035595894
    2. 'float' → logprob: -5.3824462890625
    3. 'max' → logprob: -6.0074462890625
    4. 'sys' → logprob: -9.3824462890625
    5. 'min' → logprob: -10.0074462890625
    6. '0' → logprob: -10.0074462890625
    7. 'inf' → logprob: -10.1324462890625
    8. '(' → logprob: -10.3824462890625
    9. 'self' → logprob: -10.6324462890625
    10. '```' → logprob: -10.7574462890625

Token 809: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.06564018875360489
    2. '       ' → logprob: -2.9406402111053467
    3. ' for' → logprob: -5.565639972686768
    4. '        
' → logprob: -5.940639972686768
    5. 'for' → logprob: -6.065639972686768
    6. ' 
' → logprob: -7.190639972686768
    7. '
' → logprob: -7.940639972686768
    8. '    
' → logprob: -8.440640449523926
    9. '  
' → logprob: -8.940640449523926
    10. '' → logprob: -9.190640449523926

Token 810: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7052515745162964
    2. '       ' → logprob: -0.8302515745162964
    3. ' for' → logprob: -3.455251693725586
    4. 'for' → logprob: -3.955251693725586
    5. '        
' → logprob: -4.330251693725586
    6. '' → logprob: -6.080251693725586
    7. ' 
' → logprob: -7.080251693725586
    8. '
' → logprob: -7.205251693725586
    9. '    
' → logprob: -7.455251693725586
    10. '  
' → logprob: -7.830251693725586

Token 811: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0018877071561291814
    2. '       ' → logprob: -6.626887798309326
    3. 'current' → logprob: -7.876887798309326
    4. 'max' → logprob: -8.876887321472168
    5. ' for' → logprob: -10.501887321472168
    6. 'curr' → logprob: -12.376887321472168
    7. 'queue' → logprob: -12.751887321472168
    8. 'return' → logprob: -13.501887321472168
    9. 'arrival' → logprob: -13.626887321472168
    10. 'visited' → logprob: -14.001887321472168

Token 812: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.024723470211029053
    2. 'is' → logprob: -4.399723529815674
    3. 'time' → logprob: -4.524723529815674
    4. 'node' → logprob: -7.149723529815674
    5. ' i' → logprob: -8.024723052978516
    6. 't' → logprob: -9.399723052978516
    7. 'idx' → logprob: -10.274723052978516
    8. 'arrival' → logprob: -10.274723052978516
    9. ' island' → logprob: -10.899723052978516
    10. ' time' → logprob: -12.024723052978516

Token 813: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.08897894620895386
    2. 'in' → logprob: -2.4639790058135986
    3. ' ' → logprob: -11.08897876739502
    4. ',' → logprob: -11.96397876739502
    5. 'i' → logprob: -12.33897876739502
    6. '	in' → logprob: -12.33897876739502
    7. ' i' → logprob: -12.71397876739502
    8. '1' → logprob: -13.83897876739502
    9. '<|end|>' → logprob: -13.83897876739502
    10. '=' → logprob: -13.83897876739502

Token 814: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0007099286303855479
    2. ' range' → logprob: -7.2507100105285645
    3. '(range' → logprob: -18.125709533691406
    4. '   ' → logprob: -20.125709533691406
    5. ' ' → logprob: -20.250709533691406
    6. '	range' → logprob: -20.375709533691406
    7. '  ' → logprob: -22.000709533691406
    8. 'list' → logprob: -22.000709533691406
    9. '
' → logprob: -22.250709533691406
    10. 'Range' → logprob: -22.875709533691406

Token 815: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.018158607184886932
    2. '1' → logprob: -4.018158435821533
    3. ' (' → logprob: -12.393158912658691
    4. ',' → logprob: -12.768158912658691
    5. ' ' → logprob: -13.518158912658691
    6. '(
' → logprob: -15.643158912658691
    7. '   ' → logprob: -16.268157958984375
    8. '<|end|>' → logprob: -16.643157958984375
    9. '[' → logprob: -17.643157958984375
    10. '       ' → logprob: -18.018157958984375

Token 816: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. 'self' → logprob: -14.875000953674316
    3. ' ' → logprob: -15.750000953674316
    4. '   ' → logprob: -18.375
    5. '       ' → logprob: -20.875
    6. '```' → logprob: -22.0
    7. '(' → logprob: -22.125
    8. '
' → logprob: -22.125
    9. '１' → logprob: -22.375
    10. ' self' → logprob: -22.375

Token 817: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006832113955169916
    2. ' ,' → logprob: -5.006832122802734
    3. ',i' → logprob: -9.631832122802734
    4. ',len' → logprob: -11.256832122802734
    5. '<|end|>' → logprob: -11.756832122802734
    6. ',self' → logprob: -12.256832122802734
    7. '1' → logprob: -12.631832122802734
    8. '   ' → logprob: -12.756832122802734
    9. ',
' → logprob: -12.881832122802734
    10. 'i' → logprob: -13.256832122802734

Token 818: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.981667537620524e-06
    2. ' self' → logprob: -13.250001907348633
    3. '   ' → logprob: -16.750001907348633
    4. '       ' → logprob: -17.125001907348633
    5. '
' → logprob: -17.500001907348633
    6. '           ' → logprob: -18.625001907348633
    7. '```' → logprob: -20.125001907348633
    8. '(self' → logprob: -20.500001907348633
    9. '[self' → logprob: -20.625001907348633
    10. '	self' → logprob: -20.875001907348633

Token 819: '.N' (ID: 4439)
  Prédit: '.N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.N' → logprob: -0.00328656705096364
    2. '.graph' → logprob: -6.128286361694336
    3. '.' → logprob: -7.503286361694336
    4. 'self' → logprob: -8.378286361694336
    5. ' .' → logprob: -8.878286361694336
    6. 'graph' → logprob: -10.253286361694336
    7. '.user' → logprob: -10.628286361694336
    8. '...' → logprob: -10.878286361694336
    9. 'N' → logprob: -11.003286361694336
    10. '.self' → logprob: -11.128286361694336

Token 820: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.38762372732162476
    2. '):' → logprob: -1.1376237869262695
    3. ' ):
' → logprob: -8.51262378692627
    4. ' ):' → logprob: -8.63762378692627
    5. '+' → logprob: -9.26262378692627
    6. '<|end|>' → logprob: -9.51262378692627
    7. ')' → logprob: -9.63762378692627
    8. '):
' → logprob: -10.38762378692627
    9. ',' → logprob: -10.38762378692627
    10. '):

' → logprob: -10.63762378692627

Token 821: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06604178249835968
    2. ' if' → logprob: -3.0660417079925537
    3. 'if' → logprob: -4.066041946411133
    4. '   ' → logprob: -9.691041946411133
    5. '       ' → logprob: -10.191041946411133
    6. ',' → logprob: -10.691041946411133
    7. '	       ' → logprob: -12.066041946411133
    8. '               ' → logprob: -12.316041946411133
    9. '```' → logprob: -12.566041946411133
    10. 'max' → logprob: -12.566041946411133

Token 822: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.02409595437347889
    2. '           ' → logprob: -4.0240960121154785
    3. ' if' → logprob: -5.1490960121154785
    4. '   ' → logprob: -9.89909553527832
    5. 'max' → logprob: -10.52409553527832
    6. 'current' → logprob: -10.89909553527832
    7. 'time' → logprob: -11.27409553527832
    8. '       ' → logprob: -12.39909553527832
    9. '               ' → logprob: -12.89909553527832
    10. 'arrival' → logprob: -13.02409553527832

Token 823: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0014314282452687621
    2. ' self' → logprob: -6.751431465148926
    3. '           ' → logprob: -8.251431465148926
    4. '(self' → logprob: -15.251431465148926
    5. '               ' → logprob: -17.87643051147461
    6. '   ' → logprob: -18.12643051147461
    7. '	self' → logprob: -18.12643051147461
    8. '
' → logprob: -19.50143051147461
    9. '       ' → logprob: -19.50143051147461
    10. '0' → logprob: -19.50143051147461

Token 824: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.009760101325809956
    2. 'ear' → logprob: -4.634759902954102
    3. '.latest' → logprob: -14.384759902954102
    4. 'EAR' → logprob: -14.509759902954102
    5. '.max' → logprob: -14.634759902954102
    6. '
' → logprob: -14.634759902954102
    7. 'self' → logprob: -14.884759902954102
    8. ' .' → logprob: -15.009759902954102
    9. '.e' → logprob: -15.384759902954102
    10. '`.' → logprob: -15.759759902954102

Token 825: 'ear' (ID: 830)
  Prédit: 'ear'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ear' → logprob: -1.9361264946837764e-07
    2. ' earliest' → logprob: -16.75
    3. 'early' → logprob: -17.0
    4. 'latest' → logprob: -21.0
    5. '
' → logprob: -21.125
    6. '`' → logprob: -21.75
    7. '```' → logprob: -21.875
    8. 'elif' → logprob: -22.625
    9. 'is' → logprob: -22.75
    10. 'earth' → logprob: -23.0

Token 826: 'liest' (ID: 34647)
  Prédit: 'liest'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'liest' → logprob: -0.8975947499275208
    2. 'est' → logprob: -1.397594690322876
    3. 'iest' → logprob: -2.022594690322876
    4. 'val' → logprob: -2.397594690322876
    5. '[' → logprob: -3.397594690322876
    6. 'al' → logprob: -4.022594928741455
    7. 'ival' → logprob: -4.147594928741455
    8. 'arr' → logprob: -4.897594928741455
    9. '_arr' → logprob: -4.897594928741455
    10. 'ieval' → logprob: -5.522594928741455

Token 827: '_arr' (ID: 25121)
  Prédit: '_arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_arr' → logprob: -3.7697225252486533e-06
    2. '[i' → logprob: -14.250003814697266
    3. 'arrival' → logprob: -14.375003814697266
    4. 'arr' → logprob: -14.500003814697266
    5. '_wait' → logprob: -14.750003814697266
    6. '[' → logprob: -15.000003814697266
    7. '_ar' → logprob: -15.625003814697266
    8. '`' → logprob: -15.875003814697266
    9. '```' → logprob: -16.000003814697266
    10. '[_' → logprob: -16.000003814697266

Token 828: 'ival' (ID: 4552)
  Prédit: 'ival'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ival' → logprob: -0.028439752757549286
    2. 'val' → logprob: -4.028439521789551
    3. 'al' → logprob: -4.778439521789551
    4. '[' → logprob: -7.528439521789551
    5. 'ial' → logprob: -8.15343952178955
    6. '[i' → logprob: -8.27843952178955
    7. 'iv' → logprob: -9.02843952178955
    8. '_val' → logprob: -9.02843952178955
    9. '_arr' → logprob: -9.27843952178955
    10. '   ' → logprob: -10.02843952178955

Token 829: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.5048530030981055e-06
    2. 'i' → logprob: -14.000001907348633
    3. '[' → logprob: -14.375001907348633
    4. '```' → logprob: -17.125001907348633
    5. '[
' → logprob: -17.250001907348633
    6. '(i' → logprob: -17.625001907348633
    7. ' [' → logprob: -17.875001907348633
    8. '[I' → logprob: -18.375001907348633
    9. '   ' → logprob: -18.500001907348633
    10. '{i' → logprob: -18.500001907348633

Token 830: ']' (ID: 60)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.11306124180555344
    2. 'is' → logprob: -2.2380611896514893
    3. ')' → logprob: -8.61306095123291
    4. ')is' → logprob: -10.73806095123291
    5. '<|end|>' → logprob: -11.61306095123291
    6. ']' → logprob: -11.86306095123291
    7. 'i' → logprob: -12.98806095123291
    8. ' ' → logprob: -13.11306095123291
    9. '	is' → logprob: -13.36306095123291
    10. 'not' → logprob: -13.48806095123291

Token 831: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.17976213991641998
    2. 'is' → logprob: -1.8047621250152588
    3. '>' → logprob: -11.30476188659668
    4. 'not' → logprob: -13.42976188659668
    5. '<|end|>' → logprob: -13.80476188659668
    6. ' >' → logprob: -14.92976188659668
    7. 'i' → logprob: -15.17976188659668
    8. '!=' → logprob: -15.17976188659668
    9. 'Is' → logprob: -15.55476188659668
    10. ')' → logprob: -15.55476188659668

Token 832: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.016067449003458023
    2. ' not' → logprob: -4.1410675048828125
    3. 'None' → logprob: -10.766067504882812
    4. 'Not' → logprob: -12.891067504882812
    5. 'n' → logprob: -13.891067504882812
    6. '   ' → logprob: -14.141067504882812
    7. '       ' → logprob: -14.266067504882812
    8. '!' → logprob: -14.266067504882812
    9. '           ' → logprob: -14.391067504882812
    10. '>' → logprob: -14.391067504882812

Token 833: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -2.15310683415737e-05
    2. ' None' → logprob: -10.750021934509277
    3. 'not' → logprob: -17.50002098083496
    4. '0' → logprob: -18.00002098083496
    5. '_None' → logprob: -18.25002098083496
    6. '   ' → logprob: -18.50002098083496
    7. '```' → logprob: -18.75002098083496
    8. '(None' → logprob: -19.12502098083496
    9. '=None' → logprob: -19.25002098083496
    10. 'none' → logprob: -19.75002098083496

Token 834: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.0409916415810585
    2. 'and' → logprob: -3.5409915447235107
    3. '               ' → logprob: -5.16599178314209
    4. '           ' → logprob: -5.41599178314209
    5. ':
' → logprob: -7.29099178314209
    6. ':' → logprob: -8.16599178314209
    7. '	and' → logprob: -11.79099178314209
    8. '       ' → logprob: -12.16599178314209
    9. '                       ' → logprob: -12.16599178314209
    10. ',' → logprob: -12.16599178314209

Token 835: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.009963957592844963
    2. '           ' → logprob: -4.8849639892578125
    3. ' if' → logprob: -6.2599639892578125
    4. 'if' → logprob: -7.8849639892578125
    5. '```' → logprob: -10.634963989257812
    6. '                   ' → logprob: -12.009963989257812
    7. '                       ' → logprob: -12.009963989257812
    8. '<|end|>' → logprob: -12.259963989257812
    9. '	           ' → logprob: -12.509963989257812
    10. ',' → logprob: -12.634963989257812

Token 836: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -1.013061285018921
    2. ' if' → logprob: -1.138061285018921
    3. '               ' → logprob: -2.138061285018921
    4. '           ' → logprob: -2.263061285018921
    5. 'max' → logprob: -2.388061285018921
    6. ' max' → logprob: -6.0130615234375
    7. '                   ' → logprob: -9.0130615234375
    8. '```' → logprob: -9.7630615234375
    9. '   ' → logprob: -10.1380615234375
    10. ' ' → logprob: -11.7630615234375

Token 837: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.006176444701850414
    2. ' self' → logprob: -5.131176471710205
    3. '               ' → logprob: -8.506175994873047
    4. '                   ' → logprob: -10.131175994873047
    5. '           ' → logprob: -12.881175994873047
    6. 'max' → logprob: -13.631175994873047
    7. '   ' → logprob: -14.131175994873047
    8. '(self' → logprob: -14.506175994873047
    9. '                       ' → logprob: -15.631175994873047
    10. '                ' → logprob: -15.756175994873047

Token 838: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.061980124562978745
    2. 'ear' → logprob: -2.8119800090789795
    3. '.max' → logprob: -12.311980247497559
    4. 'max' → logprob: -13.061980247497559
    5. ' .' → logprob: -13.686980247497559
    6. '.e' → logprob: -14.186980247497559
    7. '.latest' → logprob: -14.436980247497559
    8. ' earliest' → logprob: -14.561980247497559
    9. '           ' → logprob: -15.186980247497559
    10. 'EAR' → logprob: -15.186980247497559

Token 839: 'ear' (ID: 830)
  Prédit: 'ear'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ear' → logprob: -5.512236498361744e-07
    2. ' earliest' → logprob: -15.625000953674316
    3. 'early' → logprob: -15.750000953674316
    4. 'max' → logprob: -16.125
    5. '.' → logprob: -17.125
    6. 'latest' → logprob: -18.625
    7. '   ' → logprob: -19.125
    8. 'ere' → logprob: -19.625
    9. '```' → logprob: -20.375
    10. '-ear' → logprob: -20.375

Token 840: 'liest' (ID: 34647)
  Prédit: '_arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_arr' → logprob: -0.2933179438114166
    2. 'arr' → logprob: -1.9183179140090942
    3. 'arrival' → logprob: -2.918318033218384
    4. 'ival' → logprob: -4.543317794799805
    5. 'al' → logprob: -4.793317794799805
    6. 'liest' → logprob: -5.043317794799805
    7. 'ear' → logprob: -5.043317794799805
    8. 'iest' → logprob: -5.293317794799805
    9. 'val' → logprob: -5.543317794799805
    10. 'est' → logprob: -6.043317794799805

Token 841: '_arr' (ID: 25121)
  Prédit: '_arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_arr' → logprob: -9.114600834436715e-05
    2. 'arrival' → logprob: -9.375091552734375
    3. 'arr' → logprob: -12.625091552734375
    4. 'Arrival' → logprob: -13.750091552734375
    5. '           ' → logprob: -14.750091552734375
    6. '_wait' → logprob: -15.375091552734375
    7. '[i' → logprob: -15.500091552734375
    8. '```' → logprob: -15.875091552734375
    9. '_ar' → logprob: -16.125091552734375
    10. '`' → logprob: -16.250091552734375

Token 842: 'ival' (ID: 4552)
  Prédit: 'ival'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ival' → logprob: -0.1110161691904068
    2. 'val' → logprob: -2.611016273498535
    3. 'al' → logprob: -3.611016273498535
    4. 'ial' → logprob: -6.611016273498535
    5. '[' → logprob: -7.611016273498535
    6. '       ' → logprob: -7.861016273498535
    7. '_arr' → logprob: -7.861016273498535
    8. '   ' → logprob: -8.111016273498535
    9. '[i' → logprob: -8.361016273498535
    10. '_time' → logprob: -8.611016273498535

Token 843: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.292907877039397e-06
    2. 'i' → logprob: -13.50000286102295
    3. ' [' → logprob: -14.12500286102295
    4. '[' → logprob: -14.12500286102295
    5. '```' → logprob: -15.50000286102295
    6. '[
' → logprob: -16.375003814697266
    7. '   ' → logprob: -16.625003814697266
    8. '>' → logprob: -17.500003814697266
    9. '(i' → logprob: -18.000003814697266
    10. '[I' → logprob: -18.125003814697266

Token 844: ']' (ID: 60)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.0430457778275013
    2. ' >' → logprob: -3.16804575920105
    3. '>
' → logprob: -10.793045997619629
    4. ' >
' → logprob: -11.793045997619629
    5. '[' → logprob: -12.293045997619629
    6. ' ' → logprob: -13.043045997619629
    7. ']>' → logprob: -13.293045997619629
    8. '+' → logprob: -13.793045997619629
    9. ')>' → logprob: -13.918045997619629
    10. ']' → logprob: -14.293045997619629

Token 845: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.14273105561733246
    2. ' >' → logprob: -2.017730951309204
    3. ' ' → logprob: -10.142730712890625
    4. ' >
' → logprob: -12.517730712890625
    5. '>
' → logprob: -12.642730712890625
    6. '[' → logprob: -12.767730712890625
    7. '   ' → logprob: -14.017730712890625
    8. '  ' → logprob: -14.642730712890625
    9. ' ' → logprob: -14.642730712890625
    10. ')>' → logprob: -14.892730712890625

Token 846: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.0007100477814674377
    2. ' max' → logprob: -7.2507100105285645
    3. '           ' → logprob: -17.750709533691406
    4. '               ' → logprob: -18.125709533691406
    5. '
' → logprob: -18.750709533691406
    6. '	max' → logprob: -18.875709533691406
    7. '                   ' → logprob: -19.750709533691406
    8. '=max' → logprob: -19.875709533691406
    9. '_max' → logprob: -20.250709533691406
    10. '[max' → logprob: -20.250709533691406

Token 847: '_wait' (ID: 44250)
  Prédit: '_wait'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_wait' → logprob: -1.3663626305060461e-05
    2. 'wait' → logprob: -11.25001335144043
    3. 'max' → logprob: -15.25001335144043
    4. 'Wait' → logprob: -15.25001335144043
    5. '_WAIT' → logprob: -17.37501335144043
    6. '_max' → logprob: -17.75001335144043
    7. '```' → logprob: -17.87501335144043
    8. '(wait' → logprob: -18.37501335144043
    9. '
' → logprob: -18.75001335144043
    10. '(max' → logprob: -19.87501335144043

Token 848: '_time' (ID: 6425)
  Prédit: '_wait'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_wait' → logprob: -0.02324908785521984
    2. '_time' → logprob: -3.7732491493225098
    3. 'Wait' → logprob: -13.398248672485352
    4. 'wait' → logprob: -14.023248672485352
    5. '_max' → logprob: -14.148248672485352
    6. '_WAIT' → logprob: -15.523248672485352
    7. '_' → logprob: -15.773248672485352
    8. '\' → logprob: -17.52324867248535
    9. 'max' → logprob: -17.64824867248535
    10. '       ' → logprob: -17.64824867248535

Token 849: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.2678372859954834
    2. ':' → logprob: -1.5178372859954834
    3. '                   ' → logprob: -4.6428375244140625
    4. '                       ' → logprob: -6.0178375244140625
    5. '               ' → logprob: -6.5178375244140625
    6. '           ' → logprob: -6.5178375244140625
    7. '):
' → logprob: -7.8928375244140625
    8. '                           ' → logprob: -8.392837524414062
    9. '=' → logprob: -10.892837524414062
    10. ':max' → logprob: -11.017837524414062

Token 850: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.16379904747009277
    2. ' max' → logprob: -2.6637990474700928
    3. 'max' → logprob: -2.9137990474700928
    4. '                       ' → logprob: -3.7887990474700928
    5. '               ' → logprob: -6.038799285888672
    6. '=' → logprob: -7.788799285888672
    7. '                           ' → logprob: -7.788799285888672
    8. '=max' → logprob: -7.913799285888672
    9. '(max' → logprob: -8.288799285888672
    10. '```' → logprob: -8.913799285888672

Token 851: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' (adapté à ' max') → logprob: -0.010036072693765163
    2. ' max' → logprob: -4.760035991668701
    3. '                       ' → logprob: -6.885035991668701
    4. 'self' → logprob: -8.38503646850586
    5. '                   ' → logprob: -8.76003646850586
    6. '                           ' → logprob: -11.88503646850586
    7. ' self' → logprob: -13.88503646850586
    8. '   ' → logprob: -13.88503646850586
    9. '           ' → logprob: -14.01003646850586
    10. '               ' → logprob: -14.26003646850586

Token 852: '_wait' (ID: 44250)
  Prédit: '_wait'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_wait' → logprob: -4.127333340875339e-06
    2. '_' → logprob: -12.875003814697266
    3. '_arr' → logprob: -13.875003814697266
    4. 'wait' → logprob: -16.250003814697266
    5. '```' → logprob: -16.250003814697266
    6. '\' → logprob: -16.375003814697266
    7. '_WAIT' → logprob: -16.375003814697266
    8. 'Wait' → logprob: -16.625003814697266
    9. ' _' → logprob: -16.625003814697266
    10. '_w' → logprob: -17.125003814697266

Token 853: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -3.4121114822482923e-06
    2. 'time' → logprob: -13.750003814697266
    3. '_t' → logprob: -14.750003814697266
    4. '               ' → logprob: -14.875003814697266
    5. 'Time' → logprob: -15.250003814697266
    6. '           ' → logprob: -15.375003814697266
    7. '_times' → logprob: -15.750003814697266
    8. '_' → logprob: -15.875003814697266
    9. '_wait' → logprob: -16.000003814697266
    10. 'ime' → logprob: -16.000003814697266

Token 854: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.038042180240154266
    2. ' =' → logprob: -3.2880420684814453
    3. '=max' → logprob: -14.788042068481445
    4. '=
' → logprob: -15.038042068481445
    5. '=

' → logprob: -17.288042068481445
    6. '＝' → logprob: -18.163042068481445
    7. '                    ' → logprob: -18.413042068481445
    8. ' =
' → logprob: -18.538042068481445
    9. '=self' → logprob: -19.663042068481445
    10. '                        ' → logprob: -19.663042068481445

Token 855: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00020354038861114532
    2. ' self' → logprob: -8.500203132629395
    3. '           ' → logprob: -18.25020408630371
    4. '               ' → logprob: -19.50020408630371
    5. '(self' → logprob: -19.50020408630371
    6. '	self' → logprob: -19.50020408630371
    7. '   ' → logprob: -19.75020408630371
    8. '[self' → logprob: -20.00020408630371
    9. '                   ' → logprob: -20.12520408630371
    10. '```' → logprob: -20.25020408630371

Token 856: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0024774393532425165
    2. 'ear' → logprob: -6.002477645874023
    3. '._' → logprob: -14.502477645874023
    4. '.arr' → logprob: -15.377477645874023
    5. 'EAR' → logprob: -15.377477645874023
    6. '.e' → logprob: -15.627477645874023
    7. 'Ear' → logprob: -15.877477645874023
    8. ' .' → logprob: -16.377477645874023
    9. '.er' → logprob: -16.502477645874023
    10. '_' → logprob: -16.877477645874023

Token 857: 'ear' (ID: 830)
  Prédit: 'ear'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ear' → logprob: -5.512236498361744e-07
    2. 'early' → logprob: -14.625000953674316
    3. 'latest' → logprob: -19.625
    4. ' earliest' → logprob: -19.75
    5. '_' → logprob: -21.125
    6. '{' → logprob: -21.75
    7. '.' → logprob: -21.75
    8. 'earth' → logprob: -22.0
    9. '```' → logprob: -22.125
    10. '`' → logprob: -22.125

Token 858: 'liest' (ID: 34647)
  Prédit: 'ival'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ival' → logprob: -0.09225448220968246
    2. 'arr' → logprob: -3.717254400253296
    3. '_arr' → logprob: -3.717254400253296
    4. 'est' → logprob: -4.217254638671875
    5. 'val' → logprob: -4.467254638671875
    6. 'al' → logprob: -5.217254638671875
    7. 'arrival' → logprob: -5.467254638671875
    8. 'liest' → logprob: -6.217254638671875
    9. 'iest' → logprob: -7.217254638671875
    10. 'st' → logprob: -8.592254638671875

Token 859: '_arr' (ID: 25121)
  Prédit: '_arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_arr' → logprob: -0.00044353955308906734
    2. 'arrival' → logprob: -7.750443458557129
    3. 'arr' → logprob: -11.750443458557129
    4. '_time' → logprob: -12.625443458557129
    5. 'Arrival' → logprob: -13.875443458557129
    6. '[i' → logprob: -15.625443458557129
    7. ' arrival' → logprob: -15.625443458557129
    8. '_wait' → logprob: -15.625443458557129
    9. 'time' → logprob: -16.375444412231445
    10. '_is' → logprob: -17.875444412231445

Token 860: 'ival' (ID: 4552)
  Prédit: 'ival'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ival' → logprob: -0.016226617619395256
    2. 'val' → logprob: -4.266226768493652
    3. 'al' → logprob: -6.391226768493652
    4. 'iv' → logprob: -8.766226768493652
    5. '_time' → logprob: -9.016226768493652
    6. '_val' → logprob: -10.516226768493652
    7. 'ial' → logprob: -10.891226768493652
    8. 'time' → logprob: -11.641226768493652
    9. 'ive' → logprob: -11.766226768493652
    10. '[' → logprob: -12.016226768493652

Token 861: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.1008713702030946e-06
    2. '[' → logprob: -13.500001907348633
    3. 'i' → logprob: -14.875001907348633
    4. '[
' → logprob: -16.625001907348633
    5. '\[' → logprob: -17.375001907348633
    6. '```' → logprob: -17.750001907348633
    7. ' [' → logprob: -18.250001907348633
    8. '  
' → logprob: -18.500001907348633
    9. '(i' → logprob: -18.750001907348633
    10. '
' → logprob: -18.875001907348633

Token 862: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06382691860198975
    2. ']' → logprob: -3.3138270378112793
    3. '<|end|>' → logprob: -3.9388270378112793
    4. '       ' → logprob: -6.563827037811279
    5. '           ' → logprob: -6.688827037811279
    6. '               ' → logprob: -6.688827037811279
    7. '+' → logprob: -7.563827037811279
    8. '}' → logprob: -7.938827037811279
    9. '        ' → logprob: -8.688826560974121
    10. '<|end|>' → logprob: -8.813826560974121

Token 863: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.34492018818855286
    2. '
' → logprob: -1.3449201583862305
    3. 'return' → logprob: -4.2199201583862305
    4. '        
' → logprob: -4.2199201583862305
    5. ' return' → logprob: -6.8449201583862305
    6. '    
' → logprob: -8.59492015838623
    7. '  
' → logprob: -8.96992015838623
    8. ' 
' → logprob: -9.34492015838623
    9. '	' → logprob: -9.96992015838623
    10. '	return' → logprob: -9.96992015838623

Token 864: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.4767579734325409
    2. '       ' → logprob: -0.9767580032348633
    3. '
' → logprob: -6.351758003234863
    4. ' return' → logprob: -7.476758003234863
    5. '        
' → logprob: -8.101758003234863
    6. '	return' → logprob: -10.351758003234863
    7. '```' → logprob: -11.476758003234863
    8. '   ' → logprob: -11.726758003234863
    9. '	' → logprob: -12.226758003234863
    10. '    
' → logprob: -12.601758003234863

Token 865: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.12692810595035553
    2. ' max' → logprob: -2.1269280910491943
    3. '	max' → logprob: -17.751928329467773
    4. '       ' → logprob: -18.501928329467773
    5. '(max' → logprob: -18.626928329467773
    6. '[max' → logprob: -18.751928329467773
    7. '   ' → logprob: -20.376928329467773
    8. '_max' → logprob: -20.376928329467773
    9. ' ' → logprob: -20.876928329467773
    10. ',max' → logprob: -21.376928329467773

Token 866: '_wait' (ID: 44250)
  Prédit: '_wait'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_wait' → logprob: -1.5048530030981055e-06
    2. '\' → logprob: -14.625001907348633
    3. '_WAIT' → logprob: -14.750001907348633
    4. 'Wait' → logprob: -15.750001907348633
    5. '_' → logprob: -15.750001907348633
    6. '(wait' → logprob: -16.125001907348633
    7. '_arr' → logprob: -16.750001907348633
    8. '_w' → logprob: -17.125001907348633
    9. '(_' → logprob: -17.250001907348633
    10. 'wait' → logprob: -17.375001907348633

Token 867: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -1.7432603272027336e-06
    2. '_wait' → logprob: -13.375001907348633
    3. '_times' → logprob: -16.250001907348633
    4. '\' → logprob: -19.875001907348633
    5. '_max' → logprob: -19.875001907348633
    6. '._' → logprob: -20.250001907348633
    7. ' _' → logprob: -20.500001907348633
    8. '_TIME' → logprob: -20.625001907348633
    9. 'time' → logprob: -20.750001907348633
    10. '_type' → logprob: -20.750001907348633

Token 868: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 869: 'class' (ID: 1444)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 870: ' Input' (ID: 10090)
  Prédit: ' threading'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' threading' → logprob: -0.1544354408979416
    2. 'Solution' → logprob: -3.154435396194458
    3. ' Solution' → logprob: -3.404435396194458
    4. 'thread' → logprob: -3.404435396194458
    5. 'Thread' → logprob: -5.029435634613037
    6. 'One' → logprob: -5.154435634613037
    7. ' Runner' → logprob: -5.904435634613037
    8. ' Thread' → logprob: -5.904435634613037
    9. 'Runner' → logprob: -6.279435634613037
    10. 'Main' → logprob: -6.279435634613037

Token 871: 'Handler' (ID: 4139)
  Prédit: 'Reader'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Reader' → logprob: -0.1271752566099167
    2. 'Handler' → logprob: -2.3771753311157227
    3. 'Parser' → logprob: -4.252175331115723
    4. ':' → logprob: -5.002175331115723
    5. 'Processor' → logprob: -5.502175331115723
    6. 'Data' → logprob: -7.877175331115723
    7. '():' → logprob: -8.002175331115723
    8. 'Buffer' → logprob: -8.877175331115723
    9. 'Provider' → logprob: -9.002175331115723
    10. 'Tokenizer' → logprob: -9.377175331115723

Token 872: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0012234434252604842
    2. ':
' → logprob: -6.751223564147949
    3. '():' → logprob: -11.25122356414795
    4. ':def' → logprob: -11.75122356414795
    5. '(object' → logprob: -11.87622356414795
    6. '<|end|>' → logprob: -12.00122356414795
    7. '(' → logprob: -12.25122356414795
    8. '```' → logprob: -12.62622356414795
    9. '(QWidget' → logprob: -13.00122356414795
    10. ':

' → logprob: -13.25122356414795

Token 873: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.055076587945222855
    2. ':' → logprob: -3.1800765991210938
    3. 'def' → logprob: -5.680076599121094
    4. ' def' → logprob: -5.930076599121094
    5. '    
' → logprob: -6.180076599121094
    6. ':
' → logprob: -6.555076599121094
    7. '```' → logprob: -6.805076599121094
    8. '<|end|>' → logprob: -7.305076599121094
    9. ':def' → logprob: -8.430076599121094
    10. '	def' → logprob: -9.180076599121094

Token 874: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.06547808647155762
    2. 'def' (adapté à ' def') → logprob: -2.8154780864715576
    3. '   ' → logprob: -5.690478324890137
    4. 'class' → logprob: -9.440478324890137
    5. '	def' → logprob: -10.815478324890137
    6. ' class' → logprob: -11.440478324890137
    7. '```' → logprob: -11.940478324890137
    8. ':def' → logprob: -12.190478324890137
    9. ':' → logprob: -13.065478324890137
    10. 'staticmethod' → logprob: -14.690478324890137

Token 875: ' __' (ID: 2516)
  Prédit: 'staticmethod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'staticmethod' → logprob: -0.00193636619951576
    2. 'def' → logprob: -7.126936435699463
    3. 'classmethod' → logprob: -7.751936435699463
    4. 'static' → logprob: -8.626935958862305
    5. '__' → logprob: -8.751935958862305
    6. ' def' → logprob: -8.876935958862305
    7. ' __' → logprob: -9.126935958862305
    8. 'object' → logprob: -9.376935958862305
    9. 'init' → logprob: -11.001935958862305
    10. ' static' → logprob: -12.126935958862305

Token 876: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -1.2664456789934775e-06
    2. 'new' → logprob: -13.750000953674316
    3. 'staticmethod' → logprob: -17.250001907348633
    4. '__' → logprob: -17.500001907348633
    5. 'def' → logprob: -17.750001907348633
    6. '```' → logprob: -17.875001907348633
    7. 'call' → logprob: -18.125001907348633
    8. ' init' → logprob: -18.250001907348633
    9. 'iter' → logprob: -19.125001907348633
    10. 'int' → logprob: -19.125001907348633

Token 877: '__(' (ID: 8241)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.11344709992408752
    2. '__(' → logprob: -2.4884471893310547
    3. '(' → logprob: -3.7384471893310547
    4. '__' → logprob: -8.863447189331055
    5. 'self' → logprob: -9.238447189331055
    6. '__(
' → logprob: -9.238447189331055
    7. ' (' → logprob: -9.613447189331055
    8. '(
' → logprob: -12.113447189331055
    9. '```' → logprob: -13.613447189331055
    10. '(s' → logprob: -13.988447189331055

Token 878: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -4.978233846486546e-05
    2. ')' → logprob: -10.000049591064453
    3. ' self' → logprob: -12.500049591064453
    4. '):
' → logprob: -15.500049591064453
    5. ')(' → logprob: -15.875049591064453
    6. '
' → logprob: -16.000049591064453
    7. '	self' → logprob: -17.375049591064453
    8. '(self' → logprob: -17.375049591064453
    9. '):' → logprob: -17.500049591064453
    10. ').__' → logprob: -17.500049591064453

Token 879: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.023504134267568588
    2. ',' → logprob: -4.023504257202148
    3. '):
' → logprob: -5.273504257202148
    4. '():' → logprob: -9.023504257202148
    5. 'self' → logprob: -10.523504257202148
    6. ',input' → logprob: -10.898504257202148
    7. ')' → logprob: -11.023504257202148
    8. ' ):' → logprob: -12.148504257202148
    9. '):
' → logprob: -12.898504257202148
    10. '()):
' → logprob: -13.023504257202148

Token 880: '       ' (ID: 309)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0008307131356559694
    2. '   ' → logprob: -7.62583065032959
    3. ' self' → logprob: -8.25083065032959
    4. '       ' → logprob: -10.12583065032959
    5. '	self' → logprob: -11.00083065032959
    6. '(self' → logprob: -11.12583065032959
    7. '
' → logprob: -12.00083065032959
    8. '```' → logprob: -13.25083065032959
    9. 'def' → logprob: -14.62583065032959
    10. ' ' → logprob: -14.87583065032959

Token 881: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.16120734810829163
    2. 'pass' → logprob: -2.036207437515259
    3. 'def' → logprob: -4.41120719909668
    4. ' self' → logprob: -5.78620719909668
    5. 'import' → logprob: -6.53620719909668
    6. ' pass' → logprob: -6.66120719909668
    7. '   ' → logprob: -8.28620719909668
    8. '       ' → logprob: -9.28620719909668
    9. ' def' → logprob: -9.66120719909668
    10. 'super' → logprob: -12.41120719909668

Token 882: '.N' (ID: 4439)
  Prédit: '.lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.lines' → logprob: -0.8730913400650024
    2. '.buffer' → logprob: -0.9980913400650024
    3. '.input' → logprob: -2.248091220855713
    4. '.data' → logprob: -2.498091220855713
    5. '.num' → logprob: -4.873091220855713
    6. '.stdin' → logprob: -5.123091220855713
    7. '._' → logprob: -5.248091220855713
    8. '.graph' → logprob: -5.998091220855713
    9. 'data' → logprob: -6.623091220855713
    10. '.inputs' → logprob: -7.498091220855713

Token 883: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.009830938652157784
    2. ' =' → logprob: -5.009830951690674
    3. '=' → logprob: -5.884830951690674
    4. '<|end|>' → logprob: -8.634830474853516
    5. ' ,' → logprob: -9.259830474853516
    6. '   ' → logprob: -11.134830474853516
    7. '<|end|>' → logprob: -11.759830474853516
    8. ',
' → logprob: -12.134830474853516
    9. '=int' → logprob: -12.134830474853516
    10. ',self' → logprob: -12.509830474853516

Token 884: ' ' (ID: 220)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.11737098544836044
    2. ' int' → logprob: -2.492371082305908
    3. '0' → logprob: -3.867371082305908
    4. 'None' → logprob: -5.242371082305908
    5. ' None' → logprob: -6.367371082305908
    6. ' ' → logprob: -9.24237060546875
    7. '<int' → logprob: -12.49237060546875
    8. '[int' → logprob: -12.49237060546875
    9. '(int' → logprob: -13.24237060546875
    10. 'map' → logprob: -13.49237060546875

Token 885: '0' (ID: 15)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.014966385439038277
    2. '0' → logprob: -4.2649664878845215
    3. 'None' → logprob: -7.1399664878845215
    4. ' int' → logprob: -11.764966011047363
    5. 'len' → logprob: -14.639966011047363
    6. '1' → logprob: -14.764966011047363
    7. '[int' → logprob: -15.264966011047363
    8. 'map' → logprob: -15.889966011047363
    9. '(int' → logprob: -15.889966011047363
    10. ' None' → logprob: -16.26496696472168

Token 886: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8095258474349976
    2. '       ' → logprob: -0.8095258474349976
    3. 'self' → logprob: -2.434525966644287
    4. '   ' → logprob: -4.934525966644287
    5. '	self' → logprob: -5.434525966644287
    6. '        
' → logprob: -6.184525966644287
    7. '<|end|>' → logprob: -6.184525966644287
    8. 'def' → logprob: -6.309525966644287
    9. ' self' → logprob: -6.309525966644287
    10. '    
' → logprob: -6.559525966644287

Token 887: '       ' (ID: 309)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.288573294878006
    2. '       ' → logprob: -1.4135732650756836
    3. '   ' → logprob: -5.663573265075684
    4. ' self' → logprob: -6.288573265075684
    5. 'def' → logprob: -6.913573265075684
    6. '	self' → logprob: -7.038573265075684
    7. '<|end|>' → logprob: -9.038573265075684
    8. ' ' → logprob: -11.163573265075684
    9. 's' → logprob: -11.288573265075684
    10. '
' → logprob: -11.413573265075684

Token 888: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -2.522638169466518e-05
    2. ' self' → logprob: -10.750024795532227
    3. '       ' → logprob: -12.750024795532227
    4. '   ' → logprob: -15.125024795532227
    5. 'M' → logprob: -15.500024795532227
    6. '	self' → logprob: -16.125024795532227
    7. 's' → logprob: -16.250024795532227
    8. 'def' → logprob: -17.875024795532227
    9. '        
' → logprob: -18.000024795532227
    10. 'import' → logprob: -18.250024795532227

Token 889: '.M' (ID: 2015)
  Prédit: '.M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.M' → logprob: -0.0012783304555341601
    2. 'M' → logprob: -7.376278400421143
    3. '.B' → logprob: -8.001277923583984
    4. '.E' → logprob: -8.376277923583984
    5. '.edges' → logprob: -10.001277923583984
    6. '.K' → logprob: -11.126277923583984
    7. 'edges' → logprob: -12.626277923583984
    8. '.' → logprob: -12.751277923583984
    9. '.br' → logprob: -12.751277923583984
    10. '.L' → logprob: -13.376277923583984

Token 890: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25194409489631653
    2. ' =' → logprob: -1.5019440650939941
    3. ',' → logprob: -12.376944541931152
    4. '=int' → logprob: -12.501944541931152
    5. '<|end|>' → logprob: -12.751944541931152
    6. '=None' → logprob: -13.001944541931152
    7. '  ' → logprob: -15.251944541931152
    8. ' ' → logprob: -15.751944541931152
    9. '.' → logprob: -15.751944541931152
    10. ':' → logprob: -15.876944541931152

Token 891: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00043138445471413434
    2. ' ' → logprob: -7.750431537628174
    3. 'None' → logprob: -14.375431060791016
    4. ' None' → logprob: -16.500431060791016
    5. 'int' → logprob: -18.000431060791016
    6. ' ' → logprob: -20.125431060791016
    7. '  ' → logprob: -20.500431060791016
    8. '   ' → logprob: -21.000431060791016
    9. '۰' → logprob: -22.250431060791016
    10. ' 
' → logprob: -22.875431060791016

Token 892: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -13.875000953674316
    3. '۰' → logprob: -21.125001907348633
    4. 'int' → logprob: -22.500001907348633
    5. '[]' → logprob: -22.500001907348633
    6. '०' → logprob: -22.625001907348633
    7. '=' → logprob: -22.750001907348633
    8. 'None' → logprob: -22.750001907348633
    9. '   ' → logprob: -23.375001907348633
    10. '０' → logprob: -23.500001907348633

Token 893: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6762844324111938
    2. '   ' → logprob: -0.9262844324111938
    3. 'def' → logprob: -2.9262843132019043
    4. '       ' → logprob: -3.8012843132019043
    5. '    
' → logprob: -4.676284313201904
    6. ' def' → logprob: -5.551284313201904
    7. '	def' → logprob: -5.801284313201904
    8. '<|end|>' → logprob: -6.801284313201904
    9. 'self' → logprob: -7.051284313201904
    10. '        
' → logprob: -7.176284313201904

Token 894: '       ' (ID: 309)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.28894340991973877
    2. '
' → logprob: -2.163943290710449
    3. '   ' → logprob: -2.288943290710449
    4. 'self' → logprob: -4.288943290710449
    5. ' def' → logprob: -4.913943290710449
    6. '	def' → logprob: -4.913943290710449
    7. '       ' → logprob: -5.538943290710449
    8. '    
' → logprob: -7.163943290710449
    9. '<|end|>' → logprob: -7.288943290710449
    10. '	self' → logprob: -7.913943290710449

Token 895: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0001129602751461789
    2. '       ' → logprob: -9.625112533569336
    3. 'def' → logprob: -10.125112533569336
    4. ' self' → logprob: -12.750112533569336
    5. '   ' → logprob: -13.375112533569336
    6. 'edges' → logprob: -13.500112533569336
    7. 'lines' → logprob: -14.625112533569336
    8. '	self' → logprob: -15.625112533569336
    9. 'import' → logprob: -16.500112533569336
    10. 's' → logprob: -16.750112533569336

Token 896: '.br' (ID: 24828)
  Prédit: '.graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.graph' → logprob: -0.3895503580570221
    2. '.edges' → logprob: -1.1395503282546997
    3. 'graph' → logprob: -7.13955020904541
    4. '.lines' → logprob: -7.51455020904541
    5. '.br' → logprob: -7.63955020904541
    6. 'edges' → logprob: -8.63955020904541
    7. '.data' → logprob: -8.63955020904541
    8. '.connections' → logprob: -9.13955020904541
    9. '.is' → logprob: -9.63955020904541
    10. '.ad' → logprob: -9.88955020904541

Token 897: 'idges' (ID: 35524)
  Prédit: 'idges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idges' → logprob: -0.0008135587559081614
    2. 'id' → logprob: -7.6258134841918945
    3. 'idge' → logprob: -8.375813484191895
    4. 'edges' → logprob: -9.625813484191895
    5. '```' → logprob: -10.750813484191895
    6. '_id' → logprob: -13.375813484191895
    7. 'iges' → logprob: -13.750813484191895
    8. 'import' → logprob: -13.875813484191895
    9. 'i' → logprob: -14.125813484191895
    10. 'ids' → logprob: -14.375813484191895

Token 898: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6428765654563904
    2. '=' → logprob: -0.7678765654563904
    3. ':' → logprob: -4.767876625061035
    4. '=[]' → logprob: -6.392876625061035
    5. 's' → logprob: -12.017876625061035
    6. 'import' → logprob: -12.392876625061035
    7. '_' → logprob: -12.392876625061035
    8. '<|end|>' → logprob: -12.517876625061035
    9. '_input' → logprob: -12.767876625061035
    10. ')' → logprob: -12.767876625061035

Token 899: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.00010270876373397186
    2. ' List' → logprob: -9.250102996826172
    3. '[List' → logprob: -12.000102996826172
    4. '[]' → logprob: -14.875102996826172
    5. '	List' → logprob: -17.125102996826172
    6. 'list' → logprob: -20.125102996826172
    7. ' []' → logprob: -21.375102996826172
    8. '   ' → logprob: -21.375102996826172
    9. '=[]' → logprob: -21.875102996826172
    10. 'Dict' → logprob: -22.500102996826172

Token 900: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00017302791820839047
    2. '=' → logprob: -8.75017261505127
    3. ' =' → logprob: -11.87517261505127
    4. '[List' → logprob: -12.12517261505127
    5. '[int' → logprob: -13.87517261505127
    6. '   ' → logprob: -14.75017261505127
    7. '[
' → logprob: -15.00017261505127
    8. '=[]' → logprob: -15.87517261505127
    9. '	' → logprob: -16.375173568725586
    10. '```' → logprob: -16.625173568725586

Token 901: 'Tuple' (ID: 40048)
  Prédit: 'Tuple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tuple' → logprob: -0.0002637199067976326
    2. 'Edge' → logprob: -8.250264167785645
    3. '[' → logprob: -13.625264167785645
    4. ' Tuple' → logprob: -14.125264167785645
    5. 'tuple' → logprob: -16.000263214111328
    6. 'Triple' → logprob: -16.250263214111328
    7. 'Trip' → logprob: -16.500263214111328
    8. 'Tu' → logprob: -17.000263214111328
    9. 'List' → logprob: -17.250263214111328
    10. 'Bridge' → logprob: -18.625263214111328

Token 902: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -2.176947600673884e-05
    2. 'int' → logprob: -10.750021934509277
    3. ']int' → logprob: -16.00002098083496
    4. '(int' → logprob: -16.37502098083496
    5. '<int' → logprob: -18.12502098083496
    6. ']' → logprob: -18.75002098083496
    7. ',int' → logprob: -18.87502098083496
    8. '=int' → logprob: -18.87502098083496
    9. '[
' → logprob: -20.00002098083496
    10. 'import' → logprob: -20.37502098083496

Token 903: ',int' (ID: 20909)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0224555730819702
    2. '[int' → logprob: -1.0224555730819702
    3. ',int' → logprob: -1.2724555730819702
    4. 'int' → logprob: -7.77245569229126
    5. '[' → logprob: -12.022455215454102
    6. ']int' → logprob: -12.147455215454102
    7. '(int' → logprob: -14.022455215454102
    8. ' ,' → logprob: -14.147455215454102
    9. '   ' → logprob: -14.772455215454102
    10. '<int' → logprob: -15.022455215454102

Token 904: ',int' (ID: 20909)
  Prédit: ',int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',int' → logprob: -0.2014412134885788
    2. ',' → logprob: -1.7014411687850952
    3. ',Integer' → logprob: -11.951440811157227
    4. 'int' → logprob: -12.326440811157227
    5. ' ,' → logprob: -12.576440811157227
    6. ',List' → logprob: -12.576440811157227
    7. '[int' → logprob: -12.951440811157227
    8. ',float' → logprob: -13.326440811157227
    9. ',num' → logprob: -13.576440811157227
    10. ',i' → logprob: -14.076440811157227

Token 905: ']]' (ID: 8928)
  Prédit: ']]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']]' → logprob: -2.141186450899113e-05
    2. ']]=' → logprob: -10.875020980834961
    3. ')]' → logprob: -14.000020980834961
    4. ']' → logprob: -14.250020980834961
    5. ']]]' → logprob: -15.000020980834961
    6. ']]
' → logprob: -15.500020980834961
    7. '']]' → logprob: -16.25002098083496
    8. ' ]]' → logprob: -16.37502098083496
    9. '"]]' → logprob: -16.62502098083496
    10. ']]

' → logprob: -17.37502098083496

Token 906: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1797521859407425
    2. ' =' → logprob: -1.804752230644226
    3. '=[]' → logprob: -12.554752349853516
    4. '<|end|>' → logprob: -14.179752349853516
    5. '=[]
' → logprob: -14.304752349853516
    6. '=None' → logprob: -14.554752349853516
    7. 'def' → logprob: -14.554752349853516
    8. ' ' → logprob: -14.804752349853516
    9. ')' → logprob: -14.804752349853516
    10. '=
' → logprob: -15.054752349853516

Token 907: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -1.981667537620524e-06
    2. '[]
' → logprob: -13.500001907348633
    3. ' []' → logprob: -14.750001907348633
    4. '[]

' → logprob: -16.625001907348633
    5. '[]"' → logprob: -16.875001907348633
    6. '[]}' → logprob: -17.125001907348633
    7. '[])' → logprob: -18.625001907348633
    8. '[]>' → logprob: -19.875001907348633
    9. '=[]' → logprob: -21.250001907348633
    10. '[],' → logprob: -21.375001907348633

Token 908: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0392332561314106
    2. 'def' → logprob: -3.4142332077026367
    3. ' def' → logprob: -5.414233207702637
    4. '
' → logprob: -7.289233207702637
    5. '    
' → logprob: -7.789233207702637
    6. '	def' → logprob: -11.914233207702637
    7. ' ' → logprob: -12.664233207702637
    8. '```' → logprob: -12.789233207702637
    9. ' 
' → logprob: -12.914233207702637
    10. '        
' → logprob: -13.164233207702637

Token 909: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.05094779655337334
    2. ' def' → logprob: -3.050947904586792
    3. '   ' → logprob: -6.050947666168213
    4. '	def' → logprob: -13.675948143005371
    5. '
' → logprob: -14.050948143005371
    6. '_def' → logprob: -17.675947189331055
    7. ' ' → logprob: -17.800947189331055
    8. '    
' → logprob: -18.050947189331055
    9. '```' → logprob: -18.300947189331055
    10. 'de' → logprob: -18.425947189331055

Token 910: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -1.5048530030981055e-06
    2. ' def' → logprob: -13.500001907348633
    3. '   ' → logprob: -22.125001907348633
    4. 'de' → logprob: -23.125001907348633
    5. '	def' → logprob: -23.500001907348633
    6. 'd' → logprob: -23.875001907348633
    7. '
' → logprob: -24.750001907348633
    8. '    
' → logprob: -26.000001907348633
    9. 'Def' → logprob: -26.875001907348633
    10. 'import' → logprob: -27.375001907348633

Token 911: ' read' (ID: 1729)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.00043734462815336883
    2. ' read' → logprob: -7.750437259674072
    3. 'parse' → logprob: -12.00043773651123
    4. 'load' → logprob: -14.75043773651123
    5. 'handle' → logprob: -17.000436782836914
    6. 'process' → logprob: -17.250436782836914
    7. 'def' → logprob: -18.250436782836914
    8. ' parse' → logprob: -18.500436782836914
    9. 're' → logprob: -20.625436782836914
    10. '.read' → logprob: -20.625436782836914

Token 912: '_input' (ID: 12507)
  Prédit: '_line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.4151160717010498
    2. '(self' → logprob: -1.1651160717010498
    3. 'line' → logprob: -4.290116310119629
    4. '_input' → logprob: -4.540116310119629
    5. 'self' → logprob: -6.290116310119629
    6. '()' → logprob: -7.290116310119629
    7. '_lines' → logprob: -8.040116310119629
    8. '_data' → logprob: -8.415116310119629
    9. '(' → logprob: -9.165116310119629
    10. 'input' → logprob: -9.165116310119629

Token 913: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -3.011373155459296e-05
    2. '(' → logprob: -10.625030517578125
    3. 'self' → logprob: -12.250030517578125
    4. ' (' → logprob: -14.000030517578125
    5. '(
' → logprob: -16.625030517578125
    6. '()' → logprob: -17.500030517578125
    7. '():
' → logprob: -18.250030517578125
    8. 'from' → logprob: -18.625030517578125
    9. '   ' → logprob: -18.750030517578125
    10. ' self' → logprob: -19.125030517578125

Token 914: '):
' (ID: 1883)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.094247005879879
    2. '):' → logprob: -2.7192471027374268
    3. 'self' → logprob: -4.219246864318848
    4. '):
' → logprob: -5.469246864318848
    5. '():' → logprob: -6.344246864318848
    6. ')' → logprob: -6.719246864318848
    7. '():
' → logprob: -6.844246864318848
    8. '()):
' → logprob: -7.844246864318848
    9. '()' → logprob: -8.094246864318848
    10. '(' → logprob: -8.969246864318848

Token 915: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00023369524569716305
    2. '```' → logprob: -10.00023365020752
    3. 'import' → logprob: -10.12523365020752
    4. 'self' → logprob: -10.25023365020752
    5. '	' → logprob: -10.37523365020752
    6. '()' → logprob: -11.00023365020752
    7. ',' → logprob: -11.12523365020752
    8. '   ' → logprob: -11.37523365020752
    9. '        
' → logprob: -11.62523365020752
    10. '           ' → logprob: -12.25023365020752

Token 916: ' self' (ID: 1051)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.2890381813049316
    2. ' n' → logprob: -1.6640381813049316
    3. 'self' (adapté à ' self') → logprob: -1.6640381813049316
    4. 'import' → logprob: -2.4140381813049316
    5. 'line' → logprob: -2.4140381813049316
    6. ' self' → logprob: -2.6640381813049316
    7. '       ' → logprob: -2.7890381813049316
    8. ' lines' → logprob: -4.539038181304932
    9. ' line' → logprob: -4.664038181304932
    10. ' import' → logprob: -5.414038181304932

Token 917: '.N' (ID: 4439)
  Prédit: '.N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.N' → logprob: -0.0001463299704482779
    2. '.M' → logprob: -9.75014591217041
    3. '.' → logprob: -10.50014591217041
    4. '.line' → logprob: -10.75014591217041
    5. '.lines' → logprob: -11.12514591217041
    6. 'line' → logprob: -12.25014591217041
    7. ' =' → logprob: -12.50014591217041
    8. 'N' → logprob: -12.75014591217041
    9. '=' → logprob: -12.87514591217041
    10. '_line' → logprob: -13.00014591217041

Token 918: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1928412914276123
    2. ' =' → logprob: -1.9428412914276123
    3. ',' → logprob: -3.4428412914276123
    4. '=int' → logprob: -9.442841529846191
    5. ' ,' → logprob: -10.817841529846191
    6. ',self' → logprob: -11.692841529846191
    7. ',int' → logprob: -13.067841529846191
    8. '=self' → logprob: -13.567841529846191
    9. '=input' → logprob: -13.567841529846191
    10. '=sys' → logprob: -13.567841529846191

Token 919: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0005617309361696243
    2. ' self' → logprob: -7.500561714172363
    3. '=self' → logprob: -12.375561714172363
    4. ' ' → logprob: -13.625561714172363
    5. ',self' → logprob: -14.375561714172363
    6. '=' → logprob: -14.375561714172363
    7. '*self' → logprob: -14.375561714172363
    8. '<|end|>' → logprob: -14.375561714172363
    9. 'se' → logprob: -15.250561714172363
    10. ' =' → logprob: -15.625561714172363

Token 920: '.M' (ID: 2015)
  Prédit: '.M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.M' → logprob: -0.0581265389919281
    2. '.' → logprob: -3.183126449584961
    3. '=' → logprob: -4.308126449584961
    4. 'M' → logprob: -6.808126449584961
    5. ' =' → logprob: -8.558126449584961
    6. ',' → logprob: -9.183126449584961
    7. '.=' → logprob: -9.808126449584961
    8. '=M' → logprob: -10.183126449584961
    9. '.N' → logprob: -11.433126449584961
    10. ',M' → logprob: -11.933126449584961

Token 921: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.061978891491889954
    2. ' =' → logprob: -2.811978816986084
    3. '=sys' → logprob: -11.561979293823242
    4. '=input' → logprob: -14.311979293823242
    5. '=line' → logprob: -14.686979293823242
    6. '=list' → logprob: -15.061979293823242
    7. ',' → logprob: -15.811979293823242
    8. '=int' → logprob: -16.061979293823242
    9. '＝' → logprob: -16.311979293823242
    10. '=
' → logprob: -16.936979293823242

Token 922: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.0009114635176956654
    2. ' map' → logprob: -7.000911235809326
    3. '(map' → logprob: -17.375911712646484
    4. '	map' → logprob: -17.375911712646484
    5. '[' → logprob: -17.875911712646484
    6. 'sys' → logprob: -19.625911712646484
    7. '.map' → logprob: -20.625911712646484
    8. 'list' → logprob: -21.125911712646484
    9. 'm' → logprob: -21.250911712646484
    10. '_map' → logprob: -21.375911712646484

Token 923: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.004116273485124111
    2. 'int' → logprob: -5.504116058349609
    3. '(sys' → logprob: -10.62911605834961
    4. 'sys' → logprob: -12.12911605834961
    5. '(' → logprob: -12.62911605834961
    6. 'input' → logprob: -13.37911605834961
    7. '(input' → logprob: -13.50411605834961
    8. '(str' → logprob: -13.50411605834961
    9. '[int' → logprob: -15.62911605834961
    10. ' int' → logprob: -16.37911605834961

Token 924: ',' (ID: 11)
  Prédit: '(sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sys' → logprob: -0.018382418900728226
    2. 'sys' → logprob: -4.643382549285889
    3. ',' → logprob: -5.143382549285889
    4. '(input' → logprob: -6.143382549285889
    5. 'input' → logprob: -8.64338207244873
    6. '(' → logprob: -8.64338207244873
    7. ',input' → logprob: -8.76838207244873
    8. ')' → logprob: -10.14338207244873
    9. '=sys' → logprob: -10.26838207244873
    10. ' (' → logprob: -11.64338207244873

Token 925: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -9.088346359931165e-07
    2. ' sys' → logprob: -14.000000953674316
    3. 'input' → logprob: -17.5
    4. '(sys' → logprob: -20.5
    5. '=sys' → logprob: -21.625
    6. '	sys' → logprob: -22.375
    7. '_sys' → logprob: -23.75
    8. 'Sys' → logprob: -23.875
    9. '   ' → logprob: -25.0
    10. 'system' → logprob: -25.375

Token 926: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -4.4849443838757e-06
    2. '.readline' → logprob: -12.750004768371582
    3. '.argv' → logprob: -14.125004768371582
    4. '.' → logprob: -14.750004768371582
    5. '.std' → logprob: -15.625004768371582
    6. '.stdout' → logprob: -15.750004768371582
    7. 'stdin' → logprob: -16.125003814697266
    8. '(stdin' → logprob: -17.750003814697266
    9. '.st' → logprob: -18.625003814697266
    10. '.stderr' → logprob: -18.875003814697266

Token 927: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -1.2113979209971149e-05
    2. '().' → logprob: -11.875012397766113
    3. '.' → logprob: -12.750012397766113
    4. '.read' → logprob: -13.625012397766113
    5. '.stdin' → logprob: -14.500012397766113
    6. '.readlines' → logprob: -14.875012397766113
    7. ').' → logprob: -17.250011444091797
    8. ' readline' → logprob: -17.750011444091797
    9. 'read' → logprob: -19.125011444091797
    10. ' .' → logprob: -19.125011444091797

Token 928: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -7.5649528298527e-05
    2. '()' → logprob: -9.500075340270996
    3. '())' → logprob: -14.500075340270996
    4. '(' → logprob: -15.625075340270996
    5. '()
' → logprob: -17.000076293945312
    6. '.readline' → logprob: -17.500076293945312
    7. ' ().' → logprob: -17.750076293945312
    8. '()[' → logprob: -17.750076293945312
    9. '().__' → logprob: -18.750076293945312
    10. '()?.' → logprob: -20.125076293945312

Token 929: 'split' (ID: 13627)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.04357054829597473
    2. 'split' → logprob: -3.7935705184936523
    3. 'read' → logprob: -4.293570518493652
    4. 'rstrip' → logprob: -5.043570518493652
    5. ' strip' → logprob: -12.543570518493652
    6. '())' → logprob: -12.793570518493652
    7. ')' → logprob: -13.043570518493652
    8. '().' → logprob: -13.168570518493652
    9. '(strip' → logprob: -13.918570518493652
    10. 'replace' → logprob: -14.793570518493652

Token 930: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.00047714399988763034
    2. '()' → logprob: -7.750477313995361
    3. ')' → logprob: -10.125476837158203
    4. '())
' → logprob: -12.375476837158203
    5. '()))' → logprob: -13.875476837158203
    6. '().' → logprob: -14.250476837158203
    7. '(' → logprob: -14.875476837158203
    8. ' ())' → logprob: -15.625476837158203
    9. '();)' → logprob: -17.875476837158203
    10. '()]' → logprob: -18.000476837158203

Token 931: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.26068803668022156
    2. 'for' → logprob: -1.510688066482544
    3. ' for' → logprob: -4.760687828063965
    4. '	for' → logprob: -10.010687828063965
    5. '```' → logprob: -10.135687828063965
    6. '   ' → logprob: -10.510687828063965
    7. '	' → logprob: -10.635687828063965
    8. '        
' → logprob: -11.510687828063965
    9. 'while' → logprob: -12.010687828063965
    10. '           ' → logprob: -13.260687828063965

Token 932: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -4.632542913896032e-05
    2. '       ' → logprob: -10.250046730041504
    3. ' for' → logprob: -11.500046730041504
    4. 'self' → logprob: -14.250046730041504
    5. '
' → logprob: -16.125045776367188
    6. '	for' → logprob: -16.750045776367188
    7. '        
' → logprob: -17.750045776367188
    8. '```' → logprob: -18.625045776367188
    9. 'while' → logprob: -20.125045776367188
    10. 'For' → logprob: -20.625045776367188

Token 933: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.2664456789934775e-06
    2. ' _' → logprob: -13.625000953674316
    3. '_range' → logprob: -16.875001907348633
    4. '_=' → logprob: -18.500001907348633
    5. '_i' → logprob: -19.000001907348633
    6. ' in' → logprob: -19.625001907348633
    7. '_

' → logprob: -20.500001907348633
    8. '_
' → logprob: -20.750001907348633
    9. '_in' → logprob: -20.875001907348633
    10. '_
' → logprob: -21.750001907348633

Token 934: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.4334210455417633
    2. 'in' → logprob: -1.433421015739441
    3. 'range' → logprob: -2.1834211349487305
    4. ' range' → logprob: -7.8084211349487305
    5. '_' → logprob: -8.80842113494873
    6. '    ' → logprob: -13.18342113494873
    7. '   ' → logprob: -13.68342113494873
    8. ',' → logprob: -13.68342113494873
    9. 'i' → logprob: -13.68342113494873
    10. '  ' → logprob: -14.05842113494873

Token 935: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -2.1008713702030946e-06
    2. ' range' → logprob: -13.125001907348633
    3. '(range' → logprob: -17.875001907348633
    4. '
' → logprob: -20.250001907348633
    5. '   ' → logprob: -20.750001907348633
    6. 'ange' → logprob: -20.750001907348633
    7. 'sys' → logprob: -20.750001907348633
    8. '	range' → logprob: -21.125001907348633
    9. '[' → logprob: -21.500001907348633
    10. '```' → logprob: -21.750001907348633

Token 936: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00045021495316177607
    2. '(' → logprob: -7.750450134277344
    3. 'self' → logprob: -10.875450134277344
    4. '(
' → logprob: -15.750450134277344
    5. ' (' → logprob: -16.250450134277344
    6. '(int' → logprob: -16.375450134277344
    7. '(s' → logprob: -16.375450134277344
    8. '(m' → logprob: -17.000450134277344
    9. '(M' → logprob: -17.125450134277344
    10. ' self' → logprob: -18.500450134277344

Token 937: '.M' (ID: 2015)
  Prédit: '.M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.M' → logprob: -6.511406809295295e-06
    2. 'M' → logprob: -12.250006675720215
    3. '.' → logprob: -13.375006675720215
    4. 'self' → logprob: -17.7500057220459
    5. ',M' → logprob: -17.8750057220459
    6. ' .' → logprob: -18.2500057220459
    7. '	M' → logprob: -18.3750057220459
    8. '   ' → logprob: -18.3750057220459
    9. ').' → logprob: -18.5000057220459
    10. '.М' → logprob: -19.3750057220459

Token 938: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.2723841667175293
    2. '):' → logprob: -1.5223841667175293
    3. '():
' → logprob: -4.397384166717529
    4. ':' → logprob: -5.272384166717529
    5. ':
' → logprob: -6.647384166717529
    6. '():' → logprob: -7.147384166717529
    7. '       ' → logprob: -8.147384643554688
    8. '   ' → logprob: -9.022384643554688
    9. '()):
' → logprob: -9.272384643554688
    10. '):
' → logprob: -9.522384643554688

Token 939: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03708667680621147
    2. ' line' → logprob: -3.9120867252349854
    3. 'line' → logprob: -4.162086486816406
    4. '```' → logprob: -8.537086486816406
    5. '	       ' → logprob: -9.412086486816406
    6. '#line' → logprob: -9.662086486816406
    7. '		' → logprob: -9.787086486816406
    8. '            
' → logprob: -9.787086486816406
    9. '	line' → logprob: -9.787086486816406
    10. ',' → logprob: -9.787086486816406

Token 940: ' a' (ID: 261)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.6460485458374023
    2. 'from' → logprob: -1.1460485458374023
    3. 'a' (adapté à ' a') → logprob: -1.8960485458374023
    4. 'f' → logprob: -4.896048545837402
    5. 'frm' → logprob: -8.146048545837402
    6. 'fr' → logprob: -10.396048545837402
    7. '   ' → logprob: -11.271048545837402
    8. ' u' → logprob: -11.521048545837402
    9. 'b' → logprob: -12.021048545837402
    10. 'line' → logprob: -12.521048545837402

Token 941: ',b' (ID: 17568)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04984908550977707
    2. ',b' → logprob: -3.049849033355713
    3. ' ,' → logprob: -7.174849033355713
    4. 'b' → logprob: -7.674849033355713
    5. ' b' → logprob: -10.924849510192871
    6. '_,' → logprob: -12.799849510192871
    7. ',p' → logprob: -13.174849510192871
    8. ',n' → logprob: -13.674849510192871
    9. ',int' → logprob: -14.049849510192871
    10. ',m' → logprob: -14.174849510192871

Token 942: ',c' (ID: 22261)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.023623483255505562
    2. ',c' → logprob: -3.773623466491699
    3. ',b' → logprob: -8.1486234664917
    4. ' ,' → logprob: -9.8986234664917
    5. 'c' → logprob: -11.3986234664917
    6. ',t' → logprob: -12.0236234664917
    7. ',int' → logprob: -12.7736234664917
    8. ',s' → logprob: -12.8986234664917
    9. ',f' → logprob: -12.8986234664917
    10. ',k' → logprob: -13.3986234664917

Token 943: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759481191635132
    2. ' =' → logprob: -0.8259481191635132
    3. ',' → logprob: -12.325947761535645
    4. '=line' → logprob: -13.075947761535645
    5. '=sys' → logprob: -14.200947761535645
    6. ')' → logprob: -15.075947761535645
    7. '=input' → logprob: -15.200947761535645
    8. '=int' → logprob: -15.200947761535645
    9. ')=' → logprob: -15.450947761535645
    10. ' ' → logprob: -16.32594871520996

Token 944: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.011047814972698689
    2. ' map' → logprob: -4.511047840118408
    3. '	map' → logprob: -18.51104736328125
    4. 'm' → logprob: -22.01104736328125
    5. '   ' → logprob: -22.38604736328125
    6. '    ' → logprob: -22.51104736328125
    7. '(map' → logprob: -22.51104736328125
    8. '.map' → logprob: -23.13604736328125
    9. ' ' → logprob: -23.13604736328125
    10. 'tuple' → logprob: -23.38604736328125

Token 945: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0003364158037584275
    2. 'int' → logprob: -8.000336647033691
    3. ',int' → logprob: -14.875336647033691
    4. '[int' → logprob: -15.000336647033691
    5. '=int' → logprob: -15.750336647033691
    6. '<int' → logprob: -16.375335693359375
    7. '(' → logprob: -16.500335693359375
    8. ' int' → logprob: -17.500335693359375
    9. '(str' → logprob: -19.125335693359375
    10. '```' → logprob: -19.125335693359375

Token 946: ',' (ID: 11)
  Prédit: '(sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sys' → logprob: -0.0622507780790329
    2. ',' → logprob: -2.812250852584839
    3. 'sys' → logprob: -8.812251091003418
    4. '=sys' → logprob: -9.312251091003418
    5. '(' → logprob: -10.812251091003418
    6. ' ,' → logprob: -11.312251091003418
    7. ' (' → logprob: -12.187251091003418
    8. ' sys' → logprob: -13.187251091003418
    9. '	sys' → logprob: -13.937251091003418
    10. ',(' → logprob: -14.062251091003418

Token 947: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -3.547789674485102e-05
    2. ' sys' → logprob: -10.250035285949707
    3. '(sys' → logprob: -20.375036239624023
    4. '	sys' → logprob: -22.750036239624023
    5. '=sys' → logprob: -23.125036239624023
    6. 'Sys' → logprob: -23.250036239624023
    7. '_sys' → logprob: -24.625036239624023
    8. '.sys' → logprob: -25.500036239624023
    9. '```' → logprob: -25.875036239624023
    10. 'self' → logprob: -26.250036239624023

Token 948: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -3.130576806142926e-05
    2. 'stdin' → logprob: -10.500031471252441
    3. 'sys' → logprob: -13.250031471252441
    4. '=sys' → logprob: -14.000031471252441
    5. '(stdin' → logprob: -14.375031471252441
    6. '.readline' → logprob: -15.375031471252441
    7. '.sys' → logprob: -15.750031471252441
    8. '.stdout' → logprob: -16.375030517578125
    9. '(sys' → logprob: -16.750030517578125
    10. '().' → logprob: -18.000030517578125

Token 949: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.0014305938966572285
    2. 'sys' → logprob: -6.626430511474609
    3. '=sys' → logprob: -9.37643051147461
    4. '.stdin' → logprob: -11.25143051147461
    5. '(sys' → logprob: -12.62643051147461
    6. 'stdin' → logprob: -13.87643051147461
    7. '.' → logprob: -14.25143051147461
    8. '.sys' → logprob: -14.25143051147461
    9. '.readlines' → logprob: -14.25143051147461
    10. '().' → logprob: -15.25143051147461

Token 950: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -5.676981345459353e-06
    2. '.readline' → logprob: -12.625005722045898
    3. '()' → logprob: -13.125005722045898
    4. '().__' → logprob: -15.750005722045898
    5. '.split' → logprob: -17.1250057220459
    6. ' ().' → logprob: -17.6250057220459
    7. '()
' → logprob: -18.3750057220459
    8. '(' → logprob: -18.3750057220459
    9. '()).' → logprob: -18.7500057220459
    10. '.strip' → logprob: -19.0000057220459

Token 951: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.003189597511664033
    2. 'strip' → logprob: -5.753189563751221
    3. 'rstrip' → logprob: -11.378190040588379
    4. 'read' → logprob: -15.128190040588379
    5. ' split' → logprob: -15.753190040588379
    6. '(split' → logprob: -16.753189086914062
    7. '.split' → logprob: -18.503189086914062
    8. '_split' → logprob: -18.753189086914062
    9. 'spl' → logprob: -19.378189086914062
    10. ' strip' → logprob: -19.878189086914062

Token 952: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005236837547272444
    2. ')
' → logprob: -5.380236625671387
    3. '())' → logprob: -7.505236625671387
    4. '()' → logprob: -10.130236625671387
    5. '())
' → logprob: -11.130236625671387
    6. '           ' → logprob: -12.505236625671387
    7. '       ' → logprob: -12.630236625671387
    8. '))' → logprob: -13.255236625671387
    9. ')
' → logprob: -14.755236625671387
    10. '()
' → logprob: -14.755236625671387

Token 953: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00030507624614983797
    2. '       ' → logprob: -9.00030517578125
    3. 'self' → logprob: -9.37530517578125
    4. '<|end|>' → logprob: -9.87530517578125
    5. ',' → logprob: -11.62530517578125
    6. '		' → logprob: -11.87530517578125
    7. '	       ' → logprob: -11.87530517578125
    8. '               ' → logprob: -12.00030517578125
    9. '            
' → logprob: -12.62530517578125
    10. '   ' → logprob: -12.75030517578125

Token 954: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.006728872191160917
    2. ' self' → logprob: -5.256728649139404
    3. '           ' → logprob: -6.506728649139404
    4. '	self' → logprob: -14.756729125976562
    5. '       ' → logprob: -16.381729125976562
    6. '   ' → logprob: -16.381729125976562
    7. '		' → logprob: -16.756729125976562
    8. '(self' → logprob: -16.881729125976562
    9. '
' → logprob: -17.631729125976562
    10. '            
' → logprob: -18.756729125976562

Token 955: '.br' (ID: 24828)
  Prédit: '.br'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.br' → logprob: -3.869639476761222e-05
    2. 'brid' → logprob: -10.250039100646973
    3. 'br' → logprob: -13.625039100646973
    4. '.bridge' → logprob: -13.750039100646973
    5. '_br' → logprob: -14.750039100646973
    6. '	br' → logprob: -15.250039100646973
    7. '.Br' → logprob: -16.500038146972656
    8. '```' → logprob: -16.625038146972656
    9. '.bo' → logprob: -16.875038146972656
    10. ';br' → logprob: -17.000038146972656

Token 956: 'idges' (ID: 35524)
  Prédit: 'idges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idges' → logprob: -0.0015733062755316496
    2. 'id' → logprob: -6.626573085784912
    3. 'edges' → logprob: -8.50157356262207
    4. 'idge' → logprob: -10.50157356262207
    5. 'iges' → logprob: -12.25157356262207
    6. 'ides' → logprob: -12.75157356262207
    7. '       ' → logprob: -13.12657356262207
    8. '   ' → logprob: -13.87657356262207
    9. '```' → logprob: -13.87657356262207
    10. 'd' → logprob: -14.25157356262207

Token 957: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -4.263011578586884e-05
    2. '.' → logprob: -10.625042915344238
    3. '.app' → logprob: -11.250042915344238
    4. '.ap' → logprob: -12.750042915344238
    5. ' .' → logprob: -14.250042915344238
    6. '.add' → logprob: -14.625042915344238
    7. '.push' → logprob: -15.125042915344238
    8. 'append' → logprob: -15.250042915344238
    9. '.extend' → logprob: -15.375042915344238
    10. '.setdefault' → logprob: -15.875042915344238

Token 958: '((' (ID: 2054)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.4071832299232483
    2. '((' → logprob: -1.1571831703186035
    3. '(' → logprob: -3.9071831703186035
    4. '(b' → logprob: -12.407183647155762
    5. ' (' → logprob: -12.532183647155762
    6. '(ab' → logprob: -14.532183647155762
    7. '(an' → logprob: -15.032183647155762
    8. '(A' → logprob: -15.157183647155762
    9. '(ai' → logprob: -15.407183647155762
    10. '(
' → logprob: -15.782183647155762

Token 959: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: 0.0
    2. ' a' → logprob: -17.625
    3. ')a' → logprob: -22.125
    4. '	a' → logprob: -23.125
    5. '   ' → logprob: -23.875
    6. 'а' → logprob: -25.0
    7. ')' → logprob: -25.375
    8. '_a' → logprob: -25.5
    9. '(a' → logprob: -26.0
    10. ',a' → logprob: -26.25

Token 960: ',b' (ID: 17568)
  Prédit: ',b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',b' → logprob: -0.2519832253456116
    2. ',' → logprob: -1.5019831657409668
    3. ' ,' → logprob: -10.001983642578125
    4. ',
' → logprob: -12.376983642578125
    5. 'b' → logprob: -13.126983642578125
    6. ',a' → logprob: -14.251983642578125
    7. '   ' → logprob: -15.376983642578125
    8. ')' → logprob: -15.376983642578125
    9. ',B' → logprob: -15.376983642578125
    10. ',c' → logprob: -15.876983642578125

Token 961: ',c' (ID: 22261)
  Prédit: ',c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',c' → logprob: -0.12694543600082397
    2. ',' → logprob: -2.1269454956054688
    3. ' ,' → logprob: -11.126945495605469
    4. ',
' → logprob: -13.751945495605469
    5. 'c' → logprob: -13.751945495605469
    6. ',b' → logprob: -15.001945495605469
    7. ',int' → logprob: -16.62694549560547
    8. ',C' → logprob: -17.25194549560547
    9. ',a' → logprob: -17.87694549560547
    10. ',char' → logprob: -17.87694549560547

Token 962: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.16026179492473602
    2. ')' → logprob: -1.9102617502212524
    3. '))
' → logprob: -10.410262107849121
    4. ')
' → logprob: -12.160262107849121
    5. ')))' → logprob: -13.410262107849121
    6. ' ))' → logprob: -15.160262107849121
    7. '       ' → logprob: -16.410261154174805
    8. '),' → logprob: -16.785261154174805
    9. ' )' → logprob: -16.785261154174805
    10. ')}' → logprob: -16.910261154174805

Token 963: 'class' (ID: 1444)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.07975014299154282
    2. '   ' → logprob: -3.4547500610351562
    3. '    
' → logprob: -3.5797500610351562
    4. '
' → logprob: -4.329750061035156
    5. '```' → logprob: -6.454750061035156
    6. '<|end|>' → logprob: -7.079750061035156
    7. '        
' → logprob: -7.704750061035156
    8. 'graph' → logprob: -7.954750061035156
    9. ' def' → logprob: -8.204750061035156
    10. '  
' → logprob: -8.329750061035156

Token 964: ' Output' (ID: 18315)
  Prédit: 'Main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Main' → logprob: -0.3587568998336792
    2. 'Runner' → logprob: -2.1087570190429688
    3. 'Solution' → logprob: -2.1087570190429688
    4. 'Solver' → logprob: -3.4837570190429688
    5. 'Output' → logprob: -4.233757019042969
    6. 'main' → logprob: -4.858757019042969
    7. ' Solver' → logprob: -6.608757019042969
    8. ' Runner' → logprob: -6.858757019042969
    9. 'Executor' → logprob: -7.108757019042969
    10. ' main' → logprob: -7.233757019042969

Token 965: 'Handler' (ID: 4139)
  Prédit: 'Handler'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Handler' → logprob: -0.4761084020137787
    2. 'Writer' → logprob: -0.9761084318161011
    3. ':
' → logprob: -7.101108551025391
    4. ':' → logprob: -7.726108551025391
    5. 'Manager' → logprob: -8.22610855102539
    6. 'Formatter' → logprob: -8.72610855102539
    7. 'Builder' → logprob: -9.22610855102539
    8. 'Printer' → logprob: -9.47610855102539
    9. 'ter' → logprob: -10.10110855102539
    10. 'Processor' → logprob: -10.35110855102539

Token 966: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.016057010740041733
    2. ':
' → logprob: -4.141057014465332
    3. ':def' → logprob: -11.141057014465332
    4. 'class' → logprob: -13.141057014465332
    5. ':

' → logprob: -13.766057014465332
    6. '<class' → logprob: -14.266057014465332
    7. '```' → logprob: -14.266057014465332
    8. 'def' → logprob: -14.391057014465332
    9. '():
' → logprob: -14.391057014465332
    10. '<|end|>' → logprob: -14.391057014465332

Token 967: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11587425321340561
    2. 'class' → logprob: -2.3658742904663086
    3. 'def' → logprob: -4.490874290466309
    4. '```' → logprob: -5.615874290466309
    5. ':' → logprob: -7.990874290466309
    6. ' def' → logprob: -8.615874290466309
    7. ' class' → logprob: -9.615874290466309
    8. ':
' → logprob: -9.990874290466309
    9. '
' → logprob: -11.490874290466309
    10. '``' → logprob: -11.865874290466309

Token 968: ' @' (ID: 759)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.10109586268663406
    2. 'class' → logprob: -2.3510959148406982
    3. ' def' → logprob: -7.101095676422119
    4. '   ' → logprob: -9.726096153259277
    5. '@' (adapté à ' @') → logprob: -13.351096153259277
    6. ' class' → logprob: -13.601096153259277
    7. '```' → logprob: -13.726096153259277
    8. '
' → logprob: -14.601096153259277
    9. '	def' → logprob: -14.851096153259277
    10. 'classmethod' → logprob: -16.60109519958496

Token 969: 'staticmethod' (ID: 53164)
  Prédit: 'staticmethod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'staticmethod' → logprob: -5.319370302458992e-06
    2. 'classmethod' → logprob: -12.750005722045898
    3. 'dat' → logprob: -13.000005722045898
    4. 'static' → logprob: -17.3750057220459
    5. 'property' → logprob: -20.8750057220459
    6. '__' → logprob: -23.3750057220459
    7. ' static' → logprob: -24.6250057220459
    8. '
' → logprob: -24.7500057220459
    9. '@' → logprob: -25.5000057220459
    10. 'Static' → logprob: -25.6250057220459

Token 970: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.09822460263967514
    2. ' def' → logprob: -2.598224639892578
    3. '   ' → logprob: -3.973224639892578
    4. '(' → logprob: -9.473224639892578
    5. '
' → logprob: -9.473224639892578
    6. '(def' → logprob: -9.598224639892578
    7. ':def' → logprob: -10.473224639892578
    8. '	def' → logprob: -10.723224639892578
    9. ':' → logprob: -11.348224639892578
    10. '  ' → logprob: -11.473224639892578

Token 971: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.000356199947418645
    2. ' def' → logprob: -8.000356674194336
    3. '
' → logprob: -10.875356674194336
    4. '   ' → logprob: -13.250356674194336
    5. '```' → logprob: -18.000356674194336
    6. '	def' → logprob: -18.125356674194336
    7. ':def' → logprob: -18.125356674194336
    8. '    
' → logprob: -18.750356674194336
    9. '_def' → logprob: -18.875356674194336
    10. '(def' → logprob: -19.625356674194336

Token 972: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -4.727905979962088e-05
    2. ' def' → logprob: -10.00004768371582
    3. '
' → logprob: -13.25004768371582
    4. 'write' → logprob: -17.00004768371582
    5. 'print' → logprob: -17.37504768371582
    6. '   ' → logprob: -18.37504768371582
    7. '    
' → logprob: -19.00004768371582
    8. 'define' → logprob: -19.25004768371582
    9. '```' → logprob: -19.75004768371582
    10. '	def' → logprob: -20.50004768371582

Token 973: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00016229959146585315
    2. 'write' → logprob: -8.750162124633789
    3. 'println' → logprob: -12.500162124633789
    4. ' print' → logprob: -17.50016212463379
    5. 'output' → logprob: -17.75016212463379
    6. 'display' → logprob: -19.12516212463379
    7. 'format' → logprob: -19.75016212463379
    8. 'put' → logprob: -20.37516212463379
    9. 'Print' → logprob: -20.75016212463379
    10. 'printf' → logprob: -20.87516212463379

Token 974: '_result' (ID: 11623)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.8082970976829529
    2. '(max' → logprob: -0.8082970976829529
    3. '()' → logprob: -2.8082971572875977
    4. 'max' → logprob: -4.183297157287598
    5. '(int' → logprob: -4.308297157287598
    6. '(result' → logprob: -5.058297157287598
    7. '("' → logprob: -5.183297157287598
    8. 'result' → logprob: -5.808297157287598
    9. '(
' → logprob: -7.058297157287598
    10. '("")' → logprob: -7.433297157287598

Token 975: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.13479745388031006
    2. '(max' → logprob: -2.1347975730895996
    3. '(' → logprob: -4.8847975730896
    4. '(value' → logprob: -8.634797096252441
    5. ' (' → logprob: -10.634797096252441
    6. '(output' → logprob: -10.759797096252441
    7. 'result' → logprob: -11.259797096252441
    8. '(res' → logprob: -11.509797096252441
    9. '(
' → logprob: -12.009797096252441
    10. '(time' → logprob: -12.259797096252441

Token 976: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3589773178100586
    2. '(result' → logprob: -1.2339773178100586
    3. ':' → logprob: -5.483977317810059
    4. '(' → logprob: -6.233977317810059
    5. '):
' → logprob: -6.233977317810059
    6. ')' → logprob: -7.233977317810059
    7. ',' → logprob: -7.733977317810059
    8. ',result' → logprob: -7.733977317810059
    9. 'result' → logprob: -7.858977317810059
    10. '   ' → logprob: -9.233977317810059

Token 977: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0003345122095197439
    2. ' int' → logprob: -8.250334739685059
    3. ')' → logprob: -10.125334739685059
    4. '):
' → logprob: -11.125334739685059
    5. '):' → logprob: -11.250334739685059
    6. '(int' → logprob: -13.625334739685059
    7. '   ' → logprob: -13.750334739685059
    8. ' ' → logprob: -13.875334739685059
    9. '[int' → logprob: -14.000334739685059
    10. '
' → logprob: -15.125334739685059

Token 978: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.027240974828600883
    2. '):
' → logprob: -3.7772409915924072
    3. ')' → logprob: -5.527240753173828
    4. '   ' → logprob: -12.402240753173828
    5. '):
' → logprob: -12.902240753173828
    6. ')->' → logprob: -13.027240753173828
    7. ':' → logprob: -13.777240753173828
    8. ' ):' → logprob: -15.152240753173828
    9. '       ' → logprob: -16.027240753173828
    10. '):

' → logprob: -16.402240753173828

Token 979: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00480390340089798
    2. 'print' → logprob: -5.5048041343688965
    3. '   ' → logprob: -7.2548041343688965
    4. ' print' → logprob: -11.129803657531738
    5. '```' → logprob: -12.754803657531738
    6. '           ' → logprob: -15.254803657531738
    7. '`' → logprob: -16.004804611206055
    8. '    ' → logprob: -16.129804611206055
    9. '        
' → logprob: -16.254804611206055
    10. '   ' → logprob: -16.629804611206055

Token 980: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -5.796184723294573e-06
    2. 'if' → logprob: -12.250005722045898
    3. '       ' → logprob: -14.250005722045898
    4. ' print' → logprob: -15.250005722045898
    5. 'sys' → logprob: -16.6250057220459
    6. '```' → logprob: -18.2500057220459
    7. '   ' → logprob: -20.6250057220459
    8. 'pr' → logprob: -21.3750057220459
    9. 'println' → logprob: -21.3750057220459
    10. 'prin' → logprob: -23.1250057220459

Token 981: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.005233882926404476
    2. 'result' → logprob: -5.2552337646484375
    3. '(' → logprob: -17.005233764648438
    4. ' result' → logprob: -18.380233764648438
    5. '(f' → logprob: -18.755233764648438
    6. '=result' → logprob: -18.755233764648438
    7. '[result' → logprob: -19.380233764648438
    8. ',result' → logprob: -19.880233764648438
    9. '$result' → logprob: -20.505233764648438
    10. '(
' → logprob: -20.755233764648438

Token 982: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.9361264946837764e-07
    2. ')
' → logprob: -16.5
    3. '))' → logprob: -17.875
    4. ' )' → logprob: -18.0
    5. ')`' → logprob: -18.25
    6. ')}' → logprob: -18.875
    7. '')' → logprob: -19.125
    8. '   ' → logprob: -19.25
    9. '()' → logprob: -19.75
    10. '())' → logprob: -20.0

Token 983: 'class' (ID: 1444)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00022034443099983037
    2. 'if' → logprob: -8.50022029876709
    3. '```' → logprob: -11.00022029876709
    4. '
' → logprob: -17.000221252441406
    5. 'import' → logprob: -17.125221252441406
    6. ' def' → logprob: -17.125221252441406
    7. '    
' → logprob: -17.500221252441406
    8. '  
' → logprob: -18.375221252441406
    9. '``' → logprob: -18.625221252441406
    10. 'class' → logprob: -18.750221252441406

Token 984: ' One' (ID: 5108)
  Prédit: 'Main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Main' → logprob: -0.15557296574115753
    2. ' Main' → logprob: -2.6555728912353516
    3. 'Solution' → logprob: -3.5305728912353516
    4. 'Runner' → logprob: -4.155572891235352
    5. ' Solution' → logprob: -4.655572891235352
    6. ' Runner' → logprob: -4.780572891235352
    7. 'main' → logprob: -5.780572891235352
    8. 'Solver' → logprob: -6.030572891235352
    9. ' Solver' → logprob: -6.030572891235352
    10. 'Thread' → logprob: -6.530572891235352

Token 985: 'Time' (ID: 1929)
  Prédit: 'Time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Time' → logprob: -7.896309739408025e-07
    2. 'One' → logprob: -16.0
    3. 'Two' → logprob: -16.0
    4. '-Time' → logprob: -16.875
    5. ' Time' → logprob: -17.0
    6. '-time' → logprob: -17.0
    7. '_time' → logprob: -17.0
    8. 'Timed' → logprob: -17.125
    9. '_Time' → logprob: -17.25
    10. 'Timer' → logprob: -17.375

Token 986: 'Path' (ID: 2619)
  Prédit: 'Path'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Path' → logprob: -2.951771421066951e-05
    2. 'Solver' → logprob: -10.875029563903809
    3. 'Pat' → logprob: -13.000029563903809
    4. 'Trip' → logprob: -13.125029563903809
    5. 'Traversal' → logprob: -13.875029563903809
    6. 'path' → logprob: -14.375029563903809
    7. ' Path' → logprob: -14.750029563903809
    8. '<Path' → logprob: -14.750029563903809
    9. '_path' → logprob: -14.875029563903809
    10. 'Journey' → logprob: -15.000029563903809

Token 987: 'App' (ID: 2563)
  Prédit: 'Solver'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Solver' → logprob: -9.014684110297821e-06
    2. 'Finder' → logprob: -12.125008583068848
    3. 'solver' → logprob: -13.375008583068848
    4. 'Runner' → logprob: -14.750008583068848
    5. ' Solver' → logprob: -14.875008583068848
    6. 'Solution' → logprob: -14.875008583068848
    7. '_solver' → logprob: -15.125008583068848
    8. 'Scheduler' → logprob: -15.750008583068848
    9. ':' → logprob: -15.875008583068848
    10. 'Searcher' → logprob: -16.125009536743164

Token 988: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0036087436601519585
    2. ':
' → logprob: -5.628608703613281
    3. '):' → logprob: -12.753608703613281
    4. ':def' → logprob: -13.628608703613281
    5. ':

' → logprob: -13.753608703613281
    6. '():' → logprob: -14.003608703613281
    7. '(' → logprob: -14.253608703613281
    8. '   ' → logprob: -14.503608703613281
    9. '(object' → logprob: -15.128608703613281
    10. ' :' → logprob: -15.128608703613281

Token 989: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07330843061208725
    2. ':' → logprob: -2.6983084678649902
    3. ':
' → logprob: -5.82330846786499
    4. 'class' → logprob: -8.948307991027832
    5. 'def' → logprob: -9.698307991027832
    6. '```' → logprob: -9.948307991027832
    7. ' def' → logprob: -10.323307991027832
    8. '<|end|>' → logprob: -10.448307991027832
    9. '    
' → logprob: -10.698307991027832
    10. '(' → logprob: -11.198307991027832

Token 990: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.33035215735435486
    2. ' def' → logprob: -1.3303521871566772
    3. '   ' → logprob: -4.080352306365967
    4. 'class' → logprob: -10.580351829528809
    5. '	def' → logprob: -10.955351829528809
    6. ':def' → logprob: -14.830351829528809
    7. '```' → logprob: -14.955351829528809
    8. ' class' → logprob: -16.580352783203125
    9. '    
' → logprob: -17.830352783203125
    10. 'classmethod' → logprob: -18.205352783203125

Token 991: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.4578580856323242
    2. 'init' → logprob: -1.7078580856323242
    3. ' __' → logprob: -1.7078580856323242
    4. 'def' → logprob: -5.457858085632324
    5. ' def' → logprob: -8.332858085632324
    6. '_init' → logprob: -8.957858085632324
    7. ' init' → logprob: -9.082858085632324
    8. '```' → logprob: -9.957858085632324
    9. 'staticmethod' → logprob: -10.582858085632324
    10. '   ' → logprob: -11.707858085632324

Token 992: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -1.9361264946837764e-07
    2. '__' → logprob: -17.25
    3. 'new' → logprob: -17.5
    4. ' init' → logprob: -17.75
    5. '   ' → logprob: -18.75
    6. 'def' → logprob: -19.0
    7. '```' → logprob: -19.5
    8. 'name' → logprob: -20.25
    9. 'int' → logprob: -20.25
    10. '(init' → logprob: -20.75

Token 993: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.00012856863031629473
    2. '__' → logprob: -9.000128746032715
    3. '__(
' → logprob: -12.250128746032715
    4. '__((' → logprob: -15.875128746032715
    5. '__('' → logprob: -16.8751277923584
    6. '__("' → logprob: -17.3751277923584
    7. '(self' → logprob: -17.5001277923584
    8. '__[' → logprob: -18.7501277923584
    9. '_(' → logprob: -19.3751277923584
    10. '___' → logprob: -20.0001277923584

Token 994: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0001825642102630809
    2. '):
' → logprob: -8.750182151794434
    3. ')' → logprob: -10.750182151794434
    4. '
' → logprob: -14.375182151794434
    5. ' self' → logprob: -14.625182151794434
    6. '   ' → logprob: -14.875182151794434
    7. ')(' → logprob: -15.000182151794434
    8. '       ' → logprob: -15.250182151794434
    9. '(self' → logprob: -15.375182151794434
    10. '):

' → logprob: -15.500182151794434

Token 995: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007899748161435127
    2. 'self' → logprob: -7.875790119171143
    3. '__,' → logprob: -8.125789642333984
    4. ' ,' → logprob: -9.625789642333984
    5. '):' → logprob: -11.125789642333984
    6. ',self' → logprob: -11.625789642333984
    7. 'graph' → logprob: -12.375789642333984
    8. ',
' → logprob: -12.500789642333984
    9. ',__' → logprob: -12.625789642333984
    10. '):
' → logprob: -12.750789642333984

Token 996: '       ' (ID: 309)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0006657334160991013
    2. '       ' → logprob: -7.375665664672852
    3. ' self' → logprob: -10.375665664672852
    4. '   ' → logprob: -12.625665664672852
    5. '
' → logprob: -13.250665664672852
    6. 'graph' → logprob: -13.250665664672852
    7. '(self' → logprob: -14.125665664672852
    8. 'Graph' → logprob: -15.625665664672852
    9. '```' → logprob: -16.12566566467285
    10. '	self' → logprob: -17.12566566467285

Token 997: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.000936355150770396
    2. '       ' → logprob: -7.000936508178711
    3. ' self' → logprob: -10.625936508178711
    4. '   ' → logprob: -14.500936508178711
    5. '
' → logprob: -17.00093650817871
    6. '           ' → logprob: -18.50093650817871
    7. '	self' → logprob: -18.87593650817871
    8. '        
' → logprob: -19.00093650817871
    9. 'def' → logprob: -19.12593650817871
    10. '(self' → logprob: -19.37593650817871

Token 998: '.input' (ID: 18322)
  Prédit: '.graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.graph' → logprob: -0.10481175035238266
    2. 'graph' → logprob: -2.979811668395996
    3. '_graph' → logprob: -3.854811668395996
    4. '.input' → logprob: -4.479811668395996
    5. '_input' → logprob: -5.104811668395996
    6. '._' → logprob: -5.229811668395996
    7. '.handler' → logprob: -6.604811668395996
    8. '_handler' → logprob: -6.604811668395996
    9. 'handler' → logprob: -7.479811668395996
    10. '   ' → logprob: -8.104811668395996

Token 999: '_handler' (ID: 23758)
  Prédit: '_handler'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_handler' → logprob: -0.001957775093615055
    2. 'Handler' → logprob: -7.001957893371582
    3. 'handler' → logprob: -7.001957893371582
    4. '_reader' → logprob: -9.501957893371582
    5. '_data' → logprob: -10.751957893371582
    6. '   ' → logprob: -11.376957893371582
    7. ' =' → logprob: -11.376957893371582
    8. '=' → logprob: -12.501957893371582
    9. '_handle' → logprob: -12.751957893371582
    10. '\' → logprob: -13.751957893371582

Token 1000: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.575977087020874
    2. '=' → logprob: -0.825977087020874
    3. ' ' → logprob: -11.450977325439453
    4. ' =
' → logprob: -11.950977325439453
    5. '   ' → logprob: -12.325977325439453
    6. '=self' → logprob: -12.575977325439453
    7. '=
' → logprob: -13.200977325439453
    8. ')' → logprob: -13.325977325439453
    9. '  ' → logprob: -13.325977325439453
    10. 'self' → logprob: -13.575977325439453

Token 1001: ' Input' (ID: 10090)
  Prédit: 'Input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Input' → logprob: -1.8624639324116288e-06
    2. ' Input' → logprob: -13.250001907348633
    3. '	Input' → logprob: -22.500001907348633
    4. 'input' → logprob: -23.125001907348633
    5. 'One' → logprob: -24.375001907348633
    6. '_input' → logprob: -24.875001907348633
    7. '_Input' → logprob: -25.500001907348633
    8. '<Input' → logprob: -26.125001907348633
    9. 'INPUT' → logprob: -26.375001907348633
    10. '\Input' → logprob: -26.750001907348633

Token 1002: 'Handler' (ID: 4139)
  Prédit: 'Handler'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Handler' → logprob: -9.088346359931165e-07
    2. '_Handler' → logprob: -14.625000953674316
    3. 'handler' → logprob: -15.125000953674316
    4. '_handler' → logprob: -15.500000953674316
    5. '   ' → logprob: -18.75
    6. '_HANDLER' → logprob: -18.75
    7. '       ' → logprob: -19.875
    8. '
' → logprob: -20.125
    9. ' Handler' → logprob: -20.5
    10. 'Hand' → logprob: -20.875

Token 1003: '()
' (ID: 1234)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.30203917622566223
    2. '
' → logprob: -1.5520391464233398
    3. '   ' → logprob: -3.30203914642334
    4. '    
' → logprob: -4.80203914642334
    5. '<|end|>' → logprob: -6.42703914642334
    6. '        
' → logprob: -6.80203914642334
    7. 'def' → logprob: -7.67703914642334
    8. 'self' → logprob: -7.80203914642334
    9. '  
' → logprob: -9.92703914642334
    10. '```' → logprob: -10.17703914642334

Token 1004: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009093358181416988
    2. 'def' → logprob: -5.259093284606934
    3. '       ' → logprob: -5.634093284606934
    4. ' def' → logprob: -8.384093284606934
    5. '
' → logprob: -10.759093284606934
    6. '    
' → logprob: -11.384093284606934
    7. '```' → logprob: -12.259093284606934
    8. 'self' → logprob: -12.384093284606934
    9. '        
' → logprob: -12.759093284606934
    10. '	def' → logprob: -13.259093284606934

Token 1005: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0014064249116927385
    2. 'def' → logprob: -6.626406192779541
    3. ' self' → logprob: -10.1264066696167
    4. '       ' → logprob: -10.3764066696167
    5. '
' → logprob: -12.2514066696167
    6. '   ' → logprob: -13.2514066696167
    7. 'graph' → logprob: -14.6264066696167
    8. '        
' → logprob: -14.6264066696167
    9. 'class' → logprob: -14.8764066696167
    10. '	self' → logprob: -15.0014066696167

Token 1006: '.graph' (ID: 18104)
  Prédit: '.graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.graph' → logprob: -0.3459542393684387
    2. 'graph' → logprob: -1.345954179763794
    3. '.output' → logprob: -3.845954179763794
    4. 'output' → logprob: -4.595954418182373
    5. 'solver' → logprob: -8.470953941345215
    6. 'def' → logprob: -8.595953941345215
    7. '._' → logprob: -9.720953941345215
    8. '.s' → logprob: -10.095953941345215
    9. '.' → logprob: -10.220953941345215
    10. '	graph' → logprob: -10.470953941345215

Token 1007: ':' (ID: 25)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1128322035074234
    2. ' =' → logprob: -2.2378323078155518
    3. '=
' → logprob: -12.612832069396973
    4. '   ' → logprob: -13.112832069396973
    5. '.' → logprob: -13.612832069396973
    6. 'graph' → logprob: -14.362832069396973
    7. ' =
' → logprob: -14.612832069396973
    8. 'import' → logprob: -14.737832069396973
    9. '=None' → logprob: -14.862832069396973
    10. '.=' → logprob: -14.987832069396973

Token 1008: ' Optional' (ID: 19351)
  Prédit: 'Optional'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Optional' → logprob: -0.04880310222506523
    2. 'Island' → logprob: -3.0488030910491943
    3. 'Is' → logprob: -9.673803329467773
    4. ' Optional' → logprob: -9.798803329467773
    5. 'None' → logprob: -9.798803329467773
    6. ' Island' → logprob: -11.048803329467773
    7. '(Optional' → logprob: -11.298803329467773
    8. 'optional' → logprob: -11.798803329467773
    9. '   ' → logprob: -12.923803329467773
    10. '	Optional' → logprob: -14.048803329467773

Token 1009: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.02112390659749508
    2. '=' → logprob: -4.021123886108398
    3. ' =' → logprob: -5.896123886108398
    4. 'Island' → logprob: -8.521123886108398
    5. 'Is' → logprob: -11.146123886108398
    6. '[
' → logprob: -13.021123886108398
    7. ' Island' → logprob: -13.646123886108398
    8. '   ' → logprob: -14.146123886108398
    9. '(Is' → logprob: -14.646123886108398
    10. '[int' → logprob: -14.771123886108398

Token 1010: 'Island' (ID: 126208)
  Prédit: 'Island'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Island' → logprob: -1.3544423381972592e-05
    2. 'Is' → logprob: -11.25001335144043
    3. '[' → logprob: -15.75001335144043
    4. '`' → logprob: -16.50001335144043
    5. 'is' → logprob: -17.12501335144043
    6. '```' → logprob: -17.50001335144043
    7. '
' → logprob: -17.75001335144043
    8. '{' → logprob: -18.00001335144043
    9. 'One' → logprob: -18.12501335144043
    10. ' Island' → logprob: -18.37501335144043

Token 1011: 'Graph' (ID: 9922)
  Prédit: 'Graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Graph' → logprob: -3.128163257315464e-07
    2. 'graph' → logprob: -15.5
    3. 'raph' → logprob: -18.875
    4. '_graph' → logprob: -18.875
    5. '.Graph' → logprob: -19.125
    6. 'Graphs' → logprob: -20.25
    7. '_GRAPH' → logprob: -20.875
    8. ')' → logprob: -21.125
    9. ' Graph' → logprob: -21.25
    10. ' graph' → logprob: -21.375

Token 1012: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5711284875869751
    2. ')' → logprob: -1.071128487586975
    3. ']' → logprob: -2.4461283683776855
    4. ' =' → logprob: -5.4461283683776855
    5. ')=' → logprob: -7.3211283683776855
    6. ']=' → logprob: -7.4461283683776855
    7. '=None' → logprob: -8.446128845214844
    8. '>' → logprob: -10.321128845214844
    9. ' )' → logprob: -10.946128845214844
    10. '
' → logprob: -11.696128845214844

Token 1013: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.001517238444648683
    2. ' =' → logprob: -6.501517295837402
    3. '=None' → logprob: -11.126517295837402
    4. 'None' → logprob: -16.251516342163086
    5. '=
' → logprob: -16.751516342163086
    6. '(None' → logprob: -18.126516342163086
    7. ' ' → logprob: -20.376516342163086
    8. '       ' → logprob: -20.376516342163086
    9. ' None' → logprob: -20.501516342163086
    10. '        
' → logprob: -20.501516342163086

Token 1014: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.00033546582562848926
    2. ' None' → logprob: -8.000335693359375
    3. '   ' → logprob: -18.625335693359375
    4. '=None' → logprob: -21.250335693359375
    5. '(None' → logprob: -21.375335693359375
    6. '_None' → logprob: -21.750335693359375
    7. 'none' → logprob: -22.125335693359375
    8. '
' → logprob: -22.375335693359375
    9. 'No' → logprob: -22.500335693359375
    10. ' ' → logprob: -23.000335693359375

Token 1015: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00954038742929697
    2. '    
' → logprob: -4.884540557861328
    3. '
' → logprob: -7.259540557861328
    4. '       ' → logprob: -7.384540557861328
    5. 'def' → logprob: -8.009540557861328
    6. '        
' → logprob: -8.259540557861328
    7. ' def' → logprob: -12.134540557861328
    8. '  
' → logprob: -12.509540557861328
    9. '```' → logprob: -12.634540557861328
    10. '   
' → logprob: -13.259540557861328

Token 1016: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014846124686300755
    2. '    
' → logprob: -4.264846324920654
    3. '        
' → logprob: -8.139845848083496
    4. '       ' → logprob: -8.389845848083496
    5. '
' → logprob: -9.014845848083496
    6. 'def' → logprob: -10.264845848083496
    7. '  
' → logprob: -12.514845848083496
    8. '   
' → logprob: -13.264845848083496
    9. ' def' → logprob: -14.639845848083496
    10. ' 
' → logprob: -15.264845848083496

Token 1017: ' self' (ID: 1051)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6374901533126831
    2. '
' → logprob: -1.012490153312683
    3. '    
' → logprob: -3.0124902725219727
    4. '   ' → logprob: -3.2624902725219727
    5. 'self' (adapté à ' self') → logprob: -4.012490272521973
    6. '        
' → logprob: -6.387490272521973
    7. '       ' → logprob: -7.887490272521973
    8. ' def' → logprob: -8.637490272521973
    9. '
    
' → logprob: -9.387490272521973
    10. '  
' → logprob: -9.762490272521973

Token 1018: '.s' (ID: 640)
  Prédit: '.result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.result' → logprob: -0.005480148829519749
    2. 'result' → logprob: -6.1304802894592285
    3. '.output' → logprob: -6.7554802894592285
    4. '.solution' → logprob: -6.8804802894592285
    5. '.results' → logprob: -8.13047981262207
    6. '.runner' → logprob: -8.63047981262207
    7. 'solver' → logprob: -8.75547981262207
    8. '.s' → logprob: -9.25547981262207
    9. '.thread' → logprob: -9.25547981262207
    10. '.input' → logprob: -9.88047981262207

Token 1019: 'olver' (ID: 13941)
  Prédit: 'olver'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'olver' → logprob: -0.004694868810474873
    2. 'olve' → logprob: -5.379694938659668
    3. 't' → logprob: -9.879694938659668
    4. 'elf' → logprob: -11.379694938659668
    5. 'olution' → logprob: -12.504694938659668
    6. '_' → logprob: -12.879694938659668
    7. '   ' → logprob: -13.379694938659668
    8. 'cheduler' → logprob: -14.504694938659668
    9. 'olved' → logprob: -14.754694938659668
    10. 'ov' → logprob: -15.129694938659668

Token 1020: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5760489106178284
    2. '=' → logprob: -0.8260489106178284
    3. ':' → logprob: -9.201048851013184
    4. ' ' → logprob: -12.076048851013184
    5. '=None' → logprob: -13.451048851013184
    6. '   ' → logprob: -14.451048851013184
    7. ' :' → logprob: -15.076048851013184
    8. '_' → logprob: -16.3260498046875
    9. '  ' → logprob: -16.5760498046875
    10. ',' → logprob: -16.7010498046875

Token 1021: ' Optional' (ID: 19351)
  Prédit: 'One'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'One' → logprob: -0.014769898727536201
    2. 'Optional' → logprob: -5.014770030975342
    3. ' One' → logprob: -5.264770030975342
    4. 'None' → logprob: -5.889770030975342
    5. ' None' → logprob: -10.014769554138184
    6. ' Optional' → logprob: -10.264769554138184
    7. '   ' → logprob: -12.889769554138184
    8. '=None' → logprob: -14.389769554138184
    9. 'Option' → logprob: -14.639769554138184
    10. ' ' → logprob: -15.389769554138184

Token 1022: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.1008713702030946e-06
    2. 'One' → logprob: -13.750001907348633
    3. '[
' → logprob: -14.000001907348633
    4. '=' → logprob: -16.375001907348633
    5. '[Serialize' → logprob: -17.875001907348633
    6. '['' → logprob: -18.250001907348633
    7. ' =' → logprob: -18.625001907348633
    8. '[int' → logprob: -18.625001907348633
    9. ':' → logprob: -18.750001907348633
    10. ' [' → logprob: -19.000001907348633

Token 1023: 'One' (ID: 5045)
  Prédit: 'One'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'One' → logprob: 0.0
    2. ' One' → logprob: -17.625
    3. 'On' → logprob: -20.25
    4. '
' → logprob: -20.5
    5. '```' → logprob: -21.125
    6. '[' → logprob: -21.375
    7. '`' → logprob: -21.5
    8. '   ' → logprob: -21.5
    9. '.One' → logprob: -22.375
    10. 'class' → logprob: -22.875

Token 1024: 'Time' (ID: 1929)
  Prédit: 'Time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Time' → logprob: -1.6240566083070007e-06
    2. 'Tim' → logprob: -15.375001907348633
    3. '	Time' → logprob: -15.375001907348633
    4. ' Time' → logprob: -15.500001907348633
    5. '_Time' → logprob: -15.625001907348633
    6. 'Timed' → logprob: -15.875001907348633
    7. 'Ti' → logprob: -16.000001907348633
    8. 'Times' → logprob: -16.125001907348633
    9. '
' → logprob: -16.500001907348633
    10. '```' → logprob: -16.750001907348633

Token 1025: 'Path' (ID: 2619)
  Prédit: 'Path'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Path' → logprob: -3.173704271830502e-06
    2. ' Path' → logprob: -13.25000286102295
    3. 'Pat' → logprob: -14.62500286102295
    4. 'path' → logprob: -15.37500286102295
    5. '	Path' → logprob: -15.87500286102295
    6. 'Time' → logprob: -16.250003814697266
    7. '_path' → logprob: -16.375003814697266
    8. '<Path' → logprob: -16.500003814697266
    9. '_Path' → logprob: -16.750003814697266
    10. '
' → logprob: -16.875003814697266

Token 1026: 'Solver' (ID: 70484)
  Prédit: 'Solver'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Solver' → logprob: -3.173704271830502e-06
    2. 'solver' → logprob: -13.00000286102295
    3. '_solver' → logprob: -15.00000286102295
    4. 'Solve' → logprob: -15.37500286102295
    5. 'Sol' → logprob: -15.62500286102295
    6. ' Solver' → logprob: -16.375003814697266
    7. ' solver' → logprob: -17.250003814697266
    8. 'Solution' → logprob: -17.875003814697266
    9. 'olver' → logprob: -18.625003814697266
    10. 'Path' → logprob: -18.625003814697266

Token 1027: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.000122608442325145
    2. ')' → logprob: -9.375123023986816
    3. ']=' → logprob: -10.500123023986816
    4. ' ]' → logprob: -12.125123023986816
    5. '()]' → logprob: -13.750123023986816
    6. '   ' → logprob: -13.875123023986816
    7. '>' → logprob: -14.125123023986816
    8. '']' → logprob: -14.750123023986816
    9. ')]' → logprob: -15.250123023986816
    10. '"]' → logprob: -15.375123023986816

Token 1028: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.08131371438503265
    2. ' =' → logprob: -2.8313136100769043
    3. '=
' → logprob: -4.831313610076904
    4. '   ' → logprob: -5.831313610076904
    5. 'def' → logprob: -5.831313610076904
    6. '
' → logprob: -5.831313610076904
    7. '    
' → logprob: -6.331313610076904
    8. ' =
' → logprob: -8.581314086914062
    9. ' def' → logprob: -9.331314086914062
    10. '=None' → logprob: -9.706314086914062

Token 1029: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.048626311123371124
    2. ' None' → logprob: -3.04862642288208
    3. 'One' → logprob: -10.173625946044922
    4. ' One' → logprob: -14.173625946044922
    5. 'self' → logprob: -16.298625946044922
    6. '_None' → logprob: -17.298625946044922
    7. '       ' → logprob: -17.423625946044922
    8. '   ' → logprob: -17.548625946044922
    9. '(None' → logprob: -17.673625946044922
    10. 'No' → logprob: -18.798625946044922

Token 1030: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.30700263381004333
    2. '   ' → logprob: -1.8070026636123657
    3. '    
' → logprob: -2.307002544403076
    4. 'def' → logprob: -8.057003021240234
    5. '        
' → logprob: -8.307003021240234
    6. '  
' → logprob: -10.432003021240234
    7. ' 
' → logprob: -11.432003021240234
    8. '   
' → logprob: -11.557003021240234
    9. '

' → logprob: -11.682003021240234
    10. ' def' → logprob: -11.682003021240234

Token 1031: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1761661320924759
    2. '
' → logprob: -1.9261661767959595
    3. '    
' → logprob: -4.17616605758667
    4. 'def' → logprob: -7.80116605758667
    5. '        
' → logprob: -10.676166534423828
    6. '  
' → logprob: -11.926166534423828
    7. ' def' → logprob: -11.926166534423828
    8. '

' → logprob: -12.301166534423828
    9. '   
' → logprob: -12.801166534423828
    10. ' 
' → logprob: -12.801166534423828

Token 1032: ' self' (ID: 1051)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.033379752188920975
    2. '
' → logprob: -3.5333797931671143
    3. '   ' → logprob: -5.908379554748535
    4. '    
' → logprob: -7.658379554748535
    5. ' def' → logprob: -7.783379554748535
    6. '        
' → logprob: -11.408379554748535
    7. '	def' → logprob: -12.783379554748535
    8. '

' → logprob: -13.783379554748535
    9. ' 
' → logprob: -13.783379554748535
    10. '  
' → logprob: -14.533379554748535

Token 1033: '.output' (ID: 27521)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.45817092061042786
    2. '.output' → logprob: -1.7081708908081055
    3. '.result' → logprob: -2.9581708908081055
    4. '.def' → logprob: -3.2081708908081055
    5. '.running' → logprob: -3.2081708908081055
    6. '.input' → logprob: -3.7081708908081055
    7. '.' → logprob: -4.7081708908081055
    8. ' def' → logprob: -5.0831708908081055
    9. '.thread' → logprob: -5.3331708908081055
    10. 'output' → logprob: -6.3331708908081055

Token 1034: '_handler' (ID: 23758)
  Prédit: '_handler'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_handler' → logprob: -0.0003766919835470617
    2. '_' → logprob: -8.50037670135498
    3. 'Handler' → logprob: -9.87537670135498
    4. '_result' → logprob: -10.25037670135498
    5. '   ' → logprob: -10.25037670135498
    6. '_controller' → logprob: -11.37537670135498
    7. 'def' → logprob: -12.12537670135498
    8. '_writer' → logprob: -12.37537670135498
    9. '_handlers' → logprob: -12.50037670135498
    10. 'handler' → logprob: -12.75037670135498

Token 1035: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.17976711690425873
    2. ' =' → logprob: -1.80476713180542
    3. ' ' → logprob: -11.679766654968262
    4. '=None' → logprob: -12.554766654968262
    5. ':' → logprob: -13.054766654968262
    6. '   ' → logprob: -13.179766654968262
    7. '.' → logprob: -13.179766654968262
    8. '  ' → logprob: -13.429766654968262
    9. '<|end|>' → logprob: -13.929766654968262
    10. '=True' → logprob: -14.429766654968262

Token 1036: ' Output' (ID: 18315)
  Prédit: 'Output'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Output' → logprob: -0.00020354038861114532
    2. ' Output' → logprob: -8.500203132629395
    3. '	Output' → logprob: -19.62520408630371
    4. 'output' → logprob: -21.87520408630371
    5. '(Output' → logprob: -22.25020408630371
    6. ' output' → logprob: -22.62520408630371
    7. 'Input' → logprob: -22.75020408630371
    8. '_Output' → logprob: -23.37520408630371
    9. '.Output' → logprob: -23.50020408630371
    10. '_output' → logprob: -23.87520408630371

Token 1037: 'Handler' (ID: 4139)
  Prédit: 'Handler'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Handler' → logprob: 0.0
    2. '_Handler' → logprob: -16.75
    3. 'Output' → logprob: -18.625
    4. '_handler' → logprob: -19.25
    5. 'handler' → logprob: -20.0
    6. 'Handlers' → logprob: -20.375
    7. ' Handler' → logprob: -21.125
    8. '_HANDLER' → logprob: -21.5
    9. 'Hand' → logprob: -21.75
    10. '   ' → logprob: -22.375

Token 1038: '()
' (ID: 1234)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2783331274986267
    2. '   ' → logprob: -1.5283331871032715
    3. '    
' → logprob: -3.6533331871032715
    4. '        
' → logprob: -10.153332710266113
    5. '<|end|>' → logprob: -10.278332710266113
    6. '

' → logprob: -10.528332710266113
    7. 'def' → logprob: -11.028332710266113
    8. '  
' → logprob: -11.028332710266113
    9. '   
' → logprob: -12.153332710266113
    10. '	
' → logprob: -12.278332710266113

Token 1039: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0822523757815361
    2. '    
' → logprob: -3.082252264022827
    3. '
' → logprob: -3.457252264022827
    4. 'def' → logprob: -6.582252502441406
    5. '        
' → logprob: -9.832252502441406
    6. '<|end|>' → logprob: -9.832252502441406
    7. '  
' → logprob: -10.207252502441406
    8. '```' → logprob: -11.207252502441406
    9. ' def' → logprob: -11.332252502441406
    10. ' 
' → logprob: -11.832252502441406

Token 1040: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10046135634183884
    2. 'def' → logprob: -2.35046124458313
    3. ' def' → logprob: -8.60046100616455
    4. '	def' → logprob: -9.60046100616455
    5. '
' → logprob: -13.22546100616455
    6. '    
' → logprob: -13.97546100616455
    7. '```' → logprob: -15.85046100616455
    8. '  ' → logprob: -16.600461959838867
    9. ' ' → logprob: -17.600461959838867
    10. '_def' → logprob: -17.725461959838867

Token 1041: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -4.320199877838604e-07
    2. ' def' → logprob: -14.75
    3. '   ' → logprob: -20.125
    4. '	def' → logprob: -21.5
    5. '    
' → logprob: -23.5
    6. '
' → logprob: -24.25
    7. '```' → logprob: -25.0
    8. 'Def' → logprob: -26.125
    9. '        
' → logprob: -26.125
    10. 'de' → logprob: -26.625

Token 1042: ' run' (ID: 2461)
  Prédit: 'run'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'run' → logprob: -0.00044783088378608227
    2. ' run' → logprob: -8.000448226928711
    3. 'main' → logprob: -9.250448226928711
    4. 'setup' → logprob: -11.500448226928711
    5. 'build' → logprob: -12.625448226928711
    6. 'prepare' → logprob: -13.375448226928711
    7. 'initialize' → logprob: -14.250448226928711
    8. 'create' → logprob: -15.375448226928711
    9. 'start' → logprob: -15.750448226928711
    10. 'execute' → logprob: -16.37544822692871

Token 1043: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -5.538490950129926e-05
    2. '(' → logprob: -10.250055313110352
    3. 'self' → logprob: -11.875055313110352
    4. '(
' → logprob: -12.000055313110352
    5. '       ' → logprob: -13.000055313110352
    6. '   ' → logprob: -13.000055313110352
    7. '():
' → logprob: -13.875055313110352
    8. '():' → logprob: -14.500055313110352
    9. ' (' → logprob: -15.250055313110352
    10. '(s' → logprob: -15.500055313110352

Token 1044: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.5771021842956543
    2. '):' → logprob: -0.8271021842956543
    3. 'self' → logprob: -7.202102184295654
    4. '(self' → logprob: -8.702102661132812
    5. ',' → logprob: -9.577102661132812
    6. ')' → logprob: -9.577102661132812
    7. '():
' → logprob: -9.952102661132812
    8. '():' → logprob: -10.577102661132812
    9. '):
' → logprob: -10.702102661132812
    10. '):

' → logprob: -12.452102661132812

Token 1045: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00046439285506494343
    2. 'self' → logprob: -7.75046443939209
    3. '```' → logprob: -11.00046443939209
    4. '
' → logprob: -11.87546443939209
    5. '   ' → logprob: -12.25046443939209
    6. ' self' → logprob: -12.87546443939209
    7. '        
' → logprob: -14.25046443939209
    8. '(self' → logprob: -14.87546443939209
    9. '	' → logprob: -15.00046443939209
    10. '           ' → logprob: -15.37546443939209

Token 1046: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5766564607620239
    2. 'self' (adapté à ' self') → logprob: -0.8266564607620239
    3. ' self' → logprob: -7.326656341552734
    4. '   ' → logprob: -9.826656341552734
    5. '	self' → logprob: -13.201656341552734
    6. '
' → logprob: -14.201656341552734
    7. '        
' → logprob: -14.326656341552734
    8. '```' → logprob: -14.451656341552734
    9. ' ' → logprob: -14.826656341552734
    10. '           ' → logprob: -15.201656341552734

Token 1047: '.input' (ID: 18322)
  Prédit: '.input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.input' → logprob: -2.117345684382599e-05
    2. 'input' → logprob: -10.875020980834961
    3. '.' → logprob: -13.500020980834961
    4. '.output' → logprob: -14.375020980834961
    5. ' .' → logprob: -17.00002098083496
    6. '.import' → logprob: -17.25002098083496
    7. '=input' → logprob: -17.75002098083496
    8. '   ' → logprob: -17.75002098083496
    9. '().' → logprob: -18.12502098083496
    10. '       ' → logprob: -18.25002098083496

Token 1048: '_handler' (ID: 23758)
  Prédit: '_handler'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_handler' → logprob: -2.45848218582978e-06
    2. 'handler' → logprob: -13.25000286102295
    3. 'Handler' → logprob: -15.25000286102295
    4. '_handle' → logprob: -15.75000286102295
    5. '   ' → logprob: -16.375001907348633
    6. '_handlers' → logprob: -17.125001907348633
    7. '       ' → logprob: -17.375001907348633
    8. '_reader' → logprob: -17.375001907348633
    9. '_' → logprob: -17.375001907348633
    10. '_Handler' → logprob: -17.625001907348633

Token 1049: '.read' (ID: 7211)
  Prédit: '.read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.read' → logprob: -2.7610454708337784e-05
    2. 'read' → logprob: -10.500027656555176
    3. '.' → logprob: -17.25002670288086
    4. ' .' → logprob: -18.25002670288086
    5. '   ' → logprob: -18.75002670288086
    6. ' read' → logprob: -19.62502670288086
    7. '_read' → logprob: -20.12502670288086
    8. '.readline' → logprob: -20.75002670288086
    9. '	read' → logprob: -20.87502670288086
    10. '
' → logprob: -21.12502670288086

Token 1050: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -3.173704271830502e-06
    2. '_' → logprob: -13.50000286102295
    3. '_line' → logprob: -13.62500286102295
    4. 'input' → logprob: -16.250003814697266
    5. '_output' → logprob: -16.250003814697266
    6. ' _' → logprob: -16.625003814697266
    7. '_inputs' → logprob: -16.625003814697266
    8. '()' → logprob: -17.250003814697266
    9. '
' → logprob: -17.500003814697266
    10. '_
' → logprob: -17.750003814697266

Token 1051: '()
' (ID: 1234)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.021080251783132553
    2. '
' → logprob: -4.396080017089844
    3. 'self' → logprob: -4.771080017089844
    4. '        
' → logprob: -10.521080017089844
    5. ' self' → logprob: -11.271080017089844
    6. '```' → logprob: -12.021080017089844
    7. ',' → logprob: -12.271080017089844
    8. '
' → logprob: -13.146080017089844
    9. '   ' → logprob: -13.396080017089844
    10. 'graph' → logprob: -14.021080017089844

Token 1052: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0031886440701782703
    2. 'self' → logprob: -5.753188610076904
    3. ' self' → logprob: -11.753189086914062
    4. '```' → logprob: -13.503189086914062
    5. '
' → logprob: -13.753189086914062
    6. '        
' → logprob: -15.253189086914062
    7. '   ' → logprob: -15.378189086914062
    8. '	' → logprob: -16.753189086914062
    9. 'graph' → logprob: -17.003189086914062
    10. '	self' → logprob: -17.128189086914062

Token 1053: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0026379646733403206
    2. '       ' → logprob: -6.25263786315918
    3. ' self' → logprob: -7.25263786315918
    4. '```' → logprob: -14.50263786315918
    5. 'graph' → logprob: -16.25263786315918
    6. '
' → logprob: -16.50263786315918
    7. '	self' → logprob: -16.75263786315918
    8. '        
' → logprob: -17.87763786315918
    9. '   ' → logprob: -18.25263786315918
    10. '(self' → logprob: -19.12763786315918

Token 1054: '.graph' (ID: 18104)
  Prédit: '.graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.graph' → logprob: -8.895480277715251e-06
    2. '.' → logprob: -11.750008583068848
    3. 'graph' → logprob: -13.875008583068848
    4. '	graph' → logprob: -17.750009536743164
    5. ' .' → logprob: -18.000009536743164
    6. '.
' → logprob: -19.625009536743164
    7. '.grid' → logprob: -20.125009536743164
    8. '.graphics' → logprob: -20.500009536743164
    9. '.g' → logprob: -20.625009536743164
    10. '_graph' → logprob: -20.875009536743164

Token 1055: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759395360946655
    2. ' =' → logprob: -0.8259395360946655
    3. '=
' → logprob: -16.325939178466797
    4. ' ' → logprob: -17.325939178466797
    5. '=self' → logprob: -17.700939178466797
    6. '＝' → logprob: -18.075939178466797
    7. ' =
' → logprob: -18.825939178466797
    8. '   ' → logprob: -18.950939178466797
    9. '=create' → logprob: -19.200939178466797
    10. '=new' → logprob: -19.200939178466797

Token 1056: ' Island' (ID: 14226)
  Prédit: 'Island'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Island' → logprob: -2.3795937522663735e-05
    2. ' Island' → logprob: -10.75002384185791
    3. 'Is' → logprob: -13.00002384185791
    4. '   ' → logprob: -20.250022888183594
    5. '
' → logprob: -21.375022888183594
    6. 'self' → logprob: -22.125022888183594
    7. 'IS' → logprob: -22.250022888183594
    8. '(Is' → logprob: -22.375022888183594
    9. 'Ice' → logprob: -22.625022888183594
    10. '       ' → logprob: -22.625022888183594

Token 1057: 'Graph' (ID: 9922)
  Prédit: 'Graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Graph' → logprob: 0.0
    2. 'graph' → logprob: -16.75
    3. 'Graphs' → logprob: -18.75
    4. 'Island' → logprob: -20.0
    5. 'raph' → logprob: -20.25
    6. 'G' → logprob: -21.0
    7. '_graph' → logprob: -21.0
    8. '
' → logprob: -21.5
    9. ' Graph' → logprob: -21.625
    10. '_GRAPH' → logprob: -22.5

Token 1058: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -3.292907877039397e-06
    2. '(' → logprob: -13.37500286102295
    3. 'self' → logprob: -13.62500286102295
    4. '(
' → logprob: -14.50000286102295
    5. ' self' → logprob: -19.625003814697266
    6. '(len' → logprob: -19.875003814697266
    7. '       ' → logprob: -20.250003814697266
    8. '((' → logprob: -20.500003814697266
    9. ' (' → logprob: -21.875003814697266
    10. '(this' → logprob: -22.125003814697266

Token 1059: '.input' (ID: 18322)
  Prédit: '.input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.input' → logprob: -0.3138987421989441
    2. 'input' → logprob: -1.3138988018035889
    3. '.N' → logprob: -7.68889856338501
    4. 'N' → logprob: -8.688899040222168
    5. ' input' → logprob: -13.063899040222168
    6. '=input' → logprob: -13.063899040222168
    7. ',input' → logprob: -13.688899040222168
    8. '<input' → logprob: -13.813899040222168
    9. 'self' → logprob: -14.563899040222168
    10. '	input' → logprob: -14.563899040222168

Token 1060: '_handler' (ID: 23758)
  Prédit: '_handler'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_handler' → logprob: -0.006390037480741739
    2. '_graph' → logprob: -5.38139009475708
    3. '_is' → logprob: -6.63139009475708
    4. '._' → logprob: -9.506389617919922
    5. 'graph' → logprob: -9.631389617919922
    6. '.graph' → logprob: -9.631389617919922
    7. '_hand' → logprob: -9.881389617919922
    8. '.is' → logprob: -10.006389617919922
    9. 'handler' → logprob: -10.006389617919922
    10. '_handlers' → logprob: -10.756389617919922

Token 1061: '.N' (ID: 4439)
  Prédit: '.N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.N' → logprob: -0.00012475410767365247
    2. 'N' → logprob: -9.00012493133545
    3. '.' → logprob: -14.25012493133545
    4. ' .' → logprob: -15.25012493133545
    5. ').' → logprob: -15.87512493133545
    6. ' N' → logprob: -16.500123977661133
    7. '
' → logprob: -16.750123977661133
    8. 'self' → logprob: -17.375123977661133
    9. '.n' → logprob: -17.500123977661133
    10. '	N' → logprob: -18.125123977661133

Token 1062: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.020553454756736755
    2. ')
' → logprob: -3.8955533504486084
    3. '       ' → logprob: -11.645553588867188
    4. ')
' → logprob: -13.895553588867188
    5. ' )' → logprob: -14.770553588867188
    6. '   ' → logprob: -14.770553588867188
    7. '<|end|>' → logprob: -15.145553588867188
    8. ')

' → logprob: -15.270553588867188
    9. '),' → logprob: -15.520553588867188
    10. '<|end|>' → logprob: -16.270553588867188

Token 1063: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20475348830223083
    2. 'for' → logprob: -1.7047535181045532
    3. ' for' → logprob: -5.704753398895264
    4. '   ' → logprob: -12.829753875732422
    5. '	for' → logprob: -13.579753875732422
    6. '```' → logprob: -15.954753875732422
    7. ' ' → logprob: -16.079753875732422
    8. '           ' → logprob: -16.329753875732422
    9. '        
' → logprob: -16.329753875732422
    10. '	' → logprob: -16.829753875732422

Token 1064: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0002888682356569916
    2. '       ' → logprob: -8.250288963317871
    3. ' for' → logprob: -10.500288963317871
    4. '	for' → logprob: -18.000288009643555
    5. '   ' → logprob: -18.750288009643555
    6. '```' → logprob: -19.250288009643555
    7. '        
' → logprob: -20.625288009643555
    8. '
' → logprob: -22.125288009643555
    9. '           ' → logprob: -22.750288009643555
    10. ' ' → logprob: -22.875288009643555

Token 1065: ' (' (ID: 350)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.025038134306669235
    2. 'from' → logprob: -4.025038242340088
    3. '(a' → logprob: -5.650038242340088
    4. ' a' → logprob: -5.775038242340088
    5. '(from' → logprob: -9.27503776550293
    6. ' (' → logprob: -9.77503776550293
    7. ' from' → logprob: -9.90003776550293
    8. '   ' → logprob: -10.40003776550293
    9. 'bridge' → logprob: -11.77503776550293
    10. 'frm' → logprob: -13.65003776550293

Token 1066: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.00014072739577386528
    2. 'from' → logprob: -8.875141143798828
    3. '   ' → logprob: -14.500141143798828
    4. ' a' → logprob: -15.500141143798828
    5. 'frm' → logprob: -15.875141143798828
    6. ')a' → logprob: -16.875141143798828
    7. '(a' → logprob: -17.500141143798828
    8. '_a' → logprob: -18.125141143798828
    9. 'u' → logprob: -18.375141143798828
    10. '	a' → logprob: -18.750141143798828

Token 1067: ',b' (ID: 17568)
  Prédit: ',b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',b' → logprob: -0.0789070799946785
    2. ',' → logprob: -2.578907012939453
    3. ' ,' → logprob: -11.078907012939453
    4. 'b' → logprob: -13.578907012939453
    5. ',a' → logprob: -14.953907012939453
    6. '_,' → logprob: -16.578907012939453
    7. ',d' → logprob: -17.203907012939453
    8. ',to' → logprob: -17.703907012939453
    9. '   ' → logprob: -17.828907012939453
    10. ',
' → logprob: -18.078907012939453

Token 1068: ',c' (ID: 22261)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2528819441795349
    2. ',c' → logprob: -1.5028820037841797
    3. ',b' → logprob: -7.12788200378418
    4. ' ,' → logprob: -9.37788200378418
    5. ',a' → logprob: -9.87788200378418
    6. ')' → logprob: -13.25288200378418
    7. ',int' → logprob: -13.62788200378418
    8. 'c' → logprob: -13.75288200378418
    9. ',user' → logprob: -14.12788200378418
    10. ',t' → logprob: -14.25288200378418

Token 1069: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001745775662129745
    2. ' )' → logprob: -8.875174522399902
    3. ' in' → logprob: -11.125174522399902
    4. ',' → logprob: -11.375174522399902
    5. '),' → logprob: -12.625174522399902
    6. 'in' → logprob: -13.000174522399902
    7. ',)' → logprob: -13.625174522399902
    8. '       ' → logprob: -14.500174522399902
    9. ')
' → logprob: -15.500174522399902
    10. '   ' → logprob: -15.500174522399902

Token 1070: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.070745550096035
    2. 'in' → logprob: -2.6957454681396484
    3. ',' → logprob: -7.195745468139648
    4. ',in' → logprob: -10.320745468139648
    5. 'self' → logprob: -11.445745468139648
    6. '       ' → logprob: -12.070745468139648
    7. '_in' → logprob: -12.945745468139648
    8. ' ,' → logprob: -13.320745468139648
    9. '	in' → logprob: -13.320745468139648
    10. ')' → logprob: -13.695745468139648

Token 1071: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0002036595979006961
    2. ' self' → logprob: -8.500204086303711
    3. '       ' → logprob: -17.12520408630371
    4. '(self' → logprob: -17.62520408630371
    5. '   ' → logprob: -18.37520408630371
    6. '           ' → logprob: -18.87520408630371
    7. '[self' → logprob: -19.12520408630371
    8. '	self' → logprob: -21.12520408630371
    9. ' ' → logprob: -22.12520408630371
    10. '=self' → logprob: -22.25020408630371

Token 1072: '.input' (ID: 18322)
  Prédit: '.input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.input' → logprob: -0.1272716075181961
    2. 'input' → logprob: -2.1272716522216797
    3. '.br' → logprob: -8.25227165222168
    4. '.graph' → logprob: -10.62727165222168
    5. 'graph' → logprob: -10.75227165222168
    6. 'brid' → logprob: -11.12727165222168
    7. 'br' → logprob: -11.37727165222168
    8. 'self' → logprob: -13.00227165222168
    9. ' input' → logprob: -13.12727165222168
    10. '<input' → logprob: -13.62727165222168

Token 1073: '_handler' (ID: 23758)
  Prédit: '_handler'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_handler' → logprob: -0.00016909420082811266
    2. 'handler' → logprob: -9.125168800354004
    3. 'self' → logprob: -10.000168800354004
    4. '_hand' → logprob: -12.750168800354004
    5. 'Handler' → logprob: -13.625168800354004
    6. '_bridge' → logprob: -13.750168800354004
    7. '   ' → logprob: -13.875168800354004
    8. 'brid' → logprob: -14.000168800354004
    9. ')' → logprob: -14.000168800354004
    10. '       ' → logprob: -14.125168800354004

Token 1074: '.br' (ID: 24828)
  Prédit: '.br'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.br' → logprob: -0.0009188431431539357
    2. 'brid' → logprob: -7.000918865203857
    3. '.bridge' → logprob: -12.5009183883667
    4. '_br' → logprob: -12.7509183883667
    5. 'br' → logprob: -14.8759183883667
    6. ' bridges' → logprob: -15.1259183883667
    7. '   ' → logprob: -16.875919342041016
    8. '	br' → logprob: -17.125919342041016
    9. 'Br' → logprob: -17.250919342041016
    10. '.Br' → logprob: -17.250919342041016

Token 1075: 'idges' (ID: 35524)
  Prédit: 'idges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idges' → logprob: -4.0126840758603066e-05
    2. 'id' → logprob: -10.625040054321289
    3. 'edges' → logprob: -11.875040054321289
    4. 'idge' → logprob: -12.000040054321289
    5. 'd' → logprob: -14.250040054321289
    6. 'r' → logprob: -14.500040054321289
    7. 'iges' → logprob: -14.625040054321289
    8. '```' → logprob: -15.000040054321289
    9. '   ' → logprob: -16.37504005432129
    10. 'l' → logprob: -16.62504005432129

Token 1076: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.07945071160793304
    2. ':' → logprob: -2.8294506072998047
    3. '           ' → logprob: -4.079450607299805
    4. '):
' → logprob: -8.204450607299805
    5. '       ' → logprob: -9.704450607299805
    6. 'self' → logprob: -10.579450607299805
    7. ',' → logprob: -10.704450607299805
    8. ':self' → logprob: -11.704450607299805
    9. ' self' → logprob: -12.079450607299805
    10. ':
' → logprob: -12.329450607299805

Token 1077: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00022320532298181206
    2. 'self' → logprob: -8.500223159790039
    3. '   ' → logprob: -12.000223159790039
    4. ' self' → logprob: -12.125223159790039
    5. '	       ' → logprob: -12.250223159790039
    6. '       ' → logprob: -13.625223159790039
    7. '	   ' → logprob: -14.750223159790039
    8. '            
' → logprob: -14.750223159790039
    9. '          ' → logprob: -15.125223159790039
    10. '		' → logprob: -15.125223159790039

Token 1078: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.05682896450161934
    2. ' self' → logprob: -3.0568289756774902
    3. '           ' → logprob: -4.80682897567749
    4. '               ' → logprob: -11.431828498840332
    5. '       ' → logprob: -11.556828498840332
    6. '   ' → logprob: -11.931828498840332
    7. '	self' → logprob: -12.556828498840332
    8. ' ' → logprob: -13.681828498840332
    9. '          ' → logprob: -14.431828498840332
    10. '  ' → logprob: -15.181828498840332

Token 1079: '.graph' (ID: 18104)
  Prédit: '.graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.graph' → logprob: -0.014169503934681416
    2. 'graph' → logprob: -4.264169692993164
    3. '	graph' → logprob: -12.514169692993164
    4. '.' → logprob: -13.889169692993164
    5. ' .' → logprob: -15.264169692993164
    6. ' graph' → logprob: -15.389169692993164
    7. '.add' → logprob: -15.764169692993164
    8. '_graph' → logprob: -15.889169692993164
    9. 'raph' → logprob: -16.014169692993164
    10. '   ' → logprob: -16.389169692993164

Token 1080: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.0001097417771234177
    2. '.ad' → logprob: -9.250109672546387
    3. '.' → logprob: -11.500109672546387
    4. 'add' → logprob: -13.125109672546387
    5. '   ' → logprob: -14.375109672546387
    6. '           ' → logprob: -14.750109672546387
    7. '       ' → logprob: -15.125109672546387
    8. '.append' → logprob: -16.750110626220703
    9. ').' → logprob: -17.500110626220703
    10. ' .' → logprob: -17.750110626220703

Token 1081: '_bridge' (ID: 138885)
  Prédit: '_bridge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_bridge' → logprob: -9.088346359931165e-07
    2. '_br' → logprob: -14.250000953674316
    3. 'bridge' → logprob: -16.125
    4. '_b' → logprob: -17.25
    5. '_edge' → logprob: -17.375
    6. '_' → logprob: -17.625
    7. '_branch' → logprob: -18.875
    8. '```' → logprob: -19.125
    9. '_
' → logprob: -20.375
    10. '
' → logprob: -20.5

Token 1082: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -2.45848218582978e-06
    2. '(' → logprob: -13.25000286102295
    3. 'a' → logprob: -14.25000286102295
    4. '(
' → logprob: -17.000001907348633
    5. ' (' → logprob: -18.375001907348633
    6. '   ' → logprob: -20.125001907348633
    7. ' a' → logprob: -20.375001907348633
    8. '(A' → logprob: -20.875001907348633
    9. 'from' → logprob: -21.375001907348633
    10. '(b' → logprob: -22.125001907348633

Token 1083: ',b' (ID: 17568)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10097365826368332
    2. ',b' → logprob: -2.350973606109619
    3. ' ,' → logprob: -7.475973606109619
    4. 'b' → logprob: -9.350974082946777
    5. ',a' → logprob: -9.475974082946777
    6. ',
' → logprob: -11.100974082946777
    7. 'a' → logprob: -11.475974082946777
    8. ' b' → logprob: -13.350974082946777
    9. '```' → logprob: -13.350974082946777
    10. ',to' → logprob: -13.600974082946777

Token 1084: ',c' (ID: 22261)
  Prédit: ',c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',c' → logprob: -0.5234036445617676
    2. ',' → logprob: -0.8984036445617676
    3. ' ,' → logprob: -8.52340316772461
    4. 'c' → logprob: -9.64840316772461
    5. ',
' → logprob: -11.89840316772461
    6. ',b' → logprob: -12.27340316772461
    7. '```' → logprob: -14.02340316772461
    8. '
' → logprob: -14.02340316772461
    9. ')c' → logprob: -14.39840316772461
    10. '`,' → logprob: -14.77340316772461

Token 1085: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00021831797494087368
    2. ')
' → logprob: -8.750218391418457
    3. '<|end|>' → logprob: -9.875218391418457
    4. '       ' → logprob: -12.000218391418457
    5. ' )' → logprob: -14.250218391418457
    6. ')return' → logprob: -14.375218391418457
    7. '<|end|>' → logprob: -15.250218391418457
    8. ')#' → logprob: -15.625218391418457
    9. '),' → logprob: -16.12521743774414
    10. ')view' → logprob: -16.50021743774414

Token 1086: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0023545988369733095
    2. 'self' → logprob: -6.252354621887207
    3. '
' → logprob: -8.127354621887207
    4. ' self' → logprob: -10.002354621887207
    5. '```' → logprob: -10.252354621887207
    6. '        
' → logprob: -10.502354621887207
    7. '   ' → logprob: -11.002354621887207
    8. '    
' → logprob: -13.877354621887207
    9. '           ' → logprob: -13.877354621887207
    10. '  
' → logprob: -14.252354621887207

Token 1087: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0007314971298910677
    2. '       ' → logprob: -7.250731468200684
    3. ' self' → logprob: -10.875731468200684
    4. '
' → logprob: -13.250731468200684
    5. '   ' → logprob: -15.000731468200684
    6. '```' → logprob: -15.000731468200684
    7. '        
' → logprob: -15.875731468200684
    8. '	self' → logprob: -17.500732421875
    9. '``' → logprob: -18.000732421875
    10. 'result' → logprob: -18.375732421875

Token 1088: '.s' (ID: 640)
  Prédit: '.s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.s' → logprob: -2.951771421066951e-05
    2. 'solver' → logprob: -10.625029563903809
    3. '.sol' → logprob: -13.500029563903809
    4. '
' → logprob: -13.750029563903809
    5. '       ' → logprob: -13.875029563903809
    6. '.' → logprob: -14.500029563903809
    7. '.solve' → logprob: -14.875029563903809
    8. '.solution' → logprob: -15.375029563903809
    9. '.scheduler' → logprob: -16.000028610229492
    10. ' .' → logprob: -16.125028610229492

Token 1089: 'olver' (ID: 13941)
  Prédit: 'olver'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'olver' → logprob: -1.0280383548888494e-06
    2. 'olve' → logprob: -14.125000953674316
    3. 'solver' → logprob: -16.250001907348633
    4. 'elf' → logprob: -16.875001907348633
    5. '_solver' → logprob: -17.375001907348633
    6. 'olvers' → logprob: -17.750001907348633
    7. 'ol' → logprob: -18.000001907348633
    8. '```' → logprob: -18.500001907348633
    9. '_' → logprob: -18.625001907348633
    10. 'over' → logprob: -18.875001907348633

Token 1090: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12300477176904678
    2. '=' → logprob: -2.248004674911499
    3. '.solve' → logprob: -4.748004913330078
    4. 'solve' → logprob: -6.748004913330078
    5. '.' → logprob: -9.123004913330078
    6. '=self' → logprob: -9.623004913330078
    7. '.run' → logprob: -9.873004913330078
    8. '.=' → logprob: -11.498004913330078
    9. '=s' → logprob: -11.748004913330078
    10. '.s' → logprob: -11.998004913330078

Token 1091: ' One' (ID: 5108)
  Prédit: 'One'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'One' → logprob: -0.0031777136027812958
    2. ' One' → logprob: -5.753177642822266
    3. 'On' → logprob: -16.753177642822266
    4. '   ' → logprob: -18.878177642822266
    5. '       ' → logprob: -20.128177642822266
    6. '           ' → logprob: -20.378177642822266
    7. '.One' → logprob: -21.503177642822266
    8. ' ' → logprob: -21.628177642822266
    9. 'Two' → logprob: -22.128177642822266
    10. '  ' → logprob: -22.253177642822266

Token 1092: 'Time' (ID: 1929)
  Prédit: 'Time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Time' → logprob: -1.9361264946837764e-07
    2. '_Time' → logprob: -16.875
    3. 'Times' → logprob: -17.5
    4. 'Type' → logprob: -17.625
    5. 'One' → logprob: -17.75
    6. '       ' → logprob: -19.125
    7. '_time' → logprob: -19.25
    8. 'The' → logprob: -19.625
    9. ' Time' → logprob: -19.625
    10. '_TIME' → logprob: -20.125

Token 1093: 'Path' (ID: 2619)
  Prédit: 'Path'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Path' → logprob: -3.128163257315464e-07
    2. 'Solver' → logprob: -15.875
    3. 'Pat' → logprob: -16.125
    4. 'Paths' → logprob: -17.375
    5. 'path' → logprob: -17.625
    6. 'PATH' → logprob: -18.0
    7. '_path' → logprob: -18.375
    8. ' Path' → logprob: -18.625
    9. '(Path' → logprob: -19.125
    10. '	Path' → logprob: -19.125

Token 1094: 'Solver' (ID: 70484)
  Prédit: 'Solver'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Solver' → logprob: -4.320199877838604e-07
    2. 'solver' → logprob: -15.125
    3. 'Solve' → logprob: -16.0
    4. '_solver' → logprob: -18.0
    5. 'Sol' → logprob: -18.0
    6. ' Solver' → logprob: -20.125
    7. ' solver' → logprob: -20.25
    8. 'olver' → logprob: -20.5
    9. '(S' → logprob: -20.75
    10. 'solve' → logprob: -21.0

Token 1095: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -4.4849443838757e-06
    2. '(' → logprob: -12.500004768371582
    3. '(
' → logprob: -14.375004768371582
    4. 'self' → logprob: -15.625004768371582
    5. '(this' → logprob: -19.625003814697266
    6. 'One' → logprob: -19.750003814697266
    7. ',self' → logprob: -19.875003814697266
    8. ' self' → logprob: -19.875003814697266
    9. ' (' → logprob: -20.000003814697266
    10. '=self' → logprob: -20.625003814697266

Token 1096: '.graph' (ID: 18104)
  Prédit: '.graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.graph' → logprob: -3.4881879400927573e-05
    2. '.self' → logprob: -11.000035285949707
    3. 'self' → logprob: -11.375035285949707
    4. '.' → logprob: -13.125035285949707
    5. 'graph' → logprob: -13.375035285949707
    6. '(self' → logprob: -13.500035285949707
    7. '(graph' → logprob: -14.250035285949707
    8. ',' → logprob: -14.750035285949707
    9. ',self' → logprob: -15.625035285949707
    10. '	graph' → logprob: -15.750035285949707

Token 1097: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1994035840034485
    2. ')
' → logprob: -1.8244035243988037
    3. '       ' → logprob: -3.9494035243988037
    4. '   ' → logprob: -8.949403762817383
    5. ' ' → logprob: -10.199403762817383
    6. ')
' → logprob: -12.074403762817383
    7. '()' → logprob: -12.199403762817383
    8. '()
' → logprob: -12.449403762817383
    9. ').' → logprob: -12.574403762817383
    10. '           ' → logprob: -12.824403762817383

Token 1098: '       ' (ID: 309)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.16245968639850616
    2. '       ' → logprob: -1.9124597311019897
    3. ' result' → logprob: -6.162459850311279
    4. 'return' → logprob: -9.662459373474121
    5. '```' → logprob: -10.287459373474121
    6. '	result' → logprob: -11.537459373474121
    7. '
' → logprob: -12.162459373474121
    8. '_result' → logprob: -12.412459373474121
    9. 'self' → logprob: -12.537459373474121
    10. '        
' → logprob: -13.537459373474121

Token 1099: ' answer' (ID: 6052)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -2.9875325708417222e-05
    2. '       ' → logprob: -10.750029563903809
    3. ' result' → logprob: -11.750029563903809
    4. 'res' → logprob: -14.500029563903809
    5. '```' → logprob: -18.375030517578125
    6. '	result' → logprob: -19.750030517578125
    7. '   ' → logprob: -19.875030517578125
    8. 'print' → logprob: -20.000030517578125
    9. '_result' → logprob: -20.375030517578125
    10. '
' → logprob: -21.000030517578125

Token 1100: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06198235973715782
    2. '=' → logprob: -2.8119823932647705
    3. '=self' → logprob: -11.186982154846191
    4. '=result' → logprob: -15.561982154846191
    5. ' =
' → logprob: -16.061983108520508
    6. '=int' → logprob: -16.186983108520508
    7. '=
' → logprob: -16.811983108520508
    8. ' ' → logprob: -17.061983108520508
    9. '_=' → logprob: -17.061983108520508
    10. '=subprocess' → logprob: -17.061983108520508

Token 1101: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0007099286303855479
    2. ' self' → logprob: -7.2507100105285645
    3. '       ' → logprob: -20.500709533691406
    4. '(self' → logprob: -21.250709533691406
    5. '	self' → logprob: -22.000709533691406
    6. '=self' → logprob: -24.625709533691406
    7. '[self' → logprob: -25.250709533691406
    8. '   ' → logprob: -25.625709533691406
    9. 'Self' → logprob: -26.250709533691406
    10. '           ' → logprob: -26.375709533691406

Token 1102: '.s' (ID: 640)
  Prédit: '.s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.s' → logprob: -9.698698704596609e-05
    2. 'solver' → logprob: -9.250097274780273
    3. '.' → logprob: -14.750097274780273
    4. '.solve' → logprob: -15.500097274780273
    5. 's' → logprob: -16.125097274780273
    6. '_solver' → logprob: -16.250097274780273
    7. ' solver' → logprob: -17.500097274780273
    8. '.sol' → logprob: -17.500097274780273
    9. ' .' → logprob: -17.500097274780273
    10. 'olver' → logprob: -18.125097274780273

Token 1103: 'olver' (ID: 13941)
  Prédit: 'olver'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'olver' → logprob: -0.0005537479883059859
    2. 'olve' → logprob: -7.500553607940674
    3. 'solver' → logprob: -14.750554084777832
    4. 'over' → logprob: -15.875554084777832
    5. 'elf' → logprob: -16.000553131103516
    6. 'ol' → logprob: -16.375553131103516
    7. 'o' → logprob: -16.750553131103516
    8. 'oler' → logprob: -17.625553131103516
    9. 'olv' → logprob: -18.000553131103516
    10. 'olved' → logprob: -18.000553131103516

Token 1104: '.solve' (ID: 151960)
  Prédit: '.solve'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.solve' → logprob: -5.796184723294573e-06
    2. '.' → logprob: -12.375005722045898
    3. 'solve' → logprob: -13.625005722045898
    4. ' .' → logprob: -16.0000057220459
    5. '.run' → logprob: -16.2500057220459
    6. '.sol' → logprob: -17.1250057220459
    7. '.s' → logprob: -17.6250057220459
    8. '.resolve' → logprob: -19.1250057220459
    9. '.save' → logprob: -19.3750057220459
    10. '\.' → logprob: -19.8750057220459

Token 1105: '()
' (ID: 1234)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4731384515762329
    2. '       ' → logprob: -1.348138451576233
    3. '()' → logprob: -3.2231383323669434
    4. '()
' → logprob: -3.2231383323669434
    5. '(' → logprob: -4.473138332366943
    6. '<|end|>' → logprob: -4.598138332366943
    7. '        
' → logprob: -4.848138332366943
    8. '(
' → logprob: -5.973138332366943
    9. ')' → logprob: -6.473138332366943
    10. '  
' → logprob: -7.098138332366943

Token 1106: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007337672170251608
    2. 'self' → logprob: -5.00733757019043
    3. '
' → logprob: -7.50733757019043
    4. ' self' → logprob: -10.13233757019043
    5. '```' → logprob: -10.50733757019043
    6. '   ' → logprob: -13.13233757019043
    7. '        
' → logprob: -13.25733757019043
    8. '	self' → logprob: -15.00733757019043
    9. '(self' → logprob: -15.00733757019043
    10. '	' → logprob: -15.00733757019043

Token 1107: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -8.537868779967539e-06
    2. '       ' → logprob: -12.250008583068848
    3. ' self' → logprob: -12.500008583068848
    4. 'Self' → logprob: -18.62500762939453
    5. '	self' → logprob: -19.62500762939453
    6. '
' → logprob: -20.37500762939453
    7. '(self' → logprob: -20.87500762939453
    8. '        
' → logprob: -20.87500762939453
    9. '```' → logprob: -21.25000762939453
    10. 'Output' → logprob: -21.87500762939453

Token 1108: '.output' (ID: 27521)
  Prédit: '.output'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.output' → logprob: -8.180258191714529e-06
    2. 'output' → logprob: -11.750008583068848
    3. '.' → logprob: -16.00000762939453
    4. '.input' → logprob: -16.50000762939453
    5. ' .' → logprob: -17.75000762939453
    6. '.stdout' → logprob: -17.87500762939453
    7. '_.' → logprob: -18.37500762939453
    8. '.out' → logprob: -18.37500762939453
    9. '
' → logprob: -18.62500762939453
    10. '	output' → logprob: -18.75000762939453

Token 1109: '_handler' (ID: 23758)
  Prédit: '_handler'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_handler' → logprob: -7.896309739408025e-07
    2. '_hand' → logprob: -14.750000953674316
    3. 'Handler' → logprob: -16.0
    4. '_result' → logprob: -16.875
    5. '_' → logprob: -17.625
    6. '_handle' → logprob: -17.875
    7. 'handler' → logprob: -18.625
    8. '_handlers' → logprob: -18.875
    9. '_Handler' → logprob: -19.25
    10. '_HANDLER' → logprob: -19.5

Token 1110: '.print' (ID: 2853)
  Prédit: '.print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.print' → logprob: -2.093505099765025e-05
    2. 'print' → logprob: -10.875020980834961
    3. '.' → logprob: -13.250020980834961
    4. ' .' → logprob: -16.37502098083496
    5. '.println' → logprob: -17.00002098083496
    6. '
' → logprob: -19.12502098083496
    7. '#print' → logprob: -19.12502098083496
    8. '_print' → logprob: -19.37502098083496
    9. '_.' → logprob: -19.50002098083496
    10. ' print' → logprob: -19.75002098083496

Token 1111: '_result' (ID: 11623)
  Prédit: '_result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_result' → logprob: -1.4736459888808895e-05
    2. '(result' → logprob: -11.875014305114746
    3. 'result' → logprob: -12.500014305114746
    4. '(answer' → logprob: -13.500014305114746
    5. '_answer' → logprob: -13.625014305114746
    6. 's' → logprob: -14.625014305114746
    7. 'Result' → logprob: -14.750014305114746
    8. '_RESULT' → logprob: -16.500015258789062
    9. '_results' → logprob: -16.500015258789062
    10. 'f' → logprob: -16.500015258789062

Token 1112: '(answer' (ID: 78433)
  Prédit: '(answer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(answer' → logprob: -0.005235529970377684
    2. 'answer' → logprob: -5.25523567199707
    3. '(' → logprob: -14.00523567199707
    4. ' answer' → logprob: -14.13023567199707
    5. '(ans' → logprob: -15.88023567199707
    6. ' (' → logprob: -17.25523567199707
    7. '	answer' → logprob: -18.38023567199707
    8. '(
' → logprob: -19.25523567199707
    9. '```' → logprob: -19.38023567199707
    10. '(question' → logprob: -19.88023567199707

Token 1113: ')

' (ID: 1029)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.08991627395153046
    2. ')' → logprob: -2.589916229248047
    3. '()
' → logprob: -5.464916229248047
    4. '())' → logprob: -5.714916229248047
    5. '<|end|>' → logprob: -6.089916229248047
    6. '(' → logprob: -7.464916229248047
    7. '```' → logprob: -7.964916229248047
    8. '(
' → logprob: -9.464916229248047
    9. '       ' → logprob: -9.964916229248047
    10. '
' → logprob: -10.589916229248047

Token 1114: 'def' (ID: 1314)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.008680993691086769
    2. 'def' → logprob: -4.758680820465088
    3. ' if' → logprob: -10.258681297302246
    4. '```' → logprob: -10.383681297302246
    5. 'thread' → logprob: -15.883681297302246
    6. '#' → logprob: -16.63368034362793
    7. '    
' → logprob: -16.75868034362793
    8. '  
' → logprob: -16.88368034362793
    9. 'import' → logprob: -17.00868034362793
    10. '#if' → logprob: -17.25868034362793

Token 1115: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.07889022678136826
    2. 'main' → logprob: -2.578890323638916
    3. '_main' → logprob: -14.828889846801758
    4. ' run' → logprob: -16.203889846801758
    5. '	main' → logprob: -17.078889846801758
    6. 'thread' → logprob: -17.703889846801758
    7. 'run' → logprob: -18.203889846801758
    8. ' threaded' → logprob: -18.328889846801758
    9. ' threading' → logprob: -18.578889846801758
    10. ' thread' → logprob: -19.453889846801758

Token 1116: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0001266613689949736
    2. '():
' → logprob: -9.000126838684082
    3. ' ():' → logprob: -13.250126838684082
    4. '()' → logprob: -13.625126838684082
    5. '(' → logprob: -16.375125885009766
    6. '():
' → logprob: -16.750125885009766
    7. '().' → logprob: -17.750125885009766
    8. '():

' → logprob: -17.750125885009766
    9. '()->' → logprob: -18.125125885009766
    10. '()>' → logprob: -18.375125885009766

Token 1117: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0060430350713431835
    2. 'app' → logprob: -5.881042957305908
    3. ' app' → logprob: -6.256042957305908
    4. ' threading' → logprob: -7.631042957305908
    5. '	app' → logprob: -8.131043434143066
    6. ' if' → logprob: -8.381043434143066
    7. 'if' → logprob: -8.381043434143066
    8. 'thread' → logprob: -10.631043434143066
    9. 'def' → logprob: -10.881043434143066
    10. '   ' → logprob: -11.131043434143066

Token 1118: ' app' (ID: 1053)
  Prédit: 'app'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' (adapté à ' app') → logprob: -0.2857460081577301
    2. 'thread' → logprob: -1.4107459783554077
    3. 'if' → logprob: -5.910746097564697
    4. 'import' → logprob: -6.910746097564697
    5. ' app' → logprob: -8.535745620727539
    6. 'def' → logprob: -8.535745620727539
    7. ' threading' → logprob: -8.535745620727539
    8. '   ' → logprob: -9.035745620727539
    9. 'one' → logprob: -9.535745620727539
    10. 'sys' → logprob: -9.910745620727539

Token 1119: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5012828707695007
    2. '.run' → logprob: -1.3762829303741455
    3. '.' → logprob: -2.5012829303741455
    4. '=' → logprob: -3.0012829303741455
    5. '   ' → logprob: -5.501282691955566
    6. '_app' → logprob: -6.001282691955566
    7. '.app' → logprob: -6.376282691955566
    8. 'app' → logprob: -7.876282691955566
    9. 'App' → logprob: -8.001282691955566
    10. ' .' → logprob: -8.501282691955566

Token 1120: ' One' (ID: 5108)
  Prédit: 'One'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'One' → logprob: -0.00020354038861114532
    2. ' One' → logprob: -8.500203132629395
    3. 'On' → logprob: -22.37520408630371
    4. '_one' → logprob: -22.87520408630371
    5. ' one' → logprob: -23.87520408630371
    6. '@One' → logprob: -24.37520408630371
    7. ' ' → logprob: -25.25020408630371
    8. '.One' → logprob: -25.25020408630371
    9. '```' → logprob: -25.25020408630371
    10. '
' → logprob: -25.75020408630371

Token 1121: 'Time' (ID: 1929)
  Prédit: 'Time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Time' → logprob: 0.0
    2. 'One' → logprob: -17.75
    3. 'Type' → logprob: -17.875
    4. 'time' → logprob: -18.625
    5. '-Time' → logprob: -18.625
    6. '	Time' → logprob: -19.0
    7. '_Time' → logprob: -19.0
    8. '_time' → logprob: -19.5
    9. ' Time' → logprob: -19.875
    10. 'The' → logprob: -20.25

Token 1122: 'Path' (ID: 2619)
  Prédit: 'Path'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Path' → logprob: -1.9361264946837764e-07
    2. ' Path' → logprob: -16.625
    3. '_path' → logprob: -17.625
    4. 'Time' → logprob: -18.25
    5. '	Path' → logprob: -18.25
    6. '@Path' → logprob: -19.25
    7. 'App' → logprob: -19.375
    8. 'path' → logprob: -19.375
    9. 'PATH' → logprob: -19.875
    10. '_Path' → logprob: -20.125

Token 1123: 'App' (ID: 2563)
  Prédit: 'App'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'App' → logprob: -1.1472419600977446e-06
    2. 'Solver' → logprob: -14.500000953674316
    3. 'app' → logprob: -15.500000953674316
    4. '(App' → logprob: -16.000001907348633
    5. '<App' → logprob: -16.500001907348633
    6. 'Ap' → logprob: -16.875001907348633
    7. 'Appender' → logprob: -17.250001907348633
    8. '_app' → logprob: -17.500001907348633
    9. ' App' → logprob: -17.875001907348633
    10. '\App' → logprob: -18.000001907348633

Token 1124: '()
' (ID: 1234)
  Prédit: '()
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.13710521161556244
    2. '   ' → logprob: -2.8871052265167236
    3. '()' → logprob: -3.0121052265167236
    4. '
' → logprob: -4.5121049880981445
    5. 'app' → logprob: -5.0121049880981445
    6. '(app' → logprob: -5.7621049880981445
    7. 'def' → logprob: -6.8871049880981445
    8. '().' → logprob: -7.0121049880981445
    9. '(
' → logprob: -9.387104988098145
    10. '(' → logprob: -9.512104988098145

Token 1125: '   ' (ID: 271)
  Prédit: 'app'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.005825344938784838
    2. '   ' → logprob: -5.255825519561768
    3. '	app' → logprob: -7.505825519561768
    4. ' app' → logprob: -10.13082504272461
    5. '_app' → logprob: -14.00582504272461
    6. '(app' → logprob: -15.38082504272461
    7. '@app' → logprob: -15.50582504272461
    8. '
' → logprob: -15.50582504272461
    9. '.app' → logprob: -16.00582504272461
    10. '```' → logprob: -17.25582504272461

Token 1126: ' app' (ID: 1053)
  Prédit: 'app'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' (adapté à ' app') → logprob: -9.088346359931165e-07
    2. ' app' → logprob: -14.000000953674316
    3. '   ' → logprob: -17.75
    4. '	app' → logprob: -19.5
    5. 'thread' → logprob: -22.0
    6. '
' → logprob: -22.25
    7. '```' → logprob: -23.5
    8. 'import' → logprob: -23.75
    9. '.app' → logprob: -23.75
    10. '(app' → logprob: -24.0

Token 1127: '.run' (ID: 14795)
  Prédit: '.run'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.run' → logprob: -0.0024780353996902704
    2. '.' → logprob: -6.002478122711182
    3. ' .' → logprob: -13.627477645874023
    4. '.
' → logprob: -14.252477645874023
    5. 'run' → logprob: -14.877477645874023
    6. '.mainloop' → logprob: -16.502477645874023
    7. '
' → logprob: -18.127477645874023
    8. '.start' → logprob: -18.377477645874023
    9. ' run' → logprob: -18.502477645874023
    10. '\.' → logprob: -18.627477645874023

Token 1128: '()

' (ID: 5874)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3239113390445709
    2. 'if' → logprob: -1.3239113092422485
    3. '<|end|>' → logprob: -4.698911190032959
    4. '()' → logprob: -7.823911190032959
    5. ' if' → logprob: -8.573911666870117
    6. '\n' → logprob: -8.573911666870117
    7. '```' → logprob: -8.573911666870117
    8. '(
' → logprob: -9.198911666870117
    9. '    
' → logprob: -9.323911666870117
    10. '  
' → logprob: -9.448911666870117

Token 1129: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.723973582556937e-05
    2. '
' → logprob: -11.250017166137695
    3. ' if' → logprob: -13.000017166137695
    4. '```' → logprob: -13.500017166137695
    5. '<|end|>' → logprob: -15.500017166137695
    6. 'thread' → logprob: -16.625017166137695
    7. '    
' → logprob: -16.625017166137695
    8. '#' → logprob: -16.625017166137695
    9. '  
' → logprob: -17.125017166137695
    10. '\n' → logprob: -17.250017166137695

Token 1130: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.038074664771556854
    2. '__' → logprob: -3.2880747318267822
    3. 'name' → logprob: -10.663074493408203
    4. '_name' → logprob: -11.913074493408203
    5. '___' → logprob: -13.413074493408203
    6. ' ' → logprob: -14.288074493408203
    7. '_' → logprob: -14.788074493408203
    8. ' "__' → logprob: -15.413074493408203
    9. ' name' → logprob: -16.163074493408203
    10. ' ___' → logprob: -16.413074493408203

Token 1131: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.054158128798007965
    2. '==' → logprob: -3.4291582107543945
    3. ' ==' → logprob: -3.9291582107543945
    4. ' __' → logprob: -8.429158210754395
    5. '=="' → logprob: -8.429158210754395
    6. '[' → logprob: -10.054158210754395
    7. 'if' → logprob: -10.179158210754395
    8. '=='' → logprob: -10.304158210754395
    9. '__[' → logprob: -10.804158210754395
    10. 'name' → logprob: -11.179158210754395

Token 1132: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -2.7848862373502925e-05
    2. '==' → logprob: -10.625027656555176
    3. ' ==' → logprob: -12.750027656555176
    4. '=="' → logprob: -15.000027656555176
    5. '__.__' → logprob: -16.000028610229492
    6. ' __' → logprob: -16.500028610229492
    7. '___' → logprob: -17.125028610229492
    8. '____' → logprob: -17.125028610229492
    9. '=='' → logprob: -17.750028610229492
    10. '__
' → logprob: -17.750028610229492

Token 1133: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.009591637179255486
    2. '==' → logprob: -4.759591579437256
    3. ' ==' → logprob: -7.634591579437256
    4. '=="' → logprob: -7.634591579437256
    5. '=='' → logprob: -11.884592056274414
    6. '_' → logprob: -14.259592056274414
    7. '___' → logprob: -14.384592056274414
    8. '__.__' → logprob: -14.884592056274414
    9. '=' → logprob: -15.134592056274414
    10. '__
' → logprob: -15.384592056274414

Token 1134: ' '__' (ID: 28278)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.00672448705881834
    2. ''' → logprob: -5.0067243576049805
    3. '__' → logprob: -11.75672435760498
    4. ' "__' → logprob: -13.75672435760498
    5. '"name' → logprob: -16.006725311279297
    6. '"user' → logprob: -17.506725311279297
    7. 'main' → logprob: -17.881725311279297
    8. ''"' → logprob: -18.256725311279297
    9. ' '__' → logprob: -18.381725311279297
    10. '"'' → logprob: -18.506725311279297

Token 1135: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -7.941850526549388e-06
    2. '__' → logprob: -12.250007629394531
    3. 'name' → logprob: -12.750007629394531
    4. ' main' → logprob: -16.87500762939453
    5. '_main' → logprob: -16.87500762939453
    6. 'm' → logprob: -19.50000762939453
    7. 'if' → logprob: -20.75000762939453
    8. 'ma' → logprob: -21.00000762939453
    9. '	main' → logprob: -21.62500762939453
    10. '(main' → logprob: -21.75000762939453

Token 1136: '__':
' (ID: 39314)
  Prédit: '__':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__':
' → logprob: -0.061972957104444504
    2. '__' → logprob: -2.8119728565216064
    3. '__":
' → logprob: -12.561972618103027
    4. '_' → logprob: -13.436972618103027
    5. '__.' → logprob: -15.686972618103027
    6. '___' → logprob: -16.561973571777344
    7. '__:' → logprob: -16.686973571777344
    8. ''' → logprob: -18.186973571777344
    9. '':
' → logprob: -18.186973571777344
    10. '__
' → logprob: -18.436973571777344

Token 1137: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0019325626781210303
    2. '__' → logprob: -6.251932621002197
    3. ' main' → logprob: -12.626932144165039
    4. '_main' → logprob: -15.251932144165039
    5. '	main' → logprob: -15.626932144165039
    6. ''' → logprob: -16.12693214416504
    7. '____' → logprob: -16.25193214416504
    8. '   ' → logprob: -16.37693214416504
    9. '(main' → logprob: -17.12693214416504
    10. '___' → logprob: -17.25193214416504

Token 1138: ' threading' (ID: 72047)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.005233763717114925
    2. 'thread' → logprob: -5.2552337646484375
    3. 'sys' → logprob: -17.755233764648438
    4. ' main' → logprob: -18.255233764648438
    5. ' threading' → logprob: -19.130233764648438
    6. 'import' → logprob: -20.005233764648438
    7. '	main' → logprob: -20.505233764648438
    8. '   ' → logprob: -20.880233764648438
    9. '```' → logprob: -22.505233764648438
    10. 'Thread' → logprob: -22.630233764648438

Token 1139: '.Thread' (ID: 15531)
  Prédit: '.Thread'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.Thread' → logprob: -0.0021175467409193516
    2. '.' → logprob: -6.62711763381958
    3. '.start' → logprob: -7.37711763381958
    4. '.stack' → logprob: -9.502117156982422
    5. '.thread' → logprob: -10.002117156982422
    6. '.Threading' → logprob: -10.502117156982422
    7. ' .' → logprob: -12.752117156982422
    8. '.Stack' → logprob: -13.127117156982422
    9. '.mainloop' → logprob: -13.127117156982422
    10. '.Timer' → logprob: -13.252117156982422

Token 1140: '(target' (ID: 16247)
  Prédit: '(target'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(target' → logprob: -0.0007734165410511196
    2. 'target' → logprob: -7.3757734298706055
    3. '(' → logprob: -8.875773429870605
    4. '().' → logprob: -12.750773429870605
    5. '(
' → logprob: -13.000773429870605
    6. ',target' → logprob: -14.750773429870605
    7. '-target' → logprob: -15.500773429870605
    8. '()' → logprob: -15.500773429870605
    9. ' target' → logprob: -15.625773429870605
    10. '(start' → logprob: -15.750773429870605

Token 1141: '=' (ID: 28)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.06244208663702011
    2. '=' → logprob: -2.8124420642852783
    3. '(main' → logprob: -7.687442302703857
    4. ' main' → logprob: -11.4374418258667
    5. '	main' → logprob: -12.4374418258667
    6. ')' → logprob: -14.3124418258667
    7. '.main' → logprob: -15.4374418258667
    8. '_main' → logprob: -16.187442779541016
    9. 'amain' → logprob: -16.312442779541016
    10. 'target' → logprob: -17.062442779541016

Token 1142: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: 0.0
    2. ' main' → logprob: -20.5
    3. '	main' → logprob: -23.0
    4. '(main' → logprob: -23.25
    5. '.main' → logprob: -26.25
    6. '
' → logprob: -27.375
    7. '_main' → logprob: -28.125
    8. '```' → logprob: -28.75
    9. 'Main' → logprob: -29.0
    10. 'mainwindow' → logprob: -29.25

Token 1143: ',' (ID: 11)
  Prédit: ').'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ').' → logprob: -2.4868770196917467e-05
    2. ')' → logprob: -11.125024795532227
    3. '()).' → logprob: -11.625024795532227
    4. ' ).' → logprob: -14.750024795532227
    5. '   ' → logprob: -15.500024795532227
    6. ',' → logprob: -15.625024795532227
    7. '().' → logprob: -15.750024795532227
    8. ',args' → logprob: -16.625024795532227
    9. '()' → logprob: -17.125024795532227
    10. '__).' → logprob: -17.500024795532227

Token 1144: ').' (ID: 741)
  Prédit: ').'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ').' → logprob: -0.0007562621613033116
    2. 'daemon' → logprob: -7.25075626373291
    3. 'args' → logprob: -10.75075626373291
    4. ' ).' → logprob: -11.12575626373291
    5. ')' → logprob: -12.00075626373291
    6. ' daemon' → logprob: -12.75075626373291
    7. '   ' → logprob: -14.75075626373291
    8. 'kwargs' → logprob: -14.75075626373291
    9. 'name' → logprob: -16.125755310058594
    10. ' args' → logprob: -17.250755310058594

Token 1145: 'start' (ID: 5236)
  Prédit: 'start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: 0.0
    2. ' start' → logprob: -17.25
    3. 'run' → logprob: -18.875
    4. '.start' → logprob: -20.125
    5. '(start' → logprob: -22.0
    6. ':start' → logprob: -22.0
    7. '```' → logprob: -22.125
    8. 'join' → logprob: -22.5
    9. ',start' → logprob: -22.625
    10. '	start' → logprob: -23.0

Token 1146: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1144
Tokens correctement prédits (1ère position, stricte): 526
Tokens correctement prédits (1ère position, avec adaptation): 576
Tokens correctement prédits (top 10): 943
Précision stricte (1ère position): 45.98%
Précision adaptée (1ère position): 50.35%
Précision (top 10): 82.43%
================================================================================
