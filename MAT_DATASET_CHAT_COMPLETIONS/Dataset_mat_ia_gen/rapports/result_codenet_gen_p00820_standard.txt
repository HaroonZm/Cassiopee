================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:03:23
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
import math

def count_representations(n):
    limit = int(math.isqrt(n))
    count = 0
    # a^2 <= n
    for a in range(1, limit+1):
        a2 = a*a
        if a2 == n:
            count += 1
            continue
        for b in range(a, limit+1):
            s = a2 + b*b
            if s > n:
                break
            if s == n:
                count += 1
                continue
            for c in range(b, limit+1):
                t = s + c*c
                if t > n:
                    break
                if t == n:
                    count += 1
                    continue
                d2 = n - t
                d = int(math.isqrt(d2))
                if d >= c and d*d == d2:
                    count += 1
    return count

for line in sys.stdin:
    n = int(line)
    if n == 0:
        break
    print(count_representations(n))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'import' (ID: 561)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.21183791756629944
    2. '.' → logprob: -2.3368380069732666
    3. '<|end|>' → logprob: -2.8368380069732666
    4. '\' → logprob: -4.7118377685546875
    5. 'newline' → logprob: -5.0868377685546875
    6. 'import' → logprob: -5.0868377685546875
    7. '
' → logprob: -5.7118377685546875
    8. '' → logprob: -5.8368377685546875
    9. '<|end|>' → logprob: -5.8368377685546875
    10. '\r' → logprob: -6.3368377685546875

Token 4: ' math' (ID: 13324)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -1.259079363080673e-05
    2. 'os' → logprob: -11.375012397766113
    3. ' math' → logprob: -15.000012397766113
    4. '"os' → logprob: -15.250012397766113
    5. ' re' → logprob: -16.00001335144043
    6. ' json' → logprob: -16.00001335144043
    7. '_os' → logprob: -17.00001335144043
    8. '	os' → logprob: -17.00001335144043
    9. ' ' → logprob: -17.25001335144043
    10. ' argparse' → logprob: -17.25001335144043

Token 5: '

' (ID: 279)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.2990133762359619
    2. '\n' → logprob: -2.424013376235962
    3. '\' → logprob: -2.924013376235962
    4. 'import' → logprob: -3.049013376235962
    5. '
' → logprob: -3.424013376235962
    6. '```' → logprob: -4.049013137817383
    7. '

' → logprob: -5.049013137817383
    8. '<|end|>' → logprob: -5.299013137817383
    9. ',' → logprob: -6.174013137817383
    10. '<|end|>' → logprob: -6.924013137817383

Token 6: 'def' (ID: 1314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -1.0574363470077515
    2. '\' → logprob: -1.4324363470077515
    3. 'import' → logprob: -2.182436466217041
    4. '\n' → logprob: -2.182436466217041
    5. '```' → logprob: -2.432436466217041
    6. 'def' → logprob: -3.432436466217041
    7. '
' → logprob: -4.057436466217041
    8. ',' → logprob: -4.682436466217041
    9. '`' → logprob: -4.932436466217041
    10. '*' → logprob: -4.932436466217041

Token 7: ' count' (ID: 3605)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.025061270222067833
    2. ' calculate' → logprob: -4.150061130523682
    3. ' factorial' → logprob: -5.775061130523682
    4. ' space' → logprob: -6.150061130523682
    5. '_' → logprob: -7.025061130523682
    6. ' math' → logprob: -7.650061130523682
    7. ' e' → logprob: -7.900061130523682
    8. ' compute' → logprob: -7.900061130523682
    9. ' my' → logprob: -8.90006160736084
    10. ' calc' → logprob: -9.02506160736084

Token 8: '_re' (ID: 3067)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.006572788115590811
    2. '(' → logprob: -5.881572723388672
    3. '_words' → logprob: -6.756572723388672
    4. '_items' → logprob: -8.381572723388672
    5. '_tokens' → logprob: -8.506572723388672
    6. '_s' → logprob: -8.506572723388672
    7. '_spaces' → logprob: -8.506572723388672
    8. '_numbers' → logprob: -8.756572723388672
    9. '_occ' → logprob: -8.756572723388672
    10. '_particles' → logprob: -8.881572723388672

Token 9: 'present' (ID: 47421)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.670871376991272
    2. 'peated' → logprob: -2.4208712577819824
    3. 'quests' → logprob: -2.5458712577819824
    4. 'p' → logprob: -2.6708712577819824
    5. 'f' → logprob: -2.7958712577819824
    6. 'quired' → logprob: -3.2958712577819824
    7. 'placements' → logprob: -3.6708712577819824
    8. 'pet' → logprob: -3.6708712577819824
    9. 'm' → logprob: -3.9208712577819824
    10. 'pe' → logprob: -4.170871257781982

Token 10: 'ations' (ID: 929)
  Prédit: 'ation'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ation' → logprob: -1.0668199062347412
    2. 'ed' → logprob: -1.1918199062347412
    3. 'ations' → logprob: -1.1918199062347412
    4. 'able' → logprob: -3.441819906234741
    5. 'ing' → logprob: -4.31682014465332
    6. '_' → logprob: -7.44182014465332
    7. '```' → logprob: -7.69182014465332
    8. 'a' → logprob: -7.94182014465332
    9. 's' → logprob: -7.94182014465332
    10. 'ables' → logprob: -8.31682014465332

Token 11: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0034492069389671087
    2. '_' → logprob: -5.753449440002441
    3. ' (' → logprob: -8.378449440002441
    4. '('' → logprob: -12.753449440002441
    5. ')' → logprob: -12.878449440002441
    6. 's' → logprob: -12.878449440002441
    7. ':' → logprob: -13.003449440002441
    8. '```' → logprob: -13.003449440002441
    9. '<|end|>' → logprob: -13.128449440002441
    10. '(count' → logprob: -13.253449440002441

Token 12: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1448327898979187
    2. ')' → logprob: -2.3948328495025635
    3. ',' → logprob: -3.1448328495025635
    4. ':' → logprob: -7.769832611083984
    5. '):
' → logprob: -10.769832611083984
    6. ' ):' → logprob: -10.894832611083984
    7. '_' → logprob: -11.144832611083984
    8. '=' → logprob: -11.144832611083984
    9. ' ,' → logprob: -11.144832611083984
    10. 's' → logprob: -11.769832611083984

Token 13: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.012795332819223404
    2. '   ' → logprob: -4.637795448303223
    3. '():' → logprob: -6.887795448303223
    4. '(' → logprob: -7.262795448303223
    5. ' :' → logprob: -7.762795448303223
    6. ':
' → logprob: -8.012795448303223
    7. '```' → logprob: -8.762795448303223
    8. '    ' → logprob: -9.387795448303223
    9. '':' → logprob: -9.637795448303223
    10. '):' → logprob: -9.887795448303223

Token 14: ' limit' (ID: 5967)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' 
' → logprob: -0.5525312423706055
    2. ' ' → logprob: -1.6775312423706055
    3. '   ' → logprob: -2.5525312423706055
    4. '    ' → logprob: -3.4275312423706055
    5. ' result' → logprob: -3.4275312423706055
    6. '     
' → logprob: -3.5525312423706055
    7. '   
' → logprob: -4.9275312423706055
    8. '```' → logprob: -4.9275312423706055
    9. '    
' → logprob: -5.0525312423706055
    10. 'result' → logprob: -5.0525312423706055

Token 15: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0019510135753080249
    2. '=' → logprob: -6.251951217651367
    3. ' ' → logprob: -10.876951217651367
    4. '_' → logprob: -13.626951217651367
    5. ')' → logprob: -14.376951217651367
    6. '  ' → logprob: -14.626951217651367
    7. ' ' → logprob: -15.126951217651367
    8. '=int' → logprob: -15.251951217651367
    9. ' =)' → logprob: -15.376951217651367
    10. ' _' → logprob: -16.251951217651367

Token 16: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.03351221978664398
    2. 'int' → logprob: -3.5335121154785156
    3. ' math' → logprob: -5.658512115478516
    4. 'math' → logprob: -8.783512115478516
    5. ' n' → logprob: -9.408512115478516
    6. '	int' → logprob: -11.283512115478516
    7. 'n' → logprob: -11.658512115478516
    8. ' ' → logprob: -11.908512115478516
    9. '(int' → logprob: -13.783512115478516
    10. '=int' → logprob: -13.783512115478516

Token 17: '(math' (ID: 86464)
  Prédit: '(math'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(math' → logprob: -0.638748049736023
    2. '(' → logprob: -1.138748049736023
    3. '(n' → logprob: -1.888748049736023
    4. '(s' → logprob: -7.6387481689453125
    5. 'math' → logprob: -10.513748168945312
    6. ' (' → logprob: -10.763748168945312
    7. '```' → logprob: -11.263748168945312
    8. '(Math' → logprob: -12.513748168945312
    9. ' math' → logprob: -12.638748168945312
    10. '(len' → logprob: -12.763748168945312

Token 18: '.is' (ID: 3109)
  Prédit: '.sqrt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sqrt' → logprob: -0.0011156888213008642
    2. '.' → logprob: -6.876115798950195
    3. 'sqrt' → logprob: -10.501115798950195
    4. '.is' → logprob: -10.501115798950195
    5. '.s' → logprob: -11.376115798950195
    6. '.ceil' → logprob: -11.876115798950195
    7. '.Sqrt' → logprob: -12.751115798950195
    8. '.floor' → logprob: -12.876115798950195
    9. ' .' → logprob: -13.376115798950195
    10. '```' → logprob: -14.126115798950195

Token 19: 'qrt' (ID: 17629)
  Prédit: 'qrt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'qrt' → logprob: -8.566264295950532e-05
    2. 'q' → logprob: -9.375085830688477
    3. 'qr' → logprob: -14.625085830688477
    4. 'quare' → logprob: -15.625085830688477
    5. 'qu' → logprob: -16.750085830688477
    6. '_' → logprob: -17.125085830688477
    7. 'close' → logprob: -18.000085830688477
    8. 'sqrt' → logprob: -18.000085830688477
    9. '{' → logprob: -18.250085830688477
    10. 'qw' → logprob: -18.375085830688477

Token 20: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.004687987733632326
    2. '(' → logprob: -5.379687786102295
    3. ' (' → logprob: -9.879688262939453
    4. 'n' → logprob: -11.254688262939453
    5. ')' → logprob: -13.754688262939453
    6. ' ' → logprob: -13.754688262939453
    7. '(
' → logprob: -14.379688262939453
    8. ')(' → logprob: -14.879688262939453
    9. ' n' → logprob: -15.004688262939453
    10. ')n' → logprob: -15.379688262939453

Token 21: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0695384219288826
    2. '(' → logprob: -3.0695383548736572
    3. ')' → logprob: -4.569538593292236
    4. '()))' → logprob: -4.944538593292236
    5. ' ))' → logprob: -7.069538593292236
    6. '(n' → logprob: -7.194538593292236
    7. '))
' → logprob: -7.569538593292236
    8. ' ' → logprob: -7.819538593292236
    9. '))+' → logprob: -8.444538116455078
    10. ')))' → logprob: -8.694538116455078

Token 22: '   ' (ID: 271)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.5093626976013184
    2. '+' → logprob: -1.7593626976013184
    3. ':' → logprob: -2.1343626976013184
    4. ')' → logprob: -2.2593626976013184
    5. '   ' → logprob: -2.3843626976013184
    6. '
' → logprob: -3.0093626976013184
    7. ' ' → logprob: -3.0093626976013184
    8. '\' → logprob: -3.2593626976013184
    9. '*' → logprob: -3.2593626976013184
    10. ' 
' → logprob: -3.3843626976013184

Token 23: ' count' (ID: 3605)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5303717851638794
    2. ' 
' → logprob: -1.2803717851638794
    3. '
' → logprob: -3.65537166595459
    4. ')' → logprob: -3.90537166595459
    5. '  
' → logprob: -3.90537166595459
    6. '\' → logprob: -4.40537166595459
    7. ':' → logprob: -4.78037166595459
    8. '\n' → logprob: -4.90537166595459
    9. '   ' → logprob: -5.03037166595459
    10. '    ' → logprob: -5.53037166595459

Token 24: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.004352028947323561
    2. '=' → logprob: -5.50435209274292
    3. ' ' → logprob: -8.504351615905762
    4. '_' → logprob: -10.504351615905762
    5. '  ' → logprob: -11.129351615905762
    6. ')' → logprob: -11.379351615905762
    7. ' +=' → logprob: -11.379351615905762
    8. ' =)' → logprob: -13.504351615905762
    9. '(' → logprob: -13.879351615905762
    10. '<|end|>' → logprob: -14.129351615905762

Token 25: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2519643008708954
    2. ' ' → logprob: -1.5019643306732178
    3. '1' → logprob: -11.001964569091797
    4. ' limit' → logprob: -12.126964569091797
    5. 'limit' → logprob: -12.126964569091797
    6. ' n' → logprob: -13.001964569091797
    7. ' ' → logprob: -13.876964569091797
    8. 'n' → logprob: -14.314464569091797
    9. '2' → logprob: -14.314464569091797
    10. '(limit' → logprob: -14.376964569091797

Token 26: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0019841869361698627
    2. ' ' → logprob: -6.251984119415283
    3. 'limit' → logprob: -10.251984596252441
    4. '1' → logprob: -11.251984596252441
    5. ' limit' → logprob: -13.251984596252441
    6. 'n' → logprob: -13.814484596252441
    7. '2' → logprob: -14.001984596252441
    8. '(limit' → logprob: -14.064484596252441
    9. '   ' → logprob: -14.751984596252441
    10. '```' → logprob: -15.126984596252441

Token 27: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 28: '   ' (ID: 271)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.9649360179901123
    2. ' for' → logprob: -1.7149360179901123
    3. '<|end|>' → logprob: -1.9649360179901123
    4. ' ' → logprob: -2.4649360179901123
    5. 'for' → logprob: -2.7149360179901123
    6. '
' → logprob: -2.8399360179901123
    7. '   ' → logprob: -3.2149360179901123
    8. '\' → logprob: -3.9649360179901123
    9. ' 
' → logprob: -4.464936256408691
    10. '    
' → logprob: -5.214936256408691

Token 29: ' #' (ID: 1069)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2281569242477417
    2. 'for' → logprob: -2.3531570434570312
    3. ' ' → logprob: -2.7281570434570312
    4. '<|end|>' → logprob: -3.3531570434570312
    5. ' 
' → logprob: -5.103157043457031
    6. '\n' → logprob: -7.228157043457031
    7. '
' → logprob: -7.603157043457031
    8. '   ' → logprob: -7.603157043457031
    9. '<|end|>' → logprob: -8.603157043457031
    10. '\' → logprob: -9.228157043457031

Token 30: ' a' (ID: 261)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.22542251646518707
    2. 'for' → logprob: -1.6004225015640259
    3. '```' → logprob: -12.600422859191895
    4. 'For' → logprob: -13.225422859191895
    5. '   ' → logprob: -13.725422859191895
    6. ' ' → logprob: -13.725422859191895
    7. '<|end|>' → logprob: -14.475422859191895
    8. '	for' → logprob: -15.225422859191895
    9. ' ```' → logprob: -15.475422859191895
    10. 'The' → logprob: -15.600422859191895

Token 31: '^' (ID: 61)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2107771784067154
    2. ' =' → logprob: -2.3357772827148438
    3. '=' → logprob: -2.5857772827148438
    4. ' **' → logprob: -4.835777282714844
    5. '+' → logprob: -5.585777282714844
    6. ' for' → logprob: -6.210777282714844
    7. ' +=' → logprob: -6.710777282714844
    8. 'for' → logprob: -6.835777282714844
    9. ')' → logprob: -8.210777282714844
    10. '  ' → logprob: -8.335777282714844

Token 32: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0005031120381318033
    2. ' ' → logprob: -7.625503063201904
    3. '²' → logprob: -12.750503540039062
    4. 'a' → logprob: -12.875503540039062
    5. '4' → logprob: -13.250503540039062
    6. '=' → logprob: -13.625503540039062
    7. 'b' → logprob: -13.875503540039062
    8. '+' → logprob: -13.875503540039062
    9. ',' → logprob: -14.000503540039062
    10. '
' → logprob: -14.313003540039062

Token 33: ' <=' (ID: 5017)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.08179870247840881
    2. '+' → logprob: -2.706798791885376
    3. ' =' → logprob: -5.206798553466797
    4. ' <=' → logprob: -5.956798553466797
    5. '=' → logprob: -6.081798553466797
    6. ' ' → logprob: -6.956798553466797
    7. ',' → logprob: -8.831798553466797
    8. '  ' → logprob: -9.956798553466797
    9. ' ,' → logprob: -9.956798553466797
    10. '<=' → logprob: -10.081798553466797

Token 34: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.47458383440971375
    2. ' n' → logprob: -0.9745838642120361
    3. 'a' → logprob: -8.349583625793457
    4. ' ' → logprob: -9.724583625793457
    5. ' a' → logprob: -9.724583625793457
    6. 'limit' → logprob: -9.974583625793457
    7. 'b' → logprob: -10.224583625793457
    8. ' b' → logprob: -10.724583625793457
    9. ' limit' → logprob: -11.099583625793457
    10. '	n' → logprob: -12.537083625793457

Token 35: '
' (ID: 198)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.1423782110214233
    2. '<|end|>' → logprob: -1.2673782110214233
    3. '
' → logprob: -1.5173782110214233
    4. ' and' → logprob: -3.142378330230713
    5. ' for' → logprob: -3.142378330230713
    6. '\n' → logprob: -3.642378330230713
    7. ',' → logprob: -4.392378330230713
    8. ':' → logprob: -4.392378330230713
    9. '<|end|>' → logprob: -4.517378330230713
    10. 'for' → logprob: -5.142378330230713

Token 36: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5678054690361023
    2. '<|end|>' → logprob: -1.567805528640747
    3. 'for' → logprob: -1.817805528640747
    4. '   ' → logprob: -3.692805528640747
    5. '\n' → logprob: -4.067805290222168
    6. ' ' → logprob: -4.817805290222168
    7. '<|end|>' → logprob: -5.067805290222168
    8. '
' → logprob: -5.817805290222168
    9. ',' → logprob: -7.692805290222168
    10. '\' → logprob: -7.817805290222168

Token 37: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5877116918563843
    2. ' ' → logprob: -1.5877116918563843
    3. '<|end|>' → logprob: -2.087711811065674
    4. 'for' (adapté à ' for') → logprob: -2.462711811065674
    5. '\n' → logprob: -4.212711811065674
    6. '   ' → logprob: -4.962711811065674
    7. '<|end|>' → logprob: -6.212711811065674
    8. ' 
' → logprob: -6.462711811065674
    9. '  
' → logprob: -6.712711811065674
    10. '  ' → logprob: -7.087711811065674

Token 38: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.0037364219315350056
    2. 'a' → logprob: -5.62873649597168
    3. ' i' → logprob: -9.50373649597168
    4. ' ' → logprob: -9.87873649597168
    5. '	a' → logprob: -12.12873649597168
    6. ' ' → logprob: -13.37873649597168
    7. '_a' → logprob: -13.75373649597168
    8. 'i' → logprob: -14.00373649597168
    9. '```' → logprob: -15.06623649597168
    10. ' ' → logprob: -16.12873649597168

Token 39: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.002863127738237381
    2. 'in' → logprob: -6.002862930297852
    3. ' ' → logprob: -7.877862930297852
    4. '1' → logprob: -12.752862930297852
    5. '  ' → logprob: -13.377862930297852
    6. '0' → logprob: -14.377862930297852
    7. 'space' → logprob: -14.752862930297852
    8. 'import' → logprob: -14.877862930297852
    9. '2' → logprob: -15.252862930297852
    10. 'a' → logprob: -15.315362930297852

Token 40: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -6.885492621222511e-05
    2. ' ' → logprob: -9.875068664550781
    3. 'range' → logprob: -11.125068664550781
    4. '	range' → logprob: -13.875068664550781
    5. ' ' → logprob: -14.000068664550781
    6. '  ' → logprob: -14.250068664550781
    7. '   ' → logprob: -17.00006866455078
    8. ' xrange' → logprob: -17.75006866455078
    9. ' ran' → logprob: -18.00006866455078
    10. '(range' → logprob: -18.12506866455078

Token 41: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.13055643439292908
    2. '(limit' → logprob: -2.130556344985962
    3. ' (' → logprob: -5.630556583404541
    4. '(a' → logprob: -11.755556106567383
    5. '(len' → logprob: -11.880556106567383
    6. ' ' → logprob: -11.880556106567383
    7. '<|end|>' → logprob: -13.380556106567383
    8. '(l' → logprob: -13.380556106567383
    9. '(n' → logprob: -13.880556106567383
    10. '(
' → logprob: -13.880556106567383

Token 42: '1' (ID: 16)
  Prédit: 'limit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -0.026478061452507973
    2. '0' → logprob: -4.026478290557861
    3. '1' → logprob: -5.401478290557861
    4. ' limit' → logprob: -5.901478290557861
    5. '(limit' → logprob: -7.026478290557861
    6. ' ' → logprob: -9.651477813720703
    7. '-limit' → logprob: -9.901477813720703
    8. 'lim' → logprob: -10.526477813720703
    9. ')' → logprob: -12.026477813720703
    10. '_limit' → logprob: -12.276477813720703

Token 43: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0036066018510609865
    2. ' ,' → logprob: -5.628606796264648
    3. ',
' → logprob: -13.253606796264648
    4. ' ' → logprob: -13.378606796264648
    5. 'limit' → logprob: -14.128606796264648
    6. '<|end|>' → logprob: -14.628606796264648
    7. '(limit' → logprob: -14.628606796264648
    8. ',int' → logprob: -15.003606796264648
    9. '+' → logprob: -15.253606796264648
    10. ',

' → logprob: -15.753606796264648

Token 44: ' limit' (ID: 5967)
  Prédit: 'limit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -0.47409364581108093
    2. ' limit' → logprob: -0.9740936756134033
    3. '(limit' → logprob: -11.224093437194824
    4. 'lim' → logprob: -13.724093437194824
    5. '_limit' → logprob: -13.974093437194824
    6. ' ' → logprob: -14.599093437194824
    7. '.limit' → logprob: -15.224093437194824
    8. '-limit' → logprob: -15.974093437194824
    9. '    ' → logprob: -16.47409439086914
    10. '```' → logprob: -17.09909439086914

Token 45: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6931619644165039
    2. ' +' → logprob: -0.6931619644165039
    3. ' ' → logprob: -11.318161964416504
    4. ')' → logprob: -13.943161964416504
    5. ')+' → logprob: -14.318161964416504
    6. ' plus' → logprob: -15.318161964416504
    7. ' ' → logprob: -15.693161964416504
    8. '1' → logprob: -16.068161010742188
    9. '+)' → logprob: -16.193161010742188
    10. '2' → logprob: -16.443161010742188

Token 46: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00029685118352063
    2. ' ' → logprob: -8.125296592712402
    3. '2' → logprob: -15.375296592712402
    4. '```' → logprob: -15.500296592712402
    5. '   ' → logprob: -16.00029754638672
    6. ')' → logprob: -16.37529754638672
    7. '  ' → logprob: -17.00029754638672
    8. '

' → logprob: -17.93779754638672
    9. '    ' → logprob: -18.75029754638672
    10. '۱' → logprob: -18.93779754638672

Token 47: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0021447893232107162
    2. ':' → logprob: -6.627144813537598
    3. '):
' → logprob: -7.877144813537598
    4. ' ):' → logprob: -8.002144813537598
    5. ')' → logprob: -9.377144813537598
    6. ',' → logprob: -11.877144813537598
    7. '+' → logprob: -11.877144813537598
    8. ' ' → logprob: -13.502144813537598
    9. '   ' → logprob: -14.627144813537598
    10. '():' → logprob: -14.877144813537598

Token 48: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.25017374753952026
    2. ' ' → logprob: -2.000173807144165
    3. ' :' → logprob: -3.250173807144165
    4. '   ' → logprob: -4.125173568725586
    5. '    ' → logprob: -4.250173568725586
    6. '<|end|>' → logprob: -4.500173568725586
    7. '       ' → logprob: -6.625173568725586
    8. '  ' → logprob: -6.875173568725586
    9. '+' → logprob: -7.250173568725586
    10. ':
' → logprob: -8.000173568725586

Token 49: ' a' (ID: 261)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.8160890340805054
    2. ' b' → logprob: -1.5660890340805054
    3. '   ' → logprob: -1.8160890340805054
    4. ' ' → logprob: -2.316089153289795
    5. 'b' → logprob: -3.691089153289795
    6. 'for' → logprob: -4.191089153289795
    7. ' a' → logprob: -4.316089153289795
    8. '    ' → logprob: -4.441089153289795
    9. ' if' → logprob: -4.691089153289795
    10. 'a' (adapté à ' a') → logprob: -5.691089153289795

Token 50: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.6571674942970276
    2. '_squared' → logprob: -0.9071674942970276
    3. '²' → logprob: -3.532167434692383
    4. '_sq' → logprob: -3.907167434692383
    5. '**' → logprob: -4.532167434692383
    6. '*' → logprob: -4.907167434692383
    7. 's' → logprob: -5.782167434692383
    8. '_square' → logprob: -5.907167434692383
    9. '_' → logprob: -6.282167434692383
    10. '_s' → logprob: -6.907167434692383

Token 51: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5839415192604065
    2. ' =' → logprob: -0.8339415192604065
    3. ')' → logprob: -5.083941459655762
    4. '_squared' → logprob: -6.958941459655762
    5. '2' → logprob: -8.083941459655762
    6. '=a' → logprob: -9.708941459655762
    7. '_sq' → logprob: -9.833941459655762
    8. '²' → logprob: -9.958941459655762
    9. ' ' → logprob: -9.958941459655762
    10. 'a' → logprob: -10.083941459655762

Token 52: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.2519373297691345
    2. ' a' → logprob: -1.5019373893737793
    3. '	a' → logprob: -12.376936912536621
    4. '   ' → logprob: -12.876936912536621
    5. ' ' → logprob: -13.876936912536621
    6. '>a' → logprob: -15.876936912536621
    7. '*a' → logprob: -16.626937866210938
    8. ''a' → logprob: -16.876937866210938
    9. '    ' → logprob: -16.876937866210938
    10. '_a' → logprob: -17.251937866210938

Token 53: '*a' (ID: 78448)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.583960235118866
    2. '*a' → logprob: -0.833960235118866
    3. '*' → logprob: -5.458960056304932
    4. ' *' → logprob: -5.958960056304932
    5. ' **' → logprob: -6.833960056304932
    6. ' ' → logprob: -11.08396053314209
    7. 'a' → logprob: -11.20896053314209
    8. '2' → logprob: -11.33396053314209
    9. '*b' → logprob: -12.45896053314209
    10. '*i' → logprob: -12.45896053314209

Token 54: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 55: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.29765135049819946
    2. '<|end|>' → logprob: -1.4226512908935547
    3. ',' → logprob: -5.047651290893555
    4. '
' → logprob: -6.297651290893555
    5. '        
' → logprob: -6.297651290893555
    6. '<|end|>' → logprob: -6.422651290893555
    7. ' ' → logprob: -6.422651290893555
    8. ' for' → logprob: -7.297651290893555
    9. '        ' → logprob: -7.672651290893555
    10. ' if' → logprob: -7.672651290893555

Token 56: ' if' (ID: 538)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3658834993839264
    2. ' for' → logprob: -1.365883469581604
    3. 'b' → logprob: -3.3658835887908936
    4. 'if' (adapté à ' if') → logprob: -5.1158833503723145
    5. '   ' → logprob: -5.3658833503723145
    6. '       ' → logprob: -5.9908833503723145
    7. ' b' → logprob: -6.2408833503723145
    8. ' if' → logprob: -6.8658833503723145
    9. 'remaining' → logprob: -8.365883827209473
    10. 'rem' → logprob: -9.740883827209473

Token 57: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.018546829000115395
    2. 'a' → logprob: -4.143547058105469
    3. ' n' → logprob: -6.393547058105469
    4. 'n' → logprob: -7.268547058105469
    5. ' ' → logprob: -9.893547058105469
    6. '   ' → logprob: -10.393547058105469
    7. '2' → logprob: -10.893547058105469
    8. '	a' → logprob: -11.393547058105469
    9. ' (' → logprob: -11.831047058105469
    10. '(a' → logprob: -12.581047058105469

Token 58: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.33899548649787903
    2. '*' → logprob: -1.3389954566955566
    3. '**' → logprob: -3.8389954566955566
    4. ' *' → logprob: -6.463995456695557
    5. '*a' → logprob: -6.588995456695557
    6. '²' → logprob: -8.463995933532715
    7. '<|end|>' → logprob: -8.588995933532715
    8. ' ' → logprob: -9.338995933532715
    9. '*i' → logprob: -9.463995933532715
    10. '<=' → logprob: -10.338995933532715

Token 59: ' ==' (ID: 951)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.6374090909957886
    2. ' >' → logprob: -0.8874090909957886
    3. '<=' → logprob: -3.887409210205078
    4. '==' → logprob: -4.262409210205078
    5. ' <=' → logprob: -4.387409210205078
    6. ' ==' → logprob: -5.137409210205078
    7. '>=' → logprob: -5.637409210205078
    8. ' >=' → logprob: -6.762409210205078
    9. '<' → logprob: -7.387409210205078
    10. '+' → logprob: -7.762409210205078

Token 60: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.004121973179280758
    2. 'n' → logprob: -5.504121780395508
    3. ' ' → logprob: -10.504121780395508
    4. '<|end|>' → logprob: -11.754121780395508
    5. '	n' → logprob: -11.879121780395508
    6. '<|end|>' → logprob: -14.379121780395508
    7. ')n' → logprob: -15.129121780395508
    8. ' н' → logprob: -15.254121780395508
    9. '    ' → logprob: -16.879121780395508
    10. '0' → logprob: -17.004121780395508

Token 61: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0008799002389423549
    2. ':
' → logprob: -7.125879764556885
    3. ':return' → logprob: -9.875880241394043
    4. '       ' → logprob: -11.625880241394043
    5. '):' → logprob: -12.250880241394043
    6. ' :' → logprob: -12.625880241394043
    7. ' or' → logprob: -13.375880241394043
    8. ':
' → logprob: -13.625880241394043
    9. '   ' → logprob: -13.875880241394043
    10. ',' → logprob: -14.250880241394043

Token 62: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.13670974969863892
    2. ':' → logprob: -2.136709690093994
    3. ':
' → logprob: -5.011709690093994
    4. '       ' → logprob: -6.636709690093994
    5. '
' → logprob: -7.386709690093994
    6. ',' → logprob: -8.511710166931152
    7. '<|end|>' → logprob: -8.511710166931152
    8. '               ' → logprob: -8.761710166931152
    9. ':return' → logprob: -9.011710166931152
    10. '\n' → logprob: -9.886710166931152

Token 63: ' count' (ID: 3605)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.914971113204956
    2. ' count' → logprob: -1.539971113204956
    3. 'count' (adapté à ' count') → logprob: -1.664971113204956
    4. '           ' → logprob: -1.664971113204956
    5. '   ' → logprob: -6.164971351623535
    6. '               ' → logprob: -6.414971351623535
    7. '
' → logprob: -6.914971351623535
    8. '1' → logprob: -7.664971351623535
    9. ' ' → logprob: -8.039971351623535
    10. '	count' → logprob: -8.539971351623535

Token 64: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.5760546326637268
    2. ' +=' → logprob: -0.8260546326637268
    3. '+' → logprob: -9.451054573059082
    4. ']+=' → logprob: -11.701054573059082
    5. '<|end|>' → logprob: -11.701054573059082
    6. '   ' → logprob: -11.951054573059082
    7. '=' → logprob: -12.951054573059082
    8. '++' → logprob: -13.076054573059082
    9. '<|end|>' → logprob: -13.576054573059082
    10. '1' → logprob: -13.576054573059082

Token 65: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0028124824166297913
    2. ' ' → logprob: -5.877812385559082
    3. '0' → logprob: -12.502812385559082
    4. '2' → logprob: -13.002812385559082
    5. '   ' → logprob: -14.815312385559082
    6. '<|end|>' → logprob: -15.440312385559082
    7. '3' → logprob: -15.565312385559082
    8. '4' → logprob: -16.0028133392334
    9. '```' → logprob: -16.3153133392334
    10. '  ' → logprob: -16.7528133392334

Token 66: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00016825977945700288
    2. ' ' → logprob: -8.750167846679688
    3. '2' → logprob: -12.000167846679688
    4. '0' → logprob: -13.000167846679688
    5. '4' → logprob: -15.062667846679688
    6. '   ' → logprob: -15.250167846679688
    7. '3' → logprob: -15.875167846679688
    8. '+' → logprob: -16.437667846679688
    9. '  ' → logprob: -16.500167846679688
    10. '```' → logprob: -16.812667846679688

Token 67: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12319113314151764
    2. '<|end|>' → logprob: -2.6231911182403564
    3. '
' → logprob: -3.3731911182403564
    4. '\n' → logprob: -5.7481913566589355
    5. '<|end|>' → logprob: -6.4981913566589355
    6. ' else' → logprob: -7.1231913566589355
    7. '           ' → logprob: -7.4981913566589355
    8. '   ' → logprob: -7.9981913566589355
    9. ' continue' → logprob: -8.623190879821777
    10. 'continue' → logprob: -8.623190879821777

Token 68: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.043882861733436584
    2. '<|end|>' → logprob: -3.2938828468322754
    3. ' ' → logprob: -5.543882846832275
    4. '<|end|>' → logprob: -8.043883323669434
    5. '   ' → logprob: -8.293883323669434
    6. ' else' → logprob: -8.418883323669434
    7. ' elif' → logprob: -8.543883323669434
    8. ')' → logprob: -8.918883323669434
    9. ',' → logprob: -9.043883323669434
    10. '
' → logprob: -9.293883323669434

Token 69: ' continue' (ID: 4901)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7718770503997803
    2. ' continue' → logprob: -0.8968770503997803
    3. 'continue' (adapté à ' continue') → logprob: -2.6468770503997803
    4. '   ' → logprob: -3.2718770503997803
    5. '           ' → logprob: -3.8968770503997803
    6. ' ' → logprob: -7.896877288818359
    7. '	continue' → logprob: -9.02187728881836
    8. '```' → logprob: -9.52187728881836
    9. '
' → logprob: -9.77187728881836
    10. ' continued' → logprob: -10.02187728881836

Token 70: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1797647476196289
    2. '<|end|>' → logprob: -2.054764747619629
    3. '
' → logprob: -3.429764747619629
    4. '        
' → logprob: -5.804764747619629
    5. '<|end|>' → logprob: -7.554764747619629
    6. '\n' → logprob: -9.679764747619629
    7. '  
' → logprob: -9.679764747619629
    8. ' 
' → logprob: -9.804764747619629
    9. ')' → logprob: -10.179764747619629
    10. '   ' → logprob: -10.304764747619629

Token 71: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.050790198147296906
    2. '<|end|>' → logprob: -3.300790309906006
    3. '   ' → logprob: -4.925790309906006
    4. '
' → logprob: -6.175790309906006
    5. '        
' → logprob: -6.425790309906006
    6. '```' → logprob: -7.925790309906006
    7. '<|end|>' → logprob: -8.175789833068848
    8. '    
' → logprob: -8.300789833068848
    9. ')' → logprob: -8.425789833068848
    10. ' 
' → logprob: -9.425789833068848

Token 72: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.20798566937446594
    2. '       ' → logprob: -2.2079856395721436
    3. 'for' (adapté à ' for') → logprob: -2.5829856395721436
    4. 'rest' → logprob: -7.332985877990723
    5. ' rest' → logprob: -8.207985877990723
    6. ' if' → logprob: -8.707985877990723
    7. ' remainder' → logprob: -8.707985877990723
    8. 'diff' → logprob: -8.957985877990723
    9. 'if' → logprob: -9.082985877990723
    10. '   ' → logprob: -9.332985877990723

Token 73: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.043034929782152176
    2. 'b' → logprob: -3.1680350303649902
    3. ' ' → logprob: -10.418034553527832
    4. ' s' → logprob: -13.293034553527832
    5. '<|end|>' → logprob: -14.043034553527832
    6. 's' → logprob: -14.418034553527832
    7. '    ' → logprob: -14.730534553527832
    8. '```' → logprob: -15.105534553527832
    9. '   ' → logprob: -15.355534553527832
    10. ' c' → logprob: -15.918034553527832

Token 74: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0003360582049936056
    2. 'in' → logprob: -8.250335693359375
    3. ' ' → logprob: -9.875335693359375
    4. '<|end|>' → logprob: -10.875335693359375
    5. '<|end|>' → logprob: -13.750335693359375
    6. '  ' → logprob: -14.500335693359375
    7. ')' → logprob: -14.750335693359375
    8. '1' → logprob: -15.125335693359375
    9. 'range' → logprob: -15.625335693359375
    10. 'a' → logprob: -15.812835693359375

Token 75: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.3133004903793335
    2. 'range' → logprob: -1.3133004903793335
    3. '(range' → logprob: -10.438300132751465
    4. '	range' → logprob: -12.438300132751465
    5. ' ' → logprob: -13.313300132751465
    6. ')' → logprob: -14.313300132751465
    7. 'a' → logprob: -15.063300132751465
    8. '.range' → logprob: -15.063300132751465
    9. 'import' → logprob: -15.188300132751465
    10. '  ' → logprob: -15.313300132751465

Token 76: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.08903544396162033
    2. '(' → logprob: -2.4640355110168457
    3. 'a' → logprob: -9.714035034179688
    4. '1' → logprob: -10.839035034179688
    5. ' (' → logprob: -11.464035034179688
    6. ' ' → logprob: -12.964035034179688
    7. ' a' → logprob: -14.339035034179688
    8. '   ' → logprob: -14.339035034179688
    9. '(b' → logprob: -15.089035034179688
    10. ',a' → logprob: -15.714035034179688

Token 77: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6338010430335999
    2. '+' → logprob: -0.8838010430335999
    3. ' +' → logprob: -3.008800983428955
    4. ' ,' → logprob: -5.008800983428955
    5. ',+' → logprob: -10.008801460266113
    6. '1' → logprob: -10.383801460266113
    7. ' ' → logprob: -10.383801460266113
    8. '+,' → logprob: -10.883801460266113
    9. '2' → logprob: -11.383801460266113
    10. '  ' → logprob: -11.758801460266113

Token 78: ' limit' (ID: 5967)
  Prédit: 'limit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -0.07896337658166885
    2. ' limit' → logprob: -2.578963279724121
    3. '(limit' → logprob: -10.203963279724121
    4. 'int' → logprob: -10.703963279724121
    5. ' ' → logprob: -11.953963279724121
    6. '_limit' → logprob: -13.078963279724121
    7. ' int' → logprob: -13.203963279724121
    8. 'lim' → logprob: -14.328963279724121
    9. '   ' → logprob: -14.703963279724121
    10. '-limit' → logprob: -14.953963279724121

Token 79: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0024794621858745813
    2. ' +' → logprob: -6.002479553222656
    3. '()+' → logprob: -13.502479553222656
    4. ')+' → logprob: -13.877479553222656
    5. '2' → logprob: -15.002479553222656
    6. ' ' → logprob: -15.502479553222656
    7. '1' → logprob: -15.752479553222656
    8. '   ' → logprob: -15.877479553222656
    9. ',' → logprob: -16.127479553222656
    10. '+,' → logprob: -16.627479553222656

Token 80: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.839121826691553e-05
    2. ' ' → logprob: -10.125078201293945
    3. '2' → logprob: -10.875078201293945
    4. '+' → logprob: -10.875078201293945
    5. '```' → logprob: -15.375078201293945
    6. ' +' → logprob: -15.750078201293945
    7. '<|end|>' → logprob: -17.750078201293945
    8. '   ' → logprob: -17.875078201293945
    9. '
' → logprob: -18.125078201293945
    10. '(' → logprob: -18.125078201293945

Token 81: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0008576238178648055
    2. '):
' → logprob: -7.375857830047607
    3. ':' → logprob: -9.12585735321045
    4. '+' → logprob: -9.50085735321045
    5. ' ):' → logprob: -10.37585735321045
    6. ')' → logprob: -11.25085735321045
    7. '+:' → logprob: -14.50085735321045
    8. ',' → logprob: -14.50085735321045
    9. '}:' → logprob: -15.00085735321045
    10. '1' → logprob: -15.12585735321045

Token 82: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9413251280784607
    2. ' ' → logprob: -1.5663251876831055
    3. ':' → logprob: -2.0663251876831055
    4. '<|end|>' → logprob: -2.0663251876831055
    5. ' :' → logprob: -2.3163251876831055
    6. '        ' → logprob: -4.6913251876831055
    7. ',' → logprob: -4.8163251876831055
    8. '           ' → logprob: -4.9413251876831055
    9. ':
' → logprob: -5.6913251876831055
    10. ' :
' → logprob: -6.0663251876831055

Token 83: ' s' (ID: 265)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.024407433345913887
    2. ' b' → logprob: -5.149407386779785
    3. ' 
' → logprob: -5.274407386779785
    4. '           ' → logprob: -5.774407386779785
    5. '<|end|>' → logprob: -5.899407386779785
    6. ' s' → logprob: -6.649407386779785
    7. '               ' → logprob: -6.899407386779785
    8. '       ' → logprob: -7.024407386779785
    9. ' a' → logprob: -7.274407386779785
    10. '  ' → logprob: -7.649407386779785

Token 84: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38744330406188965
    2. ' =' → logprob: -1.1374433040618896
    3. 'q' → logprob: -8.137443542480469
    4. 'quare' → logprob: -8.512443542480469
    5. 'um' → logprob: -9.887443542480469
    6. 'quares' → logprob: -11.512443542480469
    7. 'quared' → logprob: -12.762443542480469
    8. 'u' → logprob: -12.887443542480469
    9. ' ' → logprob: -13.262443542480469
    10. '=sum' → logprob: -13.637443542480469

Token 85: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.43140920996665955
    2. 'a' → logprob: -1.056409239768982
    3. ' b' → logprob: -6.1814093589782715
    4. 'b' → logprob: -7.4314093589782715
    5. ' ' → logprob: -10.181408882141113
    6. '(a' → logprob: -13.056408882141113
    7. '	a' → logprob: -13.306408882141113
    8. '<|end|>' → logprob: -13.931408882141113
    9. ' s' → logprob: -14.681408882141113
    10. '_a' → logprob: -14.931408882141113

Token 86: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.004641353618353605
    2. '*' → logprob: -5.504641532897949
    3. '²' → logprob: -8.50464153289795
    4. ' ' → logprob: -8.62964153289795
    5. '*b' → logprob: -9.25464153289795
    6. '**' → logprob: -9.75464153289795
    7. ' *' → logprob: -10.87964153289795
    8. '^' → logprob: -13.62964153289795
    9. '
' → logprob: -13.75464153289795
    10. 's' → logprob: -14.00464153289795

Token 87: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.1800128072500229
    2. '+' → logprob: -1.805012822151184
    3. '+b' → logprob: -8.305012702941895
    4. ' plus' → logprob: -11.930012702941895
    5. '<|end|>' → logprob: -12.055012702941895
    6. '+B' → logprob: -12.930012702941895
    7. ' +
' → logprob: -13.055012702941895
    8. ' ' → logprob: -13.305012702941895
    9. '+
' → logprob: -15.055012702941895
    10. ' ' → logprob: -15.430012702941895

Token 88: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.023249439895153046
    2. ' b' → logprob: -3.773249387741089
    3. '   ' → logprob: -12.773249626159668
    4. ' ' → logprob: -14.023249626159668
    5. '	b' → logprob: -15.398249626159668
    6. '  ' → logprob: -17.02324867248535
    7. '```' → logprob: -17.64824867248535
    8. '(b' → logprob: -18.14824867248535
    9. '    ' → logprob: -18.27324867248535
    10. ')b' → logprob: -18.64824867248535

Token 89: '*b' (ID: 72162)
  Prédit: '*b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*b' → logprob: -1.318681188422488e-05
    2. '2' → logprob: -12.12501335144043
    3. '*' → logprob: -12.37501335144043
    4. '**' → logprob: -13.37501335144043
    5. ' *' → logprob: -13.62501335144043
    6. 'b' → logprob: -14.50001335144043
    7. '*s' → logprob: -16.75001335144043
    8. ''*' → logprob: -17.00001335144043
    9. '```' → logprob: -17.25001335144043
    10. '*a' → logprob: -17.75001335144043

Token 90: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 91: '           ' (ID: 352)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.32977035641670227
    2. '==' → logprob: -1.7047703266143799
    3. '           ' → logprob: -2.95477032661438
    4. '=' → logprob: -3.82977032661438
    5. '<|end|>' → logprob: -4.704770565032959
    6. ' ' → logprob: -5.579770565032959
    7. ' <=' → logprob: -5.579770565032959
    8. ' =' → logprob: -6.079770565032959
    9. '       ' → logprob: -6.329770565032959
    10. '
' → logprob: -6.704770565032959

Token 92: ' if' (ID: 538)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -1.056947946548462
    2. ' ' → logprob: -1.181947946548462
    3. '=' → logprob: -2.306947946548462
    4. '==' → logprob: -2.681947946548462
    5. ' if' → logprob: -2.806947946548462
    6. '           ' → logprob: -2.806947946548462
    7. '<|end|>' → logprob: -3.931947946548462
    8. 'if' (adapté à ' if') → logprob: -4.306947708129883
    9. ' =' → logprob: -5.181947708129883
    10. ' >' → logprob: -5.681947708129883

Token 93: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.00320563861168921
    2. 's' → logprob: -5.7532057762146
    3. ' ' → logprob: -10.503205299377441
    4. ' ' → logprob: -15.253205299377441
    5. ' n' → logprob: -16.003206253051758
    6. '	s' → logprob: -17.378206253051758
    7. 'n' → logprob: -18.003206253051758
    8. '```' → logprob: -18.440706253051758
    9. ' (' → logprob: -18.628206253051758
    10. ' a' → logprob: -18.753206253051758

Token 94: ' >' (ID: 1424)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.5487037897109985
    2. ' >' → logprob: -1.6737037897109985
    3. '==' → logprob: -1.7987037897109985
    4. '>' → logprob: -2.673703670501709
    5. '=' → logprob: -9.048704147338867
    6. ' <=' → logprob: -10.423704147338867
    7. '<|end|>' → logprob: -10.673704147338867
    8. ' ' → logprob: -10.798704147338867
    9. '">' → logprob: -11.048704147338867
    10. '<=' → logprob: -11.423704147338867

Token 95: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.061967913061380386
    2. 'n' → logprob: -2.8119678497314453
    3. '	n' → logprob: -15.186967849731445
    4. ')n' → logprob: -17.311967849731445
    5. ' ' → logprob: -17.811967849731445
    6. '=n' → logprob: -18.436967849731445
    7. '(n' → logprob: -18.561967849731445
    8. '<|end|>' → logprob: -19.061967849731445
    9. 'n't' → logprob: -19.311967849731445
    10. ' н' → logprob: -19.436967849731445

Token 96: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02334401197731495
    2. ':
' → logprob: -3.773344039916992
    3. '           ' → logprob: -9.523344039916992
    4. '               ' → logprob: -11.523344039916992
    5. ':return' → logprob: -11.523344039916992
    6. '):
' → logprob: -13.648344039916992
    7. ':
' → logprob: -14.148344039916992
    8. '):' → logprob: -14.398344039916992
    9. ' :' → logprob: -14.523344039916992
    10. '       ' → logprob: -14.898344039916992

Token 97: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.001612696796655655
    2. ' break' → logprob: -7.251612663269043
    3. '           ' → logprob: -7.626612663269043
    4. ':' → logprob: -8.251612663269043
    5. 'break' → logprob: -9.001612663269043
    6. ':
' → logprob: -11.626612663269043
    7. '	break' → logprob: -11.876612663269043
    8. '                   ' → logprob: -12.376612663269043
    9. '   ' → logprob: -12.751612663269043
    10. '              ' → logprob: -12.876612663269043

Token 98: ' break' (ID: 2338)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.33476343750953674
    2. ' break' → logprob: -1.8347634077072144
    3. 'break' (adapté à ' break') → logprob: -2.084763526916504
    4. '                   ' → logprob: -7.709763526916504
    5. '	break' → logprob: -10.459763526916504
    6. '           ' → logprob: -11.084763526916504
    7. '_break' → logprob: -12.584763526916504
    8. '```' → logprob: -12.959763526916504
    9. '   ' → logprob: -13.459763526916504
    10. 'return' → logprob: -13.959763526916504

Token 99: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.009007236920297146
    2. '
' → logprob: -5.759007453918457
    3. '\n' → logprob: -5.759007453918457
    4. '            
' → logprob: -7.259007453918457
    5. '<|end|>' → logprob: -7.884007453918457
    6. 'elif' → logprob: -8.009007453918457
    7. '\' → logprob: -8.259007453918457
    8. '  
' → logprob: -9.009007453918457
    9. '       ' → logprob: -9.384007453918457
    10. ' 
' → logprob: -9.384007453918457

Token 100: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0026956244837492704
    2. '
' → logprob: -6.877695560455322
    3. '            
' → logprob: -7.002695560455322
    4. '\n' → logprob: -8.25269603729248
    5. ' 
' → logprob: -9.12769603729248
    6. '            ' → logprob: -9.50269603729248
    7. '    
' → logprob: -10.25269603729248
    8. '<|end|>' → logprob: -10.25269603729248
    9. '          ' → logprob: -10.50269603729248
    10. '\' → logprob: -10.50269603729248

Token 101: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2977031171321869
    2. 'if' (adapté à ' if') → logprob: -1.5477031469345093
    3. ' if' → logprob: -3.2977030277252197
    4. '       ' → logprob: -5.422703266143799
    5. 'elif' → logprob: -6.172703266143799
    6. '   ' → logprob: -8.04770278930664
    7. '<|end|>' → logprob: -8.67270278930664
    8. '               ' → logprob: -8.79770278930664
    9. ' ' → logprob: -8.79770278930664
    10. '```' → logprob: -9.79770278930664

Token 102: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.00218583014793694
    2. 's' → logprob: -6.127185821533203
    3. ' ' → logprob: -14.877185821533203
    4. ' ' → logprob: -15.002185821533203
    5. '<|end|>' → logprob: -17.752185821533203
    6. '(s' → logprob: -19.002185821533203
    7. '            ' → logprob: -20.002185821533203
    8. '           ' → logprob: -20.127185821533203
    9. ' (' → logprob: -20.439685821533203
    10. '_s' → logprob: -20.627185821533203

Token 103: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.054892104119062424
    2. '==' → logprob: -2.929892063140869
    3. '=' → logprob: -12.054892539978027
    4. ']==' → logprob: -14.054892539978027
    5. ' ' → logprob: -14.179892539978027
    6. ')==' → logprob: -14.304892539978027
    7. '==
' → logprob: -14.679892539978027
    8. ' ==
' → logprob: -14.804892539978027
    9. ' =' → logprob: -15.054892539978027
    10. ' ' → logprob: -15.179892539978027

Token 104: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.12692904472351074
    2. 'n' → logprob: -2.1269290447235107
    3. ' ' → logprob: -14.75192928314209
    4. '	n' → logprob: -14.75192928314209
    5. ' ' → logprob: -16.501928329467773
    6. '   ' → logprob: -17.251928329467773
    7. '
' → logprob: -17.501928329467773
    8. ')n' → logprob: -17.501928329467773
    9. ' н' → logprob: -17.626928329467773
    10. '(n' → logprob: -18.001928329467773

Token 105: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.005251068156212568
    2. ':
' → logprob: -5.255250930786133
    3. '           ' → logprob: -12.130250930786133
    4. '               ' → logprob: -12.380250930786133
    5. '       ' → logprob: -12.880250930786133
    6. ':return' → logprob: -13.255250930786133
    7. '):' → logprob: -14.505250930786133
    8. ',' → logprob: -14.630250930786133
    9. ':

' → logprob: -14.630250930786133
    10. ' and' → logprob: -14.755250930786133

Token 106: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00020926215802319348
    2. 'count' → logprob: -8.750208854675293
    3. ' count' → logprob: -10.125208854675293
    4. '           ' → logprob: -12.375208854675293
    5. '                
' → logprob: -13.750208854675293
    6. '```' → logprob: -13.750208854675293
    7. '                   ' → logprob: -13.875208854675293
    8. ',count' → logprob: -14.125208854675293
    9. '              ' → logprob: -14.375208854675293
    10. '
' → logprob: -14.625208854675293

Token 107: ' count' (ID: 3605)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.1901516318321228
    2. ' count' → logprob: -2.0651516914367676
    3. '                   ' → logprob: -3.6901516914367676
    4. 'count' (adapté à ' count') → logprob: -3.9401516914367676
    5. '                ' → logprob: -6.315151691436768
    6. '           ' → logprob: -10.06515121459961
    7. ' ' → logprob: -11.06515121459961
    8. '
' → logprob: -11.19015121459961
    9. ' return' → logprob: -11.56515121459961
    10. '              ' → logprob: -11.81515121459961

Token 108: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.001956348307430744
    2. '+=' → logprob: -6.251956462860107
    3. '               ' → logprob: -12.25195598602295
    4. ' +' → logprob: -12.37695598602295
    5. '+' → logprob: -12.37695598602295
    6. '            ' → logprob: -12.50195598602295
    7. '           ' → logprob: -12.62695598602295
    8. '                ' → logprob: -13.25195598602295
    9. '<|end|>' → logprob: -13.25195598602295
    10. ' ' → logprob: -13.62695598602295

Token 109: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.007607100997120142
    2. ' ' → logprob: -4.8826069831848145
    3. '2' → logprob: -14.382607460021973
    4. '   ' → logprob: -15.882607460021973
    5. '           ' → logprob: -16.257606506347656
    6. '```' → logprob: -16.882606506347656
    7. '<|end|>' → logprob: -17.507606506347656
    8. '  ' → logprob: -18.382606506347656
    9. '    ' → logprob: -18.820106506347656
    10. '       ' → logprob: -18.945106506347656

Token 110: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.842555426876061e-06
    2. ' ' → logprob: -12.250004768371582
    3. '2' → logprob: -17.3750057220459
    4. '<|end|>' → logprob: -20.1250057220459
    5. '   ' → logprob: -20.5000057220459
    6. '```' → logprob: -20.7500057220459
    7. '۱' → logprob: -20.8750057220459
    8. '１' → logprob: -21.0000057220459
    9. '  ' → logprob: -21.6250057220459
    10. '+' → logprob: -22.2500057220459

Token 111: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2244424819946289
    2. '\n' → logprob: -2.349442481994629
    3. '<|end|>' → logprob: -2.349442481994629
    4. '   ' → logprob: -5.724442481994629
    5. '    
' → logprob: -6.849442481994629
    6. ' 
' → logprob: -6.849442481994629
    7. '<|end|>' → logprob: -6.974442481994629
    8. '  
' → logprob: -6.974442481994629
    9. ' return' → logprob: -7.599442481994629
    10. '	return' → logprob: -7.724442481994629

Token 112: '               ' (ID: 506)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013107048347592354
    2. 'return' → logprob: -4.638106822967529
    3. ' return' → logprob: -6.263106822967529
    4. '
' → logprob: -7.513106822967529
    5. '    
' → logprob: -8.013107299804688
    6. '       ' → logprob: -8.263107299804688
    7. '	return' → logprob: -8.513107299804688
    8. '<|end|>' → logprob: -10.263107299804688
    9. ':return' → logprob: -11.263107299804688
    10. '           ' → logprob: -11.388107299804688

Token 113: ' continue' (ID: 4901)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.598658561706543
    2. 'return' → logprob: -0.848658561706543
    3. ' break' → logprob: -4.348658561706543
    4. 'break' → logprob: -4.973658561706543
    5. 'continue' (adapté à ' continue') → logprob: -6.848658561706543
    6. ' continue' → logprob: -7.098658561706543
    7. '               ' → logprob: -7.598658561706543
    8. '```' → logprob: -9.348658561706543
    9. '           ' → logprob: -9.473658561706543
    10. '
' → logprob: -10.848658561706543

Token 114: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 115: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 116: ' for' (ID: 395)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 117: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.10020763427019119
    2. ' c' → logprob: -2.350207567214966
    3. '   ' → logprob: -14.725207328796387
    4. ' ' → logprob: -15.600207328796387
    5. '<|end|>' → logprob: -16.225208282470703
    6. '	c' → logprob: -16.725208282470703
    7. '       ' → logprob: -17.225208282470703
    8. ')c' → logprob: -17.225208282470703
    9. '  ' → logprob: -17.350208282470703
    10. '_c' → logprob: -17.475208282470703

Token 118: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.00045557913836091757
    2. 'in' → logprob: -7.750455379486084
    3. ' ' → logprob: -10.750455856323242
    4. '	in' → logprob: -12.875455856323242
    5. '<|end|>' → logprob: -15.875455856323242
    6. '<|end|>' → logprob: -16.500455856323242
    7. ',' → logprob: -16.500455856323242
    8. '	' → logprob: -16.625455856323242
    9. ' ' → logprob: -17.000455856323242
    10. 'space' → logprob: -17.000455856323242

Token 119: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.2522793710231781
    2. 'range' → logprob: -1.5022794008255005
    3. ' b' → logprob: -8.502279281616211
    4. 'b' → logprob: -9.002279281616211
    5. '(range' → logprob: -10.752279281616211
    6. '(b' → logprob: -12.877279281616211
    7. ' ' → logprob: -16.62727928161621
    8. 'Range' → logprob: -16.75227928161621
    9. '	range' → logprob: -18.50227928161621
    10. ' (' → logprob: -18.62727928161621

Token 120: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.00013274075172375888
    2. 'b' → logprob: -9.37513256072998
    3. ' (' → logprob: -10.25013256072998
    4. ' b' → logprob: -12.37513256072998
    5. '(' → logprob: -12.75013256072998
    6. '	b' → logprob: -13.00013256072998
    7. '           ' → logprob: -13.50013256072998
    8. '       ' → logprob: -14.00013256072998
    9. '(B' → logprob: -15.50013256072998
    10. ' ' → logprob: -15.62513256072998

Token 121: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.429896944202483e-05
    2. '+' → logprob: -10.750043869018555
    3. ' ,' → logprob: -10.875043869018555
    4. ' +' → logprob: -13.375043869018555
    5. ',c' → logprob: -13.500043869018555
    6. 'c' → logprob: -14.375043869018555
    7. '+,' → logprob: -15.875043869018555
    8. ',
' → logprob: -17.500043869018555
    9. '           ' → logprob: -17.750043869018555
    10. ',current' → logprob: -17.875043869018555

Token 122: ' limit' (ID: 5967)
  Prédit: 'limit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -0.003183182328939438
    2. ' limit' → logprob: -5.753183364868164
    3. '(limit' → logprob: -12.128183364868164
    4. ' ' → logprob: -17.003183364868164
    5. 'int' → logprob: -18.003183364868164
    6. 'lim' → logprob: -18.128183364868164
    7. '_limit' → logprob: -18.378183364868164
    8. '-limit' → logprob: -18.503183364868164
    9. 'Limit' → logprob: -19.003183364868164
    10. '   ' → logprob: -19.503183364868164

Token 123: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -3.8889261304575484e-06
    2. ' +' → logprob: -12.500003814697266
    3. ')+' → logprob: -16.875003814697266
    4. '()+' → logprob: -17.500003814697266
    5. '+
' → logprob: -18.125003814697266
    6. '+c' → logprob: -18.625003814697266
    7. '<|end|>' → logprob: -19.750003814697266
    8. '+)' → logprob: -19.875003814697266
    9. '}+' → logprob: -20.000003814697266
    10. ')' → logprob: -20.500003814697266

Token 124: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0031817557755857706
    2. '+' → logprob: -5.7531819343566895
    3. ')+' → logprob: -13.378181457519531
    4. ')' → logprob: -13.753181457519531
    5. '2' → logprob: -14.628181457519531
    6. ' ' → logprob: -15.128181457519531
    7. ' +' → logprob: -15.503181457519531
    8. '```' → logprob: -15.628181457519531
    9. '(' → logprob: -17.00318145751953
    10. '()+' → logprob: -17.25318145751953

Token 125: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.10339482128620148
    2. '):
' → logprob: -2.6033947467803955
    3. ':' → logprob: -3.7283947467803955
    4. ':
' → logprob: -9.478394508361816
    5. ',' → logprob: -10.103394508361816
    6. '():' → logprob: -10.978394508361816
    7. '):

' → logprob: -11.353394508361816
    8. '):
' → logprob: -12.353394508361816
    9. '}:' → logprob: -12.353394508361816
    10. ']:' → logprob: -12.478394508361816

Token 126: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.07205770909786224
    2. '           ' → logprob: -3.4470577239990234
    3. ' s' → logprob: -3.8220577239990234
    4. '       ' → logprob: -4.447057723999023
    5. 's' → logprob: -6.072057723999023
    6. ' ' → logprob: -7.447057723999023
    7. '   ' → logprob: -8.322057723999023
    8. '                
' → logprob: -9.072057723999023
    9. ' ' → logprob: -9.072057723999023
    10. '                   ' → logprob: -9.197057723999023

Token 127: ' t' (ID: 260)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.12715867161750793
    2. ' s' → logprob: -2.1271586418151855
    3. '               ' → logprob: -9.127159118652344
    4. '                   ' → logprob: -9.252159118652344
    5. '           ' → logprob: -11.002159118652344
    6. 'sum' → logprob: -12.752159118652344
    7. '   ' → logprob: -13.252159118652344
    8. '                       ' → logprob: -14.127159118652344
    9. '       ' → logprob: -14.377159118652344
    10. ' ' → logprob: -14.377159118652344

Token 128: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01823352836072445
    2. '=' → logprob: -4.018233299255371
    3. 's' → logprob: -9.768233299255371
    4. '=c' → logprob: -11.268233299255371
    5. '=s' → logprob: -12.018233299255371
    6. 'c' → logprob: -12.143233299255371
    7. '	' → logprob: -13.893233299255371
    8. ' ' → logprob: -14.518233299255371
    9. ' ' → logprob: -15.768233299255371
    10. ' +=' → logprob: -16.018234252929688

Token 129: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.08052718639373779
    2. ' s' → logprob: -2.5805273056030273
    3. 'a' → logprob: -6.455527305603027
    4. ' a' → logprob: -9.830527305603027
    5. 'c' → logprob: -12.330527305603027
    6. 'b' → logprob: -12.830527305603027
    7. ' ' → logprob: -13.705527305603027
    8. '   ' → logprob: -14.330527305603027
    9. ' c' → logprob: -14.455527305603027
    10. '	s' → logprob: -14.955527305603027

Token 130: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.16037897765636444
    2. '+' → logprob: -1.9103789329528809
    3. '+c' → logprob: -8.785379409790039
    4. ' plus' → logprob: -14.160379409790039
    5. ' +
' → logprob: -15.035379409790039
    6. ' ' → logprob: -15.660379409790039
    7. '+t' → logprob: -15.785379409790039
    8. ' ' → logprob: -15.910379409790039
    9. ' +=' → logprob: -16.28537940979004
    10. 'c' → logprob: -16.28537940979004

Token 131: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.005235291086137295
    2. ' c' → logprob: -5.255235195159912
    3. '   ' → logprob: -13.75523567199707
    4. ' ' → logprob: -15.63023567199707
    5. '	c' → logprob: -15.75523567199707
    6. '
' → logprob: -16.50523567199707
    7. '(c' → logprob: -16.88023567199707
    8. '  ' → logprob: -17.50523567199707
    9. ')c' → logprob: -18.50523567199707
    10. '*c' → logprob: -18.63023567199707

Token 132: '*c' (ID: 83421)
  Prédit: '*c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*c' → logprob: -5.319370302458992e-06
    2. '*' → logprob: -12.500005722045898
    3. ' *' → logprob: -13.500005722045898
    4. 'c' → logprob: -16.7500057220459
    5. '**' → logprob: -17.2500057220459
    6. '*t' → logprob: -18.1250057220459
    7. '*p' → logprob: -18.8750057220459
    8. '*i' → logprob: -19.0000057220459
    9. '*C' → logprob: -19.0000057220459
    10. '*(' → logprob: -19.2500057220459

Token 133: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.003459775587543845
    2. ' if' → logprob: -6.503459930419922
    3. 'if' → logprob: -7.003459930419922
    4. '<|end|>' → logprob: -7.128459930419922
    5. '                ' → logprob: -9.878459930419922
    6. '			' → logprob: -10.128459930419922
    7. '<|end|>' → logprob: -10.503459930419922
    8. '                   ' → logprob: -10.628459930419922
    9. '              ' → logprob: -10.753459930419922
    10. '           ' → logprob: -10.878459930419922

Token 134: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.002708819229155779
    2. ' if' → logprob: -6.127708911895752
    3. '<|end|>' → logprob: -8.377708435058594
    4. 'if' → logprob: -8.627708435058594
    5. '			' → logprob: -10.377708435058594
    6. '                ' → logprob: -11.002708435058594
    7. '<|end|>' → logprob: -11.377708435058594
    8. '           ' → logprob: -11.377708435058594
    9. '	           ' → logprob: -11.627708435058594
    10. '                   ' → logprob: -12.002708435058594

Token 135: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5897975564002991
    2. 'if' (adapté à ' if') → logprob: -1.0897974967956543
    3. '               ' → logprob: -2.2147974967956543
    4. '                ' → logprob: -9.714797973632812
    5. '                   ' → logprob: -11.589797973632812
    6. ' ' → logprob: -11.714797973632812
    7. '              ' → logprob: -12.214797973632812
    8. '           ' → logprob: -12.339797973632812
    9. '```' → logprob: -12.714797973632812
    10. '=' → logprob: -13.839797973632812

Token 136: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.20141440629959106
    2. ' t' → logprob: -1.7014143466949463
    3. '`t' → logprob: -14.701414108276367
    4. '	t' → logprob: -15.326414108276367
    5. ' ' → logprob: -16.076414108276367
    6. ' ' → logprob: -16.326414108276367
    7. '   ' → logprob: -16.451414108276367
    8. '               ' → logprob: -16.826414108276367
    9. '                   ' → logprob: -16.951414108276367
    10. '
' → logprob: -17.326414108276367

Token 137: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.018150994554162025
    2. '>' → logprob: -4.018150806427002
    3. ' ' → logprob: -14.14315128326416
    4. ' ' → logprob: -15.76815128326416
    5. '<|end|>' → logprob: -15.89315128326416
    6. ' >
' → logprob: -17.018150329589844
    7. '">' → logprob: -17.518150329589844
    8. ' >

' → logprob: -17.768150329589844
    9. ')' → logprob: -18.143150329589844
    10. ' >
' → logprob: -18.393150329589844

Token 138: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.10020699352025986
    2. ' n' → logprob: -2.3502070903778076
    3. '	n' → logprob: -15.225207328796387
    4. ' ' → logprob: -17.22520637512207
    5. 'n't' → logprob: -17.60020637512207
    6. ')n' → logprob: -17.60020637512207
    7. '
' → logprob: -18.10020637512207
    8. '(n' → logprob: -18.35020637512207
    9. '```' → logprob: -18.60020637512207
    10. '<|end|>' → logprob: -18.72520637512207

Token 139: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.7761247158050537
    2. ':' → logprob: -0.9011247158050537
    3. '                   ' → logprob: -2.4011247158050537
    4. '               ' → logprob: -3.1511247158050537
    5. '):
' → logprob: -9.901124954223633
    6. 'break' → logprob: -9.901124954223633
    7. '                       ' → logprob: -10.026124954223633
    8. '           ' → logprob: -10.526124954223633
    9. ':

' → logprob: -10.901124954223633
    10. '{
' → logprob: -11.276124954223633

Token 140: '                   ' (ID: 699)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.6069132089614868
    2. '                   ' → logprob: -0.8569132089614868
    3. '               ' → logprob: -3.6069130897521973
    4. ' break' → logprob: -5.731913089752197
    5. '           ' → logprob: -10.106913566589355
    6. '	break' → logprob: -10.231913566589355
    7. '                       ' → logprob: -10.731913566589355
    8. '```' → logprob: -11.731913566589355
    9. '				' → logprob: -12.106913566589355
    10. '   ' → logprob: -12.606913566589355

Token 141: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.0015096203424036503
    2. ' break' → logprob: -6.751509666442871
    3. '                   ' → logprob: -8.001509666442871
    4. '                       ' → logprob: -13.126509666442871
    5. '               ' → logprob: -13.751509666442871
    6. '	break' → logprob: -13.876509666442871
    7. 'return' → logprob: -15.501509666442871
    8. '```' → logprob: -17.376508712768555
    9. '_break' → logprob: -17.376508712768555
    10. '   ' → logprob: -17.626508712768555

Token 142: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0002843384863808751
    2. '                
' → logprob: -8.750284194946289
    3. '                ' → logprob: -10.375284194946289
    4. '                   ' → logprob: -10.375284194946289
    5. '			' → logprob: -10.625284194946289
    6. '              ' → logprob: -11.250284194946289
    7. '           ' → logprob: -11.375284194946289
    8. '
' → logprob: -12.500284194946289
    9. 't' → logprob: -13.625284194946289
    10. '             ' → logprob: -14.000284194946289

Token 143: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.004880415741354227
    2. 'if' → logprob: -5.379880428314209
    3. '           ' → logprob: -9.12987995147705
    4. '                   ' → logprob: -9.62987995147705
    5. ' if' → logprob: -10.37987995147705
    6. '              ' → logprob: -11.37987995147705
    7. '
' → logprob: -11.62987995147705
    8. '```' → logprob: -11.62987995147705
    9. '                
' → logprob: -11.75487995147705
    10. '			' → logprob: -12.00487995147705

Token 144: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.001358209759928286
    2. '               ' → logprob: -6.7513580322265625
    3. ' if' → logprob: -8.626358032226562
    4. '           ' → logprob: -11.751358032226562
    5. '                   ' → logprob: -14.751358032226562
    6. '```' → logprob: -15.001358032226562
    7. 'If' → logprob: -17.626358032226562
    8. '              ' → logprob: -17.626358032226562
    9. '
' → logprob: -17.876358032226562
    10. '   ' → logprob: -18.251358032226562

Token 145: ' t' (ID: 260)
  Prédit: ' t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.4740777611732483
    2. 't' → logprob: -0.9740777611732483
    3. '(t' → logprob: -15.349078178405762
    4. ' ' → logprob: -15.724078178405762
    5. '`t' → logprob: -16.099077224731445
    6. '	t' → logprob: -16.224077224731445
    7. '```' → logprob: -16.974077224731445
    8. 'c' → logprob: -17.474077224731445
    9. ' ' → logprob: -17.474077224731445
    10. '(' → logprob: -17.849077224731445

Token 146: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.16022777557373047
    2. '==' → logprob: -1.9102277755737305
    3. '=' → logprob: -13.53522777557373
    4. ')==' → logprob: -14.28522777557373
    5. '===' → logprob: -14.78522777557373
    6. ']==' → logprob: -15.16022777557373
    7. ' ' → logprob: -15.28522777557373
    8. '==
' → logprob: -15.41022777557373
    9. ' =' → logprob: -15.53522777557373
    10. ' ' → logprob: -15.78522777557373

Token 147: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.5759400725364685
    2. 'n' → logprob: -0.8259400725364685
    3. '	n' → logprob: -15.075940132141113
    4. ' ' → logprob: -15.575940132141113
    5. ')n' → logprob: -16.950939178466797
    6. '(n' → logprob: -17.200939178466797
    7. ' ' → logprob: -17.450939178466797
    8. '_n' → logprob: -17.950939178466797
    9. ' н' → logprob: -18.075939178466797
    10. '$n' → logprob: -18.325939178466797

Token 148: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.09019429236650467
    2. ':
' → logprob: -2.4651942253112793
    3. '                   ' → logprob: -6.840194225311279
    4. '               ' → logprob: -8.840194702148438
    5. ',' → logprob: -11.590194702148438
    6. ':return' → logprob: -11.840194702148438
    7. '<|end|>' → logprob: -12.090194702148438
    8. '):
' → logprob: -12.090194702148438
    9. '                       ' → logprob: -12.840194702148438
    10. ':

' → logprob: -12.840194702148438

Token 149: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.016981082037091255
    2. 'count' → logprob: -4.14198112487793
    3. '               ' → logprob: -7.26698112487793
    4. ' count' → logprob: -8.51698112487793
    5. '                  ' → logprob: -10.76698112487793
    6. '                ' → logprob: -11.89198112487793
    7. '                 ' → logprob: -12.39198112487793
    8. '                       ' → logprob: -12.39198112487793
    9. '{
' → logprob: -12.64198112487793
    10. '           ' → logprob: -13.26698112487793

Token 150: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' (adapté à ' count') → logprob: -0.165449857711792
    2. ' count' → logprob: -1.915449857711792
    3. '                   ' → logprob: -5.290450096130371
    4. '               ' → logprob: -9.040450096130371
    5. '                       ' → logprob: -10.040450096130371
    6. '                    ' → logprob: -12.665450096130371
    7. '                ' → logprob: -12.915450096130371
    8. ' ' → logprob: -13.665450096130371
    9. '   ' → logprob: -13.915450096130371
    10. '                  ' → logprob: -14.540450096130371

Token 151: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.10023427754640579
    2. '+=' → logprob: -2.350234270095825
    3. '+' → logprob: -10.725234031677246
    4. ' +' → logprob: -13.475234031677246
    5. ']+=' → logprob: -13.475234031677246
    6. '                   ' → logprob: -14.600234031677246
    7. '                    ' → logprob: -14.850234031677246
    8. '            ' → logprob: -15.100234031677246
    9. '    ' → logprob: -15.475234031677246
    10. ' ' → logprob: -15.725234031677246

Token 152: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.054883070290088654
    2. ' ' → logprob: -2.9298830032348633
    3. '                   ' → logprob: -14.929883003234863
    4. '   ' → logprob: -15.929883003234863
    5. '               ' → logprob: -16.30488395690918
    6. '```' → logprob: -16.80488395690918
    7. '                       ' → logprob: -17.05488395690918
    8. '           ' → logprob: -17.11738395690918
    9. '<|end|>' → logprob: -17.55488395690918
    10. '0' → logprob: -18.11738395690918

Token 153: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.842555426876061e-06
    2. ' ' → logprob: -12.250004768371582
    3. '   ' → logprob: -19.1250057220459
    4. '```' → logprob: -19.2500057220459
    5. '<|end|>' → logprob: -20.8750057220459
    6. '           ' → logprob: -21.1250057220459
    7. '１' → logprob: -21.2500057220459
    8. '
' → logprob: -21.6875057220459
    9. '۱' → logprob: -21.7500057220459
    10. '       ' → logprob: -22.0000057220459

Token 154: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.6921244859695435
    2. '               ' → logprob: -1.8171244859695435
    3. 'return' → logprob: -2.067124366760254
    4. '
' → logprob: -2.942124366760254
    5. ' return' → logprob: -3.067124366760254
    6. '<|end|>' → logprob: -3.317124366760254
    7. '                    
' → logprob: -4.317124366760254
    8. '       ' → logprob: -4.442124366760254
    9. '                       ' → logprob: -4.567124366760254
    10. '           ' → logprob: -4.942124366760254

Token 155: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.12469490617513657
    2. 'return' → logprob: -2.87469482421875
    3. ' return' → logprob: -3.49969482421875
    4. '               ' → logprob: -3.87469482421875
    5. '                       ' → logprob: -5.99969482421875
    6. '                    
' → logprob: -5.99969482421875
    7. '       ' → logprob: -6.37469482421875
    8. '                    ' → logprob: -7.37469482421875
    9. '<|end|>' → logprob: -7.62469482421875
    10. '           ' → logprob: -7.99969482421875

Token 156: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.3591209650039673
    2. ' continue' → logprob: -1.4841209650039673
    3. 'return' → logprob: -2.9841208457946777
    4. ' return' → logprob: -3.9841208457946777
    5. '                   ' → logprob: -5.734120845794678
    6. '               ' → logprob: -6.359120845794678
    7. 'break' → logprob: -7.734120845794678
    8. '                       ' → logprob: -8.484121322631836
    9. ' break' → logprob: -9.234121322631836
    10. '```' → logprob: -9.734121322631836

Token 157: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 158: '               ' (ID: 506)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.942623496055603
    2. '               ' → logprob: -1.192623496055603
    3. '<|end|>' → logprob: -1.817623496055603
    4. 'return' → logprob: -2.9426236152648926
    5. '   ' → logprob: -3.0676236152648926
    6. '                               ' → logprob: -4.567623615264893
    7. '           ' → logprob: -4.567623615264893
    8. ' return' → logprob: -4.692623615264893
    9. '	return' → logprob: -5.942623615264893
    10. '                   ' → logprob: -6.442623615264893

Token 159: ' d' (ID: 272)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0004752367385663092
    2. 'd' (adapté à ' d') → logprob: -8.25047492980957
    3. ' for' → logprob: -8.50047492980957
    4. '           ' → logprob: -12.87547492980957
    5. '```' → logprob: -13.00047492980957
    6. '       ' → logprob: -13.37547492980957
    7. '               ' → logprob: -13.62547492980957
    8. '<|end|>' → logprob: -14.50047492980957
    9. '
' → logprob: -14.75047492980957
    10. '   ' → logprob: -14.87547492980957

Token 160: '2' (ID: 17)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8639235496520996
    2. 'for' → logprob: -1.3639235496520996
    3. '=' → logprob: -1.7389235496520996
    4. 'ef' → logprob: -2.3639235496520996
    5. ' for' → logprob: -3.6139235496520996
    6. ' in' → logprob: -4.4889235496521
    7. 'f' → logprob: -5.1139235496521
    8. ' ' → logprob: -6.1139235496521
    9. 'ex' → logprob: -6.7389235496521
    10. 'in' → logprob: -7.1139235496521

Token 161: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11290909349918365
    2. '=' → logprob: -2.2379090785980225
    3. 's' → logprob: -9.737909317016602
    4. ' ' → logprob: -11.112909317016602
    5. '<|end|>' → logprob: -12.112909317016602
    6. ')' → logprob: -13.487909317016602
    7. ' ' → logprob: -14.112909317016602
    8. 'space' → logprob: -14.487909317016602
    9. ' =
' → logprob: -14.612909317016602
    10. 'd' → logprob: -14.612909317016602

Token 162: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.001930301426909864
    2. ' n' → logprob: -6.251930236816406
    3. 'int' → logprob: -14.376930236816406
    4. 't' → logprob: -14.626930236816406
    5. '(n' → logprob: -15.001930236816406
    6. '	n' → logprob: -16.126930236816406
    7. '   ' → logprob: -16.376930236816406
    8. ' ' → logprob: -16.626930236816406
    9. 'd' → logprob: -17.126930236816406
    10. 'math' → logprob: -17.251930236816406

Token 163: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.08899475634098053
    2. '-' → logprob: -2.4639947414398193
    3. '-t' → logprob: -10.588994979858398
    4. '-d' → logprob: -12.088994979858398
    5. '-token' → logprob: -12.588994979858398
    6. ' ' → logprob: -12.588994979858398
    7. '<|end|>' → logprob: -12.588994979858398
    8. '-k' → logprob: -12.963994979858398
    9. '-import' → logprob: -13.588994979858398
    10. '-n' → logprob: -13.838994979858398

Token 164: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -4.0484450437361374e-05
    2. ' t' → logprob: -10.125040054321289
    3. '	t' → logprob: -15.500040054321289
    4. '`t' → logprob: -16.75004005432129
    5. '(t' → logprob: -17.00004005432129
    6. '   ' → logprob: -18.37504005432129
    7. ' ' → logprob: -18.37504005432129
    8. ''t' → logprob: -18.50004005432129
    9. '_t' → logprob: -18.62504005432129
    10. '               ' → logprob: -18.62504005432129

Token 165: '
' (ID: 198)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.6461036801338196
    2. '               ' → logprob: -1.5211036205291748
    3. ' if' → logprob: -1.7711036205291748
    4. 'if' → logprob: -2.646103620529175
    5. ' d' → logprob: -4.646103858947754
    6. '
' → logprob: -6.146103858947754
    7. ' for' → logprob: -6.396103858947754
    8. 'for' → logprob: -6.896103858947754
    9. '```' → logprob: -7.521103858947754
    10. '                   ' → logprob: -7.896103858947754

Token 166: '               ' (ID: 506)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.11775275319814682
    2. '               ' → logprob: -2.99275279045105
    3. '       ' → logprob: -3.24275279045105
    4. 'import' → logprob: -4.492752552032471
    5. '           ' → logprob: -4.742752552032471
    6. ' d' → logprob: -6.367752552032471
    7. '   ' → logprob: -9.242753028869629
    8. ' import' → logprob: -9.617753028869629
    9. 'if' → logprob: -10.492753028869629
    10. '```' → logprob: -10.617753028869629

Token 167: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' (adapté à ' d') → logprob: -0.0020362993236631155
    2. '               ' → logprob: -6.377036094665527
    3. 'if' → logprob: -9.002036094665527
    4. ' d' → logprob: -9.127036094665527
    5. 'import' → logprob: -9.627036094665527
    6. '                   ' → logprob: -11.377036094665527
    7. 'root' → logprob: -12.127036094665527
    8. '   ' → logprob: -12.627036094665527
    9. '           ' → logprob: -12.752036094665527
    10. 'sqrt' → logprob: -12.752036094665527

Token 168: ' =' (ID: 314)
  Prédit: '_s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.9693573713302612
    2. ' =' → logprob: -1.5943573713302612
    3. '=' → logprob: -1.7193573713302612
    4. '_' → logprob: -2.594357490539551
    5. '_root' → logprob: -2.719357490539551
    6. '2' → logprob: -2.969357490539551
    7. 's' → logprob: -3.844357490539551
    8. '_sq' → logprob: -4.969357490539551
    9. '_square' → logprob: -5.344357490539551
    10. '_squared' → logprob: -5.344357490539551

Token 169: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.00021962920436635613
    2. 'math' → logprob: -9.000219345092773
    3. ' int' → logprob: -9.250219345092773
    4. ' math' → logprob: -16.500219345092773
    5. 'is' → logprob: -17.875219345092773
    6. '(int' → logprob: -19.000219345092773
    7. '=int' → logprob: -19.000219345092773
    8. '	int' → logprob: -20.375219345092773
    9. '[int' → logprob: -20.500219345092773
    10. ':int' → logprob: -21.375219345092773

Token 170: '(math' (ID: 86464)
  Prédit: '(math'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(math' → logprob: -0.005446008872240782
    2. '(d' → logprob: -5.255445957183838
    3. 'math' → logprob: -8.505446434020996
    4. '(round' → logprob: -11.880446434020996
    5. 'd' → logprob: -13.505446434020996
    6. ' math' → logprob: -13.755446434020996
    7. '(m' → logprob: -15.380446434020996
    8. '(s' → logprob: -15.880446434020996
    9. '(' → logprob: -16.00544548034668
    10. '.math' → logprob: -17.75544548034668

Token 171: '.is' (ID: 3109)
  Prédit: '.is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.is' → logprob: -0.0030619686003774405
    2. '.sqrt' → logprob: -6.003061771392822
    3. 'is' → logprob: -7.503061771392822
    4. 'sqrt' → logprob: -10.62806224822998
    5. '.' → logprob: -12.00306224822998
    6. '.math' → logprob: -13.62806224822998
    7. 'math' → logprob: -13.75306224822998
    8. ' .' → logprob: -13.87806224822998
    9. '```' → logprob: -14.87806224822998
    10. ')is' → logprob: -15.25306224822998

Token 172: 'qrt' (ID: 17629)
  Prédit: 'qrt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'qrt' → logprob: -0.0001238004770129919
    2. 'sqrt' → logprob: -9.000123977661133
    3. 'q' → logprob: -15.500123977661133
    4. 'r' → logprob: -15.625123977661133
    5. 'rt' → logprob: -18.125123977661133
    6. 'd' → logprob: -18.250123977661133
    7. 'qr' → logprob: -18.500123977661133
    8. 't' → logprob: -19.375123977661133
    9. 'sq' → logprob: -19.500123977661133
    10. 'qrst' → logprob: -19.500123977661133

Token 173: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.0002669384120963514
    2. 'd' → logprob: -8.625267028808594
    3. '(' → logprob: -9.375267028808594
    4. ' (' → logprob: -13.125267028808594
    5. ')d' → logprob: -15.500267028808594
    6. '(
' → logprob: -15.875267028808594
    7. ')(' → logprob: -16.000267028808594
    8. ')' → logprob: -17.250267028808594
    9. ' d' → logprob: -17.250267028808594
    10. '	d' → logprob: -18.750267028808594

Token 174: '2' (ID: 17)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.035206325352191925
    2. '2' → logprob: -3.6602063179016113
    3. '(d' → logprob: -5.160206317901611
    4. ' d' → logprob: -6.285206317901611
    5. '(' → logprob: -7.035206317901611
    6. ')d' → logprob: -8.91020679473877
    7. ')' → logprob: -9.53520679473877
    8. 's' → logprob: -9.66020679473877
    9. ' (' → logprob: -10.03520679473877
    10. '_d' → logprob: -10.66020679473877

Token 175: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1609027087688446
    2. '))' → logprob: -1.910902738571167
    3. ')
' → logprob: -7.785902500152588
    4. '))
' → logprob: -9.535902976989746
    5. ' )' → logprob: -9.535902976989746
    6. ')d' → logprob: -9.910902976989746
    7. '(' → logprob: -10.910902976989746
    8. 'd' → logprob: -11.035902976989746
    9. '())' → logprob: -11.410902976989746
    10. '(d' → logprob: -11.660902976989746

Token 176: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.29104945063591003
    2. ' if' → logprob: -1.5410494804382324
    3. 'if' → logprob: -3.6660494804382324
    4. '       ' → logprob: -4.916049480438232
    5. '           ' → logprob: -6.041049480438232
    6. '                   ' → logprob: -7.416049480438232
    7. '                ' → logprob: -7.666049480438232
    8. '   ' → logprob: -7.916049480438232
    9. '                               ' → logprob: -8.041049003601074
    10. '                
' → logprob: -8.041049003601074

Token 177: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.6738294363021851
    2. ' if' → logprob: -0.7988294363021851
    3. '               ' → logprob: -3.5488295555114746
    4. ' 
' → logprob: -5.673829555511475
    5. '                ' → logprob: -5.798829555511475
    6. '
' → logprob: -6.548829555511475
    7. '                
' → logprob: -7.298829555511475
    8. ' ' → logprob: -7.423829555511475
    9. '<|end|>' → logprob: -7.798829555511475
    10. '       ' → logprob: -7.798829555511475

Token 178: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.1269323080778122
    2. 'd' → logprob: -2.126932382583618
    3. '(d' → logprob: -13.501932144165039
    4. '	d' → logprob: -13.501932144165039
    5. '   ' → logprob: -14.751932144165039
    6. ' ' → logprob: -14.751932144165039
    7. '
' → logprob: -15.751932144165039
    8. '  ' → logprob: -16.50193214416504
    9. ')d' → logprob: -16.62693214416504
    10. '_d' → logprob: -17.00193214416504

Token 179: ' >=' (ID: 5064)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.5278422832489014
    2. ' *' → logprob: -1.7778422832489014
    3. '*d' → logprob: -1.7778422832489014
    4. ' >=' → logprob: -2.7778422832489014
    5. '>=' → logprob: -4.6528425216674805
    6. ' <=' → logprob: -8.90284252166748
    7. ' >' → logprob: -9.27784252166748
    8. 'd' → logprob: -9.77784252166748
    9. '>' → logprob: -10.52784252166748
    10. '<=' → logprob: -10.77784252166748

Token 180: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -2.15310683415737e-05
    2. ' c' → logprob: -10.750021934509277
    3. 'd' → logprob: -17.62502098083496
    4. '	c' → logprob: -18.87502098083496
    5. '(c' → logprob: -19.62502098083496
    6. '=c' → logprob: -20.12502098083496
    7. '```' → logprob: -21.12502098083496
    8. 'с' → logprob: -21.25002098083496
    9. '
' → logprob: -21.25002098083496
    10. ')c' → logprob: -21.37502098083496

Token 181: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.3132648468017578
    2. 'and' → logprob: -1.3132648468017578
    3. ' ' → logprob: -13.188264846801758
    4. '	and' → logprob: -14.313264846801758
    5. '   ' → logprob: -15.688264846801758
    6. ':
' → logprob: -16.563264846801758
    7. '
' → logprob: -16.688264846801758
    8. ':' → logprob: -16.813264846801758
    9. '               ' → logprob: -17.313264846801758
    10. ')' → logprob: -17.438264846801758

Token 182: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.048593614250421524
    2. ' d' → logprob: -3.048593521118164
    3. '   ' → logprob: -13.048593521118164
    4. '	d' → logprob: -13.048593521118164
    5. '(d' → logprob: -14.173593521118164
    6. '*d' → logprob: -15.298593521118164
    7. '
' → logprob: -15.548593521118164
    8. ' ' → logprob: -15.673593521118164
    9. '  ' → logprob: -15.923593521118164
    10. '_d' → logprob: -16.298593521118164

Token 183: '*d' (ID: 81685)
  Prédit: '*d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*d' → logprob: -0.008624974638223648
    2. ' *' → logprob: -4.758625030517578
    3. '*' → logprob: -11.758625030517578
    4. '*c' → logprob: -14.258625030517578
    5. '**' → logprob: -14.758625030517578
    6. '2' → logprob: -15.258625030517578
    7. 'd' → logprob: -15.508625030517578
    8. '*object' → logprob: -15.633625030517578
    9. '*a' → logprob: -15.758625030517578
    10. ' ' → logprob: -15.883625030517578

Token 184: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.5759717226028442
    2. '==' → logprob: -0.8259717226028442
    3. '=' → logprob: -10.825971603393555
    4. '()==' → logprob: -12.200971603393555
    5. ' ' → logprob: -12.950971603393555
    6. ']==' → logprob: -13.700971603393555
    7. ')==' → logprob: -13.950971603393555
    8. '===' → logprob: -14.075971603393555
    9. '==
' → logprob: -14.075971603393555
    10. '()' → logprob: -14.825971603393555

Token 185: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.20141568779945374
    2. ' d' → logprob: -1.7014156579971313
    3. '	d' → logprob: -13.826416015625
    4. ' ' → logprob: -14.451416015625
    5. '   ' → logprob: -15.326416015625
    6. 'n' → logprob: -15.951416015625
    7. '>d' → logprob: -15.951416015625
    8. ')d' → logprob: -16.326416015625
    9. '(d' → logprob: -17.076416015625
    10. '_d' → logprob: -17.201416015625

Token 186: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.125
    3. '<|end|>' → logprob: -16.5
    4. '₂' → logprob: -16.625
    5. 'd' → logprob: -17.75
    6. '۲' → logprob: -17.75
    7. '²' → logprob: -18.0
    8. '_' → logprob: -18.0
    9. '```' → logprob: -18.375
    10. '   ' → logprob: -18.8125

Token 187: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.31335553526878357
    2. ':
' → logprob: -1.313355565071106
    3. '):
' → logprob: -9.438355445861816
    4. '):' → logprob: -12.813355445861816
    5. ':
' → logprob: -13.063355445861816
    6. ' :
' → logprob: -13.313355445861816
    7. '():
' → logprob: -13.688355445861816
    8. ':

' → logprob: -13.813355445861816
    9. '                   ' → logprob: -13.813355445861816
    10. '           ' → logprob: -13.813355445861816

Token 188: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0005271765403449535
    2. 'count' → logprob: -8.000527381896973
    3. '                       ' → logprob: -8.875527381896973
    4. '                           ' → logprob: -11.125527381896973
    5. ' count' → logprob: -11.750527381896973
    6. '               ' → logprob: -12.125527381896973
    7. '                  ' → logprob: -12.375527381896973
    8. '[count' → logprob: -12.625527381896973
    9. '(count' → logprob: -12.750527381896973
    10. '
' → logprob: -13.000527381896973

Token 189: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' (adapté à ' count') → logprob: -0.01111419778317213
    2. ' count' → logprob: -4.511114120483398
    3. '                   ' → logprob: -10.261114120483398
    4. '                       ' → logprob: -10.386114120483398
    5. '	count' → logprob: -15.886114120483398
    6. '               ' → logprob: -16.1361141204834
    7. '   ' → logprob: -16.3861141204834
    8. ' ' → logprob: -16.3861141204834
    9. '
' → logprob: -17.3861141204834
    10. '[count' → logprob: -18.0111141204834

Token 190: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.007611243985593319
    2. '+=' → logprob: -4.882611274719238
    3. '+' → logprob: -13.632611274719238
    4. '                    ' → logprob: -14.257611274719238
    5. '                ' → logprob: -14.382611274719238
    6. '                   ' → logprob: -14.757611274719238
    7. ' +' → logprob: -14.882611274719238
    8. ' ' → logprob: -15.132611274719238
    9. ']+=' → logprob: -15.132611274719238
    10. '    ' → logprob: -15.507611274719238

Token 191: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03364615887403488
    2. ' ' → logprob: -3.4086461067199707
    3. '   ' → logprob: -15.908646583557129
    4. '<|end|>' → logprob: -16.346145629882812
    5. '```' → logprob: -16.908645629882812
    6. '  ' → logprob: -17.346145629882812
    7. '+' → logprob: -17.471145629882812
    8. ' ' → logprob: -17.533645629882812
    9. '                   ' → logprob: -17.596145629882812
    10. '           ' → logprob: -17.971145629882812

Token 192: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.941850526549388e-06
    2. ' ' → logprob: -11.750007629394531
    3. '   ' → logprob: -18.37500762939453
    4. '```' → logprob: -18.62500762939453
    5. '           ' → logprob: -19.75000762939453
    6. '
' → logprob: -19.75000762939453
    7. '<|end|>' → logprob: -20.31250762939453
    8. '１' → logprob: -20.56250762939453
    9. '       ' → logprob: -20.81250762939453
    10. '۱' → logprob: -20.87500762939453

Token 193: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09380827844142914
    2. 'return' → logprob: -2.968808174133301
    3. '
' → logprob: -3.718808174133301
    4. ' return' → logprob: -4.343808174133301
    5. '    
' → logprob: -7.218808174133301
    6. '	return' → logprob: -9.7188081741333
    7. '       ' → logprob: -9.8438081741333
    8. ' 
' → logprob: -10.8438081741333
    9. '```' → logprob: -10.9688081741333
    10. ':return' → logprob: -11.8438081741333

Token 194: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02782488986849785
    2. 'return' → logprob: -3.777824878692627
    3. ' return' → logprob: -5.527824878692627
    4. '
' → logprob: -7.527824878692627
    5. '       ' → logprob: -10.902825355529785
    6. '    
' → logprob: -11.027825355529785
    7. '	return' → logprob: -12.027825355529785
    8. '```' → logprob: -12.027825355529785
    9. '                   ' → logprob: -12.777825355529785
    10. '               ' → logprob: -13.402825355529785

Token 195: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.004123280756175518
    2. ' return' → logprob: -5.754123210906982
    3. '   ' → logprob: -7.004123210906982
    4. '
' → logprob: -10.87912368774414
    5. '	return' → logprob: -11.62912368774414
    6. '    
' → logprob: -12.50412368774414
    7. ' ' → logprob: -13.37912368774414
    8. ':return' → logprob: -13.37912368774414
    9. '       ' → logprob: -13.62912368774414
    10. '  
' → logprob: -15.37912368774414

Token 196: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.01416350994259119
    2. ' count' → logprob: -4.264163494110107
    3. '[count' → logprob: -20.139163970947266
    4. '	count' → logprob: -20.514163970947266
    5. '(count' → logprob: -20.514163970947266
    6. ' ' → logprob: -20.764163970947266
    7. 'counts' → logprob: -21.389163970947266
    8. '<count' → logprob: -21.639163970947266
    9. '$count' → logprob: -22.264163970947266
    10. '_count' → logprob: -22.639163970947266

Token 197: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.55428147315979
    2. '<|end|>' → logprob: -1.05428147315979
    3. '\n' → logprob: -2.67928147315979
    4. '#' → logprob: -5.929281234741211
    5. 'n' → logprob: -6.679281234741211
    6. ')' → logprob: -6.804281234741211
    7. '\' → logprob: -6.929281234741211
    8. '```' → logprob: -7.304281234741211
    9. '<|end|>' → logprob: -7.804281234741211
    10. 'newline' → logprob: -7.804281234741211

Token 198: 'for' (ID: 1938)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3067578673362732
    2. '#' → logprob: -1.431757926940918
    3. '\n' → logprob: -4.806757926940918
    4. 'print' → logprob: -4.931757926940918
    5. 'for' → logprob: -5.681757926940918
    6. '
' → logprob: -6.681757926940918
    7. '```' → logprob: -6.681757926940918
    8. '<|end|>' → logprob: -6.806757926940918
    9. 'if' → logprob: -8.056757926940918
    10. '.' → logprob: -8.056757926940918

Token 199: ' line' (ID: 2543)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.25210168957710266
    2. ' n' → logprob: -2.3771016597747803
    3. ' num' → logprob: -2.8771016597747803
    4. ' x' → logprob: -3.8771016597747803
    5. ' line' → logprob: -3.8771016597747803
    6. ' _' → logprob: -4.252101898193359
    7. ' arg' → logprob: -4.377101898193359
    8. ' number' → logprob: -5.752101898193359
    9. ' ' → logprob: -6.627101898193359
    10. ' value' → logprob: -8.25210189819336

Token 200: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0014526135055348277
    2. 'in' → logprob: -6.626452445983887
    3. ' ' → logprob: -9.001452445983887
    4. '  ' → logprob: -13.626452445983887
    5. ' ' → logprob: -14.626452445983887
    6. '	in' → logprob: -14.751452445983887
    7. '_' → logprob: -14.876452445983887
    8. 's' → logprob: -15.376452445983887
    9. ' i' → logprob: -15.626452445983887
    10. '```' → logprob: -16.251453399658203

Token 201: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.6931591629981995
    2. 'sys' → logprob: -0.6931591629981995
    3. '=sys' → logprob: -11.693159103393555
    4. '	sys' → logprob: -12.818159103393555
    5. '(sys' → logprob: -14.068159103393555
    6. 'stdin' → logprob: -17.068159103393555
    7. 's' → logprob: -17.443159103393555
    8. 'in' → logprob: -18.443159103393555
    9. '.sys' → logprob: -18.443159103393555
    10. '```' → logprob: -18.943159103393555

Token 202: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.0058047170750796795
    2. '.readline' → logprob: -5.755804538726807
    3. '.' → logprob: -6.130804538726807
    4. 'stdin' → logprob: -8.255805015563965
    5. '.argv' → logprob: -9.380805015563965
    6. '(stdin' → logprob: -9.880805015563965
    7. '.stdout' → logprob: -10.880805015563965
    8. '.readlines' → logprob: -11.005805015563965
    9. '.setdefault' → logprob: -12.880805015563965
    10. 'import' → logprob: -13.130805015563965

Token 203: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01567099615931511
    2. '.readline' → logprob: -4.2656707763671875
    3. ':
' → logprob: -7.1406707763671875
    4. '.' → logprob: -7.7656707763671875
    5. '.readlines' → logprob: -8.765670776367188
    6. '.strip' → logprob: -9.390670776367188
    7. '):' → logprob: -11.640670776367188
    8. ' :' → logprob: -11.890670776367188
    9. '.rstrip' → logprob: -12.390670776367188
    10. '>' → logprob: -12.515670776367188

Token 204: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21627458930015564
    2. 'n' → logprob: -2.2162744998931885
    3. ' n' → logprob: -2.4662744998931885
    4. '	n' → logprob: -8.46627426147461
    5. '    
' → logprob: -8.71627426147461
    6. '(n' → logprob: -10.09127426147461
    7. ',n' → logprob: -10.46627426147461
    8. '_n' → logprob: -11.09127426147461
    9. '```' → logprob: -11.34127426147461
    10. ',' → logprob: -11.71627426147461

Token 205: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.12706616520881653
    2. ' n' → logprob: -2.127066135406494
    3. 'num' → logprob: -9.252066612243652
    4. '   ' → logprob: -11.127066612243652
    5. ' number' → logprob: -11.502066612243652
    6. ' num' → logprob: -12.252066612243652
    7. '    
' → logprob: -12.502066612243652
    8. 'number' → logprob: -12.627066612243652
    9. 'value' → logprob: -13.127066612243652
    10. ' value' → logprob: -14.002066612243652

Token 206: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931562423706055
    2. ' =' → logprob: -0.6931562423706055
    3. '=int' → logprob: -11.693156242370605
    4. ' =
' → logprob: -15.068156242370605
    5. '=
' → logprob: -15.943156242370605
    6. '=line' → logprob: -16.818157196044922
    7. 's' → logprob: -16.943157196044922
    8. ' ' → logprob: -17.068157196044922
    9. 'int' → logprob: -17.318157196044922
    10. ')' → logprob: -17.443157196044922

Token 207: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.01815205067396164
    2. ' int' → logprob: -4.018152236938477
    3. 'line' → logprob: -13.268152236938477
    4. ' line' → logprob: -15.018152236938477
    5. '=int' → logprob: -17.768152236938477
    6. '   ' → logprob: -19.018152236938477
    7. ' ' → logprob: -19.143152236938477
    8. '(int' → logprob: -19.518152236938477
    9. '[int' → logprob: -20.268152236938477
    10. '<int' → logprob: -20.268152236938477

Token 208: '(line' (ID: 18178)
  Prédit: '(line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.00020377879263833165
    2. '(' → logprob: -8.500204086303711
    3. 'line' → logprob: -15.250204086303711
    4. '(
' → logprob: -16.75020408630371
    5. '=line' → logprob: -17.50020408630371
    6. ' line' → logprob: -18.25020408630371
    7. '[line' → logprob: -18.62520408630371
    8. '#line' → logprob: -18.75020408630371
    9. '(n' → logprob: -19.00020408630371
    10. '	line' → logprob: -19.25020408630371

Token 209: ')
' (ID: 446)
  Prédit: '.strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.014321102760732174
    2. ')' → logprob: -4.264321327209473
    3. '.rstrip' → logprob: -9.389321327209473
    4. 'strip' → logprob: -10.264321327209473
    5. '())' → logprob: -10.514321327209473
    6. '.readline' → logprob: -12.264321327209473
    7. '().' → logprob: -12.764321327209473
    8. '()' → logprob: -13.764321327209473
    9. 'rstrip' → logprob: -13.889321327209473
    10. '.' → logprob: -14.014321327209473

Token 210: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3172554075717926
    2. 'print' → logprob: -1.3172553777694702
    3. ' print' → logprob: -5.56725549697876
    4. '    
' → logprob: -9.817255020141602
    5. '
' → logprob: -10.067255020141602
    6. '```' → logprob: -10.817255020141602
    7. 'if' → logprob: -11.067255020141602
    8. '<|end|>' → logprob: -11.442255020141602
    9. '	print' → logprob: -11.692255020141602
    10. '#print' → logprob: -12.817255020141602

Token 211: ' if' (ID: 538)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0508427657186985
    2. 'if' (adapté à ' if') → logprob: -3.425842761993408
    3. ' print' → logprob: -4.550842761993408
    4. ' if' → logprob: -5.175842761993408
    5. 'result' → logprob: -7.300842761993408
    6. 'res' → logprob: -9.800843238830566
    7. '   ' → logprob: -10.175843238830566
    8. ' result' → logprob: -10.300843238830566
    9. 'count' → logprob: -10.925843238830566
    10. '```' → logprob: -12.300843238830566

Token 212: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.001705771079286933
    2. 'n' → logprob: -6.376705646514893
    3. ' not' → logprob: -12.62670612335205
    4. '	n' → logprob: -16.001705169677734
    5. ' ' → logprob: -16.376705169677734
    6. ' ' → logprob: -17.501705169677734
    7. ' н' → logprob: -19.376705169677734
    8. 'not' → logprob: -19.626705169677734
    9. ')n' → logprob: -19.626705169677734
    10. 'n't' → logprob: -20.501705169677734

Token 213: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.38772404193878174
    2. '==' → logprob: -1.1377240419387817
    3. '<=' → logprob: -7.762723922729492
    4. ' <=' → logprob: -8.012723922729492
    5. ' <' → logprob: -10.137723922729492
    6. ' ' → logprob: -10.637723922729492
    7. '<' → logprob: -11.262723922729492
    8. '=' → logprob: -12.387723922729492
    9. '===' → logprob: -12.512723922729492
    10. '0' → logprob: -12.887723922729492

Token 214: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0010328111238777637
    2. ' ' → logprob: -6.876032829284668
    3. '-' → logprob: -17.25103187561035
    4. ' -' → logprob: -17.62603187561035
    5. '   ' → logprob: -18.50103187561035
    6. '```' → logprob: -19.25103187561035
    7. '=' → logprob: -19.62603187561035
    8. '  ' → logprob: -20.00103187561035
    9. '۰' → logprob: -20.31353187561035
    10. '1' → logprob: -20.50103187561035

Token 215: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.000001907348633
    3. '-' → logprob: -17.125001907348633
    4. '```' → logprob: -19.750001907348633
    5. '=' → logprob: -20.250001907348633
    6. ')' → logprob: -21.500001907348633
    7. ' -' → logprob: -21.625001907348633
    8. '   ' → logprob: -21.750001907348633
    9. '"' → logprob: -22.250001907348633
    10. '`' → logprob: -22.375001907348633

Token 216: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5759413838386536
    2. ':' → logprob: -0.8259413838386536
    3. ':
' → logprob: -14.32594108581543
    4. '   ' → logprob: -14.82594108581543
    5. ':return' → logprob: -15.07594108581543
    6. ' :
' → logprob: -15.45094108581543
    7. ':

' → logprob: -15.45094108581543
    8. '):
' → logprob: -15.70094108581543
    9. ' :' → logprob: -16.32594108581543
    10. '():
' → logprob: -16.95094108581543

Token 217: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.020900476723909378
    2. '       ' → logprob: -3.8959004878997803
    3. ' break' → logprob: -8.14590072631836
    4. 'break' → logprob: -10.14590072631836
    5. '	break' → logprob: -11.02090072631836
    6. ':' → logprob: -11.77090072631836
    7. ':
' → logprob: -13.77090072631836
    8. ' ' → logprob: -14.02090072631836
    9. '   ' → logprob: -14.14590072631836
    10. '     ' → logprob: -14.52090072631836

Token 218: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.07912606745958328
    2. ' break' → logprob: -2.5791261196136475
    3. '   ' → logprob: -8.829126358032227
    4. '	break' → logprob: -9.329126358032227
    5. '
' → logprob: -14.579126358032227
    6. '       ' → logprob: -14.829126358032227
    7. '_break' → logprob: -16.329126358032227
    8. 'b' → logprob: -16.829126358032227
    9. '```' → logprob: -16.829126358032227
    10. '    
' → logprob: -17.329126358032227

Token 219: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.30387839674949646
    2. 'print' → logprob: -1.4288784265518188
    3. '
' → logprob: -4.053878307342529
    4. '    
' → logprob: -5.553878307342529
    5. ' print' → logprob: -6.803878307342529
    6. '```' → logprob: -9.928878784179688
    7. '	print' → logprob: -10.178878784179688
    8. '  
' → logprob: -10.928878784179688
    9. '#print' → logprob: -11.803878784179688
    10. '<|end|>' → logprob: -12.053878784179688

Token 220: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6261098980903625
    2. 'print' → logprob: -1.0011098384857178
    3. '
' → logprob: -2.3761098384857178
    4. ' print' → logprob: -6.001110076904297
    5. '    
' → logprob: -6.251110076904297
    6. '```' → logprob: -8.126110076904297
    7. '  
' → logprob: -9.251110076904297
    8. '	print' → logprob: -10.251110076904297
    9. '   
' → logprob: -10.376110076904297
    10. '<|end|>' → logprob: -10.626110076904297

Token 221: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0011111628264188766
    2. ' print' → logprob: -7.251111030578613
    3. 'result' → logprob: -8.001111030578613
    4. '   ' → logprob: -9.876111030578613
    5. 'count' → logprob: -11.626111030578613
    6. 'res' → logprob: -13.251111030578613
    7. '```' → logprob: -13.376111030578613
    8. '    
' → logprob: -13.751111030578613
    9. ' result' → logprob: -14.251111030578613
    10. 'results' → logprob: -15.001111030578613

Token 222: '(count' (ID: 25892)
  Prédit: '(count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(count' → logprob: -5.676981345459353e-06
    2. 'count' → logprob: -12.250005722045898
    3. '(' → logprob: -14.000005722045898
    4. '=count' → logprob: -19.3750057220459
    5. '[count' → logprob: -19.6250057220459
    6. '(c' → logprob: -19.6250057220459
    7. '()' → logprob: -20.0000057220459
    8. ',count' → logprob: -20.1250057220459
    9. '(
' → logprob: -20.2500057220459
    10. '((' → logprob: -21.0000057220459

Token 223: '_re' (ID: 3067)
  Prédit: '_re'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_re' → logprob: -1.0683535037969705e-05
    2. '_' → logprob: -11.87501049041748
    3. '_rep' → logprob: -12.75001049041748
    4. ')_' → logprob: -15.37501049041748
    5. ')' → logprob: -16.000011444091797
    6. '_res' → logprob: -16.250011444091797
    7. 'represent' → logprob: -16.625011444091797
    8. '_s' → logprob: -17.125011444091797
    9. ' _' → logprob: -17.375011444091797
    10. '_ex' → logprob: -17.625011444091797

Token 224: 'present' (ID: 47421)
  Prédit: 'present'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'present' → logprob: -0.0005258689634501934
    2. 'resent' → logprob: -7.625525951385498
    3. 'sent' → logprob: -10.75052547454834
    4. 'represent' → logprob: -11.50052547454834
    5. '_present' → logprob: -12.75052547454834
    6. 'p' → logprob: -13.75052547454834
    7. 'pres' → logprob: -14.12552547454834
    8. 'Present' → logprob: -14.87552547454834
    9. 's' → logprob: -15.62552547454834
    10. ' presentations' → logprob: -15.75052547454834

Token 225: 'ations' (ID: 929)
  Prédit: 'ations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ations' → logprob: -1.676292231422849e-05
    2. 't' → logprob: -11.875017166137695
    3. 'a' → logprob: -12.625017166137695
    4. 'ions' → logprob: -13.375017166137695
    5. '_' → logprob: -13.750017166137695
    6. 'lations' → logprob: -13.750017166137695
    7. '-' → logprob: -14.250017166137695
    8. '   ' → logprob: -14.875017166137695
    9. ' at' → logprob: -15.125017166137695
    10. 'ation' → logprob: -15.250017166137695

Token 226: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0012194052105769515
    2. '(' → logprob: -6.751219272613525
    3. ')' → logprob: -10.501219749450684
    4. ' (' → logprob: -10.876219749450684
    5. ')(' → logprob: -13.376219749450684
    6. '(
' → logprob: -13.876219749450684
    7. '((' → logprob: -15.876219749450684
    8. '```' → logprob: -16.876218795776367
    9. ',' → logprob: -17.251218795776367
    10. '(N' → logprob: -17.376218795776367

Token 227: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7770403623580933
    2. '))' → logprob: -0.7770403623580933
    3. '())' → logprob: -2.527040481567383
    4. '()))' → logprob: -7.902040481567383
    5. '()' → logprob: -8.527040481567383
    6. ')))' → logprob: -12.902040481567383
    7. '(n' → logprob: -13.527040481567383
    8. '(' → logprob: -14.402040481567383
    9. ')")' → logprob: -14.527040481567383
    10. '])' → logprob: -14.777040481567383


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 225
Tokens correctement prédits (1ère position, stricte): 101
Tokens correctement prédits (1ère position, avec adaptation): 112
Tokens correctement prédits (top 10): 202
Précision stricte (1ère position): 44.89%
Précision adaptée (1ère position): 49.78%
Précision (top 10): 89.78%
================================================================================
