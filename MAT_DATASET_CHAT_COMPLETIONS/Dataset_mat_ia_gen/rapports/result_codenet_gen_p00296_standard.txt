================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:32:19
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
sys.setrecursionlimit(10**7)
input = sys.stdin.readline

class Node:
    __slots__ = ["prev", "next", "num"]
    def __init__(self, num):
        self.num = num
        self.prev = None
        self.next = None

N,M,Q = map(int,input().split())
a = list(map(int,input().split()))
q = list(map(int,input().split()))

nodes = [Node(i) for i in range(N)]
for i in range(N):
    nodes[i].next = nodes[(i+1)%N]
    nodes[i].prev = nodes[(i-1)%N]

current = nodes[0]

for x in a:
    if x%2==0:
        # clock wise
        for _ in range(x):
            current = current.next
    else:
        # counter-clock wise
        for _ in range(x):
            current = current.prev
    # remove current (the x-th receiver)
    current.prev.next = current.next
    current.next.prev = current.prev
    current = current.next

alive = [0]*N
ptr = current
start = current
while True:
    alive[ptr.num] = 1
    ptr = ptr.next
    if ptr == start:
        break

for qq in q:
    print(alive[qq])
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'sys' (ID: 17324)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.5435490608215332
    2. '.' → logprob: -1.0435490608215332
    3. '<|end|>' → logprob: -3.918549060821533
    4. '\' → logprob: -4.043549060821533
    5. 'import' → logprob: -4.418549060821533
    6. 'newline' → logprob: -5.293549060821533
    7. '' → logprob: -6.043549060821533
    8. '\r' → logprob: -6.168549060821533
    9. '
' → logprob: -6.293549060821533
    10. '<|end|>' → logprob: -6.418549060821533

Token 4: '.set' (ID: 1230)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -2.2127087504486553e-05
    2. ' .' → logprob: -11.875021934509277
    3. '.`' → logprob: -13.125021934509277
    4. '[' → logprob: -13.250021934509277
    5. '.readline' → logprob: -13.250021934509277
    6. '.import' → logprob: -13.875021934509277
    7. '.user' → logprob: -14.000021934509277
    8. '."""' → logprob: -14.125021934509277
    9. '.​' → logprob: -14.250021934509277
    10. '.[' → logprob: -14.625021934509277

Token 5: 'rec' (ID: 9285)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5748613476753235
    2. '_trace' → logprob: -1.5748612880706787
    3. ' _' → logprob: -3.1998612880706787
    4. '_exc' → logprob: -3.3248612880706787
    5. '_version' → logprob: -3.5748612880706787
    6. '_ex' → logprob: -3.5748612880706787
    7. '_encoding' → logprob: -3.6998612880706787
    8. 'trace' → logprob: -4.824861526489258
    9. '_default' → logprob: -5.449861526489258
    10. '_set' → logprob: -5.449861526489258

Token 6: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.00037681119283661246
    2. 'ursive' → logprob: -8.37537670135498
    3. 'urs' → logprob: -10.37537670135498
    4. 'limit' → logprob: -10.62537670135498
    5. 'urf' → logprob: -10.62537670135498
    6. 'ur' → logprob: -10.87537670135498
    7. '_limit' → logprob: -11.25037670135498
    8. '_' → logprob: -11.75037670135498
    9. 'ursor' → logprob: -12.37537670135498
    10. 'ursively' → logprob: -12.75037670135498

Token 7: 'limit' (ID: 19698)
  Prédit: 'limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -0.45273950695991516
    2. '_limit' → logprob: -1.0777394771575928
    3. '_depth' → logprob: -3.8277394771575928
    4. 'depth' → logprob: -6.452739715576172
    5. '_stack' → logprob: -9.952739715576172
    6. 'error' → logprob: -10.077739715576172
    7. '_rate' → logprob: -10.077739715576172
    8. ' limit' → logprob: -10.327739715576172
    9. '_limits' → logprob: -10.327739715576172
    10. '('_' → logprob: -10.577739715576172

Token 8: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.0325924449716695e-05
    2. '(
' → logprob: -12.37501049041748
    3. ' (' → logprob: -12.50001049041748
    4. '(

' → logprob: -13.25001049041748
    5. '((' → logprob: -15.75001049041748
    6. '("("' → logprob: -15.87501049041748
    7. '('' → logprob: -16.875009536743164
    8. '(
' → logprob: -17.000009536743164
    9. '(None' → logprob: -17.500009536743164
    10. '()' → logprob: -17.500009536743164

Token 9: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.5762450695037842
    2. '100' → logprob: -0.8262450695037842
    3. '300' → logprob: -8.951245307922363
    4. '500' → logprob: -9.076245307922363
    5. '999' → logprob: -10.701245307922363
    6. '1' → logprob: -11.576245307922363
    7. ' ' → logprob: -11.701245307922363
    8. '150' → logprob: -12.326245307922363
    9. '200' → logprob: -12.326245307922363
    10. '250' → logprob: -12.701245307922363

Token 10: '**' (ID: 410)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.026859356090426445
    2. '000' → logprob: -4.026859283447266
    3. '00' → logprob: -5.151859283447266
    4. '4' → logprob: -6.526859283447266
    5. '6' → logprob: -6.651859283447266
    6. '5' → logprob: -10.151859283447266
    7. '**' → logprob: -10.401859283447266
    8. '3' → logprob: -11.026859283447266
    9. '7' → logprob: -11.526859283447266
    10. ''' → logprob: -11.526859283447266

Token 11: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.004887654446065426
    2. '9' → logprob: -5.754887580871582
    3. '6' → logprob: -7.004887580871582
    4. '8' → logprob: -7.129887580871582
    5. '```' → logprob: -16.5048885345459
    6. ' ' → logprob: -17.3798885345459
    7. '``' → logprob: -19.8798885345459
    8. ')' → logprob: -20.5048885345459
    9. '**' → logprob: -20.6298885345459
    10. '(' → logprob: -20.7548885345459

Token 12: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3663626305060461e-05
    2. '))' → logprob: -11.75001335144043
    3. ' )' → logprob: -12.12501335144043
    4. ')
' → logprob: -15.62501335144043
    5. ')))' → logprob: -16.75001335144043
    6. ')`' → logprob: -17.00001335144043
    7. ' ' → logprob: -17.25001335144043
    8. '）' → logprob: -18.12501335144043
    9. '`)' → logprob: -18.12501335144043
    10. '```' → logprob: -18.37501335144043

Token 13: 'input' (ID: 2586)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5476455688476562
    2. '\' → logprob: -1.7976455688476562
    3. '\n' → logprob: -2.1726455688476562
    4. '

' → logprob: -2.9226455688476562
    5. 'def' → logprob: -3.7976455688476562
    6. '(' → logprob: -4.172645568847656
    7. '
' → logprob: -4.297645568847656
    8. '()' → logprob: -4.547645568847656
    9. '```' → logprob: -4.797645568847656
    10. '(
' → logprob: -5.422645568847656

Token 14: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0258511770516634
    2. '()' → logprob: -3.775851249694824
    3. '.' → logprob: -7.150851249694824
    4. '40' → logprob: -8.025851249694824
    5. '('' → logprob: -8.400851249694824
    6. ')' → logprob: -8.775851249694824
    7. '```' → logprob: -8.900851249694824
    8. '("")' → logprob: -9.025851249694824
    9. '("("' → logprob: -9.150851249694824
    10. '(
' → logprob: -9.400851249694824

Token 15: ' sys' (ID: 12228)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.1763271540403366
    2. 'input' → logprob: -1.926327109336853
    3. ' sys' → logprob: -4.176327228546143
    4. 'sys' → logprob: -7.676327228546143
    5. ' open' → logprob: -9.676326751708984
    6. '=input' → logprob: -10.926326751708984
    7. ' lambda' → logprob: -11.176326751708984
    8. ' ' → logprob: -11.426326751708984
    9. ' raw' → logprob: -11.426326751708984
    10. '```' → logprob: -11.551326751708984

Token 16: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.010250494815409184
    2. '.stdin' → logprob: -5.385250568389893
    3. '.readline' → logprob: -6.010250568389893
    4. ' .' → logprob: -6.010250568389893
    5. '.input' → logprob: -8.135250091552734
    6. '.import' → logprob: -9.010250091552734
    7. '.get' → logprob: -9.885250091552734
    8. '.stdout' → logprob: -10.385250091552734
    9. '.argv' → logprob: -11.010250091552734
    10. '.read' → logprob: -11.010250091552734

Token 17: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.17101041972637177
    2. '.' → logprob: -1.9210103750228882
    3. '.read' → logprob: -4.546010494232178
    4. '.Read' → logprob: -9.42101001739502
    5. '.readlines' → logprob: -11.29601001739502
    6. '.buffer' → logprob: -11.67101001739502
    7. '.READ' → logprob: -12.92101001739502
    8. '.stdin' → logprob: -13.04601001739502
    9. '.
' → logprob: -13.17101001739502
    10. 'read' → logprob: -13.29601001739502

Token 18: '

' (ID: 279)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.39599570631980896
    2. '(' → logprob: -1.3959957361221313
    3. 'def' → logprob: -3.645995616912842
    4. '\n' → logprob: -4.395995616912842
    5. '(n' → logprob: -4.770995616912842
    6. '()
' → logprob: -5.270995616912842
    7. '(
' → logprob: -5.395995616912842
    8. 'for' → logprob: -5.520995616912842
    9. ')' → logprob: -5.645995616912842
    10. 'n' → logprob: -5.895995616912842

Token 19: 'class' (ID: 1444)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3159971237182617
    2. 'n' → logprob: -1.3159971237182617
    3. 'd' → logprob: -6.315997123718262
    4. '(n' → logprob: -8.440997123718262
    5. 'a' → logprob: -8.565997123718262
    6. 'N' → logprob: -9.065997123718262
    7. '```' → logprob: -9.065997123718262
    8. '\' → logprob: -9.190997123718262
    9. 'for' → logprob: -10.190997123718262
    10. 's' → logprob: -10.565997123718262

Token 20: ' Node' (ID: 10882)
  Prédit: ' Solution'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Solution' → logprob: -0.37971603870391846
    2. ' Trie' → logprob: -1.8797160387039185
    3. ' DFS' → logprob: -3.254715919494629
    4. ' Tree' → logprob: -3.254715919494629
    5. ' Segment' → logprob: -3.379715919494629
    6. ' Node' → logprob: -3.754715919494629
    7. 'Solution' → logprob: -4.504715919494629
    8. ' Binary' → logprob: -5.129715919494629
    9. ' Solver' → logprob: -5.754715919494629
    10. 'Trie' → logprob: -5.879715919494629

Token 21: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.009959959425032139
    2. '(' → logprob: -4.634960174560547
    3. ' :' → logprob: -8.759960174560547
    4. '():' → logprob: -11.134960174560547
    5. '<|end|>' → logprob: -12.009960174560547
    6. ':**' → logprob: -12.384960174560547
    7. '(:' → logprob: -12.509960174560547
    8. '):' → logprob: -12.634960174560547
    9. '.' → logprob: -12.759960174560547
    10. '(object' → logprob: -12.884960174560547

Token 22: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.019345629960298538
    2. ' def' → logprob: -4.269345760345459
    3. 'def' → logprob: -5.519345760345459
    4. '<|end|>' → logprob: -7.519345760345459
    5. ' ' → logprob: -9.0193452835083
    6. ':' → logprob: -9.1443452835083
    7. ' pass' → logprob: -9.6443452835083
    8. '	def' → logprob: -9.6443452835083
    9. '```' → logprob: -9.8943452835083
    10. '    ' → logprob: -10.0193452835083

Token 23: ' __' (ID: 2516)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.20145338773727417
    2. 'def' → logprob: -1.701453447341919
    3. '   ' → logprob: -10.32645320892334
    4. 'class' → logprob: -12.95145320892334
    5. ' pass' → logprob: -13.57645320892334
    6. '	def' → logprob: -13.82645320892334
    7. ' __' → logprob: -14.20145320892334
    8. '__' (adapté à ' __') → logprob: -14.20145320892334
    9. 'pass' → logprob: -14.95145320892334
    10. ' ' → logprob: -15.07645320892334

Token 24: 'slots' (ID: 101916)
  Prédit: 'init'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.0025014597922563553
    2. 'slots' → logprob: -6.002501487731934
    3. ' init' → logprob: -11.377501487731934
    4. '_init' → logprob: -11.502501487731934
    5. ' slots' → logprob: -13.502501487731934
    6. '_slots' → logprob: -13.627501487731934
    7. 'int' → logprob: -14.127501487731934
    8. 'slot' → logprob: -14.502501487731934
    9. '_' → logprob: -15.002501487731934
    10. ' ' → logprob: -17.127500534057617

Token 25: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.007714397273957729
    2. '=' → logprob: -4.88271427154541
    3. '=['' → logprob: -9.75771427154541
    4. '__('' → logprob: -10.50771427154541
    5. ' =' → logprob: -11.63271427154541
    6. '___' → logprob: -11.88271427154541
    7. '=('' → logprob: -13.00771427154541
    8. '____' → logprob: -13.88271427154541
    9. '__[' → logprob: -13.88271427154541
    10. '__.' → logprob: -14.00771427154541

Token 26: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03661307319998741
    2. ' =' → logprob: -3.6616129875183105
    3. '__' → logprob: -4.7866129875183105
    4. '=['' → logprob: -6.4116129875183105
    5. '['' → logprob: -9.036613464355469
    6. '=('' → logprob: -9.411613464355469
    7. '[' → logprob: -10.661613464355469
    8. ' ' → logprob: -11.536613464355469
    9. '_=' → logprob: -11.661613464355469
    10. '__('' → logprob: -11.786613464355469

Token 27: ' ["' (ID: 9129)
  Prédit: '[''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '['' → logprob: -0.5910393595695496
    2. ''' → logprob: -2.0910394191741943
    3. '('' → logprob: -2.3410394191741943
    4. '('__' → logprob: -2.3410394191741943
    5. ''s' → logprob: -2.4660394191741943
    6. ''name' → logprob: -4.466039180755615
    7. ''title' → logprob: -4.466039180755615
    8. '('_' → logprob: -4.841039180755615
    9. '['_' → logprob: -5.091039180755615
    10. ''t' → logprob: -6.466039180755615

Token 28: 'prev' (ID: 15969)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.465485543012619
    2. 'value' → logprob: -1.4654855728149414
    3. 'left' → logprob: -2.9654855728149414
    4. 'key' → logprob: -3.0904855728149414
    5. 'children' → logprob: -3.5904855728149414
    6. 'data' → logprob: -4.340485572814941
    7. '_val' → logprob: -7.465485572814941
    8. '__' → logprob: -7.465485572814941
    9. 'name' → logprob: -7.965485572814941
    10. '_value' → logprob: -8.465485572814941

Token 29: '",' (ID: 672)
  Prédit: '",'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '",' → logprob: -0.004562088288366795
    2. ',' → logprob: -5.629561901092529
    3. '","' → logprob: -8.129562377929688
    4. ' ",' → logprob: -8.129562377929688
    5. ',",' → logprob: -8.379562377929688
    6. ',"' → logprob: -9.254562377929688
    7. '"' → logprob: -10.754562377929688
    8. '"]' → logprob: -11.504562377929688
    9. ' ,' → logprob: -12.504562377929688
    10. '_node' → logprob: -13.004562377929688

Token 30: ' "' (ID: 392)
  Prédit: '"value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"value' → logprob: -0.7320606708526611
    2. ' "' → logprob: -1.1070606708526611
    3. '"' → logprob: -1.8570606708526611
    4. 'next' → logprob: -4.482060432434082
    5. ' next' → logprob: -4.732060432434082
    6. 'value' → logprob: -5.482060432434082
    7. 'data' → logprob: -5.732060432434082
    8. 'val' → logprob: -7.107060432434082
    9. '"user' → logprob: -7.107060432434082
    10. ' value' → logprob: -7.607060432434082

Token 31: 'next' (ID: 7311)
  Prédit: 'next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.1725030094385147
    2. 'val' → logprob: -2.5475029945373535
    3. 'data' → logprob: -3.2975029945373535
    4. 'value' → logprob: -3.6725029945373535
    5. 'n' → logprob: -4.5475029945373535
    6. 'key' → logprob: -5.5475029945373535
    7. 'prev' → logprob: -7.4225029945373535
    8. 'item' → logprob: -7.4225029945373535
    9. 'char' → logprob: -7.6725029945373535
    10. 'num' → logprob: -8.797503471374512

Token 32: '",' (ID: 672)
  Prédit: '",'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '",' → logprob: -0.029820848256349564
    2. '"]' → logprob: -3.5298209190368652
    3. ' ",' → logprob: -10.404820442199707
    4. ',' → logprob: -10.654820442199707
    5. '","' → logprob: -12.404820442199707
    6. ']' → logprob: -12.654820442199707
    7. '"' → logprob: -12.654820442199707
    8. '',' → logprob: -13.279820442199707
    9. ',",' → logprob: -13.404820442199707
    10. ' "]' → logprob: -13.529820442199707

Token 33: ' "' (ID: 392)
  Prédit: '"value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"value' → logprob: -0.20114098489284515
    2. ' "' → logprob: -1.8261409997940063
    3. '"' → logprob: -3.951140880584717
    4. '"id' → logprob: -8.076141357421875
    5. '"user' → logprob: -8.326141357421875
    6. 'value' → logprob: -8.326141357421875
    7. '"title' → logprob: -8.576141357421875
    8. '"name' → logprob: -8.826141357421875
    9. '   ' → logprob: -8.951141357421875
    10. '"text' → logprob: -9.076141357421875

Token 34: 'num' (ID: 4571)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.4179091155529022
    2. 'value' → logprob: -1.6679091453552246
    3. 'data' → logprob: -2.1679091453552246
    4. 'key' → logprob: -4.417909145355225
    5. ' val' → logprob: -5.292909145355225
    6. ' value' → logprob: -5.292909145355225
    7. ' data' → logprob: -5.667909145355225
    8. '"' → logprob: -5.667909145355225
    9. '"value' → logprob: -5.667909145355225
    10. 'd' → logprob: -6.667909145355225

Token 35: '"]
' (ID: 14510)
  Prédit: '"]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"]' → logprob: -0.0018593916902318597
    2. ']' → logprob: -6.501859188079834
    3. '",' → logprob: -8.251859664916992
    4. 's' → logprob: -9.751859664916992
    5. '"' → logprob: -11.501859664916992
    6. ',' → logprob: -11.751859664916992
    7. '']' → logprob: -12.126859664916992
    8. '_' → logprob: -12.376859664916992
    9. ' "]' → logprob: -12.501859664916992
    10. '1' → logprob: -13.251859664916992

Token 36: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.031777605414390564
    2. 'def' → logprob: -4.031777381896973
    3. '<|end|>' → logprob: -5.406777381896973
    4. ' def' → logprob: -5.781777381896973
    5. '    
' → logprob: -5.906777381896973
    6. '	def' → logprob: -6.906777381896973
    7. '
' → logprob: -7.406777381896973
    8. ',' → logprob: -7.781777381896973
    9. '<|end|>' → logprob: -8.156777381896973
    10. '=' → logprob: -8.531777381896973

Token 37: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.6717128753662109
    2. '
' → logprob: -1.171712875366211
    3. '   ' → logprob: -1.921712875366211
    4. ' def' → logprob: -4.046712875366211
    5. '    
' → logprob: -4.421712875366211
    6. '=' → logprob: -6.796712875366211
    7. '	def' → logprob: -7.296712875366211
    8. ' =' → logprob: -7.296712875366211
    9. '```' → logprob: -8.046712875366211
    10. ':' → logprob: -8.671712875366211

Token 38: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.014497826807200909
    2. ' init' → logprob: -4.514497756958008
    3. '__' → logprob: -6.014497756958008
    4. ' def' → logprob: -7.639497756958008
    5. 'init' → logprob: -7.889497756958008
    6. '_init' → logprob: -9.139497756958008
    7. '_' → logprob: -11.014497756958008
    8. ' _' → logprob: -12.514497756958008
    9. ' initialize' → logprob: -12.639497756958008
    10. ' ' → logprob: -12.639497756958008

Token 39: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -1.9361264946837764e-07
    2. 'ini' → logprob: -16.25
    3. 'in' → logprob: -18.625
    4. 'int' → logprob: -19.0
    5. 'inite' → logprob: -19.125
    6. 'slots' → logprob: -19.75
    7. ' init' → logprob: -20.0
    8. 'new' → logprob: -20.125
    9. 'def' → logprob: -21.375
    10. '_init' → logprob: -21.75

Token 40: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.005550216883420944
    2. '__' → logprob: -5.255550384521484
    3. '(self' → logprob: -8.755550384521484
    4. '__(
' → logprob: -9.380550384521484
    5. '__((' → logprob: -10.380550384521484
    6. '(' → logprob: -11.005550384521484
    7. '__('' → logprob: -11.380550384521484
    8. '__(*' → logprob: -12.130550384521484
    9. '<|end|>' → logprob: -12.755550384521484
    10. '__("' → logprob: -13.380550384521484

Token 41: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.06197451800107956
    2. ' self' → logprob: -2.81197452545166
    3. 'prev' → logprob: -12.56197452545166
    4. ' prev' → logprob: -13.81197452545166
    5. ' ' → logprob: -14.31197452545166
    6. ')' → logprob: -14.43697452545166
    7. '(self' → logprob: -15.18697452545166
    8. 'num' → logprob: -15.18697452545166
    9. '0' → logprob: -15.68697452545166
    10. '	self' → logprob: -15.81197452545166

Token 42: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3893706798553467
    2. ' ,' → logprob: -1.1393706798553467
    3. 'self' → logprob: -7.264370918273926
    4. ' )' → logprob: -7.514370918273926
    5. ')' → logprob: -8.014370918273926
    6. ',self' → logprob: -8.014370918273926
    7. ' ' → logprob: -8.389370918273926
    8. '(self' → logprob: -9.139370918273926
    9. ',num' → logprob: -9.264370918273926
    10. ' self' → logprob: -10.389370918273926

Token 43: ' num' (ID: 2269)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -1.472560167312622
    2. 'self' → logprob: -1.722560167312622
    3. ' prev' → logprob: -1.722560167312622
    4. 'prev' → logprob: -1.722560167312622
    5. ' num' → logprob: -1.972560167312622
    6. ' self' → logprob: -2.347560167312622
    7. 'value' → logprob: -10.722559928894043
    8. ' value' → logprob: -11.097559928894043
    9. 'n' → logprob: -11.097559928894043
    10. ' ' → logprob: -11.097559928894043

Token 44: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.010740761645138264
    2. ',' → logprob: -4.885740756988525
    3. ')' → logprob: -6.135740756988525
    4. '=' → logprob: -7.885740756988525
    5. ':' → logprob: -8.010741233825684
    6. ' ):' → logprob: -8.760741233825684
    7. '=None' → logprob: -9.760741233825684
    8. '):
' → logprob: -10.260741233825684
    9. ' ,' → logprob: -13.385741233825684
    10. ' =' → logprob: -13.635741233825684

Token 45: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0020878082141280174
    2. 'self' → logprob: -7.127087593078613
    3. '<|end|>' → logprob: -7.752087593078613
    4. ' self' → logprob: -8.002087593078613
    5. '        ' → logprob: -9.127087593078613
    6. '    ' → logprob: -9.502087593078613
    7. '   ' → logprob: -9.752087593078613
    8. '	' → logprob: -9.877087593078613
    9. ' ' → logprob: -10.002087593078613
    10. ' ' → logprob: -10.252087593078613

Token 46: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.20171183347702026
    2. 'self' (adapté à ' self') → logprob: -1.701711893081665
    3. '       ' → logprob: -8.201711654663086
    4. '	self' → logprob: -11.201711654663086
    5. '        ' → logprob: -12.451711654663086
    6. ' ' → logprob: -12.451711654663086
    7. '   ' → logprob: -13.201711654663086
    8. ' ' → logprob: -14.701711654663086
    9. '    ' → logprob: -15.326711654663086
    10. '	' → logprob: -16.701711654663086

Token 47: '.num' (ID: 19403)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.01862313225865364
    2. '.num' → logprob: -4.018623352050781
    3. '.prev' → logprob: -8.018623352050781
    4. ' .' → logprob: -9.393623352050781
    5. '.n' → logprob: -10.268623352050781
    6. ' =' → logprob: -11.518623352050781
    7. ' ' → logprob: -11.893623352050781
    8. '=' → logprob: -12.893623352050781
    9. '=num' → logprob: -13.393623352050781
    10. '.=' → logprob: -14.018623352050781

Token 48: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4740811586380005
    2. '=' → logprob: -0.9740811586380005
    3. ' ' → logprob: -12.849081039428711
    4. '=num' → logprob: -13.724081039428711
    5. '=int' → logprob: -15.849081039428711
    6. ')' → logprob: -16.84908103942871
    7. ' =)' → logprob: -17.09908103942871
    8. '＝' → logprob: -17.22408103942871
    9. ' =
' → logprob: -17.22408103942871
    10. '=line' → logprob: -17.47408103942871

Token 49: ' num' (ID: 2269)
  Prédit: ' num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' num' → logprob: -0.10020720958709717
    2. 'num' → logprob: -2.3502073287963867
    3. '	num' → logprob: -15.225207328796387
    4. ' ' → logprob: -15.350207328796387
    5. ' ' → logprob: -17.35020637512207
    6. '<num' → logprob: -17.35020637512207
    7. '=num' → logprob: -17.47520637512207
    8. '(num' → logprob: -18.10020637512207
    9. ',num' → logprob: -18.47520637512207
    10. '[num' → logprob: -19.10020637512207

Token 50: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7242089509963989
    2. '
' → logprob: -0.8492089509963989
    3. '<|end|>' → logprob: -2.4742088317871094
    4. '        
' → logprob: -6.599208831787109
    5. ' 
' → logprob: -7.724208831787109
    6. '        ' → logprob: -7.849208831787109
    7. ' ' → logprob: -8.34920883178711
    8. '  
' → logprob: -8.59920883178711
    9. '<|end|>' → logprob: -8.59920883178711
    10. '   ' → logprob: -9.22420883178711

Token 51: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005787697155028582
    2. 'self' → logprob: -7.500578880310059
    3. ' self' → logprob: -10.625578880310059
    4. '   ' → logprob: -13.750578880310059
    5. '      ' → logprob: -16.500577926635742
    6. '```' → logprob: -16.500577926635742
    7. '<|end|>' → logprob: -16.875577926635742
    8. '	self' → logprob: -17.000577926635742
    9. ',' → logprob: -17.000577926635742
    10. '	' → logprob: -17.500577926635742

Token 52: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.5423485040664673
    2. 'None' → logprob: -1.0423485040664673
    3. ' None' → logprob: -3.0423483848571777
    4. ' self' → logprob: -4.042348384857178
    5. '       ' → logprob: -7.292348384857178
    6. '   ' → logprob: -10.417348861694336
    7. '	self' → logprob: -13.542348861694336
    8. ' ' → logprob: -14.792348861694336
    9. '0' → logprob: -15.167348861694336
    10. '(None' → logprob: -15.292348861694336

Token 53: '.prev' (ID: 54166)
  Prédit: '.prev'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.prev' → logprob: -0.20220208168029785
    2. '.' → logprob: -1.7022020816802979
    3. '.next' → logprob: -7.952201843261719
    4. ' .' → logprob: -7.952201843261719
    5. 'prev' → logprob: -9.577201843261719
    6. '.previous' → logprob: -11.952201843261719
    7. '.
' → logprob: -12.702201843261719
    8. ' prev' → logprob: -13.327201843261719
    9. '	prev' → logprob: -13.452201843261719
    10. '_prev' → logprob: -14.327201843261719

Token 54: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.033131033182144165
    2. ' ' → logprob: -3.9081311225891113
    3. '=' → logprob: -4.533131122589111
    4. '<|end|>' → logprob: -7.158131122589111
    5. ',' → logprob: -7.408131122589111
    6. '=None' → logprob: -9.033130645751953
    7. ' None' → logprob: -9.033130645751953
    8. ' ,' → logprob: -9.533130645751953
    9. 'None' → logprob: -10.408130645751953
    10. '<|end|>' → logprob: -11.658130645751953

Token 55: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.16032211482524872
    2. ' None' → logprob: -1.9103220701217651
    3. 'self' → logprob: -9.285322189331055
    4. ' self' → logprob: -12.285322189331055
    5. '_None' → logprob: -15.660322189331055
    6. 'none' → logprob: -15.785322189331055
    7. '0' → logprob: -16.535322189331055
    8. ' ' → logprob: -17.160322189331055
    9. ' none' → logprob: -17.160322189331055
    10. '(None' → logprob: -17.410322189331055

Token 56: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00031389365904033184
    2. '
' → logprob: -8.875313758850098
    3. 'self' → logprob: -9.125313758850098
    4. '   ' → logprob: -10.625313758850098
    5. '<|end|>' → logprob: -11.125313758850098
    6. '	' → logprob: -12.500313758850098
    7. ' self' → logprob: -12.750313758850098
    8. '\' → logprob: -12.875313758850098
    9. 'newline' → logprob: -13.000313758850098
    10. '        
' → logprob: -13.250313758850098

Token 57: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0036460417322814465
    2. 'self' → logprob: -6.003645896911621
    3. '   ' → logprob: -7.503645896911621
    4. '<|end|>' → logprob: -8.003645896911621
    5. '
' → logprob: -9.253645896911621
    6. ' self' → logprob: -9.628645896911621
    7. '```' → logprob: -10.003645896911621
    8. ',' → logprob: -10.878645896911621
    9. '<|end|>' → logprob: -11.003645896911621
    10. '        
' → logprob: -11.378645896911621

Token 58: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.31812596321105957
    2. '       ' → logprob: -1.6931259632110596
    3. ' self' → logprob: -2.4431259632110596
    4. '	self' → logprob: -7.4431257247924805
    5. '   ' → logprob: -8.44312572479248
    6. ' ' → logprob: -8.69312572479248
    7. '
' → logprob: -8.81812572479248
    8. '	' → logprob: -8.94312572479248
    9. ',' → logprob: -9.81812572479248
    10. ' 
' → logprob: -10.06812572479248

Token 59: '.next' (ID: 6689)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6340096592903137
    2. '.next' → logprob: -0.7590096592903137
    3. '.prev' → logprob: -7.009009838104248
    4. ' .' → logprob: -8.13400936126709
    5. ' next' → logprob: -9.38400936126709
    6. 'next' → logprob: -9.88400936126709
    7. ' ' → logprob: -10.25900936126709
    8. ' =' → logprob: -11.75900936126709
    9. '<|end|>' → logprob: -11.75900936126709
    10. 'prev' → logprob: -12.00900936126709

Token 60: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.693256676197052
    2. ' =' → logprob: -0.693256676197052
    3. '=None' → logprob: -9.443256378173828
    4. '<|end|>' → logprob: -10.693256378173828
    5. ' ' → logprob: -12.193256378173828
    6. '<|end|>' → logprob: -14.068256378173828
    7. ' None' → logprob: -14.943256378173828
    8. 'None' → logprob: -14.943256378173828
    9. '(None' → logprob: -15.568256378173828
    10. ')' → logprob: -15.693256378173828

Token 61: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.2519356608390808
    2. ' None' → logprob: -1.5019357204437256
    3. 'self' → logprob: -12.126935958862305
    4. '(None' → logprob: -14.751935958862305
    5. ' self' → logprob: -15.251935958862305
    6. '_None' → logprob: -15.501935958862305
    7. ' ' → logprob: -16.751935958862305
    8. 'Node' → logprob: -16.876935958862305
    9. ',None' → logprob: -16.876935958862305
    10. 'none' → logprob: -17.001935958862305

Token 62: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 63: 'N' (ID: 45)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3140128254890442
    2. 'class' → logprob: -1.3140127658843994
    3. 'n' → logprob: -7.9390130043029785
    4. 'd' → logprob: -8.68901252746582
    5. '
' → logprob: -9.56401252746582
    6. ' class' → logprob: -10.56401252746582
    7. '\' → logprob: -11.06401252746582
    8. ')' → logprob: -11.31401252746582
    9. '```' → logprob: -11.31401252746582
    10. 'a' → logprob: -11.56401252746582

Token 64: ',M' (ID: 54127)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04350355640053749
    2. '=' → logprob: -3.793503522872925
    3. ' ' → logprob: -3.918503522872925
    4. ',' → logprob: -9.543503761291504
    5. ' ,' → logprob: -10.293503761291504
    6. ' =
' → logprob: -10.418503761291504
    7. ')' → logprob: -11.418503761291504
    8. ' =)' → logprob: -11.543503761291504
    9. '  ' → logprob: -11.668503761291504
    10. ' )' → logprob: -12.543503761291504

Token 65: ',Q' (ID: 130136)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03572788089513779
    2. '=' → logprob: -3.5357279777526855
    3. ',' → logprob: -5.2857279777526855
    4. ' ' → logprob: -7.2857279777526855
    5. ' ,' → logprob: -8.535727500915527
    6. ' =
' → logprob: -11.660727500915527
    7. ')' → logprob: -14.160727500915527
    8. ' =)' → logprob: -14.160727500915527
    9. '=int' → logprob: -14.410727500915527
    10. '  ' → logprob: -14.535727500915527

Token 66: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3133033514022827
    2. ' =' → logprob: -1.3133033514022827
    3. ',' → logprob: -10.313302993774414
    4. '=input' → logprob: -12.438302993774414
    5. '=int' → logprob: -12.813302993774414
    6. ' ' → logprob: -14.563302993774414
    7. ')' → logprob: -15.438302993774414
    8. '=

' → logprob: -15.563302993774414
    9. ' =
' → logprob: -15.938302993774414
    10. '=sys' → logprob: -16.188302993774414

Token 67: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.029829973354935646
    2. 'map' → logprob: -3.529829978942871
    3. ' list' → logprob: -10.154829978942871
    4. ' ' → logprob: -10.779829978942871
    5. 'list' → logprob: -11.904829978942871
    6. ' input' → logprob: -12.154829978942871
    7. 'input' → logprob: -13.029829978942871
    8. '[' → logprob: -13.654829978942871
    9. '	map' → logprob: -14.029829978942871
    10. ' [' → logprob: -14.154829978942871

Token 68: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.47943374514579773
    2. '(int' → logprob: -0.9794337749481201
    3. '(lambda' → logprob: -5.354433536529541
    4. '(str' → logprob: -7.854433536529541
    5. '(list' → logprob: -9.6044340133667
    6. '(input' → logprob: -9.9794340133667
    7. '(tuple' → logprob: -9.9794340133667
    8. '((' → logprob: -10.8544340133667
    9. '(len' → logprob: -11.7294340133667
    10. '(in' → logprob: -11.9794340133667

Token 69: ',input' (ID: 123014)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0196468997746706
    2. ',input' → logprob: -4.019647121429443
    3. ',int' → logprob: -7.269647121429443
    4. ' ,' → logprob: -7.769647121429443
    5. '(' → logprob: -8.144646644592285
    6. 'input' → logprob: -10.269646644592285
    7. '(input' → logprob: -11.019646644592285
    8. '(),' → logprob: -11.394646644592285
    9. ',(' → logprob: -12.144646644592285
    10. '(int' → logprob: -12.269646644592285

Token 70: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -6.670925358776003e-05
    2. '()' → logprob: -9.625066757202148
    3. '())' → logprob: -15.375066757202148
    4. ' ().' → logprob: -15.375066757202148
    5. '(' → logprob: -17.25006675720215
    6. '()
' → logprob: -17.37506675720215
    7. '.' → logprob: -17.87506675720215
    8. ')' → logprob: -18.12506675720215
    9. '.split' → logprob: -18.12506675720215
    10. 'split' → logprob: -18.12506675720215

Token 71: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0009591046255081892
    2. 'strip' → logprob: -7.0009589195251465
    3. 'rstrip' → logprob: -10.000959396362305
    4. ')' → logprob: -14.125959396362305
    5. ' split' → logprob: -14.375959396362305
    6. 'spl' → logprob: -14.625959396362305
    7. '(split' → logprob: -15.250959396362305
    8. '().' → logprob: -16.000959396362305
    9. 's' → logprob: -16.750959396362305
    10. 'plit' → logprob: -17.375959396362305

Token 72: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008816531859338284
    2. '())' → logprob: -5.258816719055176
    3. '()' → logprob: -5.883816719055176
    4. '(' → logprob: -7.258816719055176
    5. '))' → logprob: -10.133816719055176
    6. '),' → logprob: -10.633816719055176
    7. '(),' → logprob: -12.258816719055176
    8. ',' → logprob: -12.758816719055176
    9. ')(' → logprob: -13.133816719055176
    10. '`)' → logprob: -13.258816719055176

Token 73: 'a' (ID: 64)
  Prédit: 'nodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nodes' → logprob: -0.85619056224823
    2. ' nodes' → logprob: -2.2311906814575195
    3. 'node' → logprob: -2.2311906814575195
    4. 'a' → logprob: -2.6061906814575195
    5. '<|end|>' → logprob: -2.8561906814575195
    6. ' 
' → logprob: -3.7311906814575195
    7. 'd' → logprob: -3.8561906814575195
    8. '
' → logprob: -3.8561906814575195
    9. 'data' → logprob: -4.2311906814575195
    10. ' lists' → logprob: -4.7311906814575195

Token 74: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2604609727859497
    2. 'rr' → logprob: -2.26046085357666
    3. 'rray' → logprob: -3.13546085357666
    4. '_nodes' → logprob: -3.38546085357666
    5. '=' → logprob: -3.88546085357666
    6. 's' → logprob: -4.76046085357666
    7. 'ns' → logprob: -5.13546085357666
    8. '_list' → logprob: -5.13546085357666
    9. '_' → logprob: -6.88546085357666
    10. '=[]' → logprob: -6.88546085357666

Token 75: ' list' (ID: 1562)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.759468138217926
    2. '[]' → logprob: -1.5094680786132812
    3. ' []' → logprob: -2.2594680786132812
    4. '[' → logprob: -2.6344680786132812
    5. '[list' → logprob: -2.8844680786132812
    6. 'list' → logprob: -3.7594680786132812
    7. '[int' → logprob: -4.259468078613281
    8. ' list' → logprob: -4.259468078613281
    9. ' [[]' → logprob: -4.634468078613281
    10. '[N' → logprob: -4.759468078613281

Token 76: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.3858039379119873
    2. '(' → logprob: -1.2608039379119873
    3. '(range' → logprob: -3.3858039379119873
    4. '(int' → logprob: -6.010804176330566
    5. '()' → logprob: -8.260804176330566
    6. '(input' → logprob: -10.135804176330566
    7. '(list' → logprob: -12.260804176330566
    8. '(a' → logprob: -12.385804176330566
    9. '(

' → logprob: -12.385804176330566
    10. 'map' → logprob: -12.385804176330566

Token 77: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0021975983399897814
    2. '(' → logprob: -6.127197742462158
    3. 'int' → logprob: -12.252197265625
    4. '[int' → logprob: -12.752197265625
    5. '(in' → logprob: -13.127197265625
    6. '<int' → logprob: -14.002197265625
    7. ',int' → logprob: -14.377197265625
    8. ']int' → logprob: -14.877197265625
    9. '(input' → logprob: -15.002197265625
    10. '=int' → logprob: -15.877197265625

Token 78: ',input' (ID: 123014)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.028493283316493034
    2. ',input' → logprob: -4.153493404388428
    3. '(' → logprob: -4.403493404388428
    4. ' (' → logprob: -9.52849292755127
    5. ',' → logprob: -10.27849292755127
    6. ' ,' → logprob: -11.52849292755127
    7. '(),' → logprob: -11.65349292755127
    8. '(int' → logprob: -12.40349292755127
    9. '(sys' → logprob: -12.77849292755127
    10. ',(' → logprob: -12.90349292755127

Token 79: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0001249925117008388
    2. '()' → logprob: -9.00012493133545
    3. '(' → logprob: -14.12512493133545
    4. ')' → logprob: -15.50012493133545
    5. '.' → logprob: -16.125125885009766
    6. ' ().' → logprob: -16.250125885009766
    7. '.readline' → logprob: -16.625125885009766
    8. '()-' → logprob: -17.000125885009766
    9. '>().' → logprob: -17.250125885009766
    10. '().'' → logprob: -17.375125885009766

Token 80: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -2.9160102712921798e-05
    2. 'strip' → logprob: -10.625029563903809
    3. 'rstrip' → logprob: -12.750029563903809
    4. ' split' → logprob: -14.000029563903809
    5. 'spl' → logprob: -14.375029563903809
    6. '(split' → logprob: -15.250029563903809
    7. 'read' → logprob: -15.625029563903809
    8. ')' → logprob: -17.125028610229492
    9. 's' → logprob: -18.250028610229492
    10. 'plit' → logprob: -19.250028610229492

Token 81: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.4246315360069275
    2. '))' → logprob: -1.5496315956115723
    3. ')' → logprob: -2.9246315956115723
    4. '())' → logprob: -3.1746315956115723
    5. '()' → logprob: -3.5496315956115723
    6. '(' → logprob: -4.674631595611572
    7. '()));' → logprob: -10.299631118774414
    8. '()))
' → logprob: -11.299631118774414
    9. '(),' → logprob: -11.424631118774414
    10. '());' → logprob: -11.799631118774414

Token 82: 'q' (ID: 80)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -1.2311960458755493
    2. 'prev' → logprob: -1.6061960458755493
    3. 'nodes' → logprob: -2.6061959266662598
    4. 'current' → logprob: -3.2311959266662598
    5. 'node' → logprob: -3.2311959266662598
    6. '[' → logprob: -3.2311959266662598
    7. '<|end|>' → logprob: -3.3561959266662598
    8. 'head' → logprob: -3.3561959266662598
    9. 'd' → logprob: -3.7311959266662598
    10. 'links' → logprob: -3.8561959266662598

Token 83: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.2211257219314575
    2. ' =' → logprob: -1.2211257219314575
    3. 'u' → logprob: -1.5961257219314575
    4. 's' → logprob: -2.096125602722168
    5. '=[]' → logprob: -3.846125602722168
    6. 'uer' → logprob: -4.221125602722168
    7. '_' → logprob: -4.346125602722168
    8. 'ues' → logprob: -4.346125602722168
    9. 'uries' → logprob: -4.346125602722168
    10. '_queries' → logprob: -5.721125602722168

Token 84: ' list' (ID: 1562)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.7061484456062317
    2. '[int' → logprob: -0.9561484456062317
    3. '[' → logprob: -2.956148386001587
    4. ' [' → logprob: -3.581148386001587
    5. ' []' → logprob: -3.956148386001587
    6. '[list' → logprob: -4.581148624420166
    7. '[input' → logprob: -5.706148624420166
    8. 'int' → logprob: -5.956148624420166
    9. 'list' → logprob: -6.331148624420166
    10. '[q' → logprob: -6.581148624420166

Token 85: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.00042686203960329294
    2. '(' → logprob: -7.875426769256592
    3. '(int' → logprob: -10.25042724609375
    4. '(list' → logprob: -12.62542724609375
    5. '(lambda' → logprob: -13.00042724609375
    6. '(range' → logprob: -13.25042724609375
    7. '(input' → logprob: -13.62542724609375
    8. 'map' → logprob: -14.50042724609375
    9. '(tuple' → logprob: -14.75042724609375
    10. ' (' → logprob: -14.87542724609375

Token 86: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -1.0683535037969705e-05
    2. '(' → logprob: -12.25001049041748
    3. ' (' → logprob: -13.00001049041748
    4. 'int' → logprob: -13.62501049041748
    5. ',int' → logprob: -14.00001049041748
    6. '<int' → logprob: -14.37501049041748
    7. '=int' → logprob: -14.75001049041748
    8. ':int' → logprob: -16.125011444091797
    9. '(lambda' → logprob: -16.125011444091797
    10. ']int' → logprob: -16.125011444091797

Token 87: ',input' (ID: 123014)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.14459256827831268
    2. ',int' → logprob: -2.019592523574829
    3. ',' → logprob: -7.144592761993408
    4. ',input' → logprob: -7.769592761993408
    5. '(input' → logprob: -8.26959228515625
    6. '(' → logprob: -8.26959228515625
    7. ' (' → logprob: -10.14459228515625
    8. '(),' → logprob: -10.39459228515625
    9. ':int' → logprob: -10.64459228515625
    10. ' ,' → logprob: -10.76959228515625

Token 88: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -7.791440293658525e-05
    2. '()' → logprob: -9.750078201293945
    3. '.' → logprob: -11.000078201293945
    4. '(' → logprob: -13.375078201293945
    5. '.readline' → logprob: -14.375078201293945
    6. '())' → logprob: -15.250078201293945
    7. ' ().' → logprob: -16.000078201293945
    8. ')' → logprob: -16.500078201293945
    9. 'int' → logprob: -16.625078201293945
    10. '()))' → logprob: -16.750078201293945

Token 89: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -8.895480277715251e-06
    2. 'strip' → logprob: -11.750008583068848
    3. 'spl' → logprob: -14.750008583068848
    4. 'rstrip' → logprob: -15.000008583068848
    5. ' split' → logprob: -16.250009536743164
    6. 's' → logprob: -16.625009536743164
    7. '.split' → logprob: -16.750009536743164
    8. '(split' → logprob: -17.500009536743164
    9. 'read' → logprob: -17.625009536743164
    10. ')' → logprob: -17.625009536743164

Token 90: '()))

' (ID: 125972)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.590872585773468
    2. '))' → logprob: -0.840872585773468
    3. ')' → logprob: -5.090872764587402
    4. '()' → logprob: -5.215872764587402
    5. '())' → logprob: -5.840872764587402
    6. '(' → logprob: -8.090872764587402
    7. '()))
' → logprob: -11.590872764587402
    8. '()));' → logprob: -11.715872764587402
    9. ' ))' → logprob: -12.715872764587402
    10. ')))' → logprob: -13.715872764587402

Token 91: 'nodes' (ID: 44664)
  Prédit: 'head'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'head' → logprob: -0.4295292794704437
    2. 'prev' → logprob: -2.3045291900634766
    3. 'nodes' → logprob: -2.5545291900634766
    4. 'd' → logprob: -3.0545291900634766
    5. 'heads' → logprob: -3.4295291900634766
    6. 'links' → logprob: -4.054529190063477
    7. 'root' → logprob: -4.179529190063477
    8. '#' → logprob: -4.429529190063477
    9. 'node' → logprob: -4.679529190063477
    10. 'l' → logprob: -5.929529190063477

Token 92: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.054892443120479584
    2. '=' → logprob: -2.9298925399780273
    3. '[' → logprob: -12.804892539978027
    4. ' =[' → logprob: -12.804892539978027
    5. '=[]' → logprob: -12.804892539978027
    6. '=[' → logprob: -14.554892539978027
    7. 's' → logprob: -15.179892539978027
    8. ' ' → logprob: -15.429892539978027
    9. ',' → logprob: -15.429892539978027
    10. '＝' → logprob: -15.679892539978027

Token 93: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5540838241577148
    2. ' [' → logprob: -0.9290838241577148
    3. '[]' → logprob: -4.304083824157715
    4. ' []' → logprob: -4.304083824157715
    5. '[N' → logprob: -6.679083824157715
    6. '[n' → logprob: -7.554083824157715
    7. '[a' → logprob: -7.554083824157715
    8. '[node' → logprob: -7.804083824157715
    9. '{}' → logprob: -9.304083824157715
    10. ' [[]' → logprob: -9.304083824157715

Token 94: 'Node' (ID: 2701)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.4780990183353424
    2. 'Node' → logprob: -0.97809898853302
    3. ' None' → logprob: -6.2280988693237305
    4. ' Node' → logprob: -6.3530988693237305
    5. ']' → logprob: -8.72809886932373
    6. '[' → logprob: -10.10309886932373
    7. '[]' → logprob: -10.97809886932373
    8. 'N' → logprob: -10.97809886932373
    9. 'No' → logprob: -11.47809886932373
    10. '	Node' → logprob: -11.72809886932373

Token 95: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.13153672218322754
    2. '(a' → logprob: -2.3815367221832275
    3. '(' → logprob: -4.381536483764648
    4. '(num' → logprob: -4.631536483764648
    5. '(x' → logprob: -5.006536483764648
    6. '(n' → logprob: -6.381536483764648
    7. '(ai' → logprob: -9.381536483764648
    8. '()' → logprob: -10.256536483764648
    9. '((' → logprob: -10.381536483764648
    10. '(s' → logprob: -12.006536483764648

Token 96: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005138288717716932
    2. '+' → logprob: -5.380138397216797
    3. ' )' → logprob: -7.880138397216797
    4. ' +' → logprob: -9.005138397216797
    5. ' ' → logprob: -11.755138397216797
    6. '+)' → logprob: -12.755138397216797
    7. ')
' → logprob: -13.505138397216797
    8. ',' → logprob: -14.380138397216797
    9. '))' → logprob: -14.380138397216797
    10. '(' → logprob: -14.505138397216797

Token 97: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3913690745830536
    2. 'for' → logprob: -1.766369104385376
    3. ')' → logprob: -1.891369104385376
    4. ' ' → logprob: -6.391368865966797
    5. ' )' → logprob: -8.641368865966797
    6. '+' → logprob: -9.391368865966797
    7. ']' → logprob: -10.266368865966797
    8. '()' → logprob: -10.391368865966797
    9. '	for' → logprob: -11.641368865966797
    10. ')]' → logprob: -12.016368865966797

Token 98: ' i' (ID: 575)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.06289085000753403
    2. 'range' → logprob: -2.8128907680511475
    3. '(range' → logprob: -7.437891006469727
    4. ' i' → logprob: -8.812891006469727
    5. '_' → logprob: -9.687891006469727
    6. ' ' → logprob: -9.812891006469727
    7. 'i' → logprob: -10.562891006469727
    8. ' in' → logprob: -10.562891006469727
    9. '	range' → logprob: -12.312891006469727
    10. ' _' → logprob: -12.812891006469727

Token 99: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2545013129711151
    2. 'in' → logprob: -1.5045013427734375
    3. 'range' → logprob: -6.6295013427734375
    4. '(' → logprob: -7.6295013427734375
    5. ',' → logprob: -8.254501342773438
    6. ' range' → logprob: -8.379501342773438
    7. '(range' → logprob: -8.754501342773438
    8. '(n' → logprob: -10.879501342773438
    9. ',n' → logprob: -10.879501342773438
    10. ' ' → logprob: -11.379501342773438

Token 100: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.6931878328323364
    2. 'range' → logprob: -0.6931878328323364
    3. 'a' → logprob: -10.693187713623047
    4. '(range' → logprob: -11.943187713623047
    5. ' a' → logprob: -12.068187713623047
    6. ' ' → logprob: -12.943187713623047
    7. 'rang' → logprob: -13.693187713623047
    8. '	range' → logprob: -14.568187713623047
    9. 'r' → logprob: -15.068187713623047
    10. 'ra' → logprob: -15.443187713623047

Token 101: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.16077746450901031
    2. '(' → logprob: -1.9107774496078491
    3. '(M' → logprob: -8.16077709197998
    4. '(len' → logprob: -8.41077709197998
    5. '(n' → logprob: -10.66077709197998
    6. '((' → logprob: -12.66077709197998
    7. '(
' → logprob: -13.03577709197998
    8. '(Q' → logprob: -13.03577709197998
    9. '(-' → logprob: -13.16077709197998
    10. ' (' → logprob: -13.16077709197998

Token 102: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0001439459010725841
    2. ')' → logprob: -9.500144004821777
    3. ' )' → logprob: -9.625144004821777
    4. ']' → logprob: -13.625144004821777
    5. '+' → logprob: -14.750144004821777
    6. ')]
' → logprob: -14.875144004821777
    7. ')])' → logprob: -15.375144004821777
    8. ')}' → logprob: -15.750144004821777
    9. ' ' → logprob: -15.750144004821777
    10. '))' → logprob: -16.00014305114746

Token 103: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.003694493556395173
    2. 'prev' → logprob: -6.003694534301758
    3. ' for' → logprob: -7.003694534301758
    4. 'head' → logprob: -9.253694534301758
    5. 'current' → logprob: -10.253694534301758
    6. '<|end|>' → logprob: -10.253694534301758
    7. 'last' → logprob: -10.503694534301758
    8. 'a' → logprob: -10.628694534301758
    9. ')' → logprob: -10.628694534301758
    10. 'i' → logprob: -11.128694534301758

Token 104: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.002341396640986204
    2. 'i' → logprob: -6.377341270446777
    3. '_' → logprob: -8.127341270446777
    4. ' _' → logprob: -8.502341270446777
    5. ' ' → logprob: -9.127341270446777
    6. '_i' → logprob: -10.502341270446777
    7. '	i' → logprob: -13.627341270446777
    8. '(i' → logprob: -14.502341270446777
    9. ' range' → logprob: -14.502341270446777
    10. ' idx' → logprob: -14.877341270446777

Token 105: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.006799329072237015
    2. 'in' → logprob: -5.006799221038818
    3. ' ' → logprob: -9.631799697875977
    4. ',' → logprob: -12.131799697875977
    5. ' i' → logprob: -12.756799697875977
    6. '	in' → logprob: -13.006799697875977
    7. 'range' → logprob: -13.631799697875977
    8. 'n' → logprob: -13.631799697875977
    9. '  ' → logprob: -13.756799697875977
    10. '1' → logprob: -14.256799697875977

Token 106: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.07889771461486816
    2. 'range' → logprob: -2.578897714614868
    3. '(range' → logprob: -12.578897476196289
    4. ' ' → logprob: -12.953897476196289
    5. '	range' → logprob: -13.328897476196289
    6. '  ' → logprob: -15.953897476196289
    7. ' xrange' → logprob: -15.953897476196289
    8. '   ' → logprob: -16.07889747619629
    9. ' ran' → logprob: -16.95389747619629
    10. '1' → logprob: -17.20389747619629

Token 107: '(N' (ID: 10564)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.20143868029117584
    2. '(N' → logprob: -1.7014386653900146
    3. '(M' → logprob: -11.326438903808594
    4. '(len' → logprob: -12.576438903808594
    5. '(n' → logprob: -12.701438903808594
    6. ' (' → logprob: -12.701438903808594
    7. '1' → logprob: -13.076438903808594
    8. '(
' → logprob: -14.201438903808594
    9. '(

' → logprob: -15.451438903808594
    10. '()' → logprob: -15.576438903808594

Token 108: '):
' (ID: 1883)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.052965257316827774
    2. ' -' → logprob: -3.0529651641845703
    3. '):' → logprob: -5.55296516418457
    4. '):
' → logprob: -7.92796516418457
    5. ' ):' → logprob: -10.05296516418457
    6. '1' → logprob: -10.42796516418457
    7. ')' → logprob: -10.42796516418457
    8. ' ' → logprob: -10.67796516418457
    9. ' ):
' → logprob: -13.17796516418457
    10. '
' → logprob: -13.17796516418457

Token 109: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14792822301387787
    2. ' if' → logprob: -2.022928237915039
    3. ' nodes' → logprob: -5.522928237915039
    4. 'if' → logprob: -7.647928237915039
    5. 'nodes' → logprob: -8.397928237915039
    6. '	nodes' → logprob: -8.647928237915039
    7. '<|end|>' → logprob: -8.897928237915039
    8. '   ' → logprob: -10.397928237915039
    9. '	if' → logprob: -10.397928237915039
    10. '(nodes' → logprob: -10.647928237915039

Token 110: ' nodes' (ID: 15749)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.10739932209253311
    2. 'if' → logprob: -2.7323992252349854
    3. '   ' → logprob: -3.8573992252349854
    4. ' nodes' → logprob: -4.3573994636535645
    5. 'nodes' (adapté à ' nodes') → logprob: -6.6073994636535645
    6. ' for' → logprob: -6.8573994636535645
    7. 'for' → logprob: -8.732398986816406
    8. '	nodes' → logprob: -8.857398986816406
    9. '	if' → logprob: -9.982398986816406
    10. ' ' → logprob: -10.357398986816406

Token 111: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.011001136153936386
    2. '[' → logprob: -4.761001110076904
    3. '[num' → logprob: -7.011001110076904
    4. '[n' → logprob: -8.136001586914062
    5. '-' → logprob: -8.261001586914062
    6. '[max' → logprob: -8.261001586914062
    7. '[node' → logprob: -8.386001586914062
    8. '.prev' → logprob: -8.761001586914062
    9. '[-' → logprob: -9.261001586914062
    10. '[N' → logprob: -10.761001586914062

Token 112: '].' (ID: 1651)
  Prédit: '.prev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.prev' → logprob: -0.13832812011241913
    2. '.next' → logprob: -2.6383280754089355
    3. '].' → logprob: -3.1383280754089355
    4. '.' → logprob: -4.8883280754089355
    5. ').' → logprob: -5.5133280754089355
    6. ' .' → logprob: -6.3883280754089355
    7. '.previous' → logprob: -7.7633280754089355
    8. ' ].' → logprob: -8.638328552246094
    9. 'prev' → logprob: -8.638328552246094
    10. '.num' → logprob: -10.013328552246094

Token 113: 'next' (ID: 7311)
  Prédit: 'next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.3675786852836609
    2. 'num' → logprob: -1.4925787448883057
    3. 'prev' → logprob: -2.4925787448883057
    4. ' next' → logprob: -10.117578506469727
    5. 'n' → logprob: -11.367578506469727
    6. ' num' → logprob: -11.992578506469727
    7. '_next' → logprob: -12.242578506469727
    8. '.next' → logprob: -12.492578506469727
    9. '```' → logprob: -12.742578506469727
    10. 'number' → logprob: -12.867578506469727

Token 114: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759485960006714
    2. '=' → logprob: -0.8259485960006714
    3. '=i' → logprob: -12.450948715209961
    4. ' ' → logprob: -13.200948715209961
    5. 'if' → logprob: -14.200948715209961
    6. '=None' → logprob: -14.200948715209961
    7. ',' → logprob: -14.450948715209961
    8. ' if' → logprob: -15.450948715209961
    9. '＝' → logprob: -15.700948715209961
    10. '=n' → logprob: -16.07594871520996

Token 115: ' nodes' (ID: 15749)
  Prédit: ' nodes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nodes' → logprob: -0.515400767326355
    2. 'nodes' → logprob: -1.015400767326355
    3. ' None' → logprob: -3.7654008865356445
    4. 'None' → logprob: -4.2654008865356445
    5. ' i' → logprob: -6.7654008865356445
    6. 'i' → logprob: -7.2654008865356445
    7. '(nodes' → logprob: -7.8904008865356445
    8. '	nodes' → logprob: -8.015400886535645
    9. ' ' → logprob: -8.390400886535645
    10. '   ' → logprob: -8.515400886535645

Token 116: '[(' (ID: 20542)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.005746998358517885
    2. '[(' → logprob: -5.255746841430664
    3. '[min' → logprob: -7.630746841430664
    4. '[' → logprob: -11.380746841430664
    5. 'i' → logprob: -11.755746841430664
    6. '(i' → logprob: -12.380746841430664
    7. '[
' → logprob: -13.130746841430664
    8. '[max' → logprob: -13.755746841430664
    9. ' [' → logprob: -15.630746841430664
    10. 'min' → logprob: -15.755746841430664

Token 117: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00683057913556695
    2. '(i' → logprob: -5.00683069229126
    3. ' i' → logprob: -9.381830215454102
    4. ' (' → logprob: -11.006830215454102
    5. '   ' → logprob: -11.881830215454102
    6. ' ' → logprob: -13.256830215454102
    7. '0' → logprob: -13.756830215454102
    8. '(' → logprob: -13.881830215454102
    9. '1' → logprob: -14.256830215454102
    10. '{i' → logprob: -14.256830215454102

Token 118: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.28174465894699097
    2. 'i' → logprob: -1.9067447185516357
    3. '[i' → logprob: -3.6567447185516357
    4. ' +' → logprob: -3.7817447185516357
    5. '+i' → logprob: -4.406744480133057
    6. '-' → logprob: -4.531744480133057
    7. ' i' → logprob: -4.531744480133057
    8. '(i' → logprob: -4.656744480133057
    9. '1' → logprob: -5.781744480133057
    10. ' -' → logprob: -6.281744480133057

Token 119: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004324573092162609
    2. ' ' → logprob: -7.75043249130249
    3. 'i' → logprob: -14.937932014465332
    4. '```' → logprob: -15.250432014465332
    5. '   ' → logprob: -15.562932014465332
    6. ')' → logprob: -15.625432014465332
    7. '`' → logprob: -16.00043296813965
    8. '+' → logprob: -16.43793296813965
    9. '(' → logprob: -16.68793296813965
    10. '  ' → logprob: -16.81293296813965

Token 120: ')%' (ID: 57656)
  Prédit: ')%'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')%' → logprob: -0.1003013476729393
    2. ')' → logprob: -2.3503012657165527
    3. ' )' → logprob: -9.475301742553711
    4. '%' → logprob: -11.100301742553711
    5. '%i' → logprob: -14.100301742553711
    6. ']%' → logprob: -14.225301742553711
    7. ' %' → logprob: -14.725301742553711
    8. ')i' → logprob: -15.225301742553711
    9. '%d' → logprob: -15.850301742553711
    10. ')#' → logprob: -15.850301742553711

Token 121: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0009114635176956654
    2. ' N' → logprob: -7.000911235809326
    3. ' ' → logprob: -18.125911712646484
    4. '	N' → logprob: -20.500911712646484
    5. '
' → logprob: -20.625911712646484
    6. '(N' → logprob: -21.625911712646484
    7. '>N' → logprob: -21.750911712646484
    8. '```' → logprob: -22.250911712646484
    9. '`' → logprob: -22.375911712646484
    10. ']' → logprob: -22.375911712646484

Token 122: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.01787082850933075
    2. ')' → logprob: -4.142870903015137
    3. ')]' → logprob: -6.517870903015137
    4. ']
' → logprob: -8.517870903015137
    5. '<|end|>' → logprob: -9.517870903015137
    6. '])' → logprob: -10.017870903015137
    7. ' ]' → logprob: -10.892870903015137
    8. ']

' → logprob: -11.767870903015137
    9. ')
' → logprob: -12.892870903015137
    10. ' ' → logprob: -13.892870903015137

Token 123: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11618366837501526
    2. 'nodes' → logprob: -2.2411837577819824
    3. ' nodes' → logprob: -5.741183757781982
    4. '	nodes' → logprob: -9.491183280944824
    5. 'for' → logprob: -10.491183280944824
    6. '(nodes' → logprob: -11.116183280944824
    7. ' for' → logprob: -11.741183280944824
    8. ' ' → logprob: -12.366183280944824
    9. '.nodes' → logprob: -12.491183280944824
    10. '```' → logprob: -12.741183280944824

Token 124: ' nodes' (ID: 15749)
  Prédit: 'nodes'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nodes' (adapté à ' nodes') → logprob: -0.0319136381149292
    2. '   ' → logprob: -4.156913757324219
    3. ' nodes' → logprob: -4.156913757324219
    4. '	nodes' → logprob: -9.906913757324219
    5. ' ' → logprob: -10.781913757324219
    6. '.nodes' → logprob: -12.031913757324219
    7. '       ' → logprob: -12.281913757324219
    8. '(nodes' → logprob: -12.281913757324219
    9. 'if' → logprob: -12.406913757324219
    10. '
' → logprob: -12.906913757324219

Token 125: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -9.007317567011341e-05
    2. '[' → logprob: -9.375089645385742
    3. '[(' → logprob: -12.750089645385742
    4. '[].' → logprob: -14.375089645385742
    5. '[I' → logprob: -14.625089645385742
    6. '[j' → logprob: -15.750089645385742
    7. ')[' → logprob: -16.375089645385742
    8. 'i' → logprob: -16.375089645385742
    9. '.' → logprob: -16.500089645385742
    10. '```' → logprob: -16.500089645385742

Token 126: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -2.093505099765025e-05
    2. '.prev' → logprob: -11.875020980834961
    3. ']' → logprob: -12.125020980834961
    4. '.' → logprob: -12.500020980834961
    5. ' ].' → logprob: -12.625020980834961
    6. ').' → logprob: -14.250020980834961
    7. 'prev' → logprob: -15.375020980834961
    8. '}.' → logprob: -15.500020980834961
    9. ']._' → logprob: -17.00002098083496
    10. '>.' → logprob: -17.00002098083496

Token 127: 'prev' (ID: 15969)
  Prédit: 'prev'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prev' → logprob: -8.685467764735222e-05
    2. 'next' → logprob: -9.375086784362793
    3. ' prev' → logprob: -13.500086784362793
    4. '	prev' → logprob: -14.500086784362793
    5. '.prev' → logprob: -16.87508773803711
    6. '(prev' → logprob: -18.00008773803711
    7. ' ' → logprob: -18.87508773803711
    8. 'previous' → logprob: -19.00008773803711
    9. '_prev' → logprob: -19.12508773803711
    10. '```' → logprob: -19.50008773803711

Token 128: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1002197191119194
    2. '=' → logprob: -2.3502197265625
    3. ' ' → logprob: -11.3502197265625
    4. ')' → logprob: -15.1002197265625
    5. '(nodes' → logprob: -15.1002197265625
    6. '=n' → logprob: -15.4752197265625
    7. ' nodes' → logprob: -15.6002197265625
    8. '.' → logprob: -16.7252197265625
    9. ',' → logprob: -16.7252197265625
    10. '<|end|>' → logprob: -16.8502197265625

Token 129: ' nodes' (ID: 15749)
  Prédit: ' nodes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nodes' → logprob: -0.6932023167610168
    2. 'nodes' → logprob: -0.6932023167610168
    3. '(nodes' → logprob: -10.068202018737793
    4. '	nodes' → logprob: -11.443202018737793
    5. '.nodes' → logprob: -14.193202018737793
    6. ' ' → logprob: -14.818202018737793
    7. 'n' → logprob: -15.068202018737793
    8. 'node' → logprob: -15.693202018737793
    9. '_nodes' → logprob: -15.943202018737793
    10. '   ' → logprob: -16.19320297241211

Token 130: '[(' (ID: 20542)
  Prédit: '[('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.04989796131849289
    2. '[i' → logprob: -3.0498979091644287
    3. '[' → logprob: -6.674898147583008
    4. ' [(' → logprob: -11.174898147583008
    5. '[
' → logprob: -11.174898147583008
    6. '```' → logprob: -12.049898147583008
    7. '[((' → logprob: -12.424898147583008
    8. '(i' → logprob: -13.299898147583008
    9. ')' → logprob: -13.549898147583008
    10. '   ' → logprob: -13.799898147583008

Token 131: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0015174767468124628
    2. '(i' → logprob: -6.501517295837402
    3. '(N' → logprob: -11.876517295837402
    4. 'N' → logprob: -12.126517295837402
    5. ' (' → logprob: -13.876517295837402
    6. ' i' → logprob: -14.376517295837402
    7. '(' → logprob: -14.876517295837402
    8. '[i' → logprob: -15.251517295837402
    9. '
' → logprob: -15.626517295837402
    10. ' ' → logprob: -16.50151824951172

Token 132: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.03607313334941864
    2. '(i' → logprob: -4.036073207855225
    3. 'i' → logprob: -4.411073207855225
    4. ' -' → logprob: -5.661073207855225
    5. '[i' → logprob: -7.036073207855225
    6. '+' → logprob: -7.286073207855225
    7. ' (' → logprob: -7.911073207855225
    8. ' i' → logprob: -9.536072731018066
    9. ' ' → logprob: -9.786072731018066
    10. ')i' → logprob: -11.036072731018066

Token 133: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.522638169466518e-05
    2. ' ' → logprob: -10.750024795532227
    3. ')' → logprob: -14.000024795532227
    4. '```' → logprob: -14.562524795532227
    5. ']' → logprob: -14.875024795532227
    6. '
' → logprob: -15.062524795532227
    7. '2' → logprob: -15.312524795532227
    8. '   ' → logprob: -15.312524795532227
    9. 'i' → logprob: -15.562524795532227
    10. '0' → logprob: -16.187524795532227

Token 134: ')%' (ID: 57656)
  Prédit: ')%'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')%' → logprob: -0.0020925651770085096
    2. ')' → logprob: -6.877092361450195
    3. ']%' → logprob: -7.127092361450195
    4. ')i' → logprob: -8.877092361450195
    5. '%i' → logprob: -10.252092361450195
    6. ')]' → logprob: -10.502092361450195
    7. 'i' → logprob: -10.752092361450195
    8. '[i' → logprob: -11.377092361450195
    9. '%' → logprob: -11.752092361450195
    10. '1' → logprob: -13.127092361450195

Token 135: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -5.5577775128767826e-06
    2. ' N' → logprob: -12.625005722045898
    3. ']' → logprob: -13.625005722045898
    4. ')' → logprob: -14.375005722045898
    5. '```' → logprob: -16.1250057220459
    6. ' ' → logprob: -16.5000057220459
    7. '`' → logprob: -16.7500057220459
    8. 'i' → logprob: -17.1250057220459
    9. '])' → logprob: -17.2500057220459
    10. '(' → logprob: -17.3750057220459

Token 136: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.21703174710273743
    2. ')]' → logprob: -1.967031717300415
    3. '])' → logprob: -2.967031717300415
    4. ')' → logprob: -5.592031955718994
    5. ')])' → logprob: -10.967031478881836
    6. '])]' → logprob: -11.717031478881836
    7. ' ]' → logprob: -12.342031478881836
    8. ']
' → logprob: -12.592031478881836
    9. ']}' → logprob: -13.842031478881836
    10. ' ])' → logprob: -14.342031478881836

Token 137: 'current' (ID: 5804)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3533032238483429
    2. 'def' → logprob: -2.2283031940460205
    3. 'head' → logprob: -2.4783031940460205
    4. 'pos' → logprob: -4.1033034324646
    5. 'group' → logprob: -4.1033034324646
    6. 'answer' → logprob: -4.7283034324646
    7. 'current' → logprob: -4.7283034324646
    8. 'cur' → logprob: -4.8533034324646
    9. 'answers' → logprob: -5.2283034324646
    10. 'stack' → logprob: -5.3533034324646

Token 138: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0048314305022358894
    2. '=' → logprob: -5.504831314086914
    3. '_node' → logprob: -7.504831314086914
    4. '_' → logprob: -9.129831314086914
    5. '_index' → logprob: -10.129831314086914
    6. '_idx' → logprob: -10.504831314086914
    7. '_id' → logprob: -12.629831314086914
    8. '_num' → logprob: -12.754831314086914
    9. ' ' → logprob: -13.004831314086914
    10. '_nodes' → logprob: -13.004831314086914

Token 139: ' nodes' (ID: 15749)
  Prédit: 'nodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nodes' → logprob: -0.003818606724962592
    2. '0' → logprob: -6.128818511962891
    3. ' nodes' → logprob: -6.503818511962891
    4. 'None' → logprob: -10.00381851196289
    5. '(nodes' → logprob: -10.25381851196289
    6. 'a' → logprob: -11.12881851196289
    7. ' ' → logprob: -11.75381851196289
    8. '[' → logprob: -12.00381851196289
    9. '	nodes' → logprob: -12.25381851196289
    10. 'node' → logprob: -13.12881851196289

Token 140: '[' (ID: 58)
  Prédit: '[a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.6410029530525208
    2. '[' → logprob: -0.7660029530525208
    3. '[M' → logprob: -5.266003131866455
    4. '[q' → logprob: -6.516003131866455
    5. 'a' → logprob: -7.391003131866455
    6. '0' → logprob: -7.516003131866455
    7. ' [' → logprob: -9.266002655029297
    8. '[s' → logprob: -9.641002655029297
    9. '[m' → logprob: -9.891002655029297
    10. '[i' → logprob: -10.266002655029297

Token 141: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03269385173916817
    2. 'a' → logprob: -3.532693862915039
    3. 'M' → logprob: -6.532693862915039
    4. 'q' → logprob: -6.782693862915039
    5. '(' → logprob: -8.407693862915039
    6. ' ' → logprob: -9.782693862915039
    7. 'Q' → logprob: -11.407693862915039
    8. '(a' → logprob: -11.532693862915039
    9. ' a' → logprob: -11.657693862915039
    10. 'N' → logprob: -12.220193862915039

Token 142: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.02668166533112526
    2. ')' → logprob: -3.651681661605835
    3. ')]' → logprob: -8.276681900024414
    4. ' ]' → logprob: -9.026681900024414
    5. ']
' → logprob: -13.151681900024414
    6. '])' → logprob: -13.776681900024414
    7. '}' → logprob: -13.901681900024414
    8. ' )' → logprob: -13.901681900024414
    9. ']

' → logprob: -14.776681900024414
    10. '#' → logprob: -15.276681900024414

Token 143: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.003589021973311901
    2. 'output' → logprob: -6.128589153289795
    3. 'result' → logprob: -7.378589153289795
    4. 'def' → logprob: -8.378588676452637
    5. 'results' → logprob: -8.503588676452637
    6. 'answer' → logprob: -8.753588676452637
    7. 'answers' → logprob: -9.503588676452637
    8. 'res' → logprob: -10.128588676452637
    9. 'out' → logprob: -10.628588676452637
    10. 'idx' → logprob: -11.378588676452637

Token 144: ' x' (ID: 1215)
  Prédit: ' _'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.6902772784233093
    2. ' i' → logprob: -1.190277338027954
    3. ' x' → logprob: -1.815277338027954
    4. '_' → logprob: -4.440277099609375
    5. 'x' → logprob: -5.565277099609375
    6. 'i' → logprob: -5.940277099609375
    7. ' q' → logprob: -6.190277099609375
    8. ' qi' → logprob: -6.440277099609375
    9. ' query' → logprob: -6.440277099609375
    10. ' ' → logprob: -6.565277099609375

Token 145: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.08959492295980453
    2. 'in' → logprob: -2.464594841003418
    3. ' ' → logprob: -7.714594841003418
    4. ',' → logprob: -9.589594841003418
    5. '_in' → logprob: -10.214594841003418
    6. '_' → logprob: -10.964594841003418
    7. ' i' → logprob: -11.214594841003418
    8. 'In' → logprob: -11.339594841003418
    9. '	in' → logprob: -11.339594841003418
    10. 'i' → logprob: -11.839594841003418

Token 146: ' a' (ID: 261)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.8065664768218994
    2. ' q' → logprob: -0.8065664768218994
    3. 'a' → logprob: -3.1815664768218994
    4. ' a' → logprob: -3.3065664768218994
    5. ' range' → logprob: -3.6815664768218994
    6. 'range' → logprob: -5.68156623840332
    7. 'M' → logprob: -8.80656623840332
    8. ' M' → logprob: -9.05656623840332
    9. ' ' → logprob: -10.24406623840332
    10. '   ' → logprob: -10.68156623840332

Token 147: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -8.73314929776825e-05
    2. ' :' → logprob: -9.87508773803711
    3. ':
' → logprob: -10.37508773803711
    4. '):' → logprob: -12.75008773803711
    5. '[' → logprob: -14.37508773803711
    6. 'current' → logprob: -15.37508773803711
    7. '[:-' → logprob: -16.25008773803711
    8. '():' → logprob: -16.37508773803711
    9. ':index' → logprob: -16.37508773803711
    10. '[::-' → logprob: -16.50008773803711

Token 148: '   ' (ID: 271)
  Prédit: ' current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.675520122051239
    2. '   ' → logprob: -1.3005201816558838
    3. 'current' → logprob: -1.5505201816558838
    4. '	current' → logprob: -5.675519943237305
    5. ' if' → logprob: -6.175519943237305
    6. ' while' → logprob: -8.300519943237305
    7. 'if' → logprob: -8.800519943237305
    8. ' for' → logprob: -8.800519943237305
    9. '
' → logprob: -9.050519943237305
    10. 'while' → logprob: -9.675519943237305

Token 149: ' if' (ID: 538)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.031567882746458054
    2. 'for' → logprob: -3.7815678119659424
    3. 'if' (adapté à ' if') → logprob: -5.7815680503845215
    4. ' current' → logprob: -6.0315680503845215
    5. 'print' → logprob: -7.0315680503845215
    6. 'while' → logprob: -7.4065680503845215
    7. '   ' → logprob: -7.6565680503845215
    8. 'node' → logprob: -8.531567573547363
    9. 'temp' → logprob: -8.531567573547363
    10. ' for' → logprob: -9.281567573547363

Token 150: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.4198591411113739
    2. ' current' → logprob: -1.4198591709136963
    3. 'x' → logprob: -2.5448591709136963
    4. 'current' → logprob: -4.419858932495117
    5. ' M' → logprob: -5.169858932495117
    6. ' not' → logprob: -6.669858932495117
    7. ' nodes' → logprob: -6.794858932495117
    8. ' ' → logprob: -7.169858932495117
    9. ' q' → logprob: -7.544858932495117
    10. 'M' → logprob: -8.044858932495117

Token 151: '%' (ID: 4)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.06275549530982971
    2. '==' → logprob: -3.062755584716797
    3. ' >' → logprob: -5.062755584716797
    4. ' !=' → logprob: -5.312755584716797
    5. ' <' → logprob: -6.812755584716797
    6. '>' → logprob: -7.562755584716797
    7. ':' → logprob: -8.062755584716797
    8. '-' → logprob: -8.562755584716797
    9. '!=' → logprob: -8.562755584716797
    10. ' ' → logprob: -8.812755584716797

Token 152: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.354041188955307
    2. 'N' → logprob: -1.8540412187576294
    3. 'M' → logprob: -2.10404109954834
    4. ' ' → logprob: -4.85404109954834
    5. '3' → logprob: -5.47904109954834
    6. ' M' → logprob: -5.85404109954834
    7. ' N' → logprob: -6.60404109954834
    8. '10' → logprob: -6.85404109954834
    9. 'x' → logprob: -7.35404109954834
    10. 'current' → logprob: -7.47904109954834

Token 153: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.4743415117263794
    2. ' ==' → logprob: -0.9743415117263794
    3. '!=' → logprob: -9.59934139251709
    4. ' !=' → logprob: -9.72434139251709
    5. ':' → logprob: -9.97434139251709
    6. '0' → logprob: -10.09934139251709
    7. '=' → logprob: -10.34934139251709
    8. ' ' → logprob: -12.22434139251709
    9. '==
' → logprob: -12.84934139251709
    10. ')==' → logprob: -12.97434139251709

Token 154: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.13944128155708313
    2. ' ' → logprob: -2.2644412517547607
    3. '1' → logprob: -3.6394412517547607
    4. ' ' → logprob: -16.139440536499023
    5. '=' → logprob: -16.201940536499023
    6. '```' → logprob: -16.701940536499023
    7. 'current' → logprob: -16.889440536499023
    8. ' current' → logprob: -16.889440536499023
    9. '  ' → logprob: -16.951940536499023
    10. '
' → logprob: -17.139440536499023

Token 155: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.027052907273173332
    2. ':
' → logprob: -3.652052879333496
    3. ' :' → logprob: -7.777052879333496
    4. ' :
' → logprob: -9.152052879333496
    5. ' and' → logprob: -9.277052879333496
    6. '   ' → logprob: -9.652052879333496
    7. ' current' → logprob: -10.277052879333496
    8. 'current' → logprob: -11.527052879333496
    9. ' ' → logprob: -12.402052879333496
    10. ' ==' → logprob: -12.902052879333496

Token 156: '       ' (ID: 309)
  Prédit: ' current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.11448271572589874
    2. '   ' → logprob: -2.7394826412200928
    3. 'current' → logprob: -3.7394826412200928
    4. '       ' → logprob: -4.239482879638672
    5. ' continue' → logprob: -6.114482879638672
    6. '	current' → logprob: -7.239482879638672
    7. '
' → logprob: -7.489482879638672
    8. '    ' → logprob: -8.364482879638672
    9. ' if' → logprob: -8.489482879638672
    10. 'continue' → logprob: -8.489482879638672

Token 157: ' #' (ID: 1069)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.4021838903427124
    2. ' current' → logprob: -1.1521838903427124
    3. 'if' → logprob: -5.527184009552002
    4. 'while' → logprob: -5.652184009552002
    5. 'for' → logprob: -6.277184009552002
    6. '   ' → logprob: -6.777184009552002
    7. ' if' → logprob: -7.027184009552002
    8. ' while' → logprob: -7.027184009552002
    9. '#' (adapté à ' #') → logprob: -7.402184009552002
    10. ' for' → logprob: -7.402184009552002

Token 158: ' clock' (ID: 16523)
  Prédit: ' current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.14973175525665283
    2. 'current' → logprob: -2.1497316360473633
    3. ' if' → logprob: -5.774731636047363
    4. ' node' → logprob: -5.774731636047363
    5. ' temp' → logprob: -6.024731636047363
    6. ' continue' → logprob: -6.399731636047363
    7. ' pass' → logprob: -6.524731636047363
    8. ' while' → logprob: -6.524731636047363
    9. 'if' → logprob: -6.649731636047363
    10. 'temp' → logprob: -7.024731636047363

Token 159: ' wise' (ID: 30331)
  Prédit: 'wise'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wise' → logprob: -4.4894986785948277e-05
    2. ' wise' → logprob: -10.875044822692871
    3. 'w' → logprob: -12.000044822692871
    4. '-wise' → logprob: -12.125044822692871
    5. '=' → logprob: -12.500044822692871
    6. 'current' → logprob: -12.625044822692871
    7. ' =' → logprob: -13.250044822692871
    8. '   ' → logprob: -13.375044822692871
    9. 'Wise' → logprob: -13.750044822692871
    10. 'wis' → logprob: -14.625044822692871

Token 160: '
' (ID: 198)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.37440627813339233
    2. '       ' → logprob: -2.249406337738037
    3. ' current' → logprob: -2.249406337738037
    4. '   ' → logprob: -3.124406337738037
    5. '
' → logprob: -3.249406337738037
    6. '    ' → logprob: -5.749406337738037
    7. '           ' → logprob: -5.749406337738037
    8. '<|end|>' → logprob: -5.999406337738037
    9. '	current' → logprob: -6.124406337738037
    10. ',current' → logprob: -6.874406337738037

Token 161: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.346135139465332
    2. '       ' → logprob: -1.346135139465332
    3. 'current' → logprob: -1.346135139465332
    4. ' current' → logprob: -1.596135139465332
    5. '	current' → logprob: -4.846135139465332
    6. '
' → logprob: -5.346135139465332
    7. ',current' → logprob: -7.221135139465332
    8. '[current' → logprob: -7.346135139465332
    9. '           ' → logprob: -7.971135139465332
    10. '    ' → logprob: -8.096135139465332

Token 162: ' for' (ID: 395)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.2414376586675644
    2. ' current' → logprob: -1.6164376735687256
    3. '   ' → logprob: -4.2414374351501465
    4. 'for' (adapté à ' for') → logprob: -7.2414374351501465
    5. ' for' → logprob: -7.6164374351501465
    6. '       ' → logprob: -8.741437911987305
    7. '	current' → logprob: -9.491437911987305
    8. 'while' → logprob: -10.116437911987305
    9. ' while' → logprob: -11.616437911987305
    10. ' ' → logprob: -12.866437911987305

Token 163: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.03371451422572136
    2. ' _' → logprob: -3.408714532852173
    3. '_i' → logprob: -10.283714294433594
    4. ' i' → logprob: -11.533714294433594
    5. '_j' → logprob: -12.158714294433594
    6. 'i' → logprob: -12.158714294433594
    7. '_current' → logprob: -12.408714294433594
    8. '_node' → logprob: -13.033714294433594
    9. 'current' → logprob: -14.283714294433594
    10. '_x' → logprob: -14.408714294433594

Token 164: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0041780024766922
    2. 'in' → logprob: -5.504178047180176
    3. ' ' → logprob: -9.754178047180176
    4. 'range' → logprob: -10.504178047180176
    5. ' range' → logprob: -12.254178047180176
    6. '    ' → logprob: -12.629178047180176
    7. '  ' → logprob: -13.379178047180176
    8. '_' → logprob: -13.379178047180176
    9. '   ' → logprob: -14.129178047180176
    10. ' _' → logprob: -14.504178047180176

Token 165: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.2812240421772003
    2. ' range' → logprob: -1.406224012374878
    3. 'x' → logprob: -10.156224250793457
    4. 'a' → logprob: -11.406224250793457
    5. ' x' → logprob: -11.656224250793457
    6. 'q' → logprob: -12.156224250793457
    7. ' q' → logprob: -13.406224250793457
    8. ' ' → logprob: -13.406224250793457
    9. ' a' → logprob: -13.656224250793457
    10. '	range' → logprob: -14.031224250793457

Token 166: '(x' (ID: 4061)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.151032492518425
    2. 'M' → logprob: -3.0260324478149414
    3. ' x' → logprob: -3.1510324478149414
    4. '(x' → logprob: -3.1510324478149414
    5. ' M' → logprob: -5.401032447814941
    6. '(M' → logprob: -6.526032447814941
    7. ' (' → logprob: -10.526032447814941
    8. '(' → logprob: -10.651032447814941
    9. '   ' → logprob: -12.151032447814941
    10. 'Q' → logprob: -12.151032447814941

Token 167: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.28155216574668884
    2. '):
' → logprob: -1.4065521955490112
    3. ' ):' → logprob: -8.5315523147583
    4. ' ):
' → logprob: -9.2815523147583
    5. '   ' → logprob: -10.6565523147583
    6. ')' → logprob: -10.9065523147583
    7. '*' → logprob: -10.9065523147583
    8. '+' → logprob: -11.1565523147583
    9. '%' → logprob: -11.2815523147583
    10. '):
' → logprob: -11.4065523147583

Token 168: '           ' (ID: 352)
  Prédit: ' current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.2314935326576233
    2. '       ' → logprob: -1.7314934730529785
    3. 'current' → logprob: -3.9814934730529785
    4. '           ' → logprob: -4.6064934730529785
    5. '   ' → logprob: -7.1064934730529785
    6. '	current' → logprob: -9.856493949890137
    7. ',current' → logprob: -10.731493949890137
    8. '
' → logprob: -11.231493949890137
    9. '.current' → logprob: -11.356493949890137
    10. '(current' → logprob: -11.481493949890137

Token 169: ' current' (ID: 2208)
  Prédit: ' current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.3891337811946869
    2. 'current' (adapté à ' current') → logprob: -1.1391338109970093
    3. '   ' → logprob: -6.139133930206299
    4. '       ' → logprob: -10.26413345336914
    5. '	current' → logprob: -10.26413345336914
    6. '               ' → logprob: -11.01413345336914
    7. '           ' → logprob: -11.63913345336914
    8. '.current' → logprob: -12.88913345336914
    9. ',current' → logprob: -13.26413345336914
    10. ' ' → logprob: -13.51413345336914

Token 170: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03820236399769783
    2. '=' → logprob: -3.2882022857666016
    3. '=current' → logprob: -8.788202285766602
    4. 'current' → logprob: -12.288202285766602
    5. ' current' → logprob: -13.038202285766602
    6. ' ' → logprob: -13.538202285766602
    7. '.' → logprob: -16.2882022857666
    8. ',current' → logprob: -16.8507022857666
    9. '.current' → logprob: -16.9132022857666
    10. ',' → logprob: -16.9757022857666

Token 171: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.07889099419116974
    2. ' current' → logprob: -2.5788910388946533
    3. '.current' → logprob: -14.078890800476074
    4. '[current' → logprob: -16.07889175415039
    5. '(current' → logprob: -16.07889175415039
    6. 'urrent' → logprob: -16.45389175415039
    7. '=current' → logprob: -16.82889175415039
    8. '	current' → logprob: -17.32889175415039
    9. ',current' → logprob: -17.32889175415039
    10. '$current' → logprob: -17.57889175415039

Token 172: '.next' (ID: 6689)
  Prédit: '.next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.next' → logprob: -9.014684110297821e-06
    2. '.prev' → logprob: -11.875008583068848
    3. '.' → logprob: -13.500008583068848
    4. '.current' → logprob: -14.375008583068848
    5. '.previous' → logprob: -17.625009536743164
    6. ' .' → logprob: -18.125009536743164
    7. 'next' → logprob: -18.875009536743164
    8. '.n' → logprob: -20.500009536743164
    9. '.right' → logprob: -20.875009536743164
    10. ').' → logprob: -21.000009536743164

Token 173: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 174: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07259208709001541
    2. '<|end|>' → logprob: -2.82259202003479
    3. 'else' → logprob: -5.072592258453369
    4. '
' → logprob: -6.572592258453369
    5. ' else' → logprob: -6.822592258453369
    6. '<|end|>' → logprob: -6.947592258453369
    7. '    
' → logprob: -8.322591781616211
    8. 'elif' → logprob: -8.947591781616211
    9. ')' → logprob: -9.072591781616211
    10. '```' → logprob: -9.447591781616211

Token 175: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.5863763093948364
    2. '   ' → logprob: -0.8363763093948364
    3. ' else' → logprob: -4.586376190185547
    4. '	else' → logprob: -9.336376190185547
    5. 'elif' → logprob: -9.336376190185547
    6. '       ' → logprob: -11.586376190185547
    7. '<|end|>' → logprob: -13.211376190185547
    8. ' ' → logprob: -13.836376190185547
    9. '
' → logprob: -14.086376190185547
    10. ' elif' → logprob: -14.211376190185547

Token 176: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.32022857666015625
    2. ':
' → logprob: -1.8202285766601562
    3. '       ' → logprob: -2.1952285766601562
    4. '   ' → logprob: -7.445228576660156
    5. '<|end|>' → logprob: -10.945228576660156
    6. '```' → logprob: -11.195228576660156
    7. '):
' → logprob: -11.320228576660156
    8. '{' → logprob: -11.445228576660156
    9. ':

' → logprob: -11.945228576660156
    10. '           ' → logprob: -12.195228576660156

Token 177: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010859989561140537
    2. '#' → logprob: -4.635859966278076
    3. '   ' → logprob: -6.885859966278076
    4. 'for' → logprob: -10.385860443115234
    5. ' #' → logprob: -10.885860443115234
    6. '```' → logprob: -11.135860443115234
    7. '	' → logprob: -11.885860443115234
    8. '           ' → logprob: -11.885860443115234
    9. ' for' → logprob: -14.135860443115234
    10. ' ' → logprob: -14.135860443115234

Token 178: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.7528013586997986
    2. '       ' → logprob: -0.8778013586997986
    3. ' #' → logprob: -2.5028014183044434
    4. 'for' → logprob: -4.127801418304443
    5. ' for' → logprob: -4.502801418304443
    6. '   ' → logprob: -5.627801418304443
    7. ' ' → logprob: -8.002800941467285
    8. '           ' → logprob: -9.377800941467285
    9. '```' → logprob: -9.502800941467285
    10. '    ' → logprob: -10.377800941467285

Token 179: ' counter' (ID: 9446)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.3097974359989166
    2. 'for' → logprob: -2.434797525405884
    3. ' counter' → logprob: -3.059797525405884
    4. ' #' → logprob: -3.184797525405884
    5. ' for' → logprob: -3.309797525405884
    6. '       ' → logprob: -3.684797525405884
    7. 'counter' → logprob: -4.184797286987305
    8. '   ' → logprob: -4.434797286987305
    9. ' ' → logprob: -7.059797286987305
    10. 'antic' → logprob: -8.809797286987305

Token 180: '-clock' (ID: 117513)
  Prédit: 'clock'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'clock' → logprob: -0.028397930786013603
    2. ' clockwise' → logprob: -3.653398036956787
    3. ' clock' → logprob: -6.778398036956787
    4. '       ' → logprob: -7.403398036956787
    5. '_clock' → logprob: -8.153397560119629
    6. '   ' → logprob: -10.528397560119629
    7. '-clock' → logprob: -11.403397560119629
    8. '(clock' → logprob: -11.403397560119629
    9. '.clock' → logprob: -12.653397560119629
    10. 'wise' → logprob: -12.778397560119629

Token 181: ' wise' (ID: 30331)
  Prédit: 'wise'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wise' → logprob: -0.0006725206621922553
    2. ' wise' → logprob: -7.500672340393066
    3. '_w' → logprob: -9.500672340393066
    4. 'w' → logprob: -11.125672340393066
    5. '-wise' → logprob: -11.625672340393066
    6. 'wis' → logprob: -12.125672340393066
    7. 'ise' → logprob: -12.750672340393066
    8. '   ' → logprob: -12.750672340393066
    9. '       ' → logprob: -13.500672340393066
    10. 'Wise' → logprob: -13.625672340393066

Token 182: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.022347424179315567
    2. ' for' → logprob: -4.272347450256348
    3. '   ' → logprob: -5.522347450256348
    4. 'for' → logprob: -5.772347450256348
    5. '
' → logprob: -7.147347450256348
    6. '           ' → logprob: -9.397347450256348
    7. '```' → logprob: -10.272347450256348
    8. ' 
' → logprob: -10.522347450256348
    9. '    
' → logprob: -11.272347450256348
    10. '        
' → logprob: -11.272347450256348

Token 183: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.017220493406057358
    2. 'for' → logprob: -5.017220497131348
    3. ' for' → logprob: -5.142220497131348
    4. '   ' → logprob: -5.392220497131348
    5. '           ' → logprob: -10.392220497131348
    6. '```' → logprob: -11.892220497131348
    7. '    ' → logprob: -12.142220497131348
    8. '	for' → logprob: -12.517220497131348
    9. '	' → logprob: -13.517220497131348
    10. '      ' → logprob: -13.517220497131348

Token 184: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.31493139266967773
    2. 'for' (adapté à ' for') → logprob: -1.3149313926696777
    3. '       ' → logprob: -6.689931392669678
    4. '   ' → logprob: -7.814931392669678
    5. '	for' → logprob: -11.314931869506836
    6. ' ' → logprob: -12.689931869506836
    7. '           ' → logprob: -13.064931869506836
    8. '    ' → logprob: -13.564931869506836
    9. '  ' → logprob: -14.189931869506836
    10. '```' → logprob: -14.314931869506836

Token 185: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.25194549560546875
    2. '_' → logprob: -1.5019454956054688
    3. ' ' → logprob: -11.126945495605469
    4. ' range' → logprob: -13.626945495605469
    5. 'range' → logprob: -15.751945495605469
    6. ' ' → logprob: -16.50194549560547
    7. ' in' → logprob: -16.50194549560547
    8. '  ' → logprob: -16.87694549560547
    9. '   ' → logprob: -17.50194549560547
    10. ' _
' → logprob: -17.50194549560547

Token 186: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.013361389748752117
    2. ' range' → logprob: -4.51336145401001
    3. ' in' → logprob: -6.88836145401001
    4. 'in' → logprob: -7.01336145401001
    5. '_' → logprob: -7.88836145401001
    6. '_range' → logprob: -11.513360977172852
    7. '(range' → logprob: -12.763360977172852
    8. '_in' → logprob: -13.888360977172852
    9. 'ange' → logprob: -13.888360977172852
    10. ' _' → logprob: -14.388360977172852

Token 187: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0006267757853493094
    2. ' range' → logprob: -7.375626564025879
    3. '(range' → logprob: -15.625626564025879
    4. 'x' → logprob: -17.250627517700195
    5. '_' → logprob: -17.625627517700195
    6. 'ran' → logprob: -18.000627517700195
    7. 'rang' → logprob: -18.000627517700195
    8. '	range' → logprob: -18.125627517700195
    9. ' ' → logprob: -18.625627517700195
    10. '_range' → logprob: -18.750627517700195

Token 188: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -2.1888679839321412e-05
    2. 'x' → logprob: -10.875021934509277
    3. '(' → logprob: -13.500021934509277
    4. ' (' → logprob: -14.000021934509277
    5. ' x' → logprob: -14.250021934509277
    6. '(current' → logprob: -19.62502098083496
    7. ' ' → logprob: -19.62502098083496
    8. '(abs' → logprob: -19.75002098083496
    9. '((' → logprob: -19.75002098083496
    10. '(
' → logprob: -19.75002098083496

Token 189: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.01039939746260643
    2. '):' → logprob: -4.885399341583252
    3. '   ' → logprob: -6.260399341583252
    4. '       ' → logprob: -7.510399341583252
    5. 'current' → logprob: -9.38539981842041
    6. '           ' → logprob: -9.63539981842041
    7. ')' → logprob: -9.76039981842041
    8. ':
' → logprob: -9.88539981842041
    9. '(current' → logprob: -11.01039981842041
    10. ':' → logprob: -11.63539981842041

Token 190: '           ' (ID: 352)
  Prédit: ' current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.635979175567627
    2. '       ' → logprob: -1.385979175567627
    3. '           ' → logprob: -1.635979175567627
    4. 'current' → logprob: -3.885979175567627
    5. '   ' → logprob: -5.260979175567627
    6. '	current' → logprob: -11.885978698730469
    7. '```' → logprob: -12.260978698730469
    8. 'urrent' → logprob: -12.885978698730469
    9. ',current' → logprob: -13.135978698730469
    10. '[current' → logprob: -13.260978698730469

Token 191: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' (adapté à ' current') → logprob: -0.5760566592216492
    2. ' current' → logprob: -0.8260566592216492
    3. '   ' → logprob: -9.201056480407715
    4. '       ' → logprob: -11.201056480407715
    5. '	current' → logprob: -14.201056480407715
    6. '.current' → logprob: -14.701056480407715
    7. '```' → logprob: -14.826056480407715
    8. ',current' → logprob: -15.326056480407715
    9. '           ' → logprob: -15.451056480407715
    10. ' ' → logprob: -15.451056480407715

Token 192: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07890795916318893
    2. '=' → logprob: -2.5789079666137695
    3. '=current' → logprob: -10.95390796661377
    4. 'current' → logprob: -14.45390796661377
    5. ' current' → logprob: -16.453907012939453
    6. ' ' → logprob: -16.953907012939453
    7. '.current' → logprob: -18.328907012939453
    8. 'prev' → logprob: -18.328907012939453
    9. '.' → logprob: -18.453907012939453
    10. '   ' → logprob: -18.578907012939453

Token 193: ' current' (ID: 2208)
  Prédit: ' current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.006716674659401178
    2. 'current' → logprob: -5.006716728210449
    3. '.current' → logprob: -13.75671672821045
    4. '[current' → logprob: -16.756715774536133
    5. '	current' → logprob: -17.131715774536133
    6. '=current' → logprob: -17.256715774536133
    7. ' ' → logprob: -17.256715774536133
    8. 'urrent' → logprob: -17.381715774536133
    9. '(current' → logprob: -17.506715774536133
    10. 'Current' → logprob: -17.756715774536133

Token 194: '.prev' (ID: 54166)
  Prédit: '.prev'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.prev' → logprob: -3.762356209335849e-05
    2. '.' → logprob: -10.25003719329834
    3. 'prev' → logprob: -13.25003719329834
    4. ' .' → logprob: -15.12503719329834
    5. '.pre' → logprob: -16.750038146972656
    6. '.previous' → logprob: -17.375038146972656
    7. '	prev' → logprob: -18.000038146972656
    8. '.next' → logprob: -18.125038146972656
    9. '-prev' → logprob: -18.750038146972656
    10. '.p' → logprob: -19.750038146972656

Token 195: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.24655751883983612
    2. 'print' → logprob: -1.7465574741363525
    3. 'result' → logprob: -4.371557712554932
    4. 'answer' → logprob: -4.871557712554932
    5. '#' → logprob: -4.996557712554932
    6. 'current' → logprob: -5.371557712554932
    7. 'while' → logprob: -5.996557712554932
    8. ' for' → logprob: -6.746557712554932
    9. 'output' → logprob: -6.871557712554932
    10. 'prev' → logprob: -7.246557712554932

Token 196: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.33598798513412476
    2. '#' → logprob: -1.9609880447387695
    3. '<|end|>' → logprob: -2.8359880447387695
    4. ' for' → logprob: -3.3359880447387695
    5. ')' → logprob: -3.5859880447387695
    6. '[' → logprob: -5.3359880447387695
    7. '.' → logprob: -5.4609880447387695
    8. '(' → logprob: -5.9609880447387695
    9. 'current' → logprob: -5.9609880447387695
    10. '
' → logprob: -5.9609880447387695

Token 197: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.3711799383163452
    2. 'for' → logprob: -1.6211799383163452
    3. 'current' → logprob: -3.3711800575256348
    4. '#' (adapté à ' #') → logprob: -3.8711800575256348
    5. 'if' → logprob: -3.8711800575256348
    6. ' for' → logprob: -4.121180057525635
    7. '   ' → logprob: -5.496180057525635
    8. ' if' → logprob: -6.121180057525635
    9. 'while' → logprob: -6.496180057525635
    10. 'num' → logprob: -6.496180057525635

Token 198: ' remove' (ID: 6234)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.7077668309211731
    2. 'print' → logprob: -1.5827667713165283
    3. ' current' → logprob: -2.4577667713165283
    4. 'if' → logprob: -2.7077667713165283
    5. ' if' → logprob: -2.8327667713165283
    6. '#' → logprob: -3.8327667713165283
    7. 'for' → logprob: -4.332767009735107
    8. ' for' → logprob: -4.582767009735107
    9. ' print' → logprob: -4.707767009735107
    10. 'pass' → logprob: -5.082767009735107

Token 199: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.485526978969574
    2. ' current' → logprob: -1.1105270385742188
    3. ' if' → logprob: -4.360527038574219
    4. 'if' → logprob: -4.485527038574219
    5. 'prev' → logprob: -4.860527038574219
    6. 'node' → logprob: -4.985527038574219
    7. ' node' → logprob: -4.985527038574219
    8. '   ' → logprob: -5.610527038574219
    9. '#' → logprob: -5.985527038574219
    10. ' prev' → logprob: -7.235527038574219

Token 200: ' (' (ID: 350)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.16753752529621124
    2. 'prev' → logprob: -2.7925374507904053
    3. '   ' → logprob: -3.5425374507904053
    4. 'if' → logprob: -3.6675374507904053
    5. ' current' → logprob: -3.6675374507904053
    6. ' if' → logprob: -5.042537689208984
    7. '.current' → logprob: -6.292537689208984
    8. '.prev' → logprob: -6.667537689208984
    9. ' prev' → logprob: -7.167537689208984
    10. 'node' → logprob: -7.167537689208984

Token 201: 'the' (ID: 3086)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.5575074553489685
    2. ' current' → logprob: -1.5575075149536133
    3. ' if' → logprob: -3.1825075149536133
    4. 'prev' → logprob: -3.3075075149536133
    5. ')' → logprob: -3.5575075149536133
    6. '   ' → logprob: -3.6825075149536133
    7. 'if' → logprob: -3.8075075149536133
    8. ' node' → logprob: -3.8075075149536133
    9. 'node' → logprob: -4.057507514953613
    10. ')
' → logprob: -4.682507514953613

Token 202: ' x' (ID: 1215)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -1.0804145336151123
    2. ' current' → logprob: -1.3304145336151123
    3. 'prev' → logprob: -1.9554145336151123
    4. ' node' → logprob: -2.2054145336151123
    5. '.prev' → logprob: -3.0804145336151123
    6. 'node' → logprob: -3.3304145336151123
    7. '.current' → logprob: -3.8304145336151123
    8. '#' → logprob: -4.705414772033691
    9. '.next' → logprob: -4.955414772033691
    10. ' prev' → logprob: -5.580414772033691

Token 203: '-th' (ID: 14928)
  Prédit: ' node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' node' → logprob: -0.19480834901332855
    2. ')' → logprob: -1.9448083639144897
    3. 'node' → logprob: -3.6948082447052
    4. 'Node' → logprob: -6.319808483123779
    5. '_node' → logprob: -6.319808483123779
    6. ' token' → logprob: -6.944808483123779
    7. ' )' → logprob: -6.944808483123779
    8. 'token' → logprob: -7.319808483123779
    9. '.next' → logprob: -7.694808483123779
    10. ' element' → logprob: -7.694808483123779

Token 204: ' receiver' (ID: 25861)
  Prédit: ' node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' node' → logprob: -0.027249671518802643
    2. 'node' → logprob: -4.027249813079834
    3. ')' → logprob: -5.402249813079834
    4. ' element' → logprob: -5.777249813079834
    5. ' token' → logprob: -7.027249813079834
    6. 'token' → logprob: -8.652249336242676
    7. ' current' → logprob: -9.402249336242676
    8. 'Node' → logprob: -9.902249336242676
    9. '<|end|>' → logprob: -10.152249336242676
    10. 'element' → logprob: -10.277249336242676

Token 205: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1278037279844284
    2. ')
' → logprob: -2.5028038024902344
    3. '   ' → logprob: -3.6278038024902344
    4. ' from' → logprob: -5.127803802490234
    5. 'from' → logprob: -5.627803802490234
    6. '.next' → logprob: -7.752803802490234
    7. ')
' → logprob: -8.252803802490234
    8. 'node' → logprob: -8.377803802490234
    9. ' node' → logprob: -8.377803802490234
    10. '):
' → logprob: -8.502803802490234

Token 206: '   ' (ID: 271)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.10610197484493256
    2. 'if' → logprob: -3.2311019897460938
    3. ' current' → logprob: -3.3561019897460938
    4. '   ' → logprob: -4.606101989746094
    5. 'prev' → logprob: -4.606101989746094
    6. ' if' → logprob: -5.231101989746094
    7. 'node' → logprob: -8.356101989746094
    8. '#' → logprob: -8.481101989746094
    9. ' prev' → logprob: -8.731101989746094
    10. '```' → logprob: -9.856101989746094

Token 207: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' (adapté à ' current') → logprob: -0.0018255965551361442
    2. 'prev' → logprob: -7.00182580947876
    3. 'if' → logprob: -7.25182580947876
    4. '   ' → logprob: -9.001825332641602
    5. ' current' → logprob: -9.626825332641602
    6. '#' → logprob: -12.626825332641602
    7. 'node' → logprob: -13.001825332641602
    8. 'next' → logprob: -13.751825332641602
    9. 'removed' → logprob: -13.876825332641602
    10. 'curr' → logprob: -14.001825332641602

Token 208: '.prev' (ID: 54166)
  Prédit: '.prev'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.prev' → logprob: -0.0009518369333818555
    2. 'prev' → logprob: -7.000951766967773
    3. '_prev' → logprob: -10.625951766967773
    4. 'Prev' → logprob: -11.750951766967773
    5. '.' → logprob: -13.250951766967773
    6. '.next' → logprob: -13.250951766967773
    7. '=' → logprob: -13.625951766967773
    8. '	prev' → logprob: -13.875951766967773
    9. '.num' → logprob: -14.500951766967773
    10. ' =' → logprob: -15.125951766967773

Token 209: '.next' (ID: 6689)
  Prédit: '.next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.next' → logprob: -3.893480243277736e-05
    2. '.' → logprob: -10.375039100646973
    3. ' .' → logprob: -12.000039100646973
    4. '.prev' → logprob: -15.000039100646973
    5. '.current' → logprob: -15.125039100646973
    6. ').' → logprob: -15.500039100646973
    7. '.Next' → logprob: -16.125038146972656
    8. '.ne' → logprob: -16.375038146972656
    9. '.none' → logprob: -16.500038146972656
    10. '.n' → logprob: -16.750038146972656

Token 210: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0550912544131279
    2. '=' → logprob: -3.055091142654419
    3. '=current' → logprob: -5.055091381072998
    4. ' current' → logprob: -10.30509090423584
    5. 'current' → logprob: -10.30509090423584
    6. ',current' → logprob: -10.43009090423584
    7. ',' → logprob: -11.93009090423584
    8. ' ' → logprob: -13.18009090423584
    9. '[current' → logprob: -14.68009090423584
    10. ' =
' → logprob: -15.93009090423584

Token 211: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -9.615255839889869e-05
    2. ' current' → logprob: -9.250096321105957
    3. '   ' → logprob: -19.50009536743164
    4. '	current' → logprob: -20.25009536743164
    5. '.current' → logprob: -21.00009536743164
    6. '(current' → logprob: -21.12509536743164
    7. '[current' → logprob: -21.12509536743164
    8. '$current' → logprob: -21.25009536743164
    9. 'cur' → logprob: -21.62509536743164
    10. 'Current' → logprob: -22.00009536743164

Token 212: '.next' (ID: 6689)
  Prédit: '.next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.next' → logprob: -3.845798710244708e-05
    2. '.current' → logprob: -10.250038146972656
    3. '.' → logprob: -13.000038146972656
    4. '.prev' → logprob: -14.375038146972656
    5. 'next' → logprob: -16.500038146972656
    6. '<|end|>' → logprob: -16.500038146972656
    7. ' .' → logprob: -17.500038146972656
    8. '[next' → logprob: -18.000038146972656
    9. '
' → logprob: -18.125038146972656
    10. '```' → logprob: -18.375038146972656

Token 213: '
' (ID: 198)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.22708329558372498
    2. '   ' → logprob: -1.6020833253860474
    3. ' current' → logprob: -6.477083206176758
    4. '[current' → logprob: -10.352083206176758
    5. '.current' → logprob: -10.602083206176758
    6. '
' → logprob: -10.852083206176758
    7. ',current' → logprob: -10.977083206176758
    8. '```' → logprob: -11.602083206176758
    9. '	current' → logprob: -11.852083206176758
    10. ' ' → logprob: -12.477083206176758

Token 214: '   ' (ID: 271)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.00321205728687346
    2. '   ' → logprob: -5.753211975097656
    3. ' current' → logprob: -10.503211975097656
    4. '[current' → logprob: -12.878211975097656
    5. '.current' → logprob: -13.378211975097656
    6. '```' → logprob: -13.503211975097656
    7. 'Current' → logprob: -14.253211975097656
    8. '(current' → logprob: -15.253211975097656
    9. '	current' → logprob: -15.753211975097656
    10. '$current' → logprob: -16.003211975097656

Token 215: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' (adapté à ' current') → logprob: -9.253090865968261e-06
    2. ' current' → logprob: -11.750009536743164
    3. '.current' → logprob: -14.125009536743164
    4. '   ' → logprob: -14.625009536743164
    5. '[current' → logprob: -16.500009536743164
    6. '$current' → logprob: -17.500009536743164
    7. 'Current' → logprob: -18.250009536743164
    8. '	current' → logprob: -18.875009536743164
    9. '(current' → logprob: -18.875009536743164
    10. '```' → logprob: -19.250009536743164

Token 216: '.next' (ID: 6689)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.44769179821014404
    2. '=' → logprob: -1.197691798210144
    3. '.next' → logprob: -3.4476919174194336
    4. '.prev' → logprob: -3.8226919174194336
    5. '=current' → logprob: -5.447691917419434
    6. 'prev' → logprob: -7.447691917419434
    7. '.' → logprob: -8.697691917419434
    8. '.current' → logprob: -8.697691917419434
    9. ' ' → logprob: -10.322691917419434
    10. ' prev' → logprob: -11.447691917419434

Token 217: '.prev' (ID: 54166)
  Prédit: '.prev'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.prev' → logprob: -0.00016599490481894463
    2. '.' → logprob: -9.250165939331055
    3. 'prev' → logprob: -9.750165939331055
    4. '<|end|>' → logprob: -11.875165939331055
    5. ' .' → logprob: -13.375165939331055
    6. '	prev' → logprob: -13.750165939331055
    7. ' =' → logprob: -14.625165939331055
    8. '=' → logprob: -14.625165939331055
    9. '.next' → logprob: -15.500165939331055
    10. '.pre' → logprob: -15.750165939331055

Token 218: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01818072982132435
    2. '=' → logprob: -4.018180847167969
    3. '=current' → logprob: -10.518180847167969
    4. ' current' → logprob: -13.268180847167969
    5. ' ' → logprob: -14.143180847167969
    6. 'current' → logprob: -14.393180847167969
    7. '.current' → logprob: -14.768180847167969
    8. '   ' → logprob: -15.768180847167969
    9. '.' → logprob: -16.14318084716797
    10. ' ' → logprob: -16.39318084716797

Token 219: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.00020354038861114532
    2. ' current' → logprob: -8.500203132629395
    3. '[current' → logprob: -17.12520408630371
    4. '(current' → logprob: -18.00020408630371
    5. 'Current' → logprob: -18.37520408630371
    6. '.current' → logprob: -18.62520408630371
    7. '$current' → logprob: -19.50020408630371
    8. '	current' → logprob: -19.62520408630371
    9. 'urrent' → logprob: -20.00020408630371
    10. '_current' → logprob: -21.12520408630371

Token 220: '.prev' (ID: 54166)
  Prédit: '.prev'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.prev' → logprob: -0.01820426434278488
    2. 'prev' → logprob: -4.268204212188721
    3. '.next' → logprob: -5.518204212188721
    4. '.' → logprob: -11.768204689025879
    5. '.current' → logprob: -11.768204689025879
    6. 'next' → logprob: -12.893204689025879
    7. ' prev' → logprob: -14.018204689025879
    8. 'current' → logprob: -15.018204689025879
    9. '	prev' → logprob: -15.143204689025879
    10. 'Prev' → logprob: -16.768203735351562

Token 221: '
' (ID: 198)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.03461068868637085
    2. '   ' → logprob: -3.5346107482910156
    3. 'print' → logprob: -5.534610748291016
    4. 'temp' → logprob: -7.534610748291016
    5. ' current' → logprob: -8.909610748291016
    6. '```' → logprob: -9.784610748291016
    7. 'M' → logprob: -10.159610748291016
    8. 'if' → logprob: -10.534610748291016
    9. 'nodes' → logprob: -10.784610748291016
    10. 'removed' → logprob: -11.284610748291016

Token 222: '   ' (ID: 271)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.0465533509850502
    2. 'print' → logprob: -3.421553373336792
    3. '   ' → logprob: -4.421553134918213
    4. ' current' → logprob: -8.171553611755371
    5. 'M' → logprob: -9.046553611755371
    6. 'Current' → logprob: -9.046553611755371
    7. '```' → logprob: -9.796553611755371
    8. 'N' → logprob: -10.046553611755371
    9. 'if' → logprob: -10.171553611755371
    10. '#' → logprob: -10.171553611755371

Token 223: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' (adapté à ' current') → logprob: -0.01122500654309988
    2. 'if' → logprob: -5.51122522354126
    3. 'temp' → logprob: -5.76122522354126
    4. 'print' → logprob: -5.88622522354126
    5. 'Q' → logprob: -8.636224746704102
    6. 'tmp' → logprob: -8.636224746704102
    7. 'removed' → logprob: -8.761224746704102
    8. 'next' → logprob: -9.011224746704102
    9. 'del' → logprob: -9.011224746704102
    10. 'M' → logprob: -9.386224746704102

Token 224: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3868805766105652
    2. '=' → logprob: -1.13688063621521
    3. '=current' → logprob: -11.636880874633789
    4. ' ' → logprob: -14.886880874633789
    5. ' current' → logprob: -16.13688087463379
    6. ',' → logprob: -16.13688087463379
    7. 'current' → logprob: -16.63688087463379
    8. '＝' → logprob: -16.88688087463379
    9. '.' → logprob: -17.38688087463379
    10. '=
' → logprob: -18.26188087463379

Token 225: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.001503313542343676
    2. ' current' → logprob: -6.5015034675598145
    3. 'urrent' → logprob: -15.626502990722656
    4. 'Current' → logprob: -15.626502990722656
    5. '(current' → logprob: -15.626502990722656
    6. '[current' → logprob: -15.876502990722656
    7. '.current' → logprob: -16.251502990722656
    8. '	current' → logprob: -16.501502990722656
    9. '$current' → logprob: -16.501502990722656
    10. ' ' → logprob: -17.001502990722656

Token 226: '.next' (ID: 6689)
  Prédit: '.next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.next' → logprob: -0.0002614550176076591
    2. '.prev' → logprob: -8.250261306762695
    3. '.current' → logprob: -16.500261306762695
    4. 'next' → logprob: -17.125261306762695
    5. '.' → logprob: -18.125261306762695
    6. '.Next' → logprob: -19.750261306762695
    7. 'prev' → logprob: -19.875261306762695
    8. '.previous' → logprob: -20.125261306762695
    9. '[next' → logprob: -20.250261306762695
    10. 'Next' → logprob: -20.250261306762695

Token 227: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 228: 'alive' (ID: 111336)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.12175918370485306
    2. 'for' → logprob: -2.4967591762542725
    3. 'result' → logprob: -4.371759414672852
    4. 'res' → logprob: -5.246759414672852
    5. 'answer' → logprob: -5.371759414672852
    6. 'if' → logprob: -5.621759414672852
    7. 'ans' → logprob: -6.121759414672852
    8. 'while' → logprob: -6.246759414672852
    9. 'remaining' → logprob: -8.121759414672852
    10. 'answers' → logprob: -8.246759414672852

Token 229: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2685728073120117
    2. '_nodes' → logprob: -2.1435728073120117
    3. '<|end|>' → logprob: -3.1435728073120117
    4. '_count' → logprob: -3.2685728073120117
    5. 's' → logprob: -4.768572807312012
    6. '=' → logprob: -4.893572807312012
    7. '.' → logprob: -5.393572807312012
    8. '_num' → logprob: -5.643572807312012
    9. '.count' → logprob: -5.768572807312012
    10. ' ' → logprob: -6.518572807312012

Token 230: ' [' (ID: 723)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.46337565779685974
    2. 'current' → logprob: -1.7133756875991821
    3. '[current' → logprob: -2.4633755683898926
    4. '[]
' → logprob: -2.8383755683898926
    5. 'nodes' → logprob: -3.9633755683898926
    6. 'N' → logprob: -4.588375568389893
    7. '[N' → logprob: -5.338375568389893
    8. 'set' → logprob: -5.463375568389893
    9. '[M' → logprob: -5.838375568389893
    10. '[' → logprob: -6.713375568389893

Token 231: '0' (ID: 15)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.710615336894989
    2. 'False' → logprob: -0.960615336894989
    3. 'node' → logprob: -2.460615396499634
    4. '0' → logprob: -3.835615396499634
    5. '1' → logprob: -4.460615158081055
    6. 'current' → logprob: -5.085615158081055
    7. 'nodes' → logprob: -7.585615158081055
    8. 'n' → logprob: -8.085615158081055
    9. 'None' → logprob: -9.085615158081055
    10. 'i' → logprob: -9.460615158081055

Token 232: ']*' (ID: 18579)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0370815135538578
    2. ']*' → logprob: -3.412081480026245
    3. ']*(' → logprob: -6.287081718444824
    4. ' for' → logprob: -7.162081718444824
    5. 'for' → logprob: -7.537081718444824
    6. ' ]' → logprob: -8.912081718444824
    7. ']+' → logprob: -10.037081718444824
    8. '
' → logprob: -10.787081718444824
    9. '()]' → logprob: -11.287081718444824
    10. ')]' → logprob: -11.912081718444824

Token 233: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0026849217247217894
    2. '(N' → logprob: -6.002685070037842
    3. 'len' → logprob: -9.252684593200684
    4. '(len' → logprob: -10.002684593200684
    5. '(' → logprob: -10.252684593200684
    6. 'M' → logprob: -10.752684593200684
    7. '(M' → logprob: -12.002684593200684
    8. ' (' → logprob: -13.377684593200684
    9. ' N' → logprob: -13.877684593200684
    10. 'Q' → logprob: -14.002684593200684

Token 234: '
' (ID: 198)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.4987691044807434
    2. 'cur' → logprob: -1.7487690448760986
    3. 'temp' → logprob: -2.4987690448760986
    4. 'tmp' → logprob: -2.8737690448760986
    5. 'ptr' → logprob: -3.6237690448760986
    6. 'for' → logprob: -3.7487690448760986
    7. 'cnt' → logprob: -4.248769283294678
    8. 'count' → logprob: -5.248769283294678
    9. 'p' → logprob: -5.248769283294678
    10. 'curr' → logprob: -6.498769283294678

Token 235: 'ptr' (ID: 7433)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.743948757648468
    2. 'cur' → logprob: -1.2439486980438232
    3. 'temp' → logprob: -2.2439486980438232
    4. 'tmp' → logprob: -2.8689486980438232
    5. 'ptr' → logprob: -3.8689486980438232
    6. 'for' → logprob: -3.9939486980438232
    7. 'cnt' → logprob: -4.118948936462402
    8. 'curr' → logprob: -5.118948936462402
    9. 'current' → logprob: -5.618948936462402
    10. 'p' → logprob: -5.618948936462402

Token 236: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10021983087062836
    2. ' =' → logprob: -2.3502197265625
    3. '=current' → logprob: -12.2252197265625
    4. '[' → logprob: -13.4752197265625
    5. ']' → logprob: -13.7252197265625
    6. 's' → logprob: -13.8502197265625
    7. ')' → logprob: -14.1002197265625
    8. '=[]' → logprob: -14.2252197265625
    9. 'x' → logprob: -14.2252197265625
    10. '=end' → logprob: -14.8502197265625

Token 237: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.09405364841222763
    2. '0' → logprob: -2.5940537452697754
    3. ' current' → logprob: -4.219053745269775
    4. ' ' → logprob: -8.219053268432617
    5. 'nodes' → logprob: -9.969053268432617
    6. 'head' → logprob: -12.469053268432617
    7. ' nodes' → logprob: -12.719053268432617
    8. 'N' → logprob: -13.219053268432617
    9. '[current' → logprob: -13.594053268432617
    10. 'node' → logprob: -13.594053268432617

Token 238: '
' (ID: 198)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.011120800860226154
    2. 'for' → logprob: -4.511120796203613
    3. 'count' → logprob: -10.011120796203613
    4. 'alive' → logprob: -11.011120796203613
    5. ' while' → logprob: -11.886120796203613
    6. 'i' → logprob: -13.511120796203613
    7. '```' → logprob: -14.136120796203613
    8. '
' → logprob: -14.136120796203613
    9. 'cnt' → logprob: -14.386120796203613
    10. 'visited' → logprob: -15.136120796203613

Token 239: 'start' (ID: 5236)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.162391796708107
    2. 'for' → logprob: -1.9123917818069458
    3. 'alive' → logprob: -6.287391662597656
    4. 'count' → logprob: -8.787391662597656
    5. 'idx' → logprob: -9.412391662597656
    6. 'i' → logprob: -10.287391662597656
    7. 'cnt' → logprob: -10.412391662597656
    8. 'index' → logprob: -12.662391662597656
    9. ' while' → logprob: -13.537391662597656
    10. 'visited' → logprob: -13.537391662597656

Token 240: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2543011009693146
    2. '=' → logprob: -1.5043010711669922
    3. 'd' → logprob: -6.504301071166992
    4. '_idx' → logprob: -8.004301071166992
    5. '_index' → logprob: -8.754301071166992
    6. ' ' → logprob: -9.129301071166992
    7. 'ing' → logprob: -9.379301071166992
    8. 'ed' → logprob: -10.254301071166992
    9. '_' → logprob: -10.504301071166992
    10. '=start' → logprob: -11.004301071166992

Token 241: ' current' (ID: 2208)
  Prédit: 'ptr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ptr' → logprob: -0.039944473654031754
    2. 'current' → logprob: -3.2899444103240967
    3. '0' → logprob: -6.289944648742676
    4. ' ptr' → logprob: -10.289944648742676
    5. ' current' → logprob: -12.789944648742676
    6. 'True' → logprob: -13.039944648742676
    7. 'pointer' → logprob: -13.289944648742676
    8. '	ptr' → logprob: -13.789944648742676
    9. 'None' → logprob: -13.914944648742676
    10. '1' → logprob: -14.164944648742676

Token 242: '
' (ID: 198)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.15480566024780273
    2. '
' → logprob: -2.6548056602478027
    3. '.next' → logprob: -3.0298056602478027
    4. 'for' → logprob: -4.154805660247803
    5. 'num' → logprob: -5.904805660247803
    6. ' while' → logprob: -6.279805660247803
    7. '.prev' → logprob: -7.154805660247803
    8. 'next' → logprob: -7.404805660247803
    9. 'prev' → logprob: -7.529805660247803
    10. '.num' → logprob: -7.654805660247803

Token 243: 'while' (ID: 7032)
  Prédit: 'while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -9.17420256882906e-05
    2. 'alive' → logprob: -9.375091552734375
    3. 'i' → logprob: -12.750091552734375
    4. 'count' → logprob: -13.375091552734375
    5. 'idx' → logprob: -14.000091552734375
    6. 'for' → logprob: -14.375091552734375
    7. 'cnt' → logprob: -15.000091552734375
    8. ' while' → logprob: -15.125091552734375
    9. '```' → logprob: -15.500091552734375
    10. 'index' → logprob: -16.625091552734375

Token 244: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.040499504655599594
    2. 'ptr' → logprob: -3.290499448776245
    3. ' True' → logprob: -6.040499687194824
    4. ' ptr' → logprob: -10.790499687194824
    5. 'start' → logprob: -11.040499687194824
    6. '(True' → logprob: -11.040499687194824
    7. 'Ptr' → logprob: -11.790499687194824
    8. 'not' → logprob: -11.915499687194824
    9. 'true' → logprob: -12.415499687194824
    10. '   ' → logprob: -14.165499687194824

Token 245: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2581053078174591
    2. ':
' → logprob: -1.5081052780151367
    3. '   ' → logprob: -5.133105278015137
    4. '):
' → logprob: -8.508105278015137
    5. ':
' → logprob: -11.133105278015137
    6. '<|end|>' → logprob: -11.758105278015137
    7. ':

' → logprob: -11.883105278015137
    8. '():
' → logprob: -12.383105278015137
    9. '):' → logprob: -12.383105278015137
    10. ',' → logprob: -13.008105278015137

Token 246: '   ' (ID: 271)
  Prédit: 'alive'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'alive' → logprob: -0.1428304761648178
    2. '   ' → logprob: -2.0178303718566895
    3. ' alive' → logprob: -9.142830848693848
    4. 'if' → logprob: -10.267830848693848
    5. 'al' → logprob: -12.267830848693848
    6. '_alive' → logprob: -12.517830848693848
    7. '```' → logprob: -13.642830848693848
    8. '   ' → logprob: -13.892830848693848
    9. '  ' → logprob: -14.517830848693848
    10. ' ' → logprob: -14.767830848693848

Token 247: ' alive' (ID: 23757)
  Prédit: 'alive'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'alive' (adapté à ' alive') → logprob: -0.0007112398743629456
    2. '   ' → logprob: -7.625711441040039
    3. ' alive' → logprob: -8.750711441040039
    4. 'if' → logprob: -9.750711441040039
    5. '    
' → logprob: -13.250711441040039
    6. 'ptr' → logprob: -13.500711441040039
    7. '_alive' → logprob: -14.250711441040039
    8. 'idx' → logprob: -14.375711441040039
    9. 'al' → logprob: -14.750711441040039
    10. 'index' → logprob: -14.750711441040039

Token 248: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.764977686339989e-05
    2. '[num' → logprob: -11.000057220458984
    3. '[pos' → logprob: -11.750057220458984
    4. '[current' → logprob: -12.125057220458984
    5. ' [' → logprob: -12.250057220458984
    6. '[arr' → logprob: -12.625057220458984
    7. '[start' → logprob: -12.875057220458984
    8. 'ptr' → logprob: -12.875057220458984
    9. '[idx' → logprob: -13.125057220458984
    10. '   ' → logprob: -13.250057220458984

Token 249: 'ptr' (ID: 7433)
  Prédit: 'ptr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ptr' → logprob: -0.00019829542725346982
    2. 'start' → logprob: -8.750198364257812
    3. '(ptr' → logprob: -10.500198364257812
    4. ' ptr' → logprob: -12.250198364257812
    5. 'current' → logprob: -12.750198364257812
    6. '0' → logprob: -13.125198364257812
    7. '	ptr' → logprob: -14.125198364257812
    8. 'pt' → logprob: -14.125198364257812
    9. '
' → logprob: -15.375198364257812
    10. '.ptr' → logprob: -15.625198364257812

Token 250: '.num' (ID: 19403)
  Prédit: '.num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.num' → logprob: -0.0003346314188092947
    2. '].' → logprob: -9.000334739685059
    3. ' .' → logprob: -9.625334739685059
    4. '.' → logprob: -9.750334739685059
    5. '.next' → logprob: -10.375334739685059
    6. '.prev' → logprob: -11.500334739685059
    7. ').' → logprob: -11.625334739685059
    8. 'num' → logprob: -12.125334739685059
    9. '.idx' → logprob: -12.125334739685059
    10. ']' → logprob: -12.250334739685059

Token 251: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0027460309211164713
    2. ']=' → logprob: -6.127746105194092
    3. ' ]' → logprob: -8.002745628356934
    4. '=' → logprob: -8.627745628356934
    5. ']+=' → logprob: -10.002745628356934
    6. ' =' → logprob: -14.627745628356934
    7. ')' → logprob: -14.752745628356934
    8. ' ' → logprob: -15.627745628356934
    9. '+=' → logprob: -15.877745628356934
    10. '   ' → logprob: -16.00274658203125

Token 252: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.008626633323729038
    2. ' =' → logprob: -4.758626461029053
    3. '+=' → logprob: -11.383626937866211
    4. ' +=' → logprob: -14.258626937866211
    5. '=True' → logprob: -16.38362693786621
    6. ' ' → logprob: -18.38362693786621
    7. '=
' → logprob: -19.00862693786621
    8. '   ' → logprob: -19.88362693786621
    9. '.=' → logprob: -19.88362693786621
    10. '1' → logprob: -20.00862693786621

Token 253: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1398757123970427e-05
    2. ' ' → logprob: -11.750011444091797
    3. 'True' → logprob: -12.625011444091797
    4. '   ' → logprob: -16.250011444091797
    5. ' True' → logprob: -16.375011444091797
    6. '  ' → logprob: -19.875011444091797
    7. '(True' → logprob: -20.125011444091797
    8. '+' → logprob: -20.500011444091797
    9. '0' → logprob: -21.000011444091797
    10. 'true' → logprob: -21.125011444091797

Token 254: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.180258191714529e-06
    2. 'True' → logprob: -11.750008583068848
    3. ' ' → logprob: -15.125008583068848
    4. ' True' → logprob: -19.00000762939453
    5. '   ' → logprob: -19.25000762939453
    6. '0' → logprob: -19.25000762939453
    7. '2' → logprob: -20.37500762939453
    8. 'true' → logprob: -20.37500762939453
    9. '(True' → logprob: -20.50000762939453
    10. '
' → logprob: -20.62500762939453

Token 255: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00012190054985694587
    2. 'ptr' → logprob: -9.3751220703125
    3. ' if' → logprob: -11.0001220703125
    4. 'if' → logprob: -11.1251220703125
    5. ' ptr' → logprob: -12.5001220703125
    6. ',' → logprob: -14.7501220703125
    7. '    
' → logprob: -14.8751220703125
    8. '	ptr' → logprob: -15.0001220703125
    9. '   ' → logprob: -15.2501220703125
    10. '
' → logprob: -15.2501220703125

Token 256: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02510521002113819
    2. 'ptr' → logprob: -3.9001052379608154
    3. 'if' → logprob: -5.525104999542236
    4. ' if' → logprob: -7.650104999542236
    5. ' ptr' → logprob: -9.525105476379395
    6. '	ptr' → logprob: -11.650105476379395
    7. '
' → logprob: -12.650105476379395
    8. '    
' → logprob: -13.650105476379395
    9. '   ' → logprob: -13.650105476379395
    10. '(ptr' → logprob: -14.025105476379395

Token 257: ' ptr' (ID: 23266)
  Prédit: 'ptr'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ptr' (adapté à ' ptr') → logprob: -0.0002944671141449362
    2. 'if' → logprob: -8.25029468536377
    3. '   ' → logprob: -10.37529468536377
    4. ' ptr' → logprob: -13.25029468536377
    5. '	ptr' → logprob: -16.250293731689453
    6. '(ptr' → logprob: -17.375293731689453
    7. 'pt' → logprob: -17.750293731689453
    8. '    
' → logprob: -17.875293731689453
    9. 'Ptr' → logprob: -18.250293731689453
    10. ' if' → logprob: -18.250293731689453

Token 258: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.048587486147880554
    2. ' =' → logprob: -3.0485875606536865
    3. '＝' → logprob: -16.673587799072266
    4. '.=' → logprob: -17.423587799072266
    5. '=

' → logprob: -18.173587799072266
    6. '=
' → logprob: -18.673587799072266
    7. '.' → logprob: -19.548587799072266
    8. '=}' → logprob: -20.423587799072266
    9. 'ptr' → logprob: -21.048587799072266
    10. '=head' → logprob: -21.236087799072266

Token 259: ' ptr' (ID: 23266)
  Prédit: 'ptr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ptr' → logprob: -0.0001410850090906024
    2. ' ptr' → logprob: -8.875141143798828
    3. '	ptr' → logprob: -14.000141143798828
    4. '(ptr' → logprob: -15.375141143798828
    5. 'prt' → logprob: -17.500141143798828
    6. '.ptr' → logprob: -17.500141143798828
    7. '_ptr' → logprob: -18.875141143798828
    8. 'pt' → logprob: -20.375141143798828
    9. 'pointer' → logprob: -20.500141143798828
    10. 'Ptr' → logprob: -20.625141143798828

Token 260: '.next' (ID: 6689)
  Prédit: '.next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.next' → logprob: -1.0280383548888494e-06
    2. '.prev' → logprob: -14.250000953674316
    3. '.ptr' → logprob: -15.625000953674316
    4. '.' → logprob: -16.375001907348633
    5. 'next' → logprob: -18.500001907348633
    6. '.Next' → logprob: -18.625001907348633
    7. ' .' → logprob: -18.625001907348633
    8. '.current' → logprob: -19.750001907348633
    9. '.n' → logprob: -20.250001907348633
    10. 'Next' → logprob: -20.250001907348633

Token 261: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009236517362296581
    2. ' if' → logprob: -4.7592363357543945
    3. 'if' → logprob: -7.3842363357543945
    4. ',' → logprob: -15.509236335754395
    5. 'while' → logprob: -15.509236335754395
    6. '	if' → logprob: -15.759236335754395
    7. ' ' → logprob: -16.38423728942871
    8. ' while' → logprob: -16.50923728942871
    9. '    ' → logprob: -16.50923728942871
    10. 'and' → logprob: -16.75923728942871

Token 262: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0005156210972927511
    2. ' if' → logprob: -7.750515460968018
    3. 'if' → logprob: -9.375515937805176
    4. ',' → logprob: -18.50051498413086
    5. 'while' → logprob: -18.50051498413086
    6. ' ' → logprob: -18.75051498413086
    7. '  ' → logprob: -19.12551498413086
    8. '	if' → logprob: -19.62551498413086
    9. '       ' → logprob: -19.62551498413086
    10. '    ' → logprob: -20.37551498413086

Token 263: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.4076063334941864
    2. ' if' → logprob: -1.4076063632965088
    3. '   ' → logprob: -2.407606363296509
    4. '	if' → logprob: -15.53260612487793
    5. 'while' → logprob: -16.90760612487793
    6. ' ' → logprob: -17.15760612487793
    7. '  ' → logprob: -18.15760612487793
    8. '    ' → logprob: -18.40760612487793
    9. '       ' → logprob: -18.65760612487793
    10. '   ' → logprob: -19.15760612487793

Token 264: ' ptr' (ID: 23266)
  Prédit: 'ptr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ptr' → logprob: -0.02975071594119072
    2. ' ptr' → logprob: -3.5297508239746094
    3. '(ptr' → logprob: -15.77975082397461
    4. '	ptr' → logprob: -15.90475082397461
    5. '   ' → logprob: -18.90475082397461
    6. '_ptr' → logprob: -19.40475082397461
    7. '.ptr' → logprob: -19.90475082397461
    8. 'pt' → logprob: -19.90475082397461
    9. 'pointer' → logprob: -20.02975082397461
    10. 'prt' → logprob: -20.40475082397461

Token 265: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.3868953287601471
    2. '==' → logprob: -1.1368952989578247
    3. '=' → logprob: -11.136895179748535
    4. ' is' → logprob: -12.511895179748535
    5. 'is' → logprob: -12.886895179748535
    6. ' =' → logprob: -13.511895179748535
    7. 'num' → logprob: -14.136895179748535
    8. ')' → logprob: -15.386895179748535
    9. ')==' → logprob: -15.386895179748535
    10. '==
' → logprob: -15.386895179748535

Token 266: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -3.547789674485102e-05
    2. ' start' → logprob: -10.250035285949707
    3. 'current' → logprob: -16.375036239624023
    4. 'star' → logprob: -20.750036239624023
    5. '	start' → logprob: -21.125036239624023
    6. '[start' → logprob: -21.500036239624023
    7. '=start' → logprob: -21.625036239624023
    8. 'st' → logprob: -23.125036239624023
    9. '(start' → logprob: -23.250036239624023
    10. ' ' → logprob: -23.750036239624023

Token 267: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00761218648403883
    2. ':
' → logprob: -4.882612228393555
    3. '   ' → logprob: -12.507612228393555
    4. ':return' → logprob: -14.007612228393555
    5. '):' → logprob: -14.382612228393555
    6. '):
' → logprob: -15.132612228393555
    7. ':
' → logprob: -15.507612228393555
    8. ' :' → logprob: -15.632612228393555
    9. '       ' → logprob: -16.507612228393555
    10. 'break' → logprob: -16.632612228393555

Token 268: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007363698096014559
    2. '   ' → logprob: -7.250736236572266
    3. ' break' → logprob: -10.625736236572266
    4. 'break' → logprob: -13.500736236572266
    5. '	break' → logprob: -15.000736236572266
    6. '           ' → logprob: -15.250736236572266
    7. '      ' → logprob: -16.375736236572266
    8. '     ' → logprob: -16.500736236572266
    9. ' ' → logprob: -17.125736236572266
    10. '	   ' → logprob: -17.250736236572266

Token 269: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.11482637375593185
    2. '       ' → logprob: -2.6148264408111572
    3. ' break' → logprob: -3.3648264408111572
    4. '   ' → logprob: -7.864826202392578
    5. '	break' → logprob: -7.989826202392578
    6. 'b' → logprob: -13.114826202392578
    7. '
' → logprob: -13.239826202392578
    8. '_break' → logprob: -13.989826202392578
    9. '        
' → logprob: -14.239826202392578
    10. 'br' → logprob: -14.489826202392578

Token 270: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.20209018886089325
    2. 'for' → logprob: -1.7020901441574097
    3. 'answer' → logprob: -7.577090263366699
    4. 'result' → logprob: -9.3270902633667
    5. 'ans' → logprob: -10.7020902633667
    6. ' for' → logprob: -11.0770902633667
    7. 'alive' → logprob: -11.3270902633667
    8. 'output' → logprob: -12.0770902633667
    9. 'answers' → logprob: -12.5770902633667
    10. 'res' → logprob: -12.8270902633667

Token 271: 'for' (ID: 1938)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.5769709348678589
    2. 'for' → logprob: -0.8269709348678589
    3. 'answer' → logprob: -7.826971054077148
    4. 'alive' → logprob: -8.201971054077148
    5. 'result' → logprob: -8.701971054077148
    6. 'ans' → logprob: -9.076971054077148
    7. 'res' → logprob: -10.826971054077148
    8. 'answers' → logprob: -11.326971054077148
    9. ' for' → logprob: -11.576971054077148
    10. 'pr' → logprob: -11.701971054077148

Token 272: ' qq' (ID: 25999)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.38152503967285156
    2. ' i' → logprob: -1.2565250396728516
    3. 'x' → logprob: -4.131525039672852
    4. '_' → logprob: -4.631525039672852
    5. ' x' → logprob: -5.506525039672852
    6. 'q' → logprob: -6.881525039672852
    7. ' _' → logprob: -7.006525039672852
    8. '_i' → logprob: -7.881525039672852
    9. ' q' → logprob: -9.006525039672852
    10. 'ans' → logprob: -10.006525039672852

Token 273: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.638559877872467
    2. 'in' → logprob: -0.763559877872467
    3. 'q' → logprob: -5.763559818267822
    4. 'u' → logprob: -6.138559818267822
    5. '_' → logprob: -8.63856029510498
    6. 'i' → logprob: -8.88856029510498
    7. '_in' → logprob: -9.13856029510498
    8. ' ' → logprob: -9.51356029510498
    9. 'w' → logprob: -10.26356029510498
    10. 'r' → logprob: -10.26356029510498

Token 274: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -5.1928003813372925e-05
    2. ' q' → logprob: -9.875051498413086
    3. 'range' → logprob: -14.875051498413086
    4. '	q' → logprob: -18.250051498413086
    5. '[q' → logprob: -19.250051498413086
    6. '(q' → logprob: -19.375051498413086
    7. ' range' → logprob: -19.375051498413086
    8. '   ' → logprob: -19.750051498413086
    9. 'Q' → logprob: -20.000051498413086
    10. 'query' → logprob: -20.625051498413086

Token 275: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -4.4656579120783135e-05
    2. ' :' → logprob: -10.625044822692871
    3. ':
' → logprob: -10.875044822692871
    4. ':**' → logprob: -14.625044822692871
    5. '):' → logprob: -14.750044822692871
    6. '():' → logprob: -15.500044822692871
    7. '=' → logprob: -16.000043869018555
    8. '：' → logprob: -16.500043869018555
    9. ':int' → logprob: -17.125043869018555
    10. ',' → logprob: -17.500043869018555

Token 276: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06849111616611481
    2. 'if' → logprob: -3.318491220474243
    3. ' if' → logprob: -3.568491220474243
    4. ' current' → logprob: -7.568490982055664
    5. 'ptr' → logprob: -7.693490982055664
    6. ' ptr' → logprob: -7.818490982055664
    7. 'current' → logprob: -8.693490982055664
    8. ' for' → logprob: -9.318490982055664
    9. 'for' → logprob: -9.693490982055664
    10. 'while' → logprob: -11.318490982055664

Token 277: ' print' (ID: 2123)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5249440670013428
    2. 'print' (adapté à ' print') → logprob: -0.8999440670013428
    3. 'ans' → logprob: -7.524944305419922
    4. 'sys' → logprob: -7.649944305419922
    5. 'idx' → logprob: -8.024944305419922
    6. 'res' → logprob: -9.524944305419922
    7. '   ' → logprob: -9.649944305419922
    8. 'pos' → logprob: -9.899944305419922
    9. 'count' → logprob: -10.024944305419922
    10. 'cnt' → logprob: -10.274944305419922

Token 278: '(al' (ID: 34063)
  Prédit: '(al'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(al' → logprob: -0.7209855318069458
    2. 'alive' → logprob: -0.8459855318069458
    3. '(' → logprob: -3.3459854125976562
    4. '("' → logprob: -3.8459854125976562
    5. '1' → logprob: -4.345985412597656
    6. '"' → logprob: -4.845985412597656
    7. 'al' → logprob: -5.345985412597656
    8. ''al' → logprob: -7.220985412597656
    9. '('' → logprob: -7.345985412597656
    10. '(-' → logprob: -8.220985412597656

Token 279: 'ive' (ID: 585)
  Prédit: 'ive'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ive' → logprob: -0.0019512299913913012
    2. 've' → logprob: -6.376951217651367
    3. 'alive' → logprob: -8.876951217651367
    4. '[' → logprob: -9.376951217651367
    5. 'live' → logprob: -12.751951217651367
    6. 'vive' → logprob: -13.001951217651367
    7. 'iv' → logprob: -13.126951217651367
    8. 'ave' → logprob: -13.126951217651367
    9. ' alive' → logprob: -13.251951217651367
    10. '(' → logprob: -13.251951217651367

Token 280: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.173704271830502e-06
    2. '[
' → logprob: -13.50000286102295
    3. '[q' → logprob: -14.00000286102295
    4. '
' → logprob: -15.62500286102295
    5. ' [' → logprob: -15.62500286102295
    6. ')[' → logprob: -15.75000286102295
    7. '   ' → logprob: -15.87500286102295
    8. 'qq' → logprob: -15.87500286102295
    9. '[(' → logprob: -16.125003814697266
    10. '[int' → logprob: -17.000003814697266

Token 281: 'qq' (ID: 8127)
  Prédit: 'qq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'qq' → logprob: -9.088346359931165e-07
    2. ' qq' → logprob: -14.375000953674316
    3. '[' → logprob: -16.25
    4. '   ' → logprob: -16.5
    5. '(' → logprob: -16.75
    6. '
' → logprob: -17.5
    7. 'q' → logprob: -17.625
    8. ' ' → logprob: -18.625
    9. '  ' → logprob: -18.875
    10. '.qq' → logprob: -19.125

Token 282: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.0005127601907588542
    2. ' ])' → logprob: -8.375513076782227
    3. '],' → logprob: -8.500513076782227
    4. ')' → logprob: -10.375513076782227
    5. ']' → logprob: -10.500513076782227
    6. '])
' → logprob: -11.500513076782227
    7. '-' → logprob: -12.250513076782227
    8. ']==' → logprob: -13.000513076782227
    9. ')])' → logprob: -14.500513076782227
    10. '))' → logprob: -15.125513076782227


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 280
Tokens correctement prédits (1ère position, stricte): 122
Tokens correctement prédits (1ère position, avec adaptation): 136
Tokens correctement prédits (top 10): 239
Précision stricte (1ère position): 43.57%
Précision adaptée (1ère position): 48.57%
Précision (top 10): 85.36%
================================================================================
