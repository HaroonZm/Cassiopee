================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:24:35
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
N=int(input())
scores=[list(map(int,input().split())) for _ in range(N)]
for j in range(3):
    count={}
    for i in range(N):
        count[scores[i][j]]=count.get(scores[i][j],0)+1
    for i in range(N):
        if count[scores[i][j]]>1:scores[i][j]=0
result=[sum(p) for p in scores]
print(*result,sep='\n')
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'N' (ID: 45)
  → Token d'amorce (pas de prédiction)

Token 1: '=int' (ID: 37431)
  → Token d'amorce (pas de prédiction)

Token 2: '(input' (ID: 10054)
  → Token d'amorce (pas de prédiction)

Token 3: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4709188938140869
    2. ')' → logprob: -1.095918893814087
    3. '()' → logprob: -3.720918893814087
    4. '())' → logprob: -4.345918655395508
    5. '(
' → logprob: -7.220918655395508
    6. '```' → logprob: -7.595918655395508
    7. '')' → logprob: -7.845918655395508
    8. '")' → logprob: -7.845918655395508
    9. '`)' → logprob: -7.970918655395508
    10. '[' → logprob: -8.470918655395508

Token 4: 'scores' (ID: 109945)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4576764702796936
    2. '\n' → logprob: -1.9576764106750488
    3. 'if' → logprob: -2.707676410675049
    4. '#' → logprob: -3.582676410675049
    5. '\' → logprob: -3.707676410675049
    6. '```' → logprob: -3.957676410675049
    7. '*' → logprob: -4.207676410675049
    8. 's' → logprob: -4.582676410675049
    9. ')' → logprob: -4.957676410675049
    10. '`' → logprob: -5.082676410675049

Token 5: '=[' (ID: 13370)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0189508143812418
    2. '.' → logprob: -4.018950939178467
    3. '=' → logprob: -8.893950462341309
    4. ')' → logprob: -8.893950462341309
    5. '[]' → logprob: -9.018950462341309
    6. '```' → logprob: -9.518950462341309
    7. '\[' → logprob: -9.643950462341309
    8. '[
' → logprob: -10.018950462341309
    9. '[:]' → logprob: -10.018950462341309
    10. '[i' → logprob: -10.518950462341309

Token 6: 'list' (ID: 2641)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.09511572122573853
    2. '0' → logprob: -2.5951156616210938
    3. ']' → logprob: -4.345115661621094
    4. ']int' → logprob: -6.220115661621094
    5. 'float' → logprob: -7.470115661621094
    6. 'list' → logprob: -8.595115661621094
    7. ' int' → logprob: -8.720115661621094
    8. '(int' → logprob: -9.470115661621094
    9. '[int' → logprob: -10.220115661621094
    10. ')' → logprob: -10.595115661621094

Token 7: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.00013393278641160578
    2. '(' → logprob: -9.000133514404297
    3. '(int' → logprob: -12.250133514404297
    4. '(input' → logprob: -12.625133514404297
    5. '()' → logprob: -13.250133514404297
    6. 'map' → logprob: -16.000133514404297
    7. ' map' → logprob: -16.000133514404297
    8. '(
' → logprob: -16.000133514404297
    9. '	map' → logprob: -16.125133514404297
    10. '(range' → logprob: -16.250133514404297

Token 8: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0006992113194428384
    2. 'int' → logprob: -8.125699043273926
    3. '(' → logprob: -8.625699043273926
    4. '<int' → logprob: -9.500699043273926
    5. ',int' → logprob: -10.375699043273926
    6. '(str' → logprob: -10.500699043273926
    7. '=int' → logprob: -10.625699043273926
    8. '```' → logprob: -11.000699043273926
    9. '[int' → logprob: -11.125699043273926
    10. '(input' → logprob: -11.875699043273926

Token 9: ',input' (ID: 123014)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.007051372434943914
    2. '(' → logprob: -5.882051467895508
    3. ',input' → logprob: -6.007051467895508
    4. 'input' → logprob: -7.132051467895508
    5. ')' → logprob: -7.882051467895508
    6. '=input' → logprob: -8.507051467895508
    7. '))' → logprob: -8.507051467895508
    8. '<|end|>' → logprob: -10.007051467895508
    9. ',' → logprob: -10.382051467895508
    10. '(eval' → logprob: -10.632051467895508

Token 10: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0005487450980581343
    2. '()' → logprob: -7.625548839569092
    3. '.split' → logprob: -11.125548362731934
    4. '()))' → logprob: -11.125548362731934
    5. '())' → logprob: -11.375548362731934
    6. ' ().' → logprob: -12.125548362731934
    7. ')' → logprob: -12.500548362731934
    8. '(' → logprob: -12.625548362731934
    9. 'split' → logprob: -13.750548362731934
    10. '()
' → logprob: -14.000548362731934

Token 11: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00010473522706888616
    2. 'strip' → logprob: -9.750104904174805
    3. 'rstrip' → logprob: -10.000104904174805
    4. ' split' → logprob: -14.125104904174805
    5. '(split' → logprob: -15.375104904174805
    6. 'spl' → logprob: -17.125104904174805
    7. 'replace' → logprob: -19.000104904174805
    8. '.split' → logprob: -19.500104904174805
    9. 's' → logprob: -20.000104904174805
    10. '_split' → logprob: -21.250104904174805

Token 12: '()))' (ID: 16829)
  Prédit: '()))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.1185455471277237
    2. '())' → logprob: -2.7435455322265625
    3. '('' → logprob: -3.3685455322265625
    4. '))' → logprob: -4.8685455322265625
    5. '()' → logprob: -6.3685455322265625
    6. '(' → logprob: -6.3685455322265625
    7. '())))' → logprob: -6.7435455322265625
    8. ')' → logprob: -8.493545532226562
    9. '(','' → logprob: -8.993545532226562
    10. ''))' → logprob: -9.118545532226562

Token 13: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5757731795310974
    2. ')]' → logprob: -1.2007732391357422
    3. '())' → logprob: -2.200773239135742
    4. '()]' → logprob: -4.575773239135742
    5. 'for' → logprob: -5.950773239135742
    6. ']' → logprob: -6.075773239135742
    7. ')])' → logprob: -6.200773239135742
    8. '()' → logprob: -6.325773239135742
    9. '])' → logprob: -6.325773239135742
    10. '[' → logprob: -6.450773239135742

Token 14: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.014438017271459103
    2. '_' → logprob: -4.639438152313232
    3. 'range' → logprob: -5.639438152313232
    4. ' _' → logprob: -7.389438152313232
    5. '(range' → logprob: -8.264437675476074
    6. '_range' → logprob: -9.264437675476074
    7. ' ' → logprob: -9.389437675476074
    8. ' i' → logprob: -10.514437675476074
    9. '	range' → logprob: -10.639437675476074
    10. ' in' → logprob: -12.389437675476074

Token 15: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.005873094312846661
    2. 'in' → logprob: -5.380873203277588
    3. 'range' → logprob: -7.005873203277588
    4. ' range' → logprob: -8.13087272644043
    5. ' ' → logprob: -10.88087272644043
    6. '<|end|>' → logprob: -11.13087272644043
    7. '(' → logprob: -12.50587272644043
    8. '(range' → logprob: -13.13087272644043
    9. ')' → logprob: -13.25587272644043
    10. '	range' → logprob: -13.63087272644043

Token 16: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.014164221473038197
    2. ' range' → logprob: -4.264164447784424
    3. '	range' → logprob: -14.764163970947266
    4. '(range' → logprob: -15.514163970947266
    5. '.range' → logprob: -17.639163970947266
    6. '_range' → logprob: -17.889163970947266
    7. 'rang' → logprob: -18.014163970947266
    8. ' ' → logprob: -18.264163970947266
    9. '```' → logprob: -18.889163970947266
    10. ')' → logprob: -19.389163970947266

Token 17: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.0015134313143789768
    2. '(' → logprob: -6.501513481140137
    3. '(n' → logprob: -11.751513481140137
    4. 'N' → logprob: -13.251513481140137
    5. '(len' → logprob: -14.376513481140137
    6. '(
' → logprob: -15.376513481140137
    7. '(M' → logprob: -15.751513481140137
    8. '(I' → logprob: -15.751513481140137
    9. ')' → logprob: -16.25151252746582
    10. '(K' → logprob: -16.50151252746582

Token 18: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0008039106614887714
    2. ')])' → logprob: -7.3758039474487305
    3. ')' → logprob: -9.37580394744873
    4. '])]' → logprob: -9.62580394744873
    5. '])' → logprob: -11.75080394744873
    6. ')]
' → logprob: -12.12580394744873
    7. ']' → logprob: -12.12580394744873
    8. '))' → logprob: -12.87580394744873
    9. '')]' → logprob: -13.62580394744873
    10. ')][' → logprob: -14.00080394744873

Token 19: 'for' (ID: 1938)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -1.5235283374786377
    2. 'for' → logprob: -1.7735283374786377
    3. 's' → logprob: -1.8985283374786377
    4. 'max' → logprob: -2.2735283374786377
    5. 'total' → logprob: -3.1485283374786377
    6. 'a' → logprob: -3.5235283374786377
    7. 'm' → logprob: -3.5235283374786377
    8. 'count' → logprob: -3.5235283374786377
    9. '
' → logprob: -3.5235283374786377
    10. 't' → logprob: -3.6485283374786377

Token 20: ' j' (ID: 441)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.02097601257264614
    2. ' ' → logprob: -4.6459760665893555
    3. ' _' → logprob: -4.6459760665893555
    4. '_' → logprob: -7.1459760665893555
    5. ' student' → logprob: -7.3959760665893555
    6. ' s' → logprob: -9.645976066589355
    7. ' player' → logprob: -10.395976066589355
    8. ' score' → logprob: -10.895976066589355
    9. 'i' → logprob: -11.395976066589355
    10. ' ‌' → logprob: -12.145976066589355

Token 21: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2305433601140976
    2. 'in' → logprob: -1.6055433750152588
    3. ' ' → logprob: -5.35554313659668
    4. '  ' → logprob: -8.85554313659668
    5. '	in' → logprob: -9.35554313659668
    6. 'n' → logprob: -9.73054313659668
    7. ' i' → logprob: -11.10554313659668
    8. '_' → logprob: -11.35554313659668
    9. '```' → logprob: -11.35554313659668
    10. ')' → logprob: -11.73054313659668

Token 22: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.005234713666141033
    2. 'range' → logprob: -5.255234718322754
    3. ' scores' → logprob: -14.380234718322754
    4. ' score' → logprob: -16.130233764648438
    5. '(range' → logprob: -16.255233764648438
    6. ' ' → logprob: -16.380233764648438
    7. '	range' → logprob: -16.505233764648438
    8. 'scores' → logprob: -17.255233764648438
    9. ' xrange' → logprob: -18.505233764648438
    10. 'score' → logprob: -18.630233764648438

Token 23: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.008112025447189808
    2. '(len' → logprob: -5.133111953735352
    3. '(N' → logprob: -6.258111953735352
    4. ' (' → logprob: -8.383111953735352
    5. '(range' → logprob: -10.758111953735352
    6. '(n' → logprob: -11.633111953735352
    7. '(length' → logprob: -13.508111953735352
    8. '(
' → logprob: -13.883111953735352
    9. ' ' → logprob: -14.258111953735352
    10. '(I' → logprob: -14.258111953735352

Token 24: '3' (ID: 18)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.9617152214050293
    2. '4' → logprob: -1.4617152214050293
    3. '5' → logprob: -1.4617152214050293
    4. '3' → logprob: -2.0867152214050293
    5. 'len' → logprob: -3.8367152214050293
    6. '10' → logprob: -5.586715221405029
    7. '6' → logprob: -6.461715221405029
    8. '7' → logprob: -6.836715221405029
    9. '1' → logprob: -7.211715221405029
    10. '2' → logprob: -7.711715221405029

Token 25: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.03816542401909828
    2. ')' → logprob: -3.288165330886841
    3. ':' → logprob: -9.288165092468262
    4. ' ):' → logprob: -10.538165092468262
    5. ' )' → logprob: -13.788165092468262
    6. '):
' → logprob: -13.788165092468262
    7. ':)' → logprob: -14.538165092468262
    8. ']:' → logprob: -14.913165092468262
    9. '```' → logprob: -15.038165092468262
    10. ')：' → logprob: -15.413165092468262

Token 26: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2290307730436325
    2. ' for' → logprob: -2.1040308475494385
    3. 'for' → logprob: -2.8540308475494385
    4. 'sum' → logprob: -5.104030609130859
    5. ' sum' → logprob: -5.354030609130859
    6. ' max' → logprob: -5.479030609130859
    7. 'max' → logprob: -5.729030609130859
    8. '```' → logprob: -7.104030609130859
    9. '    ' → logprob: -7.229030609130859
    10. ' s' → logprob: -7.354030609130859

Token 27: ' count' (ID: 3605)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.026710867881775
    2. 'max' → logprob: -1.276710867881775
    3. 'sum' → logprob: -2.0267109870910645
    4. 's' → logprob: -2.2767109870910645
    5. '   ' → logprob: -3.5267109870910645
    6. 'total' → logprob: -3.6517109870910645
    7. ' for' → logprob: -3.9017109870910645
    8. 'score' → logprob: -4.1517109870910645
    9. ' max' → logprob: -5.0267109870910645
    10. 'rank' → logprob: -5.5267109870910645

Token 28: '={}
' (ID: 146130)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.049985967576503754
    2. '[' → logprob: -3.299985885620117
    3. 's' → logprob: -4.924985885620117
    4. '_' → logprob: -5.424985885620117
    5. '[(' → logprob: -9.549985885620117
    6. '([' → logprob: -10.049985885620117
    7. '=' → logprob: -11.299985885620117
    8. '('' → logprob: -11.424985885620117
    9. '_s' → logprob: -11.424985885620117
    10. '(
' → logprob: -12.299985885620117

Token 29: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.022886568680405617
    2. 'for' → logprob: -4.522886753082275
    3. ' for' → logprob: -4.647886753082275
    4. '<|end|>' → logprob: -6.522886753082275
    5. '	for' → logprob: -8.397886276245117
    6. ' ' → logprob: -8.397886276245117
    7. '    
' → logprob: -9.272886276245117
    8. '    ' → logprob: -9.897886276245117
    9. ')' → logprob: -10.022886276245117
    10. '       ' → logprob: -10.397886276245117

Token 30: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.015644708648324013
    2. ' for' → logprob: -4.515644550323486
    3. '   ' → logprob: -5.390644550323486
    4. ' ' → logprob: -12.015645027160645
    5. ')' → logprob: -12.140645027160645
    6. '	for' → logprob: -12.765645027160645
    7. '  ' → logprob: -12.765645027160645
    8. '    ' → logprob: -12.890645027160645
    9. 'count' → logprob: -13.140645027160645
    10. '```' → logprob: -13.140645027160645

Token 31: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.4288024604320526
    2. ' i' → logprob: -1.053802490234375
    3. 'score' → logprob: -10.303802490234375
    4. ' score' → logprob: -11.053802490234375
    5. 'scores' → logprob: -11.553802490234375
    6. ' ' → logprob: -11.553802490234375
    7. ' scores' → logprob: -12.053802490234375
    8. '	i' → logprob: -12.303802490234375
    9. ' range' → logprob: -12.303802490234375
    10. 'range' → logprob: -12.303802490234375

Token 32: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.14276878535747528
    2. 'in' → logprob: -2.0177688598632812
    3. ' ' → logprob: -9.892768859863281
    4. '    ' → logprob: -10.517768859863281
    5. '   ' → logprob: -12.642768859863281
    6. 'range' → logprob: -12.767768859863281
    7. '	in' → logprob: -12.767768859863281
    8. '  ' → logprob: -13.267768859863281
    9. '```' → logprob: -13.392768859863281
    10. 'In' → logprob: -14.392768859863281

Token 33: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.061986736953258514
    2. ' range' → logprob: -2.8119866847991943
    3. '(range' → logprob: -10.936986923217773
    4. '	range' → logprob: -14.936986923217773
    5. 'scores' → logprob: -14.936986923217773
    6. ')' → logprob: -15.186986923217773
    7. 'score' → logprob: -15.561986923217773
    8. '.range' → logprob: -17.561986923217773
    9. 'ran' → logprob: -17.561986923217773
    10. 'ranges' → logprob: -17.561986923217773

Token 34: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.0008754933369345963
    2. '(' → logprob: -7.125875473022461
    3. 'N' → logprob: -9.625875473022461
    4. '(len' → logprob: -12.875875473022461
    5. '(n' → logprob: -14.375875473022461
    6. ')' → logprob: -14.375875473022461
    7. '(
' → logprob: -14.500875473022461
    8. ' (' → logprob: -15.125875473022461
    9. '()' → logprob: -15.875875473022461
    10. ' N' → logprob: -16.25087547302246

Token 35: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0006563199567608535
    2. ')' → logprob: -7.3756561279296875
    3. ':' → logprob: -11.375656127929688
    4. '):
' → logprob: -11.500656127929688
    5. '   ' → logprob: -12.000656127929688
    6. ' ):' → logprob: -14.250656127929688
    7. '       ' → logprob: -15.000656127929688
    8. '():' → logprob: -16.000656127929688
    9. ' ' → logprob: -16.250656127929688
    10. '):

' → logprob: -16.375656127929688

Token 36: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2312467396259308
    2. '   ' → logprob: -2.1062467098236084
    3. '    ' → logprob: -2.6062467098236084
    4. ' ' → logprob: -5.6062469482421875
    5. ' if' → logprob: -6.6062469482421875
    6. ' scores' → logprob: -6.9812469482421875
    7. ')' → logprob: -6.9812469482421875
    8. '```' → logprob: -6.9812469482421875
    9. '     ' → logprob: -7.4812469482421875
    10. '     
' → logprob: -8.356246948242188

Token 37: ' count' (ID: 3605)
  Prédit: 'score'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'score' → logprob: -0.29026517271995544
    2. ' score' → logprob: -1.5402652025222778
    3. ' if' → logprob: -4.790265083312988
    4. '   ' → logprob: -5.040265083312988
    5. 'if' → logprob: -5.040265083312988
    6. ' val' → logprob: -5.790265083312988
    7. 'x' → logprob: -6.040265083312988
    8. ' x' → logprob: -6.415265083312988
    9. 's' → logprob: -6.540265083312988
    10. 'count' (adapté à ' count') → logprob: -6.540265083312988

Token 38: '[s' (ID: 24177)
  Prédit: '[s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[s' → logprob: -0.5506937503814697
    2. '[' → logprob: -0.9256937503814697
    3. '.setdefault' → logprob: -4.675693511962891
    4. 's' → logprob: -6.050693511962891
    5. '[count' → logprob: -6.175693511962891
    6. '[(' → logprob: -6.425693511962891
    7. 'scores' → logprob: -6.425693511962891
    8. '[c' → logprob: -6.550693511962891
    9. '(scores' → logprob: -6.550693511962891
    10. '.get' → logprob: -7.050693511962891

Token 39: 'cores' (ID: 12071)
  Prédit: 'cores'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cores' → logprob: -1.1472419600977446e-06
    2. 'core' → logprob: -14.500000953674316
    3. 'co' → logprob: -14.875000953674316
    4. '[' → logprob: -16.500001907348633
    5. 'scores' → logprob: -17.000001907348633
    6. 'coes' → logprob: -17.625001907348633
    7. 'ores' → logprob: -18.125001907348633
    8. 'tores' → logprob: -18.375001907348633
    9. '(scores' → logprob: -18.625001907348633
    10. '[c' → logprob: -18.625001907348633

Token 40: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -8.061054359131958e-06
    2. '[j' → logprob: -12.625007629394531
    3. '[' → logprob: -12.750007629394531
    4. '[I' → logprob: -14.125007629394531
    5. '][' → logprob: -14.500007629394531
    6. '```' → logprob: -15.250007629394531
    7. '[N' → logprob: -17.37500762939453
    8. ' [' → logprob: -17.50000762939453
    9. ']' → logprob: -17.50000762939453
    10. '[][' → logprob: -18.00000762939453

Token 41: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.11692164838314056
    2. '[j' → logprob: -2.2419216632843018
    3. ']' → logprob: -6.116921424865723
    4. '[' → logprob: -6.366921424865723
    5. '[i' → logprob: -9.491921424865723
    6. ' ][' → logprob: -10.241921424865723
    7. '```' → logprob: -11.741921424865723
    8. '[m' → logprob: -11.866921424865723
    9. '[J' → logprob: -12.366921424865723
    10. ']
' → logprob: -12.616921424865723

Token 42: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -3.702754474943504e-05
    2. ' j' → logprob: -10.25003719329834
    3. ']' → logprob: -14.12503719329834
    4. ' ' → logprob: -15.00003719329834
    5. '   ' → logprob: -15.25003719329834
    6. '	j' → logprob: -16.125036239624023
    7. ')' → logprob: -16.500036239624023
    8. '```' → logprob: -16.750036239624023
    9. '[j' → logprob: -17.375036239624023
    10. '    ' → logprob: -18.375036239624023

Token 43: ']]=' (ID: 192551)
  Prédit: ']]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']]' → logprob: -0.09933870285749435
    2. ']' → logprob: -3.0993387699127197
    3. ')]' → logprob: -3.0993387699127197
    4. ']]=' → logprob: -5.974338531494141
    5. ']+=' → logprob: -7.599338531494141
    6. ')' → logprob: -7.724338531494141
    7. '])]' → logprob: -7.724338531494141
    8. '])' → logprob: -9.09933853149414
    9. ' ]]' → logprob: -9.59933853149414
    10. ']+' → logprob: -9.72433853149414

Token 44: 'count' (ID: 5420)
  Prédit: 'count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.04354109987616539
    2. ' count' → logprob: -3.168541193008423
    3. '1' → logprob: -8.043540954589844
    4. '0' → logprob: -8.918540954589844
    5. ' ' → logprob: -10.418540954589844
    6. '   ' → logprob: -11.168540954589844
    7. '	count' → logprob: -11.168540954589844
    8. '(count' → logprob: -12.293540954589844
    9. 'counts' → logprob: -12.293540954589844
    10. 'c' → logprob: -12.918540954589844

Token 45: '.get' (ID: 775)
  Prédit: '.get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.get' → logprob: -0.004659503698348999
    2. 'get' → logprob: -5.379659652709961
    3. '.' → logprob: -10.629659652709961
    4. '.setdefault' → logprob: -12.629659652709961
    5. 's' → logprob: -12.754659652709961
    6. ' .' → logprob: -12.879659652709961
    7. '```' → logprob: -13.129659652709961
    8. '().' → logprob: -13.629659652709961
    9. '(s' → logprob: -14.754659652709961
    10. '|get' → logprob: -14.754659652709961

Token 46: '(scores' (ID: 154090)
  Prédit: '(scores'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(scores' → logprob: -0.0005338519695214927
    2. '(' → logprob: -8.250534057617188
    3. '(count' → logprob: -8.750534057617188
    4. 'scores' → logprob: -9.750534057617188
    5. '(score' → logprob: -10.000534057617188
    6. '(s' → logprob: -11.875534057617188
    7. '(tokens' → logprob: -13.500534057617188
    8. ' scores' → logprob: -14.250534057617188
    9. '(sc' → logprob: -15.250534057617188
    10. '(samples' → logprob: -15.375534057617188

Token 47: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -6.392202976712724e-06
    2. '[s' → logprob: -12.125006675720215
    3. '[' → logprob: -14.375006675720215
    4. ' ' → logprob: -16.7500057220459
    5. '[j' → logprob: -16.7500057220459
    6. 'i' → logprob: -17.2500057220459
    7. '```' → logprob: -17.3750057220459
    8. '(i' → logprob: -17.6250057220459
    9. '   ' → logprob: -17.6250057220459
    10. ' [' → logprob: -17.8750057220459

Token 48: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.004278784617781639
    2. '[j' → logprob: -5.754278659820557
    3. '[i' → logprob: -7.379278659820557
    4. '[' → logprob: -8.254279136657715
    5. ' ][' → logprob: -9.254279136657715
    6. ']' → logprob: -9.879279136657715
    7. '   ' → logprob: -10.629279136657715
    8. ' [' → logprob: -11.754279136657715
    9. '```' → logprob: -12.254279136657715
    10. '"][' → logprob: -13.129279136657715

Token 49: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -5.538490950129926e-05
    2. '0' → logprob: -11.250055313110352
    3. '   ' → logprob: -11.375055313110352
    4. ' ' → logprob: -11.750055313110352
    5. ' j' → logprob: -11.875055313110352
    6. 'i' → logprob: -12.250055313110352
    7. '```' → logprob: -12.250055313110352
    8. '1' → logprob: -13.000055313110352
    9. ']' → logprob: -14.250055313110352
    10. '  ' → logprob: -14.625055313110352

Token 50: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002930366899818182
    2. ' ,' → logprob: -8.500292778015137
    3. ')' → logprob: -10.125292778015137
    4. ',None' → logprob: -11.375292778015137
    5. '0' → logprob: -11.750292778015137
    6. ')+' → logprob: -12.125292778015137
    7. ',j' → logprob: -12.250292778015137
    8. '1' → logprob: -12.500292778015137
    9. ',)' → logprob: -12.625292778015137
    10. '),' → logprob: -12.875292778015137

Token 51: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0004885728703811765
    2. ' ' → logprob: -7.625488758087158
    3. ')' → logprob: -15.00048828125
    4. '1' → logprob: -16.25048828125
    5. '    ' → logprob: -17.25048828125
    6. '   ' → logprob: -17.87548828125
    7. '۰' → logprob: -18.62548828125
    8. '  ' → logprob: -19.37548828125
    9. '```' → logprob: -19.37548828125
    10. '+' → logprob: -19.87548828125

Token 52: ')+' (ID: 16161)
  Prédit: ')+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')+' → logprob: -0.25599154829978943
    2. ')' → logprob: -1.6309915781021118
    3. '+' → logprob: -3.5059914588928223
    4. '1' → logprob: -10.13099193572998
    5. ' )' → logprob: -10.88099193572998
    6. ']+' → logprob: -11.25599193572998
    7. ' +' → logprob: -11.50599193572998
    8. ')+(' → logprob: -12.38099193572998
    9. '+)' → logprob: -12.38099193572998
    10. ']+=' → logprob: -13.00599193572998

Token 53: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.7697225252486533e-06
    2. ' ' → logprob: -12.500003814697266
    3. '   ' → logprob: -16.750003814697266
    4. '  ' → logprob: -20.625003814697266
    5. '<|end|>' → logprob: -20.750003814697266
    6. '```' → logprob: -21.750003814697266
    7. '+' → logprob: -22.125003814697266
    8. '    ' → logprob: -22.250003814697266
    9. '       ' → logprob: -22.875003814697266
    10. '     ' → logprob: -23.250003814697266

Token 54: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5686590075492859
    2. 'for' → logprob: -1.3186590671539307
    3. ' for' → logprob: -2.0686590671539307
    4. '
' → logprob: -4.318658828735352
    5. '<|end|>' → logprob: -5.068658828735352
    6. ' ' → logprob: -5.193658828735352
    7. ')' → logprob: -5.193658828735352
    8. '    
' → logprob: -6.193658828735352
    9. '#' → logprob: -6.693658828735352
    10. '    ' → logprob: -6.818658828735352

Token 55: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5381645560264587
    2. '<|end|>' → logprob: -1.7881646156311035
    3. 'for' → logprob: -1.9131646156311035
    4. ' for' → logprob: -2.9131646156311035
    5. ' ' → logprob: -4.0381646156311035
    6. ')' → logprob: -4.0381646156311035
    7. '#' → logprob: -5.5381646156311035
    8. '    ' → logprob: -6.1631646156311035
    9. '```' → logprob: -6.9131646156311035
    10. '
' → logprob: -7.0381646156311035

Token 56: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.010629897937178612
    2. 'max' → logprob: -5.760630130767822
    3. ' for' → logprob: -6.010630130767822
    4. 'result' → logprob: -6.760630130767822
    5. 'unique' → logprob: -6.885630130767822
    6. 'score' → logprob: -7.510630130767822
    7. '   ' → logprob: -7.510630130767822
    8. 'sum' → logprob: -7.760630130767822
    9. 'ans' → logprob: -8.010629653930664
    10. 'res' → logprob: -9.010629653930664

Token 57: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.471641182899475
    2. 'k' → logprob: -1.596641182899475
    3. ' i' → logprob: -1.971641182899475
    4. ' key' → logprob: -2.0966410636901855
    5. 'score' → logprob: -2.3466410636901855
    6. ' k' → logprob: -2.4716410636901855
    7. ' score' → logprob: -2.7216410636901855
    8. 'key' → logprob: -3.4716410636901855
    9. ' val' → logprob: -5.2216410636901855
    10. 'x' → logprob: -5.5966410636901855

Token 58: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.06281841546297073
    2. 'in' → logprob: -2.8128185272216797
    3. ' ' → logprob: -7.18781852722168
    4. 'n' → logprob: -9.68781852722168
    5. '  ' → logprob: -11.18781852722168
    6. 'range' → logprob: -12.43781852722168
    7. 's' → logprob: -12.68781852722168
    8. ' n' → logprob: -13.18781852722168
    9. '   ' → logprob: -13.68781852722168
    10. ' i' → logprob: -13.68781852722168

Token 59: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0005038236267864704
    2. ' range' → logprob: -7.625504016876221
    3. '(range' → logprob: -12.250503540039062
    4. 'count' → logprob: -12.375503540039062
    5. 'scores' → logprob: -12.375503540039062
    6. 'score' → logprob: -13.875503540039062
    7. '   ' → logprob: -15.500503540039062
    8. 'rang' → logprob: -15.750503540039062
    9. 'set' → logprob: -16.000503540039062
    10. ')' → logprob: -16.000503540039062

Token 60: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.28519949316978455
    2. '(range' → logprob: -2.1601994037628174
    3. 'range' → logprob: -2.2851994037628174
    4. ' range' → logprob: -3.9101994037628174
    5. '(' → logprob: -4.6601996421813965
    6. '(count' → logprob: -7.1601996421813965
    7. 'N' → logprob: -8.035199165344238
    8. ')' → logprob: -9.035199165344238
    9. '(scores' → logprob: -9.535199165344238
    10. '(s' → logprob: -9.785199165344238

Token 61: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.010787817649543285
    2. '):
' → logprob: -4.6357879638671875
    3. ')' → logprob: -7.1357879638671875
    4. ':' → logprob: -8.510787963867188
    5. '   ' → logprob: -11.260787963867188
    6. '):
' → logprob: -12.010787963867188
    7. '       ' → logprob: -12.385787963867188
    8. ' ):' → logprob: -12.510787963867188
    9. '):

' → logprob: -13.260787963867188
    10. 'if' → logprob: -13.760787963867188

Token 62: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3607083261013031
    2. '   ' → logprob: -1.2357083559036255
    3. ' if' → logprob: -5.110708236694336
    4. ' scores' → logprob: -6.235708236694336
    5. 'if' → logprob: -6.360708236694336
    6. ' ' → logprob: -7.735708236694336
    7. '    ' → logprob: -7.735708236694336
    8. '<|end|>' → logprob: -7.860708236694336
    9. 'scores' → logprob: -8.110708236694336
    10. 'print' → logprob: -8.360708236694336

Token 63: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.21970467269420624
    2. 'print' → logprob: -2.0947046279907227
    3. ' if' → logprob: -2.7197046279907227
    4. ' print' → logprob: -5.844704627990723
    5. '   ' → logprob: -6.219704627990723
    6. 'scores' → logprob: -6.344704627990723
    7. 'score' → logprob: -7.469704627990723
    8. ' scores' → logprob: -8.344704627990723
    9. 'count' → logprob: -8.469704627990723
    10. '       ' → logprob: -8.469704627990723

Token 64: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.6335722208023071
    2. ' count' → logprob: -0.7585722208023071
    3. '   ' → logprob: -7.258572101593018
    4. '(count' → logprob: -9.383572578430176
    5. ' counts' → logprob: -10.258572578430176
    6. '	count' → logprob: -10.508572578430176
    7. ' ' → logprob: -10.633572578430176
    8. ' scores' → logprob: -10.758572578430176
    9. 'counts' → logprob: -10.883572578430176
    10. 'scores' → logprob: -11.008572578430176

Token 65: '[s' (ID: 24177)
  Prédit: '[s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[s' → logprob: -0.0007986692944541574
    2. '[' → logprob: -7.25079870223999
    3. '(s' → logprob: -10.375798225402832
    4. '(scores' → logprob: -10.750798225402832
    5. 's' → logprob: -11.375798225402832
    6. '.get' → logprob: -11.375798225402832
    7. 'scores' → logprob: -12.250798225402832
    8. '[(' → logprob: -13.500798225402832
    9. '[count' → logprob: -13.750798225402832
    10. '```' → logprob: -14.250798225402832

Token 66: 'cores' (ID: 12071)
  Prédit: 'cores'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cores' → logprob: -0.0006855101673863828
    2. '[' → logprob: -8.375685691833496
    3. 'scores' → logprob: -8.625685691833496
    4. 'core' → logprob: -8.875685691833496
    5. '[s' → logprob: -9.250685691833496
    6. '(scores' → logprob: -10.500685691833496
    7. 'c' → logprob: -12.625685691833496
    8. 'ores' → logprob: -13.000685691833496
    9. '```' → logprob: -13.125685691833496
    10. '[c' → logprob: -14.000685691833496

Token 67: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.5776860184123507e-06
    2. '[' → logprob: -13.12500286102295
    3. '[user' → logprob: -16.000001907348633
    4. '[j' → logprob: -16.250001907348633
    5. '][' → logprob: -16.250001907348633
    6. '[I' → logprob: -17.000001907348633
    7. '```' → logprob: -17.625001907348633
    8. '[int' → logprob: -17.625001907348633
    9. ')' → logprob: -17.875001907348633
    10. '[][' → logprob: -17.875001907348633

Token 68: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.1824502944946289
    2. '[i' → logprob: -1.807450294494629
    3. '[' → logprob: -6.307450294494629
    4. ' ][' → logprob: -8.057450294494629
    5. ']' → logprob: -8.432450294494629
    6. '[j' → logprob: -8.807450294494629
    7. ']][' → logprob: -10.307450294494629
    8. '```' → logprob: -10.307450294494629
    9. '[][' → logprob: -11.182450294494629
    10. ')][' → logprob: -11.182450294494629

Token 69: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.2233183042553719e-05
    2. '[j' → logprob: -11.875012397766113
    3. '][' → logprob: -12.750012397766113
    4. ' j' → logprob: -14.250012397766113
    5. '   ' → logprob: -14.875012397766113
    6. ']' → logprob: -14.875012397766113
    7. '```' → logprob: -14.875012397766113
    8. ' ' → logprob: -16.000011444091797
    9. '	j' → logprob: -16.375011444091797
    10. 'i' → logprob: -16.625011444091797

Token 70: ']]' (ID: 8928)
  Prédit: ']]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']]' → logprob: -0.04868161305785179
    2. ']==' → logprob: -3.4236814975738525
    3. ']>' → logprob: -5.048681735992432
    4. ']' → logprob: -5.173681735992432
    5. ']]=' → logprob: -6.798681735992432
    6. '[j' → logprob: -7.298681735992432
    7. '[i' → logprob: -8.423681259155273
    8. '']]' → logprob: -8.923681259155273
    9. '```' → logprob: -9.048681259155273
    10. ']>=' → logprob: -9.298681259155273

Token 71: '>' (ID: 29)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.03638894855976105
    2. '>' → logprob: -3.536388874053955
    3. '">' → logprob: -6.036388874053955
    4. '```' → logprob: -6.786388874053955
    5. ']==' → logprob: -7.036388874053955
    6. '<' → logprob: -7.286388874053955
    7. '=' → logprob: -7.411388874053955
    8. ' ==' → logprob: -7.911388874053955
    9. '!=' → logprob: -9.161389350891113
    10. '"' → logprob: -9.661389350891113

Token 72: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.341087570646778e-05
    2. ' ' → logprob: -10.000093460083008
    3. '2' → logprob: -10.625093460083008
    4. '3' → logprob: -10.750093460083008
    5. '4' → logprob: -14.125093460083008
    6. '>' → logprob: -15.125093460083008
    7. '   ' → logprob: -15.375093460083008
    8. '5' → logprob: -15.625093460083008
    9. '```' → logprob: -15.625093460083008
    10. '10' → logprob: -16.125093460083008

Token 73: ':s' (ID: 31023)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0005249153473414481
    2. '):' → logprob: -8.625524520874023
    3. ':
' → logprob: -9.000524520874023
    4. '           ' → logprob: -9.500524520874023
    5. ' :' → logprob: -10.250524520874023
    6. ')' → logprob: -10.250524520874023
    7. '       ' → logprob: -10.625524520874023
    8. ' and' → logprob: -10.625524520874023
    9. ' continue' → logprob: -12.375524520874023
    10. ' or' → logprob: -12.375524520874023

Token 74: 'cores' (ID: 12071)
  Prédit: 'cores'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cores' → logprob: -0.00016468366084154695
    2. 'core' → logprob: -9.250164985656738
    3. ' cores' → logprob: -10.750164985656738
    4. 'co' → logprob: -11.250164985656738
    5. '```' → logprob: -11.250164985656738
    6. 'ores' → logprob: -12.125164985656738
    7. '   ' → logprob: -13.000164985656738
    8. 'cor' → logprob: -13.250164985656738
    9. '``' → logprob: -13.250164985656738
    10. 'scores' → logprob: -13.625164985656738

Token 75: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.842555426876061e-06
    2. '[' → logprob: -12.500004768371582
    3. '[I' → logprob: -14.500004768371582
    4. '[j' → logprob: -14.625004768371582
    5. '```' → logprob: -16.1250057220459
    6. '[][' → logprob: -17.6250057220459
    7. '][' → logprob: -17.6250057220459
    8. ')[' → logprob: -18.1250057220459
    9. '[ii' → logprob: -18.1250057220459
    10. '[s' → logprob: -18.3750057220459

Token 76: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0012035658583045006
    2. '[j' → logprob: -7.376203536987305
    3. ']' → logprob: -7.876203536987305
    4. '[' → logprob: -9.501203536987305
    5. '[i' → logprob: -9.501203536987305
    6. ' ][' → logprob: -11.376203536987305
    7. ')[' → logprob: -11.501203536987305
    8. ']][' → logprob: -12.126203536987305
    9. ')][' → logprob: -12.376203536987305
    10. '])[' → logprob: -13.001203536987305

Token 77: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.00010044389637187123
    2. ']' → logprob: -10.250100135803223
    3. '][' → logprob: -10.375100135803223
    4. '	j' → logprob: -11.625100135803223
    5. '[j' → logprob: -11.875100135803223
    6. ' j' → logprob: -12.625100135803223
    7. '```' → logprob: -12.625100135803223
    8. ':j' → logprob: -13.375100135803223
    9. '0' → logprob: -13.625100135803223
    10. '_j' → logprob: -13.625100135803223

Token 78: ']=' (ID: 9539)
  Prédit: ']='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']=' → logprob: -0.01752614974975586
    2. ']' → logprob: -5.017526149749756
    3. ')=' → logprob: -5.392526149749756
    4. '=' → logprob: -5.642526149749756
    5. '*=' → logprob: -7.017526149749756
    6. '}=' → logprob: -7.267526149749756
    7. ']=-' → logprob: -7.392526149749756
    8. ']+=' → logprob: -8.767526626586914
    9. ')' → logprob: -9.267526626586914
    10. ']]=' → logprob: -9.892526626586914

Token 79: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9385402993066236e-05
    2. ' ' → logprob: -11.000019073486328
    3. '-' → logprob: -14.000019073486328
    4. '1' → logprob: -14.625019073486328
    5. '3' → logprob: -15.750019073486328
    6. '100' → logprob: -16.000019073486328
    7. '00' → logprob: -16.250019073486328
    8. 's' → logprob: -16.375019073486328
    9. '2' → logprob: -16.687519073486328
    10. '   ' → logprob: -17.000019073486328

Token 80: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.04219404608011246
    2. 'print' → logprob: -3.917194128036499
    3. '<|end|>' → logprob: -5.16719388961792
    4. ')' → logprob: -5.41719388961792
    5. ' for' → logprob: -5.91719388961792
    6. 'total' → logprob: -6.16719388961792
    7. '```' → logprob: -6.16719388961792
    8. 'sum' → logprob: -6.41719388961792
    9. '   ' → logprob: -6.66719388961792
    10. 'score' → logprob: -7.54219388961792

Token 81: 'result' (ID: 2521)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.030444754287600517
    2. ')' → logprob: -4.405444622039795
    3. 'print' → logprob: -5.780444622039795
    4. '```' → logprob: -5.780444622039795
    5. ' for' → logprob: -6.155444622039795
    6. 'total' → logprob: -6.280444622039795
    7. '<|end|>' → logprob: -6.405444622039795
    8. 'sum' → logprob: -6.405444622039795
    9. '   ' → logprob: -6.655444622039795
    10. 'score' → logprob: -7.030444622039795

Token 82: '=[' (ID: 13370)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.42115211486816406
    2. ' =' → logprob: -2.546152114868164
    3. '[' → logprob: -2.796152114868164
    4. 'scores' → logprob: -3.421152114868164
    5. 's' → logprob: -3.546152114868164
    6. '=[]' → logprob: -3.796152114868164
    7. '_scores' → logprob: -3.796152114868164
    8. '<|end|>' → logprob: -3.796152114868164
    9. '[]' → logprob: -3.921152114868164
    10. '[:]' → logprob: -4.171152114868164

Token 83: 'sum' (ID: 12298)
  Prédit: 'sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.03390651196241379
    2. ' sum' → logprob: -4.28390645980835
    3. '0' → logprob: -4.40890645980835
    4. 'max' → logprob: -5.53390645980835
    5. '(sum' → logprob: -6.28390645980835
    6. 'scores' → logprob: -7.78390645980835
    7. ' max' → logprob: -8.033906936645508
    8. '[' → logprob: -8.158906936645508
    9. '[max' → logprob: -9.033906936645508
    10. 'map' → logprob: -9.283906936645508

Token 84: '(p' (ID: 2407)
  Prédit: '(scores'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(scores' → logprob: -0.02615966834127903
    2. '(' → logprob: -3.7761597633361816
    3. '(s' → logprob: -6.526159763336182
    4. '(row' → logprob: -7.401159763336182
    5. '(score' → logprob: -7.526159763336182
    6. 'scores' → logprob: -8.526159286499023
    7. '(x' → logprob: -9.901159286499023
    8. ' scores' → logprob: -11.651159286499023
    9. '(i' → logprob: -11.776159286499023
    10. ')' → logprob: -11.901159286499023

Token 85: ')' (ID: 8)
  Prédit: '(scores'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(scores' → logprob: -0.040312886238098145
    2. 'scores' → logprob: -3.5403127670288086
    3. ')' → logprob: -4.790312767028809
    4. '(score' → logprob: -6.915312767028809
    5. '(row' → logprob: -7.290312767028809
    6. ' scores' → logprob: -9.290312767028809
    7. 's' → logprob: -9.290312767028809
    8. '_scores' → logprob: -9.415312767028809
    9. '(s' → logprob: -9.665312767028809
    10. ')s' → logprob: -9.665312767028809

Token 86: ' for' (ID: 395)
  Prédit: '(scores'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(scores' → logprob: -0.06670808792114258
    2. '(p' → logprob: -2.8167080879211426
    3. '(s' → logprob: -6.316708087921143
    4. '(' → logprob: -6.316708087921143
    5. '(score' → logprob: -7.816708087921143
    6. 'scores' → logprob: -7.941708087921143
    7. '(x' → logprob: -8.316707611083984
    8. '(row' → logprob: -10.191707611083984
    9. '(points' → logprob: -10.441707611083984
    10. ' scores' → logprob: -11.316707611083984

Token 87: ' p' (ID: 275)
  Prédit: ' scores'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' scores' → logprob: -0.592778742313385
    2. 'scores' → logprob: -0.842778742313385
    3. '(scores' → logprob: -4.09277868270874
    4. '_scores' → logprob: -12.842779159545898
    5. 's' → logprob: -13.217779159545898
    6. 'score' → logprob: -14.467779159545898
    7. '(s' → logprob: -15.092779159545898
    8. '(score' → logprob: -15.842779159545898
    9. ' score' → logprob: -16.3427791595459
    10. 'Scores' → logprob: -17.3427791595459

Token 88: ' in' (ID: 306)
  Prédit: '(scores'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(scores' → logprob: -0.6084138751029968
    2. ' in' → logprob: -0.9834138751029968
    3. 'in' → logprob: -3.2334139347076416
    4. 'scores' → logprob: -3.4834139347076416
    5. ' scores' → logprob: -4.4834136962890625
    6. 's' → logprob: -8.608413696289062
    7. '_scores' → logprob: -9.483413696289062
    8. '(s' → logprob: -10.233413696289062
    9. ' ' → logprob: -11.233413696289062
    10. '(' → logprob: -11.358413696289062

Token 89: ' scores' (ID: 18923)
  Prédit: 'scores'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'scores' → logprob: -0.00033677343162707984
    2. ' scores' → logprob: -8.000336647033691
    3. '(scores' → logprob: -14.375336647033691
    4. 's' → logprob: -14.875336647033691
    5. 'score' → logprob: -14.875336647033691
    6. '_scores' → logprob: -18.625337600708008
    7. 'Scores' → logprob: -20.500337600708008
    8. ' ' → logprob: -21.750337600708008
    9. 'codes' → logprob: -22.000337600708008
    10. '`s' → logprob: -22.125337600708008

Token 90: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.023313378915190697
    2. ']
' → logprob: -3.898313283920288
    3. ')' → logprob: -6.398313522338867
    4. ')]' → logprob: -7.023313522338867
    5. ']
' → logprob: -9.398313522338867
    6. ')
' → logprob: -10.023313522338867
    7. ' ]' → logprob: -10.148313522338867
    8. ']

' → logprob: -11.148313522338867
    9. '])' → logprob: -11.148313522338867
    10. 'print' → logprob: -11.773313522338867

Token 91: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.48381373286247253
    2. 'for' → logprob: -1.108813762664795
    3. '
' → logprob: -2.983813762664795
    4. ' for' → logprob: -6.358813762664795
    5. '```' → logprob: -7.108813762664795
    6. ' print' → logprob: -9.608813285827637
    7. 's' → logprob: -9.733813285827637
    8. ')' → logprob: -10.108813285827637
    9. ' 
' → logprob: -10.233813285827637
    10. '\n' → logprob: -10.233813285827637

Token 92: '(*' (ID: 9000)
  Prédit: '(result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.3306296169757843
    2. '(' → logprob: -1.330629587173462
    3. '(sum' → logprob: -4.080629825592041
    4. '(*' → logprob: -9.080629348754883
    5. '(max' → logprob: -9.205629348754883
    6. '(list' → logprob: -10.830629348754883
    7. '('' → logprob: -10.955629348754883
    8. '(results' → logprob: -11.080629348754883
    9. 'result' → logprob: -11.205629348754883
    10. '(len' → logprob: -11.455629348754883

Token 93: 'result' (ID: 2521)
  Prédit: 'result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -1.5048530030981055e-06
    2. ' result' → logprob: -13.500001907348633
    3. '(result' → logprob: -17.000001907348633
    4. 'sorted' → logprob: -19.125001907348633
    5. ')' → logprob: -19.875001907348633
    6. '[result' → logprob: -20.500001907348633
    7. '$result' → logprob: -22.625001907348633
    8. 'range' → logprob: -23.250001907348633
    9. '	result' → logprob: -23.250001907348633
    10. 'res' → logprob: -23.625001907348633

Token 94: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.339278580620885e-06
    2. ' )' → logprob: -13.375001907348633
    3. '))' → logprob: -14.750001907348633
    4. ')`' → logprob: -15.250001907348633
    5. ')
' → logprob: -17.125001907348633
    6. '`)' → logprob: -17.375001907348633
    7. ')#' → logprob: -17.500001907348633
    8. '()' → logprob: -17.875001907348633
    9. ')**' → logprob: -18.375001907348633
    10. '）' → logprob: -18.500001907348633

Token 95: 'sep' (ID: 46643)
  Prédit: 'sep'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sep' → logprob: -0.03357008844614029
    2. ')' → logprob: -3.5335700511932373
    3. ' sep' → logprob: -5.658570289611816
    4. 'end' → logprob: -8.158570289611816
    5. 'se' → logprob: -10.533570289611816
    6. ' )' → logprob: -12.408570289611816
    7. ')
' → logprob: -13.158570289611816
    8. 'separator' → logprob: -13.658570289611816
    9. ' ' → logprob: -13.908570289611816
    10. 'Sep' → logprob: -14.408570289611816

Token 96: '='\' (ID: 106410)
  Prédit: '=''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '='' → logprob: -0.6347620487213135
    2. '=' → logprob: -1.5097620487213135
    3. '='\' → logprob: -1.5097620487213135
    4. '="' → logprob: -4.009761810302734
    5. '="\' → logprob: -4.759761810302734
    6. '=\' → logprob: -7.259761810302734
    7. '"' → logprob: -8.009761810302734
    8. '=',' → logprob: -9.009761810302734
    9. ''' → logprob: -10.009761810302734
    10. '=",' → logprob: -10.134761810302734

Token 97: 'n' (ID: 77)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.0035854605957865715
    2. 'n' → logprob: -5.878585338592529
    3. ''\' → logprob: -7.503585338592529
    4. '
' → logprob: -9.003585815429688
    5. ''' → logprob: -10.378585815429688
    6. '\' → logprob: -10.628585815429688
    7. '"\' → logprob: -10.753585815429688
    8. ')' → logprob: -11.628585815429688
    9. ' ' → logprob: -11.878585815429688
    10. ''n' → logprob: -13.003585815429688

Token 98: '')' (ID: 1542)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.4849443838757e-06
    2. ' )' → logprob: -12.500004768371582
    3. '')' → logprob: -14.750004768371582
    4. '")' → logprob: -16.250003814697266
    5. ')
' → logprob: -16.500003814697266
    6. '))' → logprob: -16.750003814697266
    7. ')`' → logprob: -17.375003814697266
    8. '`)' → logprob: -17.625003814697266
    9. '）' → logprob: -18.625003814697266
    10. ')")' → logprob: -19.625003814697266


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 96
Tokens correctement prédits (1ère position, stricte): 50
Tokens correctement prédits (1ère position, avec adaptation): 53
Tokens correctement prédits (top 10): 80
Précision stricte (1ère position): 52.08%
Précision adaptée (1ère position): 55.21%
Précision (top 10): 83.33%
================================================================================
