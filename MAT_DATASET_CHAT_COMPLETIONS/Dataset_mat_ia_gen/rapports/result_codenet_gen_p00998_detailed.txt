================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:08:04
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
sys.setrecursionlimit(10**7)
input = sys.stdin.readline

class SegmentTree:
    def __init__(self, data):
        n = len(data)
        self.n = 1
        while self.n < n:
            self.n <<= 1
        # Initialize tree with infinities
        self.data = [float('inf')] * (2 * self.n)
        # Build the tree
        for i in range(n):
            self.data[self.n + i] = data[i]
        for i in range(self.n - 1, 0, -1):
            self.data[i] = min(self.data[2*i], self.data[2*i+1])
    
    def update(self, idx, val):
        # Update value at position idx
        idx += self.n
        self.data[idx] = val
        idx >>= 1
        while idx > 0:
            self.data[idx] = min(self.data[2*idx], self.data[2*idx+1])
            idx >>= 1
    
    def query(self, l, r):
        # Query min value in [l, r]
        l += self.n
        r += self.n
        res = float('inf')
        while l <= r:
            if (l & 1) == 1:
                res = min(res, self.data[l])
                l += 1
            if (r & 1) == 0:
                res = min(res, self.data[r])
                r -= 1
            l >>= 1
            r >>= 1
        return res

def main():
    n, q = map(int, input().split())
    a = [int(input()) for _ in range(n)]
    seg = SegmentTree(a)
    a_list = a  # We'll keep array for shifting and updating
    
    for _ in range(q):
        x, y, z = map(int, input().split())
        if x == 0:
            # Circular shift from l=y to r=z
            l, r = y, z
            # Save last element in range
            last_val = a_list[r]
            # Shift elements to the right by one
            for i in range(r, l, -1):
                a_list[i] = a_list[i-1]
                seg.update(i, a_list[i])
            a_list[l] = last_val
            seg.update(l, last_val)
        elif x == 1:
            # Query min in [l=y, r=z]
            l, r = y, z
            res = seg.query(l, r)
            print(res)
        else:
            # Update pos=y with val=z
            pos, val = y, z
            a_list[pos] = val
            seg.update(pos, val)

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'sys' (ID: 17324)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.20001201331615448
    2. '.' → logprob: -2.450011968612671
    3. '<|end|>' → logprob: -2.825011968612671
    4. '\' → logprob: -4.70001220703125
    5. 'newline' → logprob: -5.07501220703125
    6. 'import' → logprob: -5.07501220703125
    7. '' → logprob: -5.82501220703125
    8. '
' → logprob: -5.82501220703125
    9. '<|end|>' → logprob: -5.82501220703125
    10. '\r' → logprob: -6.32501220703125

Token 4: '.set' (ID: 1230)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -9.078839502763003e-05
    2. '[' → logprob: -11.250090599060059
    3. '.import' → logprob: -11.625090599060059
    4. '.readline' → logprob: -11.750090599060059
    5. '```' → logprob: -11.750090599060059
    6. ' .' → logprob: -12.000090599060059
    7. '.
' → logprob: -12.500090599060059
    8. '.`' → logprob: -12.625090599060059
    9. '`.' → logprob: -12.875090599060059
    10. '.user' → logprob: -12.875090599060059

Token 5: 'rec' (ID: 9285)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.0671085119247437
    2. '_sys' → logprob: -1.5671085119247437
    3. '_trace' → logprob: -2.442108631134033
    4. 'sys' → logprob: -2.817108631134033
    5. 's' → logprob: -3.067108631134033
    6. 'trace' → logprob: -3.567108631134033
    7. '_set' → logprob: -3.692108631134033
    8. 'attr' → logprob: -4.067108631134033
    9. '_default' → logprob: -4.192108631134033
    10. 'set' → logprob: -4.192108631134033

Token 6: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.0037415295373648405
    2. 'ursive' → logprob: -6.37874174118042
    3. 'limit' → logprob: -7.00374174118042
    4. 'ur' → logprob: -7.50374174118042
    5. 'urse' → logprob: -9.253741264343262
    6. '_limit' → logprob: -9.628741264343262
    7. 'urs' → logprob: -9.628741264343262
    8. 'ut' → logprob: -9.753741264343262
    9. 'u' → logprob: -10.003741264343262
    10. 't' → logprob: -10.128741264343262

Token 7: 'limit' (ID: 19698)
  Prédit: '_limit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_limit' → logprob: -0.48665714263916016
    2. 'limit' → logprob: -0.9866571426391602
    3. '_depth' → logprob: -4.48665714263916
    4. 'depth' → logprob: -7.48665714263916
    5. '_' → logprob: -8.36165714263916
    6. '_rate' → logprob: -9.98665714263916
    7. 'lim' → logprob: -10.23665714263916
    8. '(' → logprob: -10.36165714263916
    9. '_factor' → logprob: -10.48665714263916
    10. '_stack' → logprob: -10.61165714263916

Token 8: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -3.500108141452074e-05
    2. '(
' → logprob: -11.000035285949707
    3. ' (' → logprob: -11.500035285949707
    4. '(

' → logprob: -13.125035285949707
    5. '("("' → logprob: -13.250035285949707
    6. '('' → logprob: -13.875035285949707
    7. '((' → logprob: -14.125035285949707
    8. '(.' → logprob: -14.625035285949707
    9. '```' → logprob: -14.750035285949707
    10. '(()' → logprob: -15.500035285949707

Token 9: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.07906417548656464
    2. '100' → logprob: -2.579064130783081
    3. ' ' → logprob: -9.07906436920166
    4. '500' → logprob: -10.45406436920166
    5. '300' → logprob: -11.07906436920166
    6. '999' → logprob: -12.07906436920166
    7. '  ' → logprob: -12.45406436920166
    8. '   ' → logprob: -13.32906436920166
    9. '1' → logprob: -13.70406436920166
    10. '150' → logprob: -13.82906436920166

Token 10: '**' (ID: 410)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.006857931148260832
    2. '000' → logprob: -5.756857872009277
    3. '00' → logprob: -5.881857872009277
    4. '4' → logprob: -7.256857872009277
    5. '6' → logprob: -8.881857872009277
    6. '5' → logprob: -11.506857872009277
    7. '```' → logprob: -12.006857872009277
    8. ')' → logprob: -12.256857872009277
    9. '3' → logprob: -12.381857872009277
    10. '**' → logprob: -12.381857872009277

Token 11: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.00762082589790225
    2. '9' → logprob: -5.507620811462402
    3. '6' → logprob: -5.757620811462402
    4. '8' → logprob: -7.882620811462402
    5. '```' → logprob: -15.757620811462402
    6. ' ' → logprob: -16.38262176513672
    7. '(' → logprob: -17.13262176513672
    8. '5' → logprob: -17.75762176513672
    9. '``' → logprob: -18.25762176513672
    10. '999' → logprob: -18.38262176513672

Token 12: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.246537173457909e-06
    2. '))' → logprob: -12.625003814697266
    3. ' )' → logprob: -14.375003814697266
    4. ')
' → logprob: -15.625003814697266
    5. ')))' → logprob: -17.250003814697266
    6. ')`' → logprob: -17.750003814697266
    7. '`)' → logprob: -18.000003814697266
    8. '')' → logprob: -18.250003814697266
    9. '```' → logprob: -18.375003814697266
    10. '）' → logprob: -18.500003814697266

Token 13: 'input' (ID: 2586)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\' → logprob: -0.4477197527885437
    2. '\n' → logprob: -2.1977198123931885
    3. '(' → logprob: -2.8227198123931885
    4. '()' → logprob: -3.0727198123931885
    5. '(
' → logprob: -3.4477198123931885
    6. '
' → logprob: -3.8227198123931885
    7. 'def' → logprob: -3.9477198123931885
    8. ')' → logprob: -4.072719573974609
    9. '#' → logprob: -4.447719573974609
    10. '(sys' → logprob: -4.947719573974609

Token 14: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04257773235440254
    2. '()' → logprob: -3.2925777435302734
    3. '.' → logprob: -6.167577743530273
    4. '().' → logprob: -7.417577743530273
    5. '_data' → logprob: -7.792577743530273
    6. '('' → logprob: -8.042577743530273
    7. 'data' → logprob: -8.292577743530273
    8. ')' → logprob: -8.792577743530273
    9. '=' → logprob: -9.417577743530273
    10. '("("' → logprob: -9.417577743530273

Token 15: ' sys' (ID: 12228)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.255113422870636
    2. ' input' → logprob: -1.5051133632659912
    3. ' sys' → logprob: -6.50511360168457
    4. 'sys' → logprob: -6.50511360168457
    5. 'lambda' → logprob: -10.25511360168457
    6. '=input' → logprob: -10.63011360168457
    7. ' lambda' → logprob: -10.75511360168457
    8. '```' → logprob: -10.88011360168457
    9. 'open' → logprob: -11.13011360168457
    10. 'int' → logprob: -11.38011360168457

Token 16: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.19294962286949158
    2. '.' → logprob: -2.0679495334625244
    3. '.readline' → logprob: -3.4429495334625244
    4. ' .' → logprob: -4.1929497718811035
    5. '.stdout' → logprob: -6.8179497718811035
    6. '.std' → logprob: -8.192949295043945
    7. '.argv' → logprob: -8.442949295043945
    8. '.input' → logprob: -9.692949295043945
    9. '.stderr' → logprob: -9.817949295043945
    10. '.setdefault' → logprob: -10.817949295043945

Token 17: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.00881617795675993
    2. '.read' → logprob: -4.883816242218018
    3. '.' → logprob: -6.758816242218018
    4. '.buffer' → logprob: -10.25881576538086
    5. '.readlines' → logprob: -11.50881576538086
    6. '.Read' → logprob: -13.38381576538086
    7. 'read' → logprob: -14.00881576538086
    8. '.stdin' → logprob: -14.88381576538086
    9. ' .' → logprob: -15.38381576538086
    10. ').' → logprob: -16.00881576538086

Token 18: '

' (ID: 279)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.2804425060749054
    2. '(' → logprob: -2.780442476272583
    3. 'def' → logprob: -2.905442476272583
    4. '\n' → logprob: -3.280442476272583
    5. '()
' → logprob: -3.780442476272583
    6. '()

' → logprob: -4.155442714691162
    7. '
' → logprob: -4.280442714691162
    8. '```' → logprob: -4.780442714691162
    9. '(
' → logprob: -5.030442714691162
    10. '(n' → logprob: -5.405442714691162

Token 19: 'class' (ID: 1444)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.062080394476652145
    2. 'n' → logprob: -2.8120803833007812
    3. 'N' → logprob: -9.687080383300781
    4. 'd' → logprob: -11.062080383300781
    5. '\' → logprob: -11.812080383300781
    6. '```' → logprob: -11.812080383300781
    7. 'class' → logprob: -12.187080383300781
    8. 'a' → logprob: -12.312080383300781
    9. 'for' → logprob: -12.437080383300781
    10. 'from' → logprob: -14.062080383300781

Token 20: ' Segment' (ID: 64922)
  Prédit: ' Solution'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Solution' → logprob: -0.609859824180603
    2. ' Node' → logprob: -1.609859824180603
    3. ' Trie' → logprob: -2.2348599433898926
    4. ' Tree' → logprob: -3.1098599433898926
    5. ' Segment' → logprob: -3.2348599433898926
    6. ' Binary' → logprob: -3.7348599433898926
    7. ' DFS' → logprob: -4.359859943389893
    8. ' ' → logprob: -4.359859943389893
    9. ' Union' → logprob: -5.734859943389893
    10. ' Factor' → logprob: -5.984859943389893

Token 21: 'Tree' (ID: 8062)
  Prédit: 'Tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tree' → logprob: -0.0005700715119019151
    2. ' Tree' → logprob: -7.625570297241211
    3. 'T' → logprob: -10.875570297241211
    4. 'Tre' → logprob: -11.125570297241211
    5. '	Tree' → logprob: -11.250570297241211
    6. '(Tree' → logprob: -11.375570297241211
    7. '<Tree' → logprob: -11.875570297241211
    8. ':' → logprob: -12.000570297241211
    9. 'Tr' → logprob: -12.125570297241211
    10. '_T' → logprob: -13.750570297241211

Token 22: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0032467509154230356
    2. '(' → logprob: -5.753246784210205
    3. '():' → logprob: -10.628246307373047
    4. '(object' → logprob: -11.378246307373047
    5. ' :' → logprob: -11.753246307373047
    6. ':
' → logprob: -11.753246307373047
    7. ':**' → logprob: -12.003246307373047
    8. '):' → logprob: -13.253246307373047
    9. '[' → logprob: -13.753246307373047
    10. ',' → logprob: -13.753246307373047

Token 23: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18576408922672272
    2. ' def' → logprob: -1.8107640743255615
    3. ' ' → logprob: -5.810764312744141
    4. 'def' → logprob: -6.310764312744141
    5. '(' → logprob: -7.685764312744141
    6. '    ' → logprob: -8.43576431274414
    7. ' (' → logprob: -9.31076431274414
    8. '	def' → logprob: -9.31076431274414
    9. '    
' → logprob: -9.81076431274414
    10. '  ' → logprob: -9.93576431274414

Token 24: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.011239741928875446
    2. 'def' (adapté à ' def') → logprob: -4.636239528656006
    3. '   ' → logprob: -6.636239528656006
    4. 'class' → logprob: -9.636240005493164
    5. ' class' → logprob: -9.761240005493164
    6. ' ' → logprob: -10.636240005493164
    7. '	def' → logprob: -11.761240005493164
    8. '    ' → logprob: -12.386240005493164
    9. ' None' → logprob: -13.011240005493164
    10. ' de' → logprob: -13.511240005493164

Token 25: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.012819699943065643
    2. '__' → logprob: -4.387819766998291
    3. 'init' → logprob: -8.637819290161133
    4. ' init' → logprob: -9.137819290161133
    5. '_init' → logprob: -10.762819290161133
    6. ' _' → logprob: -13.512819290161133
    7. ' def' → logprob: -13.512819290161133
    8. ' ' → logprob: -14.637819290161133
    9. '_' → logprob: -15.137819290161133
    10. '   ' → logprob: -15.512819290161133

Token 26: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: 0.0
    2. 'int' → logprob: -19.125
    3. ' init' → logprob: -19.375
    4. 'ini' → logprob: -19.5
    5. '_init' → logprob: -21.875
    6. 'in' → logprob: -22.0
    7. 'inite' → logprob: -22.0
    8. 'innit' → logprob: -22.75
    9. '	init' → logprob: -22.875
    10. 'inti' → logprob: -23.5

Token 27: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.18230783939361572
    2. '(' → logprob: -2.307307720184326
    3. '__' → logprob: -3.307307720184326
    4. '(self' → logprob: -3.932307720184326
    5. ' (' → logprob: -4.682307720184326
    6. '<|end|>' → logprob: -7.932307720184326
    7. '__(
' → logprob: -8.432308197021484
    8. 'self' → logprob: -9.057308197021484
    9. '```' → logprob: -9.057308197021484
    10. '__(*' → logprob: -9.307308197021484

Token 28: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0003154432924930006
    2. ' self' → logprob: -8.12531566619873
    3. '(self' → logprob: -11.50031566619873
    4. '	self' → logprob: -12.50031566619873
    5. ')' → logprob: -13.00031566619873
    6. ',self' → logprob: -13.50031566619873
    7. ' ' → logprob: -14.00031566619873
    8. '       ' → logprob: -15.50031566619873
    9. '   ' → logprob: -15.75031566619873
    10. '_self' → logprob: -15.87531566619873

Token 29: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0844438374042511
    2. 'self' → logprob: -3.5844438076019287
    3. ')' → logprob: -4.084444046020508
    4. '(self' → logprob: -4.209444046020508
    5. '(' → logprob: -4.459444046020508
    6. ' ,' → logprob: -5.459444046020508
    7. ' (' → logprob: -6.334444046020508
    8. '<|end|>' → logprob: -6.584444046020508
    9. ' self' → logprob: -6.709444046020508
    10. ',self' → logprob: -7.209444046020508

Token 30: ' data' (ID: 1238)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.009330776520073414
    2. ' self' → logprob: -4.759330749511719
    3. 'n' → logprob: -8.134330749511719
    4. 'data' → logprob: -8.134330749511719
    5. ' data' → logprob: -9.884330749511719
    6. ' n' → logprob: -10.509330749511719
    7. 'size' → logprob: -10.509330749511719
    8. 'arr' → logprob: -11.634330749511719
    9. '   ' → logprob: -11.884330749511719
    10. ' size' → logprob: -12.509330749511719

Token 31: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.01839071325957775
    2. ',' → logprob: -4.143390655517578
    3. ')' → logprob: -6.643390655517578
    4. '   ' → logprob: -7.893390655517578
    5. '):
' → logprob: -8.393390655517578
    6. '[' → logprob: -8.643390655517578
    7. ':' → logprob: -9.268390655517578
    8. ' ):' → logprob: -9.768390655517578
    9. '[]):' → logprob: -10.018390655517578
    10. '       ' → logprob: -10.768390655517578

Token 32: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -4.191489642835222e-05
    2. 'self' → logprob: -10.750041961669922
    3. ' self' → logprob: -12.250041961669922
    4. ',' → logprob: -12.250041961669922
    5. '        ' → logprob: -12.500041961669922
    6. '      ' → logprob: -12.875041961669922
    7. 'n' → logprob: -13.750041961669922
    8. '   ' → logprob: -14.250041961669922
    9. '     ' → logprob: -14.875041961669922
    10. '    ' → logprob: -15.250041961669922

Token 33: ' n' (ID: 297)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6828691363334656
    2. ' self' → logprob: -1.0578691959381104
    3. ' n' → logprob: -2.4328691959381104
    4. 'n' (adapté à ' n') → logprob: -3.4328691959381104
    5. 'self' → logprob: -3.6828691959381104
    6. '        ' → logprob: -6.557868957519531
    7. ' super' → logprob: -7.557868957519531
    8. ' ' → logprob: -8.682868957519531
    9. ' size' → logprob: -9.932868957519531
    10. '   ' → logprob: -10.182868957519531

Token 34: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03366898372769356
    2. '=' → logprob: -3.4086689949035645
    3. '=len' → logprob: -10.783668518066406
    4. '=int' → logprob: -13.908668518066406
    5. '   ' → logprob: -14.533668518066406
    6. 'ext' → logprob: -15.533668518066406
    7. ' ' → logprob: -15.658668518066406
    8. '_' → logprob: -16.158668518066406
    9. '=self' → logprob: -16.283668518066406
    10. ' =)' → logprob: -16.408668518066406

Token 35: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.066474549472332
    2. ' len' → logprob: -3.066474437713623
    3. '1' → logprob: -4.066474437713623
    4. ' ' → logprob: -7.441474437713623
    5. '(len' → logprob: -13.066474914550781
    6. '	len' → logprob: -13.441474914550781
    7. '=len' → logprob: -15.941474914550781
    8. '[len' → logprob: -16.31647491455078
    9. '  ' → logprob: -16.94147491455078
    10. '0' → logprob: -17.06647491455078

Token 36: '(data' (ID: 4819)
  Prédit: '(data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(data' → logprob: -1.2113979209971149e-05
    2. '(' → logprob: -11.500012397766113
    3. 'data' → logprob: -13.250012397766113
    4. ')data' → logprob: -15.875012397766113
    5. '=data' → logprob: -17.625011444091797
    6. ' data' → logprob: -17.750011444091797
    7. '[data' → logprob: -18.625011444091797
    8. ')' → logprob: -18.875011444091797
    9. '<data' → logprob: -19.375011444091797
    10. ',data' → logprob: -19.500011444091797

Token 37: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2831934094429016
    2. ')
' → logprob: -1.4081933498382568
    3. '       ' → logprob: -6.408193588256836
    4. ' )' → logprob: -8.783193588256836
    5. '   ' → logprob: -9.033193588256836
    6. ' )
' → logprob: -9.658193588256836
    7. ')
' → logprob: -11.658193588256836
    8. ' ' → logprob: -11.908193588256836
    9. ')n' → logprob: -12.158193588256836
    10. '
' → logprob: -12.283193588256836

Token 38: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010707613080739975
    2. 'self' → logprob: -4.635707378387451
    3. ' self' → logprob: -7.135707378387451
    4. '<|end|>' → logprob: -10.13570785522461
    5. 'n' → logprob: -10.76070785522461
    6. '	self' → logprob: -11.38570785522461
    7. '   ' → logprob: -11.76070785522461
    8. '        ' → logprob: -11.76070785522461
    9. 'while' → logprob: -11.76070785522461
    10. '
' → logprob: -12.13570785522461

Token 39: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0006160548073239625
    2. ' self' → logprob: -8.125616073608398
    3. 'size' → logprob: -8.625616073608398
    4. '       ' → logprob: -9.375616073608398
    5. '   ' → logprob: -10.000616073608398
    6. 'm' → logprob: -12.500616073608398
    7. '	self' → logprob: -12.500616073608398
    8. 's' → logprob: -14.125616073608398
    9. 'import' → logprob: -15.000616073608398
    10. '        
' → logprob: -15.125616073608398

Token 40: '.n' (ID: 1835)
  Prédit: '.n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.n' → logprob: -0.2550339996814728
    2. '.size' → logprob: -1.5050339698791504
    3. '.N' → logprob: -6.13003396987915
    4. '.tree' → logprob: -8.130034446716309
    5. 'size' → logprob: -8.380034446716309
    6. '.data' → logprob: -9.005034446716309
    7. '._' → logprob: -9.255034446716309
    8. '.num' → logprob: -10.130034446716309
    9. '.sz' → logprob: -10.505034446716309
    10. 'n' → logprob: -11.005034446716309

Token 41: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759580135345459
    2. ' =' → logprob: -0.8259580135345459
    3. '=int' → logprob: -12.450958251953125
    4. ' ' → logprob: -12.950958251953125
    5. '=n' → logprob: -13.200958251953125
    6. 'ext' → logprob: -13.575958251953125
    7. '＝' → logprob: -13.700958251953125
    8. '  ' → logprob: -13.825958251953125
    9. ' =[' → logprob: -13.950958251953125
    10. '   ' → logprob: -14.075958251953125

Token 42: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.005000701639801264
    2. ' ' → logprob: -5.880000591278076
    3. 'n' → logprob: -6.130000591278076
    4. ' n' → logprob: -11.130001068115234
    5. '2' → logprob: -13.380001068115234
    6. '```' → logprob: -16.005001068115234
    7. '	n' → logprob: -16.755001068115234
    8. '16' → logprob: -16.880001068115234
    9. '4' → logprob: -17.005001068115234
    10. '-' → logprob: -17.130001068115234

Token 43: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.4740803837776184
    2. 'n' → logprob: -0.9740803837776184
    3. '2' → logprob: -13.599080085754395
    4. ' n' → logprob: -13.974080085754395
    5. ' ' → logprob: -14.224080085754395
    6. 'len' → logprob: -15.599080085754395
    7. '	n' → logprob: -16.09908103942871
    8. '16' → logprob: -16.97408103942871
    9. '```' → logprob: -16.97408103942871
    10. '64' → logprob: -17.59908103942871

Token 44: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.06707213073968887
    2. '<<' → logprob: -3.4420721530914307
    3. 'while' → logprob: -3.8170721530914307
    4. ' <<=' → logprob: -5.192071914672852
    5. '<<(' → logprob: -6.567071914672852
    6. ' while' → logprob: -6.567071914672852
    7. ' <<' → logprob: -7.317071914672852
    8. ' 
' → logprob: -7.567071914672852
    9. '<' → logprob: -7.692071914672852
    10. '0' → logprob: -9.067071914672852

Token 45: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.02079528383910656
    2. '<<' → logprob: -4.5207953453063965
    3. 'while' → logprob: -4.7707953453063965
    4. ' <<=' → logprob: -7.7707953453063965
    5. ' while' → logprob: -8.645794868469238
    6. '<<(' → logprob: -8.770794868469238
    7. '<' → logprob: -8.895794868469238
    8. '       ' → logprob: -9.020794868469238
    9. '        
' → logprob: -10.020794868469238
    10. '0' → logprob: -10.520794868469238

Token 46: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.017832765355706215
    2. '
' → logprob: -4.1428327560424805
    3. ' while' → logprob: -6.5178327560424805
    4. '	while' → logprob: -8.89283275604248
    5. '       ' → logprob: -9.51783275604248
    6. 'While' → logprob: -10.51783275604248
    7. '1' → logprob: -10.89283275604248
    8. '<<' → logprob: -11.14283275604248
    9. '0' → logprob: -11.26783275604248
    10. '        
' → logprob: -11.89283275604248

Token 47: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.6931495070457458
    2. 'self' → logprob: -0.6931495070457458
    3. '(self' → logprob: -13.31814956665039
    4. '	self' → logprob: -15.31814956665039
    5. ' ' → logprob: -15.69314956665039
    6. '_self' → logprob: -15.94314956665039
    7. '[self' → logprob: -17.56814956665039
    8. 'n' → logprob: -17.81814956665039
    9. '`' → logprob: -17.94314956665039
    10. '<' → logprob: -18.06814956665039

Token 48: '.n' (ID: 1835)
  Prédit: '<n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<n' → logprob: -0.35607045888900757
    2. ' <' → logprob: -1.2310705184936523
    3. '<' → logprob: -5.481070518493652
    4. 'n' → logprob: -6.106070518493652
    5. '.n' → logprob: -6.856070518493652
    6. '_n' → logprob: -9.481070518493652
    7. '<len' → logprob: -11.481070518493652
    8. '<size' → logprob: -11.731070518493652
    9. '<s' → logprob: -11.731070518493652
    10. '[n' → logprob: -12.356070518493652

Token 49: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.31335973739624023
    2. ' <' → logprob: -1.3133597373962402
    3. '<n' → logprob: -9.438360214233398
    4. '<len' → logprob: -11.938360214233398
    5. '<num' → logprob: -12.438360214233398
    6. '<size' → logprob: -12.563360214233398
    7. '<data' → logprob: -13.563360214233398
    8. '＜' → logprob: -13.688360214233398
    9. '<number' → logprob: -15.563360214233398
    10. '<b' → logprob: -15.688360214233398

Token 50: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.011048054322600365
    2. ' n' → logprob: -4.511047840118408
    3. '	n' → logprob: -15.136048316955566
    4. ' ' → logprob: -18.13604736328125
    5. '<n' → logprob: -19.26104736328125
    6. ')n' → logprob: -19.38604736328125
    7. 'len' → logprob: -19.88604736328125
    8. '   ' → logprob: -20.51104736328125
    9. '=n' → logprob: -20.63604736328125
    10. '  ' → logprob: -20.63604736328125

Token 51: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.003692716360092163
    2. ':
' → logprob: -5.628692626953125
    3. ' <<=' → logprob: -9.503692626953125
    4. ':n' → logprob: -12.253692626953125
    5. ' :' → logprob: -12.253692626953125
    6. '<<' → logprob: -12.503692626953125
    7. '*' → logprob: -13.628692626953125
    8. '):' → logprob: -14.753692626953125
    9. ':

' → logprob: -14.878692626953125
    10. '   ' → logprob: -14.878692626953125

Token 52: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005090733524411917
    2. 'self' → logprob: -5.380090713500977
    3. ' self' → logprob: -7.755090713500977
    4. '   ' → logprob: -10.630090713500977
    5. '       ' → logprob: -12.255090713500977
    6. '```' → logprob: -12.630090713500977
    7. ' ' → logprob: -13.755090713500977
    8. '          ' → logprob: -13.755090713500977
    9. '*self' → logprob: -13.755090713500977
    10. '2' → logprob: -14.005090713500977

Token 53: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.04243139177560806
    2. ' self' → logprob: -3.542431354522705
    3. '           ' → logprob: -4.542431354522705
    4. '               ' → logprob: -6.292431354522705
    5. '   ' → logprob: -9.417431831359863
    6. '	self' → logprob: -11.792431831359863
    7. '```' → logprob: -12.292431831359863
    8. ' ' → logprob: -12.417431831359863
    9. '       ' → logprob: -13.792431831359863
    10. '(self' → logprob: -14.542431831359863

Token 54: '.n' (ID: 1835)
  Prédit: ' <<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <<=' → logprob: -0.007068062201142311
    2. '*=' → logprob: -5.257068157196045
    3. '<<' → logprob: -6.882068157196045
    4. ' *=' → logprob: -7.132068157196045
    5. ' ' → logprob: -12.632067680358887
    6. '   ' → logprob: -13.632067680358887
    7. '=' → logprob: -14.007067680358887
    8. '<' → logprob: -14.382067680358887
    9. ' =' → logprob: -15.007067680358887
    10. '```' → logprob: -15.507067680358887

Token 55: ' <<=' (ID: 134025)
  Prédit: ' <<='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <<=' → logprob: -0.023910783231258392
    2. '<<' → logprob: -4.398910999298096
    3. '*=' → logprob: -4.523910999298096
    4. ' *=' → logprob: -7.648910999298096
    5. '<' → logprob: -12.273910522460938
    6. '   ' → logprob: -12.273910522460938
    7. '=' → logprob: -13.273910522460938
    8. '```' → logprob: -13.648910522460938
    9. ' ' → logprob: -14.523910522460938
    10. ' ' → logprob: -16.273910522460938

Token 56: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.8889261304575484e-06
    2. ' ' → logprob: -12.500003814697266
    3. '   ' → logprob: -16.500003814697266
    4. '```' → logprob: -18.375003814697266
    5. '       ' → logprob: -19.625003814697266
    6. '１' → logprob: -20.125003814697266
    7. '           ' → logprob: -20.375003814697266
    8. '>' → logprob: -20.937503814697266
    9. ' ' → logprob: -21.125003814697266
    10. '' → logprob: -21.125003814697266

Token 57: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -18.5
    3. '   ' → logprob: -20.25
    4. '```' → logprob: -20.625
    5. '0' → logprob: -22.375
    6. '' → logprob: -22.625
    7. '１' → logprob: -22.875
    8. '`' → logprob: -23.5
    9. '``' → logprob: -24.375
    10. '       ' → logprob: -24.375

Token 58: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.020488515496253967
    2. '\' → logprob: -5.770488739013672
    3. '        
' → logprob: -5.770488739013672
    4. '           ' → logprob: -6.020488739013672
    5. '
' → logprob: -6.145488739013672
    6. '1' → logprob: -6.270488739013672
    7. '```' → logprob: -6.395488739013672
    8. '   ' → logprob: -6.645488739013672
    9. ' 
' → logprob: -6.770488739013672
    10. '\n' → logprob: -7.395488739013672

Token 59: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.029616838321089745
    2. ' 
' → logprob: -4.654616832733154
    3. '        
' → logprob: -4.904616832733154
    4. '
' → logprob: -5.779616832733154
    5. 'self' → logprob: -5.779616832733154
    6. '\' → logprob: -7.029616832733154
    7. 'n' → logprob: -7.404616832733154
    8. '  
' → logprob: -7.529616832733154
    9. '   ' → logprob: -7.779616832733154
    10. '\n' → logprob: -8.029617309570312

Token 60: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2707313001155853
    2. 'self' → logprob: -2.145731210708618
    3. '
' → logprob: -3.770731210708618
    4. '   ' → logprob: -3.895731210708618
    5. '        
' → logprob: -4.395731449127197
    6. ' self' → logprob: -4.395731449127197
    7. ' 
' → logprob: -4.395731449127197
    8. 's' → logprob: -4.645731449127197
    9. ' ' → logprob: -4.770731449127197
    10. '0' → logprob: -4.770731449127197

Token 61: ' Initialize' (ID: 19496)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.011326373554766178
    2. ' self' → logprob: -4.636326313018799
    3. '       ' → logprob: -6.511326313018799
    4. '   ' → logprob: -9.511326789855957
    5. '	self' → logprob: -13.011326789855957
    6. ' ' → logprob: -13.261326789855957
    7. '  ' → logprob: -14.261326789855957
    8. '
' → logprob: -14.261326789855957
    9. '           ' → logprob: -14.511326789855957
    10. 'tree' → logprob: -14.511326789855957

Token 62: ' tree' (ID: 8165)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.062306564301252365
    2. ' self' → logprob: -2.8123066425323486
    3. '       ' → logprob: -8.31230640411377
    4. 'tree' → logprob: -10.06230640411377
    5. ' tree' → logprob: -10.43730640411377
    6. 'data' → logprob: -11.81230640411377
    7. '   ' → logprob: -11.81230640411377
    8. '	self' → logprob: -12.43730640411377
    9. ' ' → logprob: -14.06230640411377
    10. ' data' → logprob: -14.06230640411377

Token 63: ' with' (ID: 483)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20758551359176636
    2. '[' → logprob: -2.082585573196411
    3. ' [' → logprob: -3.957585573196411
    4. ' =' → logprob: -4.582585334777832
    5. '        ' → logprob: -4.707585334777832
    6. ' self' → logprob: -4.957585334777832
    7. ' ' → logprob: -5.082585334777832
    8. 'self' → logprob: -5.707585334777832
    9. ',' → logprob: -6.582585334777832
    10. '[self' → logprob: -6.707585334777832

Token 64: ' infin' (ID: 93237)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.15974658727645874
    2. '[' → logprob: -2.1597466468811035
    3. ' [' → logprob: -4.4097466468811035
    4. 'float' → logprob: -4.6597466468811035
    5. ' ' → logprob: -4.9097466468811035
    6. ' float' → logprob: -5.7847466468811035
    7. 'inf' → logprob: -9.909746170043945
    8. 'None' → logprob: -10.284746170043945
    9. ' None' → logprob: -11.159746170043945
    10. '(float' → logprob: -11.159746170043945

Token 65: 'ities' (ID: 1629)
  Prédit: 'ity'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ity' → logprob: -6.635164754698053e-05
    2. 'it' → logprob: -9.875066757202148
    3. 'float' → logprob: -12.375066757202148
    4. '```' → logprob: -12.875066757202148
    5. 'f' → logprob: -13.000066757202148
    6. 'i' → logprob: -13.750066757202148
    7. 'inty' → logprob: -14.250066757202148
    8. 'inity' → logprob: -14.250066757202148
    9. ' float' → logprob: -14.875066757202148
    10. '-' → logprob: -15.125066757202148

Token 66: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3657230734825134
    2. '[' → logprob: -2.115723133087158
    3. ',' → logprob: -2.365723133087158
    4. ' ' → logprob: -4.115723133087158
    5. '
' → logprob: -4.240723133087158
    6. ' ,' → logprob: -4.365723133087158
    7. '   ' → logprob: -4.365723133087158
    8. '```' → logprob: -4.990723133087158
    9. 'self' → logprob: -5.365723133087158
    10. '        ' → logprob: -5.490723133087158

Token 67: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15535356104373932
    2. ',' → logprob: -2.280353546142578
    3. ' ,' → logprob: -4.030353546142578
    4. '   ' → logprob: -4.905353546142578
    5. ')' → logprob: -6.155353546142578
    6. '        ' → logprob: -6.280353546142578
    7. ' ' → logprob: -6.530353546142578
    8. ' self' → logprob: -6.530353546142578
    9. 'self' → logprob: -6.530353546142578
    10. ',
' → logprob: -6.780353546142578

Token 68: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.40250059962272644
    2. ' self' → logprob: -1.2775006294250488
    3. 'float' → logprob: -4.027500629425049
    4. '       ' → logprob: -4.277500629425049
    5. ' float' → logprob: -5.152500629425049
    6. ' [' → logprob: -5.527500629425049
    7. 'inf' → logprob: -5.527500629425049
    8. '[self' → logprob: -5.527500629425049
    9. '[' → logprob: -6.527500629425049
    10. 'import' → logprob: -7.902500629425049

Token 69: '.data' (ID: 3885)
  Prédit: '.tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.tree' → logprob: -0.1733519732952118
    2. '.data' → logprob: -1.9233520030975342
    3. 'tree' → logprob: -5.548351764678955
    4. '.' → logprob: -5.673351764678955
    5. '.inf' → logprob: -5.923351764678955
    6. 'data' → logprob: -6.423351764678955
    7. ' .' → logprob: -7.298351764678955
    8. ' tree' → logprob: -8.173352241516113
    9. '.seg' → logprob: -9.048352241516113
    10. '	tree' → logprob: -9.923352241516113

Token 70: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.023261668160557747
    2. '=' → logprob: -3.773261785507202
    3. '[:]' → logprob: -12.023262023925781
    4. ' ' → logprob: -12.398262023925781
    5. ' =[' → logprob: -12.773262023925781
    6. '[' → logprob: -13.648262023925781
    7. '  ' → logprob: -14.898262023925781
    8. '=[]' → logprob: -15.148262023925781
    9. '   ' → logprob: -15.523262023925781
    10. ')' → logprob: -15.773262023925781

Token 71: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0005759088089689612
    2. ' [' → logprob: -7.750576019287109
    3. '[self' → logprob: -9.62557601928711
    4. '[int' → logprob: -10.00057601928711
    5. '[min' → logprob: -11.87557601928711
    6. '[val' → logprob: -12.25057601928711
    7. '[Math' → logprob: -12.25057601928711
    8. '[np' → logprob: -12.50057601928711
    9. '[f' → logprob: -13.25057601928711
    10. '[in' → logprob: -13.50057601928711

Token 72: 'float' (ID: 7829)
  Prédit: 'float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.006812241859734058
    2. ' float' → logprob: -5.00681209564209
    3. '10' → logprob: -10.13181209564209
    4. '(float' → logprob: -10.38181209564209
    5. '   ' → logprob: -11.50681209564209
    6. ' ' → logprob: -12.00681209564209
    7. 'inf' → logprob: -12.00681209564209
    8. ',float' → logprob: -13.75681209564209
    9. '	float' → logprob: -14.25681209564209
    10. '0' → logprob: -14.88181209564209

Token 73: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.00010866894444916397
    2. '(' → logprob: -9.25010871887207
    3. ''' → logprob: -12.00010871887207
    4. '("' → logprob: -13.00010871887207
    5. ''in' → logprob: -13.25010871887207
    6. '('-' → logprob: -14.87510871887207
    7. ' ('' → logprob: -15.12510871887207
    8. 'inf' → logprob: -15.37510871887207
    9. '   ' → logprob: -15.50010871887207
    10. '('+' → logprob: -15.87510871887207

Token 74: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: 0.0
    2. 'in' → logprob: -17.25
    3. 'info' → logprob: -17.75
    4. '-inf' → logprob: -19.125
    5. ''in' → logprob: -19.25
    6. ''' → logprob: -19.375
    7. '('' → logprob: -20.0
    8. 'Inf' → logprob: -20.0
    9. '_inf' → logprob: -20.375
    10. ' inf' → logprob: -20.375

Token 75: '')]' (ID: 94377)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.5820857286453247
    2. '')]' → logprob: -0.8320857286453247
    3. ')' → logprob: -5.207085609436035
    4. '')' → logprob: -8.207085609436035
    5. ']' → logprob: -8.582085609436035
    6. '),' → logprob: -9.082085609436035
    7. ',' → logprob: -10.832085609436035
    8. '")]' → logprob: -11.207085609436035
    9. ''),' → logprob: -11.332085609436035
    10. '']' → logprob: -11.332085609436035

Token 76: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.4491676390171051
    2. ' *' → logprob: -1.3241676092147827
    3. ')' → logprob: -3.6991677284240723
    4. ']' → logprob: -3.8241677284240723
    5. ' for' → logprob: -3.8241677284240723
    6. ' ' → logprob: -4.449167728424072
    7. '<|end|>' → logprob: -5.699167728424072
    8. ',' → logprob: -5.949167728424072
    9. ']*' → logprob: -6.199167728424072
    10. '[' → logprob: -6.324167728424072

Token 77: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.08997390419244766
    2. ' (' → logprob: -2.8399739265441895
    3. '(self' → logprob: -3.5899739265441895
    4. '((' → logprob: -12.214973449707031
    5. '(n' → logprob: -12.339973449707031
    6. '   ' → logprob: -12.339973449707031
    7. 'self' → logprob: -13.089973449707031
    8. ' self' → logprob: -14.089973449707031
    9. '       ' → logprob: -14.214973449707031
    10. ' ' → logprob: -14.589973449707031

Token 78: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.09233447909355164
    2. ' ' → logprob: -2.967334508895874
    3. 'self' → logprob: -3.467334508895874
    4. ' self' → logprob: -5.217334270477295
    5. '   ' → logprob: -9.092334747314453
    6. '       ' → logprob: -11.842334747314453
    7. '  ' → logprob: -12.467334747314453
    8. '    ' → logprob: -12.842334747314453
    9. '     ' → logprob: -12.842334747314453
    10. '(self' → logprob: -12.967334747314453

Token 79: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.25364750623703003
    2. '*self' → logprob: -1.5036475658416748
    3. '*' → logprob: -6.378647327423096
    4. ' ' → logprob: -11.503647804260254
    5. '*n' → logprob: -12.003647804260254
    6. 'self' → logprob: -14.003647804260254
    7. '*object' → logprob: -14.628647804260254
    8. ' self' → logprob: -14.878647804260254
    9. ' ' → logprob: -14.878647804260254
    10. '*this' → logprob: -15.253647804260254

Token 80: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.12693104147911072
    2. ' self' → logprob: -2.1269309520721436
    3. '<|end|>' → logprob: -13.376931190490723
    4. ' ' → logprob: -13.876931190490723
    5. '(self' → logprob: -16.376930236816406
    6. '	self' → logprob: -16.501930236816406
    7. 's' → logprob: -16.876930236816406
    8. '*self' → logprob: -17.376930236816406
    9. '[self' → logprob: -17.751930236816406
    10. '   ' → logprob: -18.126930236816406

Token 81: '.n' (ID: 1835)
  Prédit: '.n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.n' → logprob: -0.0002165299083571881
    2. '.' → logprob: -9.125216484069824
    3. 'n' → logprob: -9.500216484069824
    4. '_n' → logprob: -10.375216484069824
    5. '<|end|>' → logprob: -14.250216484069824
    6. '	n' → logprob: -15.500216484069824
    7. '   ' → logprob: -16.00021743774414
    8. ').' → logprob: -16.37521743774414
    9. '<|end|>' → logprob: -16.50021743774414
    10. '.nvim' → logprob: -16.50021743774414

Token 82: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002187852980569005
    2. ' )' → logprob: -6.127187728881836
    3. '))' → logprob: -14.502187728881836
    4. ')
' → logprob: -14.877187728881836
    5. '),' → logprob: -15.377187728881836
    6. ' ' → logprob: -15.377187728881836
    7. '<|end|>' → logprob: -15.377187728881836
    8. ')}}' → logprob: -15.627187728881836
    9. ')`' → logprob: -15.627187728881836
    10. ')}' → logprob: -15.877187728881836

Token 83: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2810141146183014
    2. '<|end|>' → logprob: -1.531014084815979
    3. '<|end|>' → logprob: -4.6560139656066895
    4. ' for' → logprob: -4.9060139656066895
    5. 'for' → logprob: -5.1560139656066895
    6. '   ' → logprob: -6.1560139656066895
    7. '
' → logprob: -6.5310139656066895
    8. ' ' → logprob: -7.6560139656066895
    9. '	' → logprob: -7.7810139656066895
    10. '	for' → logprob: -8.406014442443848

Token 84: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.9322214126586914
    2. '       ' → logprob: -1.1822214126586914
    3. ' for' → logprob: -1.3072214126586914
    4. '   ' → logprob: -3.5572214126586914
    5. '	for' → logprob: -8.557221412658691
    6. ' ' → logprob: -8.932221412658691
    7. '
' → logprob: -9.432221412658691
    8. '<|end|>' → logprob: -9.682221412658691
    9. '<|end|>' → logprob: -9.932221412658691
    10. '  ' → logprob: -10.307221412658691

Token 85: ' Build' (ID: 10885)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.07995354384183884
    2. ' for' → logprob: -2.57995343208313
    3. '   ' → logprob: -7.454953670501709
    4. '       ' → logprob: -7.829953670501709
    5. '#' → logprob: -9.57995319366455
    6. '
' → logprob: -12.57995319366455
    7. 'def' → logprob: -12.70495319366455
    8. '	for' → logprob: -12.70495319366455
    9. ' ' → logprob: -13.20495319366455
    10. 'For' → logprob: -13.95495319366455

Token 86: ' the' (ID: 290)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 87: ' tree' (ID: 8165)
  Prédit: ' tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tree' → logprob: -0.5256891846656799
    2. 'tree' → logprob: -0.9006891846656799
    3. ' leaves' → logprob: -6.900689125061035
    4. ' segment' → logprob: -7.525689125061035
    5. 'segment' → logprob: -8.025689125061035
    6. 'leaf' → logprob: -8.900689125061035
    7. '_tree' → logprob: -9.275689125061035
    8. 'data' → logprob: -9.525689125061035
    9. '	tree' → logprob: -9.775689125061035
    10. ' ' → logprob: -9.900689125061035

Token 88: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 89: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00881440844386816
    2. '<|end|>' → logprob: -5.508814334869385
    3. ' for' → logprob: -5.758814334869385
    4. '<|end|>' → logprob: -6.883814334869385
    5. 'for' → logprob: -7.883814334869385
    6. '
' → logprob: -9.883814811706543
    7. ',' → logprob: -10.258814811706543
    8. '   ' → logprob: -10.883814811706543
    9. '        
' → logprob: -11.008814811706543
    10. '	' → logprob: -12.008814811706543

Token 90: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2516684830188751
    2. 'for' (adapté à ' for') → logprob: -1.8766684532165527
    3. '       ' → logprob: -2.7516684532165527
    4. '   ' → logprob: -5.251668453216553
    5. '	for' → logprob: -8.251668930053711
    6. ' ' → logprob: -9.876668930053711
    7. '  ' → logprob: -12.126668930053711
    8. '
' → logprob: -12.501668930053711
    9. '<|end|>' → logprob: -12.751668930053711
    10. '    ' → logprob: -13.251668930053711

Token 91: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.3868713080883026
    2. 'i' → logprob: -1.136871337890625
    3. '	i' → logprob: -15.636871337890625
    4. ' ' → logprob: -16.261871337890625
    5. 'idx' → logprob: -17.761871337890625
    6. ' idx' → logprob: -18.011871337890625
    7. '(i' → logprob: -19.136871337890625
    8. '0' → logprob: -19.136871337890625
    9. 'I' → logprob: -19.386871337890625
    10. ' I' → logprob: -19.636871337890625

Token 92: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0006086751818656921
    2. 'in' → logprob: -8.125608444213867
    3. ',' → logprob: -8.250608444213867
    4. ' ' → logprob: -10.250608444213867
    5. ' ,' → logprob: -11.125608444213867
    6. '  ' → logprob: -14.250608444213867
    7. '+' → logprob: -15.875608444213867
    8. ' ' → logprob: -16.125608444213867
    9. 'n' → logprob: -16.375608444213867
    10. 'range' → logprob: -16.375608444213867

Token 93: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.25193002820014954
    2. ' range' → logprob: -1.5019299983978271
    3. ' ' → logprob: -14.751930236816406
    4. '(range' → logprob: -15.626930236816406
    5. '	range' → logprob: -15.876930236816406
    6. '   ' → logprob: -16.126930236816406
    7. '  ' → logprob: -16.376930236816406
    8. '```' → logprob: -18.251930236816406
    9. ' xrange' → logprob: -18.626930236816406
    10. ')' → logprob: -19.251930236816406

Token 94: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00012737659562844783
    2. ' (' → logprob: -9.625127792358398
    3. '(len' → logprob: -10.250127792358398
    4. '(' → logprob: -10.875127792358398
    5. ' n' → logprob: -12.000127792358398
    6. 'n' → logprob: -14.375127792358398
    7. '	n' → logprob: -15.875127792358398
    8. '(s' → logprob: -17.0001277923584
    9. '   ' → logprob: -17.6251277923584
    10. '<n' → logprob: -18.0001277923584

Token 95: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.07951951771974564
    2. '):
' → logprob: -2.579519510269165
    3. ' ):' → logprob: -7.454519748687744
    4. ' ):
' → logprob: -10.454519271850586
    5. ')' → logprob: -11.454519271850586
    6. '):
' → logprob: -12.079519271850586
    7. '       ' → logprob: -13.079519271850586
    8. '   ' → logprob: -13.329519271850586
    9. ' ' → logprob: -14.079519271850586
    10. '):

' → logprob: -14.704519271850586

Token 96: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0002378673671046272
    2. ' self' → logprob: -9.000237464904785
    3. '               ' → logprob: -10.625237464904785
    4. '<|end|>' → logprob: -10.750237464904785
    5. '       ' → logprob: -11.250237464904785
    6. ',' → logprob: -11.375237464904785
    7. ' ' → logprob: -11.500237464904785
    8. '          ' → logprob: -12.000237464904785
    9. '	       ' → logprob: -12.000237464904785
    10. '   ' → logprob: -12.000237464904785

Token 97: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.11327575147151947
    2. 'self' (adapté à ' self') → logprob: -2.3632757663726807
    3. '               ' → logprob: -4.613275527954102
    4. '           ' → logprob: -5.988275527954102
    5. '	self' → logprob: -8.738275527954102
    6. ' ' → logprob: -8.988275527954102
    7. '   ' → logprob: -8.988275527954102
    8. '       ' → logprob: -9.738275527954102
    9. '```' → logprob: -10.738275527954102
    10. ',self' → logprob: -11.363275527954102

Token 98: '.data' (ID: 3885)
  Prédit: '.data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.data' → logprob: -0.0005166939808987081
    2. '.' → logprob: -7.625516891479492
    3. ' .' → logprob: -10.625516891479492
    4. 'data' → logprob: -12.875516891479492
    5. ').' → logprob: -14.500516891479492
    6. '].' → logprob: -15.250516891479492
    7. '   ' → logprob: -15.750516891479492
    8. '`.' → logprob: -15.875516891479492
    9. '[data' → logprob: -16.000516891479492
    10. '```' → logprob: -16.125516891479492

Token 99: '[self' (ID: 33734)
  Prédit: '[self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[self' → logprob: -0.00018899753922596574
    2. '[i' → logprob: -9.250188827514648
    3. '[n' → logprob: -10.000188827514648
    4. '[' → logprob: -10.375188827514648
    5. ' [' → logprob: -11.250188827514648
    6. ' self' → logprob: -13.250188827514648
    7. 'self' → logprob: -14.750188827514648
    8. '```' → logprob: -15.500188827514648
    9. '   ' → logprob: -15.875188827514648
    10. '(self' → logprob: -15.875188827514648

Token 100: '.n' (ID: 1835)
  Prédit: '.n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.n' → logprob: -5.200166469876422e-06
    2. 'n' → logprob: -12.500004768371582
    3. '.' → logprob: -13.625004768371582
    4. ' .' → logprob: -17.5000057220459
    5. '```' → logprob: -17.5000057220459
    6. '   ' → logprob: -17.8750057220459
    7. '_n' → logprob: -18.1250057220459
    8. '	n' → logprob: -18.2500057220459
    9. '.u' → logprob: -18.8750057220459
    10. '+n' → logprob: -19.0000057220459

Token 101: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.10244347900152206
    2. '+i' → logprob: -2.8524434566497803
    3. '+' → logprob: -3.2274434566497803
    4. ' ' → logprob: -11.85244369506836
    5. ' plus' → logprob: -14.35244369506836
    6. '＋' → logprob: -14.85244369506836
    7. ' +
' → logprob: -15.60244369506836
    8. ' i' → logprob: -15.72744369506836
    9. '   ' → logprob: -16.22744369506836
    10. '+j' → logprob: -16.60244369506836

Token 102: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.002476724097505212
    2. ' i' → logprob: -6.002476692199707
    3. ' ' → logprob: -13.877476692199707
    4. '   ' → logprob: -16.502477645874023
    5. '  ' → logprob: -17.377477645874023
    6. '	i' → logprob: -17.377477645874023
    7. '```' → logprob: -18.377477645874023
    8. '[i' → logprob: -18.627477645874023
    9. ')i' → logprob: -19.252477645874023
    10. '`' → logprob: -20.252477645874023

Token 103: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.06308694928884506
    2. ' ]' → logprob: -2.813086986541748
    3. ']=' → logprob: -7.313086986541748
    4. ')' → logprob: -8.56308650970459
    5. ' =' → logprob: -8.68808650970459
    6. ' )' → logprob: -9.68808650970459
    7. '=' → logprob: -10.81308650970459
    8. ' ' → logprob: -12.18808650970459
    9. ')]' → logprob: -13.18808650970459
    10. ')=' → logprob: -14.31308650970459

Token 104: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.048588961362838745
    2. '=' → logprob: -3.048588991165161
    3. '=data' → logprob: -14.173588752746582
    4. ' ' → logprob: -14.548588752746582
    5. '=int' → logprob: -16.5485897064209
    6. '=min' → logprob: -16.9235897064209
    7. '=cut' → logprob: -17.6735897064209
    8. '=sys' → logprob: -17.6735897064209
    9. '＝' → logprob: -17.7985897064209
    10. ' =
' → logprob: -17.7985897064209

Token 105: ' data' (ID: 1238)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.5759419798851013
    2. ' data' → logprob: -0.8259419798851013
    3. ' ' → logprob: -13.075942039489746
    4. '   ' → logprob: -15.575942039489746
    5. '	data' → logprob: -16.20094108581543
    6. '(data' → logprob: -16.82594108581543
    7. 'Data' → logprob: -17.57594108581543
    8. '```' → logprob: -17.57594108581543
    9. 'd' → logprob: -17.70094108581543
    10. '[data' → logprob: -18.20094108581543

Token 106: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -7.3458322731312364e-06
    2. '[' → logprob: -11.875007629394531
    3. ' [' → logprob: -16.25000762939453
    4. '   ' → logprob: -17.25000762939453
    5. '```' → logprob: -17.62500762939453
    6. '[n' → logprob: -17.87500762939453
    7. '[
' → logprob: -18.00000762939453
    8. '[I' → logprob: -18.37500762939453
    9. '\[' → logprob: -18.62500762939453
    10. ' i' → logprob: -18.75000762939453

Token 107: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.000488110730657354
    2. ')
' → logprob: -7.87548828125
    3. ' )' → logprob: -9.25048828125
    4. '<|end|>' → logprob: -12.25048828125
    5. '       ' → logprob: -12.37548828125
    6. ']' → logprob: -14.50048828125
    7. '<|end|>' → logprob: -14.50048828125
    8. '   ' → logprob: -15.37548828125
    9. '}' → logprob: -15.50048828125
    10. ' )
' → logprob: -15.62548828125

Token 108: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2440781593322754
    2. '
' → logprob: -1.6190781593322754
    3. '<|end|>' → logprob: -4.244078159332275
    4. '\n' → logprob: -6.369078159332275
    5. '        
' → logprob: -7.244078159332275
    6. '   ' → logprob: -8.369077682495117
    7. '    
' → logprob: -8.494077682495117
    8. '' → logprob: -8.744077682495117
    9. ' for' → logprob: -8.869077682495117
    10. '  
' → logprob: -8.869077682495117

Token 109: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18061135709285736
    2. 'for' (adapté à ' for') → logprob: -2.8056113719940186
    3. ' for' → logprob: -2.9306113719940186
    4. '   ' → logprob: -3.3056113719940186
    5. '        
' → logprob: -5.8056111335754395
    6. '<|end|>' → logprob: -5.8056111335754395
    7. '  
' → logprob: -6.8056111335754395
    8. '
' → logprob: -6.8056111335754395
    9. '\n' → logprob: -6.9306111335754395
    10. ' ' → logprob: -6.9306111335754395

Token 110: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.0006071255193091929
    2. ' j' → logprob: -8.12560749053955
    3. 'i' → logprob: -8.50060749053955
    4. ' ' → logprob: -9.25060749053955
    5. ' self' → logprob: -12.25060749053955
    6. ' (' → logprob: -13.50060749053955
    7. '   ' → logprob: -13.87560749053955
    8. '  ' → logprob: -14.00060749053955
    9. ' idx' → logprob: -14.00060749053955
    10. 'j' → logprob: -14.12560749053955

Token 111: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0036349925212562084
    2. 'in' → logprob: -5.628634929656982
    3. ' ' → logprob: -10.62863540649414
    4. 'range' → logprob: -12.37863540649414
    5. 'n' → logprob: -13.12863540649414
    6. '  ' → logprob: -13.25363540649414
    7. '   ' → logprob: -13.37863540649414
    8. ' range' → logprob: -15.00363540649414
    9. ' i' → logprob: -15.25363540649414
    10. '	in' → logprob: -15.75363540649414

Token 112: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.3136212229728699
    2. ' range' → logprob: -1.3136212825775146
    3. '   ' → logprob: -8.688621520996094
    4. 're' → logprob: -9.438621520996094
    5. ' reversed' → logprob: -9.438621520996094
    6. '(range' → logprob: -11.438621520996094
    7. ' ' → logprob: -11.813621520996094
    8. 'self' → logprob: -12.063621520996094
    9. '  ' → logprob: -13.063621520996094
    10. ' self' → logprob: -13.813621520996094

Token 113: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -1.3544423381972592e-05
    2. '(' → logprob: -11.75001335144043
    3. ' (' → logprob: -12.25001335144043
    4. '((' → logprob: -14.37501335144043
    5. 'self' → logprob: -16.37501335144043
    6. '   ' → logprob: -16.75001335144043
    7. ' self' → logprob: -17.62501335144043
    8. '(
' → logprob: -18.25001335144043
    9. '(range' → logprob: -19.25001335144043
    10. '(s' → logprob: -19.87501335144043

Token 114: '.n' (ID: 1835)
  Prédit: '.n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.n' → logprob: -0.0036077939439564943
    2. 'n' → logprob: -5.753607749938965
    3. '-' → logprob: -8.503607749938965
    4. '       ' → logprob: -9.503607749938965
    5. '   ' → logprob: -9.878607749938965
    6. 'self' → logprob: -10.503607749938965
    7. ' -' → logprob: -10.753607749938965
    8. '_n' → logprob: -11.253607749938965
    9. '
' → logprob: -11.628607749938965
    10. ' ' → logprob: -12.503607749938965

Token 115: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.0790240690112114
    2. '-' → logprob: -2.579024076461792
    3. ' ' → logprob: -8.954024314880371
    4. '  ' → logprob: -12.704024314880371
    5. '   ' → logprob: -13.579024314880371
    6. ' ' → logprob: -14.579024314880371
    7. ')' → logprob: -16.329023361206055
    8. '1' → logprob: -16.704023361206055
    9. '    ' → logprob: -16.954023361206055
    10. '2' → logprob: -17.579023361206055

Token 116: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00013893934374209493
    2. ' ' → logprob: -9.000139236450195
    3. '2' → logprob: -11.125139236450195
    4. '   ' → logprob: -15.812639236450195
    5. '```' → logprob: -16.500139236450195
    6. '  ' → logprob: -16.625139236450195
    7. ')' → logprob: -16.687639236450195
    8. '
' → logprob: -17.062639236450195
    9. '１' → logprob: -17.125139236450195
    10. '       ' → logprob: -17.437639236450195

Token 117: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.580929347255733e-05
    2. ' ' → logprob: -11.125016212463379
    3. '2' → logprob: -14.000016212463379
    4. '   ' → logprob: -16.937515258789062
    5. '```' → logprob: -17.062515258789062
    6. '
' → logprob: -17.750015258789062
    7. '  ' → logprob: -17.812515258789062
    8. ')' → logprob: -18.000015258789062
    9. '0' → logprob: -18.125015258789062
    10. '１' → logprob: -18.500015258789062

Token 118: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.009777810424566269
    2. ' ,' → logprob: -4.634778022766113
    3. ' -' → logprob: -11.259778022766113
    4. '-' → logprob: -12.259778022766113
    5. '0' → logprob: -13.134778022766113
    6. ',-' → logprob: -14.134778022766113
    7. '   ' → logprob: -14.259778022766113
    8. '1' → logprob: -14.509778022766113
    9. ' ,-' → logprob: -15.759778022766113
    10. ' ' → logprob: -16.134777069091797

Token 119: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.31376224756240845
    2. ' ' → logprob: -1.3137621879577637
    3. '-' → logprob: -8.313762664794922
    4. ' -' → logprob: -8.313762664794922
    5. '  ' → logprob: -12.438762664794922
    6. '   ' → logprob: -12.438762664794922
    7. '    ' → logprob: -13.938762664794922
    8. '     ' → logprob: -14.813762664794922
    9. '	' → logprob: -15.688762664794922
    10. '```' → logprob: -15.876262664794922

Token 120: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.001188445370644331
    2. ' ' → logprob: -6.751188278198242
    3. '-' → logprob: -11.126188278198242
    4. ' -' → logprob: -12.876188278198242
    5. '   ' → logprob: -15.376188278198242
    6. '
' → logprob: -15.376188278198242
    7. '  ' → logprob: -15.876188278198242
    8. '

' → logprob: -16.376188278198242
    9. '    ' → logprob: -17.001188278198242
    10. '     ' → logprob: -17.126188278198242

Token 121: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.18511414527893066
    2. '-' → logprob: -2.3101141452789307
    3. ' ,' → logprob: -3.5601141452789307
    4. ',-' → logprob: -3.8101141452789307
    5. ' -' → logprob: -4.185113906860352
    6. ' ,-' → logprob: -6.060113906860352
    7. '   ' → logprob: -6.560113906860352
    8. ' ' → logprob: -9.435113906860352
    9. '  ' → logprob: -10.560113906860352
    10. '    ' → logprob: -10.560113906860352

Token 122: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.3868960440158844
    2. ' -' → logprob: -1.136896014213562
    3. ' ' → logprob: -11.011896133422852
    4. '   ' → logprob: -12.511896133422852
    5. '  ' → logprob: -13.511896133422852
    6. ')' → logprob: -14.136896133422852
    7. '```' → logprob: -14.136896133422852
    8. ',-' → logprob: -14.886896133422852
    9. '-i' → logprob: -15.011896133422852
    10. '    ' → logprob: -15.136896133422852

Token 123: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.8921695047756657e-05
    2. ' ' → logprob: -10.500028610229492
    3. ' -' → logprob: -14.000028610229492
    4. '-' → logprob: -15.625028610229492
    5. ')' → logprob: -15.875028610229492
    6. '):
' → logprob: -16.500028610229492
    7. '   ' → logprob: -16.500028610229492
    8. '```' → logprob: -17.500028610229492
    9. '  ' → logprob: -17.750028610229492
    10. ',' → logprob: -18.000028610229492

Token 124: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.05608334764838219
    2. '):
' → logprob: -3.0560834407806396
    3. '-' → logprob: -5.1810832023620605
    4. ' ):' → logprob: -7.0560832023620605
    5. ',' → logprob: -7.3060832023620605
    6. ')' → logprob: -8.556083679199219
    7. ' -' → logprob: -10.806083679199219
    8. '1' → logprob: -10.806083679199219
    9. '):-' → logprob: -10.806083679199219
    10. ' ):
' → logprob: -11.181083679199219

Token 125: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0004988207365386188
    2. ' self' → logprob: -8.12549877166748
    3. ' ' → logprob: -10.12549877166748
    4. '1' → logprob: -11.00049877166748
    5. 'self' → logprob: -11.00049877166748
    6. '            ' → logprob: -11.12549877166748
    7. '   ' → logprob: -11.12549877166748
    8. ')' → logprob: -11.25049877166748
    9. '            
' → logprob: -11.25049877166748
    10. '               ' → logprob: -11.37549877166748

Token 126: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.4750381410121918
    2. ' self' → logprob: -0.9750381708145142
    3. '           ' → logprob: -7.600038051605225
    4. ' ' → logprob: -8.725038528442383
    5. '       ' → logprob: -8.975038528442383
    6. '   ' → logprob: -9.600038528442383
    7. '	self' → logprob: -10.100038528442383
    8. '```' → logprob: -10.600038528442383
    9. '               ' → logprob: -11.350038528442383
    10. '
' → logprob: -11.725038528442383

Token 127: '.data' (ID: 3885)
  Prédit: '.data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.data' → logprob: -0.0004973902832716703
    2. '.' → logprob: -7.625497341156006
    3. ' .' → logprob: -12.375497817993164
    4. '].' → logprob: -13.375497817993164
    5. 'data' → logprob: -13.875497817993164
    6. ').' → logprob: -14.000497817993164
    7. '}.' → logprob: -15.500497817993164
    8. '>.' → logprob: -15.500497817993164
    9. '.dat' → logprob: -15.750497817993164
    10. ' ' → logprob: -16.000497817993164

Token 128: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0001158211671281606
    2. '[' → logprob: -9.125115394592285
    3. ' [' → logprob: -12.375115394592285
    4. '[min' → logprob: -13.875115394592285
    5. '```' → logprob: -14.000115394592285
    6. '[I' → logprob: -14.625115394592285
    7. '\[' → logprob: -15.250115394592285
    8. '[
' → logprob: -17.2501163482666
    9. '[index' → logprob: -17.6251163482666
    10. '[self' → logprob: -17.8751163482666

Token 129: ']' (ID: 60)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38095176219940186
    2. '=' → logprob: -1.8809517621994019
    3. ']' → logprob: -1.8809517621994019
    4. ')' → logprob: -5.255951881408691
    5. ']=' → logprob: -5.755951881408691
    6. ' ]' → logprob: -5.880951881408691
    7. ')=' → logprob: -7.880951881408691
    8. ' )' → logprob: -8.630951881408691
    9. '=min' → logprob: -9.255951881408691
    10. 'min' → logprob: -11.005951881408691

Token 130: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1269593983888626
    2. ' =' → logprob: -2.1269593238830566
    3. '=min' → logprob: -10.376959800720215
    4. 'min' → logprob: -16.2519588470459
    5. ' min' → logprob: -17.5019588470459
    6. '=
' → logprob: -18.0019588470459
    7. '＝' → logprob: -18.1269588470459
    8. ')=' → logprob: -18.2519588470459
    9. '=

' → logprob: -18.5019588470459
    10. ']=' → logprob: -18.6269588470459

Token 131: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.04858771339058876
    2. ' min' → logprob: -3.0485877990722656
    3. 'max' → logprob: -15.548587799072266
    4. '	min' → logprob: -15.798587799072266
    5. '=min' → logprob: -19.673587799072266
    6. '[min' → logprob: -19.798587799072266
    7. '   ' → logprob: -20.298587799072266
    8. '(min' → logprob: -20.423587799072266
    9. '.min' → logprob: -20.673587799072266
    10. '_min' → logprob: -20.798587799072266

Token 132: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.011063028126955032
    2. '(' → logprob: -4.511063098907471
    3. '(
' → logprob: -11.511062622070312
    4. 'self' → logprob: -12.261062622070312
    5. '(s' → logprob: -15.636062622070312
    6. ' (' → logprob: -15.886062622070312
    7. '(

' → logprob: -16.136062622070312
    8. ' self' → logprob: -17.761062622070312
    9. '(Self' → logprob: -17.886062622070312
    10. '()' → logprob: -18.136062622070312

Token 133: '.data' (ID: 3885)
  Prédit: '.data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.data' → logprob: -3.392824874026701e-05
    2. '.' → logprob: -10.50003433227539
    3. 'data' → logprob: -12.50003433227539
    4. ' .' → logprob: -13.12503433227539
    5. ')' → logprob: -16.12503433227539
    6. '<data' → logprob: -16.25003433227539
    7. '(data' → logprob: -16.75003433227539
    8. '[data' → logprob: -16.87503433227539
    9. ' data' → logprob: -17.25003433227539
    10. ')data' → logprob: -17.25003433227539

Token 134: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.18076308071613312
    2. '[i' → logprob: -2.680763006210327
    3. '(self' → logprob: -3.055763006210327
    4. '[self' → logprob: -3.555763006210327
    5. 'self' → logprob: -4.055763244628906
    6. '(' → logprob: -6.680763244628906
    7. '(data' → logprob: -7.430763244628906
    8. '(i' → logprob: -7.430763244628906
    9. '[data' → logprob: -7.680763244628906
    10. ' self' → logprob: -7.930763244628906

Token 135: '2' (ID: 17)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.20244884490966797
    2. '2' → logprob: -1.702448844909668
    3. '[i' → logprob: -7.827448844909668
    4. '[' → logprob: -7.952448844909668
    5. ' i' → logprob: -8.827448844909668
    6. '(i' → logprob: -9.202448844909668
    7. '(' → logprob: -10.827448844909668
    8. ' ' → logprob: -11.952448844909668
    9. '   ' → logprob: -12.202448844909668
    10. 'data' → logprob: -12.827448844909668

Token 136: '*i' (ID: 51147)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0029242297168821096
    2. ' i' → logprob: -6.37792444229126
    3. '*i' → logprob: -6.87792444229126
    4. '[i' → logprob: -9.252923965454102
    5. ']' → logprob: -9.877923965454102
    6. ',i' → logprob: -11.627923965454102
    7. ' *' → logprob: -11.752923965454102
    8. '_i' → logprob: -11.752923965454102
    9. '	i' → logprob: -12.127923965454102
    10. '   ' → logprob: -12.627923965454102

Token 137: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.0033738920465111732
    2. ' ],' → logprob: -5.878374099731445
    3. ']' → logprob: -7.628374099731445
    4. ',' → logprob: -9.503374099731445
    5. '],
' → logprob: -12.378374099731445
    6. ' ,' → logprob: -13.753374099731445
    7. '1' → logprob: -14.253374099731445
    8. ' ]' → logprob: -14.503374099731445
    9. ' ' → logprob: -15.003374099731445
    10. '],

' → logprob: -15.128374099731445

Token 138: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.5759448409080505
    2. 'self' → logprob: -0.8259448409080505
    3. ' ' → logprob: -13.200944900512695
    4. '    ' → logprob: -13.700944900512695
    5. '	self' → logprob: -14.700944900512695
    6. '(self' → logprob: -14.950944900512695
    7. '[self' → logprob: -15.075944900512695
    8. '   ' → logprob: -15.450944900512695
    9. ' ' → logprob: -15.575944900512695
    10. '  ' → logprob: -15.700944900512695

Token 139: '.data' (ID: 3885)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.6052988171577454
    2. 'data' → logprob: -1.6052987575531006
    3. '[' → logprob: -2.2302987575531006
    4. '.data' → logprob: -2.6052987575531006
    5. '+' → logprob: -3.7302987575531006
    6. '.' → logprob: -4.23029899597168
    7. '3' → logprob: -4.23029899597168
    8. ' data' → logprob: -4.98029899597168
    9. 'i' → logprob: -5.60529899597168
    10. '.i' → logprob: -5.98029899597168

Token 140: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.33520740270614624
    2. '+' → logprob: -1.835207462310791
    3. '])' → logprob: -2.710207462310791
    4. '[i' → logprob: -3.335207462310791
    5. ']' → logprob: -4.835207462310791
    6. ' +' → logprob: -4.835207462310791
    7. '+i' → logprob: -5.585207462310791
    8. '*i' → logprob: -6.460207462310791
    9. '*' → logprob: -6.835207462310791
    10. '1' → logprob: -9.210206985473633

Token 141: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.6537622034084052e-05
    2. ' ' → logprob: -11.12502670288086
    3. 'i' → logprob: -11.50002670288086
    4. '1' → logprob: -14.00002670288086
    5. '(' → logprob: -14.37502670288086
    6. '  ' → logprob: -16.50002670288086
    7. '   ' → logprob: -16.50002670288086
    8. '
' → logprob: -17.37502670288086
    9. ']' → logprob: -18.00002670288086
    10. '+' → logprob: -18.50002670288086

Token 142: '*i' (ID: 51147)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.006007359828799963
    2. '*i' → logprob: -5.131007194519043
    3. '+i' → logprob: -10.381007194519043
    4. ' i' → logprob: -10.631007194519043
    5. '_i' → logprob: -12.381007194519043
    6. '   ' → logprob: -12.631007194519043
    7. ')i' → logprob: -12.881007194519043
    8. '```' → logprob: -12.881007194519043
    9. ''i' → logprob: -13.006007194519043
    10. '	i' → logprob: -13.006007194519043

Token 143: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.12958303093910217
    2. '])' → logprob: -2.1295831203460693
    3. ' +' → logprob: -6.12958288192749
    4. ']' → logprob: -8.379583358764648
    5. '+i' → logprob: -9.129583358764648
    6. ']+' → logprob: -9.879583358764648
    7. ' ])' → logprob: -10.129583358764648
    8. ')' → logprob: -11.379583358764648
    9. '])
' → logprob: -12.254583358764648
    10. '+j' → logprob: -12.254583358764648

Token 144: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001137947037932463
    2. ' ' → logprob: -9.625113487243652
    3. '0' → logprob: -10.500113487243652
    4. '])' → logprob: -11.125113487243652
    5. 'i' → logprob: -12.625113487243652
    6. ']' → logprob: -13.875113487243652
    7. '   ' → logprob: -14.750113487243652
    8. '  ' → logprob: -14.875113487243652
    9. '    ' → logprob: -15.875113487243652
    10. '```' → logprob: -16.87511444091797

Token 145: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001029471677611582
    2. ')
' → logprob: -9.250102996826172
    3. ' )' → logprob: -12.125102996826172
    4. '])' → logprob: -15.250102996826172
    5. '   ' → logprob: -15.500102996826172
    6. ')

' → logprob: -15.625102996826172
    7. '))' → logprob: -15.750102996826172
    8. ')`' → logprob: -15.750102996826172
    9. '`)' → logprob: -16.500102996826172
    10. '）' → logprob: -16.875102996826172

Token 146: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4318581819534302
    2. '
' → logprob: -1.6818581819534302
    3. '<|end|>' → logprob: -2.1818580627441406
    4. 'def' → logprob: -3.8068580627441406
    5. '    
' → logprob: -4.306858062744141
    6. ' def' → logprob: -5.306858062744141
    7. '  
' → logprob: -5.681858062744141
    8. '<|end|>' → logprob: -6.431858062744141
    9. ')' → logprob: -6.681858062744141
    10. '

' → logprob: -6.931858062744141

Token 147: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.260836660861969
    2. 'def' → logprob: -1.6358366012573242
    3. '
' → logprob: -3.510836601257324
    4. ' def' → logprob: -5.510836601257324
    5. '    
' → logprob: -7.385836601257324
    6. '

' → logprob: -9.010836601257324
    7. '<|end|>' → logprob: -10.010836601257324
    8. ' ' → logprob: -10.510836601257324
    9. '	def' → logprob: -11.135836601257324
    10. '```' → logprob: -11.260836601257324

Token 148: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.06431351602077484
    2. ' def' → logprob: -2.8143134117126465
    3. '   ' → logprob: -6.0643134117126465
    4. ' ' → logprob: -11.189313888549805
    5. '
' → logprob: -12.689313888549805
    6. '	def' → logprob: -14.314313888549805
    7. 'de' → logprob: -14.939313888549805
    8. '  ' → logprob: -15.064313888549805
    9. '    
' → logprob: -15.064313888549805
    10. '```' → logprob: -15.939313888549805

Token 149: ' update' (ID: 4027)
  Prédit: ' update'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' update' → logprob: -0.4260077178478241
    2. 'update' → logprob: -1.1760077476501465
    3. ' query' → logprob: -4.1760077476501465
    4. 'query' → logprob: -4.5510077476501465
    5. '_update' → logprob: -4.9260077476501465
    6. ' ' → logprob: -6.1760077476501465
    7. ' get' → logprob: -7.0510077476501465
    8. ' build' → logprob: -7.4260077476501465
    9. 'build' → logprob: -7.9260077476501465
    10. '_query' → logprob: -8.051007270812988

Token 150: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.023260388523340225
    2. '(' → logprob: -3.7732603549957275
    3. ' (' → logprob: -11.523260116577148
    4. '(s' → logprob: -13.023260116577148
    5. '(i' → logprob: -13.773260116577148
    6. '(sel' → logprob: -14.398260116577148
    7. '(index' → logprob: -14.898260116577148
    8. '(this' → logprob: -15.273260116577148
    9. '(idx' → logprob: -15.773260116577148
    10. '(
' → logprob: -16.27326011657715

Token 151: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.012560628354549408
    2. ' ,' → logprob: -4.387560844421387
    3. 'self' → logprob: -10.137560844421387
    4. ',index' → logprob: -12.012560844421387
    5. ',self' → logprob: -13.637560844421387
    6. ' ' → logprob: -14.012560844421387
    7. ',i' → logprob: -14.012560844421387
    8. 'index' → logprob: -14.762560844421387
    9. ',k' → logprob: -14.762560844421387
    10. ',node' → logprob: -15.012560844421387

Token 152: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.2586142420768738
    2. 'index' → logprob: -2.2586143016815186
    3. 'pos' → logprob: -3.5086143016815186
    4. 'i' → logprob: -3.5086143016815186
    5. 'k' → logprob: -3.5086143016815186
    6. ' idx' → logprob: -3.7586143016815186
    7. 'p' → logprob: -5.5086140632629395
    8. ' index' → logprob: -5.8836140632629395
    9. ' i' → logprob: -6.5086140632629395
    10. ' p' → logprob: -7.0086140632629395

Token 153: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003603990189731121
    2. ' ,' → logprob: -5.628603935241699
    3. ',value' → logprob: -13.0036039352417
    4. '   ' → logprob: -15.1286039352417
    5. '‌,' → logprob: -15.5036039352417
    6. ')' → logprob: -15.8786039352417
    7. ',new' → logprob: -16.253604888916016
    8. '    ' → logprob: -16.253604888916016
    9. ',index' → logprob: -16.253604888916016
    10. ',val' → logprob: -16.253604888916016

Token 154: ' val' (ID: 1459)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.010146182030439377
    2. ' value' → logprob: -4.760146141052246
    3. 'val' → logprob: -6.510146141052246
    4. ' val' → logprob: -10.135146141052246
    5. 'x' → logprob: -13.135146141052246
    6. ' ' → logprob: -15.760146141052246
    7. '"value' → logprob: -15.885146141052246
    8. ' x' → logprob: -16.135147094726562
    9. '   ' → logprob: -16.760147094726562
    10. ''value' → logprob: -17.885147094726562

Token 155: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0015095012495294213
    2. '):
' → logprob: -6.501509666442871
    3. '):
' → logprob: -12.751509666442871
    4. ')' → logprob: -13.126509666442871
    5. ' ):' → logprob: -13.126509666442871
    6. '   ' → logprob: -15.751509666442871
    7. ':' → logprob: -16.376508712768555
    8. '):

' → logprob: -17.376508712768555
    9. ')：' → logprob: -17.751508712768555
    10. ' ' → logprob: -18.001508712768555

Token 156: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06678047776222229
    2. '
' → logprob: -3.4417805671691895
    3. '  
' → logprob: -4.8167805671691895
    4. '   ' → logprob: -4.8167805671691895
    5. ' 
' → logprob: -4.8167805671691895
    6. '        
' → logprob: -6.1917805671691895
    7. '    
' → logprob: -6.6917805671691895
    8. '<|end|>' → logprob: -6.8167805671691895
    9. ' ' → logprob: -6.9417805671691895
    10. '   
' → logprob: -7.0667805671691895

Token 157: ' #' (ID: 1069)
  Prédit: ' idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' idx' → logprob: -0.13093924522399902
    2. 'idx' → logprob: -2.380939245223999
    3. '       ' → logprob: -3.505939245223999
    4. '   ' → logprob: -9.630939483642578
    5. '        ' → logprob: -10.380939483642578
    6. '	idx' → logprob: -10.380939483642578
    7. ' i' → logprob: -10.755939483642578
    8. '    ' → logprob: -10.880939483642578
    9. ' 
' → logprob: -11.005939483642578
    10. ' pos' → logprob: -11.630939483642578

Token 158: ' Update' (ID: 9152)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.04740842804312706
    2. 'pos' → logprob: -3.54740834236145
    3. ' idx' → logprob: -4.172408580780029
    4. 'i' → logprob: -6.547408580780029
    5. '   ' → logprob: -8.172408103942871
    6. ' pos' → logprob: -8.422408103942871
    7. 'index' → logprob: -10.547408103942871
    8. ' ' → logprob: -10.797408103942871
    9. '       ' → logprob: -10.797408103942871
    10. ' i' → logprob: -10.922408103942871

Token 159: ' value' (ID: 1432)
  Prédit: ' idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' idx' → logprob: -0.16109806299209595
    2. 'idx' → logprob: -1.9110980033874512
    3. '       ' → logprob: -7.411098003387451
    4. '   ' → logprob: -8.91109848022461
    5. '	idx' → logprob: -9.78609848022461
    6. ' index' → logprob: -11.03609848022461
    7. 'index' → logprob: -11.41109848022461
    8. '_idx' → logprob: -11.41109848022461
    9. 'i' → logprob: -11.53609848022461
    10. ' i' → logprob: -12.16109848022461

Token 160: ' at' (ID: 540)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08680350333452225
    2. ' at' → logprob: -2.711803436279297
    3. '   ' → logprob: -5.336803436279297
    4. ' =' → logprob: -5.586803436279297
    5. '(self' → logprob: -6.211803436279297
    6. '        
' → logprob: -6.586803436279297
    7. ' (' → logprob: -6.836803436279297
    8. '=' → logprob: -7.461803436279297
    9. 'self' → logprob: -7.461803436279297
    10. '(' → logprob: -7.836803436279297

Token 161: ' position' (ID: 4010)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.46785280108451843
    2. ' self' → logprob: -1.3428528308868408
    3. 'idx' → logprob: -2.717852830886841
    4. ' idx' → logprob: -3.092852830886841
    5. '   ' → logprob: -6.842852592468262
    6. ' ' → logprob: -9.967852592468262
    7. '  ' → logprob: -11.467852592468262
    8. '    ' → logprob: -11.842852592468262
    9. 'index' → logprob: -11.967852592468262
    10. '       ' → logprob: -12.342852592468262

Token 162: ' idx' (ID: 14016)
  Prédit: ' idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' idx' → logprob: -0.6153416633605957
    2. 'idx' → logprob: -0.9903416633605957
    3. ' self' → logprob: -3.1153416633605957
    4. 'self' → logprob: -3.2403416633605957
    5. '       ' → logprob: -5.490341663360596
    6. '   ' → logprob: -8.240341186523438
    7. '(idx' → logprob: -9.740341186523438
    8. '	idx' → logprob: -10.240341186523438
    9. '_idx' → logprob: -10.740341186523438
    10. '[idx' → logprob: -11.115341186523438

Token 163: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2072245478630066
    2. ')' → logprob: -2.7072246074676514
    3. '
' → logprob: -3.3322246074676514
    4. '   ' → logprob: -3.9572246074676514
    5. '+' → logprob: -4.207224369049072
    6. '):' → logprob: -4.707224369049072
    7. ')
' → logprob: -5.082224369049072
    8. ':' → logprob: -5.082224369049072
    9. '):
' → logprob: -5.207224369049072
    10. ' 
' → logprob: -5.457224369049072

Token 164: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005402727052569389
    2. 'idx' → logprob: -5.880402565002441
    3. ' idx' → logprob: -6.630402565002441
    4. '   ' → logprob: -8.005402565002441
    5. ')' → logprob: -8.255402565002441
    6. ',' → logprob: -8.380402565002441
    7. '        
' → logprob: -9.505402565002441
    8. '
' → logprob: -9.755402565002441
    9. '=' → logprob: -9.880402565002441
    10. ' =' → logprob: -10.130402565002441

Token 165: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' (adapté à ' idx') → logprob: -0.154165118932724
    2. ' idx' → logprob: -2.029165029525757
    3. '       ' → logprob: -4.654165267944336
    4. 'pos' → logprob: -7.029165267944336
    5. 'i' → logprob: -7.779165267944336
    6. '   ' → logprob: -7.904165267944336
    7. 'index' → logprob: -9.654165267944336
    8. 'self' → logprob: -10.029165267944336
    9. ' pos' → logprob: -10.529165267944336
    10. '	idx' → logprob: -10.654165267944336

Token 166: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.3804507255554199
    2. ' +=' → logprob: -1.38045072555542
    3. '=' → logprob: -2.75545072555542
    4. ' =' → logprob: -6.75545072555542
    5. '+' → logprob: -8.505451202392578
    6. '   ' → logprob: -11.005451202392578
    7. ' +' → logprob: -12.005451202392578
    8. '    ' → logprob: -12.630451202392578
    9. ']+=' → logprob: -12.755451202392578
    10. '       ' → logprob: -12.880451202392578

Token 167: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.004079112783074379
    2. ' self' → logprob: -5.504079341888428
    3. '[self' → logprob: -15.12907886505127
    4. '   ' → logprob: -15.62907886505127
    5. '(self' → logprob: -15.75407886505127
    6. '	self' → logprob: -16.004079818725586
    7. '<|end|>' → logprob: -17.379079818725586
    8. '       ' → logprob: -17.754079818725586
    9. '*self' → logprob: -18.629079818725586
    10. '1' → logprob: -18.754079818725586

Token 168: '.n' (ID: 1835)
  Prédit: '.n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.n' → logprob: -0.0001097417771234177
    2. '.' → logprob: -9.625109672546387
    3. 'n' → logprob: -10.250109672546387
    4. ' .' → logprob: -12.500109672546387
    5. '.nd' → logprob: -13.250109672546387
    6. '_n' → logprob: -14.250109672546387
    7. '.user' → logprob: -14.875109672546387
    8. '`.' → logprob: -15.000109672546387
    9. '.x' → logprob: -15.500109672546387
    10. '<|end|>' → logprob: -15.750109672546387

Token 169: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6677950024604797
    2. '<|end|>' → logprob: -0.7927950024604797
    3. '       ' → logprob: -4.667795181274414
    4. '    
' → logprob: -4.792795181274414
    5. '<|end|>' → logprob: -5.292795181274414
    6. '        
' → logprob: -5.917795181274414
    7. '  
' → logprob: -5.917795181274414
    8. ')' → logprob: -6.542795181274414
    9. ' 
' → logprob: -6.792795181274414
    10. '   
' → logprob: -7.042795181274414

Token 170: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.06963693350553513
    2. '       ' → logprob: -2.819636821746826
    3. '        
' → logprob: -6.069636821746826
    4. '  
' → logprob: -6.569636821746826
    5. '    
' → logprob: -6.819636821746826
    6. '<|end|>' → logprob: -6.819636821746826
    7. ')
' → logprob: -7.819636821746826
    8. '
' → logprob: -8.069637298583984
    9. '\n' → logprob: -8.444637298583984
    10. ' 
' → logprob: -8.444637298583984

Token 171: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.006738462019711733
    2. ' self' → logprob: -5.006738662719727
    3. 'val' → logprob: -11.131738662719727
    4. '   ' → logprob: -12.506738662719727
    5. '       ' → logprob: -12.881738662719727
    6. '	self' → logprob: -13.631738662719727
    7. '
' → logprob: -14.881738662719727
    8. '    
' → logprob: -15.756738662719727
    9. '_val' → logprob: -16.381738662719727
    10. 'value' → logprob: -16.631738662719727

Token 172: '.data' (ID: 3885)
  Prédit: '.data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.data' → logprob: -0.0008265409851446748
    2. '.' → logprob: -7.125826358795166
    3. ' .' → logprob: -11.500826835632324
    4. 'data' → logprob: -11.500826835632324
    5. '   ' → logprob: -14.250826835632324
    6. ' ' → logprob: -14.875826835632324
    7. '`.' → logprob: -15.750826835632324
    8. '.val' → logprob: -15.875826835632324
    9. ' data' → logprob: -16.125825881958008
    10. ').' → logprob: -16.375825881958008

Token 173: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -4.4849443838757e-06
    2. '[' → logprob: -12.500004768371582
    3. 'idx' → logprob: -14.750004768371582
    4. '[index' → logprob: -17.375003814697266
    5. '[int' → logprob: -17.625003814697266
    6. ' [' → logprob: -17.625003814697266
    7. '```' → logprob: -17.625003814697266
    8. '	idx' → logprob: -17.750003814697266
    9. '[i' → logprob: -17.875003814697266
    10. '   ' → logprob: -18.000003814697266

Token 174: ']' (ID: 60)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6267601251602173
    2. '=' → logprob: -0.8767601251602173
    3. ']' → logprob: -3.1267600059509277
    4. ')' → logprob: -5.376760005950928
    5. ']=' → logprob: -7.126760005950928
    6. ')=' → logprob: -8.626760482788086
    7. ' ]' → logprob: -9.751760482788086
    8. ' )' → logprob: -10.751760482788086
    9. ' =)' → logprob: -13.251760482788086
    10. ' ' → logprob: -13.876760482788086

Token 175: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931471824645996
    2. ' =' → logprob: -0.6931471824645996
    3. '.=' → logprob: -18.568147659301758
    4. '＝' → logprob: -19.068147659301758
    5. ' ' → logprob: -19.193147659301758
    6. '=int' → logprob: -19.318147659301758
    7. ')=' → logprob: -19.693147659301758
    8. ')' → logprob: -19.693147659301758
    9. '=value' → logprob: -20.068147659301758
    10. ' =
' → logprob: -20.443147659301758

Token 176: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.0001234428636962548
    2. ' val' → logprob: -9.000123023986816
    3. '	val' → logprob: -21.875123977661133
    4. '[val' → logprob: -24.875123977661133
    5. '(val' → logprob: -25.125123977661133
    6. '_val' → logprob: -25.875123977661133
    7. '.val' → logprob: -26.500123977661133
    8. ',val' → logprob: -26.875123977661133
    9. 'v' → logprob: -27.000123977661133
    10. 'vall' → logprob: -28.125123977661133

Token 177: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.25100231170654297
    2. 'idx' → logprob: -1.626002311706543
    3. '   ' → logprob: -4.376002311706543
    4. '
' → logprob: -5.751002311706543
    5. '        
' → logprob: -6.001002311706543
    6. ' idx' → logprob: -6.251002311706543
    7. '  
' → logprob: -6.751002311706543
    8. '    
' → logprob: -7.001002311706543
    9. '\n' → logprob: -7.126002311706543
    10. '	idx' → logprob: -7.626002311706543

Token 178: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1956675946712494
    2. 'idx' → logprob: -1.8206676244735718
    3. '   ' → logprob: -4.695667743682861
    4. '
' → logprob: -6.195667743682861
    5. '        
' → logprob: -6.320667743682861
    6. ' idx' → logprob: -6.820667743682861
    7. '    
' → logprob: -7.445667743682861
    8. '	idx' → logprob: -8.195667266845703
    9. '  
' → logprob: -8.320667266845703
    10. '\n' → logprob: -8.820667266845703

Token 179: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' (adapté à ' idx') → logprob: -0.024109920486807823
    2. '       ' → logprob: -4.149109840393066
    3. ' idx' → logprob: -4.899109840393066
    4. '   ' → logprob: -8.149109840393066
    5. 'while' → logprob: -9.149109840393066
    6. '	idx' → logprob: -9.524109840393066
    7. ' while' → logprob: -9.649109840393066
    8. '        
' → logprob: -11.399109840393066
    9. '    
' → logprob: -11.524109840393066
    10. '
' → logprob: -11.899109840393066

Token 180: ' >>=' (ID: 81952)
  Prédit: '>>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>>' → logprob: -0.14549173414707184
    2. ' >>=' → logprob: -2.3954918384552
    3. '//=' → logprob: -3.1454918384552
    4. '//' → logprob: -7.020491600036621
    5. ' //' → logprob: -8.270491600036621
    6. '>>>' → logprob: -10.395491600036621
    7. '≫' → logprob: -11.270491600036621
    8. '   ' → logprob: -11.270491600036621
    9. '=' → logprob: -12.145491600036621
    10. '	' → logprob: -12.770491600036621

Token 181: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.165027217415627e-05
    2. ' ' → logprob: -10.750021934509277
    3. '```' → logprob: -16.00002098083496
    4. '   ' → logprob: -17.50002098083496
    5. '=' → logprob: -17.75002098083496
    6. '0' → logprob: -18.00002098083496
    7. '１' → logprob: -18.50002098083496
    8. '' → logprob: -19.62502098083496
    9. '2' → logprob: -20.31252098083496
    10. '۱' → logprob: -20.43752098083496

Token 182: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.75
    3. '```' → logprob: -17.0
    4. '0' → logprob: -19.0
    5. '   ' → logprob: -19.125
    6. 'idx' → logprob: -19.5625
    7. 'self' → logprob: -19.875
    8. '１' → logprob: -20.125
    9. '' → logprob: -20.3125
    10. '2' → logprob: -20.8125

Token 183: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3319329023361206
    2. '       ' → logprob: -1.3319329023361206
    3. '        
' → logprob: -5.20693302154541
    4. '<|end|>' → logprob: -5.33193302154541
    5. 'while' → logprob: -5.70693302154541
    6. ' while' → logprob: -6.33193302154541
    7. '  
' → logprob: -7.33193302154541
    8. ' 
' → logprob: -7.45693302154541
    9. '    
' → logprob: -7.83193302154541
    10. '
' → logprob: -8.58193302154541

Token 184: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009957359172403812
    2. 'while' → logprob: -5.259957313537598
    3. ' while' → logprob: -5.884957313537598
    4. '        
' → logprob: -7.009957313537598
    5. '
' → logprob: -7.759957313537598
    6. '<|end|>' → logprob: -8.509957313537598
    7. '    
' → logprob: -9.259957313537598
    8. '   ' → logprob: -9.884957313537598
    9. '	while' → logprob: -10.009957313537598
    10. ' 
' → logprob: -10.259957313537598

Token 185: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.2572173476219177
    2. ' while' → logprob: -1.5072174072265625
    3. '       ' → logprob: -5.2572174072265625
    4. '	while' → logprob: -9.882217407226562
    5. 'While' → logprob: -11.632217407226562
    6. '   ' → logprob: -12.882217407226562
    7. 'hile' → logprob: -15.007217407226562
    8. ' While' → logprob: -15.132217407226562
    9. '        ' → logprob: -15.257217407226562
    10. '    ' → logprob: -15.257217407226562

Token 186: ' idx' (ID: 14016)
  Prédit: ' idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' idx' → logprob: -0.100211963057518
    2. 'idx' → logprob: -2.3502118587493896
    3. '(idx' → logprob: -12.850212097167969
    4. '	idx' → logprob: -13.100212097167969
    5. ' ' → logprob: -14.975212097167969
    6. '   ' → logprob: -15.850212097167969
    7. '[idx' → logprob: -16.72521209716797
    8. '_idx' → logprob: -16.72521209716797
    9. '  ' → logprob: -17.47521209716797
    10. 'Idx' → logprob: -18.47521209716797

Token 187: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.0015286672860383987
    2. ' >' → logprob: -6.751528739929199
    3. '>=' → logprob: -8.2515287399292
    4. ':' → logprob: -9.6265287399292
    5. '>:' → logprob: -10.5015287399292
    6. '&gt' → logprob: -13.3765287399292
    7. ' >=' → logprob: -13.5015287399292
    8. '   ' → logprob: -14.5015287399292
    9. '>
' → logprob: -15.5015287399292
    10. '≥' → logprob: -15.7515287399292

Token 188: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00043138445471413434
    2. ' ' → logprob: -7.750431537628174
    3. '=' → logprob: -14.500431060791016
    4. '   ' → logprob: -16.375431060791016
    5. '>' → logprob: -17.250431060791016
    6. '۰' → logprob: -18.375431060791016
    7. '  ' → logprob: -18.500431060791016
    8. '０' → logprob: -19.625431060791016
    9. '```' → logprob: -19.625431060791016
    10. '    ' → logprob: -20.437931060791016

Token 189: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.584239938296378e-06
    2. ' ' → logprob: -11.875007629394531
    3. '=' → logprob: -14.500007629394531
    4. '۰' → logprob: -18.50000762939453
    5. '>' → logprob: -19.12500762939453
    6. '   ' → logprob: -20.06250762939453
    7. '０' → logprob: -20.56250762939453
    8. '[' → logprob: -20.56250762939453
    9. '```' → logprob: -20.56250762939453
    10. '1' → logprob: -20.62500762939453

Token 190: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5761573314666748
    2. ':' → logprob: -0.8261573314666748
    3. '       ' → logprob: -9.201157569885254
    4. '):
' → logprob: -9.826157569885254
    5. '           ' → logprob: -10.951157569885254
    6. ':
' → logprob: -11.076157569885254
    7. ' :
' → logprob: -11.451157569885254
    8. '   ' → logprob: -12.201157569885254
    9. ',' → logprob: -12.451157569885254
    10. ' :' → logprob: -12.826157569885254

Token 191: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0006999264587648213
    2. '       ' → logprob: -7.750699996948242
    3. '```' → logprob: -9.875699996948242
    4. ',' → logprob: -10.000699996948242
    5. 'self' → logprob: -10.125699996948242
    6. ' self' → logprob: -10.250699996948242
    7. '   ' → logprob: -10.750699996948242
    8. '               ' → logprob: -11.000699996948242
    9. '0' → logprob: -11.750699996948242
    10. '          ' → logprob: -12.375699996948242

Token 192: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.6805840134620667
    2. ' self' → logprob: -1.0555839538574219
    3. '           ' → logprob: -1.9305839538574219
    4. '   ' → logprob: -8.180583953857422
    5. '               ' → logprob: -8.680583953857422
    6. ' ' → logprob: -9.055583953857422
    7. '	self' → logprob: -10.930583953857422
    8. '       ' → logprob: -11.430583953857422
    9. '```' → logprob: -11.930583953857422
    10. '  ' → logprob: -12.430583953857422

Token 193: '.data' (ID: 3885)
  Prédit: '.data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.data' → logprob: -0.0033457286190241575
    2. '.' → logprob: -5.753345966339111
    3. '           ' → logprob: -9.378345489501953
    4. ' .' → logprob: -10.003345489501953
    5. 'data' → logprob: -11.628345489501953
    6. '   ' → logprob: -11.753345489501953
    7. '<data' → logprob: -12.253345489501953
    8. '>' → logprob: -12.378345489501953
    9. '       ' → logprob: -12.503345489501953
    10. ' data' → logprob: -13.753345489501953

Token 194: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.0002123614540323615
    2. '[i' → logprob: -8.500212669372559
    3. '[' → logprob: -11.875212669372559
    4. 'idx' → logprob: -13.625212669372559
    5. '[id' → logprob: -15.375212669372559
    6. ' [' → logprob: -16.375211715698242
    7. '[index' → logprob: -16.500211715698242
    8. '```' → logprob: -16.500211715698242
    9. '[int' → logprob: -17.125211715698242
    10. ' idx' → logprob: -17.125211715698242

Token 195: ']' (ID: 60)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.28601837158203125
    2. ']' → logprob: -1.5360183715820312
    3. '=' → logprob: -3.4110183715820312
    4. ']=' → logprob: -7.786018371582031
    5. ' ]' → logprob: -9.911018371582031
    6. ')' → logprob: -11.036018371582031
    7. '   ' → logprob: -11.036018371582031
    8. '    ' → logprob: -13.036018371582031
    9. '=min' → logprob: -13.036018371582031
    10. ' ' → logprob: -13.661018371582031

Token 196: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16022585332393646
    2. '=' → logprob: -1.9102258682250977
    3. '=min' → logprob: -13.285225868225098
    4. 'min' → logprob: -18.53522491455078
    5. '＝' → logprob: -18.91022491455078
    6. 's' → logprob: -19.91022491455078
    7. ')' → logprob: -19.91022491455078
    8. '=float' → logprob: -20.16022491455078
    9. ' ' → logprob: -20.41022491455078
    10. '[' → logprob: -20.53522491455078

Token 197: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.3132616877555847
    2. ' min' → logprob: -1.3132617473602295
    3. '	min' → logprob: -18.063261032104492
    4. '   ' → logprob: -19.188261032104492
    5. 'mini' → logprob: -20.938261032104492
    6. ' ' → logprob: -21.188261032104492
    7. 'max' → logprob: -21.563261032104492
    8. 'minimum' → logprob: -22.188261032104492
    9. '_min' → logprob: -22.313261032104492
    10. 'm' → logprob: -22.438261032104492

Token 198: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -4.320199877838604e-07
    2. '(' → logprob: -14.875
    3. 'self' → logprob: -16.875
    4. '(
' → logprob: -19.875
    5. '[self' → logprob: -22.375
    6. ',self' → logprob: -22.5
    7. '(sel' → logprob: -22.625
    8. '=self' → logprob: -22.875
    9. ' self' → logprob: -23.0
    10. '	self' → logprob: -23.5

Token 199: '.data' (ID: 3885)
  Prédit: '.data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.data' → logprob: -4.008129963040119e-06
    2. 'self' → logprob: -12.875003814697266
    3. 'data' → logprob: -14.250003814697266
    4. '.' → logprob: -14.500003814697266
    5. ' .' → logprob: -16.625003814697266
    6. '.self' → logprob: -17.625003814697266
    7. ').' → logprob: -17.875003814697266
    8. '.dat' → logprob: -18.125003814697266
    9. ' ' → logprob: -18.375003814697266
    10. '```' → logprob: -18.375003814697266

Token 200: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.06011255085468292
    2. '[self' → logprob: -3.560112476348877
    3. '(self' → logprob: -3.935112476348877
    4. 'self' → logprob: -4.685112476348877
    5. '(' → logprob: -6.935112476348877
    6. '*self' → logprob: -9.185112953186035
    7. '2' → logprob: -10.935112953186035
    8. '*' → logprob: -10.935112953186035
    9. ',self' → logprob: -12.185112953186035
    10. ' self' → logprob: -12.310112953186035

Token 201: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.6932541131973267
    2. 'idx' → logprob: -0.6932541131973267
    3. ' idx' → logprob: -9.818254470825195
    4. '[' → logprob: -10.818254470825195
    5. '[idx' → logprob: -11.318254470825195
    6. ' ' → logprob: -11.943254470825195
    7. '(idx' → logprob: -12.193254470825195
    8. '   ' → logprob: -12.443254470825195
    9. '(' → logprob: -12.568254470825195
    10. '  ' → logprob: -14.818254470825195

Token 202: '*' (ID: 9)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.0012947621289640665
    2. '*' → logprob: -6.7512946128845215
    3. ' idx' → logprob: -9.00129508972168
    4. '[idx' → logprob: -14.25129508972168
    5. '	idx' → logprob: -14.62629508972168
    6. ' *' → logprob: -15.87629508972168
    7. '(idx' → logprob: -16.25129508972168
    8. '_idx' → logprob: -17.87629508972168
    9. 'IDX' → logprob: -18.87629508972168
    10. '   ' → logprob: -19.00129508972168

Token 203: 'idx' (ID: 13196)
  Prédit: 'idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -4.961759259458631e-06
    2. ' idx' → logprob: -12.250004768371582
    3. '	idx' → logprob: -15.750004768371582
    4. '[idx' → logprob: -18.1250057220459
    5. '(idx' → logprob: -18.3750057220459
    6. '_idx' → logprob: -19.6250057220459
    7. '   ' → logprob: -20.0000057220459
    8. ' ' → logprob: -20.1250057220459
    9. '.idx' → logprob: -20.1250057220459
    10. 'indx' → logprob: -20.5000057220459

Token 204: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.38728630542755127
    2. '],' → logprob: -1.1372863054275513
    3. ' ,' → logprob: -7.887286186218262
    4. ' ],' → logprob: -10.887286186218262
    5. '],
' → logprob: -11.762286186218262
    6. '>,' → logprob: -12.512286186218262
    7. ']' → logprob: -12.762286186218262
    8. '   ' → logprob: -12.887286186218262
    9. '},' → logprob: -14.012286186218262
    10. '),' → logprob: -14.262286186218262

Token 205: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.02992948330938816
    2. ' self' → logprob: -3.5299293994903564
    3. '2' → logprob: -8.904929161071777
    4. '           ' → logprob: -10.779929161071777
    5. ' ' → logprob: -10.904929161071777
    6. '   ' → logprob: -13.404929161071777
    7. '            ' → logprob: -14.154929161071777
    8. '               ' → logprob: -14.279929161071777
    9. '	self' → logprob: -14.904929161071777
    10. '       ' → logprob: -15.654929161071777

Token 206: '.data' (ID: 3885)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.3134307563304901
    2. '.data' → logprob: -1.3134307861328125
    3. ' data' → logprob: -8.813430786132812
    4. '2' → logprob: -11.688430786132812
    5. '.' → logprob: -13.063430786132812
    6. '_data' → logprob: -13.188430786132812
    7. '1' → logprob: -13.688430786132812
    8. '[data' → logprob: -13.813430786132812
    9. ' ' → logprob: -13.938430786132812
    10. '*' → logprob: -13.938430786132812

Token 207: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.4285030961036682
    2. '+' → logprob: -1.5535030364990234
    3. '[idx' → logprob: -2.0535030364990234
    4. 'idx' → logprob: -5.303503036499023
    5. '*' → logprob: -5.678503036499023
    6. '```' → logprob: -10.053503036499023
    7. '+[' → logprob: -10.178503036499023
    8. '1' → logprob: -10.178503036499023
    9. ']' → logprob: -10.303503036499023
    10. ' idx' → logprob: -10.303503036499023

Token 208: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0005019200034439564
    2. '(' → logprob: -8.00050163269043
    3. 'idx' → logprob: -8.87550163269043
    4. '1' → logprob: -11.25050163269043
    5. ' ' → logprob: -11.50050163269043
    6. '(idx' → logprob: -13.75050163269043
    7. '[' → logprob: -14.25050163269043
    8. '   ' → logprob: -14.62550163269043
    9. '```' → logprob: -14.75050163269043
    10. ' idx' → logprob: -15.37550163269043

Token 209: '*' (ID: 9)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.004891923628747463
    2. '+' → logprob: -5.379891872406006
    3. ' idx' → logprob: -8.629892349243164
    4. '_idx' → logprob: -10.129892349243164
    5. '[idx' → logprob: -10.379892349243164
    6. '(idx' → logprob: -11.879892349243164
    7. '*' → logprob: -12.379892349243164
    8. '	idx' → logprob: -12.379892349243164
    9. '1' → logprob: -12.754892349243164
    10. 'x' → logprob: -14.129892349243164

Token 210: 'idx' (ID: 13196)
  Prédit: 'idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.0002370329457335174
    2. '1' → logprob: -8.750237464904785
    3. ' idx' → logprob: -9.625237464904785
    4. '(idx' → logprob: -11.500237464904785
    5. '2' → logprob: -14.250237464904785
    6. 'i' → logprob: -14.875237464904785
    7. '(' → logprob: -15.000237464904785
    8. '   ' → logprob: -15.375237464904785
    9. '	idx' → logprob: -15.375237464904785
    10. '_idx' → logprob: -15.625237464904785

Token 211: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0003989720717072487
    2. '])' → logprob: -7.875399112701416
    3. ' +' → logprob: -11.000398635864258
    4. '1' → logprob: -13.875398635864258
    5. '])
' → logprob: -15.125398635864258
    6. '+)' → logprob: -15.125398635864258
    7. ']+' → logprob: -15.500398635864258
    8. '   ' → logprob: -16.000398635864258
    9. '+i' → logprob: -16.250398635864258
    10. ')' → logprob: -17.000398635864258

Token 212: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.318681188422488e-05
    2. ' ' → logprob: -11.25001335144043
    3. '   ' → logprob: -16.56251335144043
    4. '0' → logprob: -16.93751335144043
    5. '```' → logprob: -17.25001335144043
    6. ']' → logprob: -17.37501335144043
    7. 'idx' → logprob: -17.56251335144043
    8. '])' → logprob: -17.68751335144043
    9. 'i' → logprob: -18.68751335144043
    10. '  ' → logprob: -18.68751335144043

Token 213: '])
' (ID: 5169)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.313292533159256
    2. ')' → logprob: -1.3132925033569336
    3. ')
' → logprob: -10.563292503356934
    4. '           ' → logprob: -13.188292503356934
    5. ' )
' → logprob: -13.813292503356934
    6. ')`
' → logprob: -14.188292503356934
    7. ')

' → logprob: -14.688292503356934
    8. ' )' → logprob: -15.313292503356934
    9. '       ' → logprob: -15.563292503356934
    10. ')`' → logprob: -15.813292503356934

Token 214: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0029249449726194143
    2. 'idx' → logprob: -5.877924919128418
    3. ' idx' → logprob: -10.002924919128418
    4. '   ' → logprob: -10.502924919128418
    5. '```' → logprob: -11.377924919128418
    6. '       ' → logprob: -11.752924919128418
    7. '[idx' → logprob: -11.752924919128418
    8. '(idx' → logprob: -12.127924919128418
    9. '            
' → logprob: -12.877924919128418
    10. '		' → logprob: -13.002924919128418

Token 215: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' (adapté à ' idx') → logprob: -0.005269565153867006
    2. ' idx' → logprob: -5.255269527435303
    3. '           ' → logprob: -10.255270004272461
    4. '	idx' → logprob: -14.630270004272461
    5. '   ' → logprob: -16.38027000427246
    6. '_idx' → logprob: -16.75527000427246
    7. '(idx' → logprob: -17.38027000427246
    8. 'index' → logprob: -17.63027000427246
    9. '       ' → logprob: -18.00527000427246
    10. '[idx' → logprob: -18.38027000427246

Token 216: ' >>=' (ID: 81952)
  Prédit: '>>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>>' → logprob: -0.01423285249620676
    2. ' >>=' → logprob: -4.264232635498047
    3. '=' → logprob: -9.639232635498047
    4. '//=' → logprob: -13.264232635498047
    5. '>' → logprob: -14.264232635498047
    6. '-=' → logprob: -14.764232635498047
    7. ' >>' → logprob: -15.014232635498047
    8. '>>>' → logprob: -15.264232635498047
    9. '/=' → logprob: -15.764232635498047
    10. '   ' → logprob: -15.889232635498047

Token 217: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.1008713702030946e-06
    2. ' ' → logprob: -13.125001907348633
    3. '   ' → logprob: -18.000001907348633
    4. '```' → logprob: -18.000001907348633
    5. '<|end|>' → logprob: -21.625001907348633
    6. '0' → logprob: -21.625001907348633
    7. '１' → logprob: -21.687501907348633
    8. '۱' → logprob: -21.875001907348633
    9. '  ' → logprob: -21.937501907348633
    10. '' → logprob: -22.625001907348633

Token 218: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.375
    3. '```' → logprob: -18.5
    4. '   ' → logprob: -20.875
    5. '0' → logprob: -21.375
    6. '۱' → logprob: -21.625
    7. '１' → logprob: -21.8125
    8. '2' → logprob: -22.5
    9. '১' → logprob: -22.625
    10. '१' → logprob: -22.6875

Token 219: '
    
' (ID: 15698)
  Prédit: '    
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '    
' → logprob: -0.14866267144680023
    2. '   ' → logprob: -2.273662567138672
    3. '
' → logprob: -3.773662567138672
    4. '<|end|>' → logprob: -5.273662567138672
    5. '  
' → logprob: -5.648662567138672
    6. ' 
' → logprob: -6.273662567138672
    7. '   
' → logprob: -7.148662567138672
    8. '	
' → logprob: -8.398662567138672
    9. '<|end|>' → logprob: -8.523662567138672
    10. '        
' → logprob: -8.648662567138672

Token 220: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.01661488600075245
    2. ' def' → logprob: -4.26661491394043
    3. '   ' → logprob: -6.01661491394043
    4. '    
' → logprob: -12.64161491394043
    5. ' ' → logprob: -13.01661491394043
    6. '```' → logprob: -13.26661491394043
    7. '	def' → logprob: -13.76661491394043
    8. '  ' → logprob: -13.76661491394043
    9. ' 
' → logprob: -14.76661491394043
    10. '
' → logprob: -15.14161491394043

Token 221: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0002622894535306841
    2. ' def' → logprob: -8.250262260437012
    3. '   ' → logprob: -13.875262260437012
    4. '```' → logprob: -17.125263214111328
    5. 'query' → logprob: -18.000263214111328
    6. '    
' → logprob: -18.500263214111328
    7. '	def' → logprob: -18.875263214111328
    8. ' ' → logprob: -19.250263214111328
    9. '
' → logprob: -19.750263214111328
    10. '#' → logprob: -20.375263214111328

Token 222: ' query' (ID: 5703)
  Prédit: 'query'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'query' → logprob: -0.00448115449398756
    2. ' query' → logprob: -5.504481315612793
    3. 'range' → logprob: -8.004481315612793
    4. '_query' → logprob: -9.754481315612793
    5. 'min' → logprob: -12.379481315612793
    6. ' ' → logprob: -13.254481315612793
    7. ' range' → logprob: -13.754481315612793
    8. '=query' → logprob: -14.004481315612793
    9. 'get' → logprob: -14.379481315612793
    10. '	query' → logprob: -14.879481315612793

Token 223: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -5.080963092041202e-06
    2. '(' → logprob: -12.250004768371582
    3. 'self' → logprob: -16.6250057220459
    4. 'def' → logprob: -17.1250057220459
    5. '   ' → logprob: -17.1250057220459
    6. ' (' → logprob: -17.5000057220459
    7. '(l' → logprob: -18.7500057220459
    8. '(s' → logprob: -18.8750057220459
    9. '(
' → logprob: -19.0000057220459
    10. '(sel' → logprob: -19.5000057220459

Token 224: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00022070204431656748
    2. ' ,' → logprob: -8.50022029876709
    3. 'self' → logprob: -11.50022029876709
    4. ',self' → logprob: -12.12522029876709
    5. '(self' → logprob: -13.50022029876709
    6. '       ' → logprob: -16.000221252441406
    7. ' self' → logprob: -16.750221252441406
    8. '   ' → logprob: -17.000221252441406
    9. '_,' → logprob: -17.375221252441406
    10. ')' → logprob: -18.000221252441406

Token 225: ' l' (ID: 305)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.2252752184867859
    2. 'l' → logprob: -1.7252752780914307
    3. 'left' → logprob: -3.9752752780914307
    4. ' self' → logprob: -5.475275039672852
    5. ' l' → logprob: -7.850275039672852
    6. ' left' → logprob: -8.475275039672852
    7. 'ql' → logprob: -11.850275039672852
    8. '(self' → logprob: -12.100275039672852
    9. 'L' → logprob: -13.725275039672852
    10. 'lef' → logprob: -13.975275039672852

Token 226: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.7848862373502925e-05
    2. ' ,' → logprob: -10.500027656555176
    3. ',r' → logprob: -15.875027656555176
    4. ',int' → logprob: -16.250028610229492
    5. ',l' → logprob: -17.125028610229492
    6. ',b' → logprob: -17.250028610229492
    7. ',right' → logprob: -17.875028610229492
    8. ',n' → logprob: -18.500028610229492
    9. ',
' → logprob: -18.500028610229492
    10. ',self' → logprob: -19.125028610229492

Token 227: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.006715370807796717
    2. ' r' → logprob: -5.006715297698975
    3. '	r' → logprob: -20.006715774536133
    4. '   ' → logprob: -20.631715774536133
    5. ',r' → logprob: -21.881715774536133
    6. '_r' → logprob: -23.756715774536133
    7. ')' → logprob: -24.381715774536133
    8. '-r' → logprob: -24.631715774536133
    9. '$r' → logprob: -24.631715774536133
    10. '
' → logprob: -24.756715774536133

Token 228: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.002901997184380889
    2. '):
' → logprob: -6.002902030944824
    3. ',' → logprob: -7.877902030944824
    4. ')' → logprob: -10.752902030944824
    5. ' ):' → logprob: -10.877902030944824
    6. '):
' → logprob: -13.002902030944824
    7. '   ' → logprob: -13.127902030944824
    8. ':' → logprob: -13.502902030944824
    9. '       ' → logprob: -14.252902030944824
    10. '):

' → logprob: -15.127902030944824

Token 229: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00011081460979767144
    2. '   ' → logprob: -9.750110626220703
    3. '    ' → logprob: -10.875110626220703
    4. ' l' → logprob: -11.250110626220703
    5. '        ' → logprob: -11.500110626220703
    6. '      ' → logprob: -12.875110626220703
    7. 'l' → logprob: -13.625110626220703
    8. ',' → logprob: -13.625110626220703
    9. '           ' → logprob: -14.250110626220703
    10. '	' → logprob: -14.375110626220703

Token 230: ' #' (ID: 1069)
  Prédit: ' res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' res' → logprob: -0.014008825644850731
    2. 'res' → logprob: -5.01400899887085
    3. ' l' → logprob: -5.76400899887085
    4. '       ' → logprob: -5.76400899887085
    5. ' result' → logprob: -7.26400899887085
    6. 'result' → logprob: -8.889008522033691
    7. 'l' → logprob: -9.264008522033691
    8. ' ans' → logprob: -10.889008522033691
    9. '        ' → logprob: -11.639008522033691
    10. ' r' → logprob: -12.014008522033691

Token 231: ' Query' (ID: 18574)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.09387578815221786
    2. ' res' → logprob: -3.0938758850097656
    3. 'res' → logprob: -3.5938758850097656
    4. ' l' → logprob: -4.093875885009766
    5. 'result' → logprob: -9.593875885009766
    6. '   ' → logprob: -10.968875885009766
    7. '	l' → logprob: -11.343875885009766
    8. '       ' → logprob: -11.968875885009766
    9. ' result' → logprob: -12.468875885009766
    10. 'ans' → logprob: -13.093875885009766

Token 232: ' min' (ID: 1349)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6238726377487183
    2. ' res' → logprob: -1.4988726377487183
    3. ' min' → logprob: -1.8738726377487183
    4. ' minimum' → logprob: -3.248872756958008
    5. ' result' → logprob: -3.748872756958008
    6. ' l' → logprob: -4.373872756958008
    7. 'result' → logprob: -6.373872756958008
    8. 'min' → logprob: -6.373872756958008
    9. ' inf' → logprob: -6.748872756958008
    10. '_min' → logprob: -6.873872756958008

Token 233: ' value' (ID: 1432)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.36764025688171387
    2. '(' → logprob: -1.6176402568817139
    3. ' (' → logprob: -3.117640256881714
    4. ' l' → logprob: -3.867640256881714
    5. ' ,' → logprob: -4.992640495300293
    6. '(l' → logprob: -4.992640495300293
    7. ' in' → logprob: -5.117640495300293
    8. '(self' → logprob: -5.617640495300293
    9. ',' → logprob: -5.742640495300293
    10. ' =' → logprob: -5.742640495300293

Token 234: ' in' (ID: 306)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4870143532752991
    2. '(self' → logprob: -1.2370142936706543
    3. '(' → logprob: -2.4870142936706543
    4. ' in' → logprob: -5.362014293670654
    5. ' (' → logprob: -5.737014293670654
    6. ' self' → logprob: -6.487014293670654
    7. '   ' → logprob: -7.362014293670654
    8. '        ' → logprob: -7.612014293670654
    9. ',' → logprob: -7.612014293670654
    10. 'self' → logprob: -8.487014770507812

Token 235: ' [' (ID: 723)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.40215814113616943
    2. ' l' → logprob: -1.9021581411361694
    3. 'l' → logprob: -2.402158260345459
    4. 'range' → logprob: -2.652158260345459
    5. ' [' → logprob: -4.527158260345459
    6. '[l' → logprob: -4.902158260345459
    7. ' the' → logprob: -6.902158260345459
    8. ')' → logprob: -7.277158260345459
    9. '[' → logprob: -7.902158260345459
    10. '   ' → logprob: -8.6521577835083

Token 236: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -9.615255839889869e-05
    2. ' l' → logprob: -9.250096321105957
    3. '   ' → logprob: -17.75009536743164
    4. ')' → logprob: -18.12509536743164
    5. '	l' → logprob: -19.12509536743164
    6. '_l' → logprob: -19.87509536743164
    7. ',' → logprob: -20.12509536743164
    8. '       ' → logprob: -21.12509536743164
    9. ']' → logprob: -21.50009536743164
    10. ',l' → logprob: -22.00009536743164

Token 237: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002070087008178234
    2. ' ,' → logprob: -6.25206995010376
    3. ',r' → logprob: -8.877070426940918
    4. ',
' → logprob: -13.877070426940918
    5. 'r' → logprob: -14.627070426940918
    6. ',l' → logprob: -15.877070426940918
    7. ',right' → logprob: -16.1270694732666
    8. ' r' → logprob: -16.3770694732666
    9. ',int' → logprob: -16.7520694732666
    10. ',n' → logprob: -17.0020694732666

Token 238: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.16022595763206482
    2. ' r' → logprob: -1.9102259874343872
    3. ',' → logprob: -14.160225868225098
    4. '   ' → logprob: -14.285225868225098
    5. ',r' → logprob: -15.910225868225098
    6. '    ' → logprob: -16.285226821899414
    7. ' ' → logprob: -16.660226821899414
    8. '       ' → logprob: -16.785226821899414
    9. '	r' → logprob: -16.910226821899414
    10. '(r' → logprob: -17.285226821899414

Token 239: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.09122485667467117
    2. ')' → logprob: -3.0912249088287354
    3. ',' → logprob: -3.4662249088287354
    4. ' ]' → logprob: -5.216224670410156
    5. '+' → logprob: -5.466224670410156
    6. ']
' → logprob: -8.216224670410156
    7. '   ' → logprob: -8.716224670410156
    8. ' )' → logprob: -9.341224670410156
    9. ' +' → logprob: -9.466224670410156
    10. ' ,' → logprob: -9.466224670410156

Token 240: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007855643052607775
    2. ',' → logprob: -8.125785827636719
    3. '        ' → logprob: -8.375785827636719
    4. '        
' → logprob: -9.625785827636719
    5. ' l' → logprob: -10.125785827636719
    6. '   ' → logprob: -10.500785827636719
    7. ':' → logprob: -10.500785827636719
    8. '    ' → logprob: -10.750785827636719
    9. ' =' → logprob: -11.625785827636719
    10. '      ' → logprob: -11.875785827636719

Token 241: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' (adapté à ' l') → logprob: -0.13970711827278137
    2. 'res' → logprob: -2.889707088470459
    3. ' l' → logprob: -3.389707088470459
    4. ' res' → logprob: -3.639707088470459
    5. '       ' → logprob: -4.264707088470459
    6. 'result' → logprob: -7.639707088470459
    7. '   ' → logprob: -8.764707565307617
    8. 'r' → logprob: -9.514707565307617
    9. ' result' → logprob: -10.639707565307617
    10. 'ans' → logprob: -11.764707565307617

Token 242: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.18095290660858154
    2. ' +=' → logprob: -1.8059529066085815
    3. '=' → logprob: -7.805953025817871
    4. ' <<=' → logprob: -8.305953025817871
    5. ']+=' → logprob: -8.680953025817871
    6. ',' → logprob: -8.930953025817871
    7. '|' → logprob: -9.805953025817871
    8. ' ,' → logprob: -10.430953025817871
    9. '```' → logprob: -10.430953025817871
    10. '+' → logprob: -10.555953025817871

Token 243: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0002991160727106035
    2. ' self' → logprob: -8.125299453735352
    3. '[self' → logprob: -13.500299453735352
    4. '       ' → logprob: -14.375299453735352
    5. '<|end|>' → logprob: -14.625299453735352
    6. '(self' → logprob: -15.250299453735352
    7. '	self' → logprob: -15.500299453735352
    8. '   ' → logprob: -16.12529945373535
    9. '*self' → logprob: -16.87529945373535
    10. '```' → logprob: -17.37529945373535

Token 244: '.n' (ID: 1835)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.38791701197624207
    2. '.n' → logprob: -1.1379170417785645
    3. '_n' → logprob: -6.8879170417785645
    4. '	n' → logprob: -12.012916564941406
    5. '<|end|>' → logprob: -12.012916564941406
    6. ' n' → logprob: -12.887916564941406
    7. '   ' → logprob: -13.012916564941406
    8. '.' → logprob: -13.512916564941406
    9. '<n' → logprob: -13.637916564941406
    10. ' ' → logprob: -13.887916564941406

Token 245: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19331352412700653
    2. '<|end|>' → logprob: -1.943313479423523
    3. '<|end|>' → logprob: -4.6933135986328125
    4. '        ' → logprob: -4.9433135986328125
    5. '
' → logprob: -5.6933135986328125
    6. 'while' → logprob: -6.1933135986328125
    7. '        
' → logprob: -6.4433135986328125
    8. '   ' → logprob: -6.8183135986328125
    9. ' ' → logprob: -6.8183135986328125
    10. ' 
' → logprob: -6.9433135986328125

Token 246: '       ' (ID: 309)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.21975021064281464
    2. '       ' → logprob: -2.219750165939331
    3. ' r' → logprob: -2.469750165939331
    4. ' 
' → logprob: -5.96975040435791
    5. '        
' → logprob: -7.84475040435791
    6. '  
' → logprob: -8.71975040435791
    7. '   ' → logprob: -8.84475040435791
    8. ' ,' → logprob: -9.09475040435791
    9. '    
' → logprob: -9.34475040435791
    10. ' ' → logprob: -9.34475040435791

Token 247: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' (adapté à ' r') → logprob: -0.0004306692280806601
    2. ' r' → logprob: -7.750430583953857
    3. '	r' → logprob: -20.375431060791016
    4. '       ' → logprob: -21.625431060791016
    5. '   ' → logprob: -22.000431060791016
    6. '_r' → logprob: -22.875431060791016
    7. 'res' → logprob: -23.125431060791016
    8. '
' → logprob: -24.125431060791016
    9. '=r' → logprob: -24.250431060791016
    10. 'b' → logprob: -24.375431060791016

Token 248: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.4756838083267212
    2. '+=' → logprob: -0.9756838083267212
    3. '+' → logprob: -6.475683689117432
    4. ']+=' → logprob: -10.22568416595459
    5. ' +' → logprob: -10.85068416595459
    6. '```' → logprob: -13.35068416595459
    7. '+
' → logprob: -13.60068416595459
    8. '+=(' → logprob: -13.72568416595459
    9. '        ' → logprob: -13.97568416595459
    10. '+='' → logprob: -14.10068416595459

Token 249: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.07940688729286194
    2. ' self' → logprob: -2.579406976699829
    3. '1' → logprob: -7.70440673828125
    4. ' ' → logprob: -11.20440673828125
    5. '       ' → logprob: -11.20440673828125
    6. '[self' → logprob: -11.32940673828125
    7. '(self' → logprob: -11.32940673828125
    8. 'r' → logprob: -12.70440673828125
    9. 's' → logprob: -12.82940673828125
    10. '	self' → logprob: -13.20440673828125

Token 250: '.n' (ID: 1835)
  Prédit: '.n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.n' → logprob: -0.00035048185964114964
    2. 'n' → logprob: -8.000350952148438
    3. '_n' → logprob: -12.125350952148438
    4. 'self' → logprob: -13.000350952148438
    5. '<n' → logprob: -13.625350952148438
    6. '	n' → logprob: -13.875350952148438
    7. '       ' → logprob: -14.000350952148438
    8. '<|end|>' → logprob: -14.375350952148438
    9. '+n' → logprob: -14.500350952148438
    10. ',n' → logprob: -14.625350952148438

Token 251: '
' (ID: 198)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.46287405490875244
    2. ' +' → logprob: -1.0878740549087524
    3. '       ' → logprob: -3.962873935699463
    4. ' +=' → logprob: -4.462873935699463
    5. '+
' → logprob: -6.962873935699463
    6. '+=' → logprob: -7.212873935699463
    7. ' +
' → logprob: -7.337873935699463
    8. '
' → logprob: -8.837874412536621
    9. '        ' → logprob: -8.837874412536621
    10. 'while' → logprob: -8.837874412536621

Token 252: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002678272081539035
    2. ' +' → logprob: -6.627678394317627
    3. '+' → logprob: -6.752678394317627
    4. '        
' → logprob: -9.252677917480469
    5. '
' → logprob: -10.877677917480469
    6. 'result' → logprob: -11.752677917480469
    7. '	' → logprob: -11.752677917480469
    8. '```' → logprob: -11.877677917480469
    9. '<|end|>' → logprob: -12.127677917480469
    10. ' +=' → logprob: -12.127677917480469

Token 253: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -1.2113979209971149e-05
    2. ' res' → logprob: -11.750012397766113
    3. 's' → logprob: -12.500012397766113
    4. 'result' → logprob: -15.375012397766113
    5. 'ans' → logprob: -15.750012397766113
    6. '_res' → logprob: -18.125011444091797
    7. '	res' → logprob: -18.500011444091797
    8. 'ret' → logprob: -18.625011444091797
    9. 'r' → logprob: -19.250011444091797
    10. '   ' → logprob: -19.500011444091797

Token 254: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0015023599844425917
    2. '=' → logprob: -6.501502513885498
    3. ' ' → logprob: -17.876502990722656
    4. ',' → logprob: -18.376502990722656
    5. '=float' → logprob: -18.626502990722656
    6. ')' → logprob: -21.001502990722656
    7. '=int' → logprob: -21.126502990722656
    8. ' =
' → logprob: -21.251502990722656
    9. '＝' → logprob: -21.376502990722656
    10. ' =[' → logprob: -21.376502990722656

Token 255: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.00861456897109747
    2. ' float' → logprob: -4.758614540100098
    3. '	float' → logprob: -18.758615493774414
    4. '(float' → logprob: -20.008615493774414
    5. ',float' → logprob: -20.133615493774414
    6. '   ' → logprob: -20.258615493774414
    7. 'flo' → logprob: -20.383615493774414
    8. '=float' → logprob: -20.633615493774414
    9. '<float' → logprob: -21.133615493774414
    10. ' ' → logprob: -21.508615493774414

Token 256: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -1.2664456789934775e-06
    2. '(' → logprob: -14.625000953674316
    3. ''s' → logprob: -14.875000953674316
    4. ' ('' → logprob: -15.750000953674316
    5. ''in' → logprob: -15.875000953674316
    6. '("' → logprob: -17.000001907348633
    7. '(in' → logprob: -17.500001907348633
    8. 'inf' → logprob: -17.500001907348633
    9. ''' → logprob: -17.750001907348633
    10. '['' → logprob: -17.750001907348633

Token 257: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: 0.0
    2. ' inf' → logprob: -19.75
    3. 'in' → logprob: -21.25
    4. '')' → logprob: -23.25
    5. '.inf' → logprob: -23.625
    6. ''' → logprob: -24.125
    7. 'info' → logprob: -24.25
    8. '_inf' → logprob: -24.75
    9. '-inf' → logprob: -24.875
    10. '2' → logprob: -25.0

Token 258: '')
' (ID: 2515)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0032858517952263355
    2. ' )' → logprob: -6.628285884857178
    3. ')
' → logprob: -6.878285884857178
    4. '')' → logprob: -7.003285884857178
    5. ' )
' → logprob: -11.25328540802002
    6. '')
' → logprob: -12.37828540802002
    7. ')
' → logprob: -14.37828540802002
    8. '`)' → logprob: -15.37828540802002
    9. ' ' → logprob: -15.50328540802002
    10. '")' → logprob: -15.75328540802002

Token 259: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14843252301216125
    2. '        
' → logprob: -3.148432493209839
    3. ' 
' → logprob: -3.398432493209839
    4. '
' → logprob: -3.773432493209839
    5. '    
' → logprob: -3.898432493209839
    6. '  
' → logprob: -4.773432731628418
    7. '   ' → logprob: -5.898432731628418
    8. ' while' → logprob: -5.898432731628418
    9. '<|end|>' → logprob: -7.023432731628418
    10. '   
' → logprob: -7.273432731628418

Token 260: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.34343189001083374
    2. ' while' → logprob: -1.3434319496154785
    3. '       ' → logprob: -4.4684319496154785
    4. '
' → logprob: -4.7184319496154785
    5. ' 
' → logprob: -5.4684319496154785
    6. '        
' → logprob: -6.3434319496154785
    7. '+' → logprob: -6.8434319496154785
    8. '    
' → logprob: -7.8434319496154785
    9. '	while' → logprob: -7.9684319496154785
    10. ' ' → logprob: -8.09343147277832

Token 261: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.04858771339058876
    2. ' l' → logprob: -3.0485877990722656
    3. '	l' → logprob: -15.923587799072266
    4. '   ' → logprob: -16.423587799072266
    5. '(l' → logprob: -16.923587799072266
    6. '```' → logprob: -16.923587799072266
    7. '_l' → logprob: -17.798587799072266
    8. '$l' → logprob: -18.423587799072266
    9. ' ' → logprob: -18.423587799072266
    10. 'left' → logprob: -18.548587799072266

Token 262: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.10021983087062836
    2. ' <=' → logprob: -2.3502197265625
    3. '<' → logprob: -11.4752197265625
    4. ' <' → logprob: -13.1002197265625
    5. '[' → logprob: -15.4752197265625
    6. ')<=' → logprob: -15.6002197265625
    7. '≤' → logprob: -16.1002197265625
    8. '```' → logprob: -16.8502197265625
    9. ']<=' → logprob: -16.9752197265625
    10. '&' → logprob: -17.1002197265625

Token 263: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0010332842357456684
    2. ' r' → logprob: -6.876033306121826
    3. ' ' → logprob: -14.876032829284668
    4. '   ' → logprob: -17.001033782958984
    5. '	r' → logprob: -17.126033782958984
    6. '
' → logprob: -17.501033782958984
    7. '```' → logprob: -18.251033782958984
    8. '7' → logprob: -19.376033782958984
    9. '(r' → logprob: -19.501033782958984
    10. '_r' → logprob: -19.626033782958984

Token 264: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2262325882911682
    2. ':
' → logprob: -1.6012325286865234
    3. '       ' → logprob: -7.976232528686523
    4. ' and' → logprob: -8.726232528686523
    5. '           ' → logprob: -9.101232528686523
    6. ',' → logprob: -9.601232528686523
    7. '):
' → logprob: -9.851232528686523
    8. ' :' → logprob: -10.851232528686523
    9. ' :
' → logprob: -11.226232528686523
    10. '):' → logprob: -11.351232528686523

Token 265: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6470268964767456
    2. '       ' → logprob: -1.2720268964767456
    3. '<|end|>' → logprob: -3.022027015686035
    4. ' if' → logprob: -3.147027015686035
    5. ' 
' → logprob: -3.522027015686035
    6. ' ' → logprob: -3.897027015686035
    7. 'if' → logprob: -4.147027015686035
    8. '        ' → logprob: -4.647027015686035
    9. '
' → logprob: -4.647027015686035
    10. '```' → logprob: -5.147027015686035

Token 266: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.052496619522571564
    2. ' if' → logprob: -3.0524966716766357
    3. '           ' → logprob: -5.552496433258057
    4. '               ' → logprob: -10.927496910095215
    5. '   ' → logprob: -12.552496910095215
    6. 'If' → logprob: -13.927496910095215
    7. '
' → logprob: -14.427496910095215
    8. ' ' → logprob: -15.302496910095215
    9. '```' → logprob: -15.552496910095215
    10. '            ' → logprob: -16.0524959564209

Token 267: ' (' (ID: 350)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.0880877748131752
    2. '(l' → logprob: -3.338087797164917
    3. ' l' → logprob: -3.713087797164917
    4. ' (' → logprob: -3.713087797164917
    5. '(' → logprob: -11.713088035583496
    6. '	l' → logprob: -13.713088035583496
    7. ' ' → logprob: -14.463088035583496
    8. '(r' → logprob: -15.213088035583496
    9. '_l' → logprob: -16.08808708190918
    10. '   ' → logprob: -16.33808708190918

Token 268: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -8.506661833962426e-05
    2. ' l' → logprob: -9.37508487701416
    3. 'r' → logprob: -16.875085830688477
    4. '   ' → logprob: -17.250085830688477
    5. ')' → logprob: -18.000085830688477
    6. '	l' → logprob: -18.750085830688477
    7. '(l' → logprob: -18.875085830688477
    8. '_l' → logprob: -19.000085830688477
    9. ' ' → logprob: -19.875085830688477
    10. '  ' → logprob: -21.375085830688477

Token 269: ' &' (ID: 827)
  Prédit: ' &'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' &' → logprob: -0.009799061343073845
    2. '&' → logprob: -4.634799003601074
    3. ' %' → logprob: -10.634799003601074
    4. '%' → logprob: -11.259799003601074
    5. ')' → logprob: -12.384799003601074
    6. ' ' → logprob: -14.009799003601074
    7. ' &
' → logprob: -15.009799003601074
    8. '&amp' → logprob: -15.759799003601074
    9. ')&' → logprob: -16.25979995727539
    10. '&
' → logprob: -16.25979995727539

Token 270: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.375001907348633
    3. '１' → logprob: -20.500001907348633
    4. '   ' → logprob: -20.625001907348633
    5. '
' → logprob: -20.750001907348633
    6. '

' → logprob: -21.000001907348633
    7. ')' → logprob: -21.375001907348633
    8. '```' → logprob: -21.500001907348633
    9. '۱' → logprob: -21.625001907348633
    10. '{' → logprob: -22.000001907348633

Token 271: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.0
    3. '１' → logprob: -20.5
    4. '
' → logprob: -21.125
    5. '   ' → logprob: -21.25
    6. '```' → logprob: -21.25
    7. '{' → logprob: -21.375
    8. '۱' → logprob: -21.5
    9. '

' → logprob: -21.875
    10. 'l' → logprob: -22.25

Token 272: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.45195242762565613
    2. '):' → logprob: -1.0769524574279785
    3. ')==' → logprob: -4.3269524574279785
    4. '):
' → logprob: -4.8269524574279785
    5. '1' → logprob: -7.0769524574279785
    6. ':' → logprob: -7.9519524574279785
    7. '==' → logprob: -8.07695198059082
    8. ' ):' → logprob: -9.20195198059082
    9. ' ==' → logprob: -9.57695198059082
    10. ' )' → logprob: -10.70195198059082

Token 273: ' ==' (ID: 951)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.16736865043640137
    2. '==' → logprob: -2.0423686504364014
    3. ' ==' → logprob: -3.9173686504364014
    4. ':
' → logprob: -5.5423688888549805
    5. '=' → logprob: -8.41736888885498
    6. ')==' → logprob: -9.16736888885498
    7. '1' → logprob: -9.79236888885498
    8. ' :' → logprob: -9.91736888885498
    9. ')' → logprob: -10.16736888885498
    10. '):' → logprob: -10.29236888885498

Token 274: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.511406809295295e-06
    2. ' ' → logprob: -12.000006675720215
    3. 'l' → logprob: -15.125006675720215
    4. '۱' → logprob: -20.0000057220459
    5. '```' → logprob: -20.3750057220459
    6. '' → logprob: -20.3750057220459
    7. ' l' → logprob: -20.5000057220459
    8. '१' → logprob: -21.1250057220459
    9. '0' → logprob: -21.3750057220459
    10. '１' → logprob: -21.3750057220459

Token 275: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5213274309644476e-05
    2. ' ' → logprob: -11.125015258789062
    3. 'l' → logprob: -14.875015258789062
    4. '0' → logprob: -17.875015258789062
    5. '' → logprob: -18.750015258789062
    6. '۱' → logprob: -19.000015258789062
    7. '```' → logprob: -19.750015258789062
    8. '१' → logprob: -19.875015258789062
    9. '১' → logprob: -20.062515258789062
    10. 'r' → logprob: -20.437515258789062

Token 276: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.32060548663139343
    2. ':' → logprob: -1.3206055164337158
    3. '               ' → logprob: -5.195605278015137
    4. '           ' → logprob: -6.445605278015137
    5. 'res' → logprob: -9.695605278015137
    6. '):
' → logprob: -9.945605278015137
    7. ':
' → logprob: -10.570605278015137
    8. ' :
' → logprob: -11.445605278015137
    9. ')' → logprob: -11.945605278015137
    10. '                   ' → logprob: -12.195605278015137

Token 277: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.22463494539260864
    2. 'res' → logprob: -1.8496348857879639
    3. ' res' → logprob: -3.599634885787964
    4. '
' → logprob: -4.474635124206543
    5. '           ' → logprob: -5.349635124206543
    6. '```' → logprob: -9.224635124206543
    7. '<|end|>' → logprob: -9.474635124206543
    8. '	res' → logprob: -10.099635124206543
    9. ' 
' → logprob: -10.099635124206543
    10. ',res' → logprob: -10.974635124206543

Token 278: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -0.0052858153358101845
    2. ' res' → logprob: -5.255285739898682
    3. 'if' → logprob: -10.25528621673584
    4. '               ' → logprob: -12.00528621673584
    5. '
' → logprob: -12.50528621673584
    6. '                   ' → logprob: -12.75528621673584
    7. '           ' → logprob: -13.00528621673584
    8. '	res' → logprob: -13.88028621673584
    9. ' if' → logprob: -14.50528621673584
    10. '   ' → logprob: -16.380285263061523

Token 279: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4740842282772064
    2. '=' → logprob: -0.9740842580795288
    3. '=min' → logprob: -11.84908390045166
    4. 'min' → logprob: -16.724084854125977
    5. '    ' → logprob: -17.849084854125977
    6. ' ' → logprob: -17.974084854125977
    7. '＝' → logprob: -17.974084854125977
    8. '   ' → logprob: -18.349084854125977
    9. '```' → logprob: -18.474084854125977
    10. '.=' → logprob: -18.474084854125977

Token 280: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.3132616877555847
    2. ' min' → logprob: -1.3132617473602295
    3. '	min' → logprob: -17.313261032104492
    4. '_min' → logprob: -19.438261032104492
    5. '(min' → logprob: -19.813261032104492
    6. '[min' → logprob: -20.063261032104492
    7. ',min' → logprob: -20.813261032104492
    8. '   ' → logprob: -20.938261032104492
    9. '```' → logprob: -20.938261032104492
    10. '.min' → logprob: -21.188261032104492

Token 281: '(res' (ID: 8331)
  Prédit: '(res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -1.1472419600977446e-06
    2. '(' → logprob: -13.750000953674316
    3. 'res' → logprob: -18.750001907348633
    4. '(
' → logprob: -20.500001907348633
    5. ' (' → logprob: -21.125001907348633
    6. '(re' → logprob: -21.875001907348633
    7. '	res' → logprob: -22.000001907348633
    8. ',res' → logprob: -22.125001907348633
    9. '=res' → logprob: -22.375001907348633
    10. ' res' → logprob: -23.625001907348633

Token 282: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.019035033881664276
    2. ',res' → logprob: -4.2690348625183105
    3. 'res' → logprob: -5.6440348625183105
    4. '(res' → logprob: -6.6440348625183105
    5. ' ,' → logprob: -11.019035339355469
    6. '(' → logprob: -13.644035339355469
    7. ')' → logprob: -14.519035339355469
    8. '	res' → logprob: -14.644035339355469
    9. ' res' → logprob: -14.894035339355469
    10. '   ' → logprob: -15.644035339355469

Token 283: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00033546582562848926
    2. ' self' → logprob: -8.000335693359375
    3. '[self' → logprob: -18.750335693359375
    4. '(self' → logprob: -19.125335693359375
    5. '           ' → logprob: -20.750335693359375
    6. '	self' → logprob: -21.000335693359375
    7. '   ' → logprob: -21.000335693359375
    8. '       ' → logprob: -21.125335693359375
    9. ' ' → logprob: -22.125335693359375
    10. '=self' → logprob: -22.250335693359375

Token 284: '.data' (ID: 3885)
  Prédit: '.data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.data' → logprob: -4.008129963040119e-06
    2. 'data' → logprob: -12.875003814697266
    3. '.' → logprob: -14.000003814697266
    4. ' .' → logprob: -15.875003814697266
    5. '`.' → logprob: -16.250003814697266
    6. '[data' → logprob: -16.250003814697266
    7. ').' → logprob: -16.625003814697266
    8. '```' → logprob: -16.750003814697266
    9. '].' → logprob: -16.875003814697266
    10. '   ' → logprob: -18.500003814697266

Token 285: '[l' (ID: 38286)
  Prédit: '[l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[l' → logprob: -6.2729995988775045e-06
    2. 'l' → logprob: -12.000006675720215
    3. '[' → logprob: -16.7500057220459
    4. '	l' → logprob: -18.6250057220459
    5. '```' → logprob: -19.0000057220459
    6. '[
' → logprob: -20.2500057220459
    7. ')' → logprob: -20.7500057220459
    8. ',l' → logprob: -21.0000057220459
    9. ')[' → logprob: -21.0000057220459
    10. '   ' → logprob: -21.5000057220459

Token 286: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.2522318661212921
    2. '])
' → logprob: -1.5022318363189697
    3. ' ])' → logprob: -8.62723159790039
    4. ' ])
' → logprob: -9.50223159790039
    5. ')' → logprob: -11.25223159790039
    6. ']);' → logprob: -11.50223159790039
    7. ')
' → logprob: -11.62723159790039
    8. '])
' → logprob: -11.87723159790039
    9. ']' → logprob: -12.25223159790039
    10. '])

' → logprob: -13.37723159790039

Token 287: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3495234251022339
    2. ' l' → logprob: -1.7245234251022339
    3. '               ' → logprob: -2.4745235443115234
    4. 'l' → logprob: -3.4745235443115234
    5. '                   ' → logprob: -7.349523544311523
    6. ',l' → logprob: -8.224523544311523
    7. ';l' → logprob: -8.974523544311523
    8. '       ' → logprob: -9.099523544311523
    9. '	l' → logprob: -9.349523544311523
    10. '   ' → logprob: -9.599523544311523

Token 288: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' (adapté à ' l') → logprob: -0.000354769523255527
    2. ' l' → logprob: -8.000354766845703
    3. '           ' → logprob: -11.000354766845703
    4. '               ' → logprob: -13.000354766845703
    5. '                   ' → logprob: -15.250354766845703
    6. '   ' → logprob: -16.500354766845703
    7. '	l' → logprob: -16.750354766845703
    8. '```' → logprob: -18.875354766845703
    9. '       ' → logprob: -19.125354766845703
    10. '+l' → logprob: -19.375354766845703

Token 289: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.014165864326059818
    2. ' +=' → logprob: -4.264165878295898
    3. ']+=' → logprob: -13.639165878295898
    4. '+' → logprob: -13.889165878295898
    5. '```' → logprob: -16.2641658782959
    6. '=' → logprob: -16.5141658782959
    7. '+=(' → logprob: -17.7641658782959
    8. '+="' → logprob: -18.5141658782959
    9. '+='' → logprob: -19.2641658782959
    10. '   ' → logprob: -19.3891658782959

Token 290: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.7697225252486533e-06
    2. ' ' → logprob: -12.500003814697266
    3. '```' → logprob: -19.750003814697266
    4. '   ' → logprob: -20.750003814697266
    5. '
' → logprob: -23.250003814697266
    6. '１' → logprob: -23.750003814697266
    7. '۱' → logprob: -23.875003814697266
    8. '  ' → logprob: -24.250003814697266
    9. '<|end|>' → logprob: -24.875003814697266
    10. '``' → logprob: -25.250003814697266

Token 291: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.0
    3. '```' → logprob: -20.125
    4. '   ' → logprob: -21.375
    5. '  ' → logprob: -23.3125
    6. '۱' → logprob: -23.3125
    7. '１' → logprob: -23.375
    8. '
' → logprob: -23.6875
    9. '१' → logprob: -24.375
    10. '<|end|>' → logprob: -24.375

Token 292: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -6.873571692267433e-05
    2. '       ' → logprob: -10.750068664550781
    3. '
' → logprob: -11.625068664550781
    4. '            
' → logprob: -12.250068664550781
    5. '​' → logprob: -12.500068664550781
    6. '          ' → logprob: -12.500068664550781
    7. '```' → logprob: -12.500068664550781
    8. '<|end|>' → logprob: -12.625068664550781
    9. '\
' → logprob: -13.000068664550781
    10. '  
' → logprob: -13.250068664550781

Token 293: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0028181932866573334
    2. '       ' → logprob: -6.7528181076049805
    3. 'r' → logprob: -7.3778181076049805
    4. ' r' → logprob: -7.7528181076049805
    5. ' if' → logprob: -8.00281810760498
    6. 'if' → logprob: -9.50281810760498
    7. '
' → logprob: -9.87781810760498
    8. '   ' → logprob: -10.25281810760498
    9. '```' → logprob: -10.50281810760498
    10. ' 
' → logprob: -11.50281810760498

Token 294: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.08457101881504059
    2. ' if' → logprob: -2.834571123123169
    3. '           ' → logprob: -3.834571123123169
    4. 'r' → logprob: -7.33457088470459
    5. '       ' → logprob: -10.20957088470459
    6. ' r' → logprob: -10.58457088470459
    7. '```' → logprob: -11.70957088470459
    8. '   ' → logprob: -12.20957088470459
    9. ' ' → logprob: -12.33457088470459
    10. '          ' → logprob: -13.45957088470459

Token 295: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.12698490917682648
    2. '(r' → logprob: -2.1269848346710205
    3. ' ' → logprob: -9.876984596252441
    4. '(l' → logprob: -12.751984596252441
    5. '   ' → logprob: -13.251984596252441
    6. '  ' → logprob: -14.876984596252441
    7. ' ' → logprob: -16.501985549926758
    8. '(res' → logprob: -16.626985549926758
    9. '(not' → logprob: -16.626985549926758
    10. '    ' → logprob: -16.876985549926758

Token 296: 'r' (ID: 81)
  Prédit: '(r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.00019018957391381264
    2. ' (' → logprob: -9.000189781188965
    3. 'r' → logprob: -9.625189781188965
    4. '   ' → logprob: -14.625189781188965
    5. '[r' → logprob: -17.00019073486328
    6. ')' → logprob: -17.12519073486328
    7. '(' → logprob: -17.75019073486328
    8. '  ' → logprob: -18.00019073486328
    9. ' r' → logprob: -18.25019073486328
    10. 'not' → logprob: -18.37519073486328

Token 297: ' &' (ID: 827)
  Prédit: ' &'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' &' → logprob: -0.002190352650359273
    2. '&' → logprob: -6.127190589904785
    3. ' ' → logprob: -12.252190589904785
    4. ' &
' → logprob: -15.377190589904785
    5. '   ' → logprob: -16.00218963623047
    6. '&amp' → logprob: -17.12718963623047
    7. '  ' → logprob: -17.37718963623047
    8. '&nbsp' → logprob: -18.00218963623047
    9. '&r' → logprob: -18.00218963623047
    10. ' ' → logprob: -18.37718963623047

Token 298: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0009119403548538685
    2. ' ' → logprob: -7.000911712646484
    3. '   ' → logprob: -15.250911712646484
    4. '  ' → logprob: -17.125911712646484
    5. '0' → logprob: -17.500911712646484
    6. ')' → logprob: -17.750911712646484
    7. '
' → logprob: -18.125911712646484
    8. 'r' → logprob: -18.125911712646484
    9. '```' → logprob: -18.563411712646484
    10. '01' → logprob: -18.688411712646484

Token 299: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0325924449716695e-05
    2. ' ' → logprob: -11.50001049041748
    3. '0' → logprob: -16.875009536743164
    4. '   ' → logprob: -17.000009536743164
    5. '```' → logprob: -18.125009536743164
    6. '
' → logprob: -18.500009536743164
    7. '  ' → logprob: -19.125009536743164
    8. '

' → logprob: -19.375009536743164
    9. ')' → logprob: -19.625009536743164
    10. 'r' → logprob: -20.000009536743164

Token 300: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006037107668817043
    2. '==' → logprob: -5.88103723526001
    3. ' ==' → logprob: -6.38103723526001
    4. ')==' → logprob: -6.50603723526001
    5. ' )' → logprob: -10.381036758422852
    6. '0' → logprob: -12.881036758422852
    7. '   ' → logprob: -13.881036758422852
    8. '```' → logprob: -14.131036758422852
    9. ']==' → logprob: -14.381036758422852
    10. '}' → logprob: -14.506036758422852

Token 301: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.31334012746810913
    2. '==' → logprob: -1.313340187072754
    3. '=' → logprob: -10.813340187072754
    4. '   ' → logprob: -10.813340187072754
    5. ' ' → logprob: -11.188340187072754
    6. '0' → logprob: -12.188340187072754
    7. ')' → logprob: -12.313340187072754
    8. ')==' → logprob: -12.438340187072754
    9. '           ' → logprob: -13.438340187072754
    10. '==
' → logprob: -13.563340187072754

Token 302: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0002619318547658622
    2. ' ' → logprob: -8.500262260437012
    3. '1' → logprob: -9.750262260437012
    4. '   ' → logprob: -15.625262260437012
    5. 'r' → logprob: -18.500261306762695
    6. '  ' → logprob: -19.125261306762695
    7. '	' → logprob: -19.750261306762695
    8. '```' → logprob: -19.812761306762695
    9. '
' → logprob: -19.875261306762695
    10. '۰' → logprob: -20.187761306762695

Token 303: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0013375049456954002
    2. '1' → logprob: -6.62633752822876
    3. ' ' → logprob: -11.376337051391602
    4. 'r' → logprob: -17.0013370513916
    5. '   ' → logprob: -17.2513370513916
    6. '
' → logprob: -18.5013370513916
    7. '	' → logprob: -19.1263370513916
    8. '  ' → logprob: -19.5638370513916
    9. '```' → logprob: -19.6888370513916
    10. '-' → logprob: -19.7513370513916

Token 304: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.009469419717788696
    2. ':' → logprob: -4.759469509124756
    3. ' :
' → logprob: -7.884469509124756
    4. '               ' → logprob: -8.009469032287598
    5. '):
' → logprob: -9.259469032287598
    6. '           ' → logprob: -10.634469032287598
    7. '       ' → logprob: -11.259469032287598
    8. ' :' → logprob: -12.259469032287598
    9. ':
' → logprob: -13.259469032287598
    10. ':

' → logprob: -13.509469032287598

Token 305: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0013177391374483705
    2. ' r' → logprob: -6.751317501068115
    3. 'r' → logprob: -10.126317977905273
    4. ' res' → logprob: -10.376317977905273
    5. ' ' → logprob: -11.126317977905273
    6. ' ' → logprob: -11.376317977905273
    7. ':
' → logprob: -11.501317977905273
    8. '              ' → logprob: -11.876317977905273
    9. '           ' → logprob: -12.251317977905273
    10. '                ' → logprob: -12.376317977905273

Token 306: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -0.06221426650881767
    2. ' res' → logprob: -2.8122143745422363
    3. '               ' → logprob: -8.562213897705078
    4. '           ' → logprob: -9.812213897705078
    5. '	res' → logprob: -15.187213897705078
    6. '       ' → logprob: -16.312213897705078
    7. '   ' → logprob: -16.687213897705078
    8. ' ' → logprob: -16.812213897705078
    9. '                   ' → logprob: -17.062213897705078
    10. 'r' → logprob: -17.312213897705078

Token 307: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3868757486343384
    2. ' =' → logprob: -1.1368757486343384
    3. '   ' → logprob: -12.886876106262207
    4. ' ' → logprob: -14.011876106262207
    5. '               ' → logprob: -14.886876106262207
    6. '           ' → logprob: -14.886876106262207
    7. '=
' → logprob: -15.636876106262207
    8. ')' → logprob: -16.01187515258789
    9. '```' → logprob: -16.38687515258789
    10. '       ' → logprob: -16.51187515258789

Token 308: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.029750484973192215
    2. ' min' → logprob: -3.5297505855560303
    3. '(min' → logprob: -17.77975082397461
    4. '	min' → logprob: -18.77975082397461
    5. '_min' → logprob: -19.77975082397461
    6. '[min' → logprob: -20.40475082397461
    7. '=min' → logprob: -21.15475082397461
    8. 'minimum' → logprob: -21.40475082397461
    9. ',min' → logprob: -21.77975082397461
    10. '.min' → logprob: -21.90475082397461

Token 309: '(res' (ID: 8331)
  Prédit: '(res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -7.896309739408025e-07
    2. '(' → logprob: -14.250000953674316
    3. 'res' → logprob: -16.875
    4. '(min' → logprob: -17.25
    5. '(
' → logprob: -17.375
    6. ',res' → logprob: -17.375
    7. '(re' → logprob: -18.125
    8. '(r' → logprob: -19.0
    9. ' (' → logprob: -19.375
    10. '=res' → logprob: -19.75

Token 310: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001894960179924965
    2. '(res' → logprob: -7.001894950866699
    3. '(self' → logprob: -7.251894950866699
    4. ',res' → logprob: -8.3768949508667
    5. ',self' → logprob: -10.3768949508667
    6. ' ,' → logprob: -11.5018949508667
    7. 'res' → logprob: -13.5018949508667
    8. 'self' → logprob: -14.6268949508667
    9. '(' → logprob: -15.1268949508667
    10. ',
' → logprob: -16.001895904541016

Token 311: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.005235291086137295
    2. ' self' → logprob: -5.255235195159912
    3. '[self' → logprob: -14.25523567199707
    4. '(self' → logprob: -14.38023567199707
    5. '   ' → logprob: -16.00523567199707
    6. ' ' → logprob: -16.63023567199707
    7. '	self' → logprob: -16.75523567199707
    8. ')' → logprob: -17.38023567199707
    9. '=self' → logprob: -17.63023567199707
    10. '```' → logprob: -17.63023567199707

Token 312: '.data' (ID: 3885)
  Prédit: '.data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.data' → logprob: -0.1039501503109932
    2. '[r' → logprob: -2.353950262069702
    3. 'data' → logprob: -5.603950023651123
    4. '[data' → logprob: -10.478950500488281
    5. '[' → logprob: -11.603950500488281
    6. ' data' → logprob: -12.353950500488281
    7. 'r' → logprob: -12.853950500488281
    8. '```' → logprob: -13.978950500488281
    9. '   ' → logprob: -14.103950500488281
    10. '	data' → logprob: -14.228950500488281

Token 313: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -5.512236498361744e-07
    2. 'r' → logprob: -15.000000953674316
    3. ',r' → logprob: -16.5
    4. '[' → logprob: -18.125
    5. '   ' → logprob: -19.625
    6. '(r' → logprob: -20.125
    7. ',' → logprob: -20.125
    8. ' r' → logprob: -20.625
    9. '	r' → logprob: -21.25
    10. '[
' → logprob: -21.75

Token 314: '])
' (ID: 5169)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.008682643994688988
    2. ')' → logprob: -4.758682727813721
    3. '               ' → logprob: -9.758682250976562
    4. ')
' → logprob: -11.758682250976562
    5. 'r' → logprob: -14.258682250976562
    6. ' )
' → logprob: -14.383682250976562
    7. ']
' → logprob: -14.758682250976562
    8. '           ' → logprob: -15.008682250976562
    9. '')
' → logprob: -16.508682250976562
    10. ')

' → logprob: -16.633682250976562

Token 315: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00048644188791513443
    2. '           ' → logprob: -8.375486373901367
    3. 'r' → logprob: -9.000486373901367
    4. ' r' → logprob: -9.125486373901367
    5. '                
' → logprob: -12.125486373901367
    6. '                   ' → logprob: -12.500486373901367
    7. '
' → logprob: -12.500486373901367
    8. '              ' → logprob: -12.625486373901367
    9. '       ' → logprob: -14.000486373901367
    10. '```' → logprob: -14.000486373901367

Token 316: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' (adapté à ' r') → logprob: -0.6933276653289795
    2. ' r' → logprob: -0.6933276653289795
    3. '               ' → logprob: -8.693327903747559
    4. '           ' → logprob: -11.318327903747559
    5. '                   ' → logprob: -15.318327903747559
    6. '   ' → logprob: -16.193326950073242
    7. '       ' → logprob: -16.193326950073242
    8. '                ' → logprob: -17.443326950073242
    9. '              ' → logprob: -17.443326950073242
    10. '	r' → logprob: -17.818326950073242

Token 317: ' -=' (ID: 12583)
  Prédit: ' -='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.3869021236896515
    2. '-=' → logprob: -1.136902093887329
    3. '-' → logprob: -10.51190185546875
    4. ' -' → logprob: -13.76190185546875
    5. '   ' → logprob: -13.88690185546875
    6. ' ' → logprob: -14.26190185546875
    7. '+=' → logprob: -14.76190185546875
    8. ')' → logprob: -15.26190185546875
    9. ' +=' → logprob: -15.63690185546875
    10. ' ' → logprob: -15.88690185546875

Token 318: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.10020667314529419
    2. ' ' → logprob: -2.3502066135406494
    3. '   ' → logprob: -17.85020637512207
    4. ' ' → logprob: -19.35020637512207
    5. '```' → logprob: -19.72520637512207
    6. '<|end|>' → logprob: -20.47520637512207
    7. '       ' → logprob: -20.85020637512207
    8. '  ' → logprob: -20.85020637512207
    9. '0' → logprob: -20.85020637512207
    10. '-' → logprob: -20.97520637512207

Token 319: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.375000953674316
    3. '```' → logprob: -18.125
    4. '<|end|>' → logprob: -20.375
    5. '   ' → logprob: -20.5
    6. 'r' → logprob: -21.5
    7. '۱' → logprob: -21.75
    8. '１' → logprob: -22.0
    9. '0' → logprob: -22.25
    10. '  ' → logprob: -22.8125

Token 320: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -5.037835580878891e-05
    2. '
' → logprob: -11.12505054473877
    3. '       ' → logprob: -11.37505054473877
    4. '            
' → logprob: -11.62505054473877
    5. '          ' → logprob: -12.87505054473877
    6. '               ' → logprob: -12.87505054473877
    7. '\n' → logprob: -13.62505054473877
    8. '<|end|>' → logprob: -13.62505054473877
    9. '  
' → logprob: -13.75005054473877
    10. '    
' → logprob: -13.87505054473877

Token 321: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00023750975378789008
    2. '       ' → logprob: -8.875237464904785
    3. ' l' → logprob: -9.500237464904785
    4. '   ' → logprob: -11.750237464904785
    5. '          ' → logprob: -12.500237464904785
    6. '               ' → logprob: -12.625237464904785
    7. 'r' → logprob: -13.750237464904785
    8. 'l' → logprob: -13.875237464904785
    9. '		' → logprob: -14.000237464904785
    10. ' r' → logprob: -14.250237464904785

Token 322: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' (adapté à ' l') → logprob: -0.0018610459519550204
    2. ' l' → logprob: -7.001861095428467
    3. '           ' → logprob: -7.001861095428467
    4. '       ' → logprob: -10.751860618591309
    5. '   ' → logprob: -11.126860618591309
    6. '	l' → logprob: -13.126860618591309
    7. ' ' → logprob: -14.501860618591309
    8. ',l' → logprob: -16.126861572265625
    9. '_l' → logprob: -16.251861572265625
    10. '```' → logprob: -17.251861572265625

Token 323: ' >>=' (ID: 81952)
  Prédit: '>>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>>' → logprob: -0.41435444355010986
    2. ' >>=' → logprob: -1.1643544435501099
    3. '+=' → logprob: -3.6643543243408203
    4. ' +=' → logprob: -6.66435432434082
    5. '>>>' → logprob: -9.91435432434082
    6. ',' → logprob: -9.91435432434082
    7. ' <<=' → logprob: -10.03935432434082
    8. '>' → logprob: -11.28935432434082
    9. ' >>' → logprob: -11.53935432434082
    10. '≫' → logprob: -11.91435432434082

Token 324: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.988221684878226e-06
    2. ' ' → logprob: -11.875006675720215
    3. '```' → logprob: -19.00000762939453
    4. '
' → logprob: -21.62500762939453
    5. '   ' → logprob: -21.87500762939453
    6. '１' → logprob: -22.62500762939453
    7. '0' → logprob: -22.75000762939453
    8. '<|end|>' → logprob: -23.00000762939453
    9. ' ' → logprob: -23.37500762939453
    10. '۱' → logprob: -23.50000762939453

Token 325: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -16.875
    3. '0' → logprob: -19.875
    4. '```' → logprob: -20.5
    5. '   ' → logprob: -21.25
    6. '
' → logprob: -22.25
    7. '１' → logprob: -22.625
    8. '۱' → logprob: -23.4375
    9. '१' → logprob: -23.8125
    10. '' → logprob: -23.8125

Token 326: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07633410394191742
    2. 'r' → logprob: -3.201333999633789
    3. '       ' → logprob: -4.326333999633789
    4. '
' → logprob: -4.826333999633789
    5. ' r' → logprob: -5.076333999633789
    6. ';r' → logprob: -6.576333999633789
    7. '>>' → logprob: -6.701333999633789
    8. '<|end|>' → logprob: -7.826333999633789
    9. ',r' → logprob: -8.076333999633789
    10. '>>>' → logprob: -8.201333999633789

Token 327: '           ' (ID: 352)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.3747211992740631
    2. '           ' → logprob: -1.7497211694717407
    3. ' r' → logprob: -1.9997211694717407
    4. '       ' → logprob: -6.874721050262451
    5. ' ' → logprob: -7.749721050262451
    6. '
' → logprob: -7.874721050262451
    7. '   ' → logprob: -8.12472152709961
    8. ',r' → logprob: -8.12472152709961
    9. ' 
' → logprob: -8.99972152709961
    10. '	r' → logprob: -9.37472152709961

Token 328: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' (adapté à ' r') → logprob: -1.306760805164231e-05
    2. ' r' → logprob: -11.25001335144043
    3. '           ' → logprob: -21.12501335144043
    4. '	r' → logprob: -21.62501335144043
    5. '   ' → logprob: -21.75001335144043
    6. '_r' → logprob: -23.50001335144043
    7. ',r' → logprob: -23.87501335144043
    8. '       ' → logprob: -24.50001335144043
    9. ' ' → logprob: -25.00001335144043
    10. '[r' → logprob: -25.12501335144043

Token 329: ' >>=' (ID: 81952)
  Prédit: '>>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>>' → logprob: -0.0002978048287332058
    2. ' >>=' → logprob: -8.125297546386719
    3. '>' → logprob: -13.750297546386719
    4. '=' → logprob: -15.375297546386719
    5. '>>>' → logprob: -16.00029754638672
    6. '≫' → logprob: -16.62529754638672
    7. '//=' → logprob: -16.75029754638672
    8. '>>&' → logprob: -17.12529754638672
    9. '&gt' → logprob: -17.50029754638672
    10. '>>,' → logprob: -17.50029754638672

Token 330: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.451116051815916e-05
    2. ' ' → logprob: -10.625024795532227
    3. '   ' → logprob: -16.750024795532227
    4. '0' → logprob: -17.500024795532227
    5. '```' → logprob: -19.250024795532227
    6. '  ' → logprob: -19.812524795532227
    7. '2' → logprob: -19.875024795532227
    8. '	' → logprob: -20.375024795532227
    9. '۱' → logprob: -20.625024795532227
    10. '
' → logprob: -20.687524795532227

Token 331: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.875
    3. '   ' → logprob: -20.375
    4. '
' → logprob: -21.875
    5. '0' → logprob: -22.25
    6. '```' → logprob: -22.25
    7. '１' → logprob: -22.625
    8. '  ' → logprob: -23.6875
    9. '۱' → logprob: -23.6875
    10. '2' → logprob: -23.6875

Token 332: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0004933410091325641
    2. 'return' → logprob: -8.125493049621582
    3. '<|end|>' → logprob: -9.375493049621582
    4. ' return' → logprob: -9.875493049621582
    5. '
' → logprob: -10.375493049621582
    6. '        
' → logprob: -11.875493049621582
    7. '   ' → logprob: -12.000493049621582
    8. '	return' → logprob: -12.875493049621582
    9. '      ' → logprob: -13.375493049621582
    10. ':return' → logprob: -13.500493049621582

Token 333: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0014808172127231956
    2. ' return' → logprob: -7.251480579376221
    3. 'return' → logprob: -7.501480579376221
    4. '<|end|>' → logprob: -8.876481056213379
    5. '   ' → logprob: -10.626481056213379
    6. ':return' → logprob: -11.001481056213379
    7. '
' → logprob: -12.001481056213379
    8. '	return' → logprob: -12.001481056213379
    9. '        
' → logprob: -12.126481056213379
    10. '           ' → logprob: -13.001481056213379

Token 334: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.004678253084421158
    2. ' return' → logprob: -5.754678249359131
    3. '       ' → logprob: -6.504678249359131
    4. '	return' → logprob: -13.879678726196289
    5. ':return' → logprob: -14.129678726196289
    6. '   ' → logprob: -14.379678726196289
    7. '
' → logprob: -15.129678726196289
    8. '{return' → logprob: -15.379678726196289
    9. '```' → logprob: -16.00467872619629
    10. 'eturn' → logprob: -16.75467872619629

Token 335: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.0031777136027812958
    2. ' res' → logprob: -5.753177642822266
    3. '(res' → logprob: -21.253177642822266
    4. '	res' → logprob: -22.003177642822266
    5. '$res' → logprob: -24.503177642822266
    6. '_res' → logprob: -25.378177642822266
    7. ' ' → logprob: -25.628177642822266
    8. ' ' → logprob: -26.003177642822266
    9. 're' → logprob: -26.378177642822266
    10. 'r' → logprob: -26.753177642822266

Token 336: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 337: 'def' (ID: 1314)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.7331402897834778
    2. 'def' → logprob: -0.7331402897834778
    3. 'if' → logprob: -4.108140468597412
    4. 'Q' → logprob: -4.483140468597412
    5. 'N' → logprob: -5.108140468597412
    6. '#' → logprob: -5.733140468597412
    7. 't' → logprob: -7.608140468597412
    8. 'q' → logprob: -7.608140468597412
    9. 'import' → logprob: -8.733139991760254
    10. 'T' → logprob: -8.858139991760254

Token 338: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.00044926130794920027
    2. ' solve' → logprob: -8.375449180603027
    3. 'main' → logprob: -8.500449180603027
    4. '	main' → logprob: -12.000449180603027
    5. '_main' → logprob: -12.875449180603027
    6. 'solve' → logprob: -13.000449180603027
    7. ' ' → logprob: -13.500449180603027
    8. ' dfs' → logprob: -13.750449180603027
    9. '_' → logprob: -14.500449180603027
    10. ' solution' → logprob: -14.625449180603027

Token 339: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -2.47495681833243e-05
    2. ' ():' → logprob: -10.875024795532227
    3. '(' → logprob: -12.250024795532227
    4. '()' → logprob: -14.250024795532227
    5. '():
' → logprob: -15.750024795532227
    6. '(:' → logprob: -16.125024795532227
    7. '(":' → logprob: -16.250024795532227
    8. ':' → logprob: -18.625024795532227
    9. '()>' → logprob: -19.125024795532227
    10. '().' → logprob: -19.250024795532227

Token 340: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.042378831654787064
    2. 'n' → logprob: -3.7923789024353027
    3. ' n' → logprob: -4.042378902435303
    4. '(n' → logprob: -7.292378902435303
    5. '```' → logprob: -8.292378425598145
    6. '	n' → logprob: -8.417378425598145
    7. '    ' → logprob: -9.917378425598145
    8. '    
' → logprob: -10.542378425598145
    9. '  ' → logprob: -10.667378425598145
    10. ' readline' → logprob: -10.792378425598145

Token 341: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.08222591131925583
    2. ' n' → logprob: -2.582225799560547
    3. 'N' → logprob: -5.832225799560547
    4. ' N' → logprob: -8.582225799560547
    5. '   ' → logprob: -9.207225799560547
    6. 't' → logprob: -9.832225799560547
    7. 'q' → logprob: -10.582225799560547
    8. 'Q' → logprob: -11.082225799560547
    9. ' t' → logprob: -11.582225799560547
    10. ' Q' → logprob: -12.582225799560547

Token 342: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1035979688167572
    2. ' =' → logprob: -2.35359787940979
    3. '=' → logprob: -5.978598117828369
    4. ' ,' → logprob: -7.103598117828369
    5. '=int' → logprob: -10.978597640991211
    6. ',k' → logprob: -12.228597640991211
    7. ' ' → logprob: -12.978597640991211
    8. ',int' → logprob: -13.478597640991211
    9. ',n' → logprob: -13.478597640991211
    10. ',m' → logprob: -14.353597640991211

Token 343: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.5548816919326782
    2. 'm' → logprob: -1.3048816919326782
    3. 'k' → logprob: -1.9298816919326782
    4. ' q' → logprob: -5.804881572723389
    5. '=' → logprob: -6.179881572723389
    6. 'Q' → logprob: -6.804881572723389
    7. ' m' → logprob: -7.054881572723389
    8. ' k' → logprob: -7.054881572723389
    9. 'x' → logprob: -7.304881572723389
    10. ' =' → logprob: -7.804881572723389

Token 344: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07889022678136826
    2. ' =' → logprob: -2.578890323638916
    3. '=input' → logprob: -15.203889846801758
    4. ',' → logprob: -15.453889846801758
    5. ')' → logprob: -17.328889846801758
    6. '=sys' → logprob: -17.328889846801758
    7. '=list' → logprob: -17.953889846801758
    8. ')=' → logprob: -18.203889846801758
    9. '＝' → logprob: -18.203889846801758
    10. '=int' → logprob: -18.578889846801758

Token 345: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.04858759790658951
    2. 'map' → logprob: -3.0485875606536865
    3. '	map' → logprob: -15.548587799072266
    4. ' ' → logprob: -16.548587799072266
    5. '   ' → logprob: -19.173587799072266
    6. 'm' → logprob: -19.923587799072266
    7. '(map' → logprob: -19.923587799072266
    8. ' list' → logprob: -20.048587799072266
    9. '  ' → logprob: -20.298587799072266
    10. ' ' → logprob: -20.423587799072266

Token 346: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.001177608733996749
    2. '(' → logprob: -6.876177787780762
    3. '(input' → logprob: -9.001177787780762
    4. '(str' → logprob: -11.501177787780762
    5. '(list' → logprob: -12.251177787780762
    6. 'int' → logprob: -12.501177787780762
    7. '(in' → logprob: -14.376177787780762
    8. '[int' → logprob: -14.376177787780762
    9. '(lambda' → logprob: -15.001177787780762
    10. '(
' → logprob: -15.251177787780762

Token 347: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.13393189013004303
    2. ',input' → logprob: -2.258931875228882
    3. 'input' → logprob: -4.508932113647461
    4. '(sys' → logprob: -5.508932113647461
    5. ',' → logprob: -5.633932113647461
    6. 'sys' → logprob: -7.008932113647461
    7. '=input' → logprob: -7.508932113647461
    8. '(' → logprob: -7.633932113647461
    9. ' (' → logprob: -9.508932113647461
    10. ')' → logprob: -9.758932113647461

Token 348: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.001170225441455841
    2. ' input' → logprob: -6.7511701583862305
    3. '=input' → logprob: -19.501171112060547
    4. 'sys' → logprob: -19.876171112060547
    5. '_input' → logprob: -20.376171112060547
    6. '(input' → logprob: -20.626171112060547
    7. ' ' → logprob: -20.876171112060547
    8. '	input' → logprob: -20.876171112060547
    9. ',input' → logprob: -21.001171112060547
    10. ')' → logprob: -21.626171112060547

Token 349: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.000158842682139948
    2. '()' → logprob: -8.75015926361084
    3. '())' → logprob: -15.37515926361084
    4. ' ().' → logprob: -16.625158309936523
    5. '()
' → logprob: -17.625158309936523
    6. '(' → logprob: -19.125158309936523
    7. '()[' → logprob: -19.250158309936523
    8. '()\' → logprob: -20.125158309936523
    9. '().__' → logprob: -20.500158309936523
    10. ' ()' → logprob: -20.500158309936523

Token 350: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.024138307198882103
    2. 'strip' → logprob: -3.7741382122039795
    3. 'rstrip' → logprob: -7.024138450622559
    4. 'read' → logprob: -14.149138450622559
    5. '().' → logprob: -14.149138450622559
    6. ' split' → logprob: -14.399138450622559
    7. '(split' → logprob: -15.274138450622559
    8. ' strip' → logprob: -16.524137496948242
    9. '_split' → logprob: -18.024137496948242
    10. '.split' → logprob: -18.149137496948242

Token 351: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.621120810508728
    2. '())' → logprob: -0.871120810508728
    3. '()' → logprob: -3.1211209297180176
    4. '())
' → logprob: -10.12112045288086
    5. ')
' → logprob: -11.49612045288086
    6. '(' → logprob: -11.74612045288086
    7. '()
' → logprob: -12.62112045288086
    8. '))' → logprob: -12.99612045288086
    9. ' )' → logprob: -13.62112045288086
    10. '().' → logprob: -14.99612045288086

Token 352: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.34446972608566284
    2. 'data' → logprob: -1.8444697856903076
    3. ' data' → logprob: -2.4694697856903076
    4. 'arr' → logprob: -3.5944697856903076
    5. 'a' → logprob: -4.9694695472717285
    6. '    
' → logprob: -5.2194695472717285
    7. ' arr' → logprob: -6.2194695472717285
    8. 'array' → logprob: -6.3444695472717285
    9. ' array' → logprob: -6.5944695472717285
    10. ' a' → logprob: -7.0944695472717285

Token 353: ' a' (ID: 261)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.967041552066803
    2. 'arr' → logprob: -1.0920414924621582
    3. 'a' (adapté à ' a') → logprob: -1.3420414924621582
    4. 'A' → logprob: -4.092041492462158
    5. ' data' → logprob: -5.342041492462158
    6. ' arr' → logprob: -7.342041492462158
    7. ' a' → logprob: -7.717041492462158
    8. ' A' → logprob: -8.717041969299316
    9. '   ' → logprob: -9.092041969299316
    10. 'lst' → logprob: -10.967041969299316

Token 354: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2014162540435791
    2. '=' → logprob: -1.701416254043579
    3. '[' → logprob: -12.951416015625
    4. ' =[' → logprob: -15.451416015625
    5. ',' → logprob: -16.076416015625
    6. '=[' → logprob: -16.451416015625
    7. ' ' → logprob: -17.076416015625
    8. '[:]' → logprob: -17.326416015625
    9. '=[]' → logprob: -17.451416015625
    10. ')' → logprob: -17.826416015625

Token 355: ' [' (ID: 723)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.038088537752628326
    2. ' list' → logprob: -3.28808856010437
    3. '[list' → logprob: -10.03808879852295
    4. '[' → logprob: -12.78808879852295
    5. ' [' → logprob: -14.53808879852295
    6. '=list' → logprob: -18.163087844848633
    7. '[l' → logprob: -18.288087844848633
    8. 'List' → logprob: -19.038087844848633
    9. '	list' → logprob: -19.163087844848633
    10. '[]' → logprob: -19.663087844848633

Token 356: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.00012809180771000683
    2. '0' → logprob: -9.125127792358398
    3. '*' → logprob: -11.125127792358398
    4. ']int' → logprob: -13.250127792358398
    5. ' int' → logprob: -13.375127792358398
    6. ']' → logprob: -14.750127792358398
    7. 'float' → logprob: -14.875127792358398
    8. ']*' → logprob: -16.3751277923584
    9. '1' → logprob: -16.7501277923584
    10. '(int' → logprob: -17.0001277923584

Token 357: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.004130049608647823
    2. '(x' → logprob: -5.504129886627197
    3. '(' → logprob: -10.254130363464355
    4. 'input' → logprob: -11.629130363464355
    5. '(i' → logprob: -12.004130363464355
    6. '(
' → logprob: -15.004130363464355
    7. '=input' → logprob: -15.379130363464355
    8. '()' → logprob: -15.379130363464355
    9. ',input' → logprob: -15.754130363464355
    10. '(a' → logprob: -16.25412940979004

Token 358: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.07970105856657028
    2. '()' → logprob: -2.5797009468078613
    3. '()]' → logprob: -7.329700946807861
    4. '().' → logprob: -9.20470142364502
    5. '()
' → logprob: -10.32970142364502
    6. '())
' → logprob: -11.32970142364502
    7. '()),' → logprob: -12.57970142364502
    8. ')' → logprob: -13.07970142364502
    9. ' ())' → logprob: -14.07970142364502
    10. '（）' → logprob: -14.07970142364502

Token 359: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0003802680876106024
    2. 'for' → logprob: -9.000380516052246
    3. '()]' → logprob: -9.000380516052246
    4. ' for' → logprob: -9.250380516052246
    5. '())' → logprob: -11.500380516052246
    6. '(' → logprob: -11.500380516052246
    7. ')' → logprob: -11.875380516052246
    8. ' ()' → logprob: -12.500380516052246
    9. '()
' → logprob: -13.250380516052246
    10. '()[' → logprob: -13.875380516052246

Token 360: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.17163144052028656
    2. ' range' → logprob: -2.296631336212158
    3. 'range' → logprob: -2.921631336212158
    4. '_range' → logprob: -6.421631336212158
    5. ' _' → logprob: -6.671631336212158
    6. ' in' → logprob: -8.171631813049316
    7. 'in' → logprob: -10.171631813049316
    8. 'i' → logprob: -11.046631813049316
    9. '_in' → logprob: -11.296631813049316
    10. '	range' → logprob: -11.671631813049316

Token 361: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0007435183506458998
    2. ' range' → logprob: -7.250743389129639
    3. '(range' → logprob: -11.125743865966797
    4. 'in' → logprob: -11.250743865966797
    5. ' in' → logprob: -12.250743865966797
    6. '   ' → logprob: -14.750743865966797
    7. '	range' → logprob: -14.750743865966797
    8. '  ' → logprob: -15.875743865966797
    9. ' ' → logprob: -16.375743865966797
    10. '.range' → logprob: -17.125743865966797

Token 362: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -5.860340752406046e-05
    2. ' range' → logprob: -9.7500581741333
    3. '(range' → logprob: -15.1250581741333
    4. '	range' → logprob: -18.375059127807617
    5. 'r' → logprob: -19.500059127807617
    6. '[' → logprob: -19.625059127807617
    7. ')' → logprob: -19.750059127807617
    8. '.range' → logprob: -20.000059127807617
    9. ']' → logprob: -20.500059127807617
    10. '   ' → logprob: -20.625059127807617

Token 363: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -6.749814019713085e-06
    2. '(q' → logprob: -12.500006675720215
    3. 'n' → logprob: -13.250006675720215
    4. '(' → logprob: -13.625006675720215
    5. ' n' → logprob: -18.37500762939453
    6. 'q' → logprob: -19.00000762939453
    7. ' (' → logprob: -19.00000762939453
    8. '	n' → logprob: -19.37500762939453
    9. '(
' → logprob: -19.50000762939453
    10. ')n' → logprob: -20.50000762939453

Token 364: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.031823914498090744
    2. ')' → logprob: -4.156824111938477
    3. ']' → logprob: -4.156824111938477
    4. ')],' → logprob: -13.656824111938477
    5. ' ]' → logprob: -13.656824111938477
    6. '])' → logprob: -13.781824111938477
    7. ' )' → logprob: -13.781824111938477
    8. ')])' → logprob: -13.906824111938477
    9. ')
' → logprob: -14.656824111938477
    10. '   ' → logprob: -14.906824111938477

Token 365: '   ' (ID: 271)
  Prédit: ' seg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' seg' → logprob: -0.8614268898963928
    2. 'st' → logprob: -1.611426830291748
    3. '   ' → logprob: -2.111426830291748
    4. 'seg' → logprob: -2.236426830291748
    5. ' st' → logprob: -2.361426830291748
    6. 'tree' → logprob: -3.486426830291748
    7. ' tree' → logprob: -3.736426830291748
    8. 'segment' → logprob: -7.486426830291748
    9. ' segment' → logprob: -8.736427307128906
    10. '    
' → logprob: -8.986427307128906

Token 366: ' seg' (ID: 3055)
  Prédit: 'st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'st' → logprob: -0.7953289151191711
    2. 'seg' (adapté à ' seg') → logprob: -1.4203288555145264
    3. ' seg' → logprob: -1.5453288555145264
    4. ' st' → logprob: -3.0453288555145264
    5. '   ' → logprob: -3.1703288555145264
    6. 'tree' → logprob: -5.9203290939331055
    7. ' tree' → logprob: -7.4203290939331055
    8. 'segment' → logprob: -7.4203290939331055
    9. ' segment' → logprob: -9.670329093933105
    10. '    
' → logprob: -10.045329093933105

Token 367: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14498738944530487
    2. 'tree' → logprob: -2.0199873447418213
    3. '=' → logprob: -6.3949875831604
    4. '_tree' → logprob: -7.3949875831604
    5. 'Tree' → logprob: -11.269987106323242
    6. '   ' → logprob: -12.394987106323242
    7. ' tree' → logprob: -12.894987106323242
    8. 't' → logprob: -13.269987106323242
    9. 'ment' → logprob: -14.769987106323242
    10. '  ' → logprob: -15.019987106323242

Token 368: ' Segment' (ID: 64922)
  Prédit: 'Segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Segment' → logprob: -0.048587486147880554
    2. ' Segment' → logprob: -3.0485875606536865
    3. 'Seg' → logprob: -16.173587799072266
    4. ' Seg' → logprob: -18.173587799072266
    5. '_segment' → logprob: -19.298587799072266
    6. ' segment' → logprob: -19.548587799072266
    7. 'Segments' → logprob: -19.923587799072266
    8. 'segment' → logprob: -20.173587799072266
    9. '   ' → logprob: -20.298587799072266
    10. ' ' → logprob: -22.798587799072266

Token 369: 'Tree' (ID: 8062)
  Prédit: 'Tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tree' → logprob: 0.0
    2. 'tree' → logprob: -18.125
    3. '	Tree' → logprob: -18.25
    4. '<Tree' → logprob: -18.375
    5. ' Tree' → logprob: -18.625
    6. '_tree' → logprob: -18.875
    7. 'Segment' → logprob: -19.75
    8. '(Tree' → logprob: -19.875
    9. '_TREE' → logprob: -20.875
    10. '.Tree' → logprob: -20.875

Token 370: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -6.704273118884885e-07
    2. 'a' → logprob: -14.375000953674316
    3. '(' → logprob: -16.625
    4. ' (' → logprob: -18.75
    5. ' a' → logprob: -20.5
    6. '(
' → logprob: -21.5
    7. '(n' → logprob: -22.5
    8. '((' → logprob: -22.625
    9. '[a' → logprob: -22.875
    10. '(arr' → logprob: -23.0

Token 371: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.961759259458631e-06
    2. ')
' → logprob: -12.500004768371582
    3. '   ' → logprob: -14.000004768371582
    4. ' )' → logprob: -15.375004768371582
    5. '))' → logprob: -16.3750057220459
    6. ')n' → logprob: -17.1250057220459
    7. '())' → logprob: -18.7500057220459
    8. ')

' → logprob: -18.7500057220459
    9. ')`' → logprob: -19.0000057220459
    10. '),' → logprob: -19.0000057220459

Token 372: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.22725874185562134
    2. '   ' → logprob: -2.2272586822509766
    3. ' for' → logprob: -2.3522586822509766
    4. '	for' → logprob: -8.852258682250977
    5. '```' → logprob: -9.102258682250977
    6. '
' → logprob: -10.727258682250977
    7. '<|end|>' → logprob: -10.727258682250977
    8. '    
' → logprob: -12.102258682250977
    9. '  ' → logprob: -13.727258682250977
    10. 'while' → logprob: -14.852258682250977

Token 373: ' a' (ID: 261)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0014323819195851684
    2. ' for' → logprob: -6.751432418823242
    3. '   ' → logprob: -8.251432418823242
    4. '	for' → logprob: -13.626432418823242
    5. '
' → logprob: -17.501432418823242
    6. '```' → logprob: -17.501432418823242
    7. '    
' → logprob: -17.751432418823242
    8. 'result' → logprob: -18.876432418823242
    9. '  ' → logprob: -19.251432418823242
    10. ' ' → logprob: -19.376432418823242

Token 374: '_list' (ID: 4162)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3636549711227417
    2. '[' → logprob: -1.4886549711227417
    3. '=' → logprob: -4.238655090332031
    4. '_' → logprob: -4.488655090332031
    5. ')' → logprob: -4.738655090332031
    6. ',' → logprob: -4.988655090332031
    7. '.append' → logprob: -5.363655090332031
    8. '[:]' → logprob: -5.363655090332031
    9. 'for' → logprob: -5.613655090332031
    10. 'def' → logprob: -5.988655090332031

Token 375: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11509478837251663
    2. '=' → logprob: -2.2400949001312256
    3. '[' → logprob: -6.9900946617126465
    4. '   ' → logprob: -8.115095138549805
    5. '=[]' → logprob: -8.115095138549805
    6. '[:]' → logprob: -8.365095138549805
    7. '[]' → logprob: -8.740095138549805
    8. '(' → logprob: -9.115095138549805
    9. '.append' → logprob: -9.365095138549805
    10. ',' → logprob: -9.990095138549805

Token 376: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3348093330860138
    2. '[a' → logprob: -1.8348093032836914
    3. '[]' → logprob: -2.3348093032836914
    4. ' a' → logprob: -4.084809303283691
    5. '[' → logprob: -5.459809303283691
    6. 'list' → logprob: -5.959809303283691
    7. ' []' → logprob: -5.959809303283691
    8. ' [' → logprob: -6.584809303283691
    9. ' list' → logprob: -8.459809303283691
    10. '[:]' → logprob: -9.209809303283691

Token 377: ' ' (ID: 220)
  Prédit: '.copy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.copy' → logprob: -0.4983438551425934
    2. '
' → logprob: -1.123343825340271
    3. '[:]' → logprob: -2.8733439445495605
    4. '[:' → logprob: -5.2483439445495605
    5. '_copy' → logprob: -6.4983439445495605
    6. '   ' → logprob: -7.1233439445495605
    7. '[' → logprob: -7.1233439445495605
    8. 'copy' → logprob: -7.6233439445495605
    9. '    
' → logprob: -7.8733439445495605
    10. '.' → logprob: -8.123343467712402

Token 378: ' #' (ID: 1069)
  Prédit: '[:]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[:]' → logprob: -0.47625529766082764
    2. '.copy' → logprob: -0.9762552976608276
    3. '[:' → logprob: -6.226255416870117
    4. '.' → logprob: -9.601255416870117
    5. 'copy' → logprob: -10.226255416870117
    6. '[' → logprob: -10.351255416870117
    7. '=' → logprob: -10.976255416870117
    8. '<|end|>' → logprob: -11.101255416870117
    9. '_copy' → logprob: -11.976255416870117
    10. '[::-' → logprob: -11.976255416870117

Token 379: ' We'll' (ID: 46830)
  Prédit: '[:]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[:]' → logprob: -0.14362797141075134
    2. '.copy' → logprob: -2.393627882003784
    3. 'a' → logprob: -4.518628120422363
    4. '[]' → logprob: -4.768628120422363
    5. 'copy' → logprob: -5.393628120422363
    6. ' copy' → logprob: -5.518628120422363
    7. '[' → logprob: -5.643628120422363
    8. '[:' → logprob: -6.018628120422363
    9. ' a' → logprob: -6.143628120422363
    10. '[a' → logprob: -6.518628120422363

Token 380: ' keep' (ID: 3357)
  Prédit: 'keep'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'keep' → logprob: -0.9510452747344971
    2. ' keep' → logprob: -1.326045274734497
    3. 'copy' → logprob: -2.201045274734497
    4. 'use' → logprob: -2.576045274734497
    5. ' use' → logprob: -2.826045274734497
    6. 'store' → logprob: -3.201045274734497
    7. ' copy' → logprob: -3.951045274734497
    8. ' store' → logprob: -4.326045036315918
    9. 'continue' → logprob: -5.076045036315918
    10. 'make' → logprob: -5.076045036315918

Token 381: ' array' (ID: 2644)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.015475330874323845
    2. ' a' → logprob: -4.265475273132324
    3. 'the' → logprob: -7.890475273132324
    4. ' the' → logprob: -8.515475273132324
    5. '[a' → logprob: -8.765475273132324
    6. '[]' → logprob: -8.765475273132324
    7. 'using' → logprob: -9.015475273132324
    8. 'copy' → logprob: -9.765475273132324
    9. 'list' → logprob: -9.890475273132324
    10. 'reference' → logprob: -10.265475273132324

Token 382: ' for' (ID: 395)
  Prédit: ' as'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' as' → logprob: -0.9340336322784424
    2. '<|end|>' → logprob: -2.1840336322784424
    3. 'as' → logprob: -2.3090336322784424
    4. 'a' → logprob: -2.6840336322784424
    5. ' updated' → logprob: -3.0590336322784424
    6. ' for' → logprob: -3.0590336322784424
    7. 'updated' → logprob: -3.1840336322784424
    8. '[:]' → logprob: -3.6840336322784424
    9. '=' → logprob: -3.9340336322784424
    10. ' =' → logprob: -4.184033393859863

Token 383: ' shifting' (ID: 53586)
  Prédit: 'updates'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'updates' → logprob: -0.3377411365509033
    2. 'reference' → logprob: -1.4627411365509033
    3. ' reference' → logprob: -4.337740898132324
    4. 'tracking' → logprob: -4.712740898132324
    5. ' updates' → logprob: -5.462740898132324
    6. 'up' → logprob: -5.462740898132324
    7. 'direct' → logprob: -5.587740898132324
    8. 'a' → logprob: -5.837740898132324
    9. 'update' → logprob: -6.462740898132324
    10. 'index' → logprob: -6.587740898132324

Token 384: ' and' (ID: 326)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005072702653706074
    2. '
' → logprob: -5.880072593688965
    3. '    
' → logprob: -6.630072593688965
    4. ' for' → logprob: -8.255072593688965
    5. 'for' → logprob: -8.380072593688965
    6. ',' → logprob: -9.255072593688965
    7. 'shift' → logprob: -9.380072593688965
    8. 'def' → logprob: -10.255072593688965
    9. 'a' → logprob: -10.380072593688965
    10. ' shift' → logprob: -10.505072593688965

Token 385: ' updating' (ID: 34543)
  Prédit: 'up'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'up' → logprob: -0.48995280265808105
    2. 'updates' → logprob: -1.864952802658081
    3. 'query' → logprob: -2.114952802658081
    4. 'index' → logprob: -3.989952802658081
    5. 'queries' → logprob: -4.11495304107666
    6. 'segment' → logprob: -4.48995304107666
    7. 'tracking' → logprob: -4.61495304107666
    8. 'access' → logprob: -5.11495304107666
    9. 'a' → logprob: -5.11495304107666
    10. 'min' → logprob: -5.23995304107666

Token 386: '
    
' (ID: 15698)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06763660907745361
    2. '
' → logprob: -2.817636489868164
    3. '    
' → logprob: -5.317636489868164
    4. ' for' → logprob: -7.942636489868164
    5. ' next' → logprob: -9.567636489868164
    6. 'for' → logprob: -9.567636489868164
    7. 'def' → logprob: -9.692636489868164
    8. ',' → logprob: -10.317636489868164
    9. ' while' → logprob: -10.817636489868164
    10. 'next' → logprob: -11.067636489868164

Token 387: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05391451716423035
    2. ' for' → logprob: -3.0539145469665527
    3. 'for' → logprob: -5.303914546966553
    4. ' shift' → logprob: -9.178914070129395
    5. 'shift' → logprob: -10.053914070129395
    6. '    
' → logprob: -10.428914070129395
    7. ' current' → logprob: -10.678914070129395
    8. '	for' → logprob: -10.803914070129395
    9. 'current' → logprob: -11.178914070129395
    10. 'offset' → logprob: -11.428914070129395

Token 388: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6800304651260376
    2. 'for' (adapté à ' for') → logprob: -1.1800304651260376
    3. 'shift' → logprob: -2.680030345916748
    4. 'offset' → logprob: -3.180030345916748
    5. ' shift' → logprob: -3.180030345916748
    6. ' offset' → logprob: -3.805030345916748
    7. '   ' → logprob: -5.680030345916748
    8. 'pos' → logprob: -6.430030345916748
    9. 'start' → logprob: -6.555030345916748
    10. ' start' → logprob: -7.305030345916748

Token 389: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.47408542037010193
    2. '_' → logprob: -0.9740854501724243
    3. ' i' → logprob: -12.349085807800293
    4. ' in' → logprob: -13.099085807800293
    5. '_i' → logprob: -14.349085807800293
    6. ' ' → logprob: -14.474085807800293
    7. 'i' → logprob: -15.224085807800293
    8. ' ' → logprob: -15.349085807800293
    9. '   ' → logprob: -16.349084854125977
    10. '__' → logprob: -16.474084854125977

Token 390: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0905420258641243
    2. 'in' → logprob: -2.4655420780181885
    3. '_' → logprob: -6.715541839599609
    4. ' ' → logprob: -8.71554183959961
    5. ' _' → logprob: -9.46554183959961
    6. 'range' → logprob: -9.59054183959961
    7. '  ' → logprob: -10.96554183959961
    8. 's' → logprob: -11.34054183959961
    9. '(' → logprob: -11.46554183959961
    10. 'space' → logprob: -11.84054183959961

Token 391: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.014164921827614307
    2. ' range' → logprob: -4.264164924621582
    3. 'q' → logprob: -14.889164924621582
    4. '(range' → logprob: -15.139164924621582
    5. ' ' → logprob: -15.389164924621582
    6. 'in' → logprob: -15.764164924621582
    7. ' in' → logprob: -16.264163970947266
    8. '  ' → logprob: -16.889163970947266
    9. '   ' → logprob: -16.889163970947266
    10. '	range' → logprob: -17.014163970947266

Token 392: '(q' (ID: 21479)
  Prédit: '(q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(q' → logprob: -6.945094355614856e-05
    2. 'q' → logprob: -9.625069618225098
    3. '(' → logprob: -12.750069618225098
    4. ' (' → logprob: -15.625069618225098
    5. ' q' → logprob: -15.875069618225098
    6. ',' → logprob: -16.87506866455078
    7. '   ' → logprob: -17.00006866455078
    8. ',q' → logprob: -17.62506866455078
    9. '	q' → logprob: -17.87506866455078
    10. ')' → logprob: -19.25006866455078

Token 393: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3497340977191925
    2. '):
' → logprob: -1.2247340679168701
    3. ',' → logprob: -7.724734306335449
    4. ':' → logprob: -7.974734306335449
    5. '():
' → logprob: -8.22473430633545
    6. '():' → logprob: -8.97473430633545
    7. '   ' → logprob: -9.72473430633545
    8. '):
' → logprob: -10.97473430633545
    9. ':
' → logprob: -11.22473430633545
    10. ' ):' → logprob: -11.59973430633545

Token 394: '       ' (ID: 309)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1439595222473145
    2. '   ' → logprob: -1.2689595222473145
    3. '():' → logprob: -1.7689595222473145
    4. ':' → logprob: -2.2689595222473145
    5. '       ' → logprob: -2.3939595222473145
    6. ' ,' → logprob: -4.2689595222473145
    7. '():
' → logprob: -6.0189595222473145
    8. ' readline' → logprob: -6.2689595222473145
    9. '):' → logprob: -6.5189595222473145
    10. '[' → logprob: -6.5189595222473145

Token 395: ' x' (ID: 1215)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.060994267463684
    2. ' t' → logprob: -1.185994267463684
    3. 't' → logprob: -1.435994267463684
    4. 'c' → logprob: -3.8109941482543945
    5. ' line' → logprob: -3.9359941482543945
    6. 'l' → logprob: -4.4359941482543945
    7. ' query' → logprob: -4.6859941482543945
    8. ' c' → logprob: -4.8109941482543945
    9. 's' → logprob: -4.9359941482543945
    10. 'q' → logprob: -5.0609941482543945

Token 396: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004461570177227259
    2. ',y' → logprob: -5.504461765289307
    3. ' ,' → logprob: -8.254461288452148
    4. ' =' → logprob: -10.004461288452148
    5. ',l' → logprob: -11.004461288452148
    6. '=' → logprob: -11.004461288452148
    7. 'y' → logprob: -12.129461288452148
    8. '=line' → logprob: -12.129461288452148
    9. ',line' → logprob: -12.129461288452148
    10. ',k' → logprob: -12.254461288452148

Token 397: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0034520532935857773
    2. ' y' → logprob: -6.378451824188232
    3. 'v' → logprob: -7.378451824188232
    4. 'd' → logprob: -7.503451824188232
    5. 'k' → logprob: -7.878451824188232
    6. 'l' → logprob: -9.00345230102539
    7. 'm' → logprob: -10.87845230102539
    8. 'val' → logprob: -11.50345230102539
    9. 'c' → logprob: -12.25345230102539
    10. 't' → logprob: -12.50345230102539

Token 398: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931514739990234
    2. ' =' → logprob: -0.6931514739990234
    3. '=input' → logprob: -12.943151473999023
    4. ')' → logprob: -14.068151473999023
    5. ',' → logprob: -14.818151473999023
    6. ' ' → logprob: -15.443151473999023
    7. '=int' → logprob: -15.693151473999023
    8. ')=' → logprob: -15.818151473999023
    9. '=line' → logprob: -15.818151473999023
    10. '＝' → logprob: -17.193151473999023

Token 399: ' z' (ID: 579)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.275215208530426
    2. 'v' → logprob: -1.5252151489257812
    3. 'k' → logprob: -4.525215148925781
    4. 'val' → logprob: -4.900215148925781
    5. 'w' → logprob: -6.025215148925781
    6. 'c' → logprob: -7.400215148925781
    7. ' z' → logprob: -7.525215148925781
    8. 'd' → logprob: -8.275215148925781
    9. ' v' → logprob: -8.650215148925781
    10. 'l' → logprob: -9.150215148925781

Token 400: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931498050689697
    2. ' =' → logprob: -0.6931498050689697
    3. ' ' → logprob: -13.81814956665039
    4. '   ' → logprob: -14.44314956665039
    5. ',' → logprob: -14.81814956665039
    6. ')' → logprob: -15.06814956665039
    7. '=input' → logprob: -15.56814956665039
    8. '  ' → logprob: -16.56814956665039
    9. '=line' → logprob: -16.69314956665039
    10. 'x' → logprob: -17.06814956665039

Token 401: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.5759406089782715
    2. 'map' → logprob: -0.8259406089782715
    3. '	map' → logprob: -14.95094108581543
    4. '   ' → logprob: -15.07594108581543
    5. ' ' → logprob: -15.57594108581543
    6. 'input' → logprob: -16.07594108581543
    7. 'list' → logprob: -16.45094108581543
    8. ' input' → logprob: -16.70094108581543
    9. '  ' → logprob: -16.82594108581543
    10. '(map' → logprob: -16.95094108581543

Token 402: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.02326248399913311
    2. 'int' → logprob: -3.7732625007629395
    3. '[int' → logprob: -11.398262023925781
    4. ',int' → logprob: -12.898262023925781
    5. '=int' → logprob: -13.148262023925781
    6. '```' → logprob: -14.523262023925781
    7. ' int' → logprob: -14.898262023925781
    8. '<int' → logprob: -15.398262023925781
    9. ']int' → logprob: -16.27326202392578
    10. 'tuple' → logprob: -16.77326202392578

Token 403: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1032584086060524
    2. ',input' → logprob: -2.3532583713531494
    3. '(),' → logprob: -5.8532586097717285
    4. ',int' → logprob: -9.85325813293457
    5. 'input' → logprob: -10.22825813293457
    6. '(input' → logprob: -10.35325813293457
    7. '   ' → logprob: -11.10325813293457
    8. '()' → logprob: -11.10325813293457
    9. ' ,' → logprob: -11.35325813293457
    10. '(' → logprob: -12.47825813293457

Token 404: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0015023599844425917
    2. ' input' → logprob: -6.501502513885498
    3. '(input' → logprob: -20.751502990722656
    4. ' ' → logprob: -20.751502990722656
    5. ',input' → logprob: -21.251502990722656
    6. '=input' → logprob: -21.751502990722656
    7. 'int' → logprob: -21.876502990722656
    8. '<input' → logprob: -22.251502990722656
    9. 'sys' → logprob: -22.376502990722656
    10. '[input' → logprob: -22.501502990722656

Token 405: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -9.729906196298543e-06
    2. '()' → logprob: -11.750009536743164
    3. ')' → logprob: -14.125009536743164
    4. ' ().' → logprob: -15.125009536743164
    5. '(' → logprob: -15.375009536743164
    6. '())' → logprob: -15.500009536743164
    7. '.split' → logprob: -15.625009536743164
    8. 'split' → logprob: -15.750009536743164
    9. '.' → logprob: -17.125009536743164
    10. '().__' → logprob: -17.500009536743164

Token 406: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.1472419600977446e-06
    2. 'strip' → logprob: -14.000000953674316
    3. ' split' → logprob: -15.625000953674316
    4. '(split' → logprob: -16.625001907348633
    5. '.split' → logprob: -16.750001907348633
    6. 'rstrip' → logprob: -17.250001907348633
    7. 'spl' → logprob: -17.750001907348633
    8. '().' → logprob: -17.875001907348633
    9. ')' → logprob: -18.625001907348633
    10. '_split' → logprob: -19.750001907348633

Token 407: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002420606790110469
    2. ')
' → logprob: -6.127420425415039
    3. '())' → logprob: -8.877420425415039
    4. '()' → logprob: -9.377420425415039
    5. ')
' → logprob: -12.627420425415039
    6. '())
' → logprob: -12.752420425415039
    7. ')`' → logprob: -13.127420425415039
    8. '       ' → logprob: -14.502420425415039
    9. ')`
' → logprob: -14.627420425415039
    10. '):' → logprob: -14.752420425415039

Token 408: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4058111011981964
    2. '<|end|>' → logprob: -1.280811071395874
    3. '
' → logprob: -3.530811071395874
    4. '        
' → logprob: -4.530811309814453
    5. ' 
' → logprob: -5.530811309814453
    6. '  
' → logprob: -6.155811309814453
    7. ' if' → logprob: -6.280811309814453
    8. ' ' → logprob: -6.780811309814453
    9. '		
' → logprob: -6.780811309814453
    10. '   ' → logprob: -6.905811309814453

Token 409: ' if' (ID: 538)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.7635506391525269
    2. ' x' → logprob: -1.5135506391525269
    3. ' if' → logprob: -1.6385506391525269
    4. 'if' (adapté à ' if') → logprob: -2.5135507583618164
    5. '       ' → logprob: -3.3885507583618164
    6. 'y' → logprob: -6.513550758361816
    7. ' y' → logprob: -6.638550758361816
    8. '   ' → logprob: -7.888550758361816
    9. 'a' → logprob: -8.138550758361816
    10. ' for' → logprob: -8.138550758361816

Token 410: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.3735771179199219
    2. ' y' → logprob: -1.2485771179199219
    3. 'x' → logprob: -4.248577117919922
    4. ' z' → logprob: -4.748577117919922
    5. 'y' → logprob: -6.498577117919922
    6. 'z' → logprob: -8.373577117919922
    7. ' ' → logprob: -9.998577117919922
    8. ' (' → logprob: -10.498577117919922
    9. '    ' → logprob: -11.311077117919922
    10. ' not' → logprob: -11.561077117919922

Token 411: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.043016888201236725
    2. '==' → logprob: -3.1680169105529785
    3. '[' → logprob: -12.41801643371582
    4. '=' → logprob: -13.04301643371582
    5. ' =' → logprob: -13.29301643371582
    6. ' ' → logprob: -13.54301643371582
    7. ')' → logprob: -13.79301643371582
    8. '-' → logprob: -13.79301643371582
    9. '```' → logprob: -14.41801643371582
    10. '<|end|>' → logprob: -14.41801643371582

Token 412: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004994178656488657
    2. '2' → logprob: -5.3799943923950195
    3. '0' → logprob: -8.50499439239502
    4. ' ' → logprob: -8.75499439239502
    5. '3' → logprob: -11.87999439239502
    6. '   ' → logprob: -13.69249439239502
    7. '  ' → logprob: -13.87999439239502
    8. '```' → logprob: -14.12999439239502
    9. '``' → logprob: -14.75499439239502
    10. 'y' → logprob: -14.87999439239502

Token 413: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0030674338340759277
    2. '2' → logprob: -6.003067493438721
    3. '0' → logprob: -7.628067493438721
    4. '3' → logprob: -9.878067016601562
    5. ' ' → logprob: -10.003067016601562
    6. ''' → logprob: -14.253067016601562
    7. '
' → logprob: -14.253067016601562
    8. '```' → logprob: -14.315567016601562
    9. '``' → logprob: -14.315567016601562
    10. '   ' → logprob: -14.440567016601562

Token 414: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.12706522643566132
    2. ':
' → logprob: -2.1270651817321777
    3. ' and' → logprob: -9.502065658569336
    4. ' :' → logprob: -10.502065658569336
    5. ' :
' → logprob: -10.877065658569336
    6. '       ' → logprob: -11.752065658569336
    7. ':
' → logprob: -12.627065658569336
    8. '):
' → logprob: -13.752065658569336
    9. ',' → logprob: -13.752065658569336
    10. ':

' → logprob: -14.252065658569336

Token 415: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3382170796394348
    2. '       ' → logprob: -1.58821702003479
    3. 'a' → logprob: -3.71321702003479
    4. '   ' → logprob: -3.71321702003479
    5. ' a' → logprob: -4.213217258453369
    6. ':' → logprob: -4.713217258453369
    7. ':
' → logprob: -5.213217258453369
    8. ' and' → logprob: -6.713217258453369
    9. '#' → logprob: -7.463217258453369
    10. ' for' → logprob: -7.963217258453369

Token 416: ' #' (ID: 1069)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.7160288095474243
    2. '           ' → logprob: -1.4660288095474243
    3. ' a' → logprob: -1.9660288095474243
    4. 'idx' → logprob: -3.4660286903381348
    5. 'seg' → logprob: -3.5910286903381348
    6. 'y' → logprob: -4.091028690338135
    7. 'pos' → logprob: -4.091028690338135
    8. ' idx' → logprob: -4.966028690338135
    9. ' seg' → logprob: -5.091028690338135
    10. '#' (adapté à ' #') → logprob: -5.216028690338135

Token 417: ' Circular' (ID: 72772)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.7421371340751648
    2. 'seg' → logprob: -1.6171371936798096
    3. 'pos' → logprob: -1.9921371936798096
    4. 'idx' → logprob: -3.1171371936798096
    5. '#' → logprob: -3.4921371936798096
    6. 'y' → logprob: -3.8671371936798096
    7. 'for' → logprob: -3.8671371936798096
    8. ' a' → logprob: -4.1171369552612305
    9. ' seg' → logprob: -4.2421369552612305
    10. 'l' → logprob: -4.8671369552612305

Token 418: ' shift' (ID: 12847)
  Prédit: ' shift'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' shift' → logprob: -0.23862287402153015
    2. 'ly' → logprob: -2.1136229038238525
    3. 'shift' → logprob: -2.4886229038238525
    4. '_shift' → logprob: -4.863622665405273
    5. '#' → logprob: -8.613622665405273
    6. 'left' → logprob: -8.738622665405273
    7. ' left' → logprob: -9.113622665405273
    8. 'a' → logprob: -9.613622665405273
    9. ' right' → logprob: -9.863622665405273
    10. 'y' → logprob: -10.613622665405273

Token 419: ' from' (ID: 591)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.33923980593681335
    2. ' =' → logprob: -2.7142398357391357
    3. ':' → logprob: -3.2142398357391357
    4. ',' → logprob: -3.4642398357391357
    5. '[' → logprob: -3.5892398357391357
    6. '=' → logprob: -4.089239597320557
    7. ':
' → logprob: -4.464239597320557
    8. '(' → logprob: -4.714239597320557
    9. 'a' → logprob: -4.964239597320557
    10. '[a' → logprob: -5.089239597320557

Token 420: ' l' (ID: 305)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.014460697770118713
    2. ' y' → logprob: -4.264460563659668
    3. '(y' → logprob: -9.264460563659668
    4. 'x' → logprob: -9.389460563659668
    5. '           ' → logprob: -10.264460563659668
    6. '0' → logprob: -10.514460563659668
    7. '[y' → logprob: -11.389460563659668
    8. 'z' → logprob: -11.639460563659668
    9. 'n' → logprob: -11.639460563659668
    10. 'a' → logprob: -12.139460563659668

Token 421: '=y' (ID: 70421)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.1182798147201538
    2. 'y' → logprob: -1.3682798147201538
    3. '=' → logprob: -1.9932798147201538
    4. ' y' → logprob: -2.4932799339294434
    5. ',' → logprob: -2.7432799339294434
    6. '=y' → logprob: -3.1182799339294434
    7. ',y' → logprob: -3.1182799339294434
    8. ' to' → logprob: -3.4932799339294434
    9. '-' → logprob: -4.993279933929443
    10. '           ' → logprob: -5.743279933929443

Token 422: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.8425135612487793
    2. '-' → logprob: -1.0925135612487793
    3. 'to' → logprob: -2.2175135612487793
    4. '           ' → logprob: -2.5925135612487793
    5. ' -' → logprob: -3.3425135612487793
    6. ' y' → logprob: -5.217513561248779
    7. ' ' → logprob: -5.842513561248779
    8. ',' → logprob: -6.467513561248779
    9. '          ' → logprob: -6.467513561248779
    10. 'y' → logprob: -6.967513561248779

Token 423: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.5249641537666321
    2. 'z' → logprob: -0.8999641537666321
    3. ' z' → logprob: -7.149964332580566
    4. 'y' → logprob: -7.774964332580566
    5. ' r' → logprob: -7.899964332580566
    6. '           ' → logprob: -8.899964332580566
    7. 'x' → logprob: -9.899964332580566
    8. 'q' → logprob: -11.774964332580566
    9. '   ' → logprob: -11.899964332580566
    10. 'n' → logprob: -11.899964332580566

Token 424: '=z' (ID: 196886)
  Prédit: '=z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=z' → logprob: -0.18603412806987762
    2. '=y' → logprob: -2.1860342025756836
    3. '=' → logprob: -4.061034202575684
    4. ' =' → logprob: -4.061034202575684
    5. ' z' → logprob: -4.686034202575684
    6. 'z' → logprob: -4.811034202575684
    7. ' y' → logprob: -6.311034202575684
    8. '=x' → logprob: -6.811034202575684
    9. ',' → logprob: -7.186034202575684
    10. 'y' → logprob: -7.686034202575684

Token 425: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.12114674597978592
    2. ',' → logprob: -2.9961466789245605
    3. ' -' → logprob: -4.4961466789245605
    4. '-' → logprob: -4.6211466789245605
    5. '
' → logprob: -4.8711466789245605
    6. ':' → logprob: -5.1211466789245605
    7. ':
' → logprob: -5.4961466789245605
    8. ' =' → logprob: -5.4961466789245605
    9. ' ' → logprob: -5.8711466789245605
    10. '=' → logprob: -6.1211466789245605

Token 426: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03215746581554413
    2. ':' → logprob: -5.0321574211120605
    3. '            ' → logprob: -5.6571574211120605
    4. '<|end|>' → logprob: -5.6571574211120605
    5. '            
' → logprob: -5.7821574211120605
    6. '
' → logprob: -6.0321574211120605
    7. ' ' → logprob: -6.1571574211120605
    8. '          ' → logprob: -6.2821574211120605
    9. '               ' → logprob: -6.4071574211120605
    10. ',' → logprob: -7.0321574211120605

Token 427: ' l' (ID: 305)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temp' → logprob: -1.1793607473373413
    2. 'y' → logprob: -1.5543607473373413
    3. 'tmp' → logprob: -1.9293607473373413
    4. 'l' (adapté à ' l') → logprob: -2.054360866546631
    5. '           ' → logprob: -3.179360866546631
    6. 'val' → logprob: -3.429360866546631
    7. ' y' → logprob: -3.554360866546631
    8. 'shift' → logprob: -4.054360866546631
    9. 'v' → logprob: -4.429360866546631
    10. 'vals' → logprob: -4.554360866546631

Token 428: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6811296343803406
    2. '=' → logprob: -0.8061296343803406
    3. ',' → logprob: -3.0561296939849854
    4. '=y' → logprob: -9.056129455566406
    5. ',y' → logprob: -9.806129455566406
    6. ' ,' → logprob: -9.931129455566406
    7. '=
' → logprob: -10.681129455566406
    8. '=l' → logprob: -11.181129455566406
    9. '-' → logprob: -11.306129455566406
    10. ' =
' → logprob: -11.681129455566406

Token 429: ' r' (ID: 428)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.011952406726777554
    2. ' y' → logprob: -4.5119524002075195
    3. 'r' → logprob: -7.0119524002075195
    4. ' r' → logprob: -13.26195240020752
    5. '           ' → logprob: -13.88695240020752
    6. 'z' → logprob: -15.38695240020752
    7. '    ' → logprob: -15.88695240020752
    8. '            ' → logprob: -17.511953353881836
    9. 'm' → logprob: -17.636953353881836
    10. '=' → logprob: -17.761953353881836

Token 430: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31665611267089844
    2. '=' → logprob: -1.3166561126708984
    3. ',' → logprob: -5.691656112670898
    4. ' ,' → logprob: -11.316656112670898
    5. ' ' → logprob: -13.691656112670898
    6. ',y' → logprob: -15.191656112670898
    7. '    ' → logprob: -15.566656112670898
    8. '   ' → logprob: -15.816656112670898
    9. '=y' → logprob: -15.816656112670898
    10. '           ' → logprob: -16.1916561126709

Token 431: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.00408160500228405
    2. ' y' → logprob: -5.504081726074219
    3. '(y' → logprob: -13.379081726074219
    4. '           ' → logprob: -14.004081726074219
    5. '	y' → logprob: -14.379081726074219
    6. '   ' → logprob: -15.879081726074219
    7. '       ' → logprob: -17.25408172607422
    8. ',y' → logprob: -18.25408172607422
    9. '[y' → logprob: -18.37908172607422
    10. '    ' → logprob: -18.50408172607422

Token 432: ',' (ID: 11)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.46567302942276
    2. '-' → logprob: -1.2156729698181152
    3. ',' → logprob: -2.5906729698181152
    4. ' ,' → logprob: -7.340672969818115
    5. ' ' → logprob: -9.840673446655273
    6. '           ' → logprob: -10.340673446655273
    7. ',z' → logprob: -10.715673446655273
    8. '   ' → logprob: -11.340673446655273
    9. '-,' → logprob: -11.840673446655273
    10. '1' → logprob: -11.840673446655273

Token 433: ' z' (ID: 579)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.3132631182670593
    2. ' z' → logprob: -1.313263177871704
    3. '	z' → logprob: -14.688262939453125
    4. 'r' → logprob: -15.063262939453125
    5. '           ' → logprob: -15.188262939453125
    6. '    ' → logprob: -15.813262939453125
    7. '   ' → logprob: -15.938262939453125
    8. ' ' → logprob: -16.813262939453125
    9. '       ' → logprob: -16.938262939453125
    10. '        ' → logprob: -17.938262939453125

Token 434: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.43776705861091614
    2. '
' → logprob: -1.0627670288085938
    3. '               ' → logprob: -6.062767028808594
    4. '  
' → logprob: -6.187767028808594
    5. '            
' → logprob: -6.312767028808594
    6. '
' → logprob: -7.937767028808594
    7. ' 
' → logprob: -8.062767028808594
    8. ',' → logprob: -8.562767028808594
    9. '    
' → logprob: -8.562767028808594
    10. '+' → logprob: -8.562767028808594

Token 435: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.12257090210914612
    2. 'temp' → logprob: -2.4975709915161133
    3. '
' → logprob: -4.872570991516113
    4. 'tmp' → logprob: -4.872570991516113
    5. 'val' → logprob: -4.997570991516113
    6. ' temp' → logprob: -5.872570991516113
    7. 'a' → logprob: -6.122570991516113
    8. ' val' → logprob: -6.247570991516113
    9. 'old' → logprob: -7.247570991516113
    10. 'value' → logprob: -7.872570991516113

Token 436: ' #' (ID: 1069)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.7179482579231262
    2. 'tmp' → logprob: -0.9679482579231262
    3. 'val' → logprob: -2.9679481983184814
    4. 'v' → logprob: -3.8429481983184814
    5. ' tmp' → logprob: -4.3429484367370605
    6. ' temp' → logprob: -4.4679484367370605
    7. '           ' → logprob: -4.5929484367370605
    8. 'last' → logprob: -4.7179484367370605
    9. ' val' → logprob: -5.2179484367370605
    10. 'first' → logprob: -5.7179484367370605

Token 437: ' Save' (ID: 15564)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -0.7090829610824585
    2. 'temp' → logprob: -1.5840829610824585
    3. 'val' → logprob: -1.8340829610824585
    4. 'v' → logprob: -2.959083080291748
    5. ' val' → logprob: -3.334083080291748
    6. ' tmp' → logprob: -3.584083080291748
    7. 'old' → logprob: -4.584083080291748
    8. ' temp' → logprob: -4.959083080291748
    9. ' v' → logprob: -6.209083080291748
    10. 'shift' → logprob: -6.459083080291748

Token 438: ' last' (ID: 2174)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.8562390804290771
    2. 'temp' → logprob: -1.1062390804290771
    3. 'tmp' → logprob: -1.8562390804290771
    4. 'first' → logprob: -3.356239080429077
    5. 'last' → logprob: -3.606239080429077
    6. 'prev' → logprob: -4.731239318847656
    7. 'val' → logprob: -5.106239318847656
    8. 'old' → logprob: -5.606239318847656
    9. 'seg' → logprob: -6.356239318847656
    10. 'self' → logprob: -6.356239318847656

Token 439: ' element' (ID: 3577)
  Prédit: '_val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_val' → logprob: -0.11165031045675278
    2. 'val' → logprob: -2.611650228500366
    3. '_value' → logprob: -3.861650228500366
    4. 'value' → logprob: -5.361650466918945
    5. ' =' → logprob: -5.486650466918945
    6. '_elem' → logprob: -6.986650466918945
    7. '_element' → logprob: -7.361650466918945
    8. '=' → logprob: -7.736650466918945
    9. 'element' → logprob: -8.986650466918945
    10. ' value' → logprob: -9.736650466918945

Token 440: ' in' (ID: 306)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.031516365706920624
    2. '=' → logprob: -3.7815163135528564
    3. '           ' → logprob: -5.0315165519714355
    4. 'a' → logprob: -7.0315165519714355
    5. ' a' → logprob: -8.281516075134277
    6. 'tmp' → logprob: -9.156516075134277
    7. '=a' → logprob: -9.281516075134277
    8. 'temp' → logprob: -10.031516075134277
    9. '               ' → logprob: -10.406516075134277
    10. ' in' → logprob: -10.406516075134277

Token 441: ' range' (ID: 3352)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.001533547299914062
    2. ' a' → logprob: -7.376533508300781
    3. 'segment' → logprob: -7.751533508300781
    4. 'l' → logprob: -8.501533508300781
    5. 'r' → logprob: -9.626533508300781
    6. 'seg' → logprob: -9.876533508300781
    7. 'the' → logprob: -10.126533508300781
    8. 'range' → logprob: -10.501533508300781
    9. '_segment' → logprob: -10.626533508300781
    10. ' segment' → logprob: -10.626533508300781

Token 442: '
' (ID: 198)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05989846959710121
    2. '=' → logprob: -3.0598983764648438
    3. '           ' → logprob: -4.934898376464844
    4. 'a' → logprob: -6.934898376464844
    5. 'val' → logprob: -6.934898376464844
    6. 'r' → logprob: -7.809898376464844
    7. ' a' → logprob: -8.309898376464844
    8. 'tmp' → logprob: -8.434898376464844
    9. 'prev' → logprob: -9.059898376464844
    10. 'self' → logprob: -9.059898376464844

Token 443: '           ' (ID: 352)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.13792909681797028
    2. '=' → logprob: -3.3879292011260986
    3. '           ' → logprob: -3.5129292011260986
    4. 'last' → logprob: -3.7629292011260986
    5. 'temp' → logprob: -4.0129289627075195
    6. 'val' → logprob: -4.7629289627075195
    7. 'tmp' → logprob: -5.2629289627075195
    8. ' last' → logprob: -5.8879289627075195
    9. ' val' → logprob: -6.0129289627075195
    10. 'prev' → logprob: -6.0129289627075195

Token 444: ' last' (ID: 2174)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' (adapté à ' last') → logprob: -0.6574084162712097
    2. 'temp' → logprob: -1.4074084758758545
    3. 'tmp' → logprob: -1.5324084758758545
    4. ' last' → logprob: -4.407408237457275
    5. ' tmp' → logprob: -5.282408237457275
    6. ' temp' → logprob: -6.032408237457275
    7. 'val' → logprob: -7.407408237457275
    8. '           ' → logprob: -8.157408714294434
    9. 'prev' → logprob: -8.657408714294434
    10. 'v' → logprob: -9.407408714294434

Token 445: '_val' (ID: 13694)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3140190839767456
    2. '=' → logprob: -1.3140190839767456
    3. '_val' → logprob: -7.314019203186035
    4. 'val' → logprob: -10.189019203186035
    5. '_value' → logprob: -10.814019203186035
    6. '=a' → logprob: -11.189019203186035
    7. 'value' → logprob: -12.314019203186035
    8. ' ' → logprob: -12.439019203186035
    9. 'Val' → logprob: -13.314019203186035
    10. '_element' → logprob: -13.564019203186035

Token 446: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759404897689819
    2. ' =' → logprob: -0.8259404897689819
    3. ' ' → logprob: -14.825940132141113
    4. ',' → logprob: -15.450940132141113
    5. ' =
' → logprob: -16.20094108581543
    6. ')' → logprob: -16.20094108581543
    7. '=
' → logprob: -16.82594108581543
    8. '[' → logprob: -17.20094108581543
    9. '=end' → logprob: -17.20094108581543
    10. ' ' → logprob: -17.32594108581543

Token 447: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.004837603308260441
    2. ' a' → logprob: -5.379837512969971
    3. 'seg' → logprob: -8.504837989807129
    4. ' seg' → logprob: -11.379837989807129
    5. '   ' → logprob: -13.379837989807129
    6. '	a' → logprob: -14.879837989807129
    7. 'segment' → logprob: -15.129837989807129
    8. ' ' → logprob: -15.254837989807129
    9. '(a' → logprob: -15.942337989807129
    10. 'se' → logprob: -16.254837036132812

Token 448: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.00330331246368587
    2. 'l' → logprob: -6.503303527832031
    3. '[l' → logprob: -7.003303527832031
    4. '[r' → logprob: -7.878303527832031
    5. 'list' → logprob: -8.253303527832031
    6. 'r' → logprob: -9.003303527832031
    7. 'a' → logprob: -9.878303527832031
    8. '[' → logprob: -10.253303527832031
    9. '   ' → logprob: -11.253303527832031
    10. '[-' → logprob: -11.628303527832031

Token 449: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -0.0031888822559267282
    2. 'r' → logprob: -5.7531890869140625
    3. '   ' → logprob: -12.128189086914062
    4. '[' → logprob: -12.503189086914062
    5. '	r' → logprob: -15.003189086914062
    6. '```' → logprob: -15.003189086914062
    7. '
' → logprob: -15.378189086914062
    8. '       ' → logprob: -15.503189086914062
    9. '[
' → logprob: -15.503189086914062
    10. ' r' → logprob: -15.503189086914062

Token 450: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0018828235333785415
    2. '])' → logprob: -6.626883029937744
    3. ' ]' → logprob: -8.126882553100586
    4. ']
' → logprob: -8.501882553100586
    5. ')' → logprob: -10.376882553100586
    6. '-' → logprob: -11.626882553100586
    7. '].' → logprob: -12.001882553100586
    8. ']

' → logprob: -13.251882553100586
    9. ')]' → logprob: -13.376882553100586
    10. '],' → logprob: -13.376882553100586

Token 451: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05278739333152771
    2. ' for' → logprob: -3.5527873039245605
    3. '
' → logprob: -4.0527873039245605
    4. 'for' → logprob: -5.3027873039245605
    5. '            
' → logprob: -8.302787780761719
    6. '       ' → logprob: -10.302787780761719
    7. '<|end|>' → logprob: -10.677787780761719
    8. ',' → logprob: -10.802787780761719
    9. '          ' → logprob: -11.427787780761719
    10. '   ' → logprob: -11.427787780761719

Token 452: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3508225381374359
    2. ' for' → logprob: -1.8508225679397583
    3. 'for' → logprob: -1.9758225679397583
    4. 'i' → logprob: -10.225822448730469
    5. '
' → logprob: -10.475822448730469
    6. '       ' → logprob: -10.725822448730469
    7. '```' → logprob: -11.100822448730469
    8. '               ' → logprob: -11.850822448730469
    9. '   ' → logprob: -12.475822448730469
    10. '            
' → logprob: -12.975822448730469

Token 453: ' Shift' (ID: 58879)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.05789627507328987
    2. ' for' → logprob: -3.057896375656128
    3. '           ' → logprob: -4.682896137237549
    4. 'i' → logprob: -12.182896614074707
    5. '               ' → logprob: -13.307896614074707
    6. 'a' → logprob: -13.432896614074707
    7. 'while' → logprob: -13.432896614074707
    8. 'r' → logprob: -13.807896614074707
    9. '```' → logprob: -14.057896614074707
    10. '
' → logprob: -14.682896614074707

Token 454: ' elements' (ID: 8632)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.26343074440956116
    2. ' for' → logprob: -2.2634308338165283
    3. 'a' → logprob: -2.8884308338165283
    4. '           ' → logprob: -3.1384308338165283
    5. 'l' → logprob: -3.7634308338165283
    6. 'i' → logprob: -6.263430595397949
    7. ' a' → logprob: -6.763430595397949
    8. '   ' → logprob: -7.388430595397949
    9. 'range' → logprob: -7.888430595397949
    10. ' l' → logprob: -7.888430595397949

Token 455: ' to' (ID: 316)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.371593713760376
    2. 'l' → logprob: -1.371593713760376
    3. ' l' → logprob: -3.121593713760376
    4. '[l' → logprob: -5.371593475341797
    5. ' for' → logprob: -6.121593475341797
    6. '(l' → logprob: -6.746593475341797
    7. 'for' → logprob: -6.996593475341797
    8. ':' → logprob: -7.746593475341797
    9. ':l' → logprob: -7.871593475341797
    10. ',' → logprob: -7.871593475341797

Token 456: ' the' (ID: 290)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0784926787018776
    2. 'the' → logprob: -2.9534926414489746
    3. 'a' → logprob: -4.453492641448975
    4. 'l' → logprob: -4.828492641448975
    5. 'right' → logprob: -5.828492641448975
    6. ' the' → logprob: -7.828492641448975
    7. ' r' → logprob: -8.828493118286133
    8. 'y' → logprob: -9.578493118286133
    9. 'for' → logprob: -10.578493118286133
    10. 'range' → logprob: -10.953493118286133

Token 457: ' right' (ID: 1849)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.02357119880616665
    2. 'l' → logprob: -3.773571252822876
    3. ' r' → logprob: -9.148571014404297
    4. 'right' → logprob: -9.398571014404297
    5. 'a' → logprob: -10.398571014404297
    6. 'for' → logprob: -10.523571014404297
    7. 'range' → logprob: -10.898571014404297
    8. ' l' → logprob: -11.273571014404297
    9. 'y' → logprob: -12.023571014404297
    10. ' right' → logprob: -12.273571014404297

Token 458: ' by' (ID: 656)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.645355224609375
    2. ' for' → logprob: -0.770355224609375
    3. 'for' → logprob: -4.770355224609375
    4. ' by' → logprob: -7.020355224609375
    5. ' from' → logprob: -7.395355224609375
    6. ',' → logprob: -7.770355224609375
    7. '<|end|>' → logprob: -7.770355224609375
    8. ' in' → logprob: -8.270355224609375
    9. 'r' → logprob: -8.395355224609375
    10. '               ' → logprob: -8.520355224609375

Token 459: ' one' (ID: 1001)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003682285314425826
    2. ' ' → logprob: -8.000368118286133
    3. ' one' → logprob: -10.750368118286133
    4. 'one' → logprob: -11.500368118286133
    5. 'r' → logprob: -14.375368118286133
    6. '   ' → logprob: -15.000368118286133
    7. '```' → logprob: -16.750368118286133
    8. '
' → logprob: -16.875368118286133
    9. ' r' → logprob: -16.875368118286133
    10. 'One' → logprob: -17.000368118286133

Token 460: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07046306878328323
    2. ' for' → logprob: -2.820463180541992
    3. '
' → logprob: -5.070463180541992
    4. 'for' → logprob: -6.945463180541992
    5. '<|end|>' → logprob: -8.695463180541992
    6. '       ' → logprob: -8.820463180541992
    7. '          ' → logprob: -8.945463180541992
    8. '               ' → logprob: -9.195463180541992
    9. ',' → logprob: -9.320463180541992
    10. 'r' → logprob: -9.320463180541992

Token 461: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07163567841053009
    2. ' for' → logprob: -2.6966357231140137
    3. 'for' → logprob: -6.821635723114014
    4. '
' → logprob: -8.321635246276855
    5. 'r' → logprob: -9.571635246276855
    6. ' r' → logprob: -9.946635246276855
    7. '       ' → logprob: -10.071635246276855
    8. '               ' → logprob: -10.321635246276855
    9. '          ' → logprob: -10.571635246276855
    10. '<|end|>' → logprob: -10.696635246276855

Token 462: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.03046741522848606
    2. ' for' → logprob: -3.5304675102233887
    3. '           ' → logprob: -7.530467510223389
    4. 'i' → logprob: -8.65546703338623
    5. ' i' → logprob: -12.40546703338623
    6. 'while' → logprob: -13.90546703338623
    7. 'r' → logprob: -14.78046703338623
    8. '               ' → logprob: -15.78046703338623
    9. '	for' → logprob: -15.78046703338623
    10. '   ' → logprob: -16.655467987060547

Token 463: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.002484573284164071
    2. ' i' → logprob: -6.0024847984313965
    3. 'idx' → logprob: -12.002484321594238
    4. '   ' → logprob: -13.502484321594238
    5. 'j' → logprob: -14.752484321594238
    6. 'pos' → logprob: -15.002484321594238
    7. ' idx' → logprob: -15.127484321594238
    8. 'k' → logprob: -15.252484321594238
    9. '```' → logprob: -16.877485275268555
    10. '	i' → logprob: -17.377485275268555

Token 464: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01513676904141903
    2. 'in' → logprob: -4.26513671875
    3. 'r' → logprob: -7.01513671875
    4. ' r' → logprob: -10.14013671875
    5. ' ' → logprob: -11.14013671875
    6. '   ' → logprob: -11.76513671875
    7. 'range' → logprob: -12.76513671875
    8. ')' → logprob: -13.51513671875
    9. '
' → logprob: -13.89013671875
    10. '  ' → logprob: -14.01513671875

Token 465: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.002908773487433791
    2. ' range' → logprob: -6.127908706665039
    3. 'r' → logprob: -7.252908706665039
    4. '   ' → logprob: -11.627908706665039
    5. '(range' → logprob: -13.377908706665039
    6. 'reverse' → logprob: -13.627908706665039
    7. 're' → logprob: -13.752908706665039
    8. 'rang' → logprob: -13.752908706665039
    9. '
' → logprob: -15.002908706665039
    10. ' r' → logprob: -15.127908706665039

Token 466: '(r' (ID: 4729)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.001980260480195284
    2. ' r' → logprob: -6.251980304718018
    3. '(r' → logprob: -9.87697982788086
    4. '   ' → logprob: -15.50197982788086
    5. '	r' → logprob: -16.75197982788086
    6. '_r' → logprob: -17.87697982788086
    7. '(' → logprob: -18.12697982788086
    8. '[r' → logprob: -18.25197982788086
    9. '
' → logprob: -18.75197982788086
    10. ' ' → logprob: -19.00197982788086

Token 467: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.48018795251846313
    2. '-' → logprob: -1.3551878929138184
    3. ' -' → logprob: -2.1051878929138184
    4. ' ,' → logprob: -6.480187892913818
    5. ',r' → logprob: -10.480188369750977
    6. 'r' → logprob: -10.605188369750977
    7. ' ' → logprob: -11.980188369750977
    8. '   ' → logprob: -12.105188369750977
    9. '-,' → logprob: -12.855188369750977
    10. ',i' → logprob: -13.355188369750977

Token 468: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -7.107425062713446e-06
    2. ' l' → logprob: -11.875006675720215
    3. '   ' → logprob: -17.50000762939453
    4. '	l' → logprob: -17.62500762939453
    5. '    ' → logprob: -19.62500762939453
    6. '```' → logprob: -20.37500762939453
    7. '<|end|>' → logprob: -20.37500762939453
    8. '(l' → logprob: -20.62500762939453
    9. 'ltr' → logprob: -20.62500762939453
    10. ',l' → logprob: -20.62500762939453

Token 469: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00868808664381504
    2. ',i' → logprob: -5.758687973022461
    3. '-' → logprob: -6.008687973022461
    4. ' ,' → logprob: -6.133687973022461
    5. ',l' → logprob: -7.758687973022461
    6. ',-' → logprob: -8.258687973022461
    7. ' -' → logprob: -9.133687973022461
    8. '0' → logprob: -11.133687973022461
    9. ',r' → logprob: -11.133687973022461
    10. ',--' → logprob: -11.883687973022461

Token 470: ' -' (ID: 533)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0353463776409626
    2. 'l' → logprob: -3.910346269607544
    3. ' i' → logprob: -4.285346508026123
    4. '-' → logprob: -8.410346031188965
    5. 'r' → logprob: -8.535346031188965
    6. ' l' → logprob: -8.660346031188965
    7. '   ' → logprob: -9.160346031188965
    8. '-i' → logprob: -10.160346031188965
    9. '	i' → logprob: -10.535346031188965
    10. '0' → logprob: -10.660346031188965

Token 471: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5730183720588684
    2. '0' → logprob: -1.3230183124542236
    3. '-' → logprob: -2.1980183124542236
    4. ' -' → logprob: -3.1980183124542236
    5. ' ' → logprob: -4.448018550872803
    6. ')' → logprob: -5.448018550872803
    7. 'i' → logprob: -7.073018550872803
    8. '):
' → logprob: -7.698018550872803
    9. ',' → logprob: -8.823018074035645
    10. '   ' → logprob: -9.198018074035645

Token 472: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.6360257863998413
    2. '-' → logprob: -0.8860257863998413
    3. ',' → logprob: -3.636025905609131
    4. '):' → logprob: -4.136025905609131
    5. ' -' → logprob: -4.636025905609131
    6. ',-' → logprob: -5.261025905609131
    7. '           ' → logprob: -8.136025428771973
    8. '       ' → logprob: -8.636025428771973
    9. '   ' → logprob: -8.886025428771973
    10. '):
' → logprob: -9.136025428771973

Token 473: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.047652486711740494
    2. ' a' → logprob: -3.42265248298645
    3. 'a' → logprob: -5.172652721405029
    4. '           ' → logprob: -5.547652721405029
    5. '       ' → logprob: -6.172652721405029
    6. '<|end|>' → logprob: -7.297652721405029
    7. '```' → logprob: -7.672652721405029
    8. '   ' → logprob: -8.797652244567871
    9. ',' → logprob: -8.922652244567871
    10. ' ' → logprob: -9.297652244567871

Token 474: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.38997751474380493
    2. ' a' → logprob: -1.1399774551391602
    3. '               ' → logprob: -5.88997745513916
    4. '           ' → logprob: -8.26497745513916
    5. '   ' → logprob: -9.88997745513916
    6. '	a' → logprob: -11.88997745513916
    7. '_a' → logprob: -12.38997745513916
    8. '       ' → logprob: -12.38997745513916
    9. ' ' → logprob: -12.51497745513916
    10. '                   ' → logprob: -13.63997745513916

Token 475: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -2.816093228830141e-06
    2. 'list' → logprob: -13.50000286102295
    3. '[_' → logprob: -15.00000286102295
    4. '[i' → logprob: -15.25000286102295
    5. '```' → logprob: -16.000001907348633
    6. '[' → logprob: -16.125001907348633
    7. 'List' → logprob: -16.125001907348633
    8. 'l' → logprob: -16.250001907348633
    9. 'a' → logprob: -16.375001907348633
    10. '_lists' → logprob: -17.500001907348633

Token 476: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.1472419600977446e-06
    2. '[a' → logprob: -14.875000953674316
    3. ' [' → logprob: -15.500000953674316
    4. '[' → logprob: -15.875000953674316
    5. '```' → logprob: -16.125001907348633
    6. '\[' → logprob: -16.875001907348633
    7. 'i' → logprob: -17.375001907348633
    8. '[
' → logprob: -17.500001907348633
    9. ')[' → logprob: -17.500001907348633
    10. '           ' → logprob: -17.625001907348633

Token 477: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00034630970912985504
    2. ']=' → logprob: -8.250346183776855
    3. ' ]' → logprob: -9.500346183776855
    4. '=' → logprob: -11.875346183776855
    5. ' =' → logprob: -12.750346183776855
    6. ')' → logprob: -15.625346183776855
    7. ']
' → logprob: -17.125347137451172
    8. '   ' → logprob: -17.250347137451172
    9. '    ' → logprob: -17.875347137451172
    10. '-' → logprob: -18.000347137451172

Token 478: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38687241077423096
    2. ' =' → logprob: -1.136872410774231
    3. '=a' → logprob: -14.011872291564941
    4. ',' → logprob: -15.761872291564941
    5. '=
' → logprob: -15.761872291564941
    6. ']' → logprob: -16.011873245239258
    7. ']=' → logprob: -17.011873245239258
    8. ')' → logprob: -17.386873245239258
    9. 'a' → logprob: -17.386873245239258
    10. '=

' → logprob: -17.511873245239258

Token 479: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.002476016292348504
    2. ' a' → logprob: -6.002476215362549
    3. '   ' → logprob: -16.12747573852539
    4. '	a' → logprob: -16.37747573852539
    5. '           ' → logprob: -17.12747573852539
    6. '       ' → logprob: -18.37747573852539
    7. ' ' → logprob: -18.87747573852539
    8. '               ' → logprob: -20.12747573852539
    9. '_a' → logprob: -20.25247573852539
    10. '  ' → logprob: -20.87747573852539

Token 480: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -2.816093228830141e-06
    2. 'List' → logprob: -13.37500286102295
    3. 'list' → logprob: -15.00000286102295
    4. '[i' → logprob: -15.25000286102295
    5. '_List' → logprob: -16.250001907348633
    6. 'lst' → logprob: -16.500001907348633
    7. '[' → logprob: -16.500001907348633
    8. '```' → logprob: -16.500001907348633
    9. '_LIST' → logprob: -16.750001907348633
    10. '[_' → logprob: -16.875001907348633

Token 481: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.128163257315464e-07
    2. 'i' → logprob: -15.125
    3. '{i' → logprob: -20.0
    4. '(i' → logprob: -21.0
    5. '```' → logprob: -21.125
    6. '[
' → logprob: -21.875
    7. '[' → logprob: -22.375
    8. '[I' → logprob: -23.25
    9. '	i' → logprob: -23.625
    10. ' i' → logprob: -24.0

Token 482: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0501459538936615
    2. '[i' → logprob: -3.0501458644866943
    3. ' -' → logprob: -7.050146102905273
    4. 'i' → logprob: -7.300146102905273
    5. '[-' → logprob: -12.050146102905273
    6. '[' → logprob: -12.925146102905273
    7. '1' → logprob: -13.175146102905273
    8. '(i' → logprob: -13.300146102905273
    9. '```' → logprob: -14.175146102905273
    10. '{i' → logprob: -14.550146102905273

Token 483: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.961759259458631e-06
    2. ' ' → logprob: -12.250004768371582
    3. '```' → logprob: -16.5000057220459
    4. '   ' → logprob: -17.1250057220459
    5. ']' → logprob: -17.6250057220459
    6. '<|end|>' → logprob: -17.8750057220459
    7. 'i' → logprob: -18.0000057220459
    8. ')' → logprob: -18.6250057220459
    9. '  ' → logprob: -19.3125057220459
    10. '    ' → logprob: -19.3125057220459

Token 484: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03687047213315964
    2. '<|end|>' → logprob: -3.4118704795837402
    3. '           ' → logprob: -6.41187047958374
    4. ')
' → logprob: -7.03687047958374
    5. ']' → logprob: -8.411870002746582
    6. '               ' → logprob: -8.661870002746582
    7. ' )' → logprob: -9.036870002746582
    8. '       ' → logprob: -9.536870002746582
    9. '<|end|>' → logprob: -9.786870002746582
    10. '
' → logprob: -12.286870002746582

Token 485: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004549034405499697
    2. '               ' → logprob: -6.129549026489258
    3. '       ' → logprob: -6.254549026489258
    4. '<|end|>' → logprob: -8.379549026489258
    5. ' a' → logprob: -9.629549026489258
    6. 'a' → logprob: -10.254549026489258
    7. '            
' → logprob: -10.754549026489258
    8. '   ' → logprob: -11.254549026489258
    9. '          ' → logprob: -11.629549026489258
    10. '```' → logprob: -11.879549026489258

Token 486: ' seg' (ID: 3055)
  Prédit: 'seg'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seg' (adapté à ' seg') → logprob: -0.14943787455558777
    2. ' seg' → logprob: -2.27443790435791
    3. '               ' → logprob: -3.64943790435791
    4. '           ' → logprob: -5.02443790435791
    5. '       ' → logprob: -5.77443790435791
    6. '(seg' → logprob: -9.02443790435791
    7. '   ' → logprob: -9.64943790435791
    8. 'se' → logprob: -10.52443790435791
    9. ' ' → logprob: -11.39943790435791
    10. 'segment' → logprob: -11.52443790435791

Token 487: '.update' (ID: 8689)
  Prédit: '.update'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.update' → logprob: -3.619311974034645e-05
    2. '.' → logprob: -10.250036239624023
    3. ' .' → logprob: -14.875036239624023
    4. 'update' → logprob: -15.125036239624023
    5. '`.' → logprob: -17.250036239624023
    6. '   ' → logprob: -17.500036239624023
    7. ' update' → logprob: -18.375036239624023
    8. ').' → logprob: -18.625036239624023
    9. '.Update' → logprob: -18.625036239624023
    10. '.up' → logprob: -18.750036239624023

Token 488: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -2.1008713702030946e-06
    2. 'i' → logprob: -13.625001907348633
    3. '(' → logprob: -14.000001907348633
    4. '(a' → logprob: -18.375001907348633
    5. '(
' → logprob: -18.500001907348633
    6. '[i' → logprob: -18.625001907348633
    7. 'a' → logprob: -19.000001907348633
    8. ' (' → logprob: -19.000001907348633
    9. ' i' → logprob: -19.625001907348633
    10. '((' → logprob: -20.375001907348633

Token 489: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004205424804240465
    2. ' ,' → logprob: -5.629205226898193
    3. ',a' → logprob: -8.254205703735352
    4. ',i' → logprob: -8.379205703735352
    5. ')' → logprob: -9.504205703735352
    6. 'a' → logprob: -11.254205703735352
    7. ' ' → logprob: -12.629205703735352
    8. '<|end|>' → logprob: -12.629205703735352
    9. '           ' → logprob: -13.004205703735352
    10. '   ' → logprob: -13.004205703735352

Token 490: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -6.704273118884885e-07
    2. ' a' → logprob: -14.375000953674316
    3. '   ' → logprob: -17.25
    4. '           ' → logprob: -17.625
    5. '               ' → logprob: -18.75
    6. '	a' → logprob: -19.375
    7. '       ' → logprob: -19.75
    8. '                   ' → logprob: -20.0
    9. '```' → logprob: -20.625
    10. '_a' → logprob: -21.25

Token 491: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -4.4894986785948277e-05
    2. '[i' → logprob: -10.750044822692871
    3. 'List' → logprob: -11.125044822692871
    4. 'list' → logprob: -11.750044822692871
    5. '_LIST' → logprob: -15.375044822692871
    6. 'i' → logprob: -15.750044822692871
    7. '-list' → logprob: -15.875044822692871
    8. '_List' → logprob: -16.500045776367188
    9. '```' → logprob: -16.750045776367188
    10. '[' → logprob: -17.000045776367188

Token 492: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0001242772996192798
    2. 'i' → logprob: -9.000123977661133
    3. '[' → logprob: -15.000123977661133
    4. '(i' → logprob: -15.875123977661133
    5. '{i' → logprob: -16.250123977661133
    6. ')' → logprob: -16.500123977661133
    7. ' i' → logprob: -16.500123977661133
    8. '```' → logprob: -17.375123977661133
    9. ')i' → logprob: -17.500123977661133
    10. '	i' → logprob: -18.125123977661133

Token 493: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01125460397452116
    2. '])' → logprob: -4.511254787445068
    3. ' )' → logprob: -9.51125431060791
    4. ')
' → logprob: -9.63625431060791
    5. ')]' → logprob: -11.26125431060791
    6. '           ' → logprob: -11.38625431060791
    7. '   ' → logprob: -11.76125431060791
    8. '               ' → logprob: -12.01125431060791
    9. '       ' → logprob: -12.01125431060791
    10. ']' → logprob: -12.26125431060791

Token 494: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 495: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.4053404629230499
    2. '       ' → logprob: -1.1553404331207275
    3. ' a' → logprob: -4.155340671539307
    4. '           ' → logprob: -6.780340671539307
    5. 'i' → logprob: -7.405340671539307
    6. '<|end|>' → logprob: -7.780340671539307
    7. '   ' → logprob: -8.405340194702148
    8. '[' → logprob: -9.655340194702148
    9. '```' → logprob: -10.530340194702148
    10. ' ' → logprob: -10.655340194702148

Token 496: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -5.512236498361744e-07
    2. 'List' → logprob: -15.625000953674316
    3. '_lists' → logprob: -16.875
    4. 'list' → logprob: -17.125
    5. '_LIST' → logprob: -17.625
    6. '_' → logprob: -17.625
    7. '_lst' → logprob: -17.75
    8. 'l' → logprob: -17.75
    9. '_List' → logprob: -18.25
    10. '_l' → logprob: -18.25

Token 497: '[l' (ID: 38286)
  Prédit: '[l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[l' → logprob: -4.127333340875339e-06
    2. 'l' → logprob: -12.500003814697266
    3. '[' → logprob: -15.000003814697266
    4. '```' → logprob: -18.000003814697266
    5. '	l' → logprob: -18.375003814697266
    6. '[left' → logprob: -18.625003814697266
    7. '[L' → logprob: -18.875003814697266
    8. '   ' → logprob: -19.125003814697266
    9. '
' → logprob: -19.250003814697266
    10. ',l' → logprob: -19.500003814697266

Token 498: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0011479563545435667
    2. ' ]' → logprob: -7.001147747039795
    3. ']=' → logprob: -9.126148223876953
    4. '=' → logprob: -9.251148223876953
    5. ' =' → logprob: -10.376148223876953
    6. ')' → logprob: -15.501148223876953
    7. '`]' → logprob: -16.126148223876953
    8. '<|end|>' → logprob: -16.126148223876953
    9. '],' → logprob: -17.501148223876953
    10. ')]' → logprob: -17.501148223876953

Token 499: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04858805239200592
    2. ' =' → logprob: -3.0485880374908447
    3. '<|end|>' → logprob: -15.173587799072266
    4. '.=' → logprob: -15.923587799072266
    5. '=end' → logprob: -16.423587799072266
    6. '＝' → logprob: -16.673587799072266
    7. ']=' → logprob: -17.048587799072266
    8. '=
' → logprob: -17.173587799072266
    9. ')' → logprob: -17.298587799072266
    10. ')=' → logprob: -17.423587799072266

Token 500: ' last' (ID: 2174)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.005233763717114925
    2. ' last' → logprob: -5.2552337646484375
    3. '	last' → logprob: -18.630233764648438
    4. '(last' → logprob: -19.005233764648438
    5. '[last' → logprob: -19.130233764648438
    6. '   ' → logprob: -20.380233764648438
    7. ' ' → logprob: -20.880233764648438
    8. 'las' → logprob: -21.755233764648438
    9. ',last' → logprob: -22.130233764648438
    10. 'Last' → logprob: -22.130233764648438

Token 501: '_val' (ID: 13694)
  Prédit: '_val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -3.1424973713001236e-05
    2. 'val' → logprob: -10.375031471252441
    3. 'Val' → logprob: -16.000030517578125
    4. '_VAL' → logprob: -18.750030517578125
    5. '_' → logprob: -18.875030517578125
    6. '```' → logprob: -19.625030517578125
    7. '_list' → logprob: -19.750030517578125
    8. '[val' → logprob: -20.125030517578125
    9. 'a' → logprob: -20.375030517578125
    10. '_value' → logprob: -20.500030517578125

Token 502: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0016591129824519157
    2. '       ' → logprob: -6.501658916473389
    3. 'seg' → logprob: -10.001659393310547
    4. ',' → logprob: -10.626659393310547
    5. ' seg' → logprob: -10.876659393310547
    6. '               ' → logprob: -11.001659393310547
    7. '   ' → logprob: -11.126659393310547
    8. '
' → logprob: -11.126659393310547
    9. '(seg' → logprob: -12.751659393310547
    10. '<|end|>' → logprob: -12.876659393310547

Token 503: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07369264960289001
    2. 'seg' → logprob: -2.823692560195923
    3. ' seg' → logprob: -4.573692798614502
    4. '       ' → logprob: -6.698692798614502
    5. '(seg' → logprob: -9.948692321777344
    6. '   ' → logprob: -11.198692321777344
    7. '```' → logprob: -11.198692321777344
    8. '               ' → logprob: -11.573692321777344
    9. '<|end|>' → logprob: -12.698692321777344
    10. 'segments' → logprob: -12.948692321777344

Token 504: ' seg' (ID: 3055)
  Prédit: 'seg'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seg' (adapté à ' seg') → logprob: -0.23025986552238464
    2. ' seg' → logprob: -2.105259895324707
    3. '           ' → logprob: -2.480259895324707
    4. '       ' → logprob: -9.480259895324707
    5. '(seg' → logprob: -10.730259895324707
    6. '   ' → logprob: -11.605259895324707
    7. 'se' → logprob: -12.355259895324707
    8. '               ' → logprob: -12.730259895324707
    9. 'segment' → logprob: -12.730259895324707
    10. '          ' → logprob: -12.730259895324707

Token 505: '.update' (ID: 8689)
  Prédit: '.update'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.update' → logprob: -4.320199877838604e-07
    2. '.' → logprob: -15.0
    3. 'update' → logprob: -17.125
    4. ' .' → logprob: -19.875
    5. ' update' → logprob: -22.125
    6. '.Update' → logprob: -22.375
    7. '\.' → logprob: -23.125
    8. '```' → logprob: -23.375
    9. '​.' → logprob: -23.375
    10. '	update' → logprob: -23.625

Token 506: '(l' (ID: 4179)
  Prédit: '(l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -1.1472419600977446e-06
    2. '(' → logprob: -13.750000953674316
    3. 'l' → logprob: -17.250001907348633
    4. ' (' → logprob: -20.625001907348633
    5. '(L' → logprob: -20.750001907348633
    6. '(
' → logprob: -21.125001907348633
    7. '(i' → logprob: -21.125001907348633
    8. '(a' → logprob: -21.250001907348633
    9. '	l' → logprob: -21.625001907348633
    10. '((' → logprob: -21.875001907348633

Token 507: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0564331205387134e-05
    2. ' ,' → logprob: -12.12501049041748
    3. ',l' → logprob: -13.00001049041748
    4. ',a' → logprob: -13.25001049041748
    5. 'a' → logprob: -14.12501049041748
    6. ')' → logprob: -16.625011444091797
    7. ',last' → logprob: -16.750011444091797
    8. '           ' → logprob: -17.500011444091797
    9. ',
' → logprob: -17.750011444091797
    10. '),' → logprob: -18.750011444091797

Token 508: ' last' (ID: 2174)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.16053210198879242
    2. 'a' → logprob: -1.9105321168899536
    3. ' last' → logprob: -8.285531997680664
    4. ' a' → logprob: -10.035531997680664
    5. '   ' → logprob: -12.035531997680664
    6. 'l' → logprob: -12.535531997680664
    7. '           ' → logprob: -15.285531997680664
    8. ' ' → logprob: -15.410531997680664
    9. '  ' → logprob: -15.410531997680664
    10. '(last' → logprob: -15.535531997680664

Token 509: '_val' (ID: 13694)
  Prédit: '_val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -2.7491250875755213e-05
    2. '_list' → logprob: -11.000027656555176
    3. 'val' → logprob: -11.625027656555176
    4. ')' → logprob: -14.750027656555176
    5. 'Val' → logprob: -14.875027656555176
    6. '_VAL' → logprob: -15.875027656555176
    7. '```' → logprob: -15.875027656555176
    8. 'list' → logprob: -16.00002670288086
    9. 'vall' → logprob: -16.12502670288086
    10. '_idx' → logprob: -16.12502670288086

Token 510: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0017231308156624436
    2. ')
' → logprob: -6.376723289489746
    3. '       ' → logprob: -10.876723289489746
    4. '<|end|>' → logprob: -13.876723289489746
    5. ' )' → logprob: -14.501723289489746
    6. ')return' → logprob: -15.751723289489746
    7. ')
' → logprob: -15.751723289489746
    8. ')

' → logprob: -16.25172233581543
    9. '   ' → logprob: -16.75172233581543
    10. '),' → logprob: -17.00172233581543

Token 511: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 512: ' elif' (ID: 9497)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9169174432754517
    2. 'else' → logprob: -1.1669174432754517
    3. ' else' → logprob: -1.6669174432754517
    4. 'elif' (adapté à ' elif') → logprob: -2.541917324066162
    5. ' elif' → logprob: -3.916917324066162
    6. '   ' → logprob: -7.291917324066162
    7. '<|end|>' → logprob: -7.416917324066162
    8. '	elif' → logprob: -9.41691780090332
    9. '	else' → logprob: -10.29191780090332
    10. '```' → logprob: -11.16691780090332

Token 513: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.12708412110805511
    2. 'x' → logprob: -2.1270840167999268
    3. ' y' → logprob: -9.377083778381348
    4. ' ' → logprob: -9.752083778381348
    5. 'y' → logprob: -12.127083778381348
    6. '1' → logprob: -12.127083778381348
    7. '0' → logprob: -14.627083778381348
    8. '	x' → logprob: -14.877083778381348
    9. '2' → logprob: -15.377083778381348
    10. ' z' → logprob: -15.877083778381348

Token 514: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.023260388523340225
    2. '==' → logprob: -3.7732603549957275
    3. '=' → logprob: -11.773260116577148
    4. ' =' → logprob: -12.148260116577148
    5. ' ' → logprob: -14.023260116577148
    6. ' ===' → logprob: -14.523260116577148
    7. ' ' → logprob: -15.648260116577148
    8. ' ==
' → logprob: -16.02326011657715
    9. ')==' → logprob: -16.52326011657715
    10. '===' → logprob: -17.02326011657715

Token 515: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0021877337712794542
    2. ' ' → logprob: -6.127187728881836
    3. '2' → logprob: -14.189687728881836
    4. '   ' → logprob: -14.689687728881836
    5. '  ' → logprob: -15.189687728881836
    6. '0' → logprob: -15.377187728881836
    7. '```' → logprob: -16.439687728881836
    8. '.' → logprob: -16.814687728881836
    9. '１' → logprob: -16.814687728881836
    10. '<|end|>' → logprob: -17.127187728881836

Token 516: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00021867557370569557
    2. ' ' → logprob: -8.500218391418457
    3. '2' → logprob: -11.250218391418457
    4. '0' → logprob: -14.062718391418457
    5. '```' → logprob: -15.312718391418457
    6. '   ' → logprob: -15.437718391418457
    7. '3' → logprob: -15.562718391418457
    8. '  ' → logprob: -16.187719345092773
    9. '=' → logprob: -16.437719345092773
    10. 'elif' → logprob: -16.750219345092773

Token 517: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.005789424292743206
    2. ':
' → logprob: -5.255789279937744
    3. ',' → logprob: -8.505789756774902
    4. ' :' → logprob: -8.755789756774902
    5. '[' → logprob: -9.505789756774902
    6. '<|end|>' → logprob: -9.880789756774902
    7. '       ' → logprob: -10.380789756774902
    8. '):' → logprob: -11.005789756774902
    9. ' and' → logprob: -12.255789756774902
    10. '        ' → logprob: -12.755789756774902

Token 518: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05141432210803032
    2. ' ' → logprob: -4.301414489746094
    3. ',' → logprob: -4.551414489746094
    4. '        ' → logprob: -4.801414489746094
    5. '           ' → logprob: -4.801414489746094
    6. '   ' → logprob: -5.801414489746094
    7. '<|end|>' → logprob: -6.426414489746094
    8. ':' → logprob: -6.926414489746094
    9. ' #' → logprob: -7.176414489746094
    10. '        
' → logprob: -8.051414489746094

Token 519: ' #' (ID: 1069)
  Prédit: 'seg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seg' → logprob: -0.47396454215049744
    2. '           ' → logprob: -1.5989645719528198
    3. ' seg' → logprob: -2.5989644527435303
    4. '#' (adapté à ' #') → logprob: -3.4739644527435303
    5. '       ' → logprob: -3.7239644527435303
    6. 'a' → logprob: -4.348964691162109
    7. 'idx' → logprob: -4.598964691162109
    8. 'index' → logprob: -5.598964691162109
    9. ' idx' → logprob: -5.848964691162109
    10. ' a' → logprob: -5.973964691162109

Token 520: ' Query' (ID: 18574)
  Prédit: 'seg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'seg' → logprob: -0.20307593047618866
    2. 'res' → logprob: -2.578075885772705
    3. 'print' → logprob: -3.453075885772705
    4. 'val' → logprob: -3.703075885772705
    5. ' seg' → logprob: -3.953075885772705
    6. '#' → logprob: -4.453075885772705
    7. ' res' → logprob: -4.953075885772705
    8. 'pos' → logprob: -5.203075885772705
    9. 'idx' → logprob: -6.328075885772705
    10. 'min' → logprob: -6.953075885772705

Token 521: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -1.2120671272277832
    2. 'print' → logprob: -1.2120671272277832
    3. 'res' → logprob: -1.5870671272277832
    4. 'result' → logprob: -2.212067127227783
    5. ' =' → logprob: -3.087067127227783
    6. '           ' → logprob: -4.212067127227783
    7. ' res' → logprob: -5.337067127227783
    8. ' print' → logprob: -5.462067127227783
    9. ' min' → logprob: -5.587067127227783
    10. 'val' → logprob: -5.837067127227783

Token 522: ' in' (ID: 306)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3368028402328491
    2. 'value' → logprob: -2.4618029594421387
    3. ',' → logprob: -2.5868029594421387
    4. '_val' → logprob: -3.4618029594421387
    5. '_value' → logprob: -3.8368029594421387
    6. ' in' → logprob: -4.336802959442139
    7. '           ' → logprob: -4.586802959442139
    8. 'val' → logprob: -4.836802959442139
    9. ' value' → logprob: -4.836802959442139
    10. ' (' → logprob: -5.086802959442139

Token 523: ' [' (ID: 723)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.10264605283737183
    2. ' y' → logprob: -2.4776461124420166
    3. '(y' → logprob: -4.4776458740234375
    4. '[y' → logprob: -6.4776458740234375
    5. 'range' → logprob: -7.7276458740234375
    6. 'a' → logprob: -9.102645874023438
    7. '   ' → logprob: -9.727645874023438
    8. ' range' → logprob: -9.977645874023438
    9. ' a' → logprob: -11.102645874023438
    10. 'l' → logprob: -11.102645874023438

Token 524: 'l' (ID: 75)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -1.688212614681106e-05
    2. ' y' → logprob: -11.000017166137695
    3. '(y' → logprob: -16.875017166137695
    4. '           ' → logprob: -16.875017166137695
    5. '       ' → logprob: -18.750017166137695
    6. '   ' → logprob: -19.500017166137695
    7. ',y' → logprob: -20.500017166137695
    8. '	y' → logprob: -21.125017166137695
    9. '[y' → logprob: -21.125017166137695
    10. ')y' → logprob: -21.125017166137695

Token 525: '=y' (ID: 70421)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.18261466920375824
    2. ',y' → logprob: -2.30761456489563
    3. 'y' → logprob: -2.93261456489563
    4. ' y' → logprob: -4.807614803314209
    5. ' ,' → logprob: -5.182614803314209
    6. '=y' → logprob: -9.18261432647705
    7. '=' → logprob: -9.43261432647705
    8. '(y' → logprob: -9.55761432647705
    9. '           ' → logprob: -9.68261432647705
    10. ' =' → logprob: -10.30761432647705

Token 526: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00017016702622640878
    2. ' ,' → logprob: -8.87516975402832
    3. ',y' → logprob: -10.62516975402832
    4. ',r' → logprob: -12.87516975402832
    5. ',
' → logprob: -13.25016975402832
    6. ',z' → logprob: -13.37516975402832
    7. '           ' → logprob: -16.87516975402832
    8. ',n' → logprob: -17.12516975402832
    9. ',l' → logprob: -17.37516975402832
    10. ',q' → logprob: -17.50016975402832

Token 527: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.1048731580376625
    2. 'z' → logprob: -2.3548731803894043
    3. ' r' → logprob: -5.729873180389404
    4. ' z' → logprob: -6.604873180389404
    5. '           ' → logprob: -10.104872703552246
    6. 'y' → logprob: -11.604872703552246
    7. '            ' → logprob: -14.354872703552246
    8. '          ' → logprob: -14.479872703552246
    9. ' ' → logprob: -14.729872703552246
    10. '         ' → logprob: -14.729872703552246

Token 528: '=z' (ID: 196886)
  Prédit: '=z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=z' → logprob: -0.04658908396959305
    2. ',' → logprob: -3.1715891361236572
    3. ',z' → logprob: -5.796588897705078
    4. 'z' → logprob: -8.546588897705078
    5. '=' → logprob: -9.171588897705078
    6. '=y' → logprob: -9.421588897705078
    7. ']' → logprob: -9.421588897705078
    8. ' =' → logprob: -10.171588897705078
    9. ']=' → logprob: -11.046588897705078
    10. ' z' → logprob: -11.671588897705078

Token 529: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.012877127155661583
    2. ']
' → logprob: -4.387876987457275
    3. ' ]' → logprob: -8.887877464294434
    4. '           ' → logprob: -9.387877464294434
    5. ']
' → logprob: -9.887877464294434
    6. ']:' → logprob: -10.512877464294434
    7. ',' → logprob: -10.762877464294434
    8. ']

' → logprob: -10.887877464294434
    9. ']:
' → logprob: -11.387877464294434
    10. '       ' → logprob: -12.262877464294434

Token 530: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0035172796342521906
    2. '
' → logprob: -6.753517150878906
    3. ' l' → logprob: -6.878517150878906
    4. 'print' → logprob: -7.878517150878906
    5. ',' → logprob: -8.128517150878906
    6. '       ' → logprob: -8.878517150878906
    7. '            
' → logprob: -9.253517150878906
    8. 'l' → logprob: -9.378517150878906
    9. ' print' → logprob: -9.503517150878906
    10. '            ' → logprob: -10.003517150878906

Token 531: ' l' (ID: 305)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0002787359117064625
    2. ' print' → logprob: -9.00027847290039
    3. '           ' → logprob: -9.25027847290039
    4. 'res' → logprob: -10.00027847290039
    5. 'l' (adapté à ' l') → logprob: -12.00027847290039
    6. 'result' → logprob: -12.50027847290039
    7. '       ' → logprob: -13.75027847290039
    8. '
' → logprob: -13.75027847290039
    9. '            
' → logprob: -15.00027847290039
    10. '	print' → logprob: -15.12527847290039

Token 532: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.584036648273468
    2. '=' → logprob: -0.834036648273468
    3. ' =' → logprob: -4.834036827087402
    4. ',y' → logprob: -9.709036827087402
    5. ' ,' → logprob: -10.209036827087402
    6. '=y' → logprob: -11.584036827087402
    7. '=
' → logprob: -14.584036827087402
    8. ',l' → logprob: -14.834036827087402
    9. ' y' → logprob: -14.834036827087402
    10. ',
' → logprob: -15.084036827087402

Token 533: ' r' (ID: 428)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.03804768621921539
    2. ' y' → logprob: -3.2880477905273438
    3. 'z' → logprob: -12.038047790527344
    4. ' z' → logprob: -15.288047790527344
    5. 'r' → logprob: -16.788047790527344
    6. '           ' → logprob: -17.413047790527344
    7. '	y' → logprob: -17.788047790527344
    8. '    ' → logprob: -17.913047790527344
    9. '   ' → logprob: -18.163047790527344
    10. 'x' → logprob: -18.413047790527344

Token 534: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5814526677131653
    2. '=' → logprob: -0.8314526677131653
    3. ',' → logprob: -5.2064528465271
    4. '   ' → logprob: -11.581452369689941
    5. ' ,' → logprob: -12.456452369689941
    6. ' ' → logprob: -13.456452369689941
    7. '=y' → logprob: -14.331452369689941
    8. '       ' → logprob: -14.706452369689941
    9. '    ' → logprob: -14.956452369689941
    10. ',y' → logprob: -15.206452369689941

Token 535: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.1269282102584839
    2. ' y' → logprob: -2.1269283294677734
    3. '           ' → logprob: -16.376928329467773
    4. '	y' → logprob: -16.501928329467773
    5. '       ' → logprob: -18.376928329467773
    6. '        ' → logprob: -18.376928329467773
    7. '    ' → logprob: -18.626928329467773
    8. ',y' → logprob: -18.751928329467773
    9. '(y' → logprob: -19.126928329467773
    10. '   ' → logprob: -19.376928329467773

Token 536: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.659005157416686e-05
    2. ',r' → logprob: -10.125066757202148
    3. ' ,' → logprob: -10.625066757202148
    4. '           ' → logprob: -13.750066757202148
    5. ',
' → logprob: -14.250066757202148
    6. ' r' → logprob: -15.625066757202148
    7. 'r' → logprob: -16.25006675720215
    8. ',z' → logprob: -16.37506675720215
    9. '‌,' → logprob: -18.62506675720215
    10. '		' → logprob: -19.00006675720215

Token 537: ' z' (ID: 579)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.04859350249171257
    2. ' z' → logprob: -3.048593521118164
    3. 'r' → logprob: -12.048593521118164
    4. '	z' → logprob: -15.798593521118164
    5. ' r' → logprob: -16.923593521118164
    6. ' ' → logprob: -17.798593521118164
    7. '    ' → logprob: -17.798593521118164
    8. '   ' → logprob: -17.923593521118164
    9. 'y' → logprob: -17.923593521118164
    10. 'x' → logprob: -19.798593521118164

Token 538: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.024262698367238045
    2. '
' → logprob: -3.7742626667022705
    3. ',' → logprob: -8.399262428283691
    4. '
' → logprob: -8.774262428283691
    5. '<|end|>' → logprob: -8.774262428283691
    6. '            
' → logprob: -9.024262428283691
    7. '  
' → logprob: -9.399262428283691
    8. '		' → logprob: -9.649262428283691
    9. ',
' → logprob: -10.274262428283691
    10. '       ' → logprob: -10.649262428283691

Token 539: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.32252636551856995
    2. 'print' → logprob: -1.3225263357162476
    3. '       ' → logprob: -4.697526454925537
    4. ' print' → logprob: -9.322525978088379
    5. '
' → logprob: -12.572525978088379
    6. '		' → logprob: -12.822525978088379
    7. '   ' → logprob: -13.197525978088379
    8. '```' → logprob: -13.447525978088379
    9. 'result' → logprob: -13.572525978088379
    10. '	       ' → logprob: -13.697525978088379

Token 540: ' res' (ID: 694)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0031174644827842712
    2. '           ' → logprob: -6.378117561340332
    3. '       ' → logprob: -6.753117561340332
    4. ' print' → logprob: -8.503117561340332
    5. '
' → logprob: -10.503117561340332
    6. 'res' (adapté à ' res') → logprob: -11.753117561340332
    7. 'result' → logprob: -12.503117561340332
    8. '   ' → logprob: -13.378117561340332
    9. '```' → logprob: -13.878117561340332
    10. '	print' → logprob: -14.128117561340332

Token 541: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25192907452583313
    2. ' =' → logprob: -1.5019290447235107
    3. ')' → logprob: -17.626928329467773
    4. ' ' → logprob: -17.626928329467773
    5. ',' → logprob: -18.126928329467773
    6. '=sys' → logprob: -18.376928329467773
    7. '＝' → logprob: -18.501928329467773
    8. '=
' → logprob: -19.501928329467773
    9. '=s' → logprob: -19.751928329467773
    10. '=

' → logprob: -19.876928329467773

Token 542: ' seg' (ID: 3055)
  Prédit: 'seg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seg' → logprob: -0.02324605919420719
    2. ' seg' → logprob: -3.7732460498809814
    3. '(seg' → logprob: -15.023245811462402
    4. 'segment' → logprob: -15.273245811462402
    5. 'se' → logprob: -18.52324676513672
    6. '   ' → logprob: -18.77324676513672
    7. '_seg' → logprob: -19.39824676513672
    8. 'Seg' → logprob: -19.52324676513672
    9. 'segments' → logprob: -19.52324676513672
    10. ' segment' → logprob: -19.77324676513672

Token 543: '.query' (ID: 7608)
  Prédit: '.query'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.query' → logprob: -1.688212614681106e-05
    2. 'query' → logprob: -11.000017166137695
    3. '.' → logprob: -16.375017166137695
    4. ' query' → logprob: -17.125017166137695
    5. '	query' → logprob: -17.625017166137695
    6. '=query' → logprob: -18.250017166137695
    7. ' .' → logprob: -18.375017166137695
    8. '_query' → logprob: -19.000017166137695
    9. '$query' → logprob: -20.625017166137695
    10. '(query' → logprob: -21.250017166137695

Token 544: '(l' (ID: 4179)
  Prédit: '(l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -3.531315314830863e-06
    2. '(' → logprob: -12.750003814697266
    3. 'l' → logprob: -14.875003814697266
    4. '(
' → logprob: -16.375003814697266
    5. '(y' → logprob: -16.375003814697266
    6. ' (' → logprob: -17.875003814697266
    7. ' l' → logprob: -18.125003814697266
    8. '	l' → logprob: -18.375003814697266
    9. ',l' → logprob: -18.750003814697266
    10. '[l' → logprob: -19.500003814697266

Token 545: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005919939721934497
    2. ',r' → logprob: -7.750592231750488
    3. ' ,' → logprob: -8.750592231750488
    4. 'r' → logprob: -13.250592231750488
    5. ',
' → logprob: -13.875592231750488
    6. ' r' → logprob: -16.250591278076172
    7. '           ' → logprob: -17.500591278076172
    8. '   ' → logprob: -18.250591278076172
    9. ')' → logprob: -19.250591278076172
    10. '       ' → logprob: -19.375591278076172

Token 546: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0019297054968774319
    2. ' r' → logprob: -6.251929759979248
    3. '           ' → logprob: -13.87692928314209
    4. '   ' → logprob: -16.501930236816406
    5. '    ' → logprob: -16.876930236816406
    6. '            ' → logprob: -17.751930236816406
    7. '     ' → logprob: -18.126930236816406
    8. ' ' → logprob: -18.626930236816406
    9. '          ' → logprob: -18.626930236816406
    10. '       ' → logprob: -19.126930236816406

Token 547: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.1269443929195404
    2. ')' → logprob: -2.1269443035125732
    3. ')
' → logprob: -11.126944541931152
    4. '           ' → logprob: -13.626944541931152
    5. '       ' → logprob: -15.251944541931152
    6. ')

' → logprob: -16.126943588256836
    7. ' )
' → logprob: -16.876943588256836
    8. '),' → logprob: -18.376943588256836
    9. '())
' → logprob: -18.501943588256836
    10. '<|end|>' → logprob: -18.501943588256836

Token 548: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.016652867197990417
    2. 'print' → logprob: -4.266653060913086
    3. '       ' → logprob: -6.016653060913086
    4. ' print' → logprob: -10.641653060913086
    5. '```' → logprob: -10.766653060913086
    6. '<|end|>' → logprob: -13.516653060913086
    7. '   ' → logprob: -14.266653060913086
    8. '               ' → logprob: -15.141653060913086
    9. '	       ' → logprob: -15.141653060913086
    10. '
' → logprob: -15.516653060913086

Token 549: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.000559108448214829
    2. '       ' → logprob: -7.500559329986572
    3. ' print' → logprob: -12.750558853149414
    4. '           ' → logprob: -13.000558853149414
    5. '
' → logprob: -13.875558853149414
    6. '```' → logprob: -17.500558853149414
    7. '	print' → logprob: -19.125558853149414
    8. 'printf' → logprob: -19.750558853149414
    9. '   ' → logprob: -19.750558853149414
    10. '
' → logprob: -20.250558853149414

Token 550: '(res' (ID: 8331)
  Prédit: '(res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -0.0019310165662318468
    2. '(' → logprob: -6.251931190490723
    3. 'res' → logprob: -13.001931190490723
    4. '(
' → logprob: -16.501930236816406
    5. ' (' → logprob: -17.376930236816406
    6. '()' → logprob: -18.501930236816406
    7. ',res' → logprob: -18.501930236816406
    8. '(f' → logprob: -19.501930236816406
    9. '('' → logprob: -19.501930236816406
    10. ' res' → logprob: -19.626930236816406

Token 551: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0280383548888494e-06
    2. ')
' → logprob: -13.875000953674316
    3. ' )' → logprob: -16.750001907348633
    4. ')`' → logprob: -18.250001907348633
    5. '()' → logprob: -18.750001907348633
    6. '`)' → logprob: -18.875001907348633
    7. ')}' → logprob: -19.125001907348633
    8. '))' → logprob: -19.250001907348633
    9. '),' → logprob: -19.250001907348633
    10. '       ' → logprob: -19.375001907348633

Token 552: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 553: ' else' (ID: 1203)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 554: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.007334125693887472
    2. ':
' → logprob: -5.007334232330322
    3. ' :' → logprob: -7.882334232330322
    4. '       ' → logprob: -9.507333755493164
    5. '{' → logprob: -9.757333755493164
    6. '   ' → logprob: -10.382333755493164
    7. '<|end|>' → logprob: -10.382333755493164
    8. '=' → logprob: -12.007333755493164
    9. '        ' → logprob: -12.382333755493164
    10. '[' → logprob: -12.757333755493164

Token 555: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002785384887829423
    2. '   ' → logprob: -6.2527852058410645
    3. '           ' → logprob: -8.502785682678223
    4. '```' → logprob: -9.002785682678223
    5. '	' → logprob: -9.252785682678223
    6. ' raise' → logprob: -9.502785682678223
    7. 'return' → logprob: -9.877785682678223
    8. ' return' → logprob: -9.877785682678223
    9. '        ' → logprob: -9.877785682678223
    10. 'raise' → logprob: -10.377785682678223

Token 556: ' #' (ID: 1069)
  Prédit: ' pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pass' → logprob: -0.7918537855148315
    2. 'l' → logprob: -1.5418537855148315
    3. ' l' → logprob: -1.5418537855148315
    4. 'pass' → logprob: -2.416853904724121
    5. ' break' → logprob: -4.791853904724121
    6. '#' (adapté à ' #') → logprob: -4.791853904724121
    7. ' #' → logprob: -5.541853904724121
    8. '   ' → logprob: -5.791853904724121
    9. 'break' → logprob: -5.791853904724121
    10. 'a' → logprob: -7.416853904724121

Token 557: ' Update' (ID: 9152)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.17016802728176117
    2. ' l' → logprob: -2.670167922973633
    3. 'pass' → logprob: -3.295167922973633
    4. ' pass' → logprob: -3.545167922973633
    5. '#' → logprob: -4.795167922973633
    6. 'x' → logprob: -5.420167922973633
    7. 'break' → logprob: -6.545167922973633
    8. ' break' → logprob: -6.545167922973633
    9. 'n' → logprob: -6.795167922973633
    10. 'a' → logprob: -7.170167922973633

Token 558: ' pos' (ID: 1253)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.4989818334579468
    2. 'l' → logprob: -2.2489819526672363
    3. 'idx' → logprob: -2.2489819526672363
    4. ' y' → logprob: -2.4989819526672363
    5. 'p' → logprob: -3.3739819526672363
    6. 'i' → logprob: -3.3739819526672363
    7. 'a' → logprob: -4.498981952667236
    8. ' idx' → logprob: -4.873981952667236
    9. ' l' → logprob: -5.748981952667236
    10. '_,' → logprob: -6.373981952667236

Token 559: '=y' (ID: 70421)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04561091586947441
    2. ' ,' → logprob: -4.4206109046936035
    3. ' y' → logprob: -4.4206109046936035
    4. 'y' → logprob: -5.2956109046936035
    5. '           ' → logprob: -5.2956109046936035
    6. ' =' → logprob: -5.6706109046936035
    7. ',y' → logprob: -5.9206109046936035
    8. ' z' → logprob: -6.9206109046936035
    9. '_,' → logprob: -7.1706109046936035
    10. '=' → logprob: -7.1706109046936035

Token 560: ' with' (ID: 483)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03471812978386879
    2. ',val' → logprob: -4.034718036651611
    3. 'val' → logprob: -4.534718036651611
    4. '           ' → logprob: -6.034718036651611
    5. ' val' → logprob: -6.784718036651611
    6. ',value' → logprob: -7.159718036651611
    7. 'value' → logprob: -7.409718036651611
    8. ' ,' → logprob: -7.534718036651611
    9. ' ' → logprob: -9.28471851348877
    10. 'v' → logprob: -10.03471851348877

Token 561: ' val' (ID: 1459)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.0006279678200371563
    2. ' z' → logprob: -7.5006279945373535
    3. 'value' → logprob: -10.125627517700195
    4. 'val' → logprob: -11.500627517700195
    5. 'y' → logprob: -11.625627517700195
    6. 'a' → logprob: -12.250627517700195
    7. 'w' → logprob: -12.625627517700195
    8. '   ' → logprob: -13.000627517700195
    9. 'v' → logprob: -13.250627517700195
    10. 'x' → logprob: -14.250627517700195

Token 562: '=z' (ID: 196886)
  Prédit: ' z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' z' → logprob: -0.5939732789993286
    2. 'z' → logprob: -1.2189732789993286
    3. ',' → logprob: -1.9689732789993286
    4. '           ' → logprob: -5.218973159790039
    5. ' =' → logprob: -5.968973159790039
    6. '=' → logprob: -6.093973159790039
    7. ',z' → logprob: -6.718973159790039
    8. ' y' → logprob: -7.718973159790039
    9. '=z' → logprob: -8.343973159790039
    10. ' ,' → logprob: -8.343973159790039

Token 563: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.007251645904034376
    2. 'seg' → logprob: -5.507251739501953
    3. ',' → logprob: -6.632251739501953
    4. ' seg' → logprob: -6.757251739501953
    5. '
' → logprob: -8.632251739501953
    6. '       ' → logprob: -8.632251739501953
    7. '   ' → logprob: -8.882251739501953
    8. 'pos' → logprob: -10.132251739501953
    9. '(seg' → logprob: -10.507251739501953
    10. '            
' → logprob: -11.132251739501953

Token 564: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3825932443141937
    2. 'seg' → logprob: -1.2575932741165161
    3. 'a' → logprob: -3.6325931549072266
    4. ' seg' → logprob: -5.632593154907227
    5. '   ' → logprob: -6.507593154907227
    6. ' a' → logprob: -6.882593154907227
    7. '       ' → logprob: -7.007593154907227
    8. ',' → logprob: -10.382593154907227
    9. '```' → logprob: -11.257593154907227
    10. '            
' → logprob: -11.632593154907227

Token 565: ' pos' (ID: 1253)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.479387104511261
    2. 'seg' → logprob: -0.979387104511261
    3. '           ' → logprob: -5.979387283325195
    4. ' seg' → logprob: -6.729387283325195
    5. ' a' → logprob: -6.979387283325195
    6. 'y' → logprob: -8.229387283325195
    7. 'pos' (adapté à ' pos') → logprob: -8.479387283325195
    8. '   ' → logprob: -9.479387283325195
    9. 'l' → logprob: -9.979387283325195
    10. 'segment' → logprob: -11.854387283325195

Token 566: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2475837916135788
    2. '=' → logprob: -1.7475837469100952
    3. ',' → logprob: -3.1225838661193848
    4. ' ,' → logprob: -6.872583866119385
    5. '=y' → logprob: -10.747583389282227
    6. ',y' → logprob: -11.372583389282227
    7. ' ' → logprob: -12.372583389282227
    8. ')' → logprob: -13.372583389282227
    9. '  ' → logprob: -14.497583389282227
    10. '   ' → logprob: -14.622583389282227

Token 567: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.10208499431610107
    2. ' val' → logprob: -2.3520851135253906
    3. 'z' → logprob: -6.477085113525391
    4. ' z' → logprob: -8.10208511352539
    5. 'value' → logprob: -11.47708511352539
    6. '=' → logprob: -11.85208511352539
    7. ' =' → logprob: -12.22708511352539
    8. '_val' → logprob: -12.47708511352539
    9. 'v' → logprob: -12.60208511352539
    10. '	val' → logprob: -13.10208511352539

Token 568: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25231170654296875
    2. '=' → logprob: -1.5023117065429688
    3. ',' → logprob: -7.877311706542969
    4. '=y' → logprob: -13.502311706542969
    5. ' ,' → logprob: -13.752311706542969
    6. ' ' → logprob: -14.377311706542969
    7. ',y' → logprob: -15.752311706542969
    8. ')' → logprob: -17.25231170654297
    9. '＝' → logprob: -18.00231170654297
    10. '=user' → logprob: -18.25231170654297

Token 569: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.07888989895582199
    2. ' y' → logprob: -2.578889846801758
    3. '	y' → logprob: -15.703889846801758
    4. ',y' → logprob: -18.203889846801758
    5. '    ' → logprob: -18.453889846801758
    6. '   ' → logprob: -18.703889846801758
    7. '(y' → logprob: -19.578889846801758
    8. '       ' → logprob: -19.828889846801758
    9. ')y' → logprob: -20.828889846801758
    10. '‘y' → logprob: -20.953889846801758

Token 570: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002044744323939085
    2. ' ,' → logprob: -6.377044677734375
    3. ',z' → logprob: -8.002044677734375
    4. ' z' → logprob: -11.877044677734375
    5. 'z' → logprob: -15.252044677734375
    6. ',val' → logprob: -15.252044677734375
    7. ' ' → logprob: -16.252044677734375
    8. ',
' → logprob: -16.877044677734375
    9. '=' → logprob: -17.752044677734375
    10. '‌,' → logprob: -17.877044677734375

Token 571: ' z' (ID: 579)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.03804149478673935
    2. ' z' → logprob: -3.288041591644287
    3. '	z' → logprob: -16.913042068481445
    4. '   ' → logprob: -20.038042068481445
    5. '    ' → logprob: -20.163042068481445
    6. '_z' → logprob: -21.788042068481445
    7. ' ' → logprob: -22.038042068481445
    8. ' ' → logprob: -22.663042068481445
    9. '*z' → logprob: -22.663042068481445
    10. '.z' → logprob: -22.788042068481445

Token 572: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.021232454106211662
    2. '           ' → logprob: -3.8962323665618896
    3. 'seg' → logprob: -7.521232604980469
    4. '
' → logprob: -9.521232604980469
    5. ' seg' → logprob: -10.771232604980469
    6. '            
' → logprob: -10.896232604980469
    7. '    
' → logprob: -11.396232604980469
    8. '       ' → logprob: -11.771232604980469
    9. '   ' → logprob: -12.146232604980469
    10. '  
' → logprob: -12.896232604980469

Token 573: '           ' (ID: 352)
  Prédit: 'seg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seg' → logprob: -0.2740940749645233
    2. ' seg' → logprob: -1.5240941047668457
    3. '           ' → logprob: -4.399094104766846
    4. '   ' → logprob: -5.399094104766846
    5. '
' → logprob: -6.024094104766846
    6. 'a' → logprob: -6.399094104766846
    7. ' a' → logprob: -7.274094104766846
    8. '(seg' → logprob: -8.649093627929688
    9. '    
' → logprob: -10.024093627929688
    10. '```' → logprob: -10.649093627929688

Token 574: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -4.727905979962088e-05
    2. '           ' → logprob: -10.87504768371582
    3. ' a' → logprob: -11.00004768371582
    4. '   ' → logprob: -11.62504768371582
    5. 'seg' → logprob: -13.00004768371582
    6. '       ' → logprob: -15.00004768371582
    7. '	a' → logprob: -17.62504768371582
    8. ' ' → logprob: -17.87504768371582
    9. '```' → logprob: -18.25004768371582
    10. '  ' → logprob: -19.12504768371582

Token 575: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -1.9361264946837764e-07
    2. 'list' → logprob: -16.0
    3. '[pos' → logprob: -16.875
    4. 'List' → logprob: -18.625
    5. '_lists' → logprob: -18.75
    6. 'pos' → logprob: -19.375
    7. '_LIST' → logprob: -19.5
    8. '[' → logprob: -19.75
    9. 'a' → logprob: -20.0
    10. '-list' → logprob: -20.125

Token 576: '[pos' (ID: 48272)
  Prédit: '[pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[pos' → logprob: -3.8889261304575484e-06
    2. '[val' → logprob: -12.625003814697266
    3. 'pos' → logprob: -15.000003814697266
    4. '[' → logprob: -16.125003814697266
    5. '[position' → logprob: -17.625003814697266
    6. '=' → logprob: -18.750003814697266
    7. '\[' → logprob: -19.125003814697266
    8. '
' → logprob: -19.125003814697266
    9. ' [' → logprob: -19.250003814697266
    10. '```' → logprob: -19.500003814697266

Token 577: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16118228435516357
    2. ' =' → logprob: -1.9111822843551636
    3. ']' → logprob: -7.036182403564453
    4. ']=' → logprob: -9.661182403564453
    5. ')' → logprob: -12.036182403564453
    6. ',' → logprob: -12.286182403564453
    7. ' ]' → logprob: -12.786182403564453
    8. ')=' → logprob: -14.286182403564453
    9. ' ' → logprob: -16.161182403564453
    10. '<|end|>' → logprob: -16.911182403564453

Token 578: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.006715370807796717
    2. ' =' → logprob: -5.006715297698975
    3. '＝' → logprob: -19.631715774536133
    4. '.=' → logprob: -20.506715774536133
    5. ',' → logprob: -20.881715774536133
    6. '=value' → logprob: -21.631715774536133
    7. '=
' → logprob: -21.881715774536133
    8. '=

' → logprob: -22.506715774536133
    9. '   ' → logprob: -23.006715774536133
    10. ')=' → logprob: -23.506715774536133

Token 579: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -7.941850526549388e-06
    2. ' val' → logprob: -11.750007629394531
    3. '	val' → logprob: -21.12500762939453
    4. '[val' → logprob: -23.12500762939453
    5. '_val' → logprob: -23.62500762939453
    6. '           ' → logprob: -24.00000762939453
    7. ',val' → logprob: -24.12500762939453
    8. '(val' → logprob: -24.37500762939453
    9. '.val' → logprob: -25.25000762939453
    10. 'va' → logprob: -26.75000762939453

Token 580: '
' (ID: 198)
  Prédit: ' seg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' seg' → logprob: -0.19497589766979218
    2. 'seg' → logprob: -1.8199758529663086
    3. '           ' → logprob: -4.194975852966309
    4. '(seg' → logprob: -11.069975852966309
    5. '   ' → logprob: -11.444975852966309
    6. '       ' → logprob: -12.444975852966309
    7. '```' → logprob: -12.444975852966309
    8. ' ' → logprob: -13.319975852966309
    9. '
' → logprob: -13.444975852966309
    10. '.seg' → logprob: -13.944975852966309

Token 581: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7253637313842773
    2. ' seg' → logprob: -0.9753637313842773
    3. 'seg' → logprob: -1.9753637313842773
    4. '   ' → logprob: -10.100363731384277
    5. '       ' → logprob: -10.350363731384277
    6. ' ' → logprob: -12.725363731384277
    7. '(seg' → logprob: -12.725363731384277
    8. '```' → logprob: -12.725363731384277
    9. '          ' → logprob: -13.850363731384277
    10. '               ' → logprob: -14.225363731384277

Token 582: ' seg' (ID: 3055)
  Prédit: 'seg'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seg' (adapté à ' seg') → logprob: -1.1472419600977446e-06
    2. ' seg' → logprob: -13.750000953674316
    3. '           ' → logprob: -17.625001907348633
    4. '(seg' → logprob: -19.375001907348633
    5. 'segment' → logprob: -21.125001907348633
    6. '```' → logprob: -22.500001907348633
    7. 'segu' → logprob: -22.625001907348633
    8. '   ' → logprob: -22.875001907348633
    9. 'Seg' → logprob: -23.000001907348633
    10. '       ' → logprob: -23.125001907348633

Token 583: '.update' (ID: 8689)
  Prédit: '.update'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.update' → logprob: -1.8624639324116288e-06
    2. '.' → logprob: -13.500001907348633
    3. 'update' → logprob: -14.750001907348633
    4. ' .' → logprob: -18.500001907348633
    5. '.Update' → logprob: -20.125001907348633
    6. ' update' → logprob: -20.750001907348633
    7. '_update' → logprob: -20.750001907348633
    8. '.up' → logprob: -21.375001907348633
    9. '```' → logprob: -22.000001907348633
    10. '(update' → logprob: -22.625001907348633

Token 584: '(pos' (ID: 24566)
  Prédit: '(pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pos' → logprob: -0.07889991998672485
    2. 'pos' → logprob: -2.57889986038208
    3. ' pos' → logprob: -11.578900337219238
    4. '(val' → logprob: -15.578900337219238
    5. ',pos' → logprob: -15.703900337219238
    6. '(' → logprob: -15.953900337219238
    7. '[pos' → logprob: -15.953900337219238
    8. '	pos' → logprob: -16.453899383544922
    9. 'val' → logprob: -17.328899383544922
    10. '_pos' → logprob: -17.578899383544922

Token 585: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004130168817937374
    2. ',val' → logprob: -5.5041303634643555
    3. ' ,' → logprob: -9.879130363464355
    4. '[val' → logprob: -15.379130363464355
    5. 'val' → logprob: -16.12912940979004
    6. ',value' → logprob: -16.75412940979004
    7. ' val' → logprob: -17.75412940979004
    8. '           ' → logprob: -18.00412940979004
    9. ',
' → logprob: -18.50412940979004
    10. '(val' → logprob: -18.75412940979004

Token 586: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -4.5491004129871726e-05
    2. ' val' → logprob: -10.000045776367188
    3. '	val' → logprob: -18.875045776367188
    4. '_val' → logprob: -21.500045776367188
    5. '[val' → logprob: -21.875045776367188
    6. 'va' → logprob: -22.250045776367188
    7. '(val' → logprob: -22.375045776367188
    8. 'v' → logprob: -23.000045776367188
    9. ',val' → logprob: -23.250045776367188
    10. '.val' → logprob: -23.250045776367188

Token 587: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -9.729906196298543e-06
    2. '<|end|>' → logprob: -12.250009536743164
    3. ')
' → logprob: -12.375009536743164
    4. ' )' → logprob: -14.750009536743164
    5. '```' → logprob: -16.375009536743164
    6. ')return' → logprob: -16.500009536743164
    7. '   ' → logprob: -16.875009536743164
    8. '}' → logprob: -17.500009536743164
    9. '       ' → logprob: -17.750009536743164
    10. '())' → logprob: -17.750009536743164

Token 588: 'if' (ID: 366)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 589: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.2520264685153961
    2. '__' → logprob: -1.5020264387130737
    3. 'if' → logprob: -10.252026557922363
    4. '_' → logprob: -10.627026557922363
    5. '_name' → logprob: -10.752026557922363
    6. '___' → logprob: -11.752026557922363
    7. 'name' → logprob: -13.002026557922363
    8. ' if' → logprob: -13.127026557922363
    9. '```' → logprob: -13.627026557922363
    10. ' _' → logprob: -14.502026557922363

Token 590: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.011691815219819546
    2. 'name' → logprob: -5.261692047119141
    3. '==' → logprob: -5.511692047119141
    4. ' ==' → logprob: -6.136692047119141
    5. '=="' → logprob: -10.26169204711914
    6. ' __' → logprob: -10.26169204711914
    7. '__.__' → logprob: -10.51169204711914
    8. '```' → logprob: -10.63669204711914
    9. 'if' → logprob: -10.76169204711914
    10. '.__' → logprob: -10.88669204711914

Token 591: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -2.45848218582978e-06
    2. '==' → logprob: -13.75000286102295
    3. '__.__' → logprob: -13.87500286102295
    4. ' ==' → logprob: -16.375001907348633
    5. '__('' → logprob: -16.375001907348633
    6. '__.' → logprob: -16.750001907348633
    7. '___' → logprob: -17.375001907348633
    8. 'name' → logprob: -17.500001907348633
    9. '____' → logprob: -17.875001907348633
    10. '=="' → logprob: -18.250001907348633

Token 592: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.07415619492530823
    2. '==' → logprob: -2.6991562843322754
    3. ' ==' → logprob: -5.699156284332275
    4. '=="' → logprob: -7.199156284332275
    5. '=='' → logprob: -9.324155807495117
    6. '__.__' → logprob: -11.074155807495117
    7. '=' → logprob: -12.324155807495117
    8. '===' → logprob: -13.449155807495117
    9. '___' → logprob: -14.199155807495117
    10. '_' → logprob: -14.324155807495117

Token 593: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.061989083886146545
    2. ''' → logprob: -2.8119890689849854
    3. '__' → logprob: -10.936988830566406
    4. ' "__' → logprob: -12.686988830566406
    5. ' '__' → logprob: -15.686988830566406
    6. ''"' → logprob: -16.686988830566406
    7. '"'' → logprob: -16.686988830566406
    8. '"name' → logprob: -16.811988830566406
    9. '"<?' → logprob: -17.311988830566406
    10. '   ' → logprob: -17.436988830566406

Token 594: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.01625312864780426
    2. '__' → logprob: -4.5162529945373535
    3. '"' → logprob: -5.2662529945373535
    4. ''' → logprob: -10.766253471374512
    5. 'name' → logprob: -12.141253471374512
    6. '_main' → logprob: -14.141253471374512
    7. ' main' → logprob: -14.516253471374512
    8. '__":
' → logprob: -15.141253471374512
    9. ' "__' → logprob: -15.391253471374512
    10. 'built' → logprob: -15.766253471374512

Token 595: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.12727214395999908
    2. '__' → logprob: -2.127272129058838
    3. '__.' → logprob: -8.627272605895996
    4. '__':
' → logprob: -9.252272605895996
    5. '__.__' → logprob: -9.877272605895996
    6. '__["' → logprob: -11.627272605895996
    7. '__:' → logprob: -12.627272605895996
    8. '__("' → logprob: -13.252272605895996
    9. '```' → logprob: -13.752272605895996
    10. '__()
' → logprob: -14.377272605895996

Token 596: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.014683913439512253
    2. '   ' → logprob: -4.264683723449707
    3. ' main' → logprob: -8.014683723449707
    4. '	main' → logprob: -9.139683723449707
    5. '__' → logprob: -9.764683723449707
    6. '```' → logprob: -11.014683723449707
    7. '_main' → logprob: -12.389683723449707
    8. ' ' → logprob: -13.764683723449707
    9. '(main' → logprob: -14.264683723449707
    10. 'run' → logprob: -14.514683723449707

Token 597: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -7.941850526549388e-06
    2. ' main' → logprob: -11.750007629394531
    3. '	main' → logprob: -18.00000762939453
    4. '   ' → logprob: -19.00000762939453
    5. '(main' → logprob: -23.12500762939453
    6. '.main' → logprob: -23.25000762939453
    7. '_main' → logprob: -23.75000762939453
    8. '```' → logprob: -24.00000762939453
    9. ' ' → logprob: -24.62500762939453
    10. 'import' → logprob: -24.62500762939453

Token 598: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.05152585729956627
    2. '<|end|>' → logprob: -3.051525831222534
    3. '
' → logprob: -6.801526069641113
    4. '(' → logprob: -7.176526069641113
    5. '```' → logprob: -7.926526069641113
    6. '()
' → logprob: -8.301526069641113
    7. ')' → logprob: -9.051526069641113
    8. '#' → logprob: -9.426526069641113
    9. '<|end|>' → logprob: -9.426526069641113
    10. '();' → logprob: -10.301526069641113


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 596
Tokens correctement prédits (1ère position, stricte): 256
Tokens correctement prédits (1ère position, avec adaptation): 293
Tokens correctement prédits (top 10): 524
Précision stricte (1ère position): 42.95%
Précision adaptée (1ère position): 49.16%
Précision (top 10): 87.92%
================================================================================
