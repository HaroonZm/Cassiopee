================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:07:55
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
while True:
    N, M = map(int, input().split())
    if N == 0 and M == 0:
        break
    instructions = [int(input()) for _ in range(N)]
    dice = [int(input()) for _ in range(M)]

    pos = 0
    for i, d in enumerate(dice, 1):
        pos += d
        if pos >= N - 1:
            print(i)
            break
        pos += instructions[pos]  # instructions indexed from 0
        if pos >= N - 1:
            print(i)
            break
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'while' (ID: 7032)
  → Token d'amorce (pas de prédiction)

Token 1: ' True' (ID: 6432)
  → Token d'amorce (pas de prédiction)

Token 2: ':
' (ID: 734)
  → Token d'amorce (pas de prédiction)

Token 3: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5957265496253967
    2. '\' → logprob: -2.220726490020752
    3. ' ' → logprob: -2.470726490020752
    4. '```' → logprob: -2.845726490020752
    5. '    ' → logprob: -2.970726490020752
    6. '    
' → logprob: -3.220726490020752
    7. '\n' → logprob: -3.720726490020752
    8. ' 
' → logprob: -3.845726490020752
    9. '<|end|>' → logprob: -3.970726490020752
    10. '  
' → logprob: -5.095726490020752

Token 4: ' N' (ID: 478)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19517217576503754
    2. '    ' → logprob: -2.695172071456909
    3. ' ' → logprob: -3.070172071456909
    4. '```' → logprob: -3.195172071456909
    5. '       ' → logprob: -5.195172309875488
    6. '    
' → logprob: -5.695172309875488
    7. ' pass' → logprob: -5.945172309875488
    8. '  ' → logprob: -6.445172309875488
    9. 'pass' → logprob: -6.445172309875488
    10. ' ```' → logprob: -6.945172309875488

Token 5: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.138932228088379
    2. '   ' → logprob: -1.513932228088379
    3. ' ' → logprob: -1.888932228088379
    4. 'o' → logprob: -2.638932228088379
    5. '-' → logprob: -3.388932228088379
    6. ' =' → logprob: -3.763932228088379
    7. '  ' → logprob: -3.763932228088379
    8. '>' → logprob: -3.888932228088379
    9. '+' → logprob: -3.888932228088379
    10. '_' → logprob: -4.013932228088379

Token 6: ' M' (ID: 391)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.7437698841094971
    2. 'input' → logprob: -1.243769884109497
    3. 'space' → logprob: -2.618769884109497
    4. ' ' → logprob: -3.243769884109497
    5. ' space' → logprob: -3.868769884109497
    6. ' =' → logprob: -3.993769884109497
    7. '    ' → logprob: -4.618769645690918
    8. '  ' → logprob: -4.618769645690918
    9. '"' → logprob: -4.868769645690918
    10. 's' → logprob: -4.993769645690918

Token 7: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4395752549171448
    2. ' =' → logprob: -1.0645751953125
    3. ',' → logprob: -4.5645751953125
    4. ' ,' → logprob: -8.5645751953125
    5. ')' → logprob: -8.8145751953125
    6. ' ' → logprob: -10.3145751953125
    7. '<|end|>' → logprob: -12.0645751953125
    8. '   ' → logprob: -12.6895751953125
    9. ' =
' → logprob: -12.6895751953125
    10. '  ' → logprob: -13.0645751953125

Token 8: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.0658901184797287
    2. 'map' → logprob: -2.815890073776245
    3. ' input' → logprob: -5.690890312194824
    4. 'input' → logprob: -7.565890312194824
    5. ' ' → logprob: -11.940890312194824
    6. ' list' → logprob: -12.065890312194824
    7. ' int' → logprob: -13.065890312194824
    8. 'int' → logprob: -13.565890312194824
    9. '(map' → logprob: -13.940890312194824
    10. '	map' → logprob: -14.065890312194824

Token 9: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.39596715569496155
    2. '(int' → logprob: -1.1459671258926392
    3. '(str' → logprob: -4.77096700668335
    4. '(input' → logprob: -7.77096700668335
    5. '(
' → logprob: -9.520967483520508
    6. '(lambda' → logprob: -10.270967483520508
    7. '(list' → logprob: -10.895967483520508
    8. 'int' → logprob: -11.145967483520508
    9. 'input' → logprob: -12.145967483520508
    10. 'str' → logprob: -12.395967483520508

Token 10: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.477202832698822
    2. 'input' → logprob: -1.4772028923034668
    3. ')' → logprob: -2.852202892303467
    4. ',input' → logprob: -2.977202892303467
    5. ',' → logprob: -3.352202892303467
    6. ' input' → logprob: -5.102202892303467
    7. '(' → logprob: -6.852202892303467
    8. '=input' → logprob: -9.227202415466309
    9. '[input' → logprob: -9.727202415466309
    10. '```' → logprob: -9.727202415466309

Token 11: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.38691046833992004
    2. ' input' → logprob: -1.1369104385375977
    3. ')' → logprob: -10.261910438537598
    4. '(input' → logprob: -13.261910438537598
    5. ' )' → logprob: -14.011910438537598
    6. ' ' → logprob: -14.261910438537598
    7. ',input' → logprob: -14.886910438537598
    8. '```' → logprob: -14.886910438537598
    9. '	input' → logprob: -15.636910438537598
    10. '=input' → logprob: -15.886910438537598

Token 12: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.23662406206130981
    2. '())' → logprob: -1.986624002456665
    3. '()' → logprob: -2.611624002456665
    4. '());' → logprob: -10.111623764038086
    5. '()))' → logprob: -10.486623764038086
    6. ')' → logprob: -11.111623764038086
    7. '()`' → logprob: -11.986623764038086
    8. '(' → logprob: -12.111623764038086
    9. ' ())' → logprob: -12.111623764038086
    10. '()),' → logprob: -12.361623764038086

Token 13: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0002137882256647572
    2. 'strip' → logprob: -8.625213623046875
    3. 'rstrip' → logprob: -10.375213623046875
    4. ' split' → logprob: -13.375213623046875
    5. '(split' → logprob: -13.750213623046875
    6. ')' → logprob: -14.875213623046875
    7. 'spl' → logprob: -16.375213623046875
    8. 'read' → logprob: -17.125213623046875
    9. 'replace' → logprob: -17.375213623046875
    10. 'startswith' → logprob: -18.125213623046875

Token 14: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.699194610118866
    2. '())' → logprob: -1.0741946697235107
    3. '))' → logprob: -1.9491946697235107
    4. '()))' → logprob: -4.199194431304932
    5. '()' → logprob: -5.574194431304932
    6. '(' → logprob: -9.32419490814209
    7. '('' → logprob: -9.69919490814209
    8. '())
' → logprob: -10.69919490814209
    9. ')))' → logprob: -11.19919490814209
    10. ''))' → logprob: -11.82419490814209

Token 15: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4380630552768707
    2. '   ' → logprob: -1.3130630254745483
    3. ' if' → logprob: -3.563063144683838
    4. ')' → logprob: -3.813063144683838
    5. ' ' → logprob: -4.438063144683838
    6. 'if' → logprob: -5.438063144683838
    7. '):' → logprob: -5.688063144683838
    8. '    ' → logprob: -5.938063144683838
    9. '<|end|>' → logprob: -5.938063144683838
    10. ',' → logprob: -6.313063144683838

Token 16: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5122628808021545
    2. '   ' → logprob: -1.3872628211975098
    3. 'if' (adapté à ' if') → logprob: -2.0122628211975098
    4. ' ' → logprob: -4.88726282119751
    5. ' i' → logprob: -6.26226282119751
    6. 'i' → logprob: -6.26226282119751
    7. '```' → logprob: -6.51226282119751
    8. '\n' → logprob: -7.01226282119751
    9. '    ' → logprob: -7.13726282119751
    10. ':' → logprob: -7.76226282119751

Token 17: ' N' (ID: 478)
  Prédit: ' N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.6998128890991211
    2. ' not' → logprob: -0.6998128890991211
    3. 'N' → logprob: -6.199812889099121
    4. ' M' → logprob: -6.199812889099121
    5. ' ' → logprob: -6.324812889099121
    6. 'not' → logprob: -7.199812889099121
    7. ' ' → logprob: -10.449812889099121
    8. 'M' → logprob: -11.699812889099121
    9. '```' → logprob: -13.574812889099121
    10. '0' → logprob: -13.824812889099121

Token 18: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.08124074339866638
    2. '==' → logprob: -2.706240653991699
    3. ' <=' → logprob: -4.831240653991699
    4. ' <' → logprob: -6.206240653991699
    5. '<' → logprob: -7.581240653991699
    6. '<=' → logprob: -8.0812406539917
    7. '>' → logprob: -9.4562406539917
    8. ' ' → logprob: -9.5812406539917
    9. ' >' → logprob: -9.7062406539917
    10. '=' → logprob: -9.8312406539917

Token 19: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3135608434677124
    2. ' ' → logprob: -1.3135608434677124
    3. 'M' → logprob: -8.813560485839844
    4. ' M' → logprob: -8.938560485839844
    5. '```' → logprob: -12.251060485839844
    6. '-' → logprob: -12.626060485839844
    7. ' -' → logprob: -13.563560485839844
    8. '1' → logprob: -13.876060485839844
    9. '=' → logprob: -13.938560485839844
    10. '  ' → logprob: -14.688560485839844

Token 20: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0017619287827983499
    2. ' ' → logprob: -6.3767619132995605
    3. 'M' → logprob: -10.251762390136719
    4. '-' → logprob: -11.251762390136719
    5. '```' → logprob: -12.251762390136719
    6. ' M' → logprob: -13.689262390136719
    7. '  ' → logprob: -14.064262390136719
    8. '1' → logprob: -14.501762390136719
    9. 'and' → logprob: -14.626762390136719
    10. '   ' → logprob: -14.876762390136719

Token 21: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.010821543633937836
    2. ':' → logprob: -4.885821342468262
    3. 'and' → logprob: -5.760821342468262
    4. ' or' → logprob: -10.635821342468262
    5. ' ' → logprob: -10.760821342468262
    6. '   ' → logprob: -11.885821342468262
    7. ' :' → logprob: -12.510821342468262
    8. ' a' → logprob: -13.010821342468262
    9. '	and' → logprob: -14.010821342468262
    10. '    ' → logprob: -14.385821342468262

Token 22: ' M' (ID: 391)
  Prédit: ' M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' M' → logprob: -0.1269361972808838
    2. 'M' → logprob: -2.126936197280884
    3. ' ' → logprob: -11.876935958862305
    4. ' ' → logprob: -14.626935958862305
    5. '  ' → logprob: -15.126935958862305
    6. '<|end|>' → logprob: -15.501935958862305
    7. '   ' → logprob: -16.001935958862305
    8. '    ' → logprob: -16.626935958862305
    9. '	M' → logprob: -17.001935958862305
    10. '<M' → logprob: -17.501935958862305

Token 23: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.01544141210615635
    2. '==' → logprob: -4.265441417694092
    3. ' ' → logprob: -7.015441417694092
    4. '=' → logprob: -9.015440940856934
    5. ' ' → logprob: -9.515440940856934
    6. '<|end|>' → logprob: -10.015440940856934
    7. ')' → logprob: -10.640440940856934
    8. '  ' → logprob: -10.640440940856934
    9. '```' → logprob: -10.765440940856934
    10. ' =' → logprob: -10.765440940856934

Token 24: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6931474208831787
    2. ' ' → logprob: -0.6931474208831787
    3. ' ' → logprob: -15.943147659301758
    4. '<|end|>' → logprob: -16.818147659301758
    5. '  ' → logprob: -17.193147659301758
    6. '<|end|>' → logprob: -17.318147659301758
    7. '۰' → logprob: -17.943147659301758
    8. '=' → logprob: -18.255647659301758
    9. ')' → logprob: -18.943147659301758
    10. '```' → logprob: -19.443147659301758

Token 25: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0013259568950161338
    2. ' ' → logprob: -6.626326084136963
    3. '  ' → logprob: -17.751325607299805
    4. '   ' → logprob: -18.001325607299805
    5. '۰' → logprob: -18.626325607299805
    6. '```' → logprob: -19.063825607299805
    7. ' ' → logprob: -19.126325607299805
    8. '1' → logprob: -19.501325607299805
    9. '`' → logprob: -20.001325607299805
    10. ')' → logprob: -20.063825607299805

Token 26: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.000241085872403346
    2. ':
' → logprob: -8.37524127960205
    3. '   ' → logprob: -11.87524127960205
    4. '       ' → logprob: -13.25024127960205
    5. ':return' → logprob: -14.25024127960205
    6. ' :' → logprob: -14.50024127960205
    7. '):' → logprob: -15.25024127960205
    8. ' break' → logprob: -16.625240325927734
    9. ',' → logprob: -16.750240325927734
    10. '	break' → logprob: -16.875240325927734

Token 27: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01478410605341196
    2. '   ' → logprob: -4.514784336090088
    3. ' break' → logprob: -5.764784336090088
    4. '\n' → logprob: -8.26478385925293
    5. '	break' → logprob: -8.63978385925293
    6. ':' → logprob: -9.51478385925293
    7. '     ' → logprob: -11.01478385925293
    8. '    ' → logprob: -11.26478385925293
    9. '      ' → logprob: -11.38978385925293
    10. 'break' → logprob: -11.51478385925293

Token 28: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.1345823109149933
    2. '       ' → logprob: -2.384582281112671
    3. 'break' (adapté à ' break') → logprob: -3.509582281112671
    4. '   ' → logprob: -5.63458251953125
    5. '	break' → logprob: -8.13458251953125
    6. '_break' → logprob: -12.38458251953125
    7. '```' → logprob: -12.88458251953125
    8. '           ' → logprob: -12.88458251953125
    9. '        
' → logprob: -13.00958251953125
    10. '-break' → logprob: -14.13458251953125

Token 29: '
' (ID: 198)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.8728263974189758
    2. ':' → logprob: -1.372826337814331
    3. '   ' → logprob: -1.497826337814331
    4. '\' → logprob: -2.997826337814331
    5. '    
' → logprob: -3.997826337814331
    6. ')' → logprob: -4.37282657623291
    7. '\r' → logprob: -4.99782657623291
    8. ' ' → logprob: -5.62282657623291
    9. '  
' → logprob: -6.12282657623291
    10. '#' → logprob: -6.24782657623291

Token 30: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13673491775989532
    2. ':' → logprob: -2.761734962463379
    3. '\n' → logprob: -3.761734962463379
    4. '    
' → logprob: -4.011734962463379
    5. '```' → logprob: -5.261734962463379
    6. ')' → logprob: -5.511734962463379
    7. '\' → logprob: -6.261734962463379
    8. '<|end|>' → logprob: -6.386734962463379
    9. '#' → logprob: -6.761734962463379
    10. '\r' → logprob: -6.886734962463379

Token 31: ' instructions' (ID: 15543)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1779562383890152
    2. ' ' → logprob: -3.0529563426971436
    3. '    ' → logprob: -3.0529563426971436
    4. '[' → logprob: -4.3029561042785645
    5. 'print' → logprob: -4.9279561042785645
    6. 'for' → logprob: -5.3029561042785645
    7. '       ' → logprob: -5.4279561042785645
    8. '    
' → logprob: -5.4279561042785645
    9. ')' → logprob: -5.5529561042785645
    10. 'result' → logprob: -5.6779561042785645

Token 32: ' =' (ID: 314)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21478450298309326
    2. '[' → logprob: -2.839784622192383
    3. ' for' → logprob: -3.214784622192383
    4. 'for' → logprob: -3.339784622192383
    5. ':' → logprob: -3.714784622192383
    6. '<|end|>' → logprob: -3.714784622192383
    7. ' ' → logprob: -6.089784622192383
    8. ')' → logprob: -6.714784622192383
    9. '[]' → logprob: -6.964784622192383
    10. '#' → logprob: -7.089784622192383

Token 33: ' [' (ID: 723)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.18726873397827148
    2. ' []' → logprob: -2.0622687339782715
    3. 'list' → logprob: -3.8122687339782715
    4. ' list' → logprob: -4.0622687339782715
    5. '[' → logprob: -6.6872687339782715
    6. 'input' → logprob: -7.0622687339782715
    7. ' [' → logprob: -7.1872687339782715
    8. '[input' → logprob: -7.3122687339782715
    9. ' input' → logprob: -7.4372687339782715
    10. '[list' → logprob: -8.93726921081543

Token 34: 'int' (ID: 491)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.04539553076028824
    2. ' list' → logprob: -3.795395612716675
    3. ']' → logprob: -4.170395374298096
    4. 'int' → logprob: -5.795395374298096
    5. '[]' → logprob: -6.795395374298096
    6. 'map' → logprob: -6.920395374298096
    7. 'input' → logprob: -7.795395374298096
    8. '   ' → logprob: -7.920395374298096
    9. 'tuple' → logprob: -8.420395851135254
    10. ' []' → logprob: -9.795395851135254

Token 35: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.333347886800766
    2. '(' → logprob: -1.3333479166030884
    3. '(x' → logprob: -4.208347797393799
    4. '(i' → logprob: -5.958347797393799
    5. '()' → logprob: -6.333347797393799
    6. '()]' → logprob: -8.583348274230957
    7. '(
' → logprob: -8.833348274230957
    8. ']' → logprob: -9.083348274230957
    9. '(a' → logprob: -9.833348274230957
    10. '(

' → logprob: -9.833348274230957

Token 36: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0016244759317487478
    2. '()' → logprob: -6.501624584197998
    3. ')' → logprob: -9.25162410736084
    4. '())
' → logprob: -11.62662410736084
    5. '()]' → logprob: -11.75162410736084
    6. '()),' → logprob: -12.50162410736084
    7. '().' → logprob: -13.25162410736084
    8. ' ())' → logprob: -13.50162410736084
    9. '()
' → logprob: -14.25162410736084
    10. '()))' → logprob: -14.50162410736084

Token 37: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5382450819015503
    2. '()' → logprob: -1.5382450819015503
    3. ')' → logprob: -2.28824520111084
    4. 'for' → logprob: -2.41324520111084
    5. '   ' → logprob: -5.03824520111084
    6. ']' → logprob: -6.66324520111084
    7. ')]' → logprob: -7.41324520111084
    8. '(' → logprob: -7.53824520111084
    9. '	for' → logprob: -7.78824520111084
    10. ' ' → logprob: -8.53824520111084

Token 38: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.09798545390367508
    2. ' _' → logprob: -2.7229855060577393
    3. '_' → logprob: -3.8479855060577393
    4. ' ' → logprob: -5.09798526763916
    5. '_range' → logprob: -9.47298526763916
    6. 'range' → logprob: -9.59798526763916
    7. ' i' → logprob: -10.34798526763916
    8. '	range' → logprob: -10.97298526763916
    9. ' xrange' → logprob: -11.34798526763916
    10. '<|end|>' → logprob: -12.47298526763916

Token 39: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0029371678829193115
    2. ' range' → logprob: -6.502937316894531
    3. 'range' → logprob: -6.752937316894531
    4. 'in' → logprob: -8.377937316894531
    5. ' ' → logprob: -10.252937316894531
    6. '  ' → logprob: -14.627937316894531
    7. ' i' → logprob: -15.502937316894531
    8. '	range' → logprob: -15.502937316894531
    9. ' xrange' → logprob: -16.25293731689453
    10. '	in' → logprob: -16.50293731689453

Token 40: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0036045825108885765
    2. ' range' → logprob: -5.628604412078857
    3. 'rang' → logprob: -13.628604888916016
    4. ' ' → logprob: -14.253604888916016
    5. '	range' → logprob: -14.503604888916016
    6. '(range' → logprob: -14.503604888916016
    7. '   ' → logprob: -14.628604888916016
    8. '  ' → logprob: -15.003604888916016
    9. 'ran' → logprob: -15.628604888916016
    10. ')' → logprob: -15.878604888916016

Token 41: '(N' (ID: 10564)
  Prédit: '(M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(M' → logprob: -0.00014287306112237275
    2. '(' → logprob: -8.875143051147461
    3. '(N' → logprob: -13.000143051147461
    4. ' (' → logprob: -15.125143051147461
    5. '(m' → logprob: -15.250143051147461
    6. '(
' → logprob: -17.62514305114746
    7. 'M' → logprob: -17.62514305114746
    8. '(S' → logprob: -17.87514305114746
    9. '((' → logprob: -18.00014305114746
    10. '(K' → logprob: -18.37514305114746

Token 42: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0013278567930683494
    2. ']' → logprob: -6.876327991485596
    3. ')' → logprob: -8.376327514648438
    4. '   ' → logprob: -10.376327514648438
    5. ' )' → logprob: -11.501327514648438
    6. ' ]' → logprob: -12.001327514648438
    7. ')]
' → logprob: -12.001327514648438
    8. '])]' → logprob: -13.626327514648438
    9. '))' → logprob: -13.751327514648438
    10. '')]' → logprob: -14.001327514648438

Token 43: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06360680609941483
    2. '
' → logprob: -3.4386067390441895
    3. '    
' → logprob: -4.4386067390441895
    4. '<|end|>' → logprob: -5.1886067390441895
    5. ' ' → logprob: -5.6886067390441895
    6. '    ' → logprob: -5.6886067390441895
    7. ' 
' → logprob: -6.9386067390441895
    8. '[' → logprob: -7.3136067390441895
    9. '\n' → logprob: -7.3136067390441895
    10. '  ' → logprob: -7.9386067390441895

Token 44: ' dice' (ID: 22078)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2018252611160278
    2. 'stack' → logprob: -1.2018252611160278
    3. 'count' → logprob: -2.7018251419067383
    4. ' stack' → logprob: -3.3268251419067383
    5. 'valid' → logprob: -3.3268251419067383
    6. 's' → logprob: -3.4518251419067383
    7. 'correct' → logprob: -3.8268251419067383
    8. '    ' → logprob: -4.076825141906738
    9. ' if' → logprob: -4.201825141906738
    10. ' ' → logprob: -4.326825141906738

Token 45: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1696854531764984
    2. '=' → logprob: -2.1696853637695312
    3. '_positions' → logprob: -3.9196853637695312
    4. 's' → logprob: -4.544685363769531
    5. '_' → logprob: -5.294685363769531
    6. '_states' → logprob: -6.044685363769531
    7. '.' → logprob: -6.294685363769531
    8. '_stack' → logprob: -7.794685363769531
    9. '_faces' → logprob: -7.794685363769531
    10. '_position' → logprob: -8.544685363769531

Token 46: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0029752030968666077
    2. ' [' → logprob: -5.877974987030029
    3. '{' → logprob: -9.502975463867188
    4. '[list' → logprob: -10.002975463867188
    5. '[int' → logprob: -11.752975463867188
    6. 'list' → logprob: -11.877975463867188
    7. '['' → logprob: -12.377975463867188
    8. '{
' → logprob: -12.502975463867188
    9. '[d' → logprob: -12.502975463867188
    10. '[[' → logprob: -12.877975463867188

Token 47: 'int' (ID: 491)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.577866792678833
    2. '1' → logprob: -0.827866792678833
    3. '6' → logprob: -7.452866554260254
    4. ' ' → logprob: -7.452866554260254
    5. '[' → logprob: -8.077866554260254
    6. 'i' → logprob: -8.827866554260254
    7. '4' → logprob: -9.077866554260254
    8. '   ' → logprob: -10.077866554260254
    9. 'int' → logprob: -10.452866554260254
    10. ' [' → logprob: -11.202866554260254

Token 48: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.33965691924095154
    2. '()' → logprob: -2.2146568298339844
    3. '(i' → logprob: -2.2146568298339844
    4. '()]' → logprob: -3.3396568298339844
    5. '(x' → logprob: -3.5896568298339844
    6. ']' → logprob: -5.589656829833984
    7. '0' → logprob: -7.089656829833984
    8. ']()' → logprob: -7.589656829833984
    9. '(s' → logprob: -8.714656829833984
    10. '](' → logprob: -9.214656829833984

Token 49: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0017124245641753078
    2. '()' → logprob: -6.501712322235107
    3. ')' → logprob: -9.251712799072266
    4. '()]' → logprob: -9.626712799072266
    5. '()),' → logprob: -10.376712799072266
    6. '())
' → logprob: -11.626712799072266
    7. ' ())' → logprob: -13.126712799072266
    8. '()
' → logprob: -13.876712799072266
    9. '(),' → logprob: -14.001712799072266
    10. '()))' → logprob: -14.251712799072266

Token 50: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.10716298967599869
    2. ')' → logprob: -2.4821629524230957
    3. ' for' → logprob: -4.857162952423096
    4. '())' → logprob: -5.732162952423096
    5. 'for' → logprob: -5.857162952423096
    6. '()]' → logprob: -6.107162952423096
    7. ')]' → logprob: -6.732162952423096
    8. ']' → logprob: -8.107163429260254
    9. '   ' → logprob: -8.357163429260254
    10. ' ()' → logprob: -9.482163429260254

Token 51: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.0006626377580687404
    2. 'range' → logprob: -7.375662803649902
    3. ' _' → logprob: -10.625662803649902
    4. '(range' → logprob: -11.625662803649902
    5. '_' → logprob: -13.000662803649902
    6. '_range' → logprob: -14.750662803649902
    7. '	range' → logprob: -15.750662803649902
    8. ' ' → logprob: -16.625661849975586
    9. ' ' → logprob: -18.125661849975586
    10. ' xrange' → logprob: -18.500661849975586

Token 52: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.05242490768432617
    2. ' range' → logprob: -3.052424907684326
    3. ' in' → logprob: -6.052424907684326
    4. 'in' → logprob: -6.677424907684326
    5. '(range' → logprob: -8.552425384521484
    6. 'ange' → logprob: -11.802425384521484
    7. ' ' → logprob: -12.302425384521484
    8. '_' → logprob: -12.552425384521484
    9. '_range' → logprob: -12.677425384521484
    10. '	range' → logprob: -12.677425384521484

Token 53: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.5759414434432983
    2. ' range' → logprob: -0.8259414434432983
    3. '(range' → logprob: -13.70094108581543
    4. '	range' → logprob: -14.32594108581543
    5. ' ' → logprob: -16.32594108581543
    6. '   ' → logprob: -17.20094108581543
    7. '_range' → logprob: -17.57594108581543
    8. ' xrange' → logprob: -17.95094108581543
    9. '  ' → logprob: -18.32594108581543
    10. 'rang' → logprob: -18.32594108581543

Token 54: '(M' (ID: 6103)
  Prédit: '(M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(M' → logprob: -0.001253207796253264
    2. 'M' → logprob: -7.626253128051758
    3. '(N' → logprob: -7.751253128051758
    4. '(' → logprob: -8.126253128051758
    5. ' (' → logprob: -11.126253128051758
    6. ' M' → logprob: -12.376253128051758
    7. '   ' → logprob: -12.376253128051758
    8. 'N' → logprob: -12.751253128051758
    9. '(m' → logprob: -13.376253128051758
    10. '(K' → logprob: -14.001253128051758

Token 55: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0006833644583821297
    2. ']' → logprob: -7.500683307647705
    3. ')' → logprob: -9.125683784484863
    4. '])]' → logprob: -11.875683784484863
    5. ' )' → logprob: -12.500683784484863
    6. '])' → logprob: -12.875683784484863
    7. ')])' → logprob: -13.250683784484863
    8. ')]
' → logprob: -13.250683784484863
    9. ' ]' → logprob: -13.375683784484863
    10. '   ' → logprob: -13.500683784484863

Token 56: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19887864589691162
    2. 'i' → logprob: -2.948878765106201
    3. 'for' → logprob: -3.823878765106201
    4. ' for' → logprob: -3.948878765106201
    5. 'result' → logprob: -4.198878765106201
    6. 'pos' → logprob: -4.448878765106201
    7. 'position' → logprob: -4.573878765106201
    8. 'current' → logprob: -5.198878765106201
    9. ' i' → logprob: -5.323878765106201
    10. '    ' → logprob: -5.823878765106201

Token 57: ' pos' (ID: 1253)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.0571963787078857
    2. 'pos' (adapté à ' pos') → logprob: -1.1821963787078857
    3. 'result' → logprob: -1.6821963787078857
    4. 'position' → logprob: -3.6821963787078857
    5. 'i' → logprob: -3.9321963787078857
    6. 'current' → logprob: -4.307196617126465
    7. 'count' → logprob: -4.557196617126465
    8. '   ' → logprob: -4.557196617126465
    9. ' for' → logprob: -4.807196617126465
    10. 'positions' → logprob: -4.932196617126465

Token 58: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.012727070599794388
    2. '=' → logprob: -4.6377272605896
    3. '_' → logprob: -6.0127272605896
    4. ' ' → logprob: -8.137726783752441
    5. 's' → logprob: -10.387726783752441
    6. ' _' → logprob: -10.387726783752441
    7. 'ation' → logprob: -10.637726783752441
    8. ')' → logprob: -11.012726783752441
    9. ' +=' → logprob: -11.137726783752441
    10. ',' → logprob: -11.387726783752441

Token 59: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.007988804951310158
    2. ' ' → logprob: -5.257988929748535
    3. '-' → logprob: -6.257988929748535
    4. '[' → logprob: -7.507988929748535
    5. '1' → logprob: -8.882988929748535
    6. ' -' → logprob: -10.007988929748535
    7. '[]' → logprob: -10.382988929748535
    8. ' [' → logprob: -10.632988929748535
    9. '(' → logprob: -11.007988929748535
    10. '[-' → logprob: -12.195488929748535

Token 60: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.009861508384346962
    2. '-' → logprob: -4.884861469268799
    3. '[' → logprob: -7.259861469268799
    4. '1' → logprob: -7.384861469268799
    5. ' ' → logprob: -7.509861469268799
    6. '[]' → logprob: -8.759861946105957
    7. '{}' → logprob: -9.884861946105957
    8. '(' → logprob: -10.384861946105957
    9. '{' → logprob: -10.509861946105957
    10. '[-' → logprob: -11.197361946105957

Token 61: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.42769283056259155
    2. '<|end|>' → logprob: -1.4276928901672363
    3. '
' → logprob: -3.0526928901672363
    4. '    
' → logprob: -4.427692890167236
    5. ' 
' → logprob: -4.677692890167236
    6. ' while' → logprob: -4.927692890167236
    7. ' ' → logprob: -5.177692890167236
    8. 'while' → logprob: -5.802692890167236
    9. '\n' → logprob: -5.802692890167236
    10. '```' → logprob: -6.177692890167236

Token 62: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2735591232776642
    2. '<|end|>' → logprob: -2.023559093475342
    3. ' while' → logprob: -3.773559093475342
    4. ' ' → logprob: -4.398559093475342
    5. ' for' → logprob: -4.773559093475342
    6. ' 
' → logprob: -4.773559093475342
    7. ':' → logprob: -5.023559093475342
    8. '+' → logprob: -5.023559093475342
    9. '    
' → logprob: -5.148559093475342
    10. 'while' → logprob: -5.273559093475342

Token 63: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.7228063344955444
    2. '   ' → logprob: -1.8478063344955444
    3. 'while' → logprob: -2.222806453704834
    4. 'pos' → logprob: -3.222806453704834
    5. ' for' → logprob: -3.347806453704834
    6. 'moves' → logprob: -3.472806453704834
    7. 'dice' → logprob: -3.597806453704834
    8. 'if' → logprob: -3.597806453704834
    9. 'i' → logprob: -4.222806453704834
    10. 'd' → logprob: -4.472806453704834

Token 64: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.4000752866268158
    2. ' d' → logprob: -2.0250751972198486
    3. 'i' → logprob: -3.2750751972198486
    4. ' instruction' → logprob: -3.6500751972198486
    5. ' instr' → logprob: -3.7750751972198486
    6. ' step' → logprob: -4.150075435638428
    7. ' move' → logprob: -4.275075435638428
    8. 'd' → logprob: -4.275075435638428
    9. ' _' → logprob: -4.275075435638428
    10. ' ' → logprob: -4.900075435638428

Token 65: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.031633712351322174
    2. 'in' → logprob: -3.5316336154937744
    3. 'n' → logprob: -6.7816338539123535
    4. ' ' → logprob: -7.4066338539123535
    5. ' n' → logprob: -9.906633377075195
    6. ',' → logprob: -10.406633377075195
    7. '  ' → logprob: -10.531633377075195
    8. '+' → logprob: -12.156633377075195
    9. '	in' → logprob: -12.281633377075195
    10. 's' → logprob: -12.531633377075195

Token 66: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.6285905838012695
    2. 'step' → logprob: -1.8785905838012695
    3. 'instr' → logprob: -2.0035905838012695
    4. 'instruction' → logprob: -2.3785905838012695
    5. 'move' → logprob: -2.7535905838012695
    6. 'inst' → logprob: -2.7535905838012695
    7. 'dice' → logprob: -3.0035905838012695
    8. ' instruction' → logprob: -3.1285905838012695
    9. 'cmd' → logprob: -4.0035905838012695
    10. 'val' → logprob: -4.0035905838012695

Token 67: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.31666299700737
    2. 'ice' → logprob: -1.3166630268096924
    3. 'ie' → logprob: -5.941662788391113
    4. 'i' → logprob: -8.941662788391113
    5. 'e' → logprob: -9.316662788391113
    6. ',' → logprob: -9.316662788391113
    7. ' i' → logprob: -9.441662788391113
    8. ' ' → logprob: -10.066662788391113
    9. 'in' → logprob: -10.191662788391113
    10. 'istance' → logprob: -10.316662788391113

Token 68: ' enumerate' (ID: 29671)
  Prédit: ' enumerate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' enumerate' → logprob: -0.0017345597734674811
    2. 'enumer' → logprob: -6.626734733581543
    3. ' en' → logprob: -8.876734733581543
    4. ' ' → logprob: -9.126734733581543
    5. 'umer' → logprob: -9.876734733581543
    6. '  ' → logprob: -10.251734733581543
    7. '(en' → logprob: -11.251734733581543
    8. ' range' → logprob: -11.251734733581543
    9. ' enumer' → logprob: -11.876734733581543
    10. ' zip' → logprob: -12.251734733581543

Token 69: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.007186426315456629
    2. '(' → logprob: -5.632186412811279
    3. '(in' → logprob: -5.882186412811279
    4. ' (' → logprob: -8.382186889648438
    5. 'dice' → logprob: -8.382186889648438
    6. '(s' → logprob: -9.257186889648438
    7. ' dice' → logprob: -9.257186889648438
    8. '(range' → logprob: -9.882186889648438
    9. 'd' → logprob: -10.882186889648438
    10. '(m' → logprob: -11.257186889648438

Token 70: 'ice' (ID: 603)
  Prédit: 'ice'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ice' → logprob: -0.007531505543738604
    2. 'ices' → logprob: -5.257531642913818
    3. 'dice' → logprob: -6.257531642913818
    4. ')' → logprob: -8.88253116607666
    5. '[' → logprob: -10.25753116607666
    6. '`' → logprob: -10.63253116607666
    7. ' dice' → logprob: -10.88253116607666
    8. '```' → logprob: -11.00753116607666
    9. 'd' → logprob: -11.75753116607666
    10. '   ' → logprob: -11.75753116607666

Token 71: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0012708279537037015
    2. ' ):' → logprob: -6.876270771026611
    3. ':' → logprob: -9.12627124786377
    4. ')' → logprob: -9.25127124786377
    5. '):
' → logprob: -10.75127124786377
    6. ' :' → logprob: -12.37627124786377
    7. ']:' → logprob: -13.00127124786377
    8. '   ' → logprob: -14.12627124786377
    9. '():' → logprob: -14.37627124786377
    10. ',' → logprob: -14.37627124786377

Token 72: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3287641406059265
    2. ' ' → logprob: -1.7037642002105713
    3. ' start' → logprob: -2.9537642002105713
    4. 'start' → logprob: -3.0787642002105713
    5. '(start' → logprob: -12.078763961791992
    6. '):' → logprob: -12.578763961791992
    7. ')' → logprob: -12.578763961791992
    8. '	start' → logprob: -13.078763961791992
    9. '  ' → logprob: -13.203763961791992
    10. ' ):' → logprob: -13.328763961791992

Token 73: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0033261224161833525
    2. 'start' → logprob: -6.128325939178467
    3. ' ' → logprob: -6.878325939178467
    4. ' start' → logprob: -9.128326416015625
    5. '0' → logprob: -14.128326416015625
    6. '   ' → logprob: -15.253326416015625
    7. ')' → logprob: -15.753326416015625
    8. '  ' → logprob: -15.878326416015625
    9. '2' → logprob: -15.878326416015625
    10. 'starting' → logprob: -16.003326416015625

Token 74: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0022319748532027006
    2. ':' → logprob: -6.502232074737549
    3. ' ):' → logprob: -7.627232074737549
    4. ')' → logprob: -8.75223159790039
    5. '):
' → logprob: -9.50223159790039
    6. ',' → logprob: -12.37723159790039
    7. '   ' → logprob: -13.50223159790039
    8. ' )' → logprob: -13.75223159790039
    9. ' :' → logprob: -14.37723159790039
    10. '():' → logprob: -14.87723159790039

Token 75: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3435775637626648
    2. '       ' → logprob: -1.5935776233673096
    3. '<|end|>' → logprob: -2.9685776233673096
    4. ':
' → logprob: -4.5935773849487305
    5. '
' → logprob: -5.4685773849487305
    6. '    ' → logprob: -5.7185773849487305
    7. '   ' → logprob: -5.7185773849487305
    8. ',' → logprob: -5.9685773849487305
    9. '):' → logprob: -5.9685773849487305
    10. ' if' → logprob: -6.2185773849487305

Token 76: ' pos' (ID: 1253)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6507932543754578
    2. ' pos' → logprob: -1.0257933139801025
    3. 'pos' (adapté à ' pos') → logprob: -2.7757933139801025
    4. 'if' → logprob: -4.525793075561523
    5. ' new' → logprob: -4.775793075561523
    6. '    ' → logprob: -4.775793075561523
    7. '       ' → logprob: -4.900793075561523
    8. ' ' → logprob: -5.025793075561523
    9. '        ' → logprob: -5.650793075561523
    10. ' next' → logprob: -6.150793075561523

Token 77: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.04421992227435112
    2. '+=' → logprob: -3.169219970703125
    3. '+' → logprob: -7.419219970703125
    4. ' =' → logprob: -8.169219970703125
    5. ' +' → logprob: -8.419219970703125
    6. '=' → logprob: -9.169219970703125
    7. ' -=' → logprob: -12.169219970703125
    8. ']+=' → logprob: -13.169219970703125
    9. '+=(' → logprob: -13.794219970703125
    10. ' ' → logprob: -14.106719970703125

Token 78: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0017644320614635944
    2. ' d' → logprob: -6.376764297485352
    3. 'instructions' → logprob: -9.876764297485352
    4. 'i' → logprob: -13.126764297485352
    5. '1' → logprob: -13.251764297485352
    6. ' ' → logprob: -13.251764297485352
    7. '	d' → logprob: -13.751764297485352
    8. '   ' → logprob: -13.876764297485352
    9. ' instructions' → logprob: -14.376764297485352
    10. '  ' → logprob: -14.564264297485352

Token 79: '
' (ID: 198)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7636047005653381
    2. '
' → logprob: -0.8886047005653381
    3. 'if' → logprob: -2.2636046409606934
    4. '%' → logprob: -4.513604640960693
    5. '   ' → logprob: -6.138604640960693
    6. '<|end|>' → logprob: -6.388604640960693
    7. '
' → logprob: -6.763604640960693
    8. ' %' → logprob: -7.138604640960693
    9. '\n' → logprob: -7.513604640960693
    10. '       ' → logprob: -7.888604640960693

Token 80: '       ' (ID: 309)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.08484625816345215
    2. '       ' → logprob: -2.959846258163452
    3. 'if' → logprob: -3.584846258163452
    4. '   ' → logprob: -7.459846496582031
    5. '```' → logprob: -7.959846496582031
    6. '
' → logprob: -8.084846496582031
    7. '<|end|>' → logprob: -8.959846496582031
    8. ' ' → logprob: -9.209846496582031
    9. '	if' → logprob: -9.334846496582031
    10. '#' → logprob: -9.459846496582031

Token 81: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.5261146426200867
    2. ' if' → logprob: -0.9011146426200867
    3. '       ' → logprob: -7.026114463806152
    4. 'while' → logprob: -7.026114463806152
    5. ' while' → logprob: -7.151114463806152
    6. '```' → logprob: -8.651114463806152
    7. 'pos' → logprob: -9.026114463806152
    8. '   ' → logprob: -10.026114463806152
    9. ' pos' → logprob: -10.526114463806152
    10. 'print' → logprob: -11.026114463806152

Token 82: ' pos' (ID: 1253)
  Prédit: ' pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pos' → logprob: -0.005965414922684431
    2. 'pos' → logprob: -5.130965232849121
    3. ' ' → logprob: -11.005965232849121
    4. ' len' → logprob: -12.005965232849121
    5. '	pos' → logprob: -12.505965232849121
    6. '(pos' → logprob: -13.130965232849121
    7. '>' → logprob: -13.693465232849121
    8. ' N' → logprob: -13.880965232849121
    9. ' ' → logprob: -13.943465232849121
    10. '   ' → logprob: -14.068465232849121

Token 83: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.22819316387176514
    2. ' >=' → logprob: -1.9781931638717651
    3. '>' → logprob: -2.8531932830810547
    4. ' >' → logprob: -4.853193283081055
    5. '==' → logprob: -9.228193283081055
    6. '<' → logprob: -10.103193283081055
    7. ']>=' → logprob: -10.353193283081055
    8. ' <' → logprob: -11.415693283081055
    9. '+' → logprob: -11.790693283081055
    10. ')>=' → logprob: -11.853193283081055

Token 84: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0020762672647833824
    2. 'len' → logprob: -6.502076148986816
    3. ' N' → logprob: -7.627076148986816
    4. ' len' → logprob: -11.002076148986816
    5. 'instructions' → logprob: -11.002076148986816
    6. 'M' → logprob: -11.127076148986816
    7. ' ' → logprob: -11.377076148986816
    8. '   ' → logprob: -11.627076148986816
    9. 'n' → logprob: -12.127076148986816
    10. '100' → logprob: -12.377076148986816

Token 85: ' -' (ID: 533)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.007690986152738333
    2. ':
' → logprob: -4.882690906524658
    3. '       ' → logprob: -10.882691383361816
    4. ' or' → logprob: -11.007691383361816
    5. ' and' → logprob: -11.507691383361816
    6. '-' → logprob: -11.757691383361816
    7. ' :' → logprob: -12.132691383361816
    8. '   ' → logprob: -12.257691383361816
    9. ':return' → logprob: -12.257691383361816
    10. ':

' → logprob: -12.757691383361816

Token 86: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.006722826045006514
    2. ' ' → logprob: -5.006722927093506
    3. '  ' → logprob: -13.006722450256348
    4. '0' → logprob: -13.631722450256348
    5. '   ' → logprob: -14.006722450256348
    6. '<|end|>' → logprob: -14.381722450256348
    7. '2' → logprob: -14.506722450256348
    8. '+' → logprob: -14.881722450256348
    9. '>' → logprob: -15.256722450256348
    10. 's' → logprob: -15.569222450256348

Token 87: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.607391408877447e-05
    2. ' ' → logprob: -10.250036239624023
    3. '2' → logprob: -14.875036239624023
    4. '0' → logprob: -16.375036239624023
    5. '   ' → logprob: -16.500036239624023
    6. '<|end|>' → logprob: -17.187536239624023
    7. '  ' → logprob: -17.312536239624023
    8. '```' → logprob: -18.000036239624023
    9. 'len' → logprob: -18.312536239624023
    10. 'i' → logprob: -18.625036239624023

Token 88: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.030423477292060852
    2. ':
' → logprob: -3.655423402786255
    3. ' and' → logprob: -6.405423641204834
    4. ' or' → logprob: -6.780423641204834
    5. '       ' → logprob: -7.030423641204834
    6. '           ' → logprob: -8.530423164367676
    7. ' :' → logprob: -10.030423164367676
    8. 'and' → logprob: -10.030423164367676
    9. '   ' → logprob: -10.655423164367676
    10. ':

' → logprob: -10.905423164367676

Token 89: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.015427563339471817
    2. ':' → logprob: -4.390427589416504
    3. ':
' → logprob: -6.515427589416504
    4. '       ' → logprob: -7.890427589416504
    5. '<|end|>' → logprob: -8.515427589416504
    6. '```' → logprob: -9.015427589416504
    7. '\n' → logprob: -9.140427589416504
    8. '0' → logprob: -9.140427589416504
    9. '
' → logprob: -9.515427589416504
    10. '            
' → logprob: -9.515427589416504

Token 90: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.42517003417015076
    2. '           ' → logprob: -1.1751700639724731
    3. ' print' → logprob: -3.8001699447631836
    4. 'break' → logprob: -4.925169944763184
    5. 'pos' → logprob: -5.800169944763184
    6. ' break' → logprob: -6.300169944763184
    7. '       ' → logprob: -6.300169944763184
    8. '               ' → logprob: -7.550169944763184
    9. '```' → logprob: -8.550169944763184
    10. '   ' → logprob: -8.550169944763184

Token 91: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.01970476098358631
    2. '(' → logprob: -4.144704818725586
    3. '(f' → logprob: -5.644704818725586
    4. '("' → logprob: -9.519704818725586
    5. '((' → logprob: -11.519704818725586
    6. '('' → logprob: -11.519704818725586
    7. 'i' → logprob: -11.519704818725586
    8. ' (' → logprob: -12.269704818725586
    9. '(I' → logprob: -12.519704818725586
    10. '(s' → logprob: -12.769704818725586

Token 92: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.07041841000318527
    2. ')' → logprob: -2.695418357849121
    3. ')
' → logprob: -8.695418357849121
    4. ' )
' → logprob: -8.820418357849121
    5. ',' → logprob: -9.070418357849121
    6. '   ' → logprob: -11.070418357849121
    7. ' )' → logprob: -11.320418357849121
    8. ')`
' → logprob: -12.570418357849121
    9. '       ' → logprob: -12.820418357849121
    10. ')

' → logprob: -12.820418357849121

Token 93: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002765763783827424
    2. '       ' → logprob: -6.002765655517578
    3. '<|end|>' → logprob: -8.752765655517578
    4. '   ' → logprob: -9.752765655517578
    5. '               ' → logprob: -10.752765655517578
    6. ' ' → logprob: -11.627765655517578
    7. ',' → logprob: -11.752765655517578
    8. '```' → logprob: -11.877765655517578
    9. '
' → logprob: -12.127765655517578
    10. '<|end|>' → logprob: -12.877765655517578

Token 94: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.04343884065747261
    2. ' break' → logprob: -3.2934389114379883
    3. '           ' → logprob: -5.418438911437988
    4. '       ' → logprob: -7.043438911437988
    5. '   ' → logprob: -9.918438911437988
    6. '	break' → logprob: -10.793438911437988
    7. '```' → logprob: -12.543438911437988
    8. '               ' → logprob: -14.543438911437988
    9. 'b' → logprob: -15.043438911437988
    10. 'br' → logprob: -15.168438911437988

Token 95: '
' (ID: 198)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.045171212404966354
    2. ' else' → logprob: -3.4201712608337402
    3. '<|end|>' → logprob: -4.54517126083374
    4. '   ' → logprob: -7.67017126083374
    5. ' ' → logprob: -8.795170783996582
    6. '```' → logprob: -9.420170783996582
    7. '	else' → logprob: -9.670170783996582
    8. '<|end|>' → logprob: -10.795170783996582
    9. '  ' → logprob: -11.920170783996582
    10. '[' → logprob: -11.920170783996582

Token 96: '       ' (ID: 309)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.03477604687213898
    2. ' else' → logprob: -3.784775972366333
    3. '<|end|>' → logprob: -4.534776210784912
    4. '   ' → logprob: -8.034775733947754
    5. '	else' → logprob: -8.534775733947754
    6. ' ' → logprob: -9.284775733947754
    7. '```' → logprob: -9.784775733947754
    8. '<|end|>' → logprob: -11.284775733947754
    9. 'elif' → logprob: -11.409775733947754
    10. '
' → logprob: -11.784775733947754

Token 97: ' pos' (ID: 1253)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.9785173535346985
    2. 'else' → logprob: -1.1035172939300537
    3. '   ' → logprob: -1.9785172939300537
    4. '       ' → logprob: -2.1035172939300537
    5. 'elif' → logprob: -4.103517532348633
    6. ' if' → logprob: -4.978517532348633
    7. 'print' → logprob: -5.728517532348633
    8. ' else' → logprob: -6.228517532348633
    9. '```' → logprob: -7.603517532348633
    10. 'for' → logprob: -7.853517532348633

Token 98: ' +=' (ID: 2757)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.052153825759887695
    2. ' =' → logprob: -3.0521538257598877
    3. '+=' → logprob: -6.927153587341309
    4. ' in' → logprob: -7.052153587341309
    5. 'in' → logprob: -7.302153587341309
    6. ' +=' → logprob: -9.302153587341309
    7. ')' → logprob: -9.427153587341309
    8. ']' → logprob: -9.552153587341309
    9. '-=' → logprob: -9.552153587341309
    10. ' ' → logprob: -9.802153587341309

Token 99: ' instructions' (ID: 15543)
  Prédit: 'instructions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'instructions' → logprob: -0.0034304349683225155
    2. ' instructions' → logprob: -5.753430366516113
    3. 'in' → logprob: -9.003430366516113
    4. '   ' → logprob: -10.128430366516113
    5. 'inst' → logprob: -11.003430366516113
    6. '-in' → logprob: -11.003430366516113
    7. '-' → logprob: -11.253430366516113
    8. 'instr' → logprob: -11.628430366516113
    9. '1' → logprob: -11.878430366516113
    10. 'instruction' → logprob: -12.128430366516113

Token 100: '[pos' (ID: 48272)
  Prédit: '[pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[pos' → logprob: -1.3856492842023727e-06
    2. '[' → logprob: -13.625000953674316
    3. '[
' → logprob: -17.000001907348633
    4. ' [' → logprob: -17.875001907348633
    5. 'pos' → logprob: -18.000001907348633
    6. '[position' → logprob: -18.375001907348633
    7. '[[' → logprob: -18.750001907348633
    8. '[i' → logprob: -19.000001907348633
    9. '[p' → logprob: -19.125001907348633
    10. '[(' → logprob: -20.000001907348633

Token 101: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0009027653140947223
    2. ')]' → logprob: -8.125903129577637
    3. ' ]' → logprob: -8.375903129577637
    4. ']
' → logprob: -8.625903129577637
    5. ')' → logprob: -9.000903129577637
    6. '<|end|>' → logprob: -10.250903129577637
    7. '])' → logprob: -10.875903129577637
    8. '()]' → logprob: -12.250903129577637
    9. '<|end|>' → logprob: -13.000903129577637
    10. '`]' → logprob: -13.375903129577637

Token 102: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 103: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 104: ' instructions' (ID: 15543)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4369479715824127
    2. '<|end|>' → logprob: -1.0619479417800903
    3. ' 
' → logprob: -5.811947822570801
    4. ' if' → logprob: -6.561947822570801
    5. '```' → logprob: -6.811947822570801
    6. ' continue' → logprob: -7.436947822570801
    7. '<|end|>' → logprob: -7.561947822570801
    8. ')' → logprob: -8.0619478225708
    9. '0' → logprob: -8.3119478225708
    10. '
' → logprob: -8.5619478225708

Token 105: ' indexed' (ID: 44010)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 106: ' from' (ID: 591)
  Prédit: '[pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[pos' → logprob: -0.07642953097820282
    2. '<|end|>' → logprob: -3.326429605484009
    3. '[' → logprob: -3.826429605484009
    4. ' ' → logprob: -5.57642936706543
    5. '[position' → logprob: -6.20142936706543
    6. 'pos' → logprob: -6.20142936706543
    7. ' at' → logprob: -6.20142936706543
    8. '0' → logprob: -6.32642936706543
    9. ' by' → logprob: -7.70142936706543
    10. '[start' → logprob: -7.95142936706543

Token 107: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.007020006887614727
    2. ' ' → logprob: -5.132019996643066
    3. 'pos' → logprob: -7.132019996643066
    4. '1' → logprob: -8.632019996643066
    5. ' pos' → logprob: -9.882019996643066
    6. ' zero' → logprob: -10.257019996643066
    7. 'zero' → logprob: -10.882019996643066
    8. 'position' → logprob: -13.007019996643066
    9. 'the' → logprob: -13.632019996643066
    10. ' the' → logprob: -14.132019996643066

Token 108: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.027155354619026184
    2. 'pos' → logprob: -3.7771553993225098
    3. '1' → logprob: -5.65215539932251
    4. 'zero' → logprob: -8.527154922485352
    5. ' pos' → logprob: -9.902154922485352
    6. ' ' → logprob: -10.152154922485352
    7. 'the' → logprob: -10.277154922485352
    8. 'position' → logprob: -11.027154922485352
    9. 'current' → logprob: -11.152154922485352
    10. '-' → logprob: -11.152154922485352

Token 109: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 110: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 111: ' if' (ID: 538)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.0814586728811264
    2. '       ' → logprob: -3.081458568572998
    3. 'if' (adapté à ' if') → logprob: -3.706458568572998
    4. ' else' → logprob: -5.206458568572998
    5. '   ' → logprob: -6.581458568572998
    6. ' if' → logprob: -7.706458568572998
    7. '<|end|>' → logprob: -8.581459045410156
    8. 'print' → logprob: -9.206459045410156
    9. 'elif' → logprob: -9.706459045410156
    10. '```' → logprob: -9.956459045410156

Token 112: ' pos' (ID: 1253)
  Prédit: ' pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pos' → logprob: -0.006721756421029568
    2. 'pos' → logprob: -5.0067219734191895
    3. ' ' → logprob: -12.881721496582031
    4. '	pos' → logprob: -14.006721496582031
    5. '(pos' → logprob: -14.006721496582031
    6. '0' → logprob: -14.381721496582031
    7. ' not' → logprob: -14.881721496582031
    8. '   ' → logprob: -15.631721496582031
    9. ' N' → logprob: -15.756721496582031
    10. ' instructions' → logprob: -16.13172149658203

Token 113: ' >=' (ID: 5064)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.45004260540008545
    2. ' >=' → logprob: -1.9500426054000854
    3. '<' → logprob: -2.200042724609375
    4. ' <=' → logprob: -2.825042724609375
    5. '>=' → logprob: -3.825042724609375
    6. ' ==' → logprob: -4.700042724609375
    7. '<=' → logprob: -4.825042724609375
    8. ' >' → logprob: -4.825042724609375
    9. '>' → logprob: -6.450042724609375
    10. '==' → logprob: -6.575042724609375

Token 114: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.3484675884246826
    2. ' N' → logprob: -1.2234675884246826
    3. 'n' → logprob: -11.848467826843262
    4. '0' → logprob: -12.223467826843262
    5. ' ' → logprob: -12.348467826843262
    6. '   ' → logprob: -12.348467826843262
    7. '<|end|>' → logprob: -14.848467826843262
    8. '	N' → logprob: -14.973467826843262
    9. '>N' → logprob: -15.223467826843262
    10. '       ' → logprob: -15.598467826843262

Token 115: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.11390558630228043
    2. '-' → logprob: -2.238905668258667
    3. ':' → logprob: -7.488905429840088
    4. '   ' → logprob: -8.363905906677246
    5. ' or' → logprob: -9.113905906677246
    6. '       ' → logprob: -9.488905906677246
    7. ':
' → logprob: -9.863905906677246
    8. ' ' → logprob: -10.113905906677246
    9. '<|end|>' → logprob: -12.613905906677246
    10. '           ' → logprob: -12.988905906677246

Token 116: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000488811288960278
    2. ' ' → logprob: -7.625488758087158
    3. '   ' → logprob: -14.750489234924316
    4. '0' → logprob: -15.375489234924316
    5. '```' → logprob: -16.62548828125
    6. '-' → logprob: -16.75048828125
    7. '<|end|>' → logprob: -17.81298828125
    8. '2' → logprob: -18.12548828125
    9. '  ' → logprob: -18.37548828125
    10. '       ' → logprob: -18.81298828125

Token 117: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.45848218582978e-06
    2. ' ' → logprob: -13.12500286102295
    3. '0' → logprob: -15.37500286102295
    4. '-' → logprob: -16.125001907348633
    5. '```' → logprob: -19.000001907348633
    6. '   ' → logprob: -19.250001907348633
    7. 'i' → logprob: -21.000001907348633
    8. '2' → logprob: -21.125001907348633
    9. ' -' → logprob: -21.500001907348633
    10. '１' → logprob: -21.500001907348633

Token 118: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01901128888130188
    2. ':
' → logprob: -4.019011497497559
    3. '           ' → logprob: -7.269011497497559
    4. ' or' → logprob: -9.144011497497559
    5. '       ' → logprob: -10.144011497497559
    6. ':

' → logprob: -12.269011497497559
    7. ' and' → logprob: -12.519011497497559
    8. ',' → logprob: -12.519011497497559
    9. '<|end|>' → logprob: -14.019011497497559
    10. '):
' → logprob: -14.144011497497559

Token 119: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2521898150444031
    2. 'print' → logprob: -1.5021898746490479
    3. ' print' → logprob: -8.752189636230469
    4. '       ' → logprob: -9.377189636230469
    5. '               ' → logprob: -12.252189636230469
    6. '```' → logprob: -12.252189636230469
    7. '   ' → logprob: -12.502189636230469
    8. '          ' → logprob: -13.252189636230469
    9. 'break' → logprob: -14.002189636230469
    10. '         ' → logprob: -14.752189636230469

Token 120: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0001290454383706674
    2. ' print' → logprob: -9.250128746032715
    3. '           ' → logprob: -10.375128746032715
    4. '       ' → logprob: -13.500128746032715
    5. '   ' → logprob: -15.125128746032715
    6. '```' → logprob: -16.75012969970703
    7. '	print' → logprob: -17.50012969970703
    8. '               ' → logprob: -18.12512969970703
    9. ' ' → logprob: -18.37512969970703
    10. '          ' → logprob: -19.75012969970703

Token 121: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -6.2729995988775045e-06
    2. '(' → logprob: -12.125006675720215
    3. 'i' → logprob: -14.125006675720215
    4. '(
' → logprob: -20.0000057220459
    5. '()' → logprob: -20.2500057220459
    6. ' (' → logprob: -20.3750057220459
    7. ' i' → logprob: -20.7500057220459
    8. '(I' → logprob: -21.5000057220459
    9. '   ' → logprob: -21.6250057220459
    10. '((' → logprob: -21.8750057220459

Token 122: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.048617683351039886
    2. ')
' → logprob: -3.0486176013946533
    3. '       ' → logprob: -10.548617362976074
    4. '           ' → logprob: -13.923617362976074
    5. ')
' → logprob: -13.923617362976074
    6. ')

' → logprob: -14.923617362976074
    7. ')return' → logprob: -15.048617362976074
    8. ' )' → logprob: -15.548617362976074
    9. '):
' → logprob: -15.673617362976074
    10. '<|end|>' → logprob: -15.673617362976074

Token 123: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -3.380904672667384e-05
    2. '       ' → logprob: -10.625033378601074
    3. '```' → logprob: -13.375033378601074
    4. '<|end|>' → logprob: -13.375033378601074
    5. '
' → logprob: -13.625033378601074
    6. 'break' → logprob: -13.750033378601074
    7. '   ' → logprob: -13.750033378601074
    8. '               ' → logprob: -14.125033378601074
    9. '          ' → logprob: -14.375033378601074
    10. '		' → logprob: -14.875033378601074

Token 124: ' break' (ID: 2338)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.12973067164421082
    2. 'break' (adapté à ' break') → logprob: -2.129730701446533
    3. ' break' → logprob: -6.004730701446533
    4. '
' → logprob: -8.629730224609375
    5. '       ' → logprob: -9.754730224609375
    6. '   ' → logprob: -10.379730224609375
    7. '	break' → logprob: -10.754730224609375
    8. '		' → logprob: -11.379730224609375
    9. '```' → logprob: -11.629730224609375
    10. '               ' → logprob: -11.754730224609375


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 122
Tokens correctement prédits (1ère position, stricte): 49
Tokens correctement prédits (1ère position, avec adaptation): 54
Tokens correctement prédits (top 10): 101
Précision stricte (1ère position): 40.16%
Précision adaptée (1ère position): 44.26%
Précision (top 10): 82.79%
================================================================================
