================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:16:55
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
from abc import ABC, abstractmethod
from math import gcd
from functools import lru_cache
from typing import Tuple, Optional

class InputParser(ABC):
    @abstractmethod
    def parse(self) -> Tuple[int, int, int]:
        pass

class StdInputParser(InputParser):
    def parse(self) -> Tuple[int, int, int]:
        line = sys.stdin.readline().strip()
        S_str, N_str, K_str = line.split()
        return int(S_str), int(N_str), int(K_str)

class ProbabilityDistribution(ABC):
    @abstractmethod
    def probability(self, value: int) -> float:
        pass
    @abstractmethod
    def support(self) -> Tuple[int, int]:
        pass

class UniformSumDistribution(ProbabilityDistribution):
    def __init__(self, N: int, K: int):
        self.N = N
        self.K = K
        self._min = K * 1
        self._max = K * N
        self._counts = None
        self._total = N ** K
        self._init_distribution_counts()

    def _init_distribution_counts(self):
        # Compute distribution_counts[x] = number of combinations summing to x
        # x ranges from K to K*N
        # Use dynamic programming for the counts
        counts_prev = [0] * (self._max + 1)
        for i in range(1, self.N + 1):
            counts_prev[i] = 1
        for _ in range(2, self.K + 1):
            counts_curr = [0] * (self._max + 1)
            cum = 0
            for s in range(self._max + 1):
                if s - 1 >= 0:
                    cum += counts_prev[s - 1]
                if s - self.N - 1 >= 0:
                    cum -= counts_prev[s - self.N - 1]
                counts_curr[s] = cum
            counts_prev = counts_curr
        self._counts = counts_prev

    def probability(self, value: int) -> float:
        if value < self._min or value > self._max:
            return 0.0
        return self._counts[value] / self._total

    def support(self) -> Tuple[int, int]:
        return self._min, self._max

class JumpModel:
    def __init__(self, S: int, N: int, K: int):
        self.S = S
        self.N = N
        self.K = K
        self.distribution = UniformSumDistribution(N, K)
        self.R = abs(S)
        self.direction = -1 if S > 0 else 1  # Jump direction toward witch at 0

    def can_reach(self) -> bool:
        # The possible jump step sizes are from distribution.support()
        min_step, max_step = self.distribution.support()
        d = self._gcd_of_support()
        return self.R % d == 0

    def _gcd_of_support(self) -> int:
        # The jump length is sum of K numbers each in 1..N
        # So support is {K .. K*N}, consecutive integers, thus gcd=1 always
        # but let's keep for extension or change cases
        return 1

    def expected_jumps(self) -> Optional[float]:
        if not self.can_reach():
            return None
        # We solve E(r) = 1 + sum_p E(r - s) for s in support, E(0) = 0
        # where r from 0 to R
        # The distribution is symmetric and the problem reduces to a linear
        # equation system which due to Markov property we solve by DP
        #
        # Here, since R can be huge (up to 10^9), direct DP impossible.
        #
        # But the problem is classic: For a random walk with steps in support,
        # expected hitting time at 0 starting from R = R / mean step length.
        #
        # So expected number of jumps = R / expected_step
        #
        # But need to check if expected value finite: only if mean step > 0
        mean_step = sum(s * self.distribution.probability(s) for s in range(self.N * self.K + 1))
        if mean_step <= 0:
            return None
        # The step is always positive, since sum of positive integers between 1 and N
        # So expected_jumps = R / mean_step
        return self.R / mean_step

class OutputFormatter(ABC):
    @abstractmethod
    def format(self, value: Optional[float]) -> str:
        pass

class ConsoleOutputFormatter(OutputFormatter):
    def format(self, value: Optional[float]) -> str:
        if value is None:
            return "-1"
        else:
            return f"{value:.9f}"

def main():
    parser = StdInputParser()
    S, N, K = parser.parse()
    model = JumpModel(S, N, K)
    result = model.expected_jumps()
    formatter = ConsoleOutputFormatter()
    print(formatter.format(result))

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'from' (ID: 2845)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.21183791756629944
    2. '.' → logprob: -2.3368380069732666
    3. '<|end|>' → logprob: -2.8368380069732666
    4. '\' → logprob: -4.7118377685546875
    5. 'newline' → logprob: -5.0868377685546875
    6. 'import' → logprob: -5.0868377685546875
    7. '
' → logprob: -5.7118377685546875
    8. '' → logprob: -5.8368377685546875
    9. '<|end|>' → logprob: -5.8368377685546875
    10. '\r' → logprob: -6.3368377685546875

Token 4: ' abc' (ID: 75094)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.007331990636885166
    2. 'os' → logprob: -6.257331848144531
    3. ' math' → logprob: -6.257331848144531
    4. ' collections' → logprob: -6.882331848144531
    5. ' ' → logprob: -7.132331848144531
    6. ' typing' → logprob: -7.882331848144531
    7. ' pathlib' → logprob: -8.007331848144531
    8. ' datetime' → logprob: -9.132331848144531
    9. ' Py' → logprob: -9.257331848144531
    10. 'collections' → logprob: -9.382331848144531

Token 5: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.14197422564029694
    2. 'import' → logprob: -2.7669742107391357
    3. '.' → logprob: -3.1419742107391357
    4. ' .' → logprob: -4.016974449157715
    5. ' ' → logprob: -5.016974449157715
    6. '	import' → logprob: -6.891974449157715
    7. '.import' → logprob: -7.641974449157715
    8. '_import' → logprob: -10.391974449157715
    9. '.abstract' → logprob: -10.516974449157715
    10. '<|end|>' → logprob: -10.891974449157715

Token 6: ' ABC' (ID: 33047)
  Prédit: ' ABC'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ABC' → logprob: -0.0008060562540777028
    2. 'ABC' → logprob: -7.250805854797363
    3. ' A' → logprob: -9.500805854797363
    4. ' abstract' → logprob: -11.375805854797363
    5. 'abstract' → logprob: -12.375805854797363
    6. ' ' → logprob: -13.125805854797363
    7. ' ' → logprob: -13.500805854797363
    8. ' AB' → logprob: -14.250805854797363
    9. ' abc' → logprob: -14.500805854797363
    10. 'abc' → logprob: -14.750805854797363

Token 7: ',' (ID: 11)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.03222082927823067
    2. 'import' → logprob: -3.9072208404541016
    3. '<|end|>' → logprob: -5.657220840454102
    4. ' import' → logprob: -5.782220840454102
    5. ',' → logprob: -6.157220840454102
    6. ' ' → logprob: -7.032220840454102
    7. '.import' → logprob: -7.157220840454102
    8. '```' → logprob: -8.032220840454102
    9. ' .' → logprob: -8.282220840454102
    10. '.
' → logprob: -9.407220840454102

Token 8: ' abstract' (ID: 13004)
  Prédit: 'abstract'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abstract' → logprob: -0.20141451060771942
    2. ' abstract' → logprob: -1.7014144659042358
    3. '.abstract' → logprob: -14.826414108276367
    4. ' ABC' → logprob: -14.826414108276367
    5. 'Abstract' → logprob: -14.951414108276367
    6. ' abstr' → logprob: -17.451414108276367
    7. 'abc' → logprob: -17.951414108276367
    8. ' Abstract' → logprob: -18.076414108276367
    9. '```' → logprob: -18.201414108276367
    10. 'ABC' → logprob: -18.326414108276367

Token 9: 'method' (ID: 8697)
  Prédit: 'method'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'method' → logprob: -0.0007457832107320428
    2. '_' → logprob: -8.37574577331543
    3. 'm' → logprob: -8.50074577331543
    4. 'classmethod' → logprob: -8.62574577331543
    5. 'class' → logprob: -9.75074577331543
    6. 'meth' → logprob: -10.75074577331543
    7. 'base' → logprob: -11.25074577331543
    8. 'meta' → logprob: -11.75074577331543
    9. 'staticmethod' → logprob: -12.00074577331543
    10. '_method' → logprob: -12.12574577331543

Token 10: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3565923571586609
    2. '

' → logprob: -1.4815924167633057
    3. '```' → logprob: -3.6065924167633057
    4. '\n' → logprob: -3.8565924167633057
    5. '' → logprob: -4.356592178344727
    6. '<|end|>' → logprob: -4.981592178344727
    7. 'import' → logprob: -6.981592178344727
    8. '
' → logprob: -7.606592178344727
    9. '


' → logprob: -7.731592178344727
    10. '<|end|>' → logprob: -7.731592178344727

Token 11: 'from' (ID: 2845)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.20623625814914703
    2. '

' → logprob: -1.9562362432479858
    3. 'class' → logprob: -3.5812363624572754
    4. '```' → logprob: -4.456236362457275
    5. '' → logprob: -5.956236362457275
    6. '\n' → logprob: -6.831236362457275
    7. '
' → logprob: -6.831236362457275
    8. '


' → logprob: -8.331235885620117
    9. '``' → logprob: -8.831235885620117
    10. ' class' → logprob: -9.456235885620117

Token 12: ' math' (ID: 13324)
  Prédit: ' typing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' typing' → logprob: -0.3299817442893982
    2. ' os' → logprob: -1.454981803894043
    3. ' collections' → logprob: -3.829981803894043
    4. ' abc' → logprob: -4.954981803894043
    5. ' io' → logprob: -5.204981803894043
    6. ' dat' → logprob: -5.329981803894043
    7. ' pathlib' → logprob: -5.829981803894043
    8. 'typing' → logprob: -5.829981803894043
    9. ' datetime' → logprob: -7.454981803894043
    10. 'os' → logprob: -7.454981803894043

Token 13: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.01149998139590025
    2. '.' → logprob: -5.136499881744385
    3. 'import' → logprob: -5.636499881744385
    4. ' ' → logprob: -6.261499881744385
    5. ' .' → logprob: -10.761500358581543
    6. ' im' → logprob: -11.386500358581543
    7. ' ' → logprob: -11.886500358581543
    8. '	import' → logprob: -12.136500358581543
    9. ' ```' → logprob: -12.386500358581543
    10. '_' → logprob: -12.386500358581543

Token 14: ' gcd' (ID: 106918)
  Prédit: ' sqrt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sqrt' → logprob: -0.10740253329277039
    2. ' pi' → logprob: -2.8574025630950928
    3. ' ceil' → logprob: -3.7324025630950928
    4. 'sqrt' → logprob: -4.357402324676514
    5. ' inf' → logprob: -5.732402324676514
    6. ' pow' → logprob: -6.857402324676514
    7. ' log' → logprob: -7.232402324676514
    8. ' ' → logprob: -7.482402324676514
    9. 'pi' → logprob: -7.982402324676514
    10. 'ceil' → logprob: -8.107402801513672

Token 15: '
' (ID: 198)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.050596196204423904
    2. '
' → logprob: -3.175596237182617
    3. '```' → logprob: -5.800596237182617
    4. '\n' → logprob: -6.425596237182617
    5. '' → logprob: -6.800596237182617
    6. '


' → logprob: -7.050596237182617
    7. '
' → logprob: -8.175596237182617
    8. '

' → logprob: -9.050596237182617
    9. 'class' → logprob: -9.175596237182617
    10. ' 

' → logprob: -9.175596237182617

Token 16: 'from' (ID: 2845)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '

' → logprob: -0.26768141984939575
    2. '
' → logprob: -1.767681360244751
    3. 'class' → logprob: -2.892681360244751
    4. '```' → logprob: -5.14268159866333
    5. '\n' → logprob: -6.89268159866333
    6. '


' → logprob: -7.39268159866333
    7. '' → logprob: -7.76768159866333
    8. '
' → logprob: -8.392681121826172
    9. ' 

' → logprob: -8.767681121826172
    10. ' class' → logprob: -9.392681121826172

Token 17: ' functools' (ID: 142636)
  Prédit: ' fractions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' fractions' → logprob: -0.25220009684562683
    2. ' functools' → logprob: -2.002200126647949
    3. ' typing' → logprob: -3.002200126647949
    4. 'fra' → logprob: -3.752200126647949
    5. ' itertools' → logprob: -4.627200126647949
    6. ' collections' → logprob: -5.752200126647949
    7. ' sym' → logprob: -7.877200126647949
    8. 'typing' → logprob: -8.12720012664795
    9. 'fun' → logprob: -8.25220012664795
    10. ' ' → logprob: -8.25220012664795

Token 18: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.014734066091477871
    2. 'import' → logprob: -4.264734268188477
    3. '.' → logprob: -7.764734268188477
    4. ' ' → logprob: -10.014734268188477
    5. '	import' → logprob: -10.264734268188477
    6. '_import' → logprob: -10.764734268188477
    7. '.import' → logprob: -11.389734268188477
    8. ' .' → logprob: -12.014734268188477
    9. '_' → logprob: -12.139734268188477
    10. ' _' → logprob: -12.139734268188477

Token 19: ' l' (ID: 305)
  Prédit: ' reduce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' reduce' → logprob: -0.11388219147920609
    2. ' l' → logprob: -2.363882303237915
    3. 'reduce' → logprob: -4.738882064819336
    4. ' wraps' → logprob: -5.863882064819336
    5. 'l' → logprob: -7.488882064819336
    6. ' cache' → logprob: -7.863882064819336
    7. ' ' → logprob: -8.113882064819336
    8. ' partial' → logprob: -8.363882064819336
    9. ' cached' → logprob: -8.613882064819336
    10. ' cmp' → logprob: -9.113882064819336

Token 20: 'ru' (ID: 1942)
  Prédit: 'ru'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ru' → logprob: -0.00016659092216286808
    2. 'u' → logprob: -9.375166893005371
    3. 'r' → logprob: -9.500166893005371
    4. 'z' → logprob: -12.875166893005371
    5. 'ruz' → logprob: -13.750166893005371
    6. '_ru' → logprob: -14.125166893005371
    7. 'azy' → logprob: -14.875166893005371
    8. 'a' → logprob: -15.000166893005371
    9. 'ruff' → logprob: -15.375166893005371
    10. 'ruh' → logprob: -15.500166893005371

Token 21: '_cache' (ID: 27045)
  Prédit: 'cache'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cache' → logprob: -0.4759349524974823
    2. '_cache' → logprob: -0.9759349822998047
    3. 'c' → logprob: -6.475934982299805
    4. 't' → logprob: -8.600934982299805
    5. 'ca' → logprob: -10.475934982299805
    6. 'cached' → logprob: -10.725934982299805
    7. 'ac' → logprob: -10.850934982299805
    8. '_c' → logprob: -11.475934982299805
    9. '```' → logprob: -11.475934982299805
    10. 'ut' → logprob: -12.225934982299805

Token 22: '
' (ID: 198)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.9658966064453125
    2. 'class' → logprob: -0.9658966064453125
    3. '
' → logprob: -1.7158966064453125
    4. '```' → logprob: -3.2158966064453125
    5. '' → logprob: -4.7158966064453125
    6. '\n' → logprob: -5.3408966064453125
    7. '
' → logprob: -6.8408966064453125
    8. '


' → logprob: -6.9658966064453125
    9. ' class' → logprob: -7.4658966064453125
    10. '``' → logprob: -7.8408966064453125

Token 23: 'from' (ID: 2845)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '

' → logprob: -0.6130354404449463
    2. '
' → logprob: -1.4880354404449463
    3. 'class' → logprob: -1.4880354404449463
    4. '```' → logprob: -5.863035202026367
    5. '


' → logprob: -6.863035202026367
    6. '<|end|>' → logprob: -7.363035202026367
    7. 'import' → logprob: -7.488035202026367
    8. '' → logprob: -7.988035202026367
    9. '
' → logprob: -8.238035202026367
    10. ' class' → logprob: -8.613035202026367

Token 24: ' typing' (ID: 34152)
  Prédit: ' typing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' typing' → logprob: -0.11054974049329758
    2. ' collections' → logprob: -2.6105496883392334
    3. ' itertools' → logprob: -3.8605496883392334
    4. ' ' → logprob: -5.7355499267578125
    5. ' operator' → logprob: -6.1105499267578125
    6. 'typing' → logprob: -6.8605499267578125
    7. ' fractions' → logprob: -6.9855499267578125
    8. ' dat' → logprob: -7.1105499267578125
    9. ' enum' → logprob: -7.2355499267578125
    10. 'collections' → logprob: -7.7355499267578125

Token 25: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.0173244196921587
    2. 'import' → logprob: -4.267324447631836
    3. ' ' → logprob: -6.142324447631836
    4. '<|end|>' → logprob: -7.517324447631836
    5. '.' → logprob: -7.892324447631836
    6. '	import' → logprob: -10.892324447631836
    7. '[' → logprob: -11.017324447631836
    8. '<|end|>' → logprob: -11.142324447631836
    9. ' as' → logprob: -11.767324447631836
    10. '.import' → logprob: -12.142324447631836

Token 26: ' Tuple' (ID: 50841)
  Prédit: ' List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' List' → logprob: -0.31092360615730286
    2. ' Union' → logprob: -2.1859235763549805
    3. ' Callable' → logprob: -2.6859235763549805
    4. ' Any' → logprob: -3.3109235763549805
    5. ' Generator' → logprob: -4.0609235763549805
    6. ' Optional' → logprob: -4.5609235763549805
    7. ' Tuple' → logprob: -4.6859235763549805
    8. ' Iterator' → logprob: -5.0609235763549805
    9. ' Iterable' → logprob: -5.4359235763549805
    10. 'List' → logprob: -6.9359235763549805

Token 27: ',' (ID: 11)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '

' → logprob: -0.06533358991146088
    2. 'class' → logprob: -3.315333604812622
    3. '
' → logprob: -3.690333604812622
    4. '```' → logprob: -7.190333366394043
    5. '


' → logprob: -7.315333366394043
    6. ' class' → logprob: -8.690333366394043
    7. '\n' → logprob: -8.815333366394043
    8. 'import' → logprob: -9.815333366394043
    9. '<|end|>' → logprob: -10.690333366394043
    10. '
' → logprob: -10.690333366394043

Token 28: ' Optional' (ID: 19351)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.9110965132713318
    2. ' List' → logprob: -1.2860965728759766
    3. 'Union' → logprob: -2.7860965728759766
    4. 'Callable' → logprob: -2.9110965728759766
    5. 'Any' → logprob: -3.0360965728759766
    6. ' Union' → logprob: -3.0360965728759766
    7. ' Callable' → logprob: -3.2860965728759766
    8. 'Optional' → logprob: -4.036096572875977
    9. 'Iterable' → logprob: -4.161096572875977
    10. 'Iterator' → logprob: -4.661096572875977

Token 29: '

' (ID: 279)
  Prédit: '

'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.08409866690635681
    2. '
' → logprob: -3.0840985774993896
    3. 'class' → logprob: -3.4590985774993896
    4. '```' → logprob: -6.459098815917969
    5. '


' → logprob: -6.709098815917969
    6. '\n' → logprob: -8.334098815917969
    7. ' class' → logprob: -8.959098815917969
    8. '
' → logprob: -9.834098815917969
    9. 'import' → logprob: -10.209098815917969
    10. '



' → logprob: -10.334098815917969

Token 30: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.18974526226520538
    2. '
' → logprob: -1.939745306968689
    3. '

' → logprob: -3.5647451877593994
    4. 'c' → logprob: -7.5647454261779785
    5. '
' → logprob: -9.43974494934082
    6. '```' → logprob: -9.68974494934082
    7. ' class' → logprob: -10.18974494934082
    8. '


' → logprob: -10.43974494934082
    9. '' → logprob: -11.56474494934082
    10. '\n' → logprob: -11.93974494934082

Token 31: ' Input' (ID: 10090)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0034625099506229162
    2. ' Rational' → logprob: -7.003462314605713
    3. ' Space' → logprob: -7.378462314605713
    4. ' Basic' → logprob: -7.503462314605713
    5. ' Abstract' → logprob: -8.003462791442871
    6. ' Factor' → logprob: -8.253462791442871
    7. ' My' → logprob: -9.128462791442871
    8. ' Calculator' → logprob: -9.128462791442871
    9. ' Fraction' → logprob: -9.378462791442871
    10. ' ABC' → logprob: -10.003462791442871

Token 32: 'Parser' (ID: 9231)
  Prédit: 'Processor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Processor' → logprob: -1.0090280771255493
    2. 'Handler' → logprob: -1.2590280771255493
    3. 'Reader' → logprob: -2.0090279579162598
    4. 'Data' → logprob: -2.8840279579162598
    5. 'Parser' → logprob: -3.0090279579162598
    6. ':' → logprob: -3.0090279579162598
    7. 'Layer' → logprob: -4.38402795791626
    8. 'Stream' → logprob: -4.50902795791626
    9. '(' → logprob: -4.75902795791626
    10. 'Provider' → logprob: -4.88402795791626

Token 33: '(' (ID: 7)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.043224576860666275
    2. '(' → logprob: -3.168224573135376
    3. '(Abstract' → logprob: -9.293224334716797
    4. ' :' → logprob: -10.168224334716797
    5. '():' → logprob: -10.293224334716797
    6. '(:' → logprob: -10.543224334716797
    7. '):' → logprob: -11.418224334716797
    8. ':**' → logprob: -12.043224334716797
    9. '(Exception' → logprob: -12.793224334716797
    10. '```' → logprob: -13.293224334716797

Token 34: 'ABC' (ID: 44197)
  Prédit: ' ABC'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ABC' → logprob: -0.5761838555335999
    2. 'ABC' → logprob: -0.8261838555335999
    3. 'abc' → logprob: -9.826184272766113
    4. ')' → logprob: -9.826184272766113
    5. '(' → logprob: -10.826184272766113
    6. 'AB' → logprob: -10.951184272766113
    7. ' abc' → logprob: -11.076184272766113
    8. ' ' → logprob: -11.201184272766113
    9. ' )' → logprob: -11.326184272766113
    10. 'A' → logprob: -11.576184272766113

Token 35: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.01621231622993946
    2. ')' → logprob: -4.141212463378906
    3. ':' → logprob: -8.766212463378906
    4. ' ):' → logprob: -11.266212463378906
    5. '):
' → logprob: -12.016212463378906
    6. '):

' → logprob: -14.516212463378906
    7. ':)' → logprob: -14.641212463378906
    8. ',' → logprob: -15.016212463378906
    9. ')>' → logprob: -15.141212463378906
    10. '():' → logprob: -15.141212463378906

Token 36: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004507493227720261
    2. '   ' → logprob: -5.504507541656494
    3. ' :' → logprob: -8.129507064819336
    4. ':
' → logprob: -10.004507064819336
    5. '    ' → logprob: -10.879507064819336
    6. ':def' → logprob: -11.379507064819336
    7. '```' → logprob: -11.504507064819336
    8. 'def' → logprob: -12.129507064819336
    9. '\' → logprob: -12.379507064819336
    10. ')' → logprob: -12.379507064819336

Token 37: ' @' (ID: 759)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.781533420085907
    2. ':' → logprob: -1.4065334796905518
    3. ' def' → logprob: -1.9065334796905518
    4. 'def' → logprob: -2.0315334796905518
    5. '
' → logprob: -5.781533241271973
    6. ':def' → logprob: -5.781533241271973
    7. '    
' → logprob: -6.031533241271973
    8. '```' → logprob: -6.406533241271973
    9. ' :' → logprob: -6.406533241271973
    10. '    ' → logprob: -6.906533241271973

Token 38: 'abstract' (ID: 31332)
  Prédit: 'abstract'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abstract' → logprob: -0.0002371521550230682
    2. 'ab' → logprob: -8.875237464904785
    3. 'abs' → logprob: -9.375237464904785
    4. 'abc' → logprob: -11.750237464904785
    5. 'staticmethod' → logprob: -12.750237464904785
    6. 'a' → logprob: -14.375237464904785
    7. 'classmethod' → logprob: -14.750237464904785
    8. 'b' → logprob: -15.375237464904785
    9. ' abstract' → logprob: -16.12523651123047
    10. 'stract' → logprob: -16.50023651123047

Token 39: 'method' (ID: 8697)
  Prédit: 'method'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'method' → logprob: -0.00880010612308979
    2. '_method' → logprob: -4.758800029754639
    3. 'meth' → logprob: -9.383800506591797
    4. '_' → logprob: -10.133800506591797
    5. 'classmethod' → logprob: -11.133800506591797
    6. 'def' → logprob: -11.258800506591797
    7. '.method' → logprob: -11.383800506591797
    8. 'm' → logprob: -12.133800506591797
    9. '_m' → logprob: -12.383800506591797
    10. 'Method' → logprob: -12.758800506591797

Token 40: '
' (ID: 198)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9315593838691711
    2. '(' → logprob: -1.1815593242645264
    3. ' def' → logprob: -1.4315593242645264
    4. 'def' → logprob: -3.3065593242645264
    5. '    ' → logprob: -5.3065595626831055
    6. '   ' → logprob: -5.4315595626831055
    7. ')' → logprob: -5.5565595626831055
    8. ' (' → logprob: -5.5565595626831055
    9. ' )' → logprob: -5.9315595626831055
    10. '  ' → logprob: -6.8065595626831055

Token 41: '   ' (ID: 271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06999601423740387
    2. 'def' → logprob: -3.3199961185455322
    3. ' def' → logprob: -3.5699961185455322
    4. '(
' → logprob: -6.819995880126953
    5. ' ' → logprob: -7.694995880126953
    6. '   ' → logprob: -7.694995880126953
    7. ')' → logprob: -7.944995880126953
    8. ' (' → logprob: -8.319995880126953
    9. '(def' → logprob: -8.444995880126953
    10. '('' → logprob: -8.944995880126953

Token 42: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.20335653424263
    2. ' def' → logprob: -1.7033565044403076
    3. '
' → logprob: -7.453356742858887
    4. ' ' → logprob: -7.578356742858887
    5. 'parse' → logprob: -8.578356742858887
    6. 's' → logprob: -8.953356742858887
    7. '   ' → logprob: -8.953356742858887
    8. 'd' → logprob: -9.203356742858887
    9. '    
' → logprob: -9.203356742858887
    10. 'p' → logprob: -9.828356742858887

Token 43: ' parse' (ID: 8420)
  Prédit: ' parse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' parse' → logprob: -0.0476766899228096
    2. ' ' → logprob: -3.6726768016815186
    3. ' read' → logprob: -4.4226765632629395
    4. ' decode' → logprob: -5.7976765632629395
    5. ' process' → logprob: -6.4226765632629395
    6. ' get' → logprob: -7.1726765632629395
    7. ' def' → logprob: -7.2976765632629395
    8. ' space' → logprob: -7.4226765632629395
    9. '_' → logprob: -7.4226765632629395
    10. ' input' → logprob: -8.422677040100098

Token 44: '(self' (ID: 2402)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.12592969834804535
    2. '(self' → logprob: -2.250929594039917
    3. '_input' → logprob: -4.875929832458496
    4. '_' → logprob: -5.375929832458496
    5. '_line' → logprob: -7.875929832458496
    6. ' (' → logprob: -9.375929832458496
    7. '_self' → logprob: -9.750929832458496
    8. '(s' → logprob: -10.375929832458496
    9. '_data' → logprob: -10.375929832458496
    10. '_(' → logprob: -10.500929832458496

Token 45: ')' (ID: 8)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2960605323314667
    2. '):' → logprob: -1.546060562133789
    3. '_input' → logprob: -4.296060562133789
    4. ')' → logprob: -4.421060562133789
    5. ' ,' → logprob: -4.671060562133789
    6. 'self' → logprob: -6.296060562133789
    7. ',input' → logprob: -6.296060562133789
    8. ' ):' → logprob: -6.546060562133789
    9. '_' → logprob: -7.296060562133789
    10. ' )' → logprob: -7.796060562133789

Token 46: ' ->' (ID: 2747)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.1832847595214844
    2. ':' → logprob: -1.1832847595214844
    3. '(self' → logprob: -1.3082847595214844
    4. '():' → logprob: -2.1832847595214844
    5. ' :' → logprob: -6.308284759521484
    6. '(s' → logprob: -7.433284759521484
    7. '   ' → logprob: -8.308284759521484
    8. ' ->' → logprob: -8.433284759521484
    9. ')' → logprob: -8.558284759521484
    10. ':return' → logprob: -8.683284759521484

Token 47: ' Tuple' (ID: 50841)
  Prédit: ' None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' None' → logprob: -0.5266208052635193
    2. ' Tuple' → logprob: -1.401620864868164
    3. ' int' → logprob: -2.526620864868164
    4. ' str' → logprob: -3.401620864868164
    5. ' tuple' → logprob: -4.026620864868164
    6. ' Optional' → logprob: -4.151620864868164
    7. ' ' → logprob: -4.401620864868164
    8. 'None' → logprob: -6.276620864868164
    9. 'int' → logprob: -7.026620864868164
    10. ' list' → logprob: -8.026620864868164

Token 48: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.43315306305885315
    2. '[' → logprob: -1.0581530332565308
    3. '[str' → logprob: -5.68315315246582
    4. ' ' → logprob: -8.30815315246582
    5. '[]' → logprob: -8.43315315246582
    6. '[Any' → logprob: -8.68315315246582
    7. '[
' → logprob: -8.80815315246582
    8. '[...,' → logprob: -9.30815315246582
    9. '[...]' → logprob: -10.05815315246582
    10. '  ' → logprob: -10.30815315246582

Token 49: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005437385407276452
    2. ',int' → logprob: -8.000543594360352
    3. ' ,' → logprob: -8.625543594360352
    4. '[int' → logprob: -11.125543594360352
    5. ']' → logprob: -11.750543594360352
    6. ']int' → logprob: -13.375543594360352
    7. '[' → logprob: -13.625543594360352
    8. ']:' → logprob: -13.750543594360352
    9. ' ' → logprob: -14.625543594360352
    10. ',Integer' → logprob: -14.875543594360352

Token 50: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.055784858763217926
    2. 'int' → logprob: -2.9307849407196045
    3. ' Optional' → logprob: -7.305784702301025
    4. ' str' → logprob: -9.305785179138184
    5. 'Optional' → logprob: -9.680785179138184
    6. ' None' → logprob: -10.680785179138184
    7. ' ...' → logprob: -10.805785179138184
    8. '...' → logprob: -11.930785179138184
    9. '[int' → logprob: -12.430785179138184
    10. '	int' → logprob: -12.555785179138184

Token 51: ',' (ID: 11)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.47636446356773376
    2. '):' → logprob: -0.9763644933700562
    3. ',' → logprob: -6.601364612579346
    4. ':' → logprob: -7.601364612579346
    5. ')' → logprob: -8.601364135742188
    6. ']' → logprob: -8.726364135742188
    7. '>:' → logprob: -10.226364135742188
    8. ']):' → logprob: -10.726364135742188
    9. ']>' → logprob: -12.101364135742188
    10. '>' → logprob: -12.726364135742188

Token 52: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.1254703849554062
    2. 'int' → logprob: -2.3754703998565674
    3. ' Optional' → logprob: -4.250470161437988
    4. 'Optional' → logprob: -4.625470161437988
    5. ' str' → logprob: -8.000470161437988
    6. ' bool' → logprob: -8.625470161437988
    7. '[int' → logprob: -9.875470161437988
    8. 'bool' → logprob: -10.125470161437988
    9. ' list' → logprob: -10.125470161437988
    10. 'str' → logprob: -10.375470161437988

Token 53: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.34988054633140564
    2. '):' → logprob: -1.224880576133728
    3. ',' → logprob: -6.974880695343018
    4. ':' → logprob: -7.974880695343018
    5. ')' → logprob: -9.72488021850586
    6. ']' → logprob: -10.22488021850586
    7. '>:' → logprob: -10.22488021850586
    8. ']):' → logprob: -12.22488021850586
    9. '']:' → logprob: -12.47488021850586
    10. '"]:' → logprob: -12.47488021850586

Token 54: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05161892622709274
    2. '\n' → logprob: -3.426618814468384
    3. '<|end|>' → logprob: -4.801619052886963
    4. '   ' → logprob: -5.926619052886963
    5. '
' → logprob: -7.176619052886963
    6. '    ' → logprob: -7.301619052886963
    7. ' 
' → logprob: -7.551619052886963
    8. '        
' → logprob: -7.551619052886963
    9. '\r' → logprob: -7.676619052886963
    10. ' ' → logprob: -7.676619052886963

Token 55: ' pass' (ID: 1853)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.3352019488811493
    2. '...' → logprob: -2.0852019786834717
    3. '       ' → logprob: -2.5852019786834717
    4. ' pass' → logprob: -2.9602019786834717
    5. 'pass' (adapté à ' pass') → logprob: -4.085201740264893
    6. '\' → logprob: -5.085201740264893
    7. '   ' → logprob: -5.710201740264893
    8. '
' → logprob: -6.335201740264893
    9. '' → logprob: -6.585201740264893
    10. 'n' → logprob: -7.210201740264893

Token 56: '

' (ID: 279)
  Prédit: '

'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.21799540519714355
    2. '
' → logprob: -1.7179954051971436
    3. '


' → logprob: -4.592995643615723
    4. 'class' → logprob: -5.342995643615723
    5. '\n' → logprob: -7.842995643615723
    6. '



' → logprob: -8.342995643615723
    7. '' → logprob: -8.717995643615723
    8. '```' → logprob: -8.842995643615723
    9. 'n' → logprob: -9.092995643615723
    10. '
    
' → logprob: -9.342995643615723

Token 57: 'class' (ID: 1444)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5817995071411133
    2. 'class' → logprob: -1.2067995071411133
    3. '

' → logprob: -1.9567995071411133
    4. 'c' → logprob: -8.206799507141113
    5. '


' → logprob: -9.456799507141113
    6. '```' → logprob: -9.581799507141113
    7. '' → logprob: -9.956799507141113
    8. '
' → logprob: -10.081799507141113
    9. '<|end|>' → logprob: -10.081799507141113
    10. ' class' → logprob: -10.456799507141113

Token 58: ' Std' (ID: 74505)
  Prédit: ' Fraction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Fraction' → logprob: -0.26885008811950684
    2. ' ' → logprob: -2.143850088119507
    3. ' Br' → logprob: -4.143850326538086
    4. ' Integer' → logprob: -4.268850326538086
    5. ' Rational' → logprob: -4.393850326538086
    6. ' Concrete' → logprob: -4.768850326538086
    7. ' Simple' → logprob: -4.768850326538086
    8. ' Input' → logprob: -5.018850326538086
    9. ' Na' → logprob: -5.143850326538086
    10. ' User' → logprob: -5.143850326538086

Token 59: 'Input' (ID: 3275)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.22806136310100555
    2. 'In' → logprob: -1.978061318397522
    3. 'Input' → logprob: -2.7280614376068115
    4. 'input' → logprob: -8.60306167602539
    5. 'inp' → logprob: -10.22806167602539
    6. 'i' → logprob: -11.72806167602539
    7. 'Inp' → logprob: -12.35306167602539
    8. 'IN' → logprob: -13.22806167602539
    9. 'I' → logprob: -13.35306167602539
    10. 'andard' → logprob: -13.47806167602539

Token 60: 'Parser' (ID: 9231)
  Prédit: 'Parser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Parser' → logprob: -0.32593056559562683
    2. 'Input' → logprob: -1.3259305953979492
    3. 'Reader' → logprob: -4.450930595397949
    4. 'er' → logprob: -7.700930595397949
    5. 'Processor' → logprob: -9.07593059539795
    6. 'Provider' → logprob: -9.57593059539795
    7. 'Handler' → logprob: -9.82593059539795
    8. 'ut' → logprob: -10.70093059539795
    9. 'Importer' → logprob: -10.82593059539795
    10. '(' → logprob: -10.82593059539795

Token 61: '(Input' (ID: 52522)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006886815652251244
    2. '():' → logprob: -5.131886959075928
    3. '(' → logprob: -7.631886959075928
    4. ' :' → logprob: -8.00688648223877
    5. '):' → logprob: -9.88188648223877
    6. '(:' → logprob: -10.38188648223877
    7. '(":' → logprob: -10.75688648223877
    8. '>:' → logprob: -11.88188648223877
    9. ':**' → logprob: -12.13188648223877
    10. '```' → logprob: -12.25688648223877

Token 62: 'Parser' (ID: 9231)
  Prédit: 'Input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Input' → logprob: -0.02554328739643097
    2. 'Parser' → logprob: -3.900543212890625
    3. 'Put' → logprob: -6.025543212890625
    4. 'put' → logprob: -6.275543212890625
    5. 'In' → logprob: -8.775543212890625
    6. 'ut' → logprob: -9.025543212890625
    7. '```' → logprob: -9.025543212890625
    8. 'I' → logprob: -9.400543212890625
    9. 'P' → logprob: -10.025543212890625
    10. ')' → logprob: -10.275543212890625

Token 63: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -6.301394023466855e-05
    2. ')' → logprob: -10.625062942504883
    3. ':' → logprob: -10.625062942504883
    4. '):
' → logprob: -11.750062942504883
    5. ' ):' → logprob: -12.125062942504883
    6. '():' → logprob: -14.500062942504883
    7. '   ' → logprob: -15.625062942504883
    8. ':)' → logprob: -16.125062942504883
    9. ']:' → logprob: -16.625062942504883
    10. '):
' → logprob: -17.000062942504883

Token 64: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4860135614871979
    2. ' 
' → logprob: -2.111013650894165
    3. '    ' → logprob: -2.236013650894165
    4. '    
' → logprob: -2.611013650894165
    5. ' ' → logprob: -3.361013650894165
    6. '
' → logprob: -4.236013412475586
    7. ' def' → logprob: -4.361013412475586
    8. '     
' → logprob: -4.861013412475586
    9. 'n' → logprob: -6.361013412475586
    10. '[' → logprob: -6.361013412475586

Token 65: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.12920261919498444
    2. '   ' → logprob: -2.5042026042938232
    3. ' ' → logprob: -3.7542026042938232
    4. 'def' (adapté à ' def') → logprob: -4.879202842712402
    5. '    ' → logprob: -5.254202842712402
    6. ' 
' → logprob: -6.254202842712402
    7. '    
' → logprob: -7.629202842712402
    8. '  ' → logprob: -8.879202842712402
    9. 'de' → logprob: -9.254202842712402
    10. '     
' → logprob: -9.379202842712402

Token 66: ' parse' (ID: 8420)
  Prédit: ' parse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' parse' → logprob: -0.09139253199100494
    2. ' ' → logprob: -2.4663925170898438
    3. 'parse' → logprob: -6.091392517089844
    4. ' p' → logprob: -9.216392517089844
    5. ' def' → logprob: -10.591392517089844
    6. ' ' → logprob: -11.216392517089844
    7. '	parse' → logprob: -11.591392517089844
    8. '_parse' → logprob: -11.966392517089844
    9. ' __' → logprob: -11.966392517089844
    10. 'p' → logprob: -12.216392517089844

Token 67: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.008145377039909363
    2. '(' → logprob: -4.883145332336426
    3. ' (' → logprob: -7.758145332336426
    4. 'self' → logprob: -9.633145332336426
    5. '(s' → logprob: -10.883145332336426
    6. ' ' → logprob: -11.633145332336426
    7. ' self' → logprob: -12.258145332336426
    8. '   ' → logprob: -12.383145332336426
    9. '(
' → logprob: -13.133145332336426
    10. ')(' → logprob: -13.633145332336426

Token 68: ')' (ID: 8)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.6525184512138367
    2. ')' → logprob: -0.7775184512138367
    3. 'self' → logprob: -4.652518272399902
    4. ',' → logprob: -4.777518272399902
    5. '):
' → logprob: -7.152518272399902
    6. ' )' → logprob: -8.652518272399902
    7. ' ):' → logprob: -8.777518272399902
    8. ')->' → logprob: -9.027518272399902
    9. '   ' → logprob: -9.152518272399902
    10. ',self' → logprob: -9.152518272399902

Token 69: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.021718883886933327
    2. ' :' → logprob: -4.521718978881836
    3. '(self' → logprob: -5.646718978881836
    4. '(' → logprob: -5.771718978881836
    5. '):' → logprob: -6.146718978881836
    6. ':
' → logprob: -7.771718978881836
    7. ':self' → logprob: -7.896718978881836
    8. '       ' → logprob: -8.521718978881836
    9. 'self' → logprob: -8.896718978881836
    10. ',' → logprob: -9.146718978881836

Token 70: ' Tuple' (ID: 50841)
  Prédit: ' Tuple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Tuple' → logprob: -0.014811711385846138
    2. ' ' → logprob: -5.0148115158081055
    3. 'Tuple' → logprob: -5.2648115158081055
    4. ' tuple' → logprob: -5.8898115158081055
    5. ' None' → logprob: -10.389811515808105
    6. 'tuple' → logprob: -11.014811515808105
    7. ' Tu' → logprob: -11.139811515808105
    8. ' int' → logprob: -11.139811515808105
    9. ' (' → logprob: -11.639811515808105
    10. '    ' → logprob: -11.764811515808105

Token 71: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.0003418991982471198
    2. '[' → logprob: -8.00034236907959
    3. '[
' → logprob: -12.87534236907959
    4. '[str' → logprob: -13.12534236907959
    5. '[Int' → logprob: -13.37534236907959
    6. '[in' → logprob: -16.125341415405273
    7. ' [' → logprob: -16.375341415405273
    8. '[Any' → logprob: -17.625341415405273
    9. '[List' → logprob: -17.750341415405273
    10. '   ' → logprob: -18.250341415405273

Token 72: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000399925687815994
    2. ',int' → logprob: -8.000399589538574
    3. ' ,' → logprob: -9.750399589538574
    4. ' ' → logprob: -13.625399589538574
    5. '‌,' → logprob: -14.500399589538574
    6. ',Integer' → logprob: -14.625399589538574
    7. '`,' → logprob: -14.625399589538574
    8. ',uint' → logprob: -14.875399589538574
    9. ',float' → logprob: -15.000399589538574
    10. '<|end|>' → logprob: -15.125399589538574

Token 73: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.4740865230560303
    2. ' int' → logprob: -0.9740865230560303
    3. ' ' → logprob: -11.84908676147461
    4. '[int' → logprob: -13.97408676147461
    5. ',int' → logprob: -14.59908676147461
    6. '	int' → logprob: -15.22408676147461
    7. '   ' → logprob: -15.72408676147461
    8. '  ' → logprob: -15.72408676147461
    9. ']int' → logprob: -15.84908676147461
    10. '<int' → logprob: -16.34908676147461

Token 74: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001414426224073395
    2. ',int' → logprob: -9.000141143798828
    3. ' ,' → logprob: -11.000141143798828
    4. ',

' → logprob: -15.125141143798828
    5. ',float' → logprob: -15.500141143798828
    6. '<|end|>' → logprob: -15.625141143798828
    7. '‌,' → logprob: -15.750141143798828
    8. ',uint' → logprob: -16.750141143798828
    9. ' ' → logprob: -16.750141143798828
    10. ',
' → logprob: -16.875141143798828

Token 75: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.5759682059288025
    2. ' int' → logprob: -0.8259682059288025
    3. ' ' → logprob: -11.325967788696289
    4. '[int' → logprob: -12.325967788696289
    5. '	int' → logprob: -13.075967788696289
    6. ']int' → logprob: -13.200967788696289
    7. '<int' → logprob: -13.450967788696289
    8. 'Optional' → logprob: -13.575967788696289
    9. ' Optional' → logprob: -13.950967788696289
    10. '(int' → logprob: -14.075967788696289

Token 76: ']:
' (ID: 22152)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.004772938322275877
    2. ':' → logprob: -5.379773139953613
    3. ']:' → logprob: -9.629773139953613
    4. '>:' → logprob: -10.504773139953613
    5. ')' → logprob: -11.004773139953613
    6. '):
' → logprob: -11.254773139953613
    7. '   ' → logprob: -11.379773139953613
    8. '}:' → logprob: -11.504773139953613
    9. '       ' → logprob: -13.504773139953613
    10. ' ):' → logprob: -13.504773139953613

Token 77: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007348202052526176
    2. '        ' → logprob: -8.25073528289795
    3. '   ' → logprob: -9.25073528289795
    4. '      ' → logprob: -9.37573528289795
    5. '        
' → logprob: -9.50073528289795
    6. '    ' → logprob: -9.75073528289795
    7. ' ' → logprob: -10.50073528289795
    8. 'return' → logprob: -10.62573528289795
    9. '     ' → logprob: -10.87573528289795
    10. ' return' → logprob: -11.12573528289795

Token 78: ' line' (ID: 2543)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -1.6765294075012207
    2. 'n' → logprob: -1.9265294075012207
    3. ' line' → logprob: -1.9265294075012207
    4. ' return' → logprob: -2.0515294075012207
    5. 'line' (adapté à ' line') → logprob: -2.1765294075012207
    6. 'return' → logprob: -2.3015294075012207
    7. '       ' → logprob: -2.5515294075012207
    8. 'x' → logprob: -4.301529407501221
    9. ' x' → logprob: -4.551529407501221
    10. 'r' → logprob: -4.676529407501221

Token 79: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1799435019493103
    2. '=' → logprob: -1.804943561553955
    3. 's' → logprob: -8.929943084716797
    4. '()' → logprob: -10.554943084716797
    5. '.' → logprob: -10.804943084716797
    6. '_' → logprob: -11.929943084716797
    7. '.=' → logprob: -12.179943084716797
    8. '=line' → logprob: -13.304943084716797
    9. ' ' → logprob: -13.679943084716797
    10. ' =
' → logprob: -14.179943084716797

Token 80: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.0014276175061240792
    2. 'sys' → logprob: -6.62642765045166
    3. ' input' → logprob: -9.25142765045166
    4. 'input' → logprob: -13.25142765045166
    5. '	sys' → logprob: -13.25142765045166
    6. '=sys' → logprob: -13.50142765045166
    7. ' ' → logprob: -14.25142765045166
    8. '(sys' → logprob: -16.251426696777344
    9. ' self' → logprob: -17.251426696777344
    10. '.sys' → logprob: -17.251426696777344

Token 81: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.014224153012037277
    2. '.' → logprob: -4.264224052429199
    3. '.std' → logprob: -10.7642240524292
    4. '.stdout' → logprob: -11.0142240524292
    5. '.argv' → logprob: -11.2642240524292
    6. '.readline' → logprob: -12.0142240524292
    7. '.st' → logprob: -13.7642240524292
    8. ' .' → logprob: -13.7642240524292
    9. '.stderr' → logprob: -14.1392240524292
    10. '.standard' → logprob: -14.6392240524292

Token 82: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.0001992490579141304
    2. '.' → logprob: -8.625199317932129
    3. '.read' → logprob: -10.875199317932129
    4. '.readlines' → logprob: -14.875199317932129
    5. '.stdin' → logprob: -15.500199317932129
    6. ' readline' → logprob: -15.500199317932129
    7. 'read' → logprob: -17.750198364257812
    8. '().' → logprob: -18.750198364257812
    9. '_read' → logprob: -18.875198364257812
    10. '.Read' → logprob: -18.875198364257812

Token 83: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.6932861804962158
    2. '().' → logprob: -0.6932861804962158
    3. '(' → logprob: -8.943285942077637
    4. '.strip' → logprob: -13.818285942077637
    5. '()

' → logprob: -13.818285942077637
    6. '())' → logprob: -13.943285942077637
    7. ' ()' → logprob: -13.943285942077637
    8. '()
' → logprob: -14.068285942077637
    9. '.' → logprob: -14.193285942077637
    10. ' ().' → logprob: -14.568285942077637

Token 84: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.0011741555063053966
    2. 'rstrip' → logprob: -6.751173973083496
    3. ' strip' → logprob: -12.501173973083496
    4. 'trip' → logprob: -16.376174926757812
    5. 'str' → logprob: -16.751174926757812
    6. '_strip' → logprob: -16.876174926757812
    7. 'r' → logprob: -17.501174926757812
    8. '(strip' → logprob: -17.501174926757812
    9. 'Strip' → logprob: -18.626174926757812
    10. 'split' → logprob: -19.251174926757812

Token 85: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0009307525469921529
    2. '(' → logprob: -7.0009307861328125
    3. '().' → logprob: -12.125930786132812
    4. '()`' → logprob: -12.750930786132812
    5. '()
' → logprob: -13.375930786132812
    6. '('' → logprob: -13.375930786132812
    7. '()"' → logprob: -13.750930786132812
    8. '())' → logprob: -13.750930786132812
    9. ' ()' → logprob: -14.125930786132812
    10. '()\' → logprob: -14.625930786132812

Token 86: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.34927284717559814
    2. ' ' → logprob: -1.5992728471755981
    3. '.split' → logprob: -3.4742727279663086
    4. '<|end|>' → logprob: -4.349272727966309
    5. ')' → logprob: -4.474272727966309
    6. ',' → logprob: -4.849272727966309
    7. '()' → logprob: -4.849272727966309
    8. '        ' → logprob: -5.224272727966309
    9. 'split' → logprob: -5.724272727966309
    10. ' ,' → logprob: -5.974272727966309

Token 87: ' S' (ID: 336)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.18701612949371338
    2. 'return' → logprob: -2.062016010284424
    3. 'parts' → logprob: -4.062016010284424
    4. 'if' → logprob: -4.812016010284424
    5. 'x' → logprob: -4.812016010284424
    6. 'n' → logprob: -5.312016010284424
    7. 'numbers' → logprob: -6.187016010284424
    8. '       ' → logprob: -6.687016010284424
    9. ' parts' → logprob: -8.312016487121582
    10. ' return' → logprob: -8.312016487121582

Token 88: '_str' (ID: 6182)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.13805091381073
    2. 'plit' → logprob: -1.51305091381073
    3. ',' → logprob: -1.76305091381073
    4. 'pl' → logprob: -1.88805091381073
    5. 'plits' → logprob: -2.7630510330200195
    6. '=' → logprob: -3.2630510330200195
    7. 'pli' → logprob: -4.0130510330200195
    8. '.' → logprob: -5.3880510330200195
    9. 'plt' → logprob: -5.5130510330200195
    10. '.split' → logprob: -6.5130510330200195

Token 89: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2836933732032776
    2. '=' → logprob: -2.033693313598633
    3. ',' → logprob: -2.283693313598633
    4. '.' → logprob: -4.908693313598633
    5. '.split' → logprob: -5.908693313598633
    6. ' ,' → logprob: -6.158693313598633
    7. 's' → logprob: -7.283693313598633
    8. ' ' → logprob: -7.533693313598633
    9. ')' → logprob: -8.533693313598633
    10. ' .' → logprob: -8.783693313598633

Token 90: ' N' (ID: 478)
  Prédit: ' T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' T' → logprob: -0.2245989441871643
    2. 'T' → logprob: -2.0995988845825195
    3. ' ' → logprob: -2.9745988845825195
    4. 'space' → logprob: -5.4745988845825195
    5. ' M' → logprob: -5.9745988845825195
    6. ' H' → logprob: -6.0995988845825195
    7. ' space' → logprob: -6.5995988845825195
    8. ' D' → logprob: -6.5995988845825195
    9. '"' → logprob: -6.7245988845825195
    10. ' E' → logprob: -6.8495988845825195

Token 91: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -0.2541828453540802
    2. ',' → logprob: -1.5041828155517578
    3. '_' → logprob: -6.629182815551758
    4. ',_' → logprob: -8.379182815551758
    5. 'str' → logprob: -8.629182815551758
    6. ' ,' → logprob: -9.004182815551758
    7. '_s' → logprob: -9.504182815551758
    8. '_,' → logprob: -10.129182815551758
    9. ',str' → logprob: -10.129182815551758
    10. '<|end|>' → logprob: -10.629182815551758

Token 92: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7188313603401184
    2. ' =' → logprob: -0.7188313603401184
    3. '=' → logprob: -3.7188313007354736
    4. ' ,' → logprob: -6.843831539154053
    5. '<|end|>' → logprob: -11.593831062316895
    6. ')' → logprob: -12.468831062316895
    7. ' ' → logprob: -12.593831062316895
    8. 's' → logprob: -13.093831062316895
    9. ' =)' → logprob: -13.593831062316895
    10. ' =
' → logprob: -13.843831062316895

Token 93: ' K' (ID: 658)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2569645047187805
    2. ' M' → logprob: -2.2569644451141357
    3. ' K' → logprob: -3.1319644451141357
    4. ' D' → logprob: -3.5069644451141357
    5. ' T' → logprob: -3.8819644451141357
    6. ' A' → logprob: -5.756964683532715
    7. 'M' → logprob: -6.006964683532715
    8. 'D' → logprob: -6.006964683532715
    9. ' B' → logprob: -6.131964683532715
    10. ' L' → logprob: -6.131964683532715

Token 94: '_str' (ID: 6182)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.005294238682836294
    2. '=' → logprob: -5.255294322967529
    3. '_str' → logprob: -10.630293846130371
    4. ' ' → logprob: -10.755293846130371
    5. ',' → logprob: -11.755293846130371
    6. '_' → logprob: -13.630293846130371
    7. '  ' → logprob: -14.005293846130371
    8. 's' → logprob: -14.255293846130371
    9. ')' → logprob: -14.255293846130371
    10. ' ,' → logprob: -14.255293846130371

Token 95: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0017027945723384619
    2. '=' → logprob: -6.376702785491943
    3. ' ' → logprob: -15.501703262329102
    4. ' =
' → logprob: -15.626703262329102
    5. ' =)' → logprob: -16.1267032623291
    6. ',' → logprob: -16.2517032623291
    7. ')' → logprob: -17.1267032623291
    8. ' ,' → logprob: -17.2517032623291
    9. ' =
' → logprob: -18.1267032623291
    10. 's' → logprob: -18.2517032623291

Token 96: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.0009115827269852161
    2. 'line' → logprob: -7.000911712646484
    3. '	line' → logprob: -17.000911712646484
    4. ' ' → logprob: -17.750911712646484
    5. '=line' → logprob: -17.875911712646484
    6. '(line' → logprob: -19.375911712646484
    7. '[line' → logprob: -19.625911712646484
    8. ' map' → logprob: -20.500911712646484
    9. '#line' → logprob: -20.750911712646484
    10. '_line' → logprob: -21.500911712646484

Token 97: '.split' (ID: 10347)
  Prédit: '.split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.split' → logprob: -0.20160327851772308
    2. '.' → logprob: -1.7016032934188843
    3. ' .' → logprob: -8.701602935791016
    4. '.strip' → logprob: -11.201602935791016
    5. '.rstrip' → logprob: -12.826602935791016
    6. '.s' → logprob: -12.951602935791016
    7. 'split' → logprob: -13.076602935791016
    8. '.Split' → logprob: -14.326602935791016
    9. ' ' → logprob: -14.826602935791016
    10. '.readline' → logprob: -15.326602935791016

Token 98: '()
' (ID: 1234)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '('' → logprob: -0.5938851237297058
    2. '()' → logprob: -0.8438851237297058
    3. '(' → logprob: -4.2188849449157715
    4. '("("' → logprob: -5.9688849449157715
    5. '("' → logprob: -7.8438849449157715
    6. ''' → logprob: -9.34388542175293
    7. '(',' → logprob: -11.59388542175293
    8. '('.')' → logprob: -11.71888542175293
    9. '(None' → logprob: -12.84388542175293
    10. '"' → logprob: -13.21888542175293

Token 99: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05975755304098129
    2. '        
' → logprob: -3.9347574710845947
    3. ' ' → logprob: -4.309757709503174
    4. ')' → logprob: -4.934757709503174
    5. '<|end|>' → logprob: -5.309757709503174
    6. '
' → logprob: -5.684757709503174
    7. '   ' → logprob: -6.059757709503174
    8. '        ' → logprob: -6.559757709503174
    9. '    ' → logprob: -6.934757709503174
    10. ',' → logprob: -7.059757709503174

Token 100: ' return' (ID: 622)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.8916277289390564
    2. '       ' → logprob: -0.8916277289390564
    3. ' S' → logprob: -1.8916277885437012
    4. 'return' (adapté à ' return') → logprob: -4.016627788543701
    5. ' return' → logprob: -5.016627788543701
    6. ' ' → logprob: -6.266627788543701
    7. 's' → logprob: -6.766627788543701
    8. '        ' → logprob: -7.516627788543701
    9. '   ' → logprob: -8.891627311706543
    10. ' s' → logprob: -8.891627311706543

Token 101: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.2531859874725342
    2. 'int' → logprob: -1.5031859874725342
    3. '(int' → logprob: -6.753186225891113
    4. ' (' → logprob: -9.378186225891113
    5. ' ' → logprob: -13.378186225891113
    6. '(' → logprob: -14.003186225891113
    7. '  ' → logprob: -14.253186225891113
    8. '<int' → logprob: -15.378186225891113
    9. ' in' → logprob: -15.503186225891113
    10. '   ' → logprob: -15.503186225891113

Token 102: '(S' (ID: 6181)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.47409185767173767
    2. '(S' → logprob: -0.9740918874740601
    3. '(
' → logprob: -12.099091529846191
    4. '('' → logprob: -12.974091529846191
    5. 'S' → logprob: -12.974091529846191
    6. '(

' → logprob: -13.099091529846191
    7. '(s' → logprob: -14.099091529846191
    8. '(K' → logprob: -14.474091529846191
    9. ' (' → logprob: -14.849091529846191
    10. '("("' → logprob: -15.349091529846191

Token 103: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -0.0001544321421533823
    2. ')' → logprob: -9.375154495239258
    3. '_' → logprob: -10.625154495239258
    4. '),' → logprob: -10.750154495239258
    5. '_S' → logprob: -11.750154495239258
    6. ' ' → logprob: -12.875154495239258
    7. ',' → logprob: -12.875154495239258
    8. '_),' → logprob: -13.000154495239258
    9. '```' → logprob: -13.750154495239258
    10. ' ),' → logprob: -13.875154495239258

Token 104: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3682851791381836
    2. '),' → logprob: -1.4932851791381836
    3. ')' → logprob: -2.4932851791381836
    4. ' ,' → logprob: -7.368285179138184
    5. ' ' → logprob: -9.743285179138184
    6. ' ),' → logprob: -9.743285179138184
    7. ',)' → logprob: -11.618285179138184
    8. '`,' → logprob: -11.868285179138184
    9. ' )' → logprob: -11.993285179138184
    10. '},' → logprob: -12.368285179138184

Token 105: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.10023459792137146
    2. 'int' → logprob: -2.3502345085144043
    3. ' ' → logprob: -10.600234985351562
    4. '[int' → logprob: -13.850234985351562
    5. ' ' → logprob: -14.475234985351562
    6. '<int' → logprob: -14.725234985351562
    7. '=int' → logprob: -14.725234985351562
    8. '(int' → logprob: -15.100234985351562
    9. ',int' → logprob: -15.850234985351562
    10. '	int' → logprob: -16.225234985351562

Token 106: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.033676933497190475
    2. '(' → logprob: -3.408676862716675
    3. '(K' → logprob: -11.158677101135254
    4. '(S' → logprob: -12.033677101135254
    5. '('' → logprob: -12.408677101135254
    6. ' (' → logprob: -14.033677101135254
    7. '()' → logprob: -14.283677101135254
    8. '(`' → logprob: -14.283677101135254
    9. '(
' → logprob: -14.408677101135254
    10. ' ' → logprob: -14.408677101135254

Token 107: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -6.778209353797138e-05
    2. '),' → logprob: -9.750067710876465
    3. ',' → logprob: -12.375067710876465
    4. '_' → logprob: -12.750067710876465
    5. ')' → logprob: -13.625067710876465
    6. '_),' → logprob: -14.500067710876465
    7. ')_' → logprob: -15.250067710876465
    8. '```' → logprob: -16.50006866455078
    9. '_STR' → logprob: -16.87506866455078
    10. ' _' → logprob: -17.00006866455078

Token 108: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.038505010306835175
    2. ',' → logprob: -3.2885050773620605
    3. ')' → logprob: -8.288504600524902
    4. ' ,' → logprob: -9.163504600524902
    5. ' ),' → logprob: -9.913504600524902
    6. '`,' → logprob: -11.288504600524902
    7. ' ' → logprob: -11.413504600524902
    8. '   ' → logprob: -11.913504600524902
    9. '```' → logprob: -12.288504600524902
    10. '},' → logprob: -12.288504600524902

Token 109: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.5759397745132446
    2. 'int' → logprob: -0.8259397745132446
    3. ' ' → logprob: -15.950940132141113
    4. '(int' → logprob: -16.450939178466797
    5. '	int' → logprob: -16.575939178466797
    6. '<int' → logprob: -16.950939178466797
    7. '[int' → logprob: -17.200939178466797
    8. '=int' → logprob: -18.325939178466797
    9. ':int' → logprob: -19.200939178466797
    10. '   ' → logprob: -19.825939178466797

Token 110: '(K' (ID: 28797)
  Prédit: '(K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(K' → logprob: -0.06280095875263214
    2. '(' → logprob: -2.812800884246826
    3. '('' → logprob: -7.437800884246826
    4. ')' → logprob: -10.062801361083984
    5. '(S' → logprob: -10.312801361083984
    6. '(N' → logprob: -10.312801361083984
    7. '("("' → logprob: -10.562801361083984
    8. '"' → logprob: -10.937801361083984
    9. '(k' → logprob: -11.187801361083984
    10. ' (' → logprob: -11.687801361083984

Token 111: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -5.68153518543113e-05
    2. ')' → logprob: -9.875057220458984
    3. 'str' → logprob: -12.750057220458984
    4. '_)' → logprob: -13.750057220458984
    5. ')_' → logprob: -14.125057220458984
    6. '_' → logprob: -15.500057220458984
    7. '   ' → logprob: -16.500057220458984
    8. '```' → logprob: -16.875057220458984
    9. ''_' → logprob: -17.250057220458984
    10. 'Str' → logprob: -17.250057220458984

Token 112: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2233183042553719e-05
    2. ')
' → logprob: -11.375012397766113
    3. ' )' → logprob: -14.750012397766113
    4. ')

' → logprob: -16.000011444091797
    5. '<|end|>' → logprob: -16.000011444091797
    6. '}' → logprob: -17.250011444091797
    7. '   ' → logprob: -17.375011444091797
    8. ')return' → logprob: -17.500011444091797
    9. '))' → logprob: -17.875011444091797
    10. ')`' → logprob: -18.250011444091797

Token 113: 'class' (ID: 1444)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2682816982269287
    2. '

' → logprob: -1.5182816982269287
    3. 'class' → logprob: -4.143281936645508
    4. '
' → logprob: -8.268281936645508
    5. '```' → logprob: -9.893281936645508
    6. '\n' → logprob: -11.768281936645508
    7. '' → logprob: -11.768281936645508
    8. '


' → logprob: -12.018281936645508
    9. 'c' → logprob: -12.643281936645508
    10. ' class' → logprob: -12.768281936645508

Token 114: ' Probability' (ID: 194171)
  Prédit: ' Input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Input' → logprob: -2.1242835521698
    2. ' Fraction' → logprob: -2.1242835521698
    3. ' Solution' → logprob: -2.9992835521698
    4. ' Dummy' → logprob: -2.9992835521698
    5. ' Test' → logprob: -3.1242835521698
    6. ' Br' → logprob: -3.3742835521698
    7. ' Solver' → logprob: -3.3742835521698
    8. ' Problem' → logprob: -3.6242835521698
    9. ' Na' → logprob: -3.6242835521698
    10. ' Math' → logprob: -3.6242835521698

Token 115: 'Distribution' (ID: 53154)
  Prédit: 'Calculator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Calculator' → logprob: -0.0011701062321662903
    2. 'Estimator' → logprob: -7.5011701583862305
    3. 'Computer' → logprob: -8.37617015838623
    4. 'Solver' → logprob: -8.50117015838623
    5. 'Evaluator' → logprob: -10.12617015838623
    6. 'Generator' → logprob: -10.25117015838623
    7. 'Model' → logprob: -10.87617015838623
    8. 'Analyzer' → logprob: -11.12617015838623
    9. 'Distributor' → logprob: -11.12617015838623
    10. 'Distribution' → logprob: -11.37617015838623

Token 116: '(' (ID: 7)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5763295888900757
    2. '(' → logprob: -0.8263295888900757
    3. '(Abstract' → logprob: -8.201329231262207
    4. '():' → logprob: -10.076329231262207
    5. ':
' → logprob: -10.326329231262207
    6. ' :' → logprob: -10.451329231262207
    7. '(object' → logprob: -12.576329231262207
    8. ' (' → logprob: -13.576329231262207
    9. '(I' → logprob: -13.951329231262207
    10. '(AST' → logprob: -14.076329231262207

Token 117: 'ABC' (ID: 44197)
  Prédit: 'ABC'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ABC' → logprob: -6.515961285913363e-05
    2. '):' → logprob: -10.125064849853516
    3. ' ABC' → logprob: -11.000064849853516
    4. ')' → logprob: -12.250064849853516
    5. '):
' → logprob: -13.750064849853516
    6. '   ' → logprob: -14.500064849853516
    7. '(' → logprob: -14.750064849853516
    8. 'object' → logprob: -15.000064849853516
    9. 'abc' → logprob: -15.125064849853516
    10. 'Abstract' → logprob: -15.250064849853516

Token 118: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.001612696796655655
    2. ':' → logprob: -6.626612663269043
    3. ')' → logprob: -8.626612663269043
    4. '):
' → logprob: -9.501612663269043
    5. ' ):' → logprob: -10.501612663269043
    6. '):
' → logprob: -13.501612663269043
    7. ',' → logprob: -13.626612663269043
    8. ':)' → logprob: -14.501612663269043
    9. '   ' → logprob: -14.626612663269043
    10. '):

' → logprob: -14.876612663269043

Token 119: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4754507839679718
    2. '   ' → logprob: -0.9754507541656494
    3. '<|end|>' → logprob: -7.8504509925842285
    4. ' :' → logprob: -8.10045051574707
    5. ':
' → logprob: -8.47545051574707
    6. '):' → logprob: -8.97545051574707
    7. '(' → logprob: -9.35045051574707
    8. ' def' → logprob: -9.85045051574707
    9. ')' → logprob: -10.22545051574707
    10. '<|end|>' → logprob: -10.35045051574707

Token 120: ' @' (ID: 759)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004184298682957888
    2. ' @' → logprob: -5.879184246063232
    3. ' def' → logprob: -7.004184246063232
    4. '@' (adapté à ' @') → logprob: -8.25418472290039
    5. '    ' → logprob: -9.12918472290039
    6. '    
' → logprob: -10.25418472290039
    7. 'def' → logprob: -10.37918472290039
    8. ' pass' → logprob: -11.50418472290039
    9. ':' → logprob: -11.62918472290039
    10. ' 
' → logprob: -12.50418472290039

Token 121: 'abstract' (ID: 31332)
  Prédit: 'abstract'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abstract' → logprob: -0.000568402698263526
    2. 'property' → logprob: -7.500568389892578
    3. 'staticmethod' → logprob: -11.875568389892578
    4. ' abstract' → logprob: -12.500568389892578
    5. 'abc' → logprob: -13.000568389892578
    6. 'classmethod' → logprob: -13.375568389892578
    7. 'ab' → logprob: -14.625568389892578
    8. 'abs' → logprob: -15.250568389892578
    9. 'l' → logprob: -15.750568389892578
    10. 'dat' → logprob: -17.000568389892578

Token 122: 'method' (ID: 8697)
  Prédit: 'method'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'method' → logprob: -0.01656048372387886
    2. '_method' → logprob: -4.1415605545043945
    3. 'def' → logprob: -8.516560554504395
    4. 'classmethod' → logprob: -8.516560554504395
    5. '.method' → logprob: -9.891560554504395
    6. ' method' → logprob: -11.016560554504395
    7. ' def' → logprob: -11.266560554504395
    8. '(method' → logprob: -11.516560554504395
    9. 'staticmethod' → logprob: -12.016560554504395
    10. '-method' → logprob: -12.016560554504395

Token 123: '
' (ID: 198)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.346507728099823
    2. 'def' → logprob: -1.5965077877044678
    3. '   ' → logprob: -2.4715077877044678
    4. '(' → logprob: -6.346507549285889
    5. '
' → logprob: -6.596507549285889
    6. ' ' → logprob: -7.596507549285889
    7. '    ' → logprob: -7.721507549285889
    8. '  ' → logprob: -7.846507549285889
    9. '    
' → logprob: -8.346508026123047
    10. '<|end|>' → logprob: -8.346508026123047

Token 124: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.030438732355833054
    2. '   ' → logprob: -4.1554388999938965
    3. ' def' → logprob: -4.2804388999938965
    4. '
' → logprob: -8.780438423156738
    5. '(' → logprob: -9.530438423156738
    6. ' ' → logprob: -10.280438423156738
    7. 'classmethod' → logprob: -10.280438423156738
    8. '  ' → logprob: -10.530438423156738
    9. 'method' → logprob: -10.655438423156738
    10. '    
' → logprob: -10.655438423156738

Token 125: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.048528771847486496
    2. 'property' → logprob: -3.2985286712646484
    3. ' def' → logprob: -5.173528671264648
    4. 'classmethod' → logprob: -6.048528671264648
    5. 'staticmethod' → logprob: -6.298528671264648
    6. 'class' → logprob: -8.798528671264648
    7. '   ' → logprob: -9.298528671264648
    8. 'method' → logprob: -9.423528671264648
    9. '
' → logprob: -9.798528671264648
    10. 'l' → logprob: -10.173528671264648

Token 126: ' probability' (ID: 34933)
  Prédit: ' probability'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' probability' → logprob: -0.4537801146507263
    2. ' get' → logprob: -1.578780174255371
    3. ' compute' → logprob: -2.703780174255371
    4. ' calculate' → logprob: -2.953780174255371
    5. 'prob' → logprob: -4.328780174255371
    6. ' prob' → logprob: -5.328780174255371
    7. ' probabilities' → logprob: -5.453780174255371
    8. ' evaluate' → logprob: -5.453780174255371
    9. ' p' → logprob: -5.953780174255371
    10. ' pm' → logprob: -6.078780174255371

Token 127: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.252248615026474
    2. '(' → logprob: -1.5022486448287964
    3. 'self' → logprob: -9.502248764038086
    4. ')' → logprob: -9.627248764038086
    5. ' (' → logprob: -10.002248764038086
    6. '(
' → logprob: -10.502248764038086
    7. 's' → logprob: -10.752248764038086
    8. '   ' → logprob: -10.877248764038086
    9. '_at' → logprob: -10.877248764038086
    10. '_of' → logprob: -11.627248764038086

Token 128: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.599402129650116
    2. '(self' → logprob: -1.3494021892547607
    3. 'self' → logprob: -2.4744021892547607
    4. ')' → logprob: -2.5994021892547607
    5. '   ' → logprob: -5.224401950836182
    6. '):' → logprob: -5.349401950836182
    7. ' ,' → logprob: -5.349401950836182
    8. '<|end|>' → logprob: -5.349401950836182
    9. ')(' → logprob: -5.724401950836182
    10. ',self' → logprob: -6.099401950836182

Token 129: ' value' (ID: 1432)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -1.3599544763565063
    2. ' k' → logprob: -1.7349544763565063
    3. ' self' → logprob: -1.8599544763565063
    4. 'x' → logprob: -2.234954357147217
    5. 'k' → logprob: -2.609954357147217
    6. 'self' → logprob: -2.859954357147217
    7. ' value' → logprob: -3.109954357147217
    8. ' s' → logprob: -3.359954357147217
    9. ' n' → logprob: -4.109954357147217
    10. 'value' → logprob: -4.609954357147217

Token 130: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0008676333236508071
    2. ':int' → logprob: -7.37586784362793
    3. '):' → logprob: -8.87586784362793
    4. ')' → logprob: -9.25086784362793
    5. ' :' → logprob: -13.75086784362793
    6. ':)' → logprob: -13.75086784362793
    7. ':number' → logprob: -14.12586784362793
    8. ',' → logprob: -14.75086784362793
    9. ':str' → logprob: -15.25086784362793
    10. ' )' → logprob: -15.50086784362793

Token 131: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.5252112150192261
    2. ' int' → logprob: -0.9002112150192261
    3. ')' → logprob: -6.275211334228516
    4. ' float' → logprob: -9.775211334228516
    5. 'float' → logprob: -9.900211334228516
    6. ' )' → logprob: -10.025211334228516
    7. ':int' → logprob: -10.525211334228516
    8. ' ' → logprob: -11.900211334228516
    9. '):' → logprob: -12.400211334228516
    10. '[int' → logprob: -12.525211334228516

Token 132: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.8550976164988242e-05
    2. '):' → logprob: -11.125018119812012
    3. ' )' → logprob: -13.000018119812012
    4. ')->' → logprob: -14.125018119812012
    5. ':' → logprob: -14.500018119812012
    6. ',' → logprob: -16.125019073486328
    7. '   ' → logprob: -16.500019073486328
    8. ' ' → logprob: -17.375019073486328
    9. ',)' → logprob: -18.250019073486328
    10. '`)' → logprob: -18.250019073486328

Token 133: ' ->' (ID: 2747)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.39892417192459106
    2. '->' → logprob: -1.3989241123199463
    3. ' ->' → logprob: -2.5239241123199463
    4. ':' → logprob: -6.648924350738525
    5. ')->' → logprob: -7.773924350738525
    6. ' )' → logprob: -9.523923873901367
    7. '   ' → logprob: -9.898923873901367
    8. ' ' → logprob: -10.023923873901367
    9. '>' → logprob: -10.148923873901367
    10. '  ' → logprob: -11.898923873901367

Token 134: ' float' (ID: 4428)
  Prédit: ' float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' float' → logprob: -0.12696485221385956
    2. 'float' → logprob: -2.126964807510376
    3. ' ' → logprob: -11.251964569091797
    4. ' Optional' → logprob: -11.376964569091797
    5. 'flo' → logprob: -12.376964569091797
    6. 'Optional' → logprob: -13.001964569091797
    7. ')' → logprob: -13.376964569091797
    8. ' int' → logprob: -14.126964569091797
    9. 'int' → logprob: -14.251964569091797
    10. '	float' → logprob: -14.376964569091797

Token 135: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.011315534822642803
    2. '<|end|>' → logprob: -5.38631534576416
    3. '   ' → logprob: -5.76131534576416
    4. '):' → logprob: -6.76131534576416
    5. ')' → logprob: -6.88631534576416
    6. ':
' → logprob: -7.51131534576416
    7. ':return' → logprob: -8.01131534576416
    8. ' :' → logprob: -8.63631534576416
    9. ' ' → logprob: -9.26131534576416
    10. '<|end|>' → logprob: -10.01131534576416

Token 136: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5670502781867981
    2. '   ' → logprob: -1.4420502185821533
    3. '<|end|>' → logprob: -1.8170502185821533
    4. ' ' → logprob: -3.9420502185821533
    5. ':' → logprob: -4.817050457000732
    6. ' :' → logprob: -6.192050457000732
    7. '
' → logprob: -6.942050457000732
    8. ')' → logprob: -7.067050457000732
    9. '    ' → logprob: -7.192050457000732
    10. '  ' → logprob: -7.817050457000732

Token 137: ' pass' (ID: 1853)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05945197120308876
    2. ' pass' → logprob: -3.1844520568847656
    3. 'pass' (adapté à ' pass') → logprob: -4.184452056884766
    4. '   ' → logprob: -6.934452056884766
    5. '...' → logprob: -10.309452056884766
    6. '<|end|>' → logprob: -10.809452056884766
    7. '      ' → logprob: -11.309452056884766
    8. '	pass' → logprob: -11.434452056884766
    9. ' ' → logprob: -11.684452056884766
    10. '  ' → logprob: -11.934452056884766

Token 138: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0201907679438591
    2. 'class' → logprob: -4.395190715789795
    3. '

' → logprob: -4.895190715789795
    4. '<|end|>' → logprob: -9.770191192626953
    5. '   ' → logprob: -10.020191192626953
    6. ' 
' → logprob: -10.895191192626953
    7. '    
' → logprob: -11.395191192626953
    8. '
' → logprob: -11.395191192626953
    9. ' class' → logprob: -11.770191192626953
    10. '' → logprob: -12.645191192626953

Token 139: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.10151758790016174
    2. 'class' → logprob: -2.851517677307129
    3. '   ' → logprob: -4.226517677307129
    4. '

' → logprob: -4.476517677307129
    5. ' 
' → logprob: -5.476517677307129
    6. '    
' → logprob: -5.976517677307129
    7. '<|end|>' → logprob: -5.976517677307129
    8. '\n' → logprob: -6.226517677307129
    9. '  
' → logprob: -7.601517677307129
    10. ' class' → logprob: -7.976517677307129

Token 140: ' @' (ID: 759)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.13550789654254913
    2. '<|end|>' → logprob: -2.135507822036743
    3. '

' → logprob: -5.885508060455322
    4. ' 
' → logprob: -6.510508060455322
    5. '<|end|>' → logprob: -6.635508060455322
    6. '   ' → logprob: -6.760508060455322
    7. '    
' → logprob: -7.010508060455322
    8. 'class' → logprob: -8.010507583618164
    9. '  
' → logprob: -8.760507583618164
    10. '\n' → logprob: -9.260507583618164

Token 141: 'abstract' (ID: 31332)
  Prédit: 'abstract'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abstract' → logprob: -0.018184008076786995
    2. 'property' → logprob: -4.393184185028076
    3. 'staticmethod' → logprob: -5.268184185028076
    4. 'classmethod' → logprob: -8.643183708190918
    5. 'l' → logprob: -8.768183708190918
    6. 'abc' → logprob: -9.018183708190918
    7. ' abstract' → logprob: -10.393183708190918
    8. 'cache' → logprob: -11.143183708190918
    9. 'cached' → logprob: -12.768183708190918
    10. 'dat' → logprob: -14.518183708190918

Token 142: 'method' (ID: 8697)
  Prédit: 'method'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'method' → logprob: -0.03974686563014984
    2. 'def' → logprob: -3.5397467613220215
    3. '_method' → logprob: -4.6647467613220215
    4. ' def' → logprob: -8.16474723815918
    5. 'classmethod' → logprob: -9.16474723815918
    6. 'staticmethod' → logprob: -10.03974723815918
    7. '<|end|>' → logprob: -10.91474723815918
    8. ' method' → logprob: -10.91474723815918
    9. '(method' → logprob: -11.78974723815918
    10. '   ' → logprob: -12.03974723815918

Token 143: '
' (ID: 198)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.21344678103923798
    2. 'def' → logprob: -2.088446855545044
    3. '
' → logprob: -2.713446855545044
    4. '   ' → logprob: -6.463446617126465
    5. '
' → logprob: -8.588446617126465
    6. '	def' → logprob: -9.213446617126465
    7. ' ' → logprob: -10.213446617126465
    8. '<|end|>' → logprob: -10.338446617126465
    9. '    
' → logprob: -10.838446617126465
    10. '(' → logprob: -10.963446617126465

Token 144: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5858284831047058
    2. '
' → logprob: -1.5858285427093506
    3. ' def' → logprob: -1.9608285427093506
    4. '   ' → logprob: -2.3358285427093506
    5. '
' → logprob: -7.8358283042907715
    6. '	def' → logprob: -7.9608283042907715
    7. ' ' → logprob: -9.21082878112793
    8. '(' → logprob: -9.46082878112793
    9. '  ' → logprob: -9.83582878112793
    10. '    ' → logprob: -10.71082878112793

Token 145: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.027190979570150375
    2. ' def' → logprob: -3.652190923690796
    3. 'float' → logprob: -7.527191162109375
    4. 'int' → logprob: -8.152191162109375
    5. ' int' → logprob: -11.652191162109375
    6. '```' → logprob: -12.027191162109375
    7. 'property' → logprob: -12.152191162109375
    8. '
' → logprob: -12.152191162109375
    9. '   ' → logprob: -12.277191162109375
    10. 'Optional' → logprob: -12.402191162109375

Token 146: ' support' (ID: 2498)
  Prédit: ' support'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' support' → logprob: -0.2823478579521179
    2. ' expected' → logprob: -2.6573479175567627
    3. ' max' → logprob: -2.9073479175567627
    4. 'support' → logprob: -3.2823479175567627
    5. ' sample' → logprob: -3.5323479175567627
    6. ' cumulative' → logprob: -4.032347679138184
    7. ' mean' → logprob: -4.532347679138184
    8. 'expected' → logprob: -5.157347679138184
    9. 'max' → logprob: -5.282347679138184
    10. ' c' → logprob: -6.032347679138184

Token 147: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.018200282007455826
    2. '(' → logprob: -4.018200397491455
    3. 'self' → logprob: -10.643199920654297
    4. ')' → logprob: -12.018199920654297
    5. ' (' → logprob: -12.393199920654297
    6. '_size' → logprob: -12.393199920654297
    7. '(
' → logprob: -12.643199920654297
    8. '_' → logprob: -13.393199920654297
    9. '   ' → logprob: -13.393199920654297
    10. '_range' → logprob: -13.518199920654297

Token 148: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3330644369125366
    2. 'self' → logprob: -1.5830644369125366
    3. '(self' → logprob: -2.583064556121826
    4. '   ' → logprob: -6.458064556121826
    5. '       ' → logprob: -8.083064079284668
    6. ',' → logprob: -8.458064079284668
    7. ' self' → logprob: -8.708064079284668
    8. '):' → logprob: -10.458064079284668
    9. '```' → logprob: -10.458064079284668
    10. ' ' → logprob: -10.708064079284668

Token 149: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.17155160009860992
    2. '(' → logprob: -2.0465517044067383
    3. '->' → logprob: -4.171551704406738
    4. ')' → logprob: -4.796551704406738
    5. ' ->' → logprob: -5.796551704406738
    6. 'self' → logprob: -7.546551704406738
    7. ' (' → logprob: -7.671551704406738
    8. '   ' → logprob: -8.421551704406738
    9. ':' → logprob: -8.921551704406738
    10. '```' → logprob: -8.921551704406738

Token 150: ' Tuple' (ID: 50841)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.33326879143714905
    2. ' range' → logprob: -2.208268880844116
    3. 'set' → logprob: -2.708268880844116
    4. 'int' → logprob: -2.833268880844116
    5. 'Tuple' → logprob: -3.333268880844116
    6. ' Tuple' → logprob: -4.958268642425537
    7. ' set' → logprob: -6.333268642425537
    8. 'list' → logprob: -6.833268642425537
    9. ' int' → logprob: -7.458268642425537
    10. 'Range' → logprob: -7.833268642425537

Token 151: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -4.203409844194539e-05
    2. '[' → logprob: -10.125041961669922
    3. '<int' → logprob: -13.875041961669922
    4. '[Int' → logprob: -14.625041961669922
    5. 'int' → logprob: -15.375041961669922
    6. '[in' → logprob: -15.500041961669922
    7. '[min' → logprob: -17.375041961669922
    8. '[
' → logprob: -17.500041961669922
    9. '[i' → logprob: -17.625041961669922
    10. ']int' → logprob: -18.500041961669922

Token 152: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.014215687289834023
    2. ',int' → logprob: -4.264215469360352
    3. ' ,' → logprob: -10.014215469360352
    4. 'int' → logprob: -12.514215469360352
    5. '[int' → logprob: -13.014215469360352
    6. ']int' → logprob: -14.639215469360352
    7. ',Integer' → logprob: -14.764215469360352
    8. ' ' → logprob: -15.014215469360352
    9. ':int' → logprob: -16.38921546936035
    10. ',float' → logprob: -16.51421546936035

Token 153: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0019412499386817217
    2. ' int' → logprob: -6.251941204071045
    3. '...' → logprob: -11.626941680908203
    4. '[int' → logprob: -13.501941680908203
    5. ']int' → logprob: -14.376941680908203
    6. 'Optional' → logprob: -14.501941680908203
    7. ' ...' → logprob: -15.126941680908203
    8. ',int' → logprob: -15.751941680908203
    9. '(int' → logprob: -15.876941680908203
    10. '	int' → logprob: -15.876941680908203

Token 154: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.004371967166662216
    2. '):' → logprob: -5.7543721199035645
    3. ']' → logprob: -7.0043721199035645
    4. ']:
' → logprob: -8.379371643066406
    5. ':' → logprob: -10.629371643066406
    6. ']:
' → logprob: -11.629371643066406
    7. '>:' → logprob: -11.879371643066406
    8. '']:' → logprob: -12.254371643066406
    9. '"]:' → logprob: -12.254371643066406
    10. '}:' → logprob: -13.629371643066406

Token 155: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5270549654960632
    2. '<|end|>' → logprob: -1.152055025100708
    3. '   ' → logprob: -2.652055025100708
    4. '       ' → logprob: -4.527054786682129
    5. ' :' → logprob: -5.527054786682129
    6. ':return' → logprob: -5.777054786682129
    7. ':
' → logprob: -6.402054786682129
    8. '
' → logprob: -6.527054786682129
    9. '```' → logprob: -7.777054786682129
    10. '\n' → logprob: -8.027054786682129

Token 156: ' pass' (ID: 1853)
  Prédit: ' pass'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pass' → logprob: -0.12620587646961212
    2. '       ' → logprob: -2.5012059211730957
    3. 'pass' (adapté à ' pass') → logprob: -3.5012059211730957
    4. '<|end|>' → logprob: -5.501205921173096
    5. '   ' → logprob: -6.501205921173096
    6. '	pass' → logprob: -8.126205444335938
    7. '...' → logprob: -8.251205444335938
    8. ' ' → logprob: -9.376205444335938
    9. '    ' → logprob: -10.001205444335938
    10. '  ' → logprob: -10.251205444335938

Token 157: '

' (ID: 279)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.3829461336135864
    2. '
' → logprob: -1.2579461336135864
    3. '<|end|>' → logprob: -3.632946014404297
    4. '

' → logprob: -5.632946014404297
    5. ' 
' → logprob: -6.382946014404297
    6. ' class' → logprob: -6.882946014404297
    7. '    
' → logprob: -8.632946014404297
    8. '  
' → logprob: -8.632946014404297
    9. '<|end|>' → logprob: -8.882946014404297
    10. ':' → logprob: -9.132946014404297

Token 158: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.02078232727944851
    2. '
' → logprob: -3.895782232284546
    3. '

' → logprob: -8.645782470703125
    4. ' class' → logprob: -10.770782470703125
    5. ' 
' → logprob: -11.020782470703125
    6. '  
' → logprob: -11.520782470703125
    7. '
' → logprob: -12.270782470703125
    8. '<|end|>' → logprob: -12.520782470703125
    9. '<class' → logprob: -13.020782470703125
    10. '```' → logprob: -14.145782470703125

Token 159: ' Uniform' (ID: 83603)
  Prédit: ' Uniform'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Uniform' → logprob: -0.1589576005935669
    2. 'Uniform' → logprob: -2.0339574813842773
    3. 'Discrete' → logprob: -5.658957481384277
    4. ' Bin' → logprob: -5.908957481384277
    5. ' Constant' → logprob: -6.283957481384277
    6. ' Bern' → logprob: -6.408957481384277
    7. ' Dis' → logprob: -6.658957481384277
    8. ' Dice' → logprob: -7.158957481384277
    9. 'Constant' → logprob: -7.158957481384277
    10. ' Fair' → logprob: -7.783957481384277

Token 160: 'Sum' (ID: 17434)
  Prédit: 'Distribution'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Distribution' → logprob: -0.0010499580530449748
    2. 'Probability' → logprob: -6.876049995422363
    3. 'Discrete' → logprob: -11.376049995422363
    4. '(' → logprob: -12.626049995422363
    5. ' Distribution' → logprob: -14.126049995422363
    6. 'Range' → logprob: -14.626049995422363
    7. 'Distrib' → logprob: -15.251049995422363
    8. 'Dist' → logprob: -15.501049995422363
    9. 'Random' → logprob: -15.501049995422363
    10. ' distribution' → logprob: -16.376049041748047

Token 161: 'Distribution' (ID: 53154)
  Prédit: 'Distribution'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Distribution' → logprob: -0.010814822278916836
    2. '(' → logprob: -4.635814666748047
    3. 'Probability' → logprob: -7.135814666748047
    4. 'Sum' → logprob: -8.760814666748047
    5. '(P' → logprob: -10.760814666748047
    6. 'Dis' → logprob: -11.385814666748047
    7. '(N' → logprob: -11.510814666748047
    8. 'Of' → logprob: -11.635814666748047
    9. 'Discrete' → logprob: -11.635814666748047
    10. 'Prob' → logprob: -11.760814666748047

Token 162: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.005976315587759018
    2. ':' → logprob: -5.13097620010376
    3. '(Abstract' → logprob: -12.005976676940918
    4. '():' → logprob: -12.255976676940918
    5. '(S' → logprob: -12.380976676940918
    6. ' :' → logprob: -12.505976676940918
    7. '(:' → logprob: -12.755976676940918
    8. '(I' → logprob: -12.755976676940918
    9. ' (' → logprob: -12.880976676940918
    10. '(U' → logprob: -13.005976676940918

Token 163: 'Probability' (ID: 95558)
  Prédit: 'Probability'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Probability' → logprob: -0.03433554992079735
    2. '(' → logprob: -3.7843356132507324
    3. 'Prob' → logprob: -4.784335613250732
    4. '):' → logprob: -6.659335613250732
    5. ')' → logprob: -7.284335613250732
    6. ' Probability' → logprob: -7.909335613250732
    7. '):
' → logprob: -8.659335136413574
    8. ')(' → logprob: -10.534335136413574
    9. '   ' → logprob: -10.909335136413574
    10. ' ' → logprob: -11.159335136413574

Token 164: 'Distribution' (ID: 53154)
  Prédit: 'Distribution'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Distribution' → logprob: -1.8624639324116288e-06
    2. 'distribution' → logprob: -14.250001907348633
    3. '_distribution' → logprob: -14.625001907348633
    4. 'Distrib' → logprob: -15.375001907348633
    5. ')' → logprob: -15.750001907348633
    6. ' Distribution' → logprob: -16.000001907348633
    7. '(' → logprob: -16.250001907348633
    8. ' distribution' → logprob: -17.000001907348633
    9. 'Distributed' → logprob: -17.000001907348633
    10. 'Dis' → logprob: -17.375001907348633

Token 165: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.008758271113038063
    2. '):
' → logprob: -4.758758068084717
    3. ':' → logprob: -9.383758544921875
    4. '(' → logprob: -10.633758544921875
    5. ')' → logprob: -11.008758544921875
    6. '):

' → logprob: -12.133758544921875
    7. '   ' → logprob: -12.258758544921875
    8. '):
' → logprob: -12.758758544921875
    9. ' ):' → logprob: -12.758758544921875
    10. ',' → logprob: -13.383758544921875

Token 166: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.019375208765268326
    2. ':' → logprob: -4.644375324249268
    3. ' def' → logprob: -5.144375324249268
    4. ':
' → logprob: -5.769375324249268
    5. '):
' → logprob: -8.39437484741211
    6. 'def' → logprob: -8.89437484741211
    7. '	def' → logprob: -9.51937484741211
    8. '(' → logprob: -9.64437484741211
    9. '):' → logprob: -9.64437484741211
    10. ',' → logprob: -11.26937484741211

Token 167: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.11620521545410156
    2. '   ' → logprob: -2.4912052154541016
    3. 'def' (adapté à ' def') → logprob: -3.6162052154541016
    4. ' __' → logprob: -12.741205215454102
    5. '	def' → logprob: -12.991205215454102
    6. ' ' → logprob: -13.116205215454102
    7. '    ' → logprob: -13.241205215454102
    8. ' de' → logprob: -13.741205215454102
    9. 'de' → logprob: -14.741205215454102
    10. '  ' → logprob: -14.866205215454102

Token 168: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.00034535606391727924
    2. ' def' → logprob: -8.125345230102539
    3. '__' → logprob: -10.500345230102539
    4. ' _' → logprob: -11.875345230102539
    5. ' init' → logprob: -12.125345230102539
    6. '_init' → logprob: -12.375345230102539
    7. ' ' → logprob: -12.875345230102539
    8. 'init' → logprob: -13.750345230102539
    9. 'def' → logprob: -14.125345230102539
    10. ' ' → logprob: -14.250345230102539

Token 169: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: 0.0
    2. ' init' → logprob: -17.625
    3. 'inite' → logprob: -19.0
    4. '_init' → logprob: -20.0
    5. 'ini' → logprob: -20.25
    6. 'int' → logprob: -20.75
    7. '```' → logprob: -21.0
    8. '   ' → logprob: -21.25
    9. '
' → logprob: -21.5
    10. 'def' → logprob: -22.0

Token 170: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.0002251125843031332
    2. '(self' → logprob: -8.500225067138672
    3. '__' → logprob: -11.000225067138672
    4. '__(
' → logprob: -12.625225067138672
    5. '_(' → logprob: -14.125225067138672
    6. '__((' → logprob: -14.375225067138672
    7. '(' → logprob: -16.000225067138672
    8. '__('' → logprob: -16.375225067138672
    9. '<>(' → logprob: -17.500225067138672
    10. 'self' → logprob: -17.500225067138672

Token 171: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0003469057264737785
    2. ' self' → logprob: -8.000347137451172
    3. '(self' → logprob: -11.500347137451172
    4. '   ' → logprob: -14.500347137451172
    5. '
' → logprob: -15.500347137451172
    6. 's' → logprob: -15.875347137451172
    7. ' ' → logprob: -16.000347137451172
    8. '       ' → logprob: -16.625347137451172
    9. '__(' → logprob: -16.625347137451172
    10. '	self' → logprob: -16.625347137451172

Token 172: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0448620468378067
    2. '(self' → logprob: -3.7948620319366455
    3. '__(' → logprob: -4.669862270355225
    4. 'self' → logprob: -4.669862270355225
    5. ' ,' → logprob: -6.419862270355225
    6. ',self' → logprob: -8.044861793518066
    7. ' (' → logprob: -8.169861793518066
    8. ' self' → logprob: -9.044861793518066
    9. '__,' → logprob: -9.044861793518066
    10. '(' → logprob: -9.544861793518066

Token 173: ' N' (ID: 478)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.23660890758037567
    2. ' self' → logprob: -1.736608862876892
    3. 'n' → logprob: -4.111608982086182
    4. ' n' → logprob: -4.986608982086182
    5. 'N' → logprob: -6.111608982086182
    6. 'min' → logprob: -6.486608982086182
    7. 'count' → logprob: -6.486608982086182
    8. 's' → logprob: -6.611608982086182
    9. ' N' → logprob: -6.861608982086182
    10. 'num' → logprob: -7.111608982086182

Token 174: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05171152949333191
    2. ':' → logprob: -3.4267115592956543
    3. ' ,' → logprob: -4.051711559295654
    4. ':int' → logprob: -7.801711559295654
    5. ' :' → logprob: -10.051711082458496
    6. '):' → logprob: -11.176711082458496
    7. ')' → logprob: -11.676711082458496
    8. ' ):' → logprob: -11.801711082458496
    9. ',int' → logprob: -12.176711082458496
    10. 'int' → logprob: -12.676711082458496

Token 175: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0700020045042038
    2. ' int' → logprob: -2.6950020790100098
    3. ',' → logprob: -10.070001602172852
    4. ':int' → logprob: -11.945001602172852
    5. ',int' → logprob: -12.320001602172852
    6. '   ' → logprob: -12.570001602172852
    7. ')' → logprob: -13.195001602172852
    8. '[int' → logprob: -13.195001602172852
    9. ' ' → logprob: -13.945001602172852
    10. '):
' → logprob: -14.070001602172852

Token 176: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003827987238764763
    2. '):' → logprob: -6.003828048706055
    3. ' ,' → logprob: -7.003828048706055
    4. ')' → logprob: -7.878828048706055
    5. ' ):' → logprob: -10.128828048706055
    6. '):
' → logprob: -11.753828048706055
    7. ' )' → logprob: -12.378828048706055
    8. ':' → logprob: -13.253828048706055
    9. ',K' → logprob: -13.253828048706055
    10. ',k' → logprob: -13.378828048706055

Token 177: ' K' (ID: 658)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.37145930528640747
    2. 'K' → logprob: -1.8714592456817627
    3. ' S' → logprob: -2.1214592456817627
    4. ' K' → logprob: -3.4964592456817627
    5. 'M' → logprob: -6.496459484100342
    6. ' sides' → logprob: -6.621459484100342
    7. 's' → logprob: -7.246459484100342
    8. 'min' → logprob: -7.496459484100342
    9. ' M' → logprob: -7.996459484100342
    10. 'k' → logprob: -8.621459007263184

Token 178: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.48556196689605713
    2. '):' → logprob: -0.9855619668960571
    3. ')' → logprob: -5.610561847686768
    4. ' ):' → logprob: -5.735561847686768
    5. '):
' → logprob: -5.985561847686768
    6. ',' → logprob: -6.360561847686768
    7. ':int' → logprob: -8.610562324523926
    8. ' :' → logprob: -10.235562324523926
    9. ' )' → logprob: -10.735562324523926
    10. '   ' → logprob: -11.860562324523926

Token 179: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.10032884031534195
    2. ' int' → logprob: -2.3503289222717285
    3. ')' → logprob: -10.22532844543457
    4. 'nt' → logprob: -10.72532844543457
    5. ':int' → logprob: -10.72532844543457
    6. ' ' → logprob: -11.35032844543457
    7. '[int' → logprob: -11.97532844543457
    8. '=int' → logprob: -12.35032844543457
    9. '	int' → logprob: -12.85032844543457
    10. '   ' → logprob: -12.97532844543457

Token 180: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.004386913497000933
    2. ',' → logprob: -6.129386901855469
    3. ')' → logprob: -6.254386901855469
    4. '):
' → logprob: -8.629386901855469
    5. ' ):' → logprob: -9.504386901855469
    6. ':' → logprob: -11.004386901855469
    7. '   ' → logprob: -12.754386901855469
    8. '):
' → logprob: -13.004386901855469
    9. ' )' → logprob: -14.504386901855469
    10. ' ' → logprob: -15.504386901855469

Token 181: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00024287392443511635
    2. ' self' → logprob: -8.500243186950684
    3. 'self' → logprob: -11.125243186950684
    4. ',' → logprob: -11.375243186950684
    5. '   ' → logprob: -12.750243186950684
    6. '      ' → logprob: -12.750243186950684
    7. ' ' → logprob: -13.250243186950684
    8. '        ' → logprob: -13.750243186950684
    9. '<|end|>' → logprob: -13.875243186950684
    10. '     ' → logprob: -14.375243186950684

Token 182: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.13122794032096863
    2. ' self' → logprob: -2.256227970123291
    3. '       ' → logprob: -4.006227970123291
    4. 'super' → logprob: -11.006227493286133
    5. '   ' → logprob: -11.756227493286133
    6. '	self' → logprob: -12.381227493286133
    7. ' super' → logprob: -13.006227493286133
    8. ' ' → logprob: -13.756227493286133
    9. '      ' → logprob: -13.881227493286133
    10. '        ' → logprob: -14.256227493286133

Token 183: '.N' (ID: 4439)
  Prédit: '.N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.N' → logprob: -0.19902363419532776
    2. '.' → logprob: -2.199023723602295
    3. ' .' → logprob: -2.699023723602295
    4. '.K' → logprob: -7.324023723602295
    5. ' ' → logprob: -7.824023723602295
    6. '._' → logprob: -7.949023723602295
    7. '   ' → logprob: -8.824023246765137
    8. '.S' → logprob: -8.949023246765137
    9. ',' → logprob: -8.949023246765137
    10. ' N' → logprob: -9.574023246765137

Token 184: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10256386548280716
    2. '=' → logprob: -2.3525638580322266
    3. ',' → logprob: -6.227563858032227
    4. ' ' → logprob: -8.352563858032227
    5. ' ,' → logprob: -9.227563858032227
    6. '    ' → logprob: -11.227563858032227
    7. '   ' → logprob: -11.602563858032227
    8. ' *=' → logprob: -12.227563858032227
    9. ' +=' → logprob: -12.477563858032227
    10. '       ' → logprob: -12.727563858032227

Token 185: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.04880843311548233
    2. 'K' → logprob: -3.5488083362579346
    3. ' N' → logprob: -4.048808574676514
    4. ' K' → logprob: -6.548808574676514
    5. ' ' → logprob: -13.548808097839355
    6. '	N' → logprob: -14.798808097839355
    7. 'int' → logprob: -15.173808097839355
    8. '   ' → logprob: -15.423808097839355
    9. '  ' → logprob: -16.048809051513672
    10. '    ' → logprob: -16.173809051513672

Token 186: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005785312969237566
    2. ',' → logprob: -8.750578880310059
    3. '        
' → logprob: -9.375578880310059
    4. 'self' → logprob: -9.625578880310059
    5. '<|end|>' → logprob: -9.625578880310059
    6. '        ' → logprob: -9.750578880310059
    7. '
' → logprob: -9.750578880310059
    8. ' ' → logprob: -10.875578880310059
    9. '      ' → logprob: -11.250578880310059
    10. ' self' → logprob: -11.375578880310059

Token 187: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00045081099960952997
    2. 'self' → logprob: -8.50045108795166
    3. ' self' → logprob: -8.87545108795166
    4. '        ' → logprob: -10.00045108795166
    5. ',' → logprob: -10.87545108795166
    6. ' ' → logprob: -11.25045108795166
    7. '      ' → logprob: -12.00045108795166
    8. '        
' → logprob: -12.00045108795166
    9. '<|end|>' → logprob: -12.25045108795166
    10. '   ' → logprob: -12.25045108795166

Token 188: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0009356398368254304
    2. ' self' → logprob: -7.0009355545043945
    3. '       ' → logprob: -11.250935554504395
    4. 'K' → logprob: -11.750935554504395
    5. 'from' → logprob: -13.750935554504395
    6. '   ' → logprob: -14.750935554504395
    7. 'k' → logprob: -14.750935554504395
    8. 'super' → logprob: -14.875935554504395
    9. '	self' → logprob: -15.125935554504395
    10. 's' → logprob: -15.750935554504395

Token 189: '.K' (ID: 14475)
  Prédit: '.K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.K' → logprob: -0.0016961266519501805
    2. ' .' → logprob: -7.2516961097717285
    3. 'K' → logprob: -7.7516961097717285
    4. '.' → logprob: -8.001696586608887
    5. ' =' → logprob: -9.501696586608887
    6. ' K' → logprob: -9.876696586608887
    7. '=' → logprob: -10.751696586608887
    8. ',K' → logprob: -11.126696586608887
    9. '*K' → logprob: -11.251696586608887
    10. '.k' → logprob: -11.501696586608887

Token 190: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6993420720100403
    2. ' =' → logprob: -0.6993420720100403
    3. '<|end|>' → logprob: -5.199342250823975
    4. ' ' → logprob: -8.574341773986816
    5. '+' → logprob: -9.199341773986816
    6. ',' → logprob: -9.324341773986816
    7. ')' → logprob: -9.824341773986816
    8. '<|end|>' → logprob: -10.199341773986816
    9. '       ' → logprob: -10.324341773986816
    10. '   ' → logprob: -10.699341773986816

Token 191: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.0620429702103138
    2. ' K' → logprob: -2.8120429515838623
    3. ' ' → logprob: -10.062043190002441
    4. '   ' → logprob: -11.687043190002441
    5. '1' → logprob: -11.812043190002441
    6. 'k' → logprob: -12.562043190002441
    7. 'N' → logprob: -12.687043190002441
    8. '    ' → logprob: -13.187043190002441
    9. '  ' → logprob: -13.312043190002441
    10. '2' → logprob: -13.937043190002441

Token 192: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.772226095199585
    2. '<|end|>' → logprob: -0.897226095199585
    3. '
' → logprob: -2.522226095199585
    4. '   ' → logprob: -3.897226095199585
    5. ' ' → logprob: -4.147226333618164
    6. '<|end|>' → logprob: -6.022226333618164
    7. '        ' → logprob: -6.272226333618164
    8. '    ' → logprob: -6.272226333618164
    9. '    
' → logprob: -6.522226333618164
    10. ' 
' → logprob: -6.897226333618164

Token 193: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 194: ' self' (ID: 1051)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.1316222995519638
    2. 'self' (adapté à ' self') → logprob: -2.881622314453125
    3. 'super' → logprob: -3.631622314453125
    4. '       ' → logprob: -3.881622314453125
    5. '   ' → logprob: -4.506622314453125
    6. ' def' → logprob: -5.631622314453125
    7. ' self' → logprob: -6.506622314453125
    8. '@' → logprob: -6.756622314453125
    9. '@property' → logprob: -7.256622314453125
    10. ' super' → logprob: -7.756622314453125

Token 195: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.06908338516950607
    2. '.max' → logprob: -4.069083213806152
    3. '.support' → logprob: -4.444083213806152
    4. '.' → logprob: -5.069083213806152
    5. '.range' → logprob: -5.194083213806152
    6. '.min' → logprob: -5.194083213806152
    7. '.count' → logprob: -5.944083213806152
    8. '.cache' → logprob: -6.069083213806152
    9. '.total' → logprob: -6.194083213806152
    10. '.dp' → logprob: -6.194083213806152

Token 196: 'min' (ID: 1493)
  Prédit: 'cache'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cache' → logprob: -0.4298000931739807
    2. 'max' → logprob: -2.179800033569336
    3. 'min' → logprob: -2.554800033569336
    4. 'support' → logprob: -2.679800033569336
    5. 'memo' → logprob: -3.054800033569336
    6. 'dp' → logprob: -4.054800033569336
    7. 'total' → logprob: -5.179800033569336
    8. 'g' → logprob: -5.429800033569336
    9. 'coeff' → logprob: -6.679800033569336
    10. 'cached' → logprob: -6.679800033569336

Token 197: ' =' (ID: 314)
  Prédit: '_value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.8338845372200012
    2. '_sum' → logprob: -0.9588845372200012
    3. ' =' → logprob: -2.2088844776153564
    4. '_val' → logprob: -2.8338844776153564
    5. '=' → logprob: -4.4588847160339355
    6. '_' → logprob: -6.9588847160339355
    7. 'sum' → logprob: -7.3338847160339355
    8. '_support' → logprob: -8.833884239196777
    9. 'val' → logprob: -9.083884239196777
    10. 'value' → logprob: -9.458884239196777

Token 198: ' K' (ID: 658)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.22176113724708557
    2. 'self' → logprob: -2.2217612266540527
    3. ' self' → logprob: -3.0967612266540527
    4. ' N' → logprob: -3.0967612266540527
    5. '1' → logprob: -9.596760749816895
    6. ' ' → logprob: -11.971760749816895
    7. '_N' → logprob: -12.971760749816895
    8. '0' → logprob: -13.096760749816895
    9. 'n' → logprob: -13.721760749816895
    10. '	N' → logprob: -13.721760749816895

Token 199: ' *' (ID: 425)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 200: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0015390269691124558
    2. ' ' → logprob: -6.50153923034668
    3. '0' → logprob: -11.00153923034668
    4. '(' → logprob: -11.50153923034668
    5. '   ' → logprob: -12.62653923034668
    6. '[' → logprob: -13.00153923034668
    7. '     ' → logprob: -13.12653923034668
    8. '  ' → logprob: -14.62653923034668
    9. '=' → logprob: -15.12653923034668
    10. '    ' → logprob: -15.43903923034668

Token 201: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.6789137084269896e-05
    2. ' ' → logprob: -10.75003719329834
    3. '0' → logprob: -11.62503719329834
    4. '(' → logprob: -12.62503719329834
    5. '   ' → logprob: -13.37503719329834
    6. '     ' → logprob: -14.12503719329834
    7. '[' → logprob: -15.50003719329834
    8. '  ' → logprob: -16.250036239624023
    9. '         ' → logprob: -16.812536239624023
    10. '{' → logprob: -16.875036239624023

Token 202: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1585461050271988
    2. '
' → logprob: -2.033546209335327
    3. '<|end|>' → logprob: -4.408545970916748
    4. 'self' → logprob: -6.408545970916748
    5. '        
' → logprob: -7.283545970916748
    6. '   ' → logprob: -8.033546447753906
    7. ' 
' → logprob: -8.408546447753906
    8. '<|end|>' → logprob: -8.658546447753906
    9. '  
' → logprob: -9.283546447753906
    10. ',' → logprob: -9.408546447753906

Token 203: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3084460198879242
    2. 'self' → logprob: -1.5584460496902466
    3. '
' → logprob: -3.808445930480957
    4. '<|end|>' → logprob: -3.933445930480957
    5. ' self' → logprob: -5.683445930480957
    6. '   ' → logprob: -6.058445930480957
    7. ' 
' → logprob: -6.308445930480957
    8. '        
' → logprob: -6.433445930480957
    9. ',' → logprob: -6.683445930480957
    10. '  
' → logprob: -7.558445930480957

Token 204: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.02667679265141487
    2. '       ' → logprob: -4.026676654815674
    3. ' self' → logprob: -4.776676654815674
    4. '   ' → logprob: -10.276677131652832
    5. '	self' → logprob: -10.651677131652832
    6. ' ' → logprob: -12.401677131652832
    7. '(self' → logprob: -13.526677131652832
    8. '[self' → logprob: -14.526677131652832
    9. '
' → logprob: -14.651677131652832
    10. '  ' → logprob: -15.026677131652832

Token 205: '._' (ID: 2697)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.7023146748542786
    2. '._' → logprob: -0.7023146748542786
    3. ' .' → logprob: -5.077314853668213
    4. '.max' → logprob: -6.952314853668213
    5. '_max' → logprob: -7.702314853668213
    6. ' ' → logprob: -7.827314853668213
    7. '_' → logprob: -8.077314376831055
    8. '.N' → logprob: -8.827314376831055
    9. '.*' → logprob: -9.202314376831055
    10. 'max' → logprob: -9.827314376831055

Token 206: 'max' (ID: 3228)
  Prédit: 'max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -2.816093228830141e-06
    2. 'min' → logprob: -13.62500286102295
    3. ' max' → logprob: -13.87500286102295
    4. '_max' → logprob: -14.37500286102295
    5. 'N' → logprob: -18.125001907348633
    6. '	max' → logprob: -18.750001907348633
    7. 'ax' → logprob: -19.000001907348633
    8. '(max' → logprob: -19.125001907348633
    9. '.max' → logprob: -19.375001907348633
    10. 'm' → logprob: -19.500001907348633

Token 207: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47407805919647217
    2. ' =' → logprob: -0.9740780591964722
    3. ' ' → logprob: -14.224078178405762
    4. ')' → logprob: -15.724078178405762
    5. '<|end|>' → logprob: -15.974078178405762
    6. 'K' → logprob: -16.474077224731445
    7. '=k' → logprob: -16.599077224731445
    8. '=N' → logprob: -18.224077224731445
    9. ',' → logprob: -18.349077224731445
    10. 's' → logprob: -18.599077224731445

Token 208: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.05574900284409523
    2. ' K' → logprob: -2.93074893951416
    3. 'N' → logprob: -7.18074893951416
    4. ' N' → logprob: -9.80574893951416
    5. 'self' → logprob: -10.93074893951416
    6. '1' → logprob: -11.55574893951416
    7. '(K' → logprob: -11.55574893951416
    8. ' ' → logprob: -12.30574893951416
    9. '6' → logprob: -13.05574893951416
    10. ' self' → logprob: -13.68074893951416

Token 209: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.5656770467758179
    2. '*' → logprob: -1.0656770467758179
    3. '*N' → logprob: -2.4406771659851074
    4. '*K' → logprob: -8.56567668914795
    5. '0' → logprob: -9.19067668914795
    6. '<|end|>' → logprob: -10.19067668914795
    7. '*(' → logprob: -10.56567668914795
    8. '```' → logprob: -11.19067668914795
    9. 'N' → logprob: -11.31567668914795
    10. '*self' → logprob: -12.06567668914795

Token 210: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0007782964967191219
    2. '6' → logprob: -7.5007781982421875
    3. ' N' → logprob: -8.625778198242188
    4. 'self' → logprob: -10.250778198242188
    5. ' ' → logprob: -13.375778198242188
    6. '   ' → logprob: -13.500778198242188
    7. '100' → logprob: -13.625778198242188
    8. '9' → logprob: -14.000778198242188
    9. 'M' → logprob: -14.000778198242188
    10. '```' → logprob: -14.375778198242188

Token 211: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.334800124168396
    2. '<|end|>' → logprob: -1.959800124168396
    3. 'def' → logprob: -2.2098002433776855
    4. '
' → logprob: -4.0848002433776855
    5. ' def' → logprob: -4.4598002433776855
    6. '<|end|>' → logprob: -6.3348002433776855
    7. '    
' → logprob: -6.5848002433776855
    8. '       ' → logprob: -7.4598002433776855
    9. '@property' → logprob: -8.084799766540527
    10. ',' → logprob: -8.209799766540527

Token 212: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4324209690093994
    2. '<|end|>' → logprob: -1.8074209690093994
    3. '
' → logprob: -2.0574209690093994
    4. 'def' → logprob: -3.3074209690093994
    5. '    
' → logprob: -4.68242073059082
    6. '<|end|>' → logprob: -5.43242073059082
    7. ' def' → logprob: -5.55742073059082
    8. '       ' → logprob: -5.93242073059082
    9. '

' → logprob: -7.68242073059082
    10. '	def' → logprob: -8.05742073059082

Token 213: ' self' (ID: 1051)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.10835211724042892
    2. 'self' (adapté à ' self') → logprob: -2.8583521842956543
    3. '   ' → logprob: -3.4833521842956543
    4. ' def' → logprob: -4.858352184295654
    5. '       ' → logprob: -5.608352184295654
    6. ' self' → logprob: -7.108352184295654
    7. '
' → logprob: -7.233352184295654
    8. '@property' → logprob: -7.483352184295654
    9. '    
' → logprob: -7.983352184295654
    10. '        
' → logprob: -8.483351707458496

Token 214: '._' (ID: 2697)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.3199653923511505
    2. '._' → logprob: -1.4449653625488281
    3. ' .' → logprob: -3.694965362548828
    4. '.dp' → logprob: -6.444965362548828
    5. '.def' → logprob: -6.444965362548828
    6. '.cache' → logprob: -6.444965362548828
    7. '.count' → logprob: -6.694965362548828
    8. '.pro' → logprob: -6.694965362548828
    9. 'def' → logprob: -6.819965362548828
    10. '.f' → logprob: -7.819965362548828

Token 215: 'counts' (ID: 99089)
  Prédit: 'cache'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cache' → logprob: -0.32871514558792114
    2. 'dp' → logprob: -1.8287150859832764
    3. 'memo' → logprob: -3.0787150859832764
    4. 'count' → logprob: -3.9537150859832764
    5. 'counts' → logprob: -4.4537153244018555
    6. 'max' → logprob: -4.4537153244018555
    7. 'support' → logprob: -4.5787153244018555
    8. 'prob' → logprob: -6.0787153244018555
    9. 'c' → logprob: -6.2037153244018555
    10. 'total' → logprob: -6.3287153244018555

Token 216: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.033853039145469666
    2. '=' → logprob: -3.408853054046631
    3. ' ' → logprob: -9.033852577209473
    4. ':' → logprob: -10.033852577209473
    5. '<|end|>' → logprob: -11.158852577209473
    6. '[' → logprob: -11.283852577209473
    7. '=[]' → logprob: -12.283852577209473
    8. ')' → logprob: -13.533852577209473
    9. '  ' → logprob: -13.533852577209473
    10. ',' → logprob: -13.658852577209473

Token 217: ' None' (ID: 4662)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.30006787180900574
    2. ' [' → logprob: -2.175067901611328
    3. 'None' → logprob: -2.175067901611328
    4. ' None' → logprob: -3.675067901611328
    5. '{}' → logprob: -5.550067901611328
    6. '[]' → logprob: -6.550067901611328
    7. '[self' → logprob: -8.175067901611328
    8. ' {}' → logprob: -8.300067901611328
    9. ' []' → logprob: -8.425067901611328
    10. '[n' → logprob: -8.675067901611328

Token 218: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 219: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 220: ' self' (ID: 1051)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 221: '._' (ID: 2697)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.2803381383419037
    2. ' .' → logprob: -1.530338168144226
    3. '._' → logprob: -4.155338287353516
    4. ' ' → logprob: -4.530338287353516
    5. '_' → logprob: -7.780338287353516
    6. ' def' → logprob: -7.780338287353516
    7. 'def' → logprob: -8.030338287353516
    8. ' _' → logprob: -8.655338287353516
    9. '.def' → logprob: -10.905338287353516
    10. '  ' → logprob: -11.030338287353516

Token 222: 'total' (ID: 9577)
  Prédit: 'cache'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cache' → logprob: -0.07126010209321976
    2. 'counts' → logprob: -3.3212602138519287
    3. 'memo' → logprob: -4.44625997543335
    4. 'count' → logprob: -5.69625997543335
    5. 'compute' → logprob: -5.69625997543335
    6. 'dp' → logprob: -5.94625997543335
    7. 'max' → logprob: -6.07125997543335
    8. 'l' → logprob: -6.44625997543335
    9. 'cached' → logprob: -6.69625997543335
    10. 'prob' → logprob: -6.82125997543335

Token 223: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5306494235992432
    2. ' =' → logprob: -0.9056494235992432
    3. '_' → logprob: -5.280649185180664
    4. '_counts' → logprob: -6.905649185180664
    5. '_count' → logprob: -7.530649185180664
    6. '_tokens' → logprob: -7.530649185180664
    7. '_=' → logprob: -9.655649185180664
    8. '=_' → logprob: -10.280649185180664
    9. ' ' → logprob: -10.780649185180664
    10. '<|end|>' → logprob: -10.780649185180664

Token 224: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.016532694920897484
    2. '(N' → logprob: -5.016532897949219
    3. ' N' → logprob: -5.016532897949219
    4. 'self' → logprob: -6.266532897949219
    5. 'pow' → logprob: -8.266532897949219
    6. 'None' → logprob: -8.391532897949219
    7. '0' → logprob: -8.391532897949219
    8. '(' → logprob: -8.891532897949219
    9. ' (' → logprob: -9.141532897949219
    10. '1' → logprob: -9.516532897949219

Token 225: ' **' (ID: 6240)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.5759463310241699
    2. ' **' → logprob: -0.8259463310241699
    3. ' ' → logprob: -13.825946807861328
    4. ' **
' → logprob: -14.075946807861328
    5. '**
' → logprob: -14.075946807861328
    6. '^' → logprob: -14.200946807861328
    7. 'K' → logprob: -14.450946807861328
    8. '```' → logprob: -14.450946807861328
    9. '*' → logprob: -14.825946807861328
    10. ' *' → logprob: -14.950946807861328

Token 226: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -8.304016228066757e-05
    2. 'self' → logprob: -9.625082969665527
    3. ' K' → logprob: -11.000082969665527
    4. 'k' → logprob: -16.500083923339844
    5. '	K' → logprob: -16.500083923339844
    6. ' self' → logprob: -17.000083923339844
    7. '(K' → logprob: -17.250083923339844
    8. '*K' → logprob: -18.125083923339844
    9. '_K' → logprob: -18.250083923339844
    10. '   ' → logprob: -18.250083923339844

Token 227: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 228: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 229: ' self' (ID: 1051)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.47362637519836426
    2. 'def' → logprob: -1.5986263751983643
    3. ' def' → logprob: -2.2236263751983643
    4. '    
' → logprob: -3.3486263751983643
    5. '
' → logprob: -3.8486263751983643
    6. '  
' → logprob: -5.598626136779785
    7. '       ' → logprob: -6.098626136779785
    8. ' ' → logprob: -6.598626136779785
    9. ' 
' → logprob: -6.848626136779785
    10. '        
' → logprob: -7.223626136779785

Token 230: '._' (ID: 2697)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.5886585712432861
    2. '._' → logprob: -0.8386585712432861
    3. 'def' → logprob: -4.838658332824707
    4. ' .' → logprob: -6.338658332824707
    5. ' def' → logprob: -7.713658332824707
    6. '.def' → logprob: -7.838658332824707
    7. '_' → logprob: -7.963658332824707
    8. '.
' → logprob: -8.213658332824707
    9. '.count' → logprob: -8.588658332824707
    10. ':' → logprob: -8.588658332824707

Token 231: 'init' (ID: 3287)
  Prédit: 'counts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'counts' → logprob: -0.4518051743507385
    2. 'cache' → logprob: -1.0768051147460938
    3. 'count' → logprob: -4.951805114746094
    4. 'max' → logprob: -5.326805114746094
    5. 'def' → logprob: -5.701805114746094
    6. '@' → logprob: -6.701805114746094
    7. 'l' → logprob: -6.951805114746094
    8. 'compute' → logprob: -7.201805114746094
    9. 'cached' → logprob: -7.326805114746094
    10. 'calculate' → logprob: -7.451805114746094

Token 232: '_distribution' (ID: 102196)
  Prédit: '_counts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_counts' → logprob: -0.043929748237133026
    2. '_' → logprob: -3.1689298152923584
    3. '_distribution' → logprob: -8.168930053710938
    4. ' _' → logprob: -9.168930053710938
    5. '_prob' → logprob: -9.293930053710938
    6. '_probs' → logprob: -9.668930053710938
    7. '_count' → logprob: -9.918930053710938
    8. '__' → logprob: -10.043930053710938
    9. '_c' → logprob: -10.418930053710938
    10. '_cache' → logprob: -10.543930053710938

Token 233: '_counts' (ID: 61971)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -7.290784560609609e-05
    2. '()
' → logprob: -9.750072479248047
    3. '()

' → logprob: -12.000072479248047
    4. '(' → logprob: -12.250072479248047
    5. ' ()' → logprob: -13.875072479248047
    6. '()`' → logprob: -14.000072479248047
    7. '();' → logprob: -14.375072479248047
    8. '().' → logprob: -15.500072479248047
    9. '()?' → logprob: -15.875072479248047
    10. '()"' → logprob: -16.000072479248047

Token 234: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0001029471677611582
    2. '(' → logprob: -9.375102996826172
    3. '()
' → logprob: -11.625102996826172
    4. ' ()' → logprob: -12.500102996826172
    5. '();' → logprob: -13.250102996826172
    6. '()

' → logprob: -13.750102996826172
    7. '()?' → logprob: -14.250102996826172
    8. '().' → logprob: -14.875102996826172
    9. '()`' → logprob: -15.000102996826172
    10. '(),' → logprob: -16.000102996826172

Token 235: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16360260546207428
    2. ' def' → logprob: -3.038602590560913
    3. 'def' → logprob: -3.538602590560913
    4. ' ' → logprob: -3.913602590560913
    5. '    
' → logprob: -4.038602828979492
    6. ' 
' → logprob: -4.413602828979492
    7. ':' → logprob: -4.538602828979492
    8. '  
' → logprob: -5.663602828979492
    9. '	def' → logprob: -5.788602828979492
    10. '
' → logprob: -6.788602828979492

Token 236: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.26018983125686646
    2. ' def' → logprob: -1.5101897716522217
    3. '   ' → logprob: -4.885190010070801
    4. '	def' → logprob: -7.760190010070801
    5. ')' → logprob: -9.1351900100708
    6. '    
' → logprob: -9.5101900100708
    7. ' ' → logprob: -10.3851900100708
    8. ' 
' → logprob: -11.1351900100708
    9. '  
' → logprob: -11.8851900100708
    10. ':def' → logprob: -13.5101900100708

Token 237: ' _' (ID: 1175)
  Prédit: '_init'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_init' → logprob: -0.001172129064798355
    2. ' _' → logprob: -6.751172065734863
    3. '_in' → logprob: -13.751172065734863
    4. '_' → logprob: -15.251172065734863
    5. '_min' → logprob: -16.12617301940918
    6. '_initialize' → logprob: -16.62617301940918
    7. '_start' → logprob: -16.75117301940918
    8. '_max' → logprob: -16.75117301940918
    9. '_get' → logprob: -17.25117301940918
    10. '_def' → logprob: -17.37617301940918

Token 238: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -2.2200749754119897e-06
    2. '_init' → logprob: -13.875001907348633
    3. ' init' → logprob: -14.875001907348633
    4. 'int' → logprob: -15.750001907348633
    5. 'compute' → logprob: -15.750001907348633
    6. 'count' → logprob: -16.750001907348633
    7. 'initialize' → logprob: -17.000001907348633
    8. 'inite' → logprob: -17.125001907348633
    9. 'calculate' → logprob: -17.125001907348633
    10. '
' → logprob: -17.500001907348633

Token 239: '_distribution' (ID: 102196)
  Prédit: '_distribution'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_distribution' → logprob: -0.00014096579980105162
    2. '_counts' → logprob: -8.875141143798828
    3. '_' → logprob: -14.500141143798828
    4. '_dis' → logprob: -15.375141143798828
    5. 'distribution' → logprob: -16.750141143798828
    6. '_dist' → logprob: -16.875141143798828
    7. '_d' → logprob: -17.250141143798828
    8. '_probability' → logprob: -17.375141143798828
    9. '_div' → logprob: -17.625141143798828
    10. '_count' → logprob: -18.000141143798828

Token 240: '_counts' (ID: 61971)
  Prédit: '_counts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_counts' → logprob: -0.0008889487362466753
    2. '(self' → logprob: -7.125888824462891
    3. '_' → logprob: -9.87588882446289
    4. 's' → logprob: -11.50088882446289
    5. '   ' → logprob: -12.37588882446289
    6. ' _' → logprob: -12.62588882446289
    7. '_count' → logprob: -12.75088882446289
    8. '(' → logprob: -13.00088882446289
    9. '_c' → logprob: -13.37588882446289
    10. 'self' → logprob: -13.37588882446289

Token 241: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -3.2617008400848135e-05
    2. '(' → logprob: -10.500032424926758
    3. 'self' → logprob: -12.875032424926758
    4. ' (' → logprob: -13.625032424926758
    5. '   ' → logprob: -14.375032424926758
    6. ' ' → logprob: -15.375032424926758
    7. ' self' → logprob: -15.750032424926758
    8. '(s' → logprob: -16.125032424926758
    9. '	self' → logprob: -16.250032424926758
    10. '(
' → logprob: -16.250032424926758

Token 242: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.03102533333003521
    2. ')' → logprob: -3.9060254096984863
    3. '):
' → logprob: -4.656025409698486
    4. ' ):' → logprob: -7.906025409698486
    5. 'self' → logprob: -8.156024932861328
    6. '(self' → logprob: -9.656024932861328
    7. '):
' → logprob: -9.906024932861328
    8. ',' → logprob: -10.031024932861328
    9. 'def' → logprob: -11.031024932861328
    10. '):

' → logprob: -11.156024932861328

Token 243: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0003977800370194018
    2. ':' → logprob: -8.500397682189941
    3. ' self' → logprob: -9.750397682189941
    4. ',' → logprob: -9.875397682189941
    5. 'self' → logprob: -11.000397682189941
    6. '   ' → logprob: -11.125397682189941
    7. '):' → logprob: -11.625397682189941
    8. ')' → logprob: -12.375397682189941
    9. '#' → logprob: -12.500397682189941
    10. '      ' → logprob: -12.625397682189941

Token 244: ' #' (ID: 1069)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.4447687268257141
    2. '       ' → logprob: -1.1947686672210693
    3. 'from' → logprob: -3.9447686672210693
    4. 'counts' → logprob: -3.9447686672210693
    5. ' self' → logprob: -4.194768905639648
    6. ' from' → logprob: -7.069768905639648
    7. 'dp' → logprob: -7.319768905639648
    8. ' counts' → logprob: -7.569768905639648
    9. 'count' → logprob: -8.819768905639648
    10. 'max' → logprob: -9.444768905639648

Token 245: ' Compute' (ID: 45438)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.07047106325626373
    2. '       ' → logprob: -3.5704710483551025
    3. 'from' → logprob: -4.070471286773682
    4. ' self' → logprob: -4.570471286773682
    5. 'counts' → logprob: -4.820471286773682
    6. '#' → logprob: -6.195471286773682
    7. 'dp' → logprob: -7.195471286773682
    8. '"""' → logprob: -8.070470809936523
    9. 'max' → logprob: -8.320470809936523
    10. ' from' → logprob: -8.320470809936523

Token 246: ' distribution' (ID: 12545)
  Prédit: ' counts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' counts' → logprob: -0.7471733689308167
    2. ' self' → logprob: -0.9971733689308167
    3. 'self' → logprob: -2.247173309326172
    4. 'counts' → logprob: -3.622173309326172
    5. ' ways' → logprob: -4.622173309326172
    6. ' from' → logprob: -5.372173309326172
    7. '       ' → logprob: -5.622173309326172
    8. ' dp' → logprob: -6.247173309326172
    9. ' max' → logprob: -6.997173309326172
    10. ' the' → logprob: -7.247173309326172

Token 247: '_counts' (ID: 61971)
  Prédit: ' counts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' counts' → logprob: -0.9443097710609436
    2. '       ' → logprob: -1.3193097114562988
    3. '_counts' → logprob: -1.6943097114562988
    4. 'counts' → logprob: -2.194309711456299
    5. ' =' → logprob: -4.569309711456299
    6. ' for' → logprob: -4.819309711456299
    7. 'self' → logprob: -5.194309711456299
    8. ' self' → logprob: -5.444309711456299
    9. '<|end|>' → logprob: -6.069309711456299
    10. 's' → logprob: -6.194309711456299

Token 248: '[x' (ID: 17295)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.040059011429548264
    2. '       ' → logprob: -3.6650590896606445
    3. '<|end|>' → logprob: -5.1650590896606445
    4. '=' → logprob: -6.2900590896606445
    5. ':' → logprob: -6.9150590896606445
    6. ',' → logprob: -7.1650590896606445
    7. '<|end|>' → logprob: -7.2900590896606445
    8. '   ' → logprob: -7.4150590896606445
    9. ' for' → logprob: -7.4150590896606445
    10. '(self' → logprob: -7.4150590896606445

Token 249: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0022935904562473297
    2. ' ]' → logprob: -6.752293586730957
    3. ']=' → logprob: -7.127293586730957
    4. ' -' → logprob: -10.002293586730957
    5. ']:' → logprob: -10.127293586730957
    6. ']={' → logprob: -10.252293586730957
    7. 's' → logprob: -10.502293586730957
    8. ']+=' → logprob: -10.752293586730957
    9. '][' → logprob: -11.002293586730957
    10. ' for' → logprob: -11.252293586730957

Token 250: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.022916048765182495
    2. '=' → logprob: -4.897915840148926
    3. '<|end|>' → logprob: -5.022915840148926
    4. ' for' → logprob: -6.522915840148926
    5. ' ' → logprob: -6.522915840148926
    6. '       ' → logprob: -6.897915840148926
    7. 'def' → logprob: -6.897915840148926
    8. '   ' → logprob: -7.397915840148926
    9. ':' → logprob: -7.522915840148926
    10. '[' → logprob: -8.147915840148926

Token 251: ' number' (ID: 2086)
  Prédit: 'number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'number' → logprob: -0.12883692979812622
    2. ' number' → logprob: -2.1288368701934814
    3. 'the' → logprob: -6.7538371086120605
    4. 'Number' → logprob: -8.503836631774902
    5. ' the' → logprob: -8.753836631774902
    6. '#' → logprob: -9.128836631774902
    7. '[number' → logprob: -9.878836631774902
    8. 'The' → logprob: -10.003836631774902
    9. '0' → logprob: -10.378836631774902
    10. 'count' → logprob: -10.628836631774902

Token 252: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.20914503931999207
    2. 'of' → logprob: -2.0841450691223145
    3. 's' → logprob: -3.7091450691223145
    4. 't' → logprob: -4.4591450691223145
    5. '[' → logprob: -5.0841450691223145
    6. '_of' → logprob: -5.0841450691223145
    7. '_' → logprob: -5.2091450691223145
    8. '_token' → logprob: -6.7091450691223145
    9. 'token' → logprob: -6.9591450691223145
    10. ' ' → logprob: -6.9591450691223145

Token 253: ' combinations' (ID: 43835)
  Prédit: ' ways'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ways' → logprob: -0.20184704661369324
    2. 'ways' → logprob: -1.7018470764160156
    3. 'com' → logprob: -8.826847076416016
    4. ' sequences' → logprob: -9.201847076416016
    5. 'self' → logprob: -9.826847076416016
    6. 'x' → logprob: -10.576847076416016
    7. 's' → logprob: -10.951847076416016
    8. ' x' → logprob: -10.951847076416016
    9. ' combinations' → logprob: -11.326847076416016
    10. ' self' → logprob: -11.701847076416016

Token 254: ' summ' (ID: 16552)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.8560329675674438
    2. ' that' → logprob: -1.2310329675674438
    3. '<|end|>' → logprob: -1.7310329675674438
    4. ' ' → logprob: -3.6060328483581543
    5. ' of' → logprob: -3.8560328483581543
    6. 'for' → logprob: -4.231032848358154
    7. ' to' → logprob: -4.856032848358154
    8. ' such' → logprob: -4.981032848358154
    9. '	' → logprob: -5.106032848358154
    10. 'that' → logprob: -5.231032848358154

Token 255: 'ing' (ID: 289)
  Prédit: 'ing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ing' → logprob: -0.08451174944639206
    2. 'ary' → logprob: -2.5845117568969727
    3. 'ar' → logprob: -5.834511756896973
    4. 'ed' → logprob: -6.834511756896973
    5. 'ation' → logprob: -7.459511756896973
    6. '   ' → logprob: -8.209511756896973
    7. 'oning' → logprob: -8.334511756896973
    8. 'ations' → logprob: -8.584511756896973
    9. '       ' → logprob: -9.459511756896973
    10. 'aries' → logprob: -9.959511756896973

Token 256: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.023373940959572792
    2. ' to' → logprob: -3.77337384223938
    3. 'x' → logprob: -9.8983736038208
    4. ' up' → logprob: -10.2733736038208
    5. 'up' → logprob: -11.2733736038208
    6. '   ' → logprob: -11.3983736038208
    7. '	to' → logprob: -12.2733736038208
    8. '       ' → logprob: -12.3983736038208
    9. ' x' → logprob: -12.8983736038208
    10. ' ' → logprob: -13.1483736038208

Token 257: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.2811633050441742
    2. ' x' → logprob: -1.4061633348464966
    3. ' ' → logprob: -12.656163215637207
    4. 'self' → logprob: -13.656163215637207
    5. 'value' → logprob: -13.781163215637207
    6. '	x' → logprob: -13.781163215637207
    7. 'k' → logprob: -14.156163215637207
    8. ' self' → logprob: -14.281163215637207
    9. '    ' → logprob: -14.406163215637207
    10. ' k' → logprob: -14.656163215637207

Token 258: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 259: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03062407858669758
    2. '<|end|>' → logprob: -3.7806241512298584
    3. '   ' → logprob: -5.655623912811279
    4. ':' → logprob: -7.030623912811279
    5. ' ' → logprob: -7.405623912811279
    6. ',' → logprob: -8.030624389648438
    7. '<|end|>' → logprob: -8.405624389648438
    8. ' =' → logprob: -8.530624389648438
    9. ' for' → logprob: -8.780624389648438
    10. ')' → logprob: -8.905624389648438

Token 260: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.045225340873003006
    2. 'self' → logprob: -3.7952253818511963
    3. ' self' → logprob: -4.170225143432617
    4. 'from' → logprob: -5.920225143432617
    5. 'def' → logprob: -6.920225143432617
    6. ' from' → logprob: -6.920225143432617
    7. '   ' → logprob: -7.545225143432617
    8. ' =' → logprob: -8.670225143432617
    9. 'counts' → logprob: -8.670225143432617
    10. ':' → logprob: -9.295225143432617

Token 261: ' x' (ID: 1215)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.970910906791687
    2. '       ' → logprob: -1.720910906791687
    3. 'from' → logprob: -1.720910906791687
    4. ' from' → logprob: -2.0959110260009766
    5. ' self' → logprob: -2.3459110260009766
    6. 'counts' → logprob: -3.5959110260009766
    7. ' counts' → logprob: -4.720911026000977
    8. 'dp' → logprob: -5.595911026000977
    9. 'count' → logprob: -6.970911026000977
    10. 'n' → logprob: -7.470911026000977

Token 262: ' ranges' (ID: 33269)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.624664843082428
    2. '=' → logprob: -0.999664843082428
    3. ' in' → logprob: -2.499664783477783
    4. ':' → logprob: -6.499664783477783
    5. ' ' → logprob: -6.499664783477783
    6. 'in' → logprob: -6.499664783477783
    7. ')' → logprob: -6.624664783477783
    8. '_' → logprob: -6.749664783477783
    9. 's' → logprob: -6.999664783477783
    10. '   ' → logprob: -7.124664783477783

Token 263: ' from' (ID: 591)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.01496169064193964
    2. ' from' → logprob: -4.2649617195129395
    3. '=' → logprob: -7.7649617195129395
    4. '	from' → logprob: -9.264961242675781
    5. ' =' → logprob: -9.764961242675781
    6. '       ' → logprob: -10.014961242675781
    7. '   ' → logprob: -10.139961242675781
    8. 'f' → logprob: -10.264961242675781
    9. '(self' → logprob: -10.264961242675781
    10. 'self' → logprob: -10.889961242675781

Token 264: ' K' (ID: 658)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0006351164192892611
    2. ' self' → logprob: -7.375635147094727
    3. '(self' → logprob: -12.625635147094727
    4. '[self' → logprob: -12.750635147094727
    5. '   ' → logprob: -14.500635147094727
    6. 'K' → logprob: -14.500635147094727
    7. '0' → logprob: -14.750635147094727
    8. '	self' → logprob: -15.250635147094727
    9. '1' → logprob: -15.875635147094727
    10. '_self' → logprob: -16.500635147094727

Token 265: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.26030102372169495
    2. 'to' → logprob: -1.5103009939193726
    3. '*' → logprob: -5.760301113128662
    4. '<|end|>' → logprob: -5.885301113128662
    5. ',' → logprob: -6.635301113128662
    6. ' ' → logprob: -8.010300636291504
    7. ' *' → logprob: -8.385300636291504
    8. '1' → logprob: -9.635300636291504
    9. '```' → logprob: -9.635300636291504
    10. '<|end|>' → logprob: -9.760300636291504

Token 266: ' K' (ID: 658)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.012885245494544506
    2. 'K' → logprob: -5.012885093688965
    3. ' self' → logprob: -5.137885093688965
    4. ' K' → logprob: -8.512885093688965
    5. '(self' → logprob: -10.137885093688965
    6. 'N' → logprob: -10.637885093688965
    7. '(K' → logprob: -12.262885093688965
    8. ' ' → logprob: -13.637885093688965
    9. ' (' → logprob: -13.637885093688965
    10. '   ' → logprob: -13.637885093688965

Token 267: '*N' (ID: 107360)
  Prédit: '*N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*N' → logprob: -0.2260492593050003
    2. ' *' → logprob: -2.3510491847991943
    3. '*' → logprob: -2.4760491847991943
    4. '*self' → logprob: -4.101049423217773
    5. 'N' → logprob: -5.101049423217773
    6. '*K' → logprob: -8.726049423217773
    7. 'self' → logprob: -9.476049423217773
    8. '*(' → logprob: -10.976049423217773
    9. '```' → logprob: -11.476049423217773
    10. '<|end|>' → logprob: -11.601049423217773

Token 268: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01315305195748806
    2. '
' → logprob: -4.638153076171875
    3. 'def' → logprob: -7.138153076171875
    4. ',' → logprob: -7.513153076171875
    5. 'self' → logprob: -7.513153076171875
    6. '   ' → logprob: -7.763153076171875
    7. '<|end|>' → logprob: -8.138153076171875
    8. '        
' → logprob: -8.263153076171875
    9. ' self' → logprob: -9.013153076171875
    10. ':
' → logprob: -10.013153076171875

Token 269: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006376196397468448
    2. 'self' → logprob: -8.250638008117676
    3. '   ' → logprob: -9.125638008117676
    4. ',' → logprob: -9.375638008117676
    5. '<|end|>' → logprob: -9.750638008117676
    6. 'def' → logprob: -10.375638008117676
    7. '        
' → logprob: -10.875638008117676
    8. '
' → logprob: -11.000638008117676
    9. ' self' → logprob: -11.500638008117676
    10. ')' → logprob: -12.125638008117676

Token 270: ' #' (ID: 1069)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.37552911043167114
    2. '       ' → logprob: -1.5005290508270264
    3. ' self' → logprob: -2.5005290508270264
    4. 'from' → logprob: -5.3755292892456055
    5. 'counts' → logprob: -6.5005292892456055
    6. ' from' → logprob: -6.8755292892456055
    7. ' counts' → logprob: -8.625529289245605
    8. 'def' → logprob: -8.625529289245605
    9. 'distribution' → logprob: -9.375529289245605
    10. 'count' → logprob: -9.500529289245605

Token 271: ' Use' (ID: 7649)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.3554147779941559
    2. ' self' → logprob: -2.480414867401123
    3. 'from' → logprob: -2.605414867401123
    4. '       ' → logprob: -2.855414867401123
    5. 'counts' → logprob: -2.855414867401123
    6. ' from' → logprob: -4.730414867401123
    7. 'dp' → logprob: -5.355414867401123
    8. ' counts' → logprob: -5.605414867401123
    9. 'max' → logprob: -6.230414867401123
    10. 'distribution' → logprob: -6.605414867401123

Token 272: ' dynamic' (ID: 14012)
  Prédit: 'dynamic'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dynamic' → logprob: -0.5146753191947937
    2. ' dynamic' → logprob: -1.2646753787994385
    3. 'self' → logprob: -2.5146753787994385
    4. 'from' → logprob: -4.514675140380859
    5. 'in' → logprob: -4.764675140380859
    6. 'a' → logprob: -5.514675140380859
    7. ' self' → logprob: -5.639675140380859
    8. 'com' → logprob: -6.014675140380859
    9. 'dp' → logprob: -6.014675140380859
    10. 'collections' → logprob: -6.389675140380859

Token 273: ' programming' (ID: 23238)
  Prédit: ' programming'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' programming' → logprob: -0.0027680248022079468
    2. 'program' → logprob: -6.252768039703369
    3. '_program' → logprob: -7.127768039703369
    4. '_' → logprob: -11.502767562866211
    5. 'Programming' → logprob: -11.752767562866211
    6. '   ' → logprob: -12.002767562866211
    7. ' programmation' → logprob: -12.377767562866211
    8. 'import' → logprob: -13.752767562866211
    9. ' programación' → logprob: -13.752767562866211
    10. '    ' → logprob: -13.752767562866211

Token 274: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.017448950558900833
    2. '
' → logprob: -5.392448902130127
    3. ',' → logprob: -5.642448902130127
    4. ':' → logprob: -5.642448902130127
    5. 'self' → logprob: -6.392448902130127
    6. '   ' → logprob: -7.017448902130127
    7. '        
' → logprob: -7.767448902130127
    8. '<|end|>' → logprob: -7.892448902130127
    9. 'def' → logprob: -8.017449378967285
    10. ':
' → logprob: -8.017449378967285

Token 275: ' the' (ID: 290)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.6845638751983643
    2. 'self' → logprob: -1.1845638751983643
    3. ' k' → logprob: -3.0595638751983643
    4. '_' → logprob: -3.5595638751983643
    5. ' _' → logprob: -3.5595638751983643
    6. 'k' → logprob: -3.6845638751983643
    7. ' i' → logprob: -4.184563636779785
    8. 'i' → logprob: -4.684563636779785
    9. ' counting' → logprob: -5.184563636779785
    10. '_k' → logprob: -5.309563636779785

Token 276: ' counts' (ID: 28991)
  Prédit: 'counts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'counts' → logprob: -1.723008155822754
    2. ' counts' → logprob: -1.848008155822754
    3. '_counts' → logprob: -2.223008155822754
    4. 'range' → logprob: -2.598008155822754
    5. ' range' → logprob: -2.973008155822754
    6. ' next' → logprob: -3.098008155822754
    7. ' K' → logprob: -3.098008155822754
    8. '_' → logprob: -3.098008155822754
    9. 'self' → logprob: -3.098008155822754
    10. 'K' → logprob: -3.473008155822754

Token 277: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12110640108585358
    2. '
' → logprob: -3.1211063861846924
    3. '<|end|>' → logprob: -3.2461063861846924
    4. '   ' → logprob: -3.7461063861846924
    5. '<|end|>' → logprob: -6.4961066246032715
    6. ',' → logprob: -6.7461066246032715
    7. '        
' → logprob: -7.2461066246032715
    8. '	' → logprob: -7.3711066246032715
    9. '  
' → logprob: -7.7461066246032715
    10. ' ' → logprob: -7.7461066246032715

Token 278: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13399507105350494
    2. '   ' → logprob: -2.1339950561523438
    3. '<|end|>' → logprob: -6.383995056152344
    4. '    
' → logprob: -7.133995056152344
    5. '        
' → logprob: -7.508995056152344
    6. '    ' → logprob: -7.508995056152344
    7. '
' → logprob: -7.508995056152344
    8. 'self' → logprob: -7.758995056152344
    9. ' ' → logprob: -8.008995056152344
    10. ')' → logprob: -8.008995056152344

Token 279: ' counts' (ID: 28991)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.4479977786540985
    2. 'dp' → logprob: -1.322997808456421
    3. '       ' → logprob: -2.947997808456421
    4. ' self' → logprob: -3.572997808456421
    5. 'counts' (adapté à ' counts') → logprob: -4.447997570037842
    6. ' dp' → logprob: -6.322997570037842
    7. ' counts' → logprob: -8.072998046875
    8. 'from' → logprob: -8.072998046875
    9. ' from' → logprob: -10.447998046875
    10. 'count' → logprob: -10.822998046875

Token 280: '_prev' (ID: 60491)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10020915418863297
    2. '=' → logprob: -2.3502092361450195
    3. '=[' → logprob: -13.85020923614502
    4. '	' → logprob: -14.85020923614502
    5. '   ' → logprob: -15.22520923614502
    6. ' =[' → logprob: -15.22520923614502
    7. '[' → logprob: -15.47520923614502
    8. ' ' → logprob: -15.47520923614502
    9. ':' → logprob: -16.350208282470703
    10. '  ' → logprob: -16.975208282470703

Token 281: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3868749439716339
    2. ' =' → logprob: -1.1368749141693115
    3. '=[' → logprob: -14.01187515258789
    4. ':' → logprob: -14.01187515258789
    5. ' =[' → logprob: -14.13687515258789
    6. '[' → logprob: -14.26187515258789
    7. ',' → logprob: -14.63687515258789
    8. '=[]' → logprob: -16.88687515258789
    9. '=None' → logprob: -17.01187515258789
    10. ' ' → logprob: -17.01187515258789

Token 282: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.31343188881874084
    2. '{' → logprob: -1.3134318590164185
    3. ' [' → logprob: -9.063431739807129
    4. ' {' → logprob: -10.313431739807129
    5. 'None' → logprob: -11.188431739807129
    6. '[K' → logprob: -12.938431739807129
    7. '{k' → logprob: -13.313431739807129
    8. '   ' → logprob: -14.188431739807129
    9. '[{' → logprob: -14.438431739807129
    10. '[self' → logprob: -14.688431739807129

Token 283: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.061979785561561584
    2. '0' → logprob: -2.8119797706604004
    3. '[' → logprob: -12.311980247497559
    4. ']' → logprob: -12.936980247497559
    5. '(' → logprob: -13.561980247497559
    6. ' ' → logprob: -13.561980247497559
    7. 'None' → logprob: -14.311980247497559
    8. 'int' → logprob: -14.999480247497559
    9. '
' → logprob: -14.999480247497559
    10. '*' → logprob: -15.436980247497559

Token 284: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.005533861927688122
    2. ']+' → logprob: -5.505533695220947
    3. ',' → logprob: -6.880533695220947
    4. ']*(' → logprob: -8.380534172058105
    5. ' ]' → logprob: -8.755534172058105
    6. ' for' → logprob: -10.880534172058105
    7. ']*' → logprob: -12.130534172058105
    8. ' *' → logprob: -12.880534172058105
    9. '0' → logprob: -13.630534172058105
    10. ',
' → logprob: -13.755534172058105

Token 285: ' *' (ID: 425)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.18965592980384827
    2. ',' → logprob: -2.3146560192108154
    3. ' +' → logprob: -3.1896560192108154
    4. ']+' → logprob: -3.6896560192108154
    5. '+' → logprob: -5.314655780792236
    6. ' for' → logprob: -6.939655780792236
    7. '+[' → logprob: -7.689655780792236
    8. ' ]' → logprob: -8.064656257629395
    9. 'for' → logprob: -8.439656257629395
    10. ',
' → logprob: -8.564656257629395

Token 286: ' (' (ID: 350)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.04257854074239731
    2. '(' → logprob: -3.6675784587860107
    3. '((' → logprob: -4.16757869720459
    4. '(K' → logprob: -8.41757869720459
    5. ' (' → logprob: -8.54257869720459
    6. '1' → logprob: -9.16757869720459
    7. '0' → logprob: -10.29257869720459
    8. '(max' → logprob: -10.41757869720459
    9. 'self' → logprob: -11.04257869720459
    10. '(N' → logprob: -11.16757869720459

Token 287: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.06227676570415497
    2. '(self' → logprob: -2.812276840209961
    3. ' self' → logprob: -9.312276840209961
    4. '((' → logprob: -9.437276840209961
    5. ' (' → logprob: -9.812276840209961
    6. '(' → logprob: -9.937276840209961
    7. '1' → logprob: -11.187276840209961
    8. '[self' → logprob: -11.687276840209961
    9. '0' → logprob: -11.812276840209961
    10. '   ' → logprob: -13.437276840209961

Token 288: '._' (ID: 2697)
  Prédit: '.N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.N' → logprob: -1.0056965351104736
    2. 'self' → logprob: -1.1306965351104736
    3. '.K' → logprob: -1.5056965351104736
    4. '(self' → logprob: -3.5056965351104736
    5. '._' → logprob: -4.0056962966918945
    6. '_N' → logprob: -4.6306962966918945
    7. '_max' → logprob: -4.7556962966918945
    8. ' ' → logprob: -5.6306962966918945
    9. '   ' → logprob: -5.6306962966918945
    10. 'K' → logprob: -5.8806962966918945

Token 289: 'max' (ID: 3228)
  Prédit: 'max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.0012324919225648046
    2. 'min' → logprob: -6.876232624053955
    3. 'K' → logprob: -9.001232147216797
    4. 'N' → logprob: -10.376232147216797
    5. ' max' → logprob: -11.126232147216797
    6. '(max' → logprob: -11.876232147216797
    7. 'init' → logprob: -12.001232147216797
    8. 'm' → logprob: -13.001232147216797
    9. '   ' → logprob: -13.001232147216797
    10. ')' → logprob: -13.313732147216797

Token 290: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.9618274569511414
    2. ' -' → logprob: -1.0868275165557861
    3. '-' → logprob: -1.3368275165557861
    4. ' +' → logprob: -4.086827278137207
    5. '-K' → logprob: -7.961827278137207
    6. '-min' → logprob: -8.711827278137207
    7. '-_' → logprob: -8.961827278137207
    8. ' ' → logprob: -9.336827278137207
    9. '-N' → logprob: -9.461827278137207
    10. '-self' → logprob: -9.961827278137207

Token 291: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001439459010725841
    2. ' ' → logprob: -8.875144004821777
    3. '2' → logprob: -12.625144004821777
    4. '   ' → logprob: -14.375144004821777
    5. '  ' → logprob: -16.56264305114746
    6. '    ' → logprob: -17.43764305114746
    7. 'self' → logprob: -17.75014305114746
    8. '
' → logprob: -17.75014305114746
    9. '10' → logprob: -18.25014305114746
    10. '     ' → logprob: -18.31264305114746

Token 292: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6405310816480778e-05
    2. ' ' → logprob: -11.375016212463379
    3. '2' → logprob: -12.250016212463379
    4. '   ' → logprob: -16.875017166137695
    5. '10' → logprob: -17.250017166137695
    6. '
' → logprob: -17.687517166137695
    7. '+' → logprob: -18.562517166137695
    8. '(' → logprob: -18.625017166137695
    9. '１' → logprob: -18.687517166137695
    10. '  ' → logprob: -18.750017166137695

Token 293: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20154725015163422
    2. ')
' → logprob: -1.7015472650527954
    3. ' )
' → logprob: -10.076547622680664
    4. ' )' → logprob: -10.076547622680664
    5. ')
' → logprob: -10.951547622680664
    6. '       ' → logprob: -10.951547622680664
    7. ')

' → logprob: -11.451547622680664
    8. '   ' → logprob: -13.451547622680664
    9. ')\' → logprob: -14.076547622680664
    10. '),' → logprob: -15.326547622680664

Token 294: '       ' (ID: 309)
  Prédit: 'counts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'counts' → logprob: -0.14888478815555573
    2. ' counts' → logprob: -2.5238847732543945
    3. '       ' → logprob: -3.0238847732543945
    4. '[' → logprob: -5.5238847732543945
    5. ' for' → logprob: -6.6488847732543945
    6. '<|end|>' → logprob: -6.8988847732543945
    7. 'count' → logprob: -7.1488847732543945
    8. 'for' → logprob: -7.7738847732543945
    9. '	count' → logprob: -7.7738847732543945
    10. '_counts' → logprob: -8.023884773254395

Token 295: ' for' (ID: 395)
  Prédit: 'counts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'counts' → logprob: -0.09110210090875626
    2. 'for' (adapté à ' for') → logprob: -2.466102123260498
    3. '       ' → logprob: -6.966102123260498
    4. ' counts' → logprob: -7.466102123260498
    5. ' for' → logprob: -7.591102123260498
    6. 'count' → logprob: -9.84110164642334
    7. '0' → logprob: -10.34110164642334
    8. '1' → logprob: -11.09110164642334
    9. '[' → logprob: -11.46610164642334
    10. 'self' → logprob: -11.59110164642334

Token 296: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.048856910318136215
    2. 'face' → logprob: -4.298856735229492
    3. 'v' → logprob: -4.673856735229492
    4. 's' → logprob: -5.173856735229492
    5. 'value' → logprob: -5.298856735229492
    6. 'x' → logprob: -5.298856735229492
    7. ' i' → logprob: -5.548856735229492
    8. ' face' → logprob: -6.673856735229492
    9. 'val' → logprob: -6.673856735229492
    10. 'k' → logprob: -7.298856735229492

Token 297: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03728308901190758
    2. 'in' → logprob: -3.537283182144165
    3. 'n' → logprob: -5.162282943725586
    4. '=' → logprob: -6.912282943725586
    5. 's' → logprob: -9.037282943725586
    6. ' =' → logprob: -9.037282943725586
    7. ' ' → logprob: -9.162282943725586
    8. ')' → logprob: -9.912282943725586
    9. '   ' → logprob: -10.162282943725586
    10. 'd' → logprob: -10.162282943725586

Token 298: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.17976711690425873
    2. ' range' → logprob: -1.80476713180542
    3. '	range' → logprob: -11.804766654968262
    4. '[' → logprob: -12.304766654968262
    5. '(range' → logprob: -12.304766654968262
    6. ' ' → logprob: -12.804766654968262
    7. '1' → logprob: -13.429766654968262
    8. '   ' → logprob: -14.179766654968262
    9. '  ' → logprob: -15.554766654968262
    10. '.range' → logprob: -15.929766654968262

Token 299: '(' (ID: 7)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.26298731565475464
    2. '(' → logprob: -1.6379873752593994
    3. '(self' → logprob: -3.8879873752593994
    4. 'self' → logprob: -4.13798713684082
    5. '(K' → logprob: -8.63798713684082
    6. 'K' → logprob: -9.38798713684082
    7. ' ' → logprob: -9.63798713684082
    8. ' self' → logprob: -10.13798713684082
    9. ' (' → logprob: -10.88798713684082
    10. '0' → logprob: -11.38798713684082

Token 300: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.017014600336551666
    2. 'self' → logprob: -4.142014503479004
    3. 'K' → logprob: -7.017014503479004
    4. '(' → logprob: -10.517014503479004
    5. '(self' → logprob: -11.517014503479004
    6. '0' → logprob: -11.517014503479004
    7. ' ' → logprob: -11.642014503479004
    8. ' self' → logprob: -11.767014503479004
    9. ')' → logprob: -12.017014503479004
    10. '(K' → logprob: -12.267014503479004

Token 301: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003056023269891739
    2. ',self' → logprob: -6.128056049346924
    3. ' ,' → logprob: -7.128056049346924
    4. 'self' → logprob: -10.628055572509766
    5. '1' → logprob: -11.628055572509766
    6. '   ' → logprob: -12.128055572509766
    7. ',
' → logprob: -12.128055572509766
    8. ',K' → logprob: -12.753055572509766
    9. '[self' → logprob: -12.878055572509766
    10. '):
' → logprob: -13.003055572509766

Token 302: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0017090904293581843
    2. 'N' → logprob: -6.501708984375
    3. '=self' → logprob: -9.751708984375
    4. ' self' → logprob: -10.001708984375
    5. '(self' → logprob: -10.376708984375
    6. '1' → logprob: -10.376708984375
    7. '=' → logprob: -12.126708984375
    8. '11' → logprob: -12.251708984375
    9. ')' → logprob: -12.376708984375
    10. 'n' → logprob: -12.376708984375

Token 303: '.N' (ID: 4439)
  Prédit: '.K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.K' → logprob: -0.524275541305542
    2. '.N' → logprob: -0.899275541305542
    3. 'K' → logprob: -7.524275779724121
    4. '._' → logprob: -8.024275779724121
    5. 'N' → logprob: -8.899275779724121
    6. 'self' → logprob: -9.274275779724121
    7. '_K' → logprob: -11.399275779724121
    8. ')' → logprob: -11.774275779724121
    9. '[' → logprob: -12.524275779724121
    10. '.' → logprob: -12.649275779724121

Token 304: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.14105740189552307
    2. ' +' → logprob: -2.2660574913024902
    3. '):' → logprob: -3.7660574913024902
    4. '):
' → logprob: -5.51605749130249
    5. ' ):' → logprob: -7.76605749130249
    6. '[' → logprob: -9.891057014465332
    7. ' ):
' → logprob: -9.891057014465332
    8. '   ' → logprob: -10.266057014465332
    9. ')' → logprob: -10.391057014465332
    10. '1' → logprob: -10.516057014465332

Token 305: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.157039049663581e-05
    2. ' ' → logprob: -9.875051498413086
    3. ')' → logprob: -17.500051498413086
    4. '   ' → logprob: -18.500051498413086
    5. '```' → logprob: -18.875051498413086
    6. '  ' → logprob: -19.875051498413086
    7. '2' → logprob: -20.062551498413086
    8. '):
' → logprob: -20.250051498413086
    9. '
' → logprob: -20.687551498413086
    10. '۱' → logprob: -20.875051498413086

Token 306: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.5716304410016164e-05
    2. ' ' → logprob: -10.250035285949707
    3. ')' → logprob: -16.375036239624023
    4. '+' → logprob: -17.250036239624023
    5. '):
' → logprob: -17.687536239624023
    6. '   ' → logprob: -17.750036239624023
    7. '```' → logprob: -17.812536239624023
    8. '
' → logprob: -18.000036239624023
    9. '

' → logprob: -18.125036239624023
    10. '2' → logprob: -18.312536239624023

Token 307: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.14291243255138397
    2. '):
' → logprob: -2.0179123878479004
    3. ':' → logprob: -9.267912864685059
    4. ' ):' → logprob: -9.642912864685059
    5. ' ):
' → logprob: -10.517912864685059
    6. ')' → logprob: -10.517912864685059
    7. '):
' → logprob: -11.017912864685059
    8. '       ' → logprob: -13.017912864685059
    9. '   ' → logprob: -13.392912864685059
    10. ']:' → logprob: -13.642912864685059

Token 308: '           ' (ID: 352)
  Prédit: ' counts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' counts' → logprob: -0.018974097445607185
    2. 'counts' → logprob: -4.143974304199219
    3. '           ' → logprob: -6.643974304199219
    4. '       ' → logprob: -7.018974304199219
    5. '_counts' → logprob: -7.768974304199219
    6. '               ' → logprob: -8.893974304199219
    7. '[count' → logprob: -10.393974304199219
    8. '[' → logprob: -10.643974304199219
    9. '<|end|>' → logprob: -11.143974304199219
    10. '   ' → logprob: -11.268974304199219

Token 309: ' counts' (ID: 28991)
  Prédit: ' counts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' counts' → logprob: -0.08911285549402237
    2. 'counts' (adapté à ' counts') → logprob: -2.4641127586364746
    3. '   ' → logprob: -9.839113235473633
    4. '           ' → logprob: -10.089113235473633
    5. 'count' → logprob: -10.714113235473633
    6. '       ' → logprob: -10.964113235473633
    7. '               ' → logprob: -11.089113235473633
    8. '_counts' → logprob: -11.214113235473633
    9. '	count' → logprob: -12.214113235473633
    10. 'Counts' → logprob: -13.714113235473633

Token 310: '_prev' (ID: 60491)
  Prédit: '_prev'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prev' → logprob: -2.47495681833243e-05
    2. '[' → logprob: -11.750024795532227
    3. 'prev' → logprob: -12.125024795532227
    4. '_previous' → logprob: -12.750024795532227
    5. '[_' → logprob: -13.250024795532227
    6. '_' → logprob: -13.375024795532227
    7. '```' → logprob: -14.000024795532227
    8. 'Prev' → logprob: -14.125024795532227
    9. '_next' → logprob: -14.750024795532227
    10. ' _' → logprob: -15.000024795532227

Token 311: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0007258945843204856
    2. '[' → logprob: -7.250725746154785
    3. ' [' → logprob: -11.750725746154785
    4. '[count' → logprob: -12.125725746154785
    5. 'i' → logprob: -14.000725746154785
    6. '][' → logprob: -15.125725746154785
    7. ')[' → logprob: -15.250725746154785
    8. ' i' → logprob: -15.500725746154785
    9. '[c' → logprob: -15.875725746154785
    10. ']' → logprob: -16.2507266998291

Token 312: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.12703688442707062
    2. '=' → logprob: -2.5020368099212646
    3. ']=' → logprob: -3.7520368099212646
    4. ' =' → logprob: -4.627037048339844
    5. ' ]' → logprob: -6.002037048339844
    6. ']+=' → logprob: -6.502037048339844
    7. ')' → logprob: -9.877037048339844
    8. ' +=' → logprob: -10.002037048339844
    9. '+=' → logprob: -11.002037048339844
    10. '[' → logprob: -11.002037048339844

Token 313: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.029752103611826897
    2. ' =' → logprob: -3.529752016067505
    3. '+=' → logprob: -13.904751777648926
    4. ' +=' → logprob: -14.404751777648926
    5. '=
' → logprob: -16.404752731323242
    6. ']=' → logprob: -16.404752731323242
    7. ' ' → logprob: -17.029752731323242
    8. ']' → logprob: -17.404752731323242
    9. '=int' → logprob: -18.029752731323242
    10. ' =
' → logprob: -18.154752731323242

Token 314: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.4391956685576588e-05
    2. ' ' → logprob: -10.625024795532227
    3. '   ' → logprob: -18.750024795532227
    4. '  ' → logprob: -20.000024795532227
    5. '0' → logprob: -20.062524795532227
    6. '```' → logprob: -20.125024795532227
    7. '۱' → logprob: -21.125024795532227
    8. '
' → logprob: -21.250024795532227
    9. '`' → logprob: -21.500024795532227
    10. ' ' → logprob: -21.750024795532227

Token 315: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.000001907348633
    3. '0' → logprob: -19.375001907348633
    4. '   ' → logprob: -20.500001907348633
    5. '```' → logprob: -21.875001907348633
    6. '۱' → logprob: -22.125001907348633
    7. '  ' → logprob: -22.500001907348633
    8. '`' → logprob: -22.812501907348633
    9. '１' → logprob: -23.125001907348633
    10. '१' → logprob: -23.562501907348633

Token 316: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.13808049261569977
    2. '       ' → logprob: -2.138080596923828
    3. '<|end|>' → logprob: -4.888080596923828
    4. '        
' → logprob: -6.513080596923828
    5. '  
' → logprob: -7.263080596923828
    6. '\n' → logprob: -7.888080596923828
    7. ' 
' → logprob: -8.138080596923828
    8. '' → logprob: -8.763080596923828
    9. '    
' → logprob: -8.888080596923828
    10. '<|end|>' → logprob: -9.263080596923828

Token 317: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.04640849679708481
    2. '       ' → logprob: -3.2964084148406982
    3. '<|end|>' → logprob: -5.046408653259277
    4. '        
' → logprob: -6.921408653259277
    5. '\n' → logprob: -8.421408653259277
    6. '    
' → logprob: -9.046408653259277
    7. '
' → logprob: -9.171408653259277
    8. '  
' → logprob: -9.171408653259277
    9. '' → logprob: -9.671408653259277
    10. '<|end|>' → logprob: -10.046408653259277

Token 318: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007062380667775869
    2. ' for' → logprob: -5.1320624351501465
    3. '
' → logprob: -7.8820624351501465
    4. '   ' → logprob: -8.507061958312988
    5. 'for' (adapté à ' for') → logprob: -8.632061958312988
    6. ' counts' → logprob: -9.007061958312988
    7. '<|end|>' → logprob: -9.382061958312988
    8. '        
' → logprob: -9.757061958312988
    9. 'counts' → logprob: -10.757061958312988
    10. ')' → logprob: -11.507061958312988

Token 319: ' _' (ID: 1175)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.596685528755188
    2. '_' → logprob: -1.846685528755188
    3. '_k' → logprob: -1.971685528755188
    4. ' k' → logprob: -2.2216854095458984
    5. ' _' → logprob: -3.9716854095458984
    6. ' step' → logprob: -5.596685409545898
    7. ' roll' → logprob: -5.721685409545898
    8. '_roll' → logprob: -5.846685409545898
    9. ' rolls' → logprob: -5.846685409545898
    10. 'step' → logprob: -5.971685409545898

Token 320: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0010395983699709177
    2. 'in' → logprob: -6.876039505004883
    3. ' ' → logprob: -12.501039505004883
    4. ' i' → logprob: -13.876039505004883
    5. 'i' → logprob: -14.251039505004883
    6. 'range' → logprob: -14.626039505004883
    7. '	in' → logprob: -15.626039505004883
    8. '   ' → logprob: -16.126039505004883
    9. 'count' → logprob: -16.376039505004883
    10. ',' → logprob: -16.376039505004883

Token 321: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0003368926409166306
    2. ' range' → logprob: -8.000336647033691
    3. '(range' → logprob: -15.000336647033691
    4. '	range' → logprob: -15.125336647033691
    5. '   ' → logprob: -15.750336647033691
    6. 'self' → logprob: -16.375337600708008
    7. '[' → logprob: -16.625337600708008
    8. 'rang' → logprob: -16.625337600708008
    9. ')' → logprob: -16.750337600708008
    10. '```' → logprob: -17.000337600708008

Token 322: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.02982119657099247
    2. '(self' → logprob: -3.5298211574554443
    3. '2' → logprob: -9.904821395874023
    4. '(K' → logprob: -10.904821395874023
    5. '1' → logprob: -13.779821395874023
    6. 'self' → logprob: -13.904821395874023
    7. '(k' → logprob: -15.654821395874023
    8. '(s' → logprob: -16.154821395874023
    9. ' (' → logprob: -16.404821395874023
    10. '((' → logprob: -17.154821395874023

Token 323: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.1567959189414978
    2. '1' → logprob: -2.1567959785461426
    3. 'self' → logprob: -3.5317959785461426
    4. '(self' → logprob: -9.156795501708984
    5. '(' → logprob: -10.531795501708984
    6. 'K' → logprob: -11.156795501708984
    7. '   ' → logprob: -11.531795501708984
    8. ' self' → logprob: -12.031795501708984
    9. ' ' → logprob: -12.031795501708984
    10. ')' → logprob: -13.656795501708984

Token 324: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005422888323664665
    2. ' ,' → logprob: -5.255423069000244
    3. '):' → logprob: -9.130422592163086
    4. ',K' → logprob: -10.005422592163086
    5. '):
' → logprob: -11.130422592163086
    6. ',self' → logprob: -12.505422592163086
    7. ' ):' → logprob: -12.755422592163086
    8. ':' → logprob: -13.255422592163086
    9. '   ' → logprob: -13.255422592163086
    10. ',
' → logprob: -13.380422592163086

Token 325: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.023249903693795204
    2. ' self' → logprob: -3.773249864578247
    3. '(self' → logprob: -13.273249626159668
    4. '       ' → logprob: -13.648249626159668
    5. '   ' → logprob: -14.648249626159668
    6. '	self' → logprob: -14.773249626159668
    7. ' ' → logprob: -15.523249626159668
    8. '=self' → logprob: -15.773249626159668
    9. '[self' → logprob: -16.273250579833984
    10. '    ' → logprob: -16.648250579833984

Token 326: '.K' (ID: 14475)
  Prédit: '.K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.K' → logprob: -0.002871207892894745
    2. 'K' → logprob: -5.877871036529541
    3. ' K' → logprob: -10.3778715133667
    4. ',K' → logprob: -11.5028715133667
    5. '	K' → logprob: -11.7528715133667
    6. '.' → logprob: -11.8778715133667
    7. '_K' → logprob: -12.5028715133667
    8. ' .' → logprob: -13.2528715133667
    9. '<K' → logprob: -14.0028715133667
    10. '._' → logprob: -14.3778715133667

Token 327: ' +' (ID: 659)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.08873669803142548
    2. ' ):' → logprob: -2.9637367725372314
    3. '):
' → logprob: -3.4637367725372314
    4. ' ):
' → logprob: -6.838736534118652
    5. ':' → logprob: -7.838736534118652
    6. '+' → logprob: -7.963736534118652
    7. ' +' → logprob: -9.838736534118652
    8. ' :' → logprob: -10.088736534118652
    9. '   ' → logprob: -11.213736534118652
    10. ')' → logprob: -11.463736534118652

Token 328: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00014013137842994183
    2. ' ' → logprob: -8.875140190124512
    3. '   ' → logprob: -15.500140190124512
    4. '2' → logprob: -18.375139236450195
    5. ')' → logprob: -18.875139236450195
    6. '  ' → logprob: -19.125139236450195
    7. '    ' → logprob: -19.375139236450195
    8. '):
' → logprob: -19.500139236450195
    9. '```' → logprob: -19.500139236450195
    10. '
' → logprob: -19.625139236450195

Token 329: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.318681188422488e-05
    2. ' ' → logprob: -11.25001335144043
    3. '   ' → logprob: -16.00001335144043
    4. '):
' → logprob: -17.62501335144043
    5. '
' → logprob: -18.12501335144043
    6. '2' → logprob: -18.25001335144043
    7. ')' → logprob: -18.62501335144043
    8. '  ' → logprob: -19.50001335144043
    9. '):' → logprob: -19.62501335144043
    10. '۱' → logprob: -19.75001335144043

Token 330: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.07936966419219971
    2. '):' → logprob: -2.57936954498291
    3. ' ):
' → logprob: -7.82936954498291
    4. ':' → logprob: -10.45436954498291
    5. '):
' → logprob: -10.57936954498291
    6. ' ):' → logprob: -10.82936954498291
    7. ':
' → logprob: -12.45436954498291
    8. '       ' → logprob: -13.32936954498291
    9. ')' → logprob: -13.70436954498291
    10. '):

' → logprob: -14.57936954498291

Token 331: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05141715332865715
    2. ' counts' → logprob: -3.176417112350464
    3. 'counts' → logprob: -4.801417350769043
    4. 'count' → logprob: -9.801417350769043
    5. '_counts' → logprob: -10.676417350769043
    6. '               ' → logprob: -11.426417350769043
    7. '	       ' → logprob: -11.551417350769043
    8. '          ' → logprob: -11.551417350769043
    9. ',' → logprob: -11.801417350769043
    10. '       ' → logprob: -11.801417350769043

Token 332: ' counts' (ID: 28991)
  Prédit: 'counts'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'counts' (adapté à ' counts') → logprob: -0.048775508999824524
    2. ' counts' → logprob: -3.0487754344940186
    3. '           ' → logprob: -8.923775672912598
    4. '       ' → logprob: -10.673775672912598
    5. '   ' → logprob: -10.923775672912598
    6. 'count' → logprob: -11.548775672912598
    7. ' ' → logprob: -13.298775672912598
    8. '               ' → logprob: -13.423775672912598
    9. '_counts' → logprob: -14.423775672912598
    10. '  ' → logprob: -16.17377471923828

Token 333: '_curr' (ID: 92432)
  Prédit: '_curr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_curr' → logprob: -0.13627338409423828
    2. '_next' → logprob: -3.1362733840942383
    3. '_cur' → logprob: -3.3862733840942383
    4. '_new' → logprob: -3.3862733840942383
    5. '_current' → logprob: -4.136273384094238
    6. '_' → logprob: -9.261273384094238
    7. '_counts' → logprob: -9.636273384094238
    8. '_now' → logprob: -10.136273384094238
    9. '_temp' → logprob: -10.136273384094238
    10. '_tmp' → logprob: -10.386273384094238

Token 334: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.020546209067106247
    2. '=' → logprob: -3.8955461978912354
    3. '[' → logprob: -13.270545959472656
    4. '=[' → logprob: -13.520545959472656
    5. ' ' → logprob: -14.645545959472656
    6. ' =[' → logprob: -14.645545959472656
    7. ')' → logprob: -15.770545959472656
    8. ' [' → logprob: -16.270545959472656
    9. ']' → logprob: -17.395545959472656
    10. '	' → logprob: -17.770545959472656

Token 335: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.03804171830415726
    2. ' [' → logprob: -3.288041830062866
    3. '   ' → logprob: -16.038042068481445
    4. ' ' → logprob: -16.163042068481445
    5. 'None' → logprob: -18.038042068481445
    6. '[]' → logprob: -18.038042068481445
    7. '  ' → logprob: -18.663042068481445
    8. '{' → logprob: -19.038042068481445
    9. '    ' → logprob: -19.288042068481445
    10. '([' → logprob: -19.413042068481445

Token 336: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.375000953674316
    3. ')' → logprob: -19.125
    4. '۰' → logprob: -19.125
    5. '[' → logprob: -19.5
    6. ']' → logprob: -19.75
    7. '   ' → logprob: -20.125
    8. '```' → logprob: -20.875
    9. 'None' → logprob: -21.5
    10. '000' → logprob: -21.5625

Token 337: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.05143311992287636
    2. ' *' → logprob: -3.0514330863952637
    3. '*' → logprob: -6.426433086395264
    4. ']*(' → logprob: -7.551433086395264
    5. ']*' → logprob: -7.926433086395264
    6. ' ]' → logprob: -8.551433563232422
    7. ')' → logprob: -9.676433563232422
    8. ' for' → logprob: -10.176433563232422
    9. '*(' → logprob: -10.926433563232422
    10. ' ' → logprob: -11.801433563232422

Token 338: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.20679596066474915
    2. '*' → logprob: -1.7067959308624268
    3. '*(' → logprob: -5.331796169281006
    4. ']' → logprob: -8.956795692443848
    5. ' (' → logprob: -9.206795692443848
    6. '(' → logprob: -9.831795692443848
    7. ')' → logprob: -9.831795692443848
    8. ']*(' → logprob: -9.956795692443848
    9. ']*' → logprob: -10.456795692443848
    10. '            ' → logprob: -10.706795692443848

Token 339: ' (' (ID: 350)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0007191036129370332
    2. ' (' → logprob: -7.25071907043457
    3. '(len' → logprob: -11.87571907043457
    4. '((' → logprob: -13.62571907043457
    5. '(' → logprob: -14.50071907043457
    6. '(this' → logprob: -14.75071907043457
    7. '   ' → logprob: -16.25071907043457
    8. '     ' → logprob: -17.75071907043457
    9. ' ' → logprob: -17.75071907043457
    10. '(super' → logprob: -18.25071907043457

Token 340: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0005211008246988058
    2. '(self' → logprob: -7.875521183013916
    3. ' self' → logprob: -8.875520706176758
    4. '[self' → logprob: -14.750520706176758
    5. '   ' → logprob: -15.000520706176758
    6. '
' → logprob: -16.125520706176758
    7. '       ' → logprob: -16.500520706176758
    8. '           ' → logprob: -16.875520706176758
    9. '	self' → logprob: -17.000520706176758
    10. ' ' → logprob: -17.125520706176758

Token 341: '._' (ID: 2697)
  Prédit: '_max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -0.014273387379944324
    2. '._' → logprob: -4.264273166656494
    3. ' _' → logprob: -9.389273643493652
    4. 'max' → logprob: -12.264273643493652
    5. '_' → logprob: -12.514273643493652
    6. '_MAX' → logprob: -12.639273643493652
    7. '{' → logprob: -13.389273643493652
    8. '   ' → logprob: -13.514273643493652
    9. '[_' → logprob: -13.514273643493652
    10. '_self' → logprob: -13.514273643493652

Token 342: 'max' (ID: 3228)
  Prédit: 'max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -5.512236498361744e-07
    2. ' max' → logprob: -14.750000953674316
    3. '_max' → logprob: -16.5
    4. '(max' → logprob: -18.5
    5. '	max' → logprob: -19.0
    6. 'min' → logprob: -20.625
    7. ')' → logprob: -21.0
    8. '.max' → logprob: -21.125
    9. ',max' → logprob: -21.5
    10. '[max' → logprob: -21.625

Token 343: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2519296407699585
    2. ' +' → logprob: -1.5019296407699585
    3. '+
' → logprob: -15.62692928314209
    4. ' +
' → logprob: -15.62692928314209
    5. ' ' → logprob: -16.626930236816406
    6. '()+' → logprob: -17.626930236816406
    7. ')' → logprob: -17.626930236816406
    8. '1' → logprob: -18.126930236816406
    9. '[' → logprob: -18.126930236816406
    10. '+)' → logprob: -18.126930236816406

Token 344: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00014072739577386528
    2. ' ' → logprob: -8.875141143798828
    3. '(' → logprob: -14.500141143798828
    4. '   ' → logprob: -15.750141143798828
    5. '+' → logprob: -16.750141143798828
    6. '           ' → logprob: -17.625141143798828
    7. '۱' → logprob: -18.187641143798828
    8. ' (' → logprob: -18.312641143798828
    9. '１' → logprob: -18.562641143798828
    10. '{' → logprob: -18.562641143798828

Token 345: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.153795766294934e-06
    2. ' ' → logprob: -12.125005722045898
    3. '+' → logprob: -14.375005722045898
    4. '0' → logprob: -17.3750057220459
    5. '   ' → logprob: -17.5000057220459
    6. '(' → logprob: -17.6250057220459
    7. '{' → logprob: -17.9375057220459
    8. '2' → logprob: -18.4375057220459
    9. '
' → logprob: -18.4375057220459
    10. ' +' → logprob: -18.4375057220459

Token 346: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2857874929904938
    2. ')
' → logprob: -1.5357874631881714
    3. '           ' → logprob: -3.410787582397461
    4. ' )' → logprob: -9.410787582397461
    5. '       ' → logprob: -9.535787582397461
    6. ' )
' → logprob: -10.035787582397461
    7. ')
' → logprob: -11.035787582397461
    8. '   ' → logprob: -11.160787582397461
    9. '               ' → logprob: -11.410787582397461
    10. '		' → logprob: -11.535787582397461

Token 347: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0005742399953305721
    2. ' for' → logprob: -7.750574111938477
    3. '		' → logprob: -10.250574111938477
    4. '	       ' → logprob: -10.375574111938477
    5. 'for' → logprob: -10.500574111938477
    6. '       ' → logprob: -11.000574111938477
    7. '   ' → logprob: -11.000574111938477
    8. '	   ' → logprob: -11.750574111938477
    9. '		   ' → logprob: -13.125574111938477
    10. '               ' → logprob: -13.250574111938477

Token 348: ' cum' (ID: 10023)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0033046200405806303
    2. ' for' → logprob: -5.753304481506348
    3. '           ' → logprob: -9.378304481506348
    4. '   ' → logprob: -10.253304481506348
    5. '       ' → logprob: -12.753304481506348
    6. 'range' → logprob: -13.378304481506348
    7. 'start' → logprob: -14.128304481506348
    8. 'min' → logprob: -14.628304481506348
    9. 'from' → logprob: -15.128304481506348
    10. '	for' → logprob: -15.128304481506348

Token 349: ' =' (ID: 314)
  Prédit: '_sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.21880251169204712
    2. '_counts' → logprob: -2.3438024520874023
    3. '_' → logprob: -3.3438024520874023
    4. 'sum' → logprob: -3.7188024520874023
    5. '[' → logprob: -4.593802452087402
    6. '   ' → logprob: -4.718802452087402
    7. ' =' → logprob: -4.968802452087402
    8. 'ulative' → logprob: -5.718802452087402
    9. 'u' → logprob: -5.843802452087402
    10. '=' → logprob: -6.343802452087402

Token 350: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.04955314099788666
    2. ' ' → logprob: -3.049553155899048
    3. '[' → logprob: -7.299552917480469
    4. ' [' → logprob: -8.174552917480469
    5. '   ' → logprob: -12.424552917480469
    6. '  ' → logprob: -13.299552917480469
    7. '    ' → logprob: -15.737052917480469
    8. '۰' → logprob: -15.862052917480469
    9. ' ' → logprob: -16.36205291748047
    10. '+' → logprob: -16.42455291748047

Token 351: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.026480501517653465
    2. '[' → logprob: -3.6514804363250732
    3. ' ' → logprob: -9.276480674743652
    4. ' [' → logprob: -9.401480674743652
    5. '[int' → logprob: -14.526480674743652
    6. '[]' → logprob: -15.526480674743652
    7. '[count' → logprob: -15.651480674743652
    8. '   ' → logprob: -15.776480674743652
    9. '[c' → logprob: -15.963980674743652
    10. '(' → logprob: -15.963980674743652

Token 352: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.29313862323760986
    2. ' ' → logprob: -2.2931385040283203
    3. '            ' → logprob: -2.9181385040283203
    4. ' for' → logprob: -3.4181385040283203
    5. '+' → logprob: -4.29313850402832
    6. '	       ' → logprob: -4.66813850402832
    7. '		' → logprob: -5.16813850402832
    8. '=' → logprob: -5.41813850402832
    9. 'for' → logprob: -5.41813850402832
    10. ' 		' → logprob: -5.66813850402832

Token 353: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.062185581773519516
    2. ' for' → logprob: -3.187185525894165
    3. 'for' → logprob: -4.312185764312744
    4. '	       ' → logprob: -5.687185764312744
    5. '		' → logprob: -7.187185764312744
    6. '       ' → logprob: -7.687185764312744
    7. '	for' → logprob: -7.937185764312744
    8. '	   ' → logprob: -8.937185287475586
    9. '	' → logprob: -9.312185287475586
    10. '   ' → logprob: -9.562185287475586

Token 354: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5781400799751282
    2. 'for' (adapté à ' for') → logprob: -1.0781400203704834
    3. '           ' → logprob: -2.3281400203704834
    4. 'i' → logprob: -8.203140258789062
    5. '   ' → logprob: -8.453140258789062
    6. ' i' → logprob: -8.578140258789062
    7. 'j' → logprob: -8.578140258789062
    8. '       ' → logprob: -8.953140258789062
    9. '	for' → logprob: -8.953140258789062
    10. '	       ' → logprob: -9.078140258789062

Token 355: ' s' (ID: 265)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.16728292405605316
    2. 's' → logprob: -2.167282819747925
    3. 'j' → logprob: -3.542282819747925
    4. 'val' → logprob: -5.792283058166504
    5. 'value' → logprob: -6.042283058166504
    6. 'v' → logprob: -6.042283058166504
    7. 'i' → logprob: -6.667283058166504
    8. 'sum' → logprob: -7.167283058166504
    9. ' x' → logprob: -8.292283058166504
    10. ' s' → logprob: -9.042283058166504

Token 356: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.007336607202887535
    2. 'in' → logprob: -5.007336616516113
    3. 's' → logprob: -7.507336616516113
    4. '=' → logprob: -11.007336616516113
    5. ' =' → logprob: -11.007336616516113
    6. ' ' → logprob: -11.757336616516113
    7. 'range' → logprob: -12.257336616516113
    8. '   ' → logprob: -12.632336616516113
    9. '	in' → logprob: -13.132336616516113
    10. ' s' → logprob: -13.257336616516113

Token 357: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0004324573092162609
    2. ' range' → logprob: -7.75043249130249
    3. '(range' → logprob: -13.375432014465332
    4. '   ' → logprob: -15.875432014465332
    5. '	range' → logprob: -16.75043296813965
    6. 'ange' → logprob: -17.37543296813965
    7. ' ' → logprob: -18.37543296813965
    8. ')' → logprob: -18.37543296813965
    9. '  ' → logprob: -18.75043296813965
    10. 's' → logprob: -19.00043296813965

Token 358: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.335902601480484
    2. '(_' → logprob: -1.8359025716781616
    3. '(len' → logprob: -2.585902690887451
    4. '(' → logprob: -3.960902690887451
    5. 'self' → logprob: -4.585902690887451
    6. '_' → logprob: -4.585902690887451
    7. 'len' → logprob: -5.460902690887451
    8. '(_)' → logprob: -6.085902690887451
    9. '(_,' → logprob: -6.835902690887451
    10. '(k' → logprob: -7.085902690887451

Token 359: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.0033963483292609453
    2. '.K' → logprob: -6.628396511077881
    3. '(K' → logprob: -7.503396511077881
    4. '_.' → logprob: -8.253396034240723
    5. '_K' → logprob: -8.503396034240723
    6. '_min' → logprob: -8.628396034240723
    7. '[K' → logprob: -8.753396034240723
    8. '_' → logprob: -8.753396034240723
    9. '_k' → logprob: -9.378396034240723
    10. ')' → logprob: -9.503396034240723

Token 360: 'max' (ID: 3228)
  Prédit: 'max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.0006484562181867659
    2. 'min' → logprob: -7.625648498535156
    3. '_max' → logprob: -9.250648498535156
    4. 'K' → logprob: -10.375648498535156
    5. 'curr' → logprob: -11.500648498535156
    6. '(max' → logprob: -11.875648498535156
    7. 'len' → logprob: -13.125648498535156
    8. 'N' → logprob: -13.250648498535156
    9. ')' → logprob: -13.250648498535156
    10. '_K' → logprob: -13.375648498535156

Token 361: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.9505009651184082
    2. ' -' → logprob: -0.9505009651184082
    3. '-K' → logprob: -2.200500965118408
    4. ' +' → logprob: -2.950500965118408
    5. '-' → logprob: -3.325500965118408
    6. '_max' → logprob: -5.575500965118408
    7. '_' → logprob: -5.575500965118408
    8. '_min' → logprob: -5.700500965118408
    9. '):' → logprob: -5.950500965118408
    10. '_curr' → logprob: -6.200500965118408

Token 362: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004873955331277102
    2. ' ' → logprob: -7.750487327575684
    3. '(' → logprob: -10.250487327575684
    4. '0' → logprob: -11.500487327575684
    5. '+' → logprob: -12.875487327575684
    6. 's' → logprob: -13.625487327575684
    7. '_' → logprob: -13.750487327575684
    8. 'self' → logprob: -13.875487327575684
    9. ' (' → logprob: -13.875487327575684
    10. '(_' → logprob: -13.875487327575684

Token 363: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.380904672667384e-05
    2. ' ' → logprob: -10.375033378601074
    3. '0' → logprob: -13.375033378601074
    4. '2' → logprob: -14.375033378601074
    5. '   ' → logprob: -16.31253433227539
    6. '+' → logprob: -16.37503433227539
    7. 'K' → logprob: -16.43753433227539
    8. 's' → logprob: -17.56253433227539
    9. '{' → logprob: -17.81253433227539
    10. '(' → logprob: -18.00003433227539

Token 364: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.576414942741394
    2. '):
' → logprob: -0.826414942741394
    3. ':' → logprob: -8.826415061950684
    4. '+' → logprob: -8.951415061950684
    5. '):
' → logprob: -9.451415061950684
    6. ')' → logprob: -10.201415061950684
    7. '           ' → logprob: -11.451415061950684
    8. ',' → logprob: -11.451415061950684
    9. '):

' → logprob: -11.451415061950684
    10. ' ):
' → logprob: -11.576415061950684

Token 365: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.4054545760154724
    2. '<|end|>' → logprob: -1.9054546356201172
    3. ':' → logprob: -2.155454635620117
    4. ' ' → logprob: -3.030454635620117
    5. '                ' → logprob: -5.280454635620117
    6. ',' → logprob: -5.780454635620117
    7. '            ' → logprob: -6.155454635620117
    8. '			' → logprob: -7.030454635620117
    9. ' :' → logprob: -7.155454635620117
    10. '	           ' → logprob: -7.155454635620117

Token 366: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.24350082874298096
    2. 'if' (adapté à ' if') → logprob: -1.743500828742981
    3. '               ' → logprob: -3.7435007095336914
    4. '                   ' → logprob: -5.368500709533691
    5. ' counts' → logprob: -5.743500709533691
    6. 'for' → logprob: -5.993500709533691
    7. 'counts' → logprob: -5.993500709533691
    8. ' for' → logprob: -6.118500709533691
    9. '+' → logprob: -7.368500709533691
    10. '                ' → logprob: -7.493500709533691

Token 367: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.2526949346065521
    2. ' s' → logprob: -1.5026949644088745
    3. '0' → logprob: -7.877695083618164
    4. 'counts' → logprob: -8.877695083618164
    5. '1' → logprob: -9.502695083618164
    6. ' ' → logprob: -9.752695083618164
    7. ' counts' → logprob: -10.502695083618164
    8. '   ' → logprob: -11.002695083618164
    9. '(s' → logprob: -11.002695083618164
    10. '_s' → logprob: -11.252695083618164

Token 368: ' -' (ID: 533)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.5757447481155396
    2. ' >=' → logprob: -0.9507447481155396
    3. '-' → logprob: -3.32574462890625
    4. ' <' → logprob: -5.07574462890625
    5. '<s' → logprob: -5.57574462890625
    6. ' -' → logprob: -5.82574462890625
    7. '<' → logprob: -6.70074462890625
    8. '>' → logprob: -8.07574462890625
    9. '==' → logprob: -8.70074462890625
    10. '<=' → logprob: -9.32574462890625

Token 369: ' ' (ID: 220)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.014541073702275753
    2. '1' → logprob: -4.264541149139404
    3. ' self' → logprob: -8.139540672302246
    4. '0' → logprob: -10.264540672302246
    5. 's' → logprob: -11.014540672302246
    6. '(self' → logprob: -11.889540672302246
    7. '<|end|>' → logprob: -12.389540672302246
    8. 'N' → logprob: -12.514540672302246
    9. '	self' → logprob: -13.139540672302246
    10. ' ' → logprob: -13.264540672302246

Token 370: '1' (ID: 16)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.42988258600234985
    2. '1' → logprob: -1.054882526397705
    3. 'N' → logprob: -6.804882526397705
    4. ' self' → logprob: -10.429883003234863
    5. '0' → logprob: -10.929883003234863
    6. '(self' → logprob: -11.179883003234863
    7. 's' → logprob: -13.054883003234863
    8. '(' → logprob: -13.054883003234863
    9. 'K' → logprob: -13.554883003234863
    10. 'max' → logprob: -14.054883003234863

Token 371: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.020750917494297028
    2. ' >=' → logprob: -3.8957509994506836
    3. ']>=' → logprob: -9.020750999450684
    4. ')>=' → logprob: -9.395750999450684
    5. '<' → logprob: -13.270750999450684
    6. '[' → logprob: -14.270750999450684
    7. '>' → logprob: -14.770750999450684
    8. ')' → logprob: -14.770750999450684
    9. '0' → logprob: -15.020750999450684
    10. '≥' → logprob: -15.145750999450684

Token 372: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.228561349213123e-05
    2. ' ' → logprob: -9.875052452087402
    3. 'self' → logprob: -14.625052452087402
    4. '1' → logprob: -15.500052452087402
    5. '   ' → logprob: -16.000051498413086
    6. '  ' → logprob: -17.625051498413086
    7. 's' → logprob: -17.625051498413086
    8. ' self' → logprob: -17.750051498413086
    9. '۰' → logprob: -18.125051498413086
    10. ')' → logprob: -19.562551498413086

Token 373: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0047787572257220745
    2. 'self' → logprob: -5.379778861999512
    3. ' ' → logprob: -9.129778861999512
    4. ' self' → logprob: -10.504778861999512
    5. '1' → logprob: -11.254778861999512
    6. '(self' → logprob: -12.504778861999512
    7. 's' → logprob: -13.504778861999512
    8. 'K' → logprob: -13.754778861999512
    9. '   ' → logprob: -13.754778861999512
    10. ' (' → logprob: -15.004778861999512

Token 374: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3684617578983307
    2. ':
' → logprob: -1.3684617280960083
    3. ' and' → logprob: -3.243461847305298
    4. 'and' → logprob: -4.243461608886719
    5. '                   ' → logprob: -8.618461608886719
    6. '               ' → logprob: -10.618461608886719
    7. ':c' → logprob: -10.868461608886719
    8. '   ' → logprob: -11.118461608886719
    9. ' :' → logprob: -11.618461608886719
    10. '):
' → logprob: -11.618461608886719

Token 375: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.023855261504650116
    2. ':' → logprob: -4.023855209350586
    3. '                       ' → logprob: -6.148855209350586
    4. '                    ' → logprob: -6.898855209350586
    5. '               ' → logprob: -7.273855209350586
    6. ':
' → logprob: -7.773855209350586
    7. '                ' → logprob: -8.273855209350586
    8. ' :' → logprob: -8.398855209350586
    9. ' and' → logprob: -8.898855209350586
    10. ' cum' → logprob: -9.148855209350586

Token 376: ' cum' (ID: 10023)
  Prédit: 'cum'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cum' (adapté à ' cum') → logprob: -0.240017369389534
    2. '                   ' → logprob: -1.8650174140930176
    3. ' cum' → logprob: -2.8650174140930176
    4. '   ' → logprob: -6.990017414093018
    5. '                       ' → logprob: -8.49001693725586
    6. '               ' → logprob: -9.11501693725586
    7. 'counts' → logprob: -9.36501693725586
    8. '	c' → logprob: -9.99001693725586
    9. 'c' → logprob: -9.99001693725586
    10. '                  ' → logprob: -10.86501693725586

Token 377: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.02460343949496746
    2. '=' → logprob: -4.149603366851807
    3. ' +=' → logprob: -4.774603366851807
    4. ']+=' → logprob: -9.899603843688965
    5. '-=' → logprob: -10.774603843688965
    6. ' =' → logprob: -11.774603843688965
    7. '+' → logprob: -11.774603843688965
    8. ' -=' → logprob: -13.899603843688965
    9. '   ' → logprob: -14.274603843688965
    10. '*=' → logprob: -14.899603843688965

Token 378: ' counts' (ID: 28991)
  Prédit: 'counts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'counts' → logprob: -0.020563142374157906
    2. ' counts' → logprob: -3.8955631256103516
    3. 'count' → logprob: -10.895563125610352
    4. '-count' → logprob: -13.520563125610352
    5. '   ' → logprob: -14.520563125610352
    6. '-' → logprob: -15.020563125610352
    7. ' -' → logprob: -15.645563125610352
    8. ' ' → logprob: -15.895563125610352
    9. '               ' → logprob: -16.52056312561035
    10. '_counts' → logprob: -17.02056312561035

Token 379: '_prev' (ID: 60491)
  Prédit: '_prev'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prev' → logprob: -9.722539834911004e-05
    2. 'prev' → logprob: -9.500097274780273
    3. '_curr' → logprob: -11.000097274780273
    4. '_previous' → logprob: -13.250097274780273
    5. '[' → logprob: -13.875097274780273
    6. '[_' → logprob: -14.125097274780273
    7. '```' → logprob: -14.375097274780273
    8. 's' → logprob: -14.500097274780273
    9. 'Prev' → logprob: -14.875097274780273
    10. '_current' → logprob: -16.000097274780273

Token 380: '[s' (ID: 24177)
  Prédit: '[s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[s' → logprob: -6.980854959692806e-05
    2. 's' → logprob: -9.875069618225098
    3. '[' → logprob: -11.000069618225098
    4. ' [' → logprob: -14.375069618225098
    5. '               ' → logprob: -15.125069618225098
    6. '(s' → logprob: -15.875069618225098
    7. '   ' → logprob: -16.000070571899414
    8. '                   ' → logprob: -16.375070571899414
    9. '[
' → logprob: -16.625070571899414
    10. '	s' → logprob: -17.125070571899414

Token 381: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00672922981902957
    2. ' -' → logprob: -5.0067291259765625
    3. '[' → logprob: -12.131729125976562
    4. ']' → logprob: -12.381729125976562
    5. '1' → logprob: -13.006729125976562
    6. '   ' → logprob: -14.256729125976562
    7. 's' → logprob: -14.381729125976562
    8. '])' → logprob: -15.756729125976562
    9. ' ' → logprob: -15.881729125976562
    10. '<|end|>' → logprob: -15.881729125976562

Token 382: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.2729995988775045e-06
    2. ' ' → logprob: -12.125006675720215
    3. '   ' → logprob: -14.375006675720215
    4. '           ' → logprob: -17.5000057220459
    5. '```' → logprob: -17.5000057220459
    6. '       ' → logprob: -18.4375057220459
    7. '    ' → logprob: -18.8750057220459
    8. '  ' → logprob: -18.9375057220459
    9. '                   ' → logprob: -19.0625057220459
    10. '               ' → logprob: -19.2500057220459

Token 383: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.60414821645827e-06
    2. ' ' → logprob: -12.375004768371582
    3. '   ' → logprob: -16.187503814697266
    4. ')' → logprob: -17.125003814697266
    5. '<|end|>' → logprob: -17.562503814697266
    6. ']' → logprob: -17.750003814697266
    7. '```' → logprob: -17.875003814697266
    8. '۱' → logprob: -18.687503814697266
    9. '  ' → logprob: -18.750003814697266
    10. '<|end|>' → logprob: -19.187503814697266

Token 384: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.026509398594498634
    2. ')' → logprob: -4.0265092849731445
    3. '<|end|>' → logprob: -5.6515092849731445
    4. ']
' → logprob: -6.5265092849731445
    5. ' 
' → logprob: -7.2765092849731445
    6. ' ]' → logprob: -7.5265092849731445
    7. ' -' → logprob: -7.6515092849731445
    8. '-' → logprob: -7.9015092849731445
    9. '           ' → logprob: -7.9015092849731445
    10. '               ' → logprob: -8.776509284973145

Token 385: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0074308039620518684
    2. ')' → logprob: -5.6324310302734375
    3. '                ' → logprob: -6.8824310302734375
    4. '<|end|>' → logprob: -7.0074310302734375
    5. ' ' → logprob: -8.257431030273438
    6. ' s' → logprob: -8.382431030273438
    7. ',' → logprob: -8.382431030273438
    8. '			' → logprob: -8.882431030273438
    9. '                
' → logprob: -9.007431030273438
    10. '           ' → logprob: -9.132431030273438

Token 386: ' if' (ID: 538)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.2202941179275513
    2. '               ' → logprob: -1.2202941179275513
    3. ')' → logprob: -1.7202941179275513
    4. '           ' → logprob: -2.9702939987182617
    5. '                ' → logprob: -3.2202939987182617
    6. 'counts' → logprob: -3.4702939987182617
    7. ' counts' → logprob: -3.5952939987182617
    8. '            ' → logprob: -4.095293998718262
    9. ' if' → logprob: -4.970293998718262
    10. ' ' → logprob: -4.970293998718262

Token 387: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0004419935867190361
    2. ' s' → logprob: -7.750442028045654
    3. '   ' → logprob: -11.750441551208496
    4. '           ' → logprob: -13.625441551208496
    5. '               ' → logprob: -14.625441551208496
    6. '       ' → logprob: -15.000441551208496
    7. '                   ' → logprob: -15.125441551208496
    8. ' ' → logprob: -15.375441551208496
    9. '     ' → logprob: -15.750441551208496
    10. '  ' → logprob: -16.125442504882812

Token 388: ' -' (ID: 533)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.25819462537765503
    2. ' <=' → logprob: -2.5081946849823
    3. '<' → logprob: -3.0081946849823
    4. ' -' → logprob: -3.2581946849823
    5. '-' → logprob: -3.5081946849823
    6. '<=' → logprob: -3.7581946849823
    7. ' >=' → logprob: -6.258194446563721
    8. '>=' → logprob: -6.883194446563721
    9. '<s' → logprob: -7.383194446563721
    10. ' >' → logprob: -7.633194446563721

Token 389: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0008969316841103137
    2. ' self' → logprob: -7.87589693069458
    3. '1' → logprob: -8.125897407531738
    4. 's' → logprob: -9.250897407531738
    5. '   ' → logprob: -10.000897407531738
    6. '(self' → logprob: -10.375897407531738
    7. ' ' → logprob: -11.125897407531738
    8. '(' → logprob: -11.625897407531738
    9. ' (' → logprob: -12.125897407531738
    10. '  ' → logprob: -12.500897407531738

Token 390: '.N' (ID: 4439)
  Prédit: '.K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.K' → logprob: -0.18138593435287476
    2. '.N' → logprob: -1.8063859939575195
    3. '._' → logprob: -6.4313859939575195
    4. '.' → logprob: -12.80638599395752
    5. 'max' → logprob: -12.93138599395752
    6. 'self' → logprob: -12.93138599395752
    7. '.MAX' → logprob: -12.93138599395752
    8. '   ' → logprob: -13.05638599395752
    9. '_K' → logprob: -13.30638599395752
    10. '_max' → logprob: -13.55638599395752

Token 391: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.1431627869606018
    2. '-' → logprob: -2.018162727355957
    3. '>' → logprob: -8.018162727355957
    4. ' >' → logprob: -9.643162727355957
    5. '>=' → logprob: -10.143162727355957
    6. ' ' → logprob: -10.518162727355957
    7. '   ' → logprob: -11.643162727355957
    8. '  ' → logprob: -12.018162727355957
    9. ' >=' → logprob: -12.393162727355957
    10. '1' → logprob: -12.643162727355957

Token 392: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0008061755215749145
    2. ' ' → logprob: -7.1258063316345215
    3. '   ' → logprob: -13.625805854797363
    4. '```' → logprob: -15.875805854797363
    5. '-' → logprob: -16.50080680847168
    6. '  ' → logprob: -16.75080680847168
    7. '    ' → logprob: -17.06330680847168
    8. '           ' → logprob: -17.56330680847168
    9. '       ' → logprob: -17.87580680847168
    10. '0' → logprob: -17.93830680847168

Token 393: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.023065632209181786
    2. '-' → logprob: -3.8980655670166016
    3. ' -' → logprob: -6.273065567016602
    4. ' ' → logprob: -7.898065567016602
    5. '0' → logprob: -8.523065567016602
    6. '>=' → logprob: -10.398065567016602
    7. '>' → logprob: -11.023065567016602
    8. 's' → logprob: -12.148065567016602
    9. ' >=' → logprob: -12.648065567016602
    10. '2' → logprob: -13.773065567016602

Token 394: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.6931662559509277
    2. '>=' → logprob: -0.6931662559509277
    3. ')>=' → logprob: -11.943166732788086
    4. ']>=' → logprob: -12.443166732788086
    5. ' ' → logprob: -12.818166732788086
    6. '0' → logprob: -12.943166732788086
    7. 'ge' → logprob: -13.568166732788086
    8. '    ' → logprob: -14.568166732788086
    9. '>' → logprob: -15.068166732788086
    10. ' <' → logprob: -15.568166732788086

Token 395: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.542423165636137e-05
    2. ' ' → logprob: -9.375085830688477
    3. '   ' → logprob: -14.750085830688477
    4. '  ' → logprob: -18.625085830688477
    5. '                   ' → logprob: -18.875085830688477
    6. '۰' → logprob: -18.875085830688477
    7. '           ' → logprob: -19.125085830688477
    8. '               ' → logprob: -19.250085830688477
    9. '```' → logprob: -19.375085830688477
    10. '    ' → logprob: -19.875085830688477

Token 396: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.572941179503687e-05
    2. ' ' → logprob: -10.000045776367188
    3. '   ' → logprob: -15.625045776367188
    4. '۰' → logprob: -18.000045776367188
    5. '  ' → logprob: -18.125045776367188
    6. '    ' → logprob: -18.625045776367188
    7. '00' → logprob: -19.937545776367188
    8. '
' → logprob: -20.062545776367188
    9. '     ' → logprob: -20.125045776367188
    10. '```' → logprob: -20.312545776367188

Token 397: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.38848191499710083
    2. ':' → logprob: -1.138481855392456
    3. '                   ' → logprob: -6.763482093811035
    4. '               ' → logprob: -9.263482093811035
    5. ' and' → logprob: -9.513482093811035
    6. '):
' → logprob: -9.763482093811035
    7. '           ' → logprob: -9.763482093811035
    8. ',' → logprob: -9.888482093811035
    9. ' :
' → logprob: -10.138482093811035
    10. ':c' → logprob: -11.263482093811035

Token 398: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0006205809186212718
    2. ':' → logprob: -7.875620365142822
    3. '               ' → logprob: -9.75062084197998
    4. '                       ' → logprob: -9.87562084197998
    5. ':
' → logprob: -10.25062084197998
    6. ',' → logprob: -11.25062084197998
    7. '                    
' → logprob: -11.50062084197998
    8. '           ' → logprob: -11.62562084197998
    9. ' cum' → logprob: -11.62562084197998
    10. 'cum' → logprob: -11.62562084197998

Token 399: ' cum' (ID: 10023)
  Prédit: 'cum'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cum' (adapté à ' cum') → logprob: -0.07132437080144882
    2. '                   ' → logprob: -3.071324348449707
    3. ' cum' → logprob: -3.821324348449707
    4. '               ' → logprob: -7.946324348449707
    5. '                       ' → logprob: -8.696324348449707
    6. '           ' → logprob: -10.446324348449707
    7. '   ' → logprob: -11.696324348449707
    8. 'c' → logprob: -11.821324348449707
    9. '-c' → logprob: -12.071324348449707
    10. '	c' → logprob: -13.071324348449707

Token 400: ' -=' (ID: 12583)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.0067568132653832436
    2. ' -=' → logprob: -5.006756782531738
    3. '-' → logprob: -10.131756782531738
    4. '+=' → logprob: -13.381756782531738
    5. '   ' → logprob: -16.381757736206055
    6. '           ' → logprob: -17.006757736206055
    7. '=' → logprob: -17.631757736206055
    8. ' -' → logprob: -18.006757736206055
    9. '    ' → logprob: -18.506757736206055
    10. '```' → logprob: -18.881757736206055

Token 401: ' counts' (ID: 28991)
  Prédit: 'counts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'counts' → logprob: -0.014171270653605461
    2. ' counts' → logprob: -4.264171123504639
    3. 'count' → logprob: -11.764171600341797
    4. '   ' → logprob: -18.264171600341797
    5. ' ' → logprob: -18.764171600341797
    6. '_counts' → logprob: -19.514171600341797
    7. '           ' → logprob: -20.639171600341797
    8. '               ' → logprob: -21.389171600341797
    9. '       ' → logprob: -21.889171600341797
    10. '  ' → logprob: -22.139171600341797

Token 402: '_prev' (ID: 60491)
  Prédit: '_prev'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prev' → logprob: -0.0002656271681189537
    2. 'prev' → logprob: -8.250266075134277
    3. '_curr' → logprob: -12.375266075134277
    4. 's' → logprob: -17.87526512145996
    5. '[s' → logprob: -17.87526512145996
    6. 'Prev' → logprob: -18.25026512145996
    7. 'curr' → logprob: -18.25026512145996
    8. '	prev' → logprob: -18.37526512145996
    9. '_previous' → logprob: -18.87526512145996
    10. '
' → logprob: -19.00026512145996

Token 403: '[s' (ID: 24177)
  Prédit: '[s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[s' → logprob: -3.643152740551159e-05
    2. 's' → logprob: -10.250036239624023
    3. '[' → logprob: -14.000036239624023
    4. '   ' → logprob: -16.750036239624023
    5. ' s' → logprob: -18.625036239624023
    6. '[
' → logprob: -18.750036239624023
    7. '{s' → logprob: -18.750036239624023
    8. '	s' → logprob: -19.375036239624023
    9. '(s' → logprob: -19.375036239624023
    10. ' [' → logprob: -20.375036239624023

Token 404: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.3882802128791809
    2. ' -' → logprob: -1.1382801532745361
    3. '-self' → logprob: -6.638280391693115
    4. '-s' → logprob: -9.263279914855957
    5. '   ' → logprob: -13.638279914855957
    6. ' ' → logprob: -13.638279914855957
    7. 's' → logprob: -13.763279914855957
    8. 'self' → logprob: -15.013279914855957
    9. '-N' → logprob: -16.638280868530273
    10. '  ' → logprob: -16.888280868530273

Token 405: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.009937762282788754
    2. ' self' → logprob: -4.634937763214111
    3. '1' → logprob: -9.259937286376953
    4. '   ' → logprob: -10.134937286376953
    5. ' ' → logprob: -10.509937286376953
    6. '(self' → logprob: -11.259937286376953
    7. '	self' → logprob: -12.759937286376953
    8. '(' → logprob: -14.134937286376953
    9. '  ' → logprob: -14.259937286376953
    10. '    ' → logprob: -14.384937286376953

Token 406: '.N' (ID: 4439)
  Prédit: '.N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.N' → logprob: -0.0011780819622799754
    2. 'N' → logprob: -7.12617826461792
    3. '   ' → logprob: -8.626177787780762
    4. '_N' → logprob: -9.126177787780762
    5. '	N' → logprob: -10.126177787780762
    6. 'self' → logprob: -11.001177787780762
    7. '[N' → logprob: -11.876177787780762
    8. '[' → logprob: -12.376177787780762
    9. '.' → logprob: -13.001177787780762
    10. '<N' → logprob: -13.126177787780762

Token 407: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.25193077325820923
    2. ' -' → logprob: -1.5019307136535645
    3. ' ' → logprob: -13.751931190490723
    4. '   ' → logprob: -15.626931190490723
    5. '1' → logprob: -16.501930236816406
    6. '–' → logprob: -17.126930236816406
    7. '()-' → logprob: -17.126930236816406
    8. '
' → logprob: -17.376930236816406
    9. ']-' → logprob: -17.376930236816406
    10. '```' → logprob: -17.376930236816406

Token 408: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.319370302458992e-06
    2. ' ' → logprob: -12.250005722045898
    3. '-' → logprob: -15.625005722045898
    4. '2' → logprob: -16.6250057220459
    5. '```' → logprob: -16.6250057220459
    6. '   ' → logprob: -18.8750057220459
    7. ' -' → logprob: -20.5000057220459
    8. '۱' → logprob: -20.7500057220459
    9. '１' → logprob: -21.6250057220459
    10. '           ' → logprob: -21.7500057220459

Token 409: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.77627644513268e-06
    2. ' ' → logprob: -12.000008583068848
    3. '-' → logprob: -13.125008583068848
    4. '2' → logprob: -14.750008583068848
    5. '```' → logprob: -15.875008583068848
    6. '   ' → logprob: -16.750009536743164
    7. ' -' → logprob: -18.187509536743164
    8. '۱' → logprob: -18.750009536743164
    9. '
' → logprob: -18.812509536743164
    10. '0' → logprob: -19.187509536743164

Token 410: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2557215690612793
    2. '               ' → logprob: -2.0057215690612793
    3. ']' → logprob: -2.8807215690612793
    4. '<|end|>' → logprob: -3.3807215690612793
    5. '           ' → logprob: -7.630721569061279
    6. '       ' → logprob: -9.380722045898438
    7. '<|end|>' → logprob: -9.380722045898438
    8. '```' → logprob: -9.630722045898438
    9. '                   ' → logprob: -10.380722045898438
    10. ')
' → logprob: -11.005722045898438

Token 411: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0014799826312810183
    2. '           ' → logprob: -6.6264801025390625
    3. 'counts' → logprob: -9.751480102539062
    4. '              ' → logprob: -10.751480102539062
    5. '       ' → logprob: -11.126480102539062
    6. 's' → logprob: -11.126480102539062
    7. 'count' → logprob: -12.251480102539062
    8. ' counts' → logprob: -12.376480102539062
    9. '+' → logprob: -12.626480102539062
    10. ',' → logprob: -12.626480102539062

Token 412: ' counts' (ID: 28991)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.17958714067935944
    2. '           ' → logprob: -2.4295871257781982
    3. 'counts' (adapté à ' counts') → logprob: -3.0545871257781982
    4. ' counts' → logprob: -3.5545871257781982
    5. 'count' → logprob: -8.679587364196777
    6. '       ' → logprob: -8.679587364196777
    7. '              ' → logprob: -9.804587364196777
    8. '   ' → logprob: -10.304587364196777
    9. '            ' → logprob: -10.804587364196777
    10. ' ' → logprob: -10.929587364196777

Token 413: '_curr' (ID: 92432)
  Prédit: '_curr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_curr' → logprob: -1.7120533811976202e-05
    2. '_cur' → logprob: -11.250017166137695
    3. '_current' → logprob: -13.250017166137695
    4. '_prev' → logprob: -13.375017166137695
    5. '[curr' → logprob: -14.625017166137695
    6. 'curr' → logprob: -15.750017166137695
    7. '_' → logprob: -16.750017166137695
    8. '	curr' → logprob: -17.250017166137695
    9. '_c' → logprob: -17.375017166137695
    10. 'Curr' → logprob: -18.750017166137695

Token 414: '[s' (ID: 24177)
  Prédit: '[s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[s' → logprob: -1.1279553291387856e-05
    2. '[' → logprob: -11.500011444091797
    3. ' [' → logprob: -14.250011444091797
    4. 's' → logprob: -14.625011444091797
    5. '[t' → logprob: -18.000011444091797
    6. '[S' → logprob: -18.250011444091797
    7. '=' → logprob: -18.625011444091797
    8. '(s' → logprob: -19.125011444091797
    9. '=s' → logprob: -19.250011444091797
    10. ' =' → logprob: -19.375011444091797

Token 415: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.8291440606117249
    2. '=' → logprob: -1.07914400100708
    3. ' =' → logprob: -1.57914400100708
    4. ']=' → logprob: -4.07914400100708
    5. ' ]' → logprob: -7.57914400100708
    6. ']+=' → logprob: -9.454144477844238
    7. ')' → logprob: -11.204144477844238
    8. ' +=' → logprob: -12.329144477844238
    9. ' ' → logprob: -12.454144477844238
    10. '+=' → logprob: -13.079144477844238

Token 416: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3870115280151367
    2. ' =' → logprob: -1.1370115280151367
    3. ' +=' → logprob: -9.262011528015137
    4. '+=' → logprob: -10.012011528015137
    5. '.=' → logprob: -15.637011528015137
    6. '=c' → logprob: -15.887011528015137
    7. '=s' → logprob: -16.637012481689453
    8. ' ' → logprob: -16.762012481689453
    9. ')=' → logprob: -16.887012481689453
    10. '=int' → logprob: -16.887012481689453

Token 417: ' cum' (ID: 10023)
  Prédit: 'cum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cum' → logprob: -0.001170225441455841
    2. ' cum' → logprob: -6.7511701583862305
    3. 'c' → logprob: -16.876171112060547
    4. '	c' → logprob: -19.751171112060547
    5. 'cu' → logprob: -19.876171112060547
    6. '0' → logprob: -20.376171112060547
    7. 'cul' → logprob: -20.501171112060547
    8. ' ' → logprob: -20.751171112060547
    9. 'max' → logprob: -21.001171112060547
    10. ' ' → logprob: -21.751171112060547

Token 418: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.19269627332687378
    2. '           ' → logprob: -1.9426963329315186
    3. '<|end|>' → logprob: -3.8176963329315186
    4. ' 
' → logprob: -5.4426960945129395
    5. '  
' → logprob: -6.4426960945129395
    6. ' ' → logprob: -7.0676960945129395
    7. ' if' → logprob: -7.1926960945129395
    8. '<|end|>' → logprob: -7.5676960945129395
    9. '            
' → logprob: -7.9426960945129395
    10. '		' → logprob: -7.9426960945129395

Token 419: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 420: ' counts' (ID: 28991)
  Prédit: ' counts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' counts' → logprob: -0.4109302759170532
    2. 'counts' (adapté à ' counts') → logprob: -1.1609302759170532
    3. '       ' → logprob: -3.7859301567077637
    4. ' self' → logprob: -7.410930156707764
    5. '           ' → logprob: -8.410930633544922
    6. 'self' → logprob: -8.910930633544922
    7. '   ' → logprob: -10.410930633544922
    8. 'count' → logprob: -10.535930633544922
    9. ' ' → logprob: -10.910930633544922
    10. '_counts' → logprob: -11.410930633544922

Token 421: '_prev' (ID: 60491)
  Prédit: '_prev'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prev' → logprob: -0.00879372376948595
    2. '_' → logprob: -4.758793830871582
    3. '_curr' → logprob: -9.008793830871582
    4. '=' → logprob: -10.383793830871582
    5. '_=' → logprob: -11.258793830871582
    6. ' =' → logprob: -11.883793830871582
    7. 'prev' → logprob: -12.758793830871582
    8. '=_' → logprob: -13.758793830871582
    9. '_,' → logprob: -14.258793830871582
    10. '_current' → logprob: -15.258793830871582

Token 422: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2813268005847931
    2. '=' → logprob: -1.4063267707824707
    3. ',' → logprob: -8.781327247619629
    4. '<|end|>' → logprob: -11.156327247619629
    5. ' ' → logprob: -12.906327247619629
    6. '[:]' → logprob: -13.031327247619629
    7. ' counts' → logprob: -14.156327247619629
    8. 'counts' → logprob: -14.281327247619629
    9. '[' → logprob: -14.406327247619629
    10. '[count' → logprob: -14.781327247619629

Token 423: ' counts' (ID: 28991)
  Prédit: 'counts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'counts' → logprob: -0.03804241120815277
    2. ' counts' → logprob: -3.2880423069000244
    3. 'count' → logprob: -13.913042068481445
    4. '[' → logprob: -18.913042068481445
    5. 'c' → logprob: -19.788042068481445
    6. '_counts' → logprob: -19.913042068481445
    7. 'Counts' → logprob: -20.163042068481445
    8. ' [' → logprob: -20.663042068481445
    9. '   ' → logprob: -21.163042068481445
    10. ' ' → logprob: -21.288042068481445

Token 424: '_curr' (ID: 92432)
  Prédit: '_curr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_curr' → logprob: -0.0001294030516874045
    2. 'curr' → logprob: -9.375129699707031
    3. '_prev' → logprob: -10.125129699707031
    4. '[curr' → logprob: -12.750129699707031
    5. '_' → logprob: -14.125129699707031
    6. '_cur' → logprob: -14.875129699707031
    7. '	curr' → logprob: -15.625129699707031
    8. '[' → logprob: -16.37512969970703
    9. '_current' → logprob: -16.37512969970703
    10. 'Curr' → logprob: -16.37512969970703

Token 425: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5320634245872498
    2. '<|end|>' → logprob: -0.9070634245872498
    3. '
' → logprob: -4.7820634841918945
    4. '<|end|>' → logprob: -8.782063484191895
    5. 'self' → logprob: -9.657063484191895
    6. '   ' → logprob: -9.782063484191895
    7. ' self' → logprob: -9.907063484191895
    8. ')' → logprob: -10.032063484191895
    9. '        
' → logprob: -10.657063484191895
    10. ' ' → logprob: -11.157063484191895

Token 426: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07331175357103348
    2. '<|end|>' → logprob: -2.9483118057250977
    3. '   ' → logprob: -4.573311805725098
    4. ')' → logprob: -6.198311805725098
    5. '	' → logprob: -6.448311805725098
    6. ' self' → logprob: -6.823311805725098
    7. 'self' → logprob: -7.448311805725098
    8. ' ' → logprob: -7.698311805725098
    9. ',' → logprob: -8.198311805725098
    10. '}' → logprob: -8.323311805725098

Token 427: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.016801167279481888
    2. 'self' (adapté à ' self') → logprob: -4.391801357269287
    3. ' self' → logprob: -5.641801357269287
    4. '   ' → logprob: -7.891801357269287
    5. '<|end|>' → logprob: -8.891800880432129
    6. ')' → logprob: -9.891800880432129
    7. '	self' → logprob: -9.891800880432129
    8. '```' → logprob: -10.516800880432129
    9. '@property' → logprob: -11.141800880432129
    10. '	' → logprob: -11.516800880432129

Token 428: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -7.896309739408025e-07
    2. '_counts' → logprob: -14.250000953674316
    3. ' .' → logprob: -16.875
    4. ']._' → logprob: -17.0
    5. ')._' → logprob: -17.25
    6. '.' → logprob: -18.375
    7. '."_' → logprob: -18.5
    8. '->_' → logprob: -18.625
    9. '_' → logprob: -18.875
    10. '.'_' → logprob: -19.5

Token 429: 'counts' (ID: 99089)
  Prédit: 'counts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'counts' → logprob: -5.512236498361744e-07
    2. '_counts' → logprob: -14.750000953674316
    3. 'count' → logprob: -16.75
    4. ' counts' → logprob: -17.0
    5. '```' → logprob: -18.75
    6. 'max' → logprob: -19.125
    7. 'c' → logprob: -19.375
    8. 'min' → logprob: -19.875
    9. 'cnt' → logprob: -20.375
    10. '   ' → logprob: -21.0

Token 430: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03804171830415726
    2. ' =' → logprob: -3.288041830062866
    3. '=}' → logprob: -16.913042068481445
    4. ',' → logprob: -17.288042068481445
    5. '＝' → logprob: -17.413042068481445
    6. ' ' → logprob: -17.413042068481445
    7. '[' → logprob: -17.538042068481445
    8. '<|end|>' → logprob: -18.038042068481445
    9. '.=' → logprob: -18.163042068481445
    10. '=s' → logprob: -18.413042068481445

Token 431: ' counts' (ID: 28991)
  Prédit: 'counts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'counts' → logprob: -0.007640224881470203
    2. ' counts' → logprob: -4.882640361785889
    3. 'count' → logprob: -11.13263988494873
    4. '[' → logprob: -11.50763988494873
    5. '[count' → logprob: -12.00763988494873
    6. '{' → logprob: -13.00763988494873
    7. ' [' → logprob: -14.00763988494873
    8. '   ' → logprob: -16.882640838623047
    9. 'dict' → logprob: -17.632640838623047
    10. '[c' → logprob: -17.757640838623047

Token 432: '_prev' (ID: 60491)
  Prédit: '_prev'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prev' → logprob: -0.0015129582025110722
    2. '_curr' → logprob: -6.5015130043029785
    3. 'prev' → logprob: -12.00151252746582
    4. '_' → logprob: -13.00151252746582
    5. 's' → logprob: -14.25151252746582
    6. '_current' → logprob: -15.25151252746582
    7. '_previous' → logprob: -15.37651252746582
    8. '_cur' → logprob: -15.75151252746582
    9. '[' → logprob: -15.87651252746582
    10. ' _' → logprob: -16.00151252746582

Token 433: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 434: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 435: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.18960611522197723
    2. ' def' → logprob: -1.8146060705184937
    3. '   ' → logprob: -4.689606189727783
    4. ' ' → logprob: -7.564606189727783
    5. ')' → logprob: -9.689605712890625
    6. '<|end|>' → logprob: -11.314605712890625
    7. '	def' → logprob: -12.064605712890625
    8. '@property' → logprob: -12.189605712890625
    9. '  ' → logprob: -12.439605712890625
    10. '    
' → logprob: -12.564605712890625

Token 436: ' probability' (ID: 34933)
  Prédit: 'prob'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prob' → logprob: -0.5268106460571289
    2. ' probability' → logprob: -0.9018106460571289
    3. ' support' → logprob: -6.026810646057129
    4. 'support' → logprob: -6.776810646057129
    5. '_probability' → logprob: -9.776810646057129
    6. 'def' → logprob: -10.151810646057129
    7. ' probabil' → logprob: -12.276810646057129
    8. 'pro' → logprob: -12.526810646057129
    9. '_support' → logprob: -12.526810646057129
    10. ' prob' → logprob: -12.776810646057129

Token 437: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.3137834072113037
    2. '(' → logprob: -1.3137834072113037
    3. '<|end|>' → logprob: -8.188783645629883
    4. ' (' → logprob: -8.813783645629883
    5. '(s' → logprob: -10.438783645629883
    6. '(
' → logprob: -10.563783645629883
    7. '(value' → logprob: -10.813783645629883
    8. 'self' → logprob: -11.813783645629883
    9. ' ' → logprob: -13.063783645629883
    10. '<|end|>' → logprob: -13.188783645629883

Token 438: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00775533402338624
    2. '(' → logprob: -5.007755279541016
    3. ')' → logprob: -7.382755279541016
    4. 'self' → logprob: -8.382755279541016
    5. ' (' → logprob: -9.632755279541016
    6. '(value' → logprob: -10.132755279541016
    7. '(
' → logprob: -10.132755279541016
    8. '<|end|>' → logprob: -11.132755279541016
    9. ' self' → logprob: -11.632755279541016
    10. '(token' → logprob: -11.882755279541016

Token 439: ' value' (ID: 1432)
  Prédit: ' value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' value' → logprob: -0.6932023167610168
    2. 'value' → logprob: -0.6932023167610168
    3. ' x' → logprob: -10.693202018737793
    4. ' ' → logprob: -11.443202018737793
    5. '<|end|>' → logprob: -11.943202018737793
    6. ' )' → logprob: -12.443202018737793
    7. ')' → logprob: -12.568202018737793
    8. ' self' → logprob: -12.818202018737793
    9. 'x' → logprob: -13.318202018737793
    10. 'self' → logprob: -13.693202018737793

Token 440: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -1.0547157526016235
    2. ')' → logprob: -1.4297157526016235
    3. ' ):' → logprob: -1.4297157526016235
    4. ' )' → logprob: -2.304715633392334
    5. ':' → logprob: -2.679715633392334
    6. ' :' → logprob: -6.179715633392334
    7. '   ' → logprob: -6.804715633392334
    8. ' ):
' → logprob: -8.054716110229492
    9. ' ' → logprob: -8.179716110229492
    10. '):
' → logprob: -8.554716110229492

Token 441: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.029847679659724236
    2. ' int' → logprob: -3.5298476219177246
    3. ')' → logprob: -9.404848098754883
    4. 'value' → logprob: -11.904848098754883
    5. '[int' → logprob: -12.154848098754883
    6. ':int' → logprob: -13.654848098754883
    7. ' value' → logprob: -14.529848098754883
    8. '(int' → logprob: -14.529848098754883
    9. '<int' → logprob: -15.529848098754883
    10. ' )' → logprob: -15.529848098754883

Token 442: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.107425062713446e-06
    2. ' )' → logprob: -12.125006675720215
    3. '):' → logprob: -13.375006675720215
    4. '   ' → logprob: -15.875006675720215
    5. ':' → logprob: -17.62500762939453
    6. '):
' → logprob: -17.87500762939453
    7. ')->' → logprob: -18.75000762939453
    8. '`)' → logprob: -20.12500762939453
    9. ' ):' → logprob: -21.00000762939453
    10. '       ' → logprob: -21.75000762939453

Token 443: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.003117941552773118
    2. '->' → logprob: -6.62811803817749
    3. ' ->' → logprob: -6.87811803817749
    4. ')' → logprob: -7.75311803817749
    5. '):' → logprob: -8.503117561340332
    6. '   ' → logprob: -10.128117561340332
    7. '():' → logprob: -10.378117561340332
    8. ' :' → logprob: -11.003117561340332
    9. ':return' → logprob: -11.003117561340332
    10. ')->' → logprob: -11.128117561340332

Token 444: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.001191298826597631
    2. ' float' → logprob: -6.876191139221191
    3. '(float' → logprob: -8.876191139221191
    4. '0' → logprob: -11.251191139221191
    5. 'return' → logprob: -12.626191139221191
    6. 'int' → logprob: -14.251191139221191
    7. '(' → logprob: -14.251191139221191
    8. '   ' → logprob: -15.501191139221191
    9. ' (' → logprob: -15.626191139221191
    10. '1' → logprob: -15.751191139221191

Token 445: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00043639098294079304
    2. ' :' → logprob: -8.875436782836914
    3. '):' → logprob: -8.875436782836914
    4. '   ' → logprob: -9.875436782836914
    5. ':
' → logprob: -10.250436782836914
    6. '       ' → logprob: -10.875436782836914
    7. ')' → logprob: -11.250436782836914
    8. ':return' → logprob: -11.750436782836914
    9. '<|end|>' → logprob: -12.250436782836914
    10. ',' → logprob: -12.500436782836914

Token 446: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01606510579586029
    2. ' if' → logprob: -4.1410651206970215
    3. '	' → logprob: -12.141064643859863
    4. ' return' → logprob: -12.266064643859863
    5. '```' → logprob: -12.516064643859863
    6. 'if' → logprob: -12.766064643859863
    7. ' ' → logprob: -12.766064643859863
    8. '   ' → logprob: -12.766064643859863
    9. '      ' → logprob: -13.516064643859863
    10. '        ' → logprob: -13.891064643859863

Token 447: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.1282515823841095
    2. ' if' → logprob: -2.128251552581787
    3. '       ' → logprob: -6.628251552581787
    4. '	if' → logprob: -16.878252029418945
    5. 'return' → logprob: -17.128252029418945
    6. ' ' → logprob: -17.878252029418945
    7. '```' → logprob: -18.003252029418945
    8. '   ' → logprob: -18.128252029418945
    9. '0' → logprob: -20.378252029418945
    10. 'If' → logprob: -20.628252029418945

Token 448: ' value' (ID: 1432)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.06263837963342667
    2. ' value' → logprob: -2.812638282775879
    3. 'self' → logprob: -7.562638282775879
    4. ' self' → logprob: -9.187638282775879
    5. '   ' → logprob: -10.437638282775879
    6. ' not' → logprob: -11.687638282775879
    7. ' ' → logprob: -12.437638282775879
    8. 'not' → logprob: -12.687638282775879
    9. '	value' → logprob: -13.687638282775879
    10. '       ' → logprob: -13.812638282775879

Token 449: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.029753385111689568
    2. '<' → logprob: -3.5297534465789795
    3. ' not' → logprob: -14.029753684997559
    4. ' ' → logprob: -15.154753684997559
    5. '<p' → logprob: -15.279753684997559
    6. ')' → logprob: -15.529753684997559
    7. '<int' → logprob: -15.779753684997559
    8. '[' → logprob: -15.904753684997559
    9. '<|end|>' → logprob: -15.904753684997559
    10. '<class' → logprob: -16.154752731323242

Token 450: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0011703446507453918
    2. ' self' → logprob: -6.7511701583862305
    3. '0' → logprob: -16.751171112060547
    4. '=self' → logprob: -16.876171112060547
    5. '	self' → logprob: -17.876171112060547
    6. '(self' → logprob: -18.251171112060547
    7. '   ' → logprob: -19.251171112060547
    8. '1' → logprob: -19.376171112060547
    9. '_self' → logprob: -20.501171112060547
    10. ' ' → logprob: -20.626171112060547

Token 451: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.00014299227041192353
    2. '_min' → logprob: -8.875143051147461
    3. '_self' → logprob: -13.375143051147461
    4. 'self' → logprob: -14.375143051147461
    5. ' or' → logprob: -15.000143051147461
    6. '.' → logprob: -15.500143051147461
    7. '   ' → logprob: -15.625143051147461
    8. '.min' → logprob: -16.37514305114746
    9. ' .' → logprob: -16.75014305114746
    10. '.__' → logprob: -17.00014305114746

Token 452: 'min' (ID: 1493)
  Prédit: 'min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -2.696889623621246e-06
    2. '_min' → logprob: -12.87500286102295
    3. 'max' → logprob: -16.000001907348633
    4. '.min' → logprob: -19.000001907348633
    5. ' min' → logprob: -19.125001907348633
    6. '	min' → logprob: -21.125001907348633
    7. 'count' → logprob: -21.500001907348633
    8. '_' → logprob: -21.500001907348633
    9. 'minimum' → logprob: -21.750001907348633
    10. '(min' → logprob: -21.875001907348633

Token 453: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.000805341056548059
    2. 'or' → logprob: -7.125805377960205
    3. ' ' → logprob: -14.250804901123047
    4. '	or' → logprob: -16.500804901123047
    5. '        ' → logprob: -18.125804901123047
    6. ':' → logprob: -18.250804901123047
    7. '0' → logprob: -18.500804901123047
    8. '       ' → logprob: -19.250804901123047
    9. ' ' → logprob: -19.250804901123047
    10. '    ' → logprob: -19.250804901123047

Token 454: ' value' (ID: 1432)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.038043901324272156
    2. ' value' → logprob: -3.288043975830078
    3. 'self' → logprob: -14.163043975830078
    4. '   ' → logprob: -14.413043975830078
    5. ' ' → logprob: -14.913043975830078
    6. '  ' → logprob: -15.788043975830078
    7. '	value' → logprob: -15.788043975830078
    8. '       ' → logprob: -15.913043975830078
    9. '    ' → logprob: -16.163043975830078
    10. '           ' → logprob: -16.413043975830078

Token 455: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.01416398212313652
    2. ' >' → logprob: -4.264163970947266
    3. '>=' → logprob: -15.139163970947266
    4. ' ' → logprob: -16.264163970947266
    5. '()>' → logprob: -17.639163970947266
    6. '=' → logprob: -18.264163970947266
    7. ' >=' → logprob: -18.389163970947266
    8. '>
' → logprob: -18.889163970947266
    9. '   ' → logprob: -18.889163970947266
    10. '>

' → logprob: -18.889163970947266

Token 456: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0028071331325918436
    2. ' self' → logprob: -5.877807140350342
    3. '       ' → logprob: -13.377806663513184
    4. '(self' → logprob: -15.002806663513184
    5. '=self' → logprob: -15.877806663513184
    6. '	self' → logprob: -15.877806663513184
    7. '   ' → logprob: -16.6278076171875
    8. '           ' → logprob: -17.0028076171875
    9. '[self' → logprob: -17.0028076171875
    10. 'Self' → logprob: -17.6278076171875

Token 457: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -6.778209353797138e-05
    2. '_max' → logprob: -9.625067710876465
    3. '   ' → logprob: -14.750067710876465
    4. '_' → logprob: -15.250067710876465
    5. '.' → logprob: -15.375067710876465
    6. '."_' → logprob: -15.750067710876465
    7. ']._' → logprob: -16.37506866455078
    8. '_min' → logprob: -16.37506866455078
    9. ')._' → logprob: -16.37506866455078
    10. ' _' → logprob: -16.75006866455078

Token 458: 'max' (ID: 3228)
  Prédit: 'max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -3.7697225252486533e-06
    2. '_max' → logprob: -13.000003814697266
    3. 'min' → logprob: -14.125003814697266
    4. ' max' → logprob: -14.375003814697266
    5. 'm' → logprob: -17.250003814697266
    6. '	max' → logprob: -17.750003814697266
    7. '.max' → logprob: -18.000003814697266
    8. 'ax' → logprob: -18.250003814697266
    9. ' ' → logprob: -19.000003814697266
    10. '(max' → logprob: -19.375003814697266

Token 459: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.010428770445287228
    2. ':
' → logprob: -4.8854289054870605
    3. ' or' → logprob: -6.1354289054870605
    4. ':return' → logprob: -7.3854289054870605
    5. '       ' → logprob: -10.635428428649902
    6. '   ' → logprob: -13.010428428649902
    7. ':
' → logprob: -13.510428428649902
    8. '):' → logprob: -13.635428428649902
    9. ' :' → logprob: -13.885428428649902
    10. ')' → logprob: -14.010428428649902

Token 460: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6918043494224548
    2. '       ' → logprob: -1.1918044090270996
    3. ':' → logprob: -1.8168044090270996
    4. '0' → logprob: -4.6918044090271
    5. ' return' → logprob: -5.0668044090271
    6. '        ' → logprob: -5.4418044090271
    7. ':return' → logprob: -5.4418044090271
    8. ' or' → logprob: -5.5668044090271
    9. ' :' → logprob: -6.1918044090271
    10. '               ' → logprob: -7.1918044090271

Token 461: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.48912519216537476
    2. 'return' (adapté à ' return') → logprob: -0.9891251921653748
    3. '0' → logprob: -4.2391252517700195
    4. '       ' → logprob: -7.7391252517700195
    5. ':return' → logprob: -9.98912525177002
    6. '           ' → logprob: -11.36412525177002
    7. '	return' → logprob: -12.23912525177002
    8. ' ' → logprob: -12.36412525177002
    9. 'eturn' → logprob: -12.73912525177002
    10. '   ' → logprob: -13.11412525177002

Token 462: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.5491004129871726e-05
    2. ' ' → logprob: -10.000045776367188
    3. '   ' → logprob: -21.000045776367188
    4. '  ' → logprob: -23.000045776367188
    5. ' ' → logprob: -23.500045776367188
    6. '۰' → logprob: -23.875045776367188
    7. '00' → logprob: -24.125045776367188
    8. '000' → logprob: -24.250045776367188
    9. '       ' → logprob: -24.375045776367188
    10. '    ' → logprob: -24.500045776367188

Token 463: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -18.5
    3. '00' → logprob: -23.75
    4. '000' → logprob: -24.0
    5. '   ' → logprob: -24.0
    6. '۰' → logprob: -24.75
    7. 'float' → logprob: -25.125
    8. '```' → logprob: -25.875
    9. '.' → logprob: -26.375
    10. '０' → logprob: -26.875

Token 464: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.000511091377120465
    2. '       ' → logprob: -7.625511169433594
    3. '0' → logprob: -11.625511169433594
    4. '.
' → logprob: -11.750511169433594
    5. '
' → logprob: -12.125511169433594
    6. ' ' → logprob: -15.625511169433594
    7. '   ' → logprob: -15.750511169433594
    8. '	' → logprob: -15.750511169433594
    9. 'e' → logprob: -16.500511169433594
    10. '        
' → logprob: -16.500511169433594

Token 465: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -20.125
    3. 'return' → logprob: -20.125
    4. '```' → logprob: -20.375
    5. 'float' → logprob: -22.125
    6. '   ' → logprob: -22.25
    7. '       ' → logprob: -22.75
    8. 'zero' → logprob: -22.875
    9. '    ' → logprob: -23.25
    10. '.' → logprob: -23.5

Token 466: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0017301602056249976
    2. '
' → logprob: -6.626729965209961
    3. ' 
' → logprob: -9.376729965209961
    4. ' return' → logprob: -9.751729965209961
    5. ')' → logprob: -9.876729965209961
    6. '        
' → logprob: -9.876729965209961
    7. '.' → logprob: -10.251729965209961
    8. 'return' → logprob: -10.376729965209961
    9. '	' → logprob: -10.501729965209961
    10. '   ' → logprob: -11.126729965209961

Token 467: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -9.746380237629637e-05
    2. '
' → logprob: -10.250097274780273
    3. '        
' → logprob: -10.375097274780273
    4. ' return' → logprob: -10.875097274780273
    5. ' 
' → logprob: -12.500097274780273
    6. '	' → logprob: -12.875097274780273
    7. 'return' → logprob: -13.875097274780273
    8. '    
' → logprob: -14.250097274780273
    9. '  
' → logprob: -14.375097274780273
    10. '   ' → logprob: -14.375097274780273

Token 468: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0186823271214962
    2. ' return' → logprob: -4.268682479858398
    3. '       ' → logprob: -5.518682479858398
    4. 'count' → logprob: -7.643682479858398
    5. '
' → logprob: -11.393682479858398
    6. 'counts' → logprob: -12.518682479858398
    7. ' count' → logprob: -13.768682479858398
    8. '        
' → logprob: -14.393682479858398
    9. 'result' → logprob: -14.643682479858398
    10. 'cnt' → logprob: -14.893682479858398

Token 469: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.10020806640386581
    2. 'self' → logprob: -2.350208044052124
    3. '       ' → logprob: -13.975208282470703
    4. '(self' → logprob: -15.100208282470703
    5. '   ' → logprob: -16.350208282470703
    6. ' float' → logprob: -16.475208282470703
    7. '	self' → logprob: -16.475208282470703
    8. ' ' → logprob: -17.850208282470703
    9. 'float' → logprob: -18.225208282470703
    10. '           ' → logprob: -18.975208282470703

Token 470: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.00015920029545668513
    2. '.' → logprob: -8.75015926361084
    3. ' .' → logprob: -14.62515926361084
    4. 'self' → logprob: -16.625158309936523
    5. ')._' → logprob: -16.625158309936523
    6. '.__' → logprob: -17.000158309936523
    7. '_' → logprob: -17.750158309936523
    8. '   ' → logprob: -18.000158309936523
    9. ']._' → logprob: -18.000158309936523
    10. ' ' → logprob: -18.250158309936523

Token 471: 'counts' (ID: 99089)
  Prédit: 'counts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'counts' → logprob: -2.47495681833243e-05
    2. '_counts' → logprob: -10.625024795532227
    3. 'count' → logprob: -15.125024795532227
    4. ' counts' → logprob: -15.875024795532227
    5. 'c' → logprob: -18.250024795532227
    6. '   ' → logprob: -19.375024795532227
    7. '_' → logprob: -19.875024795532227
    8. '
' → logprob: -20.375024795532227
    9. 'cout' → logprob: -20.375024795532227
    10. 'cnt' → logprob: -20.500024795532227

Token 472: '[value' (ID: 96564)
  Prédit: '[value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[value' → logprob: -3.4121114822482923e-06
    2. ' [' → logprob: -13.125003814697266
    3. '[' → logprob: -13.625003814697266
    4. 'value' → logprob: -15.875003814697266
    5. '[val' → logprob: -18.500003814697266
    6. '(value' → logprob: -18.500003814697266
    7. '   ' → logprob: -18.875003814697266
    8. '[self' → logprob: -18.875003814697266
    9. '[
' → logprob: -19.000003814697266
    10. '```' → logprob: -19.250003814697266

Token 473: ']' (ID: 60)
  Prédit: ' /'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.10921156406402588
    2. ']' → logprob: -2.3592114448547363
    3. '/' → logprob: -5.234211444854736
    4. ')' → logprob: -5.734211444854736
    5. '/self' → logprob: -9.109211921691895
    6. ' ]' → logprob: -9.609211921691895
    7. ']/' → logprob: -9.609211921691895
    8. '   ' → logprob: -9.734211921691895
    9. ' )' → logprob: -10.984211921691895
    10. ' ' → logprob: -11.109211921691895

Token 474: ' /' (ID: 820)
  Prédit: ' /'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.2520812153816223
    2. '/' → logprob: -1.5020811557769775
    3. '/self' → logprob: -8.877080917358398
    4. '/
' → logprob: -11.627080917358398
    5. ' /
' → logprob: -13.752080917358398
    6. ' ' → logprob: -14.127080917358398
    7. '       ' → logprob: -14.252080917358398
    8. '
' → logprob: -15.252080917358398
    9. 'self' → logprob: -15.252080917358398
    10. '```' → logprob: -15.627080917358398

Token 475: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0024756586644798517
    2. ' self' → logprob: -6.002475738525391
    3. '       ' → logprob: -17.37747573852539
    4. 'float' → logprob: -17.62747573852539
    5. '   ' → logprob: -18.12747573852539
    6. '(self' → logprob: -18.62747573852539
    7. ' ' → logprob: -19.37747573852539
    8. '	self' → logprob: -19.50247573852539
    9. '
' → logprob: -21.00247573852539
    10. '        
' → logprob: -21.37747573852539

Token 476: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.0011736786691471934
    2. '_total' → logprob: -6.751173496246338
    3. '.total' → logprob: -12.876173973083496
    4. '_self' → logprob: -14.626173973083496
    5. 'otal' → logprob: -15.501173973083496
    6. '_tot' → logprob: -15.876173973083496
    7. '.' → logprob: -16.87617301940918
    8. 'total' → logprob: -17.87617301940918
    9. ' _' → logprob: -18.00117301940918
    10. 'self' → logprob: -18.37617301940918

Token 477: 'total' (ID: 9577)
  Prédit: 'total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -1.9361264946837764e-07
    2. 'tot' → logprob: -17.0
    3. ' total' → logprob: -17.25
    4. '.total' → logprob: -17.75
    5. 't' → logprob: -17.875
    6. 'otal' → logprob: -18.625
    7. 'max' → logprob: -19.0
    8. '	total' → logprob: -19.0
    9. 'counts' → logprob: -19.125
    10. 'to' → logprob: -19.5

Token 478: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4038390815258026
    2. '   ' → logprob: -1.153839111328125
    3. '<|end|>' → logprob: -4.653839111328125
    4. '    
' → logprob: -5.153839111328125
    5. ' 
' → logprob: -7.778839111328125
    6. ' ' → logprob: -7.903839111328125
    7. '```' → logprob: -8.403839111328125
    8. '  
' → logprob: -8.903839111328125
    9. '        
' → logprob: -9.153839111328125
    10. '@property' → logprob: -10.028839111328125

Token 479: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 480: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.000743995129596442
    2. ' def' → logprob: -7.500743865966797
    3. '   ' → logprob: -9.250743865966797
    4. '@property' → logprob: -9.625743865966797
    5. '@' → logprob: -11.000743865966797
    6. ' ' → logprob: -12.250743865966797
    7. '
' → logprob: -12.375743865966797
    8. '    
' → logprob: -13.000743865966797
    9. ' 
' → logprob: -15.250743865966797
    10. ' @' → logprob: -15.625743865966797

Token 481: ' support' (ID: 2498)
  Prédit: 'support'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'support' → logprob: -0.1269301027059555
    2. ' support' → logprob: -2.126929998397827
    3. 's' → logprob: -14.626930236816406
    4. 'supports' → logprob: -14.876930236816406
    5. 'prob' → logprob: -15.126930236816406
    6. '.support' → logprob: -15.876930236816406
    7. 'Support' → logprob: -16.001930236816406
    8. 'supp' → logprob: -16.251930236816406
    9. 'upport' → logprob: -16.376930236816406
    10. 'supported' → logprob: -16.626930236816406

Token 482: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -9.817902173381299e-05
    2. '(' → logprob: -9.25009822845459
    3. 'self' → logprob: -13.62509822845459
    4. '(s' → logprob: -14.87509822845459
    5. ' (' → logprob: -15.25009822845459
    6. '(
' → logprob: -16.625097274780273
    7. 's' → logprob: -16.875097274780273
    8. '   ' → logprob: -17.250097274780273
    9. '()' → logprob: -17.750097274780273
    10. ' ' → logprob: -18.750097274780273

Token 483: ')' (ID: 8)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.26962029933929443
    2. ')' → logprob: -1.5196202993392944
    3. 'self' → logprob: -4.144620418548584
    4. ')(' → logprob: -7.269620418548584
    5. '   ' → logprob: -7.769620418548584
    6. ' ' → logprob: -8.769619941711426
    7. '()' → logprob: -8.894619941711426
    8. '       ' → logprob: -9.394619941711426
    9. '(' → logprob: -9.769619941711426
    10. ' self' → logprob: -10.644619941711426

Token 484: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0004978670622222126
    2. '(' → logprob: -8.375497817993164
    3. 'self' → logprob: -8.375497817993164
    4. '->' → logprob: -11.000497817993164
    5. ')' → logprob: -12.000497817993164
    6. ' ->' → logprob: -12.375497817993164
    7. '   ' → logprob: -12.375497817993164
    8. ' (' → logprob: -13.625497817993164
    9. ' self' → logprob: -13.625497817993164
    10. '       ' → logprob: -13.875497817993164

Token 485: ' Tuple' (ID: 50841)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.6803216338157654
    2. 'Tuple' → logprob: -1.0553216934204102
    3. '(' → logprob: -2.30532169342041
    4. '(int' → logprob: -3.43032169342041
    5. ' Tuple' → logprob: -5.55532169342041
    6. ' (' → logprob: -5.68032169342041
    7. '(self' → logprob: -5.68032169342041
    8. '(T' → logprob: -7.05532169342041
    9. '(tuple' → logprob: -7.55532169342041
    10. '   ' → logprob: -8.43032169342041

Token 486: '[int' (ID: 40124)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.10803822427988052
    2. '[int' → logprob: -2.4830381870269775
    3. '(' → logprob: -3.9830381870269775
    4. '(in' → logprob: -9.608037948608398
    5. ' (' → logprob: -9.733037948608398
    6. '(self' → logprob: -9.858037948608398
    7. ',int' → logprob: -10.358037948608398
    8. '<int' → logprob: -10.858037948608398
    9. ':int' → logprob: -11.358037948608398
    10. '[' → logprob: -11.483037948608398

Token 487: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.5491004129871726e-05
    2. ' ,' → logprob: -10.375045776367188
    3. ',int' → logprob: -11.750045776367188
    4. '[' → logprob: -12.625045776367188
    5. ',
' → logprob: -14.000045776367188
    6. ',self' → logprob: -14.250045776367188
    7. 'self' → logprob: -15.000045776367188
    8. ',K' → logprob: -15.500045776367188
    9. '(' → logprob: -15.625045776367188
    10. '‌,' → logprob: -15.750045776367188

Token 488: ' int' (ID: 677)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.012714354321360588
    2. 'int' → logprob: -4.387714385986328
    3. ' self' → logprob: -9.012714385986328
    4. '1' → logprob: -9.762714385986328
    5. '2' → logprob: -11.762714385986328
    6. '_self' → logprob: -11.762714385986328
    7. ' int' → logprob: -12.762714385986328
    8. 'Self' → logprob: -13.387714385986328
    9. '(self' → logprob: -14.012714385986328
    10. 'None' → logprob: -14.512714385986328

Token 489: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.02070748433470726
    2. '):' → logprob: -4.895707607269287
    3. ']:
' → logprob: -4.895707607269287
    4. ',' → logprob: -5.645707607269287
    5. ']' → logprob: -6.270707607269287
    6. '):
' → logprob: -9.645707130432129
    7. ']:

' → logprob: -11.145707130432129
    8. ':' → logprob: -12.020707130432129
    9. ']:
' → logprob: -12.145707130432129
    10. '():' → logprob: -12.145707130432129

Token 490: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.33795803785324097
    2. ' return' → logprob: -1.8379580974578857
    3. 'return' → logprob: -2.0879580974578857
    4. ':
' → logprob: -6.712957859039307
    5. '   ' → logprob: -7.087957859039307
    6. ':return' → logprob: -7.337957859039307
    7. ':' → logprob: -8.087958335876465
    8. '(' → logprob: -8.087958335876465
    9. ' (' → logprob: -8.712958335876465
    10. ',' → logprob: -9.337958335876465

Token 491: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.02941255085170269
    2. '(' → logprob: -4.279412746429443
    3. ' return' → logprob: -4.529412746429443
    4. '(self' → logprob: -5.529412746429443
    5. ' (' → logprob: -9.029412269592285
    6. '(return' → logprob: -9.029412269592285
    7. '       ' → logprob: -9.154412269592285
    8. 'self' → logprob: -10.654412269592285
    9. '(
' → logprob: -12.779412269592285
    10. '   ' → logprob: -12.779412269592285

Token 492: ' self' (ID: 1051)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.014175730757415295
    2. 'self' → logprob: -4.264175891876221
    3. ' self' → logprob: -11.514175415039062
    4. ' (' → logprob: -13.014175415039062
    5. '(' → logprob: -17.264175415039062
    6. '   ' → logprob: -17.764175415039062
    7. '	self' → logprob: -18.514175415039062
    8. '[self' → logprob: -18.639175415039062
    9. '(
' → logprob: -19.014175415039062
    10. ':self' → logprob: -21.139175415039062

Token 493: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.0021888066548854113
    2. '(_' → logprob: -6.752188682556152
    3. '(self' → logprob: -7.252188682556152
    4. '_min' → logprob: -8.502188682556152
    5. '(' → logprob: -10.127188682556152
    6. '_self' → logprob: -10.252188682556152
    7. ' (' → logprob: -12.002188682556152
    8. 'self' → logprob: -12.002188682556152
    9. '.' → logprob: -12.127188682556152
    10. '_' → logprob: -12.502188682556152

Token 494: 'min' (ID: 1493)
  Prédit: 'min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.0015045057516545057
    2. '_min' → logprob: -6.501504421234131
    3. '(min' → logprob: -13.126504898071289
    4. 'max' → logprob: -15.876504898071289
    5. ' min' → logprob: -17.00150489807129
    6. '.min' → logprob: -18.00150489807129
    7. 'mini' → logprob: -18.62650489807129
    8. '(' → logprob: -18.62650489807129
    9. '	min' → logprob: -19.00150489807129
    10. '(K' → logprob: -19.00150489807129

Token 495: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.796184723294573e-06
    2. ',
' → logprob: -12.875005722045898
    3. ' ,' → logprob: -13.000005722045898
    4. ',self' → logprob: -14.000005722045898
    5. '+' → logprob: -16.8750057220459
    6. '‌,' → logprob: -18.0000057220459
    7. '-' → logprob: -18.5000057220459
    8. ',

' → logprob: -18.6250057220459
    9. ',int' → logprob: -18.6250057220459
    10. '   ' → logprob: -18.8750057220459

Token 496: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0015023599844425917
    2. ' self' → logprob: -6.501502513885498
    3. '       ' → logprob: -19.126502990722656
    4. '	self' → logprob: -19.876502990722656
    5. '(self' → logprob: -20.001502990722656
    6. '_self' → logprob: -20.876502990722656
    7. '   ' → logprob: -21.001502990722656
    8. ' ' → logprob: -21.251502990722656
    9. '[self' → logprob: -22.501502990722656
    10. '
' → logprob: -23.501502990722656

Token 497: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.5760766267776489
    2. '_max' → logprob: -0.8260766267776489
    3. '_min' → logprob: -8.95107650756836
    4. ' _' → logprob: -12.70107650756836
    5. '_MAX' → logprob: -13.82607650756836
    6. '.' → logprob: -13.95107650756836
    7. '_self' → logprob: -14.07607650756836
    8. '_' → logprob: -14.82607650756836
    9. '.max' → logprob: -15.70107650756836
    10. '_Max' → logprob: -16.07607650756836

Token 498: 'max' (ID: 3228)
  Prédit: 'max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -1.1472419600977446e-06
    2. '_max' → logprob: -13.750000953674316
    3. ' max' → logprob: -17.750001907348633
    4. 'min' → logprob: -21.625001907348633
    5. '.max' → logprob: -22.375001907348633
    6. 'm' → logprob: -22.500001907348633
    7. '	max' → logprob: -23.500001907348633
    8. 'Max' → logprob: -24.000001907348633
    9. 'maks' → logprob: -24.500001907348633
    10. '(max' → logprob: -24.625001907348633

Token 499: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 500: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.3405345380306244
    2. 'def' → logprob: -1.9655345678329468
    3. '   ' → logprob: -2.0905344486236572
    4. ' ' → logprob: -4.090534687042236
    5. '<|end|>' → logprob: -5.965534687042236
    6. ')' → logprob: -6.215534687042236
    7. '    
' → logprob: -7.465534687042236
    8. ' def' → logprob: -7.465534687042236
    9. '(' → logprob: -7.840534687042236
    10. ' class' → logprob: -7.965534687042236

Token 501: ' Jump' (ID: 51108)
  Prédit: 'Solution'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Solution' → logprob: -0.7018283009529114
    2. 'Solver' → logprob: -2.4518282413482666
    3. 'Probability' → logprob: -2.7018282413482666
    4. 'Bern' → logprob: -3.3268282413482666
    5. 'G' → logprob: -3.4518282413482666
    6. 'Fraction' → logprob: -3.7018282413482666
    7. 'Sum' → logprob: -3.8268282413482666
    8. ' Solution' → logprob: -3.8268282413482666
    9. 'Mod' → logprob: -4.076828479766846
    10. 'Exact' → logprob: -4.201828479766846

Token 502: 'Model' (ID: 2239)
  Prédit: 'Game'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Game' → logprob: -0.7158381938934326
    2. '()' → logprob: -1.4658381938934326
    3. 'Chain' → logprob: -3.4658381938934326
    4. 'Process' → logprob: -3.5908381938934326
    5. 'Distribution' → logprob: -3.5908381938934326
    6. 'Distance' → logprob: -3.9658381938934326
    7. 'ing' → logprob: -4.340838432312012
    8. '(' → logprob: -4.590838432312012
    9. 'Point' → logprob: -4.590838432312012
    10. 'Target' → logprob: -4.715838432312012

Token 503: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02081664837896824
    2. '(' → logprob: -3.8958165645599365
    3. '():' → logprob: -9.020816802978516
    4. ' :' → logprob: -9.895816802978516
    5. ':
' → logprob: -10.270816802978516
    6. '(Abstract' → logprob: -10.270816802978516
    7. '(J' → logprob: -11.020816802978516
    8. '):' → logprob: -12.270816802978516
    9. '(object' → logprob: -12.895816802978516
    10. '(I' → logprob: -13.270816802978516

Token 504: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2016766518354416
    2. ' def' → logprob: -1.701676607131958
    3. 'def' → logprob: -8.701676368713379
    4. '	def' → logprob: -9.451676368713379
    5. '   ' → logprob: -11.201676368713379
    6. '   ' → logprob: -13.076676368713379
    7. ':' → logprob: -14.576676368713379
    8. ',' → logprob: -14.951676368713379
    9. '\t' → logprob: -15.076676368713379
    10. ':def' → logprob: -15.076676368713379

Token 505: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.251930832862854
    2. 'def' (adapté à ' def') → logprob: -1.501930832862854
    3. '   ' → logprob: -13.501931190490723
    4. '	def' → logprob: -15.751931190490723
    5. '__' → logprob: -16.376930236816406
    6. 'class' → logprob: -17.001930236816406
    7. ' __' → logprob: -17.126930236816406
    8. ' ' → logprob: -17.376930236816406
    9. '```' → logprob: -17.626930236816406
    10. ':def' → logprob: -18.876930236816406

Token 506: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.47480353713035583
    2. '__' → logprob: -0.9748035669326782
    3. 'init' → logprob: -7.974803447723389
    4. '_init' → logprob: -8.099803924560547
    5. '_' → logprob: -9.849803924560547
    6. 'def' → logprob: -11.224803924560547
    7. '___' → logprob: -12.349803924560547
    8. ' init' → logprob: -13.099803924560547
    9. ' def' → logprob: -13.224803924560547
    10. ' _' → logprob: -13.849803924560547

Token 507: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: 0.0
    2. '_init' → logprob: -18.625
    3. ' init' → logprob: -18.875
    4. 'def' → logprob: -19.0
    5. '_' → logprob: -21.0
    6. 'inite' → logprob: -21.625
    7. '
' → logprob: -21.875
    8. 'call' → logprob: -22.25
    9. '```' → logprob: -22.625
    10. '.init' → logprob: -23.125

Token 508: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.06219712644815445
    2. '(self' → logprob: -2.812197208404541
    3. '__' → logprob: -8.812196731567383
    4. '(' → logprob: -10.062196731567383
    5. '__(
' → logprob: -10.937196731567383
    6. ' (' → logprob: -11.062196731567383
    7. 'self' → logprob: -13.812196731567383
    8. '_(' → logprob: -14.062196731567383
    9. '__((' → logprob: -14.062196731567383
    10. '<>(' → logprob: -14.812196731567383

Token 509: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.0921942703134846e-05
    2. ' self' → logprob: -11.50001049041748
    3. '(self' → logprob: -14.75001049041748
    4. '
' → logprob: -16.125011444091797
    5. ')' → logprob: -16.625011444091797
    6. '0' → logprob: -17.125011444091797
    7. '   ' → logprob: -17.750011444091797
    8. 'def' → logprob: -17.875011444091797
    9. ',' → logprob: -18.750011444091797
    10. 'S' → logprob: -19.000011444091797

Token 510: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0016117468476295471
    2. 'self' → logprob: -6.751611709594727
    3. ' ,' → logprob: -8.251611709594727
    4. '(self' → logprob: -9.001611709594727
    5. ' (' → logprob: -10.626611709594727
    6. ',self' → logprob: -11.126611709594727
    7. ' self' → logprob: -11.751611709594727
    8. '):' → logprob: -12.751611709594727
    9. '   ' → logprob: -12.876611709594727
    10. ',
' → logprob: -13.001611709594727

Token 511: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.10299152880907059
    2. ' S' → logprob: -2.6029915809631348
    3. 'N' → logprob: -4.602991580963135
    4. 'prob' → logprob: -5.227991580963135
    5. 'max' → logprob: -6.727991580963135
    6. 'start' → logprob: -6.727991580963135
    7. ' N' → logprob: -6.852991580963135
    8. 'distribution' → logprob: -7.102991580963135
    9. 'K' → logprob: -7.477991580963135
    10. 's' → logprob: -7.602991580963135

Token 512: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00031615851912647486
    2. '=' → logprob: -8.625316619873047
    3. ' ,' → logprob: -9.250316619873047
    4. ':' → logprob: -10.500316619873047
    5. ')' → logprob: -12.375316619873047
    6. ',
' → logprob: -13.250316619873047
    7. ',K' → logprob: -13.250316619873047
    8. ',S' → logprob: -13.875316619873047
    9. '   ' → logprob: -14.125316619873047
    10. '-' → logprob: -14.250316619873047

Token 513: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.029753385111689568
    2. ' int' → logprob: -3.5297534465789795
    3. ',' → logprob: -13.779753684997559
    4. ')' → logprob: -14.404753684997559
    5. ':int' → logprob: -14.654753684997559
    6. 'float' → logprob: -15.029753684997559
    7. ',int' → logprob: -15.529753684997559
    8. '[int' → logprob: -15.779753684997559
    9. ' )' → logprob: -16.529752731323242
    10. 'Optional' → logprob: -17.029752731323242

Token 514: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.703443770878948e-06
    2. ' ,' → logprob: -12.375007629394531
    3. '):' → logprob: -12.875007629394531
    4. ')' → logprob: -14.500007629394531
    5. ':' → logprob: -15.750007629394531
    6. '   ' → logprob: -16.62500762939453
    7. ',int' → logprob: -17.50000762939453
    8. ',
' → logprob: -17.62500762939453
    9. ',K' → logprob: -17.87500762939453
    10. '‌,' → logprob: -19.12500762939453

Token 515: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.04902060329914093
    2. ' N' → logprob: -3.049020528793335
    3. 'prob' → logprob: -8.174020767211914
    4. '    ' → logprob: -10.799020767211914
    5. '   ' → logprob: -11.174020767211914
    6. '        ' → logprob: -11.174020767211914
    7. 'distribution' → logprob: -11.299020767211914
    8. '         ' → logprob: -11.674020767211914
    9. 'K' → logprob: -11.799020767211914
    10. '       ' → logprob: -11.799020767211914

Token 516: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007685328018851578
    2. ':' → logprob: -7.375768661499023
    3. ' ,' → logprob: -9.000768661499023
    4. ':int' → logprob: -12.125768661499023
    5. ',int' → logprob: -12.500768661499023
    6. ',K' → logprob: -12.500768661499023
    7. ',
' → logprob: -13.250768661499023
    8. '=' → logprob: -13.625768661499023
    9. ')' → logprob: -13.750768661499023
    10. 'int' → logprob: -13.750768661499023

Token 517: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.00038527094875462353
    2. ' int' → logprob: -7.875385284423828
    3. 'Optional' → logprob: -13.000385284423828
    4. 'Int' → logprob: -14.500385284423828
    5. 'N' → logprob: -14.625385284423828
    6. ')' → logprob: -14.875385284423828
    7. ' ' → logprob: -14.875385284423828
    8. '[int' → logprob: -15.000385284423828
    9. '  ' → logprob: -15.500385284423828
    10. 'K' → logprob: -15.625385284423828

Token 518: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.5094070477061905e-05
    2. ' ,' → logprob: -11.125015258789062
    3. ')' → logprob: -16.625015258789062
    4. ',
' → logprob: -17.000015258789062
    5. '‌,' → logprob: -17.500015258789062
    6. ',K' → logprob: -17.625015258789062
    7. ',int' → logprob: -17.875015258789062
    8. '):' → logprob: -18.250015258789062
    9. '   ' → logprob: -18.375015258789062
    10. '),' → logprob: -19.125015258789062

Token 519: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.0021876145619899035
    2. ' K' → logprob: -6.127187728881836
    3. ' ' → logprob: -14.252187728881836
    4. ')' → logprob: -14.252187728881836
    5. '   ' → logprob: -14.252187728881836
    6. '    ' → logprob: -15.752187728881836
    7. '       ' → logprob: -16.002187728881836
    8. '  ' → logprob: -16.252187728881836
    9. '           ' → logprob: -16.877187728881836
    10. '
' → logprob: -16.877187728881836

Token 520: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5783590078353882
    2. '):
' → logprob: -0.8283590078353882
    3. ',' → logprob: -6.703359127044678
    4. ':' → logprob: -6.828359127044678
    5. '):
' → logprob: -9.57835865020752
    6. '):

' → logprob: -10.82835865020752
    7. ')' → logprob: -12.07835865020752
    8. ' ):' → logprob: -12.32835865020752
    9. '   ' → logprob: -12.82835865020752
    10. ' ):
' → logprob: -13.32835865020752

Token 521: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.029756972566246986
    2. ' int' → logprob: -3.529757022857666
    3. ')' → logprob: -12.029756546020508
    4. ' )' → logprob: -15.904756546020508
    5. 'Int' → logprob: -16.529756546020508
    6. ' ' → logprob: -16.529756546020508
    7. '1' → logprob: -17.154756546020508
    8. '2' → logprob: -17.279756546020508
    9. 'Optional' → logprob: -17.404756546020508
    10. '):
' → logprob: -17.654756546020508

Token 522: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00036834771162830293
    2. '):
' → logprob: -8.125368118286133
    3. ',' → logprob: -10.000368118286133
    4. ')' → logprob: -10.875368118286133
    5. '):
' → logprob: -12.250368118286133
    6. '   ' → logprob: -13.375368118286133
    7. ':' → logprob: -13.625368118286133
    8. '       ' → logprob: -15.500368118286133
    9. ' ):' → logprob: -15.750368118286133
    10. '),' → logprob: -17.875368118286133

Token 523: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002525957068428397
    2. 'self' → logprob: -6.127525806427002
    3. ',' → logprob: -8.50252628326416
    4. ' self' → logprob: -9.62752628326416
    5. '   ' → logprob: -10.37752628326416
    6. ':' → logprob: -10.75252628326416
    7. '):
' → logprob: -12.50252628326416
    8. ')' → logprob: -12.62752628326416
    9. '	' → logprob: -12.75252628326416
    10. '):' → logprob: -13.00252628326416

Token 524: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0004562943649943918
    2. '       ' → logprob: -7.7504563331604
    3. ' self' → logprob: -10.625455856323242
    4. 'import' → logprob: -14.375455856323242
    5. '   ' → logprob: -14.875455856323242
    6. 'from' → logprob: -15.750455856323242
    7. 'S' → logprob: -17.125455856323242
    8. 'def' → logprob: -17.250455856323242
    9. '
' → logprob: -17.500455856323242
    10. 'super' → logprob: -18.000455856323242

Token 525: '.S' (ID: 1242)
  Prédit: '.S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.S' → logprob: -0.012681283056735992
    2. '.' → logprob: -4.512681484222412
    3. '.N' → logprob: -6.512681484222412
    4. ' .' → logprob: -9.387681007385254
    5. 'S' → logprob: -10.387681007385254
    6. '   ' → logprob: -11.262681007385254
    7. '       ' → logprob: -12.012681007385254
    8. 'self' → logprob: -13.262681007385254
    9. '.s' → logprob: -13.387681007385254
    10. '.K' → logprob: -13.387681007385254

Token 526: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.39545130729675293
    2. '=' → logprob: -1.145451307296753
    3. ',' → logprob: -4.770451545715332
    4. ' ,' → logprob: -10.270451545715332
    5. '   ' → logprob: -11.645451545715332
    6. '       ' → logprob: -11.895451545715332
    7. ' ' → logprob: -12.270451545715332
    8. '=S' → logprob: -12.395451545715332
    9. '    ' → logprob: -12.520451545715332
    10. '        ' → logprob: -14.020451545715332

Token 527: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.07888978719711304
    2. ' S' → logprob: -2.578889846801758
    3. '_S' → logprob: -16.828889846801758
    4. ' ' → logprob: -16.953889846801758
    5. '	S' → logprob: -17.453889846801758
    6. ' ' → logprob: -18.078889846801758
    7. 's' → logprob: -19.828889846801758
    8. '(S' → logprob: -19.828889846801758
    9. '<|end|>' → logprob: -19.828889846801758
    10. '=S' → logprob: -19.953889846801758

Token 528: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2894176244735718
    2. '
' → logprob: -1.5394176244735718
    3. ',' → logprob: -3.6644177436828613
    4. ' 
' → logprob: -5.789417743682861
    5. ',
' → logprob: -6.039417743682861
    6. '        
' → logprob: -6.039417743682861
    7. '<|end|>' → logprob: -7.039417743682861
    8. '=' → logprob: -7.539417743682861
    9. 'self' → logprob: -7.789417743682861
    10. '  
' → logprob: -8.414417266845703

Token 529: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006863136310130358
    2. ',' → logprob: -5.506863117218018
    3. 'self' → logprob: -6.256863117218018
    4. ' self' → logprob: -7.256863117218018
    5. '
' → logprob: -10.256863594055176
    6. '   ' → logprob: -10.506863594055176
    7. '        
' → logprob: -10.881863594055176
    8. ' ' → logprob: -11.006863594055176
    9. 'import' → logprob: -11.256863594055176
    10. '        ' → logprob: -11.756863594055176

Token 530: ' self' (ID: 1051)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.048693422228097916
    2. 'self' (adapté à ' self') → logprob: -3.0486934185028076
    3. ' N' → logprob: -9.923693656921387
    4. ' self' → logprob: -10.548693656921387
    5. '       ' → logprob: -11.423693656921387
    6. 'prob' → logprob: -12.423693656921387
    7. 'def' → logprob: -12.798693656921387
    8. 'K' → logprob: -12.798693656921387
    9. 'from' → logprob: -12.923693656921387
    10. '   ' → logprob: -13.548693656921387

Token 531: '.N' (ID: 4439)
  Prédit: '.N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.N' → logprob: -0.029927285388112068
    2. '.S' → logprob: -4.2799272537231445
    3. ' =' → logprob: -5.2799272537231445
    4. '.' → logprob: -5.6549272537231445
    5. '._' → logprob: -6.2799272537231445
    6. '=' → logprob: -6.9049272537231445
    7. ',' → logprob: -7.2799272537231445
    8. 'N' → logprob: -7.4049272537231445
    9. '_N' → logprob: -7.9049272537231445
    10. ' .' → logprob: -8.029927253723145

Token 532: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.9166102409362793
    2. ',' → logprob: -1.0416102409362793
    3. ' =' → logprob: -1.4166102409362793
    4. '       ' → logprob: -5.541610240936279
    5. ' ,' → logprob: -7.916610240936279
    6. 'import' → logprob: -9.166610717773438
    7. '   ' → logprob: -9.291610717773438
    8. ',
' → logprob: -9.416610717773438
    9. ' ' → logprob: -10.541610717773438
    10. '
' → logprob: -10.541610717773438

Token 533: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0024775585625320673
    2. ' N' → logprob: -6.002477645874023
    3. 'S' → logprob: -14.627477645874023
    4. '1' → logprob: -14.627477645874023
    5. ' ' → logprob: -15.627477645874023
    6. 'K' → logprob: -15.627477645874023
    7. 'n' → logprob: -16.252477645874023
    8. 'int' → logprob: -16.252477645874023
    9. '	N' → logprob: -16.502477645874023
    10. '   ' → logprob: -17.002477645874023

Token 534: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02340375818312168
    2. 'self' → logprob: -4.273403644561768
    3. ',' → logprob: -4.773403644561768
    4. ' self' → logprob: -7.523403644561768
    5. '
' → logprob: -9.273404121398926
    6. ' ' → logprob: -9.898404121398926
    7. '   ' → logprob: -11.023404121398926
    8. ',
' → logprob: -11.273404121398926
    9. ' 
' → logprob: -12.148404121398926
    10. '      ' → logprob: -12.273404121398926

Token 535: '       ' (ID: 309)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.15837639570236206
    2. '       ' → logprob: -2.908376455307007
    3. ' self' → logprob: -3.033376455307007
    4. ',' → logprob: -3.283376455307007
    5. ' ' → logprob: -5.408376216888428
    6. '        ' → logprob: -8.033376693725586
    7. ' 
' → logprob: -8.158376693725586
    8. '   ' → logprob: -8.533376693725586
    9. '	self' → logprob: -8.533376693725586
    10. '	' → logprob: -9.283376693725586

Token 536: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.011205445975065231
    2. 'K' → logprob: -4.511205673217773
    3. ' self' → logprob: -8.886205673217773
    4. '       ' → logprob: -10.886205673217773
    5. ' K' → logprob: -14.261205673217773
    6. '   ' → logprob: -17.136205673217773
    7. '	self' → logprob: -18.136205673217773
    8. '(self' → logprob: -18.386205673217773
    9. '
' → logprob: -18.886205673217773
    10. '        ' → logprob: -19.386205673217773

Token 537: '.K' (ID: 14475)
  Prédit: '.K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.K' → logprob: -0.32544654607772827
    2. 'K' → logprob: -1.700446605682373
    3. ' =' → logprob: -3.575446605682373
    4. '.' → logprob: -3.700446605682373
    5. ',' → logprob: -4.200446605682373
    6. ' K' → logprob: -4.325446605682373
    7. '=' → logprob: -4.450446605682373
    8. ' .' → logprob: -7.700446605682373
    9. '_K' → logprob: -7.950446605682373
    10. ':' → logprob: -8.200446128845215

Token 538: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.22433599829673767
    2. ' =' → logprob: -1.72433602809906
    3. '<|end|>' → logprob: -3.9743359088897705
    4. ',' → logprob: -6.22433614730835
    5. ')' → logprob: -7.59933614730835
    6. '       ' → logprob: -8.099335670471191
    7. '<|end|>' → logprob: -8.349335670471191
    8. '
' → logprob: -8.474335670471191
    9. '+' → logprob: -8.724335670471191
    10. ' ' → logprob: -8.724335670471191

Token 539: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.0032088463194668293
    2. ' K' → logprob: -5.753208637237549
    3. '1' → logprob: -10.628209114074707
    4. ' ' → logprob: -13.128209114074707
    5. '   ' → logprob: -13.628209114074707
    6. '0' → logprob: -13.753209114074707
    7. 'S' → logprob: -14.878209114074707
    8. '       ' → logprob: -15.003209114074707
    9. '(' → logprob: -15.128209114074707
    10. '  ' → logprob: -15.503209114074707

Token 540: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7142921686172485
    2. '<|end|>' → logprob: -1.0892921686172485
    3. '       ' → logprob: -1.8392921686172485
    4. ' ' → logprob: -5.464292049407959
    5. '   ' → logprob: -5.839292049407959
    6. '        
' → logprob: -6.464292049407959
    7. ',' → logprob: -6.589292049407959
    8. '        ' → logprob: -6.839292049407959
    9. ' 
' → logprob: -7.089292049407959
    10. '    
' → logprob: -7.214292049407959

Token 541: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5314421057701111
    2. '
' → logprob: -1.2814421653747559
    3. '   ' → logprob: -2.781442165374756
    4. '<|end|>' → logprob: -2.906442165374756
    5. ' 
' → logprob: -5.406442165374756
    6. '    
' → logprob: -5.531442165374756
    7. ' ' → logprob: -6.406442165374756
    8. '        
' → logprob: -6.531442165374756
    9. '  
' → logprob: -6.656442165374756
    10. 'def' → logprob: -7.031442165374756

Token 542: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.03591477870941162
    2. '       ' → logprob: -3.785914897918701
    3. 'def' → logprob: -4.535914897918701
    4. ' self' → logprob: -6.785914897918701
    5. '   ' → logprob: -7.535914897918701
    6. '
' → logprob: -10.035914421081543
    7. 'import' → logprob: -10.660914421081543
    8. 'from' → logprob: -10.785914421081543
    9. ' def' → logprob: -10.910914421081543
    10. '        ' → logprob: -11.160914421081543

Token 543: '.dis' (ID: 8454)
  Prédit: '.pro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pro' → logprob: -0.043716270476579666
    2. '.dis' → logprob: -3.6687161922454834
    3. '.dist' → logprob: -4.9187164306640625
    4. '.dp' → logprob: -6.5437164306640625
    5. '.uniform' → logprob: -6.6687164306640625
    6. '.' → logprob: -6.7937164306640625
    7. '.current' → logprob: -6.9187164306640625
    8. '.initial' → logprob: -7.1687164306640625
    9. '.position' → logprob: -7.4187164306640625
    10. '.positions' → logprob: -7.9187164306640625

Token 544: 'tribution' (ID: 7090)
  Prédit: 'tribution'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tribution' → logprob: -0.0009467111667618155
    2. 't' → logprob: -7.250946521759033
    3. 'trib' → logprob: -8.375946998596191
    4. 'tributions' → logprob: -12.375946998596191
    5. 'tr' → logprob: -13.500946998596191
    6. ' trib' → logprob: -14.500946998596191
    7. '=' → logprob: -16.625946044921875
    8. 'tri' → logprob: -17.000946044921875
    9. 'distribution' → logprob: -17.250946044921875
    10. '#' → logprob: -17.250946044921875

Token 545: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.048587825149297714
    2. ' =' → logprob: -3.0485877990722656
    3. ':' → logprob: -15.173587799072266
    4. 's' → logprob: -15.548587799072266
    5. '_' → logprob: -17.048587799072266
    6. '=}' → logprob: -18.423587799072266
    7. '=

' → logprob: -18.673587799072266
    8. '_=' → logprob: -18.798587799072266
    9. ')' → logprob: -19.548587799072266
    10. '   ' → logprob: -19.798587799072266

Token 546: ' Uniform' (ID: 83603)
  Prédit: 'Uniform'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Uniform' → logprob: -0.004079112783074379
    2. ' Uniform' → logprob: -5.504079341888428
    3. ' uniform' → logprob: -14.75407886505127
    4. 'uniform' → logprob: -15.00407886505127
    5. 'Universal' → logprob: -17.129079818725586
    6. '_uniform' → logprob: -18.379079818725586
    7. 'Unified' → logprob: -19.004079818725586
    8. 'Union' → logprob: -19.379079818725586
    9. '   ' → logprob: -20.254079818725586
    10. ' ' → logprob: -21.129079818725586

Token 547: 'Sum' (ID: 17434)
  Prédit: 'Sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Sum' → logprob: -1.9361264946837764e-07
    2. 'sum' → logprob: -15.625
    3. ' Sum' → logprob: -16.875
    4. '_sum' → logprob: -17.5
    5. '   ' → logprob: -19.5
    6. 'S' → logprob: -20.625
    7. '(S' → logprob: -21.125
    8. 'Jump' → logprob: -21.125
    9. '(' → logprob: -21.25
    10. ' sum' → logprob: -21.375

Token 548: 'Distribution' (ID: 53154)
  Prédit: 'Distribution'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Distribution' → logprob: -1.5451681974809617e-05
    2. 'Sum' → logprob: -11.125015258789062
    3. 'distribution' → logprob: -14.375015258789062
    4. '_distribution' → logprob: -18.375015258789062
    5. '(' → logprob: -18.750015258789062
    6. 'Uniform' → logprob: -18.875015258789062
    7. 'Distrib' → logprob: -18.875015258789062
    8. '{' → logprob: -18.875015258789062
    9. 'Distributed' → logprob: -19.125015258789062
    10. ' distribution' → logprob: -19.375015258789062

Token 549: '(N' (ID: 10564)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.6944051384925842
    2. '(N' → logprob: -0.6944051384925842
    3. '(' → logprob: -6.8194050788879395
    4. '(S' → logprob: -9.069405555725098
    5. '(n' → logprob: -10.944405555725098
    6. ' (' → logprob: -11.194405555725098
    7. '(
' → logprob: -11.694405555725098
    8. '((' → logprob: -12.819405555725098
    9. 'self' → logprob: -12.944405555725098
    10. '(U' → logprob: -13.819405555725098

Token 550: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004473540757317096
    2. ',K' → logprob: -7.7504472732543945
    3. ' ,' → logprob: -11.375447273254395
    4. ',
' → logprob: -12.875447273254395
    5. ',N' → logprob: -14.000447273254395
    6. ')' → logprob: -14.000447273254395
    7. ',k' → logprob: -15.375447273254395
    8. 'K' → logprob: -15.625447273254395
    9. ',self' → logprob: -16.37544822692871
    10. '<|end|>' → logprob: -16.37544822692871

Token 551: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.00029625516617670655
    2. ' K' → logprob: -8.125296592712402
    3. '   ' → logprob: -16.250295639038086
    4. ')' → logprob: -16.250295639038086
    5. '       ' → logprob: -17.125295639038086
    6. ' ' → logprob: -17.750295639038086
    7. '
' → logprob: -19.000295639038086
    8. '```' → logprob: -19.125295639038086
    9. '  ' → logprob: -19.250295639038086
    10. '	K' → logprob: -19.500295639038086

Token 552: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1472419600977446e-06
    2. ')
' → logprob: -14.250000953674316
    3. '       ' → logprob: -15.625000953674316
    4. ' )' → logprob: -15.750000953674316
    5. '),' → logprob: -17.625001907348633
    6. '))' → logprob: -17.625001907348633
    7. '<|end|>' → logprob: -17.625001907348633
    8. ')

' → logprob: -17.750001907348633
    9. '   ' → logprob: -18.125001907348633
    10. ')}' → logprob: -18.750001907348633

Token 553: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.164621964097023
    2. 'def' → logprob: -2.1646220684051514
    3. ' def' → logprob: -3.5396220684051514
    4. '
' → logprob: -5.164621829986572
    5. '       ' → logprob: -6.664621829986572
    6. '    
' → logprob: -7.664621829986572
    7. '	def' → logprob: -8.66462230682373
    8. '        
' → logprob: -8.91462230682373
    9. 'self' → logprob: -10.03962230682373
    10. ' ' → logprob: -10.41462230682373

Token 554: ' self' (ID: 1051)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.011224652640521526
    2. 'self' (adapté à ' self') → logprob: -5.136224746704102
    3. '   ' → logprob: -5.636224746704102
    4. ' def' → logprob: -7.011224746704102
    5. '
' → logprob: -7.886224746704102
    6. '       ' → logprob: -8.261224746704102
    7. '@property' → logprob: -9.386224746704102
    8. '@' → logprob: -9.761224746704102
    9. ' self' → logprob: -11.636224746704102
    10. '<|end|>' → logprob: -12.011224746704102

Token 555: '.R' (ID: 3395)
  Prédit: '.current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.current' → logprob: -0.7514375448226929
    2. '._' → logprob: -1.3764375448226929
    3. '.S' → logprob: -2.5014376640319824
    4. '.s' → logprob: -3.5014376640319824
    5. '.pro' → logprob: -3.8764376640319824
    6. '.dp' → logprob: -4.126437664031982
    7. '.max' → logprob: -4.251437664031982
    8. '.position' → logprob: -4.501437664031982
    9. '.' → logprob: -4.876437664031982
    10. '.steps' → logprob: -4.876437664031982

Token 556: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04126300662755966
    2. '=' → logprob: -4.041263103485107
    3. 'ange' → logprob: -4.041263103485107
    4. 'anges' → logprob: -6.666263103485107
    5. 'andom' → logprob: -7.166263103485107
    6. 'em' → logprob: -7.291263103485107
    7. '_range' → logprob: -8.04126262664795
    8. 'emain' → logprob: -8.16626262664795
    9. ' ' → logprob: -9.04126262664795
    10. 'ed' → logprob: -9.16626262664795

Token 557: ' abs' (ID: 8443)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.08728931099176407
    2. 'N' → logprob: -3.337289333343506
    3. 'self' → logprob: -3.962289333343506
    4. '2' → logprob: -5.212289333343506
    5. '100' → logprob: -5.462289333343506
    6. ' S' → logprob: -5.962289333343506
    7. '3' → logprob: -6.087289333343506
    8. '10' → logprob: -6.087289333343506
    9. '0' → logprob: -6.087289333343506
    10. '1' → logprob: -6.337289333343506

Token 558: '(S' (ID: 6181)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.47449883818626404
    2. '(S' → logprob: -0.9744988679885864
    3. '(' → logprob: -8.599498748779297
    4. 'self' → logprob: -8.849498748779297
    5. 'S' → logprob: -9.724498748779297
    6. '(N' → logprob: -11.349498748779297
    7. '(s' → logprob: -11.349498748779297
    8. '(sys' → logprob: -11.974498748779297
    9. '((' → logprob: -12.849498748779297
    10. '(
' → logprob: -14.474498748779297

Token 559: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.012814520858228207
    2. ' -' → logprob: -4.762814521789551
    3. '-' → logprob: -5.762814521789551
    4. ' )' → logprob: -7.762814521789551
    5. ')
' → logprob: -8.38781452178955
    6. ')%' → logprob: -8.63781452178955
    7. '%' → logprob: -9.01281452178955
    8. ')+' → logprob: -11.01281452178955
    9. ')//' → logprob: -11.13781452178955
    10. '   ' → logprob: -11.51281452178955

Token 560: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5297290682792664
    2. '+' → logprob: -1.7797291278839111
    3. '       ' → logprob: -1.9047291278839111
    4. ' +' → logprob: -2.904729127883911
    5. ' /' → logprob: -4.279728889465332
    6. ' if' → logprob: -5.154728889465332
    7. '/' → logprob: -6.154728889465332
    8. ',' → logprob: -6.154728889465332
    9. ' //' → logprob: -6.154728889465332
    10. '<|end|>' → logprob: -6.279728889465332

Token 561: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.4937390387058258
    2. 'def' → logprob: -0.9937390089035034
    3. '       ' → logprob: -4.368739128112793
    4. '   ' → logprob: -5.618739128112793
    5. '
' → logprob: -6.993739128112793
    6. ' self' → logprob: -6.993739128112793
    7. 'if' → logprob: -7.243739128112793
    8. '@property' → logprob: -7.993739128112793
    9. ' def' → logprob: -8.993739128112793
    10. '<|end|>' → logprob: -10.118739128112793

Token 562: '.direction' (ID: 63524)
  Prédit: '._'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '._' → logprob: -1.1151701211929321
    2. '.' → logprob: -1.4901701211929321
    3. '.current' → logprob: -2.9901700019836426
    4. '.is' → logprob: -3.2401700019836426
    5. '.g' → logprob: -3.3651700019836426
    6. '.S' → logprob: -3.8651700019836426
    7. '.max' → logprob: -3.9901700019836426
    8. ' .' → logprob: -4.240170001983643
    9. '.has' → logprob: -4.240170001983643
    10. '.next' → logprob: -4.240170001983643

Token 563: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5844924449920654
    2. ' =' → logprob: -0.8344924449920654
    3. 's' → logprob: -4.8344926834106445
    4. '_' → logprob: -8.459492683410645
    5. ':' → logprob: -9.334492683410645
    6. ',' → logprob: -9.709492683410645
    7. 'al' → logprob: -9.959492683410645
    8. '.' → logprob: -10.084492683410645
    9. ' ' → logprob: -10.084492683410645
    10. '=None' → logprob: -10.834492683410645

Token 564: ' -' (ID: 533)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00012130453251302242
    2. ' ' → logprob: -9.750121116638184
    3. '(' → logprob: -10.000121116638184
    4. '-' → logprob: -11.125121116638184
    5. 'S' → logprob: -13.625121116638184
    6. '+' → logprob: -14.500121116638184
    7. '(S' → logprob: -14.750121116638184
    8. ' (' → logprob: -15.375121116638184
    9. '0' → logprob: -16.1251220703125
    10. ' -' → logprob: -16.2501220703125

Token 565: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9623810658231378e-05
    2. '(' → logprob: -10.875020027160645
    3. ' ' → logprob: -15.250020027160645
    4. '-' → logprob: -15.875020027160645
    5. '+' → logprob: -16.250019073486328
    6. 'int' → logprob: -16.875019073486328
    7. 'S' → logprob: -17.250019073486328
    8. 's' → logprob: -17.500019073486328
    9. '(-' → logprob: -17.500019073486328
    10. ' (' → logprob: -17.750019073486328

Token 566: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.009787020273506641
    2. 'if' → logprob: -4.634787082672119
    3. '<|end|>' → logprob: -10.509786605834961
    4. '	if' → logprob: -13.634786605834961
    5. ' ' → logprob: -13.884786605834961
    6. '       ' → logprob: -14.759786605834961
    7. '
' → logprob: -14.759786605834961
    8. ',' → logprob: -15.384786605834961
    9. '0' → logprob: -15.884786605834961
    10. '        ' → logprob: -16.38478660583496

Token 567: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.014181718230247498
    2. ' S' → logprob: -4.264181613922119
    3. 'self' → logprob: -11.139182090759277
    4. ' self' → logprob: -12.514182090759277
    5. '	S' → logprob: -17.51418113708496
    6. ' ' → logprob: -18.01418113708496
    7. '(S' → logprob: -19.01418113708496
    8. '>S' → logprob: -19.01418113708496
    9. '_S' → logprob: -19.51418113708496
    10. '   ' → logprob: -19.88918113708496

Token 568: ' >' (ID: 1424)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.28119775652885437
    2. '<' → logprob: -1.4061977863311768
    3. ' ' → logprob: -10.406197547912598
    4. '<|end|>' → logprob: -11.906197547912598
    5. '[' → logprob: -13.406197547912598
    6. '<S' → logprob: -13.656197547912598
    7. ' >' → logprob: -13.781197547912598
    8. '>' → logprob: -13.781197547912598
    9. '<class' → logprob: -14.656197547912598
    10. '<int' → logprob: -14.781197547912598

Token 569: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.10020732134580612
    2. ' ' → logprob: -2.3502073287963867
    3. '=' → logprob: -14.475207328796387
    4. '>' → logprob: -16.60020637512207
    5. '  ' → logprob: -16.72520637512207
    6. '<|end|>' → logprob: -17.35020637512207
    7. '[' → logprob: -17.72520637512207
    8. ' ' → logprob: -17.85020637512207
    9. '1' → logprob: -18.22520637512207
    10. '   ' → logprob: -18.97520637512207

Token 570: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00023059594968799502
    2. ' ' → logprob: -8.37523078918457
    3. '1' → logprob: -19.12523078918457
    4. '  ' → logprob: -19.37523078918457
    5. '   ' → logprob: -20.50023078918457
    6. '۰' → logprob: -20.87523078918457
    7. '=' → logprob: -21.12523078918457
    8. '<|end|>' → logprob: -21.50023078918457
    9. '[' → logprob: -21.87523078918457
    10. ' ' → logprob: -22.00023078918457

Token 571: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.012510355561971664
    2. 'else' → logprob: -4.387510299682617
    3. ' ' → logprob: -15.012510299682617
    4. '	else' → logprob: -15.637510299682617
    5. '+' → logprob: -16.762510299682617
    6. '<|end|>' → logprob: -17.637510299682617
    7. 's' → logprob: -17.887510299682617
    8. ',' → logprob: -18.012510299682617
    9. '0' → logprob: -18.137510299682617
    10. '>' → logprob: -18.637510299682617

Token 572: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004329341172706336
    2. ' ' → logprob: -7.750432968139648
    3. '0' → logprob: -13.500432968139648
    4. '+' → logprob: -14.000432968139648
    5. '-' → logprob: -17.87543296813965
    6. ' +' → logprob: -17.87543296813965
    7. '(' → logprob: -18.87543296813965
    8. '   ' → logprob: -19.12543296813965
    9. '  ' → logprob: -19.12543296813965
    10. ' -' → logprob: -19.50043296813965

Token 573: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2948405128554441e-05
    2. ' ' → logprob: -11.37501335144043
    3. '+' → logprob: -13.62501335144043
    4. '0' → logprob: -15.62501335144043
    5. '-' → logprob: -18.12501335144043
    6. '   ' → logprob: -18.75001335144043
    7. ' +' → logprob: -18.93751335144043
    8. '(' → logprob: -19.68751335144043
    9. '１' → logprob: -19.75001335144043
    10. '
' → logprob: -19.87501335144043

Token 574: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 575: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 576: ' Jump' (ID: 51108)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 577: ' direction' (ID: 9262)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.9122350811958313
    2. '<|end|>' → logprob: -1.2872350215911865
    3. ' direction' → logprob: -1.9122350215911865
    4. 'direction' → logprob: -3.1622350215911865
    5. '_direction' → logprob: -3.1622350215911865
    6. '_' → logprob: -3.4122350215911865
    7. ' ' → logprob: -4.412235260009766
    8. ' if' → logprob: -5.287235260009766
    9. ' s' → logprob: -5.412235260009766
    10. ' is' → logprob: -5.787235260009766

Token 578: ' toward' (ID: 15256)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 579: ' witch' (ID: 69315)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.026205778121948242
    2. 'zero' → logprob: -4.026206016540527
    3. ' zero' → logprob: -4.901206016540527
    4. ' ' → logprob: -7.526206016540527
    5. '=' → logprob: -11.151206016540527
    6. '-zero' → logprob: -12.026206016540527
    7. 'negative' → logprob: -12.276206016540527
    8. 's' → logprob: -12.276206016540527
    9. '_zero' → logprob: -12.526206016540527
    10. 'the' → logprob: -12.651206016540527

Token 580: ' at' (ID: 540)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -1.4785783290863037
    2. 'ward' → logprob: -1.6035783290863037
    3. 'd' → logprob: -2.6035783290863037
    4. 'ard' → logprob: -2.7285783290863037
    5. 'wards' → logprob: -3.1035783290863037
    6. 'word' → logprob: -3.2285783290863037
    7. 'direction' → logprob: -3.3535783290863037
    8. 's' → logprob: -3.4785783290863037
    9. 'tow' → logprob: -3.8535783290863037
    10. '#' → logprob: -3.8535783290863037

Token 581: ' ' (ID: 220)
  Prédit: 'which'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'which' → logprob: -0.9794095158576965
    2. 'h' → logprob: -1.7294094562530518
    3. 't' → logprob: -2.1044094562530518
    4. 'negative' → logprob: -2.6044094562530518
    5. 's' → logprob: -2.9794094562530518
    6. 'the' → logprob: -3.3544094562530518
    7. 'he' → logprob: -3.4794094562530518
    8. 'ch' → logprob: -4.104409694671631
    9. 'zero' → logprob: -4.229409694671631
    10. '-' → logprob: -4.604409694671631

Token 582: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.4770108461380005
    2. 'position' → logprob: -1.6020108461380005
    3. 'zero' → logprob: -1.8520108461380005
    4. 'left' → logprob: -2.602010726928711
    5. 'origin' → logprob: -2.602010726928711
    6. 'right' → logprob: -2.852010726928711
    7. '-' → logprob: -2.977010726928711
    8. 'negative' → logprob: -3.227010726928711
    9. 'in' → logprob: -3.602010726928711
    10. 'S' → logprob: -4.352010726928711

Token 583: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 584: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.33776697516441345
    2. '<|end|>' → logprob: -1.9627670049667358
    3. 'def' → logprob: -2.8377668857574463
    4. '   ' → logprob: -3.0877668857574463
    5. ' def' → logprob: -3.7127668857574463
    6. ')' → logprob: -5.337767124176025
    7. '```' → logprob: -5.587767124176025
    8. '    
' → logprob: -6.462767124176025
    9. ' ' → logprob: -6.587767124176025
    10. ',' → logprob: -6.837767124176025

Token 585: ' def' (ID: 1056)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.08194753527641296
    2. '   ' → logprob: -2.9569475650787354
    3. ' def' → logprob: -4.331947326660156
    4. 'def' (adapté à ' def') → logprob: -4.581947326660156
    5. ' 
' → logprob: -6.831947326660156
    6. '<|end|>' → logprob: -7.456947326660156
    7. ' ' → logprob: -7.581947326660156
    8. '

' → logprob: -8.081947326660156
    9. '    
' → logprob: -8.331947326660156
    10. ')' → logprob: -8.456947326660156

Token 586: ' can' (ID: 665)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.40420979261398315
    2. ' def' → logprob: -2.154209852218628
    3. 'step' → logprob: -3.154209852218628
    4. 'jump' → logprob: -3.404209852218628
    5. '_step' → logprob: -3.779209852218628
    6. 'next' → logprob: -3.779209852218628
    7. '_jump' → logprob: -3.779209852218628
    8. '_next' → logprob: -4.404209613800049
    9. ' next' → logprob: -4.404209613800049
    10. 'calculate' → logprob: -4.779209613800049

Token 587: '_re' (ID: 3067)
  Prédit: '_jump'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_jump' → logprob: -0.004019276238977909
    2. '_move' → logprob: -6.629019260406494
    3. '_make' → logprob: -6.629019260406494
    4. '_re' → logprob: -7.004019260406494
    5. '_take' → logprob: -8.879019737243652
    6. '_' → logprob: -9.004019737243652
    7. '_j' → logprob: -9.254019737243652
    8. '_continue' → logprob: -9.629019737243652
    9. '_stop' → logprob: -12.129019737243652
    10. '_step' → logprob: -12.754019737243652

Token 588: 'ach' (ID: 678)
  Prédit: 'ach'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ach' → logprob: -4.263011578586884e-05
    2. 'ache' → logprob: -12.375042915344238
    3. 'a' → logprob: -12.500042915344238
    4. '_' → logprob: -12.500042915344238
    5. 'acht' → logprob: -12.500042915344238
    6. 'solve' → logprob: -12.500042915344238
    7. 'turn' → logprob: -12.625042915344238
    8. 'achable' → logprob: -12.750042915344238
    9. 'ached' → logprob: -13.000042915344238
    10. 'each' → logprob: -13.125042915344238

Token 589: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.009994291700422764
    2. '(' → logprob: -4.6349945068359375
    3. 'self' → logprob: -8.884994506835938
    4. ' (' → logprob: -10.509994506835938
    5. '(
' → logprob: -11.134994506835938
    6. '_' → logprob: -11.634994506835938
    7. '_position' → logprob: -11.759994506835938
    8. '_target' → logprob: -12.259994506835938
    9. '   ' → logprob: -12.884994506835938
    10. '()' → logprob: -13.009994506835938

Token 590: ')' (ID: 8)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.21227039396762848
    2. 'self' → logprob: -2.837270498275757
    3. '):' → logprob: -3.212270498275757
    4. '(self' → logprob: -3.212270498275757
    5. ')' → logprob: -3.337270498275757
    6. '):
' → logprob: -5.087270259857178
    7. ')(' → logprob: -5.587270259857178
    8. '       ' → logprob: -6.587270259857178
    9. 'position' → logprob: -6.837270259857178
    10. 'target' → logprob: -7.212270259857178

Token 591: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.011379417963325977
    2. '(' → logprob: -4.511379241943359
    3. 'self' → logprob: -8.63637924194336
    4. ' (' → logprob: -8.88637924194336
    5. '       ' → logprob: -12.38637924194336
    6. ':' → logprob: -12.38637924194336
    7. '(
' → logprob: -13.13637924194336
    8. '   ' → logprob: -13.26137924194336
    9. ',' → logprob: -13.76137924194336
    10. 'def' → logprob: -14.63637924194336

Token 592: ' bool' (ID: 3792)
  Prédit: 'bool'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bool' → logprob: -0.35158541798591614
    2. ' bool' → logprob: -1.2265853881835938
    3. '   ' → logprob: -7.226585388183594
    4. 'self' → logprob: -7.726585388183594
    5. '(bool' → logprob: -7.726585388183594
    6. 'int' → logprob: -8.101585388183594
    7. ')' → logprob: -8.351585388183594
    8. '       ' → logprob: -8.601585388183594
    9. ' ' → logprob: -8.601585388183594
    10. ':' → logprob: -9.351585388183594

Token 593: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01935521513223648
    2. ':
' → logprob: -4.144355297088623
    3. '       ' → logprob: -6.644355297088623
    4. '(' → logprob: -6.894355297088623
    5. '(self' → logprob: -7.269355297088623
    6. '   ' → logprob: -9.644354820251465
    7. '.' → logprob: -9.769354820251465
    8. ',' → logprob: -9.894354820251465
    9. '(
' → logprob: -10.269354820251465
    10. '[' → logprob: -11.144354820251465

Token 594: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00695891585201025
    2. '(' → logprob: -6.256958961486816
    3. ' ' → logprob: -6.506958961486816
    4. '    ' → logprob: -7.506958961486816
    5. ' 
' → logprob: -7.756958961486816
    6. ':' → logprob: -7.881958961486816
    7. '        ' → logprob: -8.006958961486816
    8. '   ' → logprob: -8.256958961486816
    9. ' return' → logprob: -8.256958961486816
    10. '[' → logprob: -8.381958961486816

Token 595: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.36948227882385254
    2. 'return' → logprob: -1.2444822788238525
    3. 'if' → logprob: -4.369482040405273
    4. ' return' → logprob: -5.369482040405273
    5. ' if' → logprob: -6.119482040405273
    6. 'd' → logprob: -7.744482040405273
    7. '#' (adapté à ' #') → logprob: -8.619482040405273
    8. 'n' → logprob: -9.119482040405273
    9. 'distance' → logprob: -9.119482040405273
    10. 'r' → logprob: -9.369482040405273

Token 596: ' The' (ID: 623)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.19291658699512482
    2. 'if' → logprob: -2.1929166316986084
    3. '       ' → logprob: -3.6929166316986084
    4. 'd' → logprob: -4.317916393280029
    5. 'g' → logprob: -4.317916393280029
    6. 'step' → logprob: -5.192916393280029
    7. 'distance' → logprob: -6.567916393280029
    8. 'r' → logprob: -6.692916393280029
    9. '#' → logprob: -7.192916393280029
    10. 'dist' → logprob: -7.317916393280029

Token 597: ' possible' (ID: 4149)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.09742358326911926
    2. 'R' → logprob: -3.222423553466797
    3. 'if' → logprob: -3.847423553466797
    4. 'min' → logprob: -4.847423553466797
    5. ' return' → logprob: -5.097423553466797
    6. 'max' → logprob: -5.472423553466797
    7. 'distance' → logprob: -6.097423553466797
    8. '       ' → logprob: -6.347423553466797
    9. 'g' → logprob: -6.347423553466797
    10. 'direction' → logprob: -6.597423553466797

Token 598: ' jump' (ID: 13843)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -1.4352567195892334
    2. ' if' → logprob: -1.8102567195892334
    3. 'return' → logprob: -2.1852567195892334
    4. ' range' → logprob: -2.1852567195892334
    5. 'range' → logprob: -2.3102567195892334
    6. '_range' → logprob: -3.1852567195892334
    7. ' step' → logprob: -3.4352567195892334
    8. ' steps' → logprob: -3.5602567195892334
    9. 'step' → logprob: -4.0602569580078125
    10. 'distance' → logprob: -4.1852569580078125

Token 599: ' step' (ID: 5983)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.8694949150085449
    2. 'length' → logprob: -0.8694949150085449
    3. 'range' → logprob: -3.494494915008545
    4. 'dist' → logprob: -3.619494915008545
    5. 'distance' → logprob: -3.869494915008545
    6. 'values' → logprob: -4.119494915008545
    7. 'sizes' → logprob: -4.494494915008545
    8. 'ranges' → logprob: -4.619494915008545
    9. ' lengths' → logprob: -4.869494915008545
    10. ' distances' → logprob: -4.994494915008545

Token 600: ' sizes' (ID: 16174)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.2855490744113922
    2. 'sizes' → logprob: -1.6605490446090698
    3. 'size' → logprob: -3.1605491638183594
    4. 'length' → logprob: -4.660549163818359
    5. '   ' → logprob: -6.035549163818359
    6. ' sizes' → logprob: -6.660549163818359
    7. 'range' → logprob: -7.160549163818359
    8. 'values' → logprob: -7.285549163818359
    9. 'ranges' → logprob: -8.28554916381836
    10. ' lengths' → logprob: -8.78554916381836

Token 601: ' are' (ID: 553)
  Prédit: ' are'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' are' → logprob: -0.6167448163032532
    2. ' must' → logprob: -2.2417447566986084
    3. 's' → logprob: -2.4917447566986084
    4. '       ' → logprob: -2.8667447566986084
    5. 'range' → logprob: -3.3667447566986084
    6. 'are' → logprob: -3.4917447566986084
    7. 'must' → logprob: -3.4917447566986084
    8. ' range' → logprob: -3.8667447566986084
    9. '   ' → logprob: -4.4917449951171875
    10. 'return' → logprob: -4.7417449951171875

Token 602: ' from' (ID: 591)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.609715461730957
    2. 'self' → logprob: -1.109715461730957
    3. 'from' → logprob: -2.734715461730957
    4. 's' → logprob: -4.859715461730957
    5. 'set' → logprob: -4.859715461730957
    6. ' multiples' → logprob: -4.859715461730957
    7. ' range' → logprob: -4.984715461730957
    8. '       ' → logprob: -5.609715461730957
    9. ' in' → logprob: -5.859715461730957
    10. ' self' → logprob: -5.984715461730957

Token 603: ' distribution' (ID: 12545)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.02919086441397667
    2. '1' → logprob: -3.7791907787323
    3. ' self' → logprob: -5.154191017150879
    4. ' ' → logprob: -9.529191017150879
    5. '(self' → logprob: -10.154191017150879
    6. 'K' → logprob: -10.654191017150879
    7. '0' → logprob: -12.529191017150879
    8. '[self' → logprob: -12.904191017150879
    9. ' K' → logprob: -13.279191017150879
    10. '   ' → logprob: -13.404191017150879

Token 604: '.support' (ID: 14496)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8741263747215271
    2. '_min' → logprob: -2.124126434326172
    3. '._' → logprob: -2.124126434326172
    4. '.support' → logprob: -2.374126434326172
    5. '.' → logprob: -2.499126434326172
    6. ',' → logprob: -3.874126434326172
    7. '.min' → logprob: -3.999126434326172
    8. ' ' → logprob: -3.999126434326172
    9. '       ' → logprob: -4.624126434326172
    10. ' and' → logprob: -4.749126434326172

Token 605: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.08041653037071228
    2. '()[' → logprob: -2.580416440963745
    3. '()
' → logprob: -6.705416679382324
    4. '[' → logprob: -8.705416679382324
    5. '(),' → logprob: -9.955416679382324
    6. '()

' → logprob: -10.205416679382324
    7. '())' → logprob: -11.705416679382324
    8. '().' → logprob: -11.830416679382324
    9. '()\' → logprob: -12.205416679382324
    10. '()
' → logprob: -12.455416679382324

Token 606: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03806593269109726
    2. ' and' → logprob: -3.6630659103393555
    3. ',' → logprob: -5.6630659103393555
    4. ':' → logprob: -6.0380659103393555
    5. ')' → logprob: -6.1630659103393555
    6. '[' → logprob: -6.4130659103393555
    7. '<|end|>' → logprob: -7.0380659103393555
    8. 'and' → logprob: -8.538065910339355
    9. ' to' → logprob: -9.288065910339355
    10. '   ' → logprob: -9.288065910339355

Token 607: ' min' (ID: 1349)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002418345306068659
    2. ')' → logprob: -7.377418518066406
    3. ',' → logprob: -7.377418518066406
    4. ':' → logprob: -8.752418518066406
    5. '   ' → logprob: -8.752418518066406
    6. '<|end|>' → logprob: -8.877418518066406
    7. '        
' → logprob: -9.127418518066406
    8. 'return' → logprob: -9.877418518066406
    9. ' return' → logprob: -10.002418518066406
    10. 'n' → logprob: -10.377418518066406

Token 608: '_step' (ID: 27360)
  Prédit: '_,'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_,' → logprob: -0.6927917003631592
    2. '_' → logprob: -0.9427917003631592
    3. ',' → logprob: -2.567791700363159
    4. '_val' → logprob: -4.067791938781738
    5. '_size' → logprob: -5.192791938781738
    6. '_value' → logprob: -5.567791938781738
    7. '_step' → logprob: -5.692791938781738
    8. '(),' → logprob: -6.817791938781738
    9. '_support' → logprob: -7.317791938781738
    10. '_s' → logprob: -7.442791938781738

Token 609: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.76759916334413e-05
    2. '(),' → logprob: -10.375077247619629
    3. ' ,' → logprob: -10.625077247619629
    4. ' <=' → logprob: -11.625077247619629
    5. '_,' → logprob: -12.125077247619629
    6. 'size' → logprob: -13.750077247619629
    7. '<=' → logprob: -13.875077247619629
    8. '[' → logprob: -13.875077247619629
    9. 's' → logprob: -14.125077247619629
    10. '<|end|>' → logprob: -14.125077247619629

Token 610: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.474132239818573
    2. 'max' → logprob: -0.974132239818573
    3. '_max' → logprob: -9.849132537841797
    4. ' self' → logprob: -13.474132537841797
    5. 'self' → logprob: -14.724132537841797
    6. ' ' → logprob: -15.349132537841797
    7. ' _' → logprob: -15.849132537841797
    8. '	max' → logprob: -16.349132537841797
    9. '_' → logprob: -16.474132537841797
    10. ',max' → logprob: -17.224132537841797

Token 611: '_step' (ID: 27360)
  Prédit: '_step'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_step' → logprob: -7.290784560609609e-05
    2. '_' → logprob: -9.750072479248047
    3. '_,' → logprob: -12.375072479248047
    4. ',' → logprob: -12.500072479248047
    5. '_jump' → logprob: -13.125072479248047
    6. ',_' → logprob: -13.625072479248047
    7. 'step' → logprob: -13.875072479248047
    8. ' =' → logprob: -14.500072479248047
    9. ' _' → logprob: -14.625072479248047
    10. '   ' → logprob: -14.625072479248047

Token 612: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0548897311091423
    2. '=' → logprob: -2.929889678955078
    3. '       ' → logprob: -12.554889678955078
    4. ',' → logprob: -12.804889678955078
    5. ' ' → logprob: -15.179889678955078
    6. '        ' → logprob: -15.429889678955078
    7. ')' → logprob: -15.429889678955078
    8. '   ' → logprob: -15.554889678955078
    9. '<|end|>' → logprob: -16.304889678955078
    10. '    ' → logprob: -16.679889678955078

Token 613: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.12694574892520905
    2. ' self' → logprob: -2.126945734024048
    3. '       ' → logprob: -11.251945495605469
    4. '   ' → logprob: -13.376945495605469
    5. '0' → logprob: -13.626945495605469
    6. '(self' → logprob: -14.626945495605469
    7. '	self' → logprob: -14.751945495605469
    8. ' ' → logprob: -14.751945495605469
    9. '1' → logprob: -15.376945495605469
    10. '=self' → logprob: -16.37694549560547

Token 614: '.dis' (ID: 8454)
  Prédit: '.dis'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.dis' → logprob: -0.0003907543432433158
    2. 'distribution' → logprob: -8.500391006469727
    3. 'dis' → logprob: -8.625391006469727
    4. '.support' → logprob: -12.750391006469727
    5. '.direction' → logprob: -13.375391006469727
    6. '.' → logprob: -13.625391006469727
    7. '	dis' → logprob: -14.000391006469727
    8. '.discovery' → logprob: -15.375391006469727
    9. '   ' → logprob: -16.000391006469727
    10. '(dis' → logprob: -16.375391006469727

Token 615: 'tribution' (ID: 7090)
  Prédit: 'port'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'port' → logprob: -0.7305404543876648
    2. 'upport' → logprob: -0.8555404543876648
    3. 'tribution' → logprob: -2.7305405139923096
    4. 't' → logprob: -3.8555405139923096
    5. 'support' → logprob: -5.8555402755737305
    6. 'ort' → logprob: -6.3555402755737305
    7. 'p' → logprob: -6.7305402755737305
    8. 'tribute' → logprob: -7.7305402755737305
    9. 'trib' → logprob: -8.60554027557373
    10. '_support' → logprob: -9.10554027557373

Token 616: '.support' (ID: 14496)
  Prédit: '.support'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.support' → logprob: -0.00043686782009899616
    2. 'support' → logprob: -7.750436782836914
    3. '.' → logprob: -13.000436782836914
    4. ' .' → logprob: -13.375436782836914
    5. '.s' → logprob: -13.375436782836914
    6. ' support' → logprob: -14.625436782836914
    7. '_support' → logprob: -15.875436782836914
    8. 'upport' → logprob: -17.125436782836914
    9. '().' → logprob: -17.875436782836914
    10. '.Support' → logprob: -18.000436782836914

Token 617: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00043817906407639384
    2. '()
' → logprob: -7.750438213348389
    3. '(),' → logprob: -13.00043773651123
    4. '()[' → logprob: -13.37543773651123
    5. '()
' → logprob: -13.37543773651123
    6. '()`' → logprob: -14.12543773651123
    7. '()\' → logprob: -14.75043773651123
    8. '()

' → logprob: -14.75043773651123
    9. '()]' → logprob: -16.000438690185547
    10. '()<' → logprob: -16.125438690185547

Token 618: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00023739055905025452
    2. '<|end|>' → logprob: -9.625237464904785
    3. ',' → logprob: -9.875237464904785
    4. ' if' → logprob: -10.125237464904785
    5. '        
' → logprob: -10.250237464904785
    6. '  
' → logprob: -11.625237464904785
    7. ')' → logprob: -12.000237464904785
    8. '
' → logprob: -12.375237464904785
    9. ' return' → logprob: -12.625237464904785
    10. '```' → logprob: -12.750237464904785

Token 619: ' d' (ID: 272)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2986330986022949
    2. ' return' → logprob: -1.923633098602295
    3. ' if' → logprob: -2.673633098602295
    4. 'return' → logprob: -3.298633098602295
    5. 'if' → logprob: -5.548633098602295
    6. ' for' → logprob: -6.923633098602295
    7. '
' → logprob: -7.923633098602295
    8. ' step' → logprob: -8.673633575439453
    9. ' possible' → logprob: -9.298633575439453
    10. '        
' → logprob: -9.423633575439453

Token 620: ' =' (ID: 314)
  Prédit: 'istance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'istance' → logprob: -0.7985150218009949
    2. ' =' → logprob: -1.9235150814056396
    3. 'iff' → logprob: -2.1735150814056396
    4. 'elta' → logprob: -2.9235150814056396
    5. 'ef' → logprob: -3.0485150814056396
    6. 'ist' → logprob: -3.0485150814056396
    7. 'if' → logprob: -3.0485150814056396
    8. 'irection' → logprob: -3.1735150814056396
    9. '=' → logprob: -3.5485150814056396
    10. 'ifference' → logprob: -4.9235148429870605

Token 621: ' self' (ID: 1051)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.20071105659008026
    2. 'abs' → logprob: -2.3257110118865967
    3. ' gcd' → logprob: -3.3257110118865967
    4. 'self' → logprob: -3.5757110118865967
    5. 'max' → logprob: -4.075711250305176
    6. ' abs' → logprob: -6.325711250305176
    7. ' self' → logprob: -7.200711250305176
    8. 'min' → logprob: -8.575711250305176
    9. ' max' → logprob: -8.700711250305176
    10. '   ' → logprob: -8.950711250305176

Token 622: '._' (ID: 2697)
  Prédit: '.g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.g' → logprob: -0.15821664035320282
    2. 'irection' → logprob: -2.533216714859009
    3. 'g' → logprob: -3.783216714859009
    4. '.R' → logprob: -4.53321647644043
    5. 'R' → logprob: -4.78321647644043
    6. 'direction' → logprob: -4.90821647644043
    7. '.direction' → logprob: -5.15821647644043
    8. '.S' → logprob: -5.53321647644043
    9. 'S' → logprob: -6.78321647644043
    10. 'ir' → logprob: -6.90821647644043

Token 623: 'g' (ID: 70)
  Prédit: 'g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.2078692764043808
    2. 'irection' → logprob: -2.457869291305542
    3. 'direction' → logprob: -2.957869291305542
    4. '__' → logprob: -4.582869052886963
    5. '_g' → logprob: -5.457869052886963
    6. 'S' → logprob: -5.582869052886963
    7. '_direction' → logprob: -5.582869052886963
    8. 'R' → logprob: -5.707869052886963
    9. 'can' → logprob: -6.082869052886963
    10. ' gcd' → logprob: -6.332869052886963

Token 624: 'cd' (ID: 8301)
  Prédit: 'cd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cd' → logprob: -1.5048530030981055e-06
    2. 'g' → logprob: -14.375001907348633
    3. 'cdn' → logprob: -15.250001907348633
    4. 'c' → logprob: -15.250001907348633
    5. 'CD' → logprob: -16.500001907348633
    6. '_cd' → logprob: -16.625001907348633
    7. 'cdf' → logprob: -17.000001907348633
    8. 'def' → logprob: -17.375001907348633
    9. 'math' → logprob: -17.500001907348633
    10. 'd' → logprob: -17.625001907348633

Token 625: '_of' (ID: 8023)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.029607459902763367
    2. '(min' → logprob: -3.9046075344085693
    3. '(' → logprob: -5.77960729598999
    4. '(S' → logprob: -6.65460729598999
    5. '(abs' → logprob: -6.77960729598999
    6. '(s' → logprob: -6.77960729598999
    7. '(max' → logprob: -7.02960729598999
    8. '()' → logprob: -7.90460729598999
    9. '<|end|>' → logprob: -8.279607772827148
    10. ' =' → logprob: -8.779607772827148

Token 626: '_support' (ID: 59508)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.9603795409202576
    2. 'self' → logprob: -1.7103796005249023
    3. '[self' → logprob: -1.7103796005249023
    4. '([' → logprob: -2.2103796005249023
    5. '[min' → logprob: -2.7103796005249023
    6. '[' → logprob: -3.5853796005249023
    7. '(min' → logprob: -3.8353796005249023
    8. '[
' → logprob: -4.460379600524902
    9. 'min' → logprob: -5.085379600524902
    10. 's' → logprob: -5.960379600524902

Token 627: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.018346013501286507
    2. '()
' → logprob: -4.143345832824707
    3. '(min' → logprob: -6.893345832824707
    4. ' =' → logprob: -8.143345832824707
    5. '=' → logprob: -8.643345832824707
    6. '(' → logprob: -8.643345832824707
    7. '()

' → logprob: -9.268345832824707
    8. '_' → logprob: -9.268345832824707
    9. '(max' → logprob: -9.393345832824707
    10. '(self' → logprob: -9.643345832824707

Token 628: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.026266973465681076
    2. '(' → logprob: -4.901267051696777
    3. '()' → logprob: -4.901267051696777
    4. '<|end|>' → logprob: -6.151267051696777
    5. '()
' → logprob: -6.651267051696777
    6. ':' → logprob: -6.776267051696777
    7. '        
' → logprob: -6.776267051696777
    8. ',' → logprob: -7.276267051696777
    9. '        ' → logprob: -7.776267051696777
    10. '[' → logprob: -7.776267051696777

Token 629: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008525568060576916
    2. ' return' → logprob: -5.258525371551514
    3. 'return' (adapté à ' return') → logprob: -6.258525371551514
    4. ' if' → logprob: -7.258525371551514
    5. '        
' → logprob: -8.883525848388672
    6. ' ' → logprob: -9.008525848388672
    7. ',' → logprob: -9.508525848388672
    8. ' 
' → logprob: -9.758525848388672
    9. 'if' → logprob: -10.008525848388672
    10. '
' → logprob: -10.258525848388672

Token 630: ' self' (ID: 1051)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.25892123579978943
    2. 'self' → logprob: -1.5089212656021118
    3. ' (' → logprob: -5.508921146392822
    4. '(abs' → logprob: -6.508921146392822
    5. ' self' → logprob: -7.133921146392822
    6. 'abs' → logprob: -8.25892162322998
    7. '((' → logprob: -9.13392162322998
    8. '(min' → logprob: -9.38392162322998
    9. '(d' → logprob: -10.00892162322998
    10. '(' → logprob: -10.25892162322998

Token 631: '.R' (ID: 3395)
  Prédit: '.R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.R' → logprob: -0.20601120591163635
    2. '.S' → logprob: -1.706011176109314
    3. '.can' → logprob: -5.9560112953186035
    4. '.direction' → logprob: -7.4560112953186035
    5. '._' → logprob: -7.5810112953186035
    6. '.s' → logprob: -8.831010818481445
    7. '.d' → logprob: -9.331010818481445
    8. '.N' → logprob: -9.331010818481445
    9. 'R' → logprob: -9.456010818481445
    10. '.distance' → logprob: -9.581010818481445

Token 632: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.07003524899482727
    2. '%' → logprob: -2.695035219192505
    3. ' >=' → logprob: -10.320034980773926
    4. '%d' → logprob: -10.820034980773926
    5. ' ' → logprob: -11.320034980773926
    6. '%s' → logprob: -11.320034980773926
    7. ' <=' → logprob: -11.570034980773926
    8. '>=' → logprob: -12.570034980773926
    9. ' ==' → logprob: -12.945034980773926
    10. '%e' → logprob: -13.445034980773926

Token 633: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0007100477814674377
    2. ' d' → logprob: -7.2507100105285645
    3. '(d' → logprob: -16.750709533691406
    4. '	d' → logprob: -18.000709533691406
    5. '{' → logprob: -18.125709533691406
    6. '
' → logprob: -18.750709533691406
    7. ' ' → logprob: -19.375709533691406
    8. ')d' → logprob: -19.375709533691406
    9. '>d' → logprob: -19.625709533691406
    10. ''d' → logprob: -19.750709533691406

Token 634: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.08953007310628891
    2. ' ==' → logprob: -2.4645299911499023
    3. '=' → logprob: -7.464529991149902
    4. '()==' → logprob: -11.964529991149902
    5. ')==' → logprob: -12.714529991149902
    6. ' =' → logprob: -12.964529991149902
    7. '===' → logprob: -12.964529991149902
    8. '==
' → logprob: -13.464529991149902
    9. ']==' → logprob: -14.089529991149902
    10. ')' → logprob: -15.089529991149902

Token 635: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0004309076175559312
    2. ' ' → logprob: -7.750431060791016
    3. 'self' → logprob: -15.875431060791016
    4. '   ' → logprob: -16.875431060791016
    5. 'd' → logprob: -17.500431060791016
    6. '       ' → logprob: -18.375431060791016
    7. ' self' → logprob: -18.437931060791016
    8. '۰' → logprob: -18.562931060791016
    9. '=' → logprob: -18.687931060791016
    10. 's' → logprob: -19.062931060791016

Token 636: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.749814019713085e-06
    2. ' ' → logprob: -12.000006675720215
    3. 'self' → logprob: -14.500006675720215
    4. '   ' → logprob: -18.00000762939453
    5. ' self' → logprob: -18.12500762939453
    6. '۰' → logprob: -19.37500762939453
    7. '(self' → logprob: -19.50000762939453
    8. '  ' → logprob: -19.62500762939453
    9. '(' → logprob: -20.31250762939453
    10. '       ' → logprob: -20.37500762939453

Token 637: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.013055756688117981
    2. '   ' → logprob: -4.763055801391602
    3. '<|end|>' → logprob: -6.513055801391602
    4. '    
' → logprob: -6.638055801391602
    5. '

' → logprob: -7.388055801391602
    6. '  
' → logprob: -8.138055801391602
    7. '```' → logprob: -8.138055801391602
    8. '
' → logprob: -8.888055801391602
    9. ' 
' → logprob: -9.763055801391602
    10. '\n' → logprob: -10.138055801391602

Token 638: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.15278565883636475
    2. '   ' → logprob: -2.6527857780456543
    3. '_' → logprob: -2.9027857780456543
    4. ' 
' → logprob: -4.777785778045654
    5. ' ' → logprob: -6.402785778045654
    6. '

' → logprob: -6.527785778045654
    7. '    
' → logprob: -6.777785778045654
    8. '  
' → logprob: -7.152785778045654
    9. '\n' → logprob: -7.902785778045654
    10. ':' → logprob: -8.402785301208496

Token 639: ' def' (ID: 1056)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.004981132224202156
    2. '   ' → logprob: -6.12998104095459
    3. '_' → logprob: -7.12998104095459
    4. 'def' (adapté à ' def') → logprob: -7.50498104095459
    5. ' 
' → logprob: -7.62998104095459
    6. '

' → logprob: -7.87998104095459
    7. ' def' → logprob: -8.75498104095459
    8. ' ' → logprob: -9.00498104095459
    9. '    
' → logprob: -9.37998104095459
    10. '  
' → logprob: -9.62998104095459

Token 640: ' _' (ID: 1175)
  Prédit: '_g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_g' → logprob: -0.011177030391991138
    2. ' _' → logprob: -4.511177062988281
    3. '_' → logprob: -9.636177062988281
    4. '_r' → logprob: -11.386177062988281
    5. '_s' → logprob: -11.761177062988281
    6. '_j' → logprob: -12.011177062988281
    7. '_jump' → logprob: -12.386177062988281
    8. '_d' → logprob: -12.636177062988281
    9. '_G' → logprob: -12.886177062988281
    10. '_min' → logprob: -12.886177062988281

Token 641: 'g' (ID: 70)
  Prédit: 'g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -6.0629870858974755e-05
    2. '_g' → logprob: -9.87506103515625
    3. 'init' → logprob: -11.87506103515625
    4. '.g' → logprob: -15.00006103515625
    5. '(g' → logprob: -15.00006103515625
    6. 'cached' → logprob: -15.00006103515625
    7. 'get' → logprob: -15.12506103515625
    8. 'l' → logprob: -15.87506103515625
    9. 'cache' → logprob: -16.00006103515625
    10. '
' → logprob: -16.75006103515625

Token 642: 'cd' (ID: 8301)
  Prédit: 'cd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cd' → logprob: -2.2127087504486553e-05
    2. '_cd' → logprob: -10.750021934509277
    3. 'cdf' → logprob: -15.250021934509277
    4. '_c' → logprob: -15.375021934509277
    5. 'cdn' → logprob: -16.500022888183594
    6. 'c' → logprob: -17.375022888183594
    7. 'CD' → logprob: -19.375022888183594
    8. '_g' → logprob: -19.875022888183594
    9. 'cdr' → logprob: -19.875022888183594
    10. 'def' → logprob: -20.250022888183594

Token 643: '_of' (ID: 8023)
  Prédit: '_of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_of' → logprob: -0.0006214152672328055
    2. '(self' → logprob: -7.500621318817139
    3. 'of' → logprob: -10.750621795654297
    4. 'self' → logprob: -11.000621795654297
    5. '   ' → logprob: -11.375621795654297
    6. '(' → logprob: -11.625621795654297
    7. ' of' → logprob: -12.750621795654297
    8. ' =' → logprob: -13.625621795654297
    9. '=' → logprob: -14.125621795654297
    10. 'def' → logprob: -14.250621795654297

Token 644: '_support' (ID: 59508)
  Prédit: 'support'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'support' → logprob: -0.01757686585187912
    2. '_support' → logprob: -4.267576694488525
    3. 'range' → logprob: -6.517576694488525
    4. 'self' → logprob: -7.267576694488525
    5. 'int' → logprob: -7.767576694488525
    6. '(int' → logprob: -8.142577171325684
    7. ' support' → logprob: -9.017577171325684
    8. 's' → logprob: -9.267577171325684
    9. 'supports' → logprob: -9.517577171325684
    10. 'list' → logprob: -10.267577171325684

Token 645: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -9.491498531133402e-06
    2. '(' → logprob: -12.375009536743164
    3. 'self' → logprob: -12.375009536743164
    4. '(s' → logprob: -14.625009536743164
    5. ' (' → logprob: -15.000009536743164
    6. '()' → logprob: -17.125009536743164
    7. 's' → logprob: -17.625009536743164
    8. '(
' → logprob: -17.750009536743164
    9. '   ' → logprob: -18.000009536743164
    10. ' self' → logprob: -18.000009536743164

Token 646: ')' (ID: 8)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.13094384968280792
    2. ')' → logprob: -2.130943775177002
    3. 'self' → logprob: -5.630943775177002
    4. '):' → logprob: -8.50594425201416
    5. '):
' → logprob: -9.38094425201416
    6. '(' → logprob: -10.13094425201416
    7. ')(' → logprob: -10.13094425201416
    8. '()' → logprob: -10.88094425201416
    9. '   ' → logprob: -11.50594425201416
    10. 'def' → logprob: -12.63094425201416

Token 647: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.008470841683447361
    2. ' ->' → logprob: -5.8834710121154785
    3. 'self' → logprob: -6.3834710121154785
    4. '->' → logprob: -6.3834710121154785
    5. 'def' → logprob: -6.7584710121154785
    6. '   ' → logprob: -7.8834710121154785
    7. ')' → logprob: -8.38347053527832
    8. ':' → logprob: -8.50847053527832
    9. '(' → logprob: -9.00847053527832
    10. ':
' → logprob: -9.38347053527832

Token 648: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0008124859305098653
    2. ' int' → logprob: -7.125812530517578
    3. '(int' → logprob: -12.375812530517578
    4. '   ' → logprob: -13.625812530517578
    5. '[int' → logprob: -13.750812530517578
    6. 'Optional' → logprob: -14.125812530517578
    7. ' ' → logprob: -15.375812530517578
    8. '<int' → logprob: -15.375812530517578
    9. '	int' → logprob: -15.500812530517578
    10. 'return' → logprob: -16.375812530517578

Token 649: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.21340738236904144
    2. ':
' → logprob: -2.088407278060913
    3. '       ' → logprob: -2.713407278060913
    4. '):
' → logprob: -6.963407516479492
    5. '=' → logprob: -7.713407516479492
    6. ' =' → logprob: -9.088407516479492
    7. ',' → logprob: -9.088407516479492
    8. '():
' → logprob: -9.338407516479492
    9. '):' → logprob: -9.963407516479492
    10. 'g' → logprob: -10.463407516479492

Token 650: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00022940391500014812
    2. 'g' → logprob: -8.625229835510254
    3. 'return' → logprob: -10.500229835510254
    4. 'd' → logprob: -11.125229835510254
    5. ' gcd' → logprob: -12.375229835510254
    6. ' return' → logprob: -13.750229835510254
    7. '```' → logprob: -14.500229835510254
    8. '   ' → logprob: -14.875229835510254
    9. 'n' → logprob: -15.000229835510254
    10. '1' → logprob: -15.875229835510254

Token 651: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1788104623556137
    2. 'return' → logprob: -1.928810477256775
    3. 'g' → logprob: -4.0538105964660645
    4. ' return' → logprob: -7.4288105964660645
    5. 'min' → logprob: -8.428810119628906
    6. 'd' → logprob: -8.553810119628906
    7. 'n' → logprob: -11.678810119628906
    8. 'result' → logprob: -12.053810119628906
    9. ' gcd' → logprob: -12.053810119628906
    10. 'a' → logprob: -12.178810119628906

Token 652: ' The' (ID: 623)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.38928210735321045
    2. '       ' → logprob: -1.8892821073532104
    3. 'min' → logprob: -2.2642822265625
    4. 'start' → logprob: -3.1392822265625
    5. 'l' → logprob: -4.8892822265625
    6. 'a' → logprob: -5.8892822265625
    7. 'step' → logprob: -5.8892822265625
    8. 'left' → logprob: -6.0142822265625
    9. 'range' → logprob: -6.1392822265625
    10. 'g' → logprob: -6.6392822265625

Token 653: ' jump' (ID: 13843)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.029931673780083656
    2. ' return' → logprob: -4.529931545257568
    3. 'min' → logprob: -5.029931545257568
    4. 'g' → logprob: -5.154931545257568
    5. 'def' → logprob: -5.279931545257568
    6. '   ' → logprob: -7.904931545257568
    7. 'd' → logprob: -8.529932022094727
    8. '       ' → logprob: -8.904932022094727
    9. 's' → logprob: -9.404932022094727
    10. 'a' → logprob: -9.529932022094727

Token 654: ' length' (ID: 5517)
  Prédit: 'step'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'step' → logprob: -0.3518924117088318
    2. ' step' → logprob: -1.9768924713134766
    3. 'g' → logprob: -3.4768924713134766
    4. 'range' → logprob: -3.9768924713134766
    5. 'steps' → logprob: -4.101892471313477
    6. 'distance' → logprob: -4.476892471313477
    7. '_step' → logprob: -4.601892471313477
    8. 'size' → logprob: -4.726892471313477
    9. 'sizes' → logprob: -4.726892471313477
    10. '_g' → logprob: -4.851892471313477

Token 655: ' is' (ID: 382)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.13919642567634583
    2. ' =' → logprob: -2.5141963958740234
    3. 'range' → logprob: -3.2641963958740234
    4. 's' → logprob: -5.514196395874023
    5. '_range' → logprob: -6.389196395874023
    6. 'return' → logprob: -6.389196395874023
    7. 'step' → logprob: -6.889196395874023
    8. 'g' → logprob: -7.514196395874023
    9. ' range' → logprob: -7.764196395874023
    10. '   ' → logprob: -8.139196395874023

Token 656: ' sum' (ID: 4215)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.4805101454257965
    2. 'self' → logprob: -0.9805101156234741
    3. ' self' → logprob: -5.855510234832764
    4. ' gcd' → logprob: -5.980510234832764
    5. '1' → logprob: -7.105510234832764
    6. '       ' → logprob: -9.855509757995605
    7. '   ' → logprob: -10.230509757995605
    8. '(self' → logprob: -10.480509757995605
    9. 'max' → logprob: -10.980509757995605
    10. 'abs' → logprob: -11.355509757995605

Token 657: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.7385072708129883
    2. 'of' → logprob: -0.8635072708129883
    3. 'range' → logprob: -3.1135072708129883
    4. 'self' → logprob: -4.488507270812988
    5. ' range' → logprob: -4.863507270812988
    6. '   ' → logprob: -5.113507270812988
    7. ' =' → logprob: -5.113507270812988
    8. '=' → logprob: -5.863507270812988
    9. '       ' → logprob: -5.988507270812988
    10. 'length' → logprob: -6.238507270812988

Token 658: ' K' (ID: 658)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.2355423867702484
    2. 'numbers' → logprob: -2.9855422973632812
    3. 'range' → logprob: -3.4855422973632812
    4. '1' → logprob: -3.4855422973632812
    5. 'K' → logprob: -3.8605422973632812
    6. 'k' → logprob: -4.235542297363281
    7. 'steps' → logprob: -4.485542297363281
    8. '[' → logprob: -4.735542297363281
    9. 'the' → logprob: -4.735542297363281
    10. 'two' → logprob: -5.235542297363281

Token 659: ' numbers' (ID: 8663)
  Prédit: ' integers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' integers' → logprob: -0.9770250916481018
    2. 'uniform' → logprob: -1.977025032043457
    3. ' numbers' → logprob: -2.352025032043457
    4. 'inte' → logprob: -2.602025032043457
    5. ' uniform' → logprob: -2.977025032043457
    6. ' values' → logprob: -3.227025032043457
    7. 'values' → logprob: -3.352025032043457
    8. 'numbers' → logprob: -3.477025032043457
    9. ' independent' → logprob: -3.727025032043457
    10. 'ind' → logprob: -3.852025032043457

Token 660: ' each' (ID: 2454)
  Prédit: ' from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' from' → logprob: -0.5985996723175049
    2. 'from' → logprob: -1.0985996723175049
    3. '       ' → logprob: -2.473599672317505
    4. ',' → logprob: -4.223599433898926
    5. ' in' → logprob: -5.348599433898926
    6. ' ranging' → logprob: -5.598599433898926
    7. '1' → logprob: -5.848599433898926
    8. ' between' → logprob: -6.098599433898926
    9. ' =' → logprob: -6.848599433898926
    10. ' with' → logprob: -7.848599433898926

Token 661: ' in' (ID: 306)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.22746749222278595
    2. 'r' → logprob: -2.2274675369262695
    3. 'between' → logprob: -2.8524675369262695
    4. 'in' → logprob: -3.3524675369262695
    5. ' ranging' → logprob: -7.1024675369262695
    6. ' from' → logprob: -7.2274675369262695
    7. ' between' → logprob: -7.6024675369262695
    8. 'range' → logprob: -7.7274675369262695
    9. ' in' → logprob: -8.22746753692627
    10. 'taking' → logprob: -10.22746753692627

Token 662: ' ' (ID: 220)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.015694350004196167
    2. 'range' → logprob: -4.3906941413879395
    3. '1' → logprob: -6.0156941413879395
    4. ' range' → logprob: -7.7656941413879395
    5. ' [' → logprob: -8.515694618225098
    6. 'from' → logprob: -10.015694618225098
    7. '{' → logprob: -10.140694618225098
    8. '(' → logprob: -10.890694618225098
    9. '   ' → logprob: -12.640694618225098
    10. '[
' → logprob: -13.390694618225098

Token 663: '1' (ID: 16)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.09794773161411285
    2. 'range' → logprob: -2.847947835922241
    3. '1' → logprob: -3.347947835922241
    4. '{' → logprob: -9.47294807434082
    5. ' range' → logprob: -9.47294807434082
    6. 'from' → logprob: -11.47294807434082
    7. ' [' → logprob: -11.72294807434082
    8. '(' → logprob: -11.97294807434082
    9. '[int' → logprob: -13.84794807434082
    10. 'the' → logprob: -14.09794807434082

Token 664: '..' (ID: 485)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06729985773563385
    2. 'and' → logprob: -3.4422998428344727
    3. ' and' → logprob: -4.192299842834473
    4. ' to' → logprob: -5.317299842834473
    5. '..' → logprob: -5.442299842834473
    6. 'to' → logprob: -5.692299842834473
    7. ' ,' → logprob: -5.817299842834473
    8. ',
' → logprob: -7.442299842834473
    9. '   ' → logprob: -7.817299842834473
    10. ' through' → logprob: -8.192299842834473

Token 665: 'N' (ID: 45)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.017722686752676964
    2. 'N' → logprob: -4.5177226066589355
    3. ' self' → logprob: -5.0177226066589355
    4. ' N' → logprob: -11.267723083496094
    5. '```' → logprob: -12.267723083496094
    6. '(self' → logprob: -12.517723083496094
    7. ' ' → logprob: -12.642723083496094
    8. '   ' → logprob: -13.392723083496094
    9. 'n' → logprob: -13.392723083496094
    10. '	self' → logprob: -14.142723083496094

Token 666: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001787278801202774
    2. ',' → logprob: -6.501787185668945
    3. 'return' → logprob: -8.376787185668945
    4. ' return' → logprob: -10.501787185668945
    5. 'g' → logprob: -11.126787185668945
    6. '
' → logprob: -12.626787185668945
    7. ',
' → logprob: -13.001787185668945
    8. '```' → logprob: -13.751787185668945
    9. '.' → logprob: -14.126787185668945
    10. '   ' → logprob: -14.251787185668945

Token 667: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00042447797022759914
    2. ',' → logprob: -8.2504243850708
    3. 'return' → logprob: -9.2504243850708
    4. ' return' → logprob: -10.1254243850708
    5. '   ' → logprob: -11.6254243850708
    6. '
' → logprob: -11.8754243850708
    7. ',
' → logprob: -13.7504243850708
    8. '```' → logprob: -13.7504243850708
    9. '        
' → logprob: -13.7504243850708
    10. ':' → logprob: -14.0004243850708

Token 668: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06289062649011612
    2. 'return' → logprob: -2.8128905296325684
    3. ' return' → logprob: -7.562890529632568
    4. 'g' → logprob: -7.937890529632568
    5. 'n' → logprob: -11.437891006469727
    6. '```' → logprob: -11.812891006469727
    7. 'd' → logprob: -11.937891006469727
    8. '   ' → logprob: -12.187891006469727
    9. '
' → logprob: -12.812891006469727
    10. ',' → logprob: -13.062891006469727

Token 669: ' So' (ID: 2632)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2080533355474472
    2. 'return' → logprob: -1.7080533504486084
    3. ' return' → logprob: -5.333053112030029
    4. 'd' → logprob: -7.583053112030029
    5. 'g' → logprob: -7.708053112030029
    6. 'Since' → logprob: -8.458053588867188
    7. 'min' → logprob: -8.458053588867188
    8. 'The' → logprob: -9.708053588867188
    9. 'Return' → logprob: -10.333053588867188
    10. 'range' → logprob: -10.458053588867188

Token 670: ' support' (ID: 2498)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4835949242115021
    2. 'return' → logprob: -0.9835948944091797
    3. ' return' → logprob: -4.73359489440918
    4. 'min' → logprob: -8.98359489440918
    5. 'the' → logprob: -9.23359489440918
    6. 'd' → logprob: -9.23359489440918
    7. 'g' → logprob: -9.48359489440918
    8. 'self' → logprob: -9.85859489440918
    9. ' the' → logprob: -10.48359489440918
    10. 'range' → logprob: -10.48359489440918

Token 671: ' is' (ID: 382)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11536930501461029
    2. '=' → logprob: -2.6153693199157715
    3. '_length' → logprob: -4.7403693199157715
    4. '_min' → logprob: -5.1153693199157715
    5. '   ' → logprob: -5.3653693199157715
    6. '_range' → logprob: -5.4903693199157715
    7. ' is' → logprob: -6.1153693199157715
    8. 'length' → logprob: -6.1153693199157715
    9. 'range' → logprob: -6.4903693199157715
    10. 'min' → logprob: -6.4903693199157715

Token 672: ' {' (ID: 354)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.30724215507507324
    2. 'self' → logprob: -1.4322421550750732
    3. ' (' → logprob: -4.432242393493652
    4. ' self' → logprob: -4.557242393493652
    5. '(K' → logprob: -6.182242393493652
    6. 'range' → logprob: -7.057242393493652
    7. '   ' → logprob: -9.432242393493652
    8. ' range' → logprob: -9.557242393493652
    9. '(' → logprob: -9.557242393493652
    10. '1' → logprob: -10.057242393493652

Token 673: 'K' (ID: 42)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0006184352096170187
    2. ' self' → logprob: -8.000617980957031
    3. 'k' → logprob: -8.500617980957031
    4. 'i' → logprob: -10.125617980957031
    5. 's' → logprob: -11.125617980957031
    6. '1' → logprob: -11.375617980957031
    7. '(self' → logprob: -12.250617980957031
    8. 'x' → logprob: -12.625617980957031
    9. 'range' → logprob: -13.375617980957031
    10. 'K' → logprob: -13.500617980957031

Token 674: ' ..' (ID: 8548)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3589646518230438
    2. ' *' → logprob: -2.108964681625366
    3. '*' → logprob: -2.358964681625366
    4. '*self' → logprob: -3.108964681625366
    5. '*K' → logprob: -3.858964681625366
    6. '*N' → logprob: -4.358964443206787
    7. ' ,' → logprob: -6.108964443206787
    8. ',
' → logprob: -6.358964443206787
    9. '}' → logprob: -6.858964443206787
    10. 'self' → logprob: -7.358964443206787

Token 675: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.05019618570804596
    2. 'self' → logprob: -3.1751961708068848
    3. ' K' → logprob: -5.175196170806885
    4. ' self' → logprob: -6.925196170806885
    5. '(K' → logprob: -8.675196647644043
    6. 'N' → logprob: -8.800196647644043
    7. '(self' → logprob: -9.800196647644043
    8. ' ' → logprob: -10.175196647644043
    9. ' (' → logprob: -10.175196647644043
    10. '}' → logprob: -10.800196647644043

Token 676: '*N' (ID: 107360)
  Prédit: '*N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*N' → logprob: -0.47951698303222656
    2. '*' → logprob: -0.9795169830322266
    3. '*self' → logprob: -5.604516983032227
    4. ' *' → logprob: -6.979516983032227
    5. '*K' → logprob: -7.354516983032227
    6. 'N' → logprob: -9.979516983032227
    7. ',' → logprob: -10.104516983032227
    8. '*,' → logprob: -11.104516983032227
    9. '*(' → logprob: -11.354516983032227
    10. '*n' → logprob: -11.354516983032227

Token 677: '},' (ID: 4180)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.030680501833558083
    2. '}
' → logprob: -3.5306804180145264
    3. ' }' → logprob: -7.9056806564331055
    4. '},' → logprob: -8.280680656433105
    5. '}

' → logprob: -8.405680656433105
    6. ' }
' → logprob: -10.655680656433105
    7. '}.' → logprob: -10.905680656433105
    8. ')' → logprob: -11.280680656433105
    9. ',' → logprob: -11.530680656433105
    10. '}
' → logprob: -12.155680656433105

Token 678: ' consecutive' (ID: 40840)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.6086117625236511
    2. '       ' → logprob: -0.8586117625236511
    3. ' return' → logprob: -3.983611822128296
    4. 'g' → logprob: -4.983611583709717
    5. 'self' → logprob: -5.733611583709717
    6. ' gcd' → logprob: -5.733611583709717
    7. '           ' → logprob: -9.733612060546875
    8. ' self' → logprob: -10.358612060546875
    9. ' and' → logprob: -10.858612060546875
    10. '```' → logprob: -11.858612060546875

Token 679: ' integers' (ID: 54912)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.29467740654945374
    2. ',' → logprob: -1.9196773767471313
    3. 'return' → logprob: -3.544677495956421
    4. '
' → logprob: -3.794677495956421
    5. ' =' → logprob: -4.044677257537842
    6. ' return' → logprob: -4.169677257537842
    7. '   ' → logprob: -5.044677257537842
    8. 'g' → logprob: -5.419677257537842
    9. '=' → logprob: -5.794677257537842
    10. 'd' → logprob: -6.544677257537842

Token 680: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3483882248401642
    2. '
' → logprob: -1.4733881950378418
    3. '1' → logprob: -3.473388195037842
    4. 'return' → logprob: -4.223388195037842
    5. ',' → logprob: -4.973388195037842
    6. '        
' → logprob: -5.223388195037842
    7. ' return' → logprob: -5.598388195037842
    8. '0' → logprob: -7.848388195037842
    9. '  
' → logprob: -7.848388195037842
    10. '<|end|>' → logprob: -8.098388671875

Token 681: ' thus' (ID: 13972)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.696625828742981
    2. '1' → logprob: -0.821625828742981
    3. 'return' → logprob: -2.9466257095336914
    4. ' return' → logprob: -5.196625709533691
    5. ' ' → logprob: -5.821625709533691
    6. '   ' → logprob: -8.821625709533691
    7. ' and' → logprob: -8.946625709533691
    8. '           ' → logprob: -9.571625709533691
    9. ' K' → logprob: -9.696625709533691
    10. '2' → logprob: -9.821625709533691

Token 682: ' gcd' (ID: 106918)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0020150020718574524
    2. 'return' → logprob: -6.377015113830566
    3. '       ' → logprob: -9.252015113830566
    4. ' ' → logprob: -9.252015113830566
    5. '   ' → logprob: -10.252015113830566
    6. 'g' → logprob: -10.252015113830566
    7. 'self' → logprob: -10.377015113830566
    8. 'def' → logprob: -11.252015113830566
    9. ' return' → logprob: -12.752015113830566
    10. '           ' → logprob: -13.252015113830566

Token 683: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2376927137374878
    2. '1' → logprob: -2.3626928329467773
    3. ' =' → logprob: -2.6126928329467773
    4. ' is' → logprob: -3.6126928329467773
    5. 'is' → logprob: -4.237692832946777
    6. '(' → logprob: -6.612692832946777
    7. '(self' → logprob: -7.737692832946777
    8. ' ' → logprob: -7.862692832946777
    9. '       ' → logprob: -9.237692832946777
    10. ':' → logprob: -9.487692832946777

Token 684: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.061054359131958e-06
    2. ' ' → logprob: -11.750007629394531
    3. '   ' → logprob: -16.62500762939453
    4. '       ' → logprob: -16.62500762939453
    5. '=' → logprob: -20.12500762939453
    6. '```' → logprob: -20.12500762939453
    7. '           ' → logprob: -20.75000762939453
    8. '
' → logprob: -20.87500762939453
    9. '<|end|>' → logprob: -21.00000762939453
    10. ',' → logprob: -21.87500762939453

Token 685: ' always' (ID: 3324)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07235272228717804
    2. '
' → logprob: -2.697352647781372
    3. 'return' → logprob: -6.947352886199951
    4. '1' → logprob: -7.822352886199951
    5. ',' → logprob: -8.072352409362793
    6. '        
' → logprob: -8.447352409362793
    7. '<|end|>' → logprob: -9.197352409362793
    8. '   ' → logprob: -9.447352409362793
    9. ' return' → logprob: -9.572352409362793
    10. ')' → logprob: -9.947352409362793

Token 686: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.031960971653461456
    2. '
' → logprob: -3.531960964202881
    3. '<|end|>' → logprob: -6.906960964202881
    4. ',' → logprob: -8.031961441040039
    5. 'return' → logprob: -8.156961441040039
    6. '1' → logprob: -8.531961441040039
    7. '        
' → logprob: -8.656961441040039
    8. '   ' → logprob: -10.156961441040039
    9. ')' → logprob: -10.656961441040039
    10. '  
' → logprob: -10.781961441040039

Token 687: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.017713196575641632
    2. '	' → logprob: -4.8927130699157715
    3. '
' → logprob: -4.8927130699157715
    4. '1' → logprob: -7.2677130699157715
    5. '   ' → logprob: -7.6427130699157715
    6. 'return' → logprob: -7.7677130699157715
    7. '	return' → logprob: -8.64271354675293
    8. '<|end|>' → logprob: -8.76771354675293
    9. '        
' → logprob: -8.89271354675293
    10. '\t' → logprob: -9.51771354675293

Token 688: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.3872043788433075
    2. '       ' → logprob: -1.1372044086456299
    3. '1' → logprob: -8.38720417022705
    4. ' return' → logprob: -9.26220417022705
    5. '	return' → logprob: -12.26220417022705
    6. '   ' → logprob: -12.88720417022705
    7. '0' → logprob: -13.76220417022705
    8. '	' → logprob: -14.26220417022705
    9. '```' → logprob: -14.76220417022705
    10. ':return' → logprob: -15.51220417022705

Token 689: ' but' (ID: 889)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.011124339886009693
    2. '       ' → logprob: -4.511124134063721
    3. ' return' → logprob: -9.511124610900879
    4. '	return' → logprob: -13.886124610900879
    5. '```' → logprob: -13.886124610900879
    6. '   ' → logprob: -14.636124610900879
    7. ':return' → logprob: -16.761123657226562
    8. '1' → logprob: -17.386123657226562
    9. '
' → logprob: -17.386123657226562
    10. '#' → logprob: -17.636123657226562

Token 690: ' let's' (ID: 35717)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.09381501376628876
    2. '       ' → logprob: -3.2188150882720947
    3. '#' → logprob: -3.3438150882720947
    4. 'if' → logprob: -4.718814849853516
    5. 'for' → logprob: -6.218814849853516
    6. ' return' → logprob: -6.218814849853516
    7. 'we' → logprob: -7.468814849853516
    8. '   ' → logprob: -8.718814849853516
    9. '
' → logprob: -8.718814849853516
    10. 'def' → logprob: -8.843814849853516

Token 691: ' keep' (ID: 3357)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.01765124686062336
    2. 'keep' → logprob: -4.267651081085205
    3. ' return' → logprob: -6.767651081085205
    4. 'compute' → logprob: -7.892651081085205
    5. 'confirm' → logprob: -8.142651557922363
    6. 'implement' → logprob: -8.142651557922363
    7. 'check' → logprob: -8.267651557922363
    8. ' keep' → logprob: -8.767651557922363
    9. 'def' → logprob: -8.892651557922363
    10. 'write' → logprob: -9.142651557922363

Token 692: ' for' (ID: 395)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.23038040101528168
    2. 'the' → logprob: -1.8553804159164429
    3. 'return' → logprob: -3.8553802967071533
    4. 'this' → logprob: -4.730380535125732
    5. '1' → logprob: -4.855380535125732
    6. 'g' → logprob: -5.105380535125732
    7. 'code' → logprob: -5.605380535125732
    8. ' the' → logprob: -7.730380535125732
    9. 'it' → logprob: -7.980380535125732
    10. ' self' → logprob: -8.230380058288574

Token 693: ' extension' (ID: 15369)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.8415016531944275
    2. 'future' → logprob: -0.8415016531944275
    3. 'compat' → logprob: -2.3415017127990723
    4. 'possible' → logprob: -3.8415017127990723
    5. 'potential' → logprob: -4.966501712799072
    6. 'clar' → logprob: -5.716501712799072
    7. 'code' → logprob: -5.966501712799072
    8. 'ext' → logprob: -6.341501712799072
    9. 'flex' → logprob: -7.216501712799072
    10. 'rob' → logprob: -7.216501712799072

Token 694: ' or' (ID: 503)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.026711612939834595
    2. '
' → logprob: -4.026711463928223
    3. '        
' → logprob: -6.026711463928223
    4. 'return' → logprob: -6.901711463928223
    5. ' 
' → logprob: -6.901711463928223
    6. '        ' → logprob: -7.151711463928223
    7. '   ' → logprob: -7.526711463928223
    8. ' return' → logprob: -7.651711463928223
    9. ':
' → logprob: -8.026711463928223
    10. ':' → logprob: -8.651711463928223

Token 695: ' change' (ID: 3343)
  Prédit: 'future'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'future' → logprob: -0.2666861414909363
    2. 'possible' → logprob: -2.141686201095581
    3. 'clar' → logprob: -2.391686201095581
    4. 'compat' → logprob: -4.516685962677002
    5. 'potential' → logprob: -5.141685962677002
    6. 'read' → logprob: -5.266685962677002
    7. 'rob' → logprob: -6.766685962677002
    8. 'com' → logprob: -7.891685962677002
    9. 'correct' → logprob: -8.01668643951416
    10. 'poss' → logprob: -8.14168643951416

Token 696: ' cases' (ID: 7911)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.822509765625
    2. '   ' → logprob: -1.197509765625
    3. '1' → logprob: -1.822509765625
    4. ':' → logprob: -3.697509765625
    5. ',' → logprob: -4.322509765625
    6. '.' → logprob: -4.447509765625
    7. 'self' → logprob: -4.822509765625
    8. 'def' → logprob: -4.947509765625
    9. 'return' → logprob: -5.072509765625
    10. ')' → logprob: -5.447509765625

Token 697: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002224364085122943
    2. '
' → logprob: -6.752224445343018
    3. '        
' → logprob: -7.377224445343018
    4. '<|end|>' → logprob: -9.00222396850586
    5. '   ' → logprob: -9.25222396850586
    6. ',' → logprob: -10.00222396850586
    7. '    
' → logprob: -10.12722396850586
    8. ')' → logprob: -11.12722396850586
    9. 'return' → logprob: -11.12722396850586
    10. '	' → logprob: -11.50222396850586

Token 698: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003898988477885723
    2. '1' → logprob: -5.628899097442627
    3. '   ' → logprob: -9.128898620605469
    4. 'return' → logprob: -9.128898620605469
    5. '0' → logprob: -10.753898620605469
    6. '        
' → logprob: -11.128898620605469
    7. ' return' → logprob: -11.753898620605469
    8. ' ' → logprob: -11.753898620605469
    9. '2' → logprob: -11.753898620605469
    10. '	' → logprob: -12.003898620605469

Token 699: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4742046892642975
    2. 'return' (adapté à ' return') → logprob: -0.9742046594619751
    3. ' return' → logprob: -8.974205017089844
    4. '   ' → logprob: -14.849205017089844
    5. '	return' → logprob: -14.849205017089844
    6. '1' → logprob: -15.974205017089844
    7. 'ret' → logprob: -17.349205017089844
    8. '	' → logprob: -17.349205017089844
    9. '      ' → logprob: -17.349205017089844
    10. '```' → logprob: -17.474205017089844

Token 700: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.995397365652025e-05
    2. 'g' → logprob: -9.375089645385742
    3. ' ' → logprob: -12.250089645385742
    4. 'self' → logprob: -15.125089645385742
    5. ' gcd' → logprob: -18.250089645385742
    6. 'math' → logprob: -18.375089645385742
    7. '(' → logprob: -18.875089645385742
    8. '   ' → logprob: -19.125089645385742
    9. 'int' → logprob: -19.625089645385742
    10. 'd' → logprob: -19.875089645385742

Token 701: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00012475410767365247
    2. 'g' → logprob: -9.00012493133545
    3. 'self' → logprob: -13.62512493133545
    4. ' ' → logprob: -16.375123977661133
    5. 'math' → logprob: -18.125123977661133
    6. '(' → logprob: -18.875123977661133
    7. '(g' → logprob: -19.125123977661133
    8. 'abs' → logprob: -19.625123977661133
    9. ' gcd' → logprob: -19.625123977661133
    10. 'd' → logprob: -19.625123977661133

Token 702: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 703: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25653505325317383
    2. 'def' → logprob: -1.7565350532531738
    3. '<|end|>' → logprob: -3.756535053253174
    4. '
' → logprob: -4.006535053253174
    5. ' def' → logprob: -5.256535053253174
    6. '    
' → logprob: -5.881535053253174
    7. ' ' → logprob: -6.506535053253174
    8. '  
' → logprob: -7.881535053253174
    9. '<|end|>' → logprob: -7.881535053253174
    10. '```' → logprob: -8.006534576416016

Token 704: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.6584531664848328
    2. '   ' → logprob: -0.7834531664848328
    3. ' def' → logprob: -3.7834532260894775
    4. ')' → logprob: -7.158452987670898
    5. '<|end|>' → logprob: -7.283452987670898
    6. '    
' → logprob: -7.408452987670898
    7. ' ' → logprob: -8.783452987670898
    8. '
' → logprob: -8.908452987670898
    9. '	def' → logprob: -9.283452987670898
    10. '  ' → logprob: -9.908452987670898

Token 705: ' expected' (ID: 5930)
  Prédit: 'expected'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'expected' → logprob: -0.45466506481170654
    2. ' expected' → logprob: -1.4546650648117065
    3. 'prob' → logprob: -2.454665184020996
    4. ' probability' → logprob: -4.204665184020996
    5. 'jump' → logprob: -4.829665184020996
    6. 'step' → logprob: -4.954665184020996
    7. ' jump' → logprob: -5.579665184020996
    8. 'next' → logprob: -5.704665184020996
    9. ' next' → logprob: -6.079665184020996
    10. 'simulate' → logprob: -6.954665184020996

Token 706: '_j' (ID: 12021)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.31133419275283813
    2. '_value' → logprob: -2.3113341331481934
    3. '_jump' → logprob: -2.4363341331481934
    4. '_steps' → logprob: -3.9363341331481934
    5. '_j' → logprob: -4.061334133148193
    6. '_step' → logprob: -4.186334133148193
    7. '_distance' → logprob: -4.561334133148193
    8. '_probability' → logprob: -4.811334133148193
    9. '_length' → logprob: -5.561334133148193
    10. '_return' → logprob: -6.186334133148193

Token 707: 'umps' (ID: 14938)
  Prédit: 'umps'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'umps' → logprob: -0.02344101294875145
    2. 'ump' → logprob: -3.7734410762786865
    3. 'um' → logprob: -8.898441314697266
    4. 'urn' → logprob: -11.148441314697266
    5. 'umper' → logprob: -11.398441314697266
    6. 'umber' → logprob: -11.898441314697266
    7. '_' → logprob: -12.773441314697266
    8. ' um' → logprob: -12.773441314697266
    9. 'umping' → logprob: -13.148441314697266
    10. 'ourney' → logprob: -13.273441314697266

Token 708: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0006671638693660498
    2. '(' → logprob: -7.375667095184326
    3. ' (' → logprob: -10.625667572021484
    4. 'self' → logprob: -12.000667572021484
    5. '_to' → logprob: -13.000667572021484
    6. '_length' → logprob: -13.500667572021484
    7. '   ' → logprob: -13.500667572021484
    8. '_count' → logprob: -13.625667572021484
    9. '(s' → logprob: -14.000667572021484
    10. '_' → logprob: -14.250667572021484

Token 709: ')' (ID: 8)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.7319828271865845
    2. '(self' → logprob: -1.1069828271865845
    3. ')' → logprob: -2.731982707977295
    4. ',' → logprob: -2.731982707977295
    5. '):
' → logprob: -4.106982707977295
    6. 'self' → logprob: -4.231982707977295
    7. ':' → logprob: -4.981982707977295
    8. '   ' → logprob: -5.106982707977295
    9. '():' → logprob: -5.356982707977295
    10. '_' → logprob: -6.231982707977295

Token 710: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0013479728950187564
    2. '(' → logprob: -6.87634801864624
    3. ':' → logprob: -8.751347541809082
    4. '():' → logprob: -9.751347541809082
    5. 'self' → logprob: -10.376347541809082
    6. '   ' → logprob: -10.626347541809082
    7. ' (' → logprob: -10.876347541809082
    8. 'def' → logprob: -11.876347541809082
    9. '_' → logprob: -12.001347541809082
    10. '       ' → logprob: -13.501347541809082

Token 711: ' Optional' (ID: 19351)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -1.1435580253601074
    2. 'Optional' → logprob: -1.6435580253601074
    3. ' Optional' → logprob: -1.7685580253601074
    4. ' float' → logprob: -1.8935580253601074
    5. 'int' → logprob: -2.0185580253601074
    6. ' int' → logprob: -3.3935580253601074
    7. 'None' → logprob: -8.768558502197266
    8. ' None' → logprob: -9.393558502197266
    9. '(Optional' → logprob: -9.393558502197266
    10. '   ' → logprob: -10.393558502197266

Token 712: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.048593275249004364
    2. '[int' → logprob: -3.048593282699585
    3. 'float' → logprob: -12.298593521118164
    4. 'int' → logprob: -14.298593521118164
    5. '   ' → logprob: -15.298593521118164
    6. ' [' → logprob: -15.923593521118164
    7. '[str' → logprob: -16.173593521118164
    8. '[
' → logprob: -16.298593521118164
    9. '```' → logprob: -16.673593521118164
    10. 'flo' → logprob: -17.048593521118164

Token 713: 'float' (ID: 7829)
  Prédit: 'float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.0011813003802672029
    2. 'int' → logprob: -6.751181125640869
    3. 'flo' → logprob: -12.501181602478027
    4. '[' → logprob: -12.626181602478027
    5. ' float' → logprob: -12.751181602478027
    6. 'f' → logprob: -14.876181602478027
    7. '```' → logprob: -14.876181602478027
    8. 'fl' → logprob: -15.251181602478027
    9. '   ' → logprob: -16.87618064880371
    10. '	float' → logprob: -17.25118064880371

Token 714: ']:
' (ID: 22152)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03391999378800392
    2. '):' → logprob: -3.6589200496673584
    3. ']:' → logprob: -5.658919811248779
    4. ':
' → logprob: -5.908919811248779
    5. '):
' → logprob: -6.783919811248779
    6. ']:
' → logprob: -9.658920288085938
    7. '   ' → logprob: -10.033920288085938
    8. '():' → logprob: -10.658920288085938
    9. '}:' → logprob: -10.783920288085938
    10. '>:' → logprob: -10.908920288085938

Token 715: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00011522514978423715
    2. '```' → logprob: -10.000115394592285
    3. '
' → logprob: -10.125115394592285
    4. '        
' → logprob: -12.375115394592285
    5. '#' → logprob: -12.500115394592285
    6. ',' → logprob: -12.500115394592285
    7. ' if' → logprob: -12.625115394592285
    8. '   ' → logprob: -12.750115394592285
    9. ':' → logprob: -13.375115394592285
    10. '' → logprob: -13.500115394592285

Token 716: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.29771631956100464
    2. 'dp' → logprob: -2.5477163791656494
    3. '       ' → logprob: -3.0477163791656494
    4. 'target' → logprob: -3.2977163791656494
    5. 'total' → logprob: -3.4227163791656494
    6. 'expected' → logprob: -3.6727163791656494
    7. 'threshold' → logprob: -4.92271614074707
    8. 'prob' → logprob: -5.42271614074707
    9. 'steps' → logprob: -5.67271614074707
    10. '#' → logprob: -5.79771614074707

Token 717: ' not' (ID: 625)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.7264432907104492
    2. ' not' → logprob: -1.2264432907104492
    3. ' self' → logprob: -1.7264432907104492
    4. 'not' → logprob: -3.101443290710449
    5. ' abs' → logprob: -9.85144329071045
    6. 'abs' → logprob: -10.22644329071045
    7. '   ' → logprob: -10.35144329071045
    8. '       ' → logprob: -11.97644329071045
    9. ' ' → logprob: -12.35144329071045
    10. '(self' → logprob: -13.10144329071045

Token 718: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.03804550692439079
    2. ' self' → logprob: -3.2880454063415527
    3. '(self' → logprob: -12.538045883178711
    4. '       ' → logprob: -16.28804588317871
    5. '   ' → logprob: -17.41304588317871
    6. '	self' → logprob: -17.41304588317871
    7. ':self' → logprob: -17.78804588317871
    8. '[self' → logprob: -17.78804588317871
    9. '=self' → logprob: -17.78804588317871
    10. ' ' → logprob: -18.16304588317871

Token 719: '.can' (ID: 46002)
  Prédit: '.can'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.can' → logprob: -5.512236498361744e-07
    2. '.has' → logprob: -15.375000953674316
    3. '.' → logprob: -16.125
    4. '.Can' → logprob: -16.125
    5. 'can' → logprob: -17.5
    6. ' .' → logprob: -17.875
    7. '.is' → logprob: -19.25
    8. '   ' → logprob: -19.25
    9. '.have' → logprob: -19.5
    10. '	can' → logprob: -20.125

Token 720: '_re' (ID: 3067)
  Prédit: '_re'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_re' → logprob: -7.171581091824919e-05
    2. 'reach' → logprob: -10.50007152557373
    3. '_' → logprob: -10.62507152557373
    4. '_continue' → logprob: -11.87507152557373
    5. ')' → logprob: -12.37507152557373
    6. '_return' → logprob: -13.37507152557373
    7. ' _' → logprob: -14.00007152557373
    8. '_r' → logprob: -14.12507152557373
    9. ' reach' → logprob: -14.50007152557373
    10. '_raise' → logprob: -14.62507152557373

Token 721: 'ach' (ID: 678)
  Prédit: 'ach'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ach' → logprob: -0.004275938495993614
    2. 'each' → logprob: -5.504275798797607
    3. 'reach' → logprob: -8.629276275634766
    4. 'Each' → logprob: -12.629276275634766
    5. 'atch' → logprob: -13.004276275634766
    6. 'acht' → logprob: -13.379276275634766
    7. '_' → logprob: -13.504276275634766
    8. 'ch' → logprob: -13.879276275634766
    9. '
' → logprob: -14.004276275634766
    10. 'a' → logprob: -14.004276275634766

Token 722: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.3869626820087433
    2. '():
' → logprob: -1.136962652206421
    3. '()' → logprob: -9.386962890625
    4. '():
' → logprob: -11.886962890625
    5. ' ():' → logprob: -14.136962890625
    6. '():

' → logprob: -16.761962890625
    7. '(' → logprob: -16.886962890625
    8. '()
' → logprob: -17.011962890625
    9. ':' → logprob: -17.636962890625
    10. '()):
' → logprob: -17.761962890625

Token 723: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05509677156805992
    2. '       ' → logprob: -3.3050968647003174
    3. ':' → logprob: -4.555096626281738
    4. ':
' → logprob: -5.430096626281738
    5. '
' → logprob: -7.305096626281738
    6. ' return' → logprob: -7.555096626281738
    7. 'return' → logprob: -7.555096626281738
    8. '<|end|>' → logprob: -10.180096626281738
    9. ':return' → logprob: -10.305096626281738
    10. ',' → logprob: -10.430096626281738

Token 724: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.019334066659212112
    2. ' return' → logprob: -4.269333839416504
    3. '           ' → logprob: -5.269333839416504
    4. '       ' → logprob: -12.269333839416504
    5. 'None' → logprob: -12.894333839416504
    6. '   ' → logprob: -13.519333839416504
    7. '	return' → logprob: -13.894333839416504
    8. '{return' → logprob: -14.769333839416504
    9. ' None' → logprob: -15.519333839416504
    10. '```' → logprob: -16.51933479309082

Token 725: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.0015085549093782902
    2. ' None' → logprob: -6.501508712768555
    3. '       ' → logprob: -12.376508712768555
    4. '           ' → logprob: -14.001508712768555
    5. '   ' → logprob: -14.376508712768555
    6. 'float' → logprob: -15.126508712768555
    7. '               ' → logprob: -15.626508712768555
    8. 'none' → logprob: -16.626508712768555
    9. '0' → logprob: -17.126508712768555
    10. '    ' → logprob: -17.251508712768555

Token 726: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.13757966458797455
    2. '       ' → logprob: -2.1375796794891357
    3. '        
' → logprob: -4.637579441070557
    4. '<|end|>' → logprob: -8.387579917907715
    5. ' 
' → logprob: -8.887579917907715
    6. '    
' → logprob: -9.137579917907715
    7. '  
' → logprob: -9.137579917907715
    8. '
' → logprob: -9.262579917907715
    9. ',' → logprob: -10.012579917907715
    10. '\n' → logprob: -10.137579917907715

Token 727: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.09334918111562729
    2. '       ' → logprob: -2.9683492183685303
    3. '        
' → logprob: -3.3433492183685303
    4. ' 
' → logprob: -7.093348979949951
    5. '
        
' → logprob: -7.093348979949951
    6. '    
' → logprob: -8.59334945678711
    7. '

' → logprob: -9.21834945678711
    8. '  
' → logprob: -9.46834945678711
    9. '<|end|>' → logprob: -9.46834945678711
    10. '
' → logprob: -9.84334945678711

Token 728: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07874777913093567
    2. ' total' → logprob: -2.9537477493286133
    3. 'total' → logprob: -4.828747749328613
    4. ' cumulative' → logprob: -5.578747749328613
    5. ' result' → logprob: -6.078747749328613
    6. 'result' → logprob: -6.578747749328613
    7. ' sum' → logprob: -7.078747749328613
    8. ' expected' → logprob: -7.203747749328613
    9. ' step' → logprob: -7.453747749328613
    10. ' return' → logprob: -7.578747749328613

Token 729: ' We' (ID: 1416)
  Prédit: 'expected'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'expected' → logprob: -0.16691920161247253
    2. 'dp' → logprob: -2.916919231414795
    3. 'result' → logprob: -3.791919231414795
    4. 'total' → logprob: -4.166919231414795
    5. 'max' → logprob: -4.541919231414795
    6. 'from' → logprob: -4.916919231414795
    7. 'step' → logprob: -5.041919231414795
    8. 'pos' → logprob: -5.041919231414795
    9. 'prob' → logprob: -5.291919231414795
    10. 'distance' → logprob: -5.666919231414795

Token 730: ' solve' (ID: 17722)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4857054352760315
    2. 'def' → logprob: -1.8607053756713867
    3. 'import' → logprob: -2.2357053756713867
    4. 'max' → logprob: -3.4857053756713867
    5. '   ' → logprob: -3.6107053756713867
    6. 'acc' → logprob: -4.485705375671387
    7. 'return' → logprob: -4.860705375671387
    8. '#' → logprob: -5.485705375671387
    9. '
' → logprob: -5.485705375671387
    10. '_max' → logprob: -5.485705375671387

Token 731: ' E' (ID: 457)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.9922130703926086
    2. 'for' → logprob: -1.6172130107879639
    3. ' the' → logprob: -2.117213010787964
    4. ' for' → logprob: -2.242213010787964
    5. 'the' → logprob: -2.617213010787964
    6. '       ' → logprob: -2.867213010787964
    7. 'expected' → logprob: -3.992213010787964
    8. ' a' → logprob: -3.992213010787964
    9. 'a' → logprob: -4.867213249206543
    10. '
' → logprob: -5.242213249206543

Token 732: '(r' (ID: 4729)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3705984652042389
    2. ' =' → logprob: -1.2455984354019165
    3. '[' → logprob: -4.370598316192627
    4. '_' → logprob: -6.245598316192627
    5. '_steps' → logprob: -6.995598316192627
    6. '       ' → logprob: -7.120598316192627
    7. '(' → logprob: -7.245598316192627
    8. '[
' → logprob: -7.370598316192627
    9. '[]' → logprob: -7.620598316192627
    10. '=
' → logprob: -7.870598316192627

Token 733: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0510113462805748
    2. '       ' → logprob: -4.551011562347412
    3. '(r' → logprob: -5.051011562347412
    4. ' -' → logprob: -5.301011562347412
    5. '=' → logprob: -5.301011562347412
    6. ',' → logprob: -5.801011562347412
    7. '   ' → logprob: -5.926011562347412
    8. ' +' → logprob: -6.051011562347412
    9. '[r' → logprob: -6.051011562347412
    10. ' =' → logprob: -6.426011562347412

Token 734: ' =' (ID: 314)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.2054171562194824
    2. ' =' → logprob: -1.3304171562194824
    3. '[' → logprob: -2.2054171562194824
    4. '[r' → logprob: -2.2054171562194824
    5. '=' → logprob: -2.9554171562194824
    6. '[self' → logprob: -3.0804171562194824
    7. '(self' → logprob: -3.5804171562194824
    8. '(' → logprob: -3.8304171562194824
    9. '(r' → logprob: -4.455417156219482
    10. '   ' → logprob: -4.580417156219482

Token 735: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1252373456954956
    2. 'sum' → logprob: -2.875237464904785
    3. 'self' → logprob: -3.125237464904785
    4. '(' → logprob: -4.625237464904785
    5. 'r' → logprob: -6.125237464904785
    6. '0' → logprob: -6.125237464904785
    7. '(sum' → logprob: -7.000237464904785
    8. '\' → logprob: -7.125237464904785
    9. '(self' → logprob: -7.500237464904785
    10. '`' → logprob: -9.000237464904785

Token 736: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03377997875213623
    2. '0' → logprob: -4.283780097961426
    3. 'sum' → logprob: -4.783780097961426
    4. 'self' → logprob: -5.158780097961426
    5. '(' → logprob: -5.658780097961426
    6. 'r' → logprob: -7.408780097961426
    7. '{' → logprob: -7.908780097961426
    8. '(sum' → logprob: -8.408780097961426
    9. '[' → logprob: -8.533780097961426
    10. '(self' → logprob: -9.158780097961426

Token 737: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5764418840408325
    2. ' +' → logprob: -0.8264418840408325
    3. '+
' → logprob: -8.451441764831543
    4. ' +
' → logprob: -8.951441764831543
    5. '/' → logprob: -10.326441764831543
    6. '
' → logprob: -10.451441764831543
    7. ' /' → logprob: -11.076441764831543
    8. '-' → logprob: -11.201441764831543
    9. 'e' → logprob: -11.201441764831543
    10. '+self' → logprob: -11.826441764831543

Token 738: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.009913324378430843
    2. 'self' → logprob: -4.634913444519043
    3. ' sum' → logprob: -8.884913444519043
    4. '(sum' → logprob: -12.134913444519043
    5. '   ' → logprob: -12.509913444519043
    6. '(' → logprob: -13.134913444519043
    7. '\' → logprob: -13.259913444519043
    8. ' self' → logprob: -13.384913444519043
    9. 'float' → logprob: -13.884913444519043
    10. '(self' → logprob: -14.634913444519043

Token 739: '_p' (ID: 1359)
  Prédit: '_{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_{' → logprob: -0.45516306161880493
    2. '(' → logprob: -2.45516300201416
    3. '_over' → logprob: -2.83016300201416
    4. '_' → logprob: -2.83016300201416
    5. '_r' → logprob: -3.20516300201416
    6. ' over' → logprob: -3.58016300201416
    7. '(self' → logprob: -4.20516300201416
    8. 'over' → logprob: -4.20516300201416
    9. 'r' → logprob: -4.20516300201416
    10. 'self' → logprob: -4.58016300201416

Token 740: ' E' (ID: 457)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.590923547744751
    2. '(r' → logprob: -2.090923547744751
    3. 'self' → logprob: -3.215923547744751
    4. '(s' → logprob: -3.340923547744751
    5. '(value' → logprob: -3.340923547744751
    6. '_r' → logprob: -3.590923547744751
    7. '(' → logprob: -3.590923547744751
    8. 'r' → logprob: -3.590923547744751
    9. '_j' → logprob: -3.840923547744751
    10. '[self' → logprob: -3.965923547744751

Token 741: '(r' (ID: 4729)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.044113852083683014
    2. '(r' → logprob: -3.169113874435425
    3. '((' → logprob: -7.794113636016846
    4. '(' → logprob: -8.544114112854004
    5. '[self' → logprob: -8.669114112854004
    6. 'r' → logprob: -8.794114112854004
    7. '(s' → logprob: -10.044114112854004
    8. '([' → logprob: -10.294114112854004
    9. 's' → logprob: -10.919114112854004
    10. 'self' → logprob: -11.044114112854004

Token 742: ' -' (ID: 533)
  Prédit: '(r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.04495435953140259
    2. '(self' → logprob: -3.169954299926758
    3. '(' → logprob: -7.419954299926758
    4. '[r' → logprob: -7.794954299926758
    5. '(s' → logprob: -8.294954299926758
    6. ')' → logprob: -9.044954299926758
    7. '[self' → logprob: -9.294954299926758
    8. '(
' → logprob: -9.544954299926758
    9. ' (' → logprob: -9.669954299926758
    10. 'self' → logprob: -9.919954299926758

Token 743: ' s' (ID: 265)
  Prédit: 'step'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'step' → logprob: -0.8220937848091125
    2. 's' → logprob: -1.0720937252044678
    3. 'j' → logprob: -2.5720937252044678
    4. 'v' → logprob: -3.0720937252044678
    5. 'x' → logprob: -3.6970937252044678
    6. 'd' → logprob: -4.072093963623047
    7. 'value' → logprob: -4.322093963623047
    8. 'r' → logprob: -4.447093963623047
    9. 'jump' → logprob: -5.072093963623047
    10. 'i' → logprob: -5.197093963623047

Token 744: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07618046551942825
    2. '(s' → logprob: -3.0761804580688477
    3. 's' → logprob: -4.326180458068848
    4. '       ' → logprob: -5.951180458068848
    5. '[s' → logprob: -6.076180458068848
    6. ' *' → logprob: -6.826180458068848
    7. '(r' → logprob: -7.201180458068848
    8. '               ' → logprob: -7.326180458068848
    9. 'for' → logprob: -7.326180458068848
    10. '           ' → logprob: -7.451180458068848

Token 745: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07778851687908173
    2. ' for' → logprob: -3.5777885913848877
    3. '
' → logprob: -3.7027885913848877
    4. 's' → logprob: -5.577788352966309
    5. ',' → logprob: -5.702788352966309
    6. '   ' → logprob: -6.327788352966309
    7. 'for' → logprob: -6.702788352966309
    8. ' s' → logprob: -6.827788352966309
    9. '<|end|>' → logprob: -6.952788352966309
    10. 'from' → logprob: -7.077788352966309

Token 746: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.029253028333187103
    2. ' s' → logprob: -4.279253005981445
    3. 'all' → logprob: -4.779253005981445
    4. ' all' → logprob: -5.154253005981445
    5. 'r' → logprob: -8.029253005981445
    6. 'possible' → logprob: -8.904253005981445
    7. 'support' → logprob: -8.904253005981445
    8. 'step' → logprob: -10.529253005981445
    9. '_s' → logprob: -10.654253005981445
    10. 'each' → logprob: -10.654253005981445

Token 747: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.28182974457740784
    2. 'in' → logprob: -1.4068297147750854
    3. 's' → logprob: -8.281829833984375
    4. ',' → logprob: -8.281829833984375
    5. 'from' → logprob: -9.781829833984375
    6. '```' → logprob: -9.906829833984375
    7. '_in' → logprob: -11.156829833984375
    8. ' s' → logprob: -11.781829833984375
    9. ' ' → logprob: -11.906829833984375
    10. ')' → logprob: -12.531829833984375

Token 748: ' support' (ID: 2498)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.030135618522763252
    2. 'self' → logprob: -3.7801356315612793
    3. ' range' → logprob: -5.030135631561279
    4. 'support' → logprob: -8.405135154724121
    5. ' self' → logprob: -9.530135154724121
    6. '[self' → logprob: -12.030135154724121
    7. '(range' → logprob: -12.030135154724121
    8. '	range' → logprob: -12.155135154724121
    9. '   ' → logprob: -12.905135154724121
    10. '{' → logprob: -13.155135154724121

Token 749: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14576007425785065
    2. '
' → logprob: -3.3957600593566895
    3. ',' → logprob: -3.7707600593566895
    4. '(s' → logprob: -4.3957600593566895
    5. 's' → logprob: -4.6457600593566895
    6. '   ' → logprob: -4.6457600593566895
    7. '(' → logprob: -4.8957600593566895
    8. '<|end|>' → logprob: -5.1457600593566895
    9. ' =' → logprob: -5.5207600593566895
    10. ':' → logprob: -5.5207600593566895

Token 750: ' E' (ID: 457)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.49693551659584045
    2. ' where' → logprob: -1.246935486793518
    3. ' with' → logprob: -3.2469356060028076
    4. ' assuming' → logprob: -3.4969356060028076
    5. ' return' → logprob: -4.8719353675842285
    6. ' r' → logprob: -5.4969353675842285
    7. ' but' → logprob: -5.9969353675842285
    8. 'return' → logprob: -6.1219353675842285
    9. ' for' → logprob: -6.1219353675842285
    10. ' s' → logprob: -6.2469353675842285

Token 751: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5036179423332214
    2. ' =' → logprob: -1.5036180019378662
    3. '=' → logprob: -2.503618001937866
    4. '0' → logprob: -2.753618001937866
    5. '(r' → logprob: -4.628617763519287
    6. 'r' → logprob: -4.878617763519287
    7. '[' → logprob: -5.753617763519287
    8. 's' → logprob: -6.378617763519287
    9. '(s' → logprob: -6.378617763519287
    10. '_values' → logprob: -7.253617763519287

Token 752: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0015785404248163104
    2. 'self' → logprob: -6.876578330993652
    3. ' ' → logprob: -8.751578330993652
    4. 'r' → logprob: -8.751578330993652
    5. ')' → logprob: -9.626578330993652
    6. '(' → logprob: -9.876578330993652
    7. 's' → logprob: -10.626578330993652
    8. '[' → logprob: -10.876578330993652
    9. '(self' → logprob: -11.251578330993652
    10. '{' → logprob: -11.501578330993652

Token 753: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0012264199322089553
    2. ')=' → logprob: -6.751226425170898
    3. '=' → logprob: -10.751226425170898
    4. ')==' → logprob: -11.376226425170898
    5. ' )' → logprob: -11.626226425170898
    6. ')
' → logprob: -12.876226425170898
    7. '`)' → logprob: -13.126226425170898
    8. ' =' → logprob: -13.126226425170898
    9. '   ' → logprob: -13.251226425170898
    10. '```' → logprob: -13.626226425170898

Token 754: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.21532653272151947
    2. '=' → logprob: -1.7153265476226807
    3. '       ' → logprob: -4.590326309204102
    4. 'def' → logprob: -6.715326309204102
    5. ')' → logprob: -7.840326309204102
    6. '   ' → logprob: -7.965326309204102
    7. ',' → logprob: -8.090326309204102
    8. '```' → logprob: -8.465326309204102
    9. ' def' → logprob: -8.590326309204102
    10. '[' → logprob: -8.840326309204102

Token 755: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00033558503491804004
    2. ' ' → logprob: -8.000335693359375
    3. '   ' → logprob: -16.625335693359375
    4. '{' → logprob: -17.500335693359375
    5. ' ' → logprob: -17.500335693359375
    6. '1' → logprob: -17.750335693359375
    7. '  ' → logprob: -17.750335693359375
    8. '```' → logprob: -18.125335693359375
    9. '۰' → logprob: -18.625335693359375
    10. '.' → logprob: -19.000335693359375

Token 756: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00017994173686020076
    2. ' ' → logprob: -8.6251802444458
    3. '   ' → logprob: -15.6251802444458
    4. '  ' → logprob: -16.875179290771484
    5. '1' → logprob: -17.000179290771484
    6. '=' → logprob: -17.750179290771484
    7. '۰' → logprob: -17.937679290771484
    8. '```' → logprob: -18.000179290771484
    9. '{' → logprob: -18.125179290771484
    10. '.' → logprob: -18.125179290771484

Token 757: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0173532422631979
    2. '
' → logprob: -4.392353057861328
    3. ',' → logprob: -6.017353057861328
    4. ')' → logprob: -7.767353057861328
    5. '<|end|>' → logprob: -7.892353057861328
    6. '        
' → logprob: -8.142353057861328
    7. '   ' → logprob: -8.142353057861328
    8. ':' → logprob: -8.767353057861328
    9. '.' → logprob: -8.767353057861328
    10. '```' → logprob: -9.392353057861328

Token 758: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0002585978072602302
    2. '   ' → logprob: -10.000258445739746
    3. '<|end|>' → logprob: -10.000258445739746
    4. '```' → logprob: -10.250258445739746
    5. '        
' → logprob: -10.500258445739746
    6. ',' → logprob: -10.750258445739746
    7. '
' → logprob: -10.750258445739746
    8. '    ' → logprob: -11.750258445739746
    9. ' ' → logprob: -12.000258445739746
    10. ')' → logprob: -12.125258445739746

Token 759: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9051944613456726
    2. 'dp' → logprob: -0.9051944613456726
    3. ' dp' → logprob: -2.4051945209503174
    4. ' from' → logprob: -3.5301945209503174
    5. 'from' → logprob: -3.5301945209503174
    6. 'import' → logprob: -4.155194282531738
    7. ' import' → logprob: -4.655194282531738
    8. 'E' → logprob: -5.030194282531738
    9. ' max' → logprob: -5.780194282531738
    10. ' E' → logprob: -6.530194282531738

Token 760: ' where' (ID: 1919)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.24377991259098053
    2. 'max' → logprob: -1.9937798976898193
    3. 'from' → logprob: -3.3687798976898193
    4. 'memo' → logprob: -4.118780136108398
    5. '       ' → logprob: -4.618780136108398
    6. 'E' → logprob: -4.993780136108398
    7. 'import' → logprob: -5.368780136108398
    8. 'cache' → logprob: -6.243780136108398
    9. 'DP' → logprob: -6.368780136108398
    10. '#' → logprob: -6.368780136108398

Token 761: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.19467942416667938
    2. 'E' → logprob: -2.3196794986724854
    3. 'def' → logprob: -3.3196794986724854
    4. 'max' → logprob: -3.6946794986724854
    5. 's' → logprob: -5.569679260253906
    6. 'dp' → logprob: -5.944679260253906
    7. 'from' → logprob: -6.194679260253906
    8. 'cache' → logprob: -6.819679260253906
    9. ' r' → logprob: -6.944679260253906
    10. '`' → logprob: -7.069679260253906

Token 762: ' from' (ID: 591)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.018419861793518
    2. ' >' → logprob: -1.643419861793518
    3. ' >=' → logprob: -1.893419861793518
    4. '=' → logprob: -1.893419861793518
    5. '>' → logprob: -2.6434197425842285
    6. ' is' → logprob: -3.8934197425842285
    7. '>=' → logprob: -4.0184197425842285
    8. ' in' → logprob: -5.3934197425842285
    9. ' <' → logprob: -5.5184197425842285
    10. ' ==' → logprob: -5.5184197425842285

Token 763: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04316463693976402
    2. '0' → logprob: -3.1681647300720215
    3. 'self' → logprob: -9.418164253234863
    4. ' ' → logprob: -10.043164253234863
    5. 'range' → logprob: -10.293164253234863
    6. '```' → logprob: -12.793164253234863
    7. ' range' → logprob: -13.668164253234863
    8. '`' → logprob: -13.668164253234863
    9. '   ' → logprob: -14.543164253234863
    10. '
' → logprob: -15.293164253234863

Token 764: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.06547082215547562
    2. '0' → logprob: -2.8154709339141846
    3. 'self' → logprob: -5.8154706954956055
    4. 'range' → logprob: -7.6904706954956055
    5. '
' → logprob: -11.190470695495605
    6. ' ' → logprob: -11.440470695495605
    7. '```' → logprob: -12.190470695495605
    8. '[' → logprob: -12.315470695495605
    9. ' range' → logprob: -12.440470695495605
    10. '`' → logprob: -12.815470695495605

Token 765: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.21513709425926208
    2. 'to' → logprob: -1.9651371240615845
    3. ' up' → logprob: -2.965137004852295
    4. ',' → logprob: -6.715137004852295
    5. '..' → logprob: -8.340137481689453
    6. '```' → logprob: -9.340137481689453
    7. 'up' → logprob: -9.465137481689453
    8. ' ' → logprob: -9.465137481689453
    9. '
' → logprob: -9.965137481689453
    10. '...' → logprob: -10.840137481689453

Token 766: ' R' (ID: 460)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0002632430987432599
    2. ' self' → logprob: -8.250263214111328
    3. '
' → logprob: -13.875263214111328
    4. '(self' → logprob: -14.250263214111328
    5. '       ' → logprob: -16.125263214111328
    6. '[self' → logprob: -16.250263214111328
    7. '```' → logprob: -16.750263214111328
    8. '           ' → logprob: -17.500263214111328
    9. '`' → logprob: -18.125263214111328
    10. '   ' → logprob: -18.250263214111328

Token 767: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.13338331878185272
    2. '       ' → logprob: -2.258383274078369
    3. ',' → logprob: -4.758383274078369
    4. '<|end|>' → logprob: -5.383383274078369
    5. '        
' → logprob: -6.508383274078369
    6. ' 
' → logprob: -7.008383274078369
    7. '<|end|>' → logprob: -7.008383274078369
    8. '

' → logprob: -7.258383274078369
    9. ',
' → logprob: -7.758383274078369
    10. '  
' → logprob: -7.883383274078369

Token 768: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0001696902181720361
    2. '        ' → logprob: -10.25016975402832
    3. '
' → logprob: -10.62516975402832
    4. '        
' → logprob: -10.62516975402832
    5. '   ' → logprob: -10.75016975402832
    6. '    ' → logprob: -10.87516975402832
    7. '      ' → logprob: -11.62516975402832
    8. '```' → logprob: -11.62516975402832
    9. '`' → logprob: -12.62516975402832
    10. '           ' → logprob: -12.87516975402832

Token 769: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.42449796199798584
    2. 'dp' → logprob: -1.4244979619979858
    3. ' dp' → logprob: -2.2994980812072754
    4. 'E' → logprob: -5.924498081207275
    5. ' E' → logprob: -7.299498081207275
    6. 'DP' → logprob: -8.174497604370117
    7. 'import' → logprob: -8.174497604370117
    8. ' import' → logprob: -8.424497604370117
    9. ' DP' → logprob: -8.674497604370117
    10. ' dist' → logprob: -8.799497604370117

Token 770: ' The' (ID: 623)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.043824225664138794
    2. 'E' → logprob: -3.2938241958618164
    3. '       ' → logprob: -5.543824195861816
    4. ' dp' → logprob: -7.793824195861816
    5. 'memo' → logprob: -7.918824195861816
    6. 'max' → logprob: -8.293824195861816
    7. 'import' → logprob: -8.418824195861816
    8. '   ' → logprob: -8.668824195861816
    9. 'DP' → logprob: -9.043824195861816
    10. 'from' → logprob: -9.168824195861816

Token 771: ' distribution' (ID: 12545)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.6815423965454102
    2. 'dp' → logprob: -1.1815423965454102
    3. ' max' → logprob: -3.30654239654541
    4. 'def' → logprob: -3.43154239654541
    5. ' dp' → logprob: -3.43154239654541
    6. 'min' → logprob: -3.68154239654541
    7. 'support' → logprob: -5.05654239654541
    8. 'R' → logprob: -5.43154239654541
    9. 'from' → logprob: -5.43154239654541
    10. '_dp' → logprob: -5.55654239654541

Token 772: ' is' (ID: 382)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.17798267304897308
    2. '=' → logprob: -2.9279825687408447
    3. '_' → logprob: -3.4279825687408447
    4. 's' → logprob: -4.177982807159424
    5. '_counts' → logprob: -4.427982807159424
    6. 'def' → logprob: -4.677982807159424
    7. '_probs' → logprob: -4.927982807159424
    8. '_values' → logprob: -5.302982807159424
    9. ' is' → logprob: -5.552982807159424
    10. '.' → logprob: -5.802982807159424

Token 773: ' symmetric' (ID: 123676)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.03890835493803024
    2. ' self' → logprob: -3.2889082431793213
    3. 'Uniform' → logprob: -8.038908004760742
    4. 'uniform' → logprob: -8.413908004760742
    5. ' uniform' → logprob: -9.663908004760742
    6. 'lambda' → logprob: -10.163908004760742
    7. '[self' → logprob: -10.288908004760742
    8. '{' → logprob: -11.038908004760742
    9. ' Uniform' → logprob: -11.163908004760742
    10. '       ' → logprob: -11.288908004760742

Token 774: ' and' (ID: 326)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.06549806892871857
    2. '       ' → logprob: -3.190498113632202
    3. ',' → logprob: -5.315497875213623
    4. '   ' → logprob: -5.690497875213623
    5. '
' → logprob: -5.690497875213623
    6. '        
' → logprob: -5.815497875213623
    7. ',
' → logprob: -6.690497875213623
    8. ' and' → logprob: -7.315497875213623
    9. '    
' → logprob: -7.565497875213623
    10. '.' → logprob: -7.565497875213623

Token 775: ' the' (ID: 290)
  Prédit: ' uniform'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' uniform' → logprob: -1.3775347471237183
    2. ' the' → logprob: -2.127534866333008
    3. 'uniform' → logprob: -2.627534866333008
    4. ' has' → logprob: -2.752534866333008
    5. 'self' → logprob: -2.877534866333008
    6. ' self' → logprob: -3.377534866333008
    7. ' supported' → logprob: -3.627534866333008
    8. 'the' → logprob: -3.627534866333008
    9. 'station' → logprob: -3.877534866333008
    10. 'supported' → logprob: -4.002534866333008

Token 776: ' problem' (ID: 4792)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -1.670388102531433
    2. 'def' → logprob: -1.670388102531433
    3. 'dp' → logprob: -1.670388102531433
    4. 'prob' → logprob: -3.0453882217407227
    5. 'max' → logprob: -3.2953882217407227
    6. ' dp' → logprob: -3.6703882217407227
    7. 'support' → logprob: -3.6703882217407227
    8. '       ' → logprob: -3.9203882217407227
    9. '   ' → logprob: -3.9203882217407227
    10. 'from' → logprob: -4.045388221740723

Token 777: ' reduces' (ID: 38566)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.4790652394294739
    2. 'is' → logprob: -1.354065179824829
    3. '
' → logprob: -3.354065179824829
    4. 'requires' → logprob: -3.979065179824829
    5. ' continues' → logprob: -4.229065418243408
    6. '   ' → logprob: -4.979065418243408
    7. ' requires' → logprob: -5.354065418243408
    8. 'was' → logprob: -5.479065418243408
    9. ' remains' → logprob: -5.729065418243408
    10. ' seems' → logprob: -5.854065418243408

Token 778: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.27670520544052124
    2. 'to' → logprob: -1.526705265045166
    3. '       ' → logprob: -3.776705265045166
    4. '   ' → logprob: -6.776705265045166
    5. 'import' → logprob: -9.151704788208008
    6. '```' → logprob: -9.526704788208008
    7. ',' → logprob: -9.776704788208008
    8. '           ' → logprob: -9.901704788208008
    9. 'def' → logprob: -10.526704788208008
    10. '        ' → logprob: -10.901704788208008

Token 779: ' a' (ID: 261)
  Prédit: 'sol'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sol' → logprob: -0.7076504826545715
    2. 'a' → logprob: -1.8326504230499268
    3. 'dynamic' → logprob: -2.3326504230499268
    4. 'comput' → logprob: -2.7076504230499268
    5. 'linear' → logprob: -3.0826504230499268
    6. 'the' → logprob: -3.7076504230499268
    7. 'iter' → logprob: -4.082650661468506
    8. 'finding' → logprob: -4.207650661468506
    9. 'calcul' → logprob: -4.457650661468506
    10. ' a' → logprob: -4.707650661468506

Token 780: ' linear' (ID: 23876)
  Prédit: 'con'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'con' → logprob: -1.6933695077896118
    2. 'linear' → logprob: -1.8183695077896118
    3. 'ynamic' → logprob: -1.9433695077896118
    4. ' convolution' → logprob: -2.0683693885803223
    5. 'dynamic' → logprob: -2.0683693885803223
    6. 'finite' → logprob: -2.4433693885803223
    7. 'one' → logprob: -2.8183693885803223
    8. ' dynamic' → logprob: -3.4433693885803223
    9. 'Mark' → logprob: -5.068369388580322
    10. ' Mark' → logprob: -5.318369388580322

Token 781: '
' (ID: 198)
  Prédit: 'rec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rec' → logprob: -1.293062686920166
    2. 'equ' → logprob: -1.418062686920166
    3. 'system' → logprob: -1.418062686920166
    4. ' recurrence' → logprob: -2.168062686920166
    5. ' system' → logprob: -3.293062686920166
    6. '
' → logprob: -3.293062686920166
    7. '```' → logprob: -4.418062686920166
    8. '   ' → logprob: -4.668062686920166
    9. '       ' → logprob: -5.293062686920166
    10. 'al' → logprob: -5.543062686920166

Token 782: '       ' (ID: 309)
  Prédit: ' system'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' system' → logprob: -0.8587199449539185
    2. 'system' → logprob: -1.6087199449539185
    3. '       ' → logprob: -2.358719825744629
    4. 'al' → logprob: -2.608719825744629
    5. ' recurrence' → logprob: -2.858719825744629
    6. 'rec' → logprob: -3.108719825744629
    7. '```' → logprob: -3.483719825744629
    8. '   ' → logprob: -4.108719825744629
    9. 'space' → logprob: -4.358719825744629
    10. 'solver' → logprob: -4.983719825744629

Token 783: ' #' (ID: 1069)
  Prédit: 'system'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'system' → logprob: -0.49417510628700256
    2. 'rec' → logprob: -1.9941750764846802
    3. 'program' → logprob: -2.1191751956939697
    4. 'equ' → logprob: -2.6191751956939697
    5. 'al' → logprob: -4.244174957275391
    6. 'def' → logprob: -4.869174957275391
    7. 'comb' → logprob: -4.869174957275391
    8. '
' → logprob: -4.994174957275391
    9. ' system' → logprob: -5.244174957275391
    10. 'con' → logprob: -5.619174957275391

Token 784: ' equation' (ID: 42006)
  Prédit: 'system'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'system' → logprob: -0.40111878514289856
    2. ' system' → logprob: -1.6511187553405762
    3. 'al' → logprob: -3.401118755340576
    4. 'equ' → logprob: -3.401118755340576
    5. 'solver' → logprob: -4.026118755340576
    6. '       ' → logprob: -4.151118755340576
    7. ' recurrence' → logprob: -5.026118755340576
    8. 'program' → logprob: -5.026118755340576
    9. 'rec' → logprob: -5.151118755340576
    10. 'con' → logprob: -5.401118755340576

Token 785: ' system' (ID: 2420)
  Prédit: ' system'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' system' → logprob: -0.7001890540122986
    2. ' solver' → logprob: -1.9501891136169434
    3. 'solver' → logprob: -2.7001891136169434
    4. '
' → logprob: -2.8251891136169434
    5. ' for' → logprob: -2.8251891136169434
    6. '       ' → logprob: -3.5751891136169434
    7. 'system' → logprob: -3.7001891136169434
    8. '.' → logprob: -4.450189113616943
    9. ',' → logprob: -4.575189113616943
    10. ' continuation' → logprob: -4.700189113616943

Token 786: ' which' (ID: 1118)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.10361064970493317
    2. '       ' → logprob: -2.8536107540130615
    3. '        
' → logprob: -4.728610515594482
    4. '\' → logprob: -5.103610515594482
    5. '\n' → logprob: -5.228610515594482
    6. ' 
' → logprob: -5.478610515594482
    7. 'import' → logprob: -5.978610515594482
    8. '#' → logprob: -6.103610515594482
    9. ',' → logprob: -6.353610515594482
    10. ' for' → logprob: -6.978610515594482

Token 787: ' due' (ID: 5192)
  Prédit: ' can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.5031306743621826
    2. ' def' → logprob: -1.7531306743621826
    3. ' is' → logprob: -2.1281306743621826
    4. ' continues' → logprob: -3.8781306743621826
    5. '
' → logprob: -4.378130912780762
    6. '       ' → logprob: -4.378130912780762
    7. 'import' → logprob: -4.503130912780762
    8. 'def' → logprob: -5.003130912780762
    9. 'can' → logprob: -5.128130912780762
    10. ' #' → logprob: -5.253130912780762

Token 788: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.0703558549284935
    2. 'to' → logprob: -2.8203558921813965
    3. 's' → logprob: -4.8203558921813965
    4. 'import' → logprob: -10.070355415344238
    5. ' ' → logprob: -10.695355415344238
    6. '```' → logprob: -10.820355415344238
    7. 'def' → logprob: -10.820355415344238
    8. '       ' → logprob: -10.945355415344238
    9. ' s' → logprob: -10.945355415344238
    10. '_to' → logprob: -10.945355415344238

Token 789: ' Mark' (ID: 5070)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.7230343818664551
    2. 'the' → logprob: -1.348034381866455
    3. 'sym' → logprob: -2.098034381866455
    4. ' the' → logprob: -2.848034381866455
    5. ' symmetry' → logprob: -3.473034381866455
    6. ' line' → logprob: -4.848034381866455
    7. ' linear' → logprob: -5.098034381866455
    8. 'linear' → logprob: -5.473034381866455
    9. 'uniform' → logprob: -5.973034381866455
    10. 'Mark' → logprob: -5.973034381866455

Token 790: 'ov' (ID: 569)
  Prédit: 'ov'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ov' → logprob: -4.842555426876061e-06
    2. '   ' → logprob: -13.500004768371582
    3. '       ' → logprob: -14.250004768371582
    4. 'o' → logprob: -14.625004768371582
    5. ' ov' → logprob: -14.625004768371582
    6. 'ов' → logprob: -14.750004768371582
    7. '
' → logprob: -15.125004768371582
    8. 'ow' → logprob: -15.375004768371582
    9. '    ' → logprob: -15.500004768371582
    10. '#' → logprob: -15.875004768371582

Token 791: ' property' (ID: 4322)
  Prédit: 'chain'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chain' → logprob: -0.30637797713279724
    2. ' chain' → logprob: -1.4313780069351196
    3. '_chain' → logprob: -4.05637788772583
    4. 'Chain' → logprob: -5.68137788772583
    5. 'property' → logprob: -6.30637788772583
    6. ' chains' → logprob: -7.18137788772583
    7. ' property' → logprob: -7.43137788772583
    8. 'chains' → logprob: -8.181378364562988
    9. ' Chain' → logprob: -8.681378364562988
    10. 'process' → logprob: -8.806378364562988

Token 792: ' we' (ID: 581)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.3555576801300049
    2. ' def' → logprob: -1.4805576801300049
    3. ' can' → logprob: -1.7305576801300049
    4. ',' → logprob: -2.230557680130005
    5. '.' → logprob: -3.480557680130005
    6. ' continues' → logprob: -3.480557680130005
    7. '...' → logprob: -3.730557680130005
    8. ' and' → logprob: -3.980557680130005
    9. '
' → logprob: -4.105557441711426
    10. ' will' → logprob: -4.355557441711426

Token 793: ' solve' (ID: 17722)
  Prédit: ' can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.6373264193534851
    2. ' continue' → logprob: -1.5123264789581299
    3. ' def' → logprob: -2.38732647895813
    4. ' cannot' → logprob: -3.76232647895813
    5. 'def' → logprob: -4.137326240539551
    6. '   ' → logprob: -4.262326240539551
    7. '_' → logprob: -4.512326240539551
    8. ' need' → logprob: -4.512326240539551
    9. '```' → logprob: -4.887326240539551
    10. 'can' → logprob: -5.012326240539551

Token 794: ' by' (ID: 656)
  Prédit: ' by'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' by' → logprob: -0.8950347900390625
    2. '       ' → logprob: -1.0200347900390625
    3. 'by' → logprob: -2.6450347900390625
    4. ' using' → logprob: -3.0200347900390625
    5. '   ' → logprob: -3.1450347900390625
    6. ' iter' → logprob: -4.0200347900390625
    7. '```' → logprob: -4.0200347900390625
    8. 'using' → logprob: -4.7700347900390625
    9. ' via' → logprob: -4.8950347900390625
    10. ' as' → logprob: -6.2700347900390625

Token 795: ' DP' (ID: 51992)
  Prédit: 'dynamic'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dynamic' → logprob: -0.011876434087753296
    2. 'DP' → logprob: -5.511876583099365
    3. 'dp' → logprob: -5.636876583099365
    4. ' dynamic' → logprob: -5.886876583099365
    5. 'iter' → logprob: -7.386876583099365
    6. 'iteration' → logprob: -8.261876106262207
    7. 'memo' → logprob: -8.511876106262207
    8. 'con' → logprob: -9.386876106262207
    9. 'bottom' → logprob: -9.886876106262207
    10. 'b' → logprob: -10.386876106262207

Token 796: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.08025690168142319
    2. '       ' → logprob: -2.705256938934326
    3. '        
' → logprob: -4.955256938934326
    4. '

' → logprob: -6.955256938934326
    5. '```' → logprob: -7.580256938934326
    6. '
' → logprob: -7.955256938934326
    7. ' 
' → logprob: -8.205256462097168
    8. ',' → logprob: -8.580256462097168
    9. '  
' → logprob: -9.080256462097168
    10. '
        
' → logprob: -9.080256462097168

Token 797: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.42931294441223145
    2. '
' → logprob: -1.0543129444122314
    3. '        
' → logprob: -8.554312705993652
    4. '```' → logprob: -8.804312705993652
    5. '
' → logprob: -10.304312705993652
    6. '   ' → logprob: -10.304312705993652
    7. '\n' → logprob: -10.679312705993652
    8. '' → logprob: -10.929312705993652
    9. ' 
' → logprob: -11.054312705993652
    10. '\' → logprob: -11.054312705993652

Token 798: ' #
' (ID: 21888)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.08668588846921921
    2. '       ' → logprob: -2.7116858959198
    3. 'E' → logprob: -4.586685657501221
    4. ' dp' → logprob: -5.586685657501221
    5. 'import' → logprob: -7.086685657501221
    6. 'dist' → logprob: -7.336685657501221
    7. 'DP' → logprob: -7.961685657501221
    8. 'max' → logprob: -8.336686134338379
    9. 'e' → logprob: -9.336686134338379
    10. 'from' → logprob: -9.461686134338379

Token 799: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005150623619556427
    2. 'dp' → logprob: -5.38015079498291
    3. 'import' → logprob: -8.88015079498291
    4. '   ' → logprob: -9.13015079498291
    5. 'dist' → logprob: -9.25515079498291
    6. 'max' → logprob: -9.88015079498291
    7. ' dp' → logprob: -11.00515079498291
    8. '
' → logprob: -11.00515079498291
    9. 'from' → logprob: -11.25515079498291
    10. 'DP' → logprob: -11.25515079498291

Token 800: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.21758858859539032
    2. 'max' → logprob: -1.8425885438919067
    3. 'E' → logprob: -3.5925886631011963
    4. 'import' → logprob: -5.592588424682617
    5. '       ' → logprob: -6.842588424682617
    6. 'R' → logprob: -7.092588424682617
    7. 'from' → logprob: -7.217588424682617
    8. 'def' → logprob: -7.342588424682617
    9. '   ' → logprob: -7.467588424682617
    10. ' max' → logprob: -7.592588424682617

Token 801: ' Here' (ID: 7306)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.17999935150146484
    2. 'max' → logprob: -1.9299993515014648
    3. 'E' → logprob: -5.179999351501465
    4. 'def' → logprob: -5.804999351501465
    5. 'from' → logprob: -5.929999351501465
    6. '       ' → logprob: -5.929999351501465
    7. '   ' → logprob: -6.804999351501465
    8. 'memo' → logprob: -6.929999351501465
    9. 'dist' → logprob: -7.054999351501465
    10. 'import' → logprob: -7.304999351501465

Token 802: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18812096118927002
    2. 'dp' → logprob: -2.6881208419799805
    3. ' max' → logprob: -3.3131208419799805
    4. 'max' → logprob: -3.8131208419799805
    5. ' dp' → logprob: -3.9381208419799805
    6. 'R' → logprob: -4.8131208419799805
    7. ' R' → logprob: -5.5631208419799805
    8. 'def' → logprob: -5.6881208419799805
    9. '   ' → logprob: -6.0631208419799805
    10. 'r' → logprob: -6.0631208419799805

Token 803: ' since' (ID: 3630)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.9342086911201477
    2. ' max' → logprob: -1.309208631515503
    3. 'max' → logprob: -1.434208631515503
    4. 'E' → logprob: -3.434208631515503
    5. ' dp' → logprob: -3.809208631515503
    6. 'import' → logprob: -4.809208869934082
    7. '   ' → logprob: -4.934208869934082
    8. '       ' → logprob: -5.184208869934082
    9. ' memo' → logprob: -5.184208869934082
    10. 'memo' → logprob: -5.184208869934082

Token 804: ' R' (ID: 460)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.5490051507949829
    2. 'self' → logprob: -1.049005150794983
    3. ' the' → logprob: -2.7990050315856934
    4. 'the' → logprob: -5.299005031585693
    5. 'r' → logprob: -6.924005031585693
    6. ' R' → logprob: -7.049005031585693
    7. ' s' → logprob: -7.174005031585693
    8. 'R' → logprob: -7.299005031585693
    9. ' r' → logprob: -7.674005031585693
    10. ' we' → logprob: -7.799005031585693

Token 805: ' can' (ID: 665)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <=' → logprob: -1.0082404613494873
    2. ' >' → logprob: -1.5082404613494873
    3. ' >=' → logprob: -2.6332404613494873
    4. '+' → logprob: -2.6332404613494873
    5. '=' → logprob: -2.8832404613494873
    6. '>' → logprob: -2.8832404613494873
    7. '<=' → logprob: -3.0082404613494873
    8. ' ==' → logprob: -3.3832404613494873
    9. '==' → logprob: -4.258240699768066
    10. ' +' → logprob: -4.258240699768066

Token 806: ' be' (ID: 413)
  Prédit: ' be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.001333932508714497
    2. 'be' → logprob: -6.626333713531494
    3. ' very' → logprob: -13.001334190368652
    4. ' exceed' → logprob: -13.001334190368652
    5. ' large' → logprob: -13.876334190368652
    6. '>' → logprob: -14.626334190368652
    7. ' go' → logprob: -15.001334190368652
    8. 'Be' → logprob: -15.376334190368652
    9. '_be' → logprob: -15.501334190368652
    10. 'ex' → logprob: -15.501334190368652

Token 807: ' huge' (ID: 9560)
  Prédit: 'large'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'large' → logprob: -0.27324146032333374
    2. 'very' → logprob: -1.5232415199279785
    3. ' large' → logprob: -4.2732415199279785
    4. ' very' → logprob: -5.0232415199279785
    5. 'up' → logprob: -8.77324104309082
    6. 'big' → logprob: -9.27324104309082
    7. 'quite' → logprob: -9.52324104309082
    8. ' quite' → logprob: -9.64824104309082
    9. 'hu' → logprob: -9.89824104309082
    10. '100' → logprob: -10.14824104309082

Token 808: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08923039585351944
    2. ',
' → logprob: -3.5892302989959717
    3. ' and' → logprob: -3.9642302989959717
    4. ':' → logprob: -4.339230537414551
    5. '       ' → logprob: -4.714230537414551
    6. '   ' → logprob: -4.964230537414551
    7. 'and' → logprob: -5.964230537414551
    8. ':
' → logprob: -6.589230537414551
    9. '
' → logprob: -6.839230537414551
    10. ' or' → logprob: -7.339230537414551

Token 809: 'up' (ID: 817)
  Prédit: '...'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '...' → logprob: -0.6294756531715393
    2. ')' → logprob: -1.8794755935668945
    3. '),' → logprob: -3.1294755935668945
    4. '
' → logprob: -3.5044755935668945
    5. 'R' → logprob: -3.7544755935668945
    6. '#' → logprob: -4.0044755935668945
    7. 'None' → logprob: -4.2544755935668945
    8. '100' → logprob: -4.3794755935668945
    9. 'self' → logprob: -4.5044755935668945
    10. '1' → logprob: -4.6294755935668945

Token 810: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -1.8226876258850098
    2. 'def' → logprob: -1.8226876258850098
    3. 'to' → logprob: -2.1976876258850098
    4. '       ' → logprob: -2.1976876258850098
    5. '...' → logprob: -2.4476876258850098
    6. '   ' → logprob: -3.0726876258850098
    7. '```' → logprob: -3.3226876258850098
    8. 'osition' → logprob: -3.6976876258850098
    9. '#' → logprob: -3.6976876258850098
    10. ')' → logprob: -3.8226876258850098

Token 811: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.13218092918395996
    2. ' ' → logprob: -2.38218092918396
    3. ')' → logprob: -4.507181167602539
    4. '100' → logprob: -4.757181167602539
    5. '...' → logprob: -5.507181167602539
    6. '1' → logprob: -5.757181167602539
    7. 'int' → logprob: -7.632181167602539
    8. '
' → logprob: -7.632181167602539
    9. ' )' → logprob: -8.257181167602539
    10. ' billions' → logprob: -8.257181167602539

Token 812: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0010356683051213622
    2. '100' → logprob: -7.626035690307617
    3. '1' → logprob: -8.501035690307617
    4. ' ' → logprob: -9.126035690307617
    5. '...' → logprob: -10.001035690307617
    6. 'S' → logprob: -10.501035690307617
    7. 'sys' → logprob: -10.626035690307617
    8. '```' → logprob: -10.626035690307617
    9. '2' → logprob: -10.876035690307617
    10. 'int' → logprob: -11.001035690307617

Token 813: '^' (ID: 61)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.14813147485256195
    2. '9' → logprob: -2.3981313705444336
    3. '^' → logprob: -3.3981313705444336
    4. ' **' → logprob: -5.148131370544434
    5. '7' → logprob: -5.523131370544434
    6. '6' → logprob: -6.023131370544434
    7. '8' → logprob: -8.023131370544434
    8. '0' → logprob: -8.023131370544434
    9. '000' → logprob: -8.898131370544434
    10. '12' → logprob: -9.898131370544434

Token 814: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.021603625267744064
    2. '6' → logprob: -4.396603584289551
    3. '7' → logprob: -5.146603584289551
    4. '18' → logprob: -6.521603584289551
    5. '12' → logprob: -6.646603584289551
    6. '15' → logprob: -8.27160358428955
    7. '8' → logprob: -9.02160358428955
    8. '10' → logprob: -10.52160358428955
    9. '```' → logprob: -11.02160358428955
    10. ' ' → logprob: -11.14660358428955

Token 815: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.02386282943189144
    2. ',' → logprob: -4.773862838745117
    3. ' ),' → logprob: -5.023862838745117
    4. ')' → logprob: -5.398862838745117
    5. '
' → logprob: -6.648862838745117
    6. '),
' → logprob: -7.023862838745117
    7. '       ' → logprob: -7.523862838745117
    8. '):
' → logprob: -7.523862838745117
    9. ',
' → logprob: -8.648862838745117
    10. ' and' → logprob: -9.148862838745117

Token 816: ' direct' (ID: 2823)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9499715566635132
    2. 'return' → logprob: -1.1999715566635132
    3. ' return' → logprob: -1.4499715566635132
    4. '#' → logprob: -3.0749716758728027
    5. ' #' → logprob: -4.449971675872803
    6. ' if' → logprob: -4.574971675872803
    7. 'if' → logprob: -5.699971675872803
    8. 'import' → logprob: -6.699971675872803
    9. 'result' → logprob: -6.699971675872803
    10. 'dp' → logprob: -7.199971675872803

Token 817: ' DP' (ID: 51992)
  Prédit: ' dynamic'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dynamic' → logprob: -0.3420198857784271
    2. ' DP' → logprob: -2.21701979637146
    3. 'DP' → logprob: -2.84201979637146
    4. 'dp' → logprob: -3.46701979637146
    5. '_dp' → logprob: -4.342020034790039
    6. ' memo' → logprob: -4.842020034790039
    7. ' dp' → logprob: -4.842020034790039
    8. '   ' → logprob: -5.092020034790039
    9. ' approximation' → logprob: -5.092020034790039
    10. ' memory' → logprob: -5.467020034790039

Token 818: ' impossible' (ID: 19786)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.1884898990392685
    2. '<|end|>' → logprob: -3.3134899139404297
    3. '#' → logprob: -3.5634899139404297
    4. '.' → logprob: -3.8134899139404297
    5. ')' → logprob: -3.8134899139404297
    6. ',' → logprob: -4.06348991394043
    7. '...' → logprob: -4.81348991394043
    8. ' approach' → logprob: -5.06348991394043
    9. 'is' → logprob: -5.18848991394043
    10. '_' → logprob: -5.56348991394043

Token 819: '.
' (ID: 558)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0156304836273193
    2. '       ' → logprob: -1.6406304836273193
    3. '<|end|>' → logprob: -1.8906304836273193
    4. '.' → logprob: -2.0156304836273193
    5. ',' → logprob: -2.3906304836273193
    6. '<|end|>' → logprob: -3.8906304836273193
    7. '...' → logprob: -4.515630722045898
    8. '        
' → logprob: -4.515630722045898
    9. ',
' → logprob: -5.390630722045898
    10. '.
' → logprob: -5.390630722045898

Token 820: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11584144830703735
    2. '#' → logprob: -2.4908413887023926
    3. '        
' → logprob: -4.990841388702393
    4. ' 
' → logprob: -5.615841388702393
    5. '
' → logprob: -5.740841388702393
    6. ' #' → logprob: -5.865841388702393
    7. ' if' → logprob: -5.865841388702393
    8. '        ' → logprob: -6.115841388702393
    9. ' return' → logprob: -6.740841388702393
    10. ' raise' → logprob: -7.365841388702393

Token 821: ' #
' (ID: 21888)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7589111328125
    2. '       ' → logprob: -0.8839111328125
    3. 'return' → logprob: -3.2589111328125
    4. ' #' → logprob: -3.3839111328125
    5. ' return' → logprob: -3.5089111328125
    6. ' if' → logprob: -5.2589111328125
    7. '        ' → logprob: -6.3839111328125
    8. '        
' → logprob: -6.5089111328125
    9. 'if' → logprob: -6.6339111328125
    10. '
' → logprob: -7.0089111328125

Token 822: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04967055469751358
    2. '#' → logprob: -3.049670457839966
    3. 'return' → logprob: -8.049670219421387
    4. ' #' → logprob: -8.049670219421387
    5. 'import' → logprob: -9.174670219421387
    6. 'from' → logprob: -9.549670219421387
    7. ' return' → logprob: -9.924670219421387
    8. '```' → logprob: -10.174670219421387
    9. '        
' → logprob: -10.174670219421387
    10. '        ' → logprob: -10.799670219421387

Token 823: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.11285446584224701
    2. 'return' → logprob: -2.737854480743408
    3. '       ' → logprob: -4.612854480743408
    4. 'max' → logprob: -4.737854480743408
    5. 'from' → logprob: -4.862854480743408
    6. 'import' → logprob: -4.862854480743408
    7. 'raise' → logprob: -5.862854480743408
    8. 'step' → logprob: -7.112854480743408
    9. 'We' → logprob: -7.237854480743408
    10. 'steps' → logprob: -7.612854480743408

Token 824: ' But' (ID: 3072)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.6153457164764404
    2. '#' → logprob: -1.4903457164764404
    3. 'dp' → logprob: -1.9903457164764404
    4. 'return' → logprob: -3.4903457164764404
    5. 'from' → logprob: -4.3653459548950195
    6. 'step' → logprob: -4.4903459548950195
    7. 'memo' → logprob: -4.6153459548950195
    8. 'import' → logprob: -4.7403459548950195
    9. 'threshold' → logprob: -5.6153459548950195
    10. '       ' → logprob: -5.8653459548950195

Token 825: ' the' (ID: 290)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.595720648765564
    2. ' the' → logprob: -1.720720648765564
    3. ' #' → logprob: -1.970720648765564
    4. '#' → logprob: -2.0957207679748535
    5. ' for' → logprob: -2.7207207679748535
    6. ' since' → logprob: -2.7207207679748535
    7. ' self' → logprob: -3.3457207679748535
    8. ' from' → logprob: -3.4707207679748535
    9. ' we' → logprob: -3.4707207679748535
    10. '
' → logprob: -3.7207207679748535

Token 826: ' problem' (ID: 4792)
  Prédit: ' problem'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' problem' → logprob: -1.3729363679885864
    2. 'distribution' → logprob: -1.4979363679885864
    3. ' distribution' → logprob: -1.9979363679885864
    4. 'problem' → logprob: -2.122936248779297
    5. ' code' → logprob: -2.872936248779297
    6. '#' → logprob: -3.372936248779297
    7. 'code' → logprob: -4.247936248779297
    8. 'direction' → logprob: -4.247936248779297
    9. 'support' → logprob: -4.372936248779297
    10. ' uniform' → logprob: -4.497936248779297

Token 827: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.4292522668838501
    2. ' can' → logprob: -1.67925226688385
    3. ' requires' → logprob: -2.9292521476745605
    4. 'is' → logprob: -3.5542521476745605
    5. ' has' → logprob: -4.1792521476745605
    6. 'can' → logprob: -4.3042521476745605
    7. '#' → logprob: -4.8042521476745605
    8. '   ' → logprob: -5.0542521476745605
    9. 'requires' → logprob: -5.4292521476745605
    10. ' remains' → logprob: -5.6792521476745605

Token 828: ' classic' (ID: 13686)
  Prédit: 'linear'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'linear' → logprob: -0.6917222142219543
    2. 'equ' → logprob: -1.1917221546173096
    3. ' linear' → logprob: -3.6917221546173096
    4. 'period' → logprob: -3.8167221546173096
    5. 'similar' → logprob: -3.9417221546173096
    6. 'a' → logprob: -3.9417221546173096
    7. 'that' → logprob: -4.066722393035889
    8. 's' → logprob: -4.316722393035889
    9. 'un' → logprob: -4.691722393035889
    10. 'Mark' → logprob: -4.691722393035889

Token 829: ':' (ID: 25)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.7131472826004028
    2. '<|end|>' → logprob: -2.2131471633911133
    3. ' and' → logprob: -2.3381471633911133
    4. ':' → logprob: -2.3381471633911133
    5. ',' → logprob: -2.4631471633911133
    6. 'and' → logprob: -3.3381471633911133
    7. ' dynamic' → logprob: -3.9631471633911133
    8. ' to' → logprob: -4.088147163391113
    9. '...' → logprob: -4.213147163391113
    10. 'dynamic' → logprob: -4.963147163391113

Token 830: ' For' (ID: 2214)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8286287784576416
    2. ' pass' → logprob: -1.8286287784576416
    3. ' #' → logprob: -2.0786287784576416
    4. '       ' → logprob: -2.4536287784576416
    5. '...' → logprob: -2.8286287784576416
    6. ' return' → logprob: -3.7036287784576416
    7. ' raise' → logprob: -3.9536287784576416
    8. 'return' → logprob: -4.7036285400390625
    9. 'pass' → logprob: -4.7036285400390625
    10. '        ' → logprob: -4.9536285400390625

Token 831: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.2727006673812866
    2. 's' → logprob: -1.7727006673812866
    3. 'the' → logprob: -1.8977006673812866
    4. 'simple' → logprob: -2.772700786590576
    5. 'random' → logprob: -3.022700786590576
    6. ' a' → logprob: -3.147700786590576
    7. 'large' → logprob: -3.522700786590576
    8. ' the' → logprob: -3.647700786590576
    9. 'r' → logprob: -3.772700786590576
    10. ' symmetric' → logprob: -3.772700786590576

Token 832: ' random' (ID: 7526)
  Prédit: 'random'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'random' → logprob: -0.6830723881721497
    2. 's' → logprob: -1.3080723285675049
    3. 'one' → logprob: -2.433072328567505
    4. 'simple' → logprob: -3.808072328567505
    5. 'finite' → logprob: -4.308072566986084
    6. 'l' → logprob: -4.808072566986084
    7. 'Mark' → logprob: -4.933072566986084
    8. 'return' → logprob: -5.058072566986084
    9. '1' → logprob: -5.433072566986084
    10. 'large' → logprob: -5.558072566986084

Token 833: ' walk' (ID: 5229)
  Prédit: 'walk'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'walk' → logprob: -0.0030784830451011658
    2. ' walk' → logprob: -5.878078460693359
    3. 'walker' → logprob: -8.25307846069336
    4. '
' → logprob: -12.50307846069336
    5. '```' → logprob: -12.62807846069336
    6. '_walk' → logprob: -12.87807846069336
    7. 'jump' → logprob: -13.12807846069336
    8. '-w' → logprob: -14.75307846069336
    9. 'w' → logprob: -15.12807846069336
    10. '.walk' → logprob: -15.50307846069336

Token 834: ' with' (ID: 483)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.4062219858169556
    2. ' on' → logprob: -1.4062219858169556
    3. ' with' → logprob: -1.4062219858169556
    4. 'with' → logprob: -1.9062219858169556
    5. 'on' → logprob: -3.281221866607666
    6. ' in' → logprob: -4.406221866607666
    7. ' that' → logprob: -4.656221866607666
    8. ' over' → logprob: -4.781221866607666
    9. '.' → logprob: -5.031221866607666
    10. 'in' → logprob: -5.156221866607666

Token 835: ' steps' (ID: 10331)
  Prédit: 'positive'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'positive' → logprob: -0.7428454160690308
    2. 'steps' → logprob: -1.8678454160690308
    3. 'step' → logprob: -1.9928454160690308
    4. 'absor' → logprob: -3.1178455352783203
    5. 'abs' → logprob: -3.2428455352783203
    6. 'a' → logprob: -3.3678455352783203
    7. 'finite' → logprob: -3.7428455352783203
    8. 'bounded' → logprob: -4.24284553527832
    9. 'negative' → logprob: -4.36784553527832
    10. 'jump' → logprob: -4.61784553527832

Token 836: ' in' (ID: 306)
  Prédit: ' of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -1.0290253162384033
    2. ' in' → logprob: -1.1540253162384033
    3. 'in' → logprob: -2.0290253162384033
    4. 'of' → logprob: -3.5290253162384033
    5. ' that' → logprob: -4.279025077819824
    6. ' on' → logprob: -4.279025077819824
    7. 'uniform' → logprob: -4.404025077819824
    8. 'size' → logprob: -4.654025077819824
    9. ' taken' → logprob: -5.029025077819824
    10. 'distributed' → logprob: -5.029025077819824

Token 837: ' support' (ID: 2498)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{' → logprob: -0.45017209649086
    2. '[' → logprob: -1.9501720666885376
    3. 'range' → logprob: -2.325172185897827
    4. '[-' → logprob: -2.450172185897827
    5. '{-' → logprob: -3.825172185897827
    6. 'the' → logprob: -5.575171947479248
    7. ' {' → logprob: -5.950171947479248
    8. 'support' → logprob: -6.325171947479248
    9. '1' → logprob: -6.325171947479248
    10. ' range' → logprob: -6.825171947479248

Token 838: ',
' (ID: 412)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2211303561925888
    2. ' of' → logprob: -3.59613037109375
    3. '   ' → logprob: -3.59613037109375
    4. '\' → logprob: -4.09613037109375
    5. 'of' → logprob: -4.47113037109375
    6. ' ' → logprob: -4.59613037109375
    7. 'from' → logprob: -4.59613037109375
    8. 'and' → logprob: -4.59613037109375
    9. ',
' → logprob: -4.59613037109375
    10. 'with' → logprob: -4.59613037109375

Token 839: '       ' (ID: 309)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.4484344720840454
    2. '       ' → logprob: -1.0734344720840454
    3. 'the' → logprob: -4.323434352874756
    4. ' the' → logprob: -5.573434352874756
    5. 'we' → logprob: -6.323434352874756
    6. 'and' → logprob: -9.198434829711914
    7. ' we' → logprob: -9.323434829711914
    8. ' and' → logprob: -9.448434829711914
    9. '...' → logprob: -9.823434829711914
    10. '   ' → logprob: -10.323434829711914

Token 840: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.11885816603899002
    2. '       ' → logprob: -2.3688580989837646
    3. 'the' → logprob: -4.618858337402344
    4. ' the' → logprob: -4.993858337402344
    5. ' and' → logprob: -7.743858337402344
    6. 'and' → logprob: -7.993858337402344
    7. '   ' → logprob: -8.243858337402344
    8. ' #' → logprob: -9.118858337402344
    9. '           ' → logprob: -9.118858337402344
    10. 'we' → logprob: -9.618858337402344

Token 841: ' expected' (ID: 5930)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.05965334177017212
    2. ' the' → logprob: -3.9346532821655273
    3. '       ' → logprob: -4.184653282165527
    4. 'the' → logprob: -4.184653282165527
    5. ' #' → logprob: -6.684653282165527
    6. 'prob' → logprob: -7.184653282165527
    7. 'we' → logprob: -7.559653282165527
    8. ' steps' → logprob: -7.809653282165527
    9. 'steps' → logprob: -7.809653282165527
    10. ' probability' → logprob: -7.934653282165527

Token 842: ' hitting' (ID: 34749)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.45064476132392883
    2. '_return' → logprob: -1.5756447315216064
    3. '_j' → logprob: -2.9506447315216064
    4. '_' → logprob: -3.2006447315216064
    5. ' return' → logprob: -3.5756447315216064
    6. 'number' → logprob: -4.2006449699401855
    7. 'value' → logprob: -5.0756449699401855
    8. 'steps' → logprob: -5.7006449699401855
    9. ' number' → logprob: -6.3256449699401855
    10. '_steps' → logprob: -6.4506449699401855

Token 843: ' time' (ID: 1058)
  Prédit: '_time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.3945765793323517
    2. 'time' → logprob: -1.6445765495300293
    3. ' time' → logprob: -2.7695765495300293
    4. '_' → logprob: -3.2695765495300293
    5. '_times' → logprob: -4.394576549530029
    6. '_distance' → logprob: -5.269576549530029
    7. 'distance' → logprob: -5.644576549530029
    8. '_probability' → logprob: -5.769576549530029
    9. 'times' → logprob: -6.769576549530029
    10. ' _' → logprob: -6.894576549530029

Token 844: ' at' (ID: 540)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.4070284068584442
    2. ' for' → logprob: -1.9070284366607666
    3. ' can' → logprob: -3.4070284366607666
    4. ' to' → logprob: -3.5320284366607666
    5. ' ' → logprob: -4.1570281982421875
    6. ' at' → logprob: -4.1570281982421875
    7. ' =' → logprob: -4.1570281982421875
    8. '<|end|>' → logprob: -4.5320281982421875
    9. '.' → logprob: -4.7820281982421875
    10. ',' → logprob: -4.9070281982421875

Token 845: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.010461684316396713
    2. ' ' → logprob: -4.885461807250977
    3. 'zero' → logprob: -7.135461807250977
    4. 'state' → logprob: -7.510461807250977
    5. 'position' → logprob: -7.635461807250977
    6. 'distance' → logprob: -7.885461807250977
    7. ' zero' → logprob: -8.385461807250977
    8. ' position' → logprob: -9.385461807250977
    9. 'abs' → logprob: -9.510461807250977
    10. 'target' → logprob: -9.885461807250977

Token 846: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.001415473292581737
    2. 'state' → logprob: -7.126415252685547
    3. ' ' → logprob: -8.376415252685547
    4. 'zero' → logprob: -8.751415252685547
    5. 'position' → logprob: -9.376415252685547
    6. 'distance' → logprob: -10.001415252685547
    7. 'target' → logprob: -11.126415252685547
    8. '{' → logprob: -11.501415252685547
    9. 'abs' → logprob: -11.876415252685547
    10. ' state' → logprob: -11.876415252685547

Token 847: ' starting' (ID: 8601)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.1343313604593277
    2. ' for' → logprob: -3.009331464767456
    3. ',' → logprob: -4.134331226348877
    4. ':' → logprob: -4.509331226348877
    5. '.' → logprob: -5.009331226348877
    6. '
' → logprob: -5.009331226348877
    7. ' from' → logprob: -5.259331226348877
    8. '   ' → logprob: -5.384331226348877
    9. ' can' → logprob: -5.509331226348877
    10. ' ' → logprob: -5.634331226348877

Token 848: ' from' (ID: 591)
  Prédit: ' from'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' from' → logprob: -0.38628438115119934
    2. 'from' → logprob: -1.261284351348877
    3. ' at' → logprob: -3.636284351348877
    4. ' point' → logprob: -5.136284351348877
    5. 'point' → logprob: -5.886284351348877
    6. '_' → logprob: -6.761284351348877
    7. '_from' → logprob: -7.886284351348877
    8. '_point' → logprob: -8.386284828186035
    9. 'at' → logprob: -8.761284828186035
    10. ' ' → logprob: -9.761284828186035

Token 849: ' R' (ID: 460)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.5699244737625122
    2. 'R' → logprob: -2.0699243545532227
    3. 'self' → logprob: -2.0699243545532227
    4. ' self' → logprob: -2.8199243545532227
    5. ' r' → logprob: -2.8199243545532227
    6. ' R' → logprob: -3.9449243545532227
    7. 'distance' → logprob: -4.444924354553223
    8. ' position' → logprob: -4.569924354553223
    9. 'position' → logprob: -5.569924354553223
    10. 'S' → logprob: -5.694924354553223

Token 850: ' =' (ID: 314)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.07818911224603653
    2. ':' → logprob: -3.5781891345977783
    3. ',' → logprob: -4.328188896179199
    4. '.' → logprob: -4.828188896179199
    5. ' can' → logprob: -5.453188896179199
    6. '   ' → logprob: -5.453188896179199
    7. ' ' → logprob: -6.078188896179199
    8. ')' → logprob: -6.078188896179199
    9. '
' → logprob: -6.578188896179199
    10. ' (' → logprob: -6.828188896179199

Token 851: ' R' (ID: 460)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.543707549571991
    2. ' self' → logprob: -1.6687076091766357
    3. 'abs' → logprob: -2.7937076091766357
    4. ' abs' → logprob: -2.7937076091766357
    5. 'R' → logprob: -3.0437076091766357
    6. ' (' → logprob: -3.6687076091766357
    7. ' R' → logprob: -3.7937076091766357
    8. '(self' → logprob: -5.168707370758057
    9. '(abs' → logprob: -5.793707370758057
    10. '(R' → logprob: -7.918707370758057

Token 852: ' /' (ID: 820)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.528519868850708
    2. ' +' → logprob: -2.403519868850708
    3. '+' → logprob: -2.653519868850708
    4. ':' → logprob: -3.403519868850708
    5. '   ' → logprob: -3.903519868850708
    6. '
' → logprob: -3.903519868850708
    7. '       ' → logprob: -4.028519630432129
    8. ',' → logprob: -4.153519630432129
    9. ' if' → logprob: -4.153519630432129
    10. '.' → logprob: -4.153519630432129

Token 853: ' mean' (ID: 4774)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.8928539752960205
    2. 'd' → logprob: -1.1428539752960205
    3. 'g' → logprob: -2.0178539752960205
    4. ' self' → logprob: -2.7678539752960205
    5. ' gcd' → logprob: -3.8928539752960205
    6. ' d' → logprob: -4.392853736877441
    7. ' (' → logprob: -4.642853736877441
    8. '1' → logprob: -4.892853736877441
    9. 'sum' → logprob: -5.017853736877441
    10. '(self' → logprob: -5.517853736877441

Token 854: ' step' (ID: 5983)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.6523054838180542
    2. '()' → logprob: -1.7773054838180542
    3. '_size' → logprob: -1.9023054838180542
    4. '_step' → logprob: -2.1523056030273438
    5. '   ' → logprob: -2.7773056030273438
    6. ' ' → logprob: -3.1523056030273438
    7. '_length' → logprob: -3.7773056030273438
    8. '       ' → logprob: -4.027305603027344
    9. 'size' → logprob: -4.027305603027344
    10. '.' → logprob: -4.027305603027344

Token 855: ' length' (ID: 5517)
  Prédit: '_size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_size' → logprob: -0.8767943382263184
    2. '_' → logprob: -1.6267943382263184
    3. ')' → logprob: -2.1267943382263184
    4. 'size' → logprob: -2.3767943382263184
    5. ' _' → logprob: -3.5017943382263184
    6. ' size' → logprob: -3.7517943382263184
    7. '_length' → logprob: -3.8767943382263184
    8. '.' → logprob: -4.001794338226318
    9. '   ' → logprob: -4.376794338226318
    10. ',' → logprob: -4.376794338226318

Token 856: '.
' (ID: 558)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7169212698936462
    2. ' ' → logprob: -1.841921329498291
    3. '
' → logprob: -1.841921329498291
    4. '<|end|>' → logprob: -2.966921329498291
    5. ',' → logprob: -3.716921329498291
    6. '.' → logprob: -4.466921329498291
    7. '   ' → logprob: -4.591921329498291
    8. ' *' → logprob: -4.716921329498291
    9. '```' → logprob: -4.841921329498291
    10. ' )' → logprob: -4.966921329498291

Token 857: '       ' (ID: 309)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7226421236991882
    2. ' ' → logprob: -1.347642183303833
    3. '
' → logprob: -2.722642183303833
    4. '+' → logprob: -3.972642183303833
    5. ':' → logprob: -3.972642183303833
    6. '<|end|>' → logprob: -3.972642183303833
    7. '   ' → logprob: -4.222641944885254
    8. '*' → logprob: -4.347641944885254
    9. '.' → logprob: -4.597641944885254
    10. ' )' → logprob: -4.722641944885254

Token 858: ' #
' (ID: 21888)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6490160226821899
    2. '       ' → logprob: -1.27401602268219
    3. '   ' → logprob: -2.5240159034729004
    4. '.' → logprob: -3.5240159034729004
    5. ' ' → logprob: -3.6490159034729004
    6. '<|end|>' → logprob: -4.5240159034729
    7. ',' → logprob: -5.1490159034729
    8. '    ' → logprob: -5.2740159034729
    9. ' )' → logprob: -5.5240159034729
    10. '        ' → logprob: -5.6490159034729

Token 859: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007581193465739489
    2. '        ' → logprob: -6.3825812339782715
    3. '   ' → logprob: -6.6325812339782715
    4. ' return' → logprob: -7.0075812339782715
    5. ' ' → logprob: -7.1325812339782715
    6. '.' → logprob: -7.7575812339782715
    7. '    ' → logprob: -7.8825812339782715
    8. 'return' → logprob: -8.007580757141113
    9. '        
' → logprob: -8.257580757141113
    10. ')' → logprob: -8.382580757141113

Token 860: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1305861473083496
    2. '   ' → logprob: -3.5055861473083496
    3. ' mean' → logprob: -3.8805861473083496
    4. 'mean' → logprob: -4.00558614730835
    5. '    ' → logprob: -4.25558614730835
    6. '        ' → logprob: -4.38058614730835
    7. ' return' → logprob: -5.25558614730835
    8. ' ' → logprob: -5.25558614730835
    9. ' ' → logprob: -6.25558614730835
    10. 'return' → logprob: -6.38058614730835

Token 861: ' So' (ID: 2632)
  Prédit: 'mean'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mean' → logprob: -0.10375099629163742
    2. ' mean' → logprob: -3.2287509441375732
    3. 'return' → logprob: -3.4787509441375732
    4. '       ' → logprob: -4.478751182556152
    5. ' return' → logprob: -4.853751182556152
    6. 'm' → logprob: -5.603751182556152
    7. '   ' → logprob: -5.853751182556152
    8. 'step' → logprob: -7.853751182556152
    9. 'mu' → logprob: -7.978751182556152
    10. '#' → logprob: -8.228751182556152

Token 862: ' expected' (ID: 5930)
  Prédit: ' mean'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mean' → logprob: -0.17027027904987335
    2. 'mean' → logprob: -2.1702702045440674
    3. '   ' → logprob: -4.1702704429626465
    4. ' return' → logprob: -4.1702704429626465
    5. '       ' → logprob: -5.0452704429626465
    6. 'return' → logprob: -5.6702704429626465
    7. ' if' → logprob: -7.5452704429626465
    8. ' mu' → logprob: -7.7952704429626465
    9. '    ' → logprob: -8.795269966125488
    10. ' expected' → logprob: -9.420269966125488

Token 863: ' number' (ID: 2086)
  Prédit: '_j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_j' → logprob: -0.18807296454906464
    2. '_' → logprob: -1.813072919845581
    3. '_jump' → logprob: -5.43807315826416
    4. '_step' → logprob: -6.43807315826416
    5. ' _' → logprob: -7.31307315826416
    6. '_return' → logprob: -7.43807315826416
    7. '_steps' → logprob: -7.68807315826416
    8. '_length' → logprob: -8.31307315826416
    9. 'j' → logprob: -8.93807315826416
    10. '_value' → logprob: -9.43807315826416

Token 864: ' of' (ID: 328)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.07817003130912781
    2. ' _' → logprob: -3.07817006111145
    3. '_tokens' → logprob: -4.953169822692871
    4. 's' → logprob: -5.953169822692871
    5. '(' → logprob: -5.953169822692871
    6. ' =' → logprob: -6.203169822692871
    7. '_steps' → logprob: -6.328169822692871
    8. ')' → logprob: -6.328169822692871
    9. '=' → logprob: -6.578169822692871
    10. ' ' → logprob: -6.828169822692871

Token 865: ' jumps' (ID: 65613)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.49265363812446594
    2. '_j' → logprob: -1.2426536083221436
    3. ' _' → logprob: -2.6176536083221436
    4. ' jumps' → logprob: -3.9926536083221436
    5. 'j' → logprob: -5.367653846740723
    6. '_jump' → logprob: -6.992653846740723
    7. ' j' → logprob: -7.117653846740723
    8. ')' → logprob: -7.492653846740723
    9. '_steps' → logprob: -7.742653846740723
    10. '   ' → logprob: -8.117653846740723

Token 866: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14611445367336273
    2. '=' → logprob: -2.0211143493652344
    3. ' is' → logprob: -5.771114349365234
    4. 'return' → logprob: -9.896114349365234
    5. '       ' → logprob: -10.021114349365234
    6. ':' → logprob: -10.271114349365234
    7. ' return' → logprob: -10.271114349365234
    8. '   ' → logprob: -10.646114349365234
    9. '<|end|>' → logprob: -10.646114349365234
    10. '<|end|>' → logprob: -10.896114349365234

Token 867: ' R' (ID: 460)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.16025175154209137
    2. 'self' → logprob: -1.9102517366409302
    3. ' (' → logprob: -11.41025161743164
    4. ' float' → logprob: -11.78525161743164
    5. '(self' → logprob: -12.53525161743164
    6. ' return' → logprob: -13.53525161743164
    7. 'float' → logprob: -13.66025161743164
    8. ' abs' → logprob: -13.66025161743164
    9. ' ' → logprob: -14.66025161743164
    10. ' ' → logprob: -15.16025161743164

Token 868: ' /' (ID: 820)
  Prédit: ' /'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.011150279082357883
    2. '/' → logprob: -4.511150360107422
    3. '*' → logprob: -10.011150360107422
    4. ' *' → logprob: -10.636150360107422
    5. 'self' → logprob: -12.136150360107422
    6. 'div' → logprob: -12.261150360107422
    7. '   ' → logprob: -12.636150360107422
    8. ' ' → logprob: -12.886150360107422
    9. ' ' → logprob: -13.011150360107422
    10. '```' → logprob: -13.011150360107422

Token 869: ' expected' (ID: 5930)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '((' → logprob: -0.6500651240348816
    2. '(self' → logprob: -1.5250651836395264
    3. 'self' → logprob: -1.6500651836395264
    4. ' (' → logprob: -3.4000651836395264
    5. '(' → logprob: -4.400064945220947
    6. ' ((' → logprob: -4.775064945220947
    7. '(sum' → logprob: -5.275064945220947
    8. ' self' → logprob: -5.650064945220947
    9. '(((' → logprob: -5.900064945220947
    10. 'sum' → logprob: -6.150064945220947

Token 870: '_step' (ID: 27360)
  Prédit: '_step'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_step' → logprob: -0.4609239399433136
    2. '_' → logprob: -1.2109239101409912
    3. '_value' → logprob: -3.585923910140991
    4. '_jump' → logprob: -3.960923910140991
    5. ' _' → logprob: -4.46092414855957
    6. 'step' → logprob: -5.33592414855957
    7. ' step' → logprob: -5.83592414855957
    8. '_length' → logprob: -6.58592414855957
    9. '_j' → logprob: -6.83592414855957
    10. '_s' → logprob: -7.46092414855957

Token 871: '
' (ID: 198)
  Prédit: '_length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_length' → logprob: -0.2578687071800232
    2. '_' → logprob: -1.757868766784668
    3. '_size' → logprob: -3.257868766784668
    4. '_len' → logprob: -4.632868766784668
    5. ' _' → logprob: -6.007868766784668
    6. '_l' → logprob: -6.507868766784668
    7. '_value' → logprob: -7.007868766784668
    8. 'length' → logprob: -7.757868766784668
    9. '()' → logprob: -7.882868766784668
    10. 'size' → logprob: -8.882868766784668

Token 872: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06550097465515137
    2. ')' → logprob: -4.1905012130737305
    3. '   ' → logprob: -4.6905012130737305
    4. ' *' → logprob: -5.0655012130737305
    5. '        ' → logprob: -5.0655012130737305
    6. ' ' → logprob: -5.4405012130737305
    7. ',' → logprob: -5.8155012130737305
    8. '_' → logprob: -5.8155012130737305
    9. '    ' → logprob: -6.1905012130737305
    10. ' +' → logprob: -6.1905012130737305

Token 873: ' #
' (ID: 21888)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004286146257072687
    2. '   ' → logprob: -6.504286289215088
    3. '        ' → logprob: -7.379286289215088
    4. '    ' → logprob: -7.504286289215088
    5. '.' → logprob: -8.12928581237793
    6. ')' → logprob: -8.37928581237793
    7. ',' → logprob: -8.50428581237793
    8. '=' → logprob: -8.62928581237793
    9. '_' → logprob: -9.00428581237793
    10. '        
' → logprob: -9.50428581237793

Token 874: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.000990295666269958
    2. '   ' → logprob: -7.375990390777588
    3. '    ' → logprob: -9.00098991394043
    4. '        ' → logprob: -9.37598991394043
    5. '        
' → logprob: -10.87598991394043
    6. 's' → logprob: -11.00098991394043
    7. '      ' → logprob: -11.25098991394043
    8. 'self' → logprob: -11.62598991394043
    9. 'expected' → logprob: -11.62598991394043
    10. ',' → logprob: -11.62598991394043

Token 875: ' #' (ID: 1069)
  Prédit: 'expected'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'expected' → logprob: -0.3828805387020111
    2. 'mean' → logprob: -2.132880449295044
    3. '       ' → logprob: -2.382880449295044
    4. ' expected' → logprob: -3.007880449295044
    5. 'e' → logprob: -3.632880449295044
    6. ' mean' → logprob: -5.132880687713623
    7. 'step' → logprob: -5.257880687713623
    8. 'self' → logprob: -5.507880687713623
    9. 'exp' → logprob: -5.507880687713623
    10. '   ' → logprob: -6.382880687713623

Token 876: ' But' (ID: 3072)
  Prédit: 'expected'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'expected' → logprob: -0.47534510493278503
    2. 'mean' → logprob: -1.7253451347351074
    3. '   ' → logprob: -2.3503451347351074
    4. '       ' → logprob: -3.2253451347351074
    5. ' expected' → logprob: -4.100345134735107
    6. 'e' → logprob: -4.975345134735107
    7. 'return' → logprob: -5.100345134735107
    8. ' mean' → logprob: -5.225345134735107
    9. 'average' → logprob: -5.350345134735107
    10. '_' → logprob: -5.350345134735107

Token 877: ' need' (ID: 1309)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.25308650732040405
    2. 'self' → logprob: -2.128086566925049
    3. ' R' → logprob: -3.753086566925049
    4. '   ' → logprob: -3.878086566925049
    5. '       ' → logprob: -4.503086566925049
    6. ' mean' → logprob: -4.503086566925049
    7. ' not' → logprob: -4.628086566925049
    8. ' if' → logprob: -5.128086566925049
    9. 'mean' → logprob: -5.128086566925049
    10. ' step' → logprob: -5.878086566925049

Token 878: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.6068462133407593
    2. ' =' → logprob: -2.106846332550049
    3. '_' → logprob: -2.481846332550049
    4. '   ' → logprob: -2.731846332550049
    5. '_to' → logprob: -2.981846332550049
    6. 'to' → logprob: -3.231846332550049
    7. ':' → logprob: -4.106846332550049
    8. '    ' → logprob: -4.606846332550049
    9. ' a' → logprob: -4.981846332550049
    10. '=' → logprob: -4.981846332550049

Token 879: ' check' (ID: 2371)
  Prédit: ' check'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' check' → logprob: -1.2060438394546509
    2. 'check' → logprob: -1.3310438394546509
    3. 'handle' → logprob: -1.5810438394546509
    4. ' handle' → logprob: -2.7060437202453613
    5. 'consider' → logprob: -3.2060437202453613
    6. 'return' → logprob: -4.206043720245361
    7. 'verify' → logprob: -4.456043720245361
    8. ' consider' → logprob: -4.456043720245361
    9. 'ensure' → logprob: -4.831043720245361
    10. 'compute' → logprob: -4.956043720245361

Token 880: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.668816328048706
    2. ' for' → logprob: -1.668816328048706
    3. ' _' → logprob: -2.543816328048706
    4. ' self' → logprob: -2.668816328048706
    5. '_' → logprob: -3.043816328048706
    6. ' the' → logprob: -4.168816566467285
    7. ' ' → logprob: -4.543816566467285
    8. 'self' → logprob: -4.543816566467285
    9. ' that' → logprob: -4.793816566467285
    10. 'for' → logprob: -5.043816566467285

Token 881: ' expected' (ID: 5930)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.2871420383453369
    2. 'self' → logprob: -1.662142038345337
    3. ' R' → logprob: -4.162141799926758
    4. ' not' → logprob: -4.162141799926758
    5. ' value' → logprob: -5.412141799926758
    6. ' the' → logprob: -5.412141799926758
    7. 'R' → logprob: -5.537141799926758
    8. ' abs' → logprob: -5.662141799926758
    9. ' mean' → logprob: -6.412141799926758
    10. 'mean' → logprob: -6.537141799926758

Token 882: ' value' (ID: 1432)
  Prédit: '_step'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_step' → logprob: -0.06280352920293808
    2. '_' → logprob: -2.8128035068511963
    3. '_steps' → logprob: -8.187803268432617
    4. '_value' → logprob: -8.812803268432617
    5. '_jump' → logprob: -9.187803268432617
    6. ' _' → logprob: -10.062803268432617
    7. ' step' → logprob: -10.937803268432617
    8. '_s' → logprob: -10.937803268432617
    9. '_length' → logprob: -10.937803268432617
    10. ' ' → logprob: -10.937803268432617

Token 883: ' finite' (ID: 73104)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.1264759749174118
    2. '_step' → logprob: -2.8764760494232178
    3. '()' → logprob: -4.126475811004639
    4. ' _' → logprob: -4.126475811004639
    5. '_length' → logprob: -5.501475811004639
    6. ' >=' → logprob: -5.751475811004639
    7. ' is' → logprob: -6.001475811004639
    8. ')' → logprob: -6.001475811004639
    9. '_value' → logprob: -6.001475811004639
    10. ' >' → logprob: -6.251475811004639

Token 884: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8861067891120911
    2. '_' → logprob: -1.2611067295074463
    3. '   ' → logprob: -1.8861067295074463
    4. ',' → logprob: -3.7611067295074463
    5. ')' → logprob: -3.8861067295074463
    6. '_step' → logprob: -4.136106967926025
    7. ' ' → logprob: -4.511106967926025
    8. '.' → logprob: -4.511106967926025
    9. '_value' → logprob: -4.761106967926025
    10. '()' → logprob: -5.011106967926025

Token 885: ' only' (ID: 1606)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2730642557144165
    2. '        ' → logprob: -2.648064136505127
    3. ' if' → logprob: -3.023064136505127
    4. ')' → logprob: -3.023064136505127
    5. '    ' → logprob: -4.773064136505127
    6. '<|end|>' → logprob: -4.773064136505127
    7. ' ' → logprob: -4.898064136505127
    8. ' )' → logprob: -5.273064136505127
    9. ' self' → logprob: -5.648064136505127
    10. ' return' → logprob: -5.773064136505127

Token 886: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5818583369255066
    2. 'if' → logprob: -0.8318583369255066
    3. 'steps' → logprob: -6.831858158111572
    4. ' for' → logprob: -7.206858158111572
    5. ' steps' → logprob: -7.206858158111572
    6. 'self' → logprob: -7.456858158111572
    7. '       ' → logprob: -7.706858158111572
    8. '   ' → logprob: -8.20685863494873
    9. ' self' → logprob: -8.20685863494873
    10. 'for' → logprob: -8.33185863494873

Token 887: ' mean' (ID: 4774)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.02048688381910324
    2. 'abs' → logprob: -4.395486831665039
    3. 'all' → logprob: -6.270486831665039
    4. 'max' → logprob: -6.395486831665039
    5. '1' → logprob: -6.520486831665039
    6. 'min' → logprob: -7.020486831665039
    7. 'any' → logprob: -7.145486831665039
    8. 'sum' → logprob: -7.395486831665039
    9. ' self' → logprob: -8.020486831665039
    10. 'not' → logprob: -8.895486831665039

Token 888: ' step' (ID: 5983)
  Prédit: '_step'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_step' → logprob: -0.2983967661857605
    2. '_' → logprob: -1.5483968257904053
    3. ' _' → logprob: -3.6733968257904053
    4. ' step' → logprob: -4.673396587371826
    5. '_value' → logprob: -5.423396587371826
    6. 'step' → logprob: -6.548396587371826
    7. '_jump' → logprob: -6.673396587371826
    8. '.' → logprob: -8.298397064208984
    9. ',' → logprob: -8.298397064208984
    10. '()' → logprob: -8.423397064208984

Token 889: ' >' (ID: 1424)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.17618952691555023
    2. ' length' → logprob: -2.676189422607422
    3. '_length' → logprob: -3.051189422607422
    4. ' <' → logprob: -4.301189422607422
    5. 'value' → logprob: -4.301189422607422
    6. 'size' → logprob: -5.551189422607422
    7. ' value' → logprob: -6.051189422607422
    8. '<' → logprob: -6.176189422607422
    9. '>' → logprob: -6.426189422607422
    10. ' is' → logprob: -6.551189422607422

Token 890: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0011830847943201661
    2. ' ' → logprob: -6.751183032989502
    3. '1' → logprob: -11.37618350982666
    4. '<|end|>' → logprob: -14.62618350982666
    5. ',' → logprob: -15.37618350982666
    6. '>' → logprob: -15.87618350982666
    7. '
' → logprob: -16.001182556152344
    8. '=' → logprob: -16.126182556152344
    9. '.' → logprob: -16.626182556152344
    10. '۰' → logprob: -16.876182556152344

Token 891: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.700132997939363e-05
    2. ' ' → logprob: -11.250017166137695
    3. '1' → logprob: -12.500017166137695
    4. 'self' → logprob: -16.375017166137695
    5. '<|end|>' → logprob: -17.500017166137695
    6. '۰' → logprob: -18.250017166137695
    7. '.' → logprob: -18.750017166137695
    8. 'zero' → logprob: -18.875017166137695
    9. ' ' → logprob: -19.625017166137695
    10. '-' → logprob: -19.625017166137695

Token 892: '
' (ID: 198)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9663523435592651
    2. '<|end|>' → logprob: -1.3413523435592651
    3. ' ' → logprob: -2.3413524627685547
    4. '   ' → logprob: -2.8413524627685547
    5. '.' → logprob: -3.0913524627685547
    6. '<|end|>' → logprob: -3.8413524627685547
    7. ',' → logprob: -4.091352462768555
    8. ' )' → logprob: -4.341352462768555
    9. ' 
' → logprob: -4.466352462768555
    10. '_' → logprob: -4.591352462768555

Token 893: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09176638722419739
    2. '   ' → logprob: -3.216766357421875
    3. '.' → logprob: -4.341766357421875
    4. ',' → logprob: -4.466766357421875
    5. ')' → logprob: -4.591766357421875
    6. '    ' → logprob: -5.716766357421875
    7. ' ' → logprob: -5.966766357421875
    8. '<|end|>' → logprob: -6.841766357421875
    9. '        ' → logprob: -6.966766357421875
    10. '_' → logprob: -6.966766357421875

Token 894: ' mean' (ID: 4774)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.028023941442370415
    2. '        ' → logprob: -5.028023719787598
    3. ')' → logprob: -5.278023719787598
    4. ' ' → logprob: -5.403023719787598
    5. '   ' → logprob: -5.528023719787598
    6. '    ' → logprob: -5.903023719787598
    7. ' )' → logprob: -7.028023719787598
    8. '.' → logprob: -7.153023719787598
    9. '        
' → logprob: -7.653023719787598
    10. ',' → logprob: -7.653023719787598

Token 895: '_step' (ID: 27360)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5038264393806458
    2. '_step' → logprob: -1.003826379776001
    3. ' =' → logprob: -3.753826379776001
    4. '=' → logprob: -5.75382661819458
    5. '_space' → logprob: -7.00382661819458
    6. '_value' → logprob: -7.25382661819458
    7. '_steps' → logprob: -8.378826141357422
    8. ' _' → logprob: -8.503826141357422
    9. '_=' → logprob: -8.878826141357422
    10. '_length' → logprob: -8.878826141357422

Token 896: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07894718647003174
    2. '=' → logprob: -2.578947067260742
    3. '_' → logprob: -10.828947067260742
    4. ')' → logprob: -11.828947067260742
    5. ' ' → logprob: -11.953947067260742
    6. ':' → logprob: -12.328947067260742
    7. 'space' → logprob: -12.578947067260742
    8. ',' → logprob: -12.953947067260742
    9. '_space' → logprob: -13.328947067260742
    10. '>' → logprob: -13.328947067260742

Token 897: ' sum' (ID: 4215)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.2488010674715042
    2. 'self' → logprob: -1.8738011121749878
    3. 'sum' → logprob: -2.9988009929656982
    4. '(K' → logprob: -4.623801231384277
    5. '(sum' → logprob: -5.623801231384277
    6. ' (' → logprob: -6.498801231384277
    7. '((' → logprob: -6.873801231384277
    8. ' self' → logprob: -7.873801231384277
    9. '0' → logprob: -8.623801231384277
    10. '(' → logprob: -9.248801231384277

Token 898: '(s' (ID: 1858)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.1926557719707489
    2. '(s' → logprob: -3.1926558017730713
    3. '(range' → logprob: -3.4426558017730713
    4. '(self' → logprob: -3.5676558017730713
    5. 'i' → logprob: -3.8176558017730713
    6. 'range' → logprob: -3.9426558017730713
    7. 'self' → logprob: -4.442655563354492
    8. '(' → logprob: -4.817655563354492
    9. 's' → logprob: -5.317655563354492
    10. '((' → logprob: -5.692655563354492

Token 899: ' *' (ID: 425)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.4604018926620483
    2. '(range' → logprob: -1.7104018926620483
    3. ' *' → logprob: -2.085402011871338
    4. ' in' → logprob: -2.460402011871338
    5. 'range' → logprob: -2.460402011871338
    6. '(s' → logprob: -2.460402011871338
    7. '=' → logprob: -3.335402011871338
    8. ' range' → logprob: -3.460402011871338
    9. 'for' → logprob: -3.835402011871338
    10. 's' → logprob: -3.960402011871338

Token 900: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0003111519617959857
    2. ' self' → logprob: -8.250310897827148
    3. '(self' → logprob: -10.375310897827148
    4. 'prob' → logprob: -11.500310897827148
    5. '[self' → logprob: -12.875310897827148
    6. '	self' → logprob: -13.500310897827148
    7. ')' → logprob: -13.750310897827148
    8. '0' → logprob: -14.500310897827148
    9. '           ' → logprob: -14.875310897827148
    10. 'p' → logprob: -15.000310897827148

Token 901: '.dis' (ID: 8454)
  Prédit: '.pro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pro' → logprob: -0.040459662675857544
    2. 'prob' → logprob: -3.415459632873535
    3. '.dis' → logprob: -5.165459632873535
    4. 'distribution' → logprob: -7.040459632873535
    5. 'pro' → logprob: -9.040459632873535
    6. 'dis' → logprob: -9.915459632873535
    7. ' probability' → logprob: -11.915459632873535
    8. ')' → logprob: -12.040459632873535
    9. '.count' → logprob: -12.790459632873535
    10. ' .' → logprob: -12.790459632873535

Token 902: 'tribution' (ID: 7090)
  Prédit: 'tribution'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tribution' → logprob: -0.0007984309340827167
    2. '_counts' → logprob: -8.500798225402832
    3. 'distribution' → logprob: -8.625798225402832
    4. 'trib' → logprob: -8.750798225402832
    5. 'tributions' → logprob: -9.000798225402832
    6. 'counts' → logprob: -9.625798225402832
    7. '_distribution' → logprob: -10.500798225402832
    8. 't' → logprob: -10.875798225402832
    9. 'tr' → logprob: -12.000798225402832
    10. 'tribut' → logprob: -12.625798225402832

Token 903: '.pro' (ID: 3231)
  Prédit: '.pro'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pro' → logprob: -0.269776314496994
    2. 'prob' → logprob: -2.3947763442993164
    3. '_probability' → logprob: -2.6447763442993164
    4. '._' → logprob: -3.0197763442993164
    5. '_prob' → logprob: -4.519776344299316
    6. '_counts' → logprob: -4.644776344299316
    7. '_pro' → logprob: -6.269776344299316
    8. 'for' → logprob: -6.769776344299316
    9. '.count' → logprob: -7.644776344299316
    10. ' for' → logprob: -8.269776344299316

Token 904: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -3.7697225252486533e-06
    2. 'ability' → logprob: -12.625003814697266
    3. 'bab' → logprob: -15.125003814697266
    4. 'ba' → logprob: -16.625003814697266
    5. 'prob' → logprob: -16.875003814697266
    6. 'ob' → logprob: -17.625003814697266
    7. ')b' → logprob: -17.875003814697266
    8. '```' → logprob: -18.125003814697266
    9. 'bal' → logprob: -18.500003814697266
    10. 'bob' → logprob: -18.625003814697266

Token 905: 'ability' (ID: 3563)
  Prédit: 'ability'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ability' → logprob: -7.896309739408025e-07
    2. 'ility' → logprob: -15.625000953674316
    3. 'ABILITY' → logprob: -15.750000953674316
    4. '(' → logprob: -15.875000953674316
    5. 'ality' → logprob: -16.375
    6. ' ability' → logprob: -16.5
    7. ')' → logprob: -17.875
    8. 'abil' → logprob: -18.0
    9. 'ailability' → logprob: -18.125
    10. 's' → logprob: -18.375

Token 906: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.011461334303021431
    2. '(' → logprob: -4.51146125793457
    3. ' (' → logprob: -8.76146125793457
    4. 's' → logprob: -8.76146125793457
    5. ')' → logprob: -9.76146125793457
    6. '(
' → logprob: -10.26146125793457
    7. '(i' → logprob: -13.01146125793457
    8. '((' → logprob: -13.38646125793457
    9. ' )' → logprob: -14.13646125793457
    10. ' s' → logprob: -14.13646125793457

Token 907: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0009748285519890487
    2. 'for' → logprob: -7.625974655151367
    3. ' for' → logprob: -7.750974655151367
    4. ' )' → logprob: -10.125974655151367
    5. 's' → logprob: -11.625974655151367
    6. ')
' → logprob: -13.250974655151367
    7. '   ' → logprob: -13.750974655151367
    8. ' ' → logprob: -14.250974655151367
    9. '[' → logprob: -14.625974655151367
    10. '       ' → logprob: -14.875974655151367

Token 908: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.02177521586418152
    2. 'for' → logprob: -3.896775245666504
    3. ')' → logprob: -6.896775245666504
    4. ' ' → logprob: -8.771775245666504
    5. ' )' → logprob: -10.521775245666504
    6. '<|end|>' → logprob: -11.021775245666504
    7. '	for' → logprob: -11.771775245666504
    8. 's' → logprob: -12.646775245666504
    9. ' s' → logprob: -12.896775245666504
    10. '    ' → logprob: -13.271775245666504

Token 909: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0036013787612318993
    2. ' s' → logprob: -5.628601551055908
    3. '_s' → logprob: -14.25360107421875
    4. ' ' → logprob: -14.37860107421875
    5. '_' → logprob: -16.75360107421875
    6. '(s' → logprob: -17.25360107421875
    7. '	s' → logprob: -17.37860107421875
    8. '<|end|>' → logprob: -17.75360107421875
    9. ',' → logprob: -18.00360107421875
    10. '  ' → logprob: -18.25360107421875

Token 910: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.12704633176326752
    2. 'in' → logprob: -2.1270463466644287
    3. 's' → logprob: -10.002046585083008
    4. ')' → logprob: -10.377046585083008
    5. ' ' → logprob: -11.127046585083008
    6. ' _' → logprob: -11.877046585083008
    7. ' s' → logprob: -12.127046585083008
    8. ' )' → logprob: -12.752046585083008
    9. '_' → logprob: -13.002046585083008
    10. ',' → logprob: -13.127046585083008

Token 911: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.006419647950679064
    2. ' range' → logprob: -5.131419658660889
    3. 'self' → logprob: -7.631419658660889
    4. '(range' → logprob: -12.75641918182373
    5. ' self' → logprob: -13.13141918182373
    6. ' ' → logprob: -15.13141918182373
    7. '	range' → logprob: -15.13141918182373
    8. 's' → logprob: -15.75641918182373
    9. ')' → logprob: -15.88141918182373
    10. '   ' → logprob: -16.381420135498047

Token 912: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -4.23917081207037e-05
    2. '(' → logprob: -10.250041961669922
    3. 'self' → logprob: -12.375041961669922
    4. ' (' → logprob: -13.500041961669922
    5. '(
' → logprob: -14.375041961669922
    6. '(len' → logprob: -15.125041961669922
    7. '(s' → logprob: -15.500041961669922
    8. '((' → logprob: -16.250041961669922
    9. '   ' → logprob: -16.750041961669922
    10. '[self' → logprob: -17.375041961669922

Token 913: '.N' (ID: 4439)
  Prédit: '._'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '._' → logprob: -0.00025228000595234334
    2. 'self' → logprob: -9.250252723693848
    3. '_self' → logprob: -10.000252723693848
    4. 'class' → logprob: -10.750252723693848
    5. '.' → logprob: -10.875252723693848
    6. ' .' → logprob: -11.250252723693848
    7. '(self' → logprob: -11.500252723693848
    8. '   ' → logprob: -11.875252723693848
    9. '_min' → logprob: -12.125252723693848
    10. '.__' → logprob: -12.250252723693848

Token 914: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.9653767943382263
    2. '*K' → logprob: -1.465376853942871
    3. ',' → logprob: -1.840376853942871
    4. '*' → logprob: -1.840376853942871
    5. '*self' → logprob: -4.090376853942871
    6. ')' → logprob: -4.090376853942871
    7. ' +' → logprob: -4.215376853942871
    8. '+' → logprob: -4.590376853942871
    9. ',K' → logprob: -5.590376853942871
    10. ' ' → logprob: -6.215376853942871

Token 915: ' self' (ID: 1051)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.18102094531059265
    2. 'self' → logprob: -1.931020975112915
    3. '1' → logprob: -3.931020975112915
    4. ' self' → logprob: -7.681020736694336
    5. ' K' → logprob: -7.806020736694336
    6. 'Jump' → logprob: -10.306020736694336
    7. ' ' → logprob: -10.931020736694336
    8. 'jump' → logprob: -11.931020736694336
    9. '	K' → logprob: -12.493520736694336
    10. '_K' → logprob: -12.993520736694336

Token 916: '.K' (ID: 14475)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.035405177623033524
    2. '.K' → logprob: -4.410405158996582
    3. ' +' → logprob: -4.535405158996582
    4. '+' → logprob: -5.910405158996582
    5. ' -' → logprob: -5.910405158996582
    6. ' K' → logprob: -6.160405158996582
    7. 'self' → logprob: -7.160405158996582
    8. '-' → logprob: -7.285405158996582
    9. '-K' → logprob: -7.410405158996582
    10. '1' → logprob: -7.785405158996582

Token 917: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.3436490297317505
    2. ',' → logprob: -1.4686490297317505
    3. ' -' → logprob: -1.7186490297317505
    4. 'self' → logprob: -2.218648910522461
    5. ' +' → logprob: -2.593648910522461
    6. '-' → logprob: -3.218648910522461
    7. '-K' → logprob: -3.718648910522461
    8. '   ' → logprob: -3.718648910522461
    9. ' self' → logprob: -4.718648910522461
    10. ',self' → logprob: -4.968648910522461

Token 918: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00020425561524461955
    2. ' ' → logprob: -8.500204086303711
    3. 'self' → logprob: -14.750204086303711
    4. '0' → logprob: -16.50020408630371
    5. '   ' → logprob: -16.62520408630371
    6. ' self' → logprob: -17.00020408630371
    7. '  ' → logprob: -17.12520408630371
    8. '2' → logprob: -17.75020408630371
    9. '    ' → logprob: -19.25020408630371
    10. '10' → logprob: -19.50020408630371

Token 919: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00018971276585943997
    2. ' ' → logprob: -9.000189781188965
    3. 'self' → logprob: -9.750189781188965
    4. '0' → logprob: -12.125189781188965
    5. ' self' → logprob: -13.125189781188965
    6. '   ' → logprob: -15.375189781188965
    7. '  ' → logprob: -15.875189781188965
    8. '2' → logprob: -16.62518882751465
    9. '
' → logprob: -16.87518882751465
    10. '10' → logprob: -17.87518882751465

Token 920: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7328211069107056
    2. ',' → logprob: -1.4828211069107056
    3. '))' → logprob: -2.107820987701416
    4. ' if' → logprob: -2.357820987701416
    5. '):' → logprob: -3.482820987701416
    6. 'if' → logprob: -4.482820987701416
    7. ')):' → logprob: -4.857820987701416
    8. '[' → logprob: -5.482820987701416
    9. ' )' → logprob: -5.732820987701416
    10. ' ,' → logprob: -5.732820987701416

Token 921: '       ' (ID: 309)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.7433829307556152
    2. ')' → logprob: -1.6183829307556152
    3. ' ' → logprob: -1.9933829307556152
    4. ' if' → logprob: -2.6183829307556152
    5. ' +' → logprob: -3.4933829307556152
    6. '<|end|>' → logprob: -4.118382930755615
    7. ':' → logprob: -4.618382930755615
    8. ' )' → logprob: -4.618382930755615
    9. ' 
' → logprob: -4.993382930755615
    10. '       ' → logprob: -5.118382930755615

Token 922: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3862000107765198
    2. ' 
' → logprob: -2.011199951171875
    3. '
' → logprob: -2.386199951171875
    4. '       ' → logprob: -2.761199951171875
    5. ' ' → logprob: -4.136199951171875
    6. 'if' (adapté à ' if') → logprob: -5.136199951171875
    7. '+' → logprob: -6.511199951171875
    8. '        ' → logprob: -6.511199951171875
    9. '        
' → logprob: -6.886199951171875
    10. '  
' → logprob: -6.886199951171875

Token 923: ' mean' (ID: 4774)
  Prédit: 'mean'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mean' → logprob: -0.22577440738677979
    2. ' mean' → logprob: -1.6007744073867798
    3. ' not' → logprob: -8.975774765014648
    4. 'self' → logprob: -9.225774765014648
    5. ' self' → logprob: -9.600774765014648
    6. 'not' → logprob: -9.850774765014648
    7. '(mean' → logprob: -12.225774765014648
    8. '   ' → logprob: -13.100774765014648
    9. 'abs' → logprob: -13.600774765014648
    10. ' math' → logprob: -13.725774765014648

Token 924: '_step' (ID: 27360)
  Prédit: '_step'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_step' → logprob: -0.004663065075874329
    2. '_' → logprob: -5.379662990570068
    3. '>' → logprob: -11.254663467407227
    4. 'step' → logprob: -11.629663467407227
    5. ' _' → logprob: -12.004663467407227
    6. '_s' → logprob: -13.004663467407227
    7. '```' → logprob: -13.379663467407227
    8. '_steps' → logprob: -13.504663467407227
    9. 'Step' → logprob: -13.629663467407227
    10. '_
' → logprob: -13.629663467407227

Token 925: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.12957024574279785
    2. '<=' → logprob: -2.129570245742798
    3. ' ==' → logprob: -6.629570007324219
    4. '==' → logprob: -6.879570007324219
    5. ' >' → logprob: -8.629570007324219
    6. '>' → logprob: -9.254570007324219
    7. ' <' → logprob: -11.879570007324219
    8. ')' → logprob: -13.379570007324219
    9. '<' → logprob: -13.504570007324219
    10. ' ' → logprob: -13.504570007324219

Token 926: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00975833274424076
    2. ' ' → logprob: -4.634758472442627
    3. '1' → logprob: -13.009757995605469
    4. '   ' → logprob: -16.38475799560547
    5. '<|end|>' → logprob: -17.13475799560547
    6. '  ' → logprob: -18.38475799560547
    7. '=' → logprob: -19.13475799560547
    8. ' ' → logprob: -19.13475799560547
    9. '    ' → logprob: -19.13475799560547
    10. ',' → logprob: -19.50975799560547

Token 927: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00014215784904081374
    2. ' ' → logprob: -8.875142097473145
    3. '1' → logprob: -13.000142097473145
    4. '۰' → logprob: -17.87514305114746
    5. '   ' → logprob: -17.93764305114746
    6. '<|end|>' → logprob: -18.06264305114746
    7. '  ' → logprob: -18.62514305114746
    8. 'zero' → logprob: -18.68764305114746
    9. '=' → logprob: -19.00014305114746
    10. '.' → logprob: -19.06264305114746

Token 928: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.014457876794040203
    2. ':
' → logprob: -4.389457702636719
    3. ':return' → logprob: -6.389457702636719
    4. ' or' → logprob: -8.639457702636719
    5. '           ' → logprob: -9.889457702636719
    6. '       ' → logprob: -10.514457702636719
    7. ':
' → logprob: -13.139457702636719
    8. ' :' → logprob: -13.264457702636719
    9. '   ' → logprob: -13.264457702636719
    10. ' and' → logprob: -13.389457702636719

Token 929: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.008595899678766727
    2. ':' → logprob: -5.133595943450928
    3. ':
' → logprob: -6.508595943450928
    4. ':return' → logprob: -7.883595943450928
    5. '
' → logprob: -8.25859546661377
    6. ' return' → logprob: -8.38359546661377
    7. 'return' → logprob: -8.63359546661377
    8. '       ' → logprob: -10.75859546661377
    9. '		' → logprob: -10.75859546661377
    10. '               ' → logprob: -10.88359546661377

Token 930: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.4101356565952301
    2. '           ' → logprob: -1.1601356267929077
    3. ' return' → logprob: -3.7851357460021973
    4. '	return' → logprob: -8.410135269165039
    5. '   ' → logprob: -10.785135269165039
    6. '		' → logprob: -11.285135269165039
    7. '{return' → logprob: -11.410135269165039
    8. ':return' → logprob: -12.160135269165039
    9. '	       ' → logprob: -12.410135269165039
    10. '       ' → logprob: -12.410135269165039

Token 931: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -9.209963900502771e-05
    2. 'float' → logprob: -9.500092506408691
    3. ' None' → logprob: -11.000092506408691
    4. '   ' → logprob: -15.625092506408691
    5. '           ' → logprob: -15.750092506408691
    6. '0' → logprob: -15.875092506408691
    7. '       ' → logprob: -17.250091552734375
    8. '
' → logprob: -17.500091552734375
    9. '               ' → logprob: -17.875091552734375
    10. '                   ' → logprob: -18.500091552734375

Token 932: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008407127112150192
    2. '        
' → logprob: -5.383407115936279
    3. '
' → logprob: -7.008407115936279
    4. '\t' → logprob: -7.758407115936279
    5. '<|end|>' → logprob: -7.883407115936279
    6. ' 
' → logprob: -7.883407115936279
    7. '+' → logprob: -8.383407592773438
    8. '	' → logprob: -8.508407592773438
    9. ')' → logprob: -8.883407592773438
    10. 'return' → logprob: -9.008407592773438

Token 933: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00271618808619678
    2. '        
' → logprob: -6.377716064453125
    3. '        ' → logprob: -8.627716064453125
    4. '	' → logprob: -8.877716064453125
    5. ')' → logprob: -9.002716064453125
    6. ' 
' → logprob: -9.127716064453125
    7. '.' → logprob: -9.627716064453125
    8. ' ' → logprob: -9.627716064453125
    9. '  
' → logprob: -10.502716064453125
    10. 'return' → logprob: -10.502716064453125

Token 934: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01783534325659275
    2. ' return' → logprob: -4.2678351402282715
    3. 'return' → logprob: -5.6428351402282715
    4. '        
' → logprob: -10.39283561706543
    5. '
' → logprob: -10.76783561706543
    6. ' ' → logprob: -11.01783561706543
    7. '	' → logprob: -11.14283561706543
    8. '   ' → logprob: -11.64283561706543
    9. ',' → logprob: -12.39283561706543
    10. '	return' → logprob: -12.76783561706543

Token 935: ' The' (ID: 623)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.023642580956220627
    2. '       ' → logprob: -4.023642539978027
    3. 'expected' → logprob: -5.273642539978027
    4. 'result' → logprob: -8.023642539978027
    5. ' return' → logprob: -11.648642539978027
    6. 'exp' → logprob: -12.023642539978027
    7. 'expect' → logprob: -12.273642539978027
    8. 'mean' → logprob: -13.148642539978027
    9. 'res' → logprob: -14.023642539978027
    10. '   ' → logprob: -14.273642539978027

Token 936: ' step' (ID: 5983)
  Prédit: 'expected'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'expected' → logprob: -0.38629263639450073
    2. 'return' → logprob: -1.5112926959991455
    3. 'result' → logprob: -2.5112926959991455
    4. ' expected' → logprob: -4.636292457580566
    5. ' return' → logprob: -5.261292457580566
    6. ' result' → logprob: -6.011292457580566
    7. '   ' → logprob: -7.761292457580566
    8. 'res' → logprob: -7.886292457580566
    9. '_expected' → logprob: -9.011292457580566
    10. 'answer' → logprob: -9.386292457580566

Token 937: ' is' (ID: 382)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.9145061373710632
    2. 'size' → logprob: -1.164506196975708
    3. '_size' → logprob: -2.664506196975708
    4. 'length' → logprob: -2.914506196975708
    5. '_sizes' → logprob: -3.289506196975708
    6. 'sizes' → logprob: -3.414506196975708
    7. ' size' → logprob: -3.539506196975708
    8. '_length' → logprob: -4.289505958557129
    9. '_' → logprob: -4.789505958557129
    10. '_lengths' → logprob: -5.039505958557129

Token 938: ' always' (ID: 3324)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.3937547504901886
    2. 'self' → logprob: -1.2687547206878662
    3. ' abs' → logprob: -3.643754720687866
    4. 'abs' → logprob: -4.018754959106445
    5. '       ' → logprob: -10.143754959106445
    6. '    ' → logprob: -10.268754959106445
    7. '        ' → logprob: -10.518754959106445
    8. ' ' → logprob: -11.268754959106445
    9. '(self' → logprob: -11.393754959106445
    10. '   ' → logprob: -11.893754959106445

Token 939: ' positive' (ID: 8841)
  Prédit: 'positive'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'positive' → logprob: -0.3772762715816498
    2. ' positive' → logprob: -1.3772763013839722
    3. 'self' → logprob: -4.502276420593262
    4. ' self' → logprob: -4.502276420593262
    5. 'tow' → logprob: -4.752276420593262
    6. ' in' → logprob: -5.002276420593262
    7. 'in' → logprob: -5.502276420593262
    8. ' towards' → logprob: -5.502276420593262
    9. '1' → logprob: -5.627276420593262
    10. '>' → logprob: -6.127276420593262

Token 940: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07912254333496094
    2. '.' → logprob: -3.329122543334961
    3. ',' → logprob: -3.829122543334961
    4. ' return' → logprob: -5.329122543334961
    5. '<|end|>' → logprob: -5.329122543334961
    6. '        
' → logprob: -5.829122543334961
    7. '
' → logprob: -6.204122543334961
    8. 'return' → logprob: -6.829122543334961
    9. '.
' → logprob: -8.079122543334961
    10. '        ' → logprob: -8.079122543334961

Token 941: ' since' (ID: 3630)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5606491565704346
    2. ' return' → logprob: -0.9356491565704346
    3. 'return' → logprob: -4.3106489181518555
    4. ' ' → logprob: -4.4356489181518555
    5. ' so' → logprob: -5.3106489181518555
    6. '	' → logprob: -5.9356489181518555
    7. '        ' → logprob: -6.9356489181518555
    8. ' ' → logprob: -7.0606489181518555
    9. '	return' → logprob: -7.4356489181518555
    10. '           ' → logprob: -8.185648918151855

Token 942: ' sum' (ID: 4215)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.13768978416919708
    2. ' self' → logprob: -2.3876898288726807
    3. 'True' → logprob: -5.012689590454102
    4. 's' → logprob: -5.262689590454102
    5. 'the' → logprob: -5.512689590454102
    6. ' s' → logprob: -5.512689590454102
    7. ' the' → logprob: -5.512689590454102
    8. 'mean' → logprob: -5.762689590454102
    9. ' True' → logprob: -5.887689590454102
    10. '1' → logprob: -6.262689590454102

Token 943: ' of' (ID: 328)
  Prédit: 'of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'of' → logprob: -1.4038426876068115
    2. 'from' → logprob: -1.5288426876068115
    3. ' of' → logprob: -2.0288426876068115
    4. '=' → logprob: -2.4038426876068115
    5. 'range' → logprob: -2.5288426876068115
    6. '(range' → logprob: -2.5288426876068115
    7. '(s' → logprob: -2.6538426876068115
    8. 's' → logprob: -4.153842926025391
    9. ' range' → logprob: -4.528842926025391
    10. ' in' → logprob: -4.903842926025391

Token 944: ' positive' (ID: 8841)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.5626953840255737
    2. 'self' → logprob: -0.9376953840255737
    3. 'positive' → logprob: -4.187695503234863
    4. '1' → logprob: -4.312695503234863
    5. ' K' → logprob: -5.562695503234863
    6. 'inte' → logprob: -6.562695503234863
    7. 'tokens' → logprob: -7.062695503234863
    8. ' self' → logprob: -7.187695503234863
    9. 'numbers' → logprob: -7.187695503234863
    10. 'range' → logprob: -7.687695503234863

Token 945: ' integers' (ID: 54912)
  Prédit: ' integers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' integers' → logprob: -0.23241464793682098
    2. 'inte' → logprob: -1.9824146032333374
    3. ' numbers' → logprob: -2.982414722442627
    4. 'numbers' → logprob: -5.232414722442627
    5. '1' → logprob: -5.857414722442627
    6. 's' → logprob: -6.107414722442627
    7. 'ints' → logprob: -6.232414722442627
    8. ' steps' → logprob: -6.232414722442627
    9. ' values' → logprob: -6.857414722442627
    10. 'steps' → logprob: -7.357414722442627

Token 946: ' between' (ID: 2870)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4250204265117645
    2. ',' → logprob: -2.050020456314087
    3. '.' → logprob: -2.550020456314087
    4. '<|end|>' → logprob: -2.550020456314087
    5. '        ' → logprob: -4.050020217895508
    6. ')' → logprob: -4.425020217895508
    7. '+' → logprob: -4.925020217895508
    8. ':' → logprob: -5.300020217895508
    9. ' and' → logprob: -5.675020217895508
    10. '<|end|>' → logprob: -5.925020217895508

Token 947: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004001226741820574
    2. 'K' → logprob: -5.879001140594482
    3. 'self' → logprob: -7.004001140594482
    4. ' ' → logprob: -8.75400161743164
    5. ' K' → logprob: -9.12900161743164
    6. ' self' → logprob: -12.12900161743164
    7. 's' → logprob: -12.75400161743164
    8. '0' → logprob: -12.75400161743164
    9. '```' → logprob: -13.00400161743164
    10. 'and' → logprob: -13.37900161743164

Token 948: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03108508139848709
    2. 'self' → logprob: -3.6560850143432617
    3. 'K' → logprob: -5.781085014343262
    4. 'and' → logprob: -6.531085014343262
    5. '0' → logprob: -9.656085014343262
    6. '(self' → logprob: -10.031085014343262
    7. ' self' → logprob: -10.281085014343262
    8. ' ' → logprob: -10.781085014343262
    9. ' and' → logprob: -11.031085014343262
    10. 's' → logprob: -11.781085014343262

Token 949: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.2521236538887024
    2. 'and' → logprob: -1.5021235942840576
    3. ' to' → logprob: -10.002123832702637
    4. '```' → logprob: -10.002123832702637
    5. ',' → logprob: -10.252123832702637
    6. '   ' → logprob: -10.377123832702637
    7. '+' → logprob: -11.377123832702637
    8. ' ' → logprob: -12.252123832702637
    9. '<|end|>' → logprob: -12.502123832702637
    10. ' ' → logprob: -12.752123832702637

Token 950: ' N' (ID: 478)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0008336895843967795
    2. 'N' → logprob: -7.375833511352539
    3. ' self' → logprob: -8.500833511352539
    4. '```' → logprob: -13.125833511352539
    5. '1' → logprob: -14.250833511352539
    6. '9' → logprob: -15.125833511352539
    7. '(self' → logprob: -15.250833511352539
    8. '...' → logprob: -16.50083351135254
    9. ' N' → logprob: -16.62583351135254
    10. '10' → logprob: -16.75083351135254

Token 951: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2910647690296173
    2. ':' → logprob: -2.791064739227295
    3. ',' → logprob: -2.916064739227295
    4. ')' → logprob: -3.041064739227295
    5. '<|end|>' → logprob: -3.041064739227295
    6. '.' → logprob: -4.416064739227295
    7. '        ' → logprob: -5.041064739227295
    8. '+' → logprob: -5.166064739227295
    9. ' and' → logprob: -5.541064739227295
    10. ' ' → logprob: -6.166064739227295

Token 952: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002000250155106187
    2. ',' → logprob: -7.002000331878662
    3. '.' → logprob: -7.877000331878662
    4. ')' → logprob: -8.126999855041504
    5. ' return' → logprob: -8.626999855041504
    6. 'return' → logprob: -9.376999855041504
    7. '        
' → logprob: -10.751999855041504
    8. ':' → logprob: -10.876999855041504
    9. ' and' → logprob: -11.126999855041504
    10. '*' → logprob: -11.126999855041504

Token 953: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2971535921096802
    2. 'return' → logprob: -1.6721535921096802
    3. ' return' → logprob: -2.6721534729003906
    4. ' ' → logprob: -10.42215347290039
    5. '        
' → logprob: -10.79715347290039
    6. 'eturn' → logprob: -11.17215347290039
    7. '
' → logprob: -11.79715347290039
    8. '	return' → logprob: -11.79715347290039
    9. '```' → logprob: -12.29715347290039
    10. 'mean' → logprob: -12.42215347290039

Token 954: ' So' (ID: 2632)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19347700476646423
    2. ' return' → logprob: -2.318476915359497
    3. 'return' → logprob: -2.568476915359497
    4. '
' → logprob: -8.193476676940918
    5. '        
' → logprob: -8.818476676940918
    6. '   ' → logprob: -9.443476676940918
    7. ' ' → logprob: -9.568476676940918
    8. '	return' → logprob: -9.818476676940918
    9. '	' → logprob: -10.318476676940918
    10. ' 
' → logprob: -11.068476676940918

Token 955: ' expected' (ID: 5930)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.05121467262506485
    2. '       ' → logprob: -3.6762146949768066
    3. ' return' → logprob: -3.8012146949768066
    4. 'expected' → logprob: -6.176214694976807
    5. 'result' → logprob: -8.801214218139648
    6. ' expected' → logprob: -10.926214218139648
    7. ' result' → logprob: -12.176214218139648
    8. 'expect' → logprob: -13.301214218139648
    9. '   ' → logprob: -13.426214218139648
    10. '	return' → logprob: -13.926214218139648

Token 956: '_j' (ID: 12021)
  Prédit: '_j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_j' → logprob: -0.0026667348574846983
    2. '_' → logprob: -6.37766695022583
    3. '_number' → logprob: -7.50266695022583
    4. '_step' → logprob: -8.252666473388672
    5. '_steps' → logprob: -9.627666473388672
    6. 'number' → logprob: -11.127666473388672
    7. '_jump' → logprob: -11.127666473388672
    8. 'j' → logprob: -11.252666473388672
    9. '_return' → logprob: -11.377666473388672
    10. '_value' → logprob: -12.002666473388672

Token 957: 'umps' (ID: 14938)
  Prédit: 'umps'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'umps' → logprob: -0.0003981376066803932
    2. '_steps' → logprob: -8.625397682189941
    3. 'ump' → logprob: -8.875397682189941
    4. '_' → logprob: -10.250397682189941
    5. 'steps' → logprob: -11.500397682189941
    6. '_j' → logprob: -12.750397682189941
    7. '_time' → logprob: -12.875397682189941
    8. '=' → logprob: -13.125397682189941
    9. ' =' → logprob: -13.375397682189941
    10. '   ' → logprob: -13.375397682189941

Token 958: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07890576124191284
    2. ' =' → logprob: -2.5789058208465576
    3. 'return' → logprob: -11.578906059265137
    4. ':' → logprob: -13.203906059265137
    5. ' is' → logprob: -13.453906059265137
    6. ')' → logprob: -14.328906059265137
    7. '   ' → logprob: -14.703906059265137
    8. ' return' → logprob: -14.828906059265137
    9. ',' → logprob: -14.953906059265137
    10. '.' → logprob: -15.203906059265137

Token 959: ' R' (ID: 460)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.2014177292585373
    2. 'self' → logprob: -1.7014176845550537
    3. '(self' → logprob: -13.576417922973633
    4. '       ' → logprob: -13.951417922973633
    5. ' float' → logprob: -14.201417922973633
    6. '   ' → logprob: -14.826417922973633
    7. ' return' → logprob: -14.826417922973633
    8. ' abs' → logprob: -15.576417922973633
    9. '	self' → logprob: -15.701417922973633
    10. 'float' → logprob: -15.701417922973633

Token 960: ' /' (ID: 820)
  Prédit: ' /'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.10170657187700272
    2. '/' → logprob: -2.3517065048217773
    3. ' *' → logprob: -6.851706504821777
    4. '*' → logprob: -7.976706504821777
    5. ' ' → logprob: -10.351706504821777
    6. '/self' → logprob: -10.976706504821777
    7. ' ' → logprob: -11.351706504821777
    8. '   ' → logprob: -11.351706504821777
    9. '	' → logprob: -12.101706504821777
    10. 'self' → logprob: -12.351706504821777

Token 961: ' mean' (ID: 4774)
  Prédit: 'mean'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mean' → logprob: -0.06196948140859604
    2. ' mean' → logprob: -2.811969518661499
    3. '(mean' → logprob: -13.686969757080078
    4. 'expected' → logprob: -15.311969757080078
    5. ' (' → logprob: -16.186969757080078
    6. '   ' → logprob: -16.436969757080078
    7. 'self' → logprob: -16.686969757080078
    8. ' expected' → logprob: -17.186969757080078
    9. 'means' → logprob: -17.186969757080078
    10. '(' → logprob: -17.311969757080078

Token 962: '_step' (ID: 27360)
  Prédit: '_step'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_step' → logprob: -0.00033558503491804004
    2. '_' → logprob: -9.000335693359375
    3. 'step' → logprob: -9.375335693359375
    4. 'Step' → logprob: -10.125335693359375
    5. ' _' → logprob: -10.500335693359375
    6. '_steps' → logprob: -11.000335693359375
    7. '_jump' → logprob: -11.625335693359375
    8. '_STEP' → logprob: -12.250335693359375
    9. '_length' → logprob: -12.500335693359375
    10. '\' → logprob: -13.125335693359375

Token 963: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1611964851617813
    2. '<|end|>' → logprob: -3.16119647026062
    3. 'return' → logprob: -4.161196708679199
    4. ' return' → logprob: -4.411196708679199
    5. '
' → logprob: -4.536196708679199
    6. '+' → logprob: -4.661196708679199
    7. '*' → logprob: -4.661196708679199
    8. '   ' → logprob: -4.911196708679199
    9. '\n' → logprob: -5.161196708679199
    10. '\t' → logprob: -5.161196708679199

Token 964: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00355968507938087
    2. '
' → logprob: -6.503559589385986
    3. '	' → logprob: -6.628559589385986
    4. 'return' → logprob: -7.628559589385986
    5. ' return' → logprob: -9.128560066223145
    6. '	return' → logprob: -9.628560066223145
    7. '   ' → logprob: -10.378560066223145
    8. '        
' → logprob: -11.003560066223145
    9. '		
' → logprob: -11.878560066223145
    10. '  
' → logprob: -12.628560066223145

Token 965: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4413416385650635
    2. 'return' (adapté à ' return') → logprob: -1.1913416385650635
    3. ' return' → logprob: -2.9413416385650635
    4. '   ' → logprob: -9.441341400146484
    5. '
' → logprob: -9.816341400146484
    6. '	return' → logprob: -10.691341400146484
    7. '        
' → logprob: -10.816341400146484
    8. '```' → logprob: -11.691341400146484
    9. ':return' → logprob: -12.566341400146484
    10. '<|end|>' → logprob: -12.691341400146484

Token 966: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.5759395956993103
    2. 'self' → logprob: -0.8259395956993103
    3. '(self' → logprob: -15.575939178466797
    4. ' ' → logprob: -17.450939178466797
    5. '	self' → logprob: -18.200939178466797
    6. '0' → logprob: -18.200939178466797
    7. '   ' → logprob: -18.825939178466797
    8. 'float' → logprob: -19.075939178466797
    9. ' float' → logprob: -19.450939178466797
    10. '1' → logprob: -19.575939178466797

Token 967: '.R' (ID: 3395)
  Prédit: '.R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.R' → logprob: -0.03192633390426636
    2. '.S' → logprob: -3.531926393508911
    3. ' .' → logprob: -6.406926155090332
    4. '.J' → logprob: -8.031926155090332
    5. '.' → logprob: -9.031926155090332
    6. 'R' → logprob: -10.906926155090332
    7. '._' → logprob: -12.031926155090332
    8. '.Q' → logprob: -12.031926155090332
    9. 'expected' → logprob: -12.531926155090332
    10. '```' → logprob: -12.906926155090332

Token 968: ' /' (ID: 820)
  Prédit: ' /'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.01825530268251896
    2. '/' → logprob: -4.018255233764648
    3. ' ' → logprob: -10.018255233764648
    4. ' *' → logprob: -10.268255233764648
    5. '*' → logprob: -11.518255233764648
    6. ' ' → logprob: -12.018255233764648
    7. '  ' → logprob: -12.393255233764648
    8. '```' → logprob: -13.643255233764648
    9. ' /
' → logprob: -13.768255233764648
    10. '_' → logprob: -14.018255233764648

Token 969: ' mean' (ID: 4774)
  Prédit: 'mean'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mean' → logprob: -7.493430894101039e-05
    2. ' mean' → logprob: -9.500075340270996
    3. '(mean' → logprob: -20.50007438659668
    4. 'means' → logprob: -21.37507438659668
    5. '_mean' → logprob: -22.25007438659668
    6. '.mean' → logprob: -22.75007438659668
    7. 'me' → logprob: -23.50007438659668
    8. 'm' → logprob: -24.00007438659668
    9. '```' → logprob: -24.12507438659668
    10. 'float' → logprob: -24.37507438659668

Token 970: '_step' (ID: 27360)
  Prédit: '_step'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_step' → logprob: -0.00013250234769657254
    2. '_' → logprob: -9.12513256072998
    3. ' _' → logprob: -11.12513256072998
    4. '_line' → logprob: -13.12513256072998
    5. '_s' → logprob: -13.87513256072998
    6. '_steps' → logprob: -13.87513256072998
    7. '._' → logprob: -14.12513256072998
    8. '_STEP' → logprob: -14.12513256072998
    9. 'step' → logprob: -14.37513256072998
    10. '_
' → logprob: -14.37513256072998

Token 971: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 972: 'class' (ID: 1444)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 973: ' Output' (ID: 18315)
  Prédit: 'Solution'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Solution' → logprob: -0.9700955748558044
    2. 'Solver' → logprob: -0.9700955748558044
    3. 'Main' → logprob: -2.595095634460449
    4. 'Runner' → logprob: -3.220095634460449
    5. 'main' → logprob: -3.345095634460449
    6. 'Std' → logprob: -3.970095634460449
    7. 'Test' → logprob: -4.220095634460449
    8. 'Jump' → logprob: -4.595095634460449
    9. 'def' → logprob: -4.845095634460449
    10. 'Probability' → logprob: -4.970095634460449

Token 974: 'Formatter' (ID: 22956)
  Prédit: 'Writer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Writer' → logprob: -0.0616365410387516
    2. 'Formatter' → logprob: -3.061636447906494
    3. 'Handler' → logprob: -4.936636447906494
    4. 'ter' → logprob: -5.811636447906494
    5. 'Printer' → logprob: -6.561636447906494
    6. 'Parser' → logprob: -7.186636447906494
    7. 'Generator' → logprob: -8.311636924743652
    8. 'Builder' → logprob: -8.811636924743652
    9. 'Processor' → logprob: -10.061636924743652
    10. ':' → logprob: -10.061636924743652

Token 975: '(' (ID: 7)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00020616286201402545
    2. ':
' → logprob: -8.750205993652344
    3. '(' → logprob: -11.125205993652344
    4. '():' → logprob: -11.625205993652344
    5. '):' → logprob: -12.375205993652344
    6. ' :' → logprob: -12.375205993652344
    7. '```' → logprob: -12.375205993652344
    8. '(Output' → logprob: -12.875205993652344
    9. ':def' → logprob: -12.875205993652344
    10. '<|end|>' → logprob: -13.375205993652344

Token 976: 'ABC' (ID: 44197)
  Prédit: 'ABC'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ABC' → logprob: -0.01227451954036951
    2. '):' → logprob: -4.637274742126465
    3. ')' → logprob: -6.387274742126465
    4. '):
' → logprob: -7.262274742126465
    5. 'object' → logprob: -9.887274742126465
    6. ' ABC' → logprob: -10.262274742126465
    7. ':' → logprob: -11.637274742126465
    8. 'abc' → logprob: -11.637274742126465
    9. '```' → logprob: -11.637274742126465
    10. '(' → logprob: -11.762274742126465

Token 977: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.26155978441238403
    2. '):
' → logprob: -1.6365597248077393
    3. ':' → logprob: -3.3865597248077393
    4. ')' → logprob: -7.386559963226318
    5. ':
' → logprob: -7.761559963226318
    6. '   ' → logprob: -8.38655948638916
    7. '(' → logprob: -9.51155948638916
    8. '():' → logprob: -9.63655948638916
    9. '```' → logprob: -9.63655948638916
    10. '<|end|>' → logprob: -10.26155948638916

Token 978: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0011403346434235573
    2. ':' → logprob: -7.126140117645264
    3. 'class' → logprob: -9.126140594482422
    4. '<|end|>' → logprob: -9.126140594482422
    5. '```' → logprob: -10.251140594482422
    6. '
' → logprob: -10.876140594482422
    7. ':
' → logprob: -11.126140594482422
    8. '  ' → logprob: -11.251140594482422
    9. '[' → logprob: -12.001140594482422
    10. ' ' → logprob: -12.376140594482422

Token 979: ' @' (ID: 759)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19946706295013428
    2. 'def' → logprob: -2.199467182159424
    3. '@' (adapté à ' @') → logprob: -2.699467182159424
    4. ' @' → logprob: -6.699467182159424
    5. ' def' → logprob: -7.074467182159424
    6. 'class' → logprob: -7.574467182159424
    7. 'abstract' → logprob: -9.449466705322266
    8. '
' → logprob: -10.449466705322266
    9. '	def' → logprob: -11.824466705322266
    10. '```' → logprob: -11.824466705322266

Token 980: 'abstract' (ID: 31332)
  Prédit: 'abstract'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abstract' → logprob: -1.9361264946837764e-07
    2. 'staticmethod' → logprob: -16.125
    3. 'abc' → logprob: -17.25
    4. ' abstract' → logprob: -18.25
    5. '.abstract' → logprob: -20.5
    6. 'ab' → logprob: -21.125
    7. 'property' → logprob: -21.5
    8. 'classmethod' → logprob: -21.75
    9. '```' → logprob: -22.375
    10. 'abs' → logprob: -23.25

Token 981: 'method' (ID: 8697)
  Prédit: 'method'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'method' → logprob: -0.00014764121442567557
    2. '_method' → logprob: -9.500147819519043
    3. 'classmethod' → logprob: -10.375147819519043
    4. 'def' → logprob: -10.625147819519043
    5. ' method' → logprob: -11.500147819519043
    6. 'Method' → logprob: -12.875147819519043
    7. 'staticmethod' → logprob: -13.500147819519043
    8. 'class' → logprob: -13.750147819519043
    9. 'ethod' → logprob: -14.375147819519043
    10. '.method' → logprob: -14.750147819519043

Token 982: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.010763171128928661
    2. '   ' → logprob: -4.635763168334961
    3. ' def' → logprob: -7.385763168334961
    4. '
' → logprob: -8.510763168334961
    5. '	def' → logprob: -9.885763168334961
    6. 'class' → logprob: -10.135763168334961
    7. '```' → logprob: -10.135763168334961
    8. 'method' → logprob: -10.510763168334961
    9. 'classmethod' → logprob: -10.885763168334961
    10. '    
' → logprob: -12.510763168334961

Token 983: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.03817908838391304
    2. '   ' → logprob: -3.7881791591644287
    3. 'class' → logprob: -4.28817892074585
    4. 'method' → logprob: -7.53817892074585
    5. 'classmethod' → logprob: -8.038179397583008
    6. ' def' → logprob: -8.788179397583008
    7. '```' → logprob: -10.288179397583008
    8. '	def' → logprob: -10.413179397583008
    9. 'staticmethod' → logprob: -11.663179397583008
    10. '  ' → logprob: -12.538179397583008

Token 984: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0390549972653389
    2. 'method' → logprob: -4.039054870605469
    3. 'staticmethod' → logprob: -4.539054870605469
    4. 'classmethod' → logprob: -4.789054870605469
    5. 'abstract' → logprob: -6.914054870605469
    6. 'class' → logprob: -7.914054870605469
    7. 'property' → logprob: -8.414054870605469
    8. 'abc' → logprob: -9.539054870605469
    9. ' def' → logprob: -10.664054870605469
    10. '```' → logprob: -13.414054870605469

Token 985: ' format' (ID: 6011)
  Prédit: 'format'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'format' → logprob: -0.00020377879263833165
    2. ' format' → logprob: -8.500204086303711
    3. 'print' → logprob: -15.500204086303711
    4. 'write' → logprob: -16.87520408630371
    5. '_format' → logprob: -18.50020408630371
    6. 'output' → logprob: -18.87520408630371
    7. '	format' → logprob: -19.25020408630371
    8. 'render' → logprob: -20.00020408630371
    9. '.format' → logprob: -20.25020408630371
    10. 'display' → logprob: -20.25020408630371

Token 986: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.004679799545556307
    2. '(' → logprob: -5.3796796798706055
    3. 'self' → logprob: -10.129679679870605
    4. ' (' → logprob: -11.629679679870605
    5. '(
' → logprob: -12.754679679870605
    6. '(s' → logprob: -13.004679679870605
    7. ')(' → logprob: -13.879679679870605
    8. 'def' → logprob: -14.004679679870605
    9. '_output' → logprob: -14.379679679870605
    10. ')' → logprob: -14.504679679870605

Token 987: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.45155641436576843
    2. ')' → logprob: -1.2015564441680908
    3. 'self' → logprob: -3.076556444168091
    4. ')(' → logprob: -4.826556205749512
    5. '):' → logprob: -5.326556205749512
    6. '_result' → logprob: -6.201556205749512
    7. '):
' → logprob: -7.826556205749512
    8. 'result' → logprob: -8.076556205749512
    9. '_output' → logprob: -8.076556205749512
    10. '(' → logprob: -9.201556205749512

Token 988: ' value' (ID: 1432)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.13605749607086182
    2. 'value' → logprob: -2.3860573768615723
    3. 'expected' → logprob: -3.3860573768615723
    4. ' result' → logprob: -6.761057376861572
    5. ' value' → logprob: -8.88605785369873
    6. 'answer' → logprob: -10.38605785369873
    7. ' expected' → logprob: -10.51105785369873
    8. 'output' → logprob: -11.26105785369873
    9. 'expect' → logprob: -12.76105785369873
    10. 'res' → logprob: -13.13605785369873

Token 989: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002809275174513459
    2. ')' → logprob: -5.877809047698975
    3. '   ' → logprob: -13.627809524536133
    4. ' :' → logprob: -13.877809524536133
    5. ' )' → logprob: -14.002809524536133
    6. '):' → logprob: -14.377809524536133
    7. 'Optional' → logprob: -15.502809524536133
    8. '_optional' → logprob: -15.627809524536133
    9. '```' → logprob: -16.252809524536133
    10. '1' → logprob: -17.252809524536133

Token 990: ' Optional' (ID: 19351)
  Prédit: 'Optional'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Optional' → logprob: -0.00032151900813914835
    2. ' Optional' → logprob: -8.750321388244629
    3. 'float' → logprob: -8.750321388244629
    4. ')' → logprob: -12.500321388244629
    5. '	Optional' → logprob: -14.875321388244629
    6. 'optional' → logprob: -15.375321388244629
    7. 'object' → logprob: -15.375321388244629
    8. '(Optional' → logprob: -15.750321388244629
    9. '_optional' → logprob: -17.750322341918945
    10. '   ' → logprob: -18.375322341918945

Token 991: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -7.703443770878948e-06
    2. 'float' → logprob: -11.875007629394531
    3. '=float' → logprob: -15.500007629394531
    4. ')' → logprob: -15.625007629394531
    5. '```' → logprob: -16.50000762939453
    6. ',float' → logprob: -16.62500762939453
    7. ' float' → logprob: -17.12500762939453
    8. '[
' → logprob: -17.37500762939453
    9. '[int' → logprob: -17.62500762939453
    10. '<float' → logprob: -17.75000762939453

Token 992: 'float' (ID: 7829)
  Prédit: 'float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -1.3856492842023727e-06
    2. ' float' → logprob: -13.875000953674316
    3. '[' → logprob: -16.375001907348633
    4. 'flo' → logprob: -16.500001907348633
    5. '=float' → logprob: -16.750001907348633
    6. '<float' → logprob: -17.875001907348633
    7. '(float' → logprob: -18.125001907348633
    8. '	float' → logprob: -18.500001907348633
    9. 'int' → logprob: -18.750001907348633
    10. ',float' → logprob: -19.000001907348633

Token 993: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006717505399137735
    2. '])' → logprob: -5.006717681884766
    3. '})' → logprob: -14.381717681884766
    4. ' )' → logprob: -14.506717681884766
    5. '`)' → logprob: -14.631717681884766
    6. '）' → logprob: -15.131717681884766
    7. '))' → logprob: -16.256717681884766
    8. '>)' → logprob: -16.506717681884766
    9. ']' → logprob: -16.756717681884766
    10. '   ' → logprob: -16.881717681884766

Token 994: ' ->' (ID: 2747)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05238847807049751
    2. '->' → logprob: -3.1773884296417236
    3. ')->' → logprob: -4.927388668060303
    4. ' ->' → logprob: -6.427388668060303
    5. '   ' → logprob: -8.302388191223145
    6. ':' → logprob: -9.802388191223145
    7. ',' → logprob: -10.177388191223145
    8. 'def' → logprob: -10.427388191223145
    9. '()->' → logprob: -10.677388191223145
    10. '```' → logprob: -11.052388191223145

Token 995: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.0009114635176956654
    2. ' str' → logprob: -7.000911235809326
    3. '[str' → logprob: -17.125911712646484
    4. '	str' → logprob: -19.375911712646484
    5. 'string' → logprob: -20.625911712646484
    6. '(str' → logprob: -21.500911712646484
    7. '   ' → logprob: -21.500911712646484
    8. ' ' → logprob: -22.125911712646484
    9. 'stri' → logprob: -22.500911712646484
    10. 'Str' → logprob: -23.250911712646484

Token 996: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.14987963438034058
    2. '   ' → logprob: -2.6498796939849854
    3. ':
' → logprob: -3.1498796939849854
    4. '<|end|>' → logprob: -4.024879455566406
    5. '):' → logprob: -6.274879455566406
    6. ':return' → logprob: -6.649879455566406
    7. '):
' → logprob: -7.024879455566406
    8. '<|end|>' → logprob: -7.649879455566406
    9. '       ' → logprob: -7.774879455566406
    10. ':def' → logprob: -7.899879455566406

Token 997: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002582081826403737
    2. '       ' → logprob: -6.50258207321167
    3. '    
' → logprob: -7.87758207321167
    4. '
' → logprob: -8.252582550048828
    5. '    ' → logprob: -8.752582550048828
    6. '<|end|>' → logprob: -9.252582550048828
    7. '```' → logprob: -9.502582550048828
    8. ' 
' → logprob: -9.752582550048828
    9. '  ' → logprob: -12.002582550048828
    10. '   
' → logprob: -12.002582550048828

Token 998: ' pass' (ID: 1853)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01906672678887844
    2. '   ' → logprob: -4.01906681060791
    3. ' pass' → logprob: -7.14406681060791
    4. '    ' → logprob: -9.89406681060791
    5. 'pass' (adapté à ' pass') → logprob: -9.89406681060791
    6. 'def' → logprob: -11.64406681060791
    7. '     ' → logprob: -12.26906681060791
    8. '      ' → logprob: -12.39406681060791
    9. '        ' → logprob: -13.26906681060791
    10. '  ' → logprob: -13.51906681060791

Token 999: '

' (ID: 279)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.00023977462842594832
    2. '
' → logprob: -8.500239372253418
    3. '   ' → logprob: -11.250239372253418
    4. ' class' → logprob: -11.500239372253418
    5. '```' → logprob: -11.500239372253418
    6. '    
' → logprob: -13.250239372253418
    7. ' 
' → logprob: -14.750239372253418
    8. '<|end|>' → logprob: -15.000239372253418
    9. '<class' → logprob: -15.500239372253418
    10. '  
' → logprob: -16.375240325927734

Token 1000: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: 0.0
    2. '```' → logprob: -17.125
    3. ' class' → logprob: -17.25
    4. '<class' → logprob: -18.0
    5. '
' → logprob: -18.375
    6. '"class' → logprob: -19.125
    7. 'import' → logprob: -19.75
    8. '   ' → logprob: -20.875
    9. '<|end|>' → logprob: -20.875
    10. '1' → logprob: -21.375

Token 1001: ' Console' (ID: 11404)
  Prédit: 'Float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Float' → logprob: -0.4823162257671356
    2. 'Std' → logprob: -1.232316255569458
    3. 'Decimal' → logprob: -2.982316255569458
    4. 'Simple' → logprob: -4.232316017150879
    5. 'Plain' → logprob: -4.982316017150879
    6. 'Default' → logprob: -5.232316017150879
    7. 'Fixed' → logprob: -5.357316017150879
    8. 'Probability' → logprob: -5.982316017150879
    9. 'Result' → logprob: -6.107316017150879
    10. 'Console' → logprob: -6.107316017150879

Token 1002: 'Output' (ID: 6310)
  Prédit: 'Output'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Output' → logprob: -1.6240566083070007e-06
    2. '.Output' → logprob: -14.625001907348633
    3. 'Writer' → logprob: -15.250001907348633
    4. 'Input' → logprob: -15.625001907348633
    5. '(Output' → logprob: -15.625001907348633
    6. 'Formatter' → logprob: -16.125001907348633
    7. 'Printer' → logprob: -16.250001907348633
    8. ' Output' → logprob: -16.250001907348633
    9. '	Output' → logprob: -16.625001907348633
    10. '_OUTPUT' → logprob: -16.750001907348633

Token 1003: 'Formatter' (ID: 22956)
  Prédit: 'Formatter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Formatter' → logprob: -2.0219828002154827e-05
    2. 'Output' → logprob: -11.125020027160645
    3. 'Writer' → logprob: -13.250020027160645
    4. 'Format' → logprob: -13.250020027160645
    5. 'Printer' → logprob: -13.750020027160645
    6. 'formatter' → logprob: -14.750020027160645
    7. '_formatter' → logprob: -15.250020027160645
    8. 'Renderer' → logprob: -16.12502098083496
    9. 'Presenter' → logprob: -17.00002098083496
    10. 'Appender' → logprob: -17.12502098083496

Token 1004: '(Output' (ID: 132866)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.009734011255204678
    2. ':
' → logprob: -5.509734153747559
    3. '(Output' → logprob: -5.759734153747559
    4. '(' → logprob: -6.509734153747559
    5. '(Console' → logprob: -7.134734153747559
    6. '):' → logprob: -9.634734153747559
    7. '():' → logprob: -9.759734153747559
    8. ' :' → logprob: -10.384734153747559
    9. '   ' → logprob: -11.259734153747559
    10. '(Abstract' → logprob: -11.384734153747559

Token 1005: 'Formatter' (ID: 22956)
  Prédit: 'Formatter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Formatter' → logprob: -3.531315314830863e-06
    2. 'Output' → logprob: -13.250003814697266
    3. 'formatter' → logprob: -13.875003814697266
    4. 'Format' → logprob: -14.125003814697266
    5. '_formatter' → logprob: -17.250003814697266
    6. 'Formatted' → logprob: -18.125003814697266
    7. 'Formatting' → logprob: -18.750003814697266
    8. ' Formatter' → logprob: -19.375003814697266
    9. ' formatter' → logprob: -20.875003814697266
    10. 'F' → logprob: -21.375003814697266

Token 1006: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.127054825425148
    2. '):' → logprob: -2.1270549297332764
    3. '   ' → logprob: -10.002055168151855
    4. ':' → logprob: -10.127055168151855
    5. '):
' → logprob: -10.627055168151855
    6. ':
' → logprob: -11.627055168151855
    7. ')' → logprob: -12.377055168151855
    8. '):

' → logprob: -13.627055168151855
    9. '():
' → logprob: -13.627055168151855
    10. '()):
' → logprob: -14.252055168151855

Token 1007: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0021645331289619207
    2. ' def' → logprob: -6.252164363861084
    3. 'def' → logprob: -8.377164840698242
    4. '	def' → logprob: -12.627164840698242
    5. '    ' → logprob: -14.127164840698242
    6. 'class' → logprob: -14.252164840698242
    7. '  ' → logprob: -14.752164840698242
    8. '[' → logprob: -15.502164840698242
    9. '```' → logprob: -15.877164840698242
    10. ' ' → logprob: -16.377164840698242

Token 1008: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -5.872261317563243e-05
    2. ' def' → logprob: -9.750059127807617
    3. '   ' → logprob: -15.000059127807617
    4. 'class' → logprob: -17.250059127807617
    5. '	def' → logprob: -21.250059127807617
    6. '```' → logprob: -24.250059127807617
    7. ' ' → logprob: -26.125059127807617
    8. '  ' → logprob: -26.750059127807617
    9. '
' → logprob: -26.750059127807617
    10. '_def' → logprob: -27.000059127807617

Token 1009: ' format' (ID: 6011)
  Prédit: 'format'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'format' → logprob: -0.0036596914287656546
    2. 'def' → logprob: -5.878659725189209
    3. ' format' → logprob: -7.128659725189209
    4. 'class' → logprob: -10.37865924835205
    5. ' def' → logprob: -11.75365924835205
    6. '```' → logprob: -11.87865924835205
    7. 'define' → logprob: -13.00365924835205
    8. 'form' → logprob: -13.12865924835205
    9. 'write' → logprob: -14.50365924835205
    10. 'f' → logprob: -14.50365924835205

Token 1010: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0005597044946625829
    2. '(' → logprob: -7.5005598068237305
    3. ' (' → logprob: -12.50055980682373
    4. 'self' → logprob: -13.12555980682373
    5. '(
' → logprob: -15.00055980682373
    6. '   ' → logprob: -15.25055980682373
    7. 'def' → logprob: -16.250558853149414
    8. ' ' → logprob: -16.250558853149414
    9. '```' → logprob: -16.625558853149414
    10. ' self' → logprob: -17.125558853149414

Token 1011: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.015305012464523315
    2. 'self' → logprob: -4.515305042266846
    3. '(self' → logprob: -5.515305042266846
    4. ' ,' → logprob: -9.390304565429688
    5. 'value' → logprob: -10.140304565429688
    6. ',self' → logprob: -10.140304565429688
    7. ')' → logprob: -10.890304565429688
    8. '   ' → logprob: -11.640304565429688
    9. ')(' → logprob: -11.765304565429688
    10. ',
' → logprob: -12.140304565429688

Token 1012: ' value' (ID: 1432)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00715103792026639
    2. 'value' → logprob: -5.007151126861572
    3. ' self' → logprob: -7.757151126861572
    4. ' value' → logprob: -11.757150650024414
    5. '(self' → logprob: -17.132150650024414
    6. 'def' → logprob: -18.007150650024414
    7. '```' → logprob: -18.382150650024414
    8. 'None' → logprob: -20.632150650024414
    9. '[self' → logprob: -20.632150650024414
    10. '       ' → logprob: -21.132150650024414

Token 1013: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.016846178099513054
    2. ')' → logprob: -4.391846179962158
    3. '(self' → logprob: -5.766846179962158
    4. 'self' → logprob: -6.766846179962158
    5. ':self' → logprob: -10.766845703125
    6. '```' → logprob: -12.016845703125
    7. '   ' → logprob: -12.266845703125
    8. '=' → logprob: -12.391845703125
    9. '[self' → logprob: -12.766845703125
    10. 'Optional' → logprob: -13.391845703125

Token 1014: ' Optional' (ID: 19351)
  Prédit: 'Optional'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Optional' → logprob: -0.027530251070857048
    2. ' Optional' → logprob: -3.7775301933288574
    3. 'self' → logprob: -5.527530193328857
    4. '(Optional' → logprob: -8.652530670166016
    5. ')' → logprob: -9.652530670166016
    6. ' self' → logprob: -9.777530670166016
    7. 'float' → logprob: -13.652530670166016
    8. '(self' → logprob: -14.152530670166016
    9. '_optional' → logprob: -14.652530670166016
    10. 'optional' → logprob: -14.777530670166016

Token 1015: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.8624639324116288e-06
    2. 'float' → logprob: -13.750001907348633
    3. '<float' → logprob: -15.375001907348633
    4. '=float' → logprob: -15.500001907348633
    5. ')' → logprob: -16.375001907348633
    6. '[
' → logprob: -16.875001907348633
    7. ' [' → logprob: -17.000001907348633
    8. '(float' → logprob: -17.125001907348633
    9. '[str' → logprob: -17.250001907348633
    10. '):' → logprob: -17.375001907348633

Token 1016: 'float' (ID: 7829)
  Prédit: 'float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -3.7697225252486533e-06
    2. ' float' → logprob: -12.500003814697266
    3. '```' → logprob: -18.000003814697266
    4. ')' → logprob: -18.875003814697266
    5. '[' → logprob: -19.500003814697266
    6. '(float' → logprob: -20.000003814697266
    7. '=float' → logprob: -20.375003814697266
    8. '<float' → logprob: -20.875003814697266
    9. 'flo' → logprob: -21.125003814697266
    10. ',float' → logprob: -21.375003814697266

Token 1017: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.6240566083070007e-06
    2. '`)' → logprob: -13.875001907348633
    3. '])' → logprob: -14.500001907348633
    4. ' )' → logprob: -16.125001907348633
    5. '})' → logprob: -17.500001907348633
    6. '）' → logprob: -18.500001907348633
    7. '   ' → logprob: -19.125001907348633
    8. '))' → logprob: -19.625001907348633
    9. '>)' → logprob: -19.625001907348633
    10. '")' → logprob: -20.375001907348633

Token 1018: ' ->' (ID: 2747)
  Prédit: '->'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '->' → logprob: -0.007010056171566248
    2. ':' → logprob: -5.257009983062744
    3. ' ->' → logprob: -6.757009983062744
    4. ')' → logprob: -8.257010459899902
    5. ')->' → logprob: -9.257010459899902
    6. '   ' → logprob: -9.507010459899902
    7. ':return' → logprob: -10.132010459899902
    8. '()->' → logprob: -10.257010459899902
    9. '       ' → logprob: -10.632010459899902
    10. ':
' → logprob: -11.007010459899902

Token 1019: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -5.633853652398102e-05
    2. ' str' → logprob: -10.000056266784668
    3. '(str' → logprob: -12.125056266784668
    4. '[str' → logprob: -12.375056266784668
    5. 'float' → logprob: -13.625056266784668
    6. '```' → logprob: -16.750057220458984
    7. 'Optional' → logprob: -17.750057220458984
    8. '=str' → logprob: -17.750057220458984
    9. '
' → logprob: -17.875057220458984
    10. 'string' → logprob: -18.875057220458984

Token 1020: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.31903010606765747
    2. ':' → logprob: -2.0690300464630127
    3. '(self' → logprob: -2.5690300464630127
    4. '(' → logprob: -4.194030284881592
    5. ':return' → logprob: -4.319030284881592
    6. '```' → logprob: -4.444030284881592
    7. 'return' → logprob: -4.944030284881592
    8. ':
' → logprob: -5.194030284881592
    9. 'def' → logprob: -5.944030284881592
    10. '->' → logprob: -6.069030284881592

Token 1021: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011182100512087345
    2. ' if' → logprob: -4.5111823081970215
    3. 'if' → logprob: -9.136181831359863
    4. '   ' → logprob: -10.761181831359863
    5. ' return' → logprob: -12.886181831359863
    6. '```' → logprob: -13.636181831359863
    7. 'return' → logprob: -14.636181831359863
    8. '           ' → logprob: -15.136181831359863
    9. '	if' → logprob: -15.636181831359863
    10. '	' → logprob: -15.636181831359863

Token 1022: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.001203923486173153
    2. ' if' → logprob: -6.751204013824463
    3. '       ' → logprob: -10.501203536987305
    4. 'return' → logprob: -12.001203536987305
    5. '```' → logprob: -18.876203536987305
    6. ' return' → logprob: -19.126203536987305
    7. '	if' → logprob: -19.626203536987305
    8. '   ' → logprob: -19.876203536987305
    9. '           ' → logprob: -21.376203536987305
    10. 'If' → logprob: -21.626203536987305

Token 1023: ' value' (ID: 1432)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.0380416102707386
    2. ' value' → logprob: -3.288041591644287
    3. 'Value' → logprob: -15.788042068481445
    4. 'v' → logprob: -17.663042068481445
    5. 'alue' → logprob: -17.788042068481445
    6. '(value' → logprob: -17.913042068481445
    7. '$value' → logprob: -18.038042068481445
    8. '"value' → logprob: -18.038042068481445
    9. ')value' → logprob: -18.413042068481445
    10. ''value' → logprob: -19.288042068481445

Token 1024: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.07889066636562347
    2. 'is' → logprob: -2.578890562057495
    3. '==' → logprob: -14.953890800476074
    4. '	is' → logprob: -15.078890800476074
    5. ')is' → logprob: -16.078889846801758
    6. 'Is' → logprob: -17.453889846801758
    7. ' ==' → logprob: -17.703889846801758
    8. ')' → logprob: -17.703889846801758
    9. '=is' → logprob: -17.828889846801758
    10. '_is' → logprob: -18.203889846801758

Token 1025: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.0619683600962162
    2. ' None' → logprob: -2.8119683265686035
    3. ' not' → logprob: -14.561968803405762
    4. 'not' → logprob: -15.186968803405762
    5. '=None' → logprob: -17.436967849731445
    6. '_None' → logprob: -17.936967849731445
    7. '   ' → logprob: -18.436967849731445
    8. 'N' → logprob: -18.936967849731445
    9. '(None' → logprob: -18.936967849731445
    10. 'Not' → logprob: -18.936967849731445

Token 1026: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.35336601734161377
    2. ':' → logprob: -1.2283660173416138
    3. '           ' → logprob: -5.978365898132324
    4. ':return' → logprob: -6.603365898132324
    5. '       ' → logprob: -7.478365898132324
    6. 'return' → logprob: -8.103365898132324
    7. ' or' → logprob: -9.978365898132324
    8. ' return' → logprob: -10.853365898132324
    9. ',' → logprob: -10.978365898132324
    10. '   ' → logprob: -10.978365898132324

Token 1027: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.008130239322781563
    2. 'return' → logprob: -5.133130073547363
    3. ' return' → logprob: -6.133130073547363
    4. '          ' → logprob: -11.508130073547363
    5. '       ' → logprob: -12.508130073547363
    6. '            ' → logprob: -12.633130073547363
    7. '   ' → logprob: -12.758130073547363
    8. '		' → logprob: -13.258130073547363
    9. '	       ' → logprob: -13.633130073547363
    10. '         ' → logprob: -13.883130073547363

Token 1028: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -5.049755782238208e-05
    2. '           ' → logprob: -10.50005054473877
    3. ' return' → logprob: -11.00005054473877
    4. '       ' → logprob: -12.00005054473877
    5. '"' → logprob: -16.750049591064453
    6. '   ' → logprob: -18.000049591064453
    7. '	return' → logprob: -18.000049591064453
    8. ':return' → logprob: -18.125049591064453
    9. '```' → logprob: -18.125049591064453
    10. '{return' → logprob: -18.375049591064453

Token 1029: ' "-' (ID: 12746)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.038221992552280426
    2. '"-' → logprob: -3.913222074508667
    3. '"No' → logprob: -4.538221836090088
    4. ''' → logprob: -6.038221836090088
    5. '-' → logprob: -6.538221836090088
    6. ''im' → logprob: -7.163221836090088
    7. 'im' → logprob: -7.163221836090088
    8. 'Impossible' → logprob: -7.538221836090088
    9. ''-' → logprob: -8.163222312927246
    10. ' "' → logprob: -8.913222312927246

Token 1030: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. '-' → logprob: -16.625
    3. '.' → logprob: -16.625
    4. '"' → logprob: -17.0
    5. 'inf' → logprob: -17.125
    6. ')' → logprob: -17.625
    7. '")' → logprob: -17.625
    8. 'Infinity' → logprob: -17.75
    9. '0' → logprob: -17.875
    10. ':' → logprob: -17.875

Token 1031: '"
' (ID: 1092)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.007524527609348297
    2. '\n' → logprob: -5.007524490356445
    3. '"
' → logprob: -7.132524490356445
    4. '")' → logprob: -12.382524490356445
    5. '```' → logprob: -13.382524490356445
    6. '"\' → logprob: -13.757524490356445
    7. '.' → logprob: -14.257524490356445
    8. ''' → logprob: -14.507524490356445
    9. '"
' → logprob: -14.882524490356445
    10. '">' → logprob: -14.882524490356445

Token 1032: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006747855222783983
    2. '
' → logprob: -7.625674724578857
    3. '   ' → logprob: -10.250675201416016
    4. ' else' → logprob: -10.250675201416016
    5. 'return' → logprob: -10.250675201416016
    6. '        
' → logprob: -10.875675201416016
    7. '	' → logprob: -11.250675201416016
    8. 'else' → logprob: -11.375675201416016
    9. '<|end|>' → logprob: -11.750675201416016
    10. '\n' → logprob: -12.000675201416016

Token 1033: ' else' (ID: 1203)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.21281400322914124
    2. '       ' → logprob: -2.2128140926361084
    3. ' return' → logprob: -2.9628140926361084
    4. 'f' → logprob: -4.212813854217529
    5. ' f' → logprob: -4.712813854217529
    6. '{' → logprob: -5.087813854217529
    7. '"{' → logprob: -8.212814331054688
    8. '           ' → logprob: -8.712814331054688
    9. '{return' → logprob: -8.837814331054688
    10. '```' → logprob: -9.837814331054688

Token 1034: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3374730348587036
    2. ' f' → logprob: -1.4624730348587036
    3. '{' → logprob: -3.087472915649414
    4. 'f' → logprob: -5.212472915649414
    5. ' {' → logprob: -6.587472915649414
    6. '"{' → logprob: -6.962472915649414
    7. ':' → logprob: -7.462472915649414
    8. '(f' → logprob: -8.712472915649414
    9. ':
' → logprob: -8.962472915649414
    10. ' {:.' → logprob: -8.962472915649414

Token 1035: '           ' (ID: 352)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.31615814566612244
    2. ' f' → logprob: -1.3161581754684448
    3. '           ' → logprob: -6.066158294677734
    4. '"{' → logprob: -7.566158294677734
    5. '       ' → logprob: -10.566158294677734
    6. '{' → logprob: -11.441158294677734
    7. 'return' → logprob: -11.816158294677734
    8. ' "{' → logprob: -12.191158294677734
    9. '"' → logprob: -12.941158294677734
    10. '(f' → logprob: -14.316158294677734

Token 1036: ' return' (ID: 622)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.00033760786755010486
    2. 'return' (adapté à ' return') → logprob: -8.250337600708008
    3. ' f' → logprob: -9.750337600708008
    4. '"{' → logprob: -11.000337600708008
    5. '           ' → logprob: -14.125337600708008
    6. '       ' → logprob: -15.250337600708008
    7. '{' → logprob: -15.625337600708008
    8. 'format' → logprob: -15.750337600708008
    9. ' return' → logprob: -17.625337600708008
    10. '   ' → logprob: -19.000337600708008

Token 1037: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.3132871389389038
    2. ' f' → logprob: -1.3132871389389038
    3. '"{' → logprob: -10.688286781311035
    4. ' "{' → logprob: -13.813286781311035
    5. '{' → logprob: -13.938286781311035
    6. '"' → logprob: -14.438286781311035
    7. 'format' → logprob: -17.06328773498535
    8. ''{' → logprob: -17.18828773498535
    9. '(f' → logprob: -17.31328773498535
    10. '	f' → logprob: -17.81328773498535

Token 1038: '"{' (ID: 27510)
  Prédit: '"{'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"{' → logprob: -0.00013011827832087874
    2. '{' → logprob: -9.000129699707031
    3. ''{' → logprob: -12.000129699707031
    4. '"' → logprob: -15.500129699707031
    5. '("{' → logprob: -15.500129699707031
    6. 'f' → logprob: -16.12512969970703
    7. '"value' → logprob: -17.37512969970703
    8. '{"' → logprob: -19.12512969970703
    9. '{return' → logprob: -19.37512969970703
    10. '(f' → logprob: -19.50012969970703

Token 1039: 'value' (ID: 1594)
  Prédit: 'value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'value' → logprob: 0.0
    2. ' value' → logprob: -17.5
    3. 'round' → logprob: -20.125
    4. 'float' → logprob: -20.5
    5. '(value' → logprob: -21.0
    6. ''value' → logprob: -22.625
    7. '"value' → logprob: -23.25
    8. '{' → logprob: -23.5
    9. '	value' → logprob: -23.625
    10. '.value' → logprob: -23.875

Token 1040: ':.' (ID: 27474)
  Prédit: ':.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':.' → logprob: -1.9361264946837764e-07
    2. ' :.' → logprob: -15.75
    3. '.' → logprob: -19.625
    4. '}"' → logprob: -19.75
    5. '}' → logprob: -19.75
    6. ':f' → logprob: -20.0
    7. ' .' → logprob: -20.375
    8. ':' → logprob: -20.875
    9. ':e' → logprob: -21.125
    10. ':g' → logprob: -23.125

Token 1041: '9' (ID: 24)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.9950717687606812
    2. '9' → logprob: -0.9950717687606812
    3. '10' → logprob: -1.4950717687606812
    4. '7' → logprob: -3.8700718879699707
    5. '12' → logprob: -4.745071887969971
    6. '8' → logprob: -5.370071887969971
    7. '15' → logprob: -6.370071887969971
    8. '5' → logprob: -8.745071411132812
    9. '4' → logprob: -9.620071411132812
    10. '11' → logprob: -9.745071411132812

Token 1042: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -1.9361264946837764e-07
    2. 'g' → logprob: -16.0
    3. 'e' → logprob: -17.875
    4. '```' → logprob: -18.875
    5. '{' → logprob: -19.625
    6. ' f' → logprob: -20.625
    7. '}' → logprob: -21.0
    8. '
' → logprob: -21.125
    9. 'lf' → logprob: -21.25
    10. '6' → logprob: -21.375

Token 1043: '}"

' (ID: 103433)
  Prédit: '}"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}"' → logprob: -5.676981345459353e-06
    2. '}"
' → logprob: -12.375005722045898
    3. '}' → logprob: -13.750005722045898
    4. ' }' → logprob: -15.875005722045898
    5. '"' → logprob: -16.3750057220459
    6. ')"' → logprob: -16.8750057220459
    7. '}"

' → logprob: -17.3750057220459
    8. '"}' → logprob: -17.5000057220459
    9. '}}"' → logprob: -17.8750057220459
    10. '}")' → logprob: -18.0000057220459

Token 1044: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0904957577586174
    2. 'if' → logprob: -2.4654958248138428
    3. '```' → logprob: -7.340495586395264
    4. '<|end|>' → logprob: -7.340495586395264
    5. '
' → logprob: -8.840496063232422
    6. ' if' → logprob: -10.590496063232422
    7. 'import' → logprob: -10.715496063232422
    8. '  
' → logprob: -10.965496063232422
    9. '#' → logprob: -11.090496063232422
    10. '\' → logprob: -11.715496063232422

Token 1045: ' main' (ID: 2758)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.7753081917762756
    2. ' main' → logprob: -1.1503081321716309
    3. 'def' → logprob: -1.5253081321716309
    4. 'main' → logprob: -6.400308132171631
    5. '
' → logprob: -7.025308132171631
    6. 'if' → logprob: -7.150308132171631
    7. ' __' → logprob: -7.400308132171631
    8. ' if' → logprob: -7.650308132171631
    9. '__' → logprob: -8.400308609008789
    10. '_main' → logprob: -8.775308609008789

Token 1046: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -4.990154047845863e-05
    2. '():
' → logprob: -10.000049591064453
    3. ' ():' → logprob: -13.000049591064453
    4. '()' → logprob: -13.125049591064453
    5. '(' → logprob: -16.750049591064453
    6. '():
' → logprob: -17.375049591064453
    7. ':' → logprob: -17.750049591064453
    8. '().' → logprob: -18.125049591064453
    9. '()>' → logprob: -18.375049591064453
    10. '():

' → logprob: -18.500049591064453

Token 1047: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0036884360015392303
    2. ' parser' → logprob: -5.753688335418701
    3. 'parser' → logprob: -7.628688335418701
    4. '	parser' → logprob: -10.87868881225586
    5. '   ' → logprob: -12.50368881225586
    6. 'input' → logprob: -13.87868881225586
    7. ' input' → logprob: -15.75368881225586
    8. '(parser' → logprob: -15.75368881225586
    9. 'import' → logprob: -16.00368881225586
    10. '_parser' → logprob: -16.62868881225586

Token 1048: ' parser' (ID: 14216)
  Prédit: 'parser'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parser' (adapté à ' parser') → logprob: -0.063797727227211
    2. '   ' → logprob: -2.81379771232605
    3. ' parser' → logprob: -6.313797950744629
    4. 'S' → logprob: -11.563797950744629
    5. 'import' → logprob: -12.313797950744629
    6. '	parser' → logprob: -13.938797950744629
    7. 'stdin' → logprob: -14.188797950744629
    8. ' S' → logprob: -14.563797950744629
    9. 'input' → logprob: -14.688797950744629
    10. 'sys' → logprob: -15.563797950744629

Token 1049: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1807601898908615
    2. '=' → logprob: -1.805760145187378
    3. '()' → logprob: -7.305760383605957
    4. '.' → logprob: -9.430760383605957
    5. '   ' → logprob: -9.680760383605957
    6. '().' → logprob: -9.930760383605957
    7. ')' → logprob: -10.180760383605957
    8. ':' → logprob: -10.680760383605957
    9. '(' → logprob: -10.680760383605957
    10. '=sys' → logprob: -11.555760383605957

Token 1050: ' Std' (ID: 74505)
  Prédit: 'Std'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Std' → logprob: -4.961759259458631e-06
    2. ' Std' → logprob: -12.250004768371582
    3. 'Sys' → logprob: -15.750004768371582
    4. 'Standard' → logprob: -17.7500057220459
    5. '   ' → logprob: -18.0000057220459
    6. 'std' → logprob: -18.0000057220459
    7. '.Std' → logprob: -19.3750057220459
    8. ' ' → logprob: -20.5000057220459
    9. '  ' → logprob: -20.6250057220459
    10. '```' → logprob: -20.7500057220459

Token 1051: 'Input' (ID: 3275)
  Prédit: 'Input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Input' → logprob: 0.0
    2. 'input' → logprob: -21.375
    3. 'In' → logprob: -22.0
    4. '_input' → logprob: -22.5
    5. '	Input' → logprob: -22.5
    6. ' Input' → logprob: -22.625
    7. '```' → logprob: -23.0
    8. 'Inp' → logprob: -23.125
    9. 'Inputs' → logprob: -23.375
    10. '<Input' → logprob: -23.75

Token 1052: 'Parser' (ID: 9231)
  Prédit: 'Parser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Parser' → logprob: -1.9361264946837764e-07
    2. 'parser' → logprob: -16.375
    3. '_parser' → logprob: -19.25
    4. '.Parser' → logprob: -19.625
    5. '(Parser' → logprob: -20.375
    6. '-parser' → logprob: -20.75
    7. 'Parse' → logprob: -21.625
    8. ' Parser' → logprob: -22.0
    9. ' parser' → logprob: -22.0
    10. '   ' → logprob: -23.625

Token 1053: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.47536802291870117
    2. '()
' → logprob: -0.9753680229187012
    3. '   ' → logprob: -6.725368022918701
    4. '()\' → logprob: -10.85036849975586
    5. '()
' → logprob: -10.85036849975586
    6. '().' → logprob: -11.22536849975586
    7. '();' → logprob: -11.72536849975586
    8. '()

' → logprob: -11.97536849975586
    9. '
' → logprob: -11.97536849975586
    10. '()`' → logprob: -12.10036849975586

Token 1054: '   ' (ID: 271)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.4754871129989624
    2. '   ' → logprob: -0.9754871129989624
    3. ' S' → logprob: -6.600487232208252
    4. 's' → logprob: -10.350486755371094
    5. '	S' → logprob: -12.225486755371094
    6. '    
' → logprob: -12.350486755371094
    7. ',S' → logprob: -12.725486755371094
    8. '
' → logprob: -13.350486755371094
    9. '(S' → logprob: -14.100486755371094
    10. '```' → logprob: -14.475486755371094

Token 1055: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' (adapté à ' S') → logprob: -4.320199877838604e-07
    2. ' S' → logprob: -15.0
    3. '   ' → logprob: -17.875
    4. 's' → logprob: -19.625
    5. '    
' → logprob: -21.125
    6. '```' → logprob: -21.75
    7. '	S' → logprob: -21.875
    8. '(S' → logprob: -22.25
    9. '
' → logprob: -22.75
    10. 'try' → logprob: -23.125

Token 1056: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.016875598579645157
    2. ' =' → logprob: -4.641875743865967
    3. '=' → logprob: -5.516875743865967
    4. ',S' → logprob: -5.891875743865967
    5. ' ,' → logprob: -9.391875267028809
    6. '   ' → logprob: -9.766875267028809
    7. '_str' → logprob: -9.891875267028809
    8. ')' → logprob: -10.016875267028809
    9. '_,' → logprob: -10.266875267028809
    10. ',int' → logprob: -12.016875267028809

Token 1057: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.005233882926404476
    2. ' N' → logprob: -5.2552337646484375
    3. '   ' → logprob: -16.755233764648438
    4. ' ' → logprob: -18.005233764648438
    5. '  ' → logprob: -18.755233764648438
    6. '    ' → logprob: -19.005233764648438
    7. '	N' → logprob: -21.255233764648438
    8. '
' → logprob: -21.880233764648438
    9. '    
' → logprob: -22.505233764648438
    10. 'n' → logprob: -22.630233764648438

Token 1058: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00013238313840702176
    2. ' ,' → logprob: -9.00013256072998
    3. '=' → logprob: -11.75013256072998
    4. ',K' → logprob: -15.25013256072998
    5. '_,' → logprob: -15.37513256072998
    6. ' =' → logprob: -15.37513256072998
    7. '<|end|>' → logprob: -15.37513256072998
    8. '‌,' → logprob: -16.000131607055664
    9. ',S' → logprob: -17.375131607055664
    10. '   ' → logprob: -18.000131607055664

Token 1059: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -9.615255839889869e-05
    2. ' K' → logprob: -9.250096321105957
    3. ' ' → logprob: -19.87509536743164
    4. '   ' → logprob: -21.00009536743164
    5. '  ' → logprob: -23.12509536743164
    6. 'and' → logprob: -23.50009536743164
    7. '    ' → logprob: -24.25009536743164
    8. '	K' → logprob: -24.37509536743164
    9. '<|end|>' → logprob: -25.00009536743164
    10. ' ' → logprob: -25.25009536743164

Token 1060: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38687190413475037
    2. ' =' → logprob: -1.1368719339370728
    3. '   ' → logprob: -14.136872291564941
    4. ',' → logprob: -16.261871337890625
    5. '	' → logprob: -16.511871337890625
    6. ')' → logprob: -17.511871337890625
    7. ' ' → logprob: -17.511871337890625
    8. '    ' → logprob: -18.136871337890625
    9. '＝' → logprob: -18.386871337890625
    10. '=sys' → logprob: -18.386871337890625

Token 1061: ' parser' (ID: 14216)
  Prédit: 'parser'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parser' → logprob: -0.5759395956993103
    2. ' parser' → logprob: -0.8259395956993103
    3. '	parser' → logprob: -16.700939178466797
    4. '(parser' → logprob: -16.825939178466797
    5. 'parse' → logprob: -16.950939178466797
    6. 'Parser' → logprob: -17.825939178466797
    7. '_parser' → logprob: -19.700939178466797
    8. '.parser' → logprob: -19.950939178466797
    9. 'parsed' → logprob: -20.075939178466797
    10. 'par' → logprob: -20.075939178466797

Token 1062: '.parse' (ID: 7259)
  Prédit: '.parse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parse' → logprob: -0.00010247035970678553
    2. 'parse' → logprob: -9.250102043151855
    3. '.' → logprob: -12.125102043151855
    4. ' .' → logprob: -15.000102043151855
    5. '=parse' → logprob: -15.125102043151855
    6. '_parse' → logprob: -15.250102043151855
    7. ' parse' → logprob: -17.250102996826172
    8. '.Parse' → logprob: -17.375102996826172
    9. '	parse' → logprob: -18.250102996826172
    10. '   ' → logprob: -18.875102996826172

Token 1063: '()
' (ID: 1234)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0025844585616141558
    2. '   ' → logprob: -6.127584457397461
    3. '    
' → logprob: -7.877584457397461
    4. '<|end|>' → logprob: -11.752584457397461
    5. '	
' → logprob: -12.502584457397461
    6. '  
' → logprob: -13.002584457397461
    7. '
' → logprob: -13.127584457397461
    8. ' 
' → logprob: -13.502584457397461
    9. '   
' → logprob: -14.002584457397461
    10. '```' → logprob: -14.377584457397461

Token 1064: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008389982394874096
    2. 'model' → logprob: -5.008389949798584
    3. 'jump' → logprob: -7.008389949798584
    4. ' model' → logprob: -7.758389949798584
    5. 'jm' → logprob: -8.758390426635742
    6. ' jump' → logprob: -9.133390426635742
    7. '
' → logprob: -10.508390426635742
    8. ' jm' → logprob: -10.633390426635742
    9. '    
' → logprob: -11.508390426635742
    10. 'jmp' → logprob: -12.383390426635742

Token 1065: ' model' (ID: 2359)
  Prédit: 'model'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'model' (adapté à ' model') → logprob: -0.012495637871325016
    2. ' model' → logprob: -5.262495517730713
    3. 'jump' → logprob: -5.262495517730713
    4. '   ' → logprob: -6.512495517730713
    5. 'jm' → logprob: -7.887495517730713
    6. ' jump' → logprob: -9.012495994567871
    7. ' jm' → logprob: -9.887495994567871
    8. '
' → logprob: -12.137495994567871
    9. 'jmp' → logprob: -12.137495994567871
    10. '```' → logprob: -12.762495994567871

Token 1066: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0011705794604495168
    2. '=' → logprob: -6.751170635223389
    3. ' ' → logprob: -15.62617015838623
    4. ' =
' → logprob: -16.626171112060547
    5. ')' → logprob: -17.376171112060547
    6. '   ' → logprob: -17.376171112060547
    7. '.' → logprob: -17.501171112060547
    8. '=model' → logprob: -18.001171112060547
    9. ' ' → logprob: -18.376171112060547
    10. '  ' → logprob: -19.126171112060547

Token 1067: ' Jump' (ID: 51108)
  Prédit: 'Jump'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Jump' → logprob: -0.00033546582562848926
    2. ' Jump' → logprob: -8.000335693359375
    3. 'J' → logprob: -18.750335693359375
    4. 'Jaw' → logprob: -20.875335693359375
    5. 'Jet' → logprob: -22.000335693359375
    6. '	J' → logprob: -22.125335693359375
    7. '_jump' → logprob: -22.750335693359375
    8. ' jump' → logprob: -23.000335693359375
    9. ' ' → logprob: -23.250335693359375
    10. '   ' → logprob: -23.375335693359375

Token 1068: 'Model' (ID: 2239)
  Prédit: 'Model'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Model' → logprob: -1.9361264946837764e-07
    2. 'model' → logprob: -16.625
    3. '	Model' → logprob: -19.875
    4. '_Model' → logprob: -20.125
    5. '_model' → logprob: -20.375
    6. '```' → logprob: -20.625
    7. ' Model' → logprob: -21.0
    8. '<Model' → logprob: -21.375
    9. 'Jump' → logprob: -21.625
    10. '(Model' → logprob: -21.75

Token 1069: '(S' (ID: 6181)
  Prédit: '(S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(S' → logprob: -0.012244265526533127
    2. '(
' → logprob: -4.63724422454834
    3. '(' → logprob: -6.01224422454834
    4. '   ' → logprob: -10.38724422454834
    5. ' (' → logprob: -13.38724422454834
    6. 'S' → logprob: -13.38724422454834
    7. ',' → logprob: -14.63724422454834
    8. '(
' → logprob: -14.63724422454834
    9. '(s' → logprob: -15.01224422454834
    10. '((' → logprob: -15.26224422454834

Token 1070: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.5451681974809617e-05
    2. ',N' → logprob: -11.250015258789062
    3. ' ,' → logprob: -13.250015258789062
    4. ',
' → logprob: -14.250015258789062
    5. ',n' → logprob: -18.250015258789062
    6. '
' → logprob: -19.000015258789062
    7. ')' → logprob: -19.750015258789062
    8. 'N' → logprob: -20.000015258789062
    9. '‌,' → logprob: -20.125015258789062
    10. '```' → logprob: -20.250015258789062

Token 1071: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -1.5213274309644476e-05
    2. ' N' → logprob: -11.125015258789062
    3. '   ' → logprob: -14.875015258789062
    4. '
' → logprob: -20.250015258789062
    5. '```' → logprob: -20.625015258789062
    6. '    ' → logprob: -20.750015258789062
    7. '	N' → logprob: -21.000015258789062
    8. '       ' → logprob: -21.125015258789062
    9. '  ' → logprob: -21.250015258789062
    10. ' ' → logprob: -22.000015258789062

Token 1072: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0445127372804563e-05
    2. ',K' → logprob: -12.00001049041748
    3. ' ,' → logprob: -12.50001049041748
    4. ',
' → logprob: -14.87501049041748
    5. ')' → logprob: -18.000009536743164
    6. '   ' → logprob: -18.500009536743164
    7. '‌,' → logprob: -18.625009536743164
    8. '<|end|>' → logprob: -18.625009536743164
    9. ',k' → logprob: -19.125009536743164
    10. '),' → logprob: -19.750009536743164

Token 1073: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -1.676292231422849e-05
    2. ' K' → logprob: -11.000017166137695
    3. '   ' → logprob: -17.000017166137695
    4. '       ' → logprob: -20.000017166137695
    5. '	K' → logprob: -21.750017166137695
    6. '
' → logprob: -22.000017166137695
    7. '```' → logprob: -22.000017166137695
    8. '  ' → logprob: -22.375017166137695
    9. '    ' → logprob: -22.500017166137695
    10. ' ' → logprob: -22.625017166137695

Token 1074: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.010780387558043003
    2. ')
' → logprob: -4.635780334472656
    3. '   ' → logprob: -6.885780334472656
    4. ')
' → logprob: -14.010780334472656
    5. ' )' → logprob: -15.635780334472656
    6. '
' → logprob: -16.510780334472656
    7. ')

' → logprob: -16.635780334472656
    8. '),' → logprob: -16.760780334472656
    9. ' ' → logprob: -16.885780334472656
    10. ').' → logprob: -16.885780334472656

Token 1075: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07930833101272583
    2. 'result' → logprob: -2.579308271408081
    3. ' result' → logprob: -8.57930850982666
    4. '
' → logprob: -9.20430850982666
    5. 'value' → logprob: -9.32930850982666
    6. 'res' → logprob: -11.07930850982666
    7. '    
' → logprob: -11.45430850982666
    8. '```' → logprob: -11.95430850982666
    9. '	result' → logprob: -12.70430850982666
    10. 'output' → logprob: -13.20430850982666

Token 1076: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' (adapté à ' result') → logprob: -0.04228867590427399
    2. 'expected' → logprob: -3.2922887802124023
    3. 'res' → logprob: -5.542288780212402
    4. '   ' → logprob: -8.292288780212402
    5. ' result' → logprob: -10.417288780212402
    6. 'exp' → logprob: -10.917288780212402
    7. 'value' → logprob: -11.292288780212402
    8. 'expect' → logprob: -12.667288780212402
    9. ' expected' → logprob: -12.917288780212402
    10. 'ans' → logprob: -13.542288780212402

Token 1077: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10024042427539825
    2. '=' → logprob: -2.350240468978882
    3. '.' → logprob: -10.725240707397461
    4. ')' → logprob: -12.350240707397461
    5. '   ' → logprob: -12.850240707397461
    6. ',' → logprob: -13.975240707397461
    7. ' =
' → logprob: -14.225240707397461
    8. ' ' → logprob: -14.600240707397461
    9. ' =)' → logprob: -14.725240707397461
    10. '_' → logprob: -14.725240707397461

Token 1078: ' model' (ID: 2359)
  Prédit: 'model'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'model' → logprob: -0.01416350994259119
    2. ' model' → logprob: -4.264163494110107
    3. '(model' → logprob: -18.014163970947266
    4. '	model' → logprob: -18.639163970947266
    5. '   ' → logprob: -18.889163970947266
    6. 'mode' → logprob: -19.389163970947266
    7. '=model' → logprob: -19.514163970947266
    8. '$model' → logprob: -22.014163970947266
    9. ':model' → logprob: -22.514163970947266
    10. 'm' → logprob: -23.389163970947266

Token 1079: '.expected' (ID: 109296)
  Prédit: '.expected'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.expected' → logprob: -2.8802491215174086e-05
    2. 'expected' → logprob: -10.625028610229492
    3. ' .' → logprob: -13.000028610229492
    4. '.' → logprob: -13.250028610229492
    5. '
' → logprob: -15.750028610229492
    6. '	expected' → logprob: -16.125028610229492
    7. '(expected' → logprob: -16.875028610229492
    8. '.
' → logprob: -17.875028610229492
    9. '_expected' → logprob: -17.875028610229492
    10. '.expect' → logprob: -18.250028610229492

Token 1080: '_j' (ID: 12021)
  Prédit: '_j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_j' → logprob: -1.2664456789934775e-06
    2. '_' → logprob: -14.000000953674316
    3. 'j' → logprob: -15.125000953674316
    4. '_jump' → logprob: -16.625001907348633
    5. '_steps' → logprob: -17.875001907348633
    6. ')_' → logprob: -18.500001907348633
    7. '_x' → logprob: -18.500001907348633
    8. '_moves' → logprob: -19.000001907348633
    9. '_n' → logprob: -19.125001907348633
    10. '_y' → logprob: -19.375001907348633

Token 1081: 'umps' (ID: 14938)
  Prédit: 'umps'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'umps' → logprob: -3.128163257315464e-07
    2. 'ump' → logprob: -16.125
    3. 'm' → logprob: -16.25
    4. 'ust' → logprob: -18.375
    5. 'um' → logprob: -18.5
    6. 'unction' → logprob: -18.75
    7. ' um' → logprob: -20.0
    8. 'urn' → logprob: -20.125
    9. 'umn' → logprob: -20.125
    10. '   ' → logprob: -20.375

Token 1082: '()
' (ID: 1234)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.5543776154518127
    2. '()
' → logprob: -1.804377555847168
    3. '   ' → logprob: -2.304377555847168
    4. '
' → logprob: -2.429377555847168
    5. '()' → logprob: -2.679377555847168
    6. ' print' → logprob: -7.054377555847168
    7. '(' → logprob: -7.179377555847168
    8. '(print' → logprob: -7.304377555847168
    9. 'if' → logprob: -7.554377555847168
    10. '(
' → logprob: -7.679377555847168

Token 1083: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008626393973827362
    2. 'print' → logprob: -4.758626461029053
    3. ' print' → logprob: -11.633625984191895
    4. '
' → logprob: -13.008625984191895
    5. '	print' → logprob: -15.133625984191895
    6. '```' → logprob: -15.258625984191895
    7. '    
' → logprob: -15.508625984191895
    8. 'output' → logprob: -17.75862693786621
    9. 'import' → logprob: -18.13362693786621
    10. '   ' → logprob: -18.38362693786621

Token 1084: ' formatter' (ID: 50323)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.002540943678468466
    2. 'formatter' (adapté à ' formatter') → logprob: -6.2525410652160645
    3. '   ' → logprob: -7.5025410652160645
    4. 'output' → logprob: -10.002540588378906
    5. 'printer' → logprob: -11.377540588378906
    6. ' print' → logprob: -12.627540588378906
    7. '
' → logprob: -15.752540588378906
    8. 'fmt' → logprob: -15.877540588378906
    9. '```' → logprob: -16.877540588378906
    10. ' formatter' → logprob: -17.377540588378906

Token 1085: ' =' (ID: 314)
  Prédit: '.format'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.format' → logprob: -0.053624968975782394
    2. '.' → logprob: -3.5536248683929443
    3. '=format' → logprob: -4.553625106811523
    4. ' =' → logprob: -4.803625106811523
    5. '=' → logprob: -5.553625106811523
    6. '.=' → logprob: -8.053625106811523
    7. '.form' → logprob: -8.553625106811523
    8. '(format' → logprob: -8.678625106811523
    9. '.output' → logprob: -9.178625106811523
    10. ' .' → logprob: -10.178625106811523

Token 1086: ' Console' (ID: 11404)
  Prédit: 'Console'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Console' → logprob: -0.00033546582562848926
    2. ' Console' → logprob: -8.000335693359375
    3. '(Console' → logprob: -17.750335693359375
    4. '	Console' → logprob: -17.875335693359375
    5. '.Console' → logprob: -21.000335693359375
    6. 'console' → logprob: -21.125335693359375
    7. ' console' → logprob: -22.500335693359375
    8. '   ' → logprob: -23.125335693359375
    9. '_console' → logprob: -23.500335693359375
    10. 'Concrete' → logprob: -23.750335693359375

Token 1087: 'Output' (ID: 6310)
  Prédit: 'Output'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Output' → logprob: 0.0
    2. '	Output' → logprob: -18.625
    3. ' Output' → logprob: -19.375
    4. '_output' → logprob: -21.375
    5. 'Out' → logprob: -21.375
    6. '.Output' → logprob: -22.375
    7. 'output' → logprob: -22.75
    8. '_OUTPUT' → logprob: -22.875
    9. '(Output' → logprob: -23.0
    10. '_Output' → logprob: -23.5

Token 1088: 'Formatter' (ID: 22956)
  Prédit: 'Formatter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Formatter' → logprob: -6.704273118884885e-07
    2. 'Format' → logprob: -14.750000953674316
    3. 'formatter' → logprob: -15.625000953674316
    4. '_formatter' → logprob: -17.25
    5. 'Output' → logprob: -19.25
    6. ' Formatter' → logprob: -20.875
    7. ' formatter' → logprob: -22.25
    8. 'Formatting' → logprob: -22.875
    9. 'Formatted' → logprob: -23.0
    10. 'Appender' → logprob: -23.375

Token 1089: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1610061228275299
    2. 'print' → logprob: -2.036006212234497
    3. '
' → logprob: -4.036005973815918
    4. ' print' → logprob: -7.911005973815918
    5. '	print' → logprob: -9.411005973815918
    6. '(print' → logprob: -11.286005973815918
    7. '  ' → logprob: -12.161005973815918
    8. '    
' → logprob: -12.161005973815918
    9. ' ' → logprob: -12.411005973815918
    10. '```' → logprob: -12.536005973815918

Token 1090: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.128465473651886
    2. '   ' → logprob: -2.128465414047241
    3. ' print' → logprob: -6.50346565246582
    4. '
' → logprob: -10.87846565246582
    5. 'output' → logprob: -11.75346565246582
    6. '```' → logprob: -11.87846565246582
    7. '	print' → logprob: -12.87846565246582
    8. 'result' → logprob: -14.00346565246582
    9. '    
' → logprob: -15.25346565246582
    10. '.print' → logprob: -16.00346565246582

Token 1091: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -1.1517960956552997e-05
    2. ' print' → logprob: -12.000011444091797
    3. '   ' → logprob: -12.250011444091797
    4. 'output' → logprob: -14.750011444091797
    5. '
' → logprob: -17.125011444091797
    6. 'result' → logprob: -18.000011444091797
    7. '	print' → logprob: -20.375011444091797
    8. '    
' → logprob: -21.625011444091797
    9. '```' → logprob: -22.000011444091797
    10. 'value' → logprob: -23.250011444091797

Token 1092: '(format' (ID: 39668)
  Prédit: '(format'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(format' → logprob: -4.632542913896032e-05
    2. 'formatter' → logprob: -10.000046730041504
    3. '(' → logprob: -14.500046730041504
    4. 'format' → logprob: -15.125046730041504
    5. '(form' → logprob: -16.250045776367188
    6. '(fmt' → logprob: -18.625045776367188
    7. ' formatter' → logprob: -19.500045776367188
    8. '(f' → logprob: -19.875045776367188
    9. '=format' → logprob: -20.375045776367188
    10. '(
' → logprob: -21.000045776367188

Token 1093: 'ter' (ID: 399)
  Prédit: '(result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.08004157990217209
    2. 'er' → logprob: -2.7050416469573975
    3. '(format' → logprob: -5.205041408538818
    4. '(' → logprob: -6.205041408538818
    5. 'result' → logprob: -6.705041408538818
    6. '(f' → logprob: -7.205041408538818
    7. ')' → logprob: -8.955041885375977
    8. 'f' → logprob: -9.330041885375977
    9. '((' → logprob: -9.580041885375977
    10. '("("' → logprob: -9.580041885375977

Token 1094: '.format' (ID: 12277)
  Prédit: '.format'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.format' → logprob: -2.339278580620885e-06
    2. 'format' → logprob: -13.750001907348633
    3. ').' → logprob: -14.125001907348633
    4. '.' → logprob: -14.500001907348633
    5. ' .' → logprob: -18.125001907348633
    6. '=format' → logprob: -19.500001907348633
    7. '	format' → logprob: -19.750001907348633
    8. '`.' → logprob: -19.875001907348633
    9. ')' → logprob: -20.000001907348633
    10. '.output' → logprob: -20.500001907348633

Token 1095: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -6.869017852295656e-06
    2. '(value' → logprob: -12.250006675720215
    3. 'result' → logprob: -13.250006675720215
    4. '(' → logprob: -16.00000762939453
    5. '(res' → logprob: -17.12500762939453
    6. ',result' → logprob: -17.50000762939453
    7. '(results' → logprob: -17.62500762939453
    8. ')' → logprob: -18.62500762939453
    9. '(resultado' → logprob: -18.87500762939453
    10. ' (' → logprob: -19.00000762939453

Token 1096: '))

' (ID: 9746)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.25237154960632324
    2. '))' → logprob: -1.5023715496063232
    3. '())' → logprob: -7.752371788024902
    4. '()))' → logprob: -11.627371788024902
    5. '()' → logprob: -13.377371788024902
    6. ')))' → logprob: -13.752371788024902
    7. '))
' → logprob: -14.877371788024902
    8. ')
' → logprob: -15.127371788024902
    9. ' )' → logprob: -16.252370834350586
    10. '   ' → logprob: -16.377370834350586

Token 1097: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0014158309204503894
    2. '<|end|>' → logprob: -7.626415729522705
    3. '```' → logprob: -7.626415729522705
    4. ' if' → logprob: -8.001416206359863
    5. '
' → logprob: -10.001416206359863
    6. '#' → logprob: -10.251416206359863
    7. '[' → logprob: -12.001416206359863
    8. ')' → logprob: -12.501416206359863
    9. '__' → logprob: -13.001416206359863
    10. '<|end|>' → logprob: -13.126416206359863

Token 1098: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.20147083699703217
    2. '__' → logprob: -1.7014708518981934
    3. '_name' → logprob: -10.326470375061035
    4. '_' → logprob: -11.326470375061035
    5. '___' → logprob: -11.951470375061035
    6. 'name' → logprob: -12.826470375061035
    7. '```' → logprob: -14.076470375061035
    8. '____' → logprob: -14.701470375061035
    9. ' _' → logprob: -14.701470375061035
    10. '.__' → logprob: -14.826470375061035

Token 1099: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.024414297193288803
    2. ' ==' → logprob: -4.3994140625
    3. '==' → logprob: -4.5244140625
    4. ' __' → logprob: -8.0244140625
    5. '=="' → logprob: -8.3994140625
    6. '[' → logprob: -9.0244140625
    7. '.__' → logprob: -9.1494140625
    8. '__.__' → logprob: -10.5244140625
    9. 'if' → logprob: -10.6494140625
    10. 'main' → logprob: -10.6494140625

Token 1100: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.00022320532298181206
    2. '==' → logprob: -8.750223159790039
    3. '__.__' → logprob: -10.000223159790039
    4. ' ==' → logprob: -11.625223159790039
    5. '=="' → logprob: -11.750223159790039
    6. '=='' → logprob: -14.250223159790039
    7. '__["' → logprob: -15.125223159790039
    8. '__('' → logprob: -15.250223159790039
    9. '____' → logprob: -15.375223159790039
    10. '___' → logprob: -15.625223159790039

Token 1101: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.2113313376903534
    2. ' ==' → logprob: -2.086331367492676
    3. '=="' → logprob: -2.836331367492676
    4. '__' → logprob: -4.961331367492676
    5. '=='' → logprob: -7.336331367492676
    6. '=' → logprob: -10.836331367492676
    7. '==
' → logprob: -11.086331367492676
    8. '"' → logprob: -11.586331367492676
    9. '===' → logprob: -12.086331367492676
    10. '==="' → logprob: -13.711331367492676

Token 1102: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.02325223572552204
    2. ''' → logprob: -3.773252248764038
    3. '__' → logprob: -12.523252487182617
    4. ' "__' → logprob: -12.773252487182617
    5. '"name' → logprob: -16.273252487182617
    6. ' '__' → logprob: -17.273252487182617
    7. '"_' → logprob: -17.648252487182617
    8. '"user' → logprob: -17.773252487182617
    9. '   ' → logprob: -18.148252487182617
    10. '("__' → logprob: -18.273252487182617

Token 1103: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.002014048397541046
    2. '__' → logprob: -6.25201416015625
    3. '"' → logprob: -9.50201416015625
    4. 'name' → logprob: -11.87701416015625
    5. ''' → logprob: -13.00201416015625
    6. ' main' → logprob: -14.12701416015625
    7. '_main' → logprob: -14.62701416015625
    8. 'built' → logprob: -16.25201416015625
    9. '__":
' → logprob: -16.87701416015625
    10. ' "__' → logprob: -17.50201416015625

Token 1104: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.10148020833730698
    2. '__' → logprob: -2.35148024559021
    3. '__':
' → logprob: -6.976480007171631
    4. '__.' → logprob: -8.976480484008789
    5. '__.__' → logprob: -8.976480484008789
    6. '__["' → logprob: -9.726480484008789
    7. '__
' → logprob: -11.101480484008789
    8. '__
' → logprob: -12.601480484008789
    9. '.__' → logprob: -13.351480484008789
    10. '__("' → logprob: -13.476480484008789

Token 1105: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.02681734785437584
    2. '__' → logprob: -3.6518173217773438
    3. '   ' → logprob: -7.776817321777344
    4. ' main' → logprob: -9.651817321777344
    5. 'run' → logprob: -12.026817321777344
    6. '	main' → logprob: -12.151817321777344
    7. '____' → logprob: -12.401817321777344
    8. '_main' → logprob: -12.526817321777344
    9. '```' → logprob: -12.651817321777344
    10. '"' → logprob: -12.776817321777344

Token 1106: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -6.704273118884885e-07
    2. ' main' → logprob: -14.500000953674316
    3. '	main' → logprob: -16.25
    4. '   ' → logprob: -16.5
    5. '_main' → logprob: -20.625
    6. '```' → logprob: -22.625
    7. '(main' → logprob: -23.625
    8. '.main' → logprob: -23.875
    9. '
' → logprob: -24.625
    10. 'import' → logprob: -25.25

Token 1107: '()' (ID: 416)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9372468590736389
    2. '<|end|>' → logprob: -1.0622467994689941
    3. '#' → logprob: -2.062246799468994
    4. '[' → logprob: -2.687246799468994
    5. '```' → logprob: -3.812246799468994
    6. '<|end|>' → logprob: -4.437246799468994
    7. '_' → logprob: -4.562246799468994
    8. '
' → logprob: -4.687246799468994
    9. ':' → logprob: -5.812246799468994
    10. '   ' → logprob: -6.437246799468994


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1105
Tokens correctement prédits (1ère position, stricte): 419
Tokens correctement prédits (1ère position, avec adaptation): 454
Tokens correctement prédits (top 10): 879
Précision stricte (1ère position): 37.92%
Précision adaptée (1ère position): 41.09%
Précision (top 10): 79.55%
================================================================================
