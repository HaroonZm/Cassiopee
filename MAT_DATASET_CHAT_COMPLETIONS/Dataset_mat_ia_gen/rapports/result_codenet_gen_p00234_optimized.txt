================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:33:27
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
import heapq

input = sys.stdin.readline

while True:
    W, H = map(int, input().split())
    if W == 0 and H == 0:
        break
    f, m, o = map(int, input().split())
    grid = [list(map(int, input().split())) for _ in range(H)]
    # pos of oxygen cells
    oxy_cells = []
    for y in range(H):
        for x in range(W):
            if grid[y][x] > 0:
                oxy_cells.append((x, y))
    # initial row y=0, can start at any cell there
    # State: (cost, x, y, oxygen_left, masked_oxygen_mask)
    # For oxygen cells, need to track usage (once per cell)
    # Assign index for each oxygen cell
    oxy_id = dict()
    for i, (x,y) in enumerate(oxy_cells):
        oxy_id[(x,y)] = i
    max_mask = 1 << len(oxy_cells)

    # dist dictionary: key=(x,y,oxygen_left,mask), val=cost
    # To limit memory, keep dist only for states with oxygen_left>0
    from collections import deque,defaultdict
    dist = dict()

    hq = []
    # Start positions: y=0 (y=1 in problem, zero-based here)
    for x in range(W):
        start_o2 = o
        start_mask = 0
        cost = 0
        # if start cell is oxygen cell, must consume oxygen here once
        if grid[0][x] > 0:
            idx = oxy_id[(x,0)]
            # must consume oxygen from cell
            start_mask |= 1 << idx
            start_o2 = min(m, start_o2 + grid[0][x])
        else:
            # soil cell: pay cost to dig it
            cost = -grid[0][x]
            if cost > f:
                continue
        if start_o2 == 0:
            continue
        key = (x,0,start_o2,start_mask)
        dist[key] = cost
        heapq.heappush(hq,(cost,x,0,start_o2,start_mask))

    res = None
    # Moves: left, right, down (no up)
    dxs = [-1,1,0]
    dys = [0,0,1]

    while hq:
        cost,x,y,o2,mask = heapq.heappop(hq)
        key = (x,y,o2,mask)
        if dist.get(key, float('inf')) < cost:
            continue
        # check if at last row and o2>0 => success
        if y == H-1 and o2 > 0:
            if res is None or cost < res:
                res = cost
                # minimal cost found, but maybe better?
                # continue to find better cost
        for dir in range(3):
            nx = x + dxs[dir]
            ny = y + dys[dir]
            if not (0 <= nx < W and 0 <= ny < H):
                continue
            # moving costs 1 oxygen
            no2 = o2 - 1
            if no2 == 0:
                continue
            cell = grid[ny][nx]
            nmask = mask
            ncost = cost
            if cell > 0:
                # oxygen cell, must consume if not consumed yet
                idx = oxy_id[(nx,ny)]
                if (mask & (1<<idx)) == 0:
                    # consume oxygen here
                    nmask |= 1 << idx
                    no2 = min(m, no2 + cell)
                # digging cost is 0
            else:
                # soil cell, must dig (pay cost)
                ncost += -cell
                if ncost > f:
                    continue
            nkey = (nx, ny, no2, nmask)
            if dist.get(nkey, float('inf')) > ncost:
                dist[nkey] = ncost
                heapq.heappush(hq,(ncost,nx,ny,no2,nmask))
    print(res if res is not None else "NA")
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'import' (ID: 561)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.5435490608215332
    2. '.' → logprob: -1.0435490608215332
    3. '<|end|>' → logprob: -3.918549060821533
    4. '\' → logprob: -4.043549060821533
    5. 'import' → logprob: -4.418549060821533
    6. 'newline' → logprob: -5.293549060821533
    7. '' → logprob: -6.043549060821533
    8. '\r' → logprob: -6.168549060821533
    9. '
' → logprob: -6.293549060821533
    10. '<|end|>' → logprob: -6.418549060821533

Token 4: ' heap' (ID: 37237)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.00020771251001860946
    2. 'os' → logprob: -8.500207901000977
    3. ' math' → logprob: -13.375207901000977
    4. ' re' → logprob: -13.750207901000977
    5. '"os' → logprob: -14.250207901000977
    6. ' json' → logprob: -14.750207901000977
    7. '_os' → logprob: -16.375207901000977
    8. ' ' → logprob: -16.500207901000977
    9. ' io' → logprob: -16.625207901000977
    10. '	os' → logprob: -16.875207901000977

Token 5: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -1.4855663721391466e-05
    2. '#' → logprob: -11.750015258789062
    3. '.' → logprob: -12.750015258789062
    4. '_' → logprob: -14.125015258789062
    5. '=' → logprob: -14.500015258789062
    6. 'ify' → logprob: -14.625015258789062
    7. ')' → logprob: -15.125015258789062
    8. 'i' → logprob: -15.375015258789062
    9. 'u' → logprob: -15.500015258789062
    10. 'p' → logprob: -15.750015258789062

Token 6: '

' (ID: 279)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.5876707434654236
    2. '
' → logprob: -1.4626708030700684
    3. '\n' → logprob: -2.0876708030700684
    4. '\' → logprob: -3.0876708030700684
    5. '<|end|>' → logprob: -4.337670803070068
    6. '

' → logprob: -4.962670803070068
    7. '```' → logprob: -5.587670803070068
    8. 'import' → logprob: -5.587670803070068
    9. '.
' → logprob: -5.587670803070068
    10. '' → logprob: -5.587670803070068

Token 7: 'input' (ID: 2586)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.9195020794868469
    2. 'def' → logprob: -1.2945020198822021
    3. '\' → logprob: -2.419502019882202
    4. '
' → logprob: -3.169502019882202
    5. 'from' → logprob: -3.294502019882202
    6. 'import' → logprob: -3.419502019882202
    7. '' → logprob: -3.419502019882202
    8. 'class' → logprob: -3.669502019882202
    9. '```' → logprob: -3.794502019882202
    10. '\n' → logprob: -3.794502019882202

Token 8: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0019074546871706843
    2. '.' → logprob: -6.6269073486328125
    3. ')' → logprob: -8.251907348632812
    4. '()' → logprob: -8.751907348632812
    5. '=' → logprob: -10.376907348632812
    6. '(.)' → logprob: -10.626907348632812
    7. ' (' → logprob: -10.751907348632812
    8. '```' → logprob: -11.126907348632812
    9. '[' → logprob: -11.751907348632812
    10. '(
' → logprob: -11.751907348632812

Token 9: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.3256465196609497
    2. ' sys' → logprob: -1.3256465196609497
    3. 'input' → logprob: -4.45064640045166
    4. ' input' → logprob: -7.45064640045166
    5. '	sys' → logprob: -10.32564640045166
    6. 'lambda' → logprob: -11.32564640045166
    7. '=sys' → logprob: -11.82564640045166
    8. ' lambda' → logprob: -13.20064640045166
    9. '```' → logprob: -14.07564640045166
    10. '(sys' → logprob: -14.32564640045166

Token 10: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.4024229645729065
    2. '.' → logprob: -1.1524229049682617
    3. ' .' → logprob: -4.527422904968262
    4. '.input' → logprob: -6.402422904968262
    5. '.readline' → logprob: -6.902422904968262
    6. '.stdout' → logprob: -7.027422904968262
    7. '.argv' → logprob: -7.402422904968262
    8. '.import' → logprob: -8.777422904968262
    9. '.path' → logprob: -9.902422904968262
    10. '​.' → logprob: -10.277422904968262

Token 11: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.0023798076435923576
    2. '.read' → logprob: -6.127379894256592
    3. '.' → logprob: -8.627379417419434
    4. '.readlines' → logprob: -11.377379417419434
    5. 'read' → logprob: -12.752379417419434
    6. '.buffer' → logprob: -14.252379417419434
    7. '.Read' → logprob: -15.377379417419434
    8. ' readline' → logprob: -16.12738037109375
    9. '```' → logprob: -17.00238037109375
    10. '_read' → logprob: -17.75238037109375

Token 12: '

' (ID: 279)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.3680334985256195
    2. '(' → logprob: -1.243033528327942
    3. '(
' → logprob: -4.368033409118652
    4. '()
' → logprob: -5.493033409118652
    5. '()

' → logprob: -6.868033409118652
    6. '
' → logprob: -7.868033409118652
    7. '(

' → logprob: -8.243033409118652
    8. '()\' → logprob: -8.243033409118652
    9. 'def' → logprob: -8.618033409118652
    10. ')' → logprob: -9.618033409118652

Token 13: 'while' (ID: 7032)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.31369125843048096
    2. 'def' → logprob: -1.313691258430481
    3. '(n' → logprob: -8.188691139221191
    4. 'N' → logprob: -9.438691139221191
    5. '(' → logprob: -10.438691139221191
    6. 'for' → logprob: -11.313691139221191
    7. 'd' → logprob: -11.313691139221191
    8. '\' → logprob: -12.938691139221191
    9. 'num' → logprob: -12.938691139221191
    10. 'data' → logprob: -13.313691139221191

Token 14: ' True' (ID: 6432)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.006844787858426571
    2. ' True' → logprob: -5.756844997406006
    3. '  ' → logprob: -6.256844997406006
    4. ' (' → logprob: -7.256844997406006
    5. ' not' → logprob: -7.756844997406006
    6. ' )' → logprob: -8.756844520568848
    7. '(' → logprob: -8.881844520568848
    8. ' space' → logprob: -9.381844520568848
    9. ' ' → logprob: -10.256844520568848
    10. '    ' → logprob: -10.381844520568848

Token 15: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0007230373448692262
    2. '():' → logprob: -7.375722885131836
    3. ' :' → logprob: -9.875722885131836
    4. ':**' → logprob: -10.250722885131836
    5. '(:' → logprob: -13.125722885131836
    6. ':
' → logprob: -13.250722885131836
    7. '):' → logprob: -13.375722885131836
    8. ' ():' → logprob: -13.875722885131836
    9. ':return' → logprob: -14.750722885131836
    10. '(' → logprob: -14.875722885131836

Token 16: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09268712997436523
    2. ' ' → logprob: -3.5926871299743652
    3. '    
' → logprob: -3.7176871299743652
    4. '    ' → logprob: -3.8426871299743652
    5. ' 
' → logprob: -4.717687129974365
    6. '  
' → logprob: -6.717687129974365
    7. '  ' → logprob: -7.342687129974365
    8. ' readline' → logprob: -7.717687129974365
    9. '    
    
' → logprob: -7.842687129974365
    10. '<|end|>' → logprob: -7.967687129974365

Token 17: ' W' (ID: 486)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5528404712677002
    2. ' n' → logprob: -1.3028404712677002
    3. 'x' → logprob: -3.8028404712677
    4. 'num' → logprob: -3.8028404712677
    5. ' line' → logprob: -3.8028404712677
    6. '   ' → logprob: -4.052840232849121
    7. 'data' → logprob: -4.052840232849121
    8. ' num' → logprob: -4.552840232849121
    9. 'line' → logprob: -4.802840232849121
    10. ' data' → logprob: -5.302840232849121

Token 18: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.941470742225647
    2. 'hile' → logprob: -2.0664706230163574
    3. '=' → logprob: -2.3164706230163574
    4. ' ==' → logprob: -2.4414706230163574
    5. '   ' → logprob: -2.5664706230163574
    6. ' <=' → logprob: -3.0664706230163574
    7. ' :=' → logprob: -3.4414706230163574
    8. 'h' → logprob: -3.5664706230163574
    9. ',' → logprob: -3.5664706230163574
    10. ' ' → logprob: -3.8164706230163574

Token 19: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.03544188290834427
    2. ' H' → logprob: -4.035441875457764
    3. 'D' → logprob: -4.410441875457764
    4. 'L' → logprob: -6.035441875457764
    5. 'B' → logprob: -7.285441875457764
    6. 'N' → logprob: -7.785441875457764
    7. 'S' → logprob: -8.160442352294922
    8. 'E' → logprob: -8.285442352294922
    9. ' D' → logprob: -8.535442352294922
    10. 'T' → logprob: -8.910442352294922

Token 20: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10022101551294327
    2. '=' → logprob: -2.3502209186553955
    3. ' ' → logprob: -11.850220680236816
    4. ',' → logprob: -12.475220680236816
    5. '=input' → logprob: -13.225220680236816
    6. ')' → logprob: -14.725220680236816
    7. '    ' → logprob: -15.600220680236816
    8. '=line' → logprob: -15.725220680236816
    9. ' =",' → logprob: -16.100221633911133
    10. '<|end|>' → logprob: -16.475221633911133

Token 21: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.25214526057243347
    2. 'map' → logprob: -1.5021452903747559
    3. ' input' → logprob: -9.002144813537598
    4. 'input' → logprob: -9.377144813537598
    5. '	map' → logprob: -12.502144813537598
    6. '(map' → logprob: -12.877144813537598
    7. 'm' → logprob: -14.502144813537598
    8. '[' → logprob: -14.752144813537598
    9. ' ' → logprob: -14.877144813537598
    10. ' [' → logprob: -15.752144813537598

Token 22: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3620296120643616
    2. '(int' → logprob: -1.3620295524597168
    3. '(input' → logprob: -3.612029552459717
    4. '(str' → logprob: -4.362029552459717
    5. '(lambda' → logprob: -4.862029552459717
    6. '(
' → logprob: -10.112030029296875
    7. '(eval' → logprob: -10.362030029296875
    8. ' (' → logprob: -11.737030029296875
    9. '(list' → logprob: -12.487030029296875
    10. '(float' → logprob: -12.612030029296875

Token 23: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.660855770111084
    2. 'input' → logprob: -1.785855770111084
    3. ',input' → logprob: -2.160855770111084
    4. ')' → logprob: -2.285855770111084
    5. ',' → logprob: -2.410855770111084
    6. '(' → logprob: -4.785855770111084
    7. ' input' → logprob: -7.910855770111084
    8. '=input' → logprob: -8.285856246948242
    9. '```' → logprob: -9.660856246948242
    10. '[input' → logprob: -10.410856246948242

Token 24: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.20141372084617615
    2. 'input' → logprob: -1.7014137506484985
    3. ')' → logprob: -15.701414108276367
    4. '(input' → logprob: -16.326414108276367
    5. '=input' → logprob: -16.451414108276367
    6. '	input' → logprob: -17.076414108276367
    7. ',input' → logprob: -17.951414108276367
    8. '<input' → logprob: -19.076414108276367
    9. ' )' → logprob: -19.451414108276367
    10. ' ' → logprob: -19.451414108276367

Token 25: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -8.41866585687967e-06
    2. '()' → logprob: -11.750008583068848
    3. ' ().' → logprob: -14.625008583068848
    4. '())' → logprob: -17.50000762939453
    5. '()
' → logprob: -18.50000762939453
    6. '(' → logprob: -18.50000762939453
    7. '()

' → logprob: -19.37500762939453
    8. ')' → logprob: -19.87500762939453
    9. '   ' → logprob: -20.00000762939453
    10. '('').' → logprob: -20.12500762939453

Token 26: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.020787928253412247
    2. 'strip' → logprob: -4.270787715911865
    3. 'rstrip' → logprob: -5.020787715911865
    4. 'rs' → logprob: -13.895788192749023
    5. ' split' → logprob: -14.145788192749023
    6. '(split' → logprob: -14.270788192749023
    7. 'read' → logprob: -14.395788192749023
    8. ')' → logprob: -15.520788192749023
    9. '```' → logprob: -16.270788192749023
    10. '().' → logprob: -17.270788192749023

Token 27: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.18458975851535797
    2. '())' → logprob: -1.8095897436141968
    3. '()' → logprob: -6.059589862823486
    4. '())
' → logprob: -6.934589862823486
    5. '))' → logprob: -7.059589862823486
    6. ')
' → logprob: -7.434589862823486
    7. '()))' → logprob: -10.684589385986328
    8. '(' → logprob: -11.309589385986328
    9. '`)' → logprob: -11.684589385986328
    10. '')' → logprob: -12.059589385986328

Token 28: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6950016617774963
    2. '<|end|>' → logprob: -0.9450016617774963
    3. ' if' → logprob: -2.8200016021728516
    4. '\n' → logprob: -4.695001602172852
    5. ' ' → logprob: -4.695001602172852
    6. '    
' → logprob: -4.820001602172852
    7. ' 
' → logprob: -5.195001602172852
    8. '  
' → logprob: -5.320001602172852
    9. 'if' → logprob: -5.570001602172852
    10. '
' → logprob: -5.695001602172852

Token 29: ' if' (ID: 538)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 30: ' W' (ID: 486)
  Prédit: ' W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' W' → logprob: -0.10186506807804108
    2. 'W' → logprob: -2.35186505317688
    3. ' not' → logprob: -6.476865291595459
    4. ' ' → logprob: -9.3518648147583
    5. 'not' → logprob: -10.4768648147583
    6. ' (' → logprob: -13.3518648147583
    7. ' ' → logprob: -14.2268648147583
    8. '(' → logprob: -14.9768648147583
    9. '	W' → logprob: -15.7268648147583
    10. '  ' → logprob: -15.8518648147583

Token 31: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.08896302431821823
    2. '==' → logprob: -2.463963031768799
    3. ' ' → logprob: -10.96396255493164
    4. '=' → logprob: -12.46396255493164
    5. ')' → logprob: -14.71396255493164
    6. '0' → logprob: -14.96396255493164
    7. ' =' → logprob: -15.08896255493164
    8. ')==' → logprob: -15.08896255493164
    9. ' or' → logprob: -15.71396255493164
    10. ' ' → logprob: -15.83896255493164

Token 32: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3132656216621399
    2. ' ' → logprob: -1.3132655620574951
    3. '۰' → logprob: -14.188265800476074
    4. '  ' → logprob: -14.688265800476074
    5. '_' → logprob: -14.813265800476074
    6. '   ' → logprob: -15.000765800476074
    7. ' ' → logprob: -15.000765800476074
    8. '=' → logprob: -15.625765800476074
    9. '```' → logprob: -15.688265800476074
    10. '<|end|>' → logprob: -15.875765800476074

Token 33: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.000804745068307966
    2. ' ' → logprob: -7.125804901123047
    3. '۰' → logprob: -16.125804901123047
    4. '```' → logprob: -17.125804901123047
    5. '０' → logprob: -17.563304901123047
    6. '   ' → logprob: -17.813304901123047
    7. 'H' → logprob: -18.000804901123047
    8. 'and' → logprob: -18.063304901123047
    9. '  ' → logprob: -18.188304901123047
    10. '_' → logprob: -18.250804901123047

Token 34: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.016052084043622017
    2. 'and' → logprob: -4.14105224609375
    3. ' ' → logprob: -11.51605224609375
    4. '   ' → logprob: -12.51605224609375
    5. '	and' → logprob: -13.51605224609375
    6. ' ' → logprob: -14.14105224609375
    7. ' or' → logprob: -14.14105224609375
    8. '<|end|>' → logprob: -15.01605224609375
    9. ' a' → logprob: -15.26605224609375
    10. '0' → logprob: -15.26605224609375

Token 35: ' H' (ID: 487)
  Prédit: ' H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' H' → logprob: -0.054964326322078705
    2. 'H' → logprob: -2.929964303970337
    3. ' ' → logprob: -9.554964065551758
    4. ' ' → logprob: -11.554964065551758
    5. '	H' → logprob: -14.304964065551758
    6. '   ' → logprob: -14.429964065551758
    7. '  ' → logprob: -15.304964065551758
    8. ' ' → logprob: -16.554964065551758
    9. '<|end|>' → logprob: -17.429964065551758
    10. '　' → logprob: -17.554964065551758

Token 36: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.02347268909215927
    2. '==' → logprob: -3.773472785949707
    3. '<|end|>' → logprob: -9.523472785949707
    4. ')' → logprob: -10.398472785949707
    5. ' ' → logprob: -10.398472785949707
    6. '=' → logprob: -10.648472785949707
    7. '<|end|>' → logprob: -11.148472785949707
    8. ' ' → logprob: -11.148472785949707
    9. ' =' → logprob: -11.773472785949707
    10. ':' → logprob: -11.898472785949707

Token 37: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.16022545099258423
    2. ' ' → logprob: -1.9102253913879395
    3. ' ' → logprob: -15.035225868225098
    4. '  ' → logprob: -15.160225868225098
    5. '   ' → logprob: -15.347725868225098
    6. '<|end|>' → logprob: -15.910225868225098
    7. '<|end|>' → logprob: -16.59772491455078
    8. '```' → logprob: -16.66022491455078
    9. '۰' → logprob: -16.78522491455078
    10. '=' → logprob: -17.97272491455078

Token 38: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.0126840758603066e-05
    2. ' ' → logprob: -10.125040054321289
    3. '۰' → logprob: -20.37504005432129
    4. '   ' → logprob: -20.87504005432129
    5. ' ' → logprob: -22.00004005432129
    6. '```' → logprob: -22.00004005432129
    7. '  ' → logprob: -22.12504005432129
    8. '০' → logprob: -22.50004005432129
    9. '０' → logprob: -22.81254005432129
    10. '०' → logprob: -23.00004005432129

Token 39: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0018211969872936606
    2. ':
' → logprob: -6.376821041107178
    3. '   ' → logprob: -9.126821517944336
    4. ':return' → logprob: -12.626821517944336
    5. ' :' → logprob: -12.751821517944336
    6. '       ' → logprob: -13.376821517944336
    7. '):' → logprob: -14.501821517944336
    8. '	break' → logprob: -14.626821517944336
    9. '.' → logprob: -14.751821517944336
    10. ' break' → logprob: -15.501821517944336

Token 40: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006048723589628935
    2. ':' → logprob: -5.756048679351807
    3. '   ' → logprob: -5.881048679351807
    4. ':
' → logprob: -10.506049156188965
    5. '	break' → logprob: -11.131049156188965
    6. '	' → logprob: -12.131049156188965
    7. '\n' → logprob: -12.381049156188965
    8. '    ' → logprob: -12.631049156188965
    9. '     ' → logprob: -12.631049156188965
    10. '      ' → logprob: -12.631049156188965

Token 41: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.1860685646533966
    2. '       ' → logprob: -1.9360685348510742
    3. 'break' (adapté à ' break') → logprob: -3.686068534851074
    4. '   ' → logprob: -8.436068534851074
    5. '	break' → logprob: -8.436068534851074
    6. '           ' → logprob: -12.311068534851074
    7. '_break' → logprob: -12.936068534851074
    8. '```' → logprob: -14.311068534851074
    9. '-break' → logprob: -15.186068534851074
    10. 'Break' → logprob: -15.436068534851074

Token 42: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19716329872608185
    2. '
' → logprob: -2.1971633434295654
    3. '    
' → logprob: -2.9471633434295654
    4. '<|end|>' → logprob: -5.822163105010986
    5. 'map' → logprob: -6.072163105010986
    6. ',' → logprob: -6.197163105010986
    7. '  
' → logprob: -7.072163105010986
    8. '' → logprob: -7.697163105010986
    9. 'graph' → logprob: -7.697163105010986
    10. '[' → logprob: -7.697163105010986

Token 43: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.34997162222862244
    2. '
' → logprob: -2.0999715328216553
    3. 'graph' → logprob: -2.4749715328216553
    4. '    
' → logprob: -2.8499715328216553
    5. 'map' → logprob: -4.224971771240234
    6. 'grid' → logprob: -6.099971771240234
    7. ' graph' → logprob: -6.224971771240234
    8. 'board' → logprob: -6.349971771240234
    9. '  
' → logprob: -6.599971771240234
    10. 'maze' → logprob: -6.724971771240234

Token 44: ' f' (ID: 285)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1866173893213272
    2. 'graph' → logprob: -2.186617374420166
    3. '    
' → logprob: -3.436617374420166
    4. 'grid' → logprob: -4.936617374420166
    5. ' graph' → logprob: -5.311617374420166
    6. 'map' → logprob: -5.686617374420166
    7. 'board' → logprob: -6.061617374420166
    8. '[' → logprob: -7.186617374420166
    9. ' grid' → logprob: -7.436617374420166
    10. '	graph' → logprob: -7.436617374420166

Token 45: ',' (ID: 11)
  Prédit: 'ield'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ield' → logprob: -0.12081287056207657
    2. 'ields' → logprob: -2.2458128929138184
    3. 'loor' → logprob: -5.620812892913818
    4. 'i' → logprob: -6.745812892913818
    5. 'iel' → logprob: -7.370812892913818
    6. 'ie' → logprob: -7.620812892913818
    7. 'orest' → logprob: -7.870812892913818
    8. ' =' → logprob: -7.995812892913818
    9. 'o' → logprob: -8.24581241607666
    10. 'ire' → logprob: -9.37081241607666

Token 46: ' m' (ID: 284)
  Prédit: 'ield'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ield' → logprob: -1.4134552478790283
    2. ' dist' → logprob: -1.9134552478790283
    3. 'dist' → logprob: -2.1634552478790283
    4. 'graph' → logprob: -2.7884552478790283
    5. 'visited' → logprob: -3.0384552478790283
    6. 'orest' → logprob: -3.0384552478790283
    7. 'ields' → logprob: -3.0384552478790283
    8. ' graph' → logprob: -3.2884552478790283
    9. ' visited' → logprob: -3.4134552478790283
    10. 's' → logprob: -4.163455009460449

Token 47: ',' (ID: 11)
  Prédit: 'ap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ap' → logprob: -0.008769146166741848
    2. 'a' → logprob: -5.2587690353393555
    3. 'aps' → logprob: -6.2587690353393555
    4. ' =' → logprob: -6.7587690353393555
    5. '=' → logprob: -8.383769035339355
    6. 'an' → logprob: -9.258769035339355
    7. 'atrix' → logprob: -10.508769035339355
    8. 'aze' → logprob: -10.883769035339355
    9. 'p' → logprob: -11.508769035339355
    10. '   ' → logprob: -11.508769035339355

Token 48: ' o' (ID: 293)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.9600372314453125
    2. 'd' → logprob: -2.2100372314453125
    3. ' =' → logprob: -2.4600372314453125
    4. 'visited' → logprob: -2.7100372314453125
    5. 'g' → logprob: -2.9600372314453125
    6. '=' → logprob: -3.2100372314453125
    7. 'dist' → logprob: -3.2100372314453125
    8. 't' → logprob: -3.3350372314453125
    9. ' visited' → logprob: -3.4600372314453125
    10. ' d' → logprob: -3.5850372314453125

Token 49: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7112404704093933
    2. ' =' → logprob: -0.7112404704093933
    3. ',' → logprob: -4.336240291595459
    4. 'p' → logprob: -6.836240291595459
    5. 's' → logprob: -6.836240291595459
    6. ' ' → logprob: -7.336240291595459
    7. '   ' → logprob: -7.961240291595459
    8. 'f' → logprob: -8.336240768432617
    9. 'w' → logprob: -8.336240768432617
    10. 'ap' → logprob: -8.336240768432617

Token 50: ' map' (ID: 4014)
  Prédit: '[],'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[],' → logprob: -1.1371837854385376
    2. '[' → logprob: -1.2621837854385376
    3. ' map' → logprob: -1.8871837854385376
    4. 'map' → logprob: -2.012183666229248
    5. ' [],' → logprob: -3.387183666229248
    6. '[]' → logprob: -3.637183666229248
    7. ' [' → logprob: -3.637183666229248
    8. '0' → logprob: -4.137183666229248
    9. 'heap' → logprob: -6.762183666229248
    10. 'list' → logprob: -6.887183666229248

Token 51: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.1270800232887268
    2. '(' → logprob: -2.127079963684082
    3. '(lambda' → logprob: -10.002079963684082
    4. '<|end|>' → logprob: -10.502079963684082
    5. '(str' → logprob: -10.877079963684082
    6. ' (' → logprob: -11.627079963684082
    7. '[int' → logprob: -11.877079963684082
    8. '<int' → logprob: -12.002079963684082
    9. '(
' → logprob: -12.252079963684082
    10. ']int' → logprob: -12.502079963684082

Token 52: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05869416519999504
    2. '(' → logprob: -3.1836941242218018
    3. ',input' → logprob: -4.808694362640381
    4. ')' → logprob: -5.683694362640381
    5. '(input' → logprob: -6.183694362640381
    6. ' ,' → logprob: -7.308694362640381
    7. ' (' → logprob: -7.683694362640381
    8. ',int' → logprob: -8.308693885803223
    9. '(),' → logprob: -8.683693885803223
    10. ' input' → logprob: -9.433693885803223

Token 53: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.3485058546066284
    2. 'input' → logprob: -1.2235058546066284
    3. ')' → logprob: -10.598505973815918
    4. '(input' → logprob: -11.223505973815918
    5. ',input' → logprob: -12.473505973815918
    6. ' ' → logprob: -12.598505973815918
    7. '=input' → logprob: -13.223505973815918
    8. '[input' → logprob: -13.286005973815918
    9. '	input' → logprob: -13.411005973815918
    10. ' )' → logprob: -13.473505973815918

Token 54: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -6.0033853515051305e-05
    2. '()' → logprob: -9.750060081481934
    3. ')' → logprob: -14.375060081481934
    4. ' ().' → logprob: -14.750060081481934
    5. '())' → logprob: -14.875060081481934
    6. '(' → logprob: -16.625059127807617
    7. '());' → logprob: -16.875059127807617
    8. '(),' → logprob: -17.000059127807617
    9. '()).' → logprob: -17.625059127807617
    10. '()-' → logprob: -18.250059127807617

Token 55: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.6240566083070007e-06
    2. 'strip' → logprob: -14.250001907348633
    3. '(split' → logprob: -14.625001907348633
    4. 's' → logprob: -15.375001907348633
    5. ' split' → logprob: -15.875001907348633
    6. 'spl' → logprob: -16.875001907348633
    7. 'rstrip' → logprob: -17.125001907348633
    8. ')' → logprob: -17.750001907348633
    9. 'sp' → logprob: -18.375001907348633
    10. 'plit' → logprob: -19.125001907348633

Token 56: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8114544153213501
    2. '())' → logprob: -0.9364544153213501
    3. '()' → logprob: -1.81145441532135
    4. '())
' → logprob: -8.561454772949219
    5. '(' → logprob: -10.061454772949219
    6. ')
' → logprob: -10.186454772949219
    7. '()
' → logprob: -10.561454772949219
    8. ' )' → logprob: -11.061454772949219
    9. '   ' → logprob: -11.186454772949219
    10. '(),' → logprob: -11.561454772949219

Token 57: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9389050602912903
    2. '
' → logprob: -1.6889050006866455
    3. '    
' → logprob: -1.6889050006866455
    4. '<|end|>' → logprob: -1.6889050006866455
    5. '   
' → logprob: -4.938905239105225
    6. ' 
' → logprob: -5.063905239105225
    7. '    ' → logprob: -5.563905239105225
    8. '[' → logprob: -5.563905239105225
    9. '  
' → logprob: -5.563905239105225
    10. 'newline' → logprob: -5.813905239105225

Token 58: ' grid' (ID: 10586)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.5399243235588074
    2. ' graph' → logprob: -1.7899243831634521
    3. '   ' → logprob: -1.9149243831634521
    4. '    
' → logprob: -3.539924383163452
    5. 'map' → logprob: -4.414924144744873
    6. 'grid' (adapté à ' grid') → logprob: -5.414924144744873
    7. '
' → logprob: -5.414924144744873
    8. '	graph' → logprob: -5.414924144744873
    9. ' 
' → logprob: -5.539924144744873
    10. ' map' → logprob: -5.664924144744873

Token 59: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.008772573433816433
    2. '=' → logprob: -4.758772373199463
    3. '[' → logprob: -9.008772850036621
    4. '[]' → logprob: -12.008772850036621
    5. ')' → logprob: -12.133772850036621
    6. ' =
' → logprob: -12.383772850036621
    7. '<|end|>' → logprob: -12.383772850036621
    8. ' ' → logprob: -12.633772850036621
    9. '[:]' → logprob: -12.758772850036621
    10. ',' → logprob: -13.633772850036621

Token 60: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.03289632499217987
    2. ' [' → logprob: -3.5328962802886963
    3. '[]' → logprob: -6.657896518707275
    4. '[list' → logprob: -7.532896518707275
    5. '[[' → logprob: -7.657896518707275
    6. '[f' → logprob: -8.657896041870117
    7. ' []' → logprob: -9.407896041870117
    8. '[n' → logprob: -9.657896041870117
    9. '[m' → logprob: -9.907896041870117
    10. '[List' → logprob: -10.157896041870117

Token 61: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.07277709990739822
    2. ' list' → logprob: -2.822777032852173
    3. 'input' → logprob: -5.322777271270752
    4. '[input' → logprob: -5.572777271270752
    5. '[list' → logprob: -6.322777271270752
    6. ' input' → logprob: -8.447776794433594
    7. ' [' → logprob: -10.322776794433594
    8. '[' → logprob: -11.072776794433594
    9. '[]' → logprob: -12.197776794433594
    10. '   ' → logprob: -12.697776794433594

Token 62: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.007579535711556673
    2. '(input' → logprob: -5.007579326629639
    3. '(' → logprob: -7.132579326629639
    4. '(int' → logprob: -10.382579803466797
    5. 'map' → logprob: -11.007579803466797
    6. '()' → logprob: -11.257579803466797
    7. ' (' → logprob: -13.007579803466797
    8. 'input' → logprob: -14.257579803466797
    9. '(str' → logprob: -14.507579803466797
    10. ' map' → logprob: -14.632579803466797

Token 63: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -1.318681188422488e-05
    2. '(' → logprob: -12.12501335144043
    3. ')' → logprob: -12.75001335144043
    4. ' (' → logprob: -13.62501335144043
    5. ',int' → logprob: -14.00001335144043
    6. '=int' → logprob: -14.25001335144043
    7. 'int' → logprob: -14.37501335144043
    8. ']int' → logprob: -14.87501335144043
    9. ')(' → logprob: -15.00001335144043
    10. '<int' → logprob: -15.12501335144043

Token 64: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3147624135017395
    2. ',input' → logprob: -1.3147623538970947
    3. '(input' → logprob: -6.689762592315674
    4. 'input' → logprob: -8.439762115478516
    5. ' ,' → logprob: -10.689762115478516
    6. '(' → logprob: -11.189762115478516
    7. ' input' → logprob: -14.439762115478516
    8. '   ' → logprob: -14.689762115478516
    9. '[input' → logprob: -14.689762115478516
    10. '<input' → logprob: -14.814762115478516

Token 65: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.004621422383934259
    2. ' input' → logprob: -5.379621505737305
    3. ' ' → logprob: -15.379621505737305
    4. '	input' → logprob: -15.504621505737305
    5. 'list' → logprob: -15.754621505737305
    6. '(input' → logprob: -15.754621505737305
    7. ')' → logprob: -15.754621505737305
    8. '   ' → logprob: -16.004621505737305
    9. '<input' → logprob: -16.629621505737305
    10. ',input' → logprob: -17.129621505737305

Token 66: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -8.41866585687967e-06
    2. '.readline' → logprob: -11.875008583068848
    3. '()' → logprob: -13.875008583068848
    4. '(' → logprob: -15.500008583068848
    5. ' ().' → logprob: -15.875008583068848
    6. '.' → logprob: -16.37500762939453
    7. ')' → logprob: -16.87500762939453
    8. '().__' → logprob: -17.12500762939453
    9. '.split' → logprob: -17.75000762939453
    10. '   ' → logprob: -18.87500762939453

Token 67: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.676292231422849e-05
    2. 'rstrip' → logprob: -11.500017166137695
    3. 'strip' → logprob: -12.375017166137695
    4. '(split' → logprob: -13.625017166137695
    5. ' split' → logprob: -14.125017166137695
    6. 'read' → logprob: -14.750017166137695
    7. ')' → logprob: -17.500017166137695
    8. '.split' → logprob: -17.625017166137695
    9. 'spl' → logprob: -17.875017166137695
    10. ' ' → logprob: -18.375017166137695

Token 68: '()))' (ID: 16829)
  Prédit: '()))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.021438293159008026
    2. '))' → logprob: -3.8964383602142334
    3. '()' → logprob: -7.146438121795654
    4. '())' → logprob: -9.896438598632812
    5. '()))
' → logprob: -10.646438598632812
    6. '(' → logprob: -11.146438598632812
    7. '   ' → logprob: -11.771438598632812
    8. '().' → logprob: -12.646438598632812
    9. '()));' → logprob: -13.396438598632812
    10. ')' → logprob: -13.646438598632812

Token 69: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.23036006093025208
    2. ')' → logprob: -2.2303600311279297
    3. '())' → logprob: -2.3553600311279297
    4. 'for' → logprob: -6.35536003112793
    5. '(' → logprob: -6.73036003112793
    6. ' for' → logprob: -8.48036003112793
    7. '(W' → logprob: -9.10536003112793
    8. '   ' → logprob: -9.85536003112793
    9. ' ()' → logprob: -10.48036003112793
    10. ' )' → logprob: -11.10536003112793

Token 70: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.18957366049289703
    2. ' _' → logprob: -1.8145736455917358
    3. ' range' → logprob: -4.814573764801025
    4. 'range' → logprob: -7.189573764801025
    5. ' in' → logprob: -7.689573764801025
    6. '_range' → logprob: -8.439573287963867
    7. '(' → logprob: -9.314573287963867
    8. '(range' → logprob: -9.689573287963867
    9. ' ' → logprob: -9.814573287963867
    10. 'i' → logprob: -12.439573287963867

Token 71: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.07271115481853485
    2. ' range' → logprob: -2.822711229324341
    3. '(range' → logprob: -5.447710990905762
    4. ' in' → logprob: -5.697710990905762
    5. 'in' → logprob: -5.822710990905762
    6. '	range' → logprob: -9.947710990905762
    7. '_range' → logprob: -12.572710990905762
    8. '_' → logprob: -13.072710990905762
    9. '.range' → logprob: -13.072710990905762
    10. 'ange' → logprob: -13.072710990905762

Token 72: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.005235648714005947
    2. ' range' → logprob: -5.25523567199707
    3. '(range' → logprob: -13.25523567199707
    4. '	range' → logprob: -15.88023567199707
    5. '   ' → logprob: -19.25523567199707
    6. '.range' → logprob: -19.50523567199707
    7. ' ' → logprob: -19.75523567199707
    8. ')' → logprob: -19.75523567199707
    9. '  ' → logprob: -20.50523567199707
    10. '_range' → logprob: -21.25523567199707

Token 73: '(H' (ID: 20904)
  Prédit: '(H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -2.7014437364414334e-05
    2. '(' → logprob: -10.75002670288086
    3. 'H' → logprob: -12.62502670288086
    4. '(h' → logprob: -13.62502670288086
    5. ' (' → logprob: -15.12502670288086
    6. '(m' → logprob: -15.75002670288086
    7. '   ' → logprob: -16.12502670288086
    8. '(W' → logprob: -16.37502670288086
    9. '((' → logprob: -16.50002670288086
    10. '(o' → logprob: -16.50002670288086

Token 74: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.000500966387335211
    2. ')' → logprob: -7.7505011558532715
    3. ']' → logprob: -9.625500679016113
    4. ' )' → logprob: -13.250500679016113
    5. '   ' → logprob: -14.250500679016113
    6. ')],' → logprob: -14.875500679016113
    7. '))' → logprob: -15.500500679016113
    8. ')])' → logprob: -15.500500679016113
    9. ')]
' → logprob: -15.875500679016113
    10. ')}' → logprob: -15.875500679016113

Token 75: '   ' (ID: 271)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.8301917314529419
    2. '
' → logprob: -1.205191731452942
    3. 'distance' → logprob: -1.830191731452942
    4. 'dp' → logprob: -3.0801916122436523
    5. '   ' → logprob: -3.2051916122436523
    6. '    
' → logprob: -5.080191612243652
    7. ' dist' → logprob: -5.955191612243652
    8. ' distances' → logprob: -6.330191612243652
    9. 'visited' → logprob: -6.955191612243652
    10. '<|end|>' → logprob: -7.205191612243652

Token 76: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7443252205848694
    2. 'dist' → logprob: -1.8693251609802246
    3. 'distance' → logprob: -2.3693251609802246
    4. '<|end|>' → logprob: -2.7443251609802246
    5. ' 
' → logprob: -3.1193251609802246
    6. '   ' → logprob: -3.2443251609802246
    7. 'd' → logprob: -3.6193251609802246
    8. '    
' → logprob: -4.119325160980225
    9. ' distances' → logprob: -4.494325160980225
    10. 'dp' → logprob: -4.494325160980225

Token 77: ' pos' (ID: 1253)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.2847258746623993
    2. ' dist' → logprob: -1.7847259044647217
    3. 'dp' → logprob: -3.7847259044647217
    4. 'visited' → logprob: -4.409725666046143
    5. 'distance' → logprob: -5.034725666046143
    6. ' visited' → logprob: -5.159725666046143
    7. '#' → logprob: -5.284725666046143
    8. 'dire' → logprob: -5.659725666046143
    9. ' distances' → logprob: -5.909725666046143
    10. ' directions' → logprob: -6.284725666046143

Token 78: ' of' (ID: 328)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.2795250415802002
    2. ' =' → logprob: -2.0295250415802
    3. 'itions' → logprob: -2.6545250415802
    4. 'sible' → logprob: -3.5295250415802
    5. '=' → logprob: -5.029524803161621
    6. 'ition' → logprob: -6.154524803161621
    7. '_s' → logprob: -7.404524803161621
    8. 'itional' → logprob: -7.529524803161621
    9. '=[]' → logprob: -7.529524803161621
    10. '_list' → logprob: -8.154524803161621

Token 79: ' oxygen' (ID: 34398)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.4765852093696594
    2. ' f' → logprob: -2.6015851497650146
    3. 'o' → logprob: -3.1015851497650146
    4. ''' → logprob: -3.2265851497650146
    5. 'F' → logprob: -3.6015851497650146
    6. 's' → logprob: -3.7890851497650146
    7. ''s' → logprob: -3.9140851497650146
    8. '0' → logprob: -4.414085388183594
    9. ' ' → logprob: -4.414085388183594
    10. ''f' → logprob: -4.476585388183594

Token 80: ' cells' (ID: 11242)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.8707907199859619
    2. ' =' → logprob: -1.370790719985962
    3. '_' → logprob: -1.495790719985962
    4. '=' → logprob: -3.745790719985962
    5. '_s' → logprob: -3.995790719985962
    6. ' ' → logprob: -4.120790481567383
    7. '_positions' → logprob: -4.495790481567383
    8. ',' → logprob: -4.620790481567383
    9. '[' → logprob: -5.245790481567383
    10. '  ' → logprob: -6.120790481567383

Token 81: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 82: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 83: ' oxy' (ID: 154299)
  Prédit: 'oxygen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oxygen' → logprob: -0.25718194246292114
    2. ' oxygen' → logprob: -1.7571818828582764
    3. 'o' → logprob: -3.5071818828582764
    4. ' o' → logprob: -4.2571821212768555
    5. 'oxy' (adapté à ' oxy') → logprob: -5.7571821212768555
    6. ' oxy' → logprob: -6.5071821212768555
    7. 'pos' → logprob: -6.7571821212768555
    8. 'positions' → logprob: -7.1321821212768555
    9. ' positions' → logprob: -7.2571821212768555
    10. ' pos' → logprob: -7.2571821212768555

Token 84: '_cells' (ID: 93468)
  Prédit: 'gens'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gens' → logprob: -0.7555391192436218
    2. 'gen' → logprob: -1.3805391788482666
    3. '_positions' → logprob: -2.6305391788482666
    4. '=[]' → logprob: -2.7555391788482666
    5. 'g' → logprob: -3.2555391788482666
    6. '=' → logprob: -3.2555391788482666
    7. '_cells' → logprob: -3.5055391788482666
    8. ' =' → logprob: -4.5055389404296875
    9. '_pos' → logprob: -4.5055389404296875
    10. 'cells' → logprob: -5.2555389404296875

Token 85: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3871074914932251
    2. '=' → logprob: -1.137107491493225
    3. '=[]' → logprob: -8.387107849121094
    4. ',' → logprob: -12.512107849121094
    5. '=[' → logprob: -13.262107849121094
    6. ' =[' → logprob: -13.262107849121094
    7. ' ' → logprob: -14.762107849121094
    8. '=[]
' → logprob: -15.387107849121094
    9. '＝' → logprob: -15.887107849121094
    10. 's' → logprob: -16.137107849121094

Token 86: ' []
' (ID: 8911)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.5255852341651917
    2. '[]' → logprob: -1.0255851745605469
    3. ' [' → logprob: -3.900585174560547
    4. '[' → logprob: -4.275585174560547
    5. ' [(' → logprob: -4.525585174560547
    6. '[(' → logprob: -5.400585174560547
    7. ' [
' → logprob: -8.650585174560547
    8. '[
' → logprob: -9.275585174560547
    9. '[:]' → logprob: -9.400585174560547
    10. '[]
' → logprob: -9.525585174560547

Token 87: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7089039087295532
    2. 'for' → logprob: -1.0839039087295532
    3. ' for' → logprob: -2.2089037895202637
    4. '
' → logprob: -3.2089037895202637
    5. '	for' → logprob: -5.083903789520264
    6. '<|end|>' → logprob: -5.333903789520264
    7. '    
' → logprob: -5.833903789520264
    8. ' ' → logprob: -6.333903789520264
    9. '  
' → logprob: -6.958903789520264
    10. ':' → logprob: -7.458903789520264

Token 88: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.11862262338399887
    2. ' for' → logprob: -2.2436225414276123
    3. '   ' → logprob: -5.243622779846191
    4. '	for' → logprob: -8.118622779846191
    5. '
' → logprob: -9.243622779846191
    6. '    
' → logprob: -10.368622779846191
    7. ' ' → logprob: -10.493622779846191
    8. '    ' → logprob: -11.493622779846191
    9. ' 
' → logprob: -11.493622779846191
    10. '  
' → logprob: -12.243622779846191

Token 89: ' y' (ID: 342)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.18713794648647308
    2. ' y' → logprob: -2.5621378421783447
    3. 'i' → logprob: -2.9371378421783447
    4. ' r' → logprob: -3.5621378421783447
    5. ' h' → logprob: -5.062138080596924
    6. 'y' → logprob: -5.937138080596924
    7. 'r' → logprob: -6.187138080596924
    8. 'h' → logprob: -7.687138080596924
    9. ' ' → logprob: -8.562137603759766
    10. ' row' → logprob: -8.687137603759766

Token 90: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04892059788107872
    2. 'in' → logprob: -3.0489206314086914
    3. ' ' → logprob: -8.548920631408691
    4. ',' → logprob: -9.048920631408691
    5. '<|end|>' → logprob: -12.298920631408691
    6. '	in' → logprob: -12.423920631408691
    7. 'range' → logprob: -12.548920631408691
    8. 'y' → logprob: -13.048920631408691
    9. ' ,' → logprob: -13.173920631408691
    10. '   ' → logprob: -14.048920631408691

Token 91: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.008624501526355743
    2. 'range' → logprob: -4.75862455368042
    3. ' ' → logprob: -12.633624076843262
    4. ' xrange' → logprob: -12.633624076843262
    5. '	range' → logprob: -12.883624076843262
    6. '(range' → logprob: -14.883624076843262
    7. ' r' → logprob: -16.008625030517578
    8. 'ange' → logprob: -16.133625030517578
    9. ' ra' → logprob: -16.883625030517578
    10. ' rang' → logprob: -17.133625030517578

Token 92: '(H' (ID: 20904)
  Prédit: '(H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -0.38164022564888
    2. ' H' → logprob: -1.5066401958465576
    3. 'H' → logprob: -2.6316401958465576
    4. '(' → logprob: -4.381640434265137
    5. ' (' → logprob: -4.506640434265137
    6. ' ' → logprob: -10.506640434265137
    7. ')' → logprob: -10.506640434265137
    8. '	H' → logprob: -11.256640434265137
    9. ' range' → logprob: -11.631640434265137
    10. '1' → logprob: -12.131640434265137

Token 93: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.04348631948232651
    2. '):
' → logprob: -3.1684863567352295
    3. ')' → logprob: -7.91848611831665
    4. ':' → logprob: -10.168486595153809
    5. '   ' → logprob: -10.418486595153809
    6. ' ):' → logprob: -10.418486595153809
    7. '+' → logprob: -11.418486595153809
    8. '):
' → logprob: -12.168486595153809
    9. ' ' → logprob: -12.668486595153809
    10. ' ):
' → logprob: -13.418486595153809

Token 94: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2733379602432251
    2. ':' → logprob: -2.0233378410339355
    3. '   ' → logprob: -2.7733378410339355
    4. '    ' → logprob: -4.0233378410339355
    5. '<|end|>' → logprob: -4.0233378410339355
    6. ' ' → logprob: -5.1483378410339355
    7. '	   ' → logprob: -7.0233378410339355
    8. '	' → logprob: -7.7733378410339355
    9. '<|end|>' → logprob: -7.8983378410339355
    10. '     ' → logprob: -8.523338317871094

Token 95: ' for' (ID: 395)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6707962155342102
    2. '   ' → logprob: -1.0457961559295654
    3. ' for' → logprob: -2.1707961559295654
    4. '    ' → logprob: -4.4207963943481445
    5. '<|end|>' → logprob: -5.0457963943481445
    6. '  ' → logprob: -6.9207963943481445
    7. 'for' (adapté à ' for') → logprob: -6.9207963943481445
    8. '	for' → logprob: -6.9207963943481445
    9. '	   ' → logprob: -7.5457963943481445
    10. '       ' → logprob: -8.170796394348145

Token 96: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.3869468867778778
    2. ' x' → logprob: -1.1369469165802002
    3. ' range' → logprob: -10.011946678161621
    4. 'range' → logprob: -10.761946678161621
    5. ' ' → logprob: -12.261946678161621
    6. ' W' → logprob: -12.761946678161621
    7. 'W' → logprob: -14.261946678161621
    8. ' xrange' → logprob: -14.511946678161621
    9. '	x' → logprob: -15.136946678161621
    10. '```' → logprob: -15.636946678161621

Token 97: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.007781841326504946
    2. 'in' → logprob: -4.882781982421875
    3. ' ' → logprob: -8.882781982421875
    4. '	in' → logprob: -11.257781982421875
    5. '   ' → logprob: -11.757781982421875
    6. '<|end|>' → logprob: -12.257781982421875
    7. '  ' → logprob: -12.882781982421875
    8. '    ' → logprob: -13.007781982421875
    9. 'In' → logprob: -14.007781982421875
    10. ')' → logprob: -14.257781982421875

Token 98: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.0011715330183506012
    2. 'range' → logprob: -6.751171588897705
    3. ' xrange' → logprob: -14.001171112060547
    4. '	range' → logprob: -15.126171112060547
    5. '(range' → logprob: -15.751171112060547
    6. ' ' → logprob: -16.501171112060547
    7. '_range' → logprob: -20.376171112060547
    8. '   ' → logprob: -20.376171112060547
    9. '    ' → logprob: -20.501171112060547
    10. '  ' → logprob: -20.751171112060547

Token 99: '(W' (ID: 26031)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.63355553150177
    2. '(' → logprob: -1.13355553150177
    3. '(H' → logprob: -2.0085554122924805
    4. '(range' → logprob: -4.8835554122924805
    5. ' range' → logprob: -5.5085554122924805
    6. '(W' → logprob: -6.7585554122924805
    7. 'range' → logprob: -8.38355541229248
    8. ')' → logprob: -9.75855541229248
    9. '(O' → logprob: -10.13355541229248
    10. ' ' → logprob: -10.13355541229248

Token 100: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.38951677083969116
    2. '):' → logprob: -1.139516830444336
    3. ')' → logprob: -6.639516830444336
    4. ' ):
' → logprob: -7.139516830444336
    5. ' ):' → logprob: -8.514516830444336
    6. ':' → logprob: -9.014516830444336
    7. '+' → logprob: -9.514516830444336
    8. '   ' → logprob: -9.514516830444336
    9. 'if' → logprob: -11.264516830444336
    10. '):
' → logprob: -11.264516830444336

Token 101: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005915050394833088
    2. '       ' → logprob: -5.38091516494751
    3. '<|end|>' → logprob: -8.005914688110352
    4. ':' → logprob: -8.255914688110352
    5. ' if' → logprob: -8.255914688110352
    6. '        ' → logprob: -9.130914688110352
    7. '	       ' → logprob: -10.005914688110352
    8. ',' → logprob: -10.255914688110352
    9. '<|end|>' → logprob: -10.380914688110352
    10. '          ' → logprob: -10.380914688110352

Token 102: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.40983739495277405
    2. '               ' → logprob: -1.7848373651504517
    3. 'if' (adapté à ' if') → logprob: -2.409837484359741
    4. '           ' → logprob: -2.784837484359741
    5. '       ' → logprob: -5.284837245941162
    6. ':
' → logprob: -6.284837245941162
    7. ':' → logprob: -6.284837245941162
    8. ' 
' → logprob: -6.409837245941162
    9. '   ' → logprob: -6.534837245941162
    10. '<|end|>' → logprob: -6.534837245941162

Token 103: ' grid' (ID: 10586)
  Prédit: ' grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' grid' → logprob: -0.005239564459770918
    2. 'grid' → logprob: -5.255239486694336
    3. '	grid' → logprob: -12.505239486694336
    4. '(grid' → logprob: -13.380239486694336
    5. ':grid' → logprob: -15.505239486694336
    6. ' ' → logprob: -16.005239486694336
    7. '.grid' → logprob: -16.005239486694336
    8. 'Grid' → logprob: -16.880239486694336
    9. '<|end|>' → logprob: -17.755239486694336
    10. ' grids' → logprob: -17.755239486694336

Token 104: '[y' (ID: 34551)
  Prédit: '[y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -4.320199877838604e-07
    2. '[x' → logprob: -15.125
    3. '[Y' → logprob: -17.125
    4. '[' → logprob: -17.875
    5. ' [' → logprob: -18.75
    6. '[z' → logprob: -19.75
    7. '```' → logprob: -20.0
    8. '[
' → logprob: -20.5
    9. '[j' → logprob: -20.625
    10. 'y' → logprob: -21.0

Token 105: '][' (ID: 2696)
  Prédit: '[y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -0.12905342876911163
    2. '][' → logprob: -2.1290533542633057
    3. '[x' → logprob: -6.254053592681885
    4. ']' → logprob: -10.004053115844727
    5. '[' → logprob: -10.504053115844727
    6. ' [' → logprob: -10.754053115844727
    7. '[
' → logprob: -11.004053115844727
    8. '[z' → logprob: -11.129053115844727
    9. ' ][' → logprob: -11.379053115844727
    10. '```' → logprob: -11.504053115844727

Token 106: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -9.253090865968261e-06
    2. ' x' → logprob: -11.625009536743164
    3. '	x' → logprob: -16.375009536743164
    4. '[x' → logprob: -16.500009536743164
    5. ' ' → logprob: -17.375009536743164
    6. '"x' → logprob: -17.375009536743164
    7. ')x' → logprob: -17.500009536743164
    8. ''x' → logprob: -17.750009536743164
    9. '][' → logprob: -17.875009536743164
    10. ']' → logprob: -18.125009536743164

Token 107: ']' (ID: 60)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.23596663773059845
    2. '==' → logprob: -1.735966682434082
    3. ']' → logprob: -3.735966682434082
    4. ']==' → logprob: -4.860966682434082
    5. ')' → logprob: -6.235966682434082
    6. ' ]' → logprob: -9.110966682434082
    7. '[' → logprob: -9.485966682434082
    8. ')==' → logprob: -9.610966682434082
    9. ' ' → logprob: -9.735966682434082
    10. '=' → logprob: -10.110966682434082

Token 108: ' >' (ID: 1424)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.062250107526779175
    2. '==' → logprob: -2.8122501373291016
    3. '=' → logprob: -8.937250137329102
    4. ' ' → logprob: -9.687250137329102
    5. ' =' → logprob: -10.312250137329102
    6. '[' → logprob: -10.937250137329102
    7. '>' → logprob: -11.687250137329102
    8. '   ' → logprob: -12.312250137329102
    9. ' ' → logprob: -12.562250137329102
    10. '==
' → logprob: -12.687250137329102

Token 109: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2946464419364929
    2. '0' → logprob: -1.7946465015411377
    3. '=' → logprob: -2.5446465015411377
    4. ' o' → logprob: -4.919646263122559
    5. '1' → logprob: -7.044646263122559
    6. 'o' → logprob: -7.294646263122559
    7. '9' → logprob: -8.544646263122559
    8. '=o' → logprob: -8.544646263122559
    9. 'm' → logprob: -8.794646263122559
    10. '2' → logprob: -8.794646263122559

Token 110: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.4416556656360626
    2. ' ' → logprob: -1.0666556358337402
    3. 'o' → logprob: -4.69165563583374
    4. ' o' → logprob: -6.69165563583374
    5. '1' → logprob: -7.06665563583374
    6. '2' → logprob: -7.94165563583374
    7. '=' → logprob: -7.94165563583374
    8. '9' → logprob: -9.066656112670898
    9. '6' → logprob: -9.191656112670898
    10. '3' → logprob: -9.191656112670898

Token 111: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.3568805456161499
    2. ':' → logprob: -1.23188054561615
    3. 'and' → logprob: -5.2318806648254395
    4. ':
' → logprob: -6.6068806648254395
    5. '           ' → logprob: -7.2318806648254395
    6. ' :' → logprob: -7.3568806648254395
    7. '               ' → logprob: -9.356880187988281
    8. ' ' → logprob: -9.356880187988281
    9. '   ' → logprob: -10.231880187988281
    10. ',' → logprob: -10.481880187988281

Token 112: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.000978743890300393
    2. '                
' → logprob: -8.250978469848633
    3. '           ' → logprob: -8.375978469848633
    4. ' and' → logprob: -8.500978469848633
    5. ':' → logprob: -10.125978469848633
    6. ':
' → logprob: -10.250978469848633
    7. ' ' → logprob: -10.250978469848633
    8. '              ' → logprob: -10.375978469848633
    9. '<|end|>' → logprob: -10.875978469848633
    10. ' 
' → logprob: -11.000978469848633

Token 113: ' oxy' (ID: 154299)
  Prédit: ' oxy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' oxy' → logprob: -0.38098421692848206
    2. '               ' → logprob: -1.2559841871261597
    3. '           ' → logprob: -4.630984306335449
    4. '                ' → logprob: -5.255984306335449
    5. 'oxy' (adapté à ' oxy') → logprob: -5.630984306335449
    6. ' oxygen' → logprob: -6.005984306335449
    7. '                
' → logprob: -6.255984306335449
    8. '                   ' → logprob: -6.505984306335449
    9. '            ' → logprob: -6.505984306335449
    10. '   ' → logprob: -6.755984306335449

Token 114: '_cells' (ID: 93468)
  Prédit: '_cells'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cells' → logprob: -5.796184723294573e-06
    2. '_' → logprob: -12.250005722045898
    3. '_cell' → logprob: -14.625005722045898
    4. '_c' → logprob: -15.250005722045898
    5. 'cells' → logprob: -16.0000057220459
    6. ' _' → logprob: -16.6250057220459
    7. ')_' → logprob: -16.8750057220459
    8. 's' → logprob: -17.6250057220459
    9. 'Cells' → logprob: -17.6250057220459
    10. '```' → logprob: -17.6250057220459

Token 115: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.062092047184705734
    2. '.' → logprob: -2.8120920658111572
    3. ' .' → logprob: -9.437091827392578
    4. '.app' → logprob: -11.437091827392578
    5. '.ap' → logprob: -11.562091827392578
    6. '.add' → logprob: -11.937091827392578
    7. '.extend' → logprob: -12.312091827392578
    8. '.push' → logprob: -12.562091827392578
    9. '.setdefault' → logprob: -12.687091827392578
    10. '.Append' → logprob: -13.687091827392578

Token 116: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.3884597718715668
    2. '(' → logprob: -1.1384598016738892
    3. '(x' → logprob: -7.0134596824646
    4. '(y' → logprob: -7.3884596824646
    5. ' (' → logprob: -10.138460159301758
    6. '(
' → logprob: -10.638460159301758
    7. ' ((' → logprob: -13.388460159301758
    8. '(grid' → logprob: -13.763460159301758
    9. '([' → logprob: -14.013460159301758
    10. ' ' → logprob: -14.138460159301758

Token 117: 'x' (ID: 87)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.1648840308189392
    2. 'x' → logprob: -1.914884090423584
    3. ' y' → logprob: -5.414884090423584
    4. ' x' → logprob: -8.789883613586426
    5. '   ' → logprob: -11.539883613586426
    6. ')y' → logprob: -11.664883613586426
    7. ')' → logprob: -12.039883613586426
    8. '	y' → logprob: -12.164883613586426
    9. ''y' → logprob: -12.789883613586426
    10. 'grid' → logprob: -12.789883613586426

Token 118: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004230954684317112
    2. ',y' → logprob: -5.629230976104736
    3. ' ,' → logprob: -7.379230976104736
    4. ')' → logprob: -13.129230499267578
    5. ',
' → logprob: -13.379230499267578
    6. '<|end|>' → logprob: -14.004230499267578
    7. '‌,' → logprob: -14.879230499267578
    8. ',x' → logprob: -15.754230499267578
    9. '),' → logprob: -15.879230499267578
    10. '   ' → logprob: -15.879230499267578

Token 119: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.69315105676651
    2. ' y' → logprob: -0.69315105676651
    3. ' ' → logprob: -13.193151473999023
    4. ')y' → logprob: -14.193151473999023
    5. '	y' → logprob: -14.318151473999023
    6. '
' → logprob: -15.568151473999023
    7. ',y' → logprob: -16.193151473999023
    8. ')' → logprob: -16.443151473999023
    9. '<|end|>' → logprob: -16.568151473999023
    10. ' ' → logprob: -16.693151473999023

Token 120: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.2829168438911438
    2. ',' → logprob: -1.407916784286499
    3. ')' → logprob: -6.532917022705078
    4. ' ))' → logprob: -9.282917022705078
    5. '))
' → logprob: -9.532917022705078
    6. ' ,' → logprob: -9.782917022705078
    7. '),' → logprob: -11.032917022705078
    8. ')))' → logprob: -11.157917022705078
    9. ',k' → logprob: -12.157917022705078
    10. '   ' → logprob: -12.407917022705078

Token 121: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.644753098487854
    2. '   ' → logprob: -1.519753098487854
    3. '<|end|>' → logprob: -2.0197529792785645
    4. '    
' → logprob: -3.3947529792785645
    5. ' 
' → logprob: -3.5197529792785645
    6. ')' → logprob: -4.0197529792785645
    7. '  
' → logprob: -4.6447529792785645
    8. ' ' → logprob: -5.1447529792785645
    9. '#' → logprob: -5.2697529792785645
    10. ',' → logprob: -5.7697529792785645

Token 122: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4497973620891571
    2. 'dist' → logprob: -1.6997973918914795
    3. 'distance' → logprob: -2.1997973918914795
    4. '   ' → logprob: -3.5747973918914795
    5. '<|end|>' → logprob: -4.4497971534729
    6. '    
' → logprob: -4.6997971534729
    7. 'def' → logprob: -5.4497971534729
    8. ' 
' → logprob: -5.8247971534729
    9. '  
' → logprob: -6.4497971534729
    10. 'dp' → logprob: -6.6997971534729

Token 123: ' initial' (ID: 4871)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.0463818684220314
    2. 'def' → logprob: -4.046381950378418
    3. 'dire' → logprob: -5.046381950378418
    4. '#' → logprob: -6.046381950378418
    5. 'dp' → logprob: -6.171381950378418
    6. ' dist' → logprob: -6.296381950378418
    7. 'INF' → logprob: -6.296381950378418
    8. 'dx' → logprob: -6.421381950378418
    9. 'visited' → logprob: -6.421381950378418
    10. 'distance' → logprob: -6.546381950378418

Token 124: ' row' (ID: 5225)
  Prédit: '_dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_dist' → logprob: -0.7040703296661377
    2. 'dist' → logprob: -0.8290703296661377
    3. '_' → logprob: -4.454070091247559
    4. '_positions' → logprob: -4.454070091247559
    5. '_pos' → logprob: -5.329070091247559
    6. '_queue' → logprob: -5.454070091247559
    7. '_distance' → logprob: -5.579070091247559
    8. 'queue' → logprob: -5.579070091247559
    9. '_cost' → logprob: -5.704070091247559
    10. ' distances' → logprob: -5.954070091247559

Token 125: ' y' (ID: 342)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.402819961309433
    2. 'dist' → logprob: -1.9028199911117554
    3. 's' → logprob: -2.402819871902466
    4. ',' → logprob: -3.777819871902466
    5. 'dp' → logprob: -4.652820110321045
    6. 'distance' → logprob: -4.902820110321045
    7. '_dist' → logprob: -5.027820110321045
    8. '=' → logprob: -5.277820110321045
    9. 'cost' → logprob: -5.652820110321045
    10. '0' → logprob: -5.652820110321045

Token 126: '=' (ID: 28)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8723726272583008
    2. ' =' → logprob: -1.2473726272583008
    3. 's' → logprob: -1.6223726272583008
    4. '=' → logprob: -3.497372627258301
    5. ' ,' → logprob: -3.872372627258301
    6. 'dist' → logprob: -4.872372627258301
    7. '<|end|>' → logprob: -4.872372627258301
    8. 'x' → logprob: -5.497372627258301
    9. '_positions' → logprob: -5.497372627258301
    10. 'positions' → logprob: -5.747372627258301

Token 127: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.046661559492349625
    2. ' ' → logprob: -3.296661615371704
    3. 'H' → logprob: -5.296661376953125
    4. 'o' → logprob: -7.296661376953125
    5. ' H' → logprob: -7.296661376953125
    6. '1' → logprob: -7.796661376953125
    7. 'f' → logprob: -7.796661376953125
    8. 'm' → logprob: -8.109161376953125
    9. 'O' → logprob: -8.734161376953125
    10. '[' → logprob: -9.046661376953125

Token 128: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 129: ' can' (ID: 665)
  Prédit: ' dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dist' → logprob: -0.7440899610519409
    2. 'dist' → logprob: -1.244089961051941
    3. ' distances' → logprob: -2.9940900802612305
    4. ' queue' → logprob: -3.4940900802612305
    5. ' visited' → logprob: -3.6190900802612305
    6. ' q' → logprob: -4.1190900802612305
    7. 'visited' → logprob: -4.1190900802612305
    8. 'queue' → logprob: -4.2440900802612305
    9. 'q' → logprob: -4.2440900802612305
    10. 'distance' → logprob: -4.4940900802612305

Token 130: ' start' (ID: 1604)
  Prédit: ' be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.6674351096153259
    2. ' move' → logprob: -1.9174351692199707
    3. ' reach' → logprob: -3.1674351692199707
    4. 'move' → logprob: -3.1674351692199707
    5. 't' → logprob: -3.7924351692199707
    6. ' start' → logprob: -4.042435169219971
    7. '   ' → logprob: -4.417435169219971
    8. 'start' → logprob: -4.417435169219971
    9. ' pass' → logprob: -4.542435169219971
    10. ' go' → logprob: -4.667435169219971

Token 131: ' at' (ID: 540)
  Prédit: ' from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' from' → logprob: -1.042847990989685
    2. '<|end|>' → logprob: -1.667847990989685
    3. 'from' → logprob: -2.0428481101989746
    4. ' at' → logprob: -2.2928481101989746
    5. 'positions' → logprob: -2.7928481101989746
    6. ' with' → logprob: -2.7928481101989746
    7. ' positions' → logprob: -3.7928481101989746
    8. ',' → logprob: -4.167848110198975
    9. '_positions' → logprob: -4.792848110198975
    10. ' ' → logprob: -4.917848110198975

Token 132: ' any' (ID: 1062)
  Prédit: ' any'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' any' → logprob: -0.36591729521751404
    2. '0' → logprob: -1.9909173250198364
    3. 'any' → logprob: -3.115917205810547
    4. ' ' → logprob: -4.115917205810547
    5. ' all' → logprob: -4.240917205810547
    6. ' oxy' → logprob: -4.240917205810547
    7. 'x' → logprob: -4.615917205810547
    8. ' (' → logprob: -4.615917205810547
    9. ' x' → logprob: -4.865917205810547
    10. ' oxygen' → logprob: -4.865917205810547

Token 133: ' cell' (ID: 4206)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.5407399535179138
    2. 'x' → logprob: -1.0407400131225586
    3. ' (' → logprob: -4.040740013122559
    4. '(x' → logprob: -4.165740013122559
    5. ' of' → logprob: -4.415740013122559
    6. '(' → logprob: -5.415740013122559
    7. ' cell' → logprob: -5.540740013122559
    8. ' position' → logprob: -6.040740013122559
    9. ' oxygen' → logprob: -6.165740013122559
    10. ' column' → logprob: -6.415740013122559

Token 134: ' there' (ID: 1354)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.459408164024353
    2. '<|end|>' → logprob: -1.584408164024353
    3. ',' → logprob: -2.5844082832336426
    4. '
' → logprob: -3.5844082832336426
    5. ':' → logprob: -4.084408283233643
    6. '    
' → logprob: -4.709408283233643
    7. '  
' → logprob: -5.334408283233643
    8. ' ,' → logprob: -5.334408283233643
    9. ' ' → logprob: -5.834408283233643
    10. '<|end|>' → logprob: -5.834408283233643

Token 135: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.47569578886032104
    2. '   ' → logprob: -1.6006958484649658
    3. ',' → logprob: -2.850695848464966
    4. '<|end|>' → logprob: -3.100695848464966
    5. '    
' → logprob: -3.225695848464966
    6. ':' → logprob: -4.225695610046387
    7. ',
' → logprob: -5.225695610046387
    8. '  
' → logprob: -5.725695610046387
    9. '.' → logprob: -6.100695610046387
    10. '   
' → logprob: -6.225695610046387

Token 136: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.42652246356010437
    2. '
' → logprob: -1.4265224933624268
    3. '    
' → logprob: -3.3015224933624268
    4. '<|end|>' → logprob: -3.6765224933624268
    5. '  
' → logprob: -4.301522254943848
    6. ':' → logprob: -4.551522254943848
    7. ',' → logprob: -5.301522254943848
    8. ' 
' → logprob: -5.301522254943848
    9. '   
' → logprob: -5.426522254943848
    10. '  ' → logprob: -6.676522254943848

Token 137: ' #' (ID: 1069)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.1965615600347519
    2. '
' → logprob: -3.196561574935913
    3. '   ' → logprob: -3.196561574935913
    4. 'dp' → logprob: -3.696561574935913
    5. ' dist' → logprob: -3.696561574935913
    6. 'distance' → logprob: -3.696561574935913
    7. ' distances' → logprob: -4.696561336517334
    8. '    
' → logprob: -5.821561336517334
    9. ' dp' → logprob: -6.446561336517334
    10. 'cost' → logprob: -6.446561336517334

Token 138: ' State' (ID: 5388)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.06574099510908127
    2. ' dist' → logprob: -3.9407410621643066
    3. 'import' → logprob: -4.065741062164307
    4. 'dp' → logprob: -5.190741062164307
    5. '#' → logprob: -5.565741062164307
    6. 'start' → logprob: -5.690741062164307
    7. '   ' → logprob: -5.940741062164307
    8. 'distance' → logprob: -6.190741062164307
    9. 'visited' → logprob: -6.565741062164307
    10. 'from' → logprob: -7.065741062164307

Token 139: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.019778747111558914
    2. 's' → logprob: -4.144778728485107
    3. ' ' → logprob: -7.144778728485107
    4. '=' → logprob: -7.394778728485107
    5. '_space' → logprob: -7.519778728485107
    6. ' s' → logprob: -7.644778728485107
    7. ':' → logprob: -8.019779205322266
    8. ',' → logprob: -8.394779205322266
    9. 'space' → logprob: -9.144779205322266
    10. ' =
' → logprob: -9.269779205322266

Token 140: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.03732340410351753
    2. '(x' → logprob: -4.162323474884033
    3. ' x' → logprob: -5.287323474884033
    4. '(' → logprob: -5.537323474884033
    5. 'x' → logprob: -5.787323474884033
    6. '(heap' → logprob: -6.162323474884033
    7. ' heap' → logprob: -6.287323474884033
    8. 'heap' → logprob: -6.412323474884033
    9. '   ' → logprob: -7.412323474884033
    10. '(f' → logprob: -8.287322998046875

Token 141: 'cost' (ID: 33457)
  Prédit: 'cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.11148279905319214
    2. ' cost' → logprob: -3.361482858657837
    3. 'f' → logprob: -3.986482858657837
    4. 'distance' → logprob: -4.361482620239258
    5. 'dist' → logprob: -4.736482620239258
    6. 'fuel' → logprob: -5.236482620239258
    7. 'time' → logprob: -5.486482620239258
    8. 'priority' → logprob: -5.736482620239258
    9. 'x' → logprob: -6.611482620239258
    10. ' f' → logprob: -6.611482620239258

Token 142: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001261663855984807
    2. ')' → logprob: -7.2512617111206055
    3. ' ,' → logprob: -7.8762617111206055
    4. ',
' → logprob: -9.251261711120605
    5. ',)' → logprob: -10.876261711120605
    6. '=' → logprob: -11.501261711120605
    7. 's' → logprob: -11.751261711120605
    8. ' =' → logprob: -12.376261711120605
    9. '<|end|>' → logprob: -12.501261711120605
    10. '_,' → logprob: -12.501261711120605

Token 143: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.3919485807418823
    2. ' x' → logprob: -1.1419485807418823
    3. ' y' → logprob: -6.266948699951172
    4. 'y' → logprob: -6.766948699951172
    5. ')' → logprob: -7.141948699951172
    6. ' (' → logprob: -9.016948699951172
    7. '0' → logprob: -9.016948699951172
    8. ' ' → logprob: -9.141948699951172
    9. ' heap' → logprob: -9.266948699951172
    10. 'heap' → logprob: -9.329448699951172

Token 144: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001944461022503674
    2. ')' → logprob: -6.251944541931152
    3. ' ,' → logprob: -12.001944541931152
    4. ',y' → logprob: -12.751944541931152
    5. ',
' → logprob: -13.001944541931152
    6. '<|end|>' → logprob: -13.501944541931152
    7. '```' → logprob: -14.501944541931152
    8. ' )' → logprob: -15.001944541931152
    9. '_,' → logprob: -15.001944541931152
    10. '),' → logprob: -15.126944541931152

Token 145: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.5770655870437622
    2. 'y' → logprob: -0.8270655870437622
    3. '0' → logprob: -7.202065467834473
    4. ' ' → logprob: -8.702065467834473
    5. ')' → logprob: -9.327065467834473
    6. ',' → logprob: -10.077065467834473
    7. '   ' → logprob: -10.702065467834473
    8. '    ' → logprob: -11.327065467834473
    9. '  ' → logprob: -12.514565467834473
    10. ' )' → logprob: -12.702065467834473

Token 146: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006758584058843553
    2. ',' → logprob: -7.500675678253174
    3. ')
' → logprob: -9.250676155090332
    4. ' )' → logprob: -10.875676155090332
    5. '   ' → logprob: -12.625676155090332
    6. '),' → logprob: -13.375676155090332
    7. ')

' → logprob: -14.250676155090332
    8. ')`' → logprob: -14.875676155090332
    9. ')...' → logprob: -15.250676155090332
    10. '))' → logprob: -15.250676155090332

Token 147: ' oxygen' (ID: 34398)
  Prédit: 'oxygen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oxygen' → logprob: -1.2405297756195068
    2. 'mask' → logprob: -1.7405297756195068
    3. 'fuel' → logprob: -2.740529775619507
    4. 'f' → logprob: -2.740529775619507
    5. 'o' → logprob: -2.865529775619507
    6. 'remaining' → logprob: -3.240529775619507
    7. ' mask' → logprob: -3.365529775619507
    8. ' oxygen' → logprob: -3.615529775619507
    9. 'oxy' → logprob: -3.615529775619507
    10. ' remaining' → logprob: -4.115530014038086

Token 148: '_left' (ID: 22189)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.039588071405887604
    2. ',' → logprob: -4.03958797454834
    3. '_level' → logprob: -4.78958797454834
    4. ' )' → logprob: -5.03958797454834
    5. 's' → logprob: -6.28958797454834
    6. ')_' → logprob: -7.03958797454834
    7. '_' → logprob: -7.41458797454834
    8. '_levels' → logprob: -7.53958797454834
    9. '_mask' → logprob: -7.66458797454834
    10. '_amount' → logprob: -8.03958797454834

Token 149: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005361348390579224
    2. ',' → logprob: -5.255361557006836
    3. ' )' → logprob: -9.380361557006836
    4. ')
' → logprob: -10.880361557006836
    5. '_' → logprob: -11.755361557006836
    6. '   ' → logprob: -12.755361557006836
    7. ' ,' → logprob: -13.130361557006836
    8. ',)' → logprob: -13.130361557006836
    9. ')`' → logprob: -13.255361557006836
    10. '),' → logprob: -13.380361557006836

Token 150: ' masked' (ID: 91860)
  Prédit: 'fuel'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fuel' → logprob: -1.2961381673812866
    2. 'f' → logprob: -1.5461381673812866
    3. 'mask' → logprob: -2.796138286590576
    4. ' mask' → logprob: -3.546138286590576
    5. ' keys' → logprob: -3.858638286590576
    6. 'steps' → logprob: -3.921138286590576
    7. 'keys' → logprob: -3.983638286590576
    8. ')' → logprob: -4.046138286590576
    9. 'm' → logprob: -4.108638286590576
    10. ' fuel' → logprob: -4.171138286590576

Token 151: '_' (ID: 62)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04931420460343361
    2. ')]' → logprob: -3.549314260482788
    3. ' )' → logprob: -5.049314022064209
    4. '_' → logprob: -5.174314022064209
    5. ',' → logprob: -6.174314022064209
    6. '_)' → logprob: -6.299314022064209
    7. ')_' → logprob: -6.924314022064209
    8. '),' → logprob: -7.424314022064209
    9. ',)' → logprob: -7.549314022064209
    10. '))' → logprob: -8.174314498901367

Token 152: 'oxygen' (ID: 152599)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0634799376130104
    2. ',' → logprob: -4.313479900360107
    3. 'count' → logprob: -4.313479900360107
    4. 'on' → logprob: -5.938479900360107
    5. '_count' → logprob: -6.063479900360107
    6. 'used' → logprob: -6.063479900360107
    7. 'user' → logprob: -6.188479900360107
    8. 'cnt' → logprob: -6.188479900360107
    9. ')_' → logprob: -6.438479900360107
    10. 'cost' → logprob: -6.563479900360107

Token 153: '_mask' (ID: 21732)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.038551587611436844
    2. ',' → logprob: -4.1635518074035645
    3. '_left' → logprob: -5.0385518074035645
    4. ')_' → logprob: -5.5385518074035645
    5. '_' → logprob: -5.7885518074035645
    6. ' )' → logprob: -6.0385518074035645
    7. '_)' → logprob: -6.2885518074035645
    8. ')]' → logprob: -7.0385518074035645
    9. ',)' → logprob: -7.1635518074035645
    10. 's' → logprob: -7.4135518074035645

Token 154: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0066100917756557465
    2. ',' → logprob: -5.381609916687012
    3. ' )' → logprob: -6.631609916687012
    4. '_' → logprob: -8.756609916687012
    5. ')
' → logprob: -8.756609916687012
    6. '_)' → logprob: -9.381609916687012
    7. ' ,' → logprob: -9.506609916687012
    8. '))' → logprob: -10.631609916687012
    9. ')_' → logprob: -10.756609916687012
    10. ')`' → logprob: -10.756609916687012

Token 155: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9391139149665833
    2. '
' → logprob: -1.8141138553619385
    3. ':' → logprob: -2.4391138553619385
    4. ',' → logprob: -2.5641138553619385
    5. ' ' → logprob: -2.5641138553619385
    6. ' 
' → logprob: -2.6891138553619385
    7. '\n' → logprob: -3.4391138553619385
    8. '  
' → logprob: -3.5641138553619385
    9. '_' → logprob: -4.189114093780518
    10. '\' → logprob: -4.689114093780518

Token 156: ' #' (ID: 1069)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.44381749629974365
    2. ')' → logprob: -2.318817615509033
    3. ' 
' → logprob: -2.693817615509033
    4. ' )' → logprob: -2.943817615509033
    5. '  
' → logprob: -3.443817615509033
    6. 'state' → logprob: -4.318817615509033
    7. '    
' → logprob: -4.443817615509033
    8. 'heap' → logprob: -4.568817615509033
    9. '   
' → logprob: -4.568817615509033
    10. ' =' → logprob: -4.943817615509033

Token 157: ' For' (ID: 2214)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -1.0357317924499512
    2. 'heap' → logprob: -1.0357317924499512
    3. 'dire' → logprob: -2.910731792449951
    4. 'from' → logprob: -2.910731792449951
    5. 'dist' → logprob: -3.285731792449951
    6. 'dp' → logprob: -3.410731792449951
    7. 'pq' → logprob: -3.910731792449951
    8. 'q' → logprob: -4.285731792449951
    9. 'moves' → logprob: -4.410731792449951
    10. 'def' → logprob: -4.410731792449951

Token 158: ' oxygen' (ID: 34398)
  Prédit: ' _'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.373004287481308
    2. ' x' → logprob: -2.123004198074341
    3. ' cost' → logprob: -2.873004198074341
    4. ' heap' → logprob: -3.498004198074341
    5. '_' → logprob: -3.623004198074341
    6. ' ' → logprob: -3.998004198074341
    7. ' d' → logprob: -4.37300443649292
    8. 'cost' → logprob: -4.49800443649292
    9. ' y' → logprob: -5.37300443649292
    10. 'x' → logprob: -5.49800443649292

Token 159: ' cells' (ID: 11242)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.043043266981840134
    2. ' _' → logprob: -3.793043375015259
    3. ')' → logprob: -4.41804313659668
    4. '_mask' → logprob: -5.54304313659668
    5. ')_' → logprob: -7.29304313659668
    6. ' )' → logprob: -7.41804313659668
    7. '_left' → logprob: -7.91804313659668
    8. ',' → logprob: -7.91804313659668
    9. 's' → logprob: -8.29304313659668
    10. ' ' → logprob: -8.41804313659668

Token 160: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9803222417831421
    2. ',' → logprob: -1.105322241783142
    3. ')' → logprob: -2.4803223609924316
    4. ' ,' → logprob: -2.4803223609924316
    5. ' :' → logprob: -2.9803223609924316
    6. ' ' → logprob: -3.4803223609924316
    7. ' )' → logprob: -3.7303223609924316
    8. '):' → logprob: -5.355322360992432
    9. ' ):' → logprob: -5.730322360992432
    10. '   ' → logprob: -6.230322360992432

Token 161: ' need' (ID: 1309)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1460719108581543
    2. ' )' → logprob: -4.396071910858154
    3. ' oxygen' → logprob: -4.521071910858154
    4. ' 
' → logprob: -4.521071910858154
    5. ')' → logprob: -4.646071910858154
    6. '<|end|>' → logprob: -4.646071910858154
    7. 'masked' → logprob: -5.271071910858154
    8. 'mask' → logprob: -5.271071910858154
    9. ' grid' → logprob: -5.521071910858154
    10. ' masked' → logprob: -5.521071910858154

Token 162: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.4656680226325989
    2. 'to' → logprob: -1.215667963027954
    3. ' ' → logprob: -2.965667963027954
    4. ' a' → logprob: -4.715668201446533
    5. '<|end|>' → logprob: -5.590668201446533
    6. ''' → logprob: -6.715668201446533
    7. '_mask' → logprob: -6.965668201446533
    8. ' the' → logprob: -7.340668201446533
    9. '1' → logprob: -7.590668201446533
    10. '  ' → logprob: -7.590668201446533

Token 163: ' track' (ID: 5290)
  Prédit: 'mask'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mask' → logprob: -1.303699016571045
    2. 'enumer' → logprob: -1.928699016571045
    3. 'identify' → logprob: -2.178699016571045
    4. 'encode' → logprob: -2.428699016571045
    5. 'assign' → logprob: -2.803699016571045
    6. 'track' → logprob: -2.928699016571045
    7. 'keep' → logprob: -3.303699016571045
    8. 'map' → logprob: -3.303699016571045
    9. 'cover' → logprob: -3.553699016571045
    10. 'bit' → logprob: -3.803699016571045

Token 164: ' usage' (ID: 16622)
  Prédit: 'oxygen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'oxygen' → logprob: -0.9593460559844971
    2. '<|end|>' → logprob: -1.709346055984497
    3. ' oxygen' → logprob: -2.084346055984497
    4. 'visited' → logprob: -3.084346055984497
    5. 'the' → logprob: -3.459346055984497
    6. ' the' → logprob: -3.834346055984497
    7. ')' → logprob: -3.834346055984497
    8. 'mask' → logprob: -4.084345817565918
    9. ' states' → logprob: -4.084345817565918
    10. 'states' → logprob: -4.209345817565918

Token 165: ' (' (ID: 350)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2045152634382248
    2. 'visited' → logprob: -2.204515218734741
    3. ')' → logprob: -4.07951545715332
    4. 'import' → logprob: -4.45451545715332
    5. '   ' → logprob: -5.07951545715332
    6. 'distance' → logprob: -5.20451545715332
    7. ':' → logprob: -5.45451545715332
    8. ' 
' → logprob: -5.57951545715332
    9. 'dist' → logprob: -5.57951545715332
    10. 'dp' → logprob: -5.82951545715332

Token 166: 'once' (ID: 21986)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.051660582423210144
    2. '1' → logprob: -3.5516605377197266
    3. ' )' → logprob: -3.9266605377197266
    4. ' ' → logprob: -6.926660537719727
    5. '0' → logprob: -8.301660537719727
    6. ',' → logprob: -9.801660537719727
    7. ')
' → logprob: -9.926660537719727
    8. '[' → logprob: -10.176660537719727
    9. '#' → logprob: -10.301660537719727
    10. 'used' → logprob: -10.426660537719727

Token 167: ' per' (ID: 777)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4859842360019684
    2. ' )' → logprob: -1.485984206199646
    3. ' used' → logprob: -1.985984206199646
    4. ' only' → logprob: -5.1109843254089355
    5. 'used' → logprob: -5.2359843254089355
    6. ' per' → logprob: -5.3609843254089355
    7. ' more' → logprob: -6.1109843254089355
    8. '_used' → logprob: -7.4859843254089355
    9. '_)' → logprob: -7.6109843254089355
    10. 'only' → logprob: -7.7359843254089355

Token 168: ' cell' (ID: 4206)
  Prédit: 'cell'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cell' → logprob: -0.43848657608032227
    2. 'oxygen' → logprob: -1.5634865760803223
    3. ' cell' → logprob: -2.6884865760803223
    4. ' oxygen' → logprob: -3.9384865760803223
    5. 'oxy' → logprob: -4.063486576080322
    6. '```' → logprob: -4.813486576080322
    7. 'path' → logprob: -4.938486576080322
    8. 'mask' → logprob: -5.063486576080322
    9. 'state' → logprob: -5.438486576080322
    10. ' mask' → logprob: -6.875986576080322

Token 169: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0016793444519862533
    2. ' )' → logprob: -6.751679420471191
    3. ',' → logprob: -7.751679420471191
    4. ')
' → logprob: -11.126679420471191
    5. '#' → logprob: -11.876679420471191
    6. 'per' → logprob: -12.376679420471191
    7. ' for' → logprob: -12.501679420471191
    8. ')

' → logprob: -12.626679420471191
    9. '),' → logprob: -12.751679420471191
    10. 's' → logprob: -12.876679420471191

Token 170: '   ' (ID: 271)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' 
' → logprob: -0.5166685581207275
    2. '
' → logprob: -1.8916685581207275
    3. ' ' → logprob: -2.5166685581207275
    4. ')' → logprob: -2.8916685581207275
    5. '   ' → logprob: -3.2666685581207275
    6. '    
' → logprob: -4.516668319702148
    7. '  
' → logprob: -4.516668319702148
    8. '<|end|>' → logprob: -4.641668319702148
    9. ' )' → logprob: -4.766668319702148
    10. 'n' → logprob: -4.766668319702148

Token 171: ' #' (ID: 1069)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -1.4052507877349854
    2. 'dist' → logprob: -1.7802507877349854
    3. ' 
' → logprob: -2.1552507877349854
    4. 'd' → logprob: -2.6552507877349854
    5. ')' → logprob: -2.7802507877349854
    6. ' ' → logprob: -3.0302507877349854
    7. 'distance' → logprob: -3.4052507877349854
    8. '   ' → logprob: -3.5302507877349854
    9. 'import' → logprob: -3.6552507877349854
    10. ' visited' → logprob: -3.6552507877349854

Token 172: ' Assign' (ID: 60840)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.34816041588783264
    2. 'import' → logprob: -1.8481603860855103
    3. 'from' → logprob: -2.8481605052948
    4. 'dp' → logprob: -2.9731605052948
    5. 'def' → logprob: -4.848160266876221
    6. '   ' → logprob: -5.598160266876221
    7. 'distance' → logprob: -5.723160266876221
    8. 'visited' → logprob: -5.848160266876221
    9. 'INF' → logprob: -6.223160266876221
    10. 'pq' → logprob: -6.348160266876221

Token 173: ' index' (ID: 3472)
  Prédit: ' oxygen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' oxygen' → logprob: -0.4895224869251251
    2. ' indices' → logprob: -2.1145224571228027
    3. ' ' → logprob: -2.7395224571228027
    4. 'oxygen' → logprob: -2.7395224571228027
    5. 'indices' → logprob: -3.7395224571228027
    6. ' ids' → logprob: -3.9895224571228027
    7. ' idx' → logprob: -4.614522457122803
    8. ' masks' → logprob: -4.989522457122803
    9. ' mask' → logprob: -4.989522457122803
    10. ' unique' → logprob: -5.114522457122803

Token 174: ' for' (ID: 395)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.17086634039878845
    2. 'es' → logprob: -2.6708662509918213
    3. '_' → logprob: -2.9208662509918213
    4. '=' → logprob: -4.0458664894104
    5. ' =' → logprob: -4.9208664894104
    6. '_to' → logprob: -6.0458664894104
    7. '_s' → logprob: -6.1708664894104
    8. ' ' → logprob: -6.9208664894104
    9. 'ed' → logprob: -7.2958664894104
    10. ' to' → logprob: -7.2958664894104

Token 175: ' each' (ID: 2454)
  Prédit: ' each'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' each' → logprob: -0.17755605280399323
    2. 'each' → logprob: -1.927556037902832
    3. ' oxygen' → logprob: -4.552556037902832
    4. 'oxygen' → logprob: -5.802556037902832
    5. 'oxy' → logprob: -6.427556037902832
    6. ' oxy' → logprob: -6.927556037902832
    7. 'e' → logprob: -8.677556037902832
    8. ' the' → logprob: -9.052556037902832
    9. ' cell' → logprob: -9.115056037902832
    10. ' e' → logprob: -9.240056037902832

Token 176: ' oxygen' (ID: 34398)
  Prédit: ' oxygen'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' oxygen' → logprob: -0.12757931649684906
    2. 'oxygen' → logprob: -2.3775792121887207
    3. ' oxy' → logprob: -4.002579212188721
    4. 'oxy' → logprob: -5.252579212188721
    5. ' (' → logprob: -6.877579212188721
    6. '(' → logprob: -7.627579212188721
    7. ' ' → logprob: -7.752579212188721
    8. '_' → logprob: -7.752579212188721
    9. ' cell' → logprob: -8.252579689025879
    10. ' ox' → logprob: -8.752579689025879

Token 177: ' cell' (ID: 4206)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.030912160873413
    2. ' cell' → logprob: -1.280912160873413
    3. ' _' → logprob: -1.530912160873413
    4. '_cell' → logprob: -2.280912160873413
    5. 'cell' → logprob: -3.905912160873413
    6. '_cells' → logprob: -3.905912160873413
    7. ' ' → logprob: -5.780912399291992
    8. '-cell' → logprob: -7.655912399291992
    9. '	cell' → logprob: -7.905912399291992
    10. ')' → logprob: -8.030912399291992

Token 178: '
' (ID: 198)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7089186906814575
    2. ' =' → logprob: -1.0839186906814575
    3. ',' → logprob: -3.333918571472168
    4. ':' → logprob: -3.833918571472168
    5. '=' → logprob: -3.833918571472168
    6. '   ' → logprob: -4.333918571472168
    7. ' ' → logprob: -4.708918571472168
    8. '
' → logprob: -4.708918571472168
    9. ' _' → logprob: -5.083918571472168
    10. 'oxygen' → logprob: -5.208918571472168

Token 179: '   ' (ID: 271)
  Prédit: 'oxygen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oxygen' → logprob: -1.0045019388198853
    2. '_' → logprob: -1.5045019388198853
    3. 'oxy' → logprob: -2.6295018196105957
    4. 'indices' → logprob: -2.7545018196105957
    5. ' oxygen' → logprob: -3.1295018196105957
    6. '   ' → logprob: -3.2545018196105957
    7. ',' → logprob: -3.2545018196105957
    8. ' indices' → logprob: -3.6295018196105957
    9. '_indices' → logprob: -4.379501819610596
    10. ':' → logprob: -4.379501819610596

Token 180: ' oxy' (ID: 154299)
  Prédit: 'oxy'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oxy' (adapté à ' oxy') → logprob: -0.8399078249931335
    2. 'oxygen' → logprob: -1.0899078845977783
    3. ' oxygen' → logprob: -2.3399078845977783
    4. ' oxy' → logprob: -3.0899078845977783
    5. 'indices' → logprob: -4.214907646179199
    6. ' 
' → logprob: -4.589907646179199
    7. 'idx' → logprob: -4.714907646179199
    8. ' indices' → logprob: -4.964907646179199
    9. 'ox' → logprob: -5.089907646179199
    10. '    
' → logprob: -5.589907646179199

Token 181: '_id' (ID: 1537)
  Prédit: '_idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_idx' → logprob: -0.9404181241989136
    2. '_indices' → logprob: -1.0654181241989136
    3. '_index' → logprob: -2.065418243408203
    4. '_cells' → logprob: -2.190418243408203
    5. '_indexes' → logprob: -4.065418243408203
    6. '_cell' → logprob: -5.440418243408203
    7. '_idxs' → logprob: -6.440418243408203
    8. '_map' → logprob: -6.565418243408203
    9. '_id' → logprob: -7.190418243408203
    10. '_' → logprob: -8.065418243408203

Token 182: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.923096239566803
    2. 'x' → logprob: -1.2980961799621582
    3. ' =' → logprob: -1.5480961799621582
    4. '=' → logprob: -2.173096179962158
    5. '_map' → logprob: -6.298096179962158
    6. 'ex' → logprob: -7.423096179962158
    7. 'xs' → logprob: -7.423096179962158
    8. '_mapping' → logprob: -10.673096656799316
    9. 'xes' → logprob: -11.048096656799316
    10. '={}' → logprob: -11.298096656799316

Token 183: ' dict' (ID: 11878)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{' → logprob: -0.06853263825178146
    2. '{}' → logprob: -2.818532705307007
    3. ' {' → logprob: -5.318532466888428
    4. '{}
' → logprob: -6.568532466888428
    5. ' {}' → logprob: -9.193532943725586
    6. '0' → logprob: -9.693532943725586
    7. 'dict' → logprob: -10.443532943725586
    8. '{i' → logprob: -10.943532943725586
    9. '{x' → logprob: -11.693532943725586
    10. ' {}
' → logprob: -11.818532943725586

Token 184: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.39402586221694946
    2. '((' → logprob: -1.7690258026123047
    3. '(zip' → logprob: -2.2690258026123047
    4. '{' → logprob: -3.2690258026123047
    5. '(' → logprob: -4.894025802612305
    6. '([(' → logprob: -5.769025802612305
    7. '(((' → logprob: -6.644025802612305
    8. '()
' → logprob: -6.644025802612305
    9. '({' → logprob: -8.519025802612305
    10. 'zip' → logprob: -10.394025802612305

Token 185: '   ' (ID: 271)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.214845895767212
    2. ',' → logprob: -1.714845895767212
    3. '(' → logprob: -1.964845895767212
    4. '[(' → logprob: -2.339845895767212
    5. '{' → logprob: -2.839845895767212
    6. 'for' → logprob: -2.964845895767212
    7. '<|end|>' → logprob: -3.214845895767212
    8. '=' → logprob: -3.964845895767212
    9. '[
' → logprob: -3.964845895767212
    10. ')' → logprob: -3.964845895767212

Token 186: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.16941316425800323
    2. ' for' → logprob: -2.5444130897521973
    3. 'idx' → logprob: -3.9194130897521973
    4. 'x' → logprob: -4.419413089752197
    5. 'token' → logprob: -4.419413089752197
    6. ' ' → logprob: -5.419413089752197
    7. '[token' → logprob: -5.544413089752197
    8. ' 
' → logprob: -5.669413089752197
    9. '<|end|>' → logprob: -5.794413089752197
    10. '{' → logprob: -6.169413089752197

Token 187: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.48724398016929626
    2. ' i' → logprob: -0.9872440099716187
    3. 'idx' → logprob: -4.862244129180908
    4. ' idx' → logprob: -5.237244129180908
    5. 'index' → logprob: -11.36224365234375
    6. '(i' → logprob: -12.36224365234375
    7. '_i' → logprob: -12.73724365234375
    8. ' index' → logprob: -12.98724365234375
    9. '	i' → logprob: -13.11224365234375
    10. 'id' → logprob: -13.23724365234375

Token 188: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00017267030489165336
    2. ',x' → logprob: -9.50017261505127
    3. 'in' → logprob: -10.12517261505127
    4. ' ,' → logprob: -10.75017261505127
    5. ' in' → logprob: -11.37517261505127
    6. ',(' → logprob: -11.50017261505127
    7. ',o' → logprob: -12.00017261505127
    8. ',y' → logprob: -12.87517261505127
    9. ',i' → logprob: -12.87517261505127
    10. 'i' → logprob: -14.12517261505127

Token 189: ' (' (ID: 350)
  Prédit: 'cell'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cell' → logprob: -1.196877360343933
    2. '(cell' → logprob: -1.696877360343933
    3. 'pos' → logprob: -1.821877360343933
    4. ' (' → logprob: -1.946877360343933
    5. '(' → logprob: -2.5718774795532227
    6. '(pos' → logprob: -2.9468774795532227
    7. ' cell' → logprob: -3.5718774795532227
    8. ' pos' → logprob: -3.6968774795532227
    9. '(x' → logprob: -4.196877479553223
    10. '(coord' → logprob: -5.946877479553223

Token 190: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -5.157039049663581e-05
    2. '_x' → logprob: -10.500051498413086
    3. 'ox' → logprob: -11.125051498413086
    4. ' x' → logprob: -12.250051498413086
    5. '_' → logprob: -13.625051498413086
    6. ')x' → logprob: -14.375051498413086
    7. 'xo' → logprob: -14.750051498413086
    8. 'xx' → logprob: -14.875051498413086
    9. '```' → logprob: -14.875051498413086
    10. ')' → logprob: -15.125051498413086

Token 191: ',y' (ID: 16103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000628683075774461
    2. ',y' → logprob: -7.750628471374512
    3. ' ,' → logprob: -8.625628471374512
    4. 'y' → logprob: -11.500628471374512
    5. ')' → logprob: -13.000628471374512
    6. ',
' → logprob: -13.375628471374512
    7. '‌,' → logprob: -14.125628471374512
    8. ',)' → logprob: -14.125628471374512
    9. '_,' → logprob: -14.625628471374512
    10. '),' → logprob: -14.625628471374512

Token 192: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.935296834039036e-06
    2. ' )' → logprob: -12.87500286102295
    3. ')=' → logprob: -16.125003814697266
    4. ')
' → logprob: -16.750003814697266
    5. ' in' → logprob: -16.875003814697266
    6. 'in' → logprob: -17.375003814697266
    7. '）' → logprob: -18.375003814697266
    8. ')`' → logprob: -18.500003814697266
    9. '`)' → logprob: -18.625003814697266
    10. '))' → logprob: -18.625003814697266

Token 193: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.7282191514968872
    2. ')' → logprob: -1.3532191514968872
    3. 'in' → logprob: -1.3532191514968872
    4. ' )' → logprob: -8.103219032287598
    5. ' ' → logprob: -10.228219032287598
    6. 'n' → logprob: -11.103219032287598
    7. 's' → logprob: -11.478219032287598
    8. '	in' → logprob: -11.478219032287598
    9. '
' → logprob: -11.853219032287598
    10. '  ' → logprob: -12.353219032287598

Token 194: ' enumerate' (ID: 29671)
  Prédit: ' enumerate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' enumerate' → logprob: -0.01417174469679594
    2. 'enumer' → logprob: -4.264171600341797
    3. 'oxy' → logprob: -12.264171600341797
    4. ' ' → logprob: -14.264171600341797
    5. '```' → logprob: -14.264171600341797
    6. '   ' → logprob: -14.514171600341797
    7. 'en' → logprob: -15.264171600341797
    8. ')' → logprob: -15.264171600341797
    9. '.enumer' → logprob: -15.514171600341797
    10. 'enum' → logprob: -16.014171600341797

Token 195: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.011334865354001522
    2. 'oxy' → logprob: -4.5113348960876465
    3. 'ox' → logprob: -8.636334419250488
    4. ')' → logprob: -10.386334419250488
    5. ' oxy' → logprob: -10.636334419250488
    6. ' (' → logprob: -11.136334419250488
    7. 'oxygen' → logprob: -11.136334419250488
    8. 'oxo' → logprob: -11.386334419250488
    9. '(
' → logprob: -12.511334419250488
    10. 'oxic' → logprob: -13.261334419250488

Token 196: 'oxy' (ID: 37496)
  Prédit: 'oxy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oxy' → logprob: -0.00029852005536668
    2. 'ox' → logprob: -8.375298500061035
    3. ' oxy' → logprob: -10.000298500061035
    4. 'oxygen' → logprob: -11.750298500061035
    5. 'oxo' → logprob: -12.250298500061035
    6. 'oxi' → logprob: -12.875298500061035
    7. ')' → logprob: -13.250298500061035
    8. '   ' → logprob: -13.500298500061035
    9. 'xy' → logprob: -14.250298500061035
    10. 'oxe' → logprob: -14.375298500061035

Token 197: '_cells' (ID: 93468)
  Prédit: '_cells'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cells' → logprob: -0.0001475220051361248
    2. '_id' → logprob: -9.500147819519043
    3. '_' → logprob: -10.000147819519043
    4. '_cell' → logprob: -12.000147819519043
    5. ')' → logprob: -12.375147819519043
    6. '_)' → logprob: -12.375147819519043
    7. ')_' → logprob: -12.625147819519043
    8. '_c' → logprob: -12.625147819519043
    9. 'cells' → logprob: -13.375147819519043
    10. '_i' → logprob: -14.250147819519043

Token 198: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0014277365989983082
    2. ')' → logprob: -7.00142765045166
    3. '):
' → logprob: -7.62642765045166
    4. ' ):' → logprob: -10.75142765045166
    5. ':' → logprob: -12.62642765045166
    6. '):
' → logprob: -13.25142765045166
    7. ')=' → logprob: -14.12642765045166
    8. '   ' → logprob: -14.12642765045166
    9. '):(' → logprob: -15.62642765045166
    10. ' )' → logprob: -15.75142765045166

Token 199: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04106658697128296
    2. '   ' → logprob: -3.2910666465759277
    3. ' oxy' → logprob: -6.541066646575928
    4. ' ' → logprob: -8.54106616973877
    5. '        
' → logprob: -8.54106616973877
    6. '    ' → logprob: -8.54106616973877
    7. '	' → logprob: -8.79106616973877
    8. '    
' → logprob: -9.04106616973877
    9. ' ' → logprob: -9.41606616973877
    10. '<|end|>' → logprob: -9.66606616973877

Token 200: ' oxy' (ID: 154299)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.817714273929596
    2. ' oxy' → logprob: -1.0677142143249512
    3. 'oxy' (adapté à ' oxy') → logprob: -1.6927142143249512
    4. '       ' → logprob: -3.567714214324951
    5. 'ox' → logprob: -6.817714214324951
    6. '           ' → logprob: -8.44271469116211
    7. '    ' → logprob: -8.56771469116211
    8. ' oxygen' → logprob: -8.81771469116211
    9. 'oxygen' → logprob: -8.81771469116211
    10. 'oxo' → logprob: -9.31771469116211

Token 201: '_id' (ID: 1537)
  Prédit: '_id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -1.5451681974809617e-05
    2. '_cells' → logprob: -12.375015258789062
    3. '_i' → logprob: -12.625015258789062
    4. '_' → logprob: -13.250015258789062
    5. '_ids' → logprob: -13.750015258789062
    6. 'd' → logprob: -13.750015258789062
    7. '_cell' → logprob: -14.500015258789062
    8. '[_' → logprob: -14.875015258789062
    9. ' _' → logprob: -15.000015258789062
    10. 's' → logprob: -15.000015258789062

Token 202: '[(' (ID: 20542)
  Prédit: '[('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -6.988221684878226e-06
    2. '[' → logprob: -12.125006675720215
    3. '[x' → logprob: -13.875006675720215
    4. '[((' → logprob: -14.875006675720215
    5. ' [(' → logprob: -16.37500762939453
    6. '=' → logprob: -17.25000762939453
    7. '((' → logprob: -17.75000762939453
    8. '[
' → logprob: -18.50000762939453
    9. '(x' → logprob: -18.62500762939453
    10. ' =' → logprob: -18.75000762939453

Token 203: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.3856492842023727e-06
    2. ' x' → logprob: -13.625000953674316
    3. ')x' → logprob: -16.875001907348633
    4. ')' → logprob: -17.500001907348633
    5. '(x' → logprob: -18.750001907348633
    6. ' ' → logprob: -19.125001907348633
    7. ''x' → logprob: -20.375001907348633
    8. '{x' → logprob: -20.625001907348633
    9. '   ' → logprob: -20.750001907348633
    10. '	x' → logprob: -21.000001907348633

Token 204: ',y' (ID: 16103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0261608362197876
    2. '[y' → logprob: -1.2761608362197876
    3. ',y' → logprob: -1.6511608362197876
    4. '[' → logprob: -2.276160717010498
    5. '[x' → logprob: -3.401160717010498
    6. 'x' → logprob: -4.026160717010498
    7. 'y' → logprob: -4.401160717010498
    8. ' ,' → logprob: -6.526160717010498
    9. '[
' → logprob: -7.776160717010498
    10. ')' → logprob: -8.151161193847656

Token 205: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.38801464438438416
    2. ')' → logprob: -1.1380146741867065
    3. ']' → logprob: -7.138014793395996
    4. ' )' → logprob: -8.638014793395996
    5. ')=' → logprob: -8.763014793395996
    6. '])' → logprob: -11.513014793395996
    7. ']=' → logprob: -13.138014793395996
    8. ')
' → logprob: -14.263014793395996
    9. '   ' → logprob: -14.513014793395996
    10. '))' → logprob: -14.888014793395996

Token 206: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0502098985016346
    2. ' =' → logprob: -3.0502099990844727
    3. '=i' → logprob: -6.425209999084473
    4. ')=' → logprob: -14.550209999084473
    5. '=

' → logprob: -16.300209045410156
    6. ')' → logprob: -16.425209045410156
    7. '=
' → logprob: -17.050209045410156
    8. '=index' → logprob: -17.175209045410156
    9. '=}' → logprob: -17.175209045410156
    10. '＝' → logprob: -17.925209045410156

Token 207: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.004078401252627373
    2. ' i' → logprob: -5.504078388214111
    3. '	i' → logprob: -18.629077911376953
    4. ' ' → logprob: -20.379077911376953
    5. '   ' → logprob: -20.629077911376953
    6. '0' → logprob: -23.129077911376953
    7. '    ' → logprob: -23.754077911376953
    8. '  ' → logprob: -23.879077911376953
    9. ' ' → logprob: -24.129077911376953
    10. ')i' → logprob: -24.254077911376953

Token 208: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.06908027082681656
    2. ' 
' → logprob: -4.069080352783203
    3. '   ' → logprob: -4.694080352783203
    4. '  
' → logprob: -4.819080352783203
    5. '    
' → logprob: -4.944080352783203
    6. '\n' → logprob: -4.944080352783203
    7. '<|end|>' → logprob: -5.194080352783203
    8. '' → logprob: -5.944080352783203
    9. 'newline' → logprob: -6.069080352783203
    10. ')' → logprob: -6.194080352783203

Token 209: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1547173261642456
    2. '
' → logprob: -1.4047173261642456
    3. ' 
' → logprob: -1.6547173261642456
    4. '    
' → logprob: -2.154717445373535
    5. '  
' → logprob: -4.029717445373535
    6. 'visited' → logprob: -4.529717445373535
    7. ')' → logprob: -4.654717445373535
    8. 'distance' → logprob: -5.154717445373535
    9. '```' → logprob: -5.154717445373535
    10. 'cost' → logprob: -5.279717445373535

Token 210: ' max' (ID: 2999)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -1.1259528398513794
    2. 'from' → logprob: -1.2509528398513794
    3. 'import' → logprob: -2.50095272064209
    4. '   ' → logprob: -2.50095272064209
    5. 'distance' → logprob: -2.50095272064209
    6. 'dp' → logprob: -3.00095272064209
    7. 'moves' → logprob: -3.87595272064209
    8. '    
' → logprob: -4.37595272064209
    9. 'dire' → logprob: -4.37595272064209
    10. 'visited' → logprob: -4.87595272064209

Token 211: '_mask' (ID: 21732)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.48844292759895325
    2. '_mask' → logprob: -0.9884428977966309
    3. '_o' → logprob: -4.988442897796631
    4. '_cost' → logprob: -5.488442897796631
    5. 'mask' → logprob: -7.113442897796631
    6. '_masks' → logprob: -7.113442897796631
    7. 'O' → logprob: -8.238443374633789
    8. '_usage' → logprob: -8.363443374633789
    9. '_O' → logprob: -9.113443374633789
    10. '_f' → logprob: -9.363443374633789

Token 212: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4740805923938751
    2. '=' → logprob: -0.9740805625915527
    3. '_' → logprob: -13.724081039428711
    4. ')' → logprob: -14.849081039428711
    5. '=int' → logprob: -15.349081039428711
    6. '=

' → logprob: -15.474081039428711
    7. '=
' → logprob: -15.599081039428711
    8. 's' → logprob: -15.599081039428711
    9. ' =
' → logprob: -15.599081039428711
    10. '_mask' → logprob: -15.974081039428711

Token 213: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.21086716651916504
    2. '(' → logprob: -1.835867166519165
    3. ' (' → logprob: -3.585867166519165
    4. ' ' → logprob: -5.835866928100586
    5. '   ' → logprob: -11.710866928100586
    6. '[' → logprob: -14.835866928100586
    7. '2' → logprob: -15.335866928100586
    8. '0' → logprob: -15.335866928100586
    9. '```' → logprob: -16.335866928100586
    10. '
' → logprob: -16.460866928100586

Token 214: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1602383404970169
    2. '(' → logprob: -1.9102383852005005
    3. ' (' → logprob: -11.285238265991211
    4. ' ' → logprob: -13.410238265991211
    5. '2' → logprob: -17.66023826599121
    6. '[' → logprob: -17.78523826599121
    7. '   ' → logprob: -18.41023826599121
    8. '{' → logprob: -18.53523826599121
    9. '0' → logprob: -19.66023826599121
    10. '```' → logprob: -19.78523826599121

Token 215: ' <<' (ID: 2256)
  Prédit: '<<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.00685448944568634
    2. ' <<' → logprob: -5.00685453414917
    3. '<' → logprob: -9.006854057312012
    4. '<<(' → logprob: -11.631854057312012
    5. '<<<' → logprob: -12.631854057312012
    6. '0' → logprob: -13.881854057312012
    7. '&lt' → logprob: -13.881854057312012
    8. ' ' → logprob: -14.506854057312012
    9. '1' → logprob: -14.756854057312012
    10. '```' → logprob: -14.756854057312012

Token 216: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -2.7252845029579476e-05
    2. '(len' → logprob: -10.625027656555176
    3. ' len' → logprob: -13.250027656555176
    4. 'm' → logprob: -14.250027656555176
    5. 'o' → logprob: -14.875027656555176
    6. '   ' → logprob: -17.87502670288086
    7. '	len' → logprob: -18.62502670288086
    8. '[len' → logprob: -18.75002670288086
    9. '(' → logprob: -19.00002670288086
    10. '
' → logprob: -19.12502670288086

Token 217: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.652451464906335e-05
    2. 'oxy' → logprob: -11.125016212463379
    3. '(o' → logprob: -13.750016212463379
    4. '(
' → logprob: -15.000016212463379
    5. 'oxygen' → logprob: -15.625016212463379
    6. 'ox' → logprob: -16.750017166137695
    7. ' oxy' → logprob: -17.125017166137695
    8. ' (' → logprob: -17.125017166137695
    9. 'oxo' → logprob: -18.250017166137695
    10. '((' → logprob: -18.750017166137695

Token 218: 'oxy' (ID: 37496)
  Prédit: 'oxy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oxy' → logprob: -0.0003983760252594948
    2. 'ox' → logprob: -8.875398635864258
    3. '(' → logprob: -9.250398635864258
    4. ' oxy' → logprob: -9.375398635864258
    5. 'oxygen' → logprob: -10.125398635864258
    6. 'oxo' → logprob: -10.750398635864258
    7. 'oxi' → logprob: -12.500398635864258
    8. '   ' → logprob: -13.625398635864258
    9. 'oxide' → logprob: -13.625398635864258
    10. 'ozy' → logprob: -13.625398635864258

Token 219: '_cells' (ID: 93468)
  Prédit: '_cells'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cells' → logprob: -4.11996734328568e-05
    2. '_id' → logprob: -10.250041007995605
    3. 'cells' → logprob: -12.500041007995605
    4. '_' → logprob: -13.875041007995605
    5. ')' → logprob: -15.500041007995605
    6. '_cell' → logprob: -15.625041007995605
    7. 'Cells' → logprob: -15.625041007995605
    8. '_ids' → logprob: -16.250041961669922
    9. '   ' → logprob: -16.250041961669922
    10. '_c' → logprob: -16.250041961669922

Token 220: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.889424836728722e-05
    2. ')
' → logprob: -9.375099182128906
    3. ' )' → logprob: -11.375099182128906
    4. '<|end|>' → logprob: -13.750099182128906
    5. ')

' → logprob: -14.375099182128906
    6. '   ' → logprob: -15.750099182128906
    7. '),' → logprob: -16.250099182128906
    8. ')
' → logprob: -16.250099182128906
    9. '```' → logprob: -16.500099182128906
    10. '<|end|>' → logprob: -16.625099182128906

Token 221: '   ' (ID: 271)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' 
' → logprob: -1.007989764213562
    2. '    
' → logprob: -1.757989764213562
    3. '   ' → logprob: -2.2579898834228516
    4. '
' → logprob: -2.3829898834228516
    5. 'd' → logprob: -3.0079898834228516
    6. ',' → logprob: -3.1329898834228516
    7. ')' → logprob: -4.007989883422852
    8. '\' → logprob: -4.132989883422852
    9. '  
' → logprob: -4.507989883422852
    10. 'n' → logprob: -4.632989883422852

Token 222: ' #' (ID: 1069)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.14173579216003418
    2. 'import' → logprob: -3.016735792160034
    3. 'heap' → logprob: -3.516735792160034
    4. 'while' → logprob: -4.016736030578613
    5. 'from' → logprob: -4.516736030578613
    6. 'distance' → logprob: -5.391736030578613
    7. '   ' → logprob: -5.391736030578613
    8. 'dp' → logprob: -5.516736030578613
    9. 'pq' → logprob: -5.891736030578613
    10. 'visited' → logprob: -6.516736030578613

Token 223: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.21870335936546326
    2. 'import' → logprob: -2.218703269958496
    3. 'def' → logprob: -3.718703269958496
    4. 'heap' → logprob: -4.093703269958496
    5. 'from' → logprob: -4.218703269958496
    6. 'dire' → logprob: -4.468703269958496
    7. 'dp' → logprob: -5.093703269958496
    8. 'dx' → logprob: -5.968703269958496
    9. 'INF' → logprob: -6.093703269958496
    10. 'pq' → logprob: -6.468703269958496

Token 224: ' dictionary' (ID: 22131)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.012534257024526596
    2. '=' → logprob: -4.387534141540527
    3. ' =[' → logprob: -11.387534141540527
    4. '=[' → logprob: -12.512534141540527
    5. ' ' → logprob: -13.137534141540527
    6. '   ' → logprob: -13.387534141540527
    7. ',' → logprob: -13.762534141540527
    8. 'ances' → logprob: -13.762534141540527
    9. ' =
' → logprob: -14.512534141540527
    10. '=[]' → logprob: -14.637534141540527

Token 225: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.18039777874946594
    2. '=' → logprob: -1.8053977489471436
    3. ' =
' → logprob: -8.055397987365723
    4. 'dist' → logprob: -8.805397987365723
    5. '   ' → logprob: -9.680397987365723
    6. '=
' → logprob: -9.680397987365723
    7. ',' → logprob: -11.430397987365723
    8. '={}
' → logprob: -11.555397987365723
    9. '={}' → logprob: -11.805397987365723
    10. ' dist' → logprob: -12.180397987365723

Token 226: ' key' (ID: 2140)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.10116803646087646
    2. ' dist' → logprob: -2.476168155670166
    3. '{}' → logprob: -4.851168155670166
    4. '   ' → logprob: -6.101168155670166
    5. '{' → logprob: -6.976168155670166
    6. 'import' → logprob: -7.476168155670166
    7. 'from' → logprob: -8.851167678833008
    8. ' defaultdict' → logprob: -8.976167678833008
    9. '{
' → logprob: -9.226167678833008
    10. '{}
' → logprob: -9.601167678833008

Token 227: '=(' (ID: 9893)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07000723481178284
    2. '=' → logprob: -2.69500732421875
    3. '   ' → logprob: -10.94500732421875
    4. ',' → logprob: -11.07000732421875
    5. ' =
' → logprob: -11.82000732421875
    6. ')' → logprob: -11.82000732421875
    7. ' =(' → logprob: -12.32000732421875
    8. '={(' → logprob: -12.57000732421875
    9. ' ={' → logprob: -12.57000732421875
    10. ' ' → logprob: -13.07000732421875

Token 228: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.29280632734298706
    2. 'cost' → logprob: -2.042806386947632
    3. ')' → logprob: -2.917806386947632
    4. '(x' → logprob: -3.667806386947632
    5. '(' → logprob: -3.792806386947632
    6. ' (' → logprob: -4.667806148529053
    7. '0' → logprob: -5.292806148529053
    8. '(cost' → logprob: -5.667806148529053
    9. ' )' → logprob: -6.917806148529053
    10. ')x' → logprob: -6.917806148529053

Token 229: ',y' (ID: 16103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.020925696939229965
    2. ',y' → logprob: -3.895925760269165
    3. ' ,' → logprob: -7.895925521850586
    4. ',
' → logprob: -11.645925521850586
    5. ',Y' → logprob: -13.770925521850586
    6. '   ' → logprob: -15.395925521850586
    7. '
' → logprob: -15.520925521850586
    8. 'y' → logprob: -16.020925521850586
    9. ' ' → logprob: -16.020925521850586
    10. '‌,' → logprob: -16.395925521850586

Token 230: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0013658313546329737
    2. ' ,' → logprob: -8.001365661621094
    3. ',o' → logprob: -8.376365661621094
    4. ',O' → logprob: -8.626365661621094
    5. ',x' → logprob: -8.876365661621094
    6. ',m' → logprob: -9.001365661621094
    7. ',f' → logprob: -9.126365661621094
    8. ',
' → logprob: -9.751365661621094
    9. ',state' → logprob: -10.751365661621094
    10. ',opt' → logprob: -10.876365661621094

Token 231: 'oxygen' (ID: 152599)
  Prédit: 'oxygen'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oxygen' → logprob: -0.15934748947620392
    2. 'mask' → logprob: -2.9093475341796875
    3. ' oxygen' → logprob: -3.1593475341796875
    4. 'oxy' → logprob: -3.4093475341796875
    5. 'o' → logprob: -4.9093475341796875
    6. ' oxy' → logprob: -5.6593475341796875
    7. ' mask' → logprob: -6.1593475341796875
    8. 'ox' → logprob: -6.4093475341796875
    9. ' o' → logprob: -7.2843475341796875
    10. 'oxo' → logprob: -8.284347534179688

Token 232: '_left' (ID: 22189)
  Prédit: '_left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_left' → logprob: -0.029624583199620247
    2. '_mask' → logprob: -4.4046244621276855
    3. ',' → logprob: -4.6546244621276855
    4. 'left' → logprob: -5.6546244621276855
    5. '_used' → logprob: -6.6546244621276855
    6. ',_' → logprob: -6.7796244621276855
    7. ',left' → logprob: -7.9046244621276855
    8. '_remaining' → logprob: -7.9046244621276855
    9. '_l' → logprob: -8.529624938964844
    10. '_,' → logprob: -9.279624938964844

Token 233: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.18984732031822205
    2. ',m' → logprob: -1.8148473501205444
    3. ',f' → logprob: -6.689847469329834
    4. ')' → logprob: -6.689847469329834
    5. ',
' → logprob: -6.939847469329834
    6. ',o' → logprob: -7.064847469329834
    7. ',state' → logprob: -7.189847469329834
    8. ',)' → logprob: -7.189847469329834
    9. ' ,' → logprob: -7.314847469329834
    10. ',n' → logprob: -7.814847469329834

Token 234: 'mask' (ID: 22527)
  Prédit: 'mask'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mask' → logprob: -0.614139974117279
    2. 'masked' → logprob: -0.989139974117279
    3. 'used' → logprob: -2.489140033721924
    4. 'visited' → logprob: -7.114140033721924
    5. ' masked' → logprob: -7.239140033721924
    6. 'oxy' → logprob: -7.614140033721924
    7. 'm' → logprob: -7.739140033721924
    8. 'oxygen' → logprob: -7.864140033721924
    9. ' used' → logprob: -8.114139556884766
    10. ' mask' → logprob: -8.614139556884766

Token 235: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0010080387583002448
    2. '),' → logprob: -7.376008033752441
    3. ')
' → logprob: -9.001008033752441
    4. ',' → logprob: -9.126008033752441
    5. ')=' → logprob: -9.501008033752441
    6. ' )' → logprob: -9.876008033752441
    7. '   ' → logprob: -11.376008033752441
    8. '):' → logprob: -12.626008033752441
    9. ',)' → logprob: -13.626008033752441
    10. '}' → logprob: -13.876008033752441

Token 236: ' val' (ID: 1459)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'value' → logprob: -1.1959306001663208
    2. ' =' → logprob: -1.4459306001663208
    3. ' ' → logprob: -2.4459304809570312
    4. ')' → logprob: -2.5709304809570312
    5. '=' → logprob: -2.9459304809570312
    6. ' value' → logprob: -3.1959304809570312
    7. 'default' → logprob: -3.3209304809570312
    8. ' dist' → logprob: -3.6959304809570312
    9. 'dist' → logprob: -3.6959304809570312
    10. ' defaultdict' → logprob: -4.070930480957031

Token 237: '=' (ID: 28)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20206087827682495
    2. '=' → logprob: -1.7020609378814697
    3. ')' → logprob: -8.32706069946289
    4. ' =
' → logprob: -8.32706069946289
    5. '=
' → logprob: -10.57706069946289
    6. '[' → logprob: -10.70206069946289
    7. ']' → logprob: -10.70206069946289
    8. '={}' → logprob: -11.07706069946289
    9. '=[' → logprob: -11.70206069946289
    10. ',' → logprob: -11.70206069946289

Token 238: 'cost' (ID: 33457)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.3027660846710205
    2. 'sys' → logprob: -2.0527660846710205
    3. '0' → logprob: -2.4277660846710205
    4. 'int' → logprob: -3.5527660846710205
    5. 'inf' → logprob: -5.052765846252441
    6. 'cost' → logprob: -5.427765846252441
    7. 'heap' → logprob: -6.427765846252441
    8. ' sys' → logprob: -6.677765846252441
    9. ' float' → logprob: -6.927765846252441
    10. 'None' → logprob: -8.927765846252441

Token 239: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.33923283219337463
    2. '   ' → logprob: -1.7142328023910522
    3. 'dist' → logprob: -2.339232921600342
    4. ' dist' → logprob: -4.964232921600342
    5. '    
' → logprob: -6.589232921600342
    6. ' =' → logprob: -7.589232921600342
    7. 'import' → logprob: -8.089232444763184
    8. '	dist' → logprob: -8.089232444763184
    9. '_dist' → logprob: -8.214232444763184
    10. ',
' → logprob: -8.464232444763184

Token 240: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.8512245416641235
    2. 'dist' → logprob: -1.9762245416641235
    3. 'd' → logprob: -2.101224422454834
    4. '_' → logprob: -2.226224422454834
    5. ' =' → logprob: -2.351224422454834
    6. ',' → logprob: -2.351224422454834
    7. ')' → logprob: -2.601224422454834
    8. '=' → logprob: -2.601224422454834
    9. ' 
' → logprob: -3.601224422454834
    10. '[' → logprob: -3.601224422454834

Token 241: ' #' (ID: 1069)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.020854946225881577
    2. ' dist' → logprob: -4.395854949951172
    3. '   ' → logprob: -4.895854949951172
    4. 'd' → logprob: -7.895854949951172
    5. 'from' → logprob: -8.520854949951172
    6. 'import' → logprob: -8.770854949951172
    7. '	dist' → logprob: -10.145854949951172
    8. 'distance' → logprob: -10.520854949951172
    9. ' from' → logprob: -11.895854949951172
    10. '
' → logprob: -11.895854949951172

Token 242: ' To' (ID: 2514)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.0034628675784915686
    2. 'import' → logprob: -6.503462791442871
    3. ' dist' → logprob: -6.753462791442871
    4. 'from' → logprob: -7.253462791442871
    5. '   ' → logprob: -9.878462791442871
    6. '
' → logprob: -11.128462791442871
    7. 'd' → logprob: -11.753462791442871
    8. ' from' → logprob: -12.378462791442871
    9. ' import' → logprob: -13.128462791442871
    10. 'distance' → logprob: -13.878462791442871

Token 243: ' limit' (ID: 5967)
  Prédit: ' store'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' store' → logprob: -1.412975788116455
    2. ' continue' → logprob: -1.912975788116455
    3. 'continue' → logprob: -2.287975788116455
    4. ' keep' → logprob: -2.537975788116455
    5. ' ' → logprob: -2.662975788116455
    6. '_' → logprob: -3.662975788116455
    7. '_continue' → logprob: -3.662975788116455
    8. ' process' → logprob: -3.912975788116455
    9. ' =' → logprob: -3.912975788116455
    10. ' ensure' → logprob: -4.037975788116455

Token 244: ' memory' (ID: 8197)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.1855716109275818
    2. ' _' → logprob: -3.3105716705322266
    3. ' ' → logprob: -3.6855716705322266
    4. ' the' → logprob: -3.8105716705322266
    5. '   ' → logprob: -4.685571670532227
    6. 'd' → logprob: -4.935571670532227
    7. 'max' → logprob: -5.185571670532227
    8. 'the' → logprob: -5.310571670532227
    9. ')' → logprob: -5.435571670532227
    10. 'space' → logprob: -5.560571670532227

Token 245: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8298560976982117
    2. ')' → logprob: -1.4548561573028564
    3. ',' → logprob: -1.7048561573028564
    4. '=' → logprob: -2.8298561573028564
    5. '   ' → logprob: -4.079855918884277
    6. '_' → logprob: -4.329855918884277
    7. ' ,' → logprob: -4.454855918884277
    8. ' )' → logprob: -4.704855918884277
    9. ' ' → logprob: -5.079855918884277
    10. '<|end|>' → logprob: -5.204855918884277

Token 246: ' keep' (ID: 3357)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.6944445371627808
    2. 'import' → logprob: -1.4444445371627808
    3. '   ' → logprob: -2.1944446563720703
    4. '#' → logprob: -2.9444446563720703
    5. 'from' → logprob: -2.9444446563720703
    6. ' dist' → logprob: -4.19444465637207
    7. 'continue' → logprob: -4.31944465637207
    8. 'max' → logprob: -5.19444465637207
    9. ' import' → logprob: -6.06944465637207
    10. ' from' → logprob: -6.56944465637207

Token 247: ' dist' (ID: 3601)
  Prédit: ' only'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' only' → logprob: -0.7443508505821228
    2. 'dist' → logprob: -0.8693508505821228
    3. 'only' → logprob: -2.6193509101867676
    4. '   ' → logprob: -4.369350910186768
    5. ' dist' → logprob: -4.494350910186768
    6. 'import' → logprob: -6.119350910186768
    7. 'heap' → logprob: -6.369350910186768
    8. 'min' → logprob: -6.494350910186768
    9. ' a' → logprob: -6.994350910186768
    10. 'distance' → logprob: -7.619350910186768

Token 248: ' only' (ID: 1606)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04549713432788849
    2. '=' → logprob: -3.170497179031372
    3. '={}' → logprob: -7.170496940612793
    4. 's' → logprob: -7.920496940612793
    5. ',' → logprob: -8.045496940612793
    6. 'import' → logprob: -8.420496940612793
    7. '   ' → logprob: -8.545496940612793
    8. '  ' → logprob: -9.795496940612793
    9. '={}
' → logprob: -9.795496940612793
    10. ')' → logprob: -9.920496940612793

Token 249: ' for' (ID: 395)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.5806500911712646
    2. '=' → logprob: -1.9556500911712646
    3. 'from' → logprob: -2.3306500911712646
    4. 'for' → logprob: -2.3306500911712646
    5. '   ' → logprob: -3.2056500911712646
    6. ' =' → logprob: -4.205650329589844
    7. ' for' → logprob: -4.705650329589844
    8. ')' → logprob: -5.080650329589844
    9. 'def' → logprob: -5.330650329589844
    10. '[' → logprob: -5.455650329589844

Token 250: ' states' (ID: 9407)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.421353816986084
    2. '(' → logprob: -1.671353816986084
    3. '(x' → logprob: -1.921353816986084
    4. 'oxygen' → logprob: -2.046353816986084
    5. 'states' → logprob: -2.796353816986084
    6. ' (' → logprob: -3.421353816986084
    7. 'positions' → logprob: -3.546353816986084
    8. ' states' → logprob: -3.921353816986084
    9. ' oxygen' → logprob: -3.921353816986084
    10. 'the' → logprob: -4.171353816986084

Token 251: ' with' (ID: 483)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.19502945244312286
    2. '   ' → logprob: -2.3200294971466064
    3. '=' → logprob: -3.4450294971466064
    4. ',' → logprob: -4.445029258728027
    5. 'import' → logprob: -4.445029258728027
    6. '<|end|>' → logprob: -4.695029258728027
    7. ')' → logprob: -5.945029258728027
    8. '
' → logprob: -6.320029258728027
    9. 'from' → logprob: -6.570029258728027
    10. ' =
' → logprob: -6.945029258728027

Token 252: ' oxygen' (ID: 34398)
  Prédit: 'oxygen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oxygen' → logprob: -0.03232482448220253
    2. ' oxygen' → logprob: -3.90732479095459
    3. 'oxy' → logprob: -5.53232479095459
    4. 'mask' → logprob: -6.53232479095459
    5. 'x' → logprob: -6.78232479095459
    6. 'o' → logprob: -7.15732479095459
    7. 'masked' → logprob: -7.15732479095459
    8. 'y' → logprob: -7.53232479095459
    9. 'm' → logprob: -8.03232479095459
    10. '```' → logprob: -8.28232479095459

Token 253: '_left' (ID: 22189)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.4030811786651611
    2. ' =' → logprob: -1.4030811786651611
    3. '   ' → logprob: -2.278081178665161
    4. '=' → logprob: -2.278081178665161
    5. '_' → logprob: -2.528081178665161
    6. ')' → logprob: -3.153081178665161
    7. ' 
' → logprob: -3.278081178665161
    8. '    
' → logprob: -3.903081178665161
    9. '   
' → logprob: -4.028080940246582
    10. '[' → logprob: -4.403080940246582

Token 254: '>' (ID: 29)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10333570837974548
    2. '=' → logprob: -2.9783356189727783
    3. '   ' → logprob: -3.3533356189727783
    4. '_' → logprob: -5.228335857391357
    5. ',' → logprob: -6.603335857391357
    6. ')' → logprob: -6.853335857391357
    7. '
' → logprob: -6.978335857391357
    8. '  ' → logprob: -7.728335857391357
    9. '    
' → logprob: -7.853335857391357
    10. ']' → logprob: -8.1033353805542

Token 255: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0033860031981021166
    2. ' ' → logprob: -5.7533860206604
    3. '=' → logprob: -8.503385543823242
    4. '>' → logprob: -13.128385543823242
    5. '1' → logprob: -13.503385543823242
    6. '```' → logprob: -14.878385543823242
    7. '
' → logprob: -15.315885543823242
    8. '   ' → logprob: -15.440885543823242
    9. ' ' → logprob: -15.503385543823242
    10. ' =' → logprob: -15.815885543823242

Token 256: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8592919111251831
    2. 'dist' → logprob: -0.8592919111251831
    3. '
' → logprob: -2.4842920303344727
    4. 'while' → logprob: -3.3592920303344727
    5. '    
' → logprob: -4.734292030334473
    6. ' while' → logprob: -5.484292030334473
    7. 'distance' → logprob: -5.609292030334473
    8. ' dist' → logprob: -5.734292030334473
    9. ' 
' → logprob: -5.984292030334473
    10. ')' → logprob: -6.484292030334473

Token 257: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14473068714141846
    2. 'dist' → logprob: -2.644730567932129
    3. 'd' → logprob: -3.894730567932129
    4. ' 
' → logprob: -4.519730567932129
    5. '
' → logprob: -5.269730567932129
    6. ' dist' → logprob: -5.394730567932129
    7. '    
' → logprob: -5.519730567932129
    8. '    ' → logprob: -5.644730567932129
    9. ' ' → logprob: -6.144730567932129
    10. ')' → logprob: -6.269730567932129

Token 258: ' from' (ID: 591)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7092089653015137
    2. 'dist' → logprob: -1.2092089653015137
    3. ' 
' → logprob: -2.9592089653015137
    4. ' ' → logprob: -3.7092089653015137
    5. ' dist' → logprob: -3.9592089653015137
    6. 'd' → logprob: -3.9592089653015137
    7. ')' → logprob: -4.209208965301514
    8. 'heap' → logprob: -4.459208965301514
    9. 'while' → logprob: -4.709208965301514
    10. ' while' → logprob: -4.834208965301514

Token 259: ' collections' (ID: 22690)
  Prédit: 'collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'collections' → logprob: -0.014368109405040741
    2. 'heap' → logprob: -4.264368057250977
    3. ' collections' → logprob: -8.514368057250977
    4. ' heap' → logprob: -13.139368057250977
    5. 'math' → logprob: -13.264368057250977
    6. 'queue' → logprob: -15.764368057250977
    7. 'collection' → logprob: -16.389368057250977
    8. '_heap' → logprob: -17.014368057250977
    9. 'copy' → logprob: -17.639368057250977
    10. '_' → logprob: -19.514368057250977

Token 260: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.16027753055095673
    2. ' import' → logprob: -1.9102774858474731
    3. '	import' → logprob: -10.910277366638184
    4. '.' → logprob: -11.535277366638184
    5. '_import' → logprob: -11.910277366638184
    6. ' ' → logprob: -12.660277366638184
    7. '.import' → logprob: -12.785277366638184
    8. ' defaultdict' → logprob: -13.160277366638184
    9. '<|end|>' → logprob: -13.160277366638184
    10. ' ' → logprob: -14.035277366638184

Token 261: ' deque' (ID: 90347)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.002224960131570697
    2. ' deque' → logprob: -6.502224922180176
    3. 'default' → logprob: -7.252224922180176
    4. ' defaultdict' → logprob: -11.252224922180176
    5. 'de' → logprob: -14.252224922180176
    6. 'collections' → logprob: -16.127225875854492
    7. '```' → logprob: -17.127225875854492
    8. '
' → logprob: -17.877225875854492
    9. '   ' → logprob: -18.127225875854492
    10. '

' → logprob: -20.752225875854492

Token 262: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.45606547594070435
    2. 'deque' → logprob: -1.5810654163360596
    3. 'd' → logprob: -2.5810654163360596
    4. 'q' → logprob: -4.081065654754639
    5. 'dist' → logprob: -4.581065654754639
    6. '<|end|>' → logprob: -4.581065654754639
    7. 'queue' → logprob: -4.831065654754639
    8. ',' → logprob: -5.081065654754639
    9. 'import' → logprob: -5.206065654754639
    10. '#' → logprob: -5.706065654754639

Token 263: 'default' (ID: 4211)
  Prédit: 'default'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'default' → logprob: -0.2028588354587555
    2. ' defaultdict' → logprob: -1.702858805656433
    3. 'deque' → logprob: -6.577858924865723
    4. 'named' → logprob: -10.202858924865723
    5. 'heap' → logprob: -11.452858924865723
    6. ' deque' → logprob: -12.577858924865723
    7. 'collections' → logprob: -14.327858924865723
    8. ' default' → logprob: -14.827858924865723
    9. '"default' → logprob: -15.202858924865723
    10. 'def' → logprob: -15.202858924865723

Token 264: 'dict' (ID: 20993)
  Prédit: 'dict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dict' → logprob: 0.0
    2. ' dict' → logprob: -17.25
    3. 'dic' → logprob: -18.875
    4. 'Dict' → logprob: -20.375
    5. 'dist' → logprob: -22.75
    6. 'ict' → logprob: -23.0
    7. 'list' → logprob: -23.875
    8. '_dict' → logprob: -24.0
    9. 'd' → logprob: -24.75
    10. 'dictionary' → logprob: -25.0

Token 265: '
' (ID: 198)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.1960587501525879
    2. '
' → logprob: -2.321058750152588
    3. 'deque' → logprob: -3.071058750152588
    4. 'import' → logprob: -4.321058750152588
    5. ' dist' → logprob: -5.196058750152588
    6. 'distance' → logprob: -5.696058750152588
    7. 'queue' → logprob: -5.821058750152588
    8. ' 
' → logprob: -6.571058750152588
    9. '

' → logprob: -6.821058750152588
    10. 'd' → logprob: -6.946058750152588

Token 266: '   ' (ID: 271)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.04670354723930359
    2. 'deque' → logprob: -4.296703338623047
    3. ' dist' → logprob: -4.421703338623047
    4. '
' → logprob: -4.921703338623047
    5. 'import' → logprob: -6.171703338623047
    6. ' 
' → logprob: -6.171703338623047
    7. 'distance' → logprob: -6.546703338623047
    8. 'queue' → logprob: -6.546703338623047
    9. 'dp' → logprob: -7.171703338623047
    10. 'while' → logprob: -7.421703338623047

Token 267: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' (adapté à ' dist') → logprob: -0.006870952434837818
    2. 'deque' → logprob: -5.131870746612549
    3. 'import' → logprob: -7.756870746612549
    4. 'd' → logprob: -9.256871223449707
    5. ' dist' → logprob: -9.506871223449707
    6. 'distance' → logprob: -9.756871223449707
    7. 'queue' → logprob: -10.006871223449707
    8. '
' → logprob: -10.381871223449707
    9. 'dp' → logprob: -10.381871223449707
    10. 'heap' → logprob: -10.506871223449707

Token 268: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759995579719543
    2. ' =' → logprob: -0.8259995579719543
    3. '={}' → logprob: -9.82599925994873
    4. ' ={' → logprob: -13.32599925994873
    5. '=dict' → logprob: -13.70099925994873
    6. ' ' → logprob: -13.95099925994873
    7. '={' → logprob: -14.20099925994873
    8. '[' → logprob: -14.70099925994873
    9. '={}
' → logprob: -15.07599925994873
    10. ',' → logprob: -15.70099925994873

Token 269: ' dict' (ID: 11878)
  Prédit: 'default'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'default' → logprob: -0.009375413879752159
    2. '{}' → logprob: -4.75937557220459
    3. 'dict' → logprob: -7.50937557220459
    4. ' defaultdict' → logprob: -8.63437557220459
    5. '{' → logprob: -10.63437557220459
    6. ' dict' → logprob: -12.63437557220459
    7. ' {}' → logprob: -12.63437557220459
    8. ' default' → logprob: -13.13437557220459
    9. 'collections' → logprob: -14.25937557220459
    10. '.default' → logprob: -14.63437557220459

Token 270: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0002820736262947321
    2. '()
' → logprob: -8.625282287597656
    3. '{' → logprob: -9.875282287597656
    4. '{}' → logprob: -10.625282287597656
    5. '[]' → logprob: -12.125282287597656
    6. '   ' → logprob: -12.500282287597656
    7. '()

' → logprob: -13.000282287597656
    8. '()]' → logprob: -13.250282287597656
    9. '[' → logprob: -13.375282287597656
    10. '();' → logprob: -13.500282287597656

Token 271: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.7608391046524048
    2. ',' → logprob: -2.0108389854431152
    3. ' (' → logprob: -2.3858389854431152
    4. '(' → logprob: -2.6358389854431152
    5. ')' → logprob: -2.6358389854431152
    6. '   ' → logprob: -2.7608389854431152
    7. 'while' → logprob: -2.7608389854431152
    8. '_' → logprob: -3.2608389854431152
    9. ' while' → logprob: -3.2608389854431152
    10. '[' → logprob: -3.3858389854431152

Token 272: ' h' (ID: 312)
  Prédit: 'dire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dire' → logprob: -0.7283263802528381
    2. 'while' → logprob: -1.7283263206481934
    3. 'heap' → logprob: -2.2283263206481934
    4. '   ' → logprob: -2.3533263206481934
    5. 'dx' → logprob: -3.4783263206481934
    6. 'for' → logprob: -3.6033263206481934
    7. 'moves' → logprob: -4.228326320648193
    8. ' while' → logprob: -4.353326320648193
    9. ' directions' → logprob: -4.853326320648193
    10. 'import' → logprob: -4.978326320648193

Token 273: 'q' (ID: 80)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.0007344625773839653
    2. 'ea' → logprob: -8.750734329223633
    3. ' =' → logprob: -9.000734329223633
    4. '=' → logprob: -9.000734329223633
    5. 'eep' → logprob: -9.125734329223633
    6. 'eat' → logprob: -9.375734329223633
    7. 'heap' → logprob: -10.750734329223633
    8. 'ead' → logprob: -11.000734329223633
    9. '	e' → logprob: -11.375734329223633
    10. 'q' → logprob: -11.750734329223633

Token 274: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.15753173828125
    2. ' =' → logprob: -2.03253173828125
    3. '.' → logprob: -4.65753173828125
    4. '.he' → logprob: -6.03253173828125
    5. ')' → logprob: -7.15753173828125
    6. ',' → logprob: -7.90753173828125
    7. '.heap' → logprob: -7.90753173828125
    8. '.push' → logprob: -8.28253173828125
    9. '.append' → logprob: -8.78253173828125
    10. '<|end|>' → logprob: -8.78253173828125

Token 275: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.10263949632644653
    2. '[(' → logprob: -2.6026394367218018
    3. ' []' → logprob: -3.8526394367218018
    4. ' [(' → logprob: -6.102639675140381
    5. '[' → logprob: -12.102639198303223
    6. '[]
' → logprob: -13.227639198303223
    7. '[]}' → logprob: -13.852639198303223
    8. '[],' → logprob: -14.477639198303223
    9. '[]

' → logprob: -16.10264015197754
    10. ' [' → logprob: -16.35264015197754

Token 276: '   ' (ID: 271)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.7165607810020447
    2. 'heap' → logprob: -1.5915608406066895
    3. '<|end|>' → logprob: -1.8415608406066895
    4. '(heap' → logprob: -2.5915608406066895
    5. ' heap' → logprob: -3.9665608406066895
    6. ' (' → logprob: -3.9665608406066895
    7. '   ' → logprob: -4.4665608406066895
    8. ' ' → logprob: -4.9665608406066895
    9. '(' → logprob: -5.4665608406066895
    10. ',' → logprob: -6.2165608406066895

Token 277: ' #' (ID: 1069)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.43131017684936523
    2. 'heap' → logprob: -1.3063101768493652
    3. 'for' → logprob: -3.1813101768493652
    4. 'from' → logprob: -4.431310176849365
    5. '<|end|>' → logprob: -5.056310176849365
    6. ' heap' → logprob: -5.306310176849365
    7. '(heap' → logprob: -5.681310176849365
    8. ' for' → logprob: -5.931310176849365
    9. 'he' → logprob: -6.306310176849365
    10. ' ' → logprob: -6.681310176849365

Token 278: ' Start' (ID: 7972)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.3320212662220001
    2. 'import' → logprob: -1.3320212364196777
    3. 'for' → logprob: -4.457021236419678
    4. ' heap' → logprob: -5.707021236419678
    5. 'he' → logprob: -6.082021236419678
    6. ' for' → logprob: -7.332021236419678
    7. 'from' → logprob: -8.082021713256836
    8. '#' → logprob: -9.082021713256836
    9. ' import' → logprob: -9.707021713256836
    10. '   ' → logprob: -9.707021713256836

Token 279: ' positions' (ID: 15897)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.5329577922821045
    2. ' =' → logprob: -1.9079577922821045
    3. ' heap' → logprob: -2.6579577922821045
    4. '=' → logprob: -3.5329577922821045
    5. 'heap' → logprob: -3.5329577922821045
    6. 'state' → logprob: -4.032958030700684
    7. ',' → logprob: -4.157958030700684
    8. 'from' → logprob: -4.282958030700684
    9. ' state' → logprob: -4.657958030700684
    10. '   ' → logprob: -4.657958030700684

Token 280: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.2918671369552612
    2. '<|end|>' → logprob: -1.4168671369552612
    3. ',' → logprob: -2.166867256164551
    4. ' for' → logprob: -2.291867256164551
    5. 'for' → logprob: -2.541867256164551
    6. 'import' → logprob: -3.041867256164551
    7. '=' → logprob: -3.666867256164551
    8. '
' → logprob: -3.916867256164551
    9. '  
' → logprob: -4.416867256164551
    10. ' ' → logprob: -4.541867256164551

Token 281: ' y' (ID: 342)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.18197490274906158
    2. 'for' → logprob: -1.8069748878479004
    3. '   ' → logprob: -6.4319748878479
    4. 'import' → logprob: -8.306975364685059
    5. ' 
' → logprob: -9.681975364685059
    6. '    ' → logprob: -10.181975364685059
    7. 'from' → logprob: -10.181975364685059
    8. '
' → logprob: -10.431975364685059
    9. ' x' → logprob: -10.681975364685059
    10. '    
' → logprob: -10.681975364685059

Token 282: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.09262562543153763
    2. ' =' → logprob: -2.467625617980957
    3. ',' → logprob: -5.717625617980957
    4. ' ,' → logprob: -9.092625617980957
    5. ' ==' → logprob: -9.092625617980957
    6. '==' → logprob: -9.467625617980957
    7. '   ' → logprob: -9.842625617980957
    8. '0' → logprob: -10.967625617980957
    9. ' ' → logprob: -12.467625617980957
    10. ',
' → logprob: -12.717625617980957

Token 283: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.007823806256055832
    2. ' ' → logprob: -4.882823944091797
    3. '=' → logprob: -8.507823944091797
    4. ' =' → logprob: -12.007823944091797
    5. '`' → logprob: -12.632823944091797
    6. '```' → logprob: -13.132823944091797
    7. ',' → logprob: -13.757823944091797
    8. '   ' → logprob: -14.007823944091797
    9. '[' → logprob: -14.632823944091797
    10. ')' → logprob: -15.007823944091797

Token 284: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.23782946169376373
    2. 'for' → logprob: -2.2378294467926025
    3. ' for' → logprob: -3.1128294467926025
    4. ' ,' → logprob: -3.7378294467926025
    5. '
' → logprob: -4.237829685211182
    6. ',
' → logprob: -4.612829685211182
    7. '<|end|>' → logprob: -5.112829685211182
    8. 'import' → logprob: -6.737829685211182
    9. '   ' → logprob: -6.987829685211182
    10. ' ' → logprob: -7.237829685211182

Token 285: 'y' (ID: 88)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.989031970500946
    2. 'x' → logprob: -1.3640320301055908
    3. 'for' → logprob: -2.114032030105591
    4. ' x' → logprob: -2.114032030105591
    5. ',' → logprob: -2.364032030105591
    6. ')' → logprob: -3.989032030105591
    7. ' ,' → logprob: -5.364031791687012
    8. '0' → logprob: -5.614031791687012
    9. ' range' → logprob: -6.114031791687012
    10. ',x' → logprob: -6.114031791687012

Token 286: '=' (ID: 28)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8152123689651489
    2. '=' → logprob: -1.065212368965149
    3. ')' → logprob: -1.815212368965149
    4. '==' → logprob: -4.440212249755859
    5. '),' → logprob: -4.815212249755859
    6. ' =' → logprob: -4.940212249755859
    7. ' ,' → logprob: -5.065212249755859
    8. ' ==' → logprob: -5.690212249755859
    9. '   ' → logprob: -5.940212249755859
    10. ',
' → logprob: -6.190212249755859

Token 287: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.04978181794285774
    2. ' ' → logprob: -3.2997817993164062
    3. ',' → logprob: -5.549781799316406
    4. ')' → logprob: -5.674781799316406
    5. '=' → logprob: -5.799781799316406
    6. ' ,' → logprob: -7.049781799316406
    7. ' =' → logprob: -8.424781799316406
    8. ' )' → logprob: -9.674781799316406
    9. '),' → logprob: -9.924781799316406
    10. '   ' → logprob: -10.299781799316406

Token 288: ' in' (ID: 306)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.21433982253074646
    2. ',' → logprob: -1.7143398523330688
    3. ',)' → logprob: -5.464339733123779
    4. '),' → logprob: -5.714339733123779
    5. ' )' → logprob: -5.714339733123779
    6. ' ,' → logprob: -7.089339733123779
    7. '0' → logprob: -8.339340209960938
    8. ',:)' → logprob: -8.964340209960938
    9. '-' → logprob: -9.339340209960938
    10. '[' → logprob: -9.714340209960938

Token 289: ' problem' (ID: 4792)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.13129296898841858
    2. ' range' → logprob: -2.2562930583953857
    3. ')' → logprob: -5.631292819976807
    4. '0' → logprob: -6.006292819976807
    5. 'W' → logprob: -6.131292819976807
    6. 'code' → logprob: -6.506292819976807
    7. 'grid' → logprob: -6.756292819976807
    8. '1' → logprob: -7.006292819976807
    9. 'for' → logprob: -7.006292819976807
    10. 'Python' → logprob: -7.006292819976807

Token 290: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.40600088238716125
    2. ')' → logprob: -1.1560008525848389
    3. '),' → logprob: -4.531001091003418
    4. ',
' → logprob: -6.281001091003418
    5. ',)' → logprob: -6.406001091003418
    6. ' ,' → logprob: -6.531001091003418
    7. ' )' → logprob: -7.531001091003418
    8. 'import' → logprob: -7.656001091003418
    9. ')
' → logprob: -7.906001091003418
    10. '
' → logprob: -9.031001091003418

Token 291: ' zero' (ID: 12421)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.2218042612075806
    2. ')' → logprob: -1.8468042612075806
    3. '),' → logprob: -2.096804141998291
    4. ' x' → logprob: -2.346804141998291
    5. 'x' → logprob: -2.471804141998291
    6. ' ,' → logprob: -2.596804141998291
    7. '0' → logprob: -3.096804141998291
    8. ' ),' → logprob: -3.596804141998291
    9. ' W' → logprob: -3.721804141998291
    10. ' )' → logprob: -4.346804141998291

Token 292: '-based' (ID: 8235)
  Prédit: '-based'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-based' → logprob: -0.026242122054100037
    2. '-index' → logprob: -4.401242256164551
    3. ')' → logprob: -4.776242256164551
    4. '-' → logprob: -6.151242256164551
    5. 'based' → logprob: -6.651242256164551
    6. ')-' → logprob: -7.026242256164551
    7. ' -' → logprob: -8.65124225616455
    8. '_based' → logprob: -9.15124225616455
    9. '#' → logprob: -9.27624225616455
    10. ']' → logprob: -9.52624225616455

Token 293: ' here' (ID: 2105)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4110804796218872
    2. '),' → logprob: -1.5360804796218872
    3. ',' → logprob: -2.1610803604125977
    4. ' for' → logprob: -6.661080360412598
    5. 'for' → logprob: -6.786080360412598
    6. ' )' → logprob: -7.036080360412598
    7. ' ,' → logprob: -7.036080360412598
    8. '   ' → logprob: -7.286080360412598
    9. ' ),' → logprob: -7.661080360412598
    10. ',y' → logprob: -8.411080360412598

Token 294: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5171441435813904
    2. ',' → logprob: -1.0171442031860352
    3. '),' → logprob: -3.642144203186035
    4. ' )' → logprob: -5.267144203186035
    5. ' ,' → logprob: -5.392144203186035
    6. ',)' → logprob: -5.392144203186035
    7. ',
' → logprob: -7.767144203186035
    8. ' ),' → logprob: -7.892144203186035
    9. 'for' → logprob: -8.267144203186035
    10. ')
' → logprob: -8.517144203186035

Token 295: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8639792799949646
    2. 'import' → logprob: -1.3639793395996094
    3. ' for' → logprob: -1.4889793395996094
    4. ',' → logprob: -3.7389793395996094
    5. '(heap' → logprob: -4.113979339599609
    6. '<|end|>' → logprob: -4.613979339599609
    7. ' ' → logprob: -4.988979339599609
    8. 'heap' → logprob: -5.113979339599609
    9. ')' → logprob: -5.113979339599609
    10. ' =' → logprob: -5.363979339599609

Token 296: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.09530441462993622
    2. ' for' → logprob: -2.470304489135742
    3. '   ' → logprob: -5.095304489135742
    4. 'import' → logprob: -9.095304489135742
    5. '
' → logprob: -9.845304489135742
    6. 'from' → logprob: -10.220304489135742
    7. '    
' → logprob: -12.220304489135742
    8. '	for' → logprob: -12.220304489135742
    9. '  ' → logprob: -13.345304489135742
    10. ',' → logprob: -13.970304489135742

Token 297: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.20170597732067108
    2. ' x' → logprob: -1.7017059326171875
    3. 'start' → logprob: -8.826705932617188
    4. ' start' → logprob: -9.326705932617188
    5. 'i' → logprob: -11.451705932617188
    6. 'sx' → logprob: -11.451705932617188
    7. '   ' → logprob: -11.701705932617188
    8. ' i' → logprob: -12.201705932617188
    9. '_x' → logprob: -12.451705932617188
    10. ' sx' → logprob: -12.701705932617188

Token 298: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.013044807128608227
    2. 'in' → logprob: -4.388044834136963
    3. ' ' → logprob: -8.513044357299805
    4. ',' → logprob: -8.513044357299805
    5. ')' → logprob: -9.263044357299805
    6. ' ,' → logprob: -12.013044357299805
    7. '  ' → logprob: -12.138044357299805
    8. ' )' → logprob: -12.263044357299805
    9. '   ' → logprob: -12.513044357299805
    10. '	in' → logprob: -12.513044357299805

Token 299: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.5759613513946533
    2. ' range' → logprob: -0.8259613513946533
    3. '0' → logprob: -11.075961112976074
    4. ' ' → logprob: -13.450961112976074
    5. '(range' → logprob: -13.700961112976074
    6. '	range' → logprob: -13.825961112976074
    7. ')' → logprob: -14.200961112976074
    8. '[' → logprob: -14.325961112976074
    9. ' xrange' → logprob: -14.575961112976074
    10. '   ' → logprob: -15.200961112976074

Token 300: '(W' (ID: 26031)
  Prédit: '(W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(W' → logprob: -1.8193366486229934e-05
    2. '(' → logprob: -11.000018119812012
    3. 'W' → logprob: -14.000018119812012
    4. ' (' → logprob: -15.000018119812012
    5. '   ' → logprob: -16.250019073486328
    6. '(
' → logprob: -17.250019073486328
    7. ' W' → logprob: -17.375019073486328
    8. '	W' → logprob: -17.875019073486328
    9. ')' → logprob: -18.375019073486328
    10. '(len' → logprob: -19.375019073486328

Token 301: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.030244918540120125
    2. '):
' → logprob: -4.405244827270508
    3. ' ):' → logprob: -4.530244827270508
    4. ')' → logprob: -5.155244827270508
    5. ',' → logprob: -7.405244827270508
    6. '   ' → logprob: -8.280244827270508
    7. ' ' → logprob: -10.030244827270508
    8. ' )' → logprob: -10.030244827270508
    9. ' ):
' → logprob: -10.030244827270508
    10. '):
' → logprob: -11.030244827270508

Token 302: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3250470757484436
    2. '   ' → logprob: -1.3250470161437988
    3. ',' → logprob: -5.075047016143799
    4. ':' → logprob: -5.575047016143799
    5. ' if' → logprob: -6.825047016143799
    6. ':
' → logprob: -8.950047492980957
    7. '<|end|>' → logprob: -9.950047492980957
    8. '
' → logprob: -10.075047492980957
    9. '):
' → logprob: -10.075047492980957
    10. ' ,' → logprob: -10.200047492980957

Token 303: ' start' (ID: 1604)
  Prédit: ' heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' heap' → logprob: -0.4838167428970337
    2. '   ' → logprob: -1.4838167428970337
    3. 'heap' → logprob: -2.733816623687744
    4. ' if' → logprob: -2.733816623687744
    5. 'if' → logprob: -3.733816623687744
    6. ' he' → logprob: -6.733816623687744
    7. 'he' → logprob: -7.358816623687744
    8. 'import' → logprob: -7.733816623687744
    9. '       ' → logprob: -8.983817100524902
    10. ' initial' → logprob: -9.171317100524902

Token 304: '_o' (ID: 28960)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14750276505947113
    2. '=' → logprob: -3.2725026607513428
    3. '_state' → logprob: -3.2725026607513428
    4. ',' → logprob: -4.397502899169922
    5. '_cost' → logprob: -4.397502899169922
    6. 'state' → logprob: -4.522502899169922
    7. '_pos' → logprob: -5.022502899169922
    8. '_' → logprob: -6.022502899169922
    9. '=(' → logprob: -6.147502899169922
    10. ' =(' → logprob: -6.272502899169922

Token 305: '2' (ID: 17)
  Prédit: 'xygen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xygen' → logprob: -0.27183103561401367
    2. 'xy' → logprob: -1.6468310356140137
    3. 'x' → logprob: -3.5218310356140137
    4. '_' → logprob: -5.271831035614014
    5. ',' → logprob: -5.521831035614014
    6. 'y' → logprob: -6.021831035614014
    7. 'cy' → logprob: -7.396831035614014
    8. '2' → logprob: -7.396831035614014
    9. 'oxygen' → logprob: -7.521831035614014
    10. '=' → logprob: -8.146831512451172

Token 306: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6971293687820435
    2. ' =' → logprob: -0.6971293687820435
    3. 'xygen' → logprob: -6.447129249572754
    4. '2' → logprob: -6.947129249572754
    5. ',' → logprob: -7.572129249572754
    6. '_left' → logprob: -8.197129249572754
    7. '_' → logprob: -8.447129249572754
    8. '   ' → logprob: -10.197129249572754
    9. '=f' → logprob: -10.197129249572754
    10. ' ' → logprob: -10.572129249572754

Token 307: ' o' (ID: 293)
  Prédit: 'o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'o' → logprob: -0.979552149772644
    2. 'm' → logprob: -1.104552149772644
    3. 'f' → logprob: -1.354552149772644
    4. '0' → logprob: -3.4795522689819336
    5. ' o' → logprob: -6.979552268981934
    6. ' ' → logprob: -7.229552268981934
    7. '   ' → logprob: -7.604552268981934
    8. ' m' → logprob: -7.604552268981934
    9. ' f' → logprob: -7.854552268981934
    10. 'O' → logprob: -7.854552268981934

Token 308: '
' (ID: 198)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.022155523300171
    2. '
' → logprob: -1.147155523300171
    3. ' +' → logprob: -2.272155523300171
    4. ' -' → logprob: -2.397155523300171
    5. '-' → logprob: -2.772155523300171
    6. ' if' → logprob: -3.897155523300171
    7. 'if' → logprob: -4.14715576171875
    8. ',' → logprob: -4.77215576171875
    9. '   ' → logprob: -5.02215576171875
    10. ' ' → logprob: -6.39715576171875

Token 309: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6589227914810181
    2. '       ' → logprob: -1.283922791481018
    3. '   ' → logprob: -2.4089226722717285
    4. ',' → logprob: -2.5339226722717285
    5. ' if' → logprob: -4.5339226722717285
    6. ',h' → logprob: -4.6589226722717285
    7. ',
' → logprob: -5.0339226722717285
    8. 'if' → logprob: -5.9089226722717285
    9. '
' → logprob: -7.0339226722717285
    10. ' heap' → logprob: -7.1589226722717285

Token 310: ' start' (ID: 1604)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.7900620698928833
    2. '   ' → logprob: -1.0400620698928833
    3. ' heap' → logprob: -2.4150619506835938
    4. 'if' → logprob: -3.5400619506835938
    5. 'import' → logprob: -3.5400619506835938
    6. ',' → logprob: -4.040061950683594
    7. ' if' → logprob: -4.165061950683594
    8. 'he' → logprob: -5.665061950683594
    9. '
' → logprob: -5.915061950683594
    10. '(heap' → logprob: -6.290061950683594

Token 311: '_mask' (ID: 21732)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.6972770690917969
    2. '_mask' → logprob: -1.8222770690917969
    3. '_state' → logprob: -1.8222770690917969
    4. '=' → logprob: -1.9472770690917969
    5. '_o' → logprob: -2.822277069091797
    6. '_cost' → logprob: -2.822277069091797
    7. ',' → logprob: -3.197277069091797
    8. '_x' → logprob: -3.197277069091797
    9. 'state' → logprob: -3.947277069091797
    10. '_pos' → logprob: -4.322277069091797

Token 312: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.061970822513103485
    2. ' =' → logprob: -2.8119707107543945
    3. ')' → logprob: -13.186970710754395
    4. '0' → logprob: -14.061970710754395
    5. ' ' → logprob: -15.311970710754395
    6. ',' → logprob: -16.18697166442871
    7. '[' → logprob: -17.06197166442871
    8. ')=' → logprob: -17.18697166442871
    9. ' =
' → logprob: -17.93697166442871
    10. ' |=' → logprob: -17.93697166442871

Token 313: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.15310683415737e-05
    2. ' ' → logprob: -10.750021934509277
    3. '000' → logprob: -18.87502098083496
    4. '   ' → logprob: -19.75002098083496
    5. '(' → logprob: -19.87502098083496
    6. '00' → logprob: -20.00002098083496
    7. '۰' → logprob: -20.43752098083496
    8. '1' → logprob: -20.56252098083496
    9. ' ' → logprob: -20.68752098083496
    10. '	' → logprob: -21.31252098083496

Token 314: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.250001907348633
    3. '000' → logprob: -18.750001907348633
    4. '۰' → logprob: -19.250001907348633
    5. '(' → logprob: -19.625001907348633
    6. '1' → logprob: -20.562501907348633
    7. '00' → logprob: -21.125001907348633
    8. '```' → logprob: -21.562501907348633
    9. '`' → logprob: -21.937501907348633
    10. '０' → logprob: -22.000001907348633

Token 315: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10275556892156601
    2. ',' → logprob: -2.602755546569824
    3. '
' → logprob: -4.727755546569824
    4. ',
' → logprob: -4.727755546569824
    5. '       ' → logprob: -6.602755546569824
    6. ',h' → logprob: -6.602755546569824
    7. 'import' → logprob: -6.977755546569824
    8. ')' → logprob: -7.102755546569824
    9. ' ,' → logprob: -8.352755546569824
    10. '    
' → logprob: -8.977755546569824

Token 316: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.037027403712272644
    2. ',' → logprob: -3.662027359008789
    3. '
' → logprob: -5.412027359008789
    4. ',
' → logprob: -6.037027359008789
    5. '       ' → logprob: -6.662027359008789
    6. ',h' → logprob: -7.537027359008789
    7. ' ,' → logprob: -8.162027359008789
    8. 'heap' → logprob: -8.412027359008789
    9. '    
' → logprob: -8.537027359008789
    10. '(heap' → logprob: -8.662027359008789

Token 317: ' cost' (ID: 3097)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.4269099831581116
    2. 'import' → logprob: -2.051909923553467
    3. ' heap' → logprob: -2.301909923553467
    4. '   ' → logprob: -2.301909923553467
    5. 'if' → logprob: -4.926909923553467
    6. ' if' → logprob: -5.301909923553467
    7. '
' → logprob: -6.176909923553467
    8. 'for' → logprob: -6.301909923553467
    9. ' for' → logprob: -6.801909923553467
    10. ',' → logprob: -7.551909923553467

Token 318: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06554842740297318
    2. ' =' → logprob: -2.8155484199523926
    3. ',' → logprob: -5.690548419952393
    4. ')' → logprob: -9.94054889678955
    5. '=
' → logprob: -10.44054889678955
    6. 'import' → logprob: -10.81554889678955
    7. ' ' → logprob: -11.06554889678955
    8. '.append' → logprob: -11.06554889678955
    9. ',
' → logprob: -11.81554889678955
    10. ' ,' → logprob: -11.94054889678955

Token 319: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01463516615331173
    2. 'grid' → logprob: -4.63963508605957
    3. ' ' → logprob: -6.13963508605957
    4. 'f' → logprob: -6.51463508605957
    5. ' grid' → logprob: -6.88963508605957
    6. 'm' → logprob: -9.88963508605957
    7. ' f' → logprob: -10.38963508605957
    8. 'x' → logprob: -10.76463508605957
    9. 'float' → logprob: -10.88963508605957
    10. 'abs' → logprob: -10.88963508605957

Token 320: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00413812231272459
    2. 'f' → logprob: -6.004137992858887
    3. 'grid' → logprob: -6.629137992858887
    4. 'm' → logprob: -8.379137992858887
    5. '1' → logprob: -10.254137992858887
    6. ' ' → logprob: -10.754137992858887
    7. '(' → logprob: -10.879137992858887
    8. '-' → logprob: -12.254137992858887
    9. ' grid' → logprob: -12.254137992858887
    10. 'x' → logprob: -12.504137992858887

Token 321: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02888098545372486
    2. ',' → logprob: -4.028881072998047
    3. '       ' → logprob: -5.278881072998047
    4. ',
' → logprob: -6.778881072998047
    5. 'import' → logprob: -6.903881072998047
    6. '
' → logprob: -7.153881072998047
    7. '    
' → logprob: -8.028881072998047
    8. ' ,' → logprob: -8.028881072998047
    9. '(heap' → logprob: -8.278881072998047
    10. '	' → logprob: -8.528881072998047

Token 322: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02909800596535206
    2. '       ' → logprob: -3.9040980339050293
    3. ',' → logprob: -5.529098033905029
    4. '
' → logprob: -6.529098033905029
    5. ',
' → logprob: -7.654098033905029
    6. '    
' → logprob: -7.904098033905029
    7. 'heap' → logprob: -8.154097557067871
    8. ' heap' → logprob: -8.404097557067871
    9. '<|end|>' → logprob: -8.404097557067871
    10. 'import' → logprob: -8.404097557067871

Token 323: ' #' (ID: 1069)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.22745627164840698
    2. ' heap' → logprob: -2.2274563312530518
    3. '   ' → logprob: -2.9774563312530518
    4. 'import' → logprob: -3.2274563312530518
    5. 'for' → logprob: -6.352456092834473
    6. 'if' → logprob: -6.852456092834473
    7. ' for' → logprob: -6.852456092834473
    8. ' if' → logprob: -7.602456092834473
    9. ' import' → logprob: -8.477456092834473
    10. 'he' → logprob: -8.852456092834473

Token 324: ' if' (ID: 538)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.030917970463633537
    2. 'import' → logprob: -3.9059178829193115
    3. ' heap' → logprob: -4.780918121337891
    4. 'if' → logprob: -6.655918121337891
    5. '   ' → logprob: -7.655918121337891
    6. 'for' → logprob: -9.40591812133789
    7. ' if' → logprob: -9.78091812133789
    8. ' import' → logprob: -11.28091812133789
    9. 'he' → logprob: -11.53091812133789
    10. ' for' → logprob: -12.28091812133789

Token 325: ' start' (ID: 1604)
  Prédit: ' grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' grid' → logprob: -0.12428323924541473
    2. 'grid' → logprob: -2.2492833137512207
    3. ' (' → logprob: -5.499283313751221
    4. '(' → logprob: -5.749283313751221
    5. '(grid' → logprob: -5.999283313751221
    6. '(x' → logprob: -7.124283313751221
    7. ' oxy' → logprob: -8.749282836914062
    8. ' ' → logprob: -8.874282836914062
    9. ' W' → logprob: -9.749282836914062
    10. 'oxy' → logprob: -9.874282836914062

Token 326: ' cell' (ID: 4206)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.24614371359348297
    2. '_mask' → logprob: -1.6211436986923218
    3. ' _' → logprob: -5.121143817901611
    4. '_x' → logprob: -5.621143817901611
    5. '_cells' → logprob: -6.371143817901611
    6. '_positions' → logprob: -6.621143817901611
    7. '(x' → logprob: -6.746143817901611
    8. '_o' → logprob: -7.246143817901611
    9. '```' → logprob: -7.371143817901611
    10. ')' → logprob: -7.621143817901611

Token 327: ' is' (ID: 382)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.310951828956604
    2. ' ==' → logprob: -1.935951828956604
    3. '==' → logprob: -3.4359517097473145
    4. 'in' → logprob: -3.5609517097473145
    5. '[' → logprob: -3.9359517097473145
    6. ')' → logprob: -4.3109517097473145
    7. ' ' → logprob: -4.5609517097473145
    8. ',' → logprob: -5.8109517097473145
    9. '==(' → logprob: -6.3109517097473145
    10. ' is' → logprob: -6.6859517097473145

Token 328: ' oxygen' (ID: 34398)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.651767373085022
    2. ' (' → logprob: -1.276767373085022
    3. ' in' → logprob: -1.901767373085022
    4. '(x' → logprob: -3.6517672538757324
    5. '0' → logprob: -5.276767253875732
    6. ' oxy' → logprob: -5.651767253875732
    7. ' ' → logprob: -5.901767253875732
    8. ' grid' → logprob: -6.151767253875732
    9. 'oxy' → logprob: -6.276767253875732
    10. ' not' → logprob: -6.276767253875732

Token 329: ' cell' (ID: 4206)
  Prédit: '_cells'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_cells' → logprob: -0.35228171944618225
    2. ' and' → logprob: -2.3522818088531494
    3. '   ' → logprob: -3.1022818088531494
    4. ' if' → logprob: -3.6022818088531494
    5. '_mask' → logprob: -3.7272818088531494
    6. ' ' → logprob: -3.8522818088531494
    7. ',' → logprob: -4.60228157043457
    8. 'if' → logprob: -4.60228157043457
    9. ' in' → logprob: -4.85228157043457
    10. ')' → logprob: -5.35228157043457

Token 330: ',' (ID: 11)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.0734071359038353
    2. ',' → logprob: -3.1984071731567383
    3. 'and' → logprob: -4.573407173156738
    4. ':' → logprob: -4.698407173156738
    5. '           ' → logprob: -5.323407173156738
    6. '   ' → logprob: -6.198407173156738
    7. ':
' → logprob: -6.698407173156738
    8. ' if' → logprob: -7.823407173156738
    9. ' ,' → logprob: -7.948407173156738
    10. '       ' → logprob: -8.073407173156738

Token 331: ' must' (ID: 2804)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.039671022444963455
    2. 'if' → logprob: -3.289670944213867
    3. '           ' → logprob: -7.039670944213867
    4. '       ' → logprob: -7.914670944213867
    5. '   ' → logprob: -8.289670944213867
    6. '    ' → logprob: -10.664670944213867
    7. ' idx' → logprob: -11.164670944213867
    8. ' continue' → logprob: -11.414670944213867
    9. '        ' → logprob: -11.664670944213867
    10. ' ' → logprob: -11.789670944213867

Token 332: ' consume' (ID: 34881)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.758331835269928
    2. ' continue' → logprob: -1.7583317756652832
    3. ' if' → logprob: -2.258331775665283
    4. 'continue' → logprob: -2.758331775665283
    5. ' use' → logprob: -3.008331775665283
    6. ' consume' → logprob: -3.883331775665283
    7. '   ' → logprob: -4.008331775665283
    8. ' start' → logprob: -4.633331775665283
    9. 'mask' → logprob: -4.633331775665283
    10. 'consume' → logprob: -4.758331775665283

Token 333: ' oxygen' (ID: 34398)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6151890754699707
    2. ' _' → logprob: -2.2401890754699707
    3. 'if' → logprob: -2.2401890754699707
    4. '_' → logprob: -2.7401890754699707
    5. ' ' → logprob: -3.3651890754699707
    6. ' (' → logprob: -4.115189075469971
    7. ',' → logprob: -4.490189075469971
    8. '_mask' → logprob: -4.615189075469971
    9. ' start' → logprob: -4.740189075469971
    10. ' oxy' → logprob: -4.740189075469971

Token 334: ' here' (ID: 2105)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.44572702050209045
    2. 'if' → logprob: -2.0707271099090576
    3. '       ' → logprob: -2.0707271099090576
    4. ',' → logprob: -3.4457271099090576
    5. '   ' → logprob: -4.0707268714904785
    6. '
' → logprob: -4.3207268714904785
    7. '           ' → logprob: -5.0707268714904785
    8. ',
' → logprob: -5.1957268714904785
    9. '_cells' → logprob: -5.1957268714904785
    10. '<|end|>' → logprob: -5.6957268714904785

Token 335: ' once' (ID: 4730)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5825512409210205
    2. '   ' → logprob: -2.0825512409210205
    3. 'if' → logprob: -2.4575512409210205
    4. '       ' → logprob: -2.5825512409210205
    5. '
' → logprob: -2.9575512409210205
    6. ',' → logprob: -3.2075512409210205
    7. '<|end|>' → logprob: -4.457551002502441
    8. ' 
' → logprob: -4.707551002502441
    9. ',
' → logprob: -4.707551002502441
    10. '    
' → logprob: -4.707551002502441

Token 336: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10746430605649948
    2. ' if' → logprob: -3.10746431350708
    3. ',' → logprob: -3.98246431350708
    4. '   ' → logprob: -4.23246431350708
    5. 'if' → logprob: -5.10746431350708
    6. '<|end|>' → logprob: -5.48246431350708
    7. '           ' → logprob: -5.73246431350708
    8. ',
' → logprob: -6.10746431350708
    9. '        
' → logprob: -6.10746431350708
    10. '
' → logprob: -6.73246431350708

Token 337: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.49297550320625305
    2. ' if' → logprob: -1.4929754734039307
    3. '       ' → logprob: -2.7429754734039307
    4. 'if' → logprob: -3.3679754734039307
    5. ',' → logprob: -4.36797571182251
    6. '    
' → logprob: -4.61797571182251
    7. ' 
' → logprob: -4.86797571182251
    8. '
' → logprob: -4.86797571182251
    9. '           ' → logprob: -5.11797571182251
    10. '<|end|>' → logprob: -5.86797571182251

Token 338: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5334168076515198
    2. '       ' → logprob: -1.533416748046875
    3. '   ' → logprob: -2.283416748046875
    4. 'if' (adapté à ' if') → logprob: -2.408416748046875
    5. '           ' → logprob: -6.408416748046875
    6. '<|end|>' → logprob: -7.033416748046875
    7. '    ' → logprob: -7.408416748046875
    8. ' ' → logprob: -7.783416748046875
    9. ' 
' → logprob: -7.908416748046875
    10. '	if' → logprob: -7.908416748046875

Token 339: ' grid' (ID: 10586)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grid' → logprob: -0.29979100823402405
    2. '(x' → logprob: -2.049791097640991
    3. ' grid' → logprob: -3.049791097640991
    4. '(' → logprob: -3.299791097640991
    5. '(grid' → logprob: -3.424791097640991
    6. ' (' → logprob: -4.424790859222412
    7. '(y' → logprob: -6.674790859222412
    8. '(o' → logprob: -9.42479133605957
    9. '(w' → logprob: -10.92479133605957
    10. '   ' → logprob: -10.92479133605957

Token 340: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00021188464597798884
    2. '[y' → logprob: -8.750211715698242
    3. ' [' → logprob: -10.750211715698242
    4. '][' → logprob: -11.500211715698242
    5. '   ' → logprob: -11.750211715698242
    6. '0' → logprob: -12.000211715698242
    7. 'y' → logprob: -13.250211715698242
    8. '```' → logprob: -13.625211715698242
    9. ']' → logprob: -14.375211715698242
    10. ')' → logprob: -14.500211715698242

Token 341: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00012928384239785373
    2. ' ' → logprob: -9.125129699707031
    3. '   ' → logprob: -11.000129699707031
    4. '[' → logprob: -13.125129699707031
    5. '  ' → logprob: -14.750129699707031
    6. '    ' → logprob: -15.500129699707031
    7. '
' → logprob: -15.500129699707031
    8. '```' → logprob: -15.500129699707031
    9. '`' → logprob: -16.18762969970703
    10. ')' → logprob: -16.43762969970703

Token 342: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.22568051517009735
    2. '[' → logprob: -1.6006804704666138
    3. ']' → logprob: -9.100680351257324
    4. ' ][' → logprob: -9.475680351257324
    5. '[x' → logprob: -11.350680351257324
    6. '   ' → logprob: -11.725680351257324
    7. ')[' → logprob: -11.850680351257324
    8. '[y' → logprob: -11.850680351257324
    9. '0' → logprob: -11.975680351257324
    10. ' [' → logprob: -12.225680351257324

Token 343: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.04714827984571457
    2. '0' → logprob: -3.4221482276916504
    3. '][' → logprob: -4.42214822769165
    4. ']' → logprob: -7.29714822769165
    5. '
' → logprob: -8.422148704528809
    6. '[x' → logprob: -9.172148704528809
    7. 'y' → logprob: -9.547148704528809
    8. ' x' → logprob: -9.922148704528809
    9. '[' → logprob: -10.172148704528809
    10. '(x' → logprob: -10.547148704528809

Token 344: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.01698284223675728
    2. ']>' → logprob: -4.1419830322265625
    3. '>' → logprob: -7.1419830322265625
    4. ' ]' → logprob: -9.391983032226562
    5. ' >' → logprob: -10.391983032226562
    6. '[' → logprob: -11.141983032226562
    7. ')' → logprob: -11.516983032226562
    8. '   ' → logprob: -12.641983032226562
    9. ')>' → logprob: -12.891983032226562
    10. '][' → logprob: -12.891983032226562

Token 345: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.20169496536254883
    2. ' >' → logprob: -1.7016949653625488
    3. ' ' → logprob: -9.45169448852539
    4. '[' → logprob: -9.95169448852539
    5. ')' → logprob: -10.07669448852539
    6. '">' → logprob: -10.57669448852539
    7. '   ' → logprob: -10.82669448852539
    8. ')>' → logprob: -10.95169448852539
    9. ']' → logprob: -11.70169448852539
    10. ']>' → logprob: -12.57669448852539

Token 346: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.000629279064014554
    2. ' ' → logprob: -7.375629425048828
    3. '>' → logprob: -13.500629425048828
    4. '<|end|>' → logprob: -14.375629425048828
    5. '=' → logprob: -15.500629425048828
    6. '   ' → logprob: -16.250629425048828
    7. '1' → logprob: -16.375629425048828
    8. '
' → logprob: -16.500629425048828
    9. '```' → logprob: -16.750629425048828
    10. '[' → logprob: -17.375629425048828

Token 347: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001801801408873871
    2. ' ' → logprob: -8.6251802444458
    3. '>' → logprob: -16.000179290771484
    4. '1' → logprob: -16.375179290771484
    5. '   ' → logprob: -16.500179290771484
    6. '=' → logprob: -17.000179290771484
    7. '<|end|>' → logprob: -17.125179290771484
    8. '
' → logprob: -17.375179290771484
    9. '  ' → logprob: -17.625179290771484
    10. '```' → logprob: -17.687679290771484

Token 348: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3467215895652771
    2. ':
' → logprob: -1.3467216491699219
    3. ' and' → logprob: -3.471721649169922
    4. '           ' → logprob: -6.846721649169922
    5. '       ' → logprob: -7.846721649169922
    6. ',' → logprob: -8.971721649169922
    7. 'and' → logprob: -9.346721649169922
    8. '   ' → logprob: -9.971721649169922
    9. '):
' → logprob: -10.096721649169922
    10. ':
' → logprob: -11.096721649169922

Token 349: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02710476703941822
    2. '
' → logprob: -4.77710485458374
    3. '       ' → logprob: -5.27710485458374
    4. ':
' → logprob: -5.40210485458374
    5. ',' → logprob: -6.15210485458374
    6. ' and' → logprob: -6.52710485458374
    7. '               ' → logprob: -6.77710485458374
    8. ':' → logprob: -7.90210485458374
    9. '            
' → logprob: -7.90210485458374
    10. '	       ' → logprob: -7.90210485458374

Token 350: ' idx' (ID: 14016)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.20552736520767212
    2. ' start' → logprob: -1.7055273056030273
    3. '           ' → logprob: -6.330527305603027
    4. '   ' → logprob: -7.080527305603027
    5. 'import' → logprob: -8.080527305603027
    6. 'if' → logprob: -8.705527305603027
    7. 'cost' → logprob: -8.705527305603027
    8. '
' → logprob: -9.205527305603027
    9. '       ' → logprob: -9.330527305603027
    10. 'mask' → logprob: -9.330527305603027

Token 351: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.252361536026001
    2. ' =' → logprob: -1.502361536026001
    3. '=(' → logprob: -8.502361297607422
    4. '=
' → logprob: -9.377361297607422
    5. ' =(' → logprob: -10.252361297607422
    6. ')' → logprob: -10.377361297607422
    7. '(' → logprob: -10.877361297607422
    8. '[' → logprob: -11.377361297607422
    9. ' =
' → logprob: -11.502361297607422
    10. ',' → logprob: -11.877361297607422

Token 352: ' oxy' (ID: 154299)
  Prédit: 'oxy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oxy' → logprob: -0.0004436587623786181
    2. ' oxy' → logprob: -7.875443458557129
    3. 'ox' → logprob: -9.750443458557129
    4. '0' → logprob: -13.000443458557129
    5. 'oxo' → logprob: -14.000443458557129
    6. 'oxi' → logprob: -14.250443458557129
    7. 'oxygen' → logprob: -14.500443458557129
    8. 'oly' → logprob: -15.375443458557129
    9. 'oxic' → logprob: -16.000444412231445
    10. 'oxide' → logprob: -16.250444412231445

Token 353: '_id' (ID: 1537)
  Prédit: '_id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -5.438573680294212e-06
    2. 'id' → logprob: -12.875005722045898
    3. '_i' → logprob: -14.375005722045898
    4. 'd' → logprob: -14.625005722045898
    5. ' _' → logprob: -14.750005722045898
    6. '_cell' → logprob: -15.000005722045898
    7. 'cell' → logprob: -15.375005722045898
    8. '_' → logprob: -15.500005722045898
    9. '_cells' → logprob: -16.1250057220459
    10. '   ' → logprob: -16.2500057220459

Token 354: '[(' (ID: 20542)
  Prédit: '[('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.03548629581928253
    2. '(' → logprob: -3.5354862213134766
    3. '(grid' → logprob: -5.785486221313477
    4. '((' → logprob: -6.035486221313477
    5. '.get' → logprob: -8.785486221313477
    6. '(x' → logprob: -9.535486221313477
    7. '[' → logprob: -11.910486221313477
    8. ',' → logprob: -12.035486221313477
    9. ' (' → logprob: -12.535486221313477
    10. '   ' → logprob: -12.535486221313477

Token 355: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.38714832067489624
    2. '0' → logprob: -1.137148380279541
    3. '(' → logprob: -8.887147903442383
    4. '(x' → logprob: -9.012147903442383
    5. ' x' → logprob: -11.262147903442383
    6. ' ' → logprob: -13.512147903442383
    7. '
' → logprob: -14.262147903442383
    8. '(
' → logprob: -14.512147903442383
    9. ' (' → logprob: -14.762147903442383
    10. ')x' → logprob: -15.137147903442383

Token 356: ',' (ID: 11)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.054939381778240204
    2. ',' → logprob: -2.9299392700195312
    3. ',x' → logprob: -11.054939270019531
    4. ' ,' → logprob: -11.179939270019531
    5. ' ' → logprob: -11.304939270019531
    6. ',
' → logprob: -12.304939270019531
    7. '
' → logprob: -12.929939270019531
    8. '[' → logprob: -13.054939270019531
    9. 'x' → logprob: -13.179939270019531
    10. '```' → logprob: -13.929939270019531

Token 357: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.5776860184123507e-06
    2. ' ' → logprob: -13.12500286102295
    3. 'x' → logprob: -14.75000286102295
    4. '
' → logprob: -17.375001907348633
    5. '   ' → logprob: -18.375001907348633
    6. '    
' → logprob: -19.375001907348633
    7. '    ' → logprob: -20.000001907348633
    8. '```' → logprob: -20.000001907348633
    9. '  ' → logprob: -20.625001907348633
    10. ',' → logprob: -20.750001907348633

Token 358: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0007680560229346156
    2. ')]
' → logprob: -7.250768184661865
    3. ' )' → logprob: -10.375767707824707
    4. ')' → logprob: -11.250767707824707
    5. ']' → logprob: -11.875767707824707
    6. ')][' → logprob: -13.125767707824707
    7. ')]

' → logprob: -13.750767707824707
    8. ')])' → logprob: -14.125767707824707
    9. ')]
' → logprob: -14.375767707824707
    10. ')
' → logprob: -14.625767707824707

Token 359: '           ' (ID: 352)
  Prédit: ' start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' start' → logprob: -0.7717941999435425
    2. '           ' → logprob: -1.1467941999435425
    3. 'start' → logprob: -1.6467941999435425
    4. '
' → logprob: -5.146794319152832
    5. '               ' → logprob: -5.646794319152832
    6. '```' → logprob: -5.646794319152832
    7. '[start' → logprob: -6.021794319152832
    8. ')' → logprob: -6.146794319152832
    9. '            
' → logprob: -6.271794319152832
    10. ',start' → logprob: -6.396794319152832

Token 360: ' #' (ID: 1069)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.05553927272558212
    2. ' start' → logprob: -2.93053936958313
    3. '   ' → logprob: -8.68053913116455
    4. '           ' → logprob: -8.80553913116455
    5. 'if' → logprob: -8.93053913116455
    6. '
' → logprob: -10.05553913116455
    7. 'import' → logprob: -10.68053913116455
    8. ' if' → logprob: -10.68053913116455
    9. 'cost' → logprob: -10.68053913116455
    10. 'heap' → logprob: -10.80553913116455

Token 361: ' must' (ID: 2804)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.04061683639883995
    2. 'if' → logprob: -3.540616750717163
    3. ' start' → logprob: -4.915616989135742
    4. 'cost' → logprob: -6.415616989135742
    5. ' if' → logprob: -7.540616989135742
    6. 'import' → logprob: -7.915616989135742
    7. 'o' → logprob: -8.040616989135742
    8. '   ' → logprob: -8.665616989135742
    9. 'mask' → logprob: -9.290616989135742
    10. 'heap' → logprob: -9.415616989135742

Token 362: ' consume' (ID: 34881)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.3668394982814789
    2. 'consume' → logprob: -1.3668395280838013
    3. 'cost' → logprob: -4.366839408874512
    4. ' consume' → logprob: -4.491839408874512
    5. ' start' → logprob: -4.866839408874512
    6. 'if' → logprob: -4.991839408874512
    7. '=' → logprob: -5.991839408874512
    8. 'mask' → logprob: -6.241839408874512
    9. 'dist' → logprob: -6.366839408874512
    10. 'o' → logprob: -6.491839408874512

Token 363: ' oxygen' (ID: 34398)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.48261794447898865
    2. 'start' → logprob: -1.857617974281311
    3. 'oxygen' → logprob: -2.4826178550720215
    4. 'o' → logprob: -3.1076178550720215
    5. ' start' → logprob: -3.6076178550720215
    6. ' ' → logprob: -4.1076178550720215
    7. 'if' → logprob: -4.4826178550720215
    8. ' o' → logprob: -4.8576178550720215
    9. ' oxygen' → logprob: -5.1076178550720215
    10. '```' → logprob: -5.2326178550720215

Token 364: ' from' (ID: 591)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.3728289604187012
    2. 'start' → logprob: -1.4978289604187012
    3. '
' → logprob: -1.8728289604187012
    4. '1' → logprob: -1.9978289604187012
    5. '=' → logprob: -2.622828960418701
    6. ' start' → logprob: -3.497828960418701
    7. '()
' → logprob: -4.622828960418701
    8. ',' → logprob: -4.622828960418701
    9. ' |=' → logprob: -4.872828960418701
    10. '           ' → logprob: -4.872828960418701

Token 365: ' cell' (ID: 4206)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.5317994356155396
    2. 'idx' → logprob: -1.4067994356155396
    3. '1' → logprob: -2.78179931640625
    4. ' start' → logprob: -3.78179931640625
    5. 'the' → logprob: -4.15679931640625
    6. 'mask' → logprob: -4.28179931640625
    7. ' idx' → logprob: -4.40679931640625
    8. 'that' → logprob: -4.90679931640625
    9. 'oxy' → logprob: -4.90679931640625
    10. 'grid' → logprob: -4.90679931640625

Token 366: '
' (ID: 198)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.6991950273513794
    2. ' start' → logprob: -1.3241950273513794
    3. '
' → logprob: -2.82419490814209
    4. '1' → logprob: -3.44919490814209
    5. '           ' → logprob: -3.57419490814209
    6. ')' → logprob: -3.94919490814209
    7. ',' → logprob: -4.07419490814209
    8. ' ' → logprob: -4.44919490814209
    9. ' =' → logprob: -4.69919490814209
    10. ' if' → logprob: -4.82419490814209

Token 367: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.9060218930244446
    2. '
' → logprob: -1.1560218334197998
    3. 'start' → logprob: -2.4060218334198
    4. ')' → logprob: -3.5310218334198
    5. ' start' → logprob: -3.5310218334198
    6. ',' → logprob: -4.031022071838379
    7. '   ' → logprob: -4.281022071838379
    8. ',
' → logprob: -4.406022071838379
    9. ')
' → logprob: -4.531022071838379
    10. '       ' → logprob: -4.656022071838379

Token 368: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' (adapté à ' start') → logprob: -0.3078213632106781
    2. 'o' → logprob: -1.8078213930130005
    3. ' start' → logprob: -3.057821273803711
    4. 'if' → logprob: -3.682821273803711
    5. 'oxygen' → logprob: -4.057821273803711
    6. ' if' → logprob: -5.432821273803711
    7. ' o' → logprob: -5.557821273803711
    8. 'oxy' → logprob: -7.307821273803711
    9. ' oxygen' → logprob: -7.557821273803711
    10. 'cost' → logprob: -8.307821273803711

Token 369: '_mask' (ID: 21732)
  Prédit: '_mask'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mask' → logprob: -0.0020431983284652233
    2. '_o' → logprob: -6.2520432472229
    3. '_' → logprob: -9.502042770385742
    4. '_cost' → logprob: -10.752042770385742
    5. 'o' → logprob: -12.252042770385742
    6. 'mask' → logprob: -12.627042770385742
    7. 'O' → logprob: -13.502042770385742
    8. '_left' → logprob: -13.502042770385742
    9. '_consum' → logprob: -13.502042770385742
    10. '_m' → logprob: -13.877042770385742

Token 370: ' |=' (ID: 19917)
  Prédit: '|'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '|' → logprob: -0.040761739015579224
    2. '=' → logprob: -3.540761709213257
    3. ' |=' → logprob: -4.540761947631836
    4. ' =' → logprob: -8.165761947631836
    5. ' ' → logprob: -14.665761947631836
    6. '|=
' → logprob: -14.790761947631836
    7. ' |' → logprob: -14.915761947631836
    8. ' ' → logprob: -15.915761947631836
    9. '│' → logprob: -16.415761947631836
    10. '+=' → logprob: -17.790761947631836

Token 371: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.100281722843647
    2. '(' → logprob: -2.3502817153930664
    3. ' (' → logprob: -9.725281715393066
    4. ' ' → logprob: -11.100281715393066
    5. '
' → logprob: -16.350282669067383
    6. '```' → logprob: -16.350282669067383
    7. '   ' → logprob: -16.725282669067383
    8. '[' → logprob: -17.350282669067383
    9. '`' → logprob: -18.600282669067383
    10. '{' → logprob: -18.600282669067383

Token 372: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1602257490158081
    2. '(' → logprob: -1.910225749015808
    3. ' (' → logprob: -13.535225868225098
    4. ' ' → logprob: -15.535225868225098
    5. '
' → logprob: -17.53522491455078
    6. '[' → logprob: -19.28522491455078
    7. '```' → logprob: -19.53522491455078
    8. '{' → logprob: -19.91022491455078
    9. '   ' → logprob: -20.28522491455078
    10. '(
' → logprob: -21.03522491455078

Token 373: ' <<' (ID: 2256)
  Prédit: '<<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.03823518753051758
    2. ' <<' → logprob: -3.2882351875305176
    3. '<' → logprob: -8.66323471069336
    4. '(' → logprob: -11.78823471069336
    5. '<<(' → logprob: -12.03823471069336
    6. '&lt' → logprob: -13.28823471069336
    7. '<<<' → logprob: -13.41323471069336
    8. '1' → logprob: -13.66323471069336
    9. '```' → logprob: -14.41323471069336
    10. '()<<' → logprob: -14.66323471069336

Token 374: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -4.842555426876061e-06
    2. ' idx' → logprob: -12.250004768371582
    3. '(idx' → logprob: -18.5000057220459
    4. '	idx' → logprob: -19.3750057220459
    5. '[idx' → logprob: -19.5000057220459
    6. 'indx' → logprob: -20.1250057220459
    7. 'ix' → logprob: -21.2500057220459
    8. '
' → logprob: -22.6250057220459
    9. '0' → logprob: -22.7500057220459
    10. '   ' → logprob: -23.0000057220459

Token 375: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.626802921295166
    2. '           ' → logprob: -1.251802921295166
    3. 'start' → logprob: -2.126802921295166
    4. '       ' → logprob: -3.501802921295166
    5. ' start' → logprob: -5.126802921295166
    6. '[start' → logprob: -5.376802921295166
    7. ' 
' → logprob: -5.501802921295166
    8. ',' → logprob: -6.376802921295166
    9. ',start' → logprob: -6.376802921295166
    10. '
' → logprob: -6.501802921295166

Token 376: '           ' (ID: 352)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.43935537338256836
    2. 'start' → logprob: -1.3143553733825684
    3. '       ' → logprob: -3.5643553733825684
    4. ' start' → logprob: -3.5643553733825684
    5. '           ' → logprob: -4.939355373382568
    6. ' 
' → logprob: -5.439355373382568
    7. '[start' → logprob: -5.564355373382568
    8. ')' → logprob: -6.189355373382568
    9. '
' → logprob: -6.189355373382568
    10. ',start' → logprob: -6.314355373382568

Token 377: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' (adapté à ' start') → logprob: -0.04348962381482124
    2. 'o' → logprob: -3.668489694595337
    3. ' start' → logprob: -4.918489456176758
    4. 'oxygen' → logprob: -5.168489456176758
    5. '           ' → logprob: -6.668489456176758
    6. '       ' → logprob: -7.043489456176758
    7. 'if' → logprob: -7.793489456176758
    8. ' o' → logprob: -8.168489456176758
    9. 'oxy' → logprob: -8.293489456176758
    10. '   ' → logprob: -9.043489456176758

Token 378: '_o' (ID: 28960)
  Prédit: '_o'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_o' → logprob: -0.0005056116497144103
    2. 'o' → logprob: -7.875505447387695
    3. '=' → logprob: -9.875505447387695
    4. ' o' → logprob: -11.125505447387695
    5. '_' → logprob: -11.250505447387695
    6. ' =' → logprob: -11.375505447387695
    7. '_mask' → logprob: -11.750505447387695
    8. 'O' → logprob: -12.125505447387695
    9. '=o' → logprob: -12.250505447387695
    10. ' _' → logprob: -12.875505447387695

Token 379: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.057303447276353836
    2. '_' → logprob: -2.9323034286499023
    3. ' _' → logprob: -6.557303428649902
    4. '₂' → logprob: -7.432303428649902
    5. ' ' → logprob: -8.182303428649902
    6. '=' → logprob: -10.682303428649902
    7. ')' → logprob: -10.932303428649902
    8. '  ' → logprob: -11.619803428649902
    9. ' =' → logprob: -11.682303428649902
    10. '```' → logprob: -11.932303428649902

Token 380: ' =' (ID: 314)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.6360061168670654
    2. ' -=' → logprob: -1.0110061168670654
    3. '=' → logprob: -2.7610061168670654
    4. ' =' → logprob: -4.1360063552856445
    5. '+=' → logprob: -4.1360063552856445
    6. '-' → logprob: -5.1360063552856445
    7. ' +=' → logprob: -5.2610063552856445
    8. ' -' → logprob: -8.261006355285645
    9. ' ' → logprob: -9.636006355285645
    10. '   ' → logprob: -10.261006355285645

Token 381: ' min' (ID: 1349)
  Prédit: 'o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'o' → logprob: -0.15156197547912598
    2. 'm' → logprob: -2.401561975479126
    3. 'max' → logprob: -4.026561737060547
    4. 'f' → logprob: -4.526561737060547
    5. 'min' → logprob: -4.651561737060547
    6. 'start' → logprob: -5.026561737060547
    7. ' o' → logprob: -6.151561737060547
    8. 'O' → logprob: -7.026561737060547
    9. 'grid' → logprob: -7.151561737060547
    10. ' max' → logprob: -8.026561737060547

Token 382: '(m' (ID: 2145)
  Prédit: '(o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(o' → logprob: -0.24180231988430023
    2. '(start' → logprob: -1.7418023347854614
    3. '(f' → logprob: -4.116802215576172
    4. 'start' → logprob: -4.116802215576172
    5. 'o' → logprob: -5.491802215576172
    6. '(' → logprob: -6.616802215576172
    7. '(m' → logprob: -7.366802215576172
    8. 'f' → logprob: -7.616802215576172
    9. ' (' → logprob: -9.491802215576172
    10. ' start' → logprob: -9.866802215576172

Token 383: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09652590751647949
    2. ' ,' → logprob: -3.0965259075164795
    3. ',start' → logprob: -3.0965259075164795
    4. '+' → logprob: -7.596526145935059
    5. ' +' → logprob: -7.971526145935059
    6. ',
' → logprob: -8.471526145935059
    7. ',f' → logprob: -9.221526145935059
    8. ')' → logprob: -9.221526145935059
    9. ',end' → logprob: -9.846526145935059
    10. ',o' → logprob: -9.971526145935059

Token 384: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.26056331396102905
    2. ' start' → logprob: -2.135563373565674
    3. 'o' → logprob: -2.260563373565674
    4. ' o' → logprob: -5.010563373565674
    5. ' ' → logprob: -10.010562896728516
    6. 'O' → logprob: -10.010562896728516
    7. '   ' → logprob: -10.260562896728516
    8. 'm' → logprob: -11.073062896728516
    9. 'max' → logprob: -11.198062896728516
    10. '	start' → logprob: -12.073062896728516

Token 385: '_o' (ID: 28960)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.138201043009758
    2. 'o' → logprob: -2.5132009983062744
    3. '+' → logprob: -4.1382012367248535
    4. '_o' → logprob: -4.7632012367248535
    5. ' )' → logprob: -4.7632012367248535
    6. ' +' → logprob: -5.5132012367248535
    7. '-' → logprob: -5.5132012367248535
    8. 'start' → logprob: -6.3882012367248535
    9. ' -' → logprob: -7.2632012367248535
    10. ')o' → logprob: -7.3882012367248535

Token 386: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00036906293826177716
    2. '_' → logprob: -8.62536907196045
    3. '₂' → logprob: -9.25036907196045
    4. 'start' → logprob: -10.37536907196045
    5. 'xygen' → logprob: -11.12536907196045
    6. '```' → logprob: -11.75036907196045
    7. 'o' → logprob: -12.12536907196045
    8. '_start' → logprob: -12.25036907196045
    9. 'x' → logprob: -12.37536907196045
    10. ' ' → logprob: -12.87536907196045

Token 387: ' +' (ID: 659)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.5729687213897705
    2. ')' → logprob: -1.1979687213897705
    3. '-' → logprob: -2.3229687213897705
    4. ' )' → logprob: -3.5729687213897705
    5. ' +' → logprob: -5.322968482971191
    6. '+' → logprob: -5.822968482971191
    7. '-)' → logprob: -8.947968482971191
    8. '<|end|>' → logprob: -9.197968482971191
    9. ')+' → logprob: -9.822968482971191
    10. ')-' → logprob: -10.572968482971191

Token 388: ' grid' (ID: 10586)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.5142955183982849
    2. 'grid' → logprob: -1.1392955780029297
    3. 'm' → logprob: -3.0142955780029297
    4. '1' → logprob: -3.6392955780029297
    5. ' grid' → logprob: -5.51429557800293
    6. ' f' → logprob: -6.63929557800293
    7. 'start' → logprob: -8.13929557800293
    8. ' ' → logprob: -8.76429557800293
    9. ' m' → logprob: -9.01429557800293
    10. 'floor' → logprob: -9.57679557800293

Token 389: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0007161272224038839
    2. '0' → logprob: -7.375716209411621
    3. '[
' → logprob: -10.750716209411621
    4. ' ' → logprob: -11.500716209411621
    5. ')' → logprob: -11.625716209411621
    6. '(' → logprob: -11.750716209411621
    7. ' [' → logprob: -11.750716209411621
    8. '][' → logprob: -12.125716209411621
    9. '[[' → logprob: -12.375716209411621
    10. '[y' → logprob: -12.375716209411621

Token 390: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.003266241867095232
    2. '[' → logprob: -5.753266334533691
    3. ' ' → logprob: -9.878266334533691
    4. '][' → logprob: -11.128266334533691
    5. ']' → logprob: -12.503266334533691
    6. '   ' → logprob: -12.753266334533691
    7. '[
' → logprob: -12.753266334533691
    8. '1' → logprob: -13.003266334533691
    9. '
' → logprob: -13.440766334533691
    10. '```' → logprob: -13.503266334533691

Token 391: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.34535568952560425
    2. '][' → logprob: -1.345355749130249
    3. '0' → logprob: -3.470355749130249
    4. ']' → logprob: -8.845355987548828
    5. '```' → logprob: -9.595355987548828
    6. '   ' → logprob: -10.595355987548828
    7. ' ' → logprob: -10.595355987548828
    8. '           ' → logprob: -10.595355987548828
    9. ')[' → logprob: -10.720355987548828
    10. ' [' → logprob: -10.970355987548828

Token 392: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.2745567560195923
    2. '(' → logprob: -1.5245567560195923
    3. '(x' → logprob: -4.024556636810303
    4. '0' → logprob: -5.899556636810303
    5. '[x' → logprob: -6.649556636810303
    6. '[' → logprob: -8.399557113647461
    7. ' (' → logprob: -9.774557113647461
    8. '[(' → logprob: -10.024557113647461
    9. '
' → logprob: -10.274557113647461
    10. '][' → logprob: -10.399557113647461

Token 393: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03770047798752785
    2. ' )' → logprob: -3.5377004146575928
    3. ' -' → logprob: -5.287700653076172
    4. '-' → logprob: -6.162700653076172
    5. '))' → logprob: -8.287700653076172
    6. ')
' → logprob: -8.537700653076172
    7. '])' → logprob: -9.412700653076172
    8. ' ' → logprob: -9.537700653076172
    9. '[' → logprob: -10.662700653076172
    10. '*' → logprob: -10.912700653076172

Token 394: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0016832745168358088
    2. '   ' → logprob: -7.501683235168457
    3. '           ' → logprob: -7.626683235168457
    4. '
' → logprob: -8.751683235168457
    5. 'import' → logprob: -9.126683235168457
    6. ' heap' → logprob: -9.376683235168457
    7. ')' → logprob: -9.626683235168457
    8. '<|end|>' → logprob: -9.876683235168457
    9. 'heap' → logprob: -10.001683235168457
    10. ',' → logprob: -10.251683235168457

Token 395: ' else' (ID: 1203)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.9642133712768555
    2. ' heap' → logprob: -1.0892133712768555
    3. '   ' → logprob: -1.5892133712768555
    4. '       ' → logprob: -3.3392133712768555
    5. ')' → logprob: -4.0892133712768555
    6. 'import' → logprob: -4.2142133712768555
    7. '           ' → logprob: -5.5892133712768555
    8. '(heap' → logprob: -5.5892133712768555
    9. 'he' → logprob: -7.7142133712768555
    10. '    ' → logprob: -7.9642133712768555

Token 396: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.46960070729255676
    2. ' continue' → logprob: -1.5946006774902344
    3. '           ' → logprob: -2.8446006774902344
    4. '   ' → logprob: -3.0946006774902344
    5. 'continue' → logprob: -4.094600677490234
    6. ' pass' → logprob: -4.344600677490234
    7. ':' → logprob: -4.594600677490234
    8. '
' → logprob: -4.969600677490234
    9. ':
' → logprob: -4.969600677490234
    10. '        
' → logprob: -5.969600677490234

Token 397: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5824170112609863
    2. ' continue' → logprob: -1.7074170112609863
    3. '   ' → logprob: -2.5824170112609863
    4. ' pass' → logprob: -2.7074170112609863
    5. 'continue' → logprob: -2.9574170112609863
    6. ' heap' → logprob: -3.8324170112609863
    7. '           ' → logprob: -3.8324170112609863
    8. 'heap' → logprob: -4.707417011260986
    9. ' h' → logprob: -5.332417011260986
    10. 'pass' → logprob: -5.832417011260986

Token 398: ' #' (ID: 1069)
  Prédit: ' pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pass' → logprob: -0.36999014019966125
    2. 'pass' → logprob: -1.3699901103973389
    3. 'start' → logprob: -3.494990110397339
    4. ' start' → logprob: -4.119990348815918
    5. 'continue' → logprob: -5.619990348815918
    6. ' continue' → logprob: -5.619990348815918
    7. '   ' → logprob: -7.494990348815918
    8. '#' (adapté à ' #') → logprob: -9.244990348815918
    9. ' None' → logprob: -9.369990348815918
    10. ' #' → logprob: -9.494990348815918

Token 399: ' soil' (ID: 22390)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pass' → logprob: -0.7213954925537109
    2. ' pass' → logprob: -0.8463954925537109
    3. 'start' → logprob: -2.971395492553711
    4. ' start' → logprob: -4.846395492553711
    5. 'continue' → logprob: -4.971395492553711
    6. '   ' → logprob: -5.096395492553711
    7. 'cost' → logprob: -5.096395492553711
    8. ' continue' → logprob: -6.721395492553711
    9. 'heap' → logprob: -6.721395492553711
    10. '#' → logprob: -6.846395492553711

Token 400: ' cell' (ID: 4206)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 401: ':' (ID: 25)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 402: ' pay' (ID: 2777)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -1.064210057258606
    2. ' start' → logprob: -1.189210057258606
    3. ' pass' → logprob: -1.314210057258606
    4. 'pass' → logprob: -2.9392099380493164
    5. 'cost' → logprob: -5.064209938049316
    6. ' cost' → logprob: -5.314209938049316
    7. ' if' → logprob: -5.564209938049316
    8. 'if' → logprob: -5.689209938049316
    9. ' continue' → logprob: -5.689209938049316
    10. 'continue' → logprob: -5.814209938049316

Token 403: ' cost' (ID: 3097)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7038949131965637
    2. '1' → logprob: -0.8288949131965637
    3. ' cost' → logprob: -4.078895092010498
    4. ' f' → logprob: -4.328895092010498
    5. '0' → logprob: -4.578895092010498
    6. ' +' → logprob: -4.953895092010498
    7. '+' → logprob: -5.078895092010498
    8. 'cost' → logprob: -5.578895092010498
    9. ' start' → logprob: -6.078895092010498
    10. 'f' → logprob: -6.328895092010498

Token 404: ' to' (ID: 316)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.11917269229888916
    2. '+=' → logprob: -2.4941725730895996
    3. '+' → logprob: -4.6191725730896
    4. ' +' → logprob: -4.7441725730896
    5. ' =' → logprob: -5.1191725730896
    6. '=' → logprob: -5.6191725730896
    7. ',' → logprob: -7.6191725730896
    8. ')' → logprob: -7.8691725730896
    9. ' ' → logprob: -8.494173049926758
    10. ' )' → logprob: -8.869173049926758

Token 405: ' dig' (ID: 3807)
  Prédit: 'move'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'move' → logprob: -0.4271429181098938
    2. 'enter' → logprob: -2.427142858505249
    3. ' move' → logprob: -2.427142858505249
    4. 'm' → logprob: -3.677142858505249
    5. 'o' → logprob: -3.677142858505249
    6. 'step' → logprob: -3.927142858505249
    7. 'pass' → logprob: -4.302143096923828
    8. 'walk' → logprob: -4.302143096923828
    9. 'b' → logprob: -4.427143096923828
    10. 'start' → logprob: -4.552143096923828

Token 406: ' it' (ID: 480)
  Prédit: ' cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' cost' → logprob: -0.5642242431640625
    2. ' +=' → logprob: -1.6892242431640625
    3. ' +' → logprob: -2.0642242431640625
    4. 'cost' → logprob: -2.8142242431640625
    5. ' =' → logprob: -3.8142242431640625
    6. '   ' → logprob: -4.0642242431640625
    7. '+=' → logprob: -5.1892242431640625
    8. '+' → logprob: -5.3142242431640625
    9. '=' → logprob: -5.9392242431640625
    10. '           ' → logprob: -6.5642242431640625

Token 407: '
' (ID: 198)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.38783711194992065
    2. ' +=' → logprob: -1.6378371715545654
    3. '+' → logprob: -2.6378371715545654
    4. '   ' → logprob: -3.6378371715545654
    5. ' cost' → logprob: -4.262836933135986
    6. '+=' → logprob: -5.137836933135986
    7. 'cost' → logprob: -6.262836933135986
    8. ' =' → logprob: -6.262836933135986
    9. ' +
' → logprob: -6.512836933135986
    10. ',' → logprob: -6.887836933135986

Token 408: '           ' (ID: 352)
  Prédit: ' cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' cost' → logprob: -0.15009203553199768
    2. 'cost' → logprob: -3.150092124938965
    3. ' +=' → logprob: -3.275092124938965
    4. ' +' → logprob: -3.525092124938965
    5. '   ' → logprob: -4.400092124938965
    6. ' =' → logprob: -5.275092124938965
    7. '+' → logprob: -5.900092124938965
    8. '+=' → logprob: -6.025092124938965
    9. '1' → logprob: -6.400092124938965
    10. ' +
' → logprob: -6.650092124938965

Token 409: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' (adapté à ' cost') → logprob: -0.18092304468154907
    2. ' cost' → logprob: -1.8059229850769043
    3. '   ' → logprob: -7.555922985076904
    4. 'start' → logprob: -8.055923461914062
    5. 'if' → logprob: -8.555923461914062
    6. ' start' → logprob: -9.680923461914062
    7. ' if' → logprob: -10.305923461914062
    8. '       ' → logprob: -11.055923461914062
    9. '           ' → logprob: -11.930923461914062
    10. '
' → logprob: -12.555923461914062

Token 410: ' =' (ID: 314)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.13014812767505646
    2. '+=' → logprob: -2.13014817237854
    3. '=' → logprob: -6.255147933959961
    4. ' =' → logprob: -6.755147933959961
    5. '+' → logprob: -9.005147933959961
    6. ' +' → logprob: -12.505147933959961
    7. '   ' → logprob: -14.005147933959961
    8. ']+=' → logprob: -14.255147933959961
    9. '+=(' → logprob: -14.630147933959961
    10. ' ' → logprob: -14.880147933959961

Token 411: ' -' (ID: 533)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'grid' → logprob: -0.3735310733318329
    2. 'f' → logprob: -1.3735311031341553
    3. ' grid' → logprob: -2.9985311031341553
    4. ' f' → logprob: -5.498530864715576
    5. '1' → logprob: -5.998530864715576
    6. 'm' → logprob: -6.623530864715576
    7. ' ' → logprob: -8.248531341552734
    8. 'soil' → logprob: -9.748531341552734
    9. '0' → logprob: -9.873531341552734
    10. '   ' → logprob: -10.123531341552734

Token 412: 'grid' (ID: 7886)
  Prédit: 'grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grid' → logprob: -0.055203042924404144
    2. '1' → logprob: -3.1802029609680176
    3. '(' → logprob: -5.555202960968018
    4. 'm' → logprob: -6.180202960968018
    5. '(grid' → logprob: -6.680202960968018
    6. 'o' → logprob: -6.930202960968018
    7. '(-' → logprob: -6.930202960968018
    8. ' grid' → logprob: -7.180202960968018
    9. 'f' → logprob: -7.305202960968018
    10. '-' → logprob: -8.805203437805176

Token 413: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00039385363925248384
    2. '0' → logprob: -8.250393867492676
    3. ' [' → logprob: -9.750393867492676
    4. '```' → logprob: -11.500393867492676
    5. ']' → logprob: -11.875393867492676
    6. '][' → logprob: -12.000393867492676
    7. ' ' → logprob: -12.000393867492676
    8. '[-' → logprob: -12.375393867492676
    9. 'x' → logprob: -12.437893867492676
    10. '1' → logprob: -13.125393867492676

Token 414: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.420598219847307e-05
    2. ' ' → logprob: -9.8750638961792
    3. '[' → logprob: -12.5000638961792
    4. '   ' → logprob: -12.7500638961792
    5. '][' → logprob: -13.5000638961792
    6. '1' → logprob: -13.6250638961792
    7. '
' → logprob: -13.7500638961792
    8. '  ' → logprob: -14.5000638961792
    9. ']' → logprob: -14.7500638961792
    10. '```' → logprob: -15.1250638961792

Token 415: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.2832023501396179
    2. '[' → logprob: -1.4082024097442627
    3. '0' → logprob: -6.408202171325684
    4. ']' → logprob: -8.033202171325684
    5. ')[' → logprob: -11.033202171325684
    6. ')' → logprob: -11.283202171325684
    7. ',' → logprob: -11.283202171325684
    8. ' ][' → logprob: -11.408202171325684
    9. ' [' → logprob: -12.533202171325684
    10. '```' → logprob: -12.783202171325684

Token 416: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.03370022401213646
    2. '0' → logprob: -3.4087002277374268
    3. '1' → logprob: -11.033699989318848
    4. ' x' → logprob: -11.158699989318848
    5. '[x' → logprob: -12.033699989318848
    6. '][' → logprob: -12.158699989318848
    7. '
' → logprob: -12.908699989318848
    8. '(x' → logprob: -13.033699989318848
    9. '   ' → logprob: -13.283699989318848
    10. ' ' → logprob: -13.533699989318848

Token 417: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3839646279811859
    2. ' )' → logprob: -1.8839646577835083
    3. ']' → logprob: -2.1339645385742188
    4. ' ]' → logprob: -4.133964538574219
    5. ' +' → logprob: -4.883964538574219
    6. ')+' → logprob: -4.883964538574219
    7. ']+' → logprob: -5.008964538574219
    8. '+' → logprob: -5.508964538574219
    9. '])' → logprob: -6.133964538574219
    10. ')]' → logprob: -6.633964538574219

Token 418: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.334465354681015
    2. '   ' → logprob: -1.8344653844833374
    3. ' heap' → logprob: -2.834465265274048
    4. 'heap' → logprob: -3.209465265274048
    5. 'import' → logprob: -4.209465503692627
    6. '           ' → logprob: -5.084465503692627
    7. ',' → logprob: -5.959465503692627
    8. '(heap' → logprob: -7.584465503692627
    9. '
' → logprob: -8.334465026855469
    10. '```' → logprob: -8.584465026855469

Token 419: ' if' (ID: 538)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.1831664890050888
    2. ' heap' → logprob: -1.93316650390625
    3. '   ' → logprob: -4.05816650390625
    4. 'import' → logprob: -5.30816650390625
    5. '       ' → logprob: -9.30816650390625
    6. ' import' → logprob: -9.68316650390625
    7. 'if' (adapté à ' if') → logprob: -9.93316650390625
    8. ' for' → logprob: -10.18316650390625
    9. '
' → logprob: -10.43316650390625
    10. 'he' → logprob: -10.55816650390625

Token 420: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.07772928476333618
    2. 'grid' → logprob: -3.8277292251586914
    3. ' cost' → logprob: -4.202729225158691
    4. 'f' → logprob: -4.327729225158691
    5. 'start' → logprob: -4.452729225158691
    6. 'm' → logprob: -5.702729225158691
    7. 'o' → logprob: -5.702729225158691
    8. 'W' → logprob: -5.952729225158691
    9. ' grid' → logprob: -6.827729225158691
    10. '0' → logprob: -7.577729225158691

Token 421: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.3646274209022522
    2. '>' → logprob: -1.3646273612976074
    3. ' >=' → logprob: -3.9896273612976074
    4. ' <' → logprob: -4.239627361297607
    5. '>=' → logprob: -5.239627361297607
    6. ' <=' → logprob: -5.364627361297607
    7. '<' → logprob: -5.864627361297607
    8. '<=' → logprob: -6.489627361297607
    9. ')' → logprob: -6.739627361297607
    10. '<|end|>' → logprob: -7.989627361297607

Token 422: ' f' (ID: 285)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.768810510635376
    2. ' ' → logprob: -1.893810510635376
    3. 'm' → logprob: -2.018810510635376
    4. ' m' → logprob: -2.268810510635376
    5. ' start' → logprob: -2.893810510635376
    6. 'start' → logprob: -3.143810510635376
    7. ' o' → logprob: -3.893810510635376
    8. 'o' → logprob: -4.143810272216797
    9. 'f' → logprob: -4.893810272216797
    10. ' f' → logprob: -5.018810272216797

Token 423: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.028234882280230522
    2. ' :' → logprob: -4.278234958648682
    3. '):' → logprob: -4.528234958648682
    4. ':
' → logprob: -6.903234958648682
    5. ' ):' → logprob: -7.528234958648682
    6. ')' → logprob: -7.778234958648682
    7. ' and' → logprob: -8.278234481811523
    8. ':return' → logprob: -8.403234481811523
    9. '<|end|>' → logprob: -8.903234481811523
    10. ' or' → logprob: -8.903234481811523

Token 424: '               ' (ID: 506)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7481420636177063
    2. ' continue' → logprob: -0.8731420636177063
    3. 'continue' → logprob: -2.9981420040130615
    4. '           ' → logprob: -3.7481420040130615
    5. ' break' → logprob: -3.8731420040130615
    6. '   ' → logprob: -5.123142242431641
    7. '<|end|>' → logprob: -5.748142242431641
    8. ')' → logprob: -6.748142242431641
    9. '               ' → logprob: -7.248142242431641
    10. '```' → logprob: -7.373142242431641

Token 425: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.23391492664813995
    2. ' continue' → logprob: -1.7339149713516235
    3. '   ' → logprob: -4.233914852142334
    4. '       ' → logprob: -4.608914852142334
    5. 'break' → logprob: -5.608914852142334
    6. ' break' → logprob: -5.858914852142334
    7. '           ' → logprob: -7.108914852142334
    8. '	continue' → logprob: -9.608915328979492
    9. '```' → logprob: -10.108915328979492
    10. ' ' → logprob: -11.108915328979492

Token 426: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03844777122139931
    2. '   ' → logprob: -3.413447856903076
    3. 'heap' → logprob: -6.663447856903076
    4. ' heap' → logprob: -7.038447856903076
    5. '           ' → logprob: -7.288447856903076
    6. 'import' → logprob: -7.288447856903076
    7. ')' → logprob: -7.413447856903076
    8. '        
' → logprob: -9.038447380065918
    9. '(heap' → logprob: -9.163447380065918
    10. ',' → logprob: -9.788447380065918

Token 427: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6206854581832886
    2. '   ' → logprob: -0.8706854581832886
    3. 'heap' → logprob: -3.995685577392578
    4. ' heap' → logprob: -4.370685577392578
    5. 'import' → logprob: -4.870685577392578
    6. ')' → logprob: -6.620685577392578
    7. '(heap' → logprob: -6.995685577392578
    8. ' for' → logprob: -7.245685577392578
    9. 'for' → logprob: -7.620685577392578
    10. '           ' → logprob: -8.120685577392578

Token 428: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7107819318771362
    2. 'heap' → logprob: -1.4607819318771362
    3. ' heap' → logprob: -1.4607819318771362
    4. ' for' → logprob: -4.210782051086426
    5. 'import' → logprob: -5.085782051086426
    6. '       ' → logprob: -5.085782051086426
    7. 'for' → logprob: -5.210782051086426
    8. ')' → logprob: -6.210782051086426
    9. ' h' → logprob: -6.335782051086426
    10. '(heap' → logprob: -6.460782051086426

Token 429: ' start' (ID: 1604)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -1.1296406984329224
    2. 'start' → logprob: -1.3796406984329224
    3. ' cost' → logprob: -1.8796406984329224
    4. ' start' → logprob: -2.504640579223633
    5. 'dist' → logprob: -3.629640579223633
    6. ' grid' → logprob: -3.879640579223633
    7. '(' → logprob: -4.129640579223633
    8. 'o' → logprob: -4.129640579223633
    9. ' (' → logprob: -4.129640579223633
    10. ' dist' → logprob: -4.379640579223633

Token 430: '_o' (ID: 28960)
  Prédit: '_mask'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mask' → logprob: -0.7017631530761719
    2. '_o' → logprob: -1.0767631530761719
    3. ',' → logprob: -3.076763153076172
    4. '_cost' → logprob: -3.326763153076172
    5. 'cost' → logprob: -4.576763153076172
    6. ' ,' → logprob: -4.576763153076172
    7. 'mask' → logprob: -4.701763153076172
    8. 'import' → logprob: -4.826763153076172
    9. '_' → logprob: -5.201763153076172
    10. 'o' → logprob: -5.514263153076172

Token 431: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0008332127472385764
    2. '_' → logprob: -7.500833034515381
    3. ' _' → logprob: -8.750833511352539
    4. '₂' → logprob: -9.375833511352539
    5. ' ' → logprob: -10.625833511352539
    6. '```' → logprob: -13.125833511352539
    7. '_
' → logprob: -13.813333511352539
    8. '۲' → logprob: -13.938333511352539
    9. '   ' → logprob: -14.188333511352539
    10. '  ' → logprob: -14.375833511352539

Token 432: ' ==' (ID: 951)
  Prédit: ' >='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.6550608277320862
    2. '>=' → logprob: -1.0300607681274414
    3. '>' → logprob: -2.7800607681274414
    4. ' >' → logprob: -3.0300607681274414
    5. ' <=' → logprob: -5.155060768127441
    6. '<=' → logprob: -5.780060768127441
    7. '==' → logprob: -6.655060768127441
    8. ' <' → logprob: -6.905060768127441
    9. ' ==' → logprob: -6.905060768127441
    10. '<' → logprob: -7.030060768127441

Token 433: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.016547704115509987
    2. ' ' → logprob: -4.141547679901123
    3. 'm' → logprob: -8.266548156738281
    4. 'o' → logprob: -8.891548156738281
    5. 'f' → logprob: -9.891548156738281
    6. ' m' → logprob: -10.641548156738281
    7. 'start' → logprob: -11.891548156738281
    8. ' f' → logprob: -12.141548156738281
    9. '```' → logprob: -12.391548156738281
    10. ' o' → logprob: -12.454048156738281

Token 434: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0015449762577190995
    2. 'o' → logprob: -7.376544952392578
    3. ' ' → logprob: -7.501544952392578
    4. 'm' → logprob: -8.501544952392578
    5. '-' → logprob: -9.626544952392578
    6. 'f' → logprob: -10.501544952392578
    7. 'None' → logprob: -11.626544952392578
    8. '<' → logprob: -12.001544952392578
    9. 'start' → logprob: -12.001544952392578
    10. 'max' → logprob: -12.189044952392578

Token 435: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.22318097949028015
    2. ':
' → logprob: -1.8481810092926025
    3. '       ' → logprob: -3.8481810092926025
    4. ' or' → logprob: -4.223180770874023
    5. '           ' → logprob: -5.348180770874023
    6. '   ' → logprob: -6.848180770874023
    7. ':
' → logprob: -8.598180770874023
    8. 'continue' → logprob: -8.598180770874023
    9. '	continue' → logprob: -9.098180770874023
    10. ' continue' → logprob: -9.098180770874023

Token 436: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10979782789945602
    2. ' continue' → logprob: -2.984797716140747
    3. '           ' → logprob: -3.859797716140747
    4. 'continue' → logprob: -3.984797716140747
    5. '   ' → logprob: -4.359797954559326
    6. ' heap' → logprob: -8.109797477722168
    7. 'heap' → logprob: -8.234797477722168
    8. '	continue' → logprob: -8.359797477722168
    9. 'import' → logprob: -10.484797477722168
    10. '```' → logprob: -10.734797477722168

Token 437: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.42026835680007935
    2. '       ' → logprob: -1.2952682971954346
    3. ' continue' → logprob: -2.9202682971954346
    4. '   ' → logprob: -4.295268535614014
    5. '           ' → logprob: -6.545268535614014
    6. '	continue' → logprob: -8.170268058776855
    7. ' ' → logprob: -11.420268058776855
    8. '               ' → logprob: -12.170268058776855
    9. '```' → logprob: -12.545268058776855
    10. '  ' → logprob: -12.670268058776855

Token 438: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13767816126346588
    2. '       ' → logprob: -3.3876781463623047
    3. ' h' → logprob: -3.3876781463623047
    4. '<|end|>' → logprob: -4.012678146362305
    5. ')' → logprob: -4.262678146362305
    6. 'import' → logprob: -5.012678146362305
    7. ',' → logprob: -5.262678146362305
    8. ' heap' → logprob: -5.512678146362305
    9. 'heap' → logprob: -6.512678146362305
    10. '
' → logprob: -6.887678146362305

Token 439: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2276047021150589
    2. 'heap' → logprob: -2.602604627609253
    3. ' h' → logprob: -3.227604627609253
    4. ' heap' → logprob: -3.477604627609253
    5. 'import' → logprob: -4.352604866027832
    6. ')' → logprob: -4.602604866027832
    7. 'he' → logprob: -5.102604866027832
    8. '(heap' → logprob: -5.227604866027832
    9. '<|end|>' → logprob: -5.602604866027832
    10. ' ' → logprob: -5.977604866027832

Token 440: ' key' (ID: 2140)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.39777272939682007
    2. ' heap' → logprob: -1.6477727890014648
    3. '   ' → logprob: -2.147772789001465
    4. 'import' → logprob: -4.147772789001465
    5. ' for' → logprob: -6.897772789001465
    6. 'for' → logprob: -7.022772789001465
    7. ' import' → logprob: -8.147772789001465
    8. '(heap' → logprob: -8.147772789001465
    9. 'he' → logprob: -8.772772789001465
    10. ' h' → logprob: -9.397772789001465

Token 441: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2014526128768921
    2. ' =' → logprob: -1.701452612876892
    3. '=
' → logprob: -11.326452255249023
    4. '=(' → logprob: -11.701452255249023
    5. ',' → logprob: -11.826452255249023
    6. '(' → logprob: -12.201452255249023
    7. ' =(' → logprob: -12.826452255249023
    8. ')' → logprob: -13.201452255249023
    9. ' =
' → logprob: -14.076452255249023
    10. ' (' → logprob: -14.951452255249023

Token 442: ' (' (ID: 350)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.020581595599651337
    2. '(' → logprob: -4.0205817222595215
    3. ' (' → logprob: -6.0205817222595215
    4. '   ' → logprob: -15.270581245422363
    5. '((' → logprob: -16.02058219909668
    6. 'x' → logprob: -16.77058219909668
    7. '    
' → logprob: -17.77058219909668
    8. '[x' → logprob: -17.89558219909668
    9. '(xs' → logprob: -18.02058219909668
    10. '(None' → logprob: -18.27058219909668

Token 443: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -5.200166469876422e-06
    2. ' x' → logprob: -12.250004768371582
    3. '(x' → logprob: -15.125004768371582
    4. '0' → logprob: -16.8750057220459
    5. ')x' → logprob: -17.1250057220459
    6. '   ' → logprob: -17.3750057220459
    7. '{x' → logprob: -19.0000057220459
    8. '
' → logprob: -19.5000057220459
    9. '	x' → logprob: -19.5000057220459
    10. '"x' → logprob: -19.7500057220459

Token 444: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006359508261084557
    2. ' ,' → logprob: -7.500636100769043
    3. ',
' → logprob: -10.250636100769043
    4. '<|end|>' → logprob: -10.750636100769043
    5. '0' → logprob: -11.500636100769043
    6. ')' → logprob: -12.375636100769043
    7. '```' → logprob: -13.250636100769043
    8. ' ' → logprob: -13.500636100769043
    9. '
' → logprob: -13.500636100769043
    10. '[' → logprob: -13.875636100769043

Token 445: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.5213274309644476e-05
    2. ' ' → logprob: -11.125015258789062
    3. '
' → logprob: -16.812515258789062
    4. ')' → logprob: -16.812515258789062
    5. '1' → logprob: -17.250015258789062
    6. ',' → logprob: -17.500015258789062
    7. '   ' → logprob: -17.687515258789062
    8. '```' → logprob: -18.000015258789062
    9. ' 
' → logprob: -18.500015258789062
    10. '[' → logprob: -18.500015258789062

Token 446: ',start' (ID: 121128)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.16079898178577423
    2. ',start' → logprob: -1.9107990264892578
    3. ' ,' → logprob: -7.535799026489258
    4. ',
' → logprob: -12.035799026489258
    5. ',x' → logprob: -12.410799026489258
    6. 'start' → logprob: -12.410799026489258
    7. ',current' → logprob: -12.535799026489258
    8. ',end' → logprob: -12.785799026489258
    9. ',state' → logprob: -13.035799026489258
    10. ',int' → logprob: -13.035799026489258

Token 447: '_o' (ID: 28960)
  Prédit: '_o'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_o' → logprob: -2.696889623621246e-06
    2. 'o' → logprob: -12.87500286102295
    3. '_' → logprob: -17.875001907348633
    4. '   ' → logprob: -19.000001907348633
    5. '	o' → logprob: -19.000001907348633
    6. ' o' → logprob: -19.625001907348633
    7. '```' → logprob: -20.375001907348633
    8. '{o' → logprob: -20.625001907348633
    9. ' _' → logprob: -20.750001907348633
    10. '_oc' → logprob: -21.000001907348633

Token 448: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.037835580878891e-05
    2. '₂' → logprob: -10.12505054473877
    3. '_' → logprob: -12.12505054473877
    4. '```' → logprob: -13.25005054473877
    5. '۲' → logprob: -14.12505054473877
    6. 'x' → logprob: -15.18755054473877
    7. ' ' → logprob: -15.43755054473877
    8. '
' → logprob: -15.43755054473877
    9. 'o' → logprob: -15.56255054473877
    10. 'xygen' → logprob: -15.87505054473877

Token 449: ',start' (ID: 121128)
  Prédit: ',start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',start' → logprob: -0.07020250707864761
    2. ',' → logprob: -2.695202589035034
    3. ' ,' → logprob: -9.195202827453613
    4. ',
' → logprob: -9.445202827453613
    5. ',end' → logprob: -11.070202827453613
    6. ',int' → logprob: -11.570202827453613
    7. ',state' → logprob: -11.820202827453613
    8. ',c' → logprob: -11.945202827453613
    9. ',)' → logprob: -12.070202827453613
    10. 'start' → logprob: -12.070202827453613

Token 450: '_mask' (ID: 21732)
  Prédit: '_mask'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mask' → logprob: -4.008129963040119e-06
    2. 'mask' → logprob: -12.625003814697266
    3. '_m' → logprob: -14.500003814697266
    4. '_' → logprob: -15.750003814697266
    5. ' mask' → logprob: -17.625003814697266
    6. '_ma' → logprob: -17.875003814697266
    7. '_masks' → logprob: -18.000003814697266
    8. '_MASK' → logprob: -18.125003814697266
    9. '_mass' → logprob: -18.125003814697266
    10. '	mask' → logprob: -18.875003814697266

Token 451: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.18050724267959595
    2. ')
' → logprob: -1.8055071830749512
    3. ',' → logprob: -7.555507183074951
    4. ')
' → logprob: -9.30550765991211
    5. ' )' → logprob: -9.68050765991211
    6. ' )
' → logprob: -10.30550765991211
    7. ',)' → logprob: -11.05550765991211
    8. ')

' → logprob: -11.43050765991211
    9. ',
' → logprob: -11.80550765991211
    10. ',)
' → logprob: -12.18050765991211

Token 452: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.41032809019088745
    2. 'heap' → logprob: -1.4103281497955322
    3. ' heap' → logprob: -3.2853281497955322
    4. ')' → logprob: -3.7853281497955322
    5. 'he' → logprob: -4.660327911376953
    6. ',' → logprob: -4.910327911376953
    7. '(heap' → logprob: -5.785327911376953
    8. '```' → logprob: -6.035327911376953
    9. '<|end|>' → logprob: -6.160327911376953
    10. ' he' → logprob: -6.285327911376953

Token 453: ' dist' (ID: 3601)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.059920478612184525
    2. ' heap' → logprob: -3.0599205493927
    3. '   ' → logprob: -4.684920310974121
    4. 'import' → logprob: -6.309920310974121
    5. 'dist' (adapté à ' dist') → logprob: -9.684920310974121
    6. '
' → logprob: -9.809920310974121
    7. 'he' → logprob: -10.684920310974121
    8. '```' → logprob: -11.059920310974121
    9. '(heap' → logprob: -11.309920310974121
    10. 'if' → logprob: -11.309920310974121

Token 454: '[key' (ID: 16401)
  Prédit: '[key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[key' → logprob: -1.0206720617134124e-05
    2. '[' → logprob: -11.62501049041748
    3. '[(' → logprob: -14.37501049041748
    4. '```' → logprob: -15.50001049041748
    5. ' [' → logprob: -16.375009536743164
    6. '\[' → logprob: -16.500009536743164
    7. 'key' → logprob: -16.625009536743164
    8. ',key' → logprob: -16.625009536743164
    9. '[
' → logprob: -16.750009536743164
    10. '.setdefault' → logprob: -17.375009536743164

Token 455: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6631949543952942
    2. ']' → logprob: -1.5381948947906494
    3. ']=' → logprob: -2.1631948947906494
    4. ')' → logprob: -2.4131948947906494
    5. ' =' → logprob: -3.1631948947906494
    6. ')=' → logprob: -3.7881948947906494
    7. ' )' → logprob: -8.41319465637207
    8. ',' → logprob: -8.91319465637207
    9. ' ]' → logprob: -9.16319465637207
    10. '=
' → logprob: -10.16319465637207

Token 456: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.043002739548683167
    2. ' =' → logprob: -3.1680028438568115
    3. '=
' → logprob: -14.04300308227539
    4. ']=' → logprob: -14.29300308227539
    5. ')=' → logprob: -14.91800308227539
    6. ']' → logprob: -15.29300308227539
    7. ')' → logprob: -15.41800308227539
    8. '=f' → logprob: -15.66800308227539
    9. '=float' → logprob: -15.91800308227539
    10. '=int' → logprob: -16.29300308227539

Token 457: ' cost' (ID: 3097)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.10033336281776428
    2. 'cost' → logprob: -2.3503334522247314
    3. ' ' → logprob: -9.600333213806152
    4. ' cost' → logprob: -9.850333213806152
    5. '(cost' → logprob: -13.225333213806152
    6. '(' → logprob: -14.225333213806152
    7. '   ' → logprob: -14.225333213806152
    8. 'c' → logprob: -14.475333213806152
    9. '-' → logprob: -15.225333213806152
    10. 'Cost' → logprob: -15.287833213806152

Token 458: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11326766014099121
    2. 'heap' → logprob: -2.613267660140991
    3. 'import' → logprob: -3.738267660140991
    4. '       ' → logprob: -5.23826789855957
    5. ' heap' → logprob: -6.23826789855957
    6. '<|end|>' → logprob: -6.61326789855957
    7. ',' → logprob: -7.86326789855957
    8. '```' → logprob: -7.98826789855957
    9. '(heap' → logprob: -8.86326789855957
    10. '
' → logprob: -9.48826789855957

Token 459: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0884208679199219
    2. 'heap' → logprob: -1.2134208679199219
    3. ',' → logprob: -2.213420867919922
    4. '<|end|>' → logprob: -2.338420867919922
    5. ')' → logprob: -2.588420867919922
    6. 'import' → logprob: -3.963420867919922
    7. 'h' → logprob: -4.088420867919922
    8. 'he' → logprob: -4.463420867919922
    9. ' heap' → logprob: -5.338420867919922
    10. '(heap' → logprob: -5.463420867919922

Token 460: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' (adapté à ' heap') → logprob: -0.026485728099942207
    2. 'import' → logprob: -4.276485919952393
    3. '   ' → logprob: -4.526485919952393
    4. ' heap' → logprob: -6.901485919952393
    5. 'he' → logprob: -8.151485443115234
    6. 'for' → logprob: -9.901485443115234
    7. '```' → logprob: -10.401485443115234
    8. '(heap' → logprob: -10.526485443115234
    9. '
' → logprob: -12.026485443115234
    10. '    
' → logprob: -12.651485443115234

Token 461: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -2.5776860184123507e-06
    2. '[' → logprob: -14.12500286102295
    3. '```' → logprob: -14.75000286102295
    4. 'p' → logprob: -15.25000286102295
    5. 'h' → logprob: -15.25000286102295
    6. 'ify' → logprob: -15.37500286102295
    7. 'push' → logprob: -16.000001907348633
    8. 'hq' → logprob: -16.875001907348633
    9. '.push' → logprob: -17.000001907348633
    10. ',' → logprob: -17.125001907348633

Token 462: '.he' (ID: 67786)
  Prédit: '.he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.he' → logprob: -9.186122770188376e-05
    2. '.' → logprob: -9.750091552734375
    3. '.heap' → logprob: -10.625091552734375
    4. '.push' → logprob: -12.125091552734375
    5. ' .' → logprob: -13.125091552734375
    6. 'he' → logprob: -14.500091552734375
    7. 'q' → logprob: -15.125091552734375
    8. '.h' → logprob: -15.625091552734375
    9. '‌.' → logprob: -16.125091552734375
    10. ' he' → logprob: -16.250091552734375

Token 463: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -1.0802738870552275e-05
    2. 'ap' → logprob: -11.62501049041748
    3. 'pp' → logprob: -13.50001049041748
    4. 'q' → logprob: -15.87501049041748
    5. '```' → logprob: -16.125011444091797
    6. 'appen' → logprob: -16.250011444091797
    7. 'push' → logprob: -16.875011444091797
    8. 'a' → logprob: -17.000011444091797
    9. 'ап' → logprob: -18.375011444091797
    10. '[' → logprob: -18.375011444091797

Token 464: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -3.5120287066092715e-05
    2. 'op' → logprob: -10.750035285949707
    3. 'p' → logprob: -12.625035285949707
    4. 'nd' → logprob: -13.000035285949707
    5. 'sh' → logprob: -13.125035285949707
    6. 'push' → logprob: -13.375035285949707
    7. '```' → logprob: -13.875035285949707
    8. 'pp' → logprob: -14.125035285949707
    9. 'q' → logprob: -14.500035285949707
    10. 'uf' → logprob: -14.625035285949707

Token 465: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -2.1008713702030946e-06
    2. '(' → logprob: -13.125001907348633
    3. '(q' → logprob: -16.750001907348633
    4. ' (' → logprob: -17.125001907348633
    5. '(
' → logprob: -18.750001907348633
    6. '((' → logprob: -19.000001907348633
    7. '(p' → logprob: -19.250001907348633
    8. '(heap' → logprob: -19.750001907348633
    9. '(k' → logprob: -20.250001907348633
    10. '```' → logprob: -20.250001907348633

Token 466: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: 0.0
    2. '[' → logprob: -20.0
    3. 'Q' → logprob: -21.5
    4. ' q' → logprob: -21.75
    5. '	q' → logprob: -22.25
    6. '(q' → logprob: -22.625
    7. 'p' → logprob: -22.875
    8. '
' → logprob: -23.0
    9. '[q' → logprob: -23.0
    10. '

' → logprob: -23.375

Token 467: ',(' (ID: 27243)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5016810297966003
    2. ',' → logprob: -1.2516810894012451
    3. '((' → logprob: -2.501681089401245
    4. ',(' → logprob: -4.626680850982666
    5. ' (' → logprob: -4.751680850982666
    6. '(key' → logprob: -5.376680850982666
    7. ')' → logprob: -6.751680850982666
    8. ' ,' → logprob: -7.001680850982666
    9. ',key' → logprob: -7.376680850982666
    10. '   ' → logprob: -7.876680850982666

Token 468: 'cost' (ID: 33457)
  Prédit: 'cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -5.080963092041202e-06
    2. '0' → logprob: -12.500004768371582
    3. ' cost' → logprob: -14.125004768371582
    4. '(cost' → logprob: -14.375004768371582
    5. 'dist' → logprob: -17.8750057220459
    6. '   ' → logprob: -20.3750057220459
    7. '-cost' → logprob: -21.2500057220459
    8. '_cost' → logprob: -21.3750057220459
    9. 'Cost' → logprob: -22.0000057220459
    10. ')' → logprob: -22.5000057220459

Token 469: ',x' (ID: 29748)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0791594386100769
    2. ',x' → logprob: -2.5791594982147217
    3. ',key' → logprob: -8.5791597366333
    4. ' ,' → logprob: -9.7041597366333
    5. ',
' → logprob: -11.4541597366333
    6. ',(' → logprob: -12.8291597366333
    7. ')' → logprob: -13.5791597366333
    8. ',k' → logprob: -13.7041597366333
    9. ',start' → logprob: -14.7041597366333
    10. '```' → logprob: -14.7041597366333

Token 470: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0015893694944679737
    2. '0' → logprob: -6.501589298248291
    3. ' ,' → logprob: -9.75158977508545
    4. ',
' → logprob: -11.25158977508545
    5. ')' → logprob: -12.25158977508545
    6. '<|end|>' → logprob: -12.62658977508545
    7. '```' → logprob: -13.12658977508545
    8. ' ' → logprob: -13.50158977508545
    9. ',y' → logprob: -13.50158977508545
    10. ',start' → logprob: -14.12658977508545

Token 471: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.125000953674316
    3. '    
' → logprob: -19.0
    4. '   ' → logprob: -19.125
    5. '
' → logprob: -19.375
    6. ')' → logprob: -19.375
    7. '```' → logprob: -19.375
    8. ',' → logprob: -20.3125
    9. '  
' → logprob: -20.3125
    10. '`' → logprob: -20.5625

Token 472: ',start' (ID: 121128)
  Prédit: ',start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',start' → logprob: -0.00030161935137584805
    2. ',' → logprob: -8.250301361083984
    3. 'start' → logprob: -10.125301361083984
    4. ' ,' → logprob: -15.750301361083984
    5. '[start' → logprob: -17.250301361083984
    6. ',current' → logprob: -17.750301361083984
    7. ':start' → logprob: -18.125301361083984
    8. ',next' → logprob: -18.375301361083984
    9. ',s' → logprob: -18.500301361083984
    10. '	start' → logprob: -18.500301361083984

Token 473: '_o' (ID: 28960)
  Prédit: '_o'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_o' → logprob: -0.0019313741941004992
    2. 'o' → logprob: -6.251931190490723
    3. 'O' → logprob: -14.126931190490723
    4. '	o' → logprob: -14.126931190490723
    5. '_' → logprob: -15.001931190490723
    6. ' o' → logprob: -15.751931190490723
    7. '{o' → logprob: -15.751931190490723
    8. ''o' → logprob: -16.12693214416504
    9. '-o' → logprob: -16.50193214416504
    10. '_oc' → logprob: -16.62693214416504

Token 474: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -8.77627644513268e-06
    2. '₂' → logprob: -12.250008583068848
    3. '۲' → logprob: -13.937508583068848
    4. '```' → logprob: -14.062508583068848
    5. 'o' → logprob: -14.812508583068848
    6. '২' → logprob: -15.375008583068848
    7. '२' → logprob: -15.687508583068848
    8. '２' → logprob: -15.875008583068848
    9. '²' → logprob: -16.000009536743164
    10. '٢' → logprob: -16.437509536743164

Token 475: ',start' (ID: 121128)
  Prédit: ',start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',start' → logprob: -0.0004908377304673195
    2. ',' → logprob: -7.625490665435791
    3. 'start' → logprob: -13.50049114227295
    4. ' ,' → logprob: -14.75049114227295
    5. ',
' → logprob: -15.12549114227295
    6. ',current' → logprob: -15.37549114227295
    7. ',last' → logprob: -15.62549114227295
    8. ',next' → logprob: -16.125490188598633
    9. ',end' → logprob: -16.875490188598633
    10. ',s' → logprob: -16.875490188598633

Token 476: '_mask' (ID: 21732)
  Prédit: '_mask'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mask' → logprob: -0.0007100477814674377
    2. 'mask' → logprob: -7.2507100105285645
    3. '_MASK' → logprob: -17.750709533691406
    4. ' mask' → logprob: -18.250709533691406
    5. '	mask' → logprob: -18.500709533691406
    6. 'Mask' → logprob: -18.625709533691406
    7. '_' → logprob: -19.000709533691406
    8. '_m' → logprob: -19.375709533691406
    9. '_masks' → logprob: -19.375709533691406
    10. 'masked' → logprob: -19.500709533691406

Token 477: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.3132648468017578
    2. ')' → logprob: -1.3132648468017578
    3. ')))' → logprob: -13.313264846801758
    4. ' ))' → logprob: -14.813264846801758
    5. '))
' → logprob: -15.063264846801758
    6. '),' → logprob: -15.438264846801758
    7. ')
' → logprob: -15.563264846801758
    8. ' )' → logprob: -15.938264846801758
    9. ')}' → logprob: -16.563264846801758
    10. '));' → logprob: -16.813264846801758

Token 478: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.21190011501312256
    2. 'while' → logprob: -2.586900234222412
    3. '   ' → logprob: -2.836900234222412
    4. ' while' → logprob: -4.336900234222412
    5. '):' → logprob: -4.336900234222412
    6. ',' → logprob: -4.836900234222412
    7. ':' → logprob: -5.461900234222412
    8. ' ' → logprob: -5.961900234222412
    9. '<|end|>' → logprob: -6.086900234222412
    10. ' )' → logprob: -6.586900234222412

Token 479: ' res' (ID: 694)
  Prédit: 'dire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dire' → logprob: -0.874431312084198
    2. 'dx' → logprob: -1.2494313716888428
    3. 'while' → logprob: -1.3744313716888428
    4. 'moves' → logprob: -3.8744313716888428
    5. 'dirs' → logprob: -4.249431133270264
    6. '   ' → logprob: -5.749431133270264
    7. 'dy' → logprob: -6.624431133270264
    8. ' directions' → logprob: -6.749431133270264
    9. ' while' → logprob: -7.749431133270264
    10. 'DX' → logprob: -7.749431133270264

Token 480: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25193148851394653
    2. '=' → logprob: -1.5019314289093018
    3. '=None' → logprob: -13.876931190490723
    4. '=-' → logprob: -14.376931190490723
    5. '=int' → logprob: -15.876931190490723
    6. ' ' → logprob: -16.00193214416504
    7. ' =
' → logprob: -16.50193214416504
    8. '=[]' → logprob: -16.50193214416504
    9. '＝' → logprob: -16.62693214416504
    10. 's' → logprob: -16.75193214416504

Token 481: ' None' (ID: 4662)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.04935210570693016
    2. '10' → logprob: -3.6743521690368652
    3. '-' → logprob: -4.424352169036865
    4. 'sys' → logprob: -5.799352169036865
    5. 'None' → logprob: -5.799352169036865
    6. 'f' → logprob: -6.049352169036865
    7. '-f' → logprob: -6.549352169036865
    8. ' float' → logprob: -7.174352169036865
    9. ' -' → logprob: -9.799351692199707
    10. ' None' → logprob: -10.424351692199707

Token 482: '
' (ID: 198)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.08560970425605774
    2. 'dire' → logprob: -3.3356096744537354
    3. '   ' → logprob: -3.7106096744537354
    4. ' while' → logprob: -4.7106099128723145
    5. '
' → logprob: -5.4606099128723145
    6. ' directions' → logprob: -5.5856099128723145
    7. 'dx' → logprob: -6.4606099128723145
    8. 'dirs' → logprob: -6.9606099128723145
    9. '    
' → logprob: -7.3356099128723145
    10. 'moves' → logprob: -7.4606099128723145

Token 483: '   ' (ID: 271)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.006203226745128632
    2. '   ' → logprob: -5.7562031745910645
    3. ' while' → logprob: -6.3812031745910645
    4. 'dire' → logprob: -7.0062031745910645
    5. 'dx' → logprob: -9.006203651428223
    6. '```' → logprob: -9.131203651428223
    7. 'd' → logprob: -10.381203651428223
    8. '    
' → logprob: -10.631203651428223
    9. ')' → logprob: -10.631203651428223
    10. 'from' → logprob: -11.006203651428223

Token 484: ' #' (ID: 1069)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.03265359625220299
    2. 'dire' → logprob: -3.532653570175171
    3. 'dirs' → logprob: -6.65765380859375
    4. 'dx' → logprob: -6.78265380859375
    5. '   ' → logprob: -8.65765380859375
    6. ' while' → logprob: -8.78265380859375
    7. 'moves' → logprob: -9.15765380859375
    8. ' directions' → logprob: -11.03265380859375
    9. 'dy' → logprob: -11.65765380859375
    10. 'dir' → logprob: -11.78265380859375

Token 485: ' Moves' (ID: 115685)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.05373343080282211
    2. 'dire' → logprob: -3.0537333488464355
    3. 'dirs' → logprob: -5.9287333488464355
    4. 'dx' → logprob: -6.5537333488464355
    5. 'moves' → logprob: -7.8037333488464355
    6. '   ' → logprob: -7.9287333488464355
    7. 'dy' → logprob: -8.803733825683594
    8. 'DIR' → logprob: -10.053733825683594
    9. ' while' → logprob: -10.553733825683594
    10. 'dir' → logprob: -10.678733825683594

Token 486: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.026755714789032936
    2. 'dx' → logprob: -4.6517558097839355
    3. '=' → logprob: -4.7767558097839355
    4. ':' → logprob: -6.2767558097839355
    5. ' dx' → logprob: -6.5267558097839355
    6. '   ' → logprob: -6.9017558097839355
    7. 'dire' → logprob: -7.4017558097839355
    8. '(dx' → logprob: -7.4017558097839355
    9. 'd' → logprob: -7.6517558097839355
    10. ' directions' → logprob: -8.151755332946777

Token 487: ' left' (ID: 3561)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.1905072182416916
    2. ' [(' → logprob: -2.190507173538208
    3. '[' → logprob: -3.190507173538208
    4. ' [' → logprob: -4.690507411956787
    5. ' (' → logprob: -5.815507411956787
    6. '(' → logprob: -6.065507411956787
    7. 'dx' → logprob: -6.440507411956787
    8. '   ' → logprob: -6.440507411956787
    9. '
' → logprob: -6.940507411956787
    10. '((' → logprob: -7.940507411956787

Token 488: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.020892774686217308
    2. 'dx' → logprob: -5.02089262008667
    3. '=' → logprob: -5.14589262008667
    4. ' =' → logprob: -5.64589262008667
    5. ' ,' → logprob: -6.39589262008667
    6. ',-' → logprob: -8.020893096923828
    7. '_dx' → logprob: -8.020893096923828
    8. '(-' → logprob: -8.145893096923828
    9. ',right' → logprob: -8.145893096923828
    10. '   ' → logprob: -8.145893096923828

Token 489: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.2325553447008133
    2. ' right' → logprob: -1.8575553894042969
    3. '(' → logprob: -3.357555389404297
    4. '1' → logprob: -4.857555389404297
    5. '0' → logprob: -5.982555389404297
    6. ' (' → logprob: -5.982555389404297
    7. 'down' → logprob: -6.107555389404297
    8. 'up' → logprob: -7.232555389404297
    9. ' down' → logprob: -8.107555389404297
    10. ',right' → logprob: -8.607555389404297

Token 490: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.018127823248505592
    2. 'dx' → logprob: -4.893127918243408
    3. ',(' → logprob: -5.393127918243408
    4. ' =' → logprob: -6.018127918243408
    5. '   ' → logprob: -6.768127918243408
    6. '(' → logprob: -7.518127918243408
    7. ' ,' → logprob: -7.643127918243408
    8. '=' → logprob: -7.893127918243408
    9. '=(' → logprob: -8.64312744140625
    10. 'down' → logprob: -8.89312744140625

Token 491: ' down' (ID: 1917)
  Prédit: 'up'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'up' → logprob: -0.13871660828590393
    2. ' up' → logprob: -2.888716697692871
    3. 'down' → logprob: -3.263716697692871
    4. '(' → logprob: -3.763716697692871
    5. '(-' → logprob: -5.263716697692871
    6. ' down' → logprob: -6.013716697692871
    7. '(up' → logprob: -6.138716697692871
    8. '0' → logprob: -6.263716697692871
    9. ' (' → logprob: -7.638716697692871
    10. '1' → logprob: -9.638716697692871

Token 492: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4436101019382477
    2. ',
' → logprob: -1.6936100721359253
    3. '
' → logprob: -1.8186100721359253
    4. 'dx' → logprob: -5.193610191345215
    5. '   ' → logprob: -5.443610191345215
    6. ' ,' → logprob: -7.068610191345215
    7. '  
' → logprob: -8.693610191345215
    8. '    
' → logprob: -8.818610191345215
    9. ',(' → logprob: -8.943610191345215
    10. 'dire' → logprob: -8.943610191345215

Token 493: 'no' (ID: 1750)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06486346572637558
    2. '(-' → logprob: -4.189863681793213
    3. '1' → logprob: -4.439863681793213
    4. '   ' → logprob: -4.939863681793213
    5. 'dx' → logprob: -4.939863681793213
    6. '[(' → logprob: -5.189863681793213
    7. ' (' → logprob: -5.314863681793213
    8. ')' → logprob: -5.439863681793213
    9. '0' → logprob: -5.564863681793213
    10. ',' → logprob: -6.814863681793213

Token 494: ' up' (ID: 869)
  Prédit: 'up'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'up' → logprob: -0.4446991980075836
    2. ' up' → logprob: -1.0696991682052612
    3. ')' → logprob: -5.694699287414551
    4. '   ' → logprob: -5.819699287414551
    5. '_up' → logprob: -6.569699287414551
    6. '-up' → logprob: -6.819699287414551
    7. '	up' → logprob: -6.944699287414551
    8. '(' → logprob: -7.194699287414551
    9. ',' → logprob: -7.194699287414551
    10. ' (' → logprob: -7.319699287414551

Token 495: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.15043894946575165
    2. ',' → logprob: -2.0254390239715576
    3. ')
' → logprob: -5.0254387855529785
    4. ',)' → logprob: -8.150439262390137
    5. '   ' → logprob: -8.650439262390137
    6. ',
' → logprob: -8.650439262390137
    7. '),' → logprob: -8.900439262390137
    8. '):
' → logprob: -9.150439262390137
    9. '```' → logprob: -10.150439262390137
    10. '):' → logprob: -10.275439262390137

Token 496: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.45073044300079346
    2. 'moves' → logprob: -1.7007304430007935
    3. 'dire' → logprob: -2.825730323791504
    4. 'for' → logprob: -3.575730323791504
    5. 'dx' → logprob: -3.575730323791504
    6. ',' → logprob: -3.575730323791504
    7. 'while' → logprob: -4.825730323791504
    8. 'dirs' → logprob: -5.575730323791504
    9. '```' → logprob: -5.575730323791504
    10. ' moves' → logprob: -5.950730323791504

Token 497: ' dx' (ID: 29472)
  Prédit: 'moves'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'moves' → logprob: -0.8687959313392639
    2. 'dire' → logprob: -1.1187958717346191
    3. '   ' → logprob: -2.368795871734619
    4. 'dx' (adapté à ' dx') → logprob: -2.493795871734619
    5. 'while' → logprob: -3.243795871734619
    6. 'dirs' → logprob: -3.743795871734619
    7. 'for' → logprob: -4.993795871734619
    8. 'dy' → logprob: -5.993795871734619
    9. ' directions' → logprob: -6.243795871734619
    10. ' moves' → logprob: -7.118795871734619

Token 498: 's' (ID: 82)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5250073075294495
    2. '=' → logprob: -0.9000073075294495
    3. '=[' → logprob: -6.400007247924805
    4. ',' → logprob: -9.400007247924805
    5. 's' → logprob: -9.775007247924805
    6. ' =[' → logprob: -10.275007247924805
    7. '[' → logprob: -10.775007247924805
    8. ')' → logprob: -11.650007247924805
    9. '=
' → logprob: -12.400007247924805
    10. '=[
' → logprob: -12.650007247924805

Token 499: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6933467388153076
    2. ' =' → logprob: -0.6933467388153076
    3. '=[' → logprob: -8.818346977233887
    4. '[' → logprob: -10.693346977233887
    5. ' =[' → logprob: -10.943346977233887
    6. '=
' → logprob: -12.443346977233887
    7. ',' → logprob: -12.443346977233887
    8. ']' → logprob: -14.193346977233887
    9. ')' → logprob: -14.193346977233887
    10. '=[
' → logprob: -14.318346977233887

Token 500: ' [-' (ID: 20191)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.07889650017023087
    2. '[' → logprob: -2.5788965225219727
    3. '(-' → logprob: -12.328896522521973
    4. ' [-' → logprob: -13.328896522521973
    5. ' [' → logprob: -15.078896522521973
    6. '(' → logprob: -15.453896522521973
    7. '-' → logprob: -15.578896522521973
    8. '[(' → logprob: -16.328895568847656
    9. '0' → logprob: -17.953895568847656
    10. '1' → logprob: -18.828895568847656

Token 501: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.2200749754119897e-06
    2. '0' → logprob: -14.500001907348633
    3. ' ' → logprob: -14.625001907348633
    4. 'x' → logprob: -16.062501907348633
    5. '```' → logprob: -16.062501907348633
    6. 'dx' → logprob: -16.125001907348633
    7. '2' → logprob: -16.187501907348633
    8. '<|end|>' → logprob: -16.687501907348633
    9. '=' → logprob: -16.937501907348633
    10. ',' → logprob: -16.937501907348633

Token 502: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00012415809032972902
    2. ' ,' → logprob: -9.250123977661133
    3. '0' → logprob: -10.500123977661133
    4. ',
' → logprob: -15.250123977661133
    5. ' ' → logprob: -16.625123977661133
    6. '   ' → logprob: -17.250123977661133
    7. '1' → logprob: -19.375123977661133
    8. '
' → logprob: -19.375123977661133
    9. '‌,' → logprob: -19.500123977661133
    10. '```' → logprob: -20.875123977661133

Token 503: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0004438971809577197
    2. ' ' → logprob: -7.750443935394287
    3. '1' → logprob: -11.250443458557129
    4. '<|end|>' → logprob: -15.375443458557129
    5. '
' → logprob: -17.875444412231445
    6. '+' → logprob: -18.500444412231445
    7. '```' → logprob: -18.500444412231445
    8. '  ' → logprob: -19.125444412231445
    9. '۰' → logprob: -19.125444412231445
    10. ',' → logprob: -19.500444412231445

Token 504: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003697781648952514
    2. '0' → logprob: -8.500370025634766
    3. ' ,' → logprob: -8.750370025634766
    4. ']' → logprob: -12.250370025634766
    5. ',
' → logprob: -13.500370025634766
    6. ' ' → logprob: -14.500370025634766
    7. '   ' → logprob: -14.875370025634766
    8. ',(' → logprob: -15.875370025634766
    9. '3' → logprob: -16.125370025634766
    10. ',-' → logprob: -16.375370025634766

Token 505: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0029447749257087708
    2. '1' → logprob: -5.8779449462890625
    3. ' ' → logprob: -8.877944946289062
    4. ']' → logprob: -15.127944946289062
    5. '```' → logprob: -16.502944946289062
    6. '2' → logprob: -16.877944946289062
    7. '+' → logprob: -18.127944946289062
    8. ']
' → logprob: -19.127944946289062
    9. '
' → logprob: -19.377944946289062
    10. '   ' → logprob: -19.752944946289062

Token 506: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.39899322390556335
    2. ',' → logprob: -1.1489932537078857
    3. ']
' → logprob: -4.523993015289307
    4. ',d' → logprob: -7.273993015289307
    5. ',y' → logprob: -8.898993492126465
    6. ',
' → logprob: -9.148993492126465
    7. ']

' → logprob: -9.898993492126465
    8. '   ' → logprob: -10.273993492126465
    9. ' ]' → logprob: -10.773993492126465
    10. 'dy' → logprob: -10.898993492126465

Token 507: '   ' (ID: 271)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.04076758027076721
    2. 'dy' → logprob: -3.5407676696777344
    3. 'while' → logprob: -5.040767669677734
    4. 'for' → logprob: -6.665767669677734
    5. 'dym' → logprob: -6.790767669677734
    6. '<|end|>' → logprob: -7.540767669677734
    7. ' while' → logprob: -8.165767669677734
    8. ',d' → logprob: -8.540767669677734
    9. 'dyr' → logprob: -8.665767669677734
    10. 'dfs' → logprob: -8.790767669677734

Token 508: ' dys' (ID: 23264)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.13364356756210327
    2. 'while' → logprob: -2.133643627166748
    3. 'dy' → logprob: -5.258643627166748
    4. 'for' → logprob: -7.508643627166748
    5. 'dym' → logprob: -8.00864315032959
    6. ' while' → logprob: -9.63364315032959
    7. 'rys' → logprob: -9.63364315032959
    8. 'dfs' → logprob: -9.75864315032959
    9. 'dirs' → logprob: -9.88364315032959
    10. 'steps' → logprob: -10.00864315032959

Token 509: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1712900996208191
    2. '=[' → logprob: -1.9212901592254639
    3. ' =' → logprob: -4.546289920806885
    4. '[' → logprob: -8.046290397644043
    5. '=
' → logprob: -10.296290397644043
    6. ' =[' → logprob: -10.796290397644043
    7. '=[
' → logprob: -11.921290397644043
    8. '```' → logprob: -12.671290397644043
    9. '[-' → logprob: -12.921290397644043
    10. '=-' → logprob: -13.296290397644043

Token 510: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -9.400689305039123e-05
    2. ' [' → logprob: -9.750094413757324
    3. '0' → logprob: -10.250094413757324
    4. ' ' → logprob: -15.375094413757324
    5. '[
' → logprob: -19.250093460083008
    6. '(' → logprob: -19.750093460083008
    7. '[-' → logprob: -20.250093460083008
    8. '<|end|>' → logprob: -20.375093460083008
    9. '[...,' → logprob: -20.750093460083008
    10. '{' → logprob: -21.625093460083008

Token 511: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.4391956685576588e-05
    2. ' ' → logprob: -10.625024795532227
    3. '۰' → logprob: -20.000024795532227
    4. '00' → logprob: -21.125024795532227
    5. '000' → logprob: -23.250024795532227
    6. '[' → logprob: -23.250024795532227
    7. '  ' → logprob: -23.625024795532227
    8. '012' → logprob: -23.625024795532227
    9. '０' → logprob: -23.750024795532227
    10. '   ' → logprob: -23.875024795532227

Token 512: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004535526386462152
    2. ',-' → logprob: -7.875453472137451
    3. ' ,' → logprob: -10.12545394897461
    4. ',
' → logprob: -10.37545394897461
    5. ',+' → logprob: -13.75045394897461
    6. '1' → logprob: -14.50045394897461
    7. ',

' → logprob: -15.87545394897461
    8. ',\
' → logprob: -16.00045394897461
    9. ',-
' → logprob: -17.12545394897461
    10. ',None' → logprob: -17.25045394897461

Token 513: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.7994282795116305e-05
    2. ' ' → logprob: -10.00004768371582
    3. '-' → logprob: -13.00004768371582
    4. '```' → logprob: -16.25004768371582
    5. '0' → logprob: -16.87504768371582
    6. '+' → logprob: -17.12504768371582
    7. '   ' → logprob: -17.25004768371582
    8. '  ' → logprob: -17.75004768371582
    9. ' -' → logprob: -18.25004768371582
    10. '
' → logprob: -18.75004768371582

Token 514: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0036050593480467796
    2. '1' → logprob: -5.628604888916016
    3. ' ,' → logprob: -12.503604888916016
    4. ',
' → logprob: -14.003604888916016
    5. ',+' → logprob: -15.253604888916016
    6. ' ' → logprob: -16.003604888916016
    7. '+' → logprob: -17.253604888916016
    8. ',\
' → logprob: -17.878604888916016
    9. ',-' → logprob: -17.941104888916016
    10. '+,' → logprob: -17.941104888916016

Token 515: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.75
    3. '+' → logprob: -19.125
    4. ']' → logprob: -21.125
    5. '   ' → logprob: -21.25
    6. '```' → logprob: -22.0
    7. '
' → logprob: -22.375
    8. '  ' → logprob: -23.0
    9. '۱' → logprob: -23.25
    10. '-' → logprob: -23.375

Token 516: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -7.958325295476243e-05
    2. ']
' → logprob: -9.875079154968262
    3. '   ' → logprob: -11.125079154968262
    4. ' ]' → logprob: -11.750079154968262
    5. ']

' → logprob: -13.250079154968262
    6. ')' → logprob: -13.500079154968262
    7. '}' → logprob: -14.500079154968262
    8. '<|end|>' → logprob: -14.625079154968262
    9. '```' → logprob: -14.750079154968262
    10. ']>' → logprob: -15.250079154968262

Token 517: '   ' (ID: 271)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.005619093310087919
    2. ' while' → logprob: -5.505619049072266
    3. '   ' → logprob: -6.505619049072266
    4. '```' → logprob: -10.630619049072266
    5. ')' → logprob: -11.630619049072266
    6. '	while' → logprob: -12.005619049072266
    7. 'While' → logprob: -12.505619049072266
    8. '<|end|>' → logprob: -14.255619049072266
    9. '    
' → logprob: -15.380619049072266
    10. '  ' → logprob: -15.880619049072266

Token 518: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -1.6286106983898208e-05
    2. ' while' → logprob: -11.500016212463379
    3. '   ' → logprob: -12.125016212463379
    4. 'While' → logprob: -15.375016212463379
    5. '```' → logprob: -15.500016212463379
    6. '
' → logprob: -16.125017166137695
    7. '	while' → logprob: -16.250017166137695
    8. '    
' → logprob: -17.250017166137695
    9. ')' → logprob: -19.625017166137695
    10. '  
' → logprob: -20.000017166137695

Token 519: ' h' (ID: 312)
  Prédit: 'hq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hq' → logprob: -0.10036657750606537
    2. ' h' → logprob: -2.3503665924072266
    3. 'h' → logprob: -9.475366592407227
    4. '(h' → logprob: -9.850366592407227
    5. 'len' → logprob: -11.350366592407227
    6. '	h' → logprob: -11.725366592407227
    7. ' len' → logprob: -11.725366592407227
    8. '   ' → logprob: -13.725366592407227
    9. '[h' → logprob: -14.225366592407227
    10. 'True' → logprob: -14.850366592407227

Token 520: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -1.0280383548888494e-06
    2. 'e' → logprob: -14.125000953674316
    3. '[' → logprob: -15.875000953674316
    4. '(q' → logprob: -17.500001907348633
    5. ''q' → logprob: -17.500001907348633
    6. '   ' → logprob: -17.750001907348633
    7. '(' → logprob: -17.875001907348633
    8. 'Q' → logprob: -18.000001907348633
    9. ' q' → logprob: -18.000001907348633
    10. '	q' → logprob: -18.125001907348633

Token 521: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.012037810869514942
    2. ':
' → logprob: -5.137037754058838
    3. '[' → logprob: -5.387037754058838
    4. '):' → logprob: -6.887037754058838
    5. '>:' → logprob: -9.012038230895996
    6. '):
' → logprob: -9.262038230895996
    7. '=' → logprob: -9.512038230895996
    8. '!=' → logprob: -10.137038230895996
    9. 'and' → logprob: -10.262038230895996
    10. ' and' → logprob: -10.512038230895996

Token 522: '       ' (ID: 309)
  Prédit: '(cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cost' → logprob: -0.8829303979873657
    2. 'cost' → logprob: -1.0079303979873657
    3. '       ' → logprob: -2.007930278778076
    4. '   ' → logprob: -3.007930278778076
    5. ' cost' → logprob: -3.882930278778076
    6. '_cost' → logprob: -5.757930278778076
    7. ',' → logprob: -5.882930278778076
    8. '```' → logprob: -5.882930278778076
    9. 'c' → logprob: -6.632930278778076
    10. '(c' → logprob: -6.757930278778076

Token 523: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' (adapté à ' cost') → logprob: -0.0023276021238416433
    2. '(cost' → logprob: -6.1273274421691895
    3. ' cost' → logprob: -9.127327919006348
    4. 'cur' → logprob: -10.752327919006348
    5. 'c' → logprob: -11.627327919006348
    6. '   ' → logprob: -14.377327919006348
    7. '_cost' → logprob: -14.377327919006348
    8. '(c' → logprob: -14.377327919006348
    9. 'curr' → logprob: -14.502327919006348
    10. '```' → logprob: -15.627327919006348

Token 524: ',x' (ID: 29748)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0046657994389534
    2. ',x' → logprob: -5.379665851593018
    3. ',
' → logprob: -11.25466537475586
    4. ',n' → logprob: -11.75466537475586
    5. ',next' → logprob: -12.12966537475586
    6. ',user' → logprob: -12.75466537475586
    7. ' ,' → logprob: -12.75466537475586
    8. ',c' → logprob: -13.50466537475586
    9. ',current' → logprob: -13.75466537475586
    10. ',y' → logprob: -13.87966537475586

Token 525: ',y' (ID: 16103)
  Prédit: ',y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',y' → logprob: -0.003628342878073454
    2. ',' → logprob: -5.628628253936768
    3. ' ,' → logprob: -12.003628730773926
    4. ',c' → logprob: -12.128628730773926
    5. ',next' → logprob: -12.253628730773926
    6. ',x' → logprob: -13.128628730773926
    7. ',v' → logprob: -13.628628730773926
    8. 'y' → logprob: -13.878628730773926
    9. ',d' → logprob: -14.003628730773926
    10. ',n' → logprob: -14.128628730773926

Token 526: ',o' (ID: 97273)
  Prédit: ',o'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',o' → logprob: -0.4349695146083832
    2. ',start' → logprob: -1.6849695444107056
    3. ',c' → logprob: -2.184969425201416
    4. ',' → logprob: -3.059969425201416
    5. ',state' → logprob: -5.934969425201416
    6. ',current' → logprob: -6.559969425201416
    7. ',s' → logprob: -6.934969425201416
    8. ',next' → logprob: -7.059969425201416
    9. ',d' → logprob: -8.309969902038574
    10. ',n' → logprob: -8.309969902038574

Token 527: '2' (ID: 17)
  Prédit: '_left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_left' → logprob: -0.060150276869535446
    2. ',_' → logprob: -3.310150384902954
    3. ',left' → logprob: -4.310150146484375
    4. '_,' → logprob: -5.185150146484375
    5. '_l' → logprob: -7.060150146484375
    6. ',' → logprob: -7.185150146484375
    7. 'left' → logprob: -7.560150146484375
    8. '_' → logprob: -8.435150146484375
    9. '2' → logprob: -9.310150146484375
    10. ',l' → logprob: -9.435150146484375

Token 528: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4526781141757965
    2. ',m' → logprob: -1.7026780843734741
    3. ',start' → logprob: -1.8276780843734741
    4. ',state' → logprob: -5.077678203582764
    5. ',next' → logprob: -5.327678203582764
    6. ',current' → logprob: -6.577678203582764
    7. ',pos' → logprob: -6.952678203582764
    8. ',key' → logprob: -6.952678203582764
    9. ',s' → logprob: -6.952678203582764
    10. ',n' → logprob: -6.952678203582764

Token 529: 'mask' (ID: 22527)
  Prédit: 'mask'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mask' → logprob: -0.00011343709047650918
    2. 'm' → logprob: -9.625113487243652
    3. 'masked' → logprob: -10.500113487243652
    4. 'used' → logprob: -11.750113487243652
    5. 'ms' → logprob: -12.250113487243652
    6. '_mask' → logprob: -12.500113487243652
    7. ' mask' → logprob: -13.500113487243652
    8. '	mask' → logprob: -14.500113487243652
    9. 'mas' → logprob: -15.250113487243652
    10. 'visited' → logprob: -15.375113487243652

Token 530: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.029751067981123924
    2. ' =' → logprob: -3.5297510623931885
    3. ')=' → logprob: -14.90475082397461
    4. '   ' → logprob: -16.27975082397461
    5. '=
' → logprob: -16.65475082397461
    6. ')' → logprob: -16.90475082397461
    7. '＝' → logprob: -17.15475082397461
    8. '=h' → logprob: -17.40475082397461
    9. ',' → logprob: -17.90475082397461
    10. '=

' → logprob: -18.02975082397461

Token 531: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.00015872348740231246
    2. ' heap' → logprob: -8.750158309936523
    3. '   ' → logprob: -16.000158309936523
    4. 'he' → logprob: -16.625158309936523
    5. '(heap' → logprob: -18.125158309936523
    6. '
' → logprob: -18.875158309936523
    7. '.heap' → logprob: -19.750158309936523
    8. 'queue' → logprob: -20.250158309936523
    9. 'hq' → logprob: -20.250158309936523
    10. '_heap' → logprob: -20.750158309936523

Token 532: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -3.128163257315464e-07
    2. '[' → logprob: -16.0
    3. 'pop' → logprob: -16.25
    4. '
' → logprob: -18.125
    5. 'replace' → logprob: -18.75
    6. 'he' → logprob: -18.875
    7. 'h' → logprob: -19.375
    8. '.he' → logprob: -19.75
    9. 'p' → logprob: -19.875
    10. 'g' → logprob: -20.0

Token 533: '.he' (ID: 67786)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.007081787567585707
    2. '.he' → logprob: -5.007081985473633
    3. '[' → logprob: -8.382081985473633
    4. 'he' → logprob: -9.007081985473633
    5. 'op' → logprob: -12.632081985473633
    6. 'hq' → logprob: -12.757081985473633
    7. 'pop' → logprob: -12.882081985473633
    8. ' he' → logprob: -13.632081985473633
    9. '.heap' → logprob: -13.632081985473633
    10. '.pop' → logprob: -14.257081985473633

Token 534: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -5.5577775128767826e-06
    2. 'ap' → logprob: -13.000005722045898
    3. 'pp' → logprob: -13.500005722045898
    4. '[' → logprob: -14.000005722045898
    5. 'a' → logprob: -14.750005722045898
    6. 'q' → logprob: -15.375005722045898
    7. 'appen' → logprob: -16.3750057220459
    8. 'appe' → logprob: -16.7500057220459
    9. 'aq' → logprob: -17.1250057220459
    10. '```' → logprob: -17.3750057220459

Token 535: 'op' (ID: 467)
  Prédit: 'app'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.6042306423187256
    2. 'op' → logprob: -0.8542306423187256
    3. 'ush' → logprob: -4.354230880737305
    4. 'q' → logprob: -5.229230880737305
    5. 'e' → logprob: -5.854230880737305
    6. 'p' → logprob: -6.354230880737305
    7. 'pop' → logprob: -6.479230880737305
    8. 'pp' → logprob: -6.854230880737305
    9. 'he' → logprob: -7.104230880737305
    10. 'ap' → logprob: -7.229230880737305

Token 536: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -4.024604277219623e-05
    2. '(' → logprob: -10.250040054321289
    3. '(
' → logprob: -12.875040054321289
    4. '(heap' → logprob: -14.000040054321289
    5. ' (' → logprob: -14.125040054321289
    6. '(q' → logprob: -14.500040054321289
    7. '((' → logprob: -17.00004005432129
    8. '(hr' → logprob: -17.12504005432129
    9. ',h' → logprob: -17.37504005432129
    10. '   ' → logprob: -17.50004005432129

Token 537: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -1.9361264946837764e-07
    2. '_q' → logprob: -16.25
    3. '_' → logprob: -18.5
    4. ')' → logprob: -18.625
    5. '
' → logprob: -18.75
    6. ')
' → logprob: -19.0
    7. '	q' → logprob: -19.25
    8. '[' → logprob: -20.25
    9. 'qs' → logprob: -20.25
    10. ' q' → logprob: -20.25

Token 538: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0004925066023133695
    2. ')
' → logprob: -7.625492572784424
    3. '   ' → logprob: -13.000492095947266
    4. '),' → logprob: -14.750492095947266
    5. ')`' → logprob: -14.750492095947266
    6. '       ' → logprob: -15.000492095947266
    7. ')
' → logprob: -15.125492095947266
    8. ' )' → logprob: -15.625492095947266
    9. ')

' → logprob: -16.125492095947266
    10. ').' → logprob: -16.625492095947266

Token 539: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7956724166870117
    2. '<|end|>' → logprob: -1.6706724166870117
    3. '```' → logprob: -2.0456724166870117
    4. ' if' → logprob: -2.4206724166870117
    5. 'if' → logprob: -2.7956724166870117
    6. ',' → logprob: -3.9206724166870117
    7. ' 
' → logprob: -4.170672416687012
    8. '    
' → logprob: -4.170672416687012
    9. '
' → logprob: -4.420672416687012
    10. '       ' → logprob: -5.295672416687012

Token 540: ' key' (ID: 2140)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0003975416184403002
    2. '   ' → logprob: -8.125397682189941
    3. ' if' → logprob: -9.875397682189941
    4. '       ' → logprob: -10.000397682189941
    5. 'key' (adapté à ' key') → logprob: -13.375397682189941
    6. '#' → logprob: -13.625397682189941
    7. '        
' → logprob: -14.375397682189941
    8. 'for' → logprob: -14.375397682189941
    9. '```' → logprob: -15.000397682189941
    10. '	if' → logprob: -15.125397682189941

Token 541: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20143713057041168
    2. ' =' → logprob: -1.7014371156692505
    3. '=
' → logprob: -11.076436996459961
    4. '=(' → logprob: -12.576436996459961
    5. ' =(' → logprob: -13.076436996459961
    6. ' =
' → logprob: -13.326436996459961
    7. ' ==' → logprob: -15.326436996459961
    8. '＝' → logprob: -15.326436996459961
    9. ')' → logprob: -15.576436996459961
    10. '==' → logprob: -15.951436996459961

Token 542: ' (' (ID: 350)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.001170460251159966
    2. ' (' → logprob: -6.751170635223389
    3. '   ' → logprob: -15.62617015838623
    4. '(' → logprob: -16.251171112060547
    5. 'x' → logprob: -19.626171112060547
    6. ' ' → logprob: -21.251171112060547
    7. '  ' → logprob: -21.751171112060547
    8. '```' → logprob: -22.376171112060547
    9. '
' → logprob: -22.876171112060547
    10. '((' → logprob: -23.001171112060547

Token 543: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -3.128163257315464e-07
    2. ' x' → logprob: -15.25
    3. '(x' → logprob: -18.75
    4. ')x' → logprob: -19.25
    5. '"x' → logprob: -20.625
    6. '	x' → logprob: -22.25
    7. '   ' → logprob: -22.25
    8. '{x' → logprob: -22.75
    9. ' ' → logprob: -23.125
    10. '```' → logprob: -23.5

Token 544: ',y' (ID: 16103)
  Prédit: ',y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',y' → logprob: -0.07896623760461807
    2. ',' → logprob: -2.5789661407470703
    3. ' ,' → logprob: -9.70396614074707
    4. ',x' → logprob: -11.57896614074707
    5. ',
' → logprob: -12.45396614074707
    6. ',o' → logprob: -14.20396614074707
    7. ',user' → logprob: -15.57896614074707
    8. '
' → logprob: -15.57896614074707
    9. ',Y' → logprob: -15.57896614074707
    10. 'y' → logprob: -16.32896614074707

Token 545: ',o' (ID: 97273)
  Prédit: ',o'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',o' → logprob: -0.023619867861270905
    2. ',' → logprob: -3.7736198902130127
    3. ',x' → logprob: -8.023619651794434
    4. ',y' → logprob: -10.398619651794434
    5. ' ,' → logprob: -11.398619651794434
    6. ',
' → logprob: -13.148619651794434
    7. ',O' → logprob: -14.898619651794434
    8. ',next' → logprob: -15.023619651794434
    9. ',c' → logprob: -15.273619651794434
    10. 'o' → logprob: -15.648619651794434

Token 546: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.816093228830141e-06
    2. '₂' → logprob: -13.25000286102295
    3. '_' → logprob: -14.75000286102295
    4. '۲' → logprob: -15.37500286102295
    5. '```' → logprob: -15.37500286102295
    6. '
' → logprob: -16.562501907348633
    7. '２' → logprob: -17.062501907348633
    8. '٢' → logprob: -17.062501907348633
    9. ' ' → logprob: -18.062501907348633
    10. '' → logprob: -18.375001907348633

Token 547: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.833878508885391e-05
    2. ',m' → logprob: -10.875038146972656
    3. ',
' → logprob: -11.375038146972656
    4. ' ,' → logprob: -12.875038146972656
    5. 'mask' → logprob: -12.875038146972656
    6. ')' → logprob: -13.500038146972656
    7. ',)' → logprob: -14.875038146972656
    8. '	mask' → logprob: -15.250038146972656
    9. '(mask' → logprob: -16.250038146972656
    10. ' mask' → logprob: -16.875038146972656

Token 548: 'mask' (ID: 22527)
  Prédit: 'mask'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mask' → logprob: -1.1472419600977446e-06
    2. ' mask' → logprob: -13.750000953674316
    3. 'cost' → logprob: -20.000001907348633
    4. '(mask' → logprob: -20.125001907348633
    5. 'masked' → logprob: -20.125001907348633
    6. '   ' → logprob: -20.375001907348633
    7. '	mask' → logprob: -20.375001907348633
    8. ' ' → logprob: -20.500001907348633
    9. 'mas' → logprob: -20.750001907348633
    10. 'm' → logprob: -20.875001907348633

Token 549: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5759490728378296
    2. ')
' → logprob: -0.8259490728378296
    3. ')
' → logprob: -12.075948715209961
    4. ')

' → logprob: -12.575948715209961
    5. '   ' → logprob: -15.450948715209961
    6. ' )
' → logprob: -15.950948715209961
    7. ' )' → logprob: -17.32594871520996
    8. '),' → logprob: -17.70094871520996
    9. ',)
' → logprob: -17.82594871520996
    10. '):
' → logprob: -18.07594871520996

Token 550: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005695947329513729
    2. ' if' → logprob: -8.125569343566895
    3. '        
' → logprob: -8.875569343566895
    4. '   ' → logprob: -9.875569343566895
    5. '<|end|>' → logprob: -10.125569343566895
    6. 'if' → logprob: -10.625569343566895
    7. '
' → logprob: -11.875569343566895
    8. '    
' → logprob: -13.125569343566895
    9. '```' → logprob: -13.250569343566895
    10. '  
' → logprob: -13.375569343566895

Token 551: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.013501237146556377
    2. '       ' → logprob: -4.513501167297363
    3. ' if' → logprob: -6.013501167297363
    4. '   ' → logprob: -13.013501167297363
    5. '	if' → logprob: -13.388501167297363
    6. '        
' → logprob: -14.263501167297363
    7. '```' → logprob: -16.13850212097168
    8. '#' → logprob: -16.51350212097168
    9. ';if' → logprob: -16.76350212097168
    10. 'If' → logprob: -16.76350212097168

Token 552: ' dist' (ID: 3601)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.02975129522383213
    2. ' y' → logprob: -3.5297513008117676
    3. '(y' → logprob: -14.27975082397461
    4. '   ' → logprob: -15.77975082397461
    5. '	y' → logprob: -17.52975082397461
    6. '
' → logprob: -18.65475082397461
    7. ''y' → logprob: -18.90475082397461
    8. ' ' → logprob: -18.90475082397461
    9. ' (' → logprob: -19.15475082397461
    10. ')y' → logprob: -19.77975082397461

Token 553: '.get' (ID: 775)
  Prédit: '[key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[key' → logprob: -2.558399319241289e-05
    2. '.get' → logprob: -10.875025749206543
    3. 'key' → logprob: -12.125025749206543
    4. '```' → logprob: -14.875025749206543
    5. '[' → logprob: -15.250025749206543
    6. '(key' → logprob: -16.000024795532227
    7. '[(' → logprob: -16.125024795532227
    8. ',key' → logprob: -16.750024795532227
    9. '_key' → logprob: -16.875024795532227
    10. '
' → logprob: -16.875024795532227

Token 554: '(key' (ID: 8932)
  Prédit: '(key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(key' → logprob: -0.00015860427811276168
    2. 'key' → logprob: -8.750158309936523
    3. '[key' → logprob: -16.375158309936523
    4. ' key' → logprob: -18.000158309936523
    5. '((' → logprob: -18.250158309936523
    6. ',key' → logprob: -18.250158309936523
    7. ' (' → logprob: -18.875158309936523
    8. '(' → logprob: -20.000158309936523
    9. '	key' → logprob: -20.625158309936523
    10. '```' → logprob: -20.750158309936523

Token 555: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.47976067662239075
    2. ')!=' → logprob: -0.9797606468200684
    3. ',' → logprob: -5.729760646820068
    4. '!=' → logprob: -6.979760646820068
    5. ']!=' → logprob: -7.104760646820068
    6. ')==' → logprob: -8.604761123657227
    7. ')>' → logprob: -8.729761123657227
    8. '[' → logprob: -9.604761123657227
    9. ']' → logprob: -10.104761123657227
    10. ',key' → logprob: -10.354761123657227

Token 556: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.6631244421005249
    2. 'cost' → logprob: -0.7881244421005249
    3. 'None' → logprob: -3.6631245613098145
    4. 'sys' → logprob: -6.4131245613098145
    5. '0' → logprob: -6.6631245613098145
    6. ')' → logprob: -7.6631245613098145
    7. '100' → logprob: -8.663124084472656
    8. '-' → logprob: -8.663124084472656
    9. 'inf' → logprob: -8.788124084472656
    10. '-cost' → logprob: -9.413124084472656

Token 557: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.48117494583129883
    2. ''in' → logprob: -1.1061749458312988
    3. ''' → logprob: -3.731174945831299
    4. ''ex' → logprob: -4.856174945831299
    5. ''as' → logprob: -6.356174945831299
    6. ''ins' → logprob: -6.356174945831299
    7. ''>' → logprob: -6.481174945831299
    8. ''ind' → logprob: -6.731174945831299
    9. ''inc' → logprob: -6.731174945831299
    10. ''i' → logprob: -6.856174945831299

Token 558: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -0.47585785388946533
    2. ''in' → logprob: -0.9758578538894653
    3. ''' → logprob: -6.850857734680176
    4. ''ex' → logprob: -8.225857734680176
    5. ''e' → logprob: -9.850857734680176
    6. ''i' → logprob: -10.225857734680176
    7. '('' → logprob: -10.350857734680176
    8. ''s' → logprob: -10.475857734680176
    9. ''on' → logprob: -10.475857734680176
    10. ''inc' → logprob: -10.600857734680176

Token 559: ''))' (ID: 7974)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0015994871500879526
    2. '')' → logprob: -7.126599311828613
    3. ')>' → logprob: -7.376599311828613
    4. '))' → logprob: -9.876599311828613
    5. '>)' → logprob: -10.251599311828613
    6. ' )' → logprob: -10.251599311828613
    7. '`)' → logprob: -10.376599311828613
    8. ')<' → logprob: -12.001599311828613
    9. '")' → logprob: -12.751599311828613
    10. '>' → logprob: -13.501599311828613

Token 560: ' <' (ID: 464)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.5929669737815857
    2. '!=' → logprob: -1.3429670333862305
    3. ' !=' → logprob: -2.7179670333862305
    4. ' >' → logprob: -2.8429670333862305
    5. '<' → logprob: -3.0929670333862305
    6. ' <' → logprob: -4.7179670333862305
    7. '<=' → logprob: -5.5929670333862305
    8. '==' → logprob: -6.3429670333862305
    9. ')' → logprob: -7.0929670333862305
    10. ' <=' → logprob: -7.5929670333862305

Token 561: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.018150296062231064
    2. ' cost' → logprob: -4.018150329589844
    3. ' ' → logprob: -15.768150329589844
    4. '   ' → logprob: -16.268150329589844
    5. '(cost' → logprob: -16.268150329589844
    6. '0' → logprob: -17.643150329589844
    7. 'cos' → logprob: -17.768150329589844
    8. '_cost' → logprob: -18.143150329589844
    9. '  ' → logprob: -18.393150329589844
    10. 'co' → logprob: -18.518150329589844

Token 562: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01447962038218975
    2. ':
' → logprob: -4.264479637145996
    3. '   ' → logprob: -9.264479637145996
    4. 'continue' → logprob: -9.389479637145996
    5. ' continue' → logprob: -9.514479637145996
    6. '	continue' → logprob: -10.639479637145996
    7. '       ' → logprob: -10.639479637145996
    8. '           ' → logprob: -12.139479637145996
    9. '_continue' → logprob: -12.514479637145996
    10. ',' → logprob: -13.514479637145996

Token 563: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4320780634880066
    2. '           ' → logprob: -1.3070781230926514
    3. 'continue' → logprob: -3.1820781230926514
    4. ' continue' → logprob: -3.3070781230926514
    5. '	continue' → logprob: -6.682077884674072
    6. '   ' → logprob: -7.432077884674072
    7. '_continue' → logprob: -9.55707836151123
    8. ':' → logprob: -9.80707836151123
    9. '```' → logprob: -10.05707836151123
    10. ':
' → logprob: -10.43207836151123

Token 564: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.2823804020881653
    2. '           ' → logprob: -1.7823803424835205
    3. '       ' → logprob: -3.0323803424835205
    4. ' continue' → logprob: -3.5323803424835205
    5. '	continue' → logprob: -8.532380104064941
    6. '   ' → logprob: -9.407380104064941
    7. '```' → logprob: -10.532380104064941
    8. '               ' → logprob: -11.282380104064941
    9. '_continue' → logprob: -11.782380104064941
    10. '
' → logprob: -12.032380104064941

Token 565: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005558639764785767
    2. '<|end|>' → logprob: -5.630558490753174
    3. '   ' → logprob: -6.630558490753174
    4. ')' → logprob: -8.505558967590332
    5. '        
' → logprob: -9.130558967590332
    6. ' if' → logprob: -9.755558967590332
    7. '
' → logprob: -9.755558967590332
    8. '```' → logprob: -9.880558967590332
    9. 'if' → logprob: -10.130558967590332
    10. ',' → logprob: -10.380558967590332

Token 566: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07518525421619415
    2. '   ' → logprob: -2.7001852989196777
    3. '<|end|>' → logprob: -6.200185298919678
    4. '```' → logprob: -6.700185298919678
    5. 'if' → logprob: -7.700185298919678
    6. '
' → logprob: -7.700185298919678
    7. ' if' → logprob: -8.20018482208252
    8. '        
' → logprob: -8.32518482208252
    9. ')' → logprob: -8.82518482208252
    10. '    
' → logprob: -8.95018482208252

Token 567: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3215200901031494
    2. '       ' → logprob: -1.3215200901031494
    3. ' if' → logprob: -4.82151985168457
    4. '   ' → logprob: -9.07151985168457
    5. '        
' → logprob: -10.57151985168457
    6. '	if' → logprob: -10.94651985168457
    7. '+' → logprob: -12.57151985168457
    8. 'for' → logprob: -12.69651985168457
    9. '```' → logprob: -14.32151985168457
    10. '           ' → logprob: -14.44651985168457

Token 568: ' check' (ID: 2371)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -2.8802491215174086e-05
    2. '   ' → logprob: -11.625028610229492
    3. '       ' → logprob: -11.625028610229492
    4. ' if' → logprob: -11.750028610229492
    5. 'for' → logprob: -13.375028610229492
    6. '```' → logprob: -13.500028610229492
    7. '        
' → logprob: -17.125028610229492
    8. '           ' → logprob: -17.750028610229492
    9. '#' → logprob: -18.375028610229492
    10. '	if' → logprob: -18.500028610229492

Token 569: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5055204033851624
    2. 'y' → logprob: -1.2555203437805176
    3. ' if' → logprob: -2.5055203437805176
    4. ' y' → logprob: -3.5055203437805176
    5. '(y' → logprob: -8.755520820617676
    6. '```' → logprob: -10.880520820617676
    7. '
' → logprob: -11.005520820617676
    8. '   ' → logprob: -11.255520820617676
    9. 'for' → logprob: -12.130520820617676
    10. '`' → logprob: -13.755520820617676

Token 570: ' at' (ID: 540)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.16022595763206482
    2. ' y' → logprob: -1.9102259874343872
    3. '(y' → logprob: -13.410225868225098
    4. '   ' → logprob: -15.910225868225098
    5. '	y' → logprob: -15.910225868225098
    6. ' ' → logprob: -17.535226821899414
    7. ''y' → logprob: -17.910226821899414
    8. ')y' → logprob: -18.785226821899414
    9. '_y' → logprob: -19.160226821899414
    10. ' (' → logprob: -19.160226821899414

Token 571: ' last' (ID: 2174)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.3145295977592468
    2. 'y' → logprob: -1.3145296573638916
    3. ' H' → logprob: -7.1895294189453125
    4. ' y' → logprob: -8.439529418945312
    5. '(H' → logprob: -8.439529418945312
    6. '(y' → logprob: -9.814529418945312
    7. '0' → logprob: -11.564529418945312
    8. '(' → logprob: -12.439529418945312
    9. 'h' → logprob: -12.689529418945312
    10. ' (' → logprob: -12.814529418945312

Token 572: ' row' (ID: 5225)
  Prédit: ' row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' row' → logprob: -0.33366718888282776
    2. 'row' → logprob: -1.3336671590805054
    3. ' line' → logprob: -5.083667278289795
    4. ' layer' → logprob: -5.208667278289795
    5. ' y' → logprob: -6.208667278289795
    6. 'layer' → logprob: -6.333667278289795
    7. 'y' → logprob: -6.583667278289795
    8. 'line' → logprob: -6.833667278289795
    9. ' ' → logprob: -6.833667278289795
    10. '   ' → logprob: -8.208666801452637

Token 573: ' and' (ID: 326)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5466082692146301
    2. ' if' → logprob: -1.4216082096099854
    3. ' and' → logprob: -1.7966082096099854
    4. ' y' → logprob: -4.9216084480285645
    5. 'if' → logprob: -5.7966084480285645
    6. 'and' → logprob: -6.2966084480285645
    7. '   ' → logprob: -6.9216084480285645
    8. 'y' → logprob: -8.421607971191406
    9. ' (' → logprob: -8.921607971191406
    10. '           ' → logprob: -9.046607971191406

Token 574: ' o' (ID: 293)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.14472800493240356
    2. ' y' → logprob: -2.019727945327759
    3. '(y' → logprob: -6.394728183746338
    4. 'o' → logprob: -8.89472770690918
    5. ' (' → logprob: -9.01972770690918
    6. 'x' → logprob: -9.64472770690918
    7. ' o' → logprob: -10.76972770690918
    8. '(' → logprob: -11.64472770690918
    9. '(x' → logprob: -11.76972770690918
    10. '(o' → logprob: -12.01972770690918

Token 575: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.019696466624736786
    2. 'y' → logprob: -4.144696235656738
    3. '```' → logprob: -5.769696235656738
    4. '``' → logprob: -8.894696235656738
    5. '₂' → logprob: -8.894696235656738
    6. ' y' → logprob: -9.519696235656738
    7. '_' → logprob: -9.644696235656738
    8. 'xygen' → logprob: -10.769696235656738
    9. '`' → logprob: -11.019696235656738
    10. '   ' → logprob: -11.019696235656738

Token 576: '>' (ID: 29)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.5874659419059753
    2. '>' → logprob: -0.8374659419059753
    3. '2' → logprob: -5.962465763092041
    4. 'y' → logprob: -6.212465763092041
    5. '_left' → logprob: -6.587465763092041
    6. ' ==' → logprob: -7.087465763092041
    7. ' and' → logprob: -7.087465763092041
    8. '```' → logprob: -7.212465763092041
    9. '==' → logprob: -7.712465763092041
    10. '   ' → logprob: -7.962465763092041

Token 577: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.021267924457788467
    2. ' ' → logprob: -3.896267890930176
    3. '>' → logprob: -7.396267890930176
    4. '=' → logprob: -10.146267890930176
    5. ' >' → logprob: -10.646267890930176
    6. '1' → logprob: -10.896267890930176
    7. '```' → logprob: -11.521267890930176
    8. '   ' → logprob: -12.396267890930176
    9. '  ' → logprob: -12.896267890930176
    10. '``' → logprob: -13.208767890930176

Token 578: ' =>' (ID: 871)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.015986738726496696
    2. ' and' → logprob: -4.390986919403076
    3. '   ' → logprob: -6.390986919403076
    4. ' if' → logprob: -6.640986919403076
    5. 'and' → logprob: -8.640986442565918
    6. '```' → logprob: -9.390986442565918
    7. 'if' → logprob: -9.515986442565918
    8. ',' → logprob: -9.765986442565918
    9. '<|end|>' → logprob: -10.640986442565918
    10. ':' → logprob: -10.765986442565918

Token 579: ' success' (ID: 3505)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5095218420028687
    2. ' if' → logprob: -1.5095218420028687
    3. '   ' → logprob: -2.009521961212158
    4. 'res' → logprob: -3.634521961212158
    5. ' res' → logprob: -4.509521961212158
    6. '       ' → logprob: -5.009521961212158
    7. '           ' → logprob: -9.759521484375
    8. ' ' → logprob: -12.259521484375
    9. '  ' → logprob: -12.384521484375
    10. '    ' → logprob: -13.384521484375

Token 580: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0016862474149093032
    2. ' if' → logprob: -7.376686096191406
    3. '   ' → logprob: -7.751686096191406
    4. '<|end|>' → logprob: -7.876686096191406
    5. '```' → logprob: -9.001686096191406
    6. 'if' → logprob: -9.876686096191406
    7. '           ' → logprob: -10.751686096191406
    8. ',' → logprob: -11.376686096191406
    9. '        
' → logprob: -11.751686096191406
    10. ':' → logprob: -12.001686096191406

Token 581: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5477254390716553
    2. ' if' → logprob: -1.4227254390716553
    3. '   ' → logprob: -2.0477254390716553
    4. 'if' → logprob: -3.0477254390716553
    5. '```' → logprob: -5.672725677490234
    6. '           ' → logprob: -8.797725677490234
    7. '        
' → logprob: -9.047725677490234
    8. '
' → logprob: -9.172725677490234
    9. '<|end|>' → logprob: -9.422725677490234
    10. '    
' → logprob: -9.672725677490234

Token 582: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.14118286967277527
    2. ' if' → logprob: -2.1411828994750977
    3. '       ' → logprob: -4.391182899475098
    4. '   ' → logprob: -6.391182899475098
    5. '	if' → logprob: -9.391182899475098
    6. '           ' → logprob: -12.891182899475098
    7. ' ' → logprob: -13.016182899475098
    8. '    ' → logprob: -14.266182899475098
    9. '	   ' → logprob: -14.516182899475098
    10. '  ' → logprob: -14.641182899475098

Token 583: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.38687291741371155
    2. 'y' → logprob: -1.1368728876113892
    3. '(y' → logprob: -13.886873245239258
    4. '	y' → logprob: -14.386873245239258
    5. '   ' → logprob: -14.886873245239258
    6. '<|end|>' → logprob: -17.511873245239258
    7. ')y' → logprob: -18.386873245239258
    8. ' (' → logprob: -18.511873245239258
    9. ''y' → logprob: -19.386873245239258
    10. '       ' → logprob: -19.386873245239258

Token 584: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.25197774171829224
    2. '==' → logprob: -1.5019776821136475
    3. ')==' → logprob: -10.626977920532227
    4. '==(' → logprob: -11.626977920532227
    5. ']==' → logprob: -11.876977920532227
    6. ')' → logprob: -12.626977920532227
    7. '==
' → logprob: -13.251977920532227
    8. '```' → logprob: -14.126977920532227
    9. '()==' → logprob: -14.376977920532227
    10. '===' → logprob: -14.376977920532227

Token 585: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -1.723973582556937e-05
    2. ' H' → logprob: -11.000017166137695
    3. '   ' → logprob: -14.625017166137695
    4. '(H' → logprob: -16.625017166137695
    5. '	H' → logprob: -18.875017166137695
    6. '
' → logprob: -20.125017166137695
    7. ' ' → logprob: -20.375017166137695
    8. '       ' → logprob: -20.625017166137695
    9. '  ' → logprob: -20.875017166137695
    10. 'Hx' → logprob: -21.375017166137695

Token 586: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.12692862749099731
    2. ' -' → logprob: -2.1269285678863525
    3. ' ' → logprob: -15.126928329467773
    4. '()-' → logprob: -16.876928329467773
    5. '   ' → logprob: -17.126928329467773
    6. '1' → logprob: -17.251928329467773
    7. '<|end|>' → logprob: -17.876928329467773
    8. '−' → logprob: -18.126928329467773
    9. ' ' → logprob: -18.751928329467773
    10. '–' → logprob: -18.876928329467773

Token 587: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.246537173457909e-06
    2. ' ' → logprob: -12.625003814697266
    3. '```' → logprob: -15.125003814697266
    4. '
' → logprob: -15.750003814697266
    5. '2' → logprob: -15.750003814697266
    6. '   ' → logprob: -16.125003814697266
    7. '-' → logprob: -17.437503814697266
    8. '`' → logprob: -17.875003814697266
    9. '<|end|>' → logprob: -17.875003814697266
    10. '``' → logprob: -18.875003814697266

Token 588: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.029478292912244797
    2. 'and' → logprob: -3.6544783115386963
    3. ':' → logprob: -6.029478073120117
    4. ':
' → logprob: -7.279478073120117
    5. '   ' → logprob: -10.529478073120117
    6. '       ' → logprob: -11.154478073120117
    7. ' ' → logprob: -11.279478073120117
    8. ' :' → logprob: -11.779478073120117
    9. '<|end|>' → logprob: -12.279478073120117
    10. '	and' → logprob: -12.779478073120117

Token 589: ' o' (ID: 293)
  Prédit: 'o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'o' → logprob: -0.014978357590734959
    2. ' o' → logprob: -4.639978408813477
    3. '(o' → logprob: -5.389978408813477
    4. 'res' → logprob: -7.764978408813477
    5. 'cost' → logprob: -9.139978408813477
    6. ' res' → logprob: -9.889978408813477
    7. ' (' → logprob: -10.764978408813477
    8. '(res' → logprob: -11.514978408813477
    9. '(cost' → logprob: -11.764978408813477
    10. ' cost' → logprob: -11.764978408813477

Token 590: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0001549089647596702
    2. '>' → logprob: -9.250154495239258
    3. '_' → logprob: -10.750154495239258
    4. ' ' → logprob: -11.250154495239258
    5. ' >' → logprob: -11.625154495239258
    6. '
' → logprob: -12.250154495239258
    7. '```' → logprob: -13.375154495239258
    8. '`' → logprob: -13.375154495239258
    9. ' _' → logprob: -13.500154495239258
    10. '``' → logprob: -13.750154495239258

Token 591: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.05491185188293457
    2. ' >' → logprob: -2.9299118518829346
    3. ' ' → logprob: -11.554911613464355
    4. ')' → logprob: -12.304911613464355
    5. ')>' → logprob: -12.679911613464355
    6. '">' → logprob: -12.929911613464355
    7. ' ' → logprob: -13.179911613464355
    8. '[' → logprob: -13.804911613464355
    9. '>
' → logprob: -13.804911613464355
    10. '.' → logprob: -14.179911613464355

Token 592: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0004884536610916257
    2. ' ' → logprob: -7.62548828125
    3. '
' → logprob: -15.62548828125
    4. '<|end|>' → logprob: -16.50048828125
    5. '   ' → logprob: -16.87548828125
    6. '  ' → logprob: -17.18798828125
    7. '۰' → logprob: -17.18798828125
    8. '=' → logprob: -17.75048828125
    9. '>' → logprob: -17.93798828125
    10. '```' → logprob: -18.12548828125

Token 593: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.130576806142926e-05
    2. ' ' → logprob: -10.375031471252441
    3. '1' → logprob: -18.375030517578125
    4. '
' → logprob: -18.500030517578125
    5. '```' → logprob: -18.500030517578125
    6. '   ' → logprob: -19.250030517578125
    7. '۰' → logprob: -19.312530517578125
    8. ' ' → logprob: -19.562530517578125
    9. '  ' → logprob: -19.625030517578125
    10. 'f' → logprob: -19.687530517578125

Token 594: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.02070082537829876
    2. ':' → logprob: -3.8957009315490723
    3. '       ' → logprob: -9.645700454711914
    4. ' and' → logprob: -9.645700454711914
    5. ':
' → logprob: -11.395700454711914
    6. '   ' → logprob: -11.520700454711914
    7. '):
' → logprob: -12.645700454711914
    8. ':

' → logprob: -13.145700454711914
    9. ' :
' → logprob: -13.645700454711914
    10. 'and' → logprob: -14.020700454711914

Token 595: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0810304656624794
    2. '           ' → logprob: -2.5810303688049316
    3. '   ' → logprob: -7.081030368804932
    4. '
' → logprob: -7.206030368804932
    5. ':
' → logprob: -8.20603084564209
    6. ':' → logprob: -9.45603084564209
    7. '<|end|>' → logprob: -9.95603084564209
    8. '```' → logprob: -10.58103084564209
    9. '    
' → logprob: -10.95603084564209
    10. ',' → logprob: -11.08103084564209

Token 596: ' if' (ID: 538)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -2.6776029699249193e-05
    2. ' res' → logprob: -11.00002670288086
    3. '           ' → logprob: -12.50002670288086
    4. '   ' → logprob: -12.50002670288086
    5. '       ' → logprob: -13.00002670288086
    6. 'if' (adapté à ' if') → logprob: -15.37502670288086
    7. '
' → logprob: -16.62502670288086
    8. '	res' → logprob: -17.62502670288086
    9. '               ' → logprob: -17.75002670288086
    10. '_res' → logprob: -19.50002670288086

Token 597: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.001967412419617176
    2. ' res' → logprob: -6.251967430114746
    3. '   ' → logprob: -10.376967430114746
    4. '           ' → logprob: -12.501967430114746
    5. '(res' → logprob: -14.001967430114746
    6. '  ' → logprob: -14.251967430114746
    7. '	res' → logprob: -14.251967430114746
    8. ' ' → logprob: -14.501967430114746
    9. '               ' → logprob: -14.626967430114746
    10. '       ' → logprob: -16.12696647644043

Token 598: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.0022192494943737984
    2. 'is' → logprob: -6.127219200134277
    3. '=' → logprob: -10.752219200134277
    4. ' =' → logprob: -12.002219200134277
    5. ' ' → logprob: -13.502219200134277
    6. '	is' → logprob: -13.502219200134277
    7. ' >' → logprob: -14.002219200134277
    8. '[' → logprob: -14.377219200134277
    9. '>' → logprob: -14.502219200134277
    10. ' i' → logprob: -15.002219200134277

Token 599: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.1269456297159195
    2. ' None' → logprob: -2.126945734024048
    3. 'cost' → logprob: -11.876945495605469
    4. '   ' → logprob: -12.501945495605469
    5. 'res' → logprob: -13.001945495605469
    6. 'none' → logprob: -13.376945495605469
    7. ' cost' → logprob: -13.501945495605469
    8. 'not' → logprob: -14.626945495605469
    9. '  ' → logprob: -15.376945495605469
    10. '_None' → logprob: -15.501945495605469

Token 600: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.0010825905483216047
    2. 'or' → logprob: -6.876082420349121
    3. '           ' → logprob: -10.626082420349121
    4. '               ' → logprob: -11.376082420349121
    5. '	or' → logprob: -12.001082420349121
    6. ':' → logprob: -13.001082420349121
    7. ' ' → logprob: -13.126082420349121
    8. '            ' → logprob: -13.876082420349121
    9. '=' → logprob: -14.626082420349121
    10. '              ' → logprob: -14.876082420349121

Token 601: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.014248126186430454
    2. ' cost' → logprob: -4.264247894287109
    3. 'res' → logprob: -9.51424789428711
    4. '   ' → logprob: -11.76424789428711
    5. ' res' → logprob: -13.26424789428711
    6. '(cost' → logprob: -14.63924789428711
    7. ' ' → logprob: -15.01424789428711
    8. '  ' → logprob: -15.38924789428711
    9. '_cost' → logprob: -16.38924789428711
    10. '     ' → logprob: -16.38924789428711

Token 602: ' <' (ID: 464)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.7726323008537292
    2. ' <' → logprob: -1.522632360458374
    3. '<' → logprob: -1.772632360458374
    4. '>' → logprob: -1.897632360458374
    5. '   ' → logprob: -9.522632598876953
    6. '[' → logprob: -10.647632598876953
    7. ' ' → logprob: -10.897632598876953
    8. '><' → logprob: -11.022632598876953
    9. '<int' → logprob: -11.147632598876953
    10. '```' → logprob: -11.397632598876953

Token 603: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.00020354038861114532
    2. ' res' → logprob: -8.500203132629395
    3. 'cost' → logprob: -17.25020408630371
    4. '	res' → logprob: -20.62520408630371
    5. 'r' → logprob: -20.87520408630371
    6. '
' → logprob: -22.12520408630371
    7. '_res' → logprob: -22.25020408630371
    8. '   ' → logprob: -22.87520408630371
    9. '=res' → logprob: -22.87520408630371
    10. ' cost' → logprob: -23.25020408630371

Token 604: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03071691282093525
    2. ':
' → logprob: -3.530716896057129
    3. '=' → logprob: -7.280716896057129
    4. '):' → logprob: -9.280716896057129
    5. '       ' → logprob: -9.780716896057129
    6. ')' → logprob: -10.030716896057129
    7. '):
' → logprob: -10.155716896057129
    8. '           ' → logprob: -11.780716896057129
    9. ' =' → logprob: -12.030716896057129
    10. '   ' → logprob: -12.030716896057129

Token 605: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.006310673896223307
    2. '           ' → logprob: -5.38131046295166
    3. 'res' → logprob: -6.63131046295166
    4. ' res' → logprob: -8.38131046295166
    5. '                   ' → logprob: -10.25631046295166
    6. ':
' → logprob: -10.38131046295166
    7. '                       ' → logprob: -11.13131046295166
    8. '   ' → logprob: -11.75631046295166
    9. '       ' → logprob: -11.75631046295166
    10. '              ' → logprob: -11.88131046295166

Token 606: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -0.023960711434483528
    2. ' res' → logprob: -3.773960828781128
    3. '               ' → logprob: -7.398960590362549
    4. '                   ' → logprob: -9.273961067199707
    5. '   ' → logprob: -12.273961067199707
    6. '	res' → logprob: -13.273961067199707
    7. '                       ' → logprob: -13.898961067199707
    8. '           ' → logprob: -14.148961067199707
    9. '
' → logprob: -14.273961067199707
    10. '```' → logprob: -15.773961067199707

Token 607: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.004087066277861595
    2. ' =' → logprob: -5.504086971282959
    3. '＝' → logprob: -13.254087448120117
    4. '=int' → logprob: -13.504087448120117
    5. '=
' → logprob: -13.754087448120117
    6. '=cv' → logprob: -14.254087448120117
    7. '=com' → logprob: -14.504087448120117
    8. '=cut' → logprob: -14.754087448120117
    9. '=create' → logprob: -15.004087448120117
    10. '=re' → logprob: -15.379087448120117

Token 608: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.006715728435665369
    2. ' cost' → logprob: -5.006715774536133
    3. '_cost' → logprob: -16.506715774536133
    4. '(cost' → logprob: -16.631715774536133
    5. 'co' → logprob: -17.256715774536133
    6. '   ' → logprob: -17.631715774536133
    7. '-cost' → logprob: -17.631715774536133
    8. 'Cost' → logprob: -17.756715774536133
    9. 'code' → logprob: -18.131715774536133
    10. '
' → logprob: -18.506715774536133

Token 609: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03530138358473778
    2. '           ' → logprob: -3.660301446914673
    3. '               ' → logprob: -5.535301208496094
    4. ' continue' → logprob: -5.785301208496094
    5. 'continue' → logprob: -7.160301208496094
    6. '   ' → logprob: -7.910301208496094
    7. '
' → logprob: -8.035301208496094
    8. '<|end|>' → logprob: -8.660301208496094
    9. '	continue' → logprob: -9.410301208496094
    10. '        
' → logprob: -9.660301208496094

Token 610: '               ' (ID: 506)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02613273449242115
    2. 'continue' → logprob: -4.901132583618164
    3. ' continue' → logprob: -4.901132583618164
    4. '   ' → logprob: -5.026132583618164
    5. '           ' → logprob: -6.026132583618164
    6. '               ' → logprob: -7.401132583618164
    7. '<|end|>' → logprob: -8.526132583618164
    8. '_continue' → logprob: -8.651132583618164
    9. '
' → logprob: -8.776132583618164
    10. 'for' → logprob: -8.901132583618164

Token 611: ' #' (ID: 1069)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.005550932139158249
    2. ' break' → logprob: -5.505550861358643
    3. 'continue' → logprob: -6.880550861358643
    4. '               ' → logprob: -8.6305513381958
    5. '           ' → logprob: -9.0055513381958
    6. '```' → logprob: -9.6305513381958
    7. 'if' → logprob: -10.8805513381958
    8. '#' (adapté à ' #') → logprob: -11.3805513381958
    9. ' continue' → logprob: -11.5055513381958
    10. 'print' → logprob: -11.5055513381958

Token 612: ' minimal' (ID: 19957)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.004300034139305353
    2. 'continue' → logprob: -6.004300117492676
    3. 'if' → logprob: -6.504300117492676
    4. ' break' → logprob: -8.754300117492676
    5. '#' → logprob: -9.129300117492676
    6. '           ' → logprob: -11.004300117492676
    7. '```' → logprob: -11.254300117492676
    8. '               ' → logprob: -11.379300117492676
    9. '   ' → logprob: -11.879300117492676
    10. '       ' → logprob: -12.504300117492676

Token 613: ' cost' (ID: 3097)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.05792452022433281
    2. 'break' → logprob: -3.182924509048462
    3. ' continue' → logprob: -4.682924747467041
    4. 'res' → logprob: -5.932924747467041
    5. '#' → logprob: -6.932924747467041
    6. 'if' → logprob: -7.682924747467041
    7. ' break' → logprob: -7.807924747467041
    8. 'print' → logprob: -8.057924270629883
    9. 'possible' → logprob: -8.557924270629883
    10. 'import' → logprob: -9.057924270629883

Token 614: ' found' (ID: 2491)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.672643780708313
    2. 'break' → logprob: -1.672643780708313
    3. '               ' → logprob: -1.672643780708313
    4. '           ' → logprob: -2.9226436614990234
    5. ' continue' → logprob: -3.6726436614990234
    6. '       ' → logprob: -3.7976436614990234
    7. ' break' → logprob: -5.422643661499023
    8. 'if' → logprob: -5.797643661499023
    9. '   ' → logprob: -7.297643661499023
    10. '	continue' → logprob: -7.422643661499023

Token 615: ',' (ID: 11)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.04040162265300751
    2. 'continue' → logprob: -4.290401458740234
    3. '           ' → logprob: -4.540401458740234
    4. '       ' → logprob: -4.540401458740234
    5. ' continue' → logprob: -5.790401458740234
    6. 'break' → logprob: -7.040401458740234
    7. '   ' → logprob: -8.040401458740234
    8. ' break' → logprob: -9.040401458740234
    9. '
' → logprob: -9.665401458740234
    10. ',' → logprob: -10.040401458740234

Token 616: ' but' (ID: 889)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.0012472548987716436
    2. ' break' → logprob: -7.001247406005859
    3. '               ' → logprob: -8.50124740600586
    4. '           ' → logprob: -10.00124740600586
    5. 'continue' → logprob: -10.37624740600586
    6. '   ' → logprob: -10.50124740600586
    7. '       ' → logprob: -11.12624740600586
    8. '#' → logprob: -11.87624740600586
    9. '```' → logprob: -12.87624740600586
    10. '	break' → logprob: -13.25124740600586

Token 617: ' maybe' (ID: 10112)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.21376614272594452
    2. 'continue' → logprob: -1.713766098022461
    3. '#' → logprob: -5.338766098022461
    4. '               ' → logprob: -5.838766098022461
    5. ' continue' → logprob: -6.213766098022461
    6. ' break' → logprob: -6.588766098022461
    7. '   ' → logprob: -7.213766098022461
    8. '           ' → logprob: -8.213766098022461
    9. '```' → logprob: -10.213766098022461
    10. '       ' → logprob: -10.213766098022461

Token 618: ' better' (ID: 3432)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.05423671752214432
    2. ' continue' → logprob: -3.304236650466919
    3. 'break' → logprob: -4.304236888885498
    4. 'not' → logprob: -7.054236888885498
    5. ' break' → logprob: -8.05423641204834
    6. 'we' → logprob: -8.17923641204834
    7. ' not' → logprob: -8.67923641204834
    8. '   ' → logprob: -8.80423641204834
    9. 'still' → logprob: -9.05423641204834
    10. 'better' → logprob: -9.30423641204834

Token 619: '?
' (ID: 3901)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.594469428062439
    2. 'continue' → logprob: -1.094469428062439
    3. '       ' → logprob: -2.7194695472717285
    4. ',' → logprob: -4.4694695472717285
    5. ' to' → logprob: -4.5944695472717285
    6. '           ' → logprob: -4.7194695472717285
    7. '   ' → logprob: -5.2194695472717285
    8. '               ' → logprob: -6.0944695472717285
    9. '
' → logprob: -6.3444695472717285
    10. '<|end|>' → logprob: -6.8444695472717285

Token 620: '               ' (ID: 506)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5316939949989319
    2. '           ' → logprob: -2.031693935394287
    3. '               ' → logprob: -2.406693935394287
    4. 'continue' → logprob: -2.406693935394287
    5. ' continue' → logprob: -2.531693935394287
    6. '   ' → logprob: -4.031693935394287
    7. 'for' → logprob: -6.781693935394287
    8. '
' → logprob: -7.031693935394287
    9. ' for' → logprob: -7.531693935394287
    10. '#' → logprob: -7.781693935394287

Token 621: ' #' (ID: 1069)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.5149241089820862
    2. ' continue' → logprob: -1.1399240493774414
    3. '       ' → logprob: -3.2649240493774414
    4. '               ' → logprob: -3.5149240493774414
    5. '           ' → logprob: -4.514924049377441
    6. '   ' → logprob: -6.139924049377441
    7. '#' (adapté à ' #') → logprob: -7.139924049377441
    8. 'for' → logprob: -8.264924049377441
    9. 'break' → logprob: -8.764924049377441
    10. '
' → logprob: -9.889924049377441

Token 622: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.16677936911582947
    2. '   ' → logprob: -2.7917792797088623
    3. ' continue' → logprob: -2.7917792797088623
    4. '       ' → logprob: -4.291779518127441
    5. 'break' → logprob: -4.291779518127441
    6. '           ' → logprob: -6.416779518127441
    7. '#' → logprob: -7.416779518127441
    8. '
' → logprob: -7.916779518127441
    9. 'pass' → logprob: -8.541779518127441
    10. ' break' → logprob: -8.541779518127441

Token 623: ' to' (ID: 316)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1875026822090149
    2. '           ' → logprob: -2.43750262260437
    3. 'continue' → logprob: -3.31250262260437
    4. '               ' → logprob: -3.56250262260437
    5. ' continue' → logprob: -4.437502861022949
    6. '   ' → logprob: -5.187502861022949
    7. '
' → logprob: -7.687502861022949
    8. 'for' → logprob: -7.937502861022949
    9. '        
' → logprob: -8.68750286102295
    10. ' for' → logprob: -9.18750286102295

Token 624: ' find' (ID: 1646)
  Prédit: 'search'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'search' → logprob: -0.6156380772590637
    2. 'find' → logprob: -1.365638017654419
    3. 'expl' → logprob: -2.490638017654419
    4. 'continue' → logprob: -2.990638017654419
    5. 'heap' → logprob: -3.240638017654419
    6. 'pop' → logprob: -5.115638256072998
    7. 'break' → logprob: -5.365638256072998
    8. '   ' → logprob: -5.365638256072998
    9. 'check' → logprob: -5.740638256072998
    10. 'try' → logprob: -5.865638256072998

Token 625: ' better' (ID: 3432)
  Prédit: 'better'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'better' → logprob: -1.2710950374603271
    2. '       ' → logprob: -1.5210950374603271
    3. '           ' → logprob: -2.146095037460327
    4. '
' → logprob: -2.646095037460327
    5. '               ' → logprob: -2.771095037460327
    6. '   ' → logprob: -3.146095037460327
    7. 'next' → logprob: -3.146095037460327
    8. 'continue' → logprob: -3.271095037460327
    9. 'other' → logprob: -3.646095037460327
    10. 'possible' → logprob: -4.021095275878906

Token 626: ' cost' (ID: 3097)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.42230215668678284
    2. ' continue' → logprob: -1.9223021268844604
    3. '
' → logprob: -2.29730224609375
    4. '       ' → logprob: -3.29730224609375
    5. '   ' → logprob: -3.42230224609375
    6. '<|end|>' → logprob: -4.04730224609375
    7. '           ' → logprob: -6.67230224609375
    8. '_continue' → logprob: -6.79730224609375
    9. '	continue' → logprob: -6.92230224609375
    10. ' ' → logprob: -7.04730224609375

Token 627: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06376674771308899
    2. 'continue' → logprob: -3.4387667179107666
    3. ' continue' → logprob: -3.9387667179107666
    4. '   ' → logprob: -5.313766956329346
    5. '           ' → logprob: -5.688766956329346
    6. '               ' → logprob: -7.188766956329346
    7. '	continue' → logprob: -7.438766956329346
    8. '        
' → logprob: -8.938766479492188
    9. '
' → logprob: -9.688766479492188
    10. '<|end|>' → logprob: -9.813766479492188

Token 628: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008149385452270508
    2. '
' → logprob: -5.758149147033691
    3. '   ' → logprob: -6.133149147033691
    4. ' continue' → logprob: -7.008149147033691
    5. 'continue' → logprob: -7.633149147033691
    6. ' for' → logprob: -7.758149147033691
    7. '        
' → logprob: -8.258149147033691
    8. 'for' → logprob: -8.383149147033691
    9. '           ' → logprob: -8.758149147033691
    10. '<|end|>' → logprob: -9.133149147033691

Token 629: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.5799937844276428
    2. ' for' → logprob: -1.454993724822998
    3. '       ' → logprob: -1.579993724822998
    4. '   ' → logprob: -8.204994201660156
    5. '        
' → logprob: -8.329994201660156
    6. '	for' → logprob: -9.704994201660156
    7. 'if' → logprob: -9.829994201660156
    8. '
' → logprob: -10.329994201660156
    9. ' 
' → logprob: -11.204994201660156
    10. ' if' → logprob: -11.454994201660156

Token 630: ' dir' (ID: 5609)
  Prédit: 'dir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dir' → logprob: -0.9859048128128052
    2. 'i' → logprob: -1.2359048128128052
    3. 'd' → logprob: -1.8609048128128052
    4. 'dx' → logprob: -2.1109046936035156
    5. ' dir' → logprob: -3.1109046936035156
    6. ' i' → logprob: -4.985904693603516
    7. ' dx' → logprob: -5.360904693603516
    8. ' d' → logprob: -6.360904693603516
    9. 'direction' → logprob: -6.735904693603516
    10. 'k' → logprob: -8.610904693603516

Token 631: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.5830078721046448
    2. '_x' → logprob: -1.5830078125
    3. 'x' → logprob: -2.3330078125
    4. '_idx' → logprob: -2.5830078125
    5. '_' → logprob: -3.2080078125
    6. '_dx' → logprob: -5.0830078125
    7. ' ' → logprob: -5.3330078125
    8. ',' → logprob: -5.8330078125
    9. 'dx' → logprob: -5.8330078125
    10. ' ,' → logprob: -6.4580078125

Token 632: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.023257357999682426
    2. ' range' → logprob: -3.773257255554199
    3. '[' → logprob: -11.5232572555542
    4. ' ' → logprob: -14.3982572555542
    5. '0' → logprob: -14.5232572555542
    6. 'dx' → logprob: -15.1482572555542
    7. ' [' → logprob: -15.5232572555542
    8. '(range' → logprob: -15.7732572555542
    9. '1' → logprob: -16.023258209228516
    10. 'in' → logprob: -16.273258209228516

Token 633: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.28152304887771606
    2. '3' → logprob: -1.4065229892730713
    3. '(len' → logprob: -8.781522750854492
    4. ' (' → logprob: -8.906522750854492
    5. '(
' → logprob: -9.656522750854492
    6. 'len' → logprob: -11.656522750854492
    7. '```' → logprob: -12.781522750854492
    8. ' ' → logprob: -12.781522750854492
    9. '   ' → logprob: -13.406522750854492
    10. ',' → logprob: -13.531522750854492

Token 634: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -2.1008713702030946e-06
    2. ' ' → logprob: -13.375001907348633
    3. 'len' → logprob: -15.250001907348633
    4. ')' → logprob: -16.375001907348633
    5. '   ' → logprob: -16.500001907348633
    6. '```' → logprob: -16.500001907348633
    7. '0' → logprob: -19.250001907348633
    8. '       ' → logprob: -19.875001907348633
    9. '۳' → logprob: -20.062501907348633
    10. '' → logprob: -20.187501907348633

Token 635: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.0076819853857159615
    2. '):' → logprob: -4.882681846618652
    3. '   ' → logprob: -9.882681846618652
    4. '       ' → logprob: -11.507681846618652
    5. '):
' → logprob: -11.632681846618652
    6. ' ):
' → logprob: -12.632681846618652
    7. '):

' → logprob: -14.382681846618652
    8. ':
' → logprob: -14.632681846618652
    9. ')' → logprob: -14.757681846618652
    10. ' ' → logprob: -15.007681846618652

Token 636: '           ' (ID: 352)
  Prédit: ' nx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nx' → logprob: -0.3345176577568054
    2. '       ' → logprob: -2.20951771736145
    3. ' x' → logprob: -3.33451771736145
    4. '           ' → logprob: -3.58451771736145
    5. 'nx' → logprob: -3.70951771736145
    6. '   ' → logprob: -3.83451771736145
    7. '(nx' → logprob: -4.334517478942871
    8. ',' → logprob: -5.084517478942871
    9. '
' → logprob: -5.209517478942871
    10. 'x' → logprob: -5.834517478942871

Token 637: ' nx' (ID: 50118)
  Prédit: ' nx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nx' → logprob: -0.06203692406415939
    2. 'nx' (adapté à ' nx') → logprob: -2.8120369911193848
    3. ' dx' → logprob: -10.687036514282227
    4. 'dx' → logprob: -11.187036514282227
    5. ' ' → logprob: -12.187036514282227
    6. '(nx' → logprob: -12.187036514282227
    7. '
' → logprob: -12.437036514282227
    8. '           ' → logprob: -12.562036514282227
    9. ' new' → logprob: -12.562036514282227
    10. ' ny' → logprob: -12.937036514282227

Token 638: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.18102779984474182
    2. '=' → logprob: -1.8060277700424194
    3. ',' → logprob: -6.931027889251709
    4. '=x' → logprob: -9.43102741241455
    5. '=n' → logprob: -9.68102741241455
    6. ' ,' → logprob: -10.05602741241455
    7. ',n' → logprob: -10.43102741241455
    8. ',x' → logprob: -10.55602741241455
    9. ' =
' → logprob: -11.43102741241455
    10. '=int' → logprob: -11.68102741241455

Token 639: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0007099286303855479
    2. ' x' → logprob: -7.2507100105285645
    3. ' ' → logprob: -19.750709533691406
    4. '	x' → logprob: -19.750709533691406
    5. ')x' → logprob: -20.000709533691406
    6. '```' → logprob: -21.125709533691406
    7. '"x' → logprob: -21.875709533691406
    8. '   ' → logprob: -22.375709533691406
    9. '(x' → logprob: -22.750709533691406
    10. '`' → logprob: -22.750709533691406

Token 640: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.3870008885860443
    2. '+' → logprob: -1.1370009183883667
    3. '+d' → logprob: -9.512001037597656
    4. ' +
' → logprob: -11.137001037597656
    5. '+x' → logprob: -11.137001037597656
    6. '+
' → logprob: -11.512001037597656
    7. 'dx' → logprob: -12.262001037597656
    8. ' dx' → logprob: -12.387001037597656
    9. '+n' → logprob: -13.012001037597656
    10. ' ' → logprob: -13.387001037597656

Token 641: ' dx' (ID: 29472)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.0015024791937321424
    2. ' dx' → logprob: -6.501502513885498
    3. 'd' → logprob: -16.626502990722656
    4. '(dx' → logprob: -17.376502990722656
    5. '
' → logprob: -18.501502990722656
    6. '1' → logprob: -18.626502990722656
    7. '[' → logprob: -18.751502990722656
    8. ' ' → logprob: -19.251502990722656
    9. 'DX' → logprob: -19.501502990722656
    10. '   ' → logprob: -19.626502990722656

Token 642: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0011714138090610504
    2. '[' → logprob: -6.751171588897705
    3. ' s' → logprob: -14.501171112060547
    4. 'dir' → logprob: -15.501171112060547
    5. '```' → logprob: -15.501171112060547
    6. 'S' → logprob: -15.876171112060547
    7. '=' → logprob: -16.626171112060547
    8. '   ' → logprob: -17.501171112060547
    9. '
' → logprob: -17.501171112060547
    10. ''s' → logprob: -17.626171112060547

Token 643: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.2664456789934775e-06
    2. 'dir' → logprob: -13.625000953674316
    3. '[
' → logprob: -19.000001907348633
    4. ' [' → logprob: -19.875001907348633
    5. '```' → logprob: -19.875001907348633
    6. '(dir' → logprob: -20.000001907348633
    7. ' dir' → logprob: -21.000001907348633
    8. '   ' → logprob: -21.125001907348633
    9. '	dir' → logprob: -22.750001907348633
    10. '
' → logprob: -22.750001907348633

Token 644: 'dir' (ID: 6457)
  Prédit: 'dir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dir' → logprob: -2.339278580620885e-06
    2. ' dir' → logprob: -13.250001907348633
    3. '[' → logprob: -14.875001907348633
    4. '(dir' → logprob: -16.125001907348633
    5. ']' → logprob: -18.000001907348633
    6. '1' → logprob: -18.625001907348633
    7. '   ' → logprob: -19.125001907348633
    8. '```' → logprob: -19.250001907348633
    9. '	dir' → logprob: -19.375001907348633
    10. '`' → logprob: -20.000001907348633

Token 645: ']
' (ID: 1592)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.592004656791687
    2. ')' → logprob: -1.342004656791687
    3. ']
' → logprob: -1.967004656791687
    4. ']' → logprob: -3.0920047760009766
    5. '<|end|>' → logprob: -10.467004776000977
    6. '           ' → logprob: -10.842004776000977
    7. '[
' → logprob: -10.967004776000977
    8. ')
' → logprob: -11.217004776000977
    9. '       ' → logprob: -11.592004776000977
    10. '[n' → logprob: -11.592004776000977

Token 646: '           ' (ID: 352)
  Prédit: ' ny'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ny' → logprob: -0.6287141442298889
    2. 'ny' → logprob: -1.3787140846252441
    3. '
' → logprob: -3.003714084625244
    4. '           ' → logprob: -3.128714084625244
    5. '            
' → logprob: -3.753714084625244
    6. '<|end|>' → logprob: -4.128714084625244
    7. 'n' → logprob: -4.253714084625244
    8. ' ' → logprob: -4.253714084625244
    9. '            ' → logprob: -4.503714084625244
    10. ' 
' → logprob: -4.628714084625244

Token 647: ' ny' (ID: 4423)
  Prédit: 'ny'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ny' (adapté à ' ny') → logprob: -2.7968066206085496e-05
    2. ' ny' → logprob: -10.500027656555176
    3. 'n' → logprob: -15.000027656555176
    4. '
' → logprob: -17.375028610229492
    5. 'nyi' → logprob: -17.875028610229492
    6. 'nym' → logprob: -19.500028610229492
    7. 'NY' → logprob: -19.500028610229492
    8. 'nyt' → logprob: -20.000028610229492
    9. '```' → logprob: -20.000028610229492
    10. 'ney' → logprob: -20.375028610229492

Token 648: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31327077746391296
    2. ' =' → logprob: -1.3132708072662354
    3. '=
' → logprob: -12.063270568847656
    4. ' =
' → logprob: -13.063270568847656
    5. '<|end|>' → logprob: -15.438270568847656
    6. '=int' → logprob: -16.063270568847656
    7. '=n' → logprob: -16.313270568847656
    8. '＝' → logprob: -16.313270568847656
    9. ' ' → logprob: -16.313270568847656
    10. ')' → logprob: -16.688270568847656

Token 649: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0019286326132714748
    2. ' y' → logprob: -6.251928806304932
    3. '	y' → logprob: -18.376928329467773
    4. '   ' → logprob: -18.751928329467773
    5. ' ' → logprob: -21.126928329467773
    6. '  ' → logprob: -21.876928329467773
    7. ')y' → logprob: -22.001928329467773
    8. '(y' → logprob: -22.126928329467773
    9. '<|end|>' → logprob: -22.126928329467773
    10. '`' → logprob: -22.876928329467773

Token 650: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6931645274162292
    2. ' +' → logprob: -0.6931645274162292
    3. '+
' → logprob: -12.068164825439453
    4. '<|end|>' → logprob: -12.443164825439453
    5. ' +
' → logprob: -12.568164825439453
    6. '=' → logprob: -13.568164825439453
    7. '+=' → logprob: -14.693164825439453
    8. ' ' → logprob: -14.693164825439453
    9. ' +=' → logprob: -14.943164825439453
    10. '[' → logprob: -14.943164825439453

Token 651: ' dys' (ID: 23264)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.021687619388103485
    2. '1' → logprob: -3.8966875076293945
    3. ' dys' → logprob: -6.8966875076293945
    4. ' ' → logprob: -9.146687507629395
    5. 'dy' → logprob: -11.271687507629395
    6. '\d' → logprob: -12.896687507629395
    7. '   ' → logprob: -12.896687507629395
    8. '	d' → logprob: -13.146687507629395
    9. 'dym' → logprob: -13.396687507629395
    10. ' d' → logprob: -13.896687507629395

Token 652: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: 0.0
    2. '```' → logprob: -17.125
    3. '[
' → logprob: -19.5
    4. '\[' → logprob: -21.0
    5. ' [' → logprob: -21.25
    6. '
' → logprob: -21.25
    7. '`' → logprob: -21.875
    8. '``' → logprob: -22.0
    9. '   ' → logprob: -22.375
    10. '][' → logprob: -22.75

Token 653: 'dir' (ID: 6457)
  Prédit: 'dir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dir' → logprob: -7.636475493200123e-05
    2. '[' → logprob: -9.500076293945312
    3. ' dir' → logprob: -14.125076293945312
    4. '(dir' → logprob: -14.125076293945312
    5. ']' → logprob: -19.125076293945312
    6. '][' → logprob: -19.750076293945312
    7. '```' → logprob: -19.875076293945312
    8. '	dir' → logprob: -20.000076293945312
    9. '   ' → logprob: -20.750076293945312
    10. 'dict' → logprob: -20.750076293945312

Token 654: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.1636512726545334
    2. ']
' → logprob: -1.9136512279510498
    3. ')' → logprob: -6.038651466369629
    4. ')
' → logprob: -8.038651466369629
    5. ')]' → logprob: -8.288651466369629
    6. ']
' → logprob: -9.288651466369629
    7. '[' → logprob: -9.663651466369629
    8. ']

' → logprob: -9.788651466369629
    9. '])' → logprob: -9.913651466369629
    10. '<|end|>' → logprob: -10.038651466369629

Token 655: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5974191427230835
    2. '```' → logprob: -1.8474191427230835
    3. ' if' → logprob: -2.472419261932373
    4. '   ' → logprob: -2.472419261932373
    5. '<|end|>' → logprob: -3.347419261932373
    6. '       ' → logprob: -3.347419261932373
    7. 'if' → logprob: -3.472419261932373
    8. '            
' → logprob: -4.972419261932373
    9. '    
' → logprob: -5.472419261932373
    10. '	if' → logprob: -6.597419261932373

Token 656: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.44198930263519287
    2. ' if' → logprob: -1.0669893026351929
    3. '   ' → logprob: -5.566989421844482
    4. '           ' → logprob: -5.816989421844482
    5. '
' → logprob: -6.066989421844482
    6. '       ' → logprob: -6.816989421844482
    7. '```' → logprob: -6.816989421844482
    8. '            
' → logprob: -7.316989421844482
    9. '    
' → logprob: -7.816989421844482
    10. ' 
' → logprob: -7.941989421844482

Token 657: ' not' (ID: 625)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.23576004803180695
    2. ' not' → logprob: -2.110759973526001
    3. ' ' → logprob: -2.735759973526001
    4. 'nx' → logprob: -4.61076021194458
    5. ' nx' → logprob: -4.98576021194458
    6. 'not' → logprob: -4.98576021194458
    7. '(nx' → logprob: -7.86076021194458
    8. ' ny' → logprob: -11.735759735107422
    9. '   ' → logprob: -12.110759735107422
    10. 'ny' → logprob: -12.360759735107422

Token 658: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.10023978352546692
    2. ' (' → logprob: -2.3502397537231445
    3. '0' → logprob: -10.350239753723145
    4. ' ' → logprob: -13.725239753723145
    5. '(nx' → logprob: -18.97524070739746
    6. ' ' → logprob: -19.72524070739746
    7. '（' → logprob: -19.72524070739746
    8. '   ' → logprob: -19.85024070739746
    9. '(
' → logprob: -20.22524070739746
    10. '  ' → logprob: -20.72524070739746

Token 659: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00026419671485200524
    2. ' ' → logprob: -8.250264167785645
    3. '(' → logprob: -12.875264167785645
    4. ' (' → logprob: -16.12526512145996
    5. '(nx' → logprob: -16.75026512145996
    6. 'nx' → logprob: -17.12526512145996
    7. ' ' → logprob: -17.25026512145996
    8. '   ' → logprob: -17.50026512145996
    9. '```' → logprob: -18.00026512145996
    10. '
' → logprob: -18.00026512145996

Token 660: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.5759484171867371
    2. ' <=' → logprob: -0.8259484171867371
    3. '<' → logprob: -11.950948715209961
    4. ' <' → logprob: -13.450948715209961
    5. '0' → logprob: -15.200948715209961
    6. '```' → logprob: -15.200948715209961
    7. ')<=' → logprob: -15.700948715209961
    8. ' ' → logprob: -15.950948715209961
    9. '≤' → logprob: -17.07594871520996
    10. ' ' → logprob: -17.07594871520996

Token 661: ' nx' (ID: 50118)
  Prédit: 'nx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nx' → logprob: -0.004127672873437405
    2. ' nx' → logprob: -5.504127502441406
    3. '(nx' → logprob: -10.504127502441406
    4. 'ny' → logprob: -10.754127502441406
    5. 'n' → logprob: -15.254127502441406
    6. '
' → logprob: -16.379127502441406
    7. ' ny' → logprob: -16.504127502441406
    8. 'Nx' → logprob: -16.754127502441406
    9. '	n' → logprob: -18.504127502441406
    10. 'NX' → logprob: -19.129127502441406

Token 662: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.0013617821969091892
    2. ' <' → logprob: -6.626361846923828
    3. '<n' → logprob: -10.626361846923828
    4. '<W' → logprob: -12.126361846923828
    5. ' and' → logprob: -12.751361846923828
    6. 'and' → logprob: -13.126361846923828
    7. '<N' → logprob: -14.001361846923828
    8. '<H' → logprob: -15.001361846923828
    9. '<num' → logprob: -16.751361846923828
    10. '<len' → logprob: -17.126361846923828

Token 663: ' W' (ID: 486)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -7.493430894101039e-05
    2. ' W' → logprob: -9.500075340270996
    3. '   ' → logprob: -18.37507438659668
    4. '	W' → logprob: -18.37507438659668
    5. '
' → logprob: -20.75007438659668
    6. '=W' → logprob: -20.87507438659668
    7. '```' → logprob: -21.00007438659668
    8. ' ' → logprob: -21.37507438659668
    9. ',W' → logprob: -22.25007438659668
    10. ')' → logprob: -22.37507438659668

Token 664: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.0034130862914025784
    2. 'and' → logprob: -5.753413200378418
    3. ')' → logprob: -8.378413200378418
    4. '           ' → logprob: -13.003413200378418
    5. ' ' → logprob: -13.753413200378418
    6. '       ' → logprob: -13.878413200378418
    7. '   ' → logprob: -15.128413200378418
    8. '```' → logprob: -15.503413200378418
    9. '):
' → logprob: -15.628413200378418
    10. ' )' → logprob: -16.1284122467041

Token 665: ' ' (ID: 220)
  Prédit: 'ny'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ny' → logprob: -0.04581382870674133
    2. '0' → logprob: -3.420813798904419
    3. ' ny' → logprob: -4.420814037322998
    4. ' ' → logprob: -10.04581356048584
    5. '
' → logprob: -10.92081356048584
    6. '   ' → logprob: -13.04581356048584
    7. 'nyt' → logprob: -13.67081356048584
    8. 'nym' → logprob: -14.29581356048584
    9. ' ' → logprob: -14.54581356048584
    10. 'nh' → logprob: -14.67081356048584

Token 666: '0' (ID: 15)
  Prédit: 'ny'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ny' → logprob: -0.00031425125780515373
    2. '0' → logprob: -8.500314712524414
    3. ' ny' → logprob: -9.125314712524414
    4. '
' → logprob: -14.375314712524414
    5. 'nyt' → logprob: -14.750314712524414
    6. 'nym' → logprob: -15.000314712524414
    7. 'nyi' → logprob: -15.250314712524414
    8. 'nh' → logprob: -15.625314712524414
    9. 'n' → logprob: -15.875314712524414
    10. 'nye' → logprob: -17.500314712524414

Token 667: ' <=' (ID: 5017)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.5782853364944458
    2. '<' → logprob: -0.8282853364944458
    3. ' ny' → logprob: -6.703285217285156
    4. 'ny' → logprob: -7.078285217285156
    5. '<H' → logprob: -8.828285217285156
    6. '<n' → logprob: -9.328285217285156
    7. 'y' → logprob: -10.828285217285156
    8. 'H' → logprob: -11.578285217285156
    9. ' H' → logprob: -13.328285217285156
    10. ' ' → logprob: -13.328285217285156

Token 668: ' ny' (ID: 4423)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.016270365566015244
    2. 'ny' → logprob: -4.266270160675049
    3. ' H' → logprob: -6.391270160675049
    4. ' ny' → logprob: -7.766270160675049
    5. 'nh' → logprob: -13.141270637512207
    6. '   ' → logprob: -13.641270637512207
    7. ' ' → logprob: -14.641270637512207
    8. 'Ny' → logprob: -15.516270637512207
    9. '	H' → logprob: -15.766270637512207
    10. '
' → logprob: -16.01626968383789

Token 669: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.3138810396194458
    2. '<' → logprob: -1.3138810396194458
    3. '<H' → logprob: -7.438880920410156
    4. 'H' → logprob: -11.188880920410156
    5. ' H' → logprob: -12.188880920410156
    6. '<W' → logprob: -12.188880920410156
    7. '<n' → logprob: -12.688880920410156
    8. '<N' → logprob: -14.188880920410156
    9. ' ' → logprob: -14.438880920410156
    10. ')' → logprob: -14.813880920410156

Token 670: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -8.506661833962426e-05
    2. ' H' → logprob: -9.37508487701416
    3. '   ' → logprob: -15.75008487701416
    4. '       ' → logprob: -17.875085830688477
    5. ' ' → logprob: -18.250085830688477
    6. '
' → logprob: -18.375085830688477
    7. '	H' → logprob: -18.750085830688477
    8. '```' → logprob: -19.000085830688477
    9. '           ' → logprob: -19.375085830688477
    10. '(H' → logprob: -19.375085830688477

Token 671: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.009857730008661747
    2. '):' → logprob: -4.634857654571533
    3. ' and' → logprob: -10.009858131408691
    4. '       ' → logprob: -10.634858131408691
    5. '):
' → logprob: -11.384858131408691
    6. '           ' → logprob: -11.634858131408691
    7. ')' → logprob: -12.509858131408691
    8. '   ' → logprob: -12.884858131408691
    9. ' ):
' → logprob: -13.259858131408691
    10. '               ' → logprob: -13.759858131408691

Token 672: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.01671476848423481
    2. '           ' → logprob: -4.516714572906494
    3. '       ' → logprob: -5.516714572906494
    4. ' continue' → logprob: -7.266714572906494
    5. 'continue' → logprob: -7.766714572906494
    6. '   ' → logprob: -8.141715049743652
    7. '	continue' → logprob: -9.516715049743652
    8. '                   ' → logprob: -10.141715049743652
    9. '```' → logprob: -10.891715049743652
    10. '	       ' → logprob: -11.016715049743652

Token 673: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.18334868550300598
    2. '           ' → logprob: -2.4333486557006836
    3. '               ' → logprob: -2.9333486557006836
    4. ' continue' → logprob: -3.6833486557006836
    5. '   ' → logprob: -7.433348655700684
    6. '	continue' → logprob: -7.433348655700684
    7. '       ' → logprob: -8.808348655700684
    8. '                   ' → logprob: -9.558348655700684
    9. '_continue' → logprob: -11.808348655700684
    10. '		' → logprob: -12.933348655700684

Token 674: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.011656583286821842
    2. '            
' → logprob: -5.261656761169434
    3. '```' → logprob: -5.761656761169434
    4. 'if' → logprob: -7.011656761169434
    5. '
' → logprob: -7.261656761169434
    6. ' if' → logprob: -7.511656761169434
    7. 'next' → logprob: -8.136656761169434
    8. '       ' → logprob: -8.636656761169434
    9. ',' → logprob: -9.136656761169434
    10. 'cell' → logprob: -9.261656761169434

Token 675: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8922598361968994
    2. '```' → logprob: -1.1422598361968994
    3. ' cell' → logprob: -2.7672598361968994
    4. ' if' → logprob: -3.2672598361968994
    5. '            
' → logprob: -3.6422598361968994
    6. ' o' → logprob: -3.6422598361968994
    7. 'cell' → logprob: -3.7672598361968994
    8. '   ' → logprob: -4.39225959777832
    9. 'if' → logprob: -4.39225959777832
    10. 'next' → logprob: -4.64225959777832

Token 676: ' #' (ID: 1069)
  Prédit: 'no'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'no' → logprob: -0.053586445748806
    2. 'cell' → logprob: -3.303586483001709
    3. 'n' → logprob: -5.178586483001709
    4. 'new' → logprob: -5.678586483001709
    5. 'next' → logprob: -6.053586483001709
    6. 'nt' → logprob: -6.678586483001709
    7. 'if' → logprob: -7.178586483001709
    8. '```' → logprob: -7.428586483001709
    9. 'NO' → logprob: -8.30358600616455
    10. '           ' → logprob: -8.67858600616455

Token 677: ' moving' (ID: 10067)
  Prédit: 'no'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'no' → logprob: -0.3990653455257416
    2. 'cell' → logprob: -1.149065375328064
    3. 'n' → logprob: -5.6490654945373535
    4. 'next' → logprob: -6.0240654945373535
    5. 'new' → logprob: -6.0240654945373535
    6. 'noc' → logprob: -7.1490654945373535
    7. 'if' → logprob: -7.2740654945373535
    8. 'nt' → logprob: -7.3990654945373535
    9. 'nc' → logprob: -7.6490654945373535
    10. '#' → logprob: -7.8990654945373535

Token 678: ' costs' (ID: 8959)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.6642383933067322
    2. 'cost' → logprob: -1.164238452911377
    3. ' to' → logprob: -2.914238452911377
    4. ' into' → logprob: -3.539238452911377
    5. '_cost' → logprob: -4.164238452911377
    6. ' onto' → logprob: -4.289238452911377
    7. 'into' → logprob: -4.414238452911377
    8. 'on' → logprob: -4.789238452911377
    9. 'onto' → logprob: -5.164238452911377
    10. 'cell' → logprob: -5.289238452911377

Token 679: ' ' (ID: 220)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08956189453601837
    2. '=' → logprob: -2.589561939239502
    3. 'next' → logprob: -5.589561939239502
    4. 'new' → logprob: -6.089561939239502
    5. '_next' → logprob: -6.464561939239502
    6. ' next' → logprob: -7.214561939239502
    7. ' new' → logprob: -7.589561939239502
    8. ' +=' → logprob: -7.839561939239502
    9. '_new' → logprob: -8.214561462402344
    10. '   ' → logprob: -8.714561462402344

Token 680: '1' (ID: 16)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7805092930793762
    2. 'o' → logprob: -1.9055092334747314
    3. ' =' → logprob: -2.1555092334747314
    4. 'f' → logprob: -2.5305092334747314
    5. 'cost' → logprob: -2.9055092334747314
    6. '1' → logprob: -2.9055092334747314
    7. 'grid' → logprob: -3.2805092334747314
    8. '0' → logprob: -4.6555094718933105
    9. '=o' → logprob: -4.9055094718933105
    10. '+=' → logprob: -5.4055094718933105

Token 681: ' oxygen' (ID: 34398)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.0249608755111694
    2. '
' → logprob: -2.274960994720459
    3. ' +' → logprob: -2.524960994720459
    4. ',' → logprob: -2.649960994720459
    5. 'if' → logprob: -2.649960994720459
    6. ' o' → logprob: -2.774960994720459
    7. '+' → logprob: -2.899960994720459
    8. ' 
' → logprob: -3.024960994720459
    9. '   ' → logprob: -3.399960994720459
    10. '           ' → logprob: -3.399960994720459

Token 682: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.35426071286201477
    2. ' -' → logprob: -1.9792606830596924
    3. ',' → logprob: -2.8542606830596924
    4. '-' → logprob: -2.9792606830596924
    5. ' if' → logprob: -4.7292609214782715
    6. '
' → logprob: -4.8542609214782715
    7. '            
' → logprob: -4.9792609214782715
    8. ' and' → logprob: -4.9792609214782715
    9. '<|end|>' → logprob: -5.7292609214782715
    10. '               ' → logprob: -5.9792609214782715

Token 683: '           ' (ID: 352)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6547071933746338
    2. '           ' → logprob: -1.1547071933746338
    3. '            
' → logprob: -2.654707193374634
    4. 'if' → logprob: -3.279707193374634
    5. ' 
' → logprob: -4.279706954956055
    6. ' o' → logprob: -4.779706954956055
    7. ' and' → logprob: -4.779706954956055
    8. '```' → logprob: -5.029706954956055
    9. ',' → logprob: -5.279706954956055
    10. '
' → logprob: -5.529706954956055

Token 684: ' no' (ID: 860)
  Prédit: 'no'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'no' (adapté à ' no') → logprob: -0.019680803641676903
    2. 'if' → logprob: -4.269680976867676
    3. 'new' → logprob: -5.769680976867676
    4. 'next' → logprob: -6.394680976867676
    5. 'n' → logprob: -8.519680976867676
    6. '_no' → logprob: -8.644680976867676
    7. 'novo' → logprob: -9.519680976867676
    8. ' no' → logprob: -10.144680976867676
    9. 'noop' → logprob: -10.144680976867676
    10. 'nov' → logprob: -10.269680976867676

Token 685: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.2948405128554441e-05
    2. '_' → logprob: -11.37501335144043
    3. '₂' → logprob: -14.37501335144043
    4. '_o' → logprob: -16.12501335144043
    5. '```' → logprob: -16.25001335144043
    6. '_t' → logprob: -16.56251335144043
    7. 'w' → logprob: -16.62501335144043
    8. 'xygen' → logprob: -16.75001335144043
    9. ' =' → logprob: -16.81251335144043
    10. '۲' → logprob: -16.93751335144043

Token 686: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.014175030402839184
    2. ' =' → logprob: -4.264174938201904
    3. '=o' → logprob: -11.514175415039062
    4. '-=' → logprob: -13.764175415039062
    5. '-' → logprob: -16.014175415039062
    6. ' ' → logprob: -16.264175415039062
    7. ' -=' → logprob: -16.389175415039062
    8. '＝' → logprob: -16.639175415039062
    9. '=
' → logprob: -16.764175415039062
    10. '	' → logprob: -17.139175415039062

Token 687: ' o' (ID: 293)
  Prédit: 'o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'o' → logprob: -0.0015072436071932316
    2. ' o' → logprob: -6.50150728225708
    3. '	o' → logprob: -12.751506805419922
    4. '   ' → logprob: -13.751506805419922
    5. 'max' → logprob: -14.251506805419922
    6. '(o' → logprob: -16.126506805419922
    7. '{o' → logprob: -16.501506805419922
    8. ' max' → logprob: -17.126506805419922
    9. '=o' → logprob: -17.376506805419922
    10. ' ' → logprob: -17.751506805419922

Token 688: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.45848218582978e-06
    2. '-' → logprob: -13.00000286102295
    3. '₂' → logprob: -16.500001907348633
    4. ' -' → logprob: -17.500001907348633
    5. '```' → logprob: -18.625001907348633
    6. '２' → logprob: -19.125001907348633
    7. '۲' → logprob: -19.125001907348633
    8. ' ' → logprob: -19.125001907348633
    9. '_' → logprob: -19.375001907348633
    10. '
' → logprob: -20.750001907348633

Token 689: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.1602245420217514
    2. ' -' → logprob: -1.9102245569229126
    3. ' ' → logprob: -15.535224914550781
    4. '```' → logprob: -17.41022491455078
    5. '-
' → logprob: -17.66022491455078
    6. ' ' → logprob: -18.03522491455078
    7. '-=' → logprob: -18.03522491455078
    8. '−' → logprob: -18.41022491455078
    9. ' -=' → logprob: -18.41022491455078
    10. '1' → logprob: -18.91022491455078

Token 690: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.4121114822482923e-06
    2. ' ' → logprob: -12.625003814697266
    3. '   ' → logprob: -17.000003814697266
    4. '
' → logprob: -17.875003814697266
    5. '```' → logprob: -18.375003814697266
    6. '  ' → logprob: -20.500003814697266
    7. '`' → logprob: -20.687503814697266
    8. '    ' → logprob: -21.125003814697266
    9. '           ' → logprob: -21.312503814697266
    10. '۱' → logprob: -21.375003814697266

Token 691: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3856492842023727e-06
    2. ' ' → logprob: -13.625000953674316
    3. '   ' → logprob: -16.375001907348633
    4. '
' → logprob: -17.250001907348633
    5. '```' → logprob: -17.750001907348633
    6. '  ' → logprob: -19.812501907348633
    7. '`' → logprob: -20.062501907348633
    8. '    ' → logprob: -20.250001907348633
    9. '       ' → logprob: -20.250001907348633
    10. '[' → logprob: -20.500001907348633

Token 692: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.037017762660980225
    2. '<|end|>' → logprob: -4.162017822265625
    3. ' if' → logprob: -4.287017822265625
    4. 'if' → logprob: -5.662017822265625
    5. '
' → logprob: -6.537017822265625
    6. '            
' → logprob: -7.162017822265625
    7. '            ' → logprob: -8.037017822265625
    8. '<|end|>' → logprob: -8.412017822265625
    9. '               ' → logprob: -9.037017822265625
    10. ',' → logprob: -9.037017822265625

Token 693: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.20692770183086395
    2. ' if' → logprob: -2.20692777633667
    3. 'if' → logprob: -2.58192777633667
    4. '<|end|>' → logprob: -8.331927299499512
    5. '		' → logprob: -8.581927299499512
    6. '       ' → logprob: -8.831927299499512
    7. '	if' → logprob: -8.831927299499512
    8. '            
' → logprob: -8.956927299499512
    9. '               ' → logprob: -9.456927299499512
    10. '            ' → logprob: -9.706927299499512

Token 694: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.001539973309263587
    2. '           ' → logprob: -6.501540184020996
    3. ' if' → logprob: -10.251540184020996
    4. '```' → logprob: -14.501540184020996
    5. '               ' → logprob: -14.876540184020996
    6. '            ' → logprob: -15.126540184020996
    7. 'If' → logprob: -15.251540184020996
    8. 'continue' → logprob: -15.626540184020996
    9. '#' → logprob: -15.876540184020996
    10. '            
' → logprob: -16.12653923034668

Token 695: ' no' (ID: 860)
  Prédit: 'no'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'no' → logprob: -0.0004929834394715726
    2. ' no' → logprob: -7.625493049621582
    3. '   ' → logprob: -13.375493049621582
    4. 'not' → logprob: -13.875493049621582
    5. '	no' → logprob: -13.875493049621582
    6. '           ' → logprob: -14.125493049621582
    7. '(no' → logprob: -15.625493049621582
    8. ' ' → logprob: -15.750493049621582
    9. '               ' → logprob: -16.000492095947266
    10. '  ' → logprob: -16.625492095947266

Token 696: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.1008713702030946e-06
    2. 'o' → logprob: -13.500001907348633
    3. '₂' → logprob: -15.875001907348633
    4. 't' → logprob: -16.250001907348633
    5. 'ot' → logprob: -16.500001907348633
    6. '=' → logprob: -17.187501907348633
    7. '```' → logprob: -17.312501907348633
    8. '_o' → logprob: -17.500001907348633
    9. '>' → logprob: -17.562501907348633
    10. ' ' → logprob: -17.562501907348633

Token 697: ' ==' (ID: 951)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.44540858268737793
    2. ' <=' → logprob: -1.070408582687378
    3. '<' → logprob: -4.570408821105957
    4. ' <' → logprob: -5.445408821105957
    5. '==' → logprob: -6.570408821105957
    6. ' ==' → logprob: -7.695408821105957
    7. '[' → logprob: -10.945408821105957
    8. '>' → logprob: -12.320408821105957
    9. ' ' → logprob: -12.695408821105957
    10. '<|end|>' → logprob: -12.695408821105957

Token 698: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0007350585656240582
    2. '-' → logprob: -7.875735282897949
    3. ' ' → logprob: -8.12573528289795
    4. '<' → logprob: -9.87573528289795
    5. ' -' → logprob: -12.12573528289795
    6. '=' → logprob: -13.25073528289795
    7. '   ' → logprob: -15.87573528289795
    8. '    ' → logprob: -16.625734329223633
    9. '```' → logprob: -17.125734329223633
    10. ' <' → logprob: -17.250734329223633

Token 699: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0005751936114393175
    2. '-' → logprob: -7.750575065612793
    3. ' ' → logprob: -8.875575065612793
    4. '<' → logprob: -13.000575065612793
    5. ' -' → logprob: -13.000575065612793
    6. '=' → logprob: -17.25057601928711
    7. 'negative' → logprob: -17.37557601928711
    8. '```' → logprob: -17.87557601928711
    9. '<|end|>' → logprob: -18.06307601928711
    10. '   ' → logprob: -18.06307601928711

Token 700: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5930193066596985
    2. '               ' → logprob: -0.8430193066596985
    3. ':' → logprob: -4.218019485473633
    4. '           ' → logprob: -6.343019485473633
    5. 'continue' → logprob: -8.093019485473633
    6. ' continue' → logprob: -9.718019485473633
    7. '   ' → logprob: -10.718019485473633
    8. '                   ' → logprob: -11.343019485473633
    9. ' or' → logprob: -11.468019485473633
    10. '       ' → logprob: -11.718019485473633

Token 701: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.10100534558296204
    2. 'continue' → logprob: -2.3510053157806396
    3. ' continue' → logprob: -7.476005554199219
    4. '           ' → logprob: -9.351005554199219
    5. '   ' → logprob: -9.601005554199219
    6. '	continue' → logprob: -10.351005554199219
    7. '                   ' → logprob: -10.976005554199219
    8. '       ' → logprob: -11.851005554199219
    9. '```' → logprob: -12.101005554199219
    10. '_continue' → logprob: -12.351005554199219

Token 702: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.0017409856664016843
    2. ' continue' → logprob: -6.5017409324646
    3. '           ' → logprob: -9.001741409301758
    4. '               ' → logprob: -9.501741409301758
    5. '   ' → logprob: -10.251741409301758
    6. '	continue' → logprob: -12.376741409301758
    7. '                   ' → logprob: -14.376741409301758
    8. '       ' → logprob: -15.001741409301758
    9. '_continue' → logprob: -15.751741409301758
    10. ' ' → logprob: -16.376741409301758

Token 703: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04245823621749878
    2. '#' → logprob: -4.1674580574035645
    3. '            
' → logprob: -4.5424580574035645
    4. '```' → logprob: -5.1674580574035645
    5. ',' → logprob: -6.2924580574035645
    6. '<|end|>' → logprob: -6.4174580574035645
    7. 'if' → logprob: -7.0424580574035645
    8. ' 
' → logprob: -7.1674580574035645
    9. '            ' → logprob: -7.5424580574035645
    10. 'token' → logprob: -7.6674580574035645

Token 704: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08084510266780853
    2. '```' → logprob: -2.9558451175689697
    3. '            
' → logprob: -4.830844879150391
    4. 'if' → logprob: -5.080844879150391
    5. ' if' → logprob: -5.705844879150391
    6. '#' → logprob: -6.080844879150391
    7. '   ' → logprob: -6.955844879150391
    8. '       ' → logprob: -7.330844879150391
    9. '            ' → logprob: -7.580844879150391
    10. '`' → logprob: -7.705844879150391

Token 705: ' cell' (ID: 4206)
  Prédit: 'cell'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cell' (adapté à ' cell') → logprob: -0.03917571157217026
    2. 'nc' → logprob: -3.4141757488250732
    3. 'if' → logprob: -6.164175510406494
    4. 'c' → logprob: -7.039175510406494
    5. 'cost' → logprob: -7.039175510406494
    6. '           ' → logprob: -7.289175510406494
    7. 'n' → logprob: -7.914175510406494
    8. ' cell' → logprob: -8.789175987243652
    9. 'nt' → logprob: -9.039175987243652
    10. 'cc' → logprob: -9.664175987243652

Token 706: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.032074108719825745
    2. ' =' → logprob: -3.657074213027954
    3. '_type' → logprob: -6.032073974609375
    4. '_value' → logprob: -6.407073974609375
    5. '_val' → logprob: -7.157073974609375
    6. '_' → logprob: -7.407073974609375
    7. '=
' → logprob: -8.782073974609375
    8. 'type' → logprob: -9.282073974609375
    9. 'value' → logprob: -10.657073974609375
    10. '_=' → logprob: -11.282073974609375

Token 707: ' grid' (ID: 10586)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grid' → logprob: -0.06197754293680191
    2. ' grid' → logprob: -2.8119776248931885
    3. '(grid' → logprob: -11.93697738647461
    4. '	grid' → logprob: -13.56197738647461
    5. '   ' → logprob: -14.31197738647461
    6. '_grid' → logprob: -14.93697738647461
    7. '-grid' → logprob: -15.18697738647461
    8. '/grid' → logprob: -15.68697738647461
    9. '```' → logprob: -15.81197738647461
    10. 'Grid' → logprob: -15.93697738647461

Token 708: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.9040898880339228e-05
    2. 'ny' → logprob: -11.000028610229492
    3. '=' → logprob: -12.750028610229492
    4. '[
' → logprob: -13.500028610229492
    5. ' ny' → logprob: -13.750028610229492
    6. '[n' → logprob: -13.875028610229492
    7. '```' → logprob: -13.875028610229492
    8. ' =' → logprob: -14.125028610229492
    9. '   ' → logprob: -14.250028610229492
    10. '][' → logprob: -14.375028610229492

Token 709: 'ny' (ID: 3008)
  Prédit: 'ny'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ny' → logprob: -0.0011089015752077103
    2. '[' → logprob: -7.2511091232299805
    3. ' ny' → logprob: -7.8761091232299805
    4. 'nyi' → logprob: -12.25110912322998
    5. ''ny' → logprob: -12.50110912322998
    6. '[
' → logprob: -13.00110912322998
    7. 'n' → logprob: -13.25110912322998
    8. 'y' → logprob: -13.37610912322998
    9. '```' → logprob: -13.87610912322998
    10. 'Ny' → logprob: -14.25110912322998

Token 710: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.28278809785842896
    2. '[n' → logprob: -1.4077880382537842
    3. '[' → logprob: -7.282788276672363
    4. ']' → logprob: -7.907788276672363
    5. '"][' → logprob: -9.032788276672363
    6. '}[' → logprob: -9.157788276672363
    7. '```' → logprob: -9.407788276672363
    8. ')[' → logprob: -9.532788276672363
    9. '   ' → logprob: -10.157788276672363
    10. ' ][' → logprob: -10.157788276672363

Token 711: 'nx' (ID: 45103)
  Prédit: 'nx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nx' → logprob: -0.00020067949662916362
    2. ' nx' → logprob: -8.875200271606445
    3. '(nx' → logprob: -9.750200271606445
    4. 'x' → logprob: -13.250200271606445
    5. '[n' → logprob: -15.750200271606445
    6. '
' → logprob: -15.750200271606445
    7. 'n' → logprob: -15.875200271606445
    8. 'Nx' → logprob: -16.000200271606445
    9. 'xn' → logprob: -16.625200271606445
    10. '```' → logprob: -16.625200271606445

Token 712: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7190069556236267
    2. ')
' → logprob: -1.2190070152282715
    3. ']' → logprob: -1.8440070152282715
    4. ']
' → logprob: -2.8440070152282715
    5. '])' → logprob: -8.469006538391113
    6. ')
' → logprob: -8.594006538391113
    7. '[' → logprob: -9.219006538391113
    8. '])
' → logprob: -9.469006538391113
    9. '[
' → logprob: -9.844006538391113
    10. ')]' → logprob: -9.969006538391113

Token 713: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.14289331436157227
    2. 'if' → logprob: -2.5178933143615723
    3. ' if' → logprob: -3.2678933143615723
    4. '```' → logprob: -4.517893314361572
    5. '       ' → logprob: -6.517893314361572
    6. 'next' → logprob: -8.267892837524414
    7. '               ' → logprob: -8.392892837524414
    8. '            
' → logprob: -8.392892837524414
    9. '   ' → logprob: -8.517892837524414
    10. '          ' → logprob: -8.642892837524414

Token 714: ' n' (ID: 297)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.048360005021095276
    2. ' if' → logprob: -3.4233601093292236
    3. 'new' → logprob: -4.4233598709106445
    4. 'n' (adapté à ' n') → logprob: -7.0483598709106445
    5. 'next' → logprob: -7.1733598709106445
    6. ' new' → logprob: -7.4233598709106445
    7. '           ' → logprob: -8.798359870910645
    8. '```' → logprob: -9.673359870910645
    9. 'cost' → logprob: -9.923359870910645
    10. ' next' → logprob: -10.298359870910645

Token 715: 'mask' (ID: 22527)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.3807434141635895
    2. 'o' → logprob: -1.255743384361267
    3. '_cost' → logprob: -3.7557435035705566
    4. 'co' → logprob: -5.505743503570557
    5. 'oc' → logprob: -6.630743503570557
    6. 'c' → logprob: -6.630743503570557
    7. '_o' → logprob: -7.505743503570557
    8. 'ow' → logprob: -8.380743026733398
    9. 'if' → logprob: -8.880743026733398
    10. 'ox' → logprob: -9.005743026733398

Token 716: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.002475777640938759
    2. ' =' → logprob: -6.002475738525391
    3. '=
' → logprob: -18.00247573852539
    4. 'mask' → logprob: -18.87747573852539
    5. '＝' → logprob: -19.50247573852539
    6. '=m' → logprob: -20.00247573852539
    7. '(mask' → logprob: -20.37747573852539
    8. '=n' → logprob: -21.00247573852539
    9. ',' → logprob: -21.12747573852539
    10. '=

' → logprob: -21.12747573852539

Token 717: ' mask' (ID: 10910)
  Prédit: 'mask'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mask' → logprob: -7.517272024415433e-05
    2. ' mask' → logprob: -9.500075340270996
    3. '	mask' → logprob: -16.00007438659668
    4. '(mask' → logprob: -16.12507438659668
    5. '   ' → logprob: -17.12507438659668
    6. 'masked' → logprob: -17.62507438659668
    7. 'mas' → logprob: -17.87507438659668
    8. 'm' → logprob: -18.25007438659668
    9. '_mask' → logprob: -19.25007438659668
    10. ' ' → logprob: -20.12507438659668

Token 718: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 719: '           ' (ID: 352)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7582036256790161
    2. 'if' → logprob: -0.8832036256790161
    3. ' 
' → logprob: -2.7582035064697266
    4. '           ' → logprob: -3.7582035064697266
    5. '            
' → logprob: -4.633203506469727
    6. '```' → logprob: -5.133203506469727
    7. '  
' → logprob: -5.883203506469727
    8. '
' → logprob: -6.258203506469727
    9. ' ' → logprob: -6.383203506469727
    10. '[' → logprob: -6.508203506469727

Token 720: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.6204648017883301
    2. 'if' → logprob: -0.9954648017883301
    3. ' if' → logprob: -2.62046480178833
    4. 'nc' → logprob: -4.49546480178833
    5. 'nt' → logprob: -5.87046480178833
    6. 'cost' → logprob: -6.24546480178833
    7. ' n' → logprob: -6.87046480178833
    8. 'new' → logprob: -6.87046480178833
    9. 'npos' → logprob: -7.37046480178833
    10. '           ' → logprob: -8.120464324951172

Token 721: 'cost' (ID: 33457)
  Prédit: 'o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'o' → logprob: -0.2955338656902313
    2. '_o' → logprob: -2.0455338954925537
    3. 'cost' → logprob: -2.6705338954925537
    4. '_cost' → logprob: -2.9205338954925537
    5. '_' → logprob: -6.420533657073975
    6. 'if' → logprob: -7.170533657073975
    7. '```' → logprob: -8.295534133911133
    8. ' =' → logprob: -8.920534133911133
    9. '
' → logprob: -9.545534133911133
    10. '_
' → logprob: -9.920534133911133

Token 722: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4740777611732483
    2. '=' → logprob: -0.9740777611732483
    3. ',' → logprob: -14.724078178405762
    4. ' ' → logprob: -15.849078178405762
    5. '＝' → logprob: -16.849077224731445
    6. '=c' → logprob: -17.474077224731445
    7. ' +=' → logprob: -17.974077224731445
    8. '.' → logprob: -18.099077224731445
    9. ' =
' → logprob: -18.349077224731445
    10. '=
' → logprob: -18.474077224731445

Token 723: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.00033581978641450405
    2. ' cost' → logprob: -8.000335693359375
    3. '   ' → logprob: -15.250335693359375
    4. ' ' → logprob: -17.500335693359375
    5. '(cost' → logprob: -18.125335693359375
    6. '0' → logprob: -18.250335693359375
    7. '
' → logprob: -18.375335693359375
    8. '-cost' → logprob: -18.625335693359375
    9. '  ' → logprob: -19.250335693359375
    10. '```' → logprob: -19.750335693359375

Token 724: '
' (ID: 198)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2566826045513153
    2. ' +' → logprob: -1.5066826343536377
    3. '<|end|>' → logprob: -6.006682395935059
    4. '+
' → logprob: -7.256682395935059
    5. '
' → logprob: -8.131682395935059
    6. ' +
' → logprob: -8.381682395935059
    7. '   ' → logprob: -8.631682395935059
    8. ' if' → logprob: -9.131682395935059
    9. '           ' → logprob: -9.131682395935059
    10. '[' → logprob: -9.506682395935059

Token 725: '           ' (ID: 352)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5106110572814941
    2. 'if' → logprob: -1.1356110572814941
    3. '           ' → logprob: -3.260611057281494
    4. ' 
' → logprob: -4.010611057281494
    5. '            
' → logprob: -5.260611057281494
    6. '```' → logprob: -5.385611057281494
    7. '	if' → logprob: -6.135611057281494
    8. '  
' → logprob: -6.260611057281494
    9. ' ' → logprob: -6.760611057281494
    10. '+' → logprob: -6.760611057281494

Token 726: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.3304518759250641
    2. ' if' → logprob: -1.3304518461227417
    3. '           ' → logprob: -4.080451965332031
    4. ' 
' → logprob: -10.080451965332031
    5. '            
' → logprob: -10.205451965332031
    6. '            ' → logprob: -10.955451965332031
    7. '```' → logprob: -11.455451965332031
    8. '+' → logprob: -11.580451965332031
    9. ' ' → logprob: -12.455451965332031
    10. '           
' → logprob: -12.705451965332031

Token 727: ' cell' (ID: 4206)
  Prédit: 'cell'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cell' → logprob: -0.007708130870014429
    2. ' cell' → logprob: -4.8827080726623535
    3. 'grid' → logprob: -9.632708549499512
    4. '(cell' → logprob: -11.257708549499512
    5. '	cell' → logprob: -12.007708549499512
    6. 'n' → logprob: -13.195208549499512
    7. ' grid' → logprob: -13.382708549499512
    8. ' ' → logprob: -13.382708549499512
    9. '   ' → logprob: -13.570208549499512
    10. 'nx' → logprob: -13.570208549499512

Token 728: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.2089705467224121
    2. '>' → logprob: -1.708970546722412
    3. ' <' → logprob: -5.083970546722412
    4. '<' → logprob: -7.208970546722412
    5. ' ==' → logprob: -7.958970546722412
    6. ' <=' → logprob: -9.08397102355957
    7. '==' → logprob: -9.95897102355957
    8. '<=' → logprob: -10.58397102355957
    9. ' ' → logprob: -11.33397102355957
    10. '[' → logprob: -11.45897102355957

Token 729: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01421745028346777
    2. ' ' → logprob: -4.264217376708984
    3. '=' → logprob: -10.139217376708984
    4. '<|end|>' → logprob: -12.139217376708984
    5. '>' → logprob: -13.264217376708984
    6. 'f' → logprob: -13.389217376708984
    7. '1' → logprob: -14.139217376708984
    8. '   ' → logprob: -14.451717376708984
    9. '  ' → logprob: -14.826717376708984
    10. ' =' → logprob: -14.951717376708984

Token 730: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.1928003813372925e-05
    2. ' ' → logprob: -9.875051498413086
    3. '<|end|>' → logprob: -15.375051498413086
    4. '=' → logprob: -16.250051498413086
    5. '>' → logprob: -16.625051498413086
    6. '1' → logprob: -17.375051498413086
    7. '[' → logprob: -17.875051498413086
    8. '00' → logprob: -17.875051498413086
    9. '   ' → logprob: -18.250051498413086
    10. '
' → logprob: -18.250051498413086

Token 731: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5777775645256042
    2. ':
' → logprob: -0.8277775645256042
    3. ' and' → logprob: -6.45277738571167
    4. '               ' → logprob: -9.452777862548828
    5. '<|end|>' → logprob: -9.827777862548828
    6. '):
' → logprob: -10.577777862548828
    7. '           ' → logprob: -11.077777862548828
    8. 'and' → logprob: -11.202777862548828
    9. ' :
' → logprob: -11.327777862548828
    10. ':
' → logprob: -11.452777862548828

Token 732: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.061469078063964844
    2. ' if' → logprob: -3.186469078063965
    3. '           ' → logprob: -4.936469078063965
    4. '
' → logprob: -5.686469078063965
    5. ' n' → logprob: -6.311469078063965
    6. ' idx' → logprob: -6.436469078063965
    7. '                
' → logprob: -7.061469078063965
    8. 'idx' → logprob: -7.436469078063965
    9. ':
' → logprob: -7.686469078063965
    10. 'if' → logprob: -8.311469078063965

Token 733: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3551599085330963
    2. 'idx' → logprob: -1.355159878730774
    3. ' if' → logprob: -3.7301599979400635
    4. 'bit' → logprob: -5.480159759521484
    5. ' idx' → logprob: -5.480159759521484
    6. '#' (adapté à ' #') → logprob: -6.105159759521484
    7. '               ' → logprob: -6.230159759521484
    8. '           ' → logprob: -6.355159759521484
    9. 'n' → logprob: -7.480159759521484
    10. 'nid' → logprob: -7.605159759521484

Token 734: ' oxygen' (ID: 34398)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.22700370848178864
    2. 'if' → logprob: -1.6020036935806274
    3. '#' → logprob: -7.477003574371338
    4. ' idx' → logprob: -7.977003574371338
    5. ' if' → logprob: -8.477004051208496
    6. 'index' → logprob: -9.352004051208496
    7. '           ' → logprob: -9.602004051208496
    8. 'bit' → logprob: -9.602004051208496
    9. 'n' → logprob: -9.727004051208496
    10. 'nid' → logprob: -9.852004051208496

Token 735: ' cell' (ID: 4206)
  Prédit: 'cell'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cell' → logprob: -0.7046278119087219
    2. 'cells' → logprob: -1.4546277523040771
    3. '_cells' → logprob: -2.704627752304077
    4. 'if' → logprob: -2.704627752304077
    5. ' cell' → logprob: -2.954627752304077
    6. ' cells' → logprob: -3.454627752304077
    7. '_cell' → logprob: -4.329627990722656
    8. ' if' → logprob: -4.454627990722656
    9. '               ' → logprob: -5.204627990722656
    10. 'usage' → logprob: -5.204627990722656

Token 736: ',' (ID: 11)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.8564901947975159
    2. 'if' → logprob: -1.356490135192871
    3. ' if' → logprob: -1.856490135192871
    4. 'idx' → logprob: -2.231490135192871
    5. '                   ' → logprob: -3.731490135192871
    6. ' idx' → logprob: -4.981490135192871
    7. '
' → logprob: -5.481490135192871
    8. '):
' → logprob: -5.731490135192871
    9. ':
' → logprob: -5.731490135192871
    10. '                
' → logprob: -6.231490135192871

Token 737: ' must' (ID: 2804)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.2596772313117981
    2. ' if' → logprob: -2.2596771717071533
    3. 'idx' → logprob: -2.2596771717071533
    4. ' idx' → logprob: -4.884677410125732
    5. '               ' → logprob: -5.759677410125732
    6. 'n' → logprob: -5.884677410125732
    7. 'bit' → logprob: -6.384677410125732
    8. 'nid' → logprob: -6.634677410125732
    9. '                   ' → logprob: -7.759677410125732
    10. '#' → logprob: -7.759677410125732

Token 738: ' consume' (ID: 34881)
  Prédit: 'consume'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'consume' → logprob: -0.11922633647918701
    2. ' consume' → logprob: -2.4942264556884766
    3. 'if' → logprob: -4.244226455688477
    4. 'use' → logprob: -4.619226455688477
    5. ' use' → logprob: -5.744226455688477
    6. ' if' → logprob: -6.994226455688477
    7. 'used' → logprob: -7.994226455688477
    8. '```' → logprob: -8.369226455688477
    9. 'continue' → logprob: -8.619226455688477
    10. 'n' → logprob: -9.119226455688477

Token 739: ' if' (ID: 538)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.16464541852474213
    2. 'n' → logprob: -3.0396454334259033
    3. 'if' → logprob: -3.2896454334259033
    4. 'from' → logprob: -4.039645195007324
    5. ' if' → logprob: -4.914645195007324
    6. ' ' → logprob: -5.039645195007324
    7. '```' → logprob: -5.039645195007324
    8. 'oxygen' → logprob: -5.164645195007324
    9. '               ' → logprob: -5.539645195007324
    10. ')' → logprob: -5.664645195007324

Token 740: ' not' (ID: 625)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -1.0629708766937256
    2. 'not' → logprob: -1.1879708766937256
    3. '(not' → logprob: -1.6879708766937256
    4. '((' → logprob: -2.1879708766937256
    5. ' not' → logprob: -3.0629708766937256
    6. ' (' → logprob: -5.937971115112305
    7. '(mask' → logprob: -6.312971115112305
    8. 'n' → logprob: -7.187971115112305
    9. ' ((' → logprob: -8.562971115112305
    10. '(((' → logprob: -8.562971115112305

Token 741: ' consumed' (ID: 47047)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.052198976278305054
    2. ' (' → logprob: -3.052198886871338
    3. '(mask' → logprob: -5.677198886871338
    4. '(' → logprob: -9.177199363708496
    5. '((' → logprob: -10.052199363708496
    6. ' ' → logprob: -11.802199363708496
    7. 'n' → logprob: -12.302199363708496
    8. ' ((' → logprob: -12.552199363708496
    9. ' n' → logprob: -12.802199363708496
    10. '```' → logprob: -13.052199363708496

Token 742: ' yet' (ID: 5073)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.7776578068733215
    2. '               ' → logprob: -1.0276577472686768
    3. ' in' → logprob: -3.9026577472686768
    4. ' (' → logprob: -4.152657985687256
    5. ' at' → logprob: -4.277657985687256
    6. ' here' → logprob: -4.277657985687256
    7. '1' → logprob: -4.777657985687256
    8. ' ' → logprob: -4.777657985687256
    9. 'from' → logprob: -4.777657985687256
    10. '=' → logprob: -5.027657985687256

Token 743: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.9907519817352295
    2. 'n' → logprob: -1.7407519817352295
    3. '           ' → logprob: -1.7407519817352295
    4. '(n' → logprob: -2.3657519817352295
    5. '                   ' → logprob: -2.3657519817352295
    6. ' n' → logprob: -3.3657519817352295
    7. ' (' → logprob: -5.365752220153809
    8. '<|end|>' → logprob: -5.365752220153809
    9. ' if' → logprob: -5.490752220153809
    10. '                           ' → logprob: -5.615752220153809

Token 744: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.13978849351406097
    2. '                   ' → logprob: -2.7647883892059326
    3. ' if' → logprob: -3.3897883892059326
    4. '
' → logprob: -4.639788627624512
    5. '           ' → logprob: -5.264788627624512
    6. '                
' → logprob: -5.639788627624512
    7. ' idx' → logprob: -6.014788627624512
    8. 'if' → logprob: -6.139788627624512
    9. 'idx' → logprob: -6.139788627624512
    10. ' 
' → logprob: -6.514788627624512

Token 745: ' idx' (ID: 14016)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6837062239646912
    2. 'idx' (adapté à ' idx') → logprob: -1.058706283569336
    3. ' if' → logprob: -2.058706283569336
    4. ' idx' → logprob: -3.933706283569336
    5. '               ' → logprob: -7.183706283569336
    6. '                   ' → logprob: -8.808706283569336
    7. 'bit' → logprob: -9.558706283569336
    8. '           ' → logprob: -9.808706283569336
    9. 'index' → logprob: -10.433706283569336
    10. 'id' → logprob: -10.808706283569336

Token 746: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1797713190317154
    2. '=' → logprob: -1.8047713041305542
    3. '=
' → logprob: -11.554771423339844
    4. '=n' → logprob: -12.054771423339844
    5. ' =
' → logprob: -12.554771423339844
    6. '=(' → logprob: -13.179771423339844
    7. ' =(' → logprob: -13.679771423339844
    8. '<|end|>' → logprob: -14.054771423339844
    9. '[' → logprob: -14.179771423339844
    10. ' ' → logprob: -14.304771423339844

Token 747: ' oxy' (ID: 154299)
  Prédit: 'oxy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oxy' → logprob: -8.494741632603109e-05
    2. ' oxy' → logprob: -9.50008487701416
    3. 'ox' → logprob: -11.62508487701416
    4. 'oxygen' → logprob: -15.12508487701416
    5. 'oxo' → logprob: -15.12508487701416
    6. 'oxi' → logprob: -16.000085830688477
    7. 'ozy' → logprob: -16.375085830688477
    8. '0' → logprob: -16.875085830688477
    9. 'opy' → logprob: -17.000085830688477
    10. 'oxic' → logprob: -17.250085830688477

Token 748: '_id' (ID: 1537)
  Prédit: '_id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -5.438573680294212e-06
    2. 'id' → logprob: -12.500005722045898
    3. 'd' → logprob: -14.250005722045898
    4. '_' → logprob: -15.250005722045898
    5. '_i' → logprob: -15.750005722045898
    6. '[' → logprob: -16.0000057220459
    7. '_cell' → logprob: -16.6250057220459
    8. '```' → logprob: -16.7500057220459
    9. '[
' → logprob: -17.1250057220459
    10. 'cell' → logprob: -17.5000057220459

Token 749: '[(' (ID: 20542)
  Prédit: '[('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.0026575818192213774
    2. '((' → logprob: -6.002657413482666
    3. '(' → logprob: -8.877657890319824
    4. '(n' → logprob: -11.127657890319824
    5. '(nx' → logprob: -11.127657890319824
    6. '(cell' → logprob: -12.252657890319824
    7. '(x' → logprob: -13.002657890319824
    8. '[' → logprob: -13.252657890319824
    9. '.get' → logprob: -13.877657890319824
    10. '```' → logprob: -14.377657890319824

Token 750: 'nx' (ID: 45103)
  Prédit: 'nx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nx' → logprob: -0.693756639957428
    2. '(nx' → logprob: -0.693756639957428
    3. ' (' → logprob: -7.818756580352783
    4. ' nx' → logprob: -8.693757057189941
    5. '(n' → logprob: -10.443757057189941
    6. '(' → logprob: -12.193757057189941
    7. '   ' → logprob: -13.193757057189941
    8. 'n' → logprob: -13.818757057189941
    9. '(
' → logprob: -14.818757057189941
    10. 'Nx' → logprob: -14.818757057189941

Token 751: ',' (ID: 11)
  Prédit: ',n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',n' → logprob: -0.12954281270503998
    2. ',' → logprob: -2.129542827606201
    3. ',(' → logprob: -6.129542827606201
    4. '(nx' → logprob: -8.629542350769043
    5. ' ,' → logprob: -8.754542350769043
    6. '[n' → logprob: -9.754542350769043
    7. '(n' → logprob: -10.754542350769043
    8. '),(' → logprob: -12.504542350769043
    9. ',[' → logprob: -13.129542350769043
    10. '[' → logprob: -13.254542350769043

Token 752: 'ny' (ID: 3008)
  Prédit: 'ny'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ny' → logprob: -6.694766489090398e-05
    2. ' ny' → logprob: -9.625066757202148
    3. '
' → logprob: -15.125066757202148
    4. 'nyi' → logprob: -16.12506675720215
    5. '   ' → logprob: -16.37506675720215
    6. ',' → logprob: -16.87506675720215
    7. 'n' → logprob: -17.37506675720215
    8. ''ny' → logprob: -17.50006675720215
    9. '```' → logprob: -17.62506675720215
    10. '    
' → logprob: -18.00006675720215

Token 753: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.006212458945810795
    2. ')]
' → logprob: -5.13121223449707
    3. ']' → logprob: -8.25621223449707
    4. ')]
' → logprob: -11.88121223449707
    5. ']
' → logprob: -12.00621223449707
    6. ')' → logprob: -12.00621223449707
    7. '])' → logprob: -13.00621223449707
    8. ')]

' → logprob: -14.25621223449707
    9. ']]' → logprob: -14.50621223449707
    10. ' )' → logprob: -15.13121223449707

Token 754: '               ' (ID: 506)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.7193962335586548
    2. 'n' → logprob: -1.2193962335586548
    3. ' if' → logprob: -1.8443962335586548
    4. ' 
' → logprob: -3.5943961143493652
    5. '(n' → logprob: -4.719396114349365
    6. '  
' → logprob: -5.344396114349365
    7. 'if' → logprob: -5.719396114349365
    8. '<|end|>' → logprob: -5.844396114349365
    9. '```' → logprob: -5.969396114349365
    10. '           ' → logprob: -6.219396114349365

Token 755: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.004845903720706701
    2. ' if' → logprob: -5.379846096038818
    3. 'bit' → logprob: -9.25484561920166
    4. '               ' → logprob: -9.37984561920166
    5. 'used' → logprob: -11.25484561920166
    6. 'mask' → logprob: -11.87984561920166
    7. 'consume' → logprob: -12.12984561920166
    8. '           ' → logprob: -12.37984561920166
    9. '                
' → logprob: -13.00484561920166
    10. ' bit' → logprob: -13.25484561920166

Token 756: ' (' (ID: 350)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.029990902170538902
    2. '(not' → logprob: -4.4049906730651855
    3. ' not' → logprob: -4.6549906730651855
    4. 'not' → logprob: -5.4049906730651855
    5. '((' → logprob: -6.6549906730651855
    6. ' (' → logprob: -6.6549906730651855
    7. '(mask' → logprob: -7.6549906730651855
    8. 'n' → logprob: -8.279991149902344
    9. 'mask' → logprob: -12.529991149902344
    10. ' n' → logprob: -12.904991149902344

Token 757: 'mask' (ID: 22527)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.16189996898174286
    2. '(n' → logprob: -1.9118999242782593
    3. '(mask' → logprob: -7.161900043487549
    4. 'mask' → logprob: -7.661900043487549
    5. 'not' → logprob: -8.66189956665039
    6. ' n' → logprob: -9.53689956665039
    7. ' (' → logprob: -9.66189956665039
    8. '1' → logprob: -10.53689956665039
    9. '(not' → logprob: -10.78689956665039
    10. '   ' → logprob: -11.16189956665039

Token 758: ' &' (ID: 827)
  Prédit: ' &'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' &' → logprob: -0.02530597150325775
    2. '&' → logprob: -3.775305986404419
    3. '>>' → logprob: -6.27530574798584
    4. ' >>' → logprob: -9.15030574798584
    5. '&(' → logprob: -10.27530574798584
    6. ' ' → logprob: -11.90030574798584
    7. '&r' → logprob: -12.40030574798584
    8. '&nbsp' → logprob: -12.40030574798584
    9. ' ' → logprob: -12.52530574798584
    10. ' &
' → logprob: -12.90030574798584

Token 759: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0005547016044147313
    2. ' (' → logprob: -7.50055456161499
    3. '1' → logprob: -13.625555038452148
    4. ')' → logprob: -14.625555038452148
    5. '```' → logprob: -16.37555503845215
    6. '
' → logprob: -17.12555503845215
    7. ' ' → logprob: -17.37555503845215
    8. '   ' → logprob: -17.75055503845215
    9. '[' → logprob: -19.25055503845215
    10. '{' → logprob: -19.37555503845215

Token 760: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.10029131919145584
    2. '(' → logprob: -2.3502912521362305
    3. ' (' → logprob: -9.47529125213623
    4. ' ' → logprob: -11.85029125213623
    5. ')' → logprob: -14.72529125213623
    6. '   ' → logprob: -16.100292205810547
    7. '
' → logprob: -16.100292205810547
    8. '```' → logprob: -16.100292205810547
    9. '           ' → logprob: -17.600292205810547
    10. '               ' → logprob: -17.600292205810547

Token 761: '<<' (ID: 5354)
  Prédit: '<<'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.0307993795722723
    2. '1' → logprob: -3.530799388885498
    3. '(' → logprob: -7.280799388885498
    4. ' <<' → logprob: -8.40579891204834
    5. '<' → logprob: -10.28079891204834
    6. '[' → logprob: -10.65579891204834
    7. '```' → logprob: -10.65579891204834
    8. '
' → logprob: -10.90579891204834
    9. ')' → logprob: -11.03079891204834
    10. '>>' → logprob: -12.15579891204834

Token 762: 'idx' (ID: 13196)
  Prédit: 'idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -6.2729995988775045e-06
    2. ' idx' → logprob: -12.000006675720215
    3. '	idx' → logprob: -18.3750057220459
    4. '
' → logprob: -19.3750057220459
    5. '   ' → logprob: -19.8750057220459
    6. '(idx' → logprob: -20.1250057220459
    7. 'id' → logprob: -20.7500057220459
    8. 'i' → logprob: -21.5000057220459
    9. ' ' → logprob: -21.6250057220459
    10. '[idx' → logprob: -21.7500057220459

Token 763: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.00014406509581021965
    2. ')' → logprob: -8.875144004821777
    3. ' ))' → logprob: -12.625144004821777
    4. ')==' → logprob: -14.875144004821777
    5. '==' → logprob: -15.250144004821777
    6. '0' → logprob: -16.500144958496094
    7. '
' → logprob: -16.875144958496094
    8. ')
' → logprob: -17.000144958496094
    9. ' )' → logprob: -17.750144958496094
    10. ')))' → logprob: -17.875144958496094

Token 764: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.0647195503115654
    2. ')' → logprob: -3.3147194385528564
    3. ')==' → logprob: -3.6897194385528564
    4. ' ==' → logprob: -7.1897196769714355
    5. ']==' → logprob: -8.189719200134277
    6. '==
' → logprob: -8.314719200134277
    7. '=' → logprob: -9.939719200134277
    8. ']' → logprob: -12.314719200134277
    9. '>>' → logprob: -12.314719200134277
    10. '0' → logprob: -13.064719200134277

Token 765: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.875
    3. '۰' → logprob: -21.75
    4. '(' → logprob: -23.125
    5. ')' → logprob: -23.125
    6. '000' → logprob: -23.625
    7. '=' → logprob: -24.125
    8. ' ' → logprob: -24.375
    9. '   ' → logprob: -24.5
    10. '```' → logprob: -24.625

Token 766: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.500000953674316
    3. '۰' → logprob: -19.25
    4. '000' → logprob: -19.375
    5. '1' → logprob: -19.625
    6. ')' → logprob: -19.875
    7. '  ' → logprob: -19.875
    8. '=' → logprob: -20.8125
    9. '০' → logprob: -21.0
    10. ' ' → logprob: -21.0

Token 767: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.16077928245067596
    2. ':' → logprob: -1.9107792377471924
    3. '):
' → logprob: -8.910778999328613
    4. ' :
' → logprob: -8.910778999328613
    5. '                   ' → logprob: -9.535778999328613
    6. '               ' → logprob: -10.035778999328613
    7. ' and' → logprob: -10.535778999328613
    8. '                           ' → logprob: -10.660778999328613
    9. ':
' → logprob: -10.785778999328613
    10. ')' → logprob: -11.035778999328613

Token 768: '                   ' (ID: 699)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.6480116844177246
    2. 'n' → logprob: -1.2730116844177246
    3. ' 
' → logprob: -2.7730116844177246
    4. '                               ' → logprob: -3.0230116844177246
    5. '                   ' → logprob: -3.3980116844177246
    6. '               ' → logprob: -4.648011684417725
    7. '(n' → logprob: -5.023011684417725
    8. '
' → logprob: -5.273011684417725
    9. ' continue' → logprob: -5.523011684417725
    10. ' ' → logprob: -5.523011684417725

Token 769: ' #' (ID: 1069)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6313435435295105
    2. 'no' → logprob: -1.3813436031341553
    3. ' no' → logprob: -2.1313436031341553
    4. ' n' → logprob: -2.3813436031341553
    5. '                   ' → logprob: -5.756343364715576
    6. '               ' → logprob: -7.506343364715576
    7. '```' → logprob: -7.506343364715576
    8. '                       ' → logprob: -7.881343364715576
    9. 'nc' → logprob: -8.131343841552734
    10. '           ' → logprob: -8.381343841552734

Token 770: ' consume' (ID: 34881)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.24077185988426208
    2. 'no' → logprob: -1.6157718896865845
    3. 'nc' → logprob: -4.365771770477295
    4. ' no' → logprob: -7.865771770477295
    5. '                   ' → logprob: -7.990771770477295
    6. ' n' → logprob: -7.990771770477295
    7. '           ' → logprob: -8.490772247314453
    8. 'if' → logprob: -8.490772247314453
    9. '               ' → logprob: -8.740772247314453
    10. 'new' → logprob: -8.740772247314453

Token 771: ' oxygen' (ID: 34398)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.33682411909103394
    2. '1' → logprob: -1.4618241786956787
    3. ' n' → logprob: -3.3368241786956787
    4. ' ' → logprob: -4.8368239402771
    5. 'oxygen' → logprob: -6.2118239402771
    6. '                   ' → logprob: -6.7118239402771
    7. 'start' → logprob: -6.8368239402771
    8. ' cell' → logprob: -7.3368239402771
    9. ' oxygen' → logprob: -7.4618239402771
    10. ' grid' → logprob: -7.7118239402771

Token 772: ' here' (ID: 2105)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.8711190223693848
    2. '                   ' → logprob: -1.1211190223693848
    3. ')' → logprob: -1.8711190223693848
    4. ')
' → logprob: -2.8711190223693848
    5. ' n' → logprob: -4.746119022369385
    6. '                       ' → logprob: -5.121119022369385
    7. '):
' → logprob: -5.621119022369385
    8. '=' → logprob: -5.996119022369385
    9. '+' → logprob: -6.246119022369385
    10. ':
' → logprob: -6.371119022369385

Token 773: '
' (ID: 198)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.8118071556091309
    2. '                   ' → logprob: -1.1868071556091309
    3. ')
' → logprob: -2.686807155609131
    4. ')' → logprob: -2.936807155609131
    5. '
' → logprob: -3.436807155609131
    6. ' n' → logprob: -3.561807155609131
    7. '):
' → logprob: -4.311807155609131
    8. '                           ' → logprob: -4.436807155609131
    9. '                       ' → logprob: -4.811807155609131
    10. ':
' → logprob: -4.936807155609131

Token 774: '                   ' (ID: 699)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.2237619161605835
    2. '                   ' → logprob: -2.098762035369873
    3. ' n' → logprob: -3.473762035369873
    4. '
' → logprob: -4.348762035369873
    5. '```' → logprob: -5.098762035369873
    6. '                           ' → logprob: -5.223762035369873
    7. '                       ' → logprob: -5.348762035369873
    8. '                               ' → logprob: -5.973762035369873
    9. '                    
' → logprob: -6.473762035369873
    10. ')' → logprob: -6.473762035369873

Token 775: ' n' (ID: 297)
  Prédit: 'no'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'no' → logprob: -0.7388728260993958
    2. 'n' (adapté à ' n') → logprob: -0.9888728260993958
    3. ' no' → logprob: -2.113872766494751
    4. ' n' → logprob: -3.613872766494751
    5. 'start' → logprob: -6.48887300491333
    6. ' start' → logprob: -8.113872528076172
    7. 'nc' → logprob: -8.613872528076172
    8. '
' → logprob: -8.738872528076172
    9. '```' → logprob: -8.988872528076172
    10. '                   ' → logprob: -9.488872528076172

Token 776: 'mask' (ID: 22527)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.12976239621639252
    2. 'o' → logprob: -2.1297624111175537
    3. 'mask' → logprob: -6.004762172698975
    4. 'oc' → logprob: -8.879762649536133
    5. '_cost' → logprob: -10.379762649536133
    6. 'c' → logprob: -10.629762649536133
    7. 'ox' → logprob: -10.629762649536133
    8. 'ost' → logprob: -10.754762649536133
    9. 'os' → logprob: -11.254762649536133
    10. 'co' → logprob: -11.379762649536133

Token 777: ' |=' (ID: 19917)
  Prédit: '|'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '|' → logprob: -0.0067225913517177105
    2. ' |=' → logprob: -5.006722450256348
    3. '=' → logprob: -12.006722450256348
    4. '|=
' → logprob: -14.381722450256348
    5. '│' → logprob: -16.006723403930664
    6. ' ' → logprob: -16.256723403930664
    7. ' =' → logprob: -16.256723403930664
    8. ' |' → logprob: -16.506723403930664
    9. '|
' → logprob: -17.006723403930664
    10. ')' → logprob: -17.381723403930664

Token 778: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.025517141446471214
    2. ' ' → logprob: -3.775517225265503
    3. '(' → logprob: -6.150516986846924
    4. ' (' → logprob: -8.900517463684082
    5. '```' → logprob: -15.775517463684082
    6. '`' → logprob: -16.400516510009766
    7. '
' → logprob: -16.775516510009766
    8. '   ' → logprob: -17.400516510009766
    9. ' ' → logprob: -17.525516510009766
    10. '  ' → logprob: -17.650516510009766

Token 779: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0019359003053978086
    2. '(' → logprob: -6.251935958862305
    3. ' ' → logprob: -11.876935958862305
    4. ' (' → logprob: -15.001935958862305
    5. '```' → logprob: -17.251935958862305
    6. '`' → logprob: -18.376935958862305
    7. '   ' → logprob: -19.876935958862305
    8. '``' → logprob: -20.251935958862305
    9. '{' → logprob: -20.376935958862305
    10. '  ' → logprob: -20.751935958862305

Token 780: ' <<' (ID: 2256)
  Prédit: '<<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.10020893067121506
    2. ' <<' → logprob: -2.3502089977264404
    3. '<' → logprob: -13.10020923614502
    4. '<<<' → logprob: -16.225208282470703
    5. '<<(' → logprob: -17.600208282470703
    6. ' <<=' → logprob: -17.600208282470703
    7. '```' → logprob: -17.600208282470703
    8. '<<"' → logprob: -18.475208282470703
    9. '()<<' → logprob: -19.100208282470703
    10. ' <' → logprob: -19.600208282470703

Token 781: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -9.088346359931165e-07
    2. ' idx' → logprob: -14.000000953674316
    3. '(idx' → logprob: -16.75
    4. '	idx' → logprob: -17.25
    5. '[idx' → logprob: -18.75
    6. '
' → logprob: -21.25
    7. 'ix' → logprob: -21.75
    8. '   ' → logprob: -21.75
    9. 'id' → logprob: -21.875
    10. 'index' → logprob: -22.0

Token 782: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.07527559250593185
    2. '                   ' → logprob: -2.7002756595611572
    3. 'n' → logprob: -6.075275421142578
    4. '               ' → logprob: -6.950275421142578
    5. '           ' → logprob: -7.450275421142578
    6. '                           ' → logprob: -8.075275421142578
    7. '
' → logprob: -8.200275421142578
    8. ',
' → logprob: -8.575275421142578
    9. '                    
' → logprob: -8.575275421142578
    10. ',' → logprob: -8.825275421142578

Token 783: '                   ' (ID: 699)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.18912826478481293
    2. 'n' → logprob: -1.9391282796859741
    3. ' no' → logprob: -4.689128398895264
    4. '                   ' → logprob: -4.939128398895264
    5. ' 
' → logprob: -6.314128398895264
    6. '                    
' → logprob: -6.314128398895264
    7. 'no' → logprob: -6.439128398895264
    8. '               ' → logprob: -6.689128398895264
    9. 'start' → logprob: -6.814128398895264
    10. '
' → logprob: -7.314128398895264

Token 784: ' no' (ID: 860)
  Prédit: 'no'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'no' (adapté à ' no') → logprob: -0.001378329354338348
    2. ' no' → logprob: -7.501378536224365
    3. 'n' → logprob: -7.876378536224365
    4. 'start' → logprob: -8.751378059387207
    5. 'min' → logprob: -8.876378059387207
    6. 'nc' → logprob: -9.251378059387207
    7. '                   ' → logprob: -11.251378059387207
    8. 'new' → logprob: -11.501378059387207
    9. '
' → logprob: -12.126378059387207
    10. '```' → logprob: -12.251378059387207

Token 785: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00010211274639004841
    2. 'o' → logprob: -9.250102043151855
    3. ' ' → logprob: -12.500102043151855
    4. ' o' → logprob: -14.625102043151855
    5. '
' → logprob: -15.000102043151855
    6. '_o' → logprob: -15.125102043151855
    7. '```' → logprob: -15.375102043151855
    8. '₂' → logprob: -15.625102043151855
    9. '=' → logprob: -16.000102996826172
    10. ' =' → logprob: -16.000102996826172

Token 786: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.14812859892845154
    2. ' =' → logprob: -2.0231285095214844
    3. '+=' → logprob: -5.648128509521484
    4. ' +=' → logprob: -6.273128509521484
    5. '+' → logprob: -10.773128509521484
    6. ' +' → logprob: -12.273128509521484
    7. ' ' → logprob: -13.648128509521484
    8. '=min' → logprob: -14.773128509521484
    9. '	' → logprob: -15.773128509521484
    10. '<' → logprob: -16.398128509521484

Token 787: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.00021474185632541776
    2. ' min' → logprob: -8.500214576721191
    3. 'max' → logprob: -11.625214576721191
    4. 'm' → logprob: -13.125214576721191
    5. '	min' → logprob: -16.125215530395508
    6. 'minimum' → logprob: -16.875215530395508
    7. '=min' → logprob: -17.000215530395508
    8. '(min' → logprob: -17.250215530395508
    9. '   ' → logprob: -17.375215530395508
    10. '[min' → logprob: -18.125215530395508

Token 788: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.1155170425772667
    2. 'm' → logprob: -2.2405171394348145
    3. '(no' → logprob: -6.1155171394348145
    4. '(' → logprob: -8.490516662597656
    5. '(n' → logprob: -8.615516662597656
    6. 'no' → logprob: -10.115516662597656
    7. ' m' → logprob: -10.740516662597656
    8. ' (' → logprob: -11.240516662597656
    9. '(o' → logprob: -11.990516662597656
    10. '   ' → logprob: -12.990516662597656

Token 789: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004838434047996998
    2. ',no' → logprob: -5.379838466644287
    3. ' ,' → logprob: -8.504837989807129
    4. ',n' → logprob: -12.004837989807129
    5. ',o' → logprob: -12.379837989807129
    6. ',
' → logprob: -13.129837989807129
    7. ' no' → logprob: -14.504837989807129
    8. 'no' → logprob: -14.504837989807129
    9. '(no' → logprob: -14.629837989807129
    10. ',max' → logprob: -14.879837989807129

Token 790: ' no' (ID: 860)
  Prédit: 'no'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'no' → logprob: -0.005952975247055292
    2. ' no' → logprob: -5.130952835083008
    3. '               ' → logprob: -12.130952835083008
    4. '   ' → logprob: -12.505952835083008
    5. '                   ' → logprob: -12.630952835083008
    6. 'o' → logprob: -12.880952835083008
    7. '           ' → logprob: -13.005952835083008
    8. '	no' → logprob: -13.005952835083008
    9. ' ' → logprob: -13.880952835083008
    10. '                       ' → logprob: -14.505952835083008

Token 791: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.0339031834737398e-05
    2. 'no' → logprob: -11.250020027160645
    3. 'o' → logprob: -12.000020027160645
    4. '```' → logprob: -14.875020027160645
    5. '
' → logprob: -15.625020027160645
    6. ' ' → logprob: -15.750020027160645
    7. '₂' → logprob: -16.00002098083496
    8. '(no' → logprob: -17.12502098083496
    9. '   ' → logprob: -17.25002098083496
    10. '２' → logprob: -17.37502098083496

Token 792: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.20143595337867737
    2. '+' → logprob: -1.701435923576355
    3. ' +
' → logprob: -11.451436042785645
    4. '+
' → logprob: -11.951436042785645
    5. ' ' → logprob: -13.076436042785645
    6. '＋' → logprob: -14.076436042785645
    7. ' plus' → logprob: -14.451436042785645
    8. ')+' → logprob: -14.576436042785645
    9. ' ' → logprob: -14.701436042785645
    10. ')' → logprob: -15.451436042785645

Token 793: ' cell' (ID: 4206)
  Prédit: 'cell'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cell' → logprob: -0.0015067668864503503
    2. 'grid' → logprob: -6.626506805419922
    3. ' cell' → logprob: -8.626506805419922
    4. ' grid' → logprob: -13.751506805419922
    5. '	cell' → logprob: -15.751506805419922
    6. 'cel' → logprob: -16.251506805419922
    7. '   ' → logprob: -16.376506805419922
    8. ' ' → logprob: -16.876506805419922
    9. '(cell' → logprob: -17.126506805419922
    10. '[cell' → logprob: -17.501506805419922

Token 794: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0011454568011686206
    2. ')
' → logprob: -6.876145362854004
    3. ' )' → logprob: -9.126145362854004
    4. '                   ' → logprob: -14.126145362854004
    5. '               ' → logprob: -14.501145362854004
    6. '+' → logprob: -14.626145362854004
    7. ')
' → logprob: -14.751145362854004
    8. ' )
' → logprob: -14.751145362854004
    9. '<|end|>' → logprob: -15.251145362854004
    10. '           ' → logprob: -15.501145362854004

Token 795: '               ' (ID: 506)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.8678722977638245
    2. '           ' → logprob: -1.3678722381591797
    3. '<|end|>' → logprob: -1.8678722381591797
    4. '               ' → logprob: -2.2428722381591797
    5. '
' → logprob: -4.36787223815918
    6. ' 
' → logprob: -4.49287223815918
    7. 'n' → logprob: -4.86787223815918
    8. '                    
' → logprob: -5.24287223815918
    9. '<|end|>' → logprob: -5.74287223815918
    10. '            
' → logprob: -6.11787223815918

Token 796: ' #' (ID: 1069)
  Prédit: ' else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.9647939801216125
    2. 'else' → logprob: -1.3397939205169678
    3. '           ' → logprob: -1.8397939205169678
    4. ' n' → logprob: -2.5897939205169678
    5. 'n' → logprob: -2.9647939205169678
    6. '               ' → logprob: -3.7147939205169678
    7. 'cost' → logprob: -4.464794158935547
    8. 'elif' → logprob: -4.964794158935547
    9. ' cost' → logprob: -5.214794158935547
    10. '                   ' → logprob: -5.464794158935547

Token 797: ' digging' (ID: 73637)
  Prédit: 'nc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nc' → logprob: -0.5853909850120544
    2. 'if' → logprob: -1.3353910446166992
    3. 'else' → logprob: -2.585391044616699
    4. '           ' → logprob: -3.335391044616699
    5. 'n' → logprob: -3.460391044616699
    6. '#' → logprob: -4.710391044616699
    7. '               ' → logprob: -5.335391044616699
    8. '```' → logprob: -5.585391044616699
    9. 'elif' → logprob: -5.585391044616699
    10. ' if' → logprob: -5.710391044616699

Token 798: ' cost' (ID: 3097)
  Prédit: ' cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cost' → logprob: -0.8825015425682068
    2. ' else' → logprob: -1.3825016021728516
    3. ' if' → logprob: -2.3825016021728516
    4. 'cost' → logprob: -2.6325016021728516
    5. 'else' → logprob: -3.0075016021728516
    6. ' continue' → logprob: -3.6325016021728516
    7. '           ' → logprob: -3.8825016021728516
    8. 'continue' → logprob: -4.257501602172852
    9. ' =' → logprob: -4.507501602172852
    10. 'if' → logprob: -4.632501602172852

Token 799: ' is' (ID: 382)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5624193549156189
    2. ' =' → logprob: -1.3124194145202637
    3. ' +=' → logprob: -2.1874194145202637
    4. ' -=' → logprob: -3.5624194145202637
    5. '+=' → logprob: -4.062419414520264
    6. '-=' → logprob: -6.062419414520264
    7. 'if' → logprob: -8.312418937683105
    8. '-' → logprob: -8.812418937683105
    9. ' if' → logprob: -9.312418937683105
    10. ' remains' → logprob: -9.687418937683105

Token 800: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.003284186590462923
    2. ' ' → logprob: -6.003283977508545
    3. 'cost' → logprob: -7.628283977508545
    4. '+' → logprob: -9.378284454345703
    5. ' cost' → logprob: -9.878284454345703
    6. '1' → logprob: -10.003284454345703
    7. 'f' → logprob: -10.628284454345703
    8. '```' → logprob: -11.003284454345703
    9. '   ' → logprob: -11.378284454345703
    10. '=' → logprob: -11.503284454345703

Token 801: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005030121188610792
    2. ' ' → logprob: -5.380030155181885
    3. 'cost' → logprob: -8.630029678344727
    4. '-' → logprob: -9.630029678344727
    5. ' -' → logprob: -10.630029678344727
    6. '1' → logprob: -10.630029678344727
    7. 'f' → logprob: -10.817529678344727
    8. ' cost' → logprob: -11.380029678344727
    9. '=' → logprob: -11.505029678344727
    10. '```' → logprob: -11.630029678344727

Token 802: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02142499014735222
    2. 'else' → logprob: -4.271424770355225
    3. ' else' → logprob: -5.146424770355225
    4. 'elif' → logprob: -7.021424770355225
    5. ' elif' → logprob: -9.271425247192383
    6. '               ' → logprob: -9.521425247192383
    7. '<|end|>' → logprob: -9.521425247192383
    8. '
' → logprob: -9.646425247192383
    9. '		' → logprob: -10.021425247192383
    10. 'continue' → logprob: -10.146425247192383

Token 803: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05930863320827484
    2. 'else' → logprob: -3.0593085289001465
    3. ' else' → logprob: -4.8093085289001465
    4. 'elif' → logprob: -6.4343085289001465
    5. '               ' → logprob: -7.3093085289001465
    6. ' elif' → logprob: -9.184309005737305
    7. '```' → logprob: -9.809309005737305
    8. 'continue' → logprob: -11.059309005737305
    9. '       ' → logprob: -11.184309005737305
    10. '<|end|>' → logprob: -11.559309005737305

Token 804: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.02399389073252678
    2. '           ' → logprob: -3.898993968963623
    3. 'elif' → logprob: -6.148993968963623
    4. ' else' → logprob: -6.648993968963623
    5. '       ' → logprob: -12.398993492126465
    6. '               ' → logprob: -12.898993492126465
    7. ' elif' → logprob: -13.023993492126465
    8. '```' → logprob: -13.148993492126465
    9. 'if' → logprob: -13.398993492126465
    10. '   ' → logprob: -14.023993492126465

Token 805: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.25456979870796204
    2. ':' → logprob: -1.5045697689056396
    3. '               ' → logprob: -6.379570007324219
    4. '           ' → logprob: -7.504570007324219
    5. '   ' → logprob: -8.754570007324219
    6. '       ' → logprob: -10.254570007324219
    7. ' if' → logprob: -10.504570007324219
    8. ' :
' → logprob: -10.504570007324219
    9. 'if' → logprob: -10.754570007324219
    10. '{
' → logprob: -11.129570007324219

Token 806: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.1919505596160889
    2. '           ' → logprob: -1.3169505596160889
    3. ' n' → logprob: -2.066950559616089
    4. 'nc' → logprob: -2.066950559616089
    5. 'n' → logprob: -2.191950559616089
    6. '   ' → logprob: -3.566950559616089
    7. '       ' → logprob: -5.316950798034668
    8. '                   ' → logprob: -5.441950798034668
    9. '```' → logprob: -5.566950798034668
    10. ' nc' → logprob: -5.566950798034668

Token 807: ' #' (ID: 1069)
  Prédit: 'nc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nc' → logprob: -0.03489474207162857
    2. '           ' → logprob: -3.7848947048187256
    3. 'n' → logprob: -5.409894943237305
    4. 'dig' → logprob: -6.034894943237305
    5. ' n' → logprob: -6.534894943237305
    6. ' nc' → logprob: -6.909894943237305
    7. 'if' → logprob: -7.034894943237305
    8. '#' (adapté à ' #') → logprob: -8.159894943237305
    9. '   ' → logprob: -8.284894943237305
    10. 'cost' → logprob: -8.409894943237305

Token 808: ' soil' (ID: 22390)
  Prédit: 'nc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nc' → logprob: -0.03151948004961014
    2. 'n' → logprob: -4.406519412994385
    3. 'if' → logprob: -4.406519412994385
    4. '#' → logprob: -6.031519412994385
    5. ' n' → logprob: -7.031519412994385
    6. 'dig' → logprob: -7.031519412994385
    7. 'cost' → logprob: -7.281519412994385
    8. ' if' → logprob: -7.781519412994385
    9. ' nc' → logprob: -8.656519889831543
    10. 'nd' → logprob: -8.781519889831543

Token 809: ' cell' (ID: 4206)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.493283748626709
    2. ' cost' → logprob: -2.618283748626709
    3. '_cost' → logprob: -2.618283748626709
    4. ' =' → logprob: -2.743283748626709
    5. ' +=' → logprob: -2.743283748626709
    6. 'cell' → logprob: -3.868283748626709
    7. '=' → logprob: -3.993283748626709
    8. ':' → logprob: -3.993283748626709
    9. ' cell' → logprob: -4.118283748626709
    10. '           ' → logprob: -4.868283748626709

Token 810: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9197077751159668
    2. '           ' → logprob: -1.2947077751159668
    3. ' n' → logprob: -2.169707775115967
    4. ' +=' → logprob: -2.294707775115967
    5. '               ' → logprob: -3.419707775115967
    6. '=' → logprob: -4.044707775115967
    7. ' cost' → logprob: -4.294707775115967
    8. 'cost' → logprob: -4.294707775115967
    9. 'n' → logprob: -4.669707775115967
    10. ' -=' → logprob: -5.669707775115967

Token 811: ' must' (ID: 2804)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.21524196863174438
    2. 'nc' → logprob: -1.9652419090270996
    3. 'n' → logprob: -3.3402419090270996
    4. 'dig' → logprob: -4.7152419090271
    5. 'cost' → logprob: -5.8402419090271
    6. ' digging' → logprob: -6.4652419090271
    7. ' cost' → logprob: -7.0902419090271
    8. 'soil' → logprob: -7.3402419090271
    9. ' if' → logprob: -7.7152419090271
    10. ' nc' → logprob: -7.8402419090271

Token 812: ' dig' (ID: 3807)
  Prédit: 'pay'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pay' → logprob: -0.9246475100517273
    2. 'nc' → logprob: -1.174647569656372
    3. 'cost' → logprob: -1.424647569656372
    4. 'n' → logprob: -3.924647569656372
    5. ' pay' → logprob: -4.674647331237793
    6. ' cost' → logprob: -4.799647331237793
    7. 'dig' → logprob: -4.799647331237793
    8. '_cost' → logprob: -6.424647331237793
    9. 'nt' → logprob: -6.924647331237793
    10. '           ' → logprob: -7.049647331237793

Token 813: ' (' (ID: 350)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.315981388092041
    2. '=' → logprob: -1.440981388092041
    3. ' +=' → logprob: -2.065981388092041
    4. '+=' → logprob: -2.190981388092041
    5. 'cost' → logprob: -2.315981388092041
    6. ' -=' → logprob: -2.440981388092041
    7. '-=' → logprob: -3.440981388092041
    8. ' cost' → logprob: -3.815981388092041
    9. '-cost' → logprob: -5.190981388092041
    10. '-' → logprob: -5.690981388092041

Token 814: 'pay' (ID: 20615)
  Prédit: 'nc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nc' → logprob: -0.18051262199878693
    2. 'n' → logprob: -2.8055126667022705
    3. 'cost' → logprob: -3.3055126667022705
    4. ' n' → logprob: -3.3055126667022705
    5. ' nc' → logprob: -4.180512428283691
    6. ' cost' → logprob: -4.930512428283691
    7. 'if' → logprob: -6.930512428283691
    8. '
' → logprob: -7.055512428283691
    9. '```' → logprob: -7.055512428283691
    10. 'nd' → logprob: -7.305512428283691

Token 815: ' cost' (ID: 3097)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5684806108474731
    2. ' -' → logprob: -1.4434806108474731
    3. '-' → logprob: -2.4434804916381836
    4. ' ' → logprob: -2.6934804916381836
    5. '-f' → logprob: -4.068480491638184
    6. ' f' → logprob: -5.068480491638184
    7. 'abs' → logprob: -5.318480491638184
    8. ')' → logprob: -5.943480491638184
    9. '-grid' → logprob: -6.068480491638184
    10. ' abs' → logprob: -6.193480491638184

Token 816: ')
' (ID: 446)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5691454410552979
    2. '=' → logprob: -1.1941454410552979
    3. ' +=' → logprob: -2.444145441055298
    4. '+=' → logprob: -3.444145441055298
    5. ' -=' → logprob: -4.694145202636719
    6. '-=' → logprob: -6.444145202636719
    7. ')' → logprob: -6.944145202636719
    8. '+' → logprob: -8.444145202636719
    9. '-' → logprob: -9.069145202636719
    10. ' +' → logprob: -9.944145202636719

Token 817: '               ' (ID: 506)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1332317292690277
    2. ' +=' → logprob: -2.3832316398620605
    3. '=' → logprob: -3.8832316398620605
    4. '+=' → logprob: -4.6332316398620605
    5. ' -=' → logprob: -6.3832316398620605
    6. ' cost' → logprob: -8.883232116699219
    7. 'cost' → logprob: -9.008232116699219
    8. ' +' → logprob: -9.508232116699219
    9. '+' → logprob: -10.258232116699219
    10. '-=' → logprob: -10.633232116699219

Token 818: ' n' (ID: 297)
  Prédit: 'nc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nc' → logprob: -0.0012986884685233235
    2. 'n' (adapté à ' n') → logprob: -7.376298904418945
    3. ' nc' → logprob: -8.251298904418945
    4. 'if' → logprob: -8.751298904418945
    5. ' n' → logprob: -8.876298904418945
    6. 'cost' → logprob: -10.251298904418945
    7. '           ' → logprob: -10.501298904418945
    8. ' if' → logprob: -11.126298904418945
    9. '_nc' → logprob: -12.376298904418945
    10. '```' → logprob: -12.376298904418945

Token 819: 'cost' (ID: 33457)
  Prédit: 'cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -1.8624639324116288e-06
    2. '_cost' → logprob: -13.500001907348633
    3. ' cost' → logprob: -14.750001907348633
    4. 'c' → logprob: -19.250001907348633
    5. 'ost' → logprob: -19.250001907348633
    6. 'oc' → logprob: -19.625001907348633
    7. '=' → logprob: -19.625001907348633
    8. '-cost' → logprob: -19.875001907348633
    9. 'Cost' → logprob: -20.000001907348633
    10. 'cos' → logprob: -20.000001907348633

Token 820: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.600837767124176
    2. '+=' → logprob: -0.850837767124176
    3. ' -=' → logprob: -4.225837707519531
    4. '-=' → logprob: -5.225837707519531
    5. '=' → logprob: -5.600837707519531
    6. ' =' → logprob: -7.475837707519531
    7. '+' → logprob: -8.725837707519531
    8. '-' → logprob: -8.975837707519531
    9. ' +' → logprob: -11.350837707519531
    10. ']+=' → logprob: -11.600837707519531

Token 821: ' -' (ID: 533)
  Prédit: '-f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-f' → logprob: -0.0958380177617073
    2. '-' → logprob: -3.0958380699157715
    3. '1' → logprob: -3.8458380699157715
    4. 'f' → logprob: -4.5958380699157715
    5. ' -' → logprob: -4.5958380699157715
    6. '-cell' → logprob: -5.9708380699157715
    7. '(-' → logprob: -6.7208380699157715
    8. 'cell' → logprob: -8.720837593078613
    9. 'abs' → logprob: -9.220837593078613
    10. '-c' → logprob: -9.470837593078613

Token 822: 'cell' (ID: 10936)
  Prédit: 'cell'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cell' → logprob: -9.491498531133402e-06
    2. 'grid' → logprob: -11.750009536743164
    3. ' cell' → logprob: -13.375009536743164
    4. '(cell' → logprob: -18.000009536743164
    5. '	cell' → logprob: -18.125009536743164
    6. 'cel' → logprob: -18.500009536743164
    7. '```' → logprob: -20.625009536743164
    8. '_cell' → logprob: -21.125009536743164
    9. '[cell' → logprob: -21.125009536743164
    10. 'cells' → logprob: -21.375009536743164

Token 823: '
' (ID: 198)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7026574611663818
    2. '           ' → logprob: -1.3276574611663818
    3. 'if' → logprob: -1.4526574611663818
    4. '       ' → logprob: -6.077657699584961
    5. '
' → logprob: -6.202657699584961
    6. '   ' → logprob: -7.952657699584961
    7. '+' → logprob: -8.077657699584961
    8. ' ' → logprob: -8.952657699584961
    9. '```' → logprob: -8.952657699584961
    10. '               ' → logprob: -9.202657699584961

Token 824: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8273081183433533
    2. ' if' → logprob: -0.8273081183433533
    3. 'if' → logprob: -2.077308177947998
    4. '```' → logprob: -8.32730770111084
    5. '   ' → logprob: -10.70230770111084
    6. ' ' → logprob: -12.07730770111084
    7. '       ' → logprob: -12.45230770111084
    8. '	if' → logprob: -13.20230770111084
    9. '            
' → logprob: -13.32730770111084
    10. '               ' → logprob: -13.32730770111084

Token 825: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0004647504829335958
    2. '           ' → logprob: -8.25046443939209
    3. ' if' → logprob: -8.50046443939209
    4. '   ' → logprob: -18.625465393066406
    5. '               ' → logprob: -18.625465393066406
    6. '	if' → logprob: -18.750465393066406
    7. '       ' → logprob: -18.750465393066406
    8. '```' → logprob: -18.750465393066406
    9. 'If' → logprob: -20.000465393066406
    10. ' ' → logprob: -20.375465393066406

Token 826: ' n' (ID: 297)
  Prédit: 'nc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nc' → logprob: -0.06280922889709473
    2. ' n' → logprob: -2.8128092288970947
    3. 'n' → logprob: -7.312808990478516
    4. 'cost' → logprob: -9.437808990478516
    5. ' nc' → logprob: -10.062808990478516
    6. '
' → logprob: -11.187808990478516
    7. '```' → logprob: -11.937808990478516
    8. 'ncmp' → logprob: -12.187808990478516
    9. '	n' → logprob: -12.312808990478516
    10. '(n' → logprob: -12.687808990478516

Token 827: 'cost' (ID: 33457)
  Prédit: 'cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -2.927930654550437e-05
    2. '_cost' → logprob: -11.125029563903809
    3. ' cost' → logprob: -12.250029563903809
    4. '(cost' → logprob: -13.375029563903809
    5. 'cot' → logprob: -14.000029563903809
    6. 'oc' → logprob: -14.000029563903809
    7. 'cout' → logprob: -14.125029563903809
    8. 'cust' → logprob: -14.125029563903809
    9. '```' → logprob: -14.125029563903809
    10. ' n' → logprob: -14.375029563903809

Token 828: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.6931543946266174
    2. ' >' → logprob: -0.6931543946266174
    3. '>=' → logprob: -12.568154335021973
    4. ' >=' → logprob: -13.193154335021973
    5. '   ' → logprob: -14.193154335021973
    6. ' <=' → logprob: -15.568154335021973
    7. '<=' → logprob: -15.568154335021973
    8. ' ' → logprob: -15.818154335021973
    9. '>
' → logprob: -16.69315528869629
    10. ' >
' → logprob: -16.69315528869629

Token 829: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -5.88418151892256e-05
    2. ' f' → logprob: -9.750059127807617
    3. '	f' → logprob: -14.750059127807617
    4. '   ' → logprob: -16.375059127807617
    5. ' ' → logprob: -19.125059127807617
    6. '
' → logprob: -19.375059127807617
    7. '_f' → logprob: -19.375059127807617
    8. '  ' → logprob: -19.750059127807617
    9. 'cost' → logprob: -19.750059127807617
    10. '=f' → logprob: -20.125059127807617

Token 830: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.4460122287273407
    2. ':' → logprob: -1.071012258529663
    3. '               ' → logprob: -4.321012020111084
    4. '                   ' → logprob: -6.571012020111084
    5. '           ' → logprob: -6.946012020111084
    6. 'continue' → logprob: -7.571012020111084
    7. ' continue' → logprob: -8.071012496948242
    8. '                       ' → logprob: -8.071012496948242
    9. '       ' → logprob: -9.196012496948242
    10. '   ' → logprob: -9.446012496948242

Token 831: '                   ' (ID: 699)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.13419878482818604
    2. '               ' → logprob: -2.1341986656188965
    3. '                   ' → logprob: -5.3841986656188965
    4. ' continue' → logprob: -6.0091986656188965
    5. '   ' → logprob: -8.759199142456055
    6. '	continue' → logprob: -11.259199142456055
    7. '           ' → logprob: -11.509199142456055
    8. '```' → logprob: -11.509199142456055
    9. '                       ' → logprob: -12.259199142456055
    10. '       ' → logprob: -12.884199142456055

Token 832: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.002922087674960494
    2. ' continue' → logprob: -6.252922058105469
    3. '                   ' → logprob: -7.252922058105469
    4. '               ' → logprob: -8.502922058105469
    5. '   ' → logprob: -9.502922058105469
    6. '	continue' → logprob: -12.752922058105469
    7. '                       ' → logprob: -12.752922058105469
    8. '           ' → logprob: -13.752922058105469
    9. '       ' → logprob: -15.252922058105469
    10. ' ' → logprob: -15.877922058105469

Token 833: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06380388885736465
    2. 'key' → logprob: -2.9388039112091064
    3. ' key' → logprob: -4.813803672790527
    4. '               ' → logprob: -7.438803672790527
    5. '```' → logprob: -9.813803672790527
    6. '   ' → logprob: -10.313803672790527
    7. '                   ' → logprob: -10.813803672790527
    8. 'continue' → logprob: -10.938803672790527
    9. '            
' → logprob: -11.563803672790527
    10. 'next' → logprob: -11.688803672790527

Token 834: '           ' (ID: 352)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.3212357759475708
    2. '           ' → logprob: -1.3212357759475708
    3. ' key' → logprob: -5.196235656738281
    4. '```' → logprob: -7.071235656738281
    5. 'if' → logprob: -7.696235656738281
    6. 'next' → logprob: -7.821235656738281
    7. 'n' → logprob: -8.196235656738281
    8. '   ' → logprob: -8.821235656738281
    9. '            
' → logprob: -9.571235656738281
    10. 'new' → logprob: -9.821235656738281

Token 835: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.1059136912226677
    2. 'new' → logprob: -3.1059136390686035
    3. 'key' → logprob: -3.4809136390686035
    4. '           ' → logprob: -3.8559136390686035
    5. 'next' → logprob: -6.1059136390686035
    6. 'nk' → logprob: -6.9809136390686035
    7. 'if' → logprob: -8.855914115905762
    8. ' n' → logprob: -9.355914115905762
    9. '   ' → logprob: -9.480914115905762
    10. 'nt' → logprob: -10.230914115905762

Token 836: 'key' (ID: 1898)
  Prédit: 'key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'key' → logprob: -6.349075556499884e-05
    2. 'ey' → logprob: -10.2500638961792
    3. '_key' → logprob: -10.8750638961792
    4. 'ext' → logprob: -13.0000638961792
    5. ' key' → logprob: -13.5000638961792
    6. 'ew' → logprob: -13.6250638961792
    7. 'cost' → logprob: -14.0000638961792
    8. 'e' → logprob: -14.5000638961792
    9. '```' → logprob: -14.7500638961792
    10. '
' → logprob: -15.0000638961792

Token 837: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1269323080778122
    2. ' =' → logprob: -2.126932382583618
    3. '=(' → logprob: -13.251932144165039
    4. '=
' → logprob: -13.501932144165039
    5. ' =(' → logprob: -14.626932144165039
    6. '＝' → logprob: -15.376932144165039
    7. ' =
' → logprob: -16.50193214416504
    8. '<|end|>' → logprob: -16.50193214416504
    9. '=n' → logprob: -16.62693214416504
    10. ')' → logprob: -16.75193214416504

Token 838: ' (' (ID: 350)
  Prédit: '(nx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(nx' → logprob: -0.06206190586090088
    2. ' (' → logprob: -2.8120617866516113
    3. '(n' → logprob: -9.31206226348877
    4. '(' → logprob: -12.56206226348877
    5. '   ' → logprob: -16.562061309814453
    6. '(x' → logprob: -16.687061309814453
    7. '(nn' → logprob: -17.062061309814453
    8. '(
' → logprob: -17.187061309814453
    9. '(cx' → logprob: -17.437061309814453
    10. ' ' → logprob: -17.562061309814453

Token 839: 'nx' (ID: 45103)
  Prédit: 'nx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nx' → logprob: -0.023264462128281593
    2. '(nx' → logprob: -3.7732644081115723
    3. ' nx' → logprob: -11.02326488494873
    4. '(n' → logprob: -12.89826488494873
    5. 'n' → logprob: -16.648263931274414
    6. '[n' → logprob: -17.273263931274414
    7. '
' → logprob: -18.398263931274414
    8. '```' → logprob: -18.523263931274414
    9. 'Nx' → logprob: -18.773263931274414
    10. '   ' → logprob: -18.773263931274414

Token 840: ',' (ID: 11)
  Prédit: ',n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',n' → logprob: -0.47484031319618225
    2. ',' → logprob: -0.9748402833938599
    3. ',y' → logprob: -7.22484016418457
    4. ' ,' → logprob: -10.47484016418457
    5. 'n' → logprob: -13.09984016418457
    6. ',
' → logprob: -13.34984016418457
    7. ',x' → logprob: -14.09984016418457
    8. ',num' → logprob: -15.34984016418457
    9. ',no' → logprob: -15.34984016418457
    10. '(nx' → logprob: -15.47484016418457

Token 841: ' ny' (ID: 4423)
  Prédit: 'ny'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ny' → logprob: -4.0484450437361374e-05
    2. ' ny' → logprob: -10.125040054321289
    3. 'nyi' → logprob: -15.375040054321289
    4. 'n' → logprob: -16.62504005432129
    5. '
' → logprob: -17.00004005432129
    6. ''ny' → logprob: -18.37504005432129
    7. '   ' → logprob: -18.37504005432129
    8. '```' → logprob: -18.62504005432129
    9. '    
' → logprob: -18.75004005432129
    10. 'nym' → logprob: -18.75004005432129

Token 842: ',' (ID: 11)
  Prédit: ',no'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',no' → logprob: -0.13053949177265167
    2. ',' → logprob: -2.1305394172668457
    3. 'no' → logprob: -5.630539417266846
    4. ' ,' → logprob: -11.630539894104004
    5. ',n' → logprob: -12.255539894104004
    6. ' no' → logprob: -12.755539894104004
    7. ',
' → logprob: -14.005539894104004
    8. '(no' → logprob: -15.005539894104004
    9. 'No' → logprob: -15.380539894104004
    10. '	no' → logprob: -15.630539894104004

Token 843: ' no' (ID: 860)
  Prédit: 'no'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'no' → logprob: -3.128163257315464e-07
    2. ' no' → logprob: -15.375
    3. '   ' → logprob: -18.875
    4. '	no' → logprob: -19.875
    5. '(no' → logprob: -21.0
    6. 'No' → logprob: -21.75
    7. ' ' → logprob: -21.75
    8. 'n' → logprob: -21.75
    9. '       ' → logprob: -22.25
    10. ',no' → logprob: -22.5

Token 844: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: 0.0
    2. '₂' → logprob: -17.0
    3. 'no' → logprob: -18.125
    4. '```' → logprob: -19.125
    5. '-' → logprob: -19.75
    6. 'o' → logprob: -20.0
    7. '
' → logprob: -20.25
    8. '(no' → logprob: -20.25
    9. '۲' → logprob: -20.5
    10. '２' → logprob: -20.625

Token 845: ',' (ID: 11)
  Prédit: ',n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',n' → logprob: -0.5759445428848267
    2. ',' → logprob: -0.8259445428848267
    3. ' ,' → logprob: -12.575944900512695
    4. ',
' → logprob: -13.575944900512695
    5. 'n' → logprob: -15.700944900512695
    6. '   ' → logprob: -16.325944900512695
    7. '```' → logprob: -16.950944900512695
    8. ',N' → logprob: -17.325944900512695
    9. ',next' → logprob: -17.950944900512695
    10. ',int' → logprob: -18.325944900512695

Token 846: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.9361264946837764e-07
    2. ' n' → logprob: -16.5
    3. '	n' → logprob: -19.625
    4. ')n' → logprob: -20.125
    5. '```' → logprob: -22.5
    6. '   ' → logprob: -22.5
    7. '``' → logprob: -23.625
    8. 'н' → logprob: -23.625
    9. 'new' → logprob: -23.75
    10. ')' → logprob: -23.75

Token 847: 'mask' (ID: 22527)
  Prédit: 'mask'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mask' → logprob: -3.054500666621607e-06
    2. 'key' → logprob: -13.75000286102295
    3. '_mask' → logprob: -13.75000286102295
    4. 'mas' → logprob: -15.50000286102295
    5. 'mark' → logprob: -16.000003814697266
    6. 'm' → logprob: -16.000003814697266
    7. 'cost' → logprob: -16.500003814697266
    8. '	mask' → logprob: -17.250003814697266
    9. 'MASK' → logprob: -17.375003814697266
    10. 'masked' → logprob: -17.500003814697266

Token 848: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20144587755203247
    2. ')
' → logprob: -1.7014458179473877
    3. ')
' → logprob: -10.701445579528809
    4. '   ' → logprob: -11.826445579528809
    5. '       ' → logprob: -13.951445579528809
    6. ')

' → logprob: -14.576445579528809
    7. ' )' → logprob: -14.701445579528809
    8. ' )
' → logprob: -15.076445579528809
    9. ')`
' → logprob: -15.701445579528809
    10. ',' → logprob: -15.951445579528809

Token 849: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.37684139609336853
    2. '       ' → logprob: -1.376841425895691
    3. 'if' → logprob: -3.5018413066864014
    4. '<|end|>' → logprob: -4.3768415451049805
    5. '```' → logprob: -4.5018415451049805
    6. ' if' → logprob: -5.1268415451049805
    7. '   ' → logprob: -7.0018415451049805
    8. '<|end|>' → logprob: -8.37684154510498
    9. ')' → logprob: -8.75184154510498
    10. '            
' → logprob: -9.25184154510498

Token 850: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.005006278399378061
    2. '           ' → logprob: -6.005006313323975
    3. ' if' → logprob: -6.005006313323975
    4. '       ' → logprob: -10.380005836486816
    5. '```' → logprob: -11.005005836486816
    6. '	if' → logprob: -11.880005836486816
    7. 'prev' → logprob: -13.630005836486816
    8. 'If' → logprob: -13.880005836486816
    9. '            
' → logprob: -14.005005836486816
    10. '   ' → logprob: -14.130005836486816

Token 851: ' dist' (ID: 3601)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6964706182479858
    2. 'dist' → logprob: -0.6964706182479858
    3. ' dist' → logprob: -6.196470737457275
    4. ' n' → logprob: -6.821470737457275
    5. '   ' → logprob: -9.446470260620117
    6. '(dist' → logprob: -9.696470260620117
    7. '(n' → logprob: -10.446470260620117
    8. '	dist' → logprob: -12.446470260620117
    9. 'not' → logprob: -12.696470260620117
    10. '	n' → logprob: -12.821470260620117

Token 852: '.get' (ID: 775)
  Prédit: '.get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.get' → logprob: -2.6895233531831764e-05
    2. '.setdefault' → logprob: -11.50002670288086
    3. ' .' → logprob: -11.87502670288086
    4. 'get' → logprob: -12.37502670288086
    5. 'n' → logprob: -12.75002670288086
    6. '.' → logprob: -13.75002670288086
    7. '   ' → logprob: -14.12502670288086
    8. '[n' → logprob: -15.50002670288086
    9. '```' → logprob: -15.50002670288086
    10. '_n' → logprob: -16.25002670288086

Token 853: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -6.704273118884885e-07
    2. 'n' → logprob: -14.625000953674316
    3. ' (' → logprob: -15.750000953674316
    4. '(
' → logprob: -17.5
    5. '(' → logprob: -17.875
    6. '```' → logprob: -20.0
    7. '((' → logprob: -21.0
    8. '(key' → logprob: -21.625
    9. '(N' → logprob: -22.375
    10. ' n' → logprob: -22.5

Token 854: 'key' (ID: 1898)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.7255787253379822
    2. 'n' → logprob: -0.9755787253379822
    3. 'key' → logprob: -1.975578784942627
    4. '(key' → logprob: -8.350578308105469
    5. 'k' → logprob: -11.475578308105469
    6. '```' → logprob: -11.475578308105469
    7. ' n' → logprob: -11.600578308105469
    8. '_key' → logprob: -11.600578308105469
    9. 'ey' → logprob: -11.850578308105469
    10. '[n' → logprob: -12.225578308105469

Token 855: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2962906062602997
    2. ' is' → logprob: -1.421290636062622
    3. '>' → logprob: -4.921290397644043
    4. 'is' → logprob: -5.296290397644043
    5. ')' → logprob: -7.546290397644043
    6. ' >' → logprob: -7.671290397644043
    7. '==' → logprob: -7.796290397644043
    8. '=' → logprob: -8.046290397644043
    9. '=None' → logprob: -8.671290397644043
    10. '   ' → logprob: -8.921290397644043

Token 856: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.0004396095173433423
    2. ' float' → logprob: -7.750439643859863
    3. '100' → logprob: -12.500439643859863
    4. '=float' → logprob: -12.750439643859863
    5. 'lambda' → logprob: -14.875439643859863
    6. '   ' → logprob: -15.000439643859863
    7. ' ' → logprob: -15.250439643859863
    8. 'n' → logprob: -15.250439643859863
    9. 'inf' → logprob: -15.625439643859863
    10. '	float' → logprob: -16.125438690185547

Token 857: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.0012005893513560295
    2. 'inf' → logprob: -7.0012006759643555
    3. '(float' → logprob: -9.001200675964355
    4. '=float' → logprob: -9.626200675964355
    5. 'float' → logprob: -10.751200675964355
    6. ''' → logprob: -11.251200675964355
    7. '(in' → logprob: -11.751200675964355
    8. '=' → logprob: -11.876200675964355
    9. '(' → logprob: -11.876200675964355
    10. '   ' → logprob: -12.126200675964355

Token 858: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -7.719917630311102e-05
    2. 'float' → logprob: -9.875077247619629
    3. '1' → logprob: -11.375077247619629
    4. '   ' → logprob: -11.875077247619629
    5. ')' → logprob: -13.250077247619629
    6. '           ' → logprob: -14.250077247619629
    7. '0' → logprob: -14.375077247619629
    8. '')' → logprob: -14.750077247619629
    9. '       ' → logprob: -14.750077247619629
    10. 'f' → logprob: -14.875077247619629

Token 859: ''))' (ID: 7974)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.000169332604855299
    2. '`)' → logprob: -9.50016975402832
    3. '')' → logprob: -10.00016975402832
    4. ' )' → logprob: -10.75016975402832
    5. ')>' → logprob: -11.00016975402832
    6. '")' → logprob: -12.62516975402832
    7. '())' → logprob: -12.75016975402832
    8. '>)' → logprob: -12.87516975402832
    9. '）' → logprob: -14.12516975402832
    10. '>' → logprob: -14.37516975402832

Token 860: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.020797153934836388
    2. ' >' → logprob: -4.520797252655029
    3. '<=' → logprob: -4.645797252655029
    4. ' <=' → logprob: -9.270796775817871
    5. '```' → logprob: -13.395796775817871
    6. '   ' → logprob: -13.520796775817871
    7. '>
' → logprob: -14.145796775817871
    8. '>`' → logprob: -14.395796775817871
    9. '()>' → logprob: -15.520796775817871
    10. ')>' → logprob: -15.520796775817871

Token 861: ' n' (ID: 297)
  Prédit: 'nc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nc' → logprob: -0.002240654779598117
    2. ' n' → logprob: -6.1272406578063965
    3. 'n' → logprob: -10.252240180969238
    4. ' nc' → logprob: -10.877240180969238
    5. '   ' → logprob: -14.502240180969238
    6. '
' → logprob: -15.377240180969238
    7. 'nb' → logprob: -16.127241134643555
    8. 'ncmp' → logprob: -16.252241134643555
    9. '	n' → logprob: -16.502241134643555
    10. 'nt' → logprob: -16.502241134643555

Token 862: 'cost' (ID: 33457)
  Prédit: 'nc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nc' → logprob: -0.010142995975911617
    2. 'cost' → logprob: -4.635142803192139
    3. 'n' → logprob: -8.635143280029297
    4. ' n' → logprob: -8.760143280029297
    5. '_n' → logprob: -10.385143280029297
    6. '_cost' → logprob: -12.010143280029297
    7. '(n' → logprob: -12.135143280029297
    8. '```' → logprob: -12.885143280029297
    9. '   ' → logprob: -13.510143280029297
    10. ' nc' → logprob: -13.885143280029297

Token 863: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08556123077869415
    2. ':
' → logprob: -2.5855612754821777
    3. '=' → logprob: -5.210561275482178
    4. ')' → logprob: -8.21056079864502
    5. '):
' → logprob: -8.46056079864502
    6. ',' → logprob: -9.08556079864502
    7. ' =' → logprob: -9.33556079864502
    8. '):' → logprob: -9.33556079864502
    9. '           ' → logprob: -9.46056079864502
    10. '   ' → logprob: -9.71056079864502

Token 864: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8758363127708435
    2. '```' → logprob: -1.1258363723754883
    3. '               ' → logprob: -2.7508363723754883
    4. '       ' → logprob: -2.8758363723754883
    5. '<|end|>' → logprob: -2.8758363723754883
    6. '{' → logprob: -3.5008363723754883
    7. ':' → logprob: -4.375836372375488
    8. ')' → logprob: -4.500836372375488
    9. ':
' → logprob: -5.500836372375488
    10. '):
' → logprob: -5.750836372375488

Token 865: ' dist' (ID: 3601)
  Prédit: ' dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dist' → logprob: -0.13704991340637207
    2. 'dist' (adapté à ' dist') → logprob: -2.262049913406372
    3. '               ' → logprob: -3.762049913406372
    4. '                   ' → logprob: -8.387049674987793
    5. '   ' → logprob: -8.762049674987793
    6. '	dist' → logprob: -8.887049674987793
    7. '```' → logprob: -8.887049674987793
    8. '           ' → logprob: -11.137049674987793
    9. '_dist' → logprob: -11.637049674987793
    10. '       ' → logprob: -12.137049674987793

Token 866: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -1.7432603272027336e-06
    2. 'n' → logprob: -13.875001907348633
    3. '[' → logprob: -15.500001907348633
    4. '[key' → logprob: -15.625001907348633
    5. '```' → logprob: -16.500001907348633
    6. '[
' → logprob: -16.875001907348633
    7. '[(' → logprob: -16.875001907348633
    8. '(n' → logprob: -17.125001907348633
    9. ' [' → logprob: -17.750001907348633
    10. '=n' → logprob: -18.000001907348633

Token 867: 'key' (ID: 1898)
  Prédit: 'key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'key' → logprob: -3.6312321753939614e-05
    2. '[key' → logprob: -11.125036239624023
    3. 'ey' → logprob: -11.375036239624023
    4. '[n' → logprob: -12.375036239624023
    5. '_key' → logprob: -12.625036239624023
    6. 'k' → logprob: -14.125036239624023
    7. 'KEY' → logprob: -15.250036239624023
    8. 'e' → logprob: -15.375036239624023
    9. '```' → logprob: -15.500036239624023
    10. 'ek' → logprob: -15.750036239624023

Token 868: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31334424018859863
    2. ' =' → logprob: -1.3133442401885986
    3. '=n' → logprob: -9.43834400177002
    4. '=
' → logprob: -13.43834400177002
    5. ']=' → logprob: -15.18834400177002
    6. ' =
' → logprob: -15.18834400177002
    7. '＝' → logprob: -15.43834400177002
    8. '=k' → logprob: -15.68834400177002
    9. '=c' → logprob: -15.81334400177002
    10. ')=' → logprob: -16.438344955444336

Token 869: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.023247109726071358
    2. ' =' → logprob: -3.773247003555298
    3. '=n' → logprob: -13.398246765136719
    4. '=
' → logprob: -16.14824676513672
    5. '＝' → logprob: -18.89824676513672
    6. '=

' → logprob: -20.02324676513672
    7. '=cut' → logprob: -20.39824676513672
    8. '=k' → logprob: -20.39824676513672
    9. ')=' → logprob: -20.64824676513672
    10. ']=' → logprob: -20.77324676513672

Token 870: ' n' (ID: 297)
  Prédit: 'nc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nc' → logprob: -0.00036846695002168417
    2. ' n' → logprob: -8.000368118286133
    3. ' nc' → logprob: -10.750368118286133
    4. 'n' → logprob: -11.375368118286133
    5. '	n' → logprob: -17.125368118286133
    6. 'NC' → logprob: -17.500368118286133
    7. '_nc' → logprob: -18.000368118286133
    8. '[n' → logprob: -18.500368118286133
    9. '(n' → logprob: -18.750368118286133
    10. 'nb' → logprob: -18.875368118286133

Token 871: 'cost' (ID: 33457)
  Prédit: 'cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -5.512236498361744e-07
    2. '_cost' → logprob: -14.625000953674316
    3. '-cost' → logprob: -19.875
    4. ' cost' → logprob: -20.25
    5. 'c' → logprob: -20.375
    6. 'Cost' → logprob: -20.5
    7. '(cost' → logprob: -20.875
    8. 'cot' → logprob: -21.25
    9. 'cout' → logprob: -22.25
    10. '.cost' → logprob: -22.5

Token 872: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.015638722106814384
    2. 'heap' → logprob: -5.265638828277588
    3. ' heap' → logprob: -5.765638828277588
    4. '                   ' → logprob: -5.890638828277588
    5. '```' → logprob: -6.140638828277588
    6. '           ' → logprob: -7.390638828277588
    7. '			' → logprob: -7.515638828277588
    8. '(heap' → logprob: -7.890638828277588
    9. ',' → logprob: -8.51563835144043
    10. '   ' → logprob: -8.89063835144043

Token 873: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0652308464050293
    2. 'heap' → logprob: -3.5652308464050293
    3. '```' → logprob: -3.6902308464050293
    4. ' heap' → logprob: -4.940230846405029
    5. '                   ' → logprob: -6.315230846405029
    6. '           ' → logprob: -7.440230846405029
    7. '``' → logprob: -8.815231323242188
    8. '(heap' → logprob: -9.565231323242188
    9. '   ' → logprob: -10.190231323242188
    10. '       ' → logprob: -10.815231323242188

Token 874: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' (adapté à ' heap') → logprob: -1.5048530030981055e-06
    2. ' heap' → logprob: -13.500001907348633
    3. '```' → logprob: -18.250001907348633
    4. 'he' → logprob: -19.500001907348633
    5. '(heap' → logprob: -21.375001907348633
    6. '.heap' → logprob: -22.375001907348633
    7. '_heap' → logprob: -22.750001907348633
    8. '   ' → logprob: -23.125001907348633
    9. 'heat' → logprob: -23.500001907348633
    10. '``' → logprob: -23.625001907348633

Token 875: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -5.9153885558771435e-06
    2. 'p' → logprob: -12.375005722045898
    3. 'h' → logprob: -14.125005722045898
    4. '.he' → logprob: -15.250005722045898
    5. '```' → logprob: -15.250005722045898
    6. 'app' → logprob: -15.500005722045898
    7. 'he' → logprob: -16.5000057220459
    8. 'push' → logprob: -17.3750057220459
    9. 'pp' → logprob: -18.1250057220459
    10. '   ' → logprob: -18.2500057220459

Token 876: '.he' (ID: 67786)
  Prédit: '.he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.he' → logprob: -6.957014556974173e-05
    2. '.heap' → logprob: -9.875069618225098
    3. 'he' → logprob: -11.125069618225098
    4. '```' → logprob: -13.375069618225098
    5. '.' → logprob: -14.000069618225098
    6. ' he' → logprob: -15.125069618225098
    7. 'q' → logprob: -15.625069618225098
    8. 'heap' → logprob: -15.750069618225098
    9. ' .' → logprob: -16.25006866455078
    10. '_he' → logprob: -17.12506866455078

Token 877: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -5.796184723294573e-06
    2. 'pp' → logprob: -12.125005722045898
    3. 'ap' → logprob: -15.500005722045898
    4. '```' → logprob: -17.1250057220459
    5. 'q' → logprob: -17.5000057220459
    6. 'push' → logprob: -18.0000057220459
    7. 'appen' → logprob: -18.0000057220459
    8. '[' → logprob: -18.3750057220459
    9. 'p' → logprob: -18.3750057220459
    10. 'appe' → logprob: -18.8750057220459

Token 878: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -0.00021772195759695023
    2. 'op' → logprob: -8.62521743774414
    3. 'q' → logprob: -11.00021743774414
    4. 'p' → logprob: -11.87521743774414
    5. 'push' → logprob: -12.12521743774414
    6. 'sh' → logprob: -12.37521743774414
    7. 'app' → logprob: -12.75021743774414
    8. 'pp' → logprob: -14.62521743774414
    9. 'ch' → logprob: -15.37521743774414
    10. 'ap' → logprob: -15.50021743774414

Token 879: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -4.320199877838604e-07
    2. '(' → logprob: -15.25
    3. '(
' → logprob: -16.5
    4. ' (' → logprob: -18.0
    5. '```' → logprob: -19.0
    6. 'h' → logprob: -19.375
    7. '(heap' → logprob: -19.5
    8. '((' → logprob: -19.625
    9. ',h' → logprob: -20.125
    10. '(q' → logprob: -20.125

Token 880: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.06255988776683807
    2. 'hq' → logprob: -2.8125598430633545
    3. '(h' → logprob: -7.562560081481934
    4. 'qh' → logprob: -9.812560081481934
    5. '(q' → logprob: -11.812560081481934
    6. 'cq' → logprob: -12.687560081481934
    7. 'vq' → logprob: -13.187560081481934
    8. 'sq' → logprob: -13.187560081481934
    9. 'dq' → logprob: -13.687560081481934
    10. 'qs' → logprob: -14.687560081481934

Token 881: ',(' (ID: 27243)
  Prédit: '(h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.02059759572148323
    2. ',' → logprob: -5.270597457885742
    3. ',(' → logprob: -5.395597457885742
    4. '(' → logprob: -5.520597457885742
    5. '(n' → logprob: -5.520597457885742
    6. '((' → logprob: -6.645597457885742
    7. ' (' → logprob: -7.520597457885742
    8. ',h' → logprob: -8.145597457885742
    9. ')' → logprob: -8.645597457885742
    10. '(heap' → logprob: -8.770597457885742

Token 882: 'nc' (ID: 24825)
  Prédit: 'nc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nc' → logprob: -5.512236498361744e-07
    2. 'n' → logprob: -15.000000953674316
    3. ' nc' → logprob: -16.75
    4. '```' → logprob: -18.125
    5. ' n' → logprob: -18.625
    6. '(n' → logprob: -19.25
    7. '
' → logprob: -19.75
    8. 'NC' → logprob: -20.25
    9. '``' → logprob: -20.375
    10. '   ' → logprob: -21.5

Token 883: 'ost' (ID: 564)
  Prédit: 'ost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ost' → logprob: -0.0028083212673664093
    2. 'cost' → logprob: -5.877808094024658
    3. '_cost' → logprob: -12.752808570861816
    4. 'o' → logprob: -16.6278076171875
    5. 'st' → logprob: -16.6278076171875
    6. 'Cost' → logprob: -16.7528076171875
    7. 'ост' → logprob: -16.7528076171875
    8. '(cost' → logprob: -17.0028076171875
    9. ' cost' → logprob: -17.1278076171875
    10. '-cost' → logprob: -17.1278076171875

Token 884: ',n' (ID: 18103)
  Prédit: ',n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',n' → logprob: -0.16025133430957794
    2. ',' → logprob: -1.9102513790130615
    3. ' ,' → logprob: -11.03525161743164
    4. ',
' → logprob: -12.53525161743164
    5. '```' → logprob: -12.78525161743164
    6. ',x' → logprob: -13.16025161743164
    7. '(nx' → logprob: -13.28525161743164
    8. ')' → logprob: -15.78525161743164
    9. '`,' → logprob: -16.41025161743164
    10. '),' → logprob: -16.41025161743164

Token 885: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: 0.0
    2. 'nx' → logprob: -19.25
    3. '```' → logprob: -21.0
    4. ' x' → logprob: -21.375
    5. '
' → logprob: -22.0
    6. '"x' → logprob: -22.375
    7. '(nx' → logprob: -22.625
    8. '	x' → logprob: -23.0
    9. ''x' → logprob: -23.0
    10. ' nx' → logprob: -23.125

Token 886: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.7835754988482222e-05
    2. ' ,' → logprob: -11.500018119812012
    3. ',n' → logprob: -12.375018119812012
    4. ',
' → logprob: -13.000018119812012
    5. 'ny' → logprob: -14.000018119812012
    6. ' ny' → logprob: -16.250017166137695
    7. '```' → logprob: -16.375017166137695
    8. ',y' → logprob: -17.875017166137695
    9. ',\
' → logprob: -18.000017166137695
    10. ',None' → logprob: -19.000017166137695

Token 887: 'ny' (ID: 3008)
  Prédit: 'ny'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ny' → logprob: -8.2994620242971e-06
    2. ' ny' → logprob: -11.750008583068848
    3. '
' → logprob: -15.875008583068848
    4. 'nyi' → logprob: -15.875008583068848
    5. 'n' → logprob: -16.87500762939453
    6. 'nyt' → logprob: -18.37500762939453
    7. '```' → logprob: -18.87500762939453
    8. ''ny' → logprob: -19.00000762939453
    9. '    
' → logprob: -19.12500762939453
    10. '   ' → logprob: -19.37500762939453

Token 888: ',no' (ID: 135826)
  Prédit: ',no'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',no' → logprob: -0.10053574293851852
    2. 'no' → logprob: -2.3505356311798096
    3. ',' → logprob: -8.10053539276123
    4. ' no' → logprob: -10.72553539276123
    5. '```' → logprob: -13.72553539276123
    6. '	no' → logprob: -14.10053539276123
    7. ' ,' → logprob: -14.10053539276123
    8. ',
' → logprob: -14.22553539276123
    9. 'No' → logprob: -15.97553539276123
    10. '(no' → logprob: -16.225536346435547

Token 889: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.02719735912978649
    2. 'o' → logprob: -3.6521973609924316
    3. 'no' → logprob: -7.027197360992432
    4. '(no' → logprob: -13.652196884155273
    5. ' no' → logprob: -13.902196884155273
    6. ' o' → logprob: -14.027196884155273
    7. 'ot' → logprob: -14.027196884155273
    8. '```' → logprob: -14.152196884155273
    9. '₂' → logprob: -14.152196884155273
    10. '
' → logprob: -14.402196884155273

Token 890: ',n' (ID: 18103)
  Prédit: ',n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',n' → logprob: -0.0002546641044318676
    2. 'n' → logprob: -8.62525463104248
    3. ',' → logprob: -9.50025463104248
    4. ' ,' → logprob: -15.50025463104248
    5. ',
' → logprob: -16.625255584716797
    6. ' n' → logprob: -17.500255584716797
    7. '```' → logprob: -19.250255584716797
    8. '	n' → logprob: -19.625255584716797
    9. '(n' → logprob: -20.125255584716797
    10. ',\
' → logprob: -21.000255584716797

Token 891: 'mask' (ID: 22527)
  Prédit: 'mask'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mask' → logprob: -0.01616738736629486
    2. 'n' → logprob: -4.141167163848877
    3. 'm' → logprob: -10.266167640686035
    4. 'o' → logprob: -10.766167640686035
    5. 'emask' → logprob: -10.766167640686035
    6. 'k' → logprob: -11.016167640686035
    7. 'MASK' → logprob: -11.891167640686035
    8. '_mask' → logprob: -12.016167640686035
    9. '(mask' → logprob: -12.516167640686035
    10. 'x' → logprob: -13.016167640686035

Token 892: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.07889463007450104
    2. ')' → logprob: -2.57889461517334
    3. '))
' → logprob: -12.45389461517334
    4. ')))' → logprob: -14.32889461517334
    5. ')
' → logprob: -15.07889461517334
    6. ' ))' → logprob: -16.828895568847656
    7. ')}' → logprob: -18.203895568847656
    8. ' )' → logprob: -18.578895568847656
    9. '))

' → logprob: -18.578895568847656
    10. '   ' → logprob: -18.703895568847656

Token 893: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -2.629921436891891e-05
    2. 'if' → logprob: -10.87502670288086
    3. '   ' → logprob: -12.25002670288086
    4. '```' → logprob: -13.37502670288086
    5. ' print' → logprob: -13.87502670288086
    6. '
' → logprob: -16.75002670288086
    7. '#print' → logprob: -17.62502670288086
    8. '    
' → logprob: -18.00002670288086
    9. 'continue' → logprob: -18.12502670288086
    10. '#' → logprob: -18.62502670288086

Token 894: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.014263882301747799
    2. 'if' → logprob: -4.264264106750488
    3. '```' → logprob: -9.264264106750488
    4. '``' → logprob: -13.264264106750488
    5. '   ' → logprob: -13.639264106750488
    6. ' print' → logprob: -14.264264106750488
    7. '    
' → logprob: -14.389264106750488
    8. '#print' → logprob: -14.639264106750488
    9. '<|end|>' → logprob: -15.264264106750488
    10. ' if' → logprob: -15.889264106750488

Token 895: '(res' (ID: 8331)
  Prédit: '(res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -0.00024120506714098155
    2. '(' → logprob: -8.75024127960205
    3. '(-' → logprob: -9.75024127960205
    4. '('' → logprob: -11.37524127960205
    5. '(f' → logprob: -11.62524127960205
    6. '((' → logprob: -13.37524127960205
    7. 'res' → logprob: -13.37524127960205
    8. '("' → logprob: -14.87524127960205
    9. '(""' → logprob: -15.37524127960205
    10. '(None' → logprob: -16.000240325927734

Token 896: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.05792463570833206
    2. ')' → logprob: -3.057924747467041
    3. 'if' → logprob: -4.682924747467041
    4. ' or' → logprob: -10.182924270629883
    5. '	if' → logprob: -12.932924270629883
    6. '()' → logprob: -14.182924270629883
    7. ' )' → logprob: -14.807924270629883
    8. 'If' → logprob: -16.057924270629883
    9. '   ' → logprob: -16.307924270629883
    10. 'or' → logprob: -16.307924270629883

Token 897: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.0019286326132714748
    2. ' res' → logprob: -6.251928806304932
    3. '(res' → logprob: -17.001928329467773
    4. '	res' → logprob: -18.376928329467773
    5. 'Res' → logprob: -18.501928329467773
    6. '   ' → logprob: -19.376928329467773
    7. '$res' → logprob: -19.876928329467773
    8. '_res' → logprob: -20.501928329467773
    9. '=res' → logprob: -22.501928329467773
    10. '  ' → logprob: -22.751928329467773

Token 898: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.048589639365673065
    2. 'is' → logprob: -3.0485897064208984
    3. 'else' → logprob: -13.423589706420898
    4. '!=' → logprob: -14.423589706420898
    5. ' else' → logprob: -16.4235897064209
    6. '	is' → logprob: -16.6735897064209
    7. '```' → logprob: -16.9235897064209
    8. ' ' → logprob: -17.1735897064209
    9. ' !=' → logprob: -17.9235897064209
    10. 'not' → logprob: -18.1735897064209

Token 899: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.0047367531806230545
    2. ' not' → logprob: -5.87973690032959
    3. 'None' → logprob: -6.25473690032959
    4. ' None' → logprob: -12.12973690032959
    5. 'Not' → logprob: -13.75473690032959
    6. '   ' → logprob: -13.75473690032959
    7. '```' → logprob: -14.25473690032959
    8. '``' → logprob: -16.004735946655273
    9. ' ' → logprob: -16.379735946655273
    10. 'none' → logprob: -16.379735946655273

Token 900: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -1.2664456789934775e-06
    2. ' None' → logprob: -13.750000953674316
    3. '   ' → logprob: -16.250001907348633
    4. '0' → logprob: -17.000001907348633
    5. 'not' → logprob: -18.875001907348633
    6. '_None' → logprob: -20.000001907348633
    7. 'none' → logprob: -20.125001907348633
    8. '       ' → logprob: -20.250001907348633
    9. 'else' → logprob: -20.750001907348633
    10. '(None' → logprob: -21.000001907348633

Token 901: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.38687169551849365
    2. 'else' → logprob: -1.1368716955184937
    3. ' ' → logprob: -15.761871337890625
    4. '```' → logprob: -16.136871337890625
    5. '    ' → logprob: -16.511871337890625
    6. '	else' → logprob: -16.886871337890625
    7. '<=' → logprob: -16.886871337890625
    8. 'and' → logprob: -17.011871337890625
    9. '_else' → logprob: -17.761871337890625
    10. '>' → logprob: -17.761871337890625

Token 902: ' "' (ID: 392)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.003976528067141771
    2. '"' → logprob: -5.628976345062256
    3. ''' → logprob: -8.878976821899414
    4. ' -' → logprob: -9.378976821899414
    5. '"-' → logprob: -9.628976821899414
    6. '"No' → logprob: -10.628976821899414
    7. '   ' → logprob: -11.253976821899414
    8. '-im' → logprob: -11.378976821899414
    9. ''-' → logprob: -11.753976821899414
    10. '0' → logprob: -12.253976821899414

Token 903: 'NA' (ID: 9555)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6840178370475769
    2. 'Impossible' → logprob: -1.0590178966522217
    3. '"' → logprob: -2.3090178966522217
    4. 'IMP' → logprob: -4.059017658233643
    5. 'FAIL' → logprob: -4.684017658233643
    6. 'im' → logprob: -4.934017658233643
    7. 'NA' → logprob: -4.934017658233643
    8. 'Fail' → logprob: -5.309017658233643
    9. 'NO' → logprob: -7.434017658233643
    10. 'No' → logprob: -7.559017658233643

Token 904: '")' (ID: 1405)
  Prédit: '")'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.00040290577453561127
    2. ')' → logprob: -8.000402450561523
    3. ')")' → logprob: -9.625402450561523
    4. '")
' → logprob: -14.000402450561523
    5. '"' → logprob: -15.125402450561523
    6. '}")' → logprob: -15.875402450561523
    7. ')"' → logprob: -16.000402450561523
    8. '")}' → logprob: -17.750402450561523
    9. '");' → logprob: -18.125402450561523
    10. '”)' → logprob: -18.250402450561523


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 902
Tokens correctement prédits (1ère position, stricte): 316
Tokens correctement prédits (1ère position, avec adaptation): 352
Tokens correctement prédits (top 10): 714
Précision stricte (1ère position): 35.03%
Précision adaptée (1ère position): 39.02%
Précision (top 10): 79.16%
================================================================================
