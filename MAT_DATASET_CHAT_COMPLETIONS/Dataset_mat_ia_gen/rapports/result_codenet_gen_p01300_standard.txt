================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:13:28
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys

def count_11_sequences(num):
    count = 0
    prefix_mod = {0:1}
    mod = 0
    power10 = 1
    n = len(num)
    for i in range(n-1, -1, -1):
        if num[i] == '0':
            power10 = (power10 * 10) % 11
            mod = (mod + 0 * power10) % 11
            prefix_mod = {0:1}
            continue
        # reset if leading zero in substring is invalid
        prefix_mod_new = {}
        mod = 0
        power10 = 1
        for j in range(i, n):
            if num[i] == '0':  # leading zero not allowed
                break
            mod = (mod * 10 + int(num[j])) % 11
            if mod == 0:
                count += 1
        break
    # Above code is incorrect, implement correct method:
    # We'll use prefix sums mod 11 from left to right.
    count = 0
    prefix_counts = [0]*11
    prefix_mod = 0
    prefix_counts[0] = 1
    for i, ch in enumerate(num):
        if ch == '0':
            prefix_mod = 0
            prefix_counts = [0]*11
            prefix_counts[0] = 1
            continue
        prefix_mod = (prefix_mod*10 + int(ch)) % 11
        count += prefix_counts[prefix_mod]
        prefix_counts[prefix_mod] += 1
    return count

for line in sys.stdin:
    line=line.strip()
    if line=='0':
        break
    print(count_11_sequences(line))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: 'def' (ID: 1314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.035847846418619156
    2. '\n' → logprob: -4.0358476638793945
    3. 'import' → logprob: -4.7858476638793945
    4. '<|end|>' → logprob: -5.2858476638793945
    5. '\' → logprob: -7.0358476638793945
    6. '<|end|>' → logprob: -7.5358476638793945
    7. 'newline' → logprob: -7.9108476638793945
    8. ',' → logprob: -8.160847663879395
    9. '[' → logprob: -8.285847663879395
    10. '' → logprob: -8.285847663879395

Token 4: ' count' (ID: 3605)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.020552748814225197
    2. ' ' → logprob: -5.270552635192871
    3. '  ' → logprob: -6.395552635192871
    4. ' process' → logprob: -6.520552635192871
    5. '<|end|>' → logprob: -6.520552635192871
    6. ' space' → logprob: -6.770552635192871
    7. ' sys' → logprob: -6.895552635192871
    8. ' main' → logprob: -6.895552635192871
    9. ' a' → logprob: -7.020552635192871
    10. ' def' → logprob: -7.145552635192871

Token 5: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.053082264959812164
    2. '_words' → logprob: -3.178082227706909
    3. '_tokens' → logprob: -5.428082466125488
    4. '_items' → logprob: -6.303082466125488
    5. '_chars' → logprob: -7.053082466125488
    6. '(' → logprob: -7.178082466125488
    7. '_lines' → logprob: -7.803082466125488
    8. '_char' → logprob: -8.803082466125488
    9. '_parts' → logprob: -8.803082466125488
    10. '_:' → logprob: -8.803082466125488

Token 6: '11' (ID: 994)
  Prédit: 'words'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'words' → logprob: -0.5201053619384766
    2. 'v' → logprob: -1.5201053619384766
    3. 'lines' → logprob: -2.1451053619384766
    4. 'characters' → logprob: -2.7701053619384766
    5. 'chars' → logprob: -6.020105361938477
    6. '_words' → logprob: -6.145105361938477
    7. '_v' → logprob: -6.770105361938477
    8. '_lines' → logprob: -7.895105361938477
    9. 'occ' → logprob: -8.145105361938477
    10. 'letters' → logprob: -8.770105361938477

Token 7: '_sequences' (ID: 153014)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.10968343168497086
    2. '_' → logprob: -2.9846835136413574
    3. '():' → logprob: -3.8596835136413574
    4. 's' → logprob: -4.234683513641357
    5. '(s' → logprob: -5.109683513641357
    6. '):' → logprob: -5.109683513641357
    7. ')' → logprob: -6.359683513641357
    8. '_s' → logprob: -6.609683513641357
    9. ':' → logprob: -7.484683513641357
    10. '(_' → logprob: -7.859683513641357

Token 8: '(num' (ID: 15828)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0007005225634202361
    2. '_' → logprob: -7.5007004737854
    3. '():' → logprob: -10.250700950622559
    4. ':' → logprob: -10.500700950622559
    5. '(:' → logprob: -11.250700950622559
    6. ' (' → logprob: -11.250700950622559
    7. '('' → logprob: -11.750700950622559
    8. '(_:' → logprob: -11.875700950622559
    9. '```' → logprob: -12.125700950622559
    10. '(user' → logprob: -12.250700950622559

Token 9: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.007778518367558718
    2. 's' → logprob: -5.007778644561768
    3. ')' → logprob: -7.007778644561768
    4. '):
' → logprob: -9.63277816772461
    5. ':' → logprob: -10.00777816772461
    6. '_' → logprob: -11.50777816772461
    7. ' ):' → logprob: -11.63277816772461
    8. '):
' → logprob: -12.13277816772461
    9. '1' → logprob: -12.75777816772461
    10. '():' → logprob: -13.00777816772461

Token 10: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04629400745034218
    2. ':' → logprob: -3.4212939739227295
    3. '(' → logprob: -4.671294212341309
    4. '_' → logprob: -7.046294212341309
    5. ''' → logprob: -7.546294212341309
    6. '```' → logprob: -7.671294212341309
    7. '():' → logprob: -8.296294212341309
    8. ':
' → logprob: -8.546294212341309
    9. '"' → logprob: -8.921294212341309
    10. '    ' → logprob: -9.296294212341309

Token 11: ' count' (ID: 3605)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05789346247911453
    2. 'count' (adapté à ' count') → logprob: -3.3078935146331787
    3. '    ' → logprob: -5.5578932762146
    4. '```' → logprob: -5.5578932762146
    5. ' count' → logprob: -5.8078932762146
    6. ':' → logprob: -6.4328932762146
    7. 'counter' → logprob: -6.5578932762146
    8. ' ' → logprob: -7.1828932762146
    9. ''' → logprob: -7.4328932762146
    10. ' counter' → logprob: -7.8078932762146

Token 12: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05200229957699776
    2. '=' → logprob: -3.052002191543579
    3. '_' → logprob: -6.052002429962158
    4. ' ' → logprob: -6.927002429962158
    5. ' +=' → logprob: -10.302001953125
    6. '  ' → logprob: -11.302001953125
    7. '_=' → logprob: -11.677001953125
    8. '(' → logprob: -12.177001953125
    9. ')' → logprob: -12.302001953125
    10. 's' → logprob: -12.802001953125

Token 13: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.10021281987428665
    2. '0' → logprob: -2.350212812423706
    3. ' num' → logprob: -13.225213050842285
    4. '1' → logprob: -13.600213050842285
    5. 'num' → logprob: -13.975213050842285
    6. ' ' → logprob: -13.975213050842285
    7. '  ' → logprob: -14.912713050842285
    8. ' "' → logprob: -16.28771209716797
    9. '2' → logprob: -16.41271209716797
    10. ' len' → logprob: -16.78771209716797

Token 14: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0024805311113595963
    2. ' ' → logprob: -6.002480506896973
    3. '1' → logprob: -13.127480506896973
    4. 'num' → logprob: -13.377480506896973
    5. 'len' → logprob: -15.252480506896973
    6. '   ' → logprob: -15.502480506896973
    7. '"' → logprob: -15.752480506896973
    8. ''' → logprob: -16.18998146057129
    9. '  ' → logprob: -16.18998146057129
    10. '2' → logprob: -16.25248146057129

Token 15: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.18103256821632385
    2. '   ' → logprob: -2.681032657623291
    3. ' ' → logprob: -4.056032657623291
    4. '   
' → logprob: -4.306032657623291
    5. '\n' → logprob: -4.556032657623291
    6. '_' → logprob: -4.556032657623291
    7. '\' → logprob: -4.681032657623291
    8. ' 
' → logprob: -5.056032657623291
    9. '  
' → logprob: -5.306032657623291
    10. '    ' → logprob: -5.556032657623291

Token 16: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4227154850959778
    2. '
' → logprob: -1.922715425491333
    3. ' ' → logprob: -3.422715425491333
    4. '    ' → logprob: -3.672715425491333
    5. '_' → logprob: -3.797715425491333
    6. 'for' → logprob: -4.047715663909912
    7. ' for' → logprob: -4.172715663909912
    8. '    
' → logprob: -4.297715663909912
    9. '     
' → logprob: -4.297715663909912
    10. '   
' → logprob: -4.547715663909912

Token 17: ' prefix' (ID: 18633)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7165105938911438
    2. ' for' → logprob: -0.8415105938911438
    3. '   ' → logprob: -2.966510534286499
    4. ' ' → logprob: -5.216510772705078
    5. ' i' → logprob: -5.466510772705078
    6. 'prev' → logprob: -5.466510772705078
    7. ' prev' → logprob: -5.466510772705078
    8. 'n' → logprob: -6.341510772705078
    9. ' previous' → logprob: -6.591510772705078
    10. 'i' → logprob: -6.591510772705078

Token 18: '_mod' (ID: 15325)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5400324463844299
    2. ' =' → logprob: -1.0400323867797852
    3. '=' → logprob: -3.415032386779785
    4. '_sum' → logprob: -4.290032386779785
    5. '_count' → logprob: -5.165032386779785
    6. '_s' → logprob: -5.540032386779785
    7. '_len' → logprob: -6.290032386779785
    8. '_counts' → logprob: -6.290032386779785
    9. 's' → logprob: -6.790032386779785
    10. ' ' → logprob: -6.915032386779785

Token 19: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6493010520935059
    2. '=' → logprob: -0.7743010520935059
    3. 'ulo' → logprob: -4.649301052093506
    4. '36' → logprob: -6.399301052093506
    5. ' ' → logprob: -6.399301052093506
    6. '100' → logprob: -7.149301052093506
    7. 'ulus' → logprob: -7.649301052093506
    8. '7' → logprob: -7.899301052093506
    9. '37' → logprob: -8.274301528930664
    10. '6' → logprob: -8.274301528930664

Token 20: ' {' (ID: 354)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.36526405811309814
    2. '0' → logprob: -1.3652640581130981
    3. '{' → logprob: -4.615263938903809
    4. ' {}' → logprob: -4.615263938903809
    5. ' [' → logprob: -4.740263938903809
    6. ' {' → logprob: -4.990263938903809
    7. '{}' → logprob: -5.115263938903809
    8. '[' → logprob: -5.115263938903809
    9. '1' → logprob: -5.990263938903809
    10. '2' → logprob: -7.865263938903809

Token 21: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.517272024415433e-05
    2. ' ' → logprob: -9.500075340270996
    3. '{' → logprob: -15.375075340270996
    4. '}' → logprob: -18.50007438659668
    5. '-' → logprob: -18.62507438659668
    6. '   ' → logprob: -19.25007438659668
    7. '[' → logprob: -19.25007438659668
    8. '  ' → logprob: -20.37507438659668
    9. '(' → logprob: -20.50007438659668
    10. '1' → logprob: -20.62507438659668

Token 22: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00408647395670414
    2. ' :' → logprob: -5.504086494445801
    3. ':int' → logprob: -13.7540864944458
    4. '0' → logprob: -13.8790864944458
    5. ':index' → logprob: -14.0040864944458
    6. '1' → logprob: -14.0040864944458
    7. ':true' → logprob: -14.5040864944458
    8. '}' → logprob: -14.6290864944458
    9. ':[' → logprob: -14.8790864944458
    10. ':-' → logprob: -15.0040864944458

Token 23: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5006071329116821
    2. ' ' → logprob: -1.3756071329116821
    3. '-' → logprob: -2.2506070137023926
    4. ' -' → logprob: -3.3756070137023926
    5. '0' → logprob: -6.500607013702393
    6. '[' → logprob: -10.25060749053955
    7. '[-' → logprob: -11.12560749053955
    8. '7' → logprob: -11.43810749053955
    9. ' [' → logprob: -11.68810749053955
    10. '2' → logprob: -12.12560749053955

Token 24: '}
' (ID: 739)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.0026277387514710426
    2. ' }' → logprob: -6.127627849578857
    3. ',' → logprob: -7.752627849578857
    4. '   ' → logprob: -11.6276273727417
    5. '}
' → logprob: -13.0026273727417
    6. ' ' → logprob: -14.5026273727417
    7. ' ,' → logprob: -15.5026273727417
    8. '```' → logprob: -15.6276273727417
    9. ')' → logprob: -15.7526273727417
    10. ',
' → logprob: -16.377628326416016

Token 25: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2272465229034424
    2. ' ' → logprob: -1.3522465229034424
    3. ' remainder' → logprob: -1.4772465229034424
    4. ' prefix' → logprob: -2.6022465229034424
    5. ' mod' → logprob: -3.7272465229034424
    6. ' current' → logprob: -3.8522465229034424
    7. '    ' → logprob: -4.102246284484863
    8. ' num' → logprob: -4.352246284484863
    9. ' sum' → logprob: -4.602246284484863
    10. ' s' → logprob: -4.602246284484863

Token 26: ' mod' (ID: 1812)
  Prédit: ' current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.1856721043586731
    2. ' prefix' → logprob: -1.9356720447540283
    3. ' mod' → logprob: -5.185672283172607
    4. 'prefix' → logprob: -5.310672283172607
    5. 'current' → logprob: -5.310672283172607
    6. ' remainder' → logprob: -5.810672283172607
    7. ' ' → logprob: -6.310672283172607
    8. ' curr' → logprob: -6.435672283172607
    9. ' total' → logprob: -6.810672283172607
    10. ' cum' → logprob: -7.560672283172607

Token 27: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.21977002918720245
    2. '_val' → logprob: -1.969770073890686
    3. '=' → logprob: -3.3447699546813965
    4. '_value' → logprob: -4.2197699546813965
    5. '_sum' → logprob: -5.4697699546813965
    6. '_' → logprob: -5.9697699546813965
    7. 'ulo' → logprob: -8.594770431518555
    8. 'val' → logprob: -8.719770431518555
    9. '_num' → logprob: -8.844770431518555
    10. ' ' → logprob: -8.844770431518555

Token 28: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7343528270721436
    2. '0' → logprob: -0.8593528270721436
    3. '11' → logprob: -3.2343528270721436
    4. '7' → logprob: -4.109353065490723
    5. '3' → logprob: -4.359353065490723
    6. '1' → logprob: -4.359353065490723
    7. '10' → logprob: -4.609353065490723
    8. '2' → logprob: -6.234353065490723
    9. '5' → logprob: -6.484353065490723
    10. '9' → logprob: -7.234353065490723

Token 29: '0' (ID: 15)
  Prédit: '11'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '11' → logprob: -0.06382972002029419
    2. '7' → logprob: -3.6888296604156494
    3. '3' → logprob: -3.8138296604156494
    4. '0' → logprob: -4.9388298988342285
    5. '5' → logprob: -6.3138298988342285
    6. '2' → logprob: -6.4388298988342285
    7. '1' → logprob: -6.4388298988342285
    8. '4' → logprob: -6.9388298988342285
    9. '10' → logprob: -6.9388298988342285
    10. '9' → logprob: -8.81382942199707

Token 30: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0001564586127642542
    2. ' ' → logprob: -10.50015640258789
    3. '    
' → logprob: -10.75015640258789
    4. '<|end|>' → logprob: -10.87515640258789
    5. ' for' → logprob: -11.12515640258789
    6. '=' → logprob: -11.25015640258789
    7. '    ' → logprob: -11.62515640258789
    8. ',' → logprob: -11.75015640258789
    9. '       ' → logprob: -11.75015640258789
    10. '
' → logprob: -12.50015640258789

Token 31: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.047903988510370255
    2. '<|end|>' → logprob: -3.2979040145874023
    3. ' ' → logprob: -5.547904014587402
    4. ' for' → logprob: -6.297904014587402
    5. '<|end|>' → logprob: -6.422904014587402
    6. '  ' → logprob: -7.797904014587402
    7. '    
' → logprob: -7.922904014587402
    8. ',' → logprob: -8.547904014587402
    9. '    ' → logprob: -8.547904014587402
    10. ' 
' → logprob: -8.797904014587402

Token 32: ' power' (ID: 3470)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7606022357940674
    2. ' for' → logprob: -0.8856022357940674
    3. 'for' → logprob: -2.1356022357940674
    4. ' ' → logprob: -7.760601997375488
    5. 'n' → logprob: -8.010601997375488
    6. '    
' → logprob: -8.385601997375488
    7. '```' → logprob: -8.385601997375488
    8. '    ' → logprob: -8.510601997375488
    9. '	for' → logprob: -9.260601997375488
    10. ' n' → logprob: -9.510601997375488

Token 33: '10' (ID: 702)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1805124282836914
    2. '=' → logprob: -1.8055124282836914
    3. '   ' → logprob: -8.305512428283691
    4. '_of' → logprob: -9.180512428283691
    5. 'of' → logprob: -9.180512428283691
    6. ' ' → logprob: -9.680512428283691
    7. '_' → logprob: -9.930512428283691
    8. 's' → logprob: -10.180512428283691
    9. ' of' → logprob: -10.180512428283691
    10. '    ' → logprob: -10.555512428283691

Token 34: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22556056082248688
    2. '=' → logprob: -1.6005605459213257
    3. ' ' → logprob: -8.975560188293457
    4. '_' → logprob: -11.975560188293457
    5. 's' → logprob: -12.100560188293457
    6. '  ' → logprob: -13.225560188293457
    7. ' %=' → logprob: -13.350560188293457
    8. '   ' → logprob: -13.850560188293457
    9. '_mod' → logprob: -14.100560188293457
    10. '_=' → logprob: -14.475560188293457

Token 35: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00029148702742531896
    2. ' ' → logprob: -8.25029182434082
    3. '10' → logprob: -10.50029182434082
    4. '0' → logprob: -13.75029182434082
    5. '100' → logprob: -14.00029182434082
    6. '7' → logprob: -14.87529182434082
    7. '[' → logprob: -16.00029182434082
    8. '```' → logprob: -16.50029182434082
    9. '   ' → logprob: -16.62529182434082
    10. '  ' → logprob: -16.68779182434082

Token 36: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0008055794751271605
    2. '10' → logprob: -7.250805377960205
    3. ' ' → logprob: -9.750805854797363
    4. '7' → logprob: -11.125805854797363
    5. '11' → logprob: -11.750805854797363
    6. '100' → logprob: -12.125805854797363
    7. '0' → logprob: -12.375805854797363
    8. '9' → logprob: -14.250805854797363
    9. '[' → logprob: -14.625805854797363
    10. 'pow' → logprob: -14.625805854797363

Token 37: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22351686656475067
    2. '
' → logprob: -2.3485169410705566
    3. ' ' → logprob: -3.7235169410705566
    4. '\n' → logprob: -3.9735169410705566
    5. ' 
' → logprob: -4.098516941070557
    6. '    
' → logprob: -4.598516941070557
    7. '<|end|>' → logprob: -4.598516941070557
    8. '   
' → logprob: -5.098516941070557
    9. '  
' → logprob: -5.348516941070557
    10. ' for' → logprob: -5.848516941070557

Token 38: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.058466166257858276
    2. ' ' → logprob: -4.058465957641602
    3. '<|end|>' → logprob: -4.433465957641602
    4. ' for' → logprob: -4.683465957641602
    5. '
' → logprob: -5.558465957641602
    6. '  ' → logprob: -6.058465957641602
    7. '\n' → logprob: -6.183465957641602
    8. '    
' → logprob: -6.558465957641602
    9. 'for' → logprob: -6.558465957641602
    10. ' 
' → logprob: -6.808465957641602

Token 39: ' n' (ID: 297)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.2201381921768188
    2. '   ' → logprob: -1.2201381921768188
    3. '\n' → logprob: -1.5951381921768188
    4. ' for' → logprob: -2.3451380729675293
    5. 'for' → logprob: -3.3451380729675293
    6. ' 
' → logprob: -3.8451380729675293
    7. ' ' → logprob: -3.9701380729675293
    8. '\' → logprob: -4.720138072967529
    9. '    
' → logprob: -5.345138072967529
    10. ' \' → logprob: -5.595138072967529

Token 40: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1296336054801941
    2. '=' → logprob: -2.254633665084839
    3. 'um' → logprob: -4.12963342666626
    4. ' ' → logprob: -8.504633903503418
    5. '=len' → logprob: -9.129633903503418
    6. '=int' → logprob: -9.504633903503418
    7. '_str' → logprob: -9.754633903503418
    8. '=str' → logprob: -9.879633903503418
    9. '   ' → logprob: -10.379633903503418
    10. 'umber' → logprob: -11.004633903503418

Token 41: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.14220909774303436
    2. ' num' → logprob: -2.142209053039551
    3. 'len' → logprob: -4.392209053039551
    4. 'num' → logprob: -6.142209053039551
    5. ' int' → logprob: -8.01720905303955
    6. ' ' → logprob: -8.26720905303955
    7. 'int' → logprob: -10.76720905303955
    8. ' str' → logprob: -10.76720905303955
    9. '  ' → logprob: -13.26720905303955
    10. 'str' → logprob: -13.39220905303955

Token 42: '(num' (ID: 15828)
  Prédit: '(num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(num' → logprob: -0.04876154661178589
    2. '(str' → logprob: -3.0487616062164307
    3. '(' → logprob: -8.673761367797852
    4. 'num' → logprob: -13.548761367797852
    5. '(s' → logprob: -14.423761367797852
    6. ' (' → logprob: -14.673761367797852
    7. 'str' → logprob: -15.048761367797852
    8. '(n' → logprob: -15.298761367797852
    9. ' num' → logprob: -16.17376136779785
    10. '(nums' → logprob: -16.29876136779785

Token 43: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.885492621222511e-05
    2. ' )' → logprob: -9.750068664550781
    3. ')
' → logprob: -11.750068664550781
    4. '))' → logprob: -14.375068664550781
    5. '   ' → logprob: -14.375068664550781
    6. ')-' → logprob: -15.500068664550781
    7. '[' → logprob: -15.625068664550781
    8. '`)' → logprob: -16.12506866455078
    9. ')`' → logprob: -16.12506866455078
    10. ')))' → logprob: -16.37506866455078

Token 44: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03261125087738037
    2. '\n' → logprob: -4.15761137008667
    3. ' ' → logprob: -5.78261137008667
    4. '```' → logprob: -6.03261137008667
    5. '    
' → logprob: -6.28261137008667
    6. '
' → logprob: -6.28261137008667
    7. '<|end|>' → logprob: -6.28261137008667
    8. ' 
' → logprob: -7.28261137008667
    9. '  
' → logprob: -7.28261137008667
    10. ')' → logprob: -7.40761137008667

Token 45: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23840387165546417
    2. ' for' → logprob: -1.9884039163589478
    3. '\n' → logprob: -3.488403797149658
    4. '```' → logprob: -4.363403797149658
    5. 'for' (adapté à ' for') → logprob: -4.488403797149658
    6. '
' → logprob: -4.488403797149658
    7. '    
' → logprob: -5.238403797149658
    8. ' 
' → logprob: -6.738403797149658
    9. '  
' → logprob: -7.613403797149658
    10. ' ' → logprob: -7.863403797149658

Token 46: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.007480498868972063
    2. 'i' → logprob: -5.257480621337891
    3. ' _' → logprob: -6.882480621337891
    4. ' digit' → logprob: -7.132480621337891
    5. 'digit' → logprob: -9.00748062133789
    6. ' ' → logprob: -9.38248062133789
    7. '_' → logprob: -9.50748062133789
    8. 'd' → logprob: -10.38248062133789
    9. ' c' → logprob: -10.38248062133789
    10. ' d' → logprob: -10.75748062133789

Token 47: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.026848340407013893
    2. 'in' → logprob: -3.651848316192627
    3. ' ' → logprob: -7.651848316192627
    4. '  ' → logprob: -10.776848793029785
    5. ',' → logprob: -11.026848793029785
    6. 'n' → logprob: -11.276848793029785
    7. '	in' → logprob: -11.526848793029785
    8. ' ,' → logprob: -13.276848793029785
    9. '   ' → logprob: -13.401848793029785
    10. 'In' → logprob: -13.776848793029785

Token 48: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.018207184970378876
    2. 'range' → logprob: -4.01820707321167
    3. ' ' → logprob: -10.143207550048828
    4. ' xrange' → logprob: -11.893207550048828
    5. '  ' → logprob: -12.518207550048828
    6. '   ' → logprob: -12.643207550048828
    7. '	range' → logprob: -13.643207550048828
    8. ' reversed' → logprob: -13.893207550048828
    9. ' num' → logprob: -14.768207550048828
    10. ' ' → logprob: -14.768207550048828

Token 49: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.008398967795073986
    2. '(' → logprob: -4.88339900970459
    3. '(len' → logprob: -7.38339900970459
    4. ' (' → logprob: -9.25839900970459
    5. 'n' → logprob: -9.75839900970459
    6. ' n' → logprob: -11.25839900970459
    7. ')' → logprob: -13.25839900970459
    8. ' ' → logprob: -14.25839900970459
    9. ')n' → logprob: -14.25839900970459
    10. '(length' → logprob: -15.50839900970459

Token 50: '-' (ID: 12)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.20976591110229492
    2. '-' → logprob: -1.709765911102295
    3. ' -' → logprob: -5.334765911102295
    4. ' ):' → logprob: -5.959765911102295
    5. '):
' → logprob: -7.209765911102295
    6. ')' → logprob: -9.334766387939453
    7. '   ' → logprob: -10.084766387939453
    8. ' ' → logprob: -10.959766387939453
    9. ',' → logprob: -12.209766387939453
    10. '):-' → logprob: -12.584766387939453

Token 51: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005257497541606426
    2. ' ' → logprob: -7.875525951385498
    3. '2' → logprob: -8.87552547454834
    4. '-' → logprob: -12.87552547454834
    5. '3' → logprob: -13.87552547454834
    6. ' -' → logprob: -14.31302547454834
    7. '   ' → logprob: -15.31302547454834
    8. '```' → logprob: -15.81302547454834
    9. '...' → logprob: -15.93802547454834
    10. '0' → logprob: -16.000526428222656

Token 52: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.016313180327415466
    2. ',-' → logprob: -4.641313076019287
    3. ' ,' → logprob: -5.141313076019287
    4. '):
' → logprob: -8.516313552856445
    5. '-' → logprob: -8.891313552856445
    6. ' ,-' → logprob: -9.141313552856445
    7. '):' → logprob: -9.266313552856445
    8. '   ' → logprob: -10.141313552856445
    9. ' -' → logprob: -10.141313552856445
    10. ')' → logprob: -10.891313552856445

Token 53: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.016038591042160988
    2. ' -' → logprob: -4.141038417816162
    3. ' ' → logprob: -12.76603889465332
    4. '0' → logprob: -13.89103889465332
    5. '   ' → logprob: -15.39103889465332
    6. '	' → logprob: -16.14103889465332
    7. '  ' → logprob: -16.51603889465332
    8. '-i' → logprob: -16.51603889465332
    9. '-re' → logprob: -17.76603889465332
    10. '    ' → logprob: -17.89103889465332

Token 54: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.253090865968261e-06
    2. ' ' → logprob: -11.625009536743164
    3. '   ' → logprob: -15.875009536743164
    4. '```' → logprob: -15.875009536743164
    5. '2' → logprob: -17.250009536743164
    6. '  ' → logprob: -17.812509536743164
    7. 'len' → logprob: -18.187509536743164
    8. '0' → logprob: -19.125009536743164
    9. '``' → logprob: -19.250009536743164
    10. ' -' → logprob: -19.250009536743164

Token 55: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001987722353078425
    2. '-' → logprob: -8.875198364257812
    3. ',-' → logprob: -10.000198364257812
    4. ' ,' → logprob: -11.375198364257812
    5. ' -' → logprob: -13.625198364257812
    6. '-,' → logprob: -15.375198364257812
    7. ' ,-' → logprob: -15.750198364257812
    8. '1' → logprob: -16.375198364257812
    9. '```' → logprob: -16.375198364257812
    10. '   ' → logprob: -16.625198364257812

Token 56: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.17982490360736847
    2. '-' → logprob: -1.804824948310852
    3. ' ' → logprob: -9.554824829101562
    4. ')' → logprob: -12.679824829101562
    5. '```' → logprob: -13.179824829101562
    6. '1' → logprob: -13.554824829101562
    7. ' )' → logprob: -14.054824829101562
    8. '<|end|>' → logprob: -14.679824829101562
    9. '  ' → logprob: -15.054824829101562
    10. '	' → logprob: -15.304824829101562

Token 57: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.875000953674316
    3. '```' → logprob: -15.750000953674316
    4. '2' → logprob: -16.25
    5. '   ' → logprob: -18.375
    6. ')' → logprob: -18.625
    7. '１' → logprob: -19.0
    8. '۱' → logprob: -19.5
    9. '``' → logprob: -19.8125
    10. '3' → logprob: -20.125

Token 58: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0021215921733528376
    2. ':' → logprob: -6.877121448516846
    3. '):
' → logprob: -7.627121448516846
    4. ',' → logprob: -7.877121448516846
    5. ' ):' → logprob: -9.002121925354004
    6. '-' → logprob: -9.752121925354004
    7. ')' → logprob: -10.877121925354004
    8. '   ' → logprob: -11.877121925354004
    9. '):
' → logprob: -12.502121925354004
    10. ' :' → logprob: -13.002121925354004

Token 59: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4286057651042938
    2. ' ' → logprob: -1.8036057949066162
    3. '    ' → logprob: -2.303605794906616
    4. '   ' → logprob: -3.178605794906616
    5. ':' → logprob: -3.928605794906616
    6. '<|end|>' → logprob: -5.178605556488037
    7. '```' → logprob: -6.053605556488037
    8. ',' → logprob: -6.053605556488037
    9. ' :' → logprob: -6.178605556488037
    10. '     
' → logprob: -6.678605556488037

Token 60: ' if' (ID: 538)
  Prédit: ' digit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' digit' → logprob: -0.5773328542709351
    2. 'digit' → logprob: -1.702332854270935
    3. ' d' → logprob: -2.3273329734802246
    4. 'd' → logprob: -2.7023329734802246
    5. ' mod' → logprob: -3.2023329734802246
    6. '    ' → logprob: -4.202332973480225
    7. ' ' → logprob: -4.577332973480225
    8. '   ' → logprob: -4.827332973480225
    9. 'mod' → logprob: -5.577332973480225
    10. ' c' → logprob: -5.577332973480225

Token 61: ' num' (ID: 2269)
  Prédit: ' num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' num' → logprob: -0.0032038541976362467
    2. 'num' → logprob: -6.253203868865967
    3. ' int' → logprob: -6.753203868865967
    4. ' ' → logprob: -9.503203392028809
    5. 'int' → logprob: -11.378203392028809
    6. '(num' → logprob: -12.128203392028809
    7. ' ' → logprob: -12.128203392028809
    8. ' not' → logprob: -12.503203392028809
    9. ' (' → logprob: -13.878203392028809
    10. ' n' → logprob: -14.003203392028809

Token 62: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0009249189170077443
    2. '[' → logprob: -7.000925064086914
    3. '[int' → logprob: -12.500925064086914
    4. '[I' → logprob: -12.500925064086914
    5. ' [' → logprob: -13.125925064086914
    6. '```' → logprob: -13.125925064086914
    7. '[j' → logprob: -15.125925064086914
    8. '\[' → logprob: -15.125925064086914
    9. '[
' → logprob: -15.375925064086914
    10. '[...]' → logprob: -16.250925064086914

Token 63: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.024285268038511276
    2. ']==' → logprob: -4.274285316467285
    3. '==' → logprob: -5.274285316467285
    4. ' ==' → logprob: -6.274285316467285
    5. ']=='' → logprob: -6.899285316467285
    6. '=' → logprob: -6.899285316467285
    7. ' ]' → logprob: -8.524285316467285
    8. '']' → logprob: -8.649285316467285
    9. ')' → logprob: -8.774285316467285
    10. ''' → logprob: -8.899285316467285

Token 64: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.4627179801464081
    2. '==' → logprob: -1.0877180099487305
    3. '=='' → logprob: -4.7127180099487305
    4. ''' → logprob: -4.8377180099487305
    5. '=' → logprob: -4.8377180099487305
    6. '!=' → logprob: -5.8377180099487305
    7. ' !=' → logprob: -6.5877180099487305
    8. ':' → logprob: -7.0877180099487305
    9. ' ' → logprob: -7.7127180099487305
    10. 'isdigit' → logprob: -8.08771800994873

Token 65: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.18134067952632904
    2. ' '' → logprob: -1.8063406944274902
    3. '"' → logprob: -6.68134069442749
    4. '1' → logprob: -8.306340217590332
    5. ' ' → logprob: -9.806340217590332
    6. ' "' → logprob: -11.681340217590332
    7. ''u' → logprob: -12.806340217590332
    8. ''i' → logprob: -12.931340217590332
    9. ''s' → logprob: -12.931340217590332
    10. ''a' → logprob: -13.056340217590332

Token 66: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00029923528200015426
    2. ''' → logprob: -8.500299453735352
    3. '0' → logprob: -9.625299453735352
    4. ' ' → logprob: -11.500299453735352
    5. '-' → logprob: -12.125299453735352
    6. '"' → logprob: -12.125299453735352
    7. '9' → logprob: -13.437799453735352
    8. '')' → logprob: -14.187799453735352
    9. ' '' → logprob: -14.437799453735352
    10. '11' → logprob: -14.625299453735352

Token 67: '':
' (ID: 7669)
  Prédit: '':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.13172878324985504
    2. ''' → logprob: -2.1317288875579834
    3. '':
' → logprob: -5.381728649139404
    4. ':' → logprob: -9.506729125976562
    5. '':
' → logprob: -9.631729125976562
    6. ''or' → logprob: -11.381729125976562
    7. ''s' → logprob: -11.506729125976562
    8. '':

' → logprob: -11.756729125976562
    9. '1' → logprob: -11.881729125976562
    10. ' '' → logprob: -12.881729125976562

Token 68: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10394231230020523
    2. ':' → logprob: -2.978942394256592
    3. '       ' → logprob: -4.103942394256592
    4. '0' → logprob: -4.603942394256592
    5. '   ' → logprob: -5.478942394256592
    6. ' continue' → logprob: -5.853942394256592
    7. '            ' → logprob: -6.228942394256592
    8. '        ' → logprob: -6.478942394256592
    9. ' ' → logprob: -6.603942394256592
    10. ':
' → logprob: -6.728942394256592

Token 69: ' power' (ID: 3470)
  Prédit: ' power'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' power' → logprob: -0.29505911469459534
    2. '           ' → logprob: -2.2950592041015625
    3. ' continue' → logprob: -3.1700592041015625
    4. 'power' (adapté à ' power') → logprob: -3.2950592041015625
    5. '0' → logprob: -3.5450592041015625
    6. ' mod' → logprob: -3.7950592041015625
    7. 'mod' → logprob: -5.6700592041015625
    8. '   ' → logprob: -5.6700592041015625
    9. 'continue' → logprob: -5.6700592041015625
    10. '            ' → logprob: -5.9200592041015625

Token 70: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.42566511034965515
    2. ' *=' → logprob: -1.5506651401519775
    3. ' =' → logprob: -2.5506651401519775
    4. ' ' → logprob: -3.4256651401519775
    5. '0' → logprob: -4.800664901733398
    6. ' *' → logprob: -5.300664901733398
    7. '_' → logprob: -5.425664901733398
    8. '```' → logprob: -6.300664901733398
    9. ' <<=' → logprob: -6.800664901733398
    10. '1' → logprob: -7.425664901733398

Token 71: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3923109769821167
    2. ' =' → logprob: -1.2673109769821167
    3. ' *=' → logprob: -3.5173110961914062
    4. '*=' → logprob: -4.392311096191406
    5. '*' → logprob: -7.517311096191406
    6. ' ' → logprob: -8.642311096191406
    7. ' *' → logprob: -9.767311096191406
    8. ' <<=' → logprob: -9.892311096191406
    9. '0' → logprob: -11.517311096191406
    10. '```' → logprob: -12.392311096191406

Token 72: ' (' (ID: 350)
  Prédit: '(power'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(power' → logprob: -0.4928741157054901
    2. ' (' → logprob: -0.9928741455078125
    3. '0' → logprob: -4.7428741455078125
    4. '(' → logprob: -5.4928741455078125
    5. ' ' → logprob: -6.1178741455078125
    6. '1' → logprob: -6.2428741455078125
    7. '10' → logprob: -6.7428741455078125
    8. '(pow' → logprob: -8.492874145507812
    9. 'power' → logprob: -9.742874145507812
    10. '(password' → logprob: -10.867874145507812

Token 73: 'power' (ID: 22295)
  Prédit: 'power'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'power' → logprob: -0.6804333329200745
    2. '(power' → logprob: -1.0554332733154297
    3. '10' → logprob: -2.1804332733154297
    4. ' power' → logprob: -3.8054332733154297
    5. ' (' → logprob: -5.05543327331543
    6. 'pow' → logprob: -6.05543327331543
    7. '(' → logprob: -7.80543327331543
    8. ' ' → logprob: -8.30543327331543
    9. '   ' → logprob: -8.68043327331543
    10. '1' → logprob: -8.68043327331543

Token 74: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -8.375538163818419e-05
    2. '0' → logprob: -10.750083923339844
    3. '```' → logprob: -10.750083923339844
    4. '1' → logprob: -11.750083923339844
    5. '_' → logprob: -11.750083923339844
    6. '*' → logprob: -12.000083923339844
    7. '101' → logprob: -12.750083923339844
    8. '100' → logprob: -12.875083923339844
    9. ' ' → logprob: -13.000083923339844
    10. '``' → logprob: -13.250083923339844

Token 75: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.5233436226844788
    2. ' *' → logprob: -0.8983436226844788
    3. '0' → logprob: -9.023344039916992
    4. '10' → logprob: -10.148344039916992
    5. ' ' → logprob: -10.523344039916992
    6. '2' → logprob: -12.023344039916992
    7. '8' → logprob: -12.148344039916992
    8. '1' → logprob: -12.523344039916992
    9. '20' → logprob: -12.898344039916992
    10. '```' → logprob: -12.898344039916992

Token 76: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.02078874595463276
    2. ' ' → logprob: -3.8957886695861816
    3. '1' → logprob: -8.52078914642334
    4. '0' → logprob: -10.64578914642334
    5. '100' → logprob: -12.02078914642334
    6. ')' → logprob: -12.14578914642334
    7. '```' → logprob: -12.64578914642334
    8. '2' → logprob: -12.77078914642334
    9. '9' → logprob: -13.52078914642334
    10. 'pow' → logprob: -14.08328914642334

Token 77: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.001186299603432417
    2. ' ' → logprob: -7.001186370849609
    3. '1' → logprob: -8.25118637084961
    4. '0' → logprob: -12.12618637084961
    5. '```' → logprob: -13.12618637084961
    6. ')' → logprob: -13.62618637084961
    7. '100' → logprob: -13.62618637084961
    8. '-' → logprob: -14.12618637084961
    9. '9' → logprob: -14.12618637084961
    10. '(' → logprob: -14.25118637084961

Token 78: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0011989205377176404
    2. ' )' → logprob: -7.376198768615723
    3. ')%' → logprob: -7.501198768615723
    4. '**' → logprob: -11.751198768615723
    5. '0' → logprob: -12.251198768615723
    6. '1' → logprob: -13.126198768615723
    7. '%' → logprob: -13.626198768615723
    8. ' ' → logprob: -14.126198768615723
    9. '2' → logprob: -14.501198768615723
    10. '```' → logprob: -15.001198768615723

Token 79: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.18107405304908752
    2. '%' → logprob: -1.8060740232467651
    3. ')' → logprob: -7.306074142456055
    4. ' ' → logprob: -8.056074142456055
    5. ')%' → logprob: -8.181074142456055
    6. '
' → logprob: -11.056074142456055
    7. '       ' → logprob: -11.306074142456055
    8. '   ' → logprob: -12.181074142456055
    9. '```' → logprob: -12.681074142456055
    10. '    ' → logprob: -12.681074142456055

Token 80: ' ' (ID: 220)
  Prédit: '11'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '11' → logprob: -0.0026166820898652077
    2. ' ' → logprob: -6.127616882324219
    3. '111' → logprob: -8.377616882324219
    4. '110' → logprob: -9.377616882324219
    5. '1' → logprob: -10.627616882324219
    6. '   ' → logprob: -10.752616882324219
    7. '100' → logprob: -11.440116882324219
    8. '  ' → logprob: -12.252616882324219
    9. '113' → logprob: -12.315116882324219
    10. '```' → logprob: -12.440116882324219

Token 81: '11' (ID: 994)
  Prédit: '11'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '11' → logprob: -8.888114098226652e-05
    2. '111' → logprob: -10.250088691711426
    3. '1' → logprob: -11.000088691711426
    4. '110' → logprob: -11.500088691711426
    5. '```' → logprob: -12.625088691711426
    6. ' ' → logprob: -12.750088691711426
    7. '113' → logprob: -13.000088691711426
    8. '100' → logprob: -13.125088691711426
    9. '7' → logprob: -13.375088691711426
    10. '
' → logprob: -13.687588691711426

Token 82: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008544483222067356
    2. ' else' → logprob: -5.758544445037842
    3. 'else' → logprob: -6.383544445037842
    4. '           ' → logprob: -6.883544445037842
    5. '<|end|>' → logprob: -6.883544445037842
    6. '
' → logprob: -7.758544445037842
    7. '   ' → logprob: -8.008544921875
    8. ')' → logprob: -8.008544921875
    9. ' ' → logprob: -9.133544921875
    10. '        
' → logprob: -9.633544921875

Token 83: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009801188483834267
    2. ' else' → logprob: -5.634801387786865
    3. 'else' → logprob: -6.009801387786865
    4. '<|end|>' → logprob: -6.134801387786865
    5. '           ' → logprob: -7.509801387786865
    6. '   ' → logprob: -8.259800910949707
    7. ')' → logprob: -8.384800910949707
    8. 'continue' → logprob: -9.134800910949707
    9. ' continue' → logprob: -9.259800910949707
    10. '<|end|>' → logprob: -9.384800910949707

Token 84: ' mod' (ID: 1812)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.43919986486434937
    2. '       ' → logprob: -1.1891999244689941
    3. ' continue' → logprob: -3.689199924468994
    4. 'continue' → logprob: -3.689199924468994
    5. '   ' → logprob: -7.564199924468994
    6. '	continue' → logprob: -9.314199447631836
    7. 'else' → logprob: -9.439199447631836
    8. ' else' → logprob: -9.564199447631836
    9. ' ' → logprob: -9.814199447631836
    10. 'contin' → logprob: -10.564199447631836

Token 85: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6333628296852112
    2. '=' → logprob: -0.7583628296852112
    3. ' ' → logprob: -7.883362770080566
    4. ' +=' → logprob: -8.008362770080566
    5. '+=' → logprob: -10.633362770080566
    6. ' =(' → logprob: -11.508362770080566
    7. ' -=' → logprob: -11.758362770080566
    8. ' %=' → logprob: -13.508362770080566
    9. ' *=' → logprob: -13.633362770080566
    10. '=(' → logprob: -13.883362770080566

Token 86: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.11432313174009323
    2. '(mod' → logprob: -2.239323139190674
    3. '(' → logprob: -7.489323139190674
    4. ' mod' → logprob: -7.989323139190674
    5. '0' → logprob: -7.989323139190674
    6. 'mod' → logprob: -8.989322662353516
    7. ' ' → logprob: -9.989322662353516
    8. '(m' → logprob: -10.989322662353516
    9. '(power' → logprob: -11.364322662353516
    10. '1' → logprob: -11.614322662353516

Token 87: 'mod' (ID: 4847)
  Prédit: '(mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(mod' → logprob: -0.4291723966598511
    2. 'mod' → logprob: -1.179172396659851
    3. ' mod' → logprob: -4.179172515869141
    4. ' (' → logprob: -4.304172515869141
    5. '(' → logprob: -5.179172515869141
    6. 'int' → logprob: -5.929172515869141
    7. '(int' → logprob: -6.304172515869141
    8. '10' → logprob: -7.929172515869141
    9. '0' → logprob: -7.929172515869141
    10. ')' → logprob: -8.30417251586914

Token 88: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.13057421147823334
    2. '+' → logprob: -2.8805742263793945
    3. ' *' → logprob: -3.3805742263793945
    4. '*' → logprob: -3.5055742263793945
    5. ' -' → logprob: -6.3805742263793945
    6. ' ' → logprob: -7.8805742263793945
    7. '-' → logprob: -9.755574226379395
    8. ')' → logprob: -9.880574226379395
    9. '0' → logprob: -11.005574226379395
    10. '10' → logprob: -11.130574226379395

Token 89: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.19545233249664307
    2. ' ' → logprob: -2.9454522132873535
    3. 'int' → logprob: -3.1954522132873535
    4. ' int' → logprob: -3.3204522132873535
    5. ' (' → logprob: -4.3204522132873535
    6. '(power' → logprob: -4.5704522132873535
    7. 'power' → logprob: -4.5704522132873535
    8. ' power' → logprob: -5.1954522132873535
    9. '(' → logprob: -5.5704522132873535
    10. '(int' → logprob: -6.4454522132873535

Token 90: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.20150142908096313
    2. 'int' → logprob: -2.2015013694763184
    3. 'power' → logprob: -4.076501369476318
    4. '(power' → logprob: -4.076501369476318
    5. ' int' → logprob: -4.576501369476318
    6. ' ' → logprob: -4.576501369476318
    7. '(' → logprob: -5.201501369476318
    8. '(int' → logprob: -5.451501369476318
    9. ' (' → logprob: -5.701501369476318
    10. '   ' → logprob: -6.451501369476318

Token 91: ' *' (ID: 425)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.017010850831866264
    2. ' )' → logprob: -4.392010688781738
    3. ' *' → logprob: -6.142010688781738
    4. '*' → logprob: -6.142010688781738
    5. '0' → logprob: -9.392010688781738
    6. ')%' → logprob: -10.517010688781738
    7. '

' → logprob: -11.392010688781738
    8. ')return' → logprob: -11.642010688781738
    9. ' ' → logprob: -11.892010688781738
    10. '    ' → logprob: -12.017010688781738

Token 92: ' power' (ID: 3470)
  Prédit: ' power'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' power' → logprob: -0.693361222743988
    2. 'power' → logprob: -0.693361222743988
    3. '(power' → logprob: -8.818361282348633
    4. 'pow' → logprob: -10.318361282348633
    5. ' ' → logprob: -10.943361282348633
    6. '    ' → logprob: -12.568361282348633
    7. '_power' → logprob: -13.193361282348633
    8. ' pow' → logprob: -13.443361282348633
    9. ')' → logprob: -13.568361282348633
    10. '  ' → logprob: -13.943361282348633

Token 93: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -2.570319702499546e-05
    2. ' ' → logprob: -11.250025749206543
    3. '_' → logprob: -11.875025749206543
    4. '```' → logprob: -13.125025749206543
    5. '1' → logprob: -13.875025749206543
    6. ')' → logprob: -14.250025749206543
    7. '<|end|>' → logprob: -14.750025749206543
    8. '=' → logprob: -14.750025749206543
    9. '۱۰' → logprob: -15.687525749206543
    10. '-' → logprob: -15.812525749206543

Token 94: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02126278541982174
    2. ' )' → logprob: -3.8962628841400146
    3. '       ' → logprob: -7.6462626457214355
    4. ')%' → logprob: -8.646263122558594
    5. '   ' → logprob: -10.021263122558594
    6. ')
' → logprob: -11.896263122558594
    7. '    ' → logprob: -12.646263122558594
    8. '        ' → logprob: -13.146263122558594
    9. ' ' → logprob: -13.146263122558594
    10. '           ' → logprob: -13.521263122558594

Token 95: ' %' (ID: 1851)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.874849796295166
    2. '%' → logprob: -1.499849796295166
    3. ' ' → logprob: -1.999849796295166
    4. ' 
' → logprob: -2.749849796295166
    5. ' %' → logprob: -3.124849796295166
    6. '       ' → logprob: -3.249849796295166
    7. ')' → logprob: -3.749849796295166
    8. '<|end|>' → logprob: -3.999849796295166
    9. ' continue' → logprob: -4.999849796295166
    10. '\n' → logprob: -5.499849796295166

Token 96: ' ' (ID: 220)
  Prédit: '11'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '11' → logprob: -0.014164448715746403
    2. ' ' → logprob: -4.264164447784424
    3. ' eleven' → logprob: -15.514164924621582
    4. '```' → logprob: -15.514164924621582
    5. '   ' → logprob: -15.951664924621582
    6. '111' → logprob: -16.139163970947266
    7. '十一' → logprob: -16.451663970947266
    8. '  ' → logprob: -16.701663970947266
    9. '１１' → logprob: -17.201663970947266
    10. ' ' → logprob: -17.389163970947266

Token 97: '11' (ID: 994)
  Prédit: '11'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '11' → logprob: -8.061054359131958e-06
    2. ' ' → logprob: -11.750007629394531
    3. '```' → logprob: -17.12500762939453
    4. '1' → logprob: -17.75000762939453
    5. '111' → logprob: -18.25000762939453
    6. '११' → logprob: -18.68750762939453
    7. '十一' → logprob: -19.25000762939453
    8. '`' → logprob: -19.43750762939453
    9. '   ' → logprob: -19.81250762939453
    10. '１１' → logprob: -19.93750762939453

Token 98: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01875709369778633
    2. '
' → logprob: -4.268756866455078
    3. '<|end|>' → logprob: -6.018756866455078
    4. '   ' → logprob: -6.768756866455078
    5. '\n' → logprob: -8.143756866455078
    6. ' else' → logprob: -8.393756866455078
    7. 'else' → logprob: -9.143756866455078
    8. '...' → logprob: -9.893756866455078
    9. '<|end|>' → logprob: -9.893756866455078
    10. '```' → logprob: -10.018756866455078

Token 99: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004239973612129688
    2. ' else' → logprob: -6.504240036010742
    3. '   ' → logprob: -6.629240036010742
    4. '<|end|>' → logprob: -7.254240036010742
    5. 'else' → logprob: -7.754240036010742
    6. ')' → logprob: -9.754240036010742
    7. '```' → logprob: -9.754240036010742
    8. '           ' → logprob: -10.254240036010742
    9. '...' → logprob: -10.504240036010742
    10. 'elif' → logprob: -10.879240036010742

Token 100: ' prefix' (ID: 18633)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02293468825519085
    2. '           ' → logprob: -3.897934675216675
    3. ' continue' → logprob: -6.897934913635254
    4. 'continue' → logprob: -7.147934913635254
    5. '   ' → logprob: -7.897934913635254
    6. 'else' → logprob: -9.022934913635254
    7. ' else' → logprob: -9.522934913635254
    8. '```' → logprob: -11.772934913635254
    9. 'elif' → logprob: -11.772934913635254
    10. '	continue' → logprob: -13.397934913635254

Token 101: '_mod' (ID: 15325)
  Prédit: '_mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mod' → logprob: -0.000513952283654362
    2. '_' → logprob: -7.625514030456543
    3. 'mod' → logprob: -11.375514030456543
    4. ' _' → logprob: -11.625514030456543
    5. 'Mod' → logprob: -13.500514030456543
    6. '	mod' → logprob: -14.125514030456543
    7. '_Mod' → logprob: -15.125514030456543
    8. '[' → logprob: -15.125514030456543
    9. '_m' → logprob: -15.375514030456543
    10. '<|end|>' → logprob: -15.375514030456543

Token 102: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.07519564032554626
    2. '[num' → logprob: -3.450195550918579
    3. '=' → logprob: -3.950195550918579
    4. ' =' → logprob: -4.700195789337158
    5. ' +=' → logprob: -5.700195789337158
    6. '.setdefault' → logprob: -6.075195789337158
    7. ' ' → logprob: -6.575195789337158
    8. ' [' → logprob: -7.075195789337158
    9. '.get' → logprob: -7.450195789337158
    10. ']' → logprob: -7.450195789337158

Token 103: ' {' (ID: 354)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.4402581453323364
    2. ' {}' → logprob: -2.065258026123047
    3. '{' → logprob: -2.190258026123047
    4. ' {' → logprob: -2.190258026123047
    5. ' defaultdict' → logprob: -5.440258026123047
    6. 'default' → logprob: -7.440258026123047
    7. ' ' → logprob: -9.065258026123047
    8. 'dict' → logprob: -9.190258026123047
    9. 'prefix' → logprob: -9.190258026123047
    10. '{})' → logprob: -10.065258026123047

Token 104: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.43960049748420715
    2. 'mod' → logprob: -1.6896004676818848
    3. '}' → logprob: -2.3146004676818848
    4. 'k' → logprob: -2.6896004676818848
    5. 'key' → logprob: -6.939600467681885
    6. '}}' → logprob: -7.564600467681885
    7. '})' → logprob: -7.564600467681885
    8. '   ' → logprob: -7.939600467681885
    9. '(' → logprob: -8.189600944519043
    10. 'm' → logprob: -8.689600944519043

Token 105: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00048751471331343055
    2. ' :' → logprob: -8.375487327575684
    3. '+' → logprob: -8.875487327575684
    4. '        ' → logprob: -10.500487327575684
    5. '       ' → logprob: -10.625487327575684
    6. ' +' → logprob: -10.750487327575684
    7. '          ' → logprob: -11.875487327575684
    8. '+:' → logprob: -12.250487327575684
    9. ':return' → logprob: -12.375487327575684
    10. ':+' → logprob: -12.375487327575684

Token 106: '1' (ID: 16)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.5358001589775085
    2. '1' → logprob: -0.9108001589775085
    3. ' prefix' → logprob: -5.160799980163574
    4. '(prefix' → logprob: -5.410799980163574
    5. 'count' → logprob: -6.660799980163574
    6. ' ' → logprob: -7.035799980163574
    7. '0' → logprob: -9.160799980163574
    8. 'max' → logprob: -11.160799980163574
    9. 'sum' → logprob: -11.535799980163574
    10. '2' → logprob: -11.785799980163574

Token 107: '}
' (ID: 739)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18313699960708618
    2. '}' → logprob: -1.8081369400024414
    3. ' }' → logprob: -6.683136940002441
    4. '   ' → logprob: -7.308136940002441
    5. '           ' → logprob: -7.308136940002441
    6. '<|end|>' → logprob: -7.808136940002441
    7. ',' → logprob: -9.058136940002441
    8. '<|end|>' → logprob: -9.683136940002441
    9. '...' → logprob: -9.933136940002441
    10. '               ' → logprob: -10.308136940002441

Token 108: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006946129258722067
    2. '<|end|>' → logprob: -5.756946086883545
    3. 'else' → logprob: -6.256946086883545
    4. ' else' → logprob: -7.381946086883545
    5. '   ' → logprob: -8.006946563720703
    6. '	' → logprob: -8.006946563720703
    7. '           ' → logprob: -8.631946563720703
    8. '
' → logprob: -9.131946563720703
    9. 'elif' → logprob: -9.881946563720703
    10. '<|end|>' → logprob: -10.131946563720703

Token 109: ' continue' (ID: 4901)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05604671314358711
    2. 'continue' (adapté à ' continue') → logprob: -3.556046724319458
    3. '       ' → logprob: -3.681046724319458
    4. ' continue' → logprob: -7.806046485900879
    5. 'return' → logprob: -8.806046485900879
    6. 'else' → logprob: -9.306046485900879
    7. '   ' → logprob: -10.431046485900879
    8. 'count' → logprob: -10.931046485900879
    9. '	       ' → logprob: -11.556046485900879
    10. 'break' → logprob: -11.556046485900879

Token 110: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.035750992596149445
    2. '<|end|>' → logprob: -3.6607511043548584
    3. '   ' → logprob: -5.910750865936279
    4. '
' → logprob: -5.910750865936279
    5. '        
' → logprob: -6.410750865936279
    6. '\n' → logprob: -7.660750865936279
    7. '```' → logprob: -7.785750865936279
    8. ')' → logprob: -8.410751342773438
    9. ' ' → logprob: -8.535751342773438
    10. '    
' → logprob: -8.910751342773438

Token 111: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01300304289907217
    2. '<|end|>' → logprob: -4.638002872467041
    3. '   ' → logprob: -6.763002872467041
    4. '        
' → logprob: -7.388002872467041
    5. ')' → logprob: -7.888002872467041
    6. '```' → logprob: -8.2630033493042
    7. ' ' → logprob: -9.1380033493042
    8. '    ' → logprob: -9.3880033493042
    9. '      ' → logprob: -9.7630033493042
    10. ',' → logprob: -9.7630033493042

Token 112: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02141927182674408
    2. '   ' → logprob: -5.396419048309326
    3. ' mod' → logprob: -5.396419048309326
    4. 'mod' → logprob: -5.521419048309326
    5. '        ' → logprob: -6.146419048309326
    6. 'else' → logprob: -6.396419048309326
    7. ' else' → logprob: -6.396419048309326
    8. '    ' → logprob: -6.771419048309326
    9. 'power' → logprob: -8.521419525146484
    10. '      ' → logprob: -8.646419525146484

Token 113: ' reset' (ID: 12820)
  Prédit: ' mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' mod' → logprob: -0.051692280918359756
    2. ' power' → logprob: -3.551692247390747
    3. 'mod' → logprob: -4.926692485809326
    4. '       ' → logprob: -5.426692485809326
    5. ' else' → logprob: -5.676692485809326
    6. '    ' → logprob: -6.926692485809326
    7. '   ' → logprob: -6.926692485809326
    8. ' for' → logprob: -7.051692485809326
    9. '        ' → logprob: -7.176692485809326
    10. ' prefix' → logprob: -7.301692485809326

Token 114: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7713706493377686
    2. 'prefix' → logprob: -1.1463706493377686
    3. ' prefix' → logprob: -2.7713706493377686
    4. '   ' → logprob: -3.1463706493377686
    5. 'mod' → logprob: -3.5213706493377686
    6. '
' → logprob: -4.271370887756348
    7. 'power' → logprob: -4.521370887756348
    8. 'count' → logprob: -4.646370887756348
    9. '<|end|>' → logprob: -4.646370887756348
    10. '           ' → logprob: -4.896370887756348

Token 115: ' leading' (ID: 8117)
  Prédit: ' prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' prefix' → logprob: -0.05226131156086922
    2. 'prefix' → logprob: -3.1772613525390625
    3. ' mod' → logprob: -5.8022613525390625
    4. ' power' → logprob: -6.1772613525390625
    5. ' count' → logprob: -6.8022613525390625
    6. ' num' → logprob: -6.9272613525390625
    7. ' not' → logprob: -7.0522613525390625
    8. ' ' → logprob: -8.052261352539062
    9. ' len' → logprob: -8.427261352539062
    10. 'count' → logprob: -8.927261352539062

Token 116: ' zero' (ID: 12421)
  Prédit: ' zeros'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' zeros' → logprob: -0.5286715030670166
    2. '0' → logprob: -2.0286715030670166
    3. ' zero' → logprob: -2.0286715030670166
    4. ' ' → logprob: -2.5286715030670166
    5. 'zero' → logprob: -3.2786715030670166
    6. 'zeros' → logprob: -4.1536712646484375
    7. 'digit' → logprob: -5.2786712646484375
    8. ' digit' → logprob: -5.7786712646484375
    9. '_' → logprob: -6.2786712646484375
    10. '_zero' → logprob: -6.2786712646484375

Token 117: ' in' (ID: 306)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 118: ' substring' (ID: 89494)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.8107831478118896
    2. ' the' → logprob: -1.8107831478118896
    3. ' num' → logprob: -1.9357831478118896
    4. 'the' → logprob: -2.5607831478118896
    5. 'sequence' → logprob: -3.5607831478118896
    6. 'digit' → logprob: -4.185783386230469
    7. ' a' → logprob: -4.310783386230469
    8. ' current' → logprob: -4.560783386230469
    9. 'number' → logprob: -4.810783386230469
    10. 'prefix' → logprob: -4.810783386230469

Token 119: ' is' (ID: 382)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13694792985916138
    2. '<|end|>' → logprob: -2.7619478702545166
    3. '        
' → logprob: -4.386948108673096
    4. ' ' → logprob: -4.636948108673096
    5. ')' → logprob: -4.761948108673096
    6. '        ' → logprob: -4.886948108673096
    7. '
' → logprob: -5.011948108673096
    8. ',' → logprob: -5.511948108673096
    9. '\n' → logprob: -5.761948108673096
    10. '   ' → logprob: -6.136948108673096

Token 120: ' invalid' (ID: 15796)
  Prédit: ' found'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' found' → logprob: -1.1168835163116455
    2. ' encountered' → logprob: -1.3668835163116455
    3. ' detected' → logprob: -1.4918835163116455
    4. 'found' → logprob: -2.7418835163116455
    5. ' True' → logprob: -3.4918835163116455
    6. 'True' → logprob: -3.8668835163116455
    7. 'det' → logprob: -3.8668835163116455
    8. 'enc' → logprob: -3.8668835163116455
    9. ' met' → logprob: -4.241883277893066
    10. ' reached' → logprob: -5.116883277893066

Token 121: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03938339650630951
    2. '<|end|>' → logprob: -4.164383411407471
    3. '        
' → logprob: -4.414383411407471
    4. '
' → logprob: -6.164383411407471
    5. '   ' → logprob: -6.164383411407471
    6. '        ' → logprob: -6.664383411407471
    7. ' ' → logprob: -6.664383411407471
    8. '    
' → logprob: -7.539383411407471
    9. '\n' → logprob: -7.664383411407471
    10. ' 
' → logprob: -7.664383411407471

Token 122: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07280059158802032
    2. ')' → logprob: -4.197800636291504
    3. ' ' → logprob: -4.197800636291504
    4. '<|end|>' → logprob: -4.822800636291504
    5. '        
' → logprob: -5.322800636291504
    6. '   ' → logprob: -5.322800636291504
    7. '        ' → logprob: -5.447800636291504
    8. ' 
' → logprob: -5.572800636291504
    9. '_' → logprob: -5.947800636291504
    10. ',' → logprob: -5.947800636291504

Token 123: ' prefix' (ID: 18633)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11040499061346054
    2. '   ' → logprob: -3.4854049682617188
    3. ' ' → logprob: -3.8604049682617188
    4. '        ' → logprob: -4.485404968261719
    5. '    ' → logprob: -4.610404968261719
    6. ' 
' → logprob: -4.985404968261719
    7. ' else' → logprob: -5.360404968261719
    8. '        
' → logprob: -5.360404968261719
    9. ' ' → logprob: -6.235404968261719
    10. ')' → logprob: -6.485404968261719

Token 124: '_mod' (ID: 15325)
  Prédit: '_mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mod' → logprob: -0.00030114251421764493
    2. '_' → logprob: -8.375301361083984
    3. ' =' → logprob: -10.750301361083984
    4. ' _' → logprob: -11.625301361083984
    5. '=' → logprob: -11.875301361083984
    6. '_reset' → logprob: -12.375301361083984
    7. '_lengths' → logprob: -12.500301361083984
    8. '_len' → logprob: -12.750301361083984
    9. '=_' → logprob: -13.000301361083984
    10. '_counts' → logprob: -13.250301361083984

Token 125: '_new' (ID: 13000)
  Prédit: '.clear'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.clear' → logprob: -0.649308443069458
    2. ' =' → logprob: -0.899308443069458
    3. '=' → logprob: -2.649308443069458
    4. '={}' → logprob: -11.274308204650879
    5. '.' → logprob: -11.774308204650879
    6. ' ' → logprob: -11.774308204650879
    7. ' .' → logprob: -12.524308204650879
    8. '   ' → logprob: -13.274308204650879
    9. '={' → logprob: -13.524308204650879
    10. '.setdefault' → logprob: -13.774308204650879

Token 126: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0789569839835167
    2. '=' → logprob: -2.5789570808410645
    3. '={}' → logprob: -9.828956604003906
    4. ' ={' → logprob: -11.703956604003906
    5. '={' → logprob: -13.203956604003906
    6. ' ' → logprob: -13.203956604003906
    7. '={}
' → logprob: -14.453956604003906
    8. '   ' → logprob: -15.203956604003906
    9. '{' → logprob: -15.578956604003906
    10. '{}' → logprob: -16.453956604003906

Token 127: ' {}
' (ID: 11421)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.0004330532974563539
    2. ' {}' → logprob: -7.750432968139648
    3. '{' → logprob: -14.375432968139648
    4. 'dict' → logprob: -14.500432968139648
    5. '={}' → logprob: -15.125432968139648
    6. '{}
' → logprob: -15.250432968139648
    7. 'default' → logprob: -15.375432968139648
    8. 'prefix' → logprob: -15.375432968139648
    9. ' defaultdict' → logprob: -15.375432968139648
    10. '{})' → logprob: -15.875432968139648

Token 128: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.024516897276043892
    2. '<|end|>' → logprob: -3.8995168209075928
    3. ' for' → logprob: -5.899517059326172
    4. '        ' → logprob: -8.274517059326172
    5. '<|end|>' → logprob: -8.399517059326172
    6. '	' → logprob: -8.399517059326172
    7. '	       ' → logprob: -9.149517059326172
    8. 'for' → logprob: -9.524517059326172
    9. '   ' → logprob: -9.774517059326172
    10. '           ' → logprob: -10.149517059326172

Token 129: ' mod' (ID: 1812)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6055565476417542
    2. '       ' → logprob: -0.8555565476417542
    3. 'for' → logprob: -3.6055564880371094
    4. '        ' → logprob: -7.105556488037109
    5. ' mod' → logprob: -8.48055648803711
    6. '   ' → logprob: -8.60555648803711
    7. '<|end|>' → logprob: -8.73055648803711
    8. ' ' → logprob: -9.23055648803711
    9. '	for' → logprob: -9.98055648803711
    10. 'mod' (adapté à ' mod') → logprob: -9.98055648803711

Token 130: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.579242467880249
    2. ' =' → logprob: -0.829242467880249
    3. '_' → logprob: -6.329242706298828
    4. '_new' → logprob: -6.829242706298828
    5. ' +=' → logprob: -8.079242706298828
    6. ',' → logprob: -10.704242706298828
    7. '+=' → logprob: -10.954242706298828
    8. '_=' → logprob: -11.079242706298828
    9. ':' → logprob: -11.329242706298828
    10. ')' → logprob: -11.454242706298828

Token 131: ' ' (ID: 220)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.008727321401238441
    2. '(mod' → logprob: -5.383727550506592
    3. '(num' → logprob: -6.133727550506592
    4. '(' → logprob: -6.633727550506592
    5. '0' → logprob: -8.258727073669434
    6. ' ' → logprob: -8.883727073669434
    7. '   ' → logprob: -10.008727073669434
    8. '(power' → logprob: -10.133727073669434
    9. '(int' → logprob: -10.758727073669434
    10. '((' → logprob: -10.758727073669434

Token 132: '0' (ID: 15)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.5519436001777649
    2. '(mod' → logprob: -1.0519435405731201
    3. '(num' → logprob: -3.30194354057312
    4. '(' → logprob: -3.67694354057312
    5. '0' → logprob: -4.551943778991699
    6. ' ' → logprob: -6.676943778991699
    7. '((' → logprob: -8.0519437789917
    8. '(power' → logprob: -8.5519437789917
    9. '(int' → logprob: -9.1769437789917
    10. '   ' → logprob: -9.5519437789917

Token 133: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 134: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7317635416984558
    2. '<|end|>' → logprob: -0.8567635416984558
    3. ' for' → logprob: -3.4817636013031006
    4. 'for' → logprob: -4.3567633628845215
    5. '<|end|>' → logprob: -4.4817633628845215
    6. '+' → logprob: -4.7317633628845215
    7. ' +' → logprob: -4.8567633628845215
    8. '
' → logprob: -5.3567633628845215
    9. '        ' → logprob: -5.4817633628845215
    10. ' ' → logprob: -6.1067633628845215

Token 135: ' power' (ID: 3470)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.27644628286361694
    2. ' for' → logprob: -1.7764463424682617
    3. 'power' (adapté à ' power') → logprob: -2.9014463424682617
    4. '       ' → logprob: -4.776446342468262
    5. ' power' → logprob: -5.526446342468262
    6. '   ' → logprob: -6.401446342468262
    7. '```' → logprob: -7.776446342468262
    8. 'prefix' → logprob: -8.026446342468262
    9. 'pow' → logprob: -8.151446342468262
    10. '(power' → logprob: -8.151446342468262

Token 136: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.00023095356300473213
    2. '_' → logprob: -8.62523078918457
    3. ' ' → logprob: -10.37523078918457
    4. '```' → logprob: -11.37523078918457
    5. '   ' → logprob: -13.00023078918457
    6. '[' → logprob: -13.87523078918457
    7. ')' → logprob: -14.00023078918457
    8. '=' → logprob: -14.12523078918457
    9. '    ' → logprob: -14.50023078918457
    10. '``' → logprob: -14.75023078918457

Token 137: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5232917666435242
    2. '=' → logprob: -0.8982917666435242
    3. ' ' → logprob: -9.77329158782959
    4. ' *' → logprob: -10.14829158782959
    5. ' *=' → logprob: -10.52329158782959
    6. '*' → logprob: -11.14829158782959
    7. ')' → logprob: -11.52329158782959
    8. '   ' → logprob: -12.02329158782959
    9. '*=' → logprob: -12.02329158782959
    10. '    ' → logprob: -13.27329158782959

Token 138: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.006160693243145943
    2. ' ' → logprob: -5.381160736083984
    3. '(' → logprob: -7.131160736083984
    4. '0' → logprob: -7.756160736083984
    5. ' (' → logprob: -9.381160736083984
    6. '(power' → logprob: -9.756160736083984
    7. '   ' → logprob: -9.881160736083984
    8. '       ' → logprob: -10.381160736083984
    9. 'pow' → logprob: -10.756160736083984
    10. 'power' → logprob: -11.256160736083984

Token 139: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0034171282313764095
    2. '(' → logprob: -5.878417015075684
    3. ' ' → logprob: -7.753417015075684
    4. '10' → logprob: -9.503417015075684
    5. '0' → logprob: -10.003417015075684
    6. ' (' → logprob: -10.503417015075684
    7. '(power' → logprob: -11.378417015075684
    8. 'pow' → logprob: -12.128417015075684
    9. '(pow' → logprob: -12.503417015075684
    10. '100' → logprob: -12.753417015075684

Token 140: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 141: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 142: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.49837201833724976
    2. 'for' (adapté à ' for') → logprob: -0.9983720183372498
    3. '       ' → logprob: -3.7483720779418945
    4. '   ' → logprob: -8.748372077941895
    5. 'prefix' → logprob: -9.873372077941895
    6. '	for' → logprob: -10.123372077941895
    7. '           ' → logprob: -10.498372077941895
    8. '        ' → logprob: -10.623372077941895
    9. '```' → logprob: -10.623372077941895
    10. 'i' → logprob: -10.998372077941895

Token 143: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.3486021161079407
    2. 'j' → logprob: -1.223602056503296
    3. ' i' → logprob: -10.348602294921875
    4. 'i' → logprob: -10.723602294921875
    5. '   ' → logprob: -10.973602294921875
    6. ' ' → logprob: -11.473602294921875
    7. ' k' → logprob: -11.723602294921875
    8. 'k' → logprob: -11.723602294921875
    9. ' length' → logprob: -11.973602294921875
    10. '```' → logprob: -12.098602294921875

Token 144: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.005349259357899427
    2. 'in' → logprob: -5.255349159240723
    3. '        ' → logprob: -10.255349159240723
    4. '       ' → logprob: -10.880349159240723
    5. ' ' → logprob: -11.505349159240723
    6. '   ' → logprob: -11.755349159240723
    7. '    ' → logprob: -12.005349159240723
    8. ' j' → logprob: -12.005349159240723
    9. ' =' → logprob: -12.005349159240723
    10. '	in' → logprob: -12.255349159240723

Token 145: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.5388222932815552
    2. ' range' → logprob: -1.2888222932815552
    3. 'i' → logprob: -2.0388221740722656
    4. ' i' → logprob: -4.538822174072266
    5. '   ' → logprob: -10.163822174072266
    6. '[i' → logprob: -11.038822174072266
    7. '(range' → logprob: -11.413822174072266
    8. 're' → logprob: -11.788822174072266
    9. '(i' → logprob: -12.163822174072266
    10. '	range' → logprob: -12.163822174072266

Token 146: '(i' (ID: 3649)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0016117468476295471
    2. ' i' → logprob: -6.501611709594727
    3. '   ' → logprob: -10.001611709594727
    4. '(i' → logprob: -10.251611709594727
    5. '       ' → logprob: -11.376611709594727
    6. 'j' → logprob: -12.001611709594727
    7. 'n' → logprob: -12.251611709594727
    8. '	i' → logprob: -13.376611709594727
    9. '           ' → logprob: -13.501611709594727
    10. ',i' → logprob: -14.001611709594727

Token 147: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004885280970484018
    2. ' ,' → logprob: -6.129885196685791
    3. '-' → logprob: -6.629885196685791
    4. '+' → logprob: -7.379885196685791
    5. ',i' → logprob: -7.879885196685791
    6. '       ' → logprob: -9.50488567352295
    7. ' -' → logprob: -9.75488567352295
    8. ',n' → logprob: -10.12988567352295
    9. ',j' → logprob: -10.25488567352295
    10. ' +' → logprob: -10.62988567352295

Token 148: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.1529427021741867
    2. 'i' → logprob: -2.152942657470703
    3. ' n' → logprob: -3.902942657470703
    4. ' i' → logprob: -5.902942657470703
    5. 'len' → logprob: -6.527942657470703
    6. '   ' → logprob: -7.152942657470703
    7. 'j' → logprob: -8.652942657470703
    8. ' len' → logprob: -8.902942657470703
    9. ' ' → logprob: -9.402942657470703
    10. '(i' → logprob: -10.902942657470703

Token 149: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5538741946220398
    2. '):
' → logprob: -0.9288741946220398
    3. '+' → logprob: -3.5538742542266846
    4. '   ' → logprob: -7.4288740158081055
    5. '       ' → logprob: -7.5538740158081055
    6. ' +' → logprob: -8.678874015808105
    7. '):

' → logprob: -8.928874015808105
    8. ':' → logprob: -9.553874015808105
    9. '):
' → logprob: -9.928874015808105
    10. ',' → logprob: -10.178874015808105

Token 150: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.009639095515012741
    2. '       ' → logprob: -6.259639263153076
    3. '<|end|>' → logprob: -6.259639263153076
    4. '        ' → logprob: -6.634639263153076
    5. '            ' → logprob: -6.634639263153076
    6. '	       ' → logprob: -7.634639263153076
    7. '            
' → logprob: -7.759639263153076
    8. '```' → logprob: -7.759639263153076
    9. '<|end|>' → logprob: -8.134638786315918
    10. '               ' → logprob: -8.509638786315918

Token 151: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.11589473485946655
    2. ' ' → logprob: -3.2408947944641113
    3. '               ' → logprob: -3.4908947944641113
    4. ' mod' → logprob: -4.740894794464111
    5. '            ' → logprob: -4.865894794464111
    6. ' if' → logprob: -5.365894794464111
    7. '            
' → logprob: -5.490894794464111
    8. '       ' → logprob: -5.615894794464111
    9. ' ' → logprob: -6.490894794464111
    10. '   ' → logprob: -6.490894794464111

Token 152: ' num' (ID: 2269)
  Prédit: ' num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' num' → logprob: -0.016334405168890953
    2. 'num' → logprob: -4.141334533691406
    3. ' ' → logprob: -8.391334533691406
    4. '(num' → logprob: -10.516334533691406
    5. ' int' → logprob: -11.266334533691406
    6. ' (' → logprob: -11.516334533691406
    7. ' ' → logprob: -12.141334533691406
    8. ' not' → logprob: -12.641334533691406
    9. 'int' → logprob: -13.516334533691406
    10. '	num' → logprob: -13.516334533691406

Token 153: '[i' (ID: 1768)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.0006040262524038553
    2. '[' → logprob: -7.500604152679443
    3. '[i' → logprob: -10.000603675842285
    4. '```' → logprob: -12.500603675842285
    5. ' [' → logprob: -14.125603675842285
    6. '[
' → logprob: -14.625603675842285
    7. 'j' → logprob: -16.2506046295166
    8. '   ' → logprob: -16.2506046295166
    9. '][' → logprob: -16.5006046295166
    10. ']' → logprob: -16.5006046295166

Token 154: ']' (ID: 60)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.4816324710845947
    2. ']' → logprob: -0.9816324710845947
    3. '']' → logprob: -5.606632232666016
    4. ']==' → logprob: -6.356632232666016
    5. '][' → logprob: -6.981632232666016
    6. '[' → logprob: -7.731632232666016
    7. '[i' → logprob: -8.106632232666016
    8. '==' → logprob: -9.356632232666016
    9. 'j' → logprob: -9.856632232666016
    10. '```' → logprob: -9.981632232666016

Token 155: ' ==' (ID: 951)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.3657863438129425
    2. ']' → logprob: -1.4907863140106201
    3. '[i' → logprob: -3.49078631401062
    4. ']==' → logprob: -3.99078631401062
    5. '[' → logprob: -4.365786552429199
    6. '==' → logprob: -4.615786552429199
    7. '']' → logprob: -5.365786552429199
    8. ' ==' → logprob: -6.115786552429199
    9. ' ]' → logprob: -7.615786552429199
    10. '][' → logprob: -7.615786552429199

Token 156: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.13911686837673187
    2. 'num' → logprob: -2.7641167640686035
    3. ' '' → logprob: -3.2641167640686035
    4. ' num' → logprob: -4.0141167640686035
    5. '0' → logprob: -4.6391167640686035
    6. ' ' → logprob: -7.3891167640686035
    7. '"' → logprob: -10.014117240905762
    8. '   ' → logprob: -10.264117240905762
    9. ''s' → logprob: -10.389117240905762
    10. '[num' → logprob: -10.889117240905762

Token 157: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.008835439570248127
    2. ''' → logprob: -4.758835315704346
    3. '1' → logprob: -9.258835792541504
    4. ' ' → logprob: -10.008835792541504
    5. 'num' → logprob: -11.008835792541504
    6. ''s' → logprob: -11.258835792541504
    7. ' '' → logprob: -11.383835792541504
    8. '"' → logprob: -12.321335792541504
    9. '```' → logprob: -12.508835792541504
    10. '')' → logprob: -12.821335792541504

Token 158: '':' (ID: 2337)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.500379741191864
    2. '':' → logprob: -2.000379800796509
    3. ':
' → logprob: -2.750379800796509
    4. ']' → logprob: -3.375379800796509
    5. ']:' → logprob: -3.375379800796509
    6. '']' → logprob: -4.00037956237793
    7. '       ' → logprob: -4.12537956237793
    8. ']:
' → logprob: -4.50037956237793
    9. '':
' → logprob: -4.62537956237793
    10. ' and' → logprob: -4.62537956237793

Token 159: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2262999713420868
    2. '               ' → logprob: -1.9763000011444092
    3. '<|end|>' → logprob: -3.726300001144409
    4. '           ' → logprob: -4.47629976272583
    5. '            ' → logprob: -4.72629976272583
    6. ' continue' → logprob: -4.85129976272583
    7. '                ' → logprob: -5.60129976272583
    8. ' break' → logprob: -6.72629976272583
    9. '                               ' → logprob: -6.85129976272583
    10. ' ' → logprob: -6.85129976272583

Token 160: ' #' (ID: 1069)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5673322081565857
    2. '               ' → logprob: -1.0673322677612305
    3. '           ' → logprob: -2.8173322677612305
    4. '            ' → logprob: -4.8173322677612305
    5. '<|end|>' → logprob: -4.8173322677612305
    6. ' break' → logprob: -5.5673322677612305
    7. '                ' → logprob: -6.3173322677612305
    8. ' continue' → logprob: -6.8173322677612305
    9. '0' → logprob: -6.9423322677612305
    10. ' ' → logprob: -7.1923322677612305

Token 161: ' leading' (ID: 8117)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.04566068947315216
    2. '<|end|>' → logprob: -3.4206607341766357
    3. ' continue' → logprob: -5.420660495758057
    4. '   ' → logprob: -7.170660495758057
    5. '  ' → logprob: -7.295660495758057
    6. ' if' → logprob: -7.420660495758057
    7. '       ' → logprob: -7.670660495758057
    8. ' 
' → logprob: -7.795660495758057
    9. '           ' → logprob: -7.795660495758057
    10. 'continue' → logprob: -8.045660972595215

Token 162: ' zero' (ID: 12421)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.23781169950962067
    2. '<|end|>' → logprob: -2.612811803817749
    3. ' ==' → logprob: -3.862811803817749
    4. ' if' → logprob: -3.987811803817749
    5. ')' → logprob: -4.11281156539917
    6. '_' → logprob: -4.36281156539917
    7. '0' → logprob: -4.61281156539917
    8. ' zero' → logprob: -4.86281156539917
    9. '[i' → logprob: -5.23781156539917
    10. ' token' → logprob: -5.36281156539917

Token 163: ' not' (ID: 625)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.048518888652324677
    2. ':
' → logprob: -4.423518657684326
    3. ' :' → logprob: -4.423518657684326
    4. '<|end|>' → logprob: -4.673518657684326
    5. '           ' → logprob: -5.673518657684326
    6. ' ' → logprob: -5.923518657684326
    7. ' continue' → logprob: -6.173518657684326
    8. ')' → logprob: -6.548518657684326
    9. ' :
' → logprob: -6.923518657684326
    10. ' and' → logprob: -7.298518657684326

Token 164: ' allowed' (ID: 9279)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.37003087997436523
    2. ' ' → logprob: -1.7450308799743652
    3. '=' → logprob: -3.8700308799743652
    4. 'continue' → logprob: -3.9950308799743652
    5. ' in' → logprob: -4.120030879974365
    6. '   ' → logprob: -4.620030879974365
    7. ' valid' → logprob: -4.620030879974365
    8. ':' → logprob: -4.870030879974365
    9. '           ' → logprob: -4.870030879974365
    10. '       ' → logprob: -4.995030879974365

Token 165: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.22210237383842468
    2. ':' → logprob: -2.097102403640747
    3. '           ' → logprob: -3.472102403640747
    4. '<|end|>' → logprob: -3.972102403640747
    5. ' ' → logprob: -4.347102165222168
    6. ' :' → logprob: -5.597102165222168
    7. ':
' → logprob: -5.847102165222168
    8. '            ' → logprob: -6.097102165222168
    9. '                ' → logprob: -7.347102165222168
    10. '              ' → logprob: -7.472102165222168

Token 166: '               ' (ID: 506)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2537767291069031
    2. '           ' → logprob: -2.753776788711548
    3. '               ' → logprob: -3.003776788711548
    4. ':
' → logprob: -3.378776788711548
    5. '[' → logprob: -3.628776788711548
    6. '<|end|>' → logprob: -4.003776550292969
    7. ' ' → logprob: -5.128776550292969
    8. ' continue' → logprob: -5.503776550292969
    9. ' :' → logprob: -5.628776550292969
    10. '   ' → logprob: -6.003776550292969

Token 167: ' break' (ID: 2338)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5903928875923157
    2. ' break' → logprob: -1.090392827987671
    3. ' continue' → logprob: -2.965392827987671
    4. '            ' → logprob: -3.965392827987671
    5. '                ' → logprob: -4.71539306640625
    6. '               ' → logprob: -4.71539306640625
    7. '           ' → logprob: -4.84039306640625
    8. 'break' (adapté à ' break') → logprob: -5.46539306640625
    9. ' ' → logprob: -5.59039306640625
    10. '0' → logprob: -7.21539306640625

Token 168: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 169: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 170: ' mod' (ID: 1812)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.388067364692688
    2. '           ' → logprob: -2.2630672454833984
    3. '            ' → logprob: -2.3880672454833984
    4. '        ' → logprob: -3.2630672454833984
    5. '<|end|>' → logprob: -3.3880672454833984
    6. ' if' → logprob: -4.263067245483398
    7. '       ' → logprob: -4.388067245483398
    8. '               ' → logprob: -5.638067245483398
    9. ' mod' → logprob: -5.763067245483398
    10. '    ' → logprob: -5.888067245483398

Token 171: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.313264399766922
    2. '=' → logprob: -1.3132643699645996
    3. ' ' → logprob: -13.938264846801758
    4. ' +=' → logprob: -14.313264846801758
    5. ')' → logprob: -14.563264846801758
    6. '   ' → logprob: -15.813264846801758
    7. '+=' → logprob: -16.563264846801758
    8. '           ' → logprob: -16.563264846801758
    9. '       ' → logprob: -16.688264846801758
    10. '    ' → logprob: -16.938264846801758

Token 172: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.693365216255188
    2. '(mod' → logprob: -0.693365216255188
    3. '   ' → logprob: -9.318365097045898
    4. '(' → logprob: -10.318365097045898
    5. '(int' → logprob: -10.568365097045898
    6. ' ' → logprob: -11.068365097045898
    7. '  ' → logprob: -11.693365097045898
    8. '((' → logprob: -11.693365097045898
    9. '(num' → logprob: -11.943365097045898
    10. '(m' → logprob: -11.943365097045898

Token 173: 'mod' (ID: 4847)
  Prédit: '(mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(mod' → logprob: -0.3870829939842224
    2. 'mod' → logprob: -1.1370830535888672
    3. ' mod' → logprob: -9.262083053588867
    4. ' (' → logprob: -9.887083053588867
    5. '   ' → logprob: -10.762083053588867
    6. '(' → logprob: -11.012083053588867
    7. '10' → logprob: -11.512083053588867
    8. '	mod' → logprob: -12.137083053588867
    9. 'int' → logprob: -12.637083053588867
    10. ' ' → logprob: -13.012083053588867

Token 174: ' *' (ID: 425)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.5351882576942444
    2. ' *' → logprob: -0.9101882576942444
    3. '*' → logprob: -5.1601881980896
    4. '+' → logprob: -5.1601881980896
    5. ' ' → logprob: -7.6601881980896
    6. ' ' → logprob: -10.535188674926758
    7. ')' → logprob: -12.410188674926758
    8. '           ' → logprob: -13.285188674926758
    9. '  ' → logprob: -13.660188674926758
    10. '          ' → logprob: -14.035188674926758

Token 175: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.00011033779446734115
    2. ' ' → logprob: -9.125110626220703
    3. '11' → logprob: -13.750110626220703
    4. '   ' → logprob: -15.750110626220703
    5. '1' → logprob: -16.750110626220703
    6. '
' → logprob: -17.250110626220703
    7. '         ' → logprob: -18.000110626220703
    8. '```' → logprob: -18.000110626220703
    9. '  ' → logprob: -18.375110626220703
    10. '     ' → logprob: -18.500110626220703

Token 176: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -4.961759259458631e-06
    2. ' ' → logprob: -12.250004768371582
    3. '   ' → logprob: -17.3750057220459
    4. '
' → logprob: -17.5000057220459
    5. '11' → logprob: -18.0000057220459
    6. '```' → logprob: -18.0000057220459
    7. '1' → logprob: -18.2500057220459
    8. '

' → logprob: -20.3750057220459
    9. '  ' → logprob: -20.6250057220459
    10. '         ' → logprob: -20.7500057220459

Token 177: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5759864449501038
    2. ' +' → logprob: -0.8259864449501038
    3. ')' → logprob: -10.075986862182617
    4. '+
' → logprob: -13.575986862182617
    5. ')+' → logprob: -13.575986862182617
    6. '           ' → logprob: -14.325986862182617
    7. ' +
' → logprob: -15.075986862182617
    8. ' ' → logprob: -15.700986862182617
    9. ' ' → logprob: -15.825986862182617
    10. '+j' → logprob: -15.825986862182617

Token 178: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.00018661346985027194
    2. ' int' → logprob: -8.625186920166016
    3. '(int' → logprob: -12.125186920166016
    4. 'ord' → logprob: -13.875186920166016
    5. '   ' → logprob: -14.500186920166016
    6. '  ' → logprob: -17.125186920166016
    7. '[int' → logprob: -17.375186920166016
    8. '    ' → logprob: -17.500186920166016
    9. '1' → logprob: -17.750186920166016
    10. ' ' → logprob: -17.875186920166016

Token 179: '(num' (ID: 15828)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.6936401724815369
    2. '(num' → logprob: -0.6936401724815369
    3. ' num' → logprob: -7.693640232086182
    4. '(' → logprob: -10.443639755249023
    5. '[num' → logprob: -12.318639755249023
    6. ',num' → logprob: -13.943639755249023
    7. '	num' → logprob: -14.068639755249023
    8. ' ' → logprob: -14.818639755249023
    9. ' (' → logprob: -14.943639755249023
    10. '<num' → logprob: -14.943639755249023

Token 180: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.44024747610092163
    2. '[num' → logprob: -1.0652475357055664
    3. '[i' → logprob: -4.815247535705566
    4. 'num' → logprob: -6.315247535705566
    5. '[' → logprob: -6.815247535705566
    6. '(num' → logprob: -8.190247535705566
    7. ')' → logprob: -9.440247535705566
    8. '   ' → logprob: -10.690247535705566
    9. '[
' → logprob: -10.815247535705566
    10. ' [' → logprob: -11.065247535705566

Token 181: ']))' (ID: 20259)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.005463555920869112
    2. ']))' → logprob: -5.630463600158691
    3. ''))' → logprob: -6.880463600158691
    4. ')))' → logprob: -8.505463600158691
    5. '[j' → logprob: -8.630463600158691
    6. '']))' → logprob: -8.880463600158691
    7. '       ' → logprob: -9.380463600158691
    8. '])' → logprob: -9.505463600158691
    9. ')' → logprob: -9.755463600158691
    10. '   ' → logprob: -10.130463600158691

Token 182: ' %' (ID: 1851)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5015996694564819
    2. '<|end|>' → logprob: -1.001599669456482
    3. '<|end|>' → logprob: -4.5015997886657715
    4. ' ' → logprob: -5.2515997886657715
    5. '%' → logprob: -5.8765997886657715
    6. ' )' → logprob: -5.8765997886657715
    7. '       ' → logprob: -6.2515997886657715
    8. '...' → logprob: -7.2515997886657715
    9. '           ' → logprob: -8.001599311828613
    10. ' %' → logprob: -8.001599311828613

Token 183: ' ' (ID: 220)
  Prédit: '11'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '11' → logprob: -0.011048882268369198
    2. ' ' → logprob: -4.511048793792725
    3. '   ' → logprob: -15.011049270629883
    4. '  ' → logprob: -15.636049270629883
    5. ')' → logprob: -16.011049270629883
    6. ' eleven' → logprob: -16.136049270629883
    7. ' ' → logprob: -17.011049270629883
    8. '           ' → logprob: -17.011049270629883
    9. '```' → logprob: -17.136049270629883
    10. '    ' → logprob: -17.386049270629883

Token 184: '11' (ID: 994)
  Prédit: '11'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '11' → logprob: -6.2729995988775045e-06
    2. ' ' → logprob: -12.000006675720215
    3. '1' → logprob: -18.5000057220459
    4. '(' → logprob: -18.7500057220459
    5. '111' → logprob: -19.1250057220459
    6. '   ' → logprob: -19.2500057220459
    7. '```' → logprob: -19.6250057220459
    8. '十一' → logprob: -20.3750057220459
    9. '`' → logprob: -20.6250057220459
    10. '
' → logprob: -20.7500057220459

Token 185: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 186: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 187: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6489638090133667
    2. '           ' → logprob: -1.7739638090133667
    3. ' for' → logprob: -1.8989638090133667
    4. 'if' (adapté à ' if') → logprob: -2.2739639282226562
    5. 'for' → logprob: -3.6489639282226562
    6. 'count' → logprob: -4.523963928222656
    7. '       ' → logprob: -4.773963928222656
    8. ' count' → logprob: -5.148963928222656
    9. ' ' → logprob: -6.398963928222656
    10. '```' → logprob: -7.773963928222656

Token 188: ' mod' (ID: 1812)
  Prédit: ' mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mod' → logprob: -0.00827010627835989
    2. 'mod' → logprob: -5.008270263671875
    3. ' (' → logprob: -6.883270263671875
    4. '(mod' → logprob: -7.758270263671875
    5. ' num' → logprob: -10.133270263671875
    6. '(' → logprob: -10.258270263671875
    7. ' ' → logprob: -11.758270263671875
    8. 'num' → logprob: -11.883270263671875
    9. ' j' → logprob: -13.258270263671875
    10. ' prefix' → logprob: -13.383270263671875

Token 189: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.05493983253836632
    2. '==' → logprob: -2.9299397468566895
    3. ' ' → logprob: -11.054940223693848
    4. ' in' → logprob: -11.179940223693848
    5. ']==' → logprob: -11.679940223693848
    6. ')==' → logprob: -12.429940223693848
    7. ' not' → logprob: -12.929940223693848
    8. ' ==
' → logprob: -12.929940223693848
    9. ')' → logprob: -13.304940223693848
    10. '==
' → logprob: -13.429940223693848

Token 190: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0788988247513771
    2. ' ' → logprob: -2.5788989067077637
    3. '1' → logprob: -12.828898429870605
    4. '5' → logprob: -12.828898429870605
    5. '  ' → logprob: -13.891398429870605
    6. '   ' → logprob: -14.203898429870605
    7. ' ' → logprob: -15.016398429870605
    8. '    ' → logprob: -15.078898429870605
    9. '         ' → logprob: -15.703898429870605
    10. '     ' → logprob: -16.141399383544922

Token 191: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00017982252757064998
    2. ' ' → logprob: -8.6251802444458
    3. '1' → logprob: -16.437679290771484
    4. '   ' → logprob: -16.875179290771484
    5. '5' → logprob: -17.000179290771484
    6. '```' → logprob: -17.312679290771484
    7. '  ' → logprob: -17.625179290771484
    8. '۰' → logprob: -18.187679290771484
    9. ' ' → logprob: -18.375179290771484
    10. '０' → logprob: -18.812679290771484

Token 192: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04737864062190056
    2. '           ' → logprob: -3.7973785400390625
    3. ' and' → logprob: -4.5473785400390625
    4. ':
' → logprob: -4.9223785400390625
    5. '               ' → logprob: -5.1723785400390625
    6. ',' → logprob: -9.422378540039062
    7. 'and' → logprob: -9.922378540039062
    8. '<|end|>' → logprob: -10.172378540039062
    9. '              ' → logprob: -10.547378540039062
    10. '       ' → logprob: -10.672378540039062

Token 193: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00022201328829396516
    2. '           ' → logprob: -8.750222206115723
    3. '<|end|>' → logprob: -11.125222206115723
    4. ':' → logprob: -11.500222206115723
    5. '              ' → logprob: -11.750222206115723
    6. ':
' → logprob: -12.125222206115723
    7. ' and' → logprob: -12.125222206115723
    8. '```' → logprob: -12.250222206115723
    9. '                
' → logprob: -12.500222206115723
    10. ',' → logprob: -12.625222206115723

Token 194: ' count' (ID: 3605)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.22382941842079163
    2. ' count' → logprob: -1.7238293886184692
    3. 'count' (adapté à ' count') → logprob: -4.09882926940918
    4. '           ' → logprob: -6.22382926940918
    5. '                   ' → logprob: -6.47382926940918
    6. '                ' → logprob: -7.34882926940918
    7. '   ' → logprob: -7.59882926940918
    8. ' ' → logprob: -8.47382926940918
    9. '       ' → logprob: -8.59882926940918
    10. '                
' → logprob: -9.47382926940918

Token 195: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.06998901069164276
    2. '+=' → logprob: -2.694988965988159
    3. '+' → logprob: -10.944989204406738
    4. ']+=' → logprob: -11.319989204406738
    5. '=' → logprob: -11.944989204406738
    6. '   ' → logprob: -12.444989204406738
    7. ' =' → logprob: -13.194989204406738
    8. ' ' → logprob: -13.194989204406738
    9. '    ' → logprob: -13.444989204406738
    10. '<|end|>' → logprob: -13.819989204406738

Token 196: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.7169608473777771
    2. 'prefix' → logprob: -0.8419608473777771
    3. ' prefix' → logprob: -2.716960906982422
    4. ' ' → logprob: -4.216960906982422
    5. '           ' → logprob: -10.216960906982422
    6. '   ' → logprob: -10.716960906982422
    7. '(prefix' → logprob: -11.716960906982422
    8. '       ' → logprob: -12.091960906982422
    9. '_prefix' → logprob: -13.091960906982422
    10. '  ' → logprob: -13.716960906982422

Token 197: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.25240859389305115
    2. 'prefix' → logprob: -1.5024086236953735
    3. ' prefix' → logprob: -8.127408981323242
    4. ' ' → logprob: -8.752408981323242
    5. '(prefix' → logprob: -11.252408981323242
    6. '   ' → logprob: -12.002408981323242
    7. 'len' → logprob: -13.377408981323242
    8. 'j' → logprob: -13.752408981323242
    9. '(' → logprob: -13.752408981323242
    10. '       ' → logprob: -14.627408981323242

Token 198: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 199: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 200: ' break' (ID: 2338)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 201: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 202: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 203: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 204: ' Above' (ID: 70304)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 205: ' code' (ID: 3490)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 206: ' is' (ID: 382)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 207: ' incorrect' (ID: 25570)
  Prédit: ' incomplete'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' incomplete' → logprob: -0.28931987285614014
    2. 'in' → logprob: -1.5393198728561401
    3. 'unfinished' → logprob: -3.9143199920654297
    4. ' unfinished' → logprob: -4.66431999206543
    5. 'incorrect' → logprob: -5.16431999206543
    6. ' incorrect' → logprob: -6.78931999206543
    7. 'ind' → logprob: -9.28931999206543
    8. ' buggy' → logprob: -9.41431999206543
    9. 'Incomplete' → logprob: -9.41431999206543
    10. 'invalid' → logprob: -10.16431999206543

Token 208: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 209: ' implement' (ID: 6365)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5811437368392944
    2. '    ' → logprob: -2.456143856048584
    3. '       ' → logprob: -2.581143856048584
    4. '```' → logprob: -2.581143856048584
    5. ')' → logprob: -2.956143856048584
    6. ' continue' → logprob: -3.456143856048584
    7. ' return' → logprob: -3.956143856048584
    8. ' ' → logprob: -4.206143856048584
    9. ' correct' → logprob: -4.331143856048584
    10. '        ' → logprob: -4.831143856048584

Token 210: ' correct' (ID: 6145)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3685184717178345
    2. 'def' → logprob: -1.4935184717178345
    3. '```' → logprob: -2.743518352508545
    4. ' for' → logprob: -4.493518352508545
    5. ' def' → logprob: -5.868518352508545
    6. '       ' → logprob: -6.118518352508545
    7. 'for' → logprob: -6.743518352508545
    8. 'count' → logprob: -7.743518352508545
    9. '    ' → logprob: -7.868518352508545
    10. '
' → logprob: -7.868518352508545

Token 211: ' method' (ID: 2595)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7168706059455872
    2. 'def' → logprob: -1.3418705463409424
    3. 'for' → logprob: -2.2168705463409424
    4. ' for' → logprob: -2.5918705463409424
    5. 'count' → logprob: -3.5918705463409424
    6. '```' → logprob: -4.2168707847595215
    7. 'mod' → logprob: -4.3418707847595215
    8. 'prefix' → logprob: -5.4668707847595215
    9. '       ' → logprob: -6.2168707847595215
    10. '
' → logprob: -6.8418707847595215

Token 212: ':
' (ID: 734)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03099171072244644
    2. '       ' → logprob: -4.405991554260254
    3. ' for' → logprob: -5.030991554260254
    4. 'def' → logprob: -5.405991554260254
    5. '
' → logprob: -6.030991554260254
    6. '```' → logprob: -6.155991554260254
    7. 'for' → logprob: -6.280991554260254
    8. ':' → logprob: -8.655991554260254
    9. '    ' → logprob: -9.405991554260254
    10. ')' → logprob: -9.530991554260254

Token 213: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006794709246605635
    2. 'mod' → logprob: -5.7567949295043945
    3. ' mod' → logprob: -6.8817949295043945
    4. '```' → logprob: -6.8817949295043945
    5. 'for' → logprob: -7.7567949295043945
    6. ' for' → logprob: -7.7567949295043945
    7. 'def' → logprob: -8.506794929504395
    8. '
' → logprob: -8.756794929504395
    9. 'prefix' → logprob: -8.881794929504395
    10. '       ' → logprob: -9.631794929504395

Token 214: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05667094886302948
    2. ' for' → logprob: -3.306670904159546
    3. 'for' → logprob: -5.056671142578125
    4. ' mod' → logprob: -5.681671142578125
    5. 'mod' → logprob: -5.806671142578125
    6. '       ' → logprob: -6.681671142578125
    7. ' prefix' → logprob: -6.931671142578125
    8. '
' → logprob: -7.056671142578125
    9. 'prefix' → logprob: -7.431671142578125
    10. 'def' → logprob: -7.806671142578125

Token 215: ' We'll' (ID: 46830)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.35093408823013306
    2. ' mod' → logprob: -2.1009340286254883
    3. 'mod' → logprob: -2.7259340286254883
    4. ' for' → logprob: -3.3509340286254883
    5. ' prefix' → logprob: -4.350934028625488
    6. 'from' → logprob: -4.725934028625488
    7. 'for' → logprob: -4.725934028625488
    8. 'prefix' → logprob: -4.850934028625488
    9. '       ' → logprob: -4.975934028625488
    10. ' remainder' → logprob: -4.975934028625488

Token 216: ' use' (ID: 1199)
  Prédit: ' use'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' use' → logprob: -0.6548033952713013
    2. ' implement' → logprob: -1.4048033952713013
    3. 'use' → logprob: -2.6548032760620117
    4. 'implement' → logprob: -2.7798032760620117
    5. 'remove' → logprob: -4.154803276062012
    6. 'fix' → logprob: -4.779803276062012
    7. 'continue' → logprob: -4.904803276062012
    8. 'replace' → logprob: -4.904803276062012
    9. 'rewrite' → logprob: -4.904803276062012
    10. ' process' → logprob: -4.904803276062012

Token 217: ' prefix' (ID: 18633)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.31228208541870117
    2. ' dynamic' → logprob: -2.187282085418701
    3. 'a' → logprob: -3.562282085418701
    4. ' dp' → logprob: -3.562282085418701
    5. 'prefix' → logprob: -3.562282085418701
    6. ' a' → logprob: -3.687282085418701
    7. 'dynamic' → logprob: -3.687282085418701
    8. ' prefix' → logprob: -4.187282085418701
    9. 'the' → logprob: -6.437282085418701
    10. ' the' → logprob: -6.687282085418701

Token 218: ' sums' (ID: 73121)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3260905146598816
    2. '_mod' → logprob: -1.3260905742645264
    3. '_s' → logprob: -5.201090335845947
    4. '_sum' → logprob: -5.326090335845947
    5. 'mod' → logprob: -7.201090335845947
    6. ' _' → logprob: -7.826090335845947
    7. 'sum' → logprob: -7.826090335845947
    8. 's' → logprob: -8.701090812683105
    9. '_hash' → logprob: -8.951090812683105
    10. ')' → logprob: -9.326090812683105

Token 219: ' mod' (ID: 1812)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22261585295200348
    2. ':' → logprob: -2.722615957260132
    3. '<|end|>' → logprob: -2.972615957260132
    4. '
' → logprob: -3.722615957260132
    5. 'def' → logprob: -4.597615718841553
    6. ' ' → logprob: -4.847615718841553
    7. ' and' → logprob: -5.222615718841553
    8. ',' → logprob: -5.347615718841553
    9. '<|end|>' → logprob: -5.597615718841553
    10. ' for' → logprob: -5.597615718841553

Token 220: ' ' (ID: 220)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3882618546485901
    2. ' _' → logprob: -1.7632617950439453
    3. ' ' → logprob: -2.5132617950439453
    4. '   ' → logprob: -4.138261795043945
    5. ' =' → logprob: -4.388261795043945
    6. '=' → logprob: -4.888261795043945
    7. '    ' → logprob: -5.013261795043945
    8. '  ' → logprob: -5.388261795043945
    9. ')' → logprob: -5.763261795043945
    10. ':' → logprob: -6.138261795043945

Token 221: '11' (ID: 994)
  Prédit: '11'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '11' → logprob: -0.0408356674015522
    2. ' ' → logprob: -3.6658356189727783
    3. 'ulo' → logprob: -5.415835857391357
    4. ' =' → logprob: -5.790835857391357
    5. '=' → logprob: -6.290835857391357
    6. 's' → logprob: -6.290835857391357
    7. '_' → logprob: -7.290835857391357
    8. '10' → logprob: -8.2908353805542
    9. 'ulus' → logprob: -8.4158353805542
    10. 'def' → logprob: -8.5408353805542

Token 222: ' from' (ID: 591)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7841349840164185
    2. '
' → logprob: -1.6591349840164185
    3. '<|end|>' → logprob: -2.159134864807129
    4. ':' → logprob: -2.284134864807129
    5. ' ' → logprob: -3.409134864807129
    6. ',' → logprob: -4.159134864807129
    7. ' 
' → logprob: -4.284134864807129
    8. 'def' → logprob: -4.284134864807129
    9. ':
' → logprob: -4.659134864807129
    10. ')' → logprob: -4.659134864807129

Token 223: ' left' (ID: 3561)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.5912569165229797
    2. ' the' → logprob: -1.466256856918335
    3. 'left' → logprob: -1.841256856918335
    4. ' left' → logprob: -3.716256856918335
    5. '0' → logprob: -4.216257095336914
    6. ' ' → logprob: -5.091257095336914
    7. 'start' → logprob: -5.341257095336914
    8. 'i' → logprob: -5.966257095336914
    9. 'def' → logprob: -7.091257095336914
    10. ' start' → logprob: -7.716257095336914

Token 224: ' to' (ID: 316)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6358169317245483
    2. ')' → logprob: -1.8858169317245483
    3. '_' → logprob: -2.260817050933838
    4. '<|end|>' → logprob: -2.510817050933838
    5. '   ' → logprob: -3.885817050933838
    6. ',' → logprob: -4.010817050933838
    7. '#' → logprob: -4.385817050933838
    8. 'def' → logprob: -4.510817050933838
    9. '):' → logprob: -5.010817050933838
    10. 'over' → logprob: -5.010817050933838

Token 225: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.0005537479883059859
    2. ' right' → logprob: -7.500553607940674
    3. '```' → logprob: -14.875554084777832
    4. '
' → logprob: -15.625554084777832
    5. '	right' → logprob: -16.250553131103516
    6. '_right' → logprob: -17.250553131103516
    7. ' ' → logprob: -17.375553131103516
    8. '   ' → logprob: -17.750553131103516
    9. 'Right' → logprob: -18.375553131103516
    10. '[right' → logprob: -18.375553131103516

Token 226: '.
' (ID: 558)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.12656180560588837
    2. '<|end|>' → logprob: -3.5015618801116943
    3. '   ' → logprob: -3.6265618801116943
    4. 'def' → logprob: -4.001561641693115
    5. ' 
' → logprob: -4.626561641693115
    6. '\n' → logprob: -4.626561641693115
    7. '```' → logprob: -5.126561641693115
    8. '  
' → logprob: -5.876561641693115
    9. ':' → logprob: -5.876561641693115
    10. ':
' → logprob: -6.251561641693115

Token 227: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03207630664110184
    2. 'def' → logprob: -4.282076358795166
    3. '
' → logprob: -5.032076358795166
    4. ' for' → logprob: -6.032076358795166
    5. '    
' → logprob: -6.282076358795166
    6. '\n' → logprob: -6.657076358795166
    7. 'prefix' → logprob: -6.657076358795166
    8. ' 
' → logprob: -6.907076358795166
    9. 'for' → logprob: -7.157076358795166
    10. ' prefix' → logprob: -8.032075881958008

Token 228: ' count' (ID: 3605)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0275358185172081
    2. 'prefix' → logprob: -4.527535915374756
    3. 'mod' → logprob: -5.152535915374756
    4. ' for' → logprob: -6.027535915374756
    5. 'def' → logprob: -6.027535915374756
    6. 'for' → logprob: -6.152535915374756
    7. ' mod' → logprob: -6.902535915374756
    8. ' prefix' → logprob: -7.152535915374756
    9. '
' → logprob: -7.777535915374756
    10. 'n' → logprob: -8.652535438537598

Token 229: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.122530460357666
    2. ' +=' → logprob: -1.122530460357666
    3. ' =' → logprob: -1.622530460357666
    4. 'import' → logprob: -2.872530460357666
    5. '+=' → logprob: -3.872530460357666
    6. '   ' → logprob: -3.997530460357666
    7. 'def' → logprob: -3.997530460357666
    8. '+' → logprob: -4.372530460357666
    9. ' ' → logprob: -4.872530460357666
    10. '<|end|>' → logprob: -5.122530460357666

Token 230: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5231299996376038
    2. ' ' → logprob: -0.8981299996376038
    3. '   ' → logprob: -12.898130416870117
    4. 'prefix' → logprob: -13.273130416870117
    5. ' prefix' → logprob: -14.023130416870117
    6. '  ' → logprob: -15.148130416870117
    7. ' ' → logprob: -15.148130416870117
    8. '{' → logprob: -16.023130416870117
    9. 'sum' → logprob: -16.148130416870117
    10. ' sum' → logprob: -16.273130416870117

Token 231: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0004892880679108202
    2. ' ' → logprob: -7.625489234924316
    3. '   ' → logprob: -15.000489234924316
    4. '{' → logprob: -15.125489234924316
    5. '{}' → logprob: -16.000490188598633
    6. 'prefix' → logprob: -16.500490188598633
    7. '```' → logprob: -17.000490188598633
    8. 'sum' → logprob: -17.000490188598633
    9. '(' → logprob: -17.062990188598633
    10. '000' → logprob: -17.187990188598633

Token 232: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.264024257659912
    2. ' prefix' → logprob: -1.389024257659912
    3. '
' → logprob: -1.639024257659912
    4. 'prefix' → logprob: -2.014024257659912
    5. '<|end|>' → logprob: -2.639024257659912
    6. ' mod' → logprob: -3.139024257659912
    7. '#' → logprob: -5.639024257659912
    8. 'mod' → logprob: -5.639024257659912
    9. ' ' → logprob: -5.889024257659912
    10. '_prefix' → logprob: -6.014024257659912

Token 233: '   ' (ID: 271)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.34854766726493835
    2. '   ' → logprob: -2.3485476970672607
    3. 'mod' → logprob: -2.3485476970672607
    4. ' prefix' → logprob: -2.7235476970672607
    5. ' mod' → logprob: -3.4735476970672607
    6. ' remainder' → logprob: -5.973547458648682
    7. 'return' → logprob: -6.598547458648682
    8. ' return' → logprob: -7.973547458648682
    9. 'prev' → logprob: -8.09854793548584
    10. 'current' → logprob: -8.22354793548584

Token 234: ' prefix' (ID: 18633)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prefix' (adapté à ' prefix') → logprob: -0.06004149466753006
    2. 'mod' → logprob: -2.9350414276123047
    3. ' prefix' → logprob: -5.685041427612305
    4. 'freq' → logprob: -7.185041427612305
    5. 'current' → logprob: -7.935041427612305
    6. ' mod' → logprob: -8.560041427612305
    7. 'curr' → logprob: -8.935041427612305
    8. 'mods' → logprob: -9.435041427612305
    9. '   ' → logprob: -9.935041427612305
    10. 'dp' → logprob: -10.560041427612305

Token 235: '_counts' (ID: 61971)
  Prédit: '_mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mod' → logprob: -0.0035740535240620375
    2. '_sum' → logprob: -6.503573894500732
    3. '_s' → logprob: -7.003573894500732
    4. '_' → logprob: -7.253573894500732
    5. ' =' → logprob: -9.00357437133789
    6. 'mod' → logprob: -9.25357437133789
    7. '_counts' → logprob: -9.37857437133789
    8. '=' → logprob: -9.62857437133789
    9. 's' → logprob: -10.25357437133789
    10. 'sum' → logprob: -11.62857437133789

Token 236: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.00976564921438694
    2. '=' → logprob: -4.634765625
    3. ' ={' → logprob: -12.134765625
    4. ' ' → logprob: -13.509765625
    5. '={}' → logprob: -14.009765625
    6. '={' → logprob: -14.259765625
    7. '={'' → logprob: -14.384765625
    8. 'import' → logprob: -16.134765625
    9. '{' → logprob: -16.134765625
    10. '[' → logprob: -16.259765625

Token 237: ' [' (ID: 723)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.00043138445471413434
    2. ' {' → logprob: -7.750431537628174
    3. '[' → logprob: -14.375431060791016
    4. 'default' → logprob: -16.875431060791016
    5. 'collections' → logprob: -17.500431060791016
    6. '{}' → logprob: -18.625431060791016
    7. ' [' → logprob: -19.625431060791016
    8. '[{' → logprob: -20.125431060791016
    9. '{id' → logprob: -20.375431060791016
    10. '{text' → logprob: -20.375431060791016

Token 238: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.20233306288719177
    2. '{' → logprob: -1.7023330926895142
    3. '1' → logprob: -7.327332973480225
    4. '{}' → logprob: -9.077333450317383
    5. 'default' → logprob: -9.452333450317383
    6. '[' → logprob: -9.702333450317383
    7. '{}
' → logprob: -12.702333450317383
    8. ' {' → logprob: -12.952333450317383
    9. ']' → logprob: -13.952333450317383
    10. '{
' → logprob: -14.202333450317383

Token 239: ']*' (ID: 18579)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.004629484377801418
    2. ']*' → logprob: -5.504629611968994
    3. ']*(' → logprob: -7.879629611968994
    4. ',' → logprob: -9.754629135131836
    5. '0' → logprob: -10.254629135131836
    6. '{' → logprob: -11.004629135131836
    7. ' ]' → logprob: -11.129629135131836
    8. ' for' → logprob: -11.254629135131836
    9. 'for' → logprob: -11.379629135131836
    10. '[' → logprob: -12.254629135131836

Token 240: '11' (ID: 994)
  Prédit: '11'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '11' → logprob: -0.0002251125843031332
    2. '(' → logprob: -8.500225067138672
    3. '12' → logprob: -10.750225067138672
    4. ' ' → logprob: -16.500225067138672
    5. '111' → logprob: -17.250225067138672
    6. '(n' → logprob: -17.625225067138672
    7. ' (' → logprob: -18.375225067138672
    8. '(M' → logprob: -19.000225067138672
    9. '{' → logprob: -19.250225067138672
    10. '110' → logprob: -19.375225067138672

Token 241: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.002449138555675745
    2. '   ' → logprob: -6.877449035644531
    3. ' 
' → logprob: -7.877449035644531
    4. '<|end|>' → logprob: -7.877449035644531
    5. '  
' → logprob: -8.252449035644531
    6. '    
' → logprob: -8.877449035644531
    7. 'prefix' → logprob: -9.752449035644531
    8. '```' → logprob: -9.877449035644531
    9. ',' → logprob: -10.252449035644531
    10. '   
' → logprob: -10.627449035644531

Token 242: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6212325692176819
    2. 'prefix' → logprob: -1.246232509613037
    3. ' prefix' → logprob: -1.746232509613037
    4. 'count' → logprob: -8.246232986450195
    5. '
' → logprob: -8.871232986450195
    6. '```' → logprob: -9.496232986450195
    7. '(prefix' → logprob: -9.871232986450195
    8. ' count' → logprob: -10.121232986450195
    9. ' ' → logprob: -10.371232986450195
    10. 'current' → logprob: -10.996232986450195

Token 243: ' prefix' (ID: 18633)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prefix' (adapté à ' prefix') → logprob: -0.011776764877140522
    2. ' prefix' → logprob: -4.511776924133301
    3. '   ' → logprob: -8.5117769241333
    4. 'current' → logprob: -8.7617769241333
    5. 'mod' → logprob: -8.7617769241333
    6. '0' → logprob: -9.1367769241333
    7. 'count' → logprob: -10.0117769241333
    8. ' ' → logprob: -11.3867769241333
    9. '(prefix' → logprob: -11.6367769241333
    10. ' current' → logprob: -11.8867769241333

Token 244: '_mod' (ID: 15325)
  Prédit: '_counts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_counts' → logprob: -0.005394780542701483
    2. '_mod' → logprob: -5.25539493560791
    3. '_' → logprob: -10.00539493560791
    4. 'mod' → logprob: -10.38039493560791
    5. 'counts' → logprob: -10.50539493560791
    6. '[' → logprob: -11.00539493560791
    7. ' =' → logprob: -12.25539493560791
    8. '=' → logprob: -12.38039493560791
    9. '```' → logprob: -12.38039493560791
    10. ' _' → logprob: -12.50539493560791

Token 245: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.007232470437884331
    2. ' =' → logprob: -5.257232666015625
    3. '[p' → logprob: -7.257232666015625
    4. ' [' → logprob: -7.632232666015625
    5. '=' → logprob: -7.757232666015625
    6. ']' → logprob: -8.632232666015625
    7. '[-' → logprob: -10.132232666015625
    8. '   ' → logprob: -10.507232666015625
    9. '[count' → logprob: -10.507232666015625
    10. ' ' → logprob: -10.882232666015625

Token 246: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0007723436574451625
    2. ' ' → logprob: -7.500772476196289
    3. '{' → logprob: -8.500772476196289
    4. '1' → logprob: -11.375772476196289
    5. '[' → logprob: -12.375772476196289
    6. ' {' → logprob: -15.125772476196289
    7. ' [' → logprob: -17.12577247619629
    8. '(' → logprob: -18.50077247619629
    9. '   ' → logprob: -18.50077247619629
    10. '{
' → logprob: -18.75077247619629

Token 247: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0006671638693660498
    2. '{' → logprob: -7.375667095184326
    3. ' ' → logprob: -10.750667572021484
    4. '1' → logprob: -11.000667572021484
    5. '[' → logprob: -13.000667572021484
    6. ' {' → logprob: -15.500667572021484
    7. '(' → logprob: -17.875667572021484
    8. '{}' → logprob: -18.250667572021484
    9. '{
' → logprob: -18.625667572021484
    10. ' [' → logprob: -19.000667572021484

Token 248: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7158796787261963
    2. '   ' → logprob: -0.7158796787261963
    3. ' prefix' → logprob: -5.215879440307617
    4. '<|end|>' → logprob: -5.215879440307617
    5. 'prefix' → logprob: -5.715879440307617
    6. '    
' → logprob: -5.965879440307617
    7. '  
' → logprob: -5.965879440307617
    8. ' 
' → logprob: -6.340879440307617
    9. '(prefix' → logprob: -7.965879440307617
    10. '<|end|>' → logprob: -8.340879440307617

Token 249: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002220914699137211
    2. 'prefix' → logprob: -6.75222110748291
    3. ' prefix' → logprob: -7.37722110748291
    4. '
' → logprob: -8.87722110748291
    5. ' for' → logprob: -9.37722110748291
    6. '    
' → logprob: -10.00222110748291
    7. '<|end|>' → logprob: -10.50222110748291
    8. ' 
' → logprob: -10.75222110748291
    9. 'import' → logprob: -11.00222110748291
    10. '  ' → logprob: -11.25222110748291

Token 250: ' prefix' (ID: 18633)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prefix' (adapté à ' prefix') → logprob: -0.25469714403152466
    2. '   ' → logprob: -1.6296970844268799
    3. 'for' → logprob: -4.004697322845459
    4. ' prefix' → logprob: -5.129697322845459
    5. 'import' → logprob: -5.629697322845459
    6. ' for' → logprob: -7.004697322845459
    7. ' ' → logprob: -10.0046968460083
    8. '```' → logprob: -10.2546968460083
    9. '(prefix' → logprob: -10.3796968460083
    10. 'count' → logprob: -10.6296968460083

Token 251: '_counts' (ID: 61971)
  Prédit: '_counts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_counts' → logprob: -0.0007213685312308371
    2. '_mod' → logprob: -7.375721454620361
    3. '_' → logprob: -9.625720977783203
    4. '_tokens' → logprob: -12.375720977783203
    5. 'import' → logprob: -13.000720977783203
    6. 'counts' → logprob: -13.000720977783203
    7. '_codes' → logprob: -13.000720977783203
    8. '_indices' → logprob: -13.250720977783203
    9. '=' → logprob: -13.375720977783203
    10. 'mod' → logprob: -13.500720977783203

Token 252: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0006290406454354525
    2. '[p' → logprob: -7.37562894821167
    3. ' [' → logprob: -13.125629425048828
    4. 'prefix' → logprob: -15.250629425048828
    5. '=' → logprob: -16.375629425048828
    6. '```' → logprob: -16.625629425048828
    7. ' =' → logprob: -16.750629425048828
    8. '\[' → logprob: -17.125629425048828
    9. ']' → logprob: -17.875629425048828
    10. '[len' → logprob: -17.875629425048828

Token 253: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.016040585935115814
    2. 'prefix' → logprob: -4.141040802001953
    3. '(prefix' → logprob: -13.016040802001953
    4. '1' → logprob: -13.141040802001953
    5. ' prefix' → logprob: -13.641040802001953
    6. ' ' → logprob: -15.266040802001953
    7. 'refix' → logprob: -16.141040802001953
    8. 'pref' → logprob: -16.266040802001953
    9. ']' → logprob: -16.516040802001953
    10. '(' → logprob: -16.766040802001953

Token 254: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.000718030845746398
    2. ']+=' → logprob: -7.250718116760254
    3. ' ]' → logprob: -11.750718116760254
    4. '`]' → logprob: -16.500717163085938
    5. ']=' → logprob: -17.125717163085938
    6. '']' → logprob: -17.500717163085938
    7. '"]' → logprob: -17.875717163085938
    8. ')' → logprob: -19.125717163085938
    9. ']+' → logprob: -19.375717163085938
    10. '+=' → logprob: -19.500717163085938

Token 255: ' =' (ID: 314)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.8667217493057251
    2. '+=' → logprob: -0.8667217493057251
    3. '=' → logprob: -1.866721749305725
    4. ' =' → logprob: -5.3667216300964355
    5. ']+=' → logprob: -9.991722106933594
    6. ']' → logprob: -15.366722106933594
    7. '.=' → logprob: -15.991722106933594
    8. '=True' → logprob: -16.491722106933594
    9. '+' → logprob: -16.491722106933594
    10. '<|end|>' → logprob: -17.241722106933594

Token 256: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.0
    3. '```' → logprob: -20.5
    4. '۱' → logprob: -21.875
    5. '１' → logprob: -22.625
    6. '   ' → logprob: -22.75
    7. '0' → logprob: -23.125
    8. '১' → logprob: -23.5625
    9. '`' → logprob: -23.625
    10. '+' → logprob: -23.6875

Token 257: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.5
    3. '```' → logprob: -21.125
    4. '{' → logprob: -22.25
    5. '۱' → logprob: -22.25
    6. '１' → logprob: -22.5
    7. '=' → logprob: -22.625
    8. '`' → logprob: -22.875
    9. '   ' → logprob: -23.0
    10. '0' → logprob: -23.125

Token 258: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01321741659194231
    2. ' for' → logprob: -4.388217449188232
    3. 'for' → logprob: -7.388217449188232
    4. '<|end|>' → logprob: -10.138216972351074
    5. '	for' → logprob: -10.763216972351074
    6. '
' → logprob: -11.013216972351074
    7. '    
' → logprob: -12.263216972351074
    8. ',' → logprob: -12.888216972351074
    9. ')' → logprob: -13.763216972351074
    10. '<|end|>' → logprob: -13.888216972351074

Token 259: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03448113799095154
    2. ' for' → logprob: -3.9094810485839844
    3. 'for' → logprob: -4.284481048583984
    4. '```' → logprob: -9.909481048583984
    5. '
' → logprob: -12.659481048583984
    6. '	for' → logprob: -12.909481048583984
    7. 'import' → logprob: -13.034481048583984
    8. 'def' → logprob: -13.284481048583984
    9. '<|end|>' → logprob: -13.909481048583984
    10. '    
' → logprob: -14.534481048583984

Token 260: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.005646475125104189
    2. ' for' → logprob: -5.755646705627441
    3. '   ' → logprob: -6.005646705627441
    4. '```' → logprob: -15.380646705627441
    5. '	for' → logprob: -15.380646705627441
    6. '
' → logprob: -15.505646705627441
    7. 'i' → logprob: -16.880645751953125
    8. ' ' → logprob: -17.380645751953125
    9. '       ' → logprob: -17.755645751953125
    10. '  ' → logprob: -17.755645751953125

Token 261: ' i' (ID: 575)
  Prédit: ' digit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' digit' → logprob: -1.3579574823379517
    2. 'ch' → logprob: -1.6079574823379517
    3. ' ch' → logprob: -1.6079574823379517
    4. 'c' → logprob: -2.107957363128662
    5. 'digit' → logprob: -2.107957363128662
    6. ' c' → logprob: -2.607957363128662
    7. 'char' → logprob: -4.107957363128662
    8. ' char' → logprob: -5.857957363128662
    9. 'd' → logprob: -5.857957363128662
    10. 'i' → logprob: -6.107957363128662

Token 262: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.005416369065642357
    2. 'in' → logprob: -5.255416393280029
    3. ' ' → logprob: -8.755415916442871
    4. ',' → logprob: -10.880415916442871
    5. ' ,' → logprob: -13.005415916442871
    6. '  ' → logprob: -13.380415916442871
    7. 'import' → logprob: -13.880415916442871
    8. '   ' → logprob: -15.130415916442871
    9. 'In' → logprob: -15.505415916442871
    10. '```' → logprob: -15.505415916442871

Token 263: ' ch' (ID: 549)
  Prédit: 'digit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'digit' → logprob: -0.339356392621994
    2. ' digit' → logprob: -1.5893564224243164
    3. ' ch' → logprob: -3.0893564224243164
    4. 'ch' → logprob: -3.5893564224243164
    5. 'd' → logprob: -4.839356422424316
    6. 'c' → logprob: -6.339356422424316
    7. ' c' → logprob: -7.714356422424316
    8. ' d' → logprob: -7.964356422424316
    9. 'char' → logprob: -9.589356422424316
    10. ' char' → logprob: -10.714356422424316

Token 264: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0008079635445028543
    2. 'in' → logprob: -7.125807762145996
    3. ' ' → logprob: -13.500807762145996
    4. '   ' → logprob: -15.000807762145996
    5. ',' → logprob: -15.125807762145996
    6. '	in' → logprob: -15.125807762145996
    7. '<|end|>' → logprob: -15.625807762145996
    8. '_in' → logprob: -15.875807762145996
    9. '  ' → logprob: -15.875807762145996
    10. 's' → logprob: -16.000808715820312

Token 265: ' enumerate' (ID: 29671)
  Prédit: ' enumerate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' enumerate' → logprob: -0.023246292024850845
    2. 'enumer' → logprob: -3.7732462882995605
    3. 'num' → logprob: -14.148246765136719
    4. ' num' → logprob: -17.14824676513672
    5. ' ' → logprob: -17.52324676513672
    6. ' enumer' → logprob: -19.27324676513672
    7. 'enum' → logprob: -19.77324676513672
    8. '```' → logprob: -20.02324676513672
    9. '   ' → logprob: -21.39824676513672
    10. ' ' → logprob: -21.39824676513672

Token 266: '(num' (ID: 15828)
  Prédit: '(num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(num' → logprob: -0.004767595790326595
    2. 'num' → logprob: -5.754767417907715
    3. ' num' → logprob: -6.629767417907715
    4. '(' → logprob: -8.879767417907715
    5. ' (' → logprob: -9.004767417907715
    6. ',num' → logprob: -12.879767417907715
    7. ':num' → logprob: -14.379767417907715
    8. '<num' → logprob: -14.379767417907715
    9. ')' → logprob: -14.629767417907715
    10. '[num' → logprob: -14.629767417907715

Token 267: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.06256929785013199
    2. '):
' → logprob: -2.8125693798065186
    3. ':' → logprob: -7.4375691413879395
    4. '):
' → logprob: -11.937569618225098
    5. ':
' → logprob: -13.312569618225098
    6. ' ):' → logprob: -13.687569618225098
    7. '}:' → logprob: -13.687569618225098
    8. ']:' → logprob: -13.937569618225098
    9. '   ' → logprob: -13.937569618225098
    10. '):

' → logprob: -16.31256866455078

Token 268: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011847454123198986
    2. ':' → logprob: -4.511847496032715
    3. '   ' → logprob: -7.761847496032715
    4. ':
' → logprob: -9.136847496032715
    5. ',' → logprob: -9.386847496032715
    6. '        
' → logprob: -10.136847496032715
    7. '):' → logprob: -10.386847496032715
    8. '):
' → logprob: -10.511847496032715
    9. '<|end|>' → logprob: -10.636847496032715
    10. '    
' → logprob: -11.386847496032715

Token 269: ' if' (ID: 538)
  Prédit: ' prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' prefix' → logprob: -0.12763135135173798
    2. 'prefix' → logprob: -2.127631425857544
    3. '           ' → logprob: -7.877631187438965
    4. '   ' → logprob: -8.627631187438965
    5. '       ' → logprob: -9.002631187438965
    6. '```' → logprob: -11.627631187438965
    7. '(prefix' → logprob: -12.752631187438965
    8. ' val' → logprob: -13.002631187438965
    9. ' digit' → logprob: -13.252631187438965
    10. ' value' → logprob: -13.627631187438965

Token 270: ' ch' (ID: 549)
  Prédit: ' ch'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ch' → logprob: -0.25208020210266113
    2. 'ch' → logprob: -1.5020802021026611
    3. ' not' → logprob: -9.377079963684082
    4. ' ' → logprob: -10.877079963684082
    5. '	ch' → logprob: -11.752079963684082
    6. 'not' → logprob: -11.752079963684082
    7. 'num' → logprob: -12.314579963684082
    8. ' ' → logprob: -12.377079963684082
    9. '   ' → logprob: -12.564579963684082
    10. '(ch' → logprob: -12.627079963684082

Token 271: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.010720713064074516
    2. '==' → logprob: -4.635720729827881
    3. ' !=' → logprob: -7.885720729827881
    4. '.is' → logprob: -8.260720252990723
    5. '=='' → logprob: -8.635720252990723
    6. ' ' → logprob: -10.135720252990723
    7. '.' → logprob: -10.635720252990723
    8. 'isdigit' → logprob: -11.260720252990723
    9. ' =='' → logprob: -11.385720252990723
    10. ' not' → logprob: -11.510720252990723

Token 272: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.020628664642572403
    2. ' '' → logprob: -3.8956286907196045
    3. '0' → logprob: -10.270628929138184
    4. '"' → logprob: -10.270628929138184
    5. ' ' → logprob: -12.020628929138184
    6. ''\' → logprob: -12.520628929138184
    7. ''a' → logprob: -13.395628929138184
    8. ''o' → logprob: -14.145628929138184
    9. ''A' → logprob: -14.145628929138184
    10. ''O' → logprob: -14.520628929138184

Token 273: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.2729995988775045e-06
    2. ''' → logprob: -12.375006675720215
    3. ' ' → logprob: -14.000006675720215
    4. '')' → logprob: -14.375006675720215
    5. ' ')' → logprob: -14.875006675720215
    6. ' '' → logprob: -16.8750057220459
    7. ''):' → logprob: -16.8750057220459
    8. ''s' → logprob: -17.1250057220459
    9. '-' → logprob: -17.3750057220459
    10. '9' → logprob: -17.6250057220459

Token 274: '':
' (ID: 7669)
  Prédit: '':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.6616376638412476
    2. '':
' → logprob: -1.0366376638412476
    3. ''):
' → logprob: -3.161637783050537
    4. ':' → logprob: -3.286637783050537
    5. ':
' → logprob: -3.286637783050537
    6. '):
' → logprob: -4.911637783050537
    7. ''):' → logprob: -6.286637783050537
    8. '):' → logprob: -6.411637783050537
    9. ''' → logprob: -7.661637783050537
    10. '')' → logprob: -8.286637306213379

Token 275: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.16963987052440643
    2. '       ' → logprob: -2.044639825820923
    3. ':' → logprob: -4.294640064239502
    4. ':
' → logprob: -4.544640064239502
    5. '   ' → logprob: -6.294640064239502
    6. '#' → logprob: -8.669639587402344
    7. '```' → logprob: -9.919639587402344
    8. '):
' → logprob: -10.044639587402344
    9. ',' → logprob: -10.044639587402344
    10. '=' → logprob: -10.169639587402344

Token 276: ' prefix' (ID: 18633)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4291209578514099
    2. 'prefix' (adapté à ' prefix') → logprob: -1.0541210174560547
    3. '       ' → logprob: -9.054121017456055
    4. ' prefix' → logprob: -9.179121017456055
    5. '#' → logprob: -9.679121017456055
    6. '               ' → logprob: -9.804121017456055
    7. 'count' → logprob: -10.929121017456055
    8. '   ' → logprob: -11.179121017456055
    9. '(prefix' → logprob: -11.304121017456055
    10. '
' → logprob: -11.679121017456055

Token 277: '_mod' (ID: 15325)
  Prédit: '_mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mod' → logprob: -0.474717915058136
    2. '_counts' → logprob: -0.974717915058136
    3. 'mod' → logprob: -8.22471809387207
    4. '=' → logprob: -8.59971809387207
    5. ' =' → logprob: -9.97471809387207
    6. '_' → logprob: -9.97471809387207
    7. 'counts' → logprob: -9.97471809387207
    8. '_m' → logprob: -12.22471809387207
    9. '#' → logprob: -12.59971809387207
    10. '	mod' → logprob: -13.03721809387207

Token 278: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.061967797577381134
    2. ' =' → logprob: -2.8119678497314453
    3. '0' → logprob: -16.436967849731445
    4. ' ' → logprob: -19.561967849731445
    5. ',' → logprob: -20.061967849731445
    6. ')' → logprob: -20.186967849731445
    7. '==' → logprob: -21.186967849731445
    8. '=}' → logprob: -21.436967849731445
    9. ')=' → logprob: -21.561967849731445
    10. '＝' → logprob: -21.561967849731445

Token 279: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.5491004129871726e-05
    2. ' ' → logprob: -10.000045776367188
    3. '۰' → logprob: -17.375045776367188
    4. '(' → logprob: -18.375045776367188
    5. '1' → logprob: -18.812545776367188
    6. '=' → logprob: -19.062545776367188
    7. '```' → logprob: -19.750045776367188
    8. '   ' → logprob: -19.750045776367188
    9. '  ' → logprob: -19.812545776367188
    10. ' ' → logprob: -19.937545776367188

Token 280: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.000001907348633
    3. '۰' → logprob: -17.437501907348633
    4. '(' → logprob: -17.812501907348633
    5. '1' → logprob: -17.937501907348633
    6. '11' → logprob: -19.250001907348633
    7. '-' → logprob: -19.312501907348633
    8. 'num' → logprob: -19.500001907348633
    9. 'reset' → logprob: -19.687501907348633
    10. '=' → logprob: -19.750001907348633

Token 281: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2579064667224884
    2. '
' → logprob: -1.632906436920166
    3. '       ' → logprob: -3.507906436920166
    4. '<|end|>' → logprob: -6.882906436920166
    5. '        
' → logprob: -8.882906913757324
    6. '            
' → logprob: -8.882906913757324
    7. '   ' → logprob: -9.007906913757324
    8. '          ' → logprob: -9.632906913757324
    9. '  
' → logprob: -9.757906913757324
    10. ',' → logprob: -9.757906913757324

Token 282: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.037294112145900726
    2. '       ' → logprob: -3.5372941493988037
    3. '
' → logprob: -4.912293910980225
    4. '   ' → logprob: -9.287294387817383
    5. ',' → logprob: -11.662294387817383
    6. '```' → logprob: -11.787294387817383
    7. 'continue' → logprob: -11.787294387817383
    8. '        
' → logprob: -12.037294387817383
    9. '<|end|>' → logprob: -12.412294387817383
    10. '            
' → logprob: -12.662294387817383

Token 283: ' prefix' (ID: 18633)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prefix' (adapté à ' prefix') → logprob: -0.02386585623025894
    2. '           ' → logprob: -3.7738659381866455
    3. '       ' → logprob: -7.898865699768066
    4. 'for' → logprob: -9.273865699768066
    5. 'continue' → logprob: -9.273865699768066
    6. ' prefix' → logprob: -10.773865699768066
    7. '   ' → logprob: -11.523865699768066
    8. 'count' → logprob: -11.648865699768066
    9. '
' → logprob: -12.023865699768066
    10. '#' → logprob: -12.148865699768066

Token 284: '_counts' (ID: 61971)
  Prédit: '_counts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_counts' → logprob: -0.0005031120381318033
    2. '_mod' → logprob: -7.625503063201904
    3. 'counts' → logprob: -11.500503540039062
    4. '
' → logprob: -13.250503540039062
    5. '=' → logprob: -13.750503540039062
    6. 'mod' → logprob: -14.125503540039062
    7. ' =' → logprob: -14.625503540039062
    8. '_' → logprob: -15.250503540039062
    9. '[' → logprob: -16.000503540039062
    10. ' counts' → logprob: -16.875503540039062

Token 285: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01651616021990776
    2. ' =' → logprob: -4.141516208648682
    3. '[' → logprob: -7.891516208648682
    4. '=[' → logprob: -9.266515731811523
    5. '[:]' → logprob: -11.266515731811523
    6. ' =[' → logprob: -16.016515731811523
    7. '＝' → logprob: -16.516515731811523
    8. '   ' → logprob: -17.141515731811523
    9. '[:' → logprob: -17.266515731811523
    10. '={' → logprob: -17.266515731811523

Token 286: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.9385402993066236e-05
    2. ' [' → logprob: -10.875019073486328
    3. '{' → logprob: -15.250019073486328
    4. '   ' → logprob: -16.375019073486328
    5. '[count' → logprob: -17.500019073486328
    6. '[p' → logprob: -18.250019073486328
    7. '    ' → logprob: -18.500019073486328
    8. ' ' → logprob: -18.750019073486328
    9. '[len' → logprob: -19.375019073486328
    10. '([' → logprob: -19.500019073486328

Token 287: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. '1' → logprob: -15.875
    3. ']' → logprob: -19.125
    4. '۰' → logprob: -19.5
    5. '*' → logprob: -20.125
    6. '
' → logprob: -20.375
    7. '[' → logprob: -20.5
    8. 'int' → logprob: -20.5
    9. '```' → logprob: -20.5
    10. ' ' → logprob: -20.75

Token 288: ']*' (ID: 18579)
  Prédit: ']*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*' → logprob: -0.0015191456768661737
    2. ']' → logprob: -6.501519203186035
    3. ']+' → logprob: -11.251519203186035
    4. '*' → logprob: -13.001519203186035
    5. ']*(' → logprob: -13.626519203186035
    6. '0' → logprob: -15.001519203186035
    7. '```' → logprob: -16.87651824951172
    8. ' ]' → logprob: -17.00151824951172
    9. '   ' → logprob: -17.62651824951172
    10. ')*' → logprob: -18.62651824951172

Token 289: '11' (ID: 994)
  Prédit: '11'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '11' → logprob: 0.0
    2. ' ' → logprob: -17.25
    3. '12' → logprob: -18.125
    4. '1' → logprob: -18.625
    5. '011' → logprob: -19.375
    6. '111' → logprob: -19.5
    7. '```' → logprob: -19.5
    8. '(' → logprob: -19.75
    9. '११' → logprob: -20.75
    10. '   ' → logprob: -21.0

Token 290: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.008621785789728165
    2. '       ' → logprob: -5.258621692657471
    3. 'prefix' → logprob: -6.008621692657471
    4. '
' → logprob: -7.383621692657471
    5. '[' → logprob: -9.008622169494629
    6. '   ' → logprob: -10.133622169494629
    7. '```' → logprob: -10.383622169494629
    8. '0' → logprob: -10.633622169494629
    9. '               ' → logprob: -11.133622169494629
    10. '000' → logprob: -11.258622169494629

Token 291: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02069895714521408
    2. '       ' → logprob: -3.8956990242004395
    3. '```' → logprob: -9.520698547363281
    4. 'prefix' → logprob: -9.645698547363281
    5. '   ' → logprob: -11.520698547363281
    6. '
' → logprob: -13.145698547363281
    7. ' prefix' → logprob: -13.770698547363281
    8. 'continue' → logprob: -14.145698547363281
    9. '               ' → logprob: -14.145698547363281
    10. 'import' → logprob: -14.270698547363281

Token 292: ' prefix' (ID: 18633)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prefix' (adapté à ' prefix') → logprob: -0.0001314295077463612
    2. '           ' → logprob: -9.250131607055664
    3. 'continue' → logprob: -10.375131607055664
    4. ' prefix' → logprob: -13.000131607055664
    5. '       ' → logprob: -13.750131607055664
    6. '
' → logprob: -15.625131607055664
    7. '0' → logprob: -15.750131607055664
    8. '   ' → logprob: -16.500131607055664
    9. '(prefix' → logprob: -16.625131607055664
    10. '            
' → logprob: -16.875131607055664

Token 293: '_counts' (ID: 61971)
  Prédit: '_counts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_counts' → logprob: -0.00011915886716451496
    2. '_mod' → logprob: -9.62511920928955
    3. 'counts' → logprob: -10.12511920928955
    4. 'mod' → logprob: -11.37511920928955
    5. 'Counts' → logprob: -14.87511920928955
    6. '```' → logprob: -15.62511920928955
    7. '0' → logprob: -15.62511920928955
    8. '_' → logprob: -15.87511920928955
    9. '[' → logprob: -16.000118255615234
    10. ' counts' → logprob: -16.625118255615234

Token 294: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.339278580620885e-06
    2. '0' → logprob: -13.375001907348633
    3. '=' → logprob: -14.750001907348633
    4. ' =' → logprob: -15.625001907348633
    5. '<|end|>' → logprob: -16.875001907348633
    6. ' [' → logprob: -17.000001907348633
    7. '{' → logprob: -17.125001907348633
    8. '[
' → logprob: -17.125001907348633
    9. '(' → logprob: -17.625001907348633
    10. 'import' → logprob: -17.875001907348633

Token 295: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.5
    3. '11' → logprob: -17.25
    4. '1' → logprob: -17.875
    5. 'prefix' → logprob: -17.875
    6. '(' → logprob: -19.125
    7. '[' → logprob: -19.125
    8. '```' → logprob: -20.25
    9. '   ' → logprob: -20.5
    10. ']' → logprob: -21.25

Token 296: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.1293352246284485
    2. '=' → logprob: -2.1293351650238037
    3. ' =' → logprob: -6.629335403442383
    4. ']=' → logprob: -6.879335403442383
    5. ' ]' → logprob: -10.129335403442383
    6. ']+=' → logprob: -11.379335403442383
    7. '+=' → logprob: -14.004335403442383
    8. ')' → logprob: -14.504335403442383
    9. '   ' → logprob: -15.254335403442383
    10. '`]' → logprob: -15.254335403442383

Token 297: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.001502717612311244
    2. ' =' → logprob: -6.501502513885498
    3. '+=' → logprob: -14.876502990722656
    4. ' +=' → logprob: -18.876502990722656
    5. ']=' → logprob: -19.751502990722656
    6. ']' → logprob: -20.626502990722656
    7. '.=' → logprob: -20.876502990722656
    8. ')' → logprob: -21.126502990722656
    9. '   ' → logprob: -21.751502990722656
    10. '<|end|>' → logprob: -21.751502990722656

Token 298: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.875
    3. '   ' → logprob: -21.5
    4. '```' → logprob: -22.0
    5. '۱' → logprob: -22.75
    6. '0' → logprob: -23.0
    7. '１' → logprob: -23.875
    8. '১' → logprob: -24.0
    9. '' → logprob: -24.25
    10. '१' → logprob: -24.3125

Token 299: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.125
    3. '0' → logprob: -21.25
    4. '   ' → logprob: -22.0
    5. '```' → logprob: -22.625
    6. '۱' → logprob: -22.75
    7. '  ' → logprob: -23.375
    8. '１' → logprob: -23.4375
    9. '' → logprob: -23.4375
    10. '১' → logprob: -23.5625

Token 300: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3494844138622284
    2. '       ' → logprob: -1.2244844436645508
    3. 'continue' → logprob: -7.349484443664551
    4. ' continue' → logprob: -7.974484443664551
    5. '   ' → logprob: -10.72448444366455
    6. '	continue' → logprob: -12.22448444366455
    7. '		' → logprob: -12.59948444366455
    8. '
' → logprob: -12.72448444366455
    9. '	       ' → logprob: -12.84948444366455
    10. '               ' → logprob: -12.84948444366455

Token 301: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.25343844294548035
    2. '           ' → logprob: -1.5034384727478027
    3. 'continue' → logprob: -6.753438472747803
    4. ' continue' → logprob: -8.503437995910645
    5. '   ' → logprob: -9.003437995910645
    6. 'else' → logprob: -13.128437995910645
    7. '               ' → logprob: -13.253437995910645
    8. '	continue' → logprob: -13.378437995910645
    9. '```' → logprob: -13.378437995910645
    10. '_continue' → logprob: -13.378437995910645

Token 302: ' continue' (ID: 4901)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.504501461982727
    2. 'continue' (adapté à ' continue') → logprob: -1.254501461982727
    3. '       ' → logprob: -2.2545013427734375
    4. ' continue' → logprob: -5.1295013427734375
    5. '   ' → logprob: -9.129501342773438
    6. '
' → logprob: -12.004501342773438
    7. '_continue' → logprob: -12.254501342773438
    8. '	continue' → logprob: -12.379501342773438
    9. '               ' → logprob: -13.379501342773438
    10. 'continu' → logprob: -13.879501342773438

Token 303: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -9.984787902794778e-05
    2. '   ' → logprob: -9.875100135803223
    3. '```' → logprob: -10.375100135803223
    4. '           ' → logprob: -12.625100135803223
    5. '<|end|>' → logprob: -13.000100135803223
    6. '        
' → logprob: -13.375100135803223
    7. 'import' → logprob: -13.375100135803223
    8. '
' → logprob: -13.375100135803223
    9. 'prefix' → logprob: -13.750100135803223
    10. 'else' → logprob: -14.375100135803223

Token 304: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0009423116571269929
    2. '   ' → logprob: -7.125942230224609
    3. 'prefix' → logprob: -10.00094223022461
    4. '```' → logprob: -10.00094223022461
    5. 'mod' → logprob: -11.12594223022461
    6. '
' → logprob: -11.75094223022461
    7. 'token' → logprob: -11.75094223022461
    8. '           ' → logprob: -12.00094223022461
    9. '        
' → logprob: -12.25094223022461
    10. '    
' → logprob: -13.50094223022461

Token 305: ' prefix' (ID: 18633)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prefix' (adapté à ' prefix') → logprob: -0.6483498811721802
    2. '       ' → logprob: -0.7733498811721802
    3. ' prefix' → logprob: -4.523349761962891
    4. '   ' → logprob: -5.398349761962891
    5. 'mod' → logprob: -8.77334976196289
    6. '           ' → logprob: -9.89834976196289
    7. '        
' → logprob: -11.27334976196289
    8. '(prefix' → logprob: -11.52334976196289
    9. '    ' → logprob: -12.77334976196289
    10. '    
' → logprob: -13.27334976196289

Token 306: '_mod' (ID: 15325)
  Prédit: '_mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mod' → logprob: -7.3458322731312364e-06
    2. 'mod' → logprob: -11.875007629394531
    3. '_' → logprob: -15.625007629394531
    4. '_counts' → logprob: -17.75000762939453
    5. '	mod' → logprob: -18.12500762939453
    6. '
' → logprob: -18.12500762939453
    7. '=' → logprob: -18.25000762939453
    8. ' _' → logprob: -18.37500762939453
    9. '_token' → logprob: -18.50000762939453
    10. '_m' → logprob: -18.62500762939453

Token 307: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.048587486147880554
    2. ' =' → logprob: -3.0485875606536865
    3. '*=' → logprob: -18.048587799072266
    4. '＝' → logprob: -18.298587799072266
    5. '+=' → logprob: -18.423587799072266
    6. ')' → logprob: -19.798587799072266
    7. ' +=' → logprob: -20.048587799072266
    8. ' ' → logprob: -20.548587799072266
    9. '=}' → logprob: -20.548587799072266
    10. '%=' → logprob: -20.673587799072266

Token 308: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.011374473571777344
    2. '(prefix' → logprob: -4.511374473571777
    3. '(prev' → logprob: -9.386374473571777
    4. '   ' → logprob: -10.511374473571777
    5. '(pre' → logprob: -10.636374473571777
    6. '(pred' → logprob: -10.636374473571777
    7. ' ' → logprob: -10.761374473571777
    8. '(p' → logprob: -10.886374473571777
    9. '(int' → logprob: -11.011374473571777
    10. '(next' → logprob: -11.011374473571777

Token 309: 'prefix' (ID: 26155)
  Prédit: 'prefix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.18003860116004944
    2. '(prefix' → logprob: -1.805038571357727
    3. ' prefix' → logprob: -8.180038452148438
    4. ' (' → logprob: -12.180038452148438
    5. '10' → logprob: -12.180038452148438
    6. '(' → logprob: -14.555038452148438
    7. '_prefix' → logprob: -14.680038452148438
    8. '   ' → logprob: -14.805038452148438
    9. '
' → logprob: -15.055038452148438
    10. 'PREFIX' → logprob: -15.305038452148438

Token 310: '_mod' (ID: 15325)
  Prédit: '_mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mod' → logprob: -5.5577775128767826e-06
    2. '*' → logprob: -12.625005722045898
    3. 'mod' → logprob: -13.750005722045898
    4. ' *' → logprob: -14.000005722045898
    5. '_' → logprob: -15.875005722045898
    6. ' ' → logprob: -16.8750057220459
    7. '
' → logprob: -17.2500057220459
    8. '_MOD' → logprob: -17.6250057220459
    9. '   ' → logprob: -17.7500057220459
    10. '+' → logprob: -18.2500057220459

Token 311: '*' (ID: 9)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.038042064756155014
    2. '*' → logprob: -3.2880420684814453
    3. ' ' → logprob: -14.413042068481445
    4. ' ' → logprob: -17.288042068481445
    5. ' +' → logprob: -18.288042068481445
    6. '**' → logprob: -18.913042068481445
    7. '  ' → logprob: -19.663042068481445
    8. '   ' → logprob: -19.788042068481445
    9. '+' → logprob: -20.163042068481445
    10. ' **' → logprob: -20.288042068481445

Token 312: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -13.875000953674316
    3. '
' → logprob: -21.500001907348633
    4. '

' → logprob: -22.750001907348633
    5. '   ' → logprob: -23.125001907348633
    6. '```' → logprob: -23.500001907348633
    7. 'int' → logprob: -24.250001907348633
    8. '۱۰' → logprob: -24.375001907348633
    9. '１０' → logprob: -24.500001907348633
    10. '     ' → logprob: -24.875001907348633

Token 313: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.16022463142871857
    2. '+' → logprob: -1.9102246761322021
    3. '+j' → logprob: -15.910224914550781
    4. '+x' → logprob: -16.78522491455078
    5. '+i' → logprob: -17.03522491455078
    6. '＋' → logprob: -17.28522491455078
    7. '+c' → logprob: -17.28522491455078
    8. '        ' → logprob: -17.41022491455078
    9. '+k' → logprob: -17.41022491455078
    10. '+
' → logprob: -17.66022491455078

Token 314: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -5.836499985889532e-05
    2. ' int' → logprob: -9.7500581741333
    3. '(int' → logprob: -18.625059127807617
    4. '   ' → logprob: -19.500059127807617
    5. '1' → logprob: -20.875059127807617
    6. 'ints' → logprob: -21.125059127807617
    7. '[int' → logprob: -21.750059127807617
    8. '<int' → logprob: -21.750059127807617
    9. ' ' → logprob: -22.250059127807617
    10. '  ' → logprob: -22.500059127807617

Token 315: '(ch' (ID: 15574)
  Prédit: '(ch'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ch' → logprob: -2.6060808522743173e-05
    2. 'ch' → logprob: -10.625025749206543
    3. '[ch' → logprob: -13.625025749206543
    4. '(' → logprob: -15.250025749206543
    5. ' ch' → logprob: -16.25002670288086
    6. '	ch' → logprob: -16.37502670288086
    7. ')' → logprob: -17.25002670288086
    8. '/ch' → logprob: -17.50002670288086
    9. ',ch' → logprob: -18.62502670288086
    10. '(num' → logprob: -19.25002670288086

Token 316: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06197866424918175
    2. '))' → logprob: -2.811978578567505
    3. ' )' → logprob: -11.686978340148926
    4. ')%' → logprob: -13.561978340148926
    5. ')))' → logprob: -14.061978340148926
    6. ' ))' → logprob: -14.811978340148926
    7. '())' → logprob: -17.061979293823242
    8. '])' → logprob: -17.061979293823242
    9. ')
' → logprob: -17.811979293823242
    10. ')`' → logprob: -17.936979293823242

Token 317: ' %' (ID: 1851)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003066479926928878
    2. ' %' → logprob: -6.378066539764404
    3. '%' → logprob: -7.128066539764404
    4. ')%' → logprob: -7.753066539764404
    5. ' )' → logprob: -9.003066062927246
    6. '```' → logprob: -12.503066062927246
    7. '
' → logprob: -13.003066062927246
    8. ']' → logprob: -13.378066062927246
    9. ' ' → logprob: -15.128066062927246
    10. ' ' → logprob: -16.128067016601562

Token 318: ' ' (ID: 220)
  Prédit: '11'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '11' → logprob: -9.615255839889869e-05
    2. ' ' → logprob: -9.250096321105957
    3. '(' → logprob: -18.50009536743164
    4. '   ' → logprob: -19.37509536743164
    5. '```' → logprob: -20.37509536743164
    6. '  ' → logprob: -20.62509536743164
    7. '1' → logprob: -21.00009536743164
    8. ' eleven' → logprob: -21.12509536743164
    9. ')' → logprob: -21.12509536743164
    10. '`' → logprob: -21.50009536743164

Token 319: '11' (ID: 994)
  Prédit: '11'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '11' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.625000953674316
    3. '1' → logprob: -19.500001907348633
    4. '111' → logprob: -20.875001907348633
    5. '十一' → logprob: -21.125001907348633
    6. '   ' → logprob: -21.375001907348633
    7. '１１' → logprob: -21.500001907348633
    8. '```' → logprob: -22.125001907348633
    9. '११' → logprob: -22.125001907348633
    10. ' eleven' → logprob: -22.250001907348633

Token 320: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00040362097206525505
    2. '   ' → logprob: -8.25040340423584
    3. '
' → logprob: -9.37540340423584
    4. '<|end|>' → logprob: -10.50040340423584
    5. '```' → logprob: -11.37540340423584
    6. ',' → logprob: -11.75040340423584
    7. '        
' → logprob: -12.87540340423584
    8. '[' → logprob: -13.12540340423584
    9. ')' → logprob: -13.62540340423584
    10. '           ' → logprob: -13.87540340423584

Token 321: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004224185831844807
    2. '   ' → logprob: -5.5042243003845215
    3. '```' → logprob: -9.879223823547363
    4. ' for' → logprob: -10.254223823547363
    5. 'for' → logprob: -10.379223823547363
    6. '
' → logprob: -11.254223823547363
    7. 'count' → logprob: -12.379223823547363
    8. '           ' → logprob: -12.754223823547363
    9. '{
' → logprob: -13.379223823547363
    10. ' ' → logprob: -13.504223823547363

Token 322: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' (adapté à ' count') → logprob: -0.0014877199428156018
    2. 'for' → logprob: -6.751487731933594
    3. '       ' → logprob: -8.251487731933594
    4. '   ' → logprob: -10.751487731933594
    5. 'prefix' → logprob: -11.126487731933594
    6. ' count' → logprob: -11.251487731933594
    7. '
' → logprob: -12.501487731933594
    8. 'answer' → logprob: -13.876487731933594
    9. '        
' → logprob: -13.876487731933594
    10. ' for' → logprob: -14.626487731933594

Token 323: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.126930832862854
    2. '+=' → logprob: -2.1269307136535645
    3. ']+=' → logprob: -13.251931190490723
    4. '    ' → logprob: -15.001931190490723
    5. '=' → logprob: -15.126931190490723
    6. '   ' → logprob: -15.626931190490723
    7. '+' → logprob: -15.751931190490723
    8. ' =' → logprob: -17.126930236816406
    9. '  ' → logprob: -17.251930236816406
    10. '```' → logprob: -17.376930236816406

Token 324: ' prefix' (ID: 18633)
  Prédit: ' prefix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' prefix' → logprob: -0.2519296407699585
    2. 'prefix' → logprob: -1.5019296407699585
    3. '(prefix' → logprob: -15.00192928314209
    4. '       ' → logprob: -16.501930236816406
    5. '   ' → logprob: -17.001930236816406
    6. ' ' → logprob: -17.126930236816406
    7. '
' → logprob: -17.251930236816406
    8. '    ' → logprob: -18.251930236816406
    9. '_prefix' → logprob: -18.251930236816406
    10. '           ' → logprob: -18.751930236816406

Token 325: '_counts' (ID: 61971)
  Prédit: '_counts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_counts' → logprob: -1.9361264946837764e-07
    2. 'counts' → logprob: -16.625
    3. '_' → logprob: -17.875
    4. ' counts' → logprob: -18.125
    5. '_mod' → logprob: -19.0
    6. '_count' → logprob: -19.125
    7. ' _' → logprob: -19.125
    8. '_c' → logprob: -19.25
    9. '```' → logprob: -19.875
    10. 'Counts' → logprob: -20.25

Token 326: '[p' (ID: 23234)
  Prédit: '[p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[p' → logprob: -1.1472419600977446e-06
    2. '[' → logprob: -14.500000953674316
    3. 'prefix' → logprob: -14.750000953674316
    4. '[
' → logprob: -16.500001907348633
    5. ' [' → logprob: -16.625001907348633
    6. ' prefix' → logprob: -18.375001907348633
    7. '```' → logprob: -18.375001907348633
    8. '[parent' → logprob: -18.500001907348633
    9. '[(' → logprob: -18.625001907348633
    10. '[[' → logprob: -18.750001907348633

Token 327: 'refix' (ID: 8902)
  Prédit: 'refix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'refix' → logprob: -3.292907877039397e-06
    2. 'ref' → logprob: -13.12500286102295
    3. 'REFIX' → logprob: -13.75000286102295
    4. 'prefix' → logprob: -16.625003814697266
    5. 'r' → logprob: -16.875003814697266
    6. '[' → logprob: -19.000003814697266
    7. '(prefix' → logprob: -20.250003814697266
    8. 're' → logprob: -20.375003814697266
    9. 'er' → logprob: -20.500003814697266
    10. 'ef' → logprob: -21.500003814697266

Token 328: '_mod' (ID: 15325)
  Prédit: '_mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mod' → logprob: -4.320199877838604e-07
    2. 'mod' → logprob: -14.875
    3. '
' → logprob: -19.25
    4. '_MOD' → logprob: -19.25
    5. 'od' → logprob: -19.375
    6. 'omod' → logprob: -19.625
    7. '_' → logprob: -20.125
    8. ']' → logprob: -20.25
    9. '[' → logprob: -20.375
    10. '	mod' → logprob: -21.125

Token 329: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0012655939208343625
    2. '<|end|>' → logprob: -7.251265525817871
    3. ' ]' → logprob: -7.751265525817871
    4. ']
' → logprob: -9.126265525817871
    5. '
' → logprob: -12.001265525817871
    6. '[' → logprob: -12.501265525817871
    7. '<|end|>' → logprob: -13.251265525817871
    8. '']' → logprob: -14.376265525817871
    9. '       ' → logprob: -14.376265525817871
    10. ')' → logprob: -14.501265525817871

Token 330: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6123569011688232
    2. 'prefix' → logprob: -0.8623569011688232
    3. ' prefix' → logprob: -3.6123569011688232
    4. '   ' → logprob: -5.237357139587402
    5. '+' → logprob: -6.862357139587402
    6. '[' → logprob: -6.987357139587402
    7. '           ' → logprob: -7.487357139587402
    8. '```' → logprob: -7.612357139587402
    9. '        
' → logprob: -9.612357139587402
    10. '
' → logprob: -9.737357139587402

Token 331: ' prefix' (ID: 18633)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prefix' (adapté à ' prefix') → logprob: -1.8624639324116288e-06
    2. ' prefix' → logprob: -13.500001907348633
    3. '       ' → logprob: -15.000001907348633
    4. '
' → logprob: -18.750001907348633
    5. '   ' → logprob: -19.000001907348633
    6. '           ' → logprob: -19.500001907348633
    7. '(prefix' → logprob: -21.375001907348633
    8. '```' → logprob: -21.500001907348633
    9. '        
' → logprob: -21.750001907348633
    10. 'preced' → logprob: -23.125001907348633

Token 332: '_counts' (ID: 61971)
  Prédit: '_counts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_counts' → logprob: -3.531315314830863e-06
    2. '_mod' → logprob: -12.625003814697266
    3. 'counts' → logprob: -16.000003814697266
    4. ' counts' → logprob: -18.000003814697266
    5. '_' → logprob: -19.500003814697266
    6. 'Counts' → logprob: -20.125003814697266
    7. '```' → logprob: -20.375003814697266
    8. '_c' → logprob: -20.375003814697266
    9. '_lengths' → logprob: -20.875003814697266
    10. 'mod' → logprob: -21.125003814697266

Token 333: '[p' (ID: 23234)
  Prédit: '[p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[p' → logprob: -1.0280383548888494e-06
    2. '[' → logprob: -13.875000953674316
    3. '[
' → logprob: -18.625001907348633
    4. ' [' → logprob: -18.625001907348633
    5. '[int' → logprob: -18.750001907348633
    6. 'prefix' → logprob: -19.625001907348633
    7. '[parent' → logprob: -20.000001907348633
    8. '\[' → logprob: -20.250001907348633
    9. '[pos' → logprob: -20.375001907348633
    10. '[ip' → logprob: -20.750001907348633

Token 334: 'refix' (ID: 8902)
  Prédit: 'od'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'od' → logprob: -0.5111167430877686
    2. '_mod' → logprob: -1.2611167430877686
    3. 'mod' → logprob: -2.5111167430877686
    4. 'refix' → logprob: -3.3861167430877686
    5. 'ref' → logprob: -7.511116981506348
    6. 'ix' → logprob: -8.386116981506348
    7. 'fix' → logprob: -8.761116981506348
    8. ']' → logprob: -8.886116981506348
    9. 'ef' → logprob: -9.386116981506348
    10. 'om' → logprob: -9.386116981506348

Token 335: '_mod' (ID: 15325)
  Prédit: '_mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mod' → logprob: -4.632542913896032e-05
    2. 'mod' → logprob: -10.125046730041504
    3. ']' → logprob: -13.000046730041504
    4. '[' → logprob: -13.250046730041504
    5. 'od' → logprob: -14.250046730041504
    6. '-mod' → logprob: -14.625046730041504
    7. 'Mod' → logprob: -15.250046730041504
    8. ')' → logprob: -15.750046730041504
    9. '```' → logprob: -16.375045776367188
    10. 'omod' → logprob: -16.375045776367188

Token 336: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0011761783389374614
    2. ']+=' → logprob: -6.751176357269287
    3. ' ]' → logprob: -12.126175880432129
    4. '+=' → logprob: -15.001175880432129
    5. ' +=' → logprob: -15.251175880432129
    6. '']' → logprob: -18.626176834106445
    7. '`]' → logprob: -18.626176834106445
    8. ']=' → logprob: -18.876176834106445
    9. ')' → logprob: -19.126176834106445
    10. '+]' → logprob: -19.251176834106445

Token 337: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.06237040460109711
    2. ' +=' → logprob: -2.8123703002929688
    3. ']+=' → logprob: -7.937370300292969
    4. '=' → logprob: -10.062370300292969
    5. ']' → logprob: -13.437370300292969
    6. '[' → logprob: -14.312370300292969
    7. '+' → logprob: -15.312370300292969
    8. '   ' → logprob: -15.312370300292969
    9. '```' → logprob: -16.06237030029297
    10. ' =' → logprob: -16.93737030029297

Token 338: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.5
    3. '```' → logprob: -23.125
    4. '   ' → logprob: -23.75
    5. '۱' → logprob: -24.125
    6. '１' → logprob: -24.25
    7. '
' → logprob: -25.0
    8. ' ' → logprob: -25.0
    9. '0' → logprob: -25.125
    10. '`' → logprob: -25.75

Token 339: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -18.75
    3. '```' → logprob: -23.125
    4. '   ' → logprob: -23.5
    5. '１' → logprob: -24.5
    6. '۱' → logprob: -25.375
    7. '0' → logprob: -25.625
    8. '
' → logprob: -26.5
    9. '[' → logprob: -26.875
    10. '!' → logprob: -26.875

Token 340: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5585880875587463
    2. '   ' → logprob: -0.9335880875587463
    3. '<|end|>' → logprob: -3.5585880279541016
    4. ' return' → logprob: -5.933588027954102
    5. 'return' → logprob: -5.933588027954102
    6. '\n' → logprob: -8.058588027954102
    7. '    
' → logprob: -8.433588027954102
    8. '	return' → logprob: -8.808588027954102
    9. '```' → logprob: -8.933588027954102
    10. ':return' → logprob: -9.683588027954102

Token 341: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001893414300866425
    2. '<|end|>' → logprob: -6.626893520355225
    3. 'return' → logprob: -8.001893043518066
    4. ' return' → logprob: -9.376893043518066
    5. '
' → logprob: -9.501893043518066
    6. '```' → logprob: -10.626893043518066
    7. '    
' → logprob: -11.376893043518066
    8. ')' → logprob: -11.626893043518066
    9. '	return' → logprob: -11.626893043518066
    10. '       ' → logprob: -12.251893043518066

Token 342: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.038460273295640945
    2. 'return' (adapté à ' return') → logprob: -3.2884602546691895
    3. ' return' → logprob: -7.7884602546691895
    4. '	return' → logprob: -13.288460731506348
    5. '```' → logprob: -13.788460731506348
    6. '
' → logprob: -14.288460731506348
    7. '    
' → logprob: -14.413460731506348
    8. '       ' → logprob: -16.03845977783203
    9. ':return' → logprob: -16.03845977783203
    10. ' ' → logprob: -17.16345977783203

Token 343: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.0031777136027812958
    2. ' count' → logprob: -5.753177642822266
    3. '	count' → logprob: -20.503177642822266
    4. '   ' → logprob: -21.003177642822266
    5. '(count' → logprob: -21.753177642822266
    6. '_count' → logprob: -23.003177642822266
    7. '[count' → logprob: -23.253177642822266
    8. '$count' → logprob: -23.628177642822266
    9. 'counts' → logprob: -23.753177642822266
    10. ' ' → logprob: -24.003177642822266

Token 344: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 345: 'for' (ID: 1938)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 346: ' line' (ID: 2543)
  Prédit: ' num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' num' → logprob: -0.15458518266677856
    2. ' i' → logprob: -2.904585123062134
    3. ' line' → logprob: -2.904585123062134
    4. ' arg' → logprob: -3.904585123062134
    5. ' _' → logprob: -5.279585361480713
    6. ' number' → logprob: -5.404585361480713
    7. ' n' → logprob: -6.279585361480713
    8. 'num' → logprob: -7.404585361480713
    9. ' x' → logprob: -7.904585361480713
    10. 'i' → logprob: -8.529584884643555

Token 347: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.014184308238327503
    2. 'in' → logprob: -4.264184474945068
    3. ' ' → logprob: -11.26418399810791
    4. 'import' → logprob: -13.51418399810791
    5. '  ' → logprob: -13.63918399810791
    6. '_in' → logprob: -13.76418399810791
    7. '_' → logprob: -13.88918399810791
    8. '   ' → logprob: -14.01418399810791
    9. '	in' → logprob: -14.13918399810791
    10. '(' → logprob: -14.76418399810791

Token 348: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.0001584850688232109
    2. ' sys' → logprob: -8.750158309936523
    3. '=sys' → logprob: -17.000158309936523
    4. '	sys' → logprob: -18.250158309936523
    5. '(sys' → logprob: -18.750158309936523
    6. '```' → logprob: -20.375158309936523
    7. 'stdin' → logprob: -20.500158309936523
    8. 'import' → logprob: -22.625158309936523
    9. 'iter' → logprob: -23.000158309936523
    10. 'input' → logprob: -23.500158309936523

Token 349: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.01429525576531887
    2. 'stdin' → logprob: -4.2642951011657715
    3. '(stdin' → logprob: -9.63929557800293
    4. '.readline' → logprob: -10.01429557800293
    5. 'import' → logprob: -12.13929557800293
    6. 'in' → logprob: -12.26429557800293
    7. ' stdin' → logprob: -12.38929557800293
    8. 'input' → logprob: -12.51429557800293
    9. '.' → logprob: -13.76429557800293
    10. '.readlines' → logprob: -14.13929557800293

Token 350: ':
' (ID: 734)
  Prédit: '.readline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.3637027144432068
    2. ':' → logprob: -1.2387027740478516
    3. '.readlines' → logprob: -4.738702774047852
    4. '.strip' → logprob: -5.488702774047852
    5. '.' → logprob: -7.363702774047852
    6. '.rstrip' → logprob: -7.613702774047852
    7. ' in' → logprob: -7.613702774047852
    8. ':
' → logprob: -8.863702774047852
    9. '<|end|>' → logprob: -9.238702774047852
    10. 'rstrip' → logprob: -9.363702774047852

Token 351: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0006794307846575975
    2. ' num' → logprob: -8.000679016113281
    3. 'num' → logprob: -8.625679016113281
    4. ' line' → logprob: -8.875679016113281
    5. ' print' → logprob: -11.750679016113281
    6. '    
' → logprob: -11.875679016113281
    7. 'print' → logprob: -13.000679016113281
    8. '    ' → logprob: -13.375679016113281
    9. 'line' → logprob: -14.000679016113281
    10. '```' → logprob: -14.000679016113281

Token 352: ' line' (ID: 2543)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.01293161790817976
    2. ' num' → logprob: -4.887931823730469
    3. '   ' → logprob: -6.137931823730469
    4. 'print' → logprob: -6.137931823730469
    5. 'line' (adapté à ' line') → logprob: -7.637931823730469
    6. 'number' → logprob: -8.137931823730469
    7. 'n' → logprob: -9.012931823730469
    8. ' line' → logprob: -10.012931823730469
    9. ' print' → logprob: -10.887931823730469
    10. ' number' → logprob: -11.137931823730469

Token 353: '=line' (ID: 192488)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0739002525806427
    2. '=line' → logprob: -2.8239002227783203
    3. ' =' → logprob: -4.44890022277832
    4. '.strip' → logprob: -9.57390022277832
    5. 'strip' → logprob: -10.19890022277832
    6. '_strip' → logprob: -10.44890022277832
    7. '=str' → logprob: -11.19890022277832
    8. 'rstrip' → logprob: -11.19890022277832
    9. '.rstrip' → logprob: -12.57390022277832
    10. '=
' → logprob: -13.94890022277832

Token 354: '.strip' (ID: 40613)
  Prédit: '.strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.0011798698687925935
    2. '.rstrip' → logprob: -6.7511796951293945
    3. 'strip' → logprob: -12.126179695129395
    4. '.' → logprob: -12.501179695129395
    5. 'rstrip' → logprob: -15.751179695129395
    6. '_strip' → logprob: -16.62618064880371
    7. ' strip' → logprob: -16.75118064880371
    8. '.readline' → logprob: -16.75118064880371
    9. '.chomp' → logprob: -17.00118064880371
    10. '(strip' → logprob: -17.12618064880371

Token 355: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -1.8670179997570813e-05
    2. '())' → logprob: -12.375019073486328
    3. '().' → logprob: -13.000019073486328
    4. '()
' → logprob: -13.125019073486328
    5. '()]' → logprob: -13.125019073486328
    6. '()==' → logprob: -13.500019073486328
    7. '()`' → logprob: -13.625019073486328
    8. '();' → logprob: -13.875019073486328
    9. '()>' → logprob: -13.875019073486328
    10. '(' → logprob: -14.250019073486328

Token 356: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04657042399048805
    2. 'if' → logprob: -3.5465705394744873
    3. ' if' → logprob: -4.671570301055908
    4. 'print' → logprob: -4.921570301055908
    5. ' print' → logprob: -10.796570777893066
    6. '    
' → logprob: -12.421570777893066
    7. '<|end|>' → logprob: -12.421570777893066
    8. '
' → logprob: -12.921570777893066
    9. 'count' → logprob: -13.796570777893066
    10. '	if' → logprob: -14.671570777893066

Token 357: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.2520189583301544
    2. 'print' → logprob: -1.502018928527832
    3. 'result' → logprob: -9.752018928527832
    4. ' if' → logprob: -10.627018928527832
    5. '   ' → logprob: -12.002018928527832
    6. 'count' → logprob: -14.502018928527832
    7. ' print' → logprob: -15.377018928527832
    8. 'answer' → logprob: -15.752018928527832
    9. 'res' → logprob: -15.877018928527832
    10. '    
' → logprob: -16.37701988220215

Token 358: ' line' (ID: 2543)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.45334550738334656
    2. 'not' → logprob: -1.703345537185669
    3. 'line' → logprob: -1.953345537185669
    4. ' line' → logprob: -3.203345537185669
    5. ' ' → logprob: -13.70334529876709
    6. '#line' → logprob: -14.20334529876709
    7. '	line' → logprob: -15.32834529876709
    8. '(line' → logprob: -15.32834529876709
    9. '=line' → logprob: -15.95334529876709
    10. 'len' → logprob: -16.078346252441406

Token 359: '=='' (ID: 20651)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.16024301946163177
    2. ' ==' → logprob: -1.910243034362793
    3. '()==' → logprob: -11.535243034362793
    4. '=='' → logprob: -12.410243034362793
    5. '=="' → logprob: -13.035243034362793
    6. '=' → logprob: -13.910243034362793
    7. '===' → logprob: -14.285243034362793
    8. '==
' → logprob: -14.410243034362793
    9. ')==' → logprob: -15.035243034362793
    10. ']==' → logprob: -15.785243034362793

Token 360: '0' (ID: 15)
  Prédit: ''''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '''' → logprob: -0.8524131178855896
    2. ''' → logprob: -1.2274131774902344
    3. '':' → logprob: -1.4774131774902344
    4. '"' → logprob: -3.8524131774902344
    5. '"":' → logprob: -4.227413177490234
    6. '""' → logprob: -4.602413177490234
    7. 'END' → logprob: -6.602413177490234
    8. 'exit' → logprob: -6.602413177490234
    9. '":' → logprob: -6.727413177490234
    10. '':
' → logprob: -7.102413177490234

Token 361: '':
' (ID: 7669)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.09462543576955795
    2. ':' → logprob: -2.469625473022461
    3. '   ' → logprob: -5.594625473022461
    4. '':
' → logprob: -6.719625473022461
    5. '':' → logprob: -7.594625473022461
    6. ' or' → logprob: -10.094625473022461
    7. '():
' → logprob: -10.219625473022461
    8. '	break' → logprob: -10.469625473022461
    9. ' break' → logprob: -10.469625473022461
    10. '       ' → logprob: -10.844625473022461

Token 362: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006729110609740019
    2. '   ' → logprob: -5.0067291259765625
    3. '     ' → logprob: -12.881729125976562
    4. ' break' → logprob: -13.006729125976562
    5. '      ' → logprob: -13.381729125976562
    6. '	break' → logprob: -13.631729125976562
    7. 'break' → logprob: -13.881729125976562
    8. '<|end|>' → logprob: -13.881729125976562
    9. '           ' → logprob: -14.131729125976562
    10. '    ' → logprob: -14.506729125976562

Token 363: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.15361502766609192
    2. ' break' → logprob: -2.6536149978637695
    3. '       ' → logprob: -2.9036149978637695
    4. '   ' → logprob: -4.1536149978637695
    5. '	break' → logprob: -6.5286149978637695
    6. '           ' → logprob: -12.90361499786377
    7. '
' → logprob: -13.15361499786377
    8. '_break' → logprob: -13.27861499786377
    9. '     ' → logprob: -14.27861499786377
    10. ' ' → logprob: -15.15361499786377

Token 364: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014249884523451328
    2. 'print' → logprob: -4.264249801635742
    3. '
' → logprob: -10.139249801635742
    4. '    
' → logprob: -10.514249801635742
    5. ' print' → logprob: -11.264249801635742
    6. '```' → logprob: -12.139249801635742
    7. '  
' → logprob: -13.889249801635742
    8. 'count' → logprob: -15.764249801635742
    9. '	print' → logprob: -15.889249801635742
    10. '        
' → logprob: -16.389249801635742

Token 365: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005951790604740381
    2. 'print' → logprob: -5.130951881408691
    3. ' print' → logprob: -11.505951881408691
    4. '    
' → logprob: -12.380951881408691
    5. '	print' → logprob: -12.630951881408691
    6. '```' → logprob: -12.630951881408691
    7. '
' → logprob: -13.755951881408691
    8. '<|end|>' → logprob: -14.380951881408691
    9. '  
' → logprob: -15.255951881408691
    10. '   ' → logprob: -16.880950927734375

Token 366: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0009149204124696553
    2. '   ' → logprob: -7.250915050506592
    3. ' print' → logprob: -8.500914573669434
    4. 'result' → logprob: -13.500914573669434
    5. '	print' → logprob: -15.625914573669434
    6. 'count' → logprob: -16.50091552734375
    7. '    
' → logprob: -17.00091552734375
    8. '```' → logprob: -17.62591552734375
    9. '
' → logprob: -17.75091552734375
    10. ' result' → logprob: -19.62591552734375

Token 367: '(count' (ID: 25892)
  Prédit: '(count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(count' → logprob: -5.908022285439074e-05
    2. 'count' → logprob: -9.750059127807617
    3. '(' → logprob: -14.250059127807617
    4. '=count' → logprob: -18.250059127807617
    5. '(c' → logprob: -18.875059127807617
    6. ' count' → logprob: -18.875059127807617
    7. '<count' → logprob: -20.125059127807617
    8. '[count' → logprob: -20.125059127807617
    9. ',count' → logprob: -20.375059127807617
    10. '(cnt' → logprob: -20.875059127807617

Token 368: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: 0.0
    2. '(' → logprob: -19.125
    3. '11' → logprob: -20.125
    4. '```' → logprob: -20.25
    5. ' _' → logprob: -20.375
    6. '_
' → logprob: -20.5
    7. '110' → logprob: -20.75
    8. ')_' → logprob: -20.75
    9. '111' → logprob: -21.0
    10. ')' → logprob: -21.625

Token 369: '11' (ID: 994)
  Prédit: '11'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '11' → logprob: -0.0619683600962162
    2. '_' → logprob: -2.8119683265686035
    3. '1' → logprob: -14.811968803405762
    4. '111' → logprob: -16.061967849731445
    5. '```' → logprob: -16.811967849731445
    6. ' ' → logprob: -17.311967849731445
    7. '１１' → logprob: -17.936967849731445
    8. '(' → logprob: -18.061967849731445
    9. '110' → logprob: -18.061967849731445
    10. '__' → logprob: -18.436967849731445

Token 370: '_sequences' (ID: 153014)
  Prédit: '_sequences'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sequences' → logprob: -5.438573680294212e-06
    2. '_' → logprob: -12.250005722045898
    3. '_se' → logprob: -14.375005722045898
    4. '_s' → logprob: -18.5000057220459
    5. 'se' → logprob: -18.5000057220459
    6. '_sequence' → logprob: -18.6250057220459
    7. '```' → logprob: -18.6250057220459
    8. '\' → logprob: -19.1250057220459
    9. ' sequences' → logprob: -19.3750057220459
    10. '_sub' → logprob: -19.5000057220459

Token 371: '(line' (ID: 18178)
  Prédit: '(line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -3.440506407059729e-05
    2. '(' → logprob: -10.37503433227539
    3. '(Line' → logprob: -13.62503433227539
    4. ',line' → logprob: -13.87503433227539
    5. ' (' → logprob: -14.62503433227539
    6. '=line' → logprob: -16.12503433227539
    7. ')(' → logprob: -16.37503433227539
    8. ')' → logprob: -16.37503433227539
    9. '[line' → logprob: -16.62503433227539
    10. '(lines' → logprob: -16.75003433227539

Token 372: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16024534404277802
    2. '))' → logprob: -1.9102452993392944
    3. '())' → logprob: -10.910244941711426
    4. ')))' → logprob: -13.410244941711426
    5. '()' → logprob: -14.285244941711426
    6. ' )' → logprob: -15.410244941711426
    7. ')")' → logprob: -15.660244941711426
    8. ')`' → logprob: -16.285245895385742
    9. '()))' → logprob: -16.785245895385742
    10. '))
' → logprob: -16.785245895385742


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 370
Tokens correctement prédits (1ère position, stricte): 162
Tokens correctement prédits (1ère position, avec adaptation): 174
Tokens correctement prédits (top 10): 306
Précision stricte (1ère position): 43.78%
Précision adaptée (1ère position): 47.03%
Précision (top 10): 82.70%
================================================================================
