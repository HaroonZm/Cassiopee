================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:59:03
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys

def parse_expression(s):
    # parse expression like (clause)|(expr)
    # returns list of clauses
    # clause: x&y&z with optional ~ before variables
    # expression format: (clause) or (clause)|(expression)
    clauses = []
    i = 0
    n = len(s)
    while i < n:
        if s[i] == '(':
            j = i + 1
            cnt = 1
            while j < n and cnt > 0:
                if s[j] == '(':
                    cnt += 1
                elif s[j] == ')':
                    cnt -= 1
                j += 1
            clause_str = s[i+1:j-1]
            clauses.append(clause_str)
            i = j
            if i < n and s[i] == '|':
                i += 1
        else:
            i += 1
    return clauses

def parse_clause(clause):
    # clause is literal&literal&literal
    # literal: var or ~var
    parts = clause.split('&')
    lits = []
    for p in parts:
        if p[0] == '~':
            lits.append(('~', p[1]))
        else:
            lits.append(('+', p[0]))
    return lits

def get_vars(clauses):
    vars_set = set()
    for c in clauses:
        for s,l in c:
            vars_set.add(l)
    return list(vars_set)

def eval_literal(val, sign):
    # val is boolean, sign '+' means var, '~' means negated var
    if sign == '+':
        return val
    else:
        return not val

def main():
    lines = []
    for line in sys.stdin:
        line=line.strip()
        if line == '#':
            break
        lines.append(line)

    for line in lines:
        clauses_str = parse_expression(line)
        clauses = []
        for cstr in clauses_str:
            clauses.append(parse_clause(cstr))
        vars_list = get_vars(clauses)
        vars_list.sort()

        found = False
        # try all assignments simple brute force
        for assignment in range(1 << len(vars_list)):
            var_values = {}
            for i,v in enumerate(vars_list):
                var_values[v] = (assignment >> i) & 1 == 1
            formula_val = False
            for clause in clauses:
                # clause is a conjunction of literals
                clause_val = True
                for sign,var in clause:
                    lit_val = eval_literal(var_values[var], sign)
                    if not lit_val:
                        clause_val = False
                        break
                if clause_val:
                    formula_val = True
                    break
            if formula_val:
                found = True
                break
        print("yes" if found else "no")

if __name__ == '__main__':
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: 'def' (ID: 1314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.10019242763519287
    2. '\n' → logprob: -3.1001925468444824
    3. 'import' → logprob: -3.3501925468444824
    4. '<|end|>' → logprob: -5.600192546844482
    5. '\' → logprob: -5.725192546844482
    6. 'newline' → logprob: -6.475192546844482
    7. ',' → logprob: -7.100192546844482
    8. 'print' → logprob: -7.225192546844482
    9. '<|end|>' → logprob: -7.350192546844482
    10. '[' → logprob: -7.475192546844482

Token 4: ' parse' (ID: 8420)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.27202650904655457
    2. ' process' → logprob: -2.647026538848877
    3. ' read' → logprob: -3.022026538848877
    4. ' space' → logprob: -3.397026538848877
    5. ' main' → logprob: -3.772026538848877
    6. ' calculate' → logprob: -4.772026538848877
    7. ' my' → logprob: -5.022026538848877
    8. ' sys' → logprob: -5.272026538848877
    9. ' ' → logprob: -5.522026538848877
    10. ' def' → logprob: -5.772026538848877

Token 5: '_expression' (ID: 69265)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.35109829902648926
    2. '(' → logprob: -1.2260982990264893
    3. '_:' → logprob: -6.35109806060791
    4. '_line' → logprob: -8.22609806060791
    5. '_token' → logprob: -9.47609806060791
    6. '_name' → logprob: -9.85109806060791
    7. '_input' → logprob: -9.85109806060791
    8. '_(' → logprob: -10.10109806060791
    9. '(_' → logprob: -10.10109806060791
    10. ':' → logprob: -10.10109806060791

Token 6: '(s' (ID: 1858)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.001562000485137105
    2. '_' → logprob: -7.001562118530273
    3. '(:' → logprob: -8.501562118530273
    4. ':' → logprob: -9.251562118530273
    5. '():' → logprob: -9.376562118530273
    6. ' (' → logprob: -10.001562118530273
    7. '("("' → logprob: -10.376562118530273
    8. '(_:' → logprob: -10.376562118530273
    9. '('' → logprob: -10.751562118530273
    10. '```' → logprob: -11.001562118530273

Token 7: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.10065615922212601
    2. ')' → logprob: -2.350656270980835
    3. '[' → logprob: -8.100656509399414
    4. ':' → logprob: -9.975656509399414
    5. 's' → logprob: -10.350656509399414
    6. '):
' → logprob: -10.850656509399414
    7. ',' → logprob: -11.350656509399414
    8. ' ):' → logprob: -11.600656509399414
    9. '[]):' → logprob: -12.975656509399414
    10. 'e' → logprob: -13.100656509399414

Token 8: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4685903787612915
    2. '   ' → logprob: -1.2185903787612915
    3. ' :' → logprob: -3.093590259552002
    4. '    ' → logprob: -4.218590259552002
    5. '(' → logprob: -4.843590259552002
    6. ' ' → logprob: -6.093590259552002
    7. '():' → logprob: -6.218590259552002
    8. ''' → logprob: -6.468590259552002
    9. ':
' → logprob: -7.218590259552002
    10. '[:]' → logprob: -7.593590259552002

Token 9: ' #' (ID: 1069)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -1.2915924787521362
    2. '   ' → logprob: -1.6665924787521362
    3. ' if' → logprob: -2.041592597961426
    4. ' tokens' → logprob: -2.166592597961426
    5. ' i' → logprob: -2.541592597961426
    6. 'tokens' → logprob: -2.916592597961426
    7. 'return' → logprob: -3.291592597961426
    8. ' try' → logprob: -3.541592597961426
    9. ' token' → logprob: -3.666592597961426
    10. 'token' → logprob: -4.416592597961426

Token 10: ' parse' (ID: 8420)
  Prédit: ' tokens'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' tokens' → logprob: -0.5390221476554871
    2. '   ' → logprob: -1.6640222072601318
    3. 'tokens' → logprob: -2.914022207260132
    4. ' return' → logprob: -3.039022207260132
    5. ' pass' → logprob: -3.539022207260132
    6. ' s' → logprob: -3.914022207260132
    7. ' #' → logprob: -3.914022207260132
    8. ' if' → logprob: -4.164021968841553
    9. 'return' → logprob: -5.414021968841553
    10. ' i' → logprob: -5.414021968841553

Token 11: ' expression' (ID: 12973)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3425051271915436
    2. '_' → logprob: -1.3425050973892212
    3. ' (' → logprob: -4.592504978179932
    4. '_token' → logprob: -5.217504978179932
    5. '_expression' → logprob: -5.967504978179932
    6. '(s' → logprob: -6.092504978179932
    7. 's' → logprob: -6.217504978179932
    8. ':' → logprob: -6.842504978179932
    9. ' ' → logprob: -6.842504978179932
    10. ' _' → logprob: -7.467504978179932

Token 12: ' like' (ID: 1299)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3510648310184479
    2. ':' → logprob: -1.7260648012161255
    3. ' :' → logprob: -2.851064920425415
    4. '   ' → logprob: -3.976064920425415
    5. '():' → logprob: -4.601064682006836
    6. ' (' → logprob: -4.726064682006836
    7. '):' → logprob: -5.601064682006836
    8. '(s' → logprob: -5.976064682006836
    9. '_' → logprob: -6.101064682006836
    10. ' =' → logprob: -6.226064682006836

Token 13: ' (' (ID: 350)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.37685757875442505
    2. ''' → logprob: -2.5018575191497803
    3. ' a' → logprob: -3.0018575191497803
    4. ' "' → logprob: -3.3768575191497803
    5. ' s' → logprob: -3.6268575191497803
    6. ''s' → logprob: -3.7518575191497803
    7. ' ' → logprob: -4.126857757568359
    8. 'a' → logprob: -4.251857757568359
    9. 's' → logprob: -4.251857757568359
    10. ' int' → logprob: -4.626857757568359

Token 14: 'cl' (ID: 565)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9075449109077454
    2. '(' → logprob: -1.7825448513031006
    3. 's' → logprob: -2.1575448513031006
    4. 'a' → logprob: -2.5325448513031006
    5. '1' → logprob: -2.7825448513031006
    6. ' )' → logprob: -3.1575448513031006
    7. '+' → logprob: -3.7825448513031006
    8. 'x' → logprob: -3.7825448513031006
    9. ' ' → logprob: -4.40754508972168
    10. '3' → logprob: -4.40754508972168

Token 15: 'ause' (ID: 1597)
  Prédit: 'ass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ass' → logprob: -0.23555888235569
    2. ')' → logprob: -2.9855589866638184
    3. 's' → logprob: -4.110558986663818
    4. 'a' → logprob: -4.110558986663818
    5. 'ean' → logprob: -4.235558986663818
    6. 'ock' → logprob: -4.485558986663818
    7. 'os' → logprob: -4.735558986663818
    8. 'ose' → logprob: -4.860558986663818
    9. 'o' → logprob: -4.985558986663818
    10. 'oj' → logprob: -5.235558986663818

Token 16: ')|(' (ID: 148376)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.026272200047969818
    2. ' )' → logprob: -4.151272296905518
    3. '[' → logprob: -5.901272296905518
    4. 's' → logprob: -6.026272296905518
    5. '   ' → logprob: -6.026272296905518
    6. ' ' → logprob: -7.776272296905518
    7. ',' → logprob: -8.02627182006836
    8. ':' → logprob: -8.52627182006836
    9. '_' → logprob: -8.65127182006836
    10. '')' → logprob: -8.77627182006836

Token 17: 'expr' (ID: 21343)
  Prédit: 'cl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cl' → logprob: -0.0630955621600151
    2. ')' → logprob: -3.9380955696105957
    3. ' clause' → logprob: -3.9380955696105957
    4. '|' → logprob: -5.563095569610596
    5. '(cl' → logprob: -5.938095569610596
    6. 'term' → logprob: -6.063095569610596
    7. 'expression' → logprob: -6.063095569610596
    8. 's' → logprob: -6.313095569610596
    9. '[' → logprob: -6.563095569610596
    10. 'expr' → logprob: -6.813095569610596

Token 18: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0018833002541214228
    2. '):' → logprob: -6.626883506774902
    3. 's' → logprob: -8.251883506774902
    4. 'ession' → logprob: -9.126883506774902
    5. '|' → logprob: -9.501883506774902
    6. ':' → logprob: -10.876883506774902
    7. ' ' → logprob: -11.251883506774902
    8. '(' → logprob: -11.376883506774902
    9. '[' → logprob: -11.501883506774902
    10. ' )' → logprob: -11.626883506774902

Token 19: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9443920254707336
    2. ':' → logprob: -1.3193919658660889
    3. ')' → logprob: -2.194391965866089
    4. '(' → logprob: -2.319391965866089
    5. ' ' → logprob: -3.069391965866089
    6. ' :' → logprob: -3.444391965866089
    7. ' (' → logprob: -4.069392204284668
    8. ' )' → logprob: -4.069392204284668
    9. '):' → logprob: -5.069392204284668
    10. ',' → logprob: -5.444392204284668

Token 20: ' #' (ID: 1069)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9075420498847961
    2. '(' → logprob: -1.4075419902801514
    3. ' (' → logprob: -2.0325419902801514
    4. ' )' → logprob: -2.5325419902801514
    5. '   ' → logprob: -2.9075419902801514
    6. '    ' → logprob: -3.4075419902801514
    7. ')' → logprob: -3.5325419902801514
    8. ',' → logprob: -6.0325422286987305
    9. 's' → logprob: -6.1575422286987305
    10. 'r' → logprob: -6.1575422286987305

Token 21: ' returns' (ID: 7377)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1161431074142456
    2. ' )' → logprob: -1.3661431074142456
    3. ')' → logprob: -2.116143226623535
    4. ' if' → logprob: -2.241143226623535
    5. ' i' → logprob: -3.366143226623535
    6. 'if' → logprob: -3.616143226623535
    7. ' (' → logprob: -4.116143226623535
    8. ' ' → logprob: -4.116143226623535
    9. '    ' → logprob: -4.241143226623535
    10. '(' → logprob: -4.366143226623535

Token 22: ' list' (ID: 1562)
  Prédit: ' None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' None' → logprob: -0.14267565310001373
    2. ' s' → logprob: -3.1426756381988525
    3. ' []' → logprob: -3.7676756381988525
    4. 's' → logprob: -3.7676756381988525
    5. 'None' → logprob: -4.017675876617432
    6. ' ' → logprob: -4.642675876617432
    7. ' clause' → logprob: -5.517675876617432
    8. ' expression' → logprob: -6.392675876617432
    9. ' (' → logprob: -6.642675876617432
    10. '[]' → logprob: -6.642675876617432

Token 23: ' of' (ID: 328)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8257647156715393
    2. '   ' → logprob: -1.7007646560668945
    3. '[' → logprob: -1.8257646560668945
    4. '[:]' → logprob: -2.8257646560668945
    5. '[]' → logprob: -3.5757646560668945
    6. '```' → logprob: -3.8257646560668945
    7. ' ' → logprob: -3.8257646560668945
    8. '<|end|>' → logprob: -3.8257646560668945
    9. 'def' → logprob: -4.0757646560668945
    10. '[
' → logprob: -4.4507646560668945

Token 24: ' clauses' (ID: 99572)
  Prédit: ' tokens'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tokens' → logprob: -0.27866673469543457
    2. ' clauses' → logprob: -1.9036667346954346
    3. 'tokens' → logprob: -2.9036667346954346
    4. ' alternatives' → logprob: -4.5286664962768555
    5. ' strings' → logprob: -4.6536664962768555
    6. ' parts' → logprob: -5.5286664962768555
    7. ' tuples' → logprob: -6.0286664962768555
    8. ' elements' → logprob: -6.2786664962768555
    9. ' terms' → logprob: -7.0286664962768555
    10. 'altern' → logprob: -7.0286664962768555

Token 25: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.33651891350746155
    2. ':' → logprob: -2.3365190029144287
    3. '    
' → logprob: -3.0865190029144287
    4. '    ' → logprob: -3.0865190029144287
    5. '\' → logprob: -3.8365190029144287
    6. ' 
' → logprob: -3.9615190029144287
    7. ' ' → logprob: -4.46151876449585
    8. '
' → logprob: -4.71151876449585
    9. '```' → logprob: -4.96151876449585
    10. '   
' → logprob: -5.33651876449585

Token 26: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4077431261539459
    2. '   ' → logprob: -1.1577430963516235
    3. ':
' → logprob: -5.157742977142334
    4. ' :' → logprob: -5.282742977142334
    5. '```' → logprob: -5.407742977142334
    6. '):' → logprob: -6.907742977142334
    7. '[' → logprob: -7.032742977142334
    8. '    
' → logprob: -7.532742977142334
    9. '    ' → logprob: -7.532742977142334
    10. '\' → logprob: -7.907742977142334

Token 27: ' #' (ID: 1069)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.32276973128318787
    2. '   ' → logprob: -1.4477697610855103
    3. '[' → logprob: -4.447769641876221
    4. ' :' → logprob: -4.947769641876221
    5. '    ' → logprob: -5.572769641876221
    6. ' 
' → logprob: -5.822769641876221
    7. ':
' → logprob: -5.822769641876221
    8. ' ' → logprob: -6.072769641876221
    9. '
' → logprob: -6.322769641876221
    10. '    
' → logprob: -6.572769641876221

Token 28: ' clause' (ID: 45470)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09543348103761673
    2. '[' → logprob: -3.470433473587036
    3. '    ' → logprob: -3.845433473587036
    4. ' ' → logprob: -4.095433712005615
    5. ' 
' → logprob: -5.595433712005615
    6. '```' → logprob: -6.095433712005615
    7. ')' → logprob: -6.220433712005615
    8. '  ' → logprob: -6.720433712005615
    9. '    
' → logprob: -7.095433712005615
    10. '\' → logprob: -7.345433712005615

Token 29: ':' (ID: 25)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.01027538999915123
    2. ' =' → logprob: -4.885275363922119
    3. ' s' → logprob: -6.510275363922119
    4. '_' → logprob: -7.760275363922119
    5. ' ' → logprob: -8.510275840759277
    6. '_s' → logprob: -8.885275840759277
    7. ')' → logprob: -9.135275840759277
    8. '=' → logprob: -9.260275840759277
    9. '_tokens' → logprob: -10.135275840759277
    10. '_list' → logprob: -10.260275840759277

Token 30: ' x' (ID: 1215)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.43386703729629517
    2. ' []' → logprob: -1.8088669776916504
    3. '[' → logprob: -2.4338669776916504
    4. ' [
' → logprob: -3.9338669776916504
    5. 's' → logprob: -4.05886697769165
    6. ' ['' → logprob: -4.18386697769165
    7. ' s' → logprob: -4.55886697769165
    8. '[s' → logprob: -4.93386697769165
    9. '[]' → logprob: -5.18386697769165
    10. '['' → logprob: -5.68386697769165

Token 31: '&' (ID: 5)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.146685004234314
    2. '_' → logprob: -1.771685004234314
    3. '=' → logprob: -1.896685004234314
    4. '[' → logprob: -2.0216851234436035
    5. ')' → logprob: -2.5216851234436035
    6. 's' → logprob: -3.1466851234436035
    7. ' ' → logprob: -3.5216851234436035
    8. '(' → logprob: -4.2716851234436035
    9. ',' → logprob: -4.3966851234436035
    10. ':' → logprob: -4.8966851234436035

Token 32: 'y' (ID: 88)
  Prédit: '&'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '&' → logprob: -0.3196989893913269
    2. '|' → logprob: -1.8196990489959717
    3. 'x' → logprob: -3.0696990489959717
    4. ')' → logprob: -3.8196990489959717
    5. 's' → logprob: -4.319698810577393
    6. ' ' → logprob: -5.194698810577393
    7. '=' → logprob: -5.194698810577393
    8. '(' → logprob: -5.694698810577393
    9. '[' → logprob: -6.444698810577393
    10. '(s' → logprob: -6.944698810577393

Token 33: '&' (ID: 5)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.27391743659973145
    2. '   ' → logprob: -1.6489174365997314
    3. '):' → logprob: -3.8989174365997314
    4. ' :' → logprob: -4.398917198181152
    5. ')' → logprob: -5.523917198181152
    6. ' ' → logprob: -6.648917198181152
    7. '[' → logprob: -6.898917198181152
    8. '
' → logprob: -7.023917198181152
    9. ':
' → logprob: -7.023917198181152
    10. '    ' → logprob: -7.023917198181152

Token 34: 'z' (ID: 89)
  Prédit: 'z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.11658741533756256
    2. 'x' → logprob: -3.2415874004364014
    3. '|' → logprob: -3.4915874004364014
    4. '&' → logprob: -4.7415876388549805
    5. 's' → logprob: -4.8665876388549805
    6. ')' → logprob: -4.8665876388549805
    7. ' ' → logprob: -5.2415876388549805
    8. 'y' → logprob: -5.8665876388549805
    9. ' z' → logprob: -6.2415876388549805
    10. ' x' → logprob: -7.2415876388549805

Token 35: ' with' (ID: 483)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.621109127998352
    2. ':' → logprob: -1.121109127998352
    3. '):' → logprob: -2.9961090087890625
    4. ')' → logprob: -3.1211090087890625
    5. ' ' → logprob: -4.7461090087890625
    6. ' :' → logprob: -4.8711090087890625
    7. '_' → logprob: -4.8711090087890625
    8. ' 
' → logprob: -5.4961090087890625
    9. '<|end|>' → logprob: -6.3711090087890625
    10. ',' → logprob: -6.6211090087890625

Token 36: ' optional' (ID: 18297)
  Prédit: 'out'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'out' → logprob: -0.014238021336495876
    2. ' no' → logprob: -5.139237880706787
    3. ' spaces' → logprob: -6.389237880706787
    4. 'in' → logprob: -6.514237880706787
    5. '&' → logprob: -7.014237880706787
    6. 'o' → logprob: -7.264237880706787
    7. ' parentheses' → logprob: -7.639237880706787
    8. '|' → logprob: -8.014238357543945
    9. ' tokens' → logprob: -8.014238357543945
    10. ' &' → logprob: -8.014238357543945

Token 37: ' ~' (ID: 6574)
  Prédit: '~'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '~' → logprob: -0.7656263113021851
    2. ' ~' → logprob: -1.640626311302185
    3. ' spaces' → logprob: -1.765626311302185
    4. '!' → logprob: -3.1406264305114746
    5. ' not' → logprob: -3.3906264305114746
    6. ' !' → logprob: -4.265626430511475
    7. 'not' → logprob: -4.515626430511475
    8. '_' → logprob: -4.765626430511475
    9. 'space' → logprob: -5.015626430511475
    10. ' parentheses' → logprob: -5.140626430511475

Token 38: ' before' (ID: 2254)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6992252469062805
    2. ')' → logprob: -1.3242251873016357
    3. ':' → logprob: -2.4492251873016357
    4. ' 
' → logprob: -3.1992251873016357
    5. ' ' → logprob: -3.4492251873016357
    6. '[' → logprob: -4.199225425720215
    7. '```' → logprob: -4.574225425720215
    8. '<|end|>' → logprob: -5.074225425720215
    9. '
' → logprob: -5.324225425720215
    10. '    ' → logprob: -5.699225425720215

Token 39: ' variables' (ID: 13955)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.38893285393714905
    2. '   ' → logprob: -1.3889328241348267
    3. '[' → logprob: -3.638932943344116
    4. ' )' → logprob: -4.263932704925537
    5. ' ' → logprob: -4.513932704925537
    6. 's' → logprob: -4.888932704925537
    7. '    ' → logprob: -6.138932704925537
    8. 'def' → logprob: -6.138932704925537
    9. ' tokens' → logprob: -6.638932704925537
    10. 'tokens' → logprob: -6.763932704925537

Token 40: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5635392665863037
    2. '   ' → logprob: -1.0635392665863037
    3. '
' → logprob: -3.3135392665863037
    4. ' :' → logprob: -4.438539505004883
    5. '```' → logprob: -4.938539505004883
    6. '):' → logprob: -5.188539505004883
    7. ' 
' → logprob: -5.813539505004883
    8. '\n' → logprob: -5.813539505004883
    9. '    
' → logprob: -5.813539505004883
    10. ' ' → logprob: -5.938539505004883

Token 41: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5518990159034729
    2. '   ' → logprob: -0.9268990159034729
    3. ' :' → logprob: -4.426898956298828
    4. ':
' → logprob: -5.676898956298828
    5. '
' → logprob: -6.176898956298828
    6. ')' → logprob: -6.176898956298828
    7. ' ' → logprob: -6.301898956298828
    8. '):' → logprob: -6.301898956298828
    9. ',' → logprob: -6.926898956298828
    10. '    
' → logprob: -7.051898956298828

Token 42: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01701776497066021
    2. ')' → logprob: -5.267017841339111
    3. 'n' → logprob: -6.142017841339111
    4. ' ' → logprob: -6.267017841339111
    5. '```' → logprob: -6.767017841339111
    6. '\n' → logprob: -7.017017841339111
    7. '    ' → logprob: -7.267017841339111
    8. ':' → logprob: -7.642017841339111
    9. '\' → logprob: -7.767017841339111
    10. ' 
' → logprob: -7.892017841339111

Token 43: ' expression' (ID: 12973)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04273126274347305
    2. 'tokens' → logprob: -4.292731285095215
    3. ' lines' → logprob: -4.542731285095215
    4. ' tokens' → logprob: -4.667731285095215
    5. '    ' → logprob: -5.417731285095215
    6. '```' → logprob: -7.417731285095215
    7. ' pos' → logprob: -7.792731285095215
    8. ' if' → logprob: -8.042731285095215
    9. 'pos' → logprob: -8.167731285095215
    10. 'def' → logprob: -8.542731285095215

Token 44: ' format' (ID: 6011)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0047795879654586315
    2. '=' → logprob: -5.504779815673828
    3. 's' → logprob: -8.129779815673828
    4. ')' → logprob: -9.129779815673828
    5. ' ' → logprob: -9.379779815673828
    6. '  ' → logprob: -10.004779815673828
    7. ':' → logprob: -10.629779815673828
    8. '   ' → logprob: -10.754779815673828
    9. '_tokens' → logprob: -10.879779815673828
    10. ' s' → logprob: -11.129779815673828

Token 45: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7180106043815613
    2. ':' → logprob: -1.093010663986206
    3. ' :' → logprob: -2.593010663986206
    4. '<|end|>' → logprob: -2.968010663986206
    5. '):' → logprob: -4.468010425567627
    6. '=' → logprob: -4.593010425567627
    7. '<|end|>' → logprob: -4.718010425567627
    8. '   ' → logprob: -4.843010425567627
    9. ' ' → logprob: -5.218010425567627
    10. ')' → logprob: -6.218010425567627

Token 46: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.4219474792480469
    2. '(' → logprob: -1.5469474792480469
    3. ' ' → logprob: -2.921947479248047
    4. ')' → logprob: -3.921947479248047
    5. 's' → logprob: -4.171947479248047
    6. ''' → logprob: -4.546947479248047
    7. ' s' → logprob: -4.796947479248047
    8. '"' → logprob: -5.546947479248047
    9. ' '('' → logprob: -5.671947479248047
    10. ' )' → logprob: -6.046947479248047

Token 47: 'cl' (ID: 565)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.0053032636642456
    2. ')' → logprob: -1.3803032636642456
    3. '[' → logprob: -1.6303032636642456
    4. 'cl' → logprob: -2.255303382873535
    5. '<|end|>' → logprob: -3.005303382873535
    6. '(cl' → logprob: -4.130303382873535
    7. '[^' → logprob: -5.505303382873535
    8. '<|end|>' → logprob: -6.505303382873535
    9. ' (' → logprob: -6.630303382873535
    10. 's' → logprob: -6.880303382873535

Token 48: 'ause' (ID: 1597)
  Prédit: 'ause'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ause' → logprob: -0.13831877708435059
    2. 'a' → logprob: -2.5133187770843506
    3. ')' → logprob: -4.01331901550293
    4. 'au' → logprob: -4.38831901550293
    5. 'aus' → logprob: -5.13831901550293
    6. '```' → logprob: -6.82581901550293
    7. '(' → logprob: -6.88831901550293
    8. 'use' → logprob: -6.95081901550293
    9. 'cl' → logprob: -7.32581901550293
    10. ')(' → logprob: -7.51331901550293

Token 49: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00015014449309092015
    2. 's' → logprob: -9.250149726867676
    3. '|' → logprob: -10.750149726867676
    4. ')s' → logprob: -12.375149726867676
    5. '(s' → logprob: -12.875149726867676
    6. '')' → logprob: -12.875149726867676
    7. '[' → logprob: -13.125149726867676
    8. '):' → logprob: -13.250149726867676
    9. ',' → logprob: -13.375149726867676
    10. ')|' → logprob: -13.375149726867676

Token 50: ' or' (ID: 503)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.20119929313659668
    2. '   ' → logprob: -2.8261992931365967
    3. ')' → logprob: -3.0761992931365967
    4. '):' → logprob: -3.3261992931365967
    5. '
' → logprob: -3.8261992931365967
    6. ':
' → logprob: -4.951199531555176
    7. ' :' → logprob: -5.701199531555176
    8. ' ' → logprob: -6.576199531555176
    9. '):
' → logprob: -6.951199531555176
    10. ' 
' → logprob: -6.951199531555176

Token 51: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.05815950408577919
    2. ' |' → logprob: -4.558159351348877
    3. 's' → logprob: -4.683159351348877
    4. '(' → logprob: -4.808159351348877
    5. ' ' → logprob: -4.808159351348877
    6. ' s' → logprob: -5.433159351348877
    7. '|' → logprob: -5.558159351348877
    8. ')' → logprob: -5.683159351348877
    9. '(s' → logprob: -6.558159351348877
    10. '  ' → logprob: -6.683159351348877

Token 52: 'cl' (ID: 565)
  Prédit: 'cl'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cl' → logprob: -0.14712202548980713
    2. 'expr' → logprob: -2.3971219062805176
    3. 'c' → logprob: -4.022121906280518
    4. 'expression' → logprob: -5.022121906280518
    5. 'cla' → logprob: -5.397121906280518
    6. '(' → logprob: -5.647121906280518
    7. ')' → logprob: -6.147121906280518
    8. 'e' → logprob: -6.147121906280518
    9. 'exp' → logprob: -6.772121906280518
    10. 's' → logprob: -6.772121906280518

Token 53: 'ause' (ID: 1597)
  Prédit: 'ause'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ause' → logprob: -0.21750293672084808
    2. 'a' → logprob: -2.0925028324127197
    3. ')' → logprob: -2.7175028324127197
    4. '(' → logprob: -6.342503070831299
    5. 'aus' → logprob: -7.342503070831299
    6. 'au' → logprob: -7.467503070831299
    7. ')(' → logprob: -7.717503070831299
    8. ')**' → logprob: -8.21750259399414
    9. ')_' → logprob: -8.21750259399414
    10. ')a' → logprob: -8.71750259399414

Token 54: ')|(' (ID: 148376)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.2200749754119897e-06
    2. '):' → logprob: -14.250001907348633
    3. 's' → logprob: -14.750001907348633
    4. '')' → logprob: -15.500001907348633
    5. ' )' → logprob: -15.875001907348633
    6. '[' → logprob: -16.375001907348633
    7. '   ' → logprob: -16.500001907348633
    8. ')
' → logprob: -16.625001907348633
    9. '|' → logprob: -16.875001907348633
    10. '))' → logprob: -17.000001907348633

Token 55: 'expression' (ID: 61248)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09743590652942657
    2. 's' → logprob: -2.47243595123291
    3. 'c' → logprob: -5.84743595123291
    4. '(' → logprob: -6.34743595123291
    5. 'cl' → logprob: -6.34743595123291
    6. 'e' → logprob: -8.09743595123291
    7. ' clause' → logprob: -8.09743595123291
    8. ' )' → logprob: -8.09743595123291
    9. '')' → logprob: -8.09743595123291
    10. 'cla' → logprob: -8.72243595123291

Token 56: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00035238542477600276
    2. '):' → logprob: -8.00035285949707
    3. ':' → logprob: -11.25035285949707
    4. '   ' → logprob: -13.87535285949707
    5. ')
' → logprob: -14.12535285949707
    6. '')' → logprob: -14.50035285949707
    7. ' )' → logprob: -15.50035285949707
    8. '```' → logprob: -15.50035285949707
    9. ')return' → logprob: -15.62535285949707
    10. 's' → logprob: -15.62535285949707

Token 57: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.043670520186424255
    2. ':' → logprob: -4.543670654296875
    3. ' ' → logprob: -4.918670654296875
    4. ')' → logprob: -5.293670654296875
    5. 'i' → logprob: -5.918670654296875
    6. '    ' → logprob: -5.918670654296875
    7. '```' → logprob: -5.918670654296875
    8. '_' → logprob: -6.168670654296875
    9. 'n' → logprob: -6.293670654296875
    10. ',' → logprob: -7.293670654296875

Token 58: ' clauses' (ID: 99572)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02770848199725151
    2. ' ' → logprob: -4.902708530426025
    3. 'i' → logprob: -5.652708530426025
    4. '    ' → logprob: -5.652708530426025
    5. '```' → logprob: -6.527708530426025
    6. 'n' → logprob: -6.527708530426025
    7. ':' → logprob: -6.652708530426025
    8. ')' → logprob: -7.027708530426025
    9. '[' → logprob: -7.027708530426025
    10. '(' → logprob: -7.152708530426025

Token 59: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22620661556720734
    2. '=' → logprob: -1.601206660270691
    3. '.' → logprob: -8.22620677947998
    4. '_' → logprob: -8.47620677947998
    5. 's' → logprob: -9.22620677947998
    6. '[' → logprob: -10.10120677947998
    7. '[:]' → logprob: -10.10120677947998
    8. ' ' → logprob: -10.35120677947998
    9. ')' → logprob: -10.35120677947998
    10. 'space' → logprob: -10.97620677947998

Token 60: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.16052357852458954
    2. ' []' → logprob: -1.910523533821106
    3. '[' → logprob: -8.285523414611816
    4. ' [' → logprob: -10.410523414611816
    5. '[]}' → logprob: -11.535523414611816
    6. '[]>' → logprob: -12.660523414611816
    7. '[s' → logprob: -13.660523414611816
    8. ' [];' → logprob: -14.285523414611816
    9. '[])' → logprob: -14.410523414611816
    10. 's' → logprob: -14.910523414611816

Token 61: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03785084933042526
    2. 'i' → logprob: -4.787850856781006
    3. ' i' → logprob: -4.787850856781006
    4. '    ' → logprob: -4.912850856781006
    5. '    
' → logprob: -5.912850856781006
    6. ' ' → logprob: -5.912850856781006
    7. 'for' → logprob: -6.287850856781006
    8. ' for' → logprob: -6.662850856781006
    9. 'n' → logprob: -7.287850856781006
    10. '  ' → logprob: -7.537850856781006

Token 62: ' i' (ID: 575)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -1.1553741693496704
    2. 'i' (adapté à ' i') → logprob: -1.5303741693496704
    3. 'for' → logprob: -1.9053741693496704
    4. '   ' → logprob: -2.155374050140381
    5. ' pos' → logprob: -2.405374050140381
    6. ' for' → logprob: -3.155374050140381
    7. ' i' → logprob: -3.155374050140381
    8. 'if' → logprob: -4.905374050140381
    9. 'idx' → logprob: -5.530374050140381
    10. 'while' → logprob: -5.655374050140381

Token 63: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4934598505496979
    2. '=' → logprob: -0.9934598207473755
    3. 'n' → logprob: -4.493459701538086
    4. ' ' → logprob: -5.618459701538086
    5. 'f' → logprob: -6.368459701538086
    6. 's' → logprob: -7.118459701538086
    7. ' +=' → logprob: -7.493459701538086
    8. 'nd' → logprob: -7.868459701538086
    9. 'nt' → logprob: -8.493459701538086
    10. ' n' → logprob: -8.618459701538086

Token 64: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.38836726546287537
    2. ' ' → logprob: -1.1383672952651978
    3. '1' → logprob: -6.513367176055908
    4. '2' → logprob: -11.763367652893066
    5. '3' → logprob: -14.013367652893066
    6. '<|end|>' → logprob: -14.575867652893066
    7. '  ' → logprob: -14.638367652893066
    8. ' len' → logprob: -15.075867652893066
    9. '4' → logprob: -15.388367652893066
    10. ' s' → logprob: -15.638367652893066

Token 65: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0006776464288122952
    2. '1' → logprob: -7.875677585601807
    3. ' ' → logprob: -8.125678062438965
    4. '2' → logprob: -14.000678062438965
    5. '   ' → logprob: -15.625678062438965
    6. '3' → logprob: -16.12567710876465
    7. '```' → logprob: -16.12567710876465
    8. 'i' → logprob: -16.31317710876465
    9. '  ' → logprob: -16.62567710876465
    10. 'len' → logprob: -16.81317710876465

Token 66: '
' (ID: 198)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.6984243392944336
    2. ' ' → logprob: -1.9484243392944336
    3. '   ' → logprob: -2.1984243392944336
    4. 'while' → logprob: -2.3234243392944336
    5. '<|end|>' → logprob: -2.3234243392944336
    6. '  ' → logprob: -4.323424339294434
    7. '
' → logprob: -4.948424339294434
    8. ',' → logprob: -5.323424339294434
    9. 'While' → logprob: -5.573424339294434
    10. '    ' → logprob: -5.573424339294434

Token 67: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8784257769584656
    2. '<|end|>' → logprob: -1.2534258365631104
    3. ' while' → logprob: -1.6284258365631104
    4. '   ' → logprob: -3.1284258365631104
    5. 'while' → logprob: -3.7534258365631104
    6. '  ' → logprob: -5.003425598144531
    7. '
' → logprob: -5.253425598144531
    8. ',' → logprob: -5.378425598144531
    9. ' 
' → logprob: -6.003425598144531
    10. ')' → logprob: -6.003425598144531

Token 68: ' n' (ID: 297)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.06715328246355057
    2. 'while' → logprob: -2.817153215408325
    3. 'n' (adapté à ' n') → logprob: -5.442153453826904
    4. ' n' → logprob: -7.317153453826904
    5. ' ' → logprob: -9.567152976989746
    6. 'w' → logprob: -10.692152976989746
    7. ' length' → logprob: -11.067152976989746
    8. '   ' → logprob: -11.067152976989746
    9. 's' → logprob: -11.567152976989746
    10. 'wh' → logprob: -12.067152976989746

Token 69: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4130144715309143
    2. ' =' → logprob: -1.2880144119262695
    3. '<|end|>' → logprob: -3.0380144119262695
    4. '=len' → logprob: -4.7880144119262695
    5. ' ' → logprob: -6.4130144119262695
    6. ')' → logprob: -6.5380144119262695
    7. '>' → logprob: -6.5380144119262695
    8. '  ' → logprob: -8.03801441192627
    9. '<|end|>' → logprob: -8.16301441192627
    10. ' >' → logprob: -8.28801441192627

Token 70: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.029750604182481766
    2. 'len' → logprob: -3.5297505855560303
    3. '=len' → logprob: -16.65475082397461
    4. '(len' → logprob: -16.77975082397461
    5. ' ' → logprob: -18.65475082397461
    6. '	len' → logprob: -18.90475082397461
    7. '[len' → logprob: -19.15475082397461
    8. '<len' → logprob: -19.15475082397461
    9. ',len' → logprob: -20.02975082397461
    10. '```' → logprob: -20.90475082397461

Token 71: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.00043448375072330236
    2. '(' → logprob: -7.750434398651123
    3. 's' → logprob: -12.625434875488281
    4. ' (' → logprob: -14.500434875488281
    5. '(
' → logprob: -17.87543487548828
    6. ')' → logprob: -18.12543487548828
    7. ' s' → logprob: -18.75043487548828
    8. '(n' → logprob: -18.87543487548828
    9. ' ' → logprob: -20.12543487548828
    10. '(S' → logprob: -20.50043487548828

Token 72: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0683535037969705e-05
    2. ' )' → logprob: -12.12501049041748
    3. ')
' → logprob: -13.37501049041748
    4. '):' → logprob: -14.00001049041748
    5. ')n' → logprob: -14.50001049041748
    6. ')i' → logprob: -14.87501049041748
    7. ')s' → logprob: -15.25001049041748
    8. '')' → logprob: -15.50001049041748
    9. '   ' → logprob: -15.62501049041748
    10. 's' → logprob: -15.75001049041748

Token 73: '   ' (ID: 271)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.4491824209690094
    2. '   ' → logprob: -2.0741825103759766
    3. 'while' → logprob: -2.4491825103759766
    4. '
' → logprob: -2.5741825103759766
    5. ' 
' → logprob: -3.4491825103759766
    6. '    
' → logprob: -4.199182510375977
    7. '   
' → logprob: -4.824182510375977
    8. ' ' → logprob: -5.074182510375977
    9. '<|end|>' → logprob: -5.949182510375977
    10. '```' → logprob: -6.074182510375977

Token 74: ' while' (ID: 2049)
  Prédit: ' while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.16308006644248962
    2. 'while' (adapté à ' while') → logprob: -1.913080096244812
    3. '   ' → logprob: -6.413080215454102
    4. 'def' → logprob: -7.538080215454102
    5. 'wh' → logprob: -7.913080215454102
    6. '```' → logprob: -9.038080215454102
    7. 'w' → logprob: -10.413080215454102
    8. ' def' → logprob: -10.538080215454102
    9. 'While' → logprob: -10.913080215454102
    10. ' w' → logprob: -11.163080215454102

Token 75: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.02711312100291252
    2. 'i' → logprob: -3.652113199234009
    3. ' ' → logprob: -7.40211296081543
    4. ' True' → logprob: -9.40211296081543
    5. '  ' → logprob: -10.27711296081543
    6. '	i' → logprob: -10.27711296081543
    7. 'True' → logprob: -10.90211296081543
    8. '    ' → logprob: -11.40211296081543
    9. 'n' → logprob: -12.52711296081543
    10. ' n' → logprob: -12.77711296081543

Token 76: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.0802067369222641
    2. '<' → logprob: -2.5802066326141357
    3. ' <=' → logprob: -7.080206871032715
    4. ' ' → logprob: -8.455206871032715
    5. '<=' → logprob: -8.455206871032715
    6. '<len' → logprob: -10.455206871032715
    7. '[' → logprob: -12.455206871032715
    8. '<n' → logprob: -12.455206871032715
    9. ' <
' → logprob: -13.830206871032715
    10. '<s' → logprob: -13.830206871032715

Token 77: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.048587825149297714
    2. 'n' → logprob: -3.0485877990722656
    3. '	n' → logprob: -15.173587799072266
    4. ' ' → logprob: -15.673587799072266
    5. ' ' → logprob: -18.173587799072266
    6. '_n' → logprob: -18.173587799072266
    7. ')n' → logprob: -18.798587799072266
    8. '```' → logprob: -19.298587799072266
    9. '<n' → logprob: -19.548587799072266
    10. ' н' → logprob: -20.173587799072266

Token 78: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0029503628611564636
    2. ' :' → logprob: -5.877950191497803
    3. ':
' → logprob: -9.252950668334961
    4. ' and' → logprob: -10.377950668334961
    5. ':**' → logprob: -12.002950668334961
    6. '):' → logprob: -12.127950668334961
    7. ' :
' → logprob: -12.752950668334961
    8. 'and' → logprob: -14.377950668334961
    9. '   ' → logprob: -14.752950668334961
    10. ':s' → logprob: -15.002950668334961

Token 79: '       ' (ID: 309)
  Prédit: '    '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '    ' → logprob: -0.8041794300079346
    2. '       ' → logprob: -1.3041794300079346
    3. '   ' → logprob: -2.0541794300079346
    4. ' ' → logprob: -2.0541794300079346
    5. ' if' → logprob: -5.1791791915893555
    6. '     
' → logprob: -5.3041791915893555
    7. '  ' → logprob: -5.6791791915893555
    8. '     ' → logprob: -6.1791791915893555
    9. '    
' → logprob: -6.4291791915893555
    10. '        ' → logprob: -6.6791791915893555

Token 80: ' if' (ID: 538)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.22879600524902344
    2. 'if' (adapté à ' if') → logprob: -2.3537960052490234
    3. ' if' → logprob: -2.8537960052490234
    4. '   ' → logprob: -3.6037960052490234
    5. '    ' → logprob: -4.353796005249023
    6. '  ' → logprob: -5.103796005249023
    7. '       ' → logprob: -5.853796005249023
    8. 'i' → logprob: -6.728796005249023
    9. 's' → logprob: -7.978796005249023
    10. '        ' → logprob: -8.478796005249023

Token 81: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.04869455844163895
    2. 's' → logprob: -3.048694610595703
    3. ' (' → logprob: -9.798694610595703
    4. ' ' → logprob: -11.173694610595703
    5. '(' → logprob: -11.423694610595703
    6. '(s' → logprob: -11.673694610595703
    7. '	s' → logprob: -11.923694610595703
    8. ' ' → logprob: -12.298694610595703
    9. ''s' → logprob: -13.173694610595703
    10. '  ' → logprob: -14.236194610595703

Token 82: '[i' (ID: 1768)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.2208203375339508
    2. '[i' → logprob: -1.7208203077316284
    3. ' ==' → logprob: -4.720820426940918
    4. '==' → logprob: -4.845820426940918
    5. '(' → logprob: -6.970820426940918
    6. '=' → logprob: -8.345820426940918
    7. '(i' → logprob: -8.470820426940918
    8. ' ' → logprob: -8.720820426940918
    9. '[(' → logprob: -8.720820426940918
    10. ' (' → logprob: -8.845820426940918

Token 83: ']' (ID: 60)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.6029577255249023
    2. '==' → logprob: -0.8529577255249023
    3. '(' → logprob: -4.602957725524902
    4. '=='' → logprob: -5.102957725524902
    5. '=' → logprob: -5.352957725524902
    6. ''' → logprob: -6.477957725524902
    7. ']==' → logprob: -7.352957725524902
    8. ')' → logprob: -7.352957725524902
    9. ']' → logprob: -7.727957725524902
    10. ' (' → logprob: -8.102957725524902

Token 84: ' ==' (ID: 951)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.05557207763195038
    2. ''' → logprob: -3.430572032928467
    3. '=' → logprob: -4.930572032928467
    4. '==' → logprob: -4.930572032928467
    5. ' ==' → logprob: -5.805572032928467
    6. ' (' → logprob: -5.805572032928467
    7. '"' → logprob: -7.430572032928467
    8. '('' → logprob: -8.430572509765625
    9. '[' → logprob: -9.055572509765625
    10. ' '('' → logprob: -9.180572509765625

Token 85: ' '('' (ID: 87284)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0006031917873769999
    2. '(' → logprob: -7.875603199005127
    3. '"' → logprob: -8.750602722167969
    4. ' '('' → logprob: -9.875602722167969
    5. ''(' → logprob: -11.875602722167969
    6. '('' → logprob: -12.500602722167969
    7. ' '' → logprob: -14.125602722167969
    8. ' (' → logprob: -14.250602722167969
    9. '`' → logprob: -15.250602722167969
    10. ' ' → logprob: -15.875602722167969

Token 86: ':
' (ID: 734)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07024673372507095
    2. ':' → logprob: -3.445246696472168
    3. '<|end|>' → logprob: -3.820246696472168
    4. '#' → logprob: -4.945246696472168
    5. '(' → logprob: -6.070246696472168
    6. '       ' → logprob: -6.570246696472168
    7. '):' → logprob: -6.820246696472168
    8. ',' → logprob: -7.570246696472168
    9. '<|end|>' → logprob: -7.820246696472168
    10. ']' → logprob: -8.195246696472168

Token 87: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23365913331508636
    2. '           ' → logprob: -1.9836591482162476
    3. 'i' → logprob: -3.858659029006958
    4. ' i' → logprob: -4.358659267425537
    5. '<|end|>' → logprob: -4.483659267425537
    6. '   ' → logprob: -4.608659267425537
    7. '        ' → logprob: -4.858659267425537
    8. '<|end|>' → logprob: -6.108659267425537
    9. ')' → logprob: -6.233659267425537
    10. '    ' → logprob: -7.483659267425537

Token 88: ' j' (ID: 441)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.38743293285369873
    2. ' i' → logprob: -2.2624330520629883
    3. ')' → logprob: -2.6374330520629883
    4. 'i' → logprob: -3.0124330520629883
    5. '        ' → logprob: -3.2624330520629883
    6. '       ' → logprob: -3.8874330520629883
    7. '(' → logprob: -4.387433052062988
    8. '   ' → logprob: -5.012433052062988
    9. '    ' → logprob: -5.137433052062988
    10. '<|end|>' → logprob: -5.887433052062988

Token 89: ' =' (ID: 314)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6557739973068237
    2. '=' → logprob: -2.0307741165161133
    3. ' ' → logprob: -2.1557741165161133
    4. '<|end|>' → logprob: -2.4057741165161133
    5. ' =' → logprob: -2.6557741165161133
    6. ' +=' → logprob: -3.1557741165161133
    7. '+=' → logprob: -3.5307741165161133
    8. '<|end|>' → logprob: -7.655774116516113
    9. ' +' → logprob: -7.780774116516113
    10. '++' → logprob: -8.905774116516113

Token 90: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.23116084933280945
    2. ' i' → logprob: -1.6061608791351318
    3. ' s' → logprob: -5.856160640716553
    4. 's' → logprob: -5.856160640716553
    5. ' ' → logprob: -13.481161117553711
    6. '<|end|>' → logprob: -13.731161117553711
    7. '1' → logprob: -13.981161117553711
    8. '_i' → logprob: -14.731161117553711
    9. '```' → logprob: -14.731161117553711
    10. ')' → logprob: -14.856161117553711

Token 91: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.01615249365568161
    2. ' +' → logprob: -4.391152381896973
    3. '<|end|>' → logprob: -5.641152381896973
    4. '1' → logprob: -9.766152381896973
    5. ' ' → logprob: -11.266152381896973
    6. '<|end|>' → logprob: -11.516152381896973
    7. '+
' → logprob: -13.266152381896973
    8. '0' → logprob: -13.766152381896973
    9. '+j' → logprob: -14.016152381896973
    10. '2' → logprob: -14.141152381896973

Token 92: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.005234713666141033
    2. ' ' → logprob: -5.255234718322754
    3. '2' → logprob: -14.755234718322754
    4. '   ' → logprob: -16.005233764648438
    5. '```' → logprob: -16.130233764648438
    6. '<|end|>' → logprob: -16.380233764648438
    7. '  ' → logprob: -16.817733764648438
    8. '(' → logprob: -17.317733764648438
    9. '7' → logprob: -17.317733764648438
    10. '`' → logprob: -17.942733764648438

Token 93: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00018089536752086133
    2. ' ' → logprob: -8.625181198120117
    3. '```' → logprob: -14.250181198120117
    4. 's' → logprob: -15.500181198120117
    5. '2' → logprob: -16.125181198120117
    6. '0' → logprob: -16.875181198120117
    7. '   ' → logprob: -17.125181198120117
    8. '`' → logprob: -17.187681198120117
    9. '  ' → logprob: -17.562681198120117
    10. '4' → logprob: -17.625181198120117

Token 94: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 95: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 96: ' cnt' (ID: 27340)
  Prédit: 'paren'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'paren' → logprob: -0.737574577331543
    2. 'while' → logprob: -1.737574577331543
    3. 'depth' → logprob: -1.737574577331543
    4. 'count' → logprob: -2.612574577331543
    5. 'balance' → logprob: -2.612574577331543
    6. 'par' → logprob: -5.237574577331543
    7. 'stack' → logprob: -5.362574577331543
    8. 'cnt' (adapté à ' cnt') → logprob: -5.487574577331543
    9. 'level' → logprob: -5.612574577331543
    10. ' while' → logprob: -6.987574577331543

Token 97: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.22776979207992554
    2. ' =' → logprob: -1.6027698516845703
    3. '<|end|>' → logprob: -6.10276985168457
    4. ')' → logprob: -9.85276985168457
    5. '(' → logprob: -10.47776985168457
    6. ' ' → logprob: -11.22776985168457
    7. '_' → logprob: -12.10276985168457
    8. ',' → logprob: -12.35276985168457
    9. '  ' → logprob: -12.35276985168457
    10. '<|end|>' → logprob: -13.47776985168457

Token 98: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.014194886200129986
    2. ' ' → logprob: -4.264194965362549
    3. '0' → logprob: -10.38919448852539
    4. '  ' → logprob: -14.88919448852539
    5. '   ' → logprob: -15.26419448852539
    6. ' ' → logprob: -16.76419448852539
    7. '```' → logprob: -17.76419448852539
    8. ')' → logprob: -17.88919448852539
    9. '(' → logprob: -18.01419448852539
    10. '' → logprob: -18.20169448852539

Token 99: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.064297824399546e-05
    2. ' ' → logprob: -9.875070571899414
    3. '0' → logprob: -10.875070571899414
    4. '(' → logprob: -16.625070571899414
    5. '   ' → logprob: -16.625070571899414
    6. '  ' → logprob: -17.062570571899414
    7. '```' → logprob: -17.562570571899414
    8. ')' → logprob: -18.187570571899414
    9. '' → logprob: -18.812570571899414
    10. '۱' → logprob: -19.500070571899414

Token 100: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 101: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 102: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.10088109225034714
    2. ' while' → logprob: -2.3508810997009277
    3. '           ' → logprob: -8.10088062286377
    4. 'While' → logprob: -9.10088062286377
    5. '	while' → logprob: -9.60088062286377
    6. ' ' → logprob: -9.72588062286377
    7. '<|end|>' → logprob: -10.35088062286377
    8. '       ' → logprob: -10.60088062286377
    9. ' While' → logprob: -10.85088062286377
    10. '   ' → logprob: -11.10088062286377

Token 103: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.41380101442337036
    2. 'j' → logprob: -1.6638009548187256
    3. 'cnt' → logprob: -2.2888009548187256
    4. ' cnt' → logprob: -3.0388009548187256
    5. '(cnt' → logprob: -9.538801193237305
    6. ' ' → logprob: -10.288801193237305
    7. ' not' → logprob: -10.413801193237305
    8. '	cnt' → logprob: -11.413801193237305
    9. '	j' → logprob: -12.538801193237305
    10. ' s' → logprob: -13.038801193237305

Token 104: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.41344088315963745
    2. '<' → logprob: -1.1634409427642822
    3. '<n' → logprob: -3.6634409427642822
    4. '<len' → logprob: -8.163440704345703
    5. '<s' → logprob: -8.538440704345703
    6. '<=' → logprob: -10.538440704345703
    7. '<count' → logprob: -11.413440704345703
    8. ' ' → logprob: -11.663440704345703
    9. ' <=' → logprob: -11.663440704345703
    10. '<N' → logprob: -12.163440704345703

Token 105: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.12692862749099731
    2. ' n' → logprob: -2.1269285678863525
    3. '	n' → logprob: -14.751928329467773
    4. ')n' → logprob: -16.251928329467773
    5. ' ' → logprob: -17.251928329467773
    6. '<n' → logprob: -18.251928329467773
    7. '```' → logprob: -18.376928329467773
    8. '   ' → logprob: -18.501928329467773
    9. ' н' → logprob: -18.626928329467773
    10. '_n' → logprob: -18.626928329467773

Token 106: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.003187339985743165
    2. 'and' → logprob: -5.75318717956543
    3. ' ' → logprob: -11.62818717956543
    4. ':
' → logprob: -15.12818717956543
    5. '	and' → logprob: -16.37818717956543
    6. '           ' → logprob: -17.00318717956543
    7. ' &&' → logprob: -17.12818717956543
    8. '<|end|>' → logprob: -17.25318717956543
    9. '    ' → logprob: -17.62818717956543
    10. '            ' → logprob: -17.62818717956543

Token 107: ' cnt' (ID: 27340)
  Prédit: ' cnt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cnt' → logprob: -0.025015339255332947
    2. 'cnt' → logprob: -3.775015354156494
    3. '(cnt' → logprob: -6.400015354156494
    4. ' s' → logprob: -9.525014877319336
    5. ' not' → logprob: -11.400014877319336
    6. '	cnt' → logprob: -11.650014877319336
    7. ' (' → logprob: -12.025014877319336
    8. 's' → logprob: -12.650014877319336
    9. '_cnt' → logprob: -13.025014877319336
    10. '[cnt' → logprob: -13.775014877319336

Token 108: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.2674301564693451
    2. '>' → logprob: -1.5174301862716675
    3. ' <' → logprob: -5.267430305480957
    4. ' !=' → logprob: -5.517430305480957
    5. '<|end|>' → logprob: -5.517430305480957
    6. '!=' → logprob: -6.642430305480957
    7. '<' → logprob: -7.517430305480957
    8. ' +=' → logprob: -9.517430305480957
    9. ' ' → logprob: -9.767430305480957
    10. '<|end|>' → logprob: -9.892430305480957

Token 109: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.4740777015686035
    2. ' ' → logprob: -0.9740777015686035
    3. '<|end|>' → logprob: -15.224077224731445
    4. '  ' → logprob: -15.349077224731445
    5. '1' → logprob: -16.724077224731445
    6. '   ' → logprob: -17.099077224731445
    7. ' ' → logprob: -17.099077224731445
    8. '    ' → logprob: -17.849077224731445
    9. '<|end|>' → logprob: -17.974077224731445
    10. '```' → logprob: -18.661577224731445

Token 110: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.836499985889532e-05
    2. ' ' → logprob: -9.7500581741333
    3. '1' → logprob: -18.500059127807617
    4. '۰' → logprob: -19.625059127807617
    5. ' ' → logprob: -20.500059127807617
    6. '  ' → logprob: -20.500059127807617
    7. '<|end|>' → logprob: -20.625059127807617
    8. ' ' → logprob: -20.875059127807617
    9. '  ' → logprob: -21.312559127807617
    10. '    ' → logprob: -21.500059127807617

Token 111: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.03459387645125389
    2. ':' → logprob: -3.4095938205718994
    3. ' and' → logprob: -8.28459358215332
    4. '       ' → logprob: -8.65959358215332
    5. '<|end|>' → logprob: -8.78459358215332
    6. '):
' → logprob: -9.15959358215332
    7. '           ' → logprob: -9.65959358215332
    8. '   ' → logprob: -10.15959358215332
    9. ' :
' → logprob: -10.15959358215332
    10. '               ' → logprob: -10.15959358215332

Token 112: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.46432816982269287
    2. ' if' → logprob: -1.0893281698226929
    3. ' ' → logprob: -3.8393282890319824
    4. '<|end|>' → logprob: -5.214328289031982
    5. 'if' → logprob: -5.589328289031982
    6. '   ' → logprob: -6.464328289031982
    7. '           ' → logprob: -7.089328289031982
    8. '<|end|>' → logprob: -7.589328289031982
    9. '                ' → logprob: -8.339327812194824
    10. '            ' → logprob: -8.464327812194824

Token 113: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.10036927461624146
    2. 'if' (adapté à ' if') → logprob: -2.3503692150115967
    3. ' ' → logprob: -9.350369453430176
    4. ' 
' → logprob: -11.100369453430176
    5. '                ' → logprob: -11.350369453430176
    6. '               ' → logprob: -11.725369453430176
    7. '    ' → logprob: -11.850369453430176
    8. '   ' → logprob: -12.225369453430176
    9. '                   ' → logprob: -12.225369453430176
    10. '            ' → logprob: -12.350369453430176

Token 114: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.0141702089458704
    2. 's' → logprob: -4.264170169830322
    3. ' ' → logprob: -12.13917064666748
    4. '	s' → logprob: -14.01417064666748
    5. ' ' → logprob: -16.014169692993164
    6. '  ' → logprob: -16.264169692993164
    7. '_s' → logprob: -16.389169692993164
    8. '    ' → logprob: -17.139169692993164
    9. ''s' → logprob: -17.139169692993164
    10. '(' → logprob: -17.139169692993164

Token 115: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -6.885492621222511e-05
    2. '[' → logprob: -9.625068664550781
    3. 'j' → logprob: -13.125068664550781
    4. '[i' → logprob: -14.625068664550781
    5. '```' → logprob: -16.00006866455078
    6. '[
' → logprob: -16.12506866455078
    7. '[js' → logprob: -18.00006866455078
    8. '`' → logprob: -18.25006866455078
    9. ' [' → logprob: -18.37506866455078
    10. '[q' → logprob: -19.50006866455078

Token 116: ']' (ID: 60)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.5014861822128296
    2. ' ==' → logprob: -1.0014861822128296
    3. '(' → logprob: -3.626486301422119
    4. ' (' → logprob: -9.126485824584961
    5. '=='' → logprob: -9.751485824584961
    6. ''' → logprob: -9.876485824584961
    7. '=' → logprob: -9.876485824584961
    8. ')' → logprob: -10.251485824584961
    9. ']==' → logprob: -10.501485824584961
    10. '()==' → logprob: -10.751485824584961

Token 117: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.2337961494922638
    2. '(' → logprob: -1.6087961196899414
    3. ''' → logprob: -5.108796119689941
    4. ' ==' → logprob: -6.358796119689941
    5. '()==' → logprob: -8.483796119689941
    6. '"' → logprob: -8.608796119689941
    7. '=' → logprob: -9.608796119689941
    8. '=='' → logprob: -10.358796119689941
    9. '==(' → logprob: -10.733796119689941
    10. ' (' → logprob: -10.858796119689941

Token 118: ' '('' (ID: 87284)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.023477233946323395
    2. '(' → logprob: -3.77347731590271
    3. ' '('' → logprob: -8.773477554321289
    4. '('' → logprob: -10.398477554321289
    5. '"' → logprob: -10.523477554321289
    6. '')' → logprob: -11.398477554321289
    7. ''(' → logprob: -12.398477554321289
    8. ' (' → logprob: -12.898477554321289
    9. ')' → logprob: -14.273477554321289
    10. '`' → logprob: -14.273477554321289

Token 119: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1853913962841034
    2. ':
' → logprob: -2.060391426086426
    3. ' or' → logprob: -3.935391426086426
    4. ')' → logprob: -4.060391426086426
    5. '<|end|>' → logprob: -6.435391426086426
    6. '                   ' → logprob: -6.685391426086426
    7. '):' → logprob: -7.560391426086426
    8. '               ' → logprob: -8.185391426086426
    9. 'cnt' → logprob: -8.310391426086426
    10. '):
' → logprob: -8.435391426086426

Token 120: '                   ' (ID: 699)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.2671544849872589
    2. ' cnt' → logprob: -2.0171544551849365
    3. '                   ' → logprob: -3.0171544551849365
    4. '               ' → logprob: -4.142154693603516
    5. '+' → logprob: -4.517154693603516
    6. '[cnt' → logprob: -5.017154693603516
    7. '(cnt' → logprob: -5.267154693603516
    8. '<|end|>' → logprob: -5.517154693603516
    9. '	cnt' → logprob: -5.642154693603516
    10. ' 
' → logprob: -6.267154693603516

Token 121: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' (adapté à ' cnt') → logprob: -0.1270989179611206
    2. ' cnt' → logprob: -2.12709903717041
    3. '	cnt' → logprob: -9.37709903717041
    4. '(cnt' → logprob: -9.62709903717041
    5. '[cnt' → logprob: -11.12709903717041
    6. '_cnt' → logprob: -12.87709903717041
    7. '
' → logprob: -13.75209903717041
    8. ' 
' → logprob: -14.37709903717041
    9. 'count' → logprob: -15.25209903717041
    10. '                   ' → logprob: -15.37709903717041

Token 122: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.13554120063781738
    2. '+' → logprob: -2.1355412006378174
    3. ' +=' → logprob: -4.760540962219238
    4. ' +' → logprob: -11.510540962219238
    5. '+='' → logprob: -13.260540962219238
    6. ']+=' → logprob: -13.635540962219238
    7. '+="' → logprob: -13.885540962219238
    8. '++' → logprob: -14.635540962219238
    9. '=' → logprob: -15.135540962219238
    10. '+=(' → logprob: -15.260540962219238

Token 123: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2519298195838928
    2. ' ' → logprob: -1.501929759979248
    3. '<|end|>' → logprob: -14.126930236816406
    4. '```' → logprob: -18.251930236816406
    5. ' ' → logprob: -19.126930236816406
    6. '+' → logprob: -20.501930236816406
    7. '۱' → logprob: -20.501930236816406
    8. '  ' → logprob: -20.564430236816406
    9. ')' → logprob: -20.626930236816406
    10. ' +' → logprob: -20.814430236816406

Token 124: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.941850526549388e-06
    2. ' ' → logprob: -11.750007629394531
    3. '<|end|>' → logprob: -17.75000762939453
    4. '```' → logprob: -20.75000762939453
    5. '-' → logprob: -21.75000762939453
    6. '+' → logprob: -22.00000762939453
    7. ')' → logprob: -22.25000762939453
    8. '
' → logprob: -22.37500762939453
    9. '۱' → logprob: -22.62500762939453
    10. '(' → logprob: -23.00000762939453

Token 125: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 126: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.005246918182820082
    2. 'elif' → logprob: -6.005247116088867
    3. '```' → logprob: -7.255247116088867
    4. '<|end|>' → logprob: -7.505247116088867
    5. 'j' → logprob: -7.755247116088867
    6. '                   ' → logprob: -7.880247116088867
    7. '                
' → logprob: -8.630247116088867
    8. '           ' → logprob: -9.005247116088867
    9. '
' → logprob: -9.380247116088867
    10. '                ' → logprob: -9.630247116088867

Token 127: ' elif' (ID: 9497)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' (adapté à ' elif') → logprob: -0.12851327657699585
    2. ' elif' → logprob: -2.1285133361816406
    3. '               ' → logprob: -6.503513336181641
    4. ' if' → logprob: -10.25351333618164
    5. 'if' → logprob: -10.75351333618164
    6. '	elif' → logprob: -12.12851333618164
    7. '```' → logprob: -12.12851333618164
    8. '
' → logprob: -12.37851333618164
    9. ' ' → logprob: -12.50351333618164
    10. 'j' → logprob: -13.37851333618164

Token 128: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.06995810568332672
    2. 's' → logprob: -2.694958209991455
    3. ')' → logprob: -10.944957733154297
    4. '')' → logprob: -12.944957733154297
    5. ' ')'' → logprob: -14.694957733154297
    6. ')s' → logprob: -14.944957733154297
    7. ' )' → logprob: -15.069957733154297
    8. ' ')' → logprob: -15.319957733154297
    9. ' ' → logprob: -16.069957733154297
    10. '	s' → logprob: -16.444957733154297

Token 129: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -7.703443770878948e-06
    2. '[' → logprob: -11.875007629394531
    3. '[
' → logprob: -15.250007629394531
    4. '```' → logprob: -16.00000762939453
    5. 'j' → logprob: -16.12500762939453
    6. ']' → logprob: -16.75000762939453
    7. '][' → logprob: -16.75000762939453
    8. '[i' → logprob: -17.87500762939453
    9. ' [' → logprob: -18.87500762939453
    10. '	j' → logprob: -19.00000762939453

Token 130: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0011687950463965535
    2. ']==' → logprob: -6.876168727874756
    3. '==' → logprob: -9.626169204711914
    4. '']' → logprob: -10.001169204711914
    5. ' ==' → logprob: -11.001169204711914
    6. ' ]' → logprob: -13.001169204711914
    7. '[' → logprob: -13.126169204711914
    8. '=' → logprob: -13.501169204711914
    9. ']=='' → logprob: -14.376169204711914
    10. ']=' → logprob: -14.876169204711914

Token 131: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.3765560984611511
    2. ' ==' → logprob: -1.251556158065796
    3. ']' → logprob: -4.001555919647217
    4. '=' → logprob: -5.876555919647217
    5. ''' → logprob: -6.126555919647217
    6. ')' → logprob: -6.126555919647217
    7. '']' → logprob: -6.376555919647217
    8. ']==' → logprob: -8.251556396484375
    9. '')' → logprob: -8.876556396484375
    10. '[' → logprob: -10.126556396484375

Token 132: ' ')' (ID: 35910)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.0011321206111460924
    2. ')' → logprob: -7.001132011413574
    3. ' ')' → logprob: -8.751132011413574
    4. ''' → logprob: -9.876132011413574
    5. ' ')'' → logprob: -11.501132011413574
    6. '")' → logprob: -14.501132011413574
    7. '']' → logprob: -15.376132011413574
    8. ')'' → logprob: -16.50113296508789
    9. ''):' → logprob: -17.25113296508789
    10. '(' → logprob: -17.50113296508789

Token 133: '':
' (ID: 7669)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.6905742883682251
    2. ':
' → logprob: -0.8155742883682251
    3. '               ' → logprob: -3.4405741691589355
    4. ':' → logprob: -4.8155741691589355
    5. '):
' → logprob: -4.8155741691589355
    6. ''):
' → logprob: -6.1905741691589355
    7. '                       ' → logprob: -6.5655741691589355
    8. ')' → logprob: -6.9405741691589355
    9. '':
' → logprob: -7.1905741691589355
    10. 'cnt' → logprob: -7.4405741691589355

Token 134: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.027148166671395302
    2. '               ' → logprob: -4.277148246765137
    3. ' cnt' → logprob: -4.902148246765137
    4. 'cnt' → logprob: -5.402148246765137
    5. '                       ' → logprob: -7.527148246765137
    6. '           ' → logprob: -9.152148246765137
    7. '                  ' → logprob: -9.902148246765137
    8. ')' → logprob: -10.402148246765137
    9. '	cnt' → logprob: -10.527148246765137
    10. '[cnt' → logprob: -10.527148246765137

Token 135: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' (adapté à ' cnt') → logprob: -0.004091697279363871
    2. ' cnt' → logprob: -5.504091739654541
    3. '	cnt' → logprob: -12.254091262817383
    4. '                   ' → logprob: -12.379091262817383
    5. '[cnt' → logprob: -13.004091262817383
    6. '(cnt' → logprob: -13.254091262817383
    7. '               ' → logprob: -15.129091262817383
    8. '_cnt' → logprob: -17.379091262817383
    9. 'count' → logprob: -18.004091262817383
    10. '                       ' → logprob: -18.629091262817383

Token 136: ' -=' (ID: 12583)
  Prédit: ' -='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.7248679399490356
    2. '-=' → logprob: -0.7248679399490356
    3. '-' → logprob: -3.474867820739746
    4. '                   ' → logprob: -8.599867820739746
    5. '               ' → logprob: -10.974867820739746
    6. '   ' → logprob: -11.099867820739746
    7. '                       ' → logprob: -12.224867820739746
    8. '>' → logprob: -12.474867820739746
    9. '--' → logprob: -12.474867820739746
    10. '                    ' → logprob: -12.599867820739746

Token 137: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5759415030479431
    2. ' ' → logprob: -0.8259415030479431
    3. '<|end|>' → logprob: -13.32594108581543
    4. '```' → logprob: -16.07594108581543
    5. ' ' → logprob: -16.20094108581543
    6. '<|end|>' → logprob: -16.57594108581543
    7. ')' → logprob: -16.57594108581543
    8. '0' → logprob: -17.32594108581543
    9. ' )' → logprob: -18.88844108581543
    10. '۱' → logprob: -19.20094108581543

Token 138: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.493430894101039e-05
    2. ' ' → logprob: -9.500075340270996
    3. '```' → logprob: -18.37507438659668
    4. ')' → logprob: -19.00007438659668
    5. '   ' → logprob: -19.12507438659668
    6. '<|end|>' → logprob: -19.75007438659668
    7. '0' → logprob: -19.81257438659668
    8. '`' → logprob: -21.00007438659668
    9. '۱' → logprob: -21.00007438659668
    10. '
' → logprob: -21.06257438659668

Token 139: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.014098859392106533
    2. '                   ' → logprob: -4.889098644256592
    3. '
' → logprob: -5.889098644256592
    4. '           ' → logprob: -6.514098644256592
    5. ')' → logprob: -7.264098644256592
    6. '<|end|>' → logprob: -8.01409912109375
    7. ':
' → logprob: -8.26409912109375
    8. 'j' → logprob: -8.76409912109375
    9. '                
' → logprob: -8.88909912109375
    10. '       ' → logprob: -9.13909912109375

Token 140: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.002547719981521368
    2. '                   ' → logprob: -6.252547740936279
    3. '           ' → logprob: -8.002547264099121
    4. 'j' → logprob: -9.502547264099121
    5. ')' → logprob: -9.877547264099121
    6. ' j' → logprob: -10.127547264099121
    7. '
' → logprob: -10.627547264099121
    8. '                
' → logprob: -10.752547264099121
    9. '       ' → logprob: -11.502547264099121
    10. '```' → logprob: -11.502547264099121

Token 141: ' j' (ID: 441)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.05472767353057861
    2. '                   ' → logprob: -3.929727554321289
    3. ' j' → logprob: -4.179727554321289
    4. 'j' (adapté à ' j') → logprob: -4.429727554321289
    5. '   ' → logprob: -6.179727554321289
    6. '           ' → logprob: -6.304727554321289
    7. '
' → logprob: -6.429727554321289
    8. '```' → logprob: -9.054727554321289
    9. '	j' → logprob: -9.054727554321289
    10. ')' → logprob: -9.554727554321289

Token 142: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.9033810496330261
    2. ' +=' → logprob: -1.153381109237671
    3. '+' → logprob: -1.278381109237671
    4. '=' → logprob: -8.52838134765625
    5. '++' → logprob: -8.65338134765625
    6. ' +' → logprob: -8.77838134765625
    7. ')' → logprob: -9.27838134765625
    8. ' ' → logprob: -10.27838134765625
    9. '<|end|>' → logprob: -10.40338134765625
    10. ']+=' → logprob: -10.52838134765625

Token 143: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0007099286303855479
    2. ' ' → logprob: -7.2507100105285645
    3. '```' → logprob: -17.625709533691406
    4. '0' → logprob: -19.750709533691406
    5. '۱' → logprob: -20.625709533691406
    6. '   ' → logprob: -20.875709533691406
    7. '１' → logprob: -21.000709533691406
    8. '`' → logprob: -21.438209533691406
    9. ' ' → logprob: -21.500709533691406
    10. '2' → logprob: -22.188209533691406

Token 144: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.375
    3. '```' → logprob: -17.875
    4. '۱' → logprob: -20.125
    5. '１' → logprob: -21.0625
    6. '`' → logprob: -21.1875
    7. '0' → logprob: -21.1875
    8. '
' → logprob: -21.4375
    9. '   ' → logprob: -21.75
    10. '-' → logprob: -21.8125

Token 145: '
' (ID: 198)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.750504732131958
    2. ' 
' → logprob: -0.750504732131958
    3. '       ' → logprob: -3.625504732131958
    4. '<|end|>' → logprob: -4.500504493713379
    5. '
' → logprob: -4.750504493713379
    6. '  
' → logprob: -6.000504493713379
    7. ')' → logprob: -6.125504493713379
    8. '        
' → logprob: -7.375504493713379
    9. '<|end|>' → logprob: -7.750504493713379
    10. '    ' → logprob: -7.875504493713379

Token 146: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7065871357917786
    2. ' ' → logprob: -1.3315870761871338
    3. ' 
' → logprob: -1.7065870761871338
    4. '
' → logprob: -3.831587076187134
    5. ')' → logprob: -4.331587314605713
    6. '           ' → logprob: -5.331587314605713
    7. '   ' → logprob: -5.581587314605713
    8. '  
' → logprob: -5.831587314605713
    9. '    ' → logprob: -6.081587314605713
    10. '<|end|>' → logprob: -6.081587314605713

Token 147: ' clause' (ID: 45470)
  Prédit: ' clause'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' clause' → logprob: -0.13027948141098022
    2. 'cl' → logprob: -3.755279541015625
    3. ' sub' → logprob: -3.880279541015625
    4. ' segment' → logprob: -4.505279541015625
    5. '       ' → logprob: -4.630279541015625
    6. ' fragment' → logprob: -4.755279541015625
    7. ' cl' → logprob: -4.755279541015625
    8. 'sub' → logprob: -4.880279541015625
    9. 'expr' → logprob: -5.130279541015625
    10. '           ' → logprob: -5.255279541015625

Token 148: '_str' (ID: 6182)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08921010792255402
    2. '=' → logprob: -2.589210033416748
    3. '_str' → logprob: -5.089210033416748
    4. 's' → logprob: -5.714210033416748
    5. '_content' → logprob: -8.089210510253906
    6. '_text' → logprob: -8.339210510253906
    7. '_' → logprob: -8.964210510253906
    8. '_s' → logprob: -10.464210510253906
    9. '_string' → logprob: -10.464210510253906
    10. '_part' → logprob: -10.839210510253906

Token 149: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31326422095298767
    2. '=' → logprob: -1.31326425075531
    3. 's' → logprob: -13.188263893127441
    4. '=s' → logprob: -15.063263893127441
    5. ' ' → logprob: -15.438263893127441
    6. ')' → logprob: -16.813264846801758
    7. ',' → logprob: -16.938264846801758
    8. '[' → logprob: -18.563264846801758
    9. '＝' → logprob: -18.938264846801758
    10. '=end' → logprob: -18.938264846801758

Token 150: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.3868711292743683
    2. 's' → logprob: -1.136871099472046
    3. ' ' → logprob: -16.636871337890625
    4. ' ' → logprob: -17.386871337890625
    5. '	s' → logprob: -18.011871337890625
    6. '_s' → logprob: -19.011871337890625
    7. '`s' → logprob: -20.511871337890625
    8. '```' → logprob: -20.636871337890625
    9. '(s' → logprob: -21.136871337890625
    10. '"' → logprob: -21.136871337890625

Token 151: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0001601539261173457
    2. '[' → logprob: -8.750160217285156
    3. 'i' → logprob: -13.500160217285156
    4. '[j' → logprob: -15.875160217285156
    5. '[
' → logprob: -16.375160217285156
    6. ' [' → logprob: -17.125160217285156
    7. '[I' → logprob: -17.625160217285156
    8. '(i' → logprob: -19.000160217285156
    9. ',i' → logprob: -20.125160217285156
    10. '[a' → logprob: -20.125160217285156

Token 152: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.001159504521638155
    2. ':j' → logprob: -7.00115966796875
    3. ' +' → logprob: -8.50115966796875
    4. '+j' → logprob: -10.87615966796875
    5. '1' → logprob: -11.00115966796875
    6. ':' → logprob: -12.00115966796875
    7. ':i' → logprob: -13.25115966796875
    8. '+
' → logprob: -14.00115966796875
    9. 'j' → logprob: -15.87615966796875
    10. '+:' → logprob: -16.37615966796875

Token 153: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -14.375000953674316
    3. '```' → logprob: -15.500000953674316
    4. '0' → logprob: -16.000001907348633
    5. 'i' → logprob: -16.500001907348633
    6. '   ' → logprob: -16.625001907348633
    7. 'j' → logprob: -18.125001907348633
    8. '2' → logprob: -18.750001907348633
    9. '１' → logprob: -19.125001907348633
    10. '`' → logprob: -19.500001907348633

Token 154: ':j' (ID: 123557)
  Prédit: ':j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':j' → logprob: -0.0007182692061178386
    2. ':' → logprob: -7.250718116760254
    3. ' :' → logprob: -12.125718116760254
    4. 'j' → logprob: -13.750718116760254
    5. ',j' → logprob: -14.000718116760254
    6. ']' → logprob: -15.500718116760254
    7. '	j' → logprob: -15.625718116760254
    8. ' j' → logprob: -15.750718116760254
    9. ':i' → logprob: -15.875718116760254
    10. ';j' → logprob: -16.50071907043457

Token 155: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -2.0219828002154827e-05
    2. ' -' → logprob: -10.875020027160645
    3. ']' → logprob: -14.375020027160645
    4. '1' → logprob: -14.500020027160645
    5. '```' → logprob: -16.87502098083496
    6. '−' → logprob: -18.75002098083496
    7. ']-' → logprob: -18.87502098083496
    8. ')' → logprob: -19.12502098083496
    9. '0' → logprob: -19.37502098083496
    10. '2' → logprob: -19.62502098083496

Token 156: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. '0' → logprob: -16.125
    3. ' ' → logprob: -16.25
    4. ')' → logprob: -17.125
    5. '```' → logprob: -18.125
    6. ']' → logprob: -19.5
    7. '2' → logprob: -20.0
    8. '   ' → logprob: -20.125
    9. '１' → logprob: -20.125
    10. '۱' → logprob: -20.125

Token 157: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0031614378094673157
    2. ')' → logprob: -5.878161430358887
    3. ' ]' → logprob: -8.003161430358887
    4. ')]' → logprob: -11.253161430358887
    5. ']
' → logprob: -12.753161430358887
    6. '].' → logprob: -13.378161430358887
    7. ' )' → logprob: -13.753161430358887
    8. '<|end|>' → logprob: -14.003161430358887
    9. '       ' → logprob: -14.503161430358887
    10. '']' → logprob: -15.253161430358887

Token 158: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13504253327846527
    2. '
' → logprob: -3.010042428970337
    3. '<|end|>' → logprob: -3.510042428970337
    4. ')' → logprob: -3.885042428970337
    5. '           ' → logprob: -4.510042667388916
    6. '<|end|>' → logprob: -4.885042667388916
    7. '        
' → logprob: -6.010042667388916
    8. '            
' → logprob: -7.135042667388916
    9. ' 
' → logprob: -7.260042667388916
    10. '        ' → logprob: -7.385042667388916

Token 159: ' clauses' (ID: 99572)
  Prédit: ' clauses'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' clauses' → logprob: -0.14482362568378448
    2. 'cla' → logprob: -2.6448235511779785
    3. 'cl' → logprob: -3.2698235511779785
    4. ')' → logprob: -5.0198235511779785
    5. ' clause' → logprob: -5.5198235511779785
    6. '       ' → logprob: -5.6448235511779785
    7. '           ' → logprob: -5.8948235511779785
    8. ' claus' → logprob: -6.7698235511779785
    9. ' i' → logprob: -6.8948235511779785
    10. '
' → logprob: -6.8948235511779785

Token 160: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.47459086775779724
    2. '.' → logprob: -0.9745908975601196
    3. '.extend' → logprob: -7.59959077835083
    4. '.app' → logprob: -12.474591255187988
    5. '.=' → logprob: -12.724591255187988
    6. 'append' → logprob: -12.724591255187988
    7. '_append' → logprob: -14.349591255187988
    8. '.Append' → logprob: -14.349591255187988
    9. '.ap' → logprob: -14.724591255187988
    10. '.push' → logprob: -14.724591255187988

Token 161: '(cl' (ID: 16811)
  Prédit: '(parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(parse' → logprob: -0.19289545714855194
    2. '(cl' → logprob: -1.9428954124450684
    3. '(' → logprob: -3.4428954124450684
    4. 'parse' → logprob: -8.942895889282227
    5. '((' → logprob: -11.567895889282227
    6. '(
' → logprob: -11.817895889282227
    7. 'cl' → logprob: -12.192895889282227
    8. '(par' → logprob: -12.817895889282227
    9. ' (' → logprob: -13.067895889282227
    10. '('' → logprob: -13.192895889282227

Token 162: 'ause' (ID: 1597)
  Prédit: 'ause'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ause' → logprob: -0.0017773995641618967
    2. 'aus' → logprob: -6.626777172088623
    3. 'a' → logprob: -7.876777172088623
    4. 'au' → logprob: -10.376777648925781
    5. 'aise' → logprob: -10.626777648925781
    6. 'ausal' → logprob: -12.501777648925781
    7. 'use' → logprob: -12.876777648925781
    8. ')' → logprob: -13.001777648925781
    9. 'uses' → logprob: -13.126777648925781
    10. 'apse' → logprob: -13.876777648925781

Token 163: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -1.5048530030981055e-06
    2. 's' → logprob: -14.000001907348633
    3. 'str' → logprob: -14.750001907348633
    4. ')' → logprob: -16.375001907348633
    5. '_s' → logprob: -17.000001907348633
    6. '_' → logprob: -17.625001907348633
    7. 'Str' → logprob: -17.750001907348633
    8. ')_' → logprob: -17.875001907348633
    9. '_)' → logprob: -18.500001907348633
    10. 'a' → logprob: -18.750001907348633

Token 164: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3133431673049927
    2. ')
' → logprob: -1.3133431673049927
    3. ' )
' → logprob: -10.563343048095703
    4. ')
' → logprob: -10.813343048095703
    5. ' )' → logprob: -10.813343048095703
    6. '
' → logprob: -12.563343048095703
    7. '       ' → logprob: -12.938343048095703
    8. '           ' → logprob: -13.188343048095703
    9. '   ' → logprob: -13.313343048095703
    10. ')

' → logprob: -13.813343048095703

Token 165: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6754239201545715
    2. '
' → logprob: -1.1754238605499268
    3. '<|end|>' → logprob: -2.4254238605499268
    4. '           ' → logprob: -2.6754238605499268
    5. ')' → logprob: -5.175424098968506
    6. '        
' → logprob: -5.425424098968506
    7. '<|end|>' → logprob: -5.675424098968506
    8. '   ' → logprob: -5.800424098968506
    9. '    
' → logprob: -6.050424098968506
    10. '            
' → logprob: -6.175424098968506

Token 166: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.2521890699863434
    2. ' i' → logprob: -1.502189040184021
    3. ' 
' → logprob: -9.377188682556152
    4. ' ' → logprob: -9.877188682556152
    5. '    ' → logprob: -10.627188682556152
    6. '   ' → logprob: -10.752188682556152
    7. '    
' → logprob: -11.252188682556152
    8. '       ' → logprob: -11.627188682556152
    9. '           ' → logprob: -11.752188682556152
    10. '
' → logprob: -11.752188682556152

Token 167: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2014876902103424
    2. ' =' → logprob: -1.70148766040802
    3. ' +=' → logprob: -9.70148754119873
    4. '+=' → logprob: -11.32648754119873
    5. ' ' → logprob: -13.95148754119873
    6. '=j' → logprob: -15.32648754119873
    7. '=}' → logprob: -16.826488494873047
    8. '=i' → logprob: -17.701488494873047
    9. '=

' → logprob: -18.326488494873047
    10. ')' → logprob: -18.451488494873047

Token 168: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.25193166732788086
    2. 'j' → logprob: -1.5019316673278809
    3. '	j' → logprob: -13.376932144165039
    4. '$j' → logprob: -14.626932144165039
    5. ' ' → logprob: -15.251932144165039
    6. '_j' → logprob: -16.62693214416504
    7. ',j' → logprob: -16.75193214416504
    8. '[j' → logprob: -16.87693214416504
    9. ':j' → logprob: -17.12693214416504
    10. '+j' → logprob: -17.50193214416504

Token 169: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.396344393491745
    2. '+' → logprob: -1.3963444232940674
    3. 'elif' → logprob: -3.0213444232940674
    4. ' +' → logprob: -4.396344184875488
    5. '
' → logprob: -4.646344184875488
    6. ' elif' → logprob: -6.021344184875488
    7. '   ' → logprob: -6.146344184875488
    8. 'if' → logprob: -6.771344184875488
    9. ' if' → logprob: -7.271344184875488
    10. '           ' → logprob: -7.646344184875488

Token 170: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010435742326080799
    2. 'elif' → logprob: -5.010435581207275
    3. ' elif' → logprob: -5.760435581207275
    4. '<|end|>' → logprob: -8.885436058044434
    5. '        
' → logprob: -9.135436058044434
    6. '	elif' → logprob: -9.385436058044434
    7. '```' → logprob: -10.010436058044434
    8. '+' → logprob: -10.385436058044434
    9. '   ' → logprob: -10.635436058044434
    10. '           ' → logprob: -10.635436058044434

Token 171: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11590386927127838
    2. 'elif' → logprob: -2.365903854370117
    3. 'if' (adapté à ' if') → logprob: -4.365903854370117
    4. '           ' → logprob: -6.865903854370117
    5. 'while' → logprob: -7.740903854370117
    6. ' if' → logprob: -7.865903854370117
    7. '   ' → logprob: -7.865903854370117
    8. '
' → logprob: -8.615903854370117
    9. ' elif' → logprob: -8.740903854370117
    10. '```' → logprob: -9.115903854370117

Token 172: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.06249639019370079
    2. ' i' → logprob: -2.8124964237213135
    3. 'j' → logprob: -7.687496185302734
    4. ' j' → logprob: -10.312496185302734
    5. 's' → logprob: -10.687496185302734
    6. ' s' → logprob: -11.437496185302734
    7. ' ' → logprob: -13.312496185302734
    8. '	i' → logprob: -13.687496185302734
    9. ' ' → logprob: -15.312496185302734
    10. '   ' → logprob: -15.812496185302734

Token 173: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.34963831305503845
    2. ' <' → logprob: -1.2246383428573608
    3. '<len' → logprob: -6.84963846206665
    4. ' ' → logprob: -9.849637985229492
    5. '<n' → logprob: -10.224637985229492
    6. '>=' → logprob: -10.974637985229492
    7. ' >=' → logprob: -11.349637985229492
    8. '<s' → logprob: -12.974637985229492
    9. '<|end|>' → logprob: -13.099637985229492
    10. '[' → logprob: -14.099637985229492

Token 174: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.16310884058475494
    2. ' n' → logprob: -1.9131088256835938
    3. 'len' → logprob: -6.163108825683594
    4. ' len' → logprob: -7.163108825683594
    5. ' ' → logprob: -16.038108825683594
    6. '	n' → logprob: -16.413108825683594
    7. '<n' → logprob: -17.413108825683594
    8. ' ' → logprob: -18.038108825683594
    9. '<len' → logprob: -18.163108825683594
    10. '_n' → logprob: -18.913108825683594

Token 175: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.04859793186187744
    2. 'and' → logprob: -3.048597812652588
    3. ' ' → logprob: -11.548598289489746
    4. '   ' → logprob: -14.923598289489746
    5. '	and' → logprob: -15.548598289489746
    6. '  ' → logprob: -16.17359733581543
    7. '    ' → logprob: -16.42359733581543
    8. ' и' → logprob: -17.04859733581543
    9. '           ' → logprob: -17.29859733581543
    10. 'a' → logprob: -17.67359733581543

Token 176: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.4740940034389496
    2. 's' → logprob: -0.974094033241272
    3. ' ' → logprob: -11.34909439086914
    4. '	s' → logprob: -13.22409439086914
    5. ''s' → logprob: -13.97409439086914
    6. '   ' → logprob: -13.97409439086914
    7. '  ' → logprob: -14.47409439086914
    8. '(s' → logprob: -14.97409439086914
    9. ' ' → logprob: -15.34909439086914
    10. '`s' → logprob: -15.47409439086914

Token 177: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.029371922835707664
    2. '==' → logprob: -4.529371738433838
    3. ' ==' → logprob: -4.779371738433838
    4. '[' → logprob: -4.779371738433838
    5. ']' → logprob: -8.029372215270996
    6. '[j' → logprob: -8.029372215270996
    7. ']==' → logprob: -8.154372215270996
    8. '[s' → logprob: -8.404372215270996
    9. '[
' → logprob: -10.279372215270996
    10. ' [' → logprob: -10.279372215270996

Token 178: ']' (ID: 60)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.29469767212867737
    2. '==' → logprob: -1.419697642326355
    3. ']' → logprob: -4.9196977615356445
    4. ']==' → logprob: -5.4196977615356445
    5. ' ' → logprob: -7.9196977615356445
    6. '=='' → logprob: -8.169697761535645
    7. '=' → logprob: -8.169697761535645
    8. ' ]' → logprob: -8.794697761535645
    9. ' =='' → logprob: -8.794697761535645
    10. ''' → logprob: -8.919697761535645

Token 179: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.24354137480258942
    2. '==' → logprob: -1.6185413599014282
    3. '|' → logprob: -4.368541240692139
    4. '=' → logprob: -6.118541240692139
    5. ' ' → logprob: -7.243541240692139
    6. ' =='' → logprob: -7.493541240692139
    7. '=='' → logprob: -7.493541240692139
    8. '[' → logprob: -7.618541240692139
    9. ' =' → logprob: -8.868541717529297
    10. ' |' → logprob: -9.118541717529297

Token 180: ' '|' (ID: 113654)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0004979863297194242
    2. ' '' → logprob: -8.125497817993164
    3. '"' → logprob: -9.250497817993164
    4. '|' → logprob: -9.875497817993164
    5. '"|' → logprob: -10.625497817993164
    6. ''||' → logprob: -11.375497817993164
    7. '('|' → logprob: -11.625497817993164
    8. ' '|' → logprob: -12.000497817993164
    9. '|'' → logprob: -14.125497817993164
    10. ' ' → logprob: -14.250497817993164

Token 181: '':
' (ID: 7669)
  Prédit: '|'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '|' → logprob: -0.0005499334656633437
    2. '<|end|>' → logprob: -9.000550270080566
    3. ')' → logprob: -9.375550270080566
    4. ' |' → logprob: -9.500550270080566
    5. '<|end|>' → logprob: -9.875550270080566
    6. '
' → logprob: -9.875550270080566
    7. '|
' → logprob: -10.250550270080566
    8. ' ' → logprob: -10.750550270080566
    9. ''' → logprob: -11.125550270080566
    10. '('|' → logprob: -11.250550270080566

Token 182: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.4955538213253021
    2. ' i' → logprob: -1.6205538511276245
    3. 'i' → logprob: -1.7455538511276245
    4. '<|end|>' → logprob: -4.745553970336914
    5. '           ' → logprob: -5.620553970336914
    6. ' 
' → logprob: -5.745553970336914
    7. '                
' → logprob: -7.245553970336914
    8. ' ' → logprob: -7.620553970336914
    9. '<|end|>' → logprob: -8.120553970336914
    10. '
' → logprob: -8.495553970336914

Token 183: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.2014927715063095
    2. ' i' → logprob: -1.7014927864074707
    3. ' 
' → logprob: -9.701492309570312
    4. '
' → logprob: -11.701492309570312
    5. '               ' → logprob: -12.076492309570312
    6. '           ' → logprob: -14.076492309570312
    7. '                
' → logprob: -14.451492309570312
    8. '```' → logprob: -14.701492309570312
    9. '	i' → logprob: -14.951492309570312
    10. '                   ' → logprob: -15.076492309570312

Token 184: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.25214746594429016
    2. '+=' → logprob: -1.5021474361419678
    3. '=' → logprob: -8.627147674560547
    4. ' =' → logprob: -10.752147674560547
    5. '+' → logprob: -11.002147674560547
    6. ' ' → logprob: -14.502147674560547
    7. ' +' → logprob: -15.002147674560547
    8. ']+=' → logprob: -15.752147674560547
    9. '+='' → logprob: -17.502147674560547
    10. 'i' → logprob: -18.127147674560547

Token 185: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00020354038861114532
    2. ' ' → logprob: -8.500203132629395
    3. '```' → logprob: -19.50020408630371
    4. '۱' → logprob: -20.25020408630371
    5. '１' → logprob: -20.50020408630371
    6. '0' → logprob: -21.31270408630371
    7. '+' → logprob: -21.81270408630371
    8. '   ' → logprob: -21.93770408630371
    9. '१' → logprob: -22.12520408630371
    10. ' ' → logprob: -22.12520408630371

Token 186: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.1008713702030946e-06
    2. ' ' → logprob: -13.125001907348633
    3. '```' → logprob: -20.250001907348633
    4. '１' → logprob: -20.375001907348633
    5. '   ' → logprob: -21.000001907348633
    6. '۱' → logprob: -21.500001907348633
    7. '2' → logprob: -21.875001907348633
    8. '  ' → logprob: -22.187501907348633
    9. '0' → logprob: -22.687501907348633
    10. '
' → logprob: -23.125001907348633

Token 187: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014361534267663956
    2. '           ' → logprob: -4.639361381530762
    3. '   ' → logprob: -5.889361381530762
    4. '<|end|>' → logprob: -7.264361381530762
    5. 'else' → logprob: -7.764361381530762
    6. ' else' → logprob: -8.014361381530762
    7. '```' → logprob: -9.764361381530762
    8. '
' → logprob: -9.764361381530762
    9. '<|end|>' → logprob: -9.889361381530762
    10. '               ' → logprob: -10.389361381530762

Token 188: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0021578760351985693
    2. '           ' → logprob: -7.002157688140869
    3. '   ' → logprob: -7.252157688140869
    4. 'else' → logprob: -8.252158164978027
    5. ' else' → logprob: -8.627158164978027
    6. 'return' → logprob: -10.002158164978027
    7. 'continue' → logprob: -10.627158164978027
    8. ' return' → logprob: -11.502158164978027
    9. '```' → logprob: -12.502158164978027
    10. ' continue' → logprob: -12.627158164978027

Token 189: ' else' (ID: 1203)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.31222251057624817
    2. ' else' → logprob: -1.8122224807739258
    3. 'else' (adapté à ' else') → logprob: -2.562222480773926
    4. '       ' → logprob: -3.687222480773926
    5. 'return' → logprob: -6.812222480773926
    6. '    ' → logprob: -7.062222480773926
    7. ' return' → logprob: -8.437222480773926
    8. ' ' → logprob: -8.812222480773926
    9. '	else' → logprob: -8.937222480773926
    10. '```' → logprob: -9.687222480773926

Token 190: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.17918004095554352
    2. '           ' → logprob: -2.429180145263672
    3. ':
' → logprob: -3.054180145263672
    4. '       ' → logprob: -4.429180145263672
    5. ' :' → logprob: -4.929180145263672
    6. '   ' → logprob: -5.554180145263672
    7. ' :
' → logprob: -5.929180145263672
    8. ' ' → logprob: -6.804180145263672
    9. '        ' → logprob: -8.554180145263672
    10. '    ' → logprob: -8.554180145263672

Token 191: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9242227673530579
    2. ' i' → logprob: -1.299222707748413
    3. '           ' → logprob: -1.549222707748413
    4. '   ' → logprob: -3.049222707748413
    5. ' break' → logprob: -3.549222707748413
    6. '    ' → logprob: -4.674222946166992
    7. ' return' → logprob: -4.924222946166992
    8. ' raise' → logprob: -4.924222946166992
    9. '        ' → logprob: -5.049222946166992
    10. 'i' → logprob: -5.299222946166992

Token 192: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.5583428740501404
    2. ' break' → logprob: -1.4333429336547852
    3. 'i' (adapté à ' i') → logprob: -1.8083429336547852
    4. 'break' → logprob: -4.308342933654785
    5. ' raise' → logprob: -4.683342933654785
    6. 'raise' → logprob: -6.933342933654785
    7. '   ' → logprob: -7.433342933654785
    8. ' return' → logprob: -8.058342933654785
    9. ' ' → logprob: -8.558342933654785
    10. '       ' → logprob: -8.558342933654785

Token 193: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.024711376056075096
    2. '+=' → logprob: -3.7747113704681396
    3. ' ' → logprob: -7.274711608886719
    4. '+' → logprob: -7.274711608886719
    5. ' +' → logprob: -9.899711608886719
    6. '=' → logprob: -10.774711608886719
    7. ' =' → logprob: -12.274711608886719
    8. '    ' → logprob: -13.774711608886719
    9. '  ' → logprob: -14.024711608886719
    10. '   ' → logprob: -15.399711608886719

Token 194: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0031777136027812958
    2. ' ' → logprob: -5.753177642822266
    3. '```' → logprob: -19.753177642822266
    4. '１' → logprob: -20.253177642822266
    5. '۱' → logprob: -20.253177642822266
    6. '  ' → logprob: -20.628177642822266
    7. '   ' → logprob: -20.628177642822266
    8. ' ' → logprob: -20.628177642822266
    9. '0' → logprob: -20.878177642822266
    10. '<|end|>' → logprob: -21.315677642822266

Token 195: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.935296834039036e-06
    2. ' ' → logprob: -12.75000286102295
    3. '```' → logprob: -19.875003814697266
    4. '１' → logprob: -20.437503814697266
    5. '   ' → logprob: -21.187503814697266
    6. '۱' → logprob: -21.500003814697266
    7. '  ' → logprob: -21.812503814697266
    8. '0' → logprob: -22.187503814697266
    9. '१' → logprob: -22.375003814697266
    10. '
' → logprob: -22.375003814697266

Token 196: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.62496018409729
    2. '   ' → logprob: -1.12496018409729
    3. '<|end|>' → logprob: -2.49996018409729
    4. '    
' → logprob: -3.62496018409729
    5. '\n' → logprob: -4.124959945678711
    6. ' ' → logprob: -5.999959945678711
    7. '  
' → logprob: -5.999959945678711
    8. ' 
' → logprob: -6.249959945678711
    9. 'return' → logprob: -6.749959945678711
    10. '	return' → logprob: -6.749959945678711

Token 197: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7529767155647278
    2. '   ' → logprob: -1.502976655960083
    3. '    
' → logprob: -2.252976655960083
    4. 'return' → logprob: -3.127976655960083
    5. ' 
' → logprob: -3.127976655960083
    6. '\n' → logprob: -3.627976655960083
    7. '' → logprob: -4.002976894378662
    8. 'r' → logprob: -4.002976894378662
    9. ' ' → logprob: -4.752976894378662
    10. '\' → logprob: -4.752976894378662

Token 198: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01165776140987873
    2. 'return' (adapté à ' return') → logprob: -5.01165771484375
    3. ' return' → logprob: -5.76165771484375
    4. '
' → logprob: -7.26165771484375
    5. '    
' → logprob: -7.26165771484375
    6. '	return' → logprob: -8.51165771484375
    7. '    ' → logprob: -10.26165771484375
    8. ' ' → logprob: -10.38665771484375
    9. '<|end|>' → logprob: -10.38665771484375
    10. '  ' → logprob: -11.01165771484375

Token 199: ' clauses' (ID: 99572)
  Prédit: ' clauses'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' clauses' → logprob: -0.38687604665756226
    2. 'cla' → logprob: -1.136876106262207
    3. 'cl' → logprob: -12.636876106262207
    4. '[]' → logprob: -15.011876106262207
    5. 'cls' → logprob: -15.011876106262207
    6. ' ' → logprob: -15.261876106262207
    7. 'Cla' → logprob: -15.386876106262207
    8. ' clause' → logprob: -15.511876106262207
    9. '[' → logprob: -15.886876106262207
    10. ' cla' → logprob: -16.01187515258789

Token 200: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.542048454284668
    2. '<|end|>' → logprob: -1.042048454284668
    3. '\n' → logprob: -4.542048454284668
    4. '#' → logprob: -4.542048454284668
    5. 'newline' → logprob: -4.667048454284668
    6. '```' → logprob: -4.792048454284668
    7. '(' → logprob: -4.792048454284668
    8. '[' → logprob: -5.292048454284668
    9. ')' → logprob: -6.042048454284668
    10. '\' → logprob: -6.167048454284668

Token 201: 'def' (ID: 1314)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.2015031576156616
    2. '#' → logprob: -1.3265031576156616
    3. 'def' → logprob: -1.3265031576156616
    4. '[' → logprob: -3.326503276824951
    5. 'd' → logprob: -3.326503276824951
    6. '(' → logprob: -3.576503276824951
    7. '<|end|>' → logprob: -3.701503276824951
    8. ' 
' → logprob: -4.576503276824951
    9. 'c' → logprob: -4.701503276824951
    10. '```' → logprob: -5.076503276824951

Token 202: ' parse' (ID: 8420)
  Prédit: ' parse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' parse' → logprob: -0.6752585172653198
    2. ' evaluate' → logprob: -0.8002585172653198
    3. ' solve' → logprob: -4.300258636474609
    4. ' simplify' → logprob: -4.550258636474609
    5. ' main' → logprob: -5.550258636474609
    6. ' combine' → logprob: -5.925258636474609
    7. ' check' → logprob: -6.050258636474609
    8. ' eval' → logprob: -6.050258636474609
    9. ' process' → logprob: -6.675258636474609
    10. ' extract' → logprob: -6.925258636474609

Token 203: '_clause' (ID: 152283)
  Prédit: '_expression'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_expression' → logprob: -0.26631399989128113
    2. '_clause' → logprob: -1.8913140296936035
    3. '_' → logprob: -3.1413140296936035
    4. '_cl' → logprob: -4.0163140296936035
    5. '_formula' → logprob: -4.1413140296936035
    6. '_expr' → logprob: -6.5163140296936035
    7. '_con' → logprob: -6.8913140296936035
    8. '_variable' → logprob: -7.5163140296936035
    9. '_factor' → logprob: -8.141313552856445
    10. '_s' → logprob: -8.266313552856445

Token 204: '(cl' (ID: 16811)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.10024787485599518
    2. '(' → logprob: -2.350247859954834
    3. ' (' → logprob: -10.475248336791992
    4. '(_' → logprob: -11.725248336791992
    5. '(a' → logprob: -14.225248336791992
    6. 's' → logprob: -14.225248336791992
    7. '(ss' → logprob: -14.225248336791992
    8. '(S' → logprob: -14.850248336791992
    9. '(p' → logprob: -14.975248336791992
    10. '(x' → logprob: -15.600248336791992

Token 205: 'ause' (ID: 1597)
  Prédit: 'ause'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ause' → logprob: -0.013348334468901157
    2. 'a' → logprob: -4.38834810256958
    3. '_' → logprob: -7.88834810256958
    4. 'aus' → logprob: -8.513348579406738
    5. ')' → logprob: -9.638348579406738
    6. '(' → logprob: -10.388348579406738
    7. 'aise' → logprob: -10.388348579406738
    8. '_a' → logprob: -10.513348579406738
    9. '(a' → logprob: -10.513348579406738
    10. '```' → logprob: -10.888348579406738

Token 206: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.009897744283080101
    2. ')' → logprob: -5.384897708892822
    3. '):
' → logprob: -6.009897708892822
    4. '_' → logprob: -6.509897708892822
    5. 's' → logprob: -7.009897708892822
    6. '_str' → logprob: -8.25989818572998
    7. '_s' → logprob: -10.00989818572998
    8. ')_' → logprob: -10.38489818572998
    9. '_string' → logprob: -11.00989818572998
    10. '   ' → logprob: -11.38489818572998

Token 207: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015944626182317734
    2. 'tokens' → logprob: -5.140944480895996
    3. ' tokens' → logprob: -5.265944480895996
    4. '    ' → logprob: -5.640944480895996
    5. ' parts' → logprob: -7.765944480895996
    6. ' clauses' → logprob: -8.640944480895996
    7. ' ' → logprob: -8.890944480895996
    8. '  ' → logprob: -9.390944480895996
    9. '   ' → logprob: -9.640944480895996
    10. '    
' → logprob: -9.640944480895996

Token 208: ' #' (ID: 1069)
  Prédit: ' tokens'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' tokens' → logprob: -0.2334238439798355
    2. '   ' → logprob: -2.483423948287964
    3. ' parts' → logprob: -2.608423948287964
    4. ' clauses' → logprob: -3.483423948287964
    5. 'tokens' → logprob: -4.358423709869385
    6. ' return' → logprob: -5.358423709869385
    7. '    ' → logprob: -6.483423709869385
    8. ' variables' → logprob: -7.733423709869385
    9. ' i' → logprob: -8.858424186706543
    10. ' s' → logprob: -8.983424186706543

Token 209: ' clause' (ID: 45470)
  Prédit: ' tokens'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tokens' → logprob: -0.1376340091228485
    2. ' parts' → logprob: -2.637634038925171
    3. 'tokens' → logprob: -3.762634038925171
    4. ' def' → logprob: -4.137633800506592
    5. 'def' → logprob: -5.137633800506592
    6. '   ' → logprob: -5.512633800506592
    7. ' clauses' → logprob: -5.637633800506592
    8. ' return' → logprob: -6.387633800506592
    9. ' clause' → logprob: -7.262633800506592
    10. ' terms' → logprob: -7.512633800506592

Token 210: ' is' (ID: 382)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.017744818702340126
    2. '_tokens' → logprob: -4.267745018005371
    3. '   ' → logprob: -6.142745018005371
    4. '=' → logprob: -7.142745018005371
    5. 'def' → logprob: -8.517745018005371
    6. '_parts' → logprob: -8.642745018005371
    7. 's' → logprob: -9.892745018005371
    8. 'tokens' → logprob: -10.517745018005371
    9. '_s' → logprob: -10.642745018005371
    10. ' ' → logprob: -10.767745018005371

Token 211: ' literal' (ID: 41271)
  Prédit: 'cl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cl' → logprob: -0.3498895466327667
    2. ' clause' → logprob: -1.2248895168304443
    3. ' []' → logprob: -7.724889755249023
    4. ' ' → logprob: -8.099889755249023
    5. '[]' → logprob: -8.099889755249023
    6. ''' → logprob: -9.349889755249023
    7. ' '' → logprob: -9.724889755249023
    8. ' cl' → logprob: -9.724889755249023
    9. '	cl' → logprob: -9.724889755249023
    10. '''' → logprob: -10.724889755249023

Token 212: '&' (ID: 5)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.004793345462530851
    2. ' =' → logprob: -6.129793167114258
    3. ' s' → logprob: -7.379793167114258
    4. '=' → logprob: -7.879793167114258
    5. '_' → logprob: -8.254793167114258
    6. ')' → logprob: -8.504793167114258
    7. '   ' → logprob: -8.629793167114258
    8. ':' → logprob: -8.879793167114258
    9. ',' → logprob: -9.129793167114258
    10. '[:]' → logprob: -9.254793167114258

Token 213: 'literal' (ID: 70989)
  Prédit: 'literal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'literal' → logprob: -0.535651445388794
    2. '_literal' → logprob: -2.035651445388794
    3. '&' → logprob: -2.410651445388794
    4. '_' → logprob: -2.785651445388794
    5. ' literal' → logprob: -3.285651445388794
    6. '_clause' → logprob: -3.785651445388794
    7. 'cl' → logprob: -4.535651206970215
    8. ' clause' → logprob: -4.785651206970215
    9. 'variable' → logprob: -4.785651206970215
    10. ''' → logprob: -5.285651206970215

Token 214: '&' (ID: 5)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.3584711253643036
    2. '   ' → logprob: -1.608471155166626
    3. '(s' → logprob: -3.358471155166626
    4. '(' → logprob: -3.608471155166626
    5. '_' → logprob: -3.858471155166626
    6. 'def' → logprob: -4.608470916748047
    7. ' _' → logprob: -6.483470916748047
    8. ' =' → logprob: -6.608470916748047
    9. ' s' → logprob: -6.983470916748047
    10. ' (' → logprob: -7.108470916748047

Token 215: 'literal' (ID: 70989)
  Prédit: '~'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '~' → logprob: -0.4793626666069031
    2. 'literal' → logprob: -1.3543627262115479
    3. '_' → logprob: -3.604362726211548
    4. 'x' → logprob: -3.729362726211548
    5. 'variable' → logprob: -4.354362487792969
    6. ' literal' → logprob: -4.354362487792969
    7. '_literal' → logprob: -4.979362487792969
    8. '&' → logprob: -5.104362487792969
    9. ' ~' → logprob: -5.354362487792969
    10. 'nbsp' → logprob: -5.354362487792969

Token 216: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.1749485731124878
    2. 's' → logprob: -1.1749485731124878
    3. '(s' → logprob: -1.4249485731124878
    4. '   ' → logprob: -2.1749486923217773
    5. '_' → logprob: -4.174948692321777
    6. 'def' → logprob: -5.549948692321777
    7. ' (' → logprob: -6.424948692321777
    8. '(
' → logprob: -6.549948692321777
    9. ')' → logprob: -6.799948692321777
    10. '[]' → logprob: -7.424948692321777

Token 217: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0065168943256139755
    2. ' tokens' → logprob: -6.006516933441162
    3. 'def' → logprob: -6.506516933441162
    4. ' parts' → logprob: -6.506516933441162
    5. 'tokens' → logprob: -8.006516456604004
    6. ' def' → logprob: -8.881516456604004
    7. '_literals' → logprob: -8.881516456604004
    8. '    ' → logprob: -9.006516456604004
    9. ' literals' → logprob: -9.131516456604004
    10. 's' → logprob: -10.006516456604004

Token 218: ' #' (ID: 1069)
  Prédit: ' tokens'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' tokens' → logprob: -0.518134593963623
    2. ' parts' → logprob: -1.268134593963623
    3. ' literals' → logprob: -2.768134593963623
    4. '   ' → logprob: -3.018134593963623
    5. ' i' → logprob: -5.643134593963623
    6. ' return' → logprob: -6.143134593963623
    7. ' l' → logprob: -6.393134593963623
    8. 'tokens' → logprob: -6.643134593963623
    9. ' lits' → logprob: -7.268134593963623
    10. ' clauses' → logprob: -7.268134593963623

Token 219: ' literal' (ID: 41271)
  Prédit: ' literals'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' literals' → logprob: -0.6476063132286072
    2. ' parts' → logprob: -1.397606372833252
    3. ' tokens' → logprob: -1.522606372833252
    4. ' lits' → logprob: -5.772606372833252
    5. ' def' → logprob: -6.647606372833252
    6. 'l' → logprob: -6.772606372833252
    7. '   ' → logprob: -6.772606372833252
    8. 'tokens' → logprob: -6.897606372833252
    9. ' result' → logprob: -7.022606372833252
    10. ' l' → logprob: -7.022606372833252

Token 220: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.038312751799821854
    2. 's' → logprob: -3.9133126735687256
    3. 'def' → logprob: -4.913312911987305
    4. ':' → logprob: -6.038312911987305
    5. '=' → logprob: -6.288312911987305
    6. ' s' → logprob: -6.413312911987305
    7. ' :' → logprob: -6.663312911987305
    8. ' def' → logprob: -7.288312911987305
    9. ' is' → logprob: -7.538312911987305
    10. '_' → logprob: -7.538312911987305

Token 221: ' var' (ID: 972)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.7835255861282349
    2. ' '~' → logprob: -1.4085255861282349
    3. '[' → logprob: -2.5335254669189453
    4. '['' → logprob: -2.7835254669189453
    5. '~' → logprob: -2.9085254669189453
    6. ' '' → logprob: -3.7835254669189453
    7. ' (' → logprob: -3.9085254669189453
    8. '('' → logprob: -4.158525466918945
    9. ' ~' → logprob: -4.783525466918945
    10. '"' → logprob: -4.783525466918945

Token 222: ' or' (ID: 503)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.1633194535970688
    2. '   ' → logprob: -3.2883193492889404
    3. ' _' → logprob: -3.6633193492889404
    4. '_name' → logprob: -4.0383195877075195
    5. ' =' → logprob: -4.1633195877075195
    6. ')' → logprob: -4.1633195877075195
    7. 'iable' → logprob: -4.5383195877075195
    8. 's' → logprob: -5.1633195877075195
    9. '[' → logprob: -5.1633195877075195
    10. '=' → logprob: -5.6633195877075195

Token 223: ' ~' (ID: 6574)
  Prédit: '~'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '~' → logprob: -0.17990556359291077
    2. ' ~' → logprob: -1.8049055337905884
    3. ' '~' → logprob: -9.804905891418457
    4. ''' → logprob: -10.054905891418457
    5. '~
' → logprob: -10.804905891418457
    6. ' ' → logprob: -11.054905891418457
    7. '(~' → logprob: -11.804905891418457
    8. ' ' → logprob: -12.179905891418457
    9. ' (~' → logprob: -12.929905891418457
    10. '   ' → logprob: -13.054905891418457

Token 224: 'var' (ID: 1465)
  Prédit: 'var'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'var' → logprob: -0.0698898509144783
    2. ' var' → logprob: -2.819889783859253
    3. '_' → logprob: -5.819890022277832
    4. 'variable' → logprob: -5.819890022277832
    5. '~' → logprob: -7.694890022277832
    6. ' ' → logprob: -7.819890022277832
    7. '_var' → logprob: -8.194890022277832
    8. ' variable' → logprob: -8.819890022277832
    9. '<|end|>' → logprob: -8.819890022277832
    10. '[var' → logprob: -9.069890022277832

Token 225: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014061481691896915
    2. ' tokens' → logprob: -5.639061450958252
    3. 'def' → logprob: -5.889061450958252
    4. 'tokens' → logprob: -6.014061450958252
    5. ' parts' → logprob: -6.764061450958252
    6. '_' → logprob: -6.889061450958252
    7. '_literals' → logprob: -7.639061450958252
    8. '_tokens' → logprob: -7.764061450958252
    9. ' def' → logprob: -8.26406192779541
    10. ' ' → logprob: -8.38906192779541

Token 226: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002868115669116378
    2. ' tokens' → logprob: -6.377868175506592
    3. ' parts' → logprob: -7.002868175506592
    4. 'tokens' → logprob: -9.127867698669434
    5. ' i' → logprob: -9.502867698669434
    6. '    ' → logprob: -10.752867698669434
    7. 'def' → logprob: -11.377867698669434
    8. ' literals' → logprob: -11.502867698669434
    9. ' def' → logprob: -12.377867698669434
    10. ' variables' → logprob: -12.502867698669434

Token 227: ' parts' (ID: 7881)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9973163604736328
    2. ' parts' → logprob: -1.1223163604736328
    3. ' literals' → logprob: -1.8723163604736328
    4. ' tokens' → logprob: -1.9973163604736328
    5. ' l' → logprob: -5.372316360473633
    6. 'l' → logprob: -5.497316360473633
    7. ' lits' → logprob: -6.122316360473633
    8. ' return' → logprob: -6.247316360473633
    9. 'tokens' → logprob: -6.497316360473633
    10. 'parts' (adapté à ' parts') → logprob: -8.122316360473633

Token 228: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03367128223180771
    2. '=' → logprob: -3.4086713790893555
    3. '[' → logprob: -12.033671379089355
    4. ' ' → logprob: -12.158671379089355
    5. '_' → logprob: -12.408671379089355
    6. 's' → logprob: -12.658671379089355
    7. '=[]' → logprob: -13.033671379089355
    8. ')' → logprob: -13.783671379089355
    9. ' =[' → logprob: -13.783671379089355
    10. ',' → logprob: -14.783671379089355

Token 229: ' clause' (ID: 45470)
  Prédit: 'cl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cl' → logprob: -0.0013860702747479081
    2. ' clause' → logprob: -6.7513861656188965
    3. '[]' → logprob: -8.501385688781738
    4. '[' → logprob: -12.001385688781738
    5. ' []' → logprob: -12.251385688781738
    6. 'cla' → logprob: -13.626385688781738
    7. '_clause' → logprob: -16.126386642456055
    8. ' [' → logprob: -16.876386642456055
    9. '	cl' → logprob: -16.876386642456055
    10. '(cl' → logprob: -16.876386642456055

Token 230: '.split' (ID: 10347)
  Prédit: '.split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.split' → logprob: -0.0041789524257183075
    2. '.' → logprob: -5.504179000854492
    3. '.strip' → logprob: -9.879179000854492
    4. ' .' → logprob: -10.004179000854492
    5. '.replace' → logprob: -12.629179000854492
    6. 'split' → logprob: -14.754179000854492
    7. '   ' → logprob: -15.004179000854492
    8. '.s' → logprob: -16.879179000854492
    9. '.partition' → logprob: -17.629179000854492
    10. '.Split' → logprob: -17.879179000854492

Token 231: '('&' (ID: 126989)
  Prédit: '('&'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('&' → logprob: -1.5213274309644476e-05
    2. '("&' → logprob: -11.500015258789062
    3. '('' → logprob: -12.250015258789062
    4. '(' → logprob: -15.375015258789062
    5. '('|' → logprob: -18.625015258789062
    6. '(&' → logprob: -18.875015258789062
    7. ''' → logprob: -20.625015258789062
    8. '&' → logprob: -20.625015258789062
    9. ' ('' → logprob: -20.750015258789062
    10. '(',' → logprob: -20.750015258789062

Token 232: '')
' (ID: 2515)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.47412532567977905
    2. ')' → logprob: -0.974125325679779
    3. '")' → logprob: -10.474124908447266
    4. ''' → logprob: -12.224124908447266
    5. ']' → logprob: -12.849124908447266
    6. '('' → logprob: -13.474124908447266
    7. ' ')' → logprob: -13.599124908447266
    8. '[' → logprob: -13.724124908447266
    9. '')
' → logprob: -13.724124908447266
    10. '()' → logprob: -13.724124908447266

Token 233: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24487055838108063
    2. ' result' → logprob: -1.8698705434799194
    3. ' literals' → logprob: -2.994870662689209
    4. '_literals' → logprob: -5.494870662689209
    5. ' results' → logprob: -5.869870662689209
    6. 'result' → logprob: -6.119870662689209
    7. 'l' → logprob: -6.369870662689209
    8. ' l' → logprob: -7.244870662689209
    9. ' parsed' → logprob: -8.36987018585205
    10. ' lits' → logprob: -8.36987018585205

Token 234: ' lits' (ID: 108113)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.06743649393320084
    2. ' literals' → logprob: -3.067436456680298
    3. 'result' → logprob: -4.692436695098877
    4. ' result' → logprob: -5.442436695098877
    5. '   ' → logprob: -6.317436695098877
    6. 'res' → logprob: -6.817436695098877
    7. 'parsed' → logprob: -6.942436695098877
    8. ' parsed' → logprob: -7.817436695098877
    9. ' lits' → logprob: -8.317436218261719
    10. '_literals' → logprob: -8.442436218261719

Token 235: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5437939167022705
    2. '=' → logprob: -0.9187939167022705
    3. '=[]' → logprob: -3.9187939167022705
    4. '[]' → logprob: -8.043793678283691
    5. '=[]
' → logprob: -8.543793678283691
    6. '   ' → logprob: -11.043793678283691
    7. 's' → logprob: -11.418793678283691
    8. ',' → logprob: -12.168793678283691
    9. '=[
' → logprob: -12.168793678283691
    10. '[]=' → logprob: -12.293793678283691

Token 236: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.01835338957607746
    2. ' []' → logprob: -4.018353462219238
    3. '[' → logprob: -8.518353462219238
    4. '[]
' → logprob: -13.268353462219238
    5. ' [' → logprob: -13.393353462219238
    6. '[]

' → logprob: -16.143352508544922
    7. '[]}' → logprob: -16.143352508544922
    8. ' []
' → logprob: -16.768352508544922
    9. '[:]' → logprob: -17.268352508544922
    10. '[])' → logprob: -17.518352508544922

Token 237: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.03232332691550255
    2. 'for' → logprob: -3.6573233604431152
    3. '   ' → logprob: -5.907323360443115
    4. ' 
' → logprob: -6.657323360443115
    5. '	for' → logprob: -6.907323360443115
    6. ' ' → logprob: -7.032323360443115
    7. '    
' → logprob: -9.657322883605957
    8. ' ' → logprob: -10.782322883605957
    9. '  
' → logprob: -11.407322883605957
    10. '    ' → logprob: -12.032322883605957

Token 238: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.048593614250421524
    2. ' for' → logprob: -3.048593521118164
    3. '   ' → logprob: -12.048593521118164
    4. '	for' → logprob: -14.798593521118164
    5. ' ' → logprob: -18.048593521118164
    6. '  ' → logprob: -21.423593521118164
    7. 'For' → logprob: -21.673593521118164
    8. '    ' → logprob: -22.548593521118164
    9. '_for' → logprob: -22.548593521118164
    10. ' ' → logprob: -22.673593521118164

Token 239: ' p' (ID: 275)
  Prédit: 'part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'part' → logprob: -0.059545304626226425
    2. 'p' → logprob: -3.0595452785491943
    3. ' part' → logprob: -4.559545516967773
    4. ' p' → logprob: -7.809545516967773
    5. 'lit' → logprob: -10.684545516967773
    6. 'pt' → logprob: -14.184545516967773
    7. 'pat' → logprob: -14.684545516967773
    8. ' lit' → logprob: -14.934545516967773
    9. 'parts' → logprob: -15.059545516967773
    10. '	part' → logprob: -15.184545516967773

Token 240: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.011358676478266716
    2. 'in' → logprob: -5.136358737945557
    3. ' ' → logprob: -5.261358737945557
    4. 'i' → logprob: -9.261358261108398
    5. ' i' → logprob: -10.136358261108398
    6. 'n' → logprob: -10.261358261108398
    7. '_' → logprob: -10.636358261108398
    8. 'a' → logprob: -11.511358261108398
    9. '  ' → logprob: -11.886358261108398
    10. 'p' → logprob: -12.136358261108398

Token 241: ' parts' (ID: 7881)
  Prédit: 'parts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parts' → logprob: -0.014178205281496048
    2. ' parts' → logprob: -4.264178276062012
    3. '(parts' → logprob: -11.264178276062012
    4. 'p' → logprob: -13.514178276062012
    5. ' ' → logprob: -15.764178276062012
    6. '.parts' → logprob: -16.014177322387695
    7. '[' → logprob: -16.264177322387695
    8. 'part' → logprob: -16.389177322387695
    9. '   ' → logprob: -16.639177322387695
    10. '_parts' → logprob: -16.889177322387695

Token 242: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002532736863940954
    2. ':
' → logprob: -6.752532958984375
    3. ' :' → logprob: -7.377532958984375
    4. '.strip' → logprob: -7.752532958984375
    5. '.' → logprob: -8.752532958984375
    6. '):' → logprob: -9.752532958984375
    7. ':p' → logprob: -10.627532958984375
    8. '=' → logprob: -11.377532958984375
    9. ',' → logprob: -11.627532958984375
    10. '   ' → logprob: -11.752532958984375

Token 243: '       ' (ID: 309)
  Prédit: ' p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.6547157764434814
    2. '   ' → logprob: -1.5297157764434814
    3. ' if' → logprob: -2.0297157764434814
    4. 'p' → logprob: -2.2797157764434814
    5. '       ' → logprob: -4.279715538024902
    6. 'l' → logprob: -4.904715538024902
    7. '    ' → logprob: -6.029715538024902
    8. ' lits' → logprob: -6.404715538024902
    9. ' l' → logprob: -6.654715538024902
    10. 'if' → logprob: -6.779715538024902

Token 244: ' if' (ID: 538)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.5884248614311218
    2. 'l' → logprob: -1.7134249210357666
    3. ' p' → logprob: -2.2134249210357666
    4. ' lits' → logprob: -2.7134249210357666
    5. ' if' → logprob: -2.8384249210357666
    6. 'if' (adapté à ' if') → logprob: -4.7134246826171875
    7. ' lit' → logprob: -5.0884246826171875
    8. '   ' → logprob: -5.3384246826171875
    9. 'lit' → logprob: -5.3384246826171875
    10. ' l' → logprob: -5.3384246826171875

Token 245: ' p' (ID: 275)
  Prédit: ' p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.3133467435836792
    2. 'p' → logprob: -1.3133467435836792
    3. ' ' → logprob: -9.938346862792969
    4. ''' → logprob: -10.563346862792969
    5. ' '' → logprob: -12.938346862792969
    6. ' not' → logprob: -13.188346862792969
    7. ''p' → logprob: -13.188346862792969
    8. ' ' → logprob: -13.563346862792969
    9. 'len' → logprob: -14.188346862792969
    10. 's' → logprob: -14.438346862792969

Token 246: '[' (ID: 58)
  Prédit: '.startswith'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.startswith' → logprob: -0.013638240285217762
    2. '[' → logprob: -4.763638019561768
    3. '.strip' → logprob: -5.888638019561768
    4. '.' → logprob: -6.388638019561768
    5. 'startswith' → logprob: -7.513638019561768
    6. '.starts' → logprob: -12.388638496398926
    7. ' .' → logprob: -12.763638496398926
    8. ' and' → logprob: -13.388638496398926
    9. ' starts' → logprob: -14.138638496398926
    10. '=' → logprob: -14.263638496398926

Token 247: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00017922651022672653
    2. ' ' → logprob: -8.750179290771484
    3. '[' → logprob: -11.000179290771484
    4. '.startswith' → logprob: -14.000179290771484
    5. '==' → logprob: -14.125179290771484
    6. ' ==' → logprob: -14.500179290771484
    7. 'startswith' → logprob: -14.625179290771484
    8. '=' → logprob: -14.625179290771484
    9. '-' → logprob: -15.000179290771484
    10. '   ' → logprob: -15.625179290771484

Token 248: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5768395066261292
    2. '==' → logprob: -1.0768394470214844
    3. ''' → logprob: -3.4518394470214844
    4. ' ==' → logprob: -3.5768394470214844
    5. '~' → logprob: -4.076839447021484
    6. '=='' → logprob: -4.076839447021484
    7. ']' → logprob: -6.076839447021484
    8. '[' → logprob: -7.451839447021484
    9. '='' → logprob: -7.826839447021484
    10. '~=' → logprob: -8.576839447021484

Token 249: ' ==' (ID: 951)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4110947847366333
    2. '~' → logprob: -1.6610947847366333
    3. '==' → logprob: -2.0360946655273438
    4. ''' → logprob: -4.536094665527344
    5. ' ==' → logprob: -5.786094665527344
    6. '=='' → logprob: -6.411094665527344
    7. '~=' → logprob: -7.161094665527344
    8. '[' → logprob: -8.786094665527344
    9. '='' → logprob: -9.411094665527344
    10. ' ~' → logprob: -10.411094665527344

Token 250: ' '~' (ID: 155911)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0010410251561552286
    2. ' '~' → logprob: -6.876040935516357
    3. '~' → logprob: -12.251041412353516
    4. '`' → logprob: -13.126041412353516
    5. '"' → logprob: -14.501041412353516
    6. ''^' → logprob: -14.876041412353516
    7. ' ' → logprob: -15.376041412353516
    8. '   ' → logprob: -15.626041412353516
    9. ' '' → logprob: -17.751041412353516
    10. ''t' → logprob: -17.751041412353516

Token 251: '':
' (ID: 7669)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.7095423936843872
    2. ':' → logprob: -0.8345423936843872
    3. '':' → logprob: -3.5845422744750977
    4. ' '' → logprob: -3.7095422744750977
    5. ':
' → logprob: -4.834542274475098
    6. ' :' → logprob: -5.334542274475098
    7. ' ' → logprob: -6.834542274475098
    8. '~' → logprob: -6.959542274475098
    9. ' p' → logprob: -7.084542274475098
    10. ''p' → logprob: -7.084542274475098

Token 252: '           ' (ID: 352)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -1.2144545316696167
    2. 'l' → logprob: -1.7144545316696167
    3. '           ' → logprob: -1.7144545316696167
    4. ' p' → logprob: -2.2144546508789062
    5. ' lits' → logprob: -2.8394546508789062
    6. ''l' → logprob: -2.9644546508789062
    7. '        ' → logprob: -3.4644546508789062
    8. '       ' → logprob: -3.8394546508789062
    9. ''' → logprob: -4.214454650878906
    10. ' '' → logprob: -4.589454650878906

Token 253: ' lits' (ID: 108113)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.32575783133506775
    2. ' lits' → logprob: -1.3257578611373901
    3. '('' → logprob: -5.45075798034668
    4. ' ('' → logprob: -5.57575798034668
    5. '(' → logprob: -6.82575798034668
    6. ' l' → logprob: -7.07575798034668
    7. ' (' → logprob: -7.45075798034668
    8. '       ' → logprob: -7.57575798034668
    9. '(-' → logprob: -8.07575798034668
    10. ' (-' → logprob: -8.70075798034668

Token 254: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0011522440472617745
    2. '.' → logprob: -7.001152038574219
    3. '=' → logprob: -9.001152038574219
    4. 'append' → logprob: -9.501152038574219
    5. ',' → logprob: -10.626152038574219
    6. ' =' → logprob: -11.751152038574219
    7. ' .' → logprob: -12.876152038574219
    8. ' append' → logprob: -12.876152038574219
    9. '_append' → logprob: -13.376152038574219
    10. '.=' → logprob: -14.126152038574219

Token 255: '(('' (ID: 122195)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.42910605669021606
    2. '(p' → logprob: -1.3041059970855713
    3. '(' → logprob: -2.6791059970855713
    4. '(False' → logprob: -6.05410623550415
    5. ' (' → logprob: -6.30410623550415
    6. '(True' → logprob: -6.80410623550415
    7. ' ('' → logprob: -6.80410623550415
    8. '(('' → logprob: -6.92910623550415
    9. '('-',' → logprob: -7.30410623550415
    10. '('-' → logprob: -7.67910623550415

Token 256: '~' (ID: 93)
  Prédit: '~'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '~' → logprob: -0.11119591444730759
    2. 'not' → logprob: -2.3611958026885986
    3. ''' → logprob: -5.236196041107178
    4. 'neg' → logprob: -5.611196041107178
    5. 'NOT' → logprob: -7.236196041107178
    6. 'False' → logprob: -7.861196041107178
    7. 'p' → logprob: -8.23619556427002
    8. '~,' → logprob: -8.73619556427002
    9. '~
' → logprob: -8.86119556427002
    10. '¬' → logprob: -9.48619556427002

Token 257: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.4779507517814636
    2. 'p' → logprob: -0.9779507517814636
    3. ' p' → logprob: -6.602950572967529
    4. ''' → logprob: -6.852950572967529
    5. ',' → logprob: -7.102950572967529
    6. ''p' → logprob: -7.977950572967529
    7. ',p' → logprob: -8.477951049804688
    8. '','' → logprob: -10.977951049804688
    9. ')p' → logprob: -10.977951049804688
    10. '",' → logprob: -11.227951049804688

Token 258: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0076065086759626865
    2. ' p' → logprob: -4.882606506347656
    3. ' ' → logprob: -15.632606506347656
    4. ')p' → logprob: -16.257606506347656
    5. ''p' → logprob: -16.507606506347656
    6. '   ' → logprob: -18.007606506347656
    7. ')' → logprob: -18.507606506347656
    8. '(p' → logprob: -18.882606506347656
    9. ',p' → logprob: -19.132606506347656
    10. ',' → logprob: -19.257606506347656

Token 259: '[' (ID: 58)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.25193077325820923
    2. '[' → logprob: -1.5019307136535645
    3. '```' → logprob: -15.126931190490723
    4. ' [' → logprob: -15.251931190490723
    5. ' ' → logprob: -15.376931190490723
    6. 'from' → logprob: -15.751931190490723
    7. '`' → logprob: -16.001930236816406
    8. 'import' → logprob: -16.126930236816406
    9. '
' → logprob: -16.501930236816406
    10. '   ' → logprob: -16.501930236816406

Token 260: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.750000953674316
    3. '   ' → logprob: -16.750001907348633
    4. '
' → logprob: -18.375001907348633
    5. '[' → logprob: -18.500001907348633
    6. ':' → logprob: -19.625001907348633
    7. '```' → logprob: -19.625001907348633
    8. '  ' → logprob: -20.062501907348633
    9. '0' → logprob: -20.187501907348633
    10. '１' → logprob: -20.625001907348633

Token 261: ']))
' (ID: 24801)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0498662106692791
    2. ']))' → logprob: -3.049866199493408
    3. ':]' → logprob: -7.299866199493408
    4. '])' → logprob: -7.674866199493408
    5. ']' → logprob: -9.299866676330566
    6. ')])' → logprob: -11.424866676330566
    7. ':].' → logprob: -12.174866676330566
    8. ')' → logprob: -12.299866676330566
    9. ':],' → logprob: -12.299866676330566
    10. ']))
' → logprob: -12.424866676330566

Token 262: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16404522955417633
    2. ')' → logprob: -2.6640453338623047
    3. 'else' → logprob: -2.7890453338623047
    4. ' else' → logprob: -4.039045333862305
    5. ')
' → logprob: -6.414045333862305
    6. ' )' → logprob: -7.664045333862305
    7. '))' → logprob: -8.789045333862305
    8. ',' → logprob: -9.289045333862305
    9. '   ' → logprob: -9.789045333862305
    10. '	' → logprob: -11.164045333862305

Token 263: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.25274938344955444
    2. 'else' (adapté à ' else') → logprob: -1.5027494430541992
    3. ')' → logprob: -7.877749443054199
    4. '       ' → logprob: -8.0027494430542
    5. ' )' → logprob: -9.5027494430542
    6. '   ' → logprob: -10.7527494430542
    7. '	else' → logprob: -13.2527494430542
    8. ')
' → logprob: -13.3777494430542
    9. ' elif' → logprob: -13.3777494430542
    10. 'elif' → logprob: -13.7527494430542

Token 264: ':
' (ID: 734)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.0476144552230835
    2. '('' → logprob: -1.1726144552230835
    3. ' ('' → logprob: -2.297614574432373
    4. '           ' → logprob: -2.422614574432373
    5. ' (' → logprob: -2.672614574432373
    6. '       ' → logprob: -3.172614574432373
    7. '('',' → logprob: -3.672614574432373
    8. '   ' → logprob: -5.672614574432373
    9. '        ' → logprob: -5.922614574432373
    10. 'l' → logprob: -6.422614574432373

Token 265: '           ' (ID: 352)
  Prédit: '('','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '('',' → logprob: -0.20351740717887878
    2. '('' → logprob: -1.7035174369812012
    3. ' ('' → logprob: -6.453517436981201
    4. '(' → logprob: -7.828517436981201
    5. '(None' → logprob: -10.203516960144043
    6. 'l' → logprob: -10.703516960144043
    7. '('.',' → logprob: -10.703516960144043
    8. ' (' → logprob: -11.078516960144043
    9. '(',',' → logprob: -12.203516960144043
    10. '('-',' → logprob: -12.203516960144043

Token 266: ' lits' (ID: 108113)
  Prédit: '('','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '('',' → logprob: -0.048705458641052246
    2. '('' → logprob: -3.048705577850342
    3. '(' → logprob: -9.923705101013184
    4. 'l' → logprob: -10.048705101013184
    5. '(None' → logprob: -11.298705101013184
    6. ' ('' → logprob: -12.173705101013184
    7. '('.',' → logprob: -13.048705101013184
    8. '(l' → logprob: -13.923705101013184
    9. '(',',' → logprob: -13.923705101013184
    10. '("",' → logprob: -13.923705101013184

Token 267: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00016635251813568175
    2. 'append' → logprob: -8.750165939331055
    3. '.' → logprob: -11.750165939331055
    4. ' append' → logprob: -17.250165939331055
    5. '.Append' → logprob: -18.000165939331055
    6. '.app' → logprob: -18.750165939331055
    7. '.
' → logprob: -19.125165939331055
    8. ' .' → logprob: -19.125165939331055
    9. 'Append' → logprob: -19.375165939331055
    10. '	append' → logprob: -19.375165939331055

Token 268: '(' (ID: 7)
  Prédit: '('','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('',' → logprob: -0.060276422649621964
    2. '(' → logprob: -3.560276508331299
    3. '('' → logprob: -3.560276508331299
    4. '(p' → logprob: -6.560276508331299
    5. ' ('' → logprob: -9.43527603149414
    6. '(('' → logprob: -9.68527603149414
    7. '(None' → logprob: -10.06027603149414
    8. '(True' → logprob: -11.18527603149414
    9. ' (' → logprob: -12.06027603149414
    10. '("",' → logprob: -12.31027603149414

Token 269: '('+' (ID: 108514)
  Prédit: '('','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '('',' → logprob: -0.008759336546063423
    2. '('' → logprob: -4.758759498596191
    3. '(' → logprob: -8.883759498596191
    4. ' ('' → logprob: -13.008759498596191
    5. '(None' → logprob: -13.758759498596191
    6. '('.',' → logprob: -13.883759498596191
    7. '("",' → logprob: -14.258759498596191
    8. '(p' → logprob: -14.758759498596191
    9. '('-',' → logprob: -15.883759498596191
    10. ''',' → logprob: -16.008758544921875

Token 270: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.00015264409012161195
    2. ''' → logprob: -9.250152587890625
    3. ',' → logprob: -10.250152587890625
    4. ''',' → logprob: -11.375152587890625
    5. ' ',' → logprob: -11.875152587890625
    6. '','' → logprob: -13.250152587890625
    7. '''' → logprob: -15.125152587890625
    8. '",' → logprob: -15.250152587890625
    9. '')' → logprob: -15.750152587890625
    10. ''),' → logprob: -15.750152587890625

Token 271: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.048587486147880554
    2. ' p' → logprob: -3.0485875606536865
    3. ' ' → logprob: -16.173587799072266
    4. ''p' → logprob: -18.298587799072266
    5. ' ' → logprob: -18.673587799072266
    6. '   ' → logprob: -18.923587799072266
    7. '	p' → logprob: -19.173587799072266
    8. ')p' → logprob: -19.298587799072266
    9. '_p' → logprob: -20.673587799072266
    10. '  ' → logprob: -20.673587799072266

Token 272: '[' (ID: 58)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.25198623538017273
    2. '[' → logprob: -1.5019862651824951
    3. ')' → logprob: -9.876986503601074
    4. ' ' → logprob: -12.626986503601074
    5. '))' → logprob: -13.251986503601074
    6. '   ' → logprob: -15.376986503601074
    7. ')])' → logprob: -15.876986503601074
    8. ')[' → logprob: -16.001985549926758
    9. ')]' → logprob: -16.126985549926758
    10. ' [' → logprob: -16.876985549926758

Token 273: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -13.750000953674316
    3. '   ' → logprob: -17.000001907348633
    4. ')' → logprob: -17.125001907348633
    5. '۰' → logprob: -17.250001907348633
    6. ']' → logprob: -19.125001907348633
    7. '[' → logprob: -19.250001907348633
    8. '  ' → logprob: -19.375001907348633
    9. '])' → logprob: -19.687501907348633
    10. '
' → logprob: -19.875001907348633

Token 274: ']))
' (ID: 24801)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0032696877606213093
    2. ''))' → logprob: -5.753269672393799
    3. ')' → logprob: -9.878270149230957
    4. ']))' → logprob: -10.503270149230957
    5. ' ))' → logprob: -12.378270149230957
    6. '))
' → logprob: -12.503270149230957
    7. '']))' → logprob: -13.003270149230957
    8. ')))' → logprob: -13.878270149230957
    9. '"))' → logprob: -14.378270149230957
    10. '])' → logprob: -14.628270149230957

Token 275: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0023039355874061584
    2. ' return' → logprob: -6.5023040771484375
    3. 'return' → logprob: -7.8773040771484375
    4. '
' → logprob: -8.002304077148438
    5. ')' → logprob: -10.377304077148438
    6. '    
' → logprob: -11.002304077148438
    7. '	return' → logprob: -11.127304077148438
    8. '<|end|>' → logprob: -11.377304077148438
    9. '       ' → logprob: -12.252304077148438
    10. ':return' → logprob: -12.502304077148438

Token 276: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.4357636868953705
    2. 'return' (adapté à ' return') → logprob: -1.1857637166976929
    3. '   ' → logprob: -3.0607635974884033
    4. '
' → logprob: -7.310763835906982
    5. '	return' → logprob: -9.185763359069824
    6. ')' → logprob: -10.185763359069824
    7. ':return' → logprob: -11.185763359069824
    8. ' 
' → logprob: -11.435763359069824
    9. '    
' → logprob: -12.310763359069824
    10. ' ' → logprob: -12.310763359069824

Token 277: ' lits' (ID: 108113)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.0031812789384275675
    2. ' lits' → logprob: -5.753181457519531
    3. 'lts' → logprob: -13.003181457519531
    4. 'lit' → logprob: -14.753181457519531
    5. '	l' → logprob: -15.253181457519531
    6. '[l' → logprob: -16.25318145751953
    7. ' l' → logprob: -16.25318145751953
    8. ' ' → logprob: -16.37818145751953
    9. '`' → logprob: -16.50318145751953
    10. '[' → logprob: -16.75318145751953

Token 278: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7474774718284607
    2. '<|end|>' → logprob: -0.8724774718284607
    3. 'def' → logprob: -2.6224775314331055
    4. '

' → logprob: -3.3724775314331055
    5. '<|end|>' → logprob: -6.7474775314331055
    6. '```' → logprob: -8.997477531433105
    7. '\n' → logprob: -9.997477531433105
    8. '#' → logprob: -9.997477531433105
    9. '  
' → logprob: -10.247477531433105
    10. '[' → logprob: -10.372477531433105

Token 279: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.05904211476445198
    2. '<|end|>' → logprob: -3.18404221534729
    3. '
' → logprob: -4.309041976928711
    4. '```' → logprob: -6.684041976928711
    5. '#' → logprob: -7.684041976928711
    6. '<|end|>' → logprob: -8.559041976928711
    7. 'import' → logprob: -8.559041976928711
    8. '

' → logprob: -9.684041976928711
    9. 'newline' → logprob: -9.809041976928711
    10. '\n' → logprob: -9.934041976928711

Token 280: ' get' (ID: 717)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.5881497859954834
    2. 'main' → logprob: -2.3381497859954834
    3. ' evaluate' → logprob: -2.8381497859954834
    4. 'evaluate' → logprob: -2.8381497859954834
    5. 'combine' → logprob: -2.9631497859954834
    6. ' simplify' → logprob: -3.0881497859954834
    7. 'simpl' → logprob: -3.9631497859954834
    8. 'd' → logprob: -4.2131500244140625
    9. ' combine' → logprob: -4.4631500244140625
    10. 'to' → logprob: -4.8381500244140625

Token 281: '_vars' (ID: 25901)
  Prédit: '_cl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_cl' → logprob: -0.05719255656003952
    2. '_literals' → logprob: -4.057192325592041
    3. '_expression' → logprob: -4.557192325592041
    4. '_clause' → logprob: -4.682192325592041
    5. '_next' → logprob: -4.932192325592041
    6. '_' → logprob: -5.932192325592041
    7. '_variables' → logprob: -6.557192325592041
    8. '_expr' → logprob: -6.932192325592041
    9. '_tokens' → logprob: -7.182192325592041
    10. '_variable' → logprob: -7.432192325592041

Token 282: '(' (ID: 7)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.03859826177358627
    2. '(' → logprob: -3.2885982990264893
    3. ' (' → logprob: -8.28859806060791
    4. '()' → logprob: -8.91359806060791
    5. '(S' → logprob: -10.66359806060791
    6. '(expression' → logprob: -10.66359806060791
    7. '(string' → logprob: -10.78859806060791
    8. '(expr' → logprob: -10.91359806060791
    9. '(_' → logprob: -11.28859806060791
    10. '(line' → logprob: -11.41359806060791

Token 283: 'cla' (ID: 16530)
  Prédit: 'expr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'expr' → logprob: -0.541400671005249
    2. 'cla' → logprob: -1.416400671005249
    3. 's' → logprob: -2.166400671005249
    4. 'cl' → logprob: -3.541400671005249
    5. 'expression' → logprob: -4.166400909423828
    6. ' clauses' → logprob: -5.791400909423828
    7. ')' → logprob: -5.916400909423828
    8. ' expr' → logprob: -5.916400909423828
    9. 'formula' → logprob: -6.166400909423828
    10. 'cls' → logprob: -7.041400909423828

Token 284: 'uses' (ID: 5977)
  Prédit: 'use'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'use' → logprob: -0.07909908145666122
    2. 'uses' → logprob: -2.579099178314209
    3. 'ause' → logprob: -9.20409870147705
    4. '_use' → logprob: -10.20409870147705
    5. '(use' → logprob: -10.57909870147705
    6. 'USE' → logprob: -11.20409870147705
    7. 'user' → logprob: -12.07909870147705
    8. '-use' → logprob: -12.32909870147705
    9. ')' → logprob: -12.57909870147705
    10. 'used' → logprob: -12.70409870147705

Token 285: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.023638736456632614
    2. '):
' → logprob: -3.7736387252807617
    3. '(' → logprob: -8.523638725280762
    4. ' ):' → logprob: -9.398638725280762
    5. '):
' → logprob: -10.023638725280762
    6. '):

' → logprob: -10.273638725280762
    7. ')' → logprob: -10.773638725280762
    8. ',' → logprob: -12.523638725280762
    9. '   ' → logprob: -13.273638725280762
    10. '(cl' → logprob: -13.773638725280762

Token 286: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.48392048478126526
    2. ' vars' → logprob: -0.9839204549789429
    3. 'vars' → logprob: -4.733920574188232
    4. ' variables' → logprob: -7.483920574188232
    5. ' s' → logprob: -8.483920097351074
    6. ' var' → logprob: -9.233920097351074
    7. '_vars' → logprob: -9.858920097351074
    8. '(vars' → logprob: -10.608920097351074
    9. ' all' → logprob: -11.233920097351074
    10. 'var' → logprob: -11.608920097351074

Token 287: ' vars' (ID: 36194)
  Prédit: 'vars'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vars' (adapté à ' vars') → logprob: -0.21632768213748932
    2. ' vars' → logprob: -1.7163276672363281
    3. '   ' → logprob: -4.216327667236328
    4. 'v' → logprob: -10.716327667236328
    5. '_vars' → logprob: -11.716327667236328
    6. 'var' → logprob: -12.091327667236328
    7. ' variables' → logprob: -12.216327667236328
    8. 'variables' → logprob: -12.716327667236328
    9. ' s' → logprob: -12.841327667236328
    10. 's' → logprob: -13.466327667236328

Token 288: '_set' (ID: 5451)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.029828587546944618
    2. '=' → logprob: -3.5298285484313965
    3. '=set' → logprob: -10.154829025268555
    4. '   ' → logprob: -11.404829025268555
    5. '_' → logprob: -11.529829025268555
    6. '_set' → logprob: -11.529829025268555
    7. 's' → logprob: -12.904829025268555
    8. ')' → logprob: -13.404829025268555
    9. ' ' → logprob: -13.529829025268555
    10. ' set' → logprob: -13.779829025268555

Token 289: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.014164801687002182
    2. '=' → logprob: -4.264164924621582
    3. ' ' → logprob: -13.889164924621582
    4. ' =
' → logprob: -16.139163970947266
    5. '=set' → logprob: -16.764163970947266
    6. ' =)' → logprob: -16.764163970947266
    7. 's' → logprob: -17.014163970947266
    8. '=[]' → logprob: -17.139163970947266
    9. ')' → logprob: -17.264163970947266
    10. '   ' → logprob: -17.514163970947266

Token 290: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.0067154900170862675
    2. ' set' → logprob: -5.006715297698975
    3. '=set' → logprob: -15.756715774536133
    4. '	set' → logprob: -17.256715774536133
    5. '{}' → logprob: -19.006715774536133
    6. '(set' → logprob: -19.131715774536133
    7. ' ' → logprob: -20.131715774536133
    8. '{' → logprob: -20.631715774536133
    9. '   ' → logprob: -21.381715774536133
    10. ')set' → logprob: -21.506715774536133

Token 291: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.043153226375579834
    2. '()
' → logprob: -3.1681532859802246
    3. '(' → logprob: -9.543152809143066
    4. '()

' → logprob: -9.668152809143066
    5. '(
' → logprob: -11.543152809143066
    6. '   ' → logprob: -12.918152809143066
    7. '()
' → logprob: -13.043152809143066
    8. '();' → logprob: -13.293152809143066
    9. ' ()' → logprob: -14.418152809143066
    10. 'def' → logprob: -14.918152809143066

Token 292: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1801215261220932
    2. ' for' → logprob: -1.9301215410232544
    3. 'for' → logprob: -3.930121421813965
    4. '	for' → logprob: -10.430121421813965
    5. '
' → logprob: -11.055121421813965
    6. ' ' → logprob: -11.430121421813965
    7. '    
' → logprob: -13.305121421813965
    8. ' 
' → logprob: -14.680121421813965
    9. '  ' → logprob: -14.805121421813965
    10. ' ' → logprob: -15.430121421813965

Token 293: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.16964872181415558
    2. ' for' → logprob: -1.9196487665176392
    3. '   ' → logprob: -4.66964864730835
    4. ' ' → logprob: -12.794649124145508
    5. '	for' → logprob: -13.294649124145508
    6. '
' → logprob: -15.919649124145508
    7. '  ' → logprob: -17.419649124145508
    8. ' ' → logprob: -18.544649124145508
    9. ' 
' → logprob: -19.419649124145508
    10. '    
' → logprob: -19.919649124145508

Token 294: ' c' (ID: 274)
  Prédit: ' clause'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' clause' → logprob: -0.3336493670940399
    2. 'cl' → logprob: -1.3336493968963623
    3. ' c' → logprob: -4.958649158477783
    4. 'c' → logprob: -5.208649158477783
    5. ' cl' → logprob: -5.458649158477783
    6. ' lits' → logprob: -6.833649158477783
    7. 'cls' → logprob: -7.208649158477783
    8. ' lit' → logprob: -7.458649158477783
    9. 'lit' → logprob: -7.458649158477783
    10. ' cls' → logprob: -8.333649635314941

Token 295: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0024814847856760025
    2. 'in' → logprob: -6.002481460571289
    3. ' ' → logprob: -13.002481460571289
    4. 'l' → logprob: -13.502481460571289
    5. '_' → logprob: -14.127481460571289
    6. '   ' → logprob: -14.377481460571289
    7. 's' → logprob: -15.752481460571289
    8. 'a' → logprob: -15.877481460571289
    9. '	in' → logprob: -15.877481460571289
    10. '  ' → logprob: -16.12748146057129

Token 296: ' clauses' (ID: 99572)
  Prédit: 'cla'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cla' → logprob: -0.12844471633434296
    2. ' clauses' → logprob: -2.1284446716308594
    3. 'parse' → logprob: -6.753444671630859
    4. ' parse' → logprob: -8.12844467163086
    5. 'cl' → logprob: -10.75344467163086
    6. 'cls' → logprob: -11.37844467163086
    7. 'cles' → logprob: -12.25344467163086
    8. ' cla' → logprob: -12.50344467163086
    9. 'c' → logprob: -12.87844467163086
    10. ' ' → logprob: -13.37844467163086

Token 297: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.012961969710886478
    2. ':
' → logprob: -4.6379618644714355
    3. '   ' → logprob: -5.7629618644714355
    4. '       ' → logprob: -10.762962341308594
    5. ' :' → logprob: -11.512962341308594
    6. ' in' → logprob: -12.262962341308594
    7. ':
' → logprob: -12.637962341308594
    8. ' for' → logprob: -12.762962341308594
    9. '[' → logprob: -12.887962341308594
    10. '    ' → logprob: -13.137962341308594

Token 298: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16371393203735352
    2. ' for' → logprob: -2.0387139320373535
    3. 'for' → logprob: -4.5387139320373535
    4. '   ' → logprob: -4.9137139320373535
    5. ' lits' → logprob: -6.1637139320373535
    6. 'l' → logprob: -8.038713455200195
    7. ' l' → logprob: -9.038713455200195
    8. '    ' → logprob: -9.288713455200195
    9. ' literals' → logprob: -10.413713455200195
    10. ' clauses' → logprob: -11.163713455200195

Token 299: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.09082390367984772
    2. 'l' → logprob: -3.2158238887786865
    3. ' for' → logprob: -3.4658238887786865
    4. '   ' → logprob: -4.340824127197266
    5. ' lits' → logprob: -6.090824127197266
    6. '       ' → logprob: -9.590824127197266
    7. 'vars' → logprob: -10.590824127197266
    8. '	for' → logprob: -11.215824127197266
    9. 'parts' → logprob: -11.465824127197266
    10. 'lit' → logprob: -11.465824127197266

Token 300: ' s' (ID: 265)
  Prédit: 'lit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lit' → logprob: -0.6900964975357056
    2. 'sign' → logprob: -1.5650964975357056
    3. ' sign' → logprob: -1.8150964975357056
    4. 'l' → logprob: -2.940096378326416
    5. 'op' → logprob: -4.440096378326416
    6. '(_,' → logprob: -4.440096378326416
    7. 'typ' → logprob: -4.565096378326416
    8. 's' → logprob: -4.940096378326416
    9. ' lit' → logprob: -4.940096378326416
    10. 't' → logprob: -5.190096378326416

Token 301: ',l' (ID: 45198)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.2815950810909271
    2. ' in' → logprob: -1.4065951108932495
    3. 's' → logprob: -8.031595230102539
    4. ',' → logprob: -11.156595230102539
    5. 'a' → logprob: -11.281595230102539
    6. '_' → logprob: -11.406595230102539
    7. 'p' → logprob: -11.656595230102539
    8. 't' → logprob: -11.906595230102539
    9. 'i' → logprob: -12.156595230102539
    10. '_in' → logprob: -12.156595230102539

Token 302: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0632576122879982
    2. 'in' → logprob: -3.1882576942443848
    3. 's' → logprob: -4.188257694244385
    4. 'iteral' → logprob: -5.563257694244385
    5. 'it' → logprob: -7.313257694244385
    6. 'etter' → logprob: -8.938257217407227
    7. 'iterals' → logprob: -9.188257217407227
    8. 't' → logprob: -10.813257217407227
    9. ',' → logprob: -10.938257217407227
    10. 'itter' → logprob: -11.063257217407227

Token 303: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.03724335879087448
    2. 'parse' → logprob: -3.412243366241455
    3. ' c' → logprob: -5.912243366241455
    4. ' parse' → logprob: -7.037243366241455
    5. 'get' → logprob: -12.787242889404297
    6. '(parse' → logprob: -13.912242889404297
    7. ' ' → logprob: -14.662242889404297
    8. '   ' → logprob: -14.912242889404297
    9. '(c' → logprob: -15.037242889404297
    10. '[' → logprob: -15.162242889404297

Token 304: ':
' (ID: 734)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.9610987305641174
    2. ':' → logprob: -1.0860986709594727
    3. '[' → logprob: -1.9610986709594727
    4. ':
' → logprob: -2.3360986709594727
    5. 's' → logprob: -4.336098670959473
    6. 'in' → logprob: -4.461098670959473
    7. ')' → logprob: -4.961098670959473
    8. 'items' → logprob: -6.211098670959473
    9. '   ' → logprob: -6.336098670959473
    10. '```' → logprob: -6.586098670959473

Token 305: '           ' (ID: 352)
  Prédit: 'vars'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vars' → logprob: -0.7319299578666687
    2. '           ' → logprob: -0.8569299578666687
    3. ' vars' → logprob: -2.4819300174713135
    4. '       ' → logprob: -5.231929779052734
    5. '(vars' → logprob: -6.606929779052734
    6. '_vars' → logprob: -6.856929779052734
    7. ' if' → logprob: -6.981929779052734
    8. ':' → logprob: -7.481929779052734
    9. '.vars' → logprob: -7.731929779052734
    10. 'var' → logprob: -7.981929779052734

Token 306: ' vars' (ID: 36194)
  Prédit: 'vars'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vars' (adapté à ' vars') → logprob: -0.007920794188976288
    2. 'if' → logprob: -5.007920742034912
    3. ' vars' → logprob: -6.882920742034912
    4. ' if' → logprob: -8.88292121887207
    5. 'var' → logprob: -11.25792121887207
    6. '   ' → logprob: -11.63292121887207
    7. '       ' → logprob: -11.63292121887207
    8. '           ' → logprob: -12.38292121887207
    9. 'variables' → logprob: -13.13292121887207
    10. '(vars' → logprob: -13.13292121887207

Token 307: '_set' (ID: 5451)
  Prédit: '_set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_set' → logprob: -1.1279553291387856e-05
    2. '_vars' → logprob: -12.500011444091797
    3. '_' → logprob: -13.375011444091797
    4. '_sets' → logprob: -13.625011444091797
    5. 'set' → logprob: -13.875011444091797
    6. 's' → logprob: -14.125011444091797
    7. '._' → logprob: -14.500011444091797
    8. '_SET' → logprob: -14.750011444091797
    9. ')_' → logprob: -15.500011444091797
    10. '=' → logprob: -15.500011444091797

Token 308: '.add' (ID: 1950)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.2523159682750702
    2. '.add' → logprob: -1.5023159980773926
    3. ' .' → logprob: -7.877315998077393
    4. '=' → logprob: -13.127315521240234
    5. 'add' → logprob: -13.127315521240234
    6. '.update' → logprob: -13.127315521240234
    7. '.=' → logprob: -14.752315521240234
    8. '.append' → logprob: -15.752315521240234
    9. '.
' → logprob: -16.002315521240234
    10. ' |=' → logprob: -16.002315521240234

Token 309: '(l' (ID: 4179)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.0059732310473918915
    2. ' l' → logprob: -5.1309733390808105
    3. 's' → logprob: -10.255972862243652
    4. '(l' → logprob: -11.880972862243652
    5. ' s' → logprob: -13.505972862243652
    6. '(s' → logprob: -14.005972862243652
    7. ' ' → logprob: -15.630972862243652
    8. '(' → logprob: -16.38097381591797
    9. ' (' → logprob: -17.25597381591797
    10. '	l' → logprob: -17.38097381591797

Token 310: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.3438327843905427e-05
    2. ' )' → logprob: -10.75002384185791
    3. ')
' → logprob: -13.87502384185791
    4. '))' → logprob: -14.12502384185791
    5. '[' → logprob: -16.000022888183594
    6. ')s' → logprob: -17.625022888183594
    7. '')' → logprob: -18.375022888183594
    8. '   ' → logprob: -18.875022888183594
    9. ')`' → logprob: -18.875022888183594
    10. '})' → logprob: -18.875022888183594

Token 311: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9687186479568481
    2. 'return' → logprob: -0.9687186479568481
    3. ' return' → logprob: -1.4687186479568481
    4. '
' → logprob: -4.593718528747559
    5. '	return' → logprob: -7.843718528747559
    6. ' ' → logprob: -9.718718528747559
    7. ':return' → logprob: -10.718718528747559
    8. 'def' → logprob: -11.343718528747559
    9. ')' → logprob: -12.093718528747559
    10. '  ' → logprob: -12.218718528747559

Token 312: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.008826106786727905
    2. ' return' → logprob: -4.75882625579834
    3. '   ' → logprob: -8.50882625579834
    4. '
' → logprob: -12.38382625579834
    5. ' ' → logprob: -12.88382625579834
    6. 'eturn' → logprob: -13.50882625579834
    7. '	return' → logprob: -13.75882625579834
    8. ')' → logprob: -15.75882625579834
    9. ':return' → logprob: -15.88382625579834
    10. 'def' → logprob: -16.008825302124023

Token 313: ' list' (ID: 1562)
  Prédit: 'vars'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vars' → logprob: -0.0031812789384275675
    2. ' vars' → logprob: -5.753181457519531
    3. 'var' → logprob: -12.753181457519531
    4. 'variables' → logprob: -14.253181457519531
    5. ' variables' → logprob: -17.50318145751953
    6. '(vars' → logprob: -17.50318145751953
    7. 'list' → logprob: -18.87818145751953
    8. '_vars' → logprob: -19.87818145751953
    9. ' var' → logprob: -20.12818145751953
    10. 'v' → logprob: -20.62818145751953

Token 314: '(vars' (ID: 174980)
  Prédit: '(vars'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(vars' → logprob: -0.0011751054553315043
    2. '(' → logprob: -6.7511749267578125
    3. '(var' → logprob: -13.126174926757812
    4. 'vars' → logprob: -13.376174926757812
    5. ' (' → logprob: -14.376174926757812
    6. '_vars' → logprob: -15.001174926757812
    7. '(v' → logprob: -15.626174926757812
    8. '()' → logprob: -16.001174926757812
    9. '(vals' → logprob: -17.376174926757812
    10. '(params' → logprob: -17.376174926757812

Token 315: '_set' (ID: 5451)
  Prédit: '_set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_set' → logprob: -8.537868779967539e-06
    2. ')' → logprob: -12.750008583068848
    3. '_vars' → logprob: -12.750008583068848
    4. ')_' → logprob: -13.500008583068848
    5. 'set' → logprob: -14.625008583068848
    6. '_SET' → logprob: -15.250008583068848
    7. '_' → logprob: -16.00000762939453
    8. 'Set' → logprob: -16.25000762939453
    9. ')set' → logprob: -16.37500762939453
    10. 'et' → logprob: -16.50000762939453

Token 316: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -5.512236498361744e-07
    2. '))' → logprob: -15.250000953674316
    3. ')))' → logprob: -16.5
    4. ')
' → logprob: -16.75
    5. ' )' → logprob: -16.875
    6. '())' → logprob: -17.75
    7. ')}' → logprob: -17.875
    8. ')#' → logprob: -17.875
    9. ')`' → logprob: -18.125
    10. ')}}' → logprob: -18.25

Token 317: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 318: ' eval' (ID: 29383)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -1.035914421081543
    2. ' main' → logprob: -1.160914421081543
    3. 'solve' → logprob: -2.660914421081543
    4. 'parse' → logprob: -2.910914421081543
    5. 'd' → logprob: -3.035914421081543
    6. 'evaluate' → logprob: -3.410914421081543
    7. 'simpl' → logprob: -3.410914421081543
    8. ' solve' → logprob: -4.285914421081543
    9. ' evaluate' → logprob: -4.535914421081543
    10. 'eval' → logprob: -4.660914421081543

Token 319: '_literal' (ID: 80453)
  Prédit: '_expression'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_expression' → logprob: -0.6632553339004517
    2. '_expr' → logprob: -0.9132553339004517
    3. '_clause' → logprob: -2.913255214691162
    4. '_formula' → logprob: -4.163255214691162
    5. '(expression' → logprob: -5.413255214691162
    6. '(expr' → logprob: -5.413255214691162
    7. '(' → logprob: -6.038255214691162
    8. '_' → logprob: -6.788255214691162
    9. '_cl' → logprob: -7.663255214691162
    10. '_(' → logprob: -7.663255214691162

Token 320: '(val' (ID: 17391)
  Prédit: '(l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.0027408043388277292
    2. '(' → logprob: -6.127740859985352
    3. '(s' → logprob: -8.377740859985352
    4. '(sign' → logprob: -8.877740859985352
    5. '(expr' → logprob: -10.252740859985352
    6. '(ls' → logprob: -10.877740859985352
    7. '('' → logprob: -11.002740859985352
    8. '(state' → logprob: -11.127740859985352
    9. '(op' → logprob: -11.127740859985352
    10. '(operator' → logprob: -11.252740859985352

Token 321: ',' (ID: 11)
  Prédit: 'ue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ue' → logprob: -0.40992239117622375
    2. ',' → logprob: -1.7849223613739014
    3. '(' → logprob: -2.6599223613739014
    4. 'uate' → logprob: -3.2849223613739014
    5. 'ues' → logprob: -3.6599223613739014
    6. 's' → logprob: -4.9099225997924805
    7. 'uer' → logprob: -5.5349225997924805
    8. 'uation' → logprob: -5.5349225997924805
    9. 'uator' → logprob: -5.5349225997924805
    10. '(u' → logprob: -5.7849225997924805

Token 322: ' sign' (ID: 2232)
  Prédit: 'sign'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sign' → logprob: -0.07767833769321442
    2. 'lit' → logprob: -3.4526784420013428
    3. 'op' → logprob: -4.077678203582764
    4. ' sign' → logprob: -4.077678203582764
    5. 'neg' → logprob: -5.827678203582764
    6. 'sig' → logprob: -6.702678203582764
    7. 'l' → logprob: -6.702678203582764
    8. 'pol' → logprob: -6.702678203582764
    9. 'val' → logprob: -7.577678203582764
    10. 'literal' → logprob: -7.577678203582764

Token 323: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009645807440392673
    2. ',l' → logprob: -7.125964641571045
    3. ' ,' → logprob: -10.125964164733887
    4. 's' → logprob: -10.625964164733887
    5. '):' → logprob: -10.625964164733887
    6. ',s' → logprob: -11.250964164733887
    7. ',var' → logprob: -11.750964164733887
    8. ')' → logprob: -11.875964164733887
    9. ',val' → logprob: -12.000964164733887
    10. '_,' → logprob: -12.000964164733887

Token 324: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1377445459365845
    2. ':' → logprob: -1.3877445459365845
    3. '(' → logprob: -1.7627445459365845
    4. ' (' → logprob: -2.137744426727295
    5. '(l' → logprob: -3.137744426727295
    6. ',' → logprob: -3.887744426727295
    7. '(s' → logprob: -4.137744426727295
    8. '('' → logprob: -4.387744426727295
    9. ' :' → logprob: -4.387744426727295
    10. '(sign' → logprob: -5.262744426727295

Token 325: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05810213088989258
    2. ' if' → logprob: -3.5581021308898926
    3. ':' → logprob: -4.683102130889893
    4. ' return' → logprob: -5.683102130889893
    5. ' ' → logprob: -5.933102130889893
    6. '    ' → logprob: -6.183102130889893
    7. '(' → logprob: -6.433102130889893
    8. '  ' → logprob: -6.933102130889893
    9. 'if' → logprob: -6.933102130889893
    10. '[' → logprob: -7.058102130889893

Token 326: ' val' (ID: 1459)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.1864618957042694
    2. ' if' → logprob: -2.686461925506592
    3. 'return' → logprob: -2.811461925506592
    4. 'def' → logprob: -3.311461925506592
    5. ' return' → logprob: -5.561461925506592
    6. '   ' → logprob: -6.561461925506592
    7. '#' → logprob: -9.186461448669434
    8. '```' → logprob: -10.936461448669434
    9. '
' → logprob: -11.686461448669434
    10. ')' → logprob: -12.811461448669434

Token 327: ' is' (ID: 382)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.6361933350563049
    2. '==' → logprob: -0.8861933350563049
    3. '=' → logprob: -4.01119327545166
    4. ' is' → logprob: -4.51119327545166
    5. ':' → logprob: -5.01119327545166
    6. ',' → logprob: -5.01119327545166
    7. ' =' → logprob: -5.26119327545166
    8. '   ' → logprob: -5.63619327545166
    9. ' if' → logprob: -6.01119327545166
    10. ' and' → logprob: -6.88619327545166

Token 328: ' boolean' (ID: 3870)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.45742180943489075
    2. ' True' → logprob: -1.3324217796325684
    3. 'bool' → logprob: -2.5824217796325684
    4. 'boolean' → logprob: -4.707421779632568
    5. ' bool' → logprob: -4.957421779632568
    6. ' boolean' → logprob: -5.582421779632568
    7. '1' → logprob: -5.707421779632568
    8. ' a' → logprob: -6.832421779632568
    9. 'variable' → logprob: -7.082421779632568
    10. '   ' → logprob: -7.457421779632568

Token 329: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5040701031684875
    2. ',' → logprob: -1.0040700435638428
    3. ' :' → logprob: -5.129070281982422
    4. ':
' → logprob: -5.129070281982422
    5. ' ,' → logprob: -5.504070281982422
    6. '):' → logprob: -5.754070281982422
    7. '   ' → logprob: -5.879070281982422
    8. 'def' → logprob: -6.754070281982422
    9. ',
' → logprob: -6.754070281982422
    10. ' and' → logprob: -7.004070281982422

Token 330: ' sign' (ID: 2232)
  Prédit: ' sign'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sign' → logprob: -0.5537440180778503
    2. 'sign' → logprob: -1.1787440776824951
    3. ' literal' → logprob: -3.553744077682495
    4. '   ' → logprob: -3.678744077682495
    5. 'literal' → logprob: -3.678744077682495
    6. ' if' → logprob: -4.803743839263916
    7. ' return' → logprob: -5.303743839263916
    8. ' not' → logprob: -5.428743839263916
    9. 'l' → logprob: -5.428743839263916
    10. 'lit' → logprob: -5.678743839263916

Token 331: ' '+'' (ID: 137356)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.21698394417762756
    2. ' ==' → logprob: -1.9669839143753052
    3. ' is' → logprob: -3.0919840335845947
    4. '=' → logprob: -5.466983795166016
    5. '=='' → logprob: -5.966983795166016
    6. ')' → logprob: -6.966983795166016
    7. ':' → logprob: -7.716983795166016
    8. ' ' → logprob: -8.091983795166016
    9. 'is' → logprob: -8.091983795166016
    10. '[' → logprob: -8.341983795166016

Token 332: ' means' (ID: 4748)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.28413012623786926
    2. 'or' → logprob: -1.4091300964355469
    3. '<|end|>' → logprob: -6.909130096435547
    4. 'def' → logprob: -7.659130096435547
    5. ',' → logprob: -7.784130096435547
    6. ')' → logprob: -8.284130096435547
    7. ':' → logprob: -8.409130096435547
    8. ' is' → logprob: -8.784130096435547
    9. '=' → logprob: -9.159130096435547
    10. '==' → logprob: -9.784130096435547

Token 333: ' var' (ID: 972)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.17643019556999207
    2. 'not' → logprob: -2.3014302253723145
    3. 'True' → logprob: -3.6764302253723145
    4. ' val' → logprob: -3.6764302253723145
    5. 'positive' → logprob: -5.9264302253723145
    6. 'literal' → logprob: -5.9264302253723145
    7. ' not' → logprob: -6.3014302253723145
    8. ' True' → logprob: -6.5514302253723145
    9. 'return' → logprob: -7.0514302253723145
    10. 'sign' → logprob: -7.8014302253723145

Token 334: ',' (ID: 11)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.5698919296264648
    2. ',' → logprob: -1.6948919296264648
    3. ' or' → logprob: -2.569891929626465
    4. ' is' → logprob: -2.819891929626465
    5. ' ==' → logprob: -3.319891929626465
    6. 'is' → logprob: -4.069891929626465
    7. ' else' → logprob: -4.319891929626465
    8. ' ,' → logprob: -4.444891929626465
    9. 'True' → logprob: -5.069891929626465
    10. 'else' → logprob: -5.194891929626465

Token 335: ' '~' (ID: 155911)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.18942511081695557
    2. 'sign' → logprob: -2.439424991607666
    3. ''-' → logprob: -2.689424991607666
    4. ' '~' → logprob: -4.189424991607666
    5. ' '-'' → logprob: -7.439424991607666
    6. ' sign' → logprob: -7.814424991607666
    7. ''#' → logprob: -8.564425468444824
    8. '   ' → logprob: -8.814425468444824
    9. ''s' → logprob: -8.939425468444824
    10. ''^' → logprob: -8.939425468444824

Token 336: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.025032205507159233
    2. ' means' → logprob: -4.150032043457031
    3. 'means' → logprob: -5.025032043457031
    4. ' '' → logprob: -6.150032043457031
    5. '',' → logprob: -10.025032043457031
    6. 'sign' → logprob: -10.150032043457031
    7. '`' → logprob: -10.900032043457031
    8. '')' → logprob: -10.900032043457031
    9. ''s' → logprob: -11.025032043457031
    10. 'def' → logprob: -11.525032043457031

Token 337: ' means' (ID: 4748)
  Prédit: ' means'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' means' → logprob: -0.6487523317337036
    2. 'means' → logprob: -0.7737523317337036
    3. ':' → logprob: -4.898752212524414
    4. ')' → logprob: -6.273752212524414
    5. 'def' → logprob: -6.523752212524414
    6. '==' → logprob: -7.023752212524414
    7. ',' → logprob: -7.398752212524414
    8. ' is' → logprob: -7.398752212524414
    9. 'is' → logprob: -8.023752212524414
    10. ''' → logprob: -8.148752212524414

Token 338: ' neg' (ID: 4528)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.03388853743672371
    2. ' not' → logprob: -3.533888578414917
    3. 'neg' → logprob: -5.533888339996338
    4. ' neg' → logprob: -8.658888816833496
    5. 'NOT' → logprob: -13.658888816833496
    6. 'logical' → logprob: -13.658888816833496
    7. '	not' → logprob: -13.783888816833496
    8. ' negate' → logprob: -14.408888816833496
    9. '   ' → logprob: -15.158888816833496
    10. ' logical' → logprob: -15.158888816833496

Token 339: 'ated' (ID: 780)
  Prédit: 'ate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ate' → logprob: -0.3208964765071869
    2. 'ation' → logprob: -1.3208965063095093
    3. ')' → logprob: -4.945896625518799
    4. 'ated' → logprob: -8.19589614868164
    5. 'val' → logprob: -9.07089614868164
    6. 'a' → logprob: -10.07089614868164
    7. '')' → logprob: -11.94589614868164
    8. '   ' → logprob: -12.19589614868164
    9. ' val' → logprob: -12.44589614868164
    10. 'ates' → logprob: -12.57089614868164

Token 340: ' var' (ID: 972)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.8402659893035889
    2. ':' → logprob: -1.3402659893035889
    3. '   ' → logprob: -1.5902659893035889
    4. '):
' → logprob: -3.590265989303589
    5. ' if' → logprob: -4.090266227722168
    6. 'def' → logprob: -4.215266227722168
    7. '
' → logprob: -4.465266227722168
    8. ',' → logprob: -4.590266227722168
    9. ':return' → logprob: -5.465266227722168
    10. '):' → logprob: -5.590266227722168

Token 341: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3562891483306885
    2. '   ' → logprob: -1.6062891483306885
    3. ':
' → logprob: -2.8562891483306885
    4. ':return' → logprob: -3.8562891483306885
    5. '):' → logprob: -4.856288909912109
    6. ')' → logprob: -5.481288909912109
    7. ',' → logprob: -6.481288909912109
    8. ' ' → logprob: -6.731288909912109
    9. '):
' → logprob: -6.981288909912109
    10. ' :' → logprob: -6.981288909912109

Token 342: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015933597460389137
    2. ' if' → logprob: -4.265933513641357
    3. 'if' → logprob: -7.015933513641357
    4. ':' → logprob: -8.515933990478516
    5. ',' → logprob: -8.765933990478516
    6. ':
' → logprob: -8.765933990478516
    7. ' return' → logprob: -9.640933990478516
    8. '```' → logprob: -9.765933990478516
    9. 'return' → logprob: -9.890933990478516
    10. '):
' → logprob: -10.265933990478516

Token 343: ' if' (ID: 538)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.5404541492462158
    2. 'if' (adapté à ' if') → logprob: -1.0404541492462158
    3. '   ' → logprob: -2.790454149246216
    4. ' if' → logprob: -6.040453910827637
    5. ' return' → logprob: -7.790453910827637
    6. '	return' → logprob: -10.915453910827637
    7. '```' → logprob: -12.290453910827637
    8. '	if' → logprob: -12.415453910827637
    9. ':return' → logprob: -13.665453910827637
    10. ')' → logprob: -13.790453910827637

Token 344: ' sign' (ID: 2232)
  Prédit: 'sign'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sign' → logprob: -0.06196858361363411
    2. ' sign' → logprob: -2.8119685649871826
    3. '(sign' → logprob: -13.936968803405762
    4. '	sign' → logprob: -16.811967849731445
    5. '_sign' → logprob: -17.686967849731445
    6. ' ' → logprob: -18.936967849731445
    7. '.sign' → logprob: -19.811967849731445
    8. '   ' → logprob: -20.686967849731445
    9. 'sig' → logprob: -21.436967849731445
    10. 'val' → logprob: -21.436967849731445

Token 345: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.0341251976788044
    2. ' ==' → logprob: -3.4091250896453857
    3. '=='' → logprob: -7.909125328063965
    4. '=' → logprob: -10.034125328063965
    5. '[' → logprob: -10.659125328063965
    6. '==
' → logprob: -11.034125328063965
    7. ')==' → logprob: -11.534125328063965
    8. '===' → logprob: -12.034125328063965
    9. ')' → logprob: -12.534125328063965
    10. ']==' → logprob: -12.784125328063965

Token 346: ' '+' (ID: 30120)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.2261878103017807
    2. ''+' → logprob: -1.601187825202942
    3. ' '~' → logprob: -7.726187705993652
    4. ' '+' → logprob: -9.101187705993652
    5. ' '+'' → logprob: -9.851187705993652
    6. '"+"' → logprob: -10.101187705993652
    7. ''-' → logprob: -10.351187705993652
    8. ''>' → logprob: -10.601187705993652
    9. '"+' → logprob: -11.226187705993652
    10. ''^' → logprob: -11.601187705993652

Token 347: '':
' (ID: 7669)
  Prédit: '':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':
' → logprob: -0.4882921576499939
    2. '':' → logprob: -0.9882921576499939
    3. ''' → logprob: -4.988292217254639
    4. ''):
' → logprob: -5.113292217254639
    5. ':' → logprob: -7.738292217254639
    6. ' '' → logprob: -7.863292217254639
    7. '')' → logprob: -8.73829174041748
    8. ''):' → logprob: -8.98829174041748
    9. '':
' → logprob: -9.36329174041748
    10. ' ':' → logprob: -10.11329174041748

Token 348: '       ' (ID: 309)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.33537396788597107
    2. ' return' → logprob: -1.8353739976882935
    3. '   ' → logprob: -2.085373878479004
    4. ':return' → logprob: -8.085373878479004
    5. ' not' → logprob: -8.210373878479004
    6. 'not' → logprob: -8.585373878479004
    7. '       ' → logprob: -8.710373878479004
    8. '	return' → logprob: -9.460373878479004
    9. '
' → logprob: -9.960373878479004
    10. ':' → logprob: -11.085373878479004

Token 349: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.00011319868644932285
    2. ' return' → logprob: -9.250113487243652
    3. '   ' → logprob: -11.000113487243652
    4. '       ' → logprob: -15.375113487243652
    5. '
' → logprob: -16.250112533569336
    6. '	return' → logprob: -17.500112533569336
    7. 'val' → logprob: -17.625112533569336
    8. '    
' → logprob: -18.625112533569336
    9. ':return' → logprob: -19.250112533569336
    10. '```' → logprob: -19.750112533569336

Token 350: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.0007099286303855479
    2. ' val' → logprob: -7.2507100105285645
    3. '	val' → logprob: -21.125709533691406
    4. '   ' → logprob: -23.125709533691406
    5. ' ' → logprob: -23.125709533691406
    6. 'bool' → logprob: -23.500709533691406
    7. 'var' → logprob: -24.000709533691406
    8. 'True' → logprob: -24.125709533691406
    9. '_val' → logprob: -24.125709533691406
    10. ' ' → logprob: -24.375709533691406

Token 351: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.023036742582917213
    2. ' else' → logprob: -4.773036956787109
    3. 'else' → logprob: -4.898036956787109
    4. '
' → logprob: -5.648036956787109
    5. '<|end|>' → logprob: -5.773036956787109
    6. '	else' → logprob: -9.27303695678711
    7. '<|end|>' → logprob: -10.14803695678711
    8. 'elif' → logprob: -11.52303695678711
    9. '  ' → logprob: -11.52303695678711
    10. 'False' → logprob: -11.89803695678711

Token 352: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010448707267642021
    2. 'else' → logprob: -4.760448932647705
    3. ' else' → logprob: -6.760448932647705
    4. 'elif' → logprob: -7.385448932647705
    5. ' elif' → logprob: -10.635448455810547
    6. 'if' → logprob: -11.135448455810547
    7. 'return' → logprob: -11.885448455810547
    8. '
' → logprob: -13.260448455810547
    9. ' if' → logprob: -13.385448455810547
    10. '```' → logprob: -13.635448455810547

Token 353: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.015499874018132687
    2. ' else' → logprob: -4.265500068664551
    3. '   ' → logprob: -7.015500068664551
    4. 'return' → logprob: -8.39050006866455
    5. 'elif' → logprob: -8.51550006866455
    6. ' return' → logprob: -12.14050006866455
    7. '
' → logprob: -12.64050006866455
    8. ' elif' → logprob: -13.89050006866455
    9. 'if' → logprob: -14.76550006866455
    10. '	else' → logprob: -15.14050006866455

Token 354: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00589703768491745
    2. ':
' → logprob: -5.255897045135498
    3. '   ' → logprob: -7.755897045135498
    4. ':return' → logprob: -8.75589656829834
    5. ' :' → logprob: -10.00589656829834
    6. '       ' → logprob: -11.38089656829834
    7. 'return' → logprob: -11.88089656829834
    8. ' not' → logprob: -12.75589656829834
    9. ',' → logprob: -13.25589656829834
    10. '    ' → logprob: -13.63089656829834

Token 355: '       ' (ID: 309)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.31273117661476135
    2. '   ' → logprob: -1.562731146812439
    3. ' return' → logprob: -3.0627312660217285
    4. 'not' → logprob: -5.1877312660217285
    5. '       ' → logprob: -5.3127312660217285
    6. ' not' → logprob: -6.5627312660217285
    7. '	return' → logprob: -8.68773078918457
    8. ':return' → logprob: -10.18773078918457
    9. '    ' → logprob: -10.56273078918457
    10. '    
' → logprob: -10.56273078918457

Token 356: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.001147483242675662
    2. ' return' → logprob: -7.251147270202637
    3. 'not' → logprob: -7.751147270202637
    4. '   ' → logprob: -12.001147270202637
    5. ' not' → logprob: -14.126147270202637
    6. '
' → logprob: -16.626148223876953
    7. '	return' → logprob: -16.751148223876953
    8. '       ' → logprob: -17.501148223876953
    9. 'import' → logprob: -17.751148223876953
    10. '    
' → logprob: -18.376148223876953

Token 357: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.04858805239200592
    2. ' not' → logprob: -3.0485880374908447
    3. '   ' → logprob: -14.423587799072266
    4. '(not' → logprob: -17.298587799072266
    5. '!' → logprob: -17.548587799072266
    6. ' ' → logprob: -18.548587799072266
    7. '	not' → logprob: -18.673587799072266
    8. ' ' → logprob: -19.673587799072266
    9. '
' → logprob: -20.798587799072266
    10. '[' → logprob: -21.173587799072266

Token 358: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -5.836499985889532e-05
    2. ' val' → logprob: -9.7500581741333
    3. '(val' → logprob: -22.750059127807617
    4. '	val' → logprob: -23.125059127807617
    5. '_val' → logprob: -23.250059127807617
    6. 'Val' → logprob: -24.750059127807617
    7. 'value' → logprob: -24.750059127807617
    8. '[val' → logprob: -25.250059127807617
    9. '.val' → logprob: -25.625059127807617
    10. ' ' → logprob: -25.625059127807617

Token 359: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5924531817436218
    2. '
' → logprob: -0.8424531817436218
    3. '<|end|>' → logprob: -4.7174530029296875
    4. '

' → logprob: -5.0924530029296875
    5. '<|end|>' → logprob: -7.7174530029296875
    6. '  
' → logprob: -7.8424530029296875
    7. ' 
' → logprob: -8.967453002929688
    8. '    
' → logprob: -9.592453002929688
    9. '\n' → logprob: -9.717453002929688
    10. '```' → logprob: -10.342453002929688

Token 360: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -3.786196975852363e-05
    2. '<|end|>' → logprob: -11.125038146972656
    3. '```' → logprob: -11.750038146972656
    4. ' def' → logprob: -11.750038146972656
    5. 'import' → logprob: -12.875038146972656
    6. 'from' → logprob: -13.375038146972656
    7. '(' → logprob: -14.250038146972656
    8. '
' → logprob: -14.375038146972656
    9. 'for' → logprob: -14.500038146972656
    10. '#' → logprob: -14.750038146972656

Token 361: ' main' (ID: 2758)
  Prédit: 'eval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'eval' → logprob: -0.07409653812646866
    2. ' eval' → logprob: -2.699096441268921
    3. 'evaluate' → logprob: -6.3240966796875
    4. 'solve' → logprob: -6.5740966796875
    5. ' evaluate' → logprob: -7.6990966796875
    6. ' solve' → logprob: -8.3240966796875
    7. 'def' → logprob: -8.5740966796875
    8. 's' → logprob: -10.4490966796875
    9. ' def' → logprob: -12.0740966796875
    10. 'd' → logprob: -12.3240966796875

Token 362: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -8.041768160182983e-05
    2. '(' → logprob: -9.750080108642578
    3. '()' → logprob: -11.750080108642578
    4. '():
' → logprob: -11.750080108642578
    5. ' ():' → logprob: -12.500080108642578
    6. '_' → logprob: -13.500080108642578
    7. ':' → logprob: -14.500080108642578
    8. '(:' → logprob: -15.125080108642578
    9. '():
' → logprob: -16.000080108642578
    10. '()(' → logprob: -16.750080108642578

Token 363: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07394155859947205
    2. ' import' → logprob: -2.698941469192505
    3. 'import' → logprob: -5.698941707611084
    4. ' input' → logprob: -8.698941230773926
    5. '	import' → logprob: -9.198941230773926
    6. ' code' → logprob: -9.823941230773926
    7. ' readline' → logprob: -9.823941230773926
    8. '   ' → logprob: -9.948941230773926
    9. ' s' → logprob: -10.198941230773926
    10. ' lines' → logprob: -10.323941230773926

Token 364: ' lines' (ID: 8698)
  Prédit: ' import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.7702570557594299
    2. ' lines' → logprob: -1.6452569961547852
    3. '   ' → logprob: -1.8952569961547852
    4. 'import' → logprob: -2.770256996154785
    5. ' s' → logprob: -3.395256996154785
    6. ' input' → logprob: -3.895256996154785
    7. ' if' → logprob: -4.270256996154785
    8. ' expr' → logprob: -4.395256996154785
    9. ' line' → logprob: -4.520256996154785
    10. ' for' → logprob: -4.645256996154785

Token 365: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06995432823896408
    2. '=' → logprob: -2.6949543952941895
    3. '()' → logprob: -11.444953918457031
    4. '=sys' → logprob: -13.069953918457031
    5. '_' → logprob: -13.944953918457031
    6. '.' → logprob: -14.194953918457031
    7. '   ' → logprob: -14.194953918457031
    8. '=[]' → logprob: -14.819953918457031
    9. '	' → logprob: -15.194953918457031
    10. '[' → logprob: -15.444953918457031

Token 366: ' []
' (ID: 8911)
  Prédit: ' sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.3132796585559845
    2. 'sys' → logprob: -1.313279628753662
    3. '[' → logprob: -11.56328010559082
    4. ' [' → logprob: -12.18828010559082
    5. '[]' → logprob: -13.06328010559082
    6. '[]
' → logprob: -14.68828010559082
    7. '(sys' → logprob: -15.18828010559082
    8. '=sys' → logprob: -15.31328010559082
    9. '	sys' → logprob: -15.81328010559082
    10. ' []
' → logprob: -16.93828010559082

Token 367: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03479883819818497
    2. ' for' → logprob: -3.4097988605499268
    3. 'for' → logprob: -7.159798622131348
    4. ' while' → logprob: -8.034798622131348
    5. 'while' → logprob: -10.534798622131348
    6. 'import' → logprob: -11.909798622131348
    7. 'try' → logprob: -12.284798622131348
    8. ' try' → logprob: -12.534798622131348
    9. '	for' → logprob: -13.159798622131348
    10. ' ' → logprob: -13.284798622131348

Token 368: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.47503748536109924
    2. ' for' → logprob: -0.9750374555587769
    3. ' while' → logprob: -8.100037574768066
    4. '   ' → logprob: -8.100037574768066
    5. 'while' → logprob: -8.100037574768066
    6. 'try' → logprob: -10.225037574768066
    7. ' try' → logprob: -11.350037574768066
    8. 'import' → logprob: -14.225037574768066
    9. ' line' → logprob: -15.100037574768066
    10. 'line' → logprob: -15.225037574768066

Token 369: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.038112297654151917
    2. 'line' → logprob: -3.2881124019622803
    3. '_' → logprob: -9.78811264038086
    4. ' _' → logprob: -11.41311264038086
    5. '_line' → logprob: -12.78811264038086
    6. ' l' → logprob: -14.91311264038086
    7. 'l' → logprob: -15.16311264038086
    8. '	line' → logprob: -15.66311264038086
    9. '(line' → logprob: -17.28811264038086
    10. 'ln' → logprob: -17.53811264038086

Token 370: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0013338132994249463
    2. 'in' → logprob: -6.626333713531494
    3. ' ' → logprob: -11.876334190368652
    4. ' ' → logprob: -15.501334190368652
    5. '	in' → logprob: -15.876334190368652
    6. 'import' → logprob: -16.001333236694336
    7. '  ' → logprob: -16.126333236694336
    8. '_' → logprob: -16.251333236694336
    9. 'line' → logprob: -16.501333236694336
    10. 's' → logprob: -16.876333236694336

Token 371: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.5759466886520386
    2. ' sys' → logprob: -0.8259466886520386
    3. '=sys' → logprob: -12.575946807861328
    4. '	sys' → logprob: -12.950946807861328
    5. '(sys' → logprob: -13.575946807861328
    6. '```' → logprob: -17.075946807861328
    7. 'stdin' → logprob: -17.700946807861328
    8. 'import' → logprob: -18.200946807861328
    9. '   ' → logprob: -18.950946807861328
    10. '.sys' → logprob: -19.075946807861328

Token 372: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -7.100059156073257e-05
    2. 'stdin' → logprob: -9.750070571899414
    3. '.readline' → logprob: -12.250070571899414
    4. '(stdin' → logprob: -12.750070571899414
    5. '.' → logprob: -12.875070571899414
    6. ' stdin' → logprob: -13.500070571899414
    7. '.argv' → logprob: -14.500070571899414
    8. '.stdout' → logprob: -15.125070571899414
    9. '.std' → logprob: -17.125070571899414
    10. '.readlines' → logprob: -17.500070571899414

Token 373: ':
' (ID: 734)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.036980994045734406
    2. 'in' → logprob: -3.4119811058044434
    3. ':' → logprob: -6.286981105804443
    4. ':
' → logprob: -7.536981105804443
    5. '   ' → logprob: -7.911981105804443
    6. '.readline' → logprob: -8.536980628967285
    7. '.rstrip' → logprob: -9.161980628967285
    8. '.' → logprob: -10.036980628967285
    9. ' ' → logprob: -10.036980628967285
    10. '.strip' → logprob: -10.411980628967285

Token 374: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007171963807195425
    2. ' lines' → logprob: -7.3757171630859375
    3. '   ' → logprob: -10.500717163085938
    4. ' line' → logprob: -10.875717163085938
    5. '(lines' → logprob: -11.000717163085938
    6. '	lines' → logprob: -11.625717163085938
    7. '<|end|>' → logprob: -12.375717163085938
    8. '#line' → logprob: -12.875717163085938
    9. ' if' → logprob: -13.750717163085938
    10. ',' → logprob: -13.875717163085938

Token 375: ' line' (ID: 2543)
  Prédit: ' lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lines' → logprob: -0.3661370575428009
    2. ' line' → logprob: -1.6161370277404785
    3. '       ' → logprob: -2.2411370277404785
    4. ' if' → logprob: -6.7411370277404785
    5. '           ' → logprob: -8.741137504577637
    6. '   ' → logprob: -8.991137504577637
    7. '	lines' → logprob: -10.116137504577637
    8. 'line' (adapté à ' line') → logprob: -10.991137504577637
    9. '	line' → logprob: -11.366137504577637
    10. '(lines' → logprob: -11.366137504577637

Token 376: '=line' (ID: 192488)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0016050786944106221
    2. '=line' → logprob: -6.501605033874512
    3. ' =' → logprob: -9.251605033874512
    4. '.strip' → logprob: -12.251605033874512
    5. '.rstrip' → logprob: -14.626605033874512
    6. 'strip' → logprob: -14.626605033874512
    7. 'rstrip' → logprob: -14.751605033874512
    8. '.=' → logprob: -15.001605033874512
    9. '=
' → logprob: -15.626605033874512
    10. '_strip' → logprob: -15.751605033874512

Token 377: '.strip' (ID: 40613)
  Prédit: '.strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.005837791599333286
    2. '.rstrip' → logprob: -5.255837917327881
    3. '.' → logprob: -7.505837917327881
    4. '().' → logprob: -10.630837440490723
    5. 'strip' → logprob: -10.630837440490723
    6. ' .' → logprob: -13.505837440490723
    7. '.trim' → logprob: -13.630837440490723
    8. ' strip' → logprob: -14.130837440490723
    9. 'rstrip' → logprob: -14.130837440490723
    10. '_strip' → logprob: -14.130837440490723

Token 378: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.18033088743686676
    2. '       ' → logprob: -2.430330991744995
    3. '()
' → logprob: -3.180330991744995
    4. '<|end|>' → logprob: -3.680330991744995
    5. '<|end|>' → logprob: -5.680330753326416
    6. ')' → logprob: -6.055330753326416
    7. '        ' → logprob: -7.805330753326416
    8. '
' → logprob: -7.805330753326416
    9. '   ' → logprob: -7.805330753326416
    10. '(' → logprob: -7.930330753326416

Token 379: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0017599097918719053
    2. ' if' → logprob: -6.501760005950928
    3. '<|end|>' → logprob: -8.87675952911377
    4. 'if' → logprob: -9.37675952911377
    5. '   ' → logprob: -10.50175952911377
    6. '<|end|>' → logprob: -13.37675952911377
    7. ' ' → logprob: -13.50175952911377
    8. ',' → logprob: -14.25175952911377
    9. '[' → logprob: -14.50175952911377
    10. '           ' → logprob: -15.00175952911377

Token 380: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.00026729601086117327
    2. ' if' → logprob: -8.500267028808594
    3. 'lines' → logprob: -9.750267028808594
    4. '       ' → logprob: -12.375267028808594
    5. ' lines' → logprob: -13.625267028808594
    6. '   ' → logprob: -15.750267028808594
    7. '	if' → logprob: -17.500267028808594
    8. '
' → logprob: -18.750267028808594
    9. '```' → logprob: -19.250267028808594
    10. '           ' → logprob: -19.750267028808594

Token 381: ' line' (ID: 2543)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.11763427406549454
    2. ' line' → logprob: -2.8676342964172363
    3. 'not' → logprob: -3.1176342964172363
    4. 'line' → logprob: -4.617634296417236
    5. ' ' → logprob: -12.242633819580078
    6. 'len' → logprob: -14.117633819580078
    7. ' len' → logprob: -14.492633819580078
    8. '#line' → logprob: -14.617633819580078
    9. '	line' → logprob: -15.242633819580078
    10. '(line' → logprob: -15.617633819580078

Token 382: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.12704412639141083
    2. ' ==' → logprob: -2.127044200897217
    3. '==
' → logprob: -10.252043724060059
    4. '()==' → logprob: -10.377043724060059
    5. '=='' → logprob: -10.752043724060059
    6. ')==' → logprob: -11.502043724060059
    7. ']==' → logprob: -12.127043724060059
    8. '=' → logprob: -12.627043724060059
    9. '===' → logprob: -12.627043724060059
    10. '=="' → logprob: -12.752043724060059

Token 383: ' '#' (ID: 11284)
  Prédit: ''''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '''' → logprob: -0.07452813535928726
    2. ''' → logprob: -2.824528217315674
    3. '""' → logprob: -5.199528217315674
    4. '"":' → logprob: -5.199528217315674
    5. '"' → logprob: -6.699528217315674
    6. ''ex' → logprob: -8.574527740478516
    7. ''end' → logprob: -12.449527740478516
    8. ' '':
' → logprob: -13.199527740478516
    9. ''b' → logprob: -13.199527740478516
    10. ''import' → logprob: -13.199527740478516

Token 384: '':
' (ID: 7669)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6598463654518127
    2. '':' → logprob: -1.284846305847168
    3. '':
' → logprob: -1.784846305847168
    4. 'END' → logprob: -4.659846305847168
    5. ' END' → logprob: -5.159846305847168
    6. ' '' → logprob: -5.284846305847168
    7. ''' → logprob: -5.534846305847168
    8. 'end' → logprob: -5.784846305847168
    9. ' end' → logprob: -6.159846305847168
    10. 'EOF' → logprob: -6.284846305847168

Token 385: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0006876522093079984
    2. 'break' → logprob: -8.125687599182129
    3. '       ' → logprob: -8.250687599182129
    4. ' break' → logprob: -9.250687599182129
    5. '	break' → logprob: -12.000687599182129
    6. '
' → logprob: -12.000687599182129
    7. '	       ' → logprob: -12.125687599182129
    8. '               ' → logprob: -12.250687599182129
    9. '   ' → logprob: -12.375687599182129
    10. '		' → logprob: -12.500687599182129

Token 386: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.3555056154727936
    2. 'break' (adapté à ' break') → logprob: -1.6055055856704712
    3. '       ' → logprob: -2.3555057048797607
    4. '	break' → logprob: -5.980505466461182
    5. '           ' → logprob: -7.105505466461182
    6. 'return' → logprob: -9.10550594329834
    7. '
' → logprob: -10.48050594329834
    8. ' return' → logprob: -10.98050594329834
    9. '   ' → logprob: -10.98050594329834
    10. '	' → logprob: -11.85550594329834

Token 387: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0114098209887743
    2. '<|end|>' → logprob: -4.511409759521484
    3. '<|end|>' → logprob: -8.761409759521484
    4. '
' → logprob: -9.386409759521484
    5. ',' → logprob: -10.261409759521484
    6. '        
' → logprob: -11.136409759521484
    7. '   ' → logprob: -11.136409759521484
    8. '           ' → logprob: -11.511409759521484
    9. '	' → logprob: -11.636409759521484
    10. ' lines' → logprob: -12.386409759521484

Token 388: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005328982137143612
    2. ' lines' → logprob: -6.130329132080078
    3. '   ' → logprob: -6.380329132080078
    4. '<|end|>' → logprob: -7.005329132080078
    5. '	' → logprob: -8.630329132080078
    6. '	lines' → logprob: -9.755329132080078
    7. '	   ' → logprob: -9.880329132080078
    8. '           ' → logprob: -9.880329132080078
    9. '(lines' → logprob: -10.880329132080078
    10. '```' → logprob: -10.880329132080078

Token 389: ' lines' (ID: 8698)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4707781970500946
    2. ' lines' → logprob: -1.345778226852417
    3. 'lines' (adapté à ' lines') → logprob: -2.345778226852417
    4. '   ' → logprob: -4.095777988433838
    5. '	lines' → logprob: -6.095777988433838
    6. '(lines' → logprob: -8.345778465270996
    7. '
' → logprob: -8.970778465270996
    8. '_lines' → logprob: -10.720778465270996
    9. '        
' → logprob: -11.095778465270996
    10. '           ' → logprob: -11.095778465270996

Token 390: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.03805491328239441
    2. '.' → logprob: -3.288054943084717
    3. '.extend' → logprob: -12.288054466247559
    4. '.app' → logprob: -12.663054466247559
    5. 'append' → logprob: -13.163054466247559
    6. ' .' → logprob: -13.163054466247559
    7. '.ap' → logprob: -14.538054466247559
    8. '.Append' → logprob: -15.038054466247559
    9. '=' → logprob: -15.163054466247559
    10. '_append' → logprob: -15.538054466247559

Token 391: '(line' (ID: 18178)
  Prédit: '(line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -7.896309739408025e-07
    2. '(' → logprob: -14.250000953674316
    3. '=line' → logprob: -17.5
    4. 'line' → logprob: -18.75
    5. '[line' → logprob: -19.125
    6. '(Line' → logprob: -19.875
    7. '#line' → logprob: -20.0
    8. ',line' → logprob: -20.625
    9. '(lines' → logprob: -20.875
    10. '(
' → logprob: -21.25

Token 392: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00021474185632541776
    2. '   ' → logprob: -9.125214576721191
    3. ')
' → logprob: -9.875214576721191
    4. '
' → logprob: -10.875214576721191
    5. '<|end|>' → logprob: -11.000214576721191
    6. ' )' → logprob: -11.625214576721191
    7. '       ' → logprob: -12.500214576721191
    8. '<|end|>' → logprob: -13.875214576721191
    9. ')return' → logprob: -14.125214576721191
    10. '')' → logprob: -14.500214576721191

Token 393: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6305278539657593
    2. '   ' → logprob: -0.8805278539657593
    3. ' expr' → logprob: -4.005527973175049
    4. 'for' → logprob: -4.380527973175049
    5. 'expr' → logprob: -4.630527973175049
    6. ' if' → logprob: -4.880527973175049
    7. ' expression' → logprob: -7.005527973175049
    8. ' clauses' → logprob: -7.130527973175049
    9. '    
' → logprob: -7.630527973175049
    10. 'if' → logprob: -7.630527973175049

Token 394: ' for' (ID: 395)
  Prédit: 'expr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'expr' → logprob: -0.6117888689041138
    2. 'for' (adapté à ' for') → logprob: -1.1117888689041138
    3. 'cla' → logprob: -2.736788749694824
    4. 'if' → logprob: -3.736788749694824
    5. 'expression' → logprob: -4.361788749694824
    6. 'formula' → logprob: -5.111788749694824
    7. 'express' → logprob: -5.236788749694824
    8. ' for' → logprob: -5.611788749694824
    9. 's' → logprob: -5.736788749694824
    10. ' expr' → logprob: -6.236788749694824

Token 395: ' line' (ID: 2543)
  Prédit: ' expr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' expr' → logprob: -0.9014154672622681
    2. ' line' → logprob: -1.026415467262268
    3. 'expr' → logprob: -1.651415467262268
    4. 'line' → logprob: -3.7764153480529785
    5. ' s' → logprob: -4.7764153480529785
    6. ' clause' → logprob: -5.0264153480529785
    7. 's' → logprob: -5.4014153480529785
    8. ' formula' → logprob: -7.7764153480529785
    9. ' expression' → logprob: -8.026415824890137
    10. ' cl' → logprob: -8.401415824890137

Token 396: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.009149229153990746
    2. ' =' → logprob: -4.884149074554443
    3. 'in' → logprob: -7.384149074554443
    4. ':' → logprob: -7.884149074554443
    5. '   ' → logprob: -9.134149551391602
    6. '_in' → logprob: -9.509149551391602
    7. ' ' → logprob: -9.509149551391602
    8. '_tokens' → logprob: -9.509149551391602
    9. '=' → logprob: -10.009149551391602
    10. '    ' → logprob: -10.259149551391602

Token 397: ' lines' (ID: 8698)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.0011706985533237457
    2. ' lines' → logprob: -6.751170635223389
    3. '(lines' → logprob: -15.001171112060547
    4. 'parse' → logprob: -16.376171112060547
    5. 'line' → logprob: -16.876171112060547
    6. '   ' → logprob: -17.001171112060547
    7. '	lines' → logprob: -17.001171112060547
    8. ' ' → logprob: -17.126171112060547
    9. 'lin' → logprob: -18.751171112060547
    10. '
' → logprob: -19.251171112060547

Token 398: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0041222115978598595
    2. ':
' → logprob: -6.129122257232666
    3. '):' → logprob: -7.129122257232666
    4. ',' → logprob: -7.879122257232666
    5. ' =' → logprob: -8.379121780395508
    6. '():' → logprob: -8.879121780395508
    7. ' :' → logprob: -9.004121780395508
    8. '=' → logprob: -9.504121780395508
    9. '       ' → logprob: -9.879121780395508
    10. '):
' → logprob: -10.254121780395508

Token 399: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006708736065775156
    2. ' clauses' → logprob: -5.38170862197876
    3. ',' → logprob: -6.63170862197876
    4. '   ' → logprob: -8.131709098815918
    5. '```' → logprob: -9.756709098815918
    6. ':' → logprob: -9.881709098815918
    7. ' tokens' → logprob: -9.881709098815918
    8. 'tokens' → logprob: -10.131709098815918
    9. '<|end|>' → logprob: -10.131709098815918
    10. '        
' → logprob: -10.631709098815918

Token 400: ' clauses' (ID: 99572)
  Prédit: 'cla'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cla' → logprob: -0.5870819687843323
    2. ' clauses' → logprob: -0.8370819687843323
    3. '       ' → logprob: -4.5870819091796875
    4. '   ' → logprob: -8.462081909179688
    5. 'cls' → logprob: -8.587081909179688
    6. 'expr' → logprob: -8.962081909179688
    7. 'cl' → logprob: -9.212081909179688
    8. ' ' → logprob: -9.962081909179688
    9. ' cls' → logprob: -10.337081909179688
    10. ' claus' → logprob: -10.837081909179688

Token 401: '_str' (ID: 6182)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0010329303331673145
    2. '=' → logprob: -6.876032829284668
    3. '=parse' → logprob: -16.876033782958984
    4. 's' → logprob: -17.126033782958984
    5. '_' → logprob: -17.376033782958984
    6. ' ' → logprob: -17.376033782958984
    7. '_str' → logprob: -17.751033782958984
    8. ')' → logprob: -19.251033782958984
    9. 'parsed' → logprob: -19.251033782958984
    10. '=[]' → logprob: -19.251033782958984

Token 402: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12701304256916046
    2. '=' → logprob: -2.1270129680633545
    3. 's' → logprob: -9.377013206481934
    4. ' ' → logprob: -16.002012252807617
    5. '=[]' → logprob: -16.877012252807617
    6. ')' → logprob: -16.877012252807617
    7. '=s' → logprob: -17.002012252807617
    8. '＝' → logprob: -17.002012252807617
    9. '  ' → logprob: -17.252012252807617
    10. '   ' → logprob: -17.752012252807617

Token 403: ' parse' (ID: 8420)
  Prédit: 'parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parse' → logprob: -0.07889353483915329
    2. ' parse' → logprob: -2.5788934230804443
    3. '(parse' → logprob: -13.203893661499023
    4. '   ' → logprob: -14.453893661499023
    5. '	parse' → logprob: -14.703893661499023
    6. '=parse' → logprob: -15.328893661499023
    7. ' ' → logprob: -15.578893661499023
    8. '       ' → logprob: -15.953893661499023
    9. 'line' → logprob: -15.953893661499023
    10. ' line' → logprob: -16.828893661499023

Token 404: '_expression' (ID: 69265)
  Prédit: '_expression'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_expression' → logprob: -1.5048530030981055e-06
    2. 'expression' → logprob: -13.500001907348633
    3. '_ex' → logprob: -17.875001907348633
    4. '_expr' → logprob: -18.125001907348633
    5. '_' → logprob: -18.250001907348633
    6. '(expression' → logprob: -19.625001907348633
    7. 'Expression' → logprob: -19.625001907348633
    8. '```' → logprob: -19.750001907348633
    9. ' expression' → logprob: -20.250001907348633
    10. '_clause' → logprob: -20.500001907348633

Token 405: '(line' (ID: 18178)
  Prédit: '(line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -6.630610641877865e-06
    2. '(' → logprob: -12.000006675720215
    3. ' (' → logprob: -15.625006675720215
    4. '(Line' → logprob: -16.3750057220459
    5. '[line' → logprob: -16.6250057220459
    6. '#line' → logprob: -17.2500057220459
    7. '=line' → logprob: -17.3750057220459
    8. '(lines' → logprob: -17.7500057220459
    9. ',line' → logprob: -17.8750057220459
    10. '(s' → logprob: -19.5000057220459

Token 406: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002631238894537091
    2. ')
' → logprob: -8.500263214111328
    3. '       ' → logprob: -9.750263214111328
    4. ' )' → logprob: -14.375263214111328
    5. '())' → logprob: -15.250263214111328
    6. ')
' → logprob: -16.125263214111328
    7. '))' → logprob: -16.250263214111328
    8. ')`' → logprob: -16.750263214111328
    9. '()' → logprob: -16.875263214111328
    10. '   ' → logprob: -17.125263214111328

Token 407: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0075277164578437805
    2. ' clauses' → logprob: -5.132527828216553
    3. 'cla' → logprob: -6.507527828216553
    4. 'cl' → logprob: -10.382527351379395
    5. '   ' → logprob: -10.632527351379395
    6. '```' → logprob: -10.632527351379395
    7. '           ' → logprob: -12.257527351379395
    8. '	cl' → logprob: -12.632527351379395
    9. '	' → logprob: -12.757527351379395
    10. '_cl' → logprob: -12.882527351379395

Token 408: ' clauses' (ID: 99572)
  Prédit: 'cla'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cla' → logprob: -0.19393685460090637
    2. ' clauses' → logprob: -1.943936824798584
    3. '       ' → logprob: -3.443936824798584
    4. 'for' → logprob: -8.068937301635742
    5. 'cl' → logprob: -8.818937301635742
    6. '   ' → logprob: -8.818937301635742
    7. ' for' → logprob: -8.943937301635742
    8. 'cls' → logprob: -9.068937301635742
    9. 'parsed' → logprob: -9.068937301635742
    10. 'print' → logprob: -9.693937301635742

Token 409: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5686095356941223
    2. '=' → logprob: -1.0686094760894775
    3. '_par' → logprob: -2.6936094760894775
    4. '_' → logprob: -3.8186094760894775
    5. '_tokens' → logprob: -8.818609237670898
    6. '=[]' → logprob: -9.443609237670898
    7. '_str' → logprob: -9.568609237670898
    8. '_=' → logprob: -9.568609237670898
    9. 'parsed' → logprob: -9.818609237670898
    10. 's' → logprob: -10.568609237670898

Token 410: ' []
' (ID: 8911)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.032936111092567444
    2. '[list' → logprob: -3.5329360961914062
    3. ' [' → logprob: -5.782936096191406
    4. '[get' → logprob: -10.407936096191406
    5. '[p' → logprob: -10.782936096191406
    6. '[pos' → logprob: -11.657936096191406
    7. '[List' → logprob: -11.782936096191406
    8. '[array' → logprob: -12.157936096191406
    9. '[class' → logprob: -12.532936096191406
    10. '[obj' → logprob: -13.282936096191406

Token 411: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.000556012790184468
    2. ' for' → logprob: -7.625555992126465
    3. 'for' → logprob: -10.875555992126465
    4. '   ' → logprob: -10.875555992126465
    5. '	' → logprob: -11.250555992126465
    6. '[' → logprob: -12.125555992126465
    7. '	   ' → logprob: -12.875555992126465
    8. '<|end|>' → logprob: -13.000555992126465
    9. ',' → logprob: -13.625555992126465
    10. '	for' → logprob: -13.750555992126465

Token 412: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.28451719880104065
    2. '       ' → logprob: -1.7845171689987183
    3. ' for' → logprob: -2.534517288208008
    4. '   ' → logprob: -7.784517288208008
    5. '	for' → logprob: -10.909517288208008
    6. ' ' → logprob: -11.784517288208008
    7. '	' → logprob: -14.034517288208008
    8. '	   ' → logprob: -14.909517288208008
    9. ' ' → logprob: -15.534517288208008
    10. '```' → logprob: -15.534517288208008

Token 413: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.2161678969860077
    2. 'cl' → logprob: -2.21616792678833
    3. 'cs' → logprob: -2.46616792678833
    4. 'cls' → logprob: -8.091167449951172
    5. ' c' → logprob: -9.091167449951172
    6. ' clause' → logprob: -10.716167449951172
    7. 's' → logprob: -11.591167449951172
    8. ' cs' → logprob: -11.716167449951172
    9. ' cl' → logprob: -12.966167449951172
    10. 'cla' → logprob: -13.341167449951172

Token 414: 'str' (ID: 689)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.034384969621896744
    2. 'in' → logprob: -3.4093849658966064
    3. '=' → logprob: -7.7843852043151855
    4. ' =' → logprob: -8.534384727478027
    5. '_' → logprob: -10.534384727478027
    6. '_str' → logprob: -10.659384727478027
    7. '.append' → logprob: -11.284384727478027
    8. 'parse' → logprob: -11.284384727478027
    9. 'import' → logprob: -11.409384727478027
    10. '_in' → logprob: -11.659384727478027

Token 415: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.004084693267941475
    2. 'in' → logprob: -5.504084587097168
    3. 'import' → logprob: -13.754084587097168
    4. 'parse' → logprob: -14.254084587097168
    5. '	in' → logprob: -14.504084587097168
    6. ' ' → logprob: -14.504084587097168
    7. 's' → logprob: -14.629084587097168
    8. '       ' → logprob: -15.004084587097168
    9. '           ' → logprob: -15.129084587097168
    10. ':' → logprob: -15.254084587097168

Token 416: ' clauses' (ID: 99572)
  Prédit: 'cla'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cla' → logprob: -0.2935628294944763
    2. ' clauses' → logprob: -1.668562889099121
    3. 'parse' → logprob: -2.793562889099121
    4. ' parse' → logprob: -5.543562889099121
    5. 'cl' → logprob: -7.793562889099121
    6. '       ' → logprob: -9.293562889099121
    7. '   ' → logprob: -9.543562889099121
    8. '[' → logprob: -9.543562889099121
    9. 'cls' → logprob: -10.043562889099121
    10. ' ' → logprob: -11.543562889099121

Token 417: '_str' (ID: 6182)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.7521088719367981
    2. ':
' → logprob: -1.8771088123321533
    3. ':' → logprob: -2.1271088123321533
    4. '           ' → logprob: -2.2521088123321533
    5. ' =' → logprob: -2.7521088123321533
    6. '=' → logprob: -3.0021088123321533
    7. ' in' → logprob: -4.252109050750732
    8. '):
' → logprob: -4.252109050750732
    9. 'in' → logprob: -6.877109050750732
    10. ',' → logprob: -6.877109050750732

Token 418: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.3199441730976105
    2. ':' → logprob: -1.444944143295288
    3. ' =' → logprob: -3.569944143295288
    4. '=' → logprob: -5.444944381713867
    5. '           ' → logprob: -5.569944381713867
    6. '):
' → logprob: -6.694944381713867
    7. ',' → logprob: -8.569944381713867
    8. '       ' → logprob: -9.444944381713867
    9. '.append' → logprob: -9.944944381713867
    10. ':
' → logprob: -9.944944381713867

Token 419: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0008369080605916679
    2. '       ' → logprob: -8.000837326049805
    3. '
' → logprob: -8.750837326049805
    4. ' clauses' → logprob: -8.875837326049805
    5. '   ' → logprob: -10.250837326049805
    6. '    
' → logprob: -10.625837326049805
    7. '	       ' → logprob: -11.000837326049805
    8. ',' → logprob: -11.000837326049805
    9. '```' → logprob: -11.125837326049805
    10. '          ' → logprob: -11.250837326049805

Token 420: ' clauses' (ID: 99572)
  Prédit: ' clauses'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' clauses' → logprob: -0.41568517684936523
    2. 'cla' → logprob: -1.2906851768493652
    3. '           ' → logprob: -2.7906851768493652
    4. 'cl' → logprob: -6.415685176849365
    5. '   ' → logprob: -7.540685176849365
    6. '       ' → logprob: -8.040685653686523
    7. 'c' → logprob: -8.665685653686523
    8. 'cls' → logprob: -8.665685653686523
    9. ' claus' → logprob: -8.915685653686523
    10. ' c' → logprob: -9.165685653686523

Token 421: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.02590043656527996
    2. '=' → logprob: -3.775900363922119
    3. ' =' → logprob: -6.650900363922119
    4. '.' → logprob: -6.775900363922119
    5. '.extend' → logprob: -9.275900840759277
    6. '.=' → logprob: -9.900900840759277
    7. '+=' → logprob: -10.025900840759277
    8. ' +=' → logprob: -10.900900840759277
    9. 'append' → logprob: -12.150900840759277
    10. '.app' → logprob: -13.025900840759277

Token 422: '(parse' (ID: 53040)
  Prédit: '(parse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(parse' → logprob: -0.00933042261749506
    2. 'parse' → logprob: -4.7593302726745605
    3. ' parse' → logprob: -7.2593302726745605
    4. '(' → logprob: -12.009330749511719
    5. ' (' → logprob: -12.134330749511719
    6. '=parse' → logprob: -14.634330749511719
    7. '	parse' → logprob: -16.63433074951172
    8. '.parse' → logprob: -18.00933074951172
    9. '(parser' → logprob: -18.25933074951172
    10. '(parsed' → logprob: -18.50933074951172

Token 423: '_clause' (ID: 152283)
  Prédit: '_clause'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_clause' → logprob: -5.512236498361744e-07
    2. '_cl' → logprob: -15.250000953674316
    3. '_' → logprob: -16.125
    4. 'cl' → logprob: -16.625
    5. '_c' → logprob: -17.25
    6. '(cl' → logprob: -20.125
    7. '_claim' → logprob: -20.75
    8. ')_' → logprob: -21.125
    9. ')' → logprob: -21.625
    10. '_
' → logprob: -21.75

Token 424: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -1.3856492842023727e-06
    2. '(' → logprob: -14.250000953674316
    3. ' (' → logprob: -15.125000953674316
    4. ')c' → logprob: -15.500000953674316
    5. ')' → logprob: -16.000001907348633
    6. ')(' → logprob: -17.125001907348633
    7. '(
' → logprob: -18.125001907348633
    8. 'c' → logprob: -19.000001907348633
    9. '(cl' → logprob: -20.250001907348633
    10. '(C' → logprob: -20.625001907348633

Token 425: 'str' (ID: 689)
  Prédit: 'str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -4.320199877838604e-07
    2. 'tr' → logprob: -15.0
    3. ')' → logprob: -17.5
    4. 'onstr' → logprob: -17.875
    5. '_str' → logprob: -18.5
    6. '(str' → logprob: -19.375
    7. 'c' → logprob: -19.375
    8. 'ostr' → logprob: -19.5
    9. 'Str' → logprob: -20.0
    10. ' str' → logprob: -20.5

Token 426: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06198135390877724
    2. '))' → logprob: -2.811981439590454
    3. '       ' → logprob: -12.186981201171875
    4. ')
' → logprob: -12.311981201171875
    5. ')))' → logprob: -12.811981201171875
    6. '())' → logprob: -14.436981201171875
    7. '))
' → logprob: -14.561981201171875
    8. ' )' → logprob: -15.936981201171875
    9. ')`' → logprob: -16.436981201171875
    10. '           ' → logprob: -16.686981201171875

Token 427: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010042451322078705
    2. '<|end|>' → logprob: -4.760042667388916
    3. '
' → logprob: -7.635042667388916
    4. '        
' → logprob: -7.885042667388916
    5. '```' → logprob: -8.010042190551758
    6. '           ' → logprob: -10.010042190551758
    7. '   ' → logprob: -10.135042190551758
    8. ' for' → logprob: -10.635042190551758
    9. '<|end|>' → logprob: -10.885042190551758
    10. ')' → logprob: -11.260042190551758

Token 428: ' vars' (ID: 36194)
  Prédit: 'vars'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vars' (adapté à ' vars') → logprob: -0.0035318902228027582
    2. 'variables' → logprob: -6.2535319328308105
    3. 'all' → logprob: -7.0035319328308105
    4. ' vars' → logprob: -7.8785319328308105
    5. 'var' → logprob: -8.878531455993652
    6. '       ' → logprob: -9.503531455993652
    7. '_vars' → logprob: -10.378531455993652
    8. '   ' → logprob: -10.628531455993652
    9. 'v' → logprob: -10.878531455993652
    10. ' variables' → logprob: -11.378531455993652

Token 429: '_list' (ID: 4162)
  Prédit: '_set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_set' → logprob: -0.5349973440170288
    2. '_list' → logprob: -1.1599973440170288
    3. ' =' → logprob: -2.5349974632263184
    4. '_' → logprob: -4.159997463226318
    5. '=' → logprob: -5.284997463226318
    6. 's' → logprob: -7.659997463226318
    7. '_names' → logprob: -8.78499698638916
    8. '=set' → logprob: -10.03499698638916
    9. '_vars' → logprob: -10.28499698638916
    10. '_sets' → logprob: -10.53499698638916

Token 430: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.004629603587090969
    2. '=' → logprob: -5.379629611968994
    3. ',' → logprob: -11.629629135131836
    4. ' =)' → logprob: -16.129629135131836
    5. '.' → logprob: -16.379629135131836
    6. ' =
' → logprob: -16.504629135131836
    7. ' ' → logprob: -16.879629135131836
    8. ')' → logprob: -17.004629135131836
    9. ' =[' → logprob: -17.004629135131836
    10. ' ,' → logprob: -17.004629135131836

Token 431: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.008617172949016094
    2. ' get' → logprob: -4.758617401123047
    3. 'sorted' → logprob: -13.508617401123047
    4. '[get' → logprob: -14.008617401123047
    5. '(get' → logprob: -15.258617401123047
    6. ' sorted' → logprob: -15.633617401123047
    7. '=get' → logprob: -17.258617401123047
    8. '	get' → logprob: -19.008617401123047
    9. '.get' → logprob: -19.383617401123047
    10. ',get' → logprob: -19.633617401123047

Token 432: '_vars' (ID: 25901)
  Prédit: '_vars'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_vars' → logprob: -0.00022213248303160071
    2. 'vars' → logprob: -8.625222206115723
    3. '(vars' → logprob: -10.250222206115723
    4. '(' → logprob: -12.000222206115723
    5. 'Vars' → logprob: -15.500222206115723
    6. '_' → logprob: -15.500222206115723
    7. '```' → logprob: -15.875222206115723
    8. 's' → logprob: -16.625221252441406
    9. '_vals' → logprob: -16.625221252441406
    10. '_variables' → logprob: -16.750221252441406

Token 433: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -9.088346359931165e-07
    2. 'cla' → logprob: -14.875000953674316
    3. '(cl' → logprob: -15.125000953674316
    4. '```' → logprob: -16.5
    5. '([' → logprob: -17.0
    6. ' clauses' → logprob: -17.0
    7. '((' → logprob: -17.0
    8. ' (' → logprob: -17.125
    9. '(classes' → logprob: -17.75
    10. '(c' → logprob: -18.875

Token 434: 'cla' (ID: 16530)
  Prédit: 'cla'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cla' → logprob: -0.0007013569120317698
    2. '(' → logprob: -7.500701427459717
    3. ' clauses' → logprob: -8.875700950622559
    4. '[' → logprob: -12.500700950622559
    5. 'cl' → logprob: -13.250700950622559
    6. ')' → logprob: -13.250700950622559
    7. 'Cla' → logprob: -14.875700950622559
    8. '```' → logprob: -15.125700950622559
    9. 'cls' → logprob: -15.375700950622559
    10. '   ' → logprob: -16.250701904296875

Token 435: 'uses' (ID: 5977)
  Prédit: 'uses'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uses' → logprob: -0.0008174888207577169
    2. 'use' → logprob: -8.12581729888916
    3. 'ues' → logprob: -9.00081729888916
    4. '   ' → logprob: -9.87581729888916
    5. 'ause' → logprob: -10.00081729888916
    6. '```' → logprob: -10.25081729888916
    7. 'used' → logprob: -10.37581729888916
    8. 'us' → logprob: -10.50081729888916
    9. ')' → logprob: -10.50081729888916
    10. '[' → logprob: -10.62581729888916

Token 436: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006557871587574482
    2. ')
' → logprob: -5.506557941436768
    3. '       ' → logprob: -6.256557941436768
    4. '())' → logprob: -8.13155746459961
    5. '()' → logprob: -8.63155746459961
    6. '()
' → logprob: -10.25655746459961
    7. '<|end|>' → logprob: -10.88155746459961
    8. '   ' → logprob: -11.75655746459961
    9. ' )' → logprob: -12.25655746459961
    10. '())
' → logprob: -12.38155746459961

Token 437: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.48608237504959106
    2. ' from' → logprob: -1.1110823154449463
    3. 'from' → logprob: -3.4860823154449463
    4. 'import' → logprob: -4.736082553863525
    5. ' for' → logprob: -4.736082553863525
    6. ' import' → logprob: -6.486082553863525
    7. '```' → logprob: -6.736082553863525
    8. '   ' → logprob: -6.861082553863525
    9. ' vars' → logprob: -7.111082553863525
    10. ' n' → logprob: -7.486082553863525

Token 438: ' vars' (ID: 36194)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.19272902607917786
    2. 'import' → logprob: -2.5677289962768555
    3. 'n' → logprob: -3.5677289962768555
    4. 'for' → logprob: -3.9427289962768555
    5. 'found' → logprob: -4.5677289962768555
    6. 'm' → logprob: -4.6927289962768555
    7. 'vars' (adapté à ' vars') → logprob: -4.6927289962768555
    8. 'def' → logprob: -4.9427289962768555
    9. 'results' → logprob: -5.8177289962768555
    10. ' from' → logprob: -6.0677289962768555

Token 439: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.01496814377605915
    2. '_values' → logprob: -5.014967918395996
    3. '_set' → logprob: -5.639967918395996
    4. '_map' → logprob: -6.139967918395996
    5. '_indices' → logprob: -6.889967918395996
    6. '_' → logprob: -8.139967918395996
    7. '_indexes' → logprob: -8.514967918395996
    8. '_to' → logprob: -8.764967918395996
    9. '_vals' → logprob: -8.764967918395996
    10. '_count' → logprob: -9.139967918395996

Token 440: '.sort' (ID: 19551)
  Prédit: '.sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.008907750248908997
    2. ' =' → logprob: -5.133907794952393
    3. '=' → logprob: -6.133907794952393
    4. '.' → logprob: -8.258907318115234
    5. '_sorted' → logprob: -8.758907318115234
    6. 'sort' → logprob: -8.883907318115234
    7. ',' → logprob: -9.758907318115234
    8. ')' → logprob: -9.758907318115234
    9. '<|end|>' → logprob: -10.133907318115234
    10. 'sorted' → logprob: -10.508907318115234

Token 441: '()

' (ID: 5874)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1153089627623558
    2. '<|end|>' → logprob: -3.115309000015259
    3. '
' → logprob: -3.240309000015259
    4. ' for' → logprob: -4.74030876159668
    5. ',' → logprob: -5.24030876159668
    6. 'import' → logprob: -5.86530876159668
    7. '        
' → logprob: -6.24030876159668
    8. 'from' → logprob: -6.61530876159668
    9. ' from' → logprob: -6.61530876159668
    10. 'for' → logprob: -7.24030876159668

Token 442: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14562147855758667
    2. 'from' → logprob: -2.3956215381622314
    3. ' from' → logprob: -3.5206215381622314
    4. 'import' → logprob: -4.645621299743652
    5. ' for' → logprob: -6.395621299743652
    6. 'for' → logprob: -6.770621299743652
    7. '   ' → logprob: -7.145621299743652
    8. '```' → logprob: -7.770621299743652
    9. 'assign' → logprob: -8.270621299743652
    10. 'def' → logprob: -8.770621299743652

Token 443: ' found' (ID: 2491)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.2386883944272995
    2. 'for' → logprob: -2.4886884689331055
    3. 'import' → logprob: -3.3636884689331055
    4. 'results' → logprob: -3.6136884689331055
    5. 'print' → logprob: -4.4886884689331055
    6. 'all' → logprob: -4.4886884689331055
    7. 'found' (adapté à ' found') → logprob: -4.7386884689331055
    8. 'n' → logprob: -4.8636884689331055
    9. 'result' → logprob: -5.2386884689331055
    10. 'def' → logprob: -5.4886884689331055

Token 444: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0071740057319402695
    2. '=' → logprob: -5.132174015045166
    3. ':' → logprob: -6.882174015045166
    4. '_' → logprob: -9.007173538208008
    5. '=False' → logprob: -10.757173538208008
    6. '_assignment' → logprob: -11.257173538208008
    7. '(' → logprob: -11.882173538208008
    8. 's' → logprob: -11.882173538208008
    9. '_result' → logprob: -12.007173538208008
    10. '_s' → logprob: -12.132173538208008

Token 445: ' False' (ID: 7983)
  Prédit: ' False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' False' → logprob: -0.008616108447313309
    2. 'False' → logprob: -4.758615970611572
    3. ' True' → logprob: -13.50861644744873
    4. ' ' → logprob: -16.133615493774414
    5. '(False' → logprob: -17.133615493774414
    6. ' None' → logprob: -18.008615493774414
    7. ' false' → logprob: -18.008615493774414
    8. '   ' → logprob: -18.008615493774414
    9. 'True' → logprob: -18.508615493774414
    10. '=False' → logprob: -18.633615493774414

Token 446: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05795590579509735
    2. '
' → logprob: -3.5579559803009033
    3. '        
' → logprob: -4.557955741882324
    4. '<|end|>' → logprob: -4.932955741882324
    5. ' for' → logprob: -5.182955741882324
    6. ' 
' → logprob: -6.307955741882324
    7. ',' → logprob: -6.807955741882324
    8. '   ' → logprob: -8.557955741882324
    9. '    
' → logprob: -8.682955741882324
    10. '  
' → logprob: -8.682955741882324

Token 447: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.015269082970917225
    2. ' for' → logprob: -5.2652692794799805
    3. '<|end|>' → logprob: -5.2652692794799805
    4. '
' → logprob: -6.0152692794799805
    5. '        
' → logprob: -6.7652692794799805
    6. ',' → logprob: -8.51526927947998
    7. '   ' → logprob: -8.64026927947998
    8. ' 
' → logprob: -8.89026927947998
    9. '	' → logprob: -9.01526927947998
    10. 'for' → logprob: -9.76526927947998

Token 448: ' #' (ID: 1069)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.19642551243305206
    2. ' from' → logprob: -1.8214255571365356
    3. 'for' → logprob: -4.946425437927246
    4. 'from' → logprob: -5.571425437927246
    5. ' import' → logprob: -6.196425437927246
    6. '       ' → logprob: -6.196425437927246
    7. 'import' → logprob: -6.696425437927246
    8. ' n' → logprob: -8.696425437927246
    9. '   ' → logprob: -9.196425437927246
    10. 'n' → logprob: -11.196425437927246

Token 449: ' try' (ID: 2075)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.8909017443656921
    2. 'for' → logprob: -1.265901803970337
    3. ' for' → logprob: -2.140901803970337
    4. 'import' → logprob: -2.265901803970337
    5. ' from' → logprob: -2.515901803970337
    6. ' import' → logprob: -5.890901565551758
    7. '       ' → logprob: -6.140901565551758
    8. 'n' → logprob: -8.265901565551758
    9. 'def' → logprob: -8.640901565551758
    10. '   ' → logprob: -9.140901565551758

Token 450: ' all' (ID: 722)
  Prédit: ' all'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.2409202605485916
    2. 'all' → logprob: -1.8659203052520752
    3. ':' → logprob: -2.990920305252075
    4. ':
' → logprob: -5.490920066833496
    5. ' for' → logprob: -6.615920066833496
    6. '_all' → logprob: -7.240920066833496
    7. 'import' → logprob: -7.365920066833496
    8. '   ' → logprob: -7.615920066833496
    9. 'for' → logprob: -8.240920066833496
    10. '       ' → logprob: -8.490920066833496

Token 451: ' assignments' (ID: 41477)
  Prédit: ' combinations'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' combinations' → logprob: -0.6715396046638489
    2. ' possible' → logprob: -1.421539545059204
    3. ' ' → logprob: -2.796539545059204
    4. ' from' → logprob: -3.296539545059204
    5. ' permutations' → logprob: -3.296539545059204
    6. ' assignments' → logprob: -3.546539545059204
    7. 'import' → logprob: -3.921539545059204
    8. '       ' → logprob: -4.546539783477783
    9. '0' → logprob: -4.671539783477783
    10. ' import' → logprob: -5.296539783477783

Token 452: ' simple' (ID: 4705)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2903486490249634
    2. ' for' → logprob: -1.4153486490249634
    3. ' from' → logprob: -5.790348529815674
    4. '
' → logprob: -6.290348529815674
    5. 'for' → logprob: -6.415348529815674
    6. ',' → logprob: -7.415348529815674
    7. '(' → logprob: -7.790348529815674
    8. 'import' → logprob: -8.165349006652832
    9. 'from' → logprob: -8.290349006652832
    10. ' in' → logprob: -8.540349006652832

Token 453: ' brute' (ID: 128602)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.29445144534111023
    2. ' for' → logprob: -1.9194514751434326
    3. 'for' → logprob: -2.9194514751434326
    4. 'ly' → logprob: -3.7944514751434326
    5. '           ' → logprob: -4.2944512367248535
    6. 'ments' → logprob: -5.6694512367248535
    7. '   ' → logprob: -6.1694512367248535
    8. 'ment' → logprob: -6.6694512367248535
    9. 'import' → logprob: -6.7944512367248535
    10. 'from' → logprob: -7.1694512367248535

Token 454: ' force' (ID: 9578)
  Prédit: '_force'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_force' → logprob: -0.28693580627441406
    2. ' force' → logprob: -2.411935806274414
    3. '-force' → logprob: -2.786935806274414
    4. '       ' → logprob: -3.286935806274414
    5. 'for' → logprob: -3.911935806274414
    6. ' for' → logprob: -4.161935806274414
    7. 'forcer' → logprob: -5.161935806274414
    8. 'force' → logprob: -5.661935806274414
    9. '    ' → logprob: -6.161935806274414
    10. '   ' → logprob: -6.536935806274414

Token 455: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06463384628295898
    2. ' for' → logprob: -3.439633846282959
    3. '
' → logprob: -3.689633846282959
    4. ':' → logprob: -6.314633846282959
    5. '   ' → logprob: -7.439633846282959
    6. 'for' → logprob: -7.439633846282959
    7. ':
' → logprob: -7.564633846282959
    8. '        
' → logprob: -7.689633846282959
    9. ',' → logprob: -8.189634323120117
    10. '           ' → logprob: -8.689634323120117

Token 456: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10114305466413498
    2. ' for' → logprob: -2.3511431217193604
    3. 'for' → logprob: -7.851142883300781
    4. '
' → logprob: -8.726142883300781
    5. ' from' → logprob: -8.976142883300781
    6. '   ' → logprob: -9.476142883300781
    7. '           ' → logprob: -10.101142883300781
    8. ',' → logprob: -10.601142883300781
    9. ' ' → logprob: -10.726142883300781
    10. '        ' → logprob: -10.851142883300781

Token 457: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.0396793894469738
    2. '       ' → logprob: -3.7896792888641357
    3. ' from' → logprob: -4.414679527282715
    4. 'for' (adapté à ' for') → logprob: -5.664679527282715
    5. ' import' → logprob: -8.414679527282715
    6. 'from' → logprob: -8.539679527282715
    7. '   ' → logprob: -9.164679527282715
    8. 'import' → logprob: -9.914679527282715
    9. ' n' → logprob: -10.164679527282715
    10. ' ' → logprob: -10.164679527282715

Token 458: ' assignment' (ID: 24618)
  Prédit: 'mask'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mask' → logprob: -0.19273658096790314
    2. 'assign' → logprob: -2.4427366256713867
    3. ' mask' → logprob: -3.0677366256713867
    4. 'i' → logprob: -3.6927366256713867
    5. 'assignment' → logprob: -4.442736625671387
    6. ' assignment' → logprob: -5.817736625671387
    7. ' i' → logprob: -6.942736625671387
    8. ' assign' → logprob: -8.192736625671387
    9. 'val' → logprob: -8.317736625671387
    10. 'idx' → logprob: -9.067736625671387

Token 459: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.000799384550191462
    2. 'in' → logprob: -7.250799179077148
    3. ' ' → logprob: -10.625799179077148
    4. '_' → logprob: -10.875799179077148
    5. '_in' → logprob: -11.750799179077148
    6. 's' → logprob: -11.875799179077148
    7. ' _' → logprob: -12.125799179077148
    8. ',' → logprob: -12.375799179077148
    9. '[' → logprob: -12.375799179077148
    10. '(' → logprob: -12.750799179077148

Token 460: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.6931576728820801
    2. 'range' → logprob: -0.6931576728820801
    3. '[' → logprob: -11.693157196044922
    4. '(range' → logprob: -13.318157196044922
    5. '0' → logprob: -15.568157196044922
    6. '	range' → logprob: -16.568157196044922
    7. '(' → logprob: -16.818157196044922
    8. ' itertools' → logprob: -16.943157196044922
    9. 'product' → logprob: -17.068157196044922
    10. ' ' → logprob: -17.193157196044922

Token 461: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00442418223246932
    2. '1' → logprob: -5.504424095153809
    3. '2' → logprob: -8.254424095153809
    4. ' (' → logprob: -9.504424095153809
    5. ' ' → logprob: -12.004424095153809
    6. '   ' → logprob: -13.254424095153809
    7. '0' → logprob: -13.629424095153809
    8. '(len' → logprob: -13.754424095153809
    9. '       ' → logprob: -15.004424095153809
    10. '(pow' → logprob: -15.629424095153809

Token 462: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0489271879196167
    2. '2' → logprob: -3.0489273071289062
    3. '(' → logprob: -8.173927307128906
    4. '0' → logprob: -10.548927307128906
    5. ' ' → logprob: -10.548927307128906
    6. '   ' → logprob: -12.173927307128906
    7. ' (' → logprob: -16.673927307128906
    8. '       ' → logprob: -17.423927307128906
    9. '```' → logprob: -17.548927307128906
    10. '  ' → logprob: -17.923927307128906

Token 463: ' <<' (ID: 2256)
  Prédit: '<<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.31328150629997253
    2. ' <<' → logprob: -1.313281536102295
    3. '<<(' → logprob: -11.063281059265137
    4. ',' → logprob: -14.063281059265137
    5. '<' → logprob: -14.063281059265137
    6. '1' → logprob: -14.313281059265137
    7. ' ' → logprob: -14.938281059265137
    8. '2' → logprob: -14.938281059265137
    9. ' <<
' → logprob: -14.938281059265137
    10. '<<<' → logprob: -15.438281059265137

Token 464: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -6.20603168499656e-05
    2. ' len' → logprob: -9.750061988830566
    3. '(len' → logprob: -12.500061988830566
    4. '[len' → logprob: -18.375062942504883
    5. '   ' → logprob: -18.625062942504883
    6. '	len' → logprob: -19.875062942504883
    7. '
' → logprob: -20.250062942504883
    8. '=len' → logprob: -20.625062942504883
    9. ',len' → logprob: -20.750062942504883
    10. '       ' → logprob: -20.875062942504883

Token 465: '(vars' (ID: 174980)
  Prédit: '(vars'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(vars' → logprob: -0.20146304368972778
    2. 'vars' → logprob: -1.701462984085083
    3. ' vars' → logprob: -9.951462745666504
    4. '(' → logprob: -13.701462745666504
    5. '_vars' → logprob: -14.451462745666504
    6. ')' → logprob: -15.826462745666504
    7. ' (' → logprob: -16.07646369934082
    8. 'Vars' → logprob: -16.20146369934082
    9. '.vars' → logprob: -16.70146369934082
    10. 'var' → logprob: -17.32646369934082

Token 466: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -7.684157026233152e-05
    2. ')' → logprob: -10.500077247619629
    3. '_vars' → logprob: -11.125077247619629
    4. 'list' → logprob: -11.500077247619629
    5. 'List' → logprob: -12.125077247619629
    6. '(vars' → logprob: -12.125077247619629
    7. 'vars' → logprob: -12.750077247619629
    8. '(_' → logprob: -13.375077247619629
    9. '(' → logprob: -13.750077247619629
    10. '   ' → logprob: -13.750077247619629

Token 467: ')):
' (ID: 22530)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.02989049255847931
    2. '):
' → logprob: -3.529890537261963
    3. ' ):' → logprob: -9.404890060424805
    4. ')' → logprob: -10.529890060424805
    5. '):
' → logprob: -10.654890060424805
    6. '       ' → logprob: -13.154890060424805
    7. ':' → logprob: -13.154890060424805
    8. '):

' → logprob: -14.154890060424805
    9. ' ):
' → logprob: -14.279890060424805
    10. '   ' → logprob: -14.654890060424805

Token 468: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0027331935707479715
    2. ':' → logprob: -7.37773323059082
    3. '       ' → logprob: -7.87773323059082
    4. '	       ' → logprob: -8.00273323059082
    5. '            
' → logprob: -8.25273323059082
    6. '               ' → logprob: -9.00273323059082
    7. ' :' → logprob: -9.12773323059082
    8. '
' → logprob: -9.37773323059082
    9. '```' → logprob: -9.37773323059082
    10. '<|end|>' → logprob: -9.50273323059082

Token 469: ' var' (ID: 972)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.011285956017673016
    2. '       ' → logprob: -5.136285781860352
    3. '               ' → logprob: -6.761285781860352
    4. '   ' → logprob: -7.386285781860352
    5. ' ' → logprob: -7.386285781860352
    6. ' ' → logprob: -8.011285781860352
    7. ' i' → logprob: -8.136285781860352
    8. '	   ' → logprob: -8.261285781860352
    9. '    ' → logprob: -8.386285781860352
    10. '
' → logprob: -8.386285781860352

Token 470: '_values' (ID: 20393)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.1595066636800766
    2. '_values' → logprob: -2.0345065593719482
    3. '_vals' → logprob: -4.409506797790527
    4. '_map' → logprob: -6.409506797790527
    5. '_assignment' → logprob: -6.659506797790527
    6. 'ues' → logprob: -7.409506797790527
    7. 'ue' → logprob: -7.784506797790527
    8. '_assign' → logprob: -8.909506797790527
    9. '_idx' → logprob: -9.159506797790527
    10. '_mask' → logprob: -9.659506797790527

Token 471: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10021582990884781
    2. '=' → logprob: -2.3502159118652344
    3. '   ' → logprob: -11.850215911865234
    4. ' ' → logprob: -14.725215911865234
    5. '       ' → logprob: -14.725215911865234
    6. '           ' → logprob: -15.100215911865234
    7. ')' → logprob: -15.100215911865234
    8. '={}' → logprob: -15.350215911865234
    9. '[' → logprob: -16.100215911865234
    10. '={' → logprob: -16.475215911865234

Token 472: ' {}
' (ID: 11421)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.1569674164056778
    2. '{' → logprob: -2.4069674015045166
    3. '[' → logprob: -3.4069674015045166
    4. '{}
' → logprob: -3.9069674015045166
    5. ' {}' → logprob: -6.656967639923096
    6. ' [' → logprob: -8.156967163085938
    7. ' {}
' → logprob: -8.906967163085938
    8. ' {' → logprob: -9.281967163085938
    9. 'dict' → logprob: -9.906967163085938
    10. '[]' → logprob: -10.031967163085938

Token 473: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00031532408320344985
    2. ' for' → logprob: -8.25031566619873
    3. '       ' → logprob: -11.25031566619873
    4. 'for' → logprob: -11.37531566619873
    5. '               ' → logprob: -11.75031566619873
    6. '<|end|>' → logprob: -12.12531566619873
    7. '	       ' → logprob: -12.62531566619873
    8. '            
' → logprob: -13.12531566619873
    9. '
' → logprob: -13.37531566619873
    10. ' 
' → logprob: -13.50031566619873

Token 474: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3415692150592804
    2. '           ' → logprob: -1.716569185256958
    3. 'for' (adapté à ' for') → logprob: -2.216569185256958
    4. '       ' → logprob: -7.466569423675537
    5. '   ' → logprob: -10.091568946838379
    6. '               ' → logprob: -10.966568946838379
    7. '	for' → logprob: -11.341568946838379
    8. ' ' → logprob: -11.466568946838379
    9. '	       ' → logprob: -12.091568946838379
    10. '	   ' → logprob: -12.216568946838379

Token 475: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.013328105211257935
    2. 'idx' → logprob: -4.5133280754089355
    3. ' i' → logprob: -6.5133280754089355
    4. ' idx' → logprob: -7.7633280754089355
    5. 'j' → logprob: -8.138328552246094
    6. 'k' → logprob: -9.888328552246094
    7. 'v' → logprob: -11.388328552246094
    8. 'index' → logprob: -11.638328552246094
    9. ' j' → logprob: -12.638328552246094
    10. 'var' → logprob: -14.138328552246094

Token 476: ',v' (ID: 30680)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01850142888724804
    2. 'in' → logprob: -4.018501281738281
    3. ',' → logprob: -8.268501281738281
    4. ' ' → logprob: -9.393501281738281
    5. '=' → logprob: -12.768501281738281
    6. '	in' → logprob: -13.143501281738281
    7. ' ,' → logprob: -13.268501281738281
    8. 'In' → logprob: -14.018501281738281
    9. '<|end|>' → logprob: -14.268501281738281
    10. ')' → logprob: -14.268501281738281

Token 477: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.006505755707621574
    2. 'in' → logprob: -5.131505966186523
    3. 'ar' → logprob: -8.131505966186523
    4. ',' → logprob: -8.256505966186523
    5. 'ariable' → logprob: -11.256505966186523
    6. 'n' → logprob: -12.756505966186523
    7. 's' → logprob: -13.256505966186523
    8. ')' → logprob: -13.881505966186523
    9. ' ' → logprob: -14.131505966186523
    10. 'i' → logprob: -14.756505966186523

Token 478: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.10162194073200226
    2. 'range' → logprob: -2.3516218662261963
    3. ' enumerate' → logprob: -6.601622104644775
    4. ' range' → logprob: -10.101621627807617
    5. 'vars' → logprob: -11.726621627807617
    6. 'en' → logprob: -12.601621627807617
    7. 'enum' → logprob: -13.601621627807617
    8. '(range' → logprob: -14.476621627807617
    9. '```' → logprob: -14.726621627807617
    10. '
' → logprob: -14.976621627807617

Token 479: '(vars' (ID: 174980)
  Prédit: 'vars'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vars' → logprob: -0.006760602816939354
    2. '(vars' → logprob: -5.006760597229004
    3. ' vars' → logprob: -10.006760597229004
    4. 'var' → logprob: -17.25676155090332
    5. '_vars' → logprob: -17.25676155090332
    6. 'Vars' → logprob: -18.25676155090332
    7. '.vars' → logprob: -18.38176155090332
    8. 'range' → logprob: -19.00676155090332
    9. ')' → logprob: -19.88176155090332
    10. '
' → logprob: -20.88176155090332

Token 480: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -2.339278580620885e-06
    2. '_values' → logprob: -14.000001907348633
    3. '_lists' → logprob: -14.250001907348633
    4. 'List' → logprob: -15.000001907348633
    5. 's' → logprob: -15.625001907348633
    6. 'list' → logprob: -16.250001907348633
    7. '_LIST' → logprob: -16.500001907348633
    8. ')' → logprob: -16.750001907348633
    9. 'ariable' → logprob: -16.750001907348633
    10. '_vars' → logprob: -16.875001907348633

Token 481: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.12708191573619843
    2. '):' → logprob: -2.127081871032715
    3. ':' → logprob: -9.252081871032715
    4. '):
' → logprob: -10.252081871032715
    5. ':
' → logprob: -11.127081871032715
    6. '):

' → logprob: -13.127081871032715
    7. ' ):
' → logprob: -13.627081871032715
    8. '       ' → logprob: -13.752081871032715
    9. '():
' → logprob: -13.752081871032715
    10. '   ' → logprob: -14.502081871032715

Token 482: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0065942248329520226
    2. ' var' → logprob: -5.256594181060791
    3. '           ' → logprob: -7.131594181060791
    4. ' ' → logprob: -9.25659465789795
    5. '            ' → logprob: -9.38159465789795
    6. '       ' → logprob: -9.63159465789795
    7. ' ' → logprob: -10.13159465789795
    8. '                
' → logprob: -10.25659465789795
    9. '[' → logprob: -10.38159465789795
    10. '[var' → logprob: -11.00659465789795

Token 483: ' var' (ID: 972)
  Prédit: ' var'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' var' → logprob: -0.14379669725894928
    2. 'var' (adapté à ' var') → logprob: -2.018796682357788
    3. '                ' → logprob: -7.518796920776367
    4. '               ' → logprob: -7.643796920776367
    5. '            ' → logprob: -9.893796920776367
    6. '                   ' → logprob: -11.018796920776367
    7. '[var' → logprob: -11.393796920776367
    8. '           ' → logprob: -11.768796920776367
    9. ')var' → logprob: -12.643796920776367
    10. '(var' → logprob: -13.393796920776367

Token 484: '_values' (ID: 20393)
  Prédit: '_values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_values' → logprob: -3.6312321753939614e-05
    2. 'values' → logprob: -10.250036239624023
    3. '_VALUES' → logprob: -15.125036239624023
    4. '_' → logprob: -15.500036239624023
    5. '=' → logprob: -16.375036239624023
    6. '   ' → logprob: -17.000036239624023
    7. 'Values' → logprob: -17.000036239624023
    8. 'var' → logprob: -17.250036239624023
    9. '	values' → logprob: -17.250036239624023
    10. ' =' → logprob: -17.375036239624023

Token 485: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -7.896309739408025e-07
    2. '[' → logprob: -14.500000953674316
    3. '=' → logprob: -16.0
    4. '=v' → logprob: -16.5
    5. 'v' → logprob: -17.5
    6. ' [' → logprob: -17.625
    7. '[var' → logprob: -18.25
    8. ' =' → logprob: -18.75
    9. '[
' → logprob: -19.5
    10. '```' → logprob: -19.5

Token 486: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.000477620807942003
    2. ']=' → logprob: -8.25047779083252
    3. '=' → logprob: -8.75047779083252
    4. ' =' → logprob: -10.00047779083252
    5. ']=(' → logprob: -12.25047779083252
    6. ' ]' → logprob: -12.50047779083252
    7. ')' → logprob: -12.62547779083252
    8. '']' → logprob: -15.12547779083252
    9. '[' → logprob: -16.375476837158203
    10. '   ' → logprob: -16.500476837158203

Token 487: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16022484004497528
    2. ' =' → logprob: -1.9102247953414917
    3. ')' → logprob: -15.035224914550781
    4. ' ' → logprob: -16.66022491455078
    5. '   ' → logprob: -16.78522491455078
    6. ']' → logprob: -16.78522491455078
    7. '=((' → logprob: -17.41022491455078
    8. 'bool' → logprob: -17.78522491455078
    9. '```' → logprob: -18.16022491455078
    10. '           ' → logprob: -18.16022491455078

Token 488: ' (' (ID: 350)
  Prédit: '(bool'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(bool' → logprob: -0.4616486430168152
    2. '(' → logprob: -1.46164870262146
    3. 'bool' → logprob: -2.21164870262146
    4. '((' → logprob: -3.83664870262146
    5. ' (' → logprob: -5.836648464202881
    6. '(True' → logprob: -5.961648464202881
    7. ' bool' → logprob: -7.211648464202881
    8. '(assign' → logprob: -7.711648464202881
    9. '   ' → logprob: -10.086648941040039
    10. 'True' → logprob: -10.586648941040039

Token 489: 'assignment' (ID: 78785)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06211669743061066
    2. 'assignment' → logprob: -2.8121166229248047
    3. ' (' → logprob: -9.312116622924805
    4. ' assignment' → logprob: -10.062116622924805
    5. '   ' → logprob: -11.937116622924805
    6. 'bool' → logprob: -12.562116622924805
    7. '(True' → logprob: -13.312116622924805
    8. '(bool' → logprob: -13.562116622924805
    9. '(assign' → logprob: -13.687116622924805
    10. '           ' → logprob: -14.562116622924805

Token 490: ' >>' (ID: 6832)
  Prédit: '>>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>>' → logprob: -0.7667219638824463
    2. '&' → logprob: -1.0167219638824463
    3. ' &' → logprob: -1.7667219638824463
    4. ' >>' → logprob: -6.016721725463867
    5. ' ' → logprob: -8.391721725463867
    6. '&
' → logprob: -9.266721725463867
    7. '>' → logprob: -11.641721725463867
    8. '&gt' → logprob: -12.016721725463867
    9. ' &
' → logprob: -12.141721725463867
    10. '   ' → logprob: -12.266721725463867

Token 491: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -3.547789674485102e-05
    2. ' i' → logprob: -10.250035285949707
    3. '	i' → logprob: -18.125036239624023
    4. ')i' → logprob: -19.125036239624023
    5. ' ' → logprob: -20.000036239624023
    6. '```' → logprob: -20.375036239624023
    7. '(i' → logprob: -21.250036239624023
    8. '   ' → logprob: -21.250036239624023
    9. ''i' → logprob: -22.375036239624023
    10. '<|end|>' → logprob: -22.625036239624023

Token 492: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0028895139694213867
    2. ')&' → logprob: -6.002889633178711
    3. '&' → logprob: -7.877889633178711
    4. ' )' → logprob: -10.502889633178711
    5. ' &' → logprob: -11.877889633178711
    6. '&amp' → logprob: -15.377889633178711
    7. '1' → logprob: -16.75288963317871
    8. '&)' → logprob: -17.12788963317871
    9. '&gt' → logprob: -17.37788963317871
    10. ' ' → logprob: -18.00288963317871

Token 493: ' &' (ID: 827)
  Prédit: '&'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '&' → logprob: -0.10067771375179291
    2. ' &' → logprob: -2.350677728652954
    3. '1' → logprob: -8.475677490234375
    4. '&amp' → logprob: -8.975677490234375
    5. ')' → logprob: -9.725677490234375
    6. ')&' → logprob: -10.350677490234375
    7. ' ' → logprob: -10.725677490234375
    8. '   ' → logprob: -12.350677490234375
    9. '&nbsp' → logprob: -12.475677490234375
    10. '           ' → logprob: -13.350677490234375

Token 494: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000488110730657354
    2. ' ' → logprob: -7.62548828125
    3. '   ' → logprob: -17.37548828125
    4. ' ' → logprob: -18.50048828125
    5. '' → logprob: -18.62548828125
    6. '  ' → logprob: -18.87548828125
    7. '`' → logprob: -19.25048828125
    8. '01' → logprob: -19.25048828125
    9. '```' → logprob: -19.62548828125
    10. '
' → logprob: -19.62548828125

Token 495: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.842555426876061e-06
    2. ' ' → logprob: -12.250004768371582
    3. '' → logprob: -18.0000057220459
    4. '```' → logprob: -18.5000057220459
    5. '   ' → logprob: -18.7500057220459
    6. '`' → logprob: -18.7500057220459
    7. '01' → logprob: -18.8750057220459
    8. '
' → logprob: -19.3750057220459
    9. '

' → logprob: -19.5000057220459
    10. '{' → logprob: -20.1250057220459

Token 496: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.48276424407958984
    2. '==' → logprob: -1.1077642440795898
    3. '           ' → logprob: -3.35776424407959
    4. '1' → logprob: -4.98276424407959
    5. ')==' → logprob: -5.98276424407959
    6. ' ' → logprob: -6.10776424407959
    7. '
' → logprob: -6.35776424407959
    8. ')' → logprob: -6.60776424407959
    9. '<|end|>' → logprob: -7.10776424407959
    10. '               ' → logprob: -7.23276424407959

Token 497: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004078758880496025
    2. ' ' → logprob: -5.5040788650512695
    3. 'True' → logprob: -15.37907886505127
    4. ' True' → logprob: -16.254077911376953
    5. ' ' → logprob: -19.629077911376953
    6. '   ' → logprob: -19.629077911376953
    7. '  ' → logprob: -20.129077911376953
    8. '１' → logprob: -20.629077911376953
    9. '0' → logprob: -20.754077911376953
    10. '=' → logprob: -20.879077911376953

Token 498: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.547789674485102e-05
    2. ' ' → logprob: -10.250035285949707
    3. 'True' → logprob: -17.500036239624023
    4. '۱' → logprob: -19.750036239624023
    5. '0' → logprob: -20.250036239624023
    6. '１' → logprob: -20.375036239624023
    7. ' True' → logprob: -20.687536239624023
    8. '```' → logprob: -20.750036239624023
    9. '' → logprob: -20.875036239624023
    10. '=' → logprob: -21.062536239624023

Token 499: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5802232623100281
    2. '
' → logprob: -0.8302232623100281
    3. '<|end|>' → logprob: -6.330223083496094
    4. '  
' → logprob: -7.705223083496094
    5. '            
' → logprob: -7.705223083496094
    6. '       ' → logprob: -7.955223083496094
    7. ' 
' → logprob: -7.955223083496094
    8. ')' → logprob: -8.205223083496094
    9. '    
' → logprob: -8.455223083496094
    10. '
' → logprob: -8.955223083496094

Token 500: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002521680435165763
    2. '       ' → logprob: -6.127521514892578
    3. '
' → logprob: -8.752521514892578
    4. '<|end|>' → logprob: -9.502521514892578
    5. '```' → logprob: -10.627521514892578
    6. '   ' → logprob: -11.127521514892578
    7. '               ' → logprob: -11.502521514892578
    8. '  
' → logprob: -11.752521514892578
    9. ' ' → logprob: -11.877521514892578
    10. '          ' → logprob: -12.252521514892578

Token 501: ' formula' (ID: 20690)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.0868033170700073
    2. '           ' → logprob: -1.0868033170700073
    3. 'all' → logprob: -1.4618033170700073
    4. '       ' → logprob: -3.461803436279297
    5. 'result' → logprob: -3.461803436279297
    6. 'for' → logprob: -4.711803436279297
    7. 'sat' → logprob: -5.211803436279297
    8. 'def' → logprob: -5.836803436279297
    9. 'valid' → logprob: -5.961803436279297
    10. ' all' → logprob: -6.586803436279297

Token 502: '_val' (ID: 13694)
  Prédit: '_s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -1.0210689306259155
    2. ' =' → logprob: -1.1460689306259155
    3. '=' → logprob: -1.6460689306259155
    4. '_true' → logprob: -2.896069049835205
    5. '_' → logprob: -3.396069049835205
    6. ')' → logprob: -4.271069049835205
    7. '_value' → logprob: -4.646069049835205
    8. 's' → logprob: -5.646069049835205
    9. '_val' → logprob: -6.146069049835205
    10. '_is' → logprob: -6.146069049835205

Token 503: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12694889307022095
    2. '=' → logprob: -2.126948833465576
    3. '=True' → logprob: -11.751949310302734
    4. '<|end|>' → logprob: -12.626949310302734
    5. 's' → logprob: -13.251949310302734
    6. ')' → logprob: -13.501949310302734
    7. ' |=' → logprob: -13.501949310302734
    8. '=False' → logprob: -13.626949310302734
    9. ' ' → logprob: -14.126949310302734
    10. '=[]' → logprob: -15.001949310302734

Token 504: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.04921581223607063
    2. 'True' → logprob: -3.549215793609619
    3. ' False' → logprob: -4.049215793609619
    4. ' True' → logprob: -6.299215793609619
    5. '   ' → logprob: -12.674216270446777
    6. '(False' → logprob: -16.17421531677246
    7. '       ' → logprob: -16.92421531677246
    8. 'false' → logprob: -17.04921531677246
    9. '0' → logprob: -17.67421531677246
    10. '(True' → logprob: -17.79921531677246

Token 505: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00883473176509142
    2. '
' → logprob: -4.8838348388671875
    3. '<|end|>' → logprob: -7.1338348388671875
    4. ' for' → logprob: -8.383834838867188
    5. 'for' → logprob: -10.508834838867188
    6. '       ' → logprob: -10.508834838867188
    7. '<|end|>' → logprob: -10.633834838867188
    8. ')' → logprob: -11.008834838867188
    9. '            
' → logprob: -11.008834838867188
    10. '               ' → logprob: -11.133834838867188

Token 506: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04111841693520546
    2. '
' → logprob: -3.5411183834075928
    3. ' for' → logprob: -5.041118621826172
    4. '<|end|>' → logprob: -5.541118621826172
    5. 'for' → logprob: -8.541118621826172
    6. '       ' → logprob: -8.541118621826172
    7. '<|end|>' → logprob: -9.416118621826172
    8. '            
' → logprob: -9.666118621826172
    9. ',' → logprob: -9.791118621826172
    10. '  
' → logprob: -9.916118621826172

Token 507: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.2530173659324646
    2. ' for' → logprob: -1.5030174255371094
    3. '           ' → logprob: -7.753017425537109
    4. '       ' → logprob: -7.878017425537109
    5. '
' → logprob: -8.25301742553711
    6. '   ' → logprob: -11.87801742553711
    7. '```' → logprob: -12.12801742553711
    8. '	for' → logprob: -13.50301742553711
    9. '               ' → logprob: -14.12801742553711
    10. ' ' → logprob: -14.37801742553711

Token 508: ' clause' (ID: 45470)
  Prédit: 'cl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cl' → logprob: -0.29443198442459106
    2. ' clause' → logprob: -2.0444319248199463
    3. 'c' → logprob: -2.1694319248199463
    4. ' c' → logprob: -4.669432163238525
    5. ' cl' → logprob: -6.919432163238525
    6. 'cla' → logprob: -7.919432163238525
    7. 'cls' → logprob: -8.294431686401367
    8. '_clause' → logprob: -9.169431686401367
    9. '   ' → logprob: -9.294431686401367
    10. ' claus' → logprob: -10.044431686401367

Token 509: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0034013327676802874
    2. 'in' → logprob: -5.753401279449463
    3. '_' → logprob: -9.253401756286621
    4. 's' → logprob: -9.378401756286621
    5. '_in' → logprob: -10.878401756286621
    6. '```' → logprob: -12.753401756286621
    7. '[' → logprob: -13.003401756286621
    8. '	in' → logprob: -13.128401756286621
    9. '   ' → logprob: -13.253401756286621
    10. '           ' → logprob: -13.253401756286621

Token 510: ' clauses' (ID: 99572)
  Prédit: 'cla'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cla' → logprob: -0.07889551669359207
    2. ' clauses' → logprob: -2.5788955688476562
    3. '   ' → logprob: -12.328895568847656
    4. '       ' → logprob: -14.953895568847656
    5. 'cl' → logprob: -15.328895568847656
    6. 'cls' → logprob: -16.078895568847656
    7. '[]' → logprob: -16.203895568847656
    8. 'cles' → logprob: -16.203895568847656
    9. 'c' → logprob: -16.578895568847656
    10. '[' → logprob: -16.703895568847656

Token 511: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.055669285356998444
    2. ':
' → logprob: -2.9306693077087402
    3. '           ' → logprob: -8.430668830871582
    4. ',' → logprob: -8.930668830871582
    5. '               ' → logprob: -9.055668830871582
    6. '=' → logprob: -9.180668830871582
    7. '<|end|>' → logprob: -9.805668830871582
    8. '[' → logprob: -10.680668830871582
    9. '):
' → logprob: -10.680668830871582
    10. ' =' → logprob: -10.680668830871582

Token 512: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.03853047639131546
    2. '           ' → logprob: -4.038530349731445
    3. ':' → logprob: -5.163530349731445
    4. ' for' → logprob: -5.663530349731445
    5. ':
' → logprob: -5.663530349731445
    6. ' and' → logprob: -5.788530349731445
    7. ',' → logprob: -7.038530349731445
    8. '```' → logprob: -7.788530349731445
    9. '
' → logprob: -7.913530349731445
    10. '=True' → logprob: -8.163530349731445

Token 513: ' #' (ID: 1069)
  Prédit: 'cl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cl' → logprob: -0.5536020398139954
    2. ' clause' → logprob: -0.9286020398139954
    3. '               ' → logprob: -3.5536019802093506
    4. '_clause' → logprob: -7.30360221862793
    5. ' cl' → logprob: -8.42860221862793
    6. ' claus' → logprob: -9.55360221862793
    7. '   ' → logprob: -9.67860221862793
    8. '                   ' → logprob: -9.80360221862793
    9. '(cl' → logprob: -9.92860221862793
    10. '	cl' → logprob: -10.05360221862793

Token 514: ' clause' (ID: 45470)
  Prédit: 'cl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cl' → logprob: -0.005462959408760071
    2. ' clause' → logprob: -5.255463123321533
    3. 'c' → logprob: -8.880462646484375
    4. '   ' → logprob: -10.255462646484375
    5. '               ' → logprob: -11.505462646484375
    6. '           ' → logprob: -11.630462646484375
    7. '_clause' → logprob: -11.630462646484375
    8. 'cla' → logprob: -11.755462646484375
    9. ' cl' → logprob: -12.505462646484375
    10. '       ' → logprob: -12.880462646484375

Token 515: ' is' (ID: 382)
  Prédit: '_val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_val' → logprob: -3.011373155459296e-05
    2. 'val' → logprob: -10.500030517578125
    3. '_value' → logprob: -13.000030517578125
    4. '_' → logprob: -16.000030517578125
    5. '_result' → logprob: -16.875030517578125
    6. 'Val' → logprob: -17.250030517578125
    7. 'value' → logprob: -17.500030517578125
    8. '_eval' → logprob: -17.625030517578125
    9. '_true' → logprob: -17.750030517578125
    10. '_s' → logprob: -18.125030517578125

Token 516: ' a' (ID: 261)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.1842278242111206
    2. ' True' → logprob: -2.18422794342041
    3. 'False' → logprob: -2.93422794342041
    4. ' False' → logprob: -6.05922794342041
    5. '[]' → logprob: -9.80922794342041
    6. '           ' → logprob: -9.93422794342041
    7. '   ' → logprob: -10.80922794342041
    8. '(True' → logprob: -11.18422794342041
    9. '               ' → logprob: -11.80922794342041
    10. ' clause' → logprob: -12.18422794342041

Token 517: ' conjunction' (ID: 46677)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'True' → logprob: -1.2914040088653564
    2. ' True' → logprob: -1.2914040088653564
    3. ' or' → logprob: -1.9164040088653564
    4. 'l' → logprob: -2.5414040088653564
    5. 'False' → logprob: -3.1664040088653564
    6. 'or' → logprob: -3.4164040088653564
    7. 'dis' → logprob: -4.041403770446777
    8. '   ' → logprob: -4.416403770446777
    9. ' dis' → logprob: -4.541403770446777
    10. '           ' → logprob: -4.541403770446777

Token 518: ' of' (ID: 328)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8383938074111938
    2. '               ' → logprob: -0.8383938074111938
    3. ',' → logprob: -2.9633936882019043
    4. '=True' → logprob: -3.7133936882019043
    5. ' and' → logprob: -4.338393688201904
    6. '_val' → logprob: -4.838393688201904
    7. ':' → logprob: -5.213393688201904
    8. '_clause' → logprob: -5.213393688201904
    9. ' clause' → logprob: -5.338393688201904
    10. ' =' → logprob: -5.838393688201904

Token 519: ' literals' (ID: 193569)
  Prédit: 'eval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eval' → logprob: -0.5699503421783447
    2. 'l' → logprob: -1.5699503421783447
    3. 'True' → logprob: -1.5699503421783447
    4. ' True' → logprob: -4.194950103759766
    5. ' eval' → logprob: -6.569950103759766
    6. ' literals' → logprob: -7.194950103759766
    7. '[' → logprob: -8.319950103759766
    8. 'all' → logprob: -8.694950103759766
    9. '(True' → logprob: -9.069950103759766
    10. '   ' → logprob: -9.069950103759766

Token 520: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.09573272615671158
    2. ',' → logprob: -2.9707326889038086
    3. '           ' → logprob: -3.5957326889038086
    4. ' clause' → logprob: -5.345732688903809
    5. ' and' → logprob: -5.845732688903809
    6. ':' → logprob: -6.845732688903809
    7. ':
' → logprob: -7.470732688903809
    8. '
' → logprob: -7.720732688903809
    9. '_clause' → logprob: -7.845732688903809
    10. '=' → logprob: -8.220732688903809

Token 521: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.25397223234176636
    2. '           ' → logprob: -1.5039722919464111
    3. ',' → logprob: -7.253972053527832
    4. '       ' → logprob: -8.628972053527832
    5. '
' → logprob: -8.753972053527832
    6. ' and' → logprob: -9.253972053527832
    7. '=True' → logprob: -9.253972053527832
    8. '                   ' → logprob: -9.253972053527832
    9. ' clause' → logprob: -9.253972053527832
    10. ' for' → logprob: -9.378972053527832

Token 522: ' clause' (ID: 45470)
  Prédit: 'cl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cl' → logprob: -0.01774224080145359
    2. ' clause' → logprob: -4.517742156982422
    3. '               ' → logprob: -5.142742156982422
    4. 'formula' → logprob: -7.767742156982422
    5. '_clause' → logprob: -8.517742156982422
    6. 'c' → logprob: -9.642742156982422
    7. ' cl' → logprob: -10.642742156982422
    8. '(cl' → logprob: -10.642742156982422
    9. '	cl' → logprob: -11.017742156982422
    10. '           ' → logprob: -11.142742156982422

Token 523: '_val' (ID: 13694)
  Prédit: '_val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -6.802049756515771e-05
    2. 'val' → logprob: -9.750067710876465
    3. '_value' → logprob: -11.625067710876465
    4. '_' → logprob: -14.500067710876465
    5. 'Val' → logprob: -16.12506866455078
    6. 'value' → logprob: -16.87506866455078
    7. '_result' → logprob: -17.50006866455078
    8. '_true' → logprob: -18.12506866455078
    9. '_eval' → logprob: -18.50006866455078
    10. '_valid' → logprob: -19.87506866455078

Token 524: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02975442260503769
    2. '=' → logprob: -3.529754400253296
    3. '=True' → logprob: -13.029754638671875
    4. '   ' → logprob: -13.404754638671875
    5. ' |=' → logprob: -16.154754638671875
    6. '           ' → logprob: -16.529754638671875
    7. '       ' → logprob: -16.904754638671875
    8. ' ' → logprob: -17.404754638671875
    9. '=False' → logprob: -17.904754638671875
    10. '               ' → logprob: -18.279754638671875

Token 525: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.00043162284418940544
    2. ' True' → logprob: -7.750431537628174
    3. '   ' → logprob: -14.125432014465332
    4. '(True' → logprob: -16.000431060791016
    5. '           ' → logprob: -17.375431060791016
    6. 'true' → logprob: -18.250431060791016
    7. '               ' → logprob: -18.625431060791016
    8. 'all' → logprob: -18.625431060791016
    9. '=True' → logprob: -19.250431060791016
    10. '                   ' → logprob: -19.625431060791016

Token 526: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.017681457102298737
    2. '           ' → logprob: -4.51768159866333
    3. ' for' → logprob: -6.01768159866333
    4. '	           ' → logprob: -6.39268159866333
    5. '		       ' → logprob: -7.64268159866333
    6. '	       ' → logprob: -8.142681121826172
    7. '<|end|>' → logprob: -8.142681121826172
    8. '
' → logprob: -8.142681121826172
    9. '                   ' → logprob: -8.517681121826172
    10. '                
' → logprob: -8.767681121826172

Token 527: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1048862561583519
    2. '               ' → logprob: -2.604886293411255
    3. ' for' → logprob: -3.854886293411255
    4. '<|end|>' → logprob: -6.854886054992676
    5. '	       ' → logprob: -7.479886054992676
    6. '	           ' → logprob: -7.604886054992676
    7. '       ' → logprob: -7.729886054992676
    8. 'for' → logprob: -7.729886054992676
    9. '            
' → logprob: -8.729886054992676
    10. '		' → logprob: -8.854886054992676

Token 528: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4898967146873474
    2. '               ' → logprob: -1.6148967742919922
    3. '           ' → logprob: -1.9898967742919922
    4. 'for' (adapté à ' for') → logprob: -3.614896774291992
    5. '		' → logprob: -5.114896774291992
    6. '       ' → logprob: -5.114896774291992
    7. '	for' → logprob: -5.364896774291992
    8. '	       ' → logprob: -5.864896774291992
    9. '	' → logprob: -6.114896774291992
    10. '	           ' → logprob: -7.114896774291992

Token 529: ' sign' (ID: 2232)
  Prédit: 'sign'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sign' → logprob: -0.1091863363981247
    2. ' sign' → logprob: -2.7341864109039307
    3. '(sign' → logprob: -3.6091864109039307
    4. 's' → logprob: -4.609186172485352
    5. '(s' → logprob: -7.609186172485352
    6. ' s' → logprob: -7.859186172485352
    7. ' (' → logprob: -8.609186172485352
    8. '(' → logprob: -8.859186172485352
    9. 'sig' → logprob: -10.109186172485352
    10. 'l' → logprob: -10.359186172485352

Token 530: ',var' (ID: 155936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10248370468616486
    2. ',l' → logprob: -2.3524837493896484
    3. ',var' → logprob: -6.227483749389648
    4. ',v' → logprob: -9.102483749389648
    5. ',val' → logprob: -9.102483749389648
    6. ',s' → logprob: -10.352483749389648
    7. ',c' → logprob: -11.352483749389648
    8. ',value' → logprob: -11.852483749389648
    9. ',x' → logprob: -12.102483749389648
    10. ',t' → logprob: -12.102483749389648

Token 531: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.13510388135910034
    2. ',' → logprob: -2.135103940963745
    3. ',val' → logprob: -5.760103702545166
    4. 'in' → logprob: -6.385103702545166
    5. '_val' → logprob: -6.760103702545166
    6. ':' → logprob: -7.885103702545166
    7. ',_' → logprob: -8.135104179382324
    8. '           ' → logprob: -8.635104179382324
    9. ':
' → logprob: -8.635104179382324
    10. '       ' → logprob: -8.885104179382324

Token 532: ' clause' (ID: 45470)
  Prédit: ' clause'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' clause' → logprob: -0.10028775036334991
    2. 'cl' → logprob: -2.350287675857544
    3. '_clause' → logprob: -9.725287437438965
    4. '   ' → logprob: -12.350287437438965
    5. 'literal' → logprob: -12.975287437438965
    6. ' cl' → logprob: -13.225287437438965
    7. 'cline' → logprob: -13.225287437438965
    8. ' ' → logprob: -13.350287437438965
    9. 'cla' → logprob: -13.350287437438965
    10. '(cl' → logprob: -13.350287437438965

Token 533: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07622255384922028
    2. ':
' → logprob: -3.0762226581573486
    3. '                   ' → logprob: -3.8262226581573486
    4. '               ' → logprob: -5.9512224197387695
    5. ',' → logprob: -6.3262224197387695
    6. '<|end|>' → logprob: -8.20122241973877
    7. '):
' → logprob: -8.70122241973877
    8. '           ' → logprob: -8.82622241973877
    9. '):' → logprob: -9.45122241973877
    10. '<|end|>' → logprob: -9.57622241973877

Token 534: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.002108743879944086
    2. '               ' → logprob: -6.752108573913574
    3. '           ' → logprob: -7.877108573913574
    4. ',' → logprob: -8.877108573913574
    5. ' if' → logprob: -9.252108573913574
    6. '<|end|>' → logprob: -9.252108573913574
    7. '		           ' → logprob: -10.002108573913574
    8. '                  ' → logprob: -10.127108573913574
    9. '
' → logprob: -10.377108573913574
    10. '                    
' → logprob: -10.877108573913574

Token 535: ' lit' (ID: 11980)
  Prédit: 'cl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cl' → logprob: -0.07338198274374008
    2. ' clause' → logprob: -3.1983819007873535
    3. '                   ' → logprob: -3.8233819007873535
    4. 'if' → logprob: -5.3233819007873535
    5. ' if' → logprob: -6.5733819007873535
    6. 'val' → logprob: -7.0733819007873535
    7. '               ' → logprob: -7.4483819007873535
    8. '                       ' → logprob: -8.948382377624512
    9. ' val' → logprob: -9.698382377624512
    10. ' cl' → logprob: -10.073382377624512

Token 536: '_val' (ID: 13694)
  Prédit: '_val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -6.24179228907451e-05
    2. 'val' → logprob: -9.875061988830566
    3. '_eval' → logprob: -11.875061988830566
    4. '_value' → logprob: -13.375061988830566
    5. 'ial' → logprob: -13.875061988830566
    6. 'al' → logprob: -14.250061988830566
    7. '_' → logprob: -14.875061988830566
    8. 'eval' → logprob: -16.375062942504883
    9. 'eral' → logprob: -16.875062942504883
    10. 'ual' → logprob: -16.875062942504883

Token 537: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759400725364685
    2. ' =' → logprob: -0.8259400725364685
    3. ' ' → logprob: -14.825940132141113
    4. '   ' → logprob: -16.325939178466797
    5. ')' → logprob: -16.575939178466797
    6. ' |=' → logprob: -16.950939178466797
    7. ' ' → logprob: -17.700939178466797
    8. '  ' → logprob: -17.825939178466797
    9. '.=' → logprob: -18.325939178466797
    10. '=True' → logprob: -18.450939178466797

Token 538: ' eval' (ID: 29383)
  Prédit: 'eval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eval' → logprob: -0.0013291679788380861
    2. ' eval' → logprob: -6.626328945159912
    3. 'var' → logprob: -13.12632942199707
    4. '   ' → logprob: -14.50132942199707
    5. 'val' → logprob: -15.50132942199707
    6. 'expr' → logprob: -16.00132942199707
    7. '(eval' → logprob: -16.00132942199707
    8. '           ' → logprob: -16.12632942199707
    9. '  ' → logprob: -17.37632942199707
    10. '       ' → logprob: -17.37632942199707

Token 539: '_literal' (ID: 80453)
  Prédit: '_literal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_literal' → logprob: -1.1472419600977446e-06
    2. '_l' → logprob: -14.750000953674316
    3. '_' → logprob: -15.250000953674316
    4. 'literal' → logprob: -15.500000953674316
    5. '_LITERAL' → logprob: -15.750000953674316
    6. 'Literal' → logprob: -17.000001907348633
    7. '_variable' → logprob: -17.000001907348633
    8. '_literals' → logprob: -17.125001907348633
    9. ' literal' → logprob: -18.375001907348633
    10. 'iteral' → logprob: -18.500001907348633

Token 540: '(var' (ID: 15816)
  Prédit: '(var'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(var' → logprob: -4.644463479053229e-05
    2. 'var' → logprob: -10.000046730041504
    3. '(' → logprob: -14.000046730041504
    4. '[var' → logprob: -16.875045776367188
    5. ' var' → logprob: -17.250045776367188
    6. '(val' → logprob: -17.625045776367188
    7. ',var' → logprob: -18.000045776367188
    8. ')var' → logprob: -18.125045776367188
    9. '(
' → logprob: -18.375045776367188
    10. ' (' → logprob: -19.125045776367188

Token 541: '_values' (ID: 20393)
  Prédit: '_values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_values' → logprob: -0.7277325987815857
    2. 'var' → logprob: -1.1027326583862305
    3. '[var' → logprob: -1.9777326583862305
    4. 'val' → logprob: -4.3527326583862305
    5. '(var' → logprob: -4.4777326583862305
    6. 'values' → logprob: -4.7277326583862305
    7. ',' → logprob: -5.3527326583862305
    8. ',var' → logprob: -5.9777326583862305
    9. ')' → logprob: -6.4777326583862305
    10. ' var' → logprob: -6.6027326583862305

Token 542: '[var' (ID: 109537)
  Prédit: '[var'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[var' → logprob: -0.17541877925395966
    2. '[' → logprob: -2.3004188537597656
    3. ',' → logprob: -3.3004188537597656
    4. '[val' → logprob: -4.300418853759766
    5. ',var' → logprob: -4.925418853759766
    6. ' ,' → logprob: -6.300418853759766
    7. ',val' → logprob: -7.175418853759766
    8. 'var' → logprob: -9.050418853759766
    9. '(var' → logprob: -9.175418853759766
    10. ' [' → logprob: -9.800418853759766

Token 543: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0032032581511884928
    2. ' ,' → logprob: -5.878203392028809
    3. '],' → logprob: -7.878203392028809
    4. 'sign' → logprob: -11.628203392028809
    5. '),' → logprob: -12.878203392028809
    6. ' ],' → logprob: -13.253203392028809
    7. '[' → logprob: -13.753203392028809
    8. ' ' → logprob: -13.878203392028809
    9. ' sign' → logprob: -14.128203392028809
    10. '(sign' → logprob: -14.378203392028809

Token 544: ' sign' (ID: 2232)
  Prédit: 'sign'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sign' → logprob: -0.0009115827269852161
    2. ' sign' → logprob: -7.000911712646484
    3. '(sign' → logprob: -17.875911712646484
    4. '	sign' → logprob: -17.875911712646484
    5. ')' → logprob: -18.500911712646484
    6. '   ' → logprob: -19.750911712646484
    7. '.sign' → logprob: -20.250911712646484
    8. '_sign' → logprob: -20.250911712646484
    9. ' ' → logprob: -20.375911712646484
    10. '
' → logprob: -21.250911712646484

Token 545: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.32286590337753296
    2. ')' → logprob: -1.3228659629821777
    3. '                   ' → logprob: -4.697865962982178
    4. ')
' → logprob: -8.44786548614502
    5. '               ' → logprob: -8.57286548614502
    6. '           ' → logprob: -11.44786548614502
    7. ' )
' → logprob: -12.07286548614502
    8. ')

' → logprob: -12.19786548614502
    9. ')==' → logprob: -12.94786548614502
    10. '       ' → logprob: -13.19786548614502

Token 546: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.00014561474381480366
    2. '               ' → logprob: -9.25014591217041
    3. '           ' → logprob: -10.25014591217041
    4. '```' → logprob: -12.75014591217041
    5. 'if' → logprob: -13.00014591217041
    6. '   ' → logprob: -13.12514591217041
    7. '       ' → logprob: -13.37514591217041
    8. '                  ' → logprob: -13.50014591217041
    9. '                       ' → logprob: -13.62514591217041
    10. '<|end|>' → logprob: -14.00014591217041

Token 547: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.8140166401863098
    2. 'cl' → logprob: -1.064016580581665
    3. '                   ' → logprob: -1.564016580581665
    4. '               ' → logprob: -6.564016819000244
    5. ' if' → logprob: -7.064016819000244
    6. '           ' → logprob: -8.564016342163086
    7. ' clause' → logprob: -9.564016342163086
    8. '```' → logprob: -11.689016342163086
    9. '                       ' → logprob: -11.939016342163086
    10. '   ' → logprob: -12.064016342163086

Token 548: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.014171270653605461
    2. ' not' → logprob: -4.264171123504639
    3. 'lit' → logprob: -12.889171600341797
    4. '	not' → logprob: -13.014171600341797
    5. '   ' → logprob: -13.264171600341797
    6. '(not' → logprob: -13.764171600341797
    7. '!' → logprob: -15.389171600341797
    8. ' ' → logprob: -17.764171600341797
    9. ' lit' → logprob: -17.889171600341797
    10. '
' → logprob: -18.514171600341797

Token 549: ' lit' (ID: 11980)
  Prédit: 'lit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lit' → logprob: -0.005233882926404476
    2. ' lit' → logprob: -5.2552337646484375
    3. 'cl' → logprob: -16.380233764648438
    4. ' ' → logprob: -18.380233764648438
    5. 'lic' → logprob: -18.880233764648438
    6. 'l' → logprob: -19.630233764648438
    7. 'lig' → logprob: -20.380233764648438
    8. 'Lit' → logprob: -20.380233764648438
    9. 'li' → logprob: -20.505233764648438
    10. ' ' → logprob: -20.755233764648438

Token 550: '_val' (ID: 13694)
  Prédit: '_val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -9.088346359931165e-07
    2. '_' → logprob: -14.500000953674316
    3. '_literal' → logprob: -15.125000953674316
    4. 'val' → logprob: -17.625
    5. 'et' → logprob: -18.0
    6. '_var' → logprob: -18.0
    7. '_
' → logprob: -18.25
    8. '\' → logprob: -18.375
    9. 'iteral' → logprob: -18.5
    10. '_l' → logprob: -18.75

Token 551: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.26695260405540466
    2. ':' → logprob: -1.516952633857727
    3. '                       ' → logprob: -4.6419525146484375
    4. '                   ' → logprob: -5.5169525146484375
    5. '                           ' → logprob: -7.2669525146484375
    6. '):
' → logprob: -8.641952514648438
    7. '               ' → logprob: -8.891952514648438
    8. ' or' → logprob: -9.891952514648438
    9. ',' → logprob: -10.141952514648438
    10. '                               ' → logprob: -10.766952514648438

Token 552: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.032414618879556656
    2. '                   ' → logprob: -3.907414674758911
    3. ':
' → logprob: -4.907414436340332
    4. '                           ' → logprob: -5.907414436340332
    5. ':' → logprob: -6.782414436340332
    6. '               ' → logprob: -8.782414436340332
    7. ',' → logprob: -9.157414436340332
    8. ' and' → logprob: -9.657414436340332
    9. ' :
' → logprob: -10.657414436340332
    10. '                               ' → logprob: -10.782414436340332

Token 553: ' clause' (ID: 45470)
  Prédit: 'cl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cl' → logprob: -0.30663856863975525
    2. '                           ' → logprob: -1.8066385984420776
    3. ' clause' → logprob: -2.431638479232788
    4. 'break' → logprob: -5.181638717651367
    5. '                       ' → logprob: -5.306638717651367
    6. '                   ' → logprob: -7.556638717651367
    7. '```' → logprob: -8.056638717651367
    8. '_clause' → logprob: -8.806638717651367
    9. '                               ' → logprob: -8.931638717651367
    10. '               ' → logprob: -9.681638717651367

Token 554: '_val' (ID: 13694)
  Prédit: '_val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: 0.0
    2. 'val' → logprob: -17.75
    3. '_' → logprob: -17.875
    4. ' _' → logprob: -18.875
    5. '_VAL' → logprob: -19.375
    6. 'Val' → logprob: -19.5
    7. '_value' → logprob: -20.125
    8. '           ' → logprob: -20.125
    9. '=_' → logprob: -20.375
    10. '_var' → logprob: -20.625

Token 555: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1277776062488556
    2. ' =' → logprob: -2.127777576446533
    3. '=False' → logprob: -7.127777576446533
    4. '=True' → logprob: -10.752778053283691
    5. '                           ' → logprob: -11.127778053283691
    6. '                       ' → logprob: -12.252778053283691
    7. '=false' → logprob: -13.627778053283691
    8. '                   ' → logprob: -14.002778053283691
    9. '                               ' → logprob: -14.252778053283691
    10. '           ' → logprob: -14.377778053283691

Token 556: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.0004306692280806601
    2. ' False' → logprob: -7.750430583953857
    3. '(False' → logprob: -17.625431060791016
    4. '=False' → logprob: -18.000431060791016
    5. 'false' → logprob: -20.000431060791016
    6. 'break' → logprob: -21.125431060791016
    7. '_false' → logprob: -21.750431060791016
    8. '.False' → logprob: -22.250431060791016
    9. '   ' → logprob: -23.000431060791016
    10. 'FALSE' → logprob: -23.625431060791016

Token 557: '
' (ID: 198)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -2.939851037808694e-05
    2. '               ' → logprob: -11.500029563903809
    3. '                           ' → logprob: -12.000029563903809
    4. '                   ' → logprob: -12.000029563903809
    5. '                        ' → logprob: -12.750029563903809
    6. '           ' → logprob: -13.750029563903809
    7. '                      ' → logprob: -14.375029563903809
    8. '       ' → logprob: -14.875029563903809
    9. '<|end|>' → logprob: -14.875029563903809
    10. '					' → logprob: -15.125029563903809

Token 558: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -4.417976379045285e-05
    2. '               ' → logprob: -10.875043869018555
    3. '                   ' → logprob: -11.125043869018555
    4. '                           ' → logprob: -12.375043869018555
    5. '           ' → logprob: -13.000043869018555
    6. 'break' → logprob: -13.750043869018555
    7. '                        ' → logprob: -13.875043869018555
    8. '                      ' → logprob: -14.375043869018555
    9. '       ' → logprob: -14.500043869018555
    10. '                     ' → logprob: -15.875043869018555

Token 559: ' break' (ID: 2338)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.39131516218185425
    2. 'break' (adapté à ' break') → logprob: -1.141315221786499
    3. ' break' → logprob: -5.64131498336792
    4. '                   ' → logprob: -7.26631498336792
    5. '               ' → logprob: -9.391315460205078
    6. '	break' → logprob: -9.766315460205078
    7. '           ' → logprob: -10.891315460205078
    8. '```' → logprob: -12.266315460205078
    9. '                           ' → logprob: -12.516315460205078
    10. '					' → logprob: -12.641315460205078

Token 560: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0022708738688379526
    2. '           ' → logprob: -6.127270698547363
    3. '       ' → logprob: -10.752270698547363
    4. '                   ' → logprob: -10.752270698547363
    5. '
' → logprob: -11.252270698547363
    6. '   ' → logprob: -11.377270698547363
    7. '              ' → logprob: -12.502270698547363
    8. '+' → logprob: -13.002270698547363
    9. '                ' → logprob: -13.127270698547363
    10. '			' → logprob: -13.877270698547363

Token 561: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0017318216850981116
    2. '           ' → logprob: -6.501731872558594
    3. '       ' → logprob: -9.376731872558594
    4. '                   ' → logprob: -9.501731872558594
    5. '                ' → logprob: -11.251731872558594
    6. '              ' → logprob: -11.501731872558594
    7. '   ' → logprob: -11.626731872558594
    8. '                       ' → logprob: -12.001731872558594
    9. '<|end|>' → logprob: -12.001731872558594
    10. ' ' → logprob: -12.126731872558594

Token 562: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08401340991258621
    2. '               ' → logprob: -2.5840134620666504
    3. '       ' → logprob: -5.83401346206665
    4. ' if' → logprob: -6.83401346206665
    5. 'if' (adapté à ' if') → logprob: -7.33401346206665
    6. '   ' → logprob: -9.084012985229492
    7. ' ' → logprob: -9.209012985229492
    8. '          ' → logprob: -9.709012985229492
    9. '         ' → logprob: -10.459012985229492
    10. '
' → logprob: -10.584012985229492

Token 563: ' clause' (ID: 45470)
  Prédit: 'cl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cl' → logprob: -0.1270059049129486
    2. ' clause' → logprob: -2.1270058155059814
    3. ' cl' → logprob: -10.377005577087402
    4. '(cl' → logprob: -11.377005577087402
    5. ' ' → logprob: -11.502005577087402
    6. '   ' → logprob: -12.002005577087402
    7. '
' → logprob: -12.252005577087402
    8. 'cla' → logprob: -12.252005577087402
    9. '	cl' → logprob: -13.002005577087402
    10. '  ' → logprob: -13.252005577087402

Token 564: '_val' (ID: 13694)
  Prédit: '_val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -1.3856492842023727e-06
    2. 'val' → logprob: -14.250000953674316
    3. '_' → logprob: -15.750000953674316
    4. ' _' → logprob: -16.250001907348633
    5. 'Val' → logprob: -16.500001907348633
    6. ''_' → logprob: -16.500001907348633
    7. '_VAL' → logprob: -16.625001907348633
    8. '
' → logprob: -17.250001907348633
    9. '##_' → logprob: -17.750001907348633
    10. '"_' → logprob: -17.875001907348633

Token 565: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.22847901284694672
    2. ':
' → logprob: -1.728479027748108
    3. '==' → logprob: -4.103478908538818
    4. '           ' → logprob: -4.853478908538818
    5. ' ==' → logprob: -7.228478908538818
    6. '               ' → logprob: -7.228478908538818
    7. '=' → logprob: -7.728478908538818
    8. '=True' → logprob: -8.853479385375977
    9. '<|end|>' → logprob: -9.353479385375977
    10. '       ' → logprob: -9.978479385375977

Token 566: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.03459606692194939
    2. '           ' → logprob: -3.7845959663391113
    3. '               ' → logprob: -4.534595966339111
    4. '```' → logprob: -9.15959644317627
    5. '                       ' → logprob: -9.28459644317627
    6. ' formula' → logprob: -9.65959644317627
    7. 'formula' → logprob: -9.65959644317627
    8. ',' → logprob: -10.15959644317627
    9. '		           ' → logprob: -10.40959644317627
    10. '<|end|>' → logprob: -10.78459644317627

Token 567: ' formula' (ID: 20690)
  Prédit: 'formula'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'formula' (adapté à ' formula') → logprob: -0.060700446367263794
    2. ' formula' → logprob: -2.9357004165649414
    3. '               ' → logprob: -6.185700416564941
    4. '                   ' → logprob: -6.685700416564941
    5. 'form' → logprob: -6.810700416564941
    6. '           ' → logprob: -7.310700416564941
    7. 'found' → logprob: -7.685700416564941
    8. '   ' → logprob: -9.185700416564941
    9. '_formula' → logprob: -9.685700416564941
    10. ' found' → logprob: -10.060700416564941

Token 568: '_val' (ID: 13694)
  Prédit: '_val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -9.014684110297821e-06
    2. '_' → logprob: -11.875008583068848
    3. '=' → logprob: -13.750008583068848
    4. 'val' → logprob: -14.750008583068848
    5. 'Val' → logprob: -15.500008583068848
    6. ' =' → logprob: -16.250009536743164
    7. '=_' → logprob: -17.125009536743164
    8. '_found' → logprob: -17.500009536743164
    9. '_value' → logprob: -17.625009536743164
    10. '
' → logprob: -17.875009536743164

Token 569: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06197440251708031
    2. ' =' → logprob: -2.811974287033081
    3. '=True' → logprob: -11.93697452545166
    4. '           ' → logprob: -16.436973571777344
    5. '               ' → logprob: -17.186973571777344
    6. ' |=' → logprob: -17.311973571777344
    7. '=
' → logprob: -17.811973571777344
    8. '                   ' → logprob: -17.936973571777344
    9. 'True' → logprob: -18.436973571777344
    10. '   ' → logprob: -18.686973571777344

Token 570: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.00020354038861114532
    2. ' True' → logprob: -8.500203132629395
    3. 'true' → logprob: -16.75020408630371
    4. '(True' → logprob: -18.37520408630371
    5. '=True' → logprob: -19.75020408630371
    6. '   ' → logprob: -20.62520408630371
    7. '                   ' → logprob: -21.12520408630371
    8. 'False' → logprob: -21.50020408630371
    9. 'TRUE' → logprob: -21.75020408630371
    10. '_true' → logprob: -22.00020408630371

Token 571: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.005562074948102236
    2. '           ' → logprob: -5.2555623054504395
    3. '                       ' → logprob: -8.880561828613281
    4. '               ' → logprob: -9.380561828613281
    5. '       ' → logprob: -9.505561828613281
    6. '
' → logprob: -11.380561828613281
    7. '		           ' → logprob: -12.630561828613281
    8. '<|end|>' → logprob: -12.630561828613281
    9. '   ' → logprob: -13.005561828613281
    10. '                           ' → logprob: -13.255561828613281

Token 572: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.02407662943005562
    2. '           ' → logprob: -3.7740767002105713
    3. '               ' → logprob: -8.024076461791992
    4. '       ' → logprob: -8.149076461791992
    5. '                       ' → logprob: -8.524076461791992
    6. '   ' → logprob: -12.399076461791992
    7. '```' → logprob: -13.149076461791992
    8. '				' → logprob: -13.274076461791992
    9. '		           ' → logprob: -13.399076461791992
    10. '	               ' → logprob: -13.524076461791992

Token 573: ' break' (ID: 2338)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.006608195602893829
    2. 'break' (adapté à ' break') → logprob: -5.631608009338379
    3. '               ' → logprob: -6.881608009338379
    4. ' break' → logprob: -7.006608009338379
    5. '           ' → logprob: -7.131608009338379
    6. '       ' → logprob: -8.881608009338379
    7. '                       ' → logprob: -9.381608009338379
    8. '   ' → logprob: -11.006608009338379
    9. '	break' → logprob: -11.256608009338379
    10. '				' → logprob: -12.006608009338379

Token 574: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.04227576404809952
    2. '       ' → logprob: -3.5422756671905518
    3. '           ' → logprob: -4.792275905609131
    4. '<|end|>' → logprob: -6.292275905609131
    5. '\n' → logprob: -7.417275905609131
    6. '```' → logprob: -7.917275905609131
    7. '  
' → logprob: -8.292275428771973
    8. ' 
' → logprob: -8.542275428771973
    9. '        
' → logprob: -8.667275428771973
    10. '<|end|>' → logprob: -9.167275428771973

Token 575: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.38903239369392395
    2. '
' → logprob: -1.1390323638916016
    3. '           ' → logprob: -6.389032363891602
    4. '<|end|>' → logprob: -8.889032363891602
    5. '   ' → logprob: -9.514032363891602
    6. '
' → logprob: -9.639032363891602
    7. '        
' → logprob: -10.014032363891602
    8. '```' → logprob: -10.014032363891602
    9. ' 
' → logprob: -10.639032363891602
    10. '    
' → logprob: -11.014032363891602

Token 576: ' if' (ID: 538)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5344653725624084
    2. '       ' → logprob: -0.9094653725624084
    3. '<|end|>' → logprob: -5.034465312957764
    4. '   ' → logprob: -6.659465312957764
    5. ' if' → logprob: -7.284465312957764
    6. ' 
' → logprob: -7.534465312957764
    7. 'if' (adapté à ' if') → logprob: -7.784465312957764
    8. '           ' → logprob: -8.034465789794922
    9. '
' → logprob: -8.159465789794922
    10. '  
' → logprob: -8.409465789794922

Token 577: ' formula' (ID: 20690)
  Prédit: ' formula'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' formula' → logprob: -0.5351298451423645
    2. 'formula' → logprob: -1.0351297855377197
    3. ' found' → logprob: -3.5351297855377197
    4. 'found' → logprob: -3.5351297855377197
    5. 'form' → logprob: -7.285130023956299
    6. '   ' → logprob: -8.53512954711914
    7. ' form' → logprob: -11.53512954711914
    8. ' ' → logprob: -11.91012954711914
    9. ' not' → logprob: -12.03512954711914
    10. '    ' → logprob: -13.03512954711914

Token 578: '_val' (ID: 13694)
  Prédit: '_val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -7.896309739408025e-07
    2. 'val' → logprob: -15.000000953674316
    3. '_' → logprob: -15.875000953674316
    4. 'Val' → logprob: -16.75
    5. '_found' → logprob: -17.0
    6. '_VAL' → logprob: -17.375
    7. ' _' → logprob: -18.25
    8. '=' → logprob: -18.375
    9. '=_' → logprob: -18.75
    10. '_var' → logprob: -19.0

Token 579: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.017814384773373604
    2. ':
' → logprob: -4.2678141593933105
    3. '           ' → logprob: -6.5178141593933105
    4. '               ' → logprob: -6.5178141593933105
    5. '==' → logprob: -8.017814636230469
    6. ' ==' → logprob: -8.767814636230469
    7. '       ' → logprob: -9.142814636230469
    8. '=' → logprob: -11.142814636230469
    9. '):' → logprob: -11.517814636230469
    10. '                       ' → logprob: -11.642814636230469

Token 580: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.021820127964019775
    2. '           ' → logprob: -3.896820068359375
    3. ':
' → logprob: -7.396820068359375
    4. ':' → logprob: -8.396820068359375
    5. '
' → logprob: -8.521820068359375
    6. '       ' → logprob: -10.146820068359375
    7. '```' → logprob: -10.146820068359375
    8. ' found' → logprob: -10.521820068359375
    9. '                   ' → logprob: -10.521820068359375
    10. '<|end|>' → logprob: -10.646820068359375

Token 581: ' found' (ID: 2491)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4220873713493347
    2. '               ' → logprob: -1.1720874309539795
    3. 'found' (adapté à ' found') → logprob: -3.9220874309539795
    4. '       ' → logprob: -4.7970871925354
    5. ' found' → logprob: -5.1720871925354
    6. '   ' → logprob: -7.7970871925354
    7. 'print' → logprob: -8.297087669372559
    8. '```' → logprob: -9.297087669372559
    9. '	found' → logprob: -9.797087669372559
    10. '(found' → logprob: -11.422087669372559

Token 582: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14678096771240234
    2. '=' → logprob: -2.5217809677124023
    3. '               ' → logprob: -3.6467809677124023
    4. '           ' → logprob: -4.146780967712402
    5. '=True' → logprob: -4.896780967712402
    6. '                   ' → logprob: -5.771780967712402
    7. ':' → logprob: -6.271780967712402
    8. '       ' → logprob: -7.146780967712402
    9. '                       ' → logprob: -8.396780967712402
    10. '<|end|>' → logprob: -8.521780967712402

Token 583: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.0031777136027812958
    2. ' True' → logprob: -5.753177642822266
    3. '(True' → logprob: -17.753177642822266
    4. '1' → logprob: -18.503177642822266
    5. 'true' → logprob: -18.753177642822266
    6. '=True' → logprob: -19.253177642822266
    7. '"' → logprob: -19.628177642822266
    8. '   ' → logprob: -20.128177642822266
    9. 'False' → logprob: -20.253177642822266
    10. 'Tr' → logprob: -20.628177642822266

Token 584: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00022153646568767726
    2. '           ' → logprob: -9.375221252441406
    3. '                   ' → logprob: -9.625221252441406
    4. '
' → logprob: -10.750221252441406
    5. '<|end|>' → logprob: -10.750221252441406
    6. '                
' → logprob: -12.500221252441406
    7. '              ' → logprob: -12.625221252441406
    8. '			' → logprob: -12.750221252441406
    9. '                       ' → logprob: -13.000221252441406
    10. '	           ' → logprob: -13.125221252441406

Token 585: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0014103548601269722
    2. '           ' → logprob: -6.626410484313965
    3. '
' → logprob: -10.501410484313965
    4. '                   ' → logprob: -11.001410484313965
    5. '       ' → logprob: -11.376410484313965
    6. '```' → logprob: -12.126410484313965
    7. '              ' → logprob: -12.751410484313965
    8. '			' → logprob: -12.876410484313965
    9. '	           ' → logprob: -12.876410484313965
    10. '[' → logprob: -13.001410484313965

Token 586: ' break' (ID: 2338)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.008025811053812504
    2. 'break' (adapté à ' break') → logprob: -5.633025646209717
    3. ' break' → logprob: -5.758025646209717
    4. 'print' → logprob: -7.633025646209717
    5. ' print' → logprob: -8.008026123046875
    6. '       ' → logprob: -8.133026123046875
    7. '           ' → logprob: -9.258026123046875
    8. '                   ' → logprob: -11.383026123046875
    9. '                
' → logprob: -12.133026123046875
    10. '			' → logprob: -12.133026123046875

Token 587: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.012591236270964146
    2. '   ' → logprob: -5.137591361999512
    3. '<|end|>' → logprob: -6.137591361999512
    4. '    
' → logprob: -6.637591361999512
    5. '\n' → logprob: -6.762591361999512
    6. '       ' → logprob: -6.887591361999512
    7. '  
' → logprob: -8.137591361999512
    8. '        
' → logprob: -8.762591361999512
    9. '```' → logprob: -8.762591361999512
    10. '' → logprob: -9.262591361999512

Token 588: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.19930319488048553
    2. '   ' → logprob: -1.949303150177002
    3. '       ' → logprob: -4.199303150177002
    4. '    
' → logprob: -4.574303150177002
    5. '```' → logprob: -5.199303150177002
    6. '<|end|>' → logprob: -5.574303150177002
    7. '  
' → logprob: -7.199303150177002
    8. '        
' → logprob: -7.449303150177002
    9. '' → logprob: -7.699303150177002
    10. ' 
' → logprob: -7.949303150177002

Token 589: ' print' (ID: 2123)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4800199866294861
    2. '       ' → logprob: -0.9800199866294861
    3. '
' → logprob: -5.980020046234131
    4. 'if' → logprob: -6.230020046234131
    5. '```' → logprob: -7.355020046234131
    6. ' if' → logprob: -7.730020046234131
    7. 'print' (adapté à ' print') → logprob: -8.730019569396973
    8. '<|end|>' → logprob: -9.855019569396973
    9. '    
' → logprob: -10.355019569396973
    10. '        
' → logprob: -10.480019569396973

Token 590: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.13331769406795502
    2. '('' → logprob: -2.133317708969116
    3. '(found' → logprob: -5.758317470550537
    4. '(' → logprob: -5.883317470550537
    5. '(True' → logprob: -7.883317470550537
    6. 'found' → logprob: -11.508317947387695
    7. '(true' → logprob: -11.508317947387695
    8. '(int' → logprob: -12.008317947387695
    9. '("#' → logprob: -12.008317947387695
    10. '()' → logprob: -12.133317947387695

Token 591: 'yes' (ID: 6763)
  Prédit: 'SAT'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'SAT' → logprob: -0.4020351767539978
    2. 's' → logprob: -1.2770352363586426
    3. 'sat' → logprob: -3.7770352363586426
    4. 'YES' → logprob: -4.027035236358643
    5. 'S' → logprob: -5.152035236358643
    6. 'Sat' → logprob: -5.777035236358643
    7. 'True' → logprob: -6.777035236358643
    8. 'Yes' → logprob: -7.277035236358643
    9. 'Satisfied' → logprob: -9.027034759521484
    10. 'true' → logprob: -9.152034759521484

Token 592: '"' (ID: 1)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.01885840855538845
    2. '"' → logprob: -4.018858432769775
    3. '")
' → logprob: -7.268858432769775
    4. ' or' → logprob: -12.518857955932617
    5. 'else' → logprob: -13.518857955932617
    6. ')' → logprob: -13.768857955932617
    7. '")

' → logprob: -13.893857955932617
    8. '");' → logprob: -13.893857955932617
    9. 'if' → logprob: -14.393857955932617
    10. '```' → logprob: -14.768857955932617

Token 593: ' if' (ID: 538)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002714681322686374
    2. '")' → logprob: -9.000271797180176
    3. ' if' → logprob: -9.500271797180176
    4. 'if' → logprob: -10.625271797180176
    5. ',' → logprob: -10.875271797180176
    6. ' )' → logprob: -11.625271797180176
    7. ')")' → logprob: -11.625271797180176
    8. ',)' → logprob: -12.750271797180176
    9. '')' → logprob: -13.250271797180176
    10. ')`' → logprob: -13.375271797180176

Token 594: ' found' (ID: 2491)
  Prédit: ' found'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' found' → logprob: -0.00026169343618676066
    2. 'found' → logprob: -8.250261306762695
    3. '(found' → logprob: -14.875261306762695
    4. '	found' → logprob: -18.250261306762695
    5. '_found' → logprob: -20.250261306762695
    6. ' Found' → logprob: -20.750261306762695
    7. 'Found' → logprob: -21.000261306762695
    8. ' ' → logprob: -22.000261306762695
    9. ' founded' → logprob: -22.750261306762695
    10. ' find' → logprob: -23.000261306762695

Token 595: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.09027707576751709
    2. 'else' → logprob: -2.4652771949768066
    3. ')' → logprob: -7.340277194976807
    4. '```' → logprob: -8.090276718139648
    5. '	else' → logprob: -8.965276718139648
    6. ' ' → logprob: -9.090276718139648
    7. '<|end|>' → logprob: -10.340276718139648
    8. '   ' → logprob: -10.340276718139648
    9. ' ' → logprob: -10.715276718139648
    10. ' )' → logprob: -11.340276718139648

Token 596: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0008118899422697723
    2. ' "' → logprob: -7.12581205368042
    3. ' no' → logprob: -12.500811576843262
    4. '"No' → logprob: -13.125811576843262
    5. '("' → logprob: -14.250811576843262
    6. 'no' → logprob: -15.250811576843262
    7. '   ' → logprob: -15.250811576843262
    8. ''' → logprob: -15.375811576843262
    9. ' ' → logprob: -15.500811576843262
    10. ' ' → logprob: -16.875812530517578

Token 597: 'no' (ID: 1750)
  Prédit: 'no'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'no' → logprob: -0.0009124171338044107
    2. ' no' → logprob: -7.000912189483643
    3. '"' → logprob: -14.1259126663208
    4. '	no' → logprob: -16.875911712646484
    5. 'No' → logprob: -18.375911712646484
    6. 'NO' → logprob: -18.375911712646484
    7. 'nos' → logprob: -18.625911712646484
    8. 'n' → logprob: -18.750911712646484
    9. 'na' → logprob: -19.250911712646484
    10. ' ' → logprob: -19.375911712646484

Token 598: '")

' (ID: 10822)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -0.003385295392945409
    2. ')' → logprob: -6.003385066986084
    3. ')")' → logprob: -7.003385066986084
    4. '")
' → logprob: -15.503385543823242
    5. '}")' → logprob: -16.128385543823242
    6. ')"' → logprob: -16.753385543823242
    7. ')")
' → logprob: -17.878385543823242
    8. '')' → logprob: -18.003385543823242
    9. '!")' → logprob: -18.128385543823242
    10. '");' → logprob: -18.753385543823242

Token 599: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -4.5252596464706585e-05
    2. ' if' → logprob: -10.375044822692871
    3. '```' → logprob: -11.875044822692871
    4. '
' → logprob: -13.250044822692871
    5. '<|end|>' → logprob: -13.250044822692871
    6. 'main' → logprob: -13.250044822692871
    7. '#' → logprob: -13.500044822692871
    8. 'sys' → logprob: -16.250045776367188
    9. '__' → logprob: -16.750045776367188
    10. '#if' → logprob: -17.000045776367188

Token 600: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.20159119367599487
    2. '__' → logprob: -1.7015912532806396
    3. '_' → logprob: -9.076591491699219
    4. ' ' → logprob: -10.826591491699219
    5. '_name' → logprob: -11.201591491699219
    6. '___' → logprob: -11.451591491699219
    7. 'name' → logprob: -12.326591491699219
    8. '/__' → logprob: -12.826591491699219
    9. ' ' → logprob: -13.201591491699219
    10. '﻿' → logprob: -13.576591491699219

Token 601: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.15745240449905396
    2. '==' → logprob: -2.407452344894409
    3. ' ==' → logprob: -3.032452344894409
    4. '.__' → logprob: -5.657452583312988
    5. '__.__' → logprob: -6.782452583312988
    6. '=="' → logprob: -7.032452583312988
    7. '[' → logprob: -7.532452583312988
    8. '.' → logprob: -7.907452583312988
    9. 'name' → logprob: -8.032452583312988
    10. '=='' → logprob: -8.782452583312988

Token 602: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -5.264322317088954e-05
    2. '__.__' → logprob: -10.000052452087402
    3. '==' → logprob: -12.125052452087402
    4. '=="' → logprob: -14.875052452087402
    5. '__["' → logprob: -15.125052452087402
    6. '__('' → logprob: -15.250052452087402
    7. '___' → logprob: -15.250052452087402
    8. '__.' → logprob: -15.375052452087402
    9. '____' → logprob: -16.00005340576172
    10. ' ==' → logprob: -16.37505340576172

Token 603: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.00659979460760951
    2. '==' → logprob: -5.1315999031066895
    3. '=="' → logprob: -8.131599426269531
    4. ' ==' → logprob: -8.381599426269531
    5. '__.__' → logprob: -9.631599426269531
    6. '=='' → logprob: -9.756599426269531
    7. '.__' → logprob: -11.381599426269531
    8. '___' → logprob: -12.381599426269531
    9. '_' → logprob: -13.256599426269531
    10. '"' → logprob: -13.506599426269531

Token 604: ' '__' (ID: 28278)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.038056984543800354
    2. ''' → logprob: -3.2880570888519287
    3. ' "__' → logprob: -11.538057327270508
    4. '__' → logprob: -12.163057327270508
    5. ' '__' → logprob: -15.163057327270508
    6. '"user' → logprob: -16.288057327270508
    7. ''"' → logprob: -16.913057327270508
    8. '"name' → logprob: -17.288057327270508
    9. '"_' → logprob: -18.163057327270508
    10. '("__' → logprob: -18.288057327270508

Token 605: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -6.718606891809031e-05
    2. '__' → logprob: -9.750066757202148
    3. 'name' → logprob: -11.750066757202148
    4. '_main' → logprob: -13.875066757202148
    5. 'm' → logprob: -17.25006675720215
    6. ' main' → logprob: -17.87506675720215
    7. '__':
' → logprob: -19.62506675720215
    8. 'ma' → logprob: -19.75006675720215
    9. '-main' → logprob: -19.75006675720215
    10. '_MAIN' → logprob: -20.00006675720215

Token 606: '__':
' (ID: 39314)
  Prédit: '__':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__':
' → logprob: -0.22566711902618408
    2. '__' → logprob: -1.600667119026184
    3. '':' → logprob: -9.225666999816895
    4. '_' → logprob: -9.725666999816895
    5. '__:' → logprob: -10.100666999816895
    6. '__":
' → logprob: -10.475666999816895
    7. '('__' → logprob: -11.475666999816895
    8. '__.' → logprob: -12.475666999816895
    9. ':' → logprob: -12.725666999816895
    10. ''' → logprob: -13.350666999816895

Token 607: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7110822796821594
    2. 'main' → logprob: -0.9610822796821594
    3. ' main' → logprob: -2.2110822200775146
    4. '	main' → logprob: -4.086082458496094
    5. '_main' → logprob: -11.961082458496094
    6. '   ' → logprob: -12.211082458496094
    7. '(main' → logprob: -12.586082458496094
    8. ' ' → logprob: -12.961082458496094
    9. 'import' → logprob: -14.086082458496094
    10. '    
' → logprob: -14.086082458496094

Token 608: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -1.9361264946837764e-07
    2. ' main' → logprob: -16.25
    3. '	main' → logprob: -22.0
    4. '   ' → logprob: -23.0
    5. '.main' → logprob: -26.375
    6. '_main' → logprob: -27.0
    7. '(main' → logprob: -27.125
    8. 'import' → logprob: -28.625
    9. '__' → logprob: -28.75
    10. 'Main' → logprob: -29.375

Token 609: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 607
Tokens correctement prédits (1ère position, stricte): 230
Tokens correctement prédits (1ère position, avec adaptation): 253
Tokens correctement prédits (top 10): 500
Précision stricte (1ère position): 37.89%
Précision adaptée (1ère position): 41.68%
Précision (top 10): 82.37%
================================================================================
