================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:23:58
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
sys.setrecursionlimit(10**7)

MOD = 100000

def solve(N, M, S):
    # dp[row][sum] = number of ways to form a strictly increasing sequence of length row with sum = sum from [1..M]
    # For each column, we pick a strictly increasing sequence from top to bottom.
    # The conditions imply:
    # - Each column strictly increasing top to bottom
    # - Each element larger than any element in any column to the left → global strictly increasing order by rows and columns
    #
    # The entire card is like N sequences of length N, creating a total strictly increasing N*N elements arranged in N rows and N cols.
    # Actually, condition 5 implies that for each position (r,c), the value is > all values in columns to the left (c'<c)
    # Since columns themselves increase downwards, and elements are strictly larger than left columns, the entire matrix is strictly increasing when read row-wise from left to right, top to bottom.
    #
    # So the whole matrix numbers are arranged as one strictly increasing sequence of length N*N.
    #
    # We want to count the number of strictly increasing sequences of length N*N, with elements in [1..M], sum = S.
    #
    # But condition 4 says: each column values are ascending top to bottom.
    # Condition 5 says: any element is strictly greater than any element to the left columns.
    #
    # Together this means the matrix flattened column-wise is strictly increasing
    # as well as the rows.
    #
    # The conditions imply the matrix is basically a strictly increasing sequence (length N*N) arranged row-wise.
    # After assigning, we check sum = S, count how many sequences satisfy sum=S.
    #
    # So problem reduces to:
    # Count the number of strictly increasing sequences of length N*N choosing numbers from [1..M], sum S.
    #
    #
    # Approach:
    # dp[pos][prev][sum] : number of strictly increasing sequences of length pos, last number prev, and sum = sum
    #
    # But M and S can be large → dp with prev in [1..M], sum in [1..S] is huge.
    #
    # Use combinational approach:
    # Count the number of strictly increasing sequences of length length from numbers 1..M with sum = S.
    #
    # This is equivalent to counting compositions of sum into length distinct strictly increasing numbers from [1..M].
    #
    # We can use DP with optimization for strict increasing sequences sum counts:
    #
    # Define dp[length][sum]: number of strictly increasing sequences of length "length" and sum = "sum" drawn from 1..M.
    # Use combinatorial DP:
    # dp[0][0] = 1
    # For x in [1..M]:
    #   For length from N*N down to 1:
    #     For sum from x to S:
    #       dp[length][sum] += dp[length-1][sum - x]
    #
    # Result dp[N*N][S] modulo MOD.
    #
    # We implement the DP for each input.

def main():
    import sys
    input = sys.stdin.readline

    while True:
        N, M, S = map(int, input().split())
        if N == 0 and M == 0 and S == 0:
            break

        length = N * N
        dp = [0] * (S + 1)
        dp[0] = 1

        for x in range(1, M + 1):
            # Update dp from end to start to avoid reuse in same iteration and ensure strict
            for l in range(length, 0, -1):
                # for sum from S down to x
                # But to save memory we flatten l dimension later
                # Instead, use a 2D dp for length and sum for clarity
                pass

        # Because we need length dimension, we do 2D DP

def solve(N, M, S):
    length = N * N
    MOD = 100000
    # dp[length+1][S+1], dp[i][j] = number of strictly increasing sequences of length i sum j
    dp = [ [0]*(S+1) for _ in range(length+1)]
    dp[0][0] = 1
    for x in range(1, M+1):
        for i in range(length-1, -1, -1):
            for j in range(S - x +1):
                if dp[i][j]:
                    dp[i+1][j+x] = (dp[i+1][j+x] + dp[i][j]) % MOD
    return dp[length][S] % MOD

if __name__ == "__main__":
    import sys
    input = sys.stdin.readline
    while True:
        N,M,S = map(int,input().split())
        if N==0 and M==0 and S==0:
            break
        print(solve(N,M,S))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'sys' (ID: 17324)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.026953943073749542
    2. '\n' → logprob: -3.901953935623169
    3. '<|end|>' → logprob: -6.651954174041748
    4. 'import' → logprob: -7.151954174041748
    5. 'newline' → logprob: -7.151954174041748
    6. '\' → logprob: -7.151954174041748
    7. '```' → logprob: -7.526954174041748
    8. '' → logprob: -7.901954174041748
    9. '<|end|>' → logprob: -7.901954174041748
    10. 'print' → logprob: -8.27695369720459

Token 4: '.set' (ID: 1230)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -2.2127087504486553e-05
    2. ' .' → logprob: -11.875021934509277
    3. '.`' → logprob: -13.125021934509277
    4. '[' → logprob: -13.250021934509277
    5. '.readline' → logprob: -13.250021934509277
    6. '.import' → logprob: -13.875021934509277
    7. '.user' → logprob: -14.000021934509277
    8. '."""' → logprob: -14.125021934509277
    9. '.​' → logprob: -14.250021934509277
    10. '.[' → logprob: -14.625021934509277

Token 5: 'rec' (ID: 9285)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5748613476753235
    2. '_trace' → logprob: -1.5748612880706787
    3. ' _' → logprob: -3.1998612880706787
    4. '_exc' → logprob: -3.3248612880706787
    5. '_version' → logprob: -3.5748612880706787
    6. '_ex' → logprob: -3.5748612880706787
    7. '_encoding' → logprob: -3.6998612880706787
    8. 'trace' → logprob: -4.824861526489258
    9. '_default' → logprob: -5.449861526489258
    10. '_set' → logprob: -5.449861526489258

Token 6: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.00019209683523513377
    2. 'ursive' → logprob: -8.875191688537598
    3. 'urs' → logprob: -11.000191688537598
    4. 'ur' → logprob: -11.750191688537598
    5. 'limit' → logprob: -12.000191688537598
    6. 'urf' → logprob: -12.125191688537598
    7. '_limit' → logprob: -12.625191688537598
    8. 'urse' → logprob: -13.000191688537598
    9. 'ursor' → logprob: -13.000191688537598
    10. 'ursively' → logprob: -13.250191688537598

Token 7: 'limit' (ID: 19698)
  Prédit: '_limit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_limit' → logprob: -0.15307803452014923
    2. 'limit' → logprob: -2.028078079223633
    3. '_depth' → logprob: -4.653078079223633
    4. '_' → logprob: -7.903078079223633
    5. 'depth' → logprob: -9.653078079223633
    6. ' limit' → logprob: -10.028078079223633
    7. '_rate' → logprob: -10.153078079223633
    8. '_error' → logprob: -10.403078079223633
    9. '_lim' → logprob: -10.653078079223633
    10. '_max' → logprob: -10.778078079223633

Token 8: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.0325924449716695e-05
    2. '(
' → logprob: -12.37501049041748
    3. ' (' → logprob: -12.50001049041748
    4. '(

' → logprob: -13.25001049041748
    5. '((' → logprob: -15.75001049041748
    6. '("("' → logprob: -15.87501049041748
    7. '('' → logprob: -16.875009536743164
    8. '(
' → logprob: -17.000009536743164
    9. '(None' → logprob: -17.500009536743164
    10. '()' → logprob: -17.500009536743164

Token 9: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.07892151176929474
    2. '100' → logprob: -2.5789215564727783
    3. '300' → logprob: -11.2039213180542
    4. ' ' → logprob: -11.8289213180542
    5. '500' → logprob: -12.3289213180542
    6. '999' → logprob: -12.5789213180542
    7. '200' → logprob: -14.3289213180542
    8. '150' → logprob: -14.3289213180542
    9. '1' → logprob: -14.7039213180542
    10. '   ' → logprob: -14.9539213180542

Token 10: '**' (ID: 410)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.09284054487943649
    2. '000' → logprob: -2.7178404331207275
    3. '00' → logprob: -3.8428404331207275
    4. '4' → logprob: -7.092840671539307
    5. '6' → logprob: -8.217840194702148
    6. '**' → logprob: -9.967840194702148
    7. '```' → logprob: -10.842840194702148
    8. '5' → logprob: -11.092840194702148
    9. '3' → logprob: -11.592840194702148
    10. '2' → logprob: -12.092840194702148

Token 11: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.0031121151987463236
    2. '9' → logprob: -6.003112316131592
    3. '8' → logprob: -7.503112316131592
    4. '6' → logprob: -9.378111839294434
    5. ' ' → logprob: -16.25311279296875
    6. '```' → logprob: -16.37811279296875
    7. ')' → logprob: -18.50311279296875
    8. '(' → logprob: -19.62811279296875
    9. '``' → logprob: -20.00311279296875
    10. '}' → logprob: -20.75311279296875

Token 12: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.292907877039397e-06
    2. ' )' → logprob: -13.12500286102295
    3. '))' → logprob: -13.75000286102295
    4. ')
' → logprob: -16.750003814697266
    5. ')))' → logprob: -18.000003814697266
    6. ' ' → logprob: -18.125003814697266
    7. '）' → logprob: -18.625003814697266
    8. '),' → logprob: -18.750003814697266
    9. ')`' → logprob: -18.750003814697266
    10. '')' → logprob: -19.000003814697266

Token 13: 'MOD' (ID: 52135)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0005326599348336458
    2. '```' → logprob: -8.750533103942871
    3. '
' → logprob: -8.875533103942871
    4. '\' → logprob: -9.125533103942871
    5. 'n' → logprob: -9.875533103942871
    6. '

' → logprob: -11.500533103942871
    7. '
' → logprob: -11.500533103942871
    8. ' def' → logprob: -11.625533103942871
    9. ')' → logprob: -11.750533103942871
    10. '#' → logprob: -11.875533103942871

Token 14: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3871683180332184
    2. '=' → logprob: -1.137168288230896
    3. ' ' → logprob: -9.012167930603027
    4. ')' → logprob: -9.387167930603027
    5. '_' → logprob: -10.262167930603027
    6. ' =)' → logprob: -11.137167930603027
    7. ' =
' → logprob: -11.512167930603027
    8. '<|end|>' → logprob: -12.012167930603027
    9. '.' → logprob: -12.137167930603027
    10. ' )' → logprob: -12.262167930603027

Token 15: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.12719444930553436
    2. ' ' → logprob: -2.127194404602051
    3. '100' → logprob: -8.25219440460205
    4. '1' → logprob: -12.25219440460205
    5. 'int' → logprob: -14.50219440460205
    6. '(' → logprob: -16.252195358276367
    7. '2' → logprob: -16.252195358276367
    8. ' ' → logprob: -16.377195358276367
    9. '998' → logprob: -16.627195358276367
    10. ' int' → logprob: -17.127195358276367

Token 16: '100' (ID: 1353)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0003455944824963808
    2. '100' → logprob: -8.000345230102539
    3. ' ' → logprob: -11.625345230102539
    4. '1' → logprob: -14.250345230102539
    5. '(' → logprob: -15.375345230102539
    6. '998' → logprob: -15.750345230102539
    7. 'int' → logprob: -16.00034523010254
    8. '```' → logprob: -16.75034523010254
    9. '`' → logprob: -18.12534523010254
    10. '[int' → logprob: -19.25034523010254

Token 17: '000' (ID: 1302)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.0037110040429979563
    2. '000' → logprob: -6.003711223602295
    3. '09' → logprob: -6.753711223602295
    4. '```' → logprob: -9.878710746765137
    5. '**' → logprob: -12.128710746765137
    6. '+' → logprob: -12.253710746765137
    7. '``' → logprob: -13.003710746765137
    8. '009' → logprob: -13.253710746765137
    9. '7' → logprob: -14.253710746765137
    10. '07' → logprob: -15.003710746765137

Token 18: '

' (ID: 279)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.47918808460235596
    2. '+' → logprob: -1.104188084602356
    3. '000' → logprob: -3.4791879653930664
    4. '7' → logprob: -4.229187965393066
    5. '9' → logprob: -6.729187965393066
    6. '00' → logprob: -6.854187965393066
    7. ' +' → logprob: -7.479187965393066
    8. ')' → logprob: -8.104187965393066
    9. '07' → logprob: -8.479187965393066
    10. '\n' → logprob: -8.604187965393066

Token 19: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5991002321243286
    2. '```' → logprob: -1.2241002321243286
    3. ':' → logprob: -2.599100112915039
    4. '
' → logprob: -3.599100112915039
    5. '\n' → logprob: -3.599100112915039
    6. '\' → logprob: -4.349100112915039
    7. '

' → logprob: -5.599100112915039
    8. ' def' → logprob: -6.099100112915039
    9. '``' → logprob: -6.349100112915039
    10. '
' → logprob: -6.474100112915039

Token 20: ' solve' (ID: 17722)
  Prédit: ' dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dfs' → logprob: -0.2782630920410156
    2. ' factorial' → logprob: -2.0282630920410156
    3. ' ' → logprob: -3.6532630920410156
    4. ' solve' → logprob: -3.7782630920410156
    5. ' main' → logprob: -4.278263092041016
    6. ' f' → logprob: -4.278263092041016
    7. ' count' → logprob: -4.653263092041016
    8. ' dp' → logprob: -4.778263092041016
    9. ' fibonacci' → logprob: -5.278263092041016
    10. ' factor' → logprob: -5.903263092041016

Token 21: '(N' (ID: 10564)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.025022899731993675
    2. '_' → logprob: -3.7750229835510254
    3. '(_' → logprob: -7.150022983551025
    4. '```' → logprob: -8.400022506713867
    5. '():' → logprob: -8.775022506713867
    6. '(:' → logprob: -9.775022506713867
    7. '_:' → logprob: -10.275022506713867
    8. '(_)' → logprob: -10.275022506713867
    9. '(_:' → logprob: -10.275022506713867
    10. '_(' → logprob: -10.275022506713867

Token 22: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1272936463356018
    2. '):' → logprob: -2.127293586730957
    3. ')' → logprob: -8.252293586730957
    4. ':' → logprob: -9.627293586730957
    5. ' ,' → logprob: -11.502293586730957
    6. ' ):' → logprob: -11.502293586730957
    7. ',n' → logprob: -11.752293586730957
    8. ',N' → logprob: -13.502293586730957
    9. ',input' → logprob: -14.127293586730957
    10. ',k' → logprob: -14.377293586730957

Token 23: ' M' (ID: 391)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.5548012852668762
    2. ' K' → logprob: -1.8048012256622314
    3. 'M' → logprob: -2.0548012256622314
    4. 'A' → logprob: -3.1798012256622314
    5. ' M' → logprob: -3.3048012256622314
    6. ' A' → logprob: -4.4298014640808105
    7. 'a' → logprob: -5.3048014640808105
    8. 'X' → logprob: -5.5548014640808105
    9. 'L' → logprob: -5.8048014640808105
    10. 'R' → logprob: -5.8048014640808105

Token 24: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0046129957772791386
    2. ',' → logprob: -5.504612922668457
    3. ')' → logprob: -7.629612922668457
    4. ':' → logprob: -10.629612922668457
    5. ' ):' → logprob: -10.754612922668457
    6. ')):' → logprob: -14.879612922668457
    7. '),' → logprob: -15.129612922668457
    8. ')：' → logprob: -15.379612922668457
    9. '):
' → logprob: -15.504612922668457
    10. ' :' → logprob: -15.504612922668457

Token 25: ' S' (ID: 336)
  Prédit: ' K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' K' → logprob: -0.7695474624633789
    2. 'K' → logprob: -0.8945474624633789
    3. ' A' → logprob: -3.644547462463379
    4. 'A' → logprob: -3.894547462463379
    5. ' L' → logprob: -4.769547462463379
    6. 'L' → logprob: -5.019547462463379
    7. ' edges' → logprob: -5.144547462463379
    8. 'X' → logprob: -5.332047462463379
    9. ' X' → logprob: -5.457047462463379
    10. ' Q' → logprob: -5.832047462463379

Token 26: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0012524925405159593
    2. ')' → logprob: -7.2512526512146
    3. ',' → logprob: -7.6262526512146
    4. '):
' → logprob: -10.876252174377441
    5. ' ):' → logprob: -11.251252174377441
    6. ':' → logprob: -11.876252174377441
    7. '):
' → logprob: -12.626252174377441
    8. ')):' → logprob: -13.251252174377441
    9. ')：' → logprob: -13.376252174377441
    10. '[' → logprob: -13.376252174377441

Token 27: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12379790097475052
    2. ':' → logprob: -2.24879789352417
    3. '    ' → logprob: -4.62379789352417
    4. ' :' → logprob: -8.248798370361328
    5. '):' → logprob: -8.623798370361328
    6. ' ' → logprob: -8.998798370361328
    7. ',' → logprob: -9.123798370361328
    8. '    
' → logprob: -9.248798370361328
    9. '  ' → logprob: -10.373798370361328
    10. '```' → logprob: -10.373798370361328

Token 28: ' #' (ID: 1069)
  Prédit: ' dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.34019652009010315
    2. 'dp' → logprob: -1.3401964902877808
    3. ' DP' → logprob: -5.96519660949707
    4. '   ' → logprob: -5.96519660949707
    5. ' count' → logprob: -6.09019660949707
    6. ' result' → logprob: -6.21519660949707
    7. ' visited' → logprob: -6.21519660949707
    8. ' from' → logprob: -6.59019660949707
    9. ' ans' → logprob: -6.71519660949707
    10. ' counts' → logprob: -7.09019660949707

Token 29: ' dp' (ID: 21546)
  Prédit: ' dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.07615163177251816
    2. 'dp' → logprob: -3.2011516094207764
    3. ' d' → logprob: -5.3261518478393555
    4. '   ' → logprob: -5.8261518478393555
    5. ' cnt' → logprob: -5.9511518478393555
    6. ' visited' → logprob: -6.3261518478393555
    7. ' count' → logprob: -6.5761518478393555
    8. ' from' → logprob: -6.7011518478393555
    9. ' ans' → logprob: -6.7011518478393555
    10. ' freq' → logprob: -6.8261518478393555

Token 30: '[row' (ID: 35899)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.00046022076276130974
    2. '[' → logprob: -8.500460624694824
    3. ' ' → logprob: -8.875460624694824
    4. '=' → logprob: -9.375460624694824
    5. ' =[' → logprob: -11.750460624694824
    6. '_' → logprob: -12.125460624694824
    7. ',' → logprob: -12.750460624694824
    8. '   ' → logprob: -12.875460624694824
    9. '```' → logprob: -13.250460624694824
    10. '=[' → logprob: -13.625460624694824

Token 31: '][' (ID: 2696)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5249391198158264
    2. '][' → logprob: -0.8999391198158264
    3. ' ][' → logprob: -7.149939060211182
    4. ']=' → logprob: -8.27493953704834
    5. ' =' → logprob: -8.77493953704834
    6. '[row' → logprob: -9.02493953704834
    7. ' ]' → logprob: -9.14993953704834
    8. ')' → logprob: -9.77493953704834
    9. '][]' → logprob: -9.89993953704834
    10. '])' → logprob: -10.14993953704834

Token 32: 'sum' (ID: 12298)
  Prédit: 'col'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'col' → logprob: -0.13496911525726318
    2. 'pos' → logprob: -3.5099692344665527
    3. 'column' → logprob: -3.7599692344665527
    4. 'used' → logprob: -4.509969234466553
    5. 'length' → logprob: -4.759969234466553
    6. 'position' → logprob: -5.259969234466553
    7. 'value' → logprob: -5.384969234466553
    8. 'color' → logprob: -5.509969234466553
    9. 'cost' → logprob: -5.509969234466553
    10. 'state' → logprob: -5.884969234466553

Token 33: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.09571387618780136
    2. '][' → logprob: -3.0957138538360596
    3. '_]' → logprob: -3.7207138538360596
    4. '_' → logprob: -4.845714092254639
    5. ' ]' → logprob: -5.470714092254639
    6. '%' → logprob: -5.720714092254639
    7. '_sum' → logprob: -6.470714092254639
    8. ']=' → logprob: -6.595714092254639
    9. ' ][' → logprob: -7.595714092254639
    10. '_mod' → logprob: -7.595714092254639

Token 34: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0008899023523554206
    2. '=' → logprob: -7.375889778137207
    3. ' ' → logprob: -8.375889778137207
    4. ']' → logprob: -11.750889778137207
    5. ' =[' → logprob: -11.875889778137207
    6. '[' → logprob: -12.250889778137207
    7. '   ' → logprob: -13.125889778137207
    8. '=[]' → logprob: -13.125889778137207
    9. '    ' → logprob: -13.500889778137207
    10. ')' → logprob: -13.625889778137207

Token 35: ' number' (ID: 2086)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.5914167165756226
    2. '0' → logprob: -1.7164167165756226
    3. ' ' → logprob: -1.7164167165756226
    4. '[' → logprob: -2.716416835784912
    5. ' set' → logprob: -4.716416835784912
    6. 'set' → logprob: -5.966416835784912
    7. ' number' → logprob: -6.966416835784912
    8. ' {' → logprob: -6.966416835784912
    9. ' max' → logprob: -7.216416835784912
    10. ' [[' → logprob: -7.216416835784912

Token 36: ' of' (ID: 328)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.1975027620792389
    2. '[]' → logprob: -3.322502851486206
    3. ' of' → logprob: -3.447502851486206
    4. ']' → logprob: -3.697502851486206
    5. '<|end|>' → logprob: -4.072502613067627
    6. ' ' → logprob: -4.197502613067627
    7. 'of' → logprob: -4.822502613067627
    8. '=' → logprob: -4.947502613067627
    9. '[
' → logprob: -5.072502613067627
    10. '   ' → logprob: -5.072502613067627

Token 37: ' ways' (ID: 6984)
  Prédit: ' ways'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ways' → logprob: -0.026125648990273476
    2. ' sequences' → logprob: -4.276125431060791
    3. 'ways' → logprob: -4.526125431060791
    4. ' arrays' → logprob: -8.15112590789795
    5. ' paths' → logprob: -8.52612590789795
    6. ' ' → logprob: -9.15112590789795
    7. ' valid' → logprob: -9.52612590789795
    8. ' possible' → logprob: -10.15112590789795
    9. '```' → logprob: -10.27612590789795
    10. 'Ways' → logprob: -10.40112590789795

Token 38: ' to' (ID: 316)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 39: ' form' (ID: 1625)
  Prédit: ' reach'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' reach' → logprob: -1.1739434003829956
    2. ' form' → logprob: -1.5489434003829956
    3. 'choose' → logprob: -1.7989434003829956
    4. ' choose' → logprob: -2.048943519592285
    5. 'reach' → logprob: -3.548943519592285
    6. ' write' → logprob: -3.548943519592285
    7. ' build' → logprob: -3.798943519592285
    8. 'form' → logprob: -3.923943519592285
    9. 'write' → logprob: -4.298943519592285
    10. ' achieve' → logprob: -4.673943519592285

Token 40: ' a' (ID: 261)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3834518492221832
    2. ' row' → logprob: -2.1334519386291504
    3. ' the' → logprob: -2.6334519386291504
    4. '[row' → logprob: -3.7584519386291504
    5. ' (' → logprob: -4.13345193862915
    6. ' a' → logprob: -4.13345193862915
    7. ' sequences' → logprob: -4.63345193862915
    8. ' dp' → logprob: -4.63345193862915
    9. ' rows' → logprob: -4.88345193862915
    10. '(row' → logprob: -5.13345193862915

Token 41: ' strictly' (ID: 38971)
  Prédit: ' row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' row' → logprob: -0.4817027747631073
    2. ' sequence' → logprob: -1.7317028045654297
    3. ' sum' → logprob: -2.8567028045654297
    4. 'row' → logprob: -3.1067028045654297
    5. ' subse' → logprob: -3.2317028045654297
    6. 'sequence' → logprob: -3.9817028045654297
    7. 'sum' → logprob: -4.98170280456543
    8. ' valid' → logprob: -4.98170280456543
    9. ' total' → logprob: -5.10670280456543
    10. ' ' → logprob: -5.60670280456543

Token 42: ' increasing' (ID: 11293)
  Prédit: ' increasing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' increasing' → logprob: -0.20878462493419647
    2. 'in' → logprob: -2.208784580230713
    3. ' decreasing' → logprob: -3.333784580230713
    4. 'de' → logprob: -3.458784580230713
    5. ' strictly' → logprob: -5.083784580230713
    6. '   ' → logprob: -6.708784580230713
    7. ' smaller' → logprob: -6.958784580230713
    8. ' ' → logprob: -7.583784580230713
    9. 'inc' → logprob: -8.208785057067871
    10. 'strict' → logprob: -8.208785057067871

Token 43: ' sequence' (ID: 16281)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8343742489814758
    2. ' sequence' → logprob: -0.8343742489814758
    3. ' _' → logprob: -2.959374189376831
    4. ' ' → logprob: -3.709374189376831
    5. 'sequence' → logprob: -3.959374189376831
    6. '_sequence' → logprob: -4.33437442779541
    7. ' subse' → logprob: -5.08437442779541
    8. ' sequences' → logprob: -5.58437442779541
    9. '_sequences' → logprob: -5.83437442779541
    10. ' subset' → logprob: -6.08437442779541

Token 44: ' of' (ID: 328)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6474865674972534
    2. ' ' → logprob: -2.022486686706543
    3. ' with' → logprob: -2.272486686706543
    4. '   ' → logprob: -2.647486686706543
    5. ' =' → logprob: -3.397486686706543
    6. '<|end|>' → logprob: -3.397486686706543
    7. '[row' → logprob: -3.647486686706543
    8. '[
' → logprob: -4.522486686706543
    9. '```' → logprob: -4.772486686706543
    10. ',' → logprob: -4.772486686706543

Token 45: ' length' (ID: 5517)
  Prédit: ' length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' length' → logprob: -0.7274715304374695
    2. 'length' → logprob: -0.7274715304374695
    3. ' rows' → logprob: -5.352471351623535
    4. ' lengths' → logprob: -5.352471351623535
    5. ' numbers' → logprob: -5.477471351623535
    6. ' N' → logprob: -5.477471351623535
    7. ' M' → logprob: -5.477471351623535
    8. 'N' → logprob: -6.227471351623535
    9. ' row' → logprob: -6.352471351623535
    10. 'row' → logprob: -6.352471351623535

Token 46: ' row' (ID: 5225)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6828263401985168
    2. '[row' → logprob: -1.182826280593872
    3. 'row' → logprob: -3.057826280593872
    4. '(row' → logprob: -3.182826280593872
    5. ' row' → logprob: -3.307826280593872
    6. '1' → logprob: -3.557826280593872
    7. ' N' → logprob: -4.557826519012451
    8. '```' → logprob: -5.307826519012451
    9. '2' → logprob: -5.682826519012451
    10. ' (' → logprob: -5.807826519012451

Token 47: ' with' (ID: 483)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8760278224945068
    2. ',' → logprob: -1.6260278224945068
    3. ']' → logprob: -2.251027822494507
    4. '[' → logprob: -2.376027822494507
    5. '=' → logprob: -3.376027822494507
    6. ')' → logprob: -3.376027822494507
    7. ' ' → logprob: -4.251028060913086
    8. '   ' → logprob: -4.251028060913086
    9. '][' → logprob: -4.376028060913086
    10. ' with' → logprob: -4.376028060913086

Token 48: ' sum' (ID: 4215)
  Prédit: ' sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.05965210869908333
    2. 'sum' → logprob: -3.184652090072632
    3. ' a' → logprob: -4.934652328491211
    4. ' last' → logprob: -5.434652328491211
    5. ' total' → logprob: -5.809652328491211
    6. ' the' → logprob: -7.684652328491211
    7. ' current' → logprob: -8.184652328491211
    8. 'last' → logprob: -8.434652328491211
    9. 'a' → logprob: -8.684652328491211
    10. 'total' → logprob: -8.684652328491211

Token 49: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07216207683086395
    2. ' ' → logprob: -2.94716215133667
    3. '=' → logprob: -4.82216215133667
    4. '```' → logprob: -6.07216215133667
    5. '_' → logprob: -6.57216215133667
    6. ' of' → logprob: -7.32216215133667
    7. 's' → logprob: -7.32216215133667
    8. '  ' → logprob: -7.44716215133667
    9. ' _' → logprob: -7.44716215133667
    10. '[' → logprob: -7.82216215133667

Token 50: ' sum' (ID: 4215)
  Prédit: ' sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.2555466294288635
    2. 'sum' → logprob: -1.5055465698242188
    3. 's' → logprob: -6.380546569824219
    4. ' s' → logprob: -7.255546569824219
    5. ' ' → logprob: -7.880546569824219
    6. '```' → logprob: -8.005546569824219
    7. ' S' → logprob: -8.630546569824219
    8. 'S' → logprob: -9.380546569824219
    9. ' `' → logprob: -10.380546569824219
    10. '(sum' → logprob: -10.630546569824219

Token 51: ' from' (ID: 591)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6663650870323181
    2. ']' → logprob: -1.291365146636963
    3. ' ' → logprob: -2.291365146636963
    4. '[' → logprob: -3.541365146636963
    5. ' ]' → logprob: -3.791365146636963
    6. '   ' → logprob: -4.541365146636963
    7. ',' → logprob: -4.541365146636963
    8. '=' → logprob: -4.666365146636963
    9. '  ' → logprob: -5.041365146636963
    10. ')' → logprob: -5.166365146636963

Token 52: ' [' (ID: 723)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4229775667190552
    2. '0' → logprob: -1.5479775667190552
    3. '1' → logprob: -3.2979774475097656
    4. ' previous' → logprob: -3.6729774475097656
    5. ' the' → logprob: -4.172977447509766
    6. ' range' → logprob: -4.922977447509766
    7. 'previous' → logprob: -5.047977447509766
    8. '```' → logprob: -5.172977447509766
    9. ' sys' → logprob: -5.422977447509766
    10. ' row' → logprob: -5.547977447509766

Token 53: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.4121946692466736
    2. '1' → logprob: -1.4121947288513184
    3. 'S' → logprob: -3.1621947288513184
    4. ' ' → logprob: -4.662194728851318
    5. 'N' → logprob: -4.787194728851318
    6. 'M' → logprob: -4.787194728851318
    7. ']' → logprob: -5.162194728851318
    8. 'range' → logprob: -5.412194728851318
    9. 'prev' → logprob: -6.662194728851318
    10. 'i' → logprob: -6.787194728851318

Token 54: '..' (ID: 485)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.6124293804168701
    2. 'to' → logprob: -0.9874293804168701
    3. ',' → logprob: -2.61242938041687
    4. '][' → logprob: -5.237429618835449
    5. ' ,' → logprob: -6.112429618835449
    6. ']' → logprob: -6.987429618835449
    7. 'N' → logprob: -6.987429618835449
    8. ' ' → logprob: -7.237429618835449
    9. '1' → logprob: -7.862429618835449
    10. 'M' → logprob: -8.36242961883545

Token 55: 'M' (ID: 44)
  Prédit: 'M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.25665706396102905
    2. 'N' → logprob: -1.7566571235656738
    3. ' M' → logprob: -3.631657123565674
    4. '1' → logprob: -4.381657123565674
    5. 'S' → logprob: -5.006657123565674
    6. ' N' → logprob: -6.006657123565674
    7. 'i' → logprob: -6.381657123565674
    8. ' ' → logprob: -6.756657123565674
    9. '100' → logprob: -7.381657123565674
    10. ']' → logprob: -7.631657123565674

Token 56: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -9.078839502763003e-05
    2. '']' → logprob: -10.875090599060059
    3. ' ]' → logprob: -11.125090599060059
    4. '   ' → logprob: -11.125090599060059
    5. '`]' → logprob: -11.750090599060059
    6. ')' → logprob: -11.875090599060059
    7. '][' → logprob: -12.000090599060059
    8. ',' → logprob: -12.500090599060059
    9. 'def' → logprob: -12.750090599060059
    10. '"]' → logprob: -12.875090599060059

Token 57: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014820393174886703
    2. '```' → logprob: -4.639820575714111
    3. '\n' → logprob: -7.014820575714111
    4. '\' → logprob: -7.264820575714111
    5. '\t' → logprob: -7.389820575714111
    6. '[' → logprob: -7.764820575714111
    7. ' ' → logprob: -8.014820098876953
    8. ':' → logprob: -8.139820098876953
    9. '
' → logprob: -8.139820098876953
    10. '    
' → logprob: -8.264820098876953

Token 58: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.40145835280418396
    2. 'dp' → logprob: -1.7764583826065063
    3. ' dp' → logprob: -2.776458263397217
    4. '\' → logprob: -3.026458263397217
    5. '```' → logprob: -4.151458263397217
    6. '
' → logprob: -5.026458263397217
    7. ' =' → logprob: -5.401458263397217
    8. '\n' → logprob: -5.651458263397217
    9. ' 
' → logprob: -5.776458263397217
    10. '	dp' → logprob: -5.901458263397217

Token 59: ' For' (ID: 2214)
  Prédit: ' dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.2358909398317337
    2. 'dp' → logprob: -1.6108909845352173
    3. 'd' → logprob: -5.360890865325928
    4. ' ' → logprob: -6.235890865325928
    5. '   ' → logprob: -6.610890865325928
    6. '	dp' → logprob: -7.360890865325928
    7. ' 
' → logprob: -7.860890865325928
    8. ' \' → logprob: -8.235891342163086
    9. ' d' → logprob: -8.485891342163086
    10. ' ' → logprob: -8.610891342163086

Token 60: ' each' (ID: 2454)
  Prédit: ' row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' row' → logprob: -0.12961414456367493
    2. ' ' → logprob: -3.3796141147613525
    3. ' i' → logprob: -3.3796141147613525
    4. 'row' → logprob: -3.3796141147613525
    5. ' each' → logprob: -5.254614353179932
    6. ' r' → logprob: -5.754614353179932
    7. ' the' → logprob: -5.879614353179932
    8. ' dp' → logprob: -6.754614353179932
    9. ' a' → logprob: -6.879614353179932
    10. ' _' → logprob: -7.004614353179932

Token 61: ' column' (ID: 6000)
  Prédit: ' row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' row' → logprob: -0.14061814546585083
    2. ' i' → logprob: -2.640618085861206
    3. ' ' → logprob: -3.265618085861206
    4. 'row' → logprob: -5.390618324279785
    5. ' _' → logprob: -5.390618324279785
    6. ' in' → logprob: -5.515618324279785
    7. ' r' → logprob: -7.015618324279785
    8. ' number' → logprob: -7.140618324279785
    9. ' value' → logprob: -7.265618324279785
    10. ' s' → logprob: -7.265618324279785

Token 62: ',' (ID: 11)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.1707038879394531
    2. '   ' → logprob: -1.1707038879394531
    3. ':' → logprob: -1.5457038879394531
    4. ' ' → logprob: -3.545703887939453
    5. '```' → logprob: -3.670703887939453
    6. 'def' → logprob: -3.795703887939453
    7. '
' → logprob: -3.920703887939453
    8. ',' → logprob: -4.295703887939453
    9. ' =' → logprob: -4.420703887939453
    10. '\' → logprob: -5.295703887939453

Token 63: ' we' (ID: 581)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4649012088775635
    2. ' we' → logprob: -1.5899012088775635
    3. ' range' → logprob: -3.4649012088775635
    4. 'for' → logprob: -3.8399012088775635
    5. ' ' → logprob: -3.9649012088775635
    6. '    ' → logprob: -4.089900970458984
    7. ' pass' → logprob: -4.214900970458984
    8. 'we' → logprob: -5.089900970458984
    9. ' import' → logprob: -5.089900970458984
    10. ' you' → logprob: -5.214900970458984

Token 64: ' pick' (ID: 5230)
  Prédit: ' can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.5726353526115417
    2. ' will' → logprob: -1.5726354122161865
    3. ' have' → logprob: -2.5726354122161865
    4. ''ll' → logprob: -3.5726354122161865
    5. ' want' → logprob: -4.072635173797607
    6. ' need' → logprob: -4.572635173797607
    7. '<|end|>' → logprob: -4.572635173797607
    8. '<|end|>' → logprob: -4.697635173797607
    9. ' do' → logprob: -4.822635173797607
    10. ' must' → logprob: -4.947635173797607

Token 65: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.25516247749328613
    2. 'a' → logprob: -2.005162477493286
    3. ' the' → logprob: -3.130162477493286
    4. ' an' → logprob: -4.005162239074707
    5. ' from' → logprob: -5.255162239074707
    6. 'the' → logprob: -5.380162239074707
    7. ' numbers' → logprob: -5.630162239074707
    8. '<|end|>' → logprob: -5.630162239074707
    9. ' next' → logprob: -5.755162239074707
    10. 'an' → logprob: -6.005162239074707

Token 66: ' strictly' (ID: 38971)
  Prédit: ' number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' number' → logprob: -0.27678990364074707
    2. 'n' → logprob: -2.401789903640747
    3. ' value' → logprob: -3.026789903640747
    4. 'number' → logprob: -3.026789903640747
    5. ' smaller' → logprob: -4.276789665222168
    6. ' new' → logprob: -4.526789665222168
    7. 'value' → logprob: -4.901789665222168
    8. ' token' → logprob: -4.901789665222168
    9. ' valid' → logprob: -5.901789665222168
    10. 'token' → logprob: -6.526789665222168

Token 67: ' increasing' (ID: 11293)
  Prédit: ' increasing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' increasing' → logprob: -0.07984843850135803
    2. 'in' → logprob: -2.579848527908325
    3. ' less' → logprob: -8.204848289489746
    4. ' smaller' → logprob: -9.204848289489746
    5. ' greater' → logprob: -9.204848289489746
    6. 'greater' → logprob: -9.454848289489746
    7. 'Increasing' → logprob: -9.579848289489746
    8. '   ' → logprob: -9.704848289489746
    9. 'creasing' → logprob: -10.329848289489746
    10. 'increase' → logprob: -10.329848289489746

Token 68: ' sequence' (ID: 16281)
  Prédit: ' number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' number' → logprob: -0.875486433506012
    2. ' sequence' → logprob: -1.0004863739013672
    3. ' element' → logprob: -2.875486373901367
    4. 'sequence' → logprob: -2.875486373901367
    5. ' value' → logprob: -3.000486373901367
    6. 'number' → logprob: -3.625486373901367
    7. 'value' → logprob: -5.125486373901367
    8. ')' → logprob: -5.500486373901367
    9. 'element' → logprob: -6.000486373901367
    10. 'def' → logprob: -6.125486373901367

Token 69: ' from' (ID: 591)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3566924035549164
    2. '   ' → logprob: -1.7316924333572388
    3. ':' → logprob: -3.231692314147949
    4. '<|end|>' → logprob: -3.231692314147949
    5. ' ' → logprob: -4.731692314147949
    6. 'def' → logprob: -4.981692314147949
    7. '```' → logprob: -5.606692314147949
    8. '<|end|>' → logprob: -5.606692314147949
    9. 'dp' → logprob: -6.231692314147949
    10. '' → logprob: -6.231692314147949

Token 70: ' top' (ID: 2344)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2941083312034607
    2. ' ' → logprob: -2.2941083908081055
    3. '[' → logprob: -2.5441083908081055
    4. ' range' → logprob: -3.2941083908081055
    5. 'range' → logprob: -4.0441083908081055
    6. ' [' → logprob: -4.6691083908081055
    7. ' the' → logprob: -5.0441083908081055
    8. 'the' → logprob: -6.4191083908081055
    9. ' previous' → logprob: -6.9191083908081055
    10. '```' → logprob: -7.9191083908081055

Token 71: ' to' (ID: 316)
  Prédit: '-level'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-level' → logprob: -0.21012867987155914
    2. ',' → logprob: -3.5851287841796875
    3. 'down' → logprob: -3.5851287841796875
    4. '[' → logprob: -3.9601287841796875
    5. '   ' → logprob: -4.3351287841796875
    6. '-' → logprob: -4.7101287841796875
    7. ':' → logprob: -4.7101287841796875
    8. '-down' → logprob: -4.7101287841796875
    9. ')' → logprob: -4.8351287841796875
    10. '<|end|>' → logprob: -5.0851287841796875

Token 72: ' bottom' (ID: 8725)
  Prédit: 'bottom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bottom' → logprob: -0.0028290078043937683
    2. ' bottom' → logprob: -6.502829074859619
    3. 'down' → logprob: -6.627829074859619
    4. ' down' → logprob: -13.752828598022461
    5. 'row' → logprob: -14.002828598022461
    6. '_bottom' → logprob: -15.002828598022461
    7. '```' → logprob: -15.502828598022461
    8. 'bot' → logprob: -16.12782859802246
    9. '<|end|>' → logprob: -16.12782859802246
    10. ' ' → logprob: -16.50282859802246

Token 73: '.
' (ID: 558)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.49125397205352783
    2. ':' → logprob: -1.3662539720535278
    3. '   ' → logprob: -2.9912538528442383
    4. '```' → logprob: -3.9912538528442383
    5. ' ' → logprob: -4.241253852844238
    6. '[' → logprob: -4.491253852844238
    7. ' 
' → logprob: -4.616253852844238
    8. '\n' → logprob: -4.991253852844238
    9. ':
' → logprob: -5.741253852844238
    10. '' → logprob: -5.741253852844238

Token 74: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.028487490490078926
    2. '```' → logprob: -4.403487682342529
    3. 'dp' → logprob: -4.903487682342529
    4. '
' → logprob: -6.028487682342529
    5. ':' → logprob: -6.153487682342529
    6. 'def' → logprob: -6.903487682342529
    7. ' ' → logprob: -7.653487682342529
    8. ' dp' → logprob: -7.778487682342529
    9. '[' → logprob: -8.153487205505371
    10. '\t' → logprob: -8.653487205505371

Token 75: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.32441994547843933
    2. '
' → logprob: -1.4494199752807617
    3. ' 
' → logprob: -4.574419975280762
    4. ' dp' → logprob: -4.699419975280762
    5. 'dp' → logprob: -5.199419975280762
    6. ' ' → logprob: -5.574419975280762
    7. '\' → logprob: -5.574419975280762
    8. '    
' → logprob: -6.074419975280762
    9. '\n' → logprob: -6.574419975280762
    10. '' → logprob: -6.949419975280762

Token 76: ' The' (ID: 623)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10783190280199051
    2. ' dp' → logprob: -2.9828319549560547
    3. 'dp' → logprob: -3.2328319549560547
    4. '```' → logprob: -4.857831954956055
    5. '
' → logprob: -6.607831954956055
    6. 'def' → logprob: -7.357831954956055
    7. ':' → logprob: -7.857831954956055
    8. ' ' → logprob: -7.982831954956055
    9. ' =' → logprob: -8.107831954956055
    10. '	dp' → logprob: -8.607831954956055

Token 77: ' conditions' (ID: 6409)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.694450318813324
    2. ' code' → logprob: -2.0694503784179688
    3. ' for' → logprob: -2.1944503784179688
    4. ' dp' → logprob: -2.5694503784179688
    5. ' next' → logprob: -3.1944503784179688
    6. ' def' → logprob: -3.8194503784179688
    7. ' rest' → logprob: -3.9444503784179688
    8. '    ' → logprob: -4.194450378417969
    9. ' current' → logprob: -4.319450378417969
    10. ' import' → logprob: -4.444450378417969

Token 78: ' imply' (ID: 68590)
  Prédit: ' are'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' are' → logprob: -1.1402838230133057
    2. ' for' → logprob: -1.5152838230133057
    3. '<|end|>' → logprob: -1.7652838230133057
    4. ':' → logprob: -2.2652838230133057
    5. ' that' → logprob: -3.0152838230133057
    6. ' ' → logprob: -3.2652838230133057
    7. ' to' → logprob: -3.7652838230133057
    8. '<|end|>' → logprob: -4.140283584594727
    9. ' =' → logprob: -4.390283584594727
    10. ' continue' → logprob: -4.515283584594727

Token 79: ':
' (ID: 734)
  Prédit: ' that'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' that' → logprob: -0.015140759758651257
    2. '    ' → logprob: -5.515140533447266
    3. 'that' → logprob: -5.890140533447266
    4. ' the' → logprob: -6.265140533447266
    5. ' we' → logprob: -6.390140533447266
    6. ' a' → logprob: -6.515140533447266
    7. '   ' → logprob: -7.265140533447266
    8. ' you' → logprob: -7.640140533447266
    9. ' to' → logprob: -7.765140533447266
    10. 'def' → logprob: -8.140140533447266

Token 80: '   ' (ID: 271)
  Prédit: '    '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '    ' → logprob: -0.3610932528972626
    2. '   ' → logprob: -1.986093282699585
    3. ' ' → logprob: -2.611093282699585
    4. ' for' → logprob: -2.986093282699585
    5. '```' → logprob: -4.611093044281006
    6. ' def' → logprob: -5.236093044281006
    7. 'def' → logprob: -5.361093044281006
    8. ' ' → logprob: -5.486093044281006
    9. ' that' → logprob: -5.736093044281006
    10. ' ```' → logprob: -5.861093044281006

Token 81: ' #' (ID: 1069)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6262419819831848
    2. ' dp' → logprob: -2.12624192237854
    3. 'dp' → logprob: -2.25124192237854
    4. 'for' → logprob: -2.37624192237854
    5. '   ' → logprob: -2.62624192237854
    6. '    ' → logprob: -3.87624192237854
    7. ' pass' → logprob: -4.251242160797119
    8. ' ' → logprob: -4.251242160797119
    9. 'def' → logprob: -5.501242160797119
    10. ' if' → logprob: -5.751242160797119

Token 82: ' -' (ID: 533)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.13331028819084167
    2. 'for' → logprob: -2.508310317993164
    3. ' dp' → logprob: -4.633310317993164
    4. '   ' → logprob: -4.883310317993164
    5. 'dp' → logprob: -4.883310317993164
    6. ' if' → logprob: -6.008310317993164
    7. 'def' → logprob: -6.383310317993164
    8. 'from' → logprob: -6.633310317993164
    9. ' from' → logprob: -6.633310317993164
    10. ' S' → logprob: -7.133310317993164

Token 83: ' Each' (ID: 11555)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.9480699300765991
    2. ' the' → logprob: -1.9480699300765991
    3. ' each' → logprob: -2.3230700492858887
    4. 'for' → logprob: -3.0730700492858887
    5. ' all' → logprob: -3.1980700492858887
    6. ' previous' → logprob: -3.3230700492858887
    7. ' The' → logprob: -3.5730700492858887
    8. ' sequences' → logprob: -3.5730700492858887
    9. 'The' → logprob: -3.9480700492858887
    10. 'the' → logprob: -4.073070049285889

Token 84: ' column' (ID: 6000)
  Prédit: ' row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' row' → logprob: -1.8916149139404297
    2. ' number' → logprob: -2.1416149139404297
    3. ' element' → logprob: -2.2666149139404297
    4. 'row' → logprob: -2.2666149139404297
    5. ' sequence' → logprob: -2.6416149139404297
    6. ' next' → logprob: -2.6416149139404297
    7. 'value' → logprob: -2.8916149139404297
    8. 'sequence' → logprob: -2.8916149139404297
    9. ' column' → logprob: -3.3916149139404297
    10. ' value' → logprob: -3.3916149139404297

Token 85: ' strictly' (ID: 38971)
  Prédit: ' must'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' must' → logprob: -0.6299260854721069
    2. ' has' → logprob: -1.879926085472107
    3. ' can' → logprob: -2.0049262046813965
    4. ' is' → logprob: -3.1299262046813965
    5. ')' → logprob: -3.8799262046813965
    6. '[' → logprob: -4.2549262046813965
    7. '   ' → logprob: -4.2549262046813965
    8. ' represents' → logprob: -4.5049262046813965
    9. 'must' → logprob: -4.7549262046813965
    10. ',' → logprob: -4.8799262046813965

Token 86: ' increasing' (ID: 11293)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.017074719071388245
    2. ' increasing' → logprob: -4.6420745849609375
    3. ' increases' → logprob: -5.2670745849609375
    4. 'increase' → logprob: -7.0170745849609375
    5. 'de' → logprob: -8.267074584960938
    6. '>' → logprob: -8.642074584960938
    7. 'greater' → logprob: -9.017074584960938
    8. '<' → logprob: -9.017074584960938
    9. ' <' → logprob: -9.517074584960938
    10. 'Increasing' → logprob: -9.642074584960938

Token 87: ' top' (ID: 2344)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.543750286102295
    2. '   ' → logprob: -1.668750286102295
    3. '<|end|>' → logprob: -1.793750286102295
    4. 'def' → logprob: -1.918750286102295
    5. ' ' → logprob: -2.918750286102295
    6. ',' → logprob: -3.043750286102295
    7. ' for' → logprob: -3.043750286102295
    8. '<|end|>' → logprob: -3.168750286102295
    9. ')' → logprob: -4.043750286102295
    10. '```' → logprob: -4.793750286102295

Token 88: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.3566431701183319
    2. 'to' → logprob: -1.2316431999206543
    3. '-' → logprob: -5.856643199920654
    4. '-to' → logprob: -6.606643199920654
    5. '-bottom' → logprob: -6.606643199920654
    6. ' -' → logprob: -6.981643199920654
    7. '-down' → logprob: -7.356643199920654
    8. 'down' → logprob: -8.481642723083496
    9. 'bottom' → logprob: -8.856642723083496
    10. ' down' → logprob: -8.981642723083496

Token 89: ' bottom' (ID: 8725)
  Prédit: 'bottom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bottom' → logprob: -0.00033665422233752906
    2. 'down' → logprob: -8.125336647033691
    3. ' bottom' → logprob: -10.125336647033691
    4. 'bot' → logprob: -15.000336647033691
    5. '_bottom' → logprob: -16.000337600708008
    6. 'ottom' → logprob: -17.000337600708008
    7. '-bottom' → logprob: -17.250337600708008
    8. '```' → logprob: -17.500337600708008
    9. '.bottom' → logprob: -17.625337600708008
    10. ' down' → logprob: -17.625337600708008

Token 90: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3067496120929718
    2. '
' → logprob: -2.3067495822906494
    3. ')' → logprob: -2.6817495822906494
    4. '<|end|>' → logprob: -2.9317495822906494
    5. 'def' → logprob: -4.5567498207092285
    6. '<|end|>' → logprob: -4.9317498207092285
    7. '```' → logprob: -5.1817498207092285
    8. '    ' → logprob: -5.3067498207092285
    9. '    
' → logprob: -5.4317498207092285
    10. ',' → logprob: -6.0567498207092285

Token 91: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.019339678809046745
    2. 'dp' → logprob: -4.394339561462402
    3. ' dp' → logprob: -5.644339561462402
    4. '
' → logprob: -7.269339561462402
    5. 'def' → logprob: -7.269339561462402
    6. '```' → logprob: -7.769339561462402
    7. ')' → logprob: -8.394339561462402
    8. '    
' → logprob: -8.394339561462402
    9. ' for' → logprob: -8.519339561462402
    10. '<|end|>' → logprob: -8.769339561462402

Token 92: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04281966760754585
    2. 'dp' → logprob: -3.6678197383880615
    3. ' dp' → logprob: -4.542819499969482
    4. ' for' → logprob: -6.667819499969482
    5. '
' → logprob: -6.917819499969482
    6. ' ' → logprob: -7.417819499969482
    7. '```' → logprob: -7.542819499969482
    8. 'def' → logprob: -7.667819499969482
    9. ')' → logprob: -7.792819499969482
    10. '    
' → logprob: -8.29281997680664

Token 93: ' -' (ID: 533)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.588039219379425
    2. ' for' → logprob: -1.7130391597747803
    3. '#' → logprob: -1.9630391597747803
    4. 'for' → logprob: -2.5880391597747803
    5. ' ' → logprob: -4.213039398193359
    6. ' #' → logprob: -4.338039398193359
    7. ' =' → logprob: -5.588039398193359
    8. '    ' → logprob: -6.088039398193359
    9. '  ' → logprob: -6.338039398193359
    10. ',' → logprob: -6.338039398193359

Token 94: ' Each' (ID: 11555)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.8959477543830872
    2. 'for' → logprob: -2.1459476947784424
    3. 'Each' → logprob: -2.3959476947784424
    4. ' each' → logprob: -2.6459476947784424
    5. ' #' → logprob: -3.0209476947784424
    6. ' Each' → logprob: -3.3959476947784424
    7. ' def' → logprob: -3.5209476947784424
    8. '#' → logprob: -3.6459476947784424
    9. ' sum' → logprob: -3.7709476947784424
    10. ' The' → logprob: -3.8959476947784424

Token 95: ' element' (ID: 3577)
  Prédit: ' row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' row' → logprob: -0.34875476360321045
    2. ' column' → logprob: -1.5987547636032104
    3. 'row' → logprob: -2.9737548828125
    4. 'column' → logprob: -3.3487548828125
    5. 'def' → logprob: -6.0987548828125
    6. ' line' → logprob: -7.2237548828125
    7. ' def' → logprob: -7.3487548828125
    8. ' code' → logprob: -8.0987548828125
    9. ' ' → logprob: -8.4737548828125
    10. '#' → logprob: -8.7237548828125

Token 96: ' larger' (ID: 12384)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -1.3019922971725464
    2. ' is' → logprob: -1.3019922971725464
    3. ' <=' → logprob: -1.6769922971725464
    4. ' must' → logprob: -1.8019922971725464
    5. '<|end|>' → logprob: -3.801992416381836
    6. ' >=' → logprob: -4.551992416381836
    7. ' at' → logprob: -5.051992416381836
    8. ' <' → logprob: -5.051992416381836
    9. ' of' → logprob: -5.051992416381836
    10. ' =' → logprob: -5.301992416381836

Token 97: ' than' (ID: 1572)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 98: ' any' (ID: 1062)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.11406099051237106
    2. ' the' → logprob: -2.739060878753662
    3. 'previous' → logprob: -3.239060878753662
    4. ' previous' → logprob: -6.364060878753662
    5. 'all' → logprob: -7.239060878753662
    6. 'prev' → logprob: -7.614060878753662
    7. 'last' → logprob: -8.73906135559082
    8. 'above' → logprob: -8.73906135559082
    9. 'def' → logprob: -8.86406135559082
    10. ' all' → logprob: -9.48906135559082

Token 99: ' element' (ID: 3577)
  Prédit: ' previous'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' previous' → logprob: -0.9500213861465454
    2. 'previous' → logprob: -0.9500213861465454
    3. 'def' → logprob: -2.825021266937256
    4. ' in' → logprob: -3.450021266937256
    5. ' element' → logprob: -3.950021266937256
    6. ' def' → logprob: -4.575021266937256
    7. 'prev' → logprob: -4.575021266937256
    8. ' row' → logprob: -4.700021266937256
    9. ' S' → logprob: -4.700021266937256
    10. '_previous' → logprob: -4.950021266937256

Token 100: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.7392014265060425
    2. '<|end|>' → logprob: -1.2392014265060425
    3. '_in' → logprob: -3.364201545715332
    4. '_' → logprob: -3.489201545715332
    5. ' _' → logprob: -3.614201545715332
    6. ' at' → logprob: -3.614201545715332
    7. ' ' → logprob: -3.614201545715332
    8. ')' → logprob: -3.989201545715332
    9. '  ' → logprob: -4.239201545715332
    10. ' of' → logprob: -4.739201545715332

Token 101: ' any' (ID: 1062)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.49493882060050964
    2. 'previous' → logprob: -1.119938850402832
    3. ' the' → logprob: -3.369938850402832
    4. ' previous' → logprob: -3.869938850402832
    5. 'any' → logprob: -5.619938850402832
    6. 'prev' → logprob: -6.619938850402832
    7. 'all' → logprob: -6.619938850402832
    8. 'row' → logprob: -7.369938850402832
    9. ' any' → logprob: -7.994938850402832
    10. ' all' → logprob: -8.119938850402832

Token 102: ' column' (ID: 6000)
  Prédit: ' previous'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' previous' → logprob: -0.435943067073822
    2. 'previous' → logprob: -1.1859431266784668
    3. ' row' → logprob: -4.310943126678467
    4. ' other' → logprob: -4.560943126678467
    5. ' column' → logprob: -5.435943126678467
    6. 'other' → logprob: -5.560943126678467
    7. ' previously' → logprob: -5.685943126678467
    8. 'row' → logprob: -5.810943126678467
    9. 'column' → logprob: -6.185943126678467
    10. ' earlier' → logprob: -6.435943126678467

Token 103: ' to' (ID: 316)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9901596307754517
    2. '   ' → logprob: -1.1151596307754517
    3. '<|end|>' → logprob: -2.365159511566162
    4. 'def' → logprob: -3.115159511566162
    5. '
' → logprob: -3.240159511566162
    6. '[' → logprob: -3.615159511566162
    7. ':' → logprob: -4.240159511566162
    8. '):' → logprob: -4.365159511566162
    9. '```' → logprob: -4.615159511566162
    10. ',' → logprob: -4.615159511566162

Token 104: ' the' (ID: 290)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.12935952842235565
    2. ' its' → logprob: -3.004359483718872
    3. ' the' → logprob: -3.129359483718872
    4. 'its' → logprob: -4.129359722137451
    5. 'left' → logprob: -4.629359722137451
    6. 'previous' → logprob: -6.504359722137451
    7. ' left' → logprob: -8.879359245300293
    8. '<|end|>' → logprob: -8.879359245300293
    9. ' previous' → logprob: -9.254359245300293
    10. 'their' → logprob: -9.504359245300293

Token 105: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.48157259821891785
    2. ' left' → logprob: -0.9815726280212402
    3. ' previous' → logprob: -5.98157262802124
    4. 'right' → logprob: -6.10657262802124
    5. 'previous' → logprob: -6.73157262802124
    6. ' right' → logprob: -6.98157262802124
    7. 'top' → logprob: -9.356572151184082
    8. ' same' → logprob: -9.481572151184082
    9. '```' → logprob: -9.981572151184082
    10. 'row' → logprob: -10.106572151184082

Token 106: ' →' (ID: 15155)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3432687520980835
    2. ':' → logprob: -1.9682687520980835
    3. '<|end|>' → logprob: -3.218268871307373
    4. '
' → logprob: -3.593268871307373
    5. 'def' → logprob: -3.968268871307373
    6. ')' → logprob: -4.093268871307373
    7. ',' → logprob: -4.343268871307373
    8. ' ' → logprob: -4.843268871307373
    9. '):' → logprob: -5.093268871307373
    10. '<|end|>' → logprob: -5.593268871307373

Token 107: ' global' (ID: 5466)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6096115112304688
    2. ' continue' → logprob: -2.4846115112304688
    3. ' True' → logprob: -2.7346115112304688
    4. ' def' → logprob: -3.2346115112304688
    5. ' for' → logprob: -3.3596115112304688
    6. '    ' → logprob: -3.4846115112304688
    7. '   ' → logprob: -3.6096115112304688
    8. ' ' → logprob: -3.7346115112304688
    9. '<|end|>' → logprob: -4.109611511230469
    10. ')' → logprob: -4.484611511230469

Token 108: ' strictly' (ID: 38971)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.657318353652954
    2. '_' → logprob: -2.032318353652954
    3. ' _' → logprob: -2.032318353652954
    4. ')' → logprob: -2.157318353652954
    5. ' ' → logprob: -2.157318353652954
    6. '<|end|>' → logprob: -2.282318353652954
    7. 'def' → logprob: -3.782318353652954
    8. 'dp' → logprob: -3.782318353652954
    9. '
' → logprob: -3.907318353652954
    10. ',' → logprob: -3.907318353652954

Token 109: ' increasing' (ID: 11293)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 110: ' order' (ID: 2569)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5267066955566406
    2. ':' → logprob: -1.9017066955566406
    3. '
' → logprob: -1.9017066955566406
    4. '<|end|>' → logprob: -3.4017066955566406
    5. ' ' → logprob: -3.7767066955566406
    6. ',' → logprob: -4.776706695556641
    7. ')' → logprob: -4.776706695556641
    8. '\n' → logprob: -5.276706695556641
    9. '):' → logprob: -5.401706695556641
    10. 'def' → logprob: -5.776706695556641

Token 111: ' by' (ID: 656)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.33606234192848206
    2. '
' → logprob: -1.9610623121261597
    3. ':' → logprob: -2.836062431335449
    4. '<|end|>' → logprob: -3.211062431335449
    5. 'def' → logprob: -3.961062431335449
    6. '<|end|>' → logprob: -5.086062431335449
    7. '[' → logprob: -5.461062431335449
    8. ',' → logprob: -6.211062431335449
    9. ')' → logprob: -6.336062431335449
    10. ' ' → logprob: -6.586062431335449

Token 112: ' rows' (ID: 13585)
  Prédit: 'columns'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'columns' → logprob: -1.18189537525177
    2. 'row' → logprob: -1.43189537525177
    3. 'rows' → logprob: -1.93189537525177
    4. ' columns' → logprob: -2.3068952560424805
    5. ' rows' → logprob: -2.4318952560424805
    6. 'column' → logprob: -2.8068952560424805
    7. ' row' → logprob: -3.3068952560424805
    8. ' column' → logprob: -4.1818952560424805
    9. 'value' → logprob: -5.4318952560424805
    10. ' value' → logprob: -6.3068952560424805

Token 113: ' and' (ID: 326)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3245977461338043
    2. '
' → logprob: -2.0745978355407715
    3. ':' → logprob: -2.4495978355407715
    4. '<|end|>' → logprob: -3.5745978355407715
    5. 'def' → logprob: -4.5745978355407715
    6. '[' → logprob: -5.1995978355407715
    7. '<|end|>' → logprob: -5.4495978355407715
    8. ')' → logprob: -5.6995978355407715
    9. '):' → logprob: -5.9495978355407715
    10. ':
' → logprob: -6.4495978355407715

Token 114: ' columns' (ID: 15697)
  Prédit: 'columns'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'columns' → logprob: -0.15034674108028412
    2. ' columns' → logprob: -2.0253467559814453
    3. 'cols' → logprob: -5.025346755981445
    4. 'column' → logprob: -7.525346755981445
    5. ' cols' → logprob: -8.025346755981445
    6. 'col' → logprob: -9.525346755981445
    7. ' column' → logprob: -10.150346755981445
    8. '   ' → logprob: -10.775346755981445
    9. 'import' → logprob: -11.400346755981445
    10. '#' → logprob: -11.400346755981445

Token 115: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7568764090538025
    2. '   ' → logprob: -0.7568764090538025
    3. '
' → logprob: -3.7568764686584473
    4. ':
' → logprob: -4.256876468658447
    5. 'def' → logprob: -5.381876468658447
    6. ' 
' → logprob: -6.256876468658447
    7. '\' → logprob: -6.381876468658447
    8. '[' → logprob: -6.381876468658447
    9. '):' → logprob: -6.506876468658447
    10. ' ' → logprob: -6.506876468658447

Token 116: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01311717089265585
    2. '
' → logprob: -4.76311731338501
    3. '<|end|>' → logprob: -6.51311731338501
    4. 'def' → logprob: -7.13811731338501
    5. '```' → logprob: -8.013116836547852
    6. ')' → logprob: -8.263116836547852
    7. '    ' → logprob: -8.263116836547852
    8. ' ' → logprob: -8.388116836547852
    9. '    
' → logprob: -8.763116836547852
    10. ':' → logprob: -8.888116836547852

Token 117: ' #
' (ID: 21888)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.033313341438770294
    2. '
' → logprob: -3.533313274383545
    3. ')' → logprob: -7.283313274383545
    4. '<|end|>' → logprob: -7.783313274383545
    5. '    
' → logprob: -7.908313274383545
    6. ':' → logprob: -7.908313274383545
    7. 'dp' → logprob: -8.158313751220703
    8. ',' → logprob: -8.408313751220703
    9. ' dp' → logprob: -8.783313751220703
    10. 'def' → logprob: -9.033313751220703

Token 118: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011305633001029491
    2. ' for' → logprob: -5.386305809020996
    3. ' dp' → logprob: -5.386305809020996
    4. '    ' → logprob: -7.511305809020996
    5. 'dp' → logprob: -7.761305809020996
    6. 'def' → logprob: -8.136305809020996
    7. ' indentation' → logprob: -8.636305809020996
    8. ' n' → logprob: -8.761305809020996
    9. ' def' → logprob: -9.386305809020996
    10. '    
' → logprob: -9.761305809020996

Token 119: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7850587964057922
    2. ' dp' → logprob: -1.2850587368011475
    3. 'dp' → logprob: -1.5350587368011475
    4. ' for' → logprob: -3.1600587368011475
    5. 'for' → logprob: -5.285058975219727
    6. ' n' → logprob: -6.535058975219727
    7. ' if' → logprob: -7.035058975219727
    8. 'n' → logprob: -7.410058975219727
    9. '    ' → logprob: -8.160058975219727
    10. 'def' → logprob: -9.160058975219727

Token 120: ' The' (ID: 623)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.015470057725906372
    2. ' dp' → logprob: -4.640470027923584
    3. 'from' → logprob: -6.015470027923584
    4. '   ' → logprob: -6.265470027923584
    5. 'import' → logprob: -8.140470504760742
    6. 'if' → logprob: -8.265470504760742
    7. 'for' → logprob: -8.515470504760742
    8. ' from' → logprob: -8.640470504760742
    9. 'def' → logprob: -9.265470504760742
    10. '#' → logprob: -9.640470504760742

Token 121: ' entire' (ID: 6508)
  Prédit: ' code'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' code' → logprob: -0.5451061129570007
    2. ' dp' → logprob: -2.4201061725616455
    3. ' next' → logprob: -2.5451061725616455
    4. ' ' → logprob: -3.2951061725616455
    5. 'def' → logprob: -3.4201061725616455
    6. '#' → logprob: -3.4201061725616455
    7. 'dp' → logprob: -3.4201061725616455
    8. ' for' → logprob: -4.170105934143066
    9. ' ' → logprob: -4.170105934143066
    10. 'n' → logprob: -4.545105934143066

Token 122: ' card' (ID: 4766)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.6533050537109375
    2. 'def' → logprob: -1.7783050537109375
    3. ' dp' → logprob: -1.7783050537109375
    4. ' _' → logprob: -1.9033050537109375
    5. 'dp' → logprob: -2.5283050537109375
    6. ' code' → logprob: -3.0283050537109375
    7. ' def' → logprob: -3.5283050537109375
    8. '_dp' → logprob: -3.5283050537109375
    9. ' ' → logprob: -3.7783050537109375
    10. ' sequence' → logprob: -4.2783050537109375

Token 123: ' is' (ID: 382)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2995336651802063
    2. ' is' → logprob: -2.1745336055755615
    3. '=' → logprob: -3.2995336055755615
    4. '<|end|>' → logprob: -3.4245336055755615
    5. ')' → logprob: -4.674533843994141
    6. ' remains' → logprob: -4.799533843994141
    7. '[' → logprob: -4.924533843994141
    8. '#' → logprob: -5.049533843994141
    9. ' ' → logprob: -5.674533843994141
    10. ':' → logprob: -5.674533843994141

Token 124: ' like' (ID: 1299)
  Prédit: ' filled'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' filled' → logprob: -0.3827427625656128
    2. ' a' → logprob: -2.1327428817749023
    3. '[' → logprob: -3.7577428817749023
    4. 'filled' → logprob: -3.8827428817749023
    5. 'dp' → logprob: -4.132742881774902
    6. '```' → logprob: -4.257742881774902
    7. '#' → logprob: -4.507742881774902
    8. ' dp' → logprob: -4.507742881774902
    9. 'def' → logprob: -4.632742881774902
    10. ' covered' → logprob: -4.757742881774902

Token 125: ' N' (ID: 478)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.4726208448410034
    2. 'a' → logprob: -1.0976208448410034
    3. ' an' → logprob: -3.347620964050293
    4. 'an' → logprob: -5.347620964050293
    5. ' filling' → logprob: -7.222620964050293
    6. '[' → logprob: -8.097620964050293
    7. ' the' → logprob: -8.597620964050293
    8. 'import' → logprob: -8.847620964050293
    9. ' increasing' → logprob: -8.847620964050293
    10. 'def' → logprob: -9.097620964050293

Token 126: ' sequences' (ID: 45665)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.061034929007291794
    2. 'x' → logprob: -3.186034917831421
    3. ' *' → logprob: -4.68603515625
    4. '*' → logprob: -5.93603515625
    5. ' ×' → logprob: -6.31103515625
    6. '×' → logprob: -6.93603515625
    7. ' rows' → logprob: -7.43603515625
    8. '[' → logprob: -7.93603515625
    9. ' by' → logprob: -8.31103515625
    10. '-' → logprob: -8.56103515625

Token 127: ' of' (ID: 328)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12185279279947281
    2. ':' → logprob: -3.4968528747558594
    3. '<|end|>' → logprob: -3.6218528747558594
    4. '[' → logprob: -4.121852874755859
    5. ')' → logprob: -4.621852874755859
    6. ',' → logprob: -4.746852874755859
    7. 'def' → logprob: -5.496852874755859
    8. ']' → logprob: -5.746852874755859
    9. '
' → logprob: -5.871852874755859
    10. '<|end|>' → logprob: -5.996852874755859

Token 128: ' length' (ID: 5517)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.11962336301803589
    2. ' length' → logprob: -2.7446234226226807
    3. 'in' → logprob: -3.7446234226226807
    4. 'numbers' → logprob: -4.994623184204102
    5. 'M' → logprob: -5.119623184204102
    6. ' increasing' → logprob: -5.369623184204102
    7. ' numbers' → logprob: -6.369623184204102
    8. 'strict' → logprob: -6.494623184204102
    9. 'N' → logprob: -6.619623184204102
    10. ' M' → logprob: -6.869623184204102

Token 129: ' N' (ID: 478)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.42845022678375244
    2. 'N' → logprob: -1.1784502267837524
    3. ' M' → logprob: -3.553450107574463
    4. ' N' → logprob: -4.678450107574463
    5. '1' → logprob: -6.303450107574463
    6. ' ' → logprob: -7.928450107574463
    7. 'S' → logprob: -7.928450107574463
    8. '2' → logprob: -9.553450584411621
    9. '(' → logprob: -10.178450584411621
    10. '(N' → logprob: -10.928450584411621

Token 130: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.49079009890556335
    2. 'def' → logprob: -2.2407901287078857
    3. ':' → logprob: -2.7407901287078857
    4. '
' → logprob: -2.7407901287078857
    5. '<|end|>' → logprob: -3.3657901287078857
    6. '[' → logprob: -3.6157901287078857
    7. ')' → logprob: -3.6157901287078857
    8. ',' → logprob: -3.6157901287078857
    9. '<|end|>' → logprob: -5.365789890289307
    10. '#' → logprob: -5.490789890289307

Token 131: ' creating' (ID: 9278)
  Prédit: ' with'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' with' → logprob: -1.1984062194824219
    2. ' ' → logprob: -1.3234062194824219
    3. '<|end|>' → logprob: -1.9484062194824219
    4. '   ' → logprob: -2.823406219482422
    5. ' each' → logprob: -3.448406219482422
    6. '    ' → logprob: -3.448406219482422
    7. ' and' → logprob: -3.573406219482422
    8. ' but' → logprob: -3.698406219482422
    9. ' where' → logprob: -3.823406219482422
    10. '#' → logprob: -4.198406219482422

Token 132: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.4178268611431122
    2. 'a' → logprob: -1.9178268909454346
    3. ' an' → logprob: -1.9178268909454346
    4. ' N' → logprob: -4.2928266525268555
    5. ' the' → logprob: -4.5428266525268555
    6. 'N' → logprob: -4.6678266525268555
    7. 'an' → logprob: -5.1678266525268555
    8. 'the' → logprob: -5.7928266525268555
    9. ' sequences' → logprob: -7.1678266525268555
    10. ' all' → logprob: -7.5428266525268555

Token 133: ' total' (ID: 3609)
  Prédit: ' grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' grid' → logprob: -1.233236312866211
    2. 'strict' → logprob: -1.608236312866211
    3. ' matrix' → logprob: -1.733236312866211
    4. 'matrix' → logprob: -1.858236312866211
    5. ' strictly' → logprob: -3.108236312866211
    6. 'grid' → logprob: -3.358236312866211
    7. 'N' → logprob: -3.608236312866211
    8. ' N' → logprob: -4.233236312866211
    9. 'sorted' → logprob: -4.733236312866211
    10. ' ' → logprob: -4.983236312866211

Token 134: ' strictly' (ID: 38971)
  Prédit: ' of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.050985630601644516
    2. 'of' → logprob: -4.425985813140869
    3. '<|end|>' → logprob: -4.925985813140869
    4. '
' → logprob: -5.550985813140869
    5. '```' → logprob: -5.675985813140869
    6. '#' → logprob: -5.925985813140869
    7. '[' → logprob: -6.175985813140869
    8. 'import' → logprob: -6.675985813140869
    9. ' number' → logprob: -6.800985813140869
    10. '<|end|>' → logprob: -6.800985813140869

Token 135: ' increasing' (ID: 11293)
  Prédit: ' increasing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' increasing' → logprob: -0.3285393714904785
    2. 'in' → logprob: -1.5785393714904785
    3. 'ly' → logprob: -2.8285393714904785
    4. '_in' → logprob: -4.7035393714904785
    5. ' strictly' → logprob: -6.0785393714904785
    6. 'increase' → logprob: -7.4535393714904785
    7. ' increase' → logprob: -7.5785393714904785
    8. '-in' → logprob: -7.9535393714904785
    9. ' _' → logprob: -8.07853889465332
    10. 'Increasing' → logprob: -8.32853889465332

Token 136: ' N' (ID: 478)
  Prédit: ' sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sequence' → logprob: -0.12457861751317978
    2. '_' → logprob: -2.7495787143707275
    3. ' ' → logprob: -3.7495787143707275
    4. 'sequence' → logprob: -3.9995787143707275
    5. '_sequence' → logprob: -5.874578475952148
    6. ' line' → logprob: -6.624578475952148
    7. ' _' → logprob: -6.749578475952148
    8. ' space' → logprob: -7.249578475952148
    9. '   ' → logprob: -7.249578475952148
    10. ' array' → logprob: -7.374578475952148

Token 137: '*N' (ID: 107360)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.12461955100297928
    2. 'x' → logprob: -2.874619483947754
    3. ' by' → logprob: -3.999619483947754
    4. '-' → logprob: -4.374619483947754
    5. ' ' → logprob: -5.499619483947754
    6. '**' → logprob: -5.499619483947754
    7. '-by' → logprob: -5.874619483947754
    8. '-dimensional' → logprob: -5.999619483947754
    9. '*' → logprob: -6.249619483947754
    10. ' *' → logprob: -6.499619483947754

Token 138: ' elements' (ID: 8632)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 139: ' arranged' (ID: 36276)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1479216367006302
    2. ':' → logprob: -3.022921562194824
    3. '
' → logprob: -3.647921562194824
    4. '<|end|>' → logprob: -4.022921562194824
    5. ',' → logprob: -4.772921562194824
    6. ')' → logprob: -4.897921562194824
    7. '):' → logprob: -5.022921562194824
    8. '[' → logprob: -5.272921562194824
    9. 'def' → logprob: -5.397921562194824
    10. '<|end|>' → logprob: -6.022921562194824

Token 140: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1705731749534607
    2. 'in' → logprob: -1.9205732345581055
    3. ' as' → logprob: -6.4205732345581055
    4. ' by' → logprob: -6.5455732345581055
    5. ' =' → logprob: -7.0455732345581055
    6. '_in' → logprob: -7.0455732345581055
    7. '[' → logprob: -7.2955732345581055
    8. '=' → logprob: -7.2955732345581055
    9. ' across' → logprob: -7.4205732345581055
    10. 'by' → logprob: -7.5455732345581055

Token 141: ' N' (ID: 478)
  Prédit: ' rows'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rows' → logprob: -1.045580506324768
    2. ' a' → logprob: -1.545580506324768
    3. 'rows' → logprob: -1.545580506324768
    4. 'a' → logprob: -2.0455803871154785
    5. 'N' → logprob: -3.7955803871154785
    6. ' N' → logprob: -4.2955803871154785
    7. 'row' → logprob: -4.4205803871154785
    8. 'matrix' → logprob: -4.5455803871154785
    9. ' matrix' → logprob: -5.4205803871154785
    10. ' increasing' → logprob: -5.4205803871154785

Token 142: ' rows' (ID: 13585)
  Prédit: ' rows'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rows' → logprob: -0.8688653707504272
    2. ' x' → logprob: -1.6188653707504272
    3. 'rows' → logprob: -2.493865489959717
    4. '*' → logprob: -2.618865489959717
    5. 'x' → logprob: -3.243865489959717
    6. ' layers' → logprob: -3.368865489959717
    7. ' *' → logprob: -3.493865489959717
    8. 'layers' → logprob: -3.868865489959717
    9. ' lines' → logprob: -4.118865489959717
    10. '*N' → logprob: -4.118865489959717

Token 143: ' and' (ID: 326)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18679700791835785
    2. '<|end|>' → logprob: -2.5617969036102295
    3. ':' → logprob: -3.1867969036102295
    4. '):' → logprob: -4.311797142028809
    5. ',' → logprob: -4.936797142028809
    6. '<|end|>' → logprob: -4.936797142028809
    7. ')' → logprob: -4.936797142028809
    8. 'def' → logprob: -5.061797142028809
    9. '
' → logprob: -5.061797142028809
    10. '[' → logprob: -7.311797142028809

Token 144: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.015059386380016804
    2. ' N' → logprob: -4.515059471130371
    3. 'columns' → logprob: -5.640059471130371
    4. ' columns' → logprob: -7.765059471130371
    5. 'M' → logprob: -11.390059471130371
    6. '#' → logprob: -11.890059471130371
    7. 'cols' → logprob: -12.265059471130371
    8. '```' → logprob: -13.890059471130371
    9. 'n' → logprob: -14.265059471130371
    10. ' ' → logprob: -15.015059471130371

Token 145: ' cols' (ID: 37134)
  Prédit: ' columns'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' columns' → logprob: -0.7007218599319458
    2. 'columns' → logprob: -0.7007218599319458
    3. 'cols' → logprob: -5.575721740722656
    4. ' cols' → logprob: -5.700721740722656
    5. '#' → logprob: -9.575721740722656
    6. '
' → logprob: -9.700721740722656
    7. '```' → logprob: -9.950721740722656
    8. '*' → logprob: -10.075721740722656
    9. '.columns' → logprob: -10.575721740722656
    10. '-columns' → logprob: -10.950721740722656

Token 146: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16760669648647308
    2. ':' → logprob: -2.9176065921783447
    3. '
' → logprob: -2.9176065921783447
    4. ')' → logprob: -4.542606830596924
    5. 'def' → logprob: -5.167606830596924
    6. ' ' → logprob: -5.292606830596924
    7. ',' → logprob: -5.417606830596924
    8. ']' → logprob: -5.667606830596924
    9. '<|end|>' → logprob: -5.917606830596924
    10. '#' → logprob: -6.417606830596924

Token 147: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0988629087805748
    2. '
' → logprob: -3.223862886428833
    3. ':' → logprob: -3.723862886428833
    4. '<|end|>' → logprob: -4.598863124847412
    5. ',' → logprob: -5.848863124847412
    6. ' ' → logprob: -5.973863124847412
    7. '[' → logprob: -6.223863124847412
    8. ')' → logprob: -6.348863124847412
    9. 'def' → logprob: -6.348863124847412
    10. '    
' → logprob: -6.348863124847412

Token 148: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08103552460670471
    2. '
' → logprob: -3.456035614013672
    3. ':' → logprob: -3.831035614013672
    4. '<|end|>' → logprob: -4.456035614013672
    5. 'def' → logprob: -5.081035614013672
    6. '    
' → logprob: -6.831035614013672
    7. '<|end|>' → logprob: -7.331035614013672
    8. ' ' → logprob: -7.456035614013672
    9. ',' → logprob: -7.456035614013672
    10. '```' → logprob: -7.706035614013672

Token 149: ' Actually' (ID: 50557)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7338356971740723
    2. '   ' → logprob: -1.2338356971740723
    3. '[' → logprob: -2.9838356971740723
    4. '
' → logprob: -3.2338356971740723
    5. 'def' → logprob: -3.6088356971740723
    6. ' 
' → logprob: -3.8588356971740723
    7. ' ' → logprob: -3.8588356971740723
    8. '\' → logprob: -4.483835697174072
    9. '=' → logprob: -4.483835697174072
    10. ',' → logprob: -4.733835697174072

Token 150: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.744191586971283
    2. ',' → logprob: -1.3691916465759277
    3. 'def' → logprob: -2.7441916465759277
    4. 'dp' → logprob: -3.2441916465759277
    5. ' dp' → logprob: -3.3691916465759277
    6. ' the' → logprob: -3.3691916465759277
    7. '    ' → logprob: -3.6191916465759277
    8. ' we' → logprob: -4.119191646575928
    9. '#' → logprob: -4.494191646575928
    10. ' def' → logprob: -4.994191646575928

Token 151: ' condition' (ID: 7060)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.17615453898906708
    2. ' dp' → logprob: -2.551154613494873
    3. ' we' → logprob: -3.676154613494873
    4. 'the' → logprob: -4.176154613494873
    5. 'dp' → logprob: -4.801154613494873
    6. ' for' → logprob: -5.176154613494873
    7. ' N' → logprob: -5.801154613494873
    8. 'def' → logprob: -5.926154613494873
    9. ' def' → logprob: -5.926154613494873
    10. ' since' → logprob: -6.051154613494873

Token 152: ' ' (ID: 220)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.09513641893863678
    2. '<|end|>' → logprob: -3.8451364040374756
    3. '=' → logprob: -4.470136642456055
    4. '<|end|>' → logprob: -4.595136642456055
    5. ':' → logprob: -4.845136642456055
    6. 'def' → logprob: -5.220136642456055
    7. ',' → logprob: -5.345136642456055
    8. 's' → logprob: -5.470136642456055
    9. ' +=' → logprob: -5.720136642456055
    10. ' is' → logprob: -5.970136642456055

Token 153: '5' (ID: 20)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7798733711242676
    2. ' =' → logprob: -0.9048733711242676
    3. '[' → logprob: -3.1548733711242676
    4. '<|end|>' → logprob: -4.029873371124268
    5. ',' → logprob: -4.279873371124268
    6. '[row' → logprob: -5.029873371124268
    7. '[:]' → logprob: -5.279873371124268
    8. ':' → logprob: -5.404873371124268
    9. ' +=' → logprob: -5.529873371124268
    10. ' ' → logprob: -5.654873371124268

Token 154: ' implies' (ID: 47808)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6839966773986816
    2. ':' → logprob: -1.3089966773986816
    3. '=' → logprob: -2.0589966773986816
    4. ',' → logprob: -3.3089966773986816
    5. '   ' → logprob: -3.9339966773986816
    6. '#' → logprob: -4.683996677398682
    7. ' is' → logprob: -5.183996677398682
    8. '[' → logprob: -5.433996677398682
    9. ' ' → logprob: -5.433996677398682
    10. '.' → logprob: -5.558996677398682

Token 155: ' that' (ID: 484)
  Prédit: ' that'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' that' → logprob: -0.3215589225292206
    2. ' the' → logprob: -1.946558952331543
    3. 'that' → logprob: -3.071558952331543
    4. ' dp' → logprob: -3.696558952331543
    5. 'dp' → logprob: -4.321558952331543
    6. ' each' → logprob: -4.446558952331543
    7. 'the' → logprob: -4.571558952331543
    8. ' all' → logprob: -4.696558952331543
    9. ' a' → logprob: -5.446558952331543
    10. ' we' → logprob: -5.821558952331543

Token 156: ' for' (ID: 395)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.35501617193222046
    2. 'the' → logprob: -2.3550162315368652
    3. ' for' → logprob: -2.9800162315368652
    4. ' all' → logprob: -3.4800162315368652
    5. ' each' → logprob: -3.6050162315368652
    6. ' dp' → logprob: -3.7300162315368652
    7. 'dp' → logprob: -4.105016231536865
    8. ' we' → logprob: -4.355016231536865
    9. 'each' → logprob: -4.480016231536865
    10. 'for' → logprob: -4.605016231536865

Token 157: ' each' (ID: 2454)
  Prédit: ' col'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' col' → logprob: -1.8618953227996826
    2. ' each' → logprob: -2.2368953227996826
    3. 'each' → logprob: -2.2368953227996826
    4. 'i' → logprob: -2.3618953227996826
    5. 'col' → logprob: -2.4868953227996826
    6. 'row' → logprob: -2.4868953227996826
    7. ' row' → logprob: -2.4868953227996826
    8. ' i' → logprob: -2.4868953227996826
    9. ' the' → logprob: -3.2368953227996826
    10. ' j' → logprob: -3.2368953227996826

Token 158: ' position' (ID: 4010)
  Prédit: ' row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' row' → logprob: -0.3823755383491516
    2. 'row' → logprob: -2.257375478744507
    3. ' column' → logprob: -2.382375478744507
    4. 'column' → logprob: -2.882375478744507
    5. 'def' → logprob: -4.257375717163086
    6. 'col' → logprob: -4.507375717163086
    7. ' col' → logprob: -5.007375717163086
    8. ' line' → logprob: -5.382375717163086
    9. ' cell' → logprob: -5.882375717163086
    10. ' i' → logprob: -6.132375717163086

Token 159: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4253098666667938
    2. ' in' → logprob: -1.1753098964691162
    3. '[' → logprob: -4.300309658050537
    4. '[i' → logprob: -5.550309658050537
    5. ' ,' → logprob: -5.800309658050537
    6. ' we' → logprob: -5.925309658050537
    7. ' ' → logprob: -5.925309658050537
    8. 'in' → logprob: -6.050309658050537
    9. ' (' → logprob: -6.175309658050537
    10. ' i' → logprob: -7.175309658050537

Token 160: 'r' (ID: 81)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.18264158070087433
    2. ' i' → logprob: -2.4326415061950684
    3. 'row' → logprob: -3.3076415061950684
    4. ',' → logprob: -4.057641506195068
    5. ')' → logprob: -5.057641506195068
    6. '),' → logprob: -5.182641506195068
    7. ' row' → logprob: -5.557641506195068
    8. 'r' → logprob: -5.557641506195068
    9. 'x' → logprob: -6.057641506195068
    10. ' ,' → logprob: -7.307641506195068

Token 161: ',c' (ID: 22261)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04104849696159363
    2. '+' → logprob: -4.041048526763916
    3. 'ow' → logprob: -4.416048526763916
    4. ')' → logprob: -6.166048526763916
    5. 'ows' → logprob: -6.416048526763916
    6. 'ight' → logprob: -6.541048526763916
    7. ' +' → logprob: -6.666048526763916
    8. '[' → logprob: -6.791048526763916
    9. ' ,' → logprob: -7.041048526763916
    10. '),' → logprob: -7.541048526763916

Token 162: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6340803503990173
    2. '),' → logprob: -0.7590803503990173
    3. '):' → logprob: -6.884080410003662
    4. '):
' → logprob: -9.134079933166504
    5. ' ),' → logprob: -9.634079933166504
    6. ',' → logprob: -9.759079933166504
    7. '):

' → logprob: -9.884079933166504
    8. '+' → logprob: -10.134079933166504
    9. '#' → logprob: -10.259079933166504
    10. ' )' → logprob: -10.384079933166504

Token 163: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.0638328492641449
    2. 'the' → logprob: -3.6888327598571777
    3. ' dp' → logprob: -4.313832759857178
    4. ' we' → logprob: -4.813832759857178
    5. ' if' → logprob: -5.313832759857178
    6. ' all' → logprob: -5.813832759857178
    7. ' S' → logprob: -7.063832759857178
    8. 'we' → logprob: -7.188832759857178
    9. 'dp' → logprob: -7.188832759857178
    10. ' its' → logprob: -7.313832759857178

Token 164: ' value' (ID: 1432)
  Prédit: ' value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' value' → logprob: -0.7497504949569702
    2. ' next' → logprob: -1.6247504949569702
    3. 'value' → logprob: -1.8747504949569702
    4. ' number' → logprob: -2.6247506141662598
    5. ' chosen' → logprob: -3.9997506141662598
    6. ' element' → logprob: -4.37475061416626
    7. 'number' → logprob: -4.37475061416626
    8. '#' → logprob: -4.49975061416626
    9. 'next' → logprob: -4.62475061416626
    10. ' code' → logprob: -5.24975061416626

Token 165: ' is' (ID: 382)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.40376201272010803
    2. ' must' → logprob: -1.6537619829177856
    3. ' ' → logprob: -3.403762102127075
    4. ' is' → logprob: -3.528762102127075
    5. '=' → logprob: -4.403761863708496
    6. ' +=' → logprob: -4.528761863708496
    7. '<|end|>' → logprob: -4.653761863708496
    8. ')' → logprob: -5.028761863708496
    9. ' at' → logprob: -5.153761863708496
    10. ' of' → logprob: -5.278761863708496

Token 166: ' >' (ID: 1424)
  Prédit: ' greater'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' greater' → logprob: -0.48793554306030273
    2. ' >' → logprob: -2.1129355430603027
    3. 'greater' → logprob: -2.1129355430603027
    4. '>' → logprob: -2.6129355430603027
    5. ' less' → logprob: -3.4879355430603027
    6. ' larger' → logprob: -4.612935543060303
    7. ' strictly' → logprob: -4.862935543060303
    8. ' at' → logprob: -5.112935543060303
    9. ' <' → logprob: -5.487935543060303
    10. '<' → logprob: -6.112935543060303

Token 167: ' all' (ID: 722)
  Prédit: ' all'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' all' → logprob: -1.0350815057754517
    2. ' the' → logprob: -1.1600815057754517
    3. 'the' → logprob: -2.285081386566162
    4. 'all' → logprob: -2.410081386566162
    5. ' values' → logprob: -3.035081386566162
    6. 'values' → logprob: -3.410081386566162
    7. ' any' → logprob: -4.410081386566162
    8. ' (' → logprob: -5.160081386566162
    9. ' max' → logprob: -5.410081386566162
    10. ' for' → logprob: -5.535081386566162

Token 168: ' values' (ID: 4824)
  Prédit: ' values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' values' → logprob: -0.9587242007255554
    2. ' positions' → logprob: -1.8337242603302002
    3. 'values' → logprob: -2.0837242603302
    4. 'positions' → logprob: -2.4587242603302
    5. ' previous' → logprob: -2.5837242603302
    6. 'previous' → logprob: -2.7087242603302
    7. ' elements' → logprob: -3.2087242603302
    8. ' (' → logprob: -3.5837242603302
    9. '(r' → logprob: -4.708724021911621
    10. 'elements' → logprob: -5.458724021911621

Token 169: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.558686375617981
    2. '[' → logprob: -1.808686375617981
    3. ' (' → logprob: -3.0586862564086914
    4. '<|end|>' → logprob: -3.0586862564086914
    5. ' at' → logprob: -3.3086862564086914
    6. ' ' → logprob: -3.4336862564086914
    7. '(' → logprob: -3.5586862564086914
    8. ',' → logprob: -3.9336862564086914
    9. ')' → logprob: -4.308686256408691
    10. 'in' → logprob: -4.558686256408691

Token 170: ' columns' (ID: 15697)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.5736799240112305
    2. ' previous' → logprob: -1.8236799240112305
    3. '(r' → logprob: -1.8236799240112305
    4. 'previous' → logprob: -1.8236799240112305
    5. 'positions' → logprob: -2.8236799240112305
    6. ' (' → logprob: -3.0736799240112305
    7. ' positions' → logprob: -3.3236799240112305
    8. 'columns' → logprob: -3.3236799240112305
    9. 'the' → logprob: -3.9486799240112305
    10. ' columns' → logprob: -3.9486799240112305

Token 171: ' to' (ID: 316)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 172: ' the' (ID: 290)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.06508085876703262
    2. ' the' → logprob: -2.9400808811187744
    3. 'left' → logprob: -4.690080642700195
    4. 'c' → logprob: -7.690080642700195
    5. ' its' → logprob: -8.315080642700195
    6. ' left' → logprob: -9.815080642700195
    7. 'its' → logprob: -9.815080642700195
    8. '<|end|>' → logprob: -9.815080642700195
    9. ' ' → logprob: -10.690080642700195
    10. 'he' → logprob: -11.190080642700195

Token 173: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.006050262600183487
    2. ' left' → logprob: -5.131050109863281
    3. 'right' → logprob: -9.506050109863281
    4. 'c' → logprob: -11.131050109863281
    5. '	left' → logprob: -11.881050109863281
    6. 'r' → logprob: -12.756050109863281
    7. '[left' → logprob: -13.006050109863281
    8. ' ' → logprob: -13.131050109863281
    9. '0' → logprob: -13.131050109863281
    10. '
' → logprob: -13.131050109863281

Token 174: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11129415035247803
    2. ':' → logprob: -2.7362942695617676
    3. '
' → logprob: -4.486294269561768
    4. ')' → logprob: -4.861294269561768
    5. 'def' → logprob: -5.486294269561768
    6. '    
' → logprob: -5.736294269561768
    7. ',' → logprob: -5.736294269561768
    8. ' 
' → logprob: -6.361294269561768
    9. '#' → logprob: -6.611294269561768
    10. '\' → logprob: -6.986294269561768

Token 175: 'c' (ID: 66)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0867418497800827
    2. ' )' → logprob: -2.7117419242858887
    3. ' and' → logprob: -4.336741924285889
    4. ',' → logprob: -6.211741924285889
    5. 'and' → logprob: -6.961741924285889
    6. '),' → logprob: -8.46174144744873
    7. '#' → logprob: -9.33674144744873
    8. ' ' → logprob: -9.71174144744873
    9. ').' → logprob: -10.08674144744873
    10. '.' → logprob: -10.08674144744873

Token 176: ''<' (ID: 47669)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3960673213005066
    2. '+' → logprob: -1.3960673809051514
    3. '])' → logprob: -3.5210673809051514
    4. '),' → logprob: -4.396067142486572
    5. ']' → logprob: -4.771067142486572
    6. ' +' → logprob: -4.771067142486572
    7. ')]' → logprob: -4.896067142486572
    8. ')])' → logprob: -6.146067142486572
    9. ' )' → logprob: -6.771067142486572
    10. '#' → logprob: -6.896067142486572

Token 177: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.04859498515725136
    2. ' c' → logprob: -3.0485949516296387
    3. ')c' → logprob: -13.173595428466797
    4. ')' → logprob: -13.673595428466797
    5. '<c' → logprob: -13.673595428466797
    6. ' ' → logprob: -14.548595428466797
    7. '=' → logprob: -14.673595428466797
    8. '```' → logprob: -14.798595428466797
    9. '<|end|>' → logprob: -15.298595428466797
    10. '	c' → logprob: -15.298595428466797

Token 178: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0020757904276251793
    2. ' )' → logprob: -6.877075672149658
    3. '),' → logprob: -7.627075672149658
    4. ',' → logprob: -8.502076148986816
    5. ' and' → logprob: -9.002076148986816
    6. ' or' → logprob: -9.502076148986816
    7. ').' → logprob: -10.502076148986816
    8. 'and' → logprob: -10.627076148986816
    9. '   ' → logprob: -11.002076148986816
    10. '):' → logprob: -11.627076148986816

Token 179: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.036713168025016785
    2. ')' → logprob: -4.786713123321533
    3. '<|end|>' → logprob: -4.911713123321533
    4. '
' → logprob: -5.286713123321533
    5. 'def' → logprob: -5.411713123321533
    6. ',' → logprob: -5.786713123321533
    7. ':' → logprob: -6.036713123321533
    8. '    
' → logprob: -6.786713123321533
    9. '<|end|>' → logprob: -6.911713123321533
    10. ' ' → logprob: -7.286713123321533

Token 180: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25902292132377625
    2. ')' → logprob: -1.8840229511260986
    3. ':' → logprob: -3.8840229511260986
    4. ',' → logprob: -4.3840227127075195
    5. '<|end|>' → logprob: -4.5090227127075195
    6. ' ' → logprob: -4.8840227127075195
    7. '    ' → logprob: -4.8840227127075195
    8. '_' → logprob: -5.6340227127075195
    9. '):' → logprob: -6.0090227127075195
    10. 'def' → logprob: -6.2590227127075195

Token 181: ' Since' (ID: 12265)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05150117725133896
    2. 'def' → logprob: -4.801501274108887
    3. ')' → logprob: -5.051501274108887
    4. ' ' → logprob: -5.051501274108887
    5. '
' → logprob: -5.176501274108887
    6. ',' → logprob: -5.301501274108887
    7. '    ' → logprob: -5.426501274108887
    8. ':' → logprob: -5.551501274108887
    9. '<|end|>' → logprob: -6.301501274108887
    10. '    
' → logprob: -6.801501274108887

Token 182: ' columns' (ID: 15697)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.5204753279685974
    2. 'the' → logprob: -2.145475387573242
    3. ' values' → logprob: -3.020475387573242
    4. ' we' → logprob: -3.270475387573242
    5. ' for' → logprob: -3.270475387573242
    6. ' each' → logprob: -3.270475387573242
    7. 'each' → logprob: -3.645475387573242
    8. 'we' → logprob: -3.895475387573242
    9. 'for' → logprob: -4.020475387573242
    10. 'values' → logprob: -4.395475387573242

Token 183: ' themselves' (ID: 9247)
  Prédit: ' are'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' are' → logprob: -0.1359390914440155
    2. ' can' → logprob: -3.635939121246338
    3. ' =' → logprob: -4.135939121246338
    4. '   ' → logprob: -4.260939121246338
    5. ' must' → logprob: -4.510939121246338
    6. '#' → logprob: -5.135939121246338
    7. ' have' → logprob: -5.260939121246338
    8. ' #' → logprob: -5.260939121246338
    9. ')' → logprob: -5.385939121246338
    10. ',' → logprob: -5.635939121246338

Token 184: ' increase' (ID: 7064)
  Prédit: ' are'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' are' → logprob: -0.10565847158432007
    2. 'are' → logprob: -2.855658531188965
    3. ' must' → logprob: -4.105658531188965
    4. ' strictly' → logprob: -5.230658531188965
    5. 'must' → logprob: -5.480658531188965
    6. '   ' → logprob: -5.605658531188965
    7. ' have' → logprob: -5.605658531188965
    8. ' increase' → logprob: -6.480658531188965
    9. '#' → logprob: -6.480658531188965
    10. 'increase' → logprob: -6.730658531188965

Token 185: ' down' (ID: 1917)
  Prédit: ' by'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' by' → logprob: -0.5782005786895752
    2. ',' → logprob: -1.5782005786895752
    3. 'by' → logprob: -2.453200578689575
    4. '   ' → logprob: -3.703200578689575
    5. 'from' → logprob: -3.828200578689575
    6. '<|end|>' → logprob: -3.953200578689575
    7. ' in' → logprob: -4.078200340270996
    8. 'down' → logprob: -4.578200340270996
    9. ' at' → logprob: -4.828200340270996
    10. 'def' → logprob: -4.953200340270996

Token 186: 'wards' (ID: 5323)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8667612075805664
    2. '   ' → logprob: -1.3667612075805664
    3. '<|end|>' → logprob: -1.4917612075805664
    4. ')' → logprob: -3.7417612075805664
    5. '<|end|>' → logprob: -4.116761207580566
    6. '#' → logprob: -4.491761207580566
    7. ' and' → logprob: -4.741761207580566
    8. ' the' → logprob: -4.991761207580566
    9. ' ,' → logprob: -5.616761207580566
    10. 'def' → logprob: -5.616761207580566

Token 187: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04986031353473663
    2. ',' → logprob: -3.9248602390289307
    3. ')' → logprob: -5.04986047744751
    4. '
' → logprob: -5.17486047744751
    5. '<|end|>' → logprob: -5.29986047744751
    6. '    
' → logprob: -6.17486047744751
    7. 'def' → logprob: -6.17486047744751
    8. ' ' → logprob: -6.42486047744751
    9. '#' → logprob: -6.79986047744751
    10. '<|end|>' → logprob: -6.92486047744751

Token 188: ' and' (ID: 326)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.5067450404167175
    2. '#' → logprob: -1.6317451000213623
    3. ' for' → logprob: -2.8817451000213623
    4. ' we' → logprob: -3.3817451000213623
    5. ' #' → logprob: -3.5067451000213623
    6. 'the' → logprob: -3.7567451000213623
    7. '   ' → logprob: -4.256744861602783
    8. '<|end|>' → logprob: -4.756744861602783
    9. ' dp' → logprob: -5.006744861602783
    10. 'def' → logprob: -5.506744861602783

Token 189: ' elements' (ID: 8632)
  Prédit: ' rows'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' rows' → logprob: -0.36268866062164307
    2. 'rows' → logprob: -1.737688660621643
    3. ' the' → logprob: -2.4876885414123535
    4. 'the' → logprob: -4.6126885414123535
    5. '#' → logprob: -4.7376885414123535
    6. ' each' → logprob: -5.2376885414123535
    7. ' for' → logprob: -5.4876885414123535
    8. ' values' → logprob: -5.4876885414123535
    9. 'each' → logprob: -5.8626885414123535
    10. 'values' → logprob: -6.3626885414123535

Token 190: ' are' (ID: 553)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.14362744987010956
    2. ' are' → logprob: -2.518627405166626
    3. 'in' → logprob: -3.643627405166626
    4. ' at' → logprob: -4.893627643585205
    5. ' must' → logprob: -5.143627643585205
    6. '   ' → logprob: -6.393627643585205
    7. ' of' → logprob: -6.768627643585205
    8. ' on' → logprob: -7.143627643585205
    9. 'are' → logprob: -7.143627643585205
    10. ' can' → logprob: -7.143627643585205

Token 191: ' strictly' (ID: 38971)
  Prédit: ' strictly'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' strictly' → logprob: -0.9721562266349792
    2. 'strict' → logprob: -1.722156286239624
    3. ' increasing' → logprob: -1.972156286239624
    4. 'in' → logprob: -2.222156286239624
    5. ' also' → logprob: -2.972156286239624
    6. 'also' → logprob: -4.097156047821045
    7. '>' → logprob: -4.222156047821045
    8. 'from' → logprob: -4.347156047821045
    9. 'greater' → logprob: -4.347156047821045
    10. ' in' → logprob: -4.347156047821045

Token 192: ' larger' (ID: 12384)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.06852885335683823
    2. ' increasing' → logprob: -2.818528890609741
    3. 'greater' → logprob: -5.443528652191162
    4. 'less' → logprob: -6.943528652191162
    5. ' less' → logprob: -7.568528652191162
    6. 'increase' → logprob: -8.56852912902832
    7. ' greater' → logprob: -8.81852912902832
    8. '>' → logprob: -8.81852912902832
    9. '<' → logprob: -10.06852912902832
    10. 'larg' → logprob: -10.19352912902832

Token 193: ' than' (ID: 1572)
  Prédit: ' than'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' than' → logprob: -0.1508730947971344
    2. '<|end|>' → logprob: -2.5258731842041016
    3. ' in' → logprob: -3.9008731842041016
    4. ',' → logprob: -4.275873184204102
    5. 'than' → logprob: -4.650873184204102
    6. ' ' → logprob: -4.650873184204102
    7. '<|end|>' → logprob: -6.775873184204102
    8. ' at' → logprob: -6.775873184204102
    9. ' ' → logprob: -7.400873184204102
    10. ' ,' → logprob: -7.525873184204102

Token 194: ' left' (ID: 3561)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.3143213093280792
    2. ' all' → logprob: -1.5643212795257568
    3. 'previous' → logprob: -3.814321279525757
    4. 'those' → logprob: -4.189321517944336
    5. 'any' → logprob: -5.189321517944336
    6. ' previous' → logprob: -5.439321517944336
    7. ' those' → logprob: -5.564321517944336
    8. 'elements' → logprob: -5.814321517944336
    9. 'the' → logprob: -6.314321517944336
    10. ' any' → logprob: -6.314321517944336

Token 195: ' columns' (ID: 15697)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.42071327567100525
    2. ' columns' → logprob: -2.295713186264038
    3. ')' → logprob: -2.920713186264038
    4. ' neighbors' → logprob: -3.170713186264038
    5. 'columns' → logprob: -3.420713186264038
    6. 'neighbors' → logprob: -3.920713186264038
    7. ',' → logprob: -4.045713424682617
    8. '#' → logprob: -4.170713424682617
    9. ' column' → logprob: -5.045713424682617
    10. ' of' → logprob: -5.045713424682617

Token 196: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.915739893913269
    2. ':' → logprob: -1.040739893913269
    3. '<|end|>' → logprob: -2.6657400131225586
    4. ' ' → logprob: -3.1657400131225586
    5. '):' → logprob: -3.1657400131225586
    6. ')' → logprob: -3.6657400131225586
    7. ',' → logprob: -3.6657400131225586
    8. 'def' → logprob: -4.165740013122559
    9. '<|end|>' → logprob: -5.415740013122559
    10. ' 
' → logprob: -5.790740013122559

Token 197: ' the' (ID: 290)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.298936128616333
    2. '   ' → logprob: -1.423936128616333
    3. '    ' → logprob: -1.423936128616333
    4. '<|end|>' → logprob: -2.423936128616333
    5. '#' → logprob: -3.173936128616333
    6. 'def' → logprob: -3.548936128616333
    7. ' we' → logprob: -4.173935890197754
    8. ' #' → logprob: -4.673935890197754
    9. ' dp' → logprob: -4.798935890197754
    10. ' 
' → logprob: -5.048935890197754

Token 198: ' entire' (ID: 6508)
  Prédit: ' code'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' code' → logprob: -1.2490603923797607
    2. ' dp' → logprob: -1.7490603923797607
    3. '#' → logprob: -2.2490603923797607
    4. 'dp' → logprob: -2.3740603923797607
    5. ' rest' → logprob: -2.7490603923797607
    6. ' problem' → logprob: -2.9990603923797607
    7. ' next' → logprob: -3.1240603923797607
    8. ' sequences' → logprob: -3.4990603923797607
    9. ' overall' → logprob: -3.8740603923797607
    10. ' #' → logprob: -4.24906063079834

Token 199: ' matrix' (ID: 12248)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.05654432624578476
    2. ' ' → logprob: -3.681544303894043
    3. ' sequence' → logprob: -4.681544303894043
    4. ' _' → logprob: -4.931544303894043
    5. ' code' → logprob: -5.181544303894043
    6. ')' → logprob: -6.806544303894043
    7. ' matrix' → logprob: -6.806544303894043
    8. '#' → logprob: -7.431544303894043
    9. ' \' → logprob: -7.681544303894043
    10. ' space' → logprob: -7.806544303894043

Token 200: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.1677326112985611
    2. ' will' → logprob: -2.7927327156066895
    3. ' must' → logprob: -3.1677327156066895
    4. ' can' → logprob: -3.6677327156066895
    5. ' continues' → logprob: -4.7927327156066895
    6. ' forms' → logprob: -5.9177327156066895
    7. '<|end|>' → logprob: -6.0427327156066895
    8. '#' → logprob: -6.1677327156066895
    9. ',' → logprob: -6.9177327156066895
    10. ' represents' → logprob: -6.9177327156066895

Token 201: ' strictly' (ID: 38971)
  Prédit: ' strictly'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' strictly' → logprob: -0.19217033684253693
    2. ' filled' → logprob: -2.8171703815460205
    3. ' a' → logprob: -3.1921703815460205
    4. 'strict' → logprob: -3.4421703815460205
    5. ' sorted' → logprob: -4.317170143127441
    6. ' also' → logprob: -5.442170143127441
    7. 'sorted' → logprob: -5.692170143127441
    8. ' increasing' → logprob: -6.067170143127441
    9. ' strict' → logprob: -6.067170143127441
    10. 'filled' → logprob: -6.067170143127441

Token 202: ' increasing' (ID: 11293)
  Prédit: ' increasing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' increasing' → logprob: -0.1144149973988533
    2. 'in' → logprob: -2.239414930343628
    3. ' strictly' → logprob: -7.364415168762207
    4. 'creasing' → logprob: -8.614415168762207
    5. 'increase' → logprob: -8.739415168762207
    6. 'strict' → logprob: -8.864415168762207
    7. '_in' → logprob: -8.989415168762207
    8. 'sorted' → logprob: -9.739415168762207
    9. 'Increasing' → logprob: -9.739415168762207
    10. '-in' → logprob: -10.489415168762207

Token 203: ' when' (ID: 1261)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 204: ' read' (ID: 1729)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.7534056305885315
    2. ' read' → logprob: -1.5034055709838867
    3. 'tr' → logprob: -2.5034055709838867
    4. 'flatten' → logprob: -2.5034055709838867
    5. 'view' → logprob: -3.0034055709838867
    6. ' viewed' → logprob: -3.5034055709838867
    7. 'consider' → logprob: -3.8784055709838867
    8. 'reading' → logprob: -4.378405570983887
    9. 'seen' → logprob: -4.878405570983887
    10. ' flattened' → logprob: -5.253405570983887

Token 205: ' row' (ID: 5225)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -1.0729798078536987
    2. 'down' → logprob: -1.3229798078536987
    3. ' line' → logprob: -2.3229799270629883
    4. ' row' → logprob: -2.5729799270629883
    5. 'row' → logprob: -2.8229799270629883
    6. ' from' → logprob: -3.3229799270629883
    7. ' in' → logprob: -3.6979799270629883
    8. ' down' → logprob: -4.072979927062988
    9. 'line' → logprob: -4.322979927062988
    10. ' as' → logprob: -4.822979927062988

Token 206: '-wise' (ID: 85729)
  Prédit: ' by'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' by' → logprob: -0.1280316710472107
    2. 'by' → logprob: -2.2530317306518555
    3. '-wise' → logprob: -5.2530317306518555
    4. ')' → logprob: -5.6280317306518555
    5. '+' → logprob: -6.1280317306518555
    6. '-by' → logprob: -7.2530317306518555
    7. '   ' → logprob: -7.5030317306518555
    8. 'wise' → logprob: -7.6280317306518555
    9. ' +' → logprob: -7.7530317306518555
    10. ',' → logprob: -7.8780317306518555

Token 207: ' from' (ID: 591)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7228750586509705
    2. '   ' → logprob: -0.8478750586509705
    3. '\n' → logprob: -3.5978751182556152
    4. 'def' → logprob: -3.8478751182556152
    5. '    
' → logprob: -4.597875118255615
    6. '<|end|>' → logprob: -4.847875118255615
    7. '```' → logprob: -5.472875118255615
    8. ')' → logprob: -5.972875118255615
    9. ':' → logprob: -5.972875118255615
    10. '<|end|>' → logprob: -6.222875118255615

Token 208: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.12130450457334518
    2. 'top' → logprob: -2.371304512023926
    3. ' left' → logprob: -4.121304512023926
    4. ' top' → logprob: -5.371304512023926
    5. '	left' → logprob: -13.871304512023926
    6. '0' → logprob: -13.996304512023926
    7. 'right' → logprob: -14.371304512023926
    8. '1' → logprob: -14.496304512023926
    9. 'the' → logprob: -14.621304512023926
    10. ' lef' → logprob: -14.621304512023926

Token 209: ' to' (ID: 316)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4724634885787964
    2. '=' → logprob: -1.8474634885787964
    3. '   ' → logprob: -2.847463607788086
    4. '<|end|>' → logprob: -3.222463607788086
    5. ',' → logprob: -3.597463607788086
    6. 'def' → logprob: -3.597463607788086
    7. ':' → logprob: -3.972463607788086
    8. '#' → logprob: -4.222463607788086
    9. '):' → logprob: -4.347463607788086
    10. ' to' → logprob: -5.347463607788086

Token 210: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -8.53050296427682e-05
    2. ' right' → logprob: -9.37508487701416
    3. '
' → logprob: -15.87508487701416
    4. 'ight' → logprob: -16.375085830688477
    5. 'r' → logprob: -16.375085830688477
    6. 'write' → logprob: -17.500085830688477
    7. '	right' → logprob: -17.750085830688477
    8. '```' → logprob: -17.750085830688477
    9. 'top' → logprob: -17.875085830688477
    10. 'bottom' → logprob: -18.250085830688477

Token 211: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.36907580494880676
    2. '
' → logprob: -1.4940757751464844
    3. '\n' → logprob: -3.8690757751464844
    4. ':' → logprob: -4.119075775146484
    5. '<|end|>' → logprob: -4.119075775146484
    6. 'def' → logprob: -4.994075775146484
    7. ',' → logprob: -5.619075775146484
    8. '```' → logprob: -5.619075775146484
    9. '    
' → logprob: -5.869075775146484
    10. ')' → logprob: -6.119075775146484

Token 212: ' top' (ID: 2344)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.22938577830791473
    2. '    ' → logprob: -2.6043858528137207
    3. '<|end|>' → logprob: -2.9793858528137207
    4. '   ' → logprob: -3.4793858528137207
    5. ')' → logprob: -3.9793858528137207
    6. ',' → logprob: -5.229385852813721
    7. ' 
' → logprob: -5.354385852813721
    8. '_' → logprob: -5.604385852813721
    9. ' )' → logprob: -5.729385852813721
    10. '    
' → logprob: -6.354385852813721

Token 213: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.06680210679769516
    2. 'to' → logprob: -2.8168020248413086
    3. '   ' → logprob: -6.066802024841309
    4. '+' → logprob: -7.191802024841309
    5. 'def' → logprob: -7.816802024841309
    6. 'down' → logprob: -7.941802024841309
    7. '=' → logprob: -8.566802024841309
    8. ' and' → logprob: -9.191802024841309
    9. 'import' → logprob: -9.191802024841309
    10. ',' → logprob: -9.566802024841309

Token 214: ' bottom' (ID: 8725)
  Prédit: 'bottom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bottom' → logprob: -8.458980300929397e-05
    2. 'right' → logprob: -9.75008487701416
    3. ' bottom' → logprob: -11.12508487701416
    4. 'down' → logprob: -11.37508487701416
    5. 'left' → logprob: -17.375083923339844
    6. 'bot' → logprob: -18.000083923339844
    7. '
' → logprob: -18.000083923339844
    8. '```' → logprob: -18.500083923339844
    9. '-bottom' → logprob: -19.375083923339844
    10. 'row' → logprob: -20.000083923339844

Token 215: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.47804203629493713
    2. ':' → logprob: -1.4780420064926147
    3. '
' → logprob: -2.4780421257019043
    4. '<|end|>' → logprob: -3.7280421257019043
    5. ')' → logprob: -4.978042125701904
    6. 'def' → logprob: -5.103042125701904
    7. ',' → logprob: -5.103042125701904
    8. ':
' → logprob: -5.353042125701904
    9. '\n' → logprob: -5.353042125701904
    10. '<|end|>' → logprob: -5.978042125701904

Token 216: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09792805463075638
    2. ':' → logprob: -3.097928047180176
    3. '
' → logprob: -4.222928047180176
    4. 'def' → logprob: -4.347928047180176
    5. ')' → logprob: -5.222928047180176
    6. ',' → logprob: -5.847928047180176
    7. '    
' → logprob: -5.972928047180176
    8. '\n' → logprob: -6.597928047180176
    9. '<|end|>' → logprob: -6.847928047180176
    10. '#' → logprob: -6.972928047180176

Token 217: ' #
' (ID: 21888)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4263601303100586
    2. ' 
' → logprob: -2.1763601303100586
    3. 'def' → logprob: -2.6763601303100586
    4. '\' → logprob: -3.6763601303100586
    5. ':' → logprob: -3.8013601303100586
    6. ' ' → logprob: -4.176360130310059
    7. ',' → logprob: -4.176360130310059
    8. ')' → logprob: -4.301360130310059
    9. '\n' → logprob: -4.301360130310059
    10. '
' → logprob: -4.551360130310059

Token 218: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.33212509751319885
    2. 'dp' → logprob: -1.5821250677108765
    3. ' dp' → logprob: -2.832125186920166
    4. 'def' → logprob: -4.582125186920166
    5. '    
' → logprob: -6.332125186920166
    6. '
' → logprob: -6.707125186920166
    7. 'import' → logprob: -7.082125186920166
    8. '    ' → logprob: -7.207125186920166
    9. ' for' → logprob: -8.082124710083008
    10. ' 
' → logprob: -8.332124710083008

Token 219: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.34235793352127075
    2. 'dp' → logprob: -1.467357873916626
    3. ' dp' → logprob: -3.342357873916626
    4. 'def' → logprob: -4.842358112335205
    5. '#' (adapté à ' #') → logprob: -5.717358112335205
    6. '    ' → logprob: -6.092358112335205
    7. ' 
' → logprob: -6.467358112335205
    8. '    
' → logprob: -6.592358112335205
    9. 'import' → logprob: -6.842358112335205
    10. '
' → logprob: -6.842358112335205

Token 220: ' So' (ID: 2632)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.1442645639181137
    2. '   ' → logprob: -2.2692644596099854
    3. ' dp' → logprob: -4.5192646980285645
    4. 'if' → logprob: -5.1442646980285645
    5. 'def' → logprob: -5.3942646980285645
    6. '#' → logprob: -6.3942646980285645
    7. ' res' → logprob: -6.6442646980285645
    8. 'for' → logprob: -6.7692646980285645
    9. ' if' → logprob: -6.8942646980285645
    10. 'n' → logprob: -7.3942646980285645

Token 221: ' the' (ID: 290)
  Prédit: ' dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.19571582973003387
    2. 'dp' → logprob: -2.82071590423584
    3. '   ' → logprob: -3.07071590423584
    4. ' for' → logprob: -3.57071590423584
    5. 'def' → logprob: -4.44571590423584
    6. ' next' → logprob: -4.94571590423584
    7. ' def' → logprob: -5.32071590423584
    8. ' the' → logprob: -6.19571590423584
    9. ' prev' → logprob: -6.19571590423584
    10. ' we' → logprob: -6.32071590423584

Token 222: ' whole' (ID: 6062)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.4045125246047974
    2. ' ' → logprob: -1.5295125246047974
    3. '_' → logprob: -1.6545125246047974
    4. ' code' → logprob: -2.529512405395508
    5. ' dp' → logprob: -2.779512405395508
    6. ' next' → logprob: -2.904512405395508
    7. 'dp' → logprob: -3.404512405395508
    8. '   ' → logprob: -3.779512405395508
    9. ' def' → logprob: -3.904512405395508
    10. '#' → logprob: -4.529512405395508

Token 223: ' matrix' (ID: 12248)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7462460994720459
    2. ' ' → logprob: -1.371246099472046
    3. ' code' → logprob: -2.371246099472046
    4. ' _' → logprob: -3.496246099472046
    5. 'def' → logprob: -3.496246099472046
    6. ' matrix' → logprob: -3.746246099472046
    7. '[' → logprob: -4.246246337890625
    8. '_matrix' → logprob: -4.746246337890625
    9. '_code' → logprob: -4.871246337890625
    10. '   ' → logprob: -4.871246337890625

Token 224: ' numbers' (ID: 8663)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.431168794631958
    2. ' is' → logprob: -1.556168794631958
    3. ' can' → logprob: -2.681168794631958
    4. ' will' → logprob: -3.806168794631958
    5. 'is' → logprob: -5.056168556213379
    6. ' must' → logprob: -5.556168556213379
    7. '   ' → logprob: -5.556168556213379
    8. '=' → logprob: -5.681168556213379
    9. ' represents' → logprob: -5.681168556213379
    10. '```' → logprob: -5.681168556213379

Token 225: ' are' (ID: 553)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04098031297326088
    2. ' are' → logprob: -3.540980339050293
    3. '=' → logprob: -5.165980339050293
    4. ' must' → logprob: -5.915980339050293
    5. ' appear' → logprob: -7.665980339050293
    6. ' can' → logprob: -7.790980339050293
    7. '[' → logprob: -8.290980339050293
    8. ' should' → logprob: -8.415980339050293
    9. ' =
' → logprob: -8.415980339050293
    10. 'are' → logprob: -8.665980339050293

Token 226: ' arranged' (ID: 36276)
  Prédit: ' strictly'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' strictly' → logprob: -0.6367903351783752
    2. ' from' → logprob: -1.5117902755737305
    3. 'from' → logprob: -2.3867902755737305
    4. ' in' → logprob: -3.2617902755737305
    5. ' assigned' → logprob: -3.7617902755737305
    6. ' increasing' → logprob: -4.2617902755737305
    7. ' sorted' → logprob: -4.2617902755737305
    8. ' a' → logprob: -4.8867902755737305
    9. 'strict' → logprob: -5.0117902755737305
    10. ' just' → logprob: -5.3867902755737305

Token 227: ' as' (ID: 472)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.7620835304260254
    2. ' as' → logprob: -1.5120835304260254
    3. ' =' → logprob: -1.5120835304260254
    4. 'in' → logprob: -3.2620835304260254
    5. '```' → logprob: -4.637083530426025
    6. '=' → logprob: -4.762083530426025
    7. 'from' → logprob: -5.387083530426025
    8. ' to' → logprob: -5.387083530426025
    9. 'as' → logprob: -5.512083530426025
    10. '   ' → logprob: -5.637083530426025

Token 228: ' one' (ID: 1001)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.7214722037315369
    2. ' increasing' → logprob: -2.0964722633361816
    3. ' an' → logprob: -2.0964722633361816
    4. 'a' → logprob: -2.3464722633361816
    5. ' N' → logprob: -3.7214722633361816
    6. ' strictly' → logprob: -4.096472263336182
    7. ' numbers' → logprob: -4.471472263336182
    8. '   ' → logprob: -4.596472263336182
    9. 'N' → logprob: -4.721472263336182
    10. '[' → logprob: -4.846472263336182

Token 229: ' strictly' (ID: 38971)
  Prédit: ' token'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' token' → logprob: -1.5141737461090088
    2. '_' → logprob: -1.7641737461090088
    3. ' ' → logprob: -2.014173746109009
    4. ' more' → logprob: -2.514173746109009
    5. ')' → logprob: -2.889173746109009
    6. ' line' → logprob: -3.014173746109009
    7. ' )' → logprob: -3.139173746109009
    8. 'token' → logprob: -3.264173746109009
    9. ' space' → logprob: -3.639173746109009
    10. ' sequence' → logprob: -3.889173746109009

Token 230: ' increasing' (ID: 11293)
  Prédit: ' increasing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' increasing' → logprob: -0.13871213793754578
    2. '_' → logprob: -2.763712167739868
    3. '_in' → logprob: -4.013711929321289
    4. ' _' → logprob: -4.263711929321289
    5. '+' → logprob: -5.138711929321289
    6. ' space' → logprob: -5.263711929321289
    7. ' incremental' → logprob: -5.513711929321289
    8. 'in' → logprob: -6.013711929321289
    9. '-in' → logprob: -6.013711929321289
    10. ' ' → logprob: -6.513711929321289

Token 231: ' sequence' (ID: 16281)
  Prédit: ' sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sequence' → logprob: -0.13768146932125092
    2. 'sequence' → logprob: -2.262681484222412
    3. '_' → logprob: -4.637681484222412
    4. '_sequence' → logprob: -4.887681484222412
    5. ' number' → logprob: -6.887681484222412
    6. ' token' → logprob: -7.137681484222412
    7. ',' → logprob: -7.262681484222412
    8. ')' → logprob: -7.262681484222412
    9. ' )' → logprob: -7.512681484222412
    10. ' line' → logprob: -7.637681484222412

Token 232: ' of' (ID: 328)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.100714921951294
    2. '[' → logprob: -1.850714921951294
    3. 'def' → logprob: -1.975714921951294
    4. ',' → logprob: -2.350714921951294
    5. '<|end|>' → logprob: -2.350714921951294
    6. ')' → logprob: -2.975714921951294
    7. ':' → logprob: -3.475714921951294
    8. '<|end|>' → logprob: -4.100714683532715
    9. '.' → logprob: -4.225714683532715
    10. ' =' → logprob: -4.225714683532715

Token 233: ' length' (ID: 5517)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -1.0102428197860718
    2. ' length' → logprob: -1.1352428197860718
    3. ' N' → logprob: -1.6352428197860718
    4. 'N' → logprob: -2.5102429389953613
    5. ' numbers' → logprob: -4.260242938995361
    6. 'numbers' → logprob: -5.135242938995361
    7. 'tokens' → logprob: -5.510242938995361
    8. 'inte' → logprob: -5.510242938995361
    9. ' integers' → logprob: -5.635242938995361
    10. ' ' → logprob: -5.885242938995361

Token 234: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.2340528666973114
    2. ' N' → logprob: -1.6090528964996338
    3. '1' → logprob: -5.359052658081055
    4. '(N' → logprob: -6.734052658081055
    5. ' ' → logprob: -6.859052658081055
    6. '(' → logprob: -7.859052658081055
    7. '`' → logprob: -8.109052658081055
    8. '   ' → logprob: -8.109052658081055
    9. ' (' → logprob: -8.234052658081055
    10. '\(' → logprob: -9.609052658081055

Token 235: '*N' (ID: 107360)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.6287326216697693
    2. '**' → logprob: -1.628732681274414
    3. ' *' → logprob: -2.003732681274414
    4. '*N' → logprob: -2.253732681274414
    5. ')' → logprob: -4.378732681274414
    6. ',' → logprob: -5.503732681274414
    7. '#' → logprob: -6.003732681274414
    8. '[' → logprob: -6.503732681274414
    9. '*
' → logprob: -6.503732681274414
    10. '\' → logprob: -6.628732681274414

Token 236: '.
' (ID: 558)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5527011752128601
    2. '   ' → logprob: -2.177701234817505
    3. '<|end|>' → logprob: -2.552701234817505
    4. ',' → logprob: -3.302701234817505
    5. ')' → logprob: -3.427701234817505
    6. '[' → logprob: -3.552701234817505
    7. '```' → logprob: -3.802701234817505
    8. 'def' → logprob: -3.802701234817505
    9. ':
' → logprob: -4.177700996398926
    10. '.' → logprob: -4.302700996398926

Token 237: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14074811339378357
    2. 'def' → logprob: -3.0157480239868164
    3. ')' → logprob: -3.8907480239868164
    4. ',' → logprob: -4.640748023986816
    5. '\' → logprob: -5.140748023986816
    6. ' ' → logprob: -5.140748023986816
    7. '[' → logprob: -5.515748023986816
    8. ':' → logprob: -5.515748023986816
    9. '    
' → logprob: -5.640748023986816
    10. '_' → logprob: -5.640748023986816

Token 238: ' #
' (ID: 21888)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16154402494430542
    2. 'def' → logprob: -3.41154408454895
    3. '\' → logprob: -3.91154408454895
    4. ' ' → logprob: -4.411543846130371
    5. '
' → logprob: -4.661543846130371
    6. '\n' → logprob: -4.661543846130371
    7. '    
' → logprob: -4.786543846130371
    8. ' 
' → logprob: -4.911543846130371
    9. ')' → logprob: -5.036543846130371
    10. ',' → logprob: -5.161543846130371

Token 239: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0062093776650726795
    2. '    
' → logprob: -6.256209373474121
    3. 'def' → logprob: -6.881209373474121
    4. '
' → logprob: -7.506209373474121
    5. '    ' → logprob: -7.506209373474121
    6. ' 
' → logprob: -7.756209373474121
    7. '\' → logprob: -8.131209373474121
    8. '```' → logprob: -8.381209373474121
    9. '\n' → logprob: -8.631209373474121
    10. ' next' → logprob: -9.256209373474121

Token 240: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10703350603580475
    2. 'def' → logprob: -3.4820334911346436
    3. '\' → logprob: -3.7320334911346436
    4. 'dp' → logprob: -3.8570334911346436
    5. '[' → logprob: -6.107033729553223
    6. '\n' → logprob: -6.357033729553223
    7. ' ' → logprob: -6.482033729553223
    8. '    
' → logprob: -6.482033729553223
    9. ' dp' → logprob: -6.482033729553223
    10. ':' → logprob: -6.607033729553223

Token 241: ' We' (ID: 1416)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6629440188407898
    2. 'def' → logprob: -1.0379440784454346
    3. 'dp' → logprob: -3.7879440784454346
    4. ')' → logprob: -4.1629438400268555
    5. ' ' → logprob: -4.5379438400268555
    6. '\' → logprob: -4.5379438400268555
    7. '[' → logprob: -4.7879438400268555
    8. 'n' → logprob: -4.9129438400268555
    9. ',' → logprob: -5.2879438400268555
    10. '_' → logprob: -5.6629438400268555

Token 242: ' want' (ID: 1682)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.5375474691390991
    2. ' ' → logprob: -1.9125474691390991
    3. ' want' → logprob: -2.0375475883483887
    4. '[' → logprob: -2.2875475883483887
    5. ' need' → logprob: -2.4125475883483887
    6. '=' → logprob: -2.7875475883483887
    7. '_' → logprob: -2.9125475883483887
    8. 'def' → logprob: -3.0375475883483887
    9. ')' → logprob: -3.1625475883483887
    10. ''' → logprob: -4.287547588348389

Token 243: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.17822907865047455
    2. '   ' → logprob: -2.5532290935516357
    3. 'to' → logprob: -2.8032290935516357
    4. 'dp' → logprob: -5.553228855133057
    5. ' N' → logprob: -5.928228855133057
    6. '    ' → logprob: -6.178228855133057
    7. ' dp' → logprob: -6.553228855133057
    8. ' ' → logprob: -6.553228855133057
    9. ')' → logprob: -6.678228855133057
    10. '```' → logprob: -6.678228855133057

Token 244: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.13537295162677765
    2. ' count' → logprob: -2.2603728771209717
    3. 'generate' → logprob: -4.885373115539551
    4. 'find' → logprob: -5.260373115539551
    5. 'return' → logprob: -6.260373115539551
    6. 'build' → logprob: -6.635373115539551
    7. ' find' → logprob: -6.760373115539551
    8. 'enumer' → logprob: -6.760373115539551
    9. 'calculate' → logprob: -7.260373115539551
    10. ' enumerate' → logprob: -7.510373115539551

Token 245: ' the' (ID: 290)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 246: ' number' (ID: 2086)
  Prédit: ' number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' number' → logprob: -0.6239050626754761
    2. ' next' → logprob: -1.623905062675476
    3. ' ways' → logprob: -1.873905062675476
    4. 'number' → logprob: -2.3739051818847656
    5. 'next' → logprob: -4.623905181884766
    6. 'ways' → logprob: -5.248905181884766
    7. ' ' → logprob: -6.873905181884766
    8. '#' → logprob: -7.373905181884766
    9. '   ' → logprob: -7.748905181884766
    10. '  ' → logprob: -7.748905181884766

Token 247: ' of' (ID: 328)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7586745023727417
    2. ')' → logprob: -1.5086745023727417
    3. '<|end|>' → logprob: -2.0086746215820312
    4. '_token' → logprob: -2.5086746215820312
    5. '
' → logprob: -3.3836746215820312
    6. '_tokens' → logprob: -4.258674621582031
    7. '<|end|>' → logprob: -5.258674621582031
    8. ' )' → logprob: -5.258674621582031
    9. '\' → logprob: -5.508674621582031
    10. ' ' → logprob: -5.508674621582031

Token 248: ' strictly' (ID: 38971)
  Prédit: ' ways'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ways' → logprob: -0.11375398933887482
    2. ' sequences' → logprob: -3.1137540340423584
    3. 'ways' → logprob: -3.2387540340423584
    4. ' valid' → logprob: -4.238753795623779
    5. ')' → logprob: -6.488753795623779
    6. ' possible' → logprob: -6.613753795623779
    7. 'possible' → logprob: -6.738753795623779
    8. 'valid' → logprob: -6.988753795623779
    9. 'se' → logprob: -7.113753795623779
    10. ' ' → logprob: -7.738753795623779

Token 249: ' increasing' (ID: 11293)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.1169000193476677
    2. '_in' → logprob: -2.6168999671936035
    3. ' increasing' → logprob: -3.9918999671936035
    4. 'in' → logprob: -4.7418999671936035
    5. '+' → logprob: -5.3668999671936035
    6. ' _' → logprob: -6.1168999671936035
    7. '_increment' → logprob: -6.7418999671936035
    8. '*' → logprob: -8.366900444030762
    9. '_add' → logprob: -8.366900444030762
    10. ')' → logprob: -8.491900444030762

Token 250: ' sequences' (ID: 45665)
  Prédit: ' sequences'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sequences' → logprob: -0.017159447073936462
    2. '_sequences' → logprob: -5.267159461975098
    3. '_' → logprob: -5.767159461975098
    4. ' sequence' → logprob: -6.017159461975098
    5. 'sequence' → logprob: -6.517159461975098
    6. ' ' → logprob: -6.517159461975098
    7. '<|end|>' → logprob: -6.517159461975098
    8. ' tokens' → logprob: -7.767159461975098
    9. 'se' → logprob: -8.017159461975098
    10. 'tokens' → logprob: -8.142159461975098

Token 251: ' of' (ID: 328)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.29257476329803467
    2. '_' → logprob: -1.9175747632980347
    3. 'def' → logprob: -4.167574882507324
    4. '[
' → logprob: -4.292574882507324
    5. '(' → logprob: -4.417574882507324
    6. 'from' → logprob: -4.417574882507324
    7. '   ' → logprob: -4.542574882507324
    8. '[n' → logprob: -5.042574882507324
    9. ' of' → logprob: -5.042574882507324
    10. ',' → logprob: -5.292574882507324

Token 252: ' length' (ID: 5517)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.22932909429073334
    2. ' length' → logprob: -2.2293291091918945
    3. 'N' → logprob: -2.7293291091918945
    4. ' N' → logprob: -3.4793291091918945
    5. '1' → logprob: -7.7293291091918945
    6. 'tokens' → logprob: -7.9793291091918945
    7. ' ' → logprob: -9.104329109191895
    8. 'M' → logprob: -9.979329109191895
    9. 'numbers' → logprob: -10.104329109191895
    10. ' M' → logprob: -10.104329109191895

Token 253: ' N' (ID: 478)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2285608053207397
    2. ' N' → logprob: -1.2285608053207397
    3. ' ' → logprob: -1.6035608053207397
    4. 'N' → logprob: -1.7285608053207397
    5. ' (' → logprob: -4.228560924530029
    6. '(N' → logprob: -4.603560924530029
    7. '(' → logprob: -4.853560924530029
    8. '`' → logprob: -7.853560924530029
    9. '  ' → logprob: -8.353560447692871
    10. ' \(' → logprob: -8.478560447692871

Token 254: '*N' (ID: 107360)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7445335984230042
    2. '_' → logprob: -1.1195335388183594
    3. '*' → logprob: -3.2445335388183594
    4. '[N' → logprob: -3.3695335388183594
    5. '+' → logprob: -3.4945335388183594
    6. '[
' → logprob: -3.7445335388183594
    7. '```' → logprob: -3.9945335388183594
    8. ',' → logprob: -4.119533538818359
    9. '**' → logprob: -5.244533538818359
    10. ')' → logprob: -5.619533538818359

Token 255: ',' (ID: 11)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.1072207689285278
    2. '_' → logprob: -1.3572207689285278
    3. ',' → logprob: -2.2322206497192383
    4. 'def' → logprob: -2.6072206497192383
    5. '   ' → logprob: -2.8572206497192383
    6. ':' → logprob: -3.1072206497192383
    7. ')' → logprob: -3.6072206497192383
    8. '(' → logprob: -3.8572206497192383
    9. '```' → logprob: -4.482220649719238
    10. '**' → logprob: -5.107220649719238

Token 256: ' with' (ID: 483)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 257: ' elements' (ID: 8632)
  Prédit: ' elements'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' elements' → logprob: -0.7329128980636597
    2. ' values' → logprob: -1.2329128980636597
    3. ' numbers' → logprob: -2.107913017272949
    4. 'elements' → logprob: -2.982913017272949
    5. 'values' → logprob: -3.107913017272949
    6. 'numbers' → logprob: -4.982913017272949
    7. ' integers' → logprob: -6.857913017272949
    8. ' the' → logprob: -7.607913017272949
    9. 'inte' → logprob: -7.607913017272949
    10. ' next' → logprob: -8.10791301727295

Token 258: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.5273675918579102
    2. ' from' → logprob: -1.4023675918579102
    3. 'from' → logprob: -2.15236759185791
    4. 'in' → logprob: -3.65236759185791
    5. ' ranging' → logprob: -5.27736759185791
    6. ' <=' → logprob: -5.52736759185791
    7. ' chosen' → logprob: -6.02736759185791
    8. ' <' → logprob: -6.15236759185791
    9. ' less' → logprob: -6.40236759185791
    10. ' between' → logprob: -6.52736759185791

Token 259: ' [' (ID: 723)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.437796950340271
    2. '[' → logprob: -1.937796950340271
    3. 'range' → logprob: -1.937796950340271
    4. ' [' → logprob: -2.9377970695495605
    5. ' ' → logprob: -5.3127970695495605
    6. '1' → logprob: -5.6877970695495605
    7. '{' → logprob: -6.6877970695495605
    8. ' {' → logprob: -6.8127970695495605
    9. '[M' → logprob: -6.8127970695495605
    10. ' the' → logprob: -7.4377970695495605

Token 260: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04323919489979744
    2. ' ' → logprob: -3.168239116668701
    3. 'M' → logprob: -9.54323959350586
    4. 'range' → logprob: -9.54323959350586
    5. ' M' → logprob: -9.91823959350586
    6. ' range' → logprob: -11.41823959350586
    7. '   ' → logprob: -11.79323959350586
    8. 'S' → logprob: -11.91823959350586
    9. ']' → logprob: -12.04323959350586
    10. ',' → logprob: -12.29323959350586

Token 261: '..' (ID: 485)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03904834762215614
    2. '..' → logprob: -3.914048433303833
    3. ' ,' → logprob: -4.164048194885254
    4. '...' → logprob: -6.789048194885254
    5. ',M' → logprob: -6.914048194885254
    6. ' ' → logprob: -8.039048194885254
    7. ',
' → logprob: -8.914048194885254
    8. ' ..' → logprob: -9.164048194885254
    9. '+' → logprob: -10.789048194885254
    10. '
' → logprob: -11.164048194885254

Token 262: 'M' (ID: 44)
  Prédit: 'M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.16056732833385468
    2. ' M' → logprob: -1.910567283630371
    3. ' ' → logprob: -8.785567283630371
    4. 'S' → logprob: -10.035567283630371
    5. '   ' → logprob: -10.035567283630371
    6. 'N' → logprob: -11.035567283630371
    7. ',' → logprob: -11.410567283630371
    8. 'MOD' → logprob: -11.535567283630371
    9. ' ' → logprob: -11.785567283630371
    10. '    ' → logprob: -11.785567283630371

Token 263: '],' (ID: 2155)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.018088364973664284
    2. '+' → logprob: -4.518088340759277
    3. ' ]' → logprob: -5.518088340759277
    4. '],' → logprob: -6.393088340759277
    5. ',' → logprob: -7.393088340759277
    6. ' +' → logprob: -8.393088340759277
    7. '])' → logprob: -8.768088340759277
    8. ')' → logprob: -9.143088340759277
    9. ']+' → logprob: -9.893088340759277
    10. ' ],' → logprob: -10.518088340759277

Token 264: ' sum' (ID: 4215)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.388741672039032
    2. '    ' → logprob: -2.3887417316436768
    3. '<|end|>' → logprob: -2.5137417316436768
    4. '   ' → logprob: -3.3887417316436768
    5. ')' → logprob: -3.5137417316436768
    6. ' and' → logprob: -3.7637417316436768
    7. ' 
' → logprob: -3.7637417316436768
    8. '#' → logprob: -4.888741493225098
    9. ' )' → logprob: -5.138741493225098
    10. 'def' → logprob: -5.388741493225098

Token 265: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4731816053390503
    2. '=' → logprob: -2.22318172454834
    3. ' +=' → logprob: -2.22318172454834
    4. ' +' → logprob: -2.97318172454834
    5. ' <=' → logprob: -3.22318172454834
    6. ')' → logprob: -3.59818172454834
    7. '+' → logprob: -4.47318172454834
    8. '   ' → logprob: -4.97318172454834
    9. '_' → logprob: -5.22318172454834
    10. ',' → logprob: -5.34818172454834

Token 266: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.3133814334869385
    2. ' S' → logprob: -1.3133814334869385
    3. ' ' → logprob: -10.06338119506836
    4. '(S' → logprob: -10.81338119506836
    5. 'sum' → logprob: -11.68838119506836
    6. '   ' → logprob: -11.93838119506836
    7. ' ' → logprob: -12.18838119506836
    8. 's' → logprob: -12.31338119506836
    9. '_S' → logprob: -12.56338119506836
    10. '  ' → logprob: -12.56338119506836

Token 267: '.
' (ID: 558)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2981574833393097
    2. '   ' → logprob: -2.4231574535369873
    3. 'def' → logprob: -2.9231574535369873
    4. ':
' → logprob: -3.2981574535369873
    5. '\' → logprob: -4.173157691955566
    6. '\n' → logprob: -4.173157691955566
    7. '```' → logprob: -4.548157691955566
    8. '
' → logprob: -4.673157691955566
    9. ',' → logprob: -4.923157691955566
    10. '_' → logprob: -5.798157691955566

Token 268: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.42425841093063354
    2. ',' → logprob: -2.2992584705352783
    3. 'def' → logprob: -2.5492584705352783
    4. '   ' → logprob: -2.9242584705352783
    5. '[' → logprob: -3.6742584705352783
    6. '_' → logprob: -4.174258232116699
    7. ':
' → logprob: -4.299258232116699
    8. ')' → logprob: -4.424258232116699
    9. '):' → logprob: -4.924258232116699
    10. '
' → logprob: -5.049258232116699

Token 269: ' #
' (ID: 21888)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5821132063865662
    2. ':' → logprob: -1.082113265991211
    3. 'def' → logprob: -3.082113265991211
    4. '\' → logprob: -4.207113265991211
    5. '
' → logprob: -4.832113265991211
    6. '\n' → logprob: -4.832113265991211
    7. ':
' → logprob: -5.082113265991211
    8. '[' → logprob: -5.832113265991211
    9. ' 
' → logprob: -6.207113265991211
    10. ',' → logprob: -6.457113265991211

Token 270: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02159697376191616
    2. 'dp' → logprob: -4.521596908569336
    3. 'def' → logprob: -5.021596908569336
    4. ' dp' → logprob: -6.146596908569336
    5. '
' → logprob: -7.646596908569336
    6. '    
' → logprob: -8.021596908569336
    7. '```' → logprob: -8.896596908569336
    8. '\' → logprob: -9.146596908569336
    9. ' 
' → logprob: -9.146596908569336
    10. ' def' → logprob: -9.521596908569336

Token 271: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.7770925760269165
    2. '   ' → logprob: -0.9020925760269165
    3. 'def' → logprob: -3.152092456817627
    4. 'from' → logprob: -3.277092456817627
    5. 'if' → logprob: -3.527092456817627
    6. '#' (adapté à ' #') → logprob: -5.152092456817627
    7. ' dp' → logprob: -5.277092456817627
    8. ' if' → logprob: -5.402092456817627
    9. ' from' → logprob: -5.777092456817627
    10. 'import' → logprob: -6.152092456817627

Token 272: ' But' (ID: 3072)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.14592532813549042
    2. 'def' → logprob: -2.270925283432007
    3. 'if' → logprob: -4.395925521850586
    4. 'from' → logprob: -4.645925521850586
    5. '   ' → logprob: -5.395925521850586
    6. '#' → logprob: -6.270925521850586
    7. 'max' → logprob: -7.020925521850586
    8. ' dp' → logprob: -7.270925521850586
    9. 'import' → logprob: -7.395925521850586
    10. 'n' → logprob: -7.395925521850586

Token 273: ' condition' (ID: 7060)
  Prédit: ' N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' N' → logprob: -1.290189504623413
    2. 'def' → logprob: -2.040189504623413
    3. ' the' → logprob: -2.290189504623413
    4. ' we' → logprob: -2.290189504623413
    5. ' ' → logprob: -2.540189504623413
    6. '#' → logprob: -2.915189504623413
    7. 'N' → logprob: -3.415189504623413
    8. '
' → logprob: -4.165189743041992
    9. ' there' → logprob: -4.165189743041992
    10. 'the' → logprob: -4.165189743041992

Token 274: ' ' (ID: 220)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7663956880569458
    2. '=' → logprob: -1.2663956880569458
    3. ':' → logprob: -2.0163955688476562
    4. '_' → logprob: -2.6413955688476562
    5. '<|end|>' → logprob: -4.766395568847656
    6. 's' → logprob: -5.141395568847656
    7. ',' → logprob: -5.516395568847656
    8. ' ' → logprob: -5.641395568847656
    9. '[' → logprob: -5.641395568847656
    10. '#' → logprob: -5.766395568847656

Token 275: '4' (ID: 19)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.9833733439445496
    2. '#' → logprob: -1.4833734035491943
    3. ':' → logprob: -1.4833734035491943
    4. ' ' → logprob: -3.7333734035491943
    5. 's' → logprob: -3.7333734035491943
    6. ' =' → logprob: -3.8583734035491943
    7. '6' → logprob: -4.358373165130615
    8. ' #' → logprob: -4.358373165130615
    9. ' is' → logprob: -4.483373165130615
    10. '**' → logprob: -4.483373165130615

Token 276: ' says' (ID: 5003)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.4231699705123901
    2. ' ==' → logprob: -1.6731699705123901
    3. '#' → logprob: -1.7981699705123901
    4. ':' → logprob: -2.5481700897216797
    5. ' =' → logprob: -2.6731700897216797
    6. '[' → logprob: -2.7981700897216797
    7. '=' → logprob: -3.0481700897216797
    8. ' is' → logprob: -3.6731700897216797
    9. '==' → logprob: -4.42317008972168
    10. ')' → logprob: -4.54817008972168

Token 277: ':' (ID: 25)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -1.3591718673706055
    2. ' that' → logprob: -1.3591718673706055
    3. ' each' → logprob: -1.3591718673706055
    4. ':' → logprob: -2.9841718673706055
    5. 'the' → logprob: -3.2341718673706055
    6. ' we' → logprob: -3.3591718673706055
    7. 'each' → logprob: -3.6091718673706055
    8. ' for' → logprob: -4.2341718673706055
    9. ',' → logprob: -4.2341718673706055
    10. 'that' → logprob: -4.3591718673706055

Token 278: ' each' (ID: 2454)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.8800175189971924
    2. ' each' → logprob: -1.8800175189971924
    3. ' the' → logprob: -2.2550175189971924
    4. '#' → logprob: -2.5050175189971924
    5. 'for' → logprob: -3.3800175189971924
    6. ' The' → logprob: -3.6300175189971924
    7. ' we' → logprob: -3.6300175189971924
    8. ' S' → logprob: -4.130017280578613
    9. ' #' → logprob: -4.130017280578613
    10. '   ' → logprob: -4.255017280578613

Token 279: ' column' (ID: 6000)
  Prédit: ' element'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' element' → logprob: -0.47378167510032654
    2. ' number' → logprob: -2.0987815856933594
    3. 'element' → logprob: -2.3487815856933594
    4. ' position' → logprob: -3.2237815856933594
    5. ' row' → logprob: -3.5987815856933594
    6. ' column' → logprob: -3.8487815856933594
    7. 'column' → logprob: -4.848781585693359
    8. ' value' → logprob: -4.973781585693359
    9. 'number' → logprob: -4.973781585693359
    10. 'row' → logprob: -5.098781585693359

Token 280: ' values' (ID: 4824)
  Prédit: ' must'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' must' → logprob: -0.9405507445335388
    2. ' strictly' → logprob: -1.5655508041381836
    3. '[i' → logprob: -2.6905508041381836
    4. 'strict' → logprob: -2.6905508041381836
    5. '[' → logprob: -2.9405508041381836
    6. '```' → logprob: -3.1905508041381836
    7. 'must' → logprob: -3.4405508041381836
    8. ' is' → logprob: -4.065550804138184
    9. '   ' → logprob: -4.315550804138184
    10. ')' → logprob: -4.565550804138184

Token 281: ' are' (ID: 553)
  Prédit: ' must'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' must' → logprob: -0.2548919916152954
    2. '[' → logprob: -2.129891872406006
    3. ' are' → logprob: -3.379891872406006
    4. '[i' → logprob: -4.754891872406006
    5. '_' → logprob: -4.879891872406006
    6. '   ' → logprob: -5.129891872406006
    7. ' =' → logprob: -5.254891872406006
    8. 'must' → logprob: -5.379891872406006
    9. ',' → logprob: -5.504891872406006
    10. '>' → logprob: -5.754891872406006

Token 282: ' ascending' (ID: 75564)
  Prédit: 'strict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'strict' → logprob: -0.5363569259643555
    2. ' strictly' → logprob: -0.9113569259643555
    3. ' also' → logprob: -5.7863569259643555
    4. 'also' → logprob: -5.9113569259643555
    5. '>' → logprob: -6.0363569259643555
    6. '```' → logprob: -6.7863569259643555
    7. 'in' → logprob: -7.0363569259643555
    8. ' strict' → logprob: -7.5363569259643555
    9. ' increasing' → logprob: -8.161356925964355
    10. ' >' → logprob: -8.661356925964355

Token 283: ' top' (ID: 2344)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1700273752212524
    2. '   ' → logprob: -1.9200273752212524
    3. ')' → logprob: -2.045027256011963
    4. 'def' → logprob: -2.670027256011963
    5. '[' → logprob: -2.920027256011963
    6. '#' → logprob: -3.045027256011963
    7. '
' → logprob: -3.295027256011963
    8. '<|end|>' → logprob: -3.295027256011963
    9. '.' → logprob: -3.670027256011963
    10. ':' → logprob: -3.795027256011963

Token 284: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.3882289528846741
    2. ' to' → logprob: -1.2632288932800293
    3. '-' → logprob: -4.638228893280029
    4. '```' → logprob: -5.013228893280029
    5. 'down' → logprob: -5.138228893280029
    6. '_to' → logprob: -5.513228893280029
    7. '-to' → logprob: -5.888228893280029
    8. '-bottom' → logprob: -5.888228893280029
    9. '-down' → logprob: -6.013228893280029
    10. 'bottom' → logprob: -7.013228893280029

Token 285: ' bottom' (ID: 8725)
  Prédit: 'bottom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bottom' → logprob: -0.20168395340442657
    2. 'down' → logprob: -1.7016839981079102
    3. 'right' → logprob: -8.95168399810791
    4. ' bottom' → logprob: -9.45168399810791
    5. ' down' → logprob: -9.82668399810791
    6. '```' → logprob: -12.45168399810791
    7. 'below' → logprob: -13.57668399810791
    8. '_down' → logprob: -14.57668399810791
    9. ' ' → logprob: -14.70168399810791
    10. '#' → logprob: -14.95168399810791

Token 286: '.
' (ID: 558)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9346160292625427
    2. ')' → logprob: -1.9346160888671875
    3. '   ' → logprob: -2.0596160888671875
    4. 'def' → logprob: -2.3096160888671875
    5. ',' → logprob: -2.6846160888671875
    6. '[' → logprob: -3.0596160888671875
    7. '
' → logprob: -3.8096160888671875
    8. '_' → logprob: -4.3096160888671875
    9. ':
' → logprob: -4.3096160888671875
    10. '\n' → logprob: -4.9346160888671875

Token 287: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4144280254840851
    2. 'def' → logprob: -1.6644279956817627
    3. ')' → logprob: -3.4144279956817627
    4. '```' → logprob: -3.6644279956817627
    5. '_' → logprob: -3.7894279956817627
    6. ',' → logprob: -4.289428234100342
    7. ':' → logprob: -4.414428234100342
    8. 'dp' → logprob: -4.664428234100342
    9. '
' → logprob: -4.789428234100342
    10. '#' → logprob: -5.414428234100342

Token 288: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4726250171661377
    2. ')' → logprob: -2.0976250171661377
    3. 'def' → logprob: -2.7226250171661377
    4. ',' → logprob: -2.8476250171661377
    5. '#' (adapté à ' #') → logprob: -3.0976250171661377
    6. ':' → logprob: -4.097624778747559
    7. '
' → logprob: -4.847624778747559
    8. '[' → logprob: -5.097624778747559
    9. 'dp' → logprob: -5.097624778747559
    10. '.' → logprob: -5.222624778747559

Token 289: ' Condition' (ID: 30255)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6581601500511169
    2. '   ' → logprob: -2.2831602096557617
    3. '#' → logprob: -2.4081602096557617
    4. ')' → logprob: -2.6581602096557617
    5. '_' → logprob: -2.9081602096557617
    6. 'dp' → logprob: -3.0331602096557617
    7. '
' → logprob: -3.9081602096557617
    8. '[' → logprob: -4.158160209655762
    9. '_
' → logprob: -4.408160209655762
    10. ',' → logprob: -5.033160209655762

Token 290: ' ' (ID: 220)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -1.0035380125045776
    2. ' =' → logprob: -1.1285380125045776
    3. ' ' → logprob: -1.6285380125045776
    4. '=' → logprob: -2.753538131713867
    5. ' #' → logprob: -3.753538131713867
    6. ':' → logprob: -5.003538131713867
    7. '   ' → logprob: -5.003538131713867
    8. '#' → logprob: -5.128538131713867
    9. '```' → logprob: -6.378538131713867
    10. '_' → logprob: -7.378538131713867

Token 291: '5' (ID: 20)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3571541905403137
    2. ' ' → logprob: -2.232154130935669
    3. '=' → logprob: -2.732154130935669
    4. '4' → logprob: -2.857154130935669
    5. ' #' → logprob: -3.232154130935669
    6. '5' → logprob: -4.607154369354248
    7. '   ' → logprob: -5.107154369354248
    8. '#' → logprob: -5.732154369354248
    9. ' not' → logprob: -6.107154369354248
    10. '6' → logprob: -6.857154369354248

Token 292: ' says' (ID: 5003)
  Prédit: ' says'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' says' → logprob: -0.3215796649456024
    2. 's' → logprob: -1.5715796947479248
    3. '#' → logprob: -3.696579694747925
    4. ':' → logprob: -4.821579456329346
    5. ' =' → logprob: -5.196579456329346
    6. 'im' → logprob: -5.571579456329346
    7. '=' → logprob: -5.696579456329346
    8. ' #' → logprob: -5.946579456329346
    9. ' is' → logprob: -6.321579456329346
    10. ' states' → logprob: -6.446579456329346

Token 293: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.45353490114212036
    2. ' :' → logprob: -1.0785348415374756
    3. ' each' → logprob: -4.453535079956055
    4. ' that' → logprob: -5.453535079956055
    5. '   ' → logprob: -5.828535079956055
    6. ',' → logprob: -5.953535079956055
    7. ' for' → logprob: -7.328535079956055
    8. ' ' → logprob: -7.703535079956055
    9. '#' → logprob: -8.078535079956055
    10. '    ' → logprob: -8.078535079956055

Token 294: ' any' (ID: 1062)
  Prédit: ' each'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' each' → logprob: -0.7365121245384216
    2. '#' → logprob: -2.1115121841430664
    3. ' for' → logprob: -2.3615121841430664
    4. 'each' → logprob: -2.6115121841430664
    5. 'Each' → logprob: -2.8615121841430664
    6. ' Each' → logprob: -3.4865121841430664
    7. ' The' → logprob: -3.4865121841430664
    8. ' #' → logprob: -3.9865121841430664
    9. '   ' → logprob: -4.236512184143066
    10. 'for' → logprob: -4.236512184143066

Token 295: ' element' (ID: 3577)
  Prédit: ' element'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' element' → logprob: -0.1912660151720047
    2. 'element' → logprob: -2.6912660598754883
    3. ' value' → logprob: -3.1912660598754883
    4. ' ' → logprob: -3.9412660598754883
    5. 'value' → logprob: -4.566266059875488
    6. ' column' → logprob: -4.816266059875488
    7. ' row' → logprob: -6.066266059875488
    8. ' two' → logprob: -6.191266059875488
    9. ' c' → logprob: -6.316266059875488
    10. ' number' → logprob: -6.566266059875488

Token 296: ' is' (ID: 382)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.18253539502620697
    2. 'in' → logprob: -2.182535409927368
    3. ' larger' → logprob: -4.057535171508789
    4. ' >' → logprob: -4.557535171508789
    5. ' to' → logprob: -5.057535171508789
    6. ' at' → logprob: -5.682535171508789
    7. ' is' → logprob: -5.932535171508789
    8. ' ' → logprob: -5.932535171508789
    9. ' must' → logprob: -6.182535171508789
    10. '>' → logprob: -6.307535171508789

Token 297: ' strictly' (ID: 38971)
  Prédit: 'greater'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'greater' → logprob: -0.793205738067627
    2. '>' → logprob: -1.668205738067627
    3. 'larg' → logprob: -2.293205738067627
    4. ' greater' → logprob: -2.418205738067627
    5. ' larger' → logprob: -2.543205738067627
    6. 'strict' → logprob: -3.293205738067627
    7. ' >' → logprob: -3.418205738067627
    8. ' strictly' → logprob: -3.918205738067627
    9. ' bigger' → logprob: -9.043205261230469
    10. ' ' → logprob: -9.043205261230469

Token 298: ' greater' (ID: 10740)
  Prédit: 'greater'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'greater' → logprob: -0.7346550226211548
    2. ' greater' → logprob: -1.3596550226211548
    3. ' larger' → logprob: -1.6096550226211548
    4. 'larg' → logprob: -3.1096549034118652
    5. ' less' → logprob: -4.609654903411865
    6. '>' → logprob: -5.234654903411865
    7. 'less' → logprob: -6.359654903411865
    8. ' smaller' → logprob: -6.859654903411865
    9. ' >' → logprob: -7.359654903411865
    10. '<' → logprob: -9.484655380249023

Token 299: ' than' (ID: 1572)
  Prédit: 'than'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'than' → logprob: -0.47443491220474243
    2. ' than' → logprob: -0.9744349122047424
    3. '_than' → logprob: -8.224434852600098
    4. ' ' → logprob: -10.724434852600098
    5. ' ' → logprob: -11.474434852600098
    6. '<|end|>' → logprob: -11.724434852600098
    7. '   ' → logprob: -11.849434852600098
    8. 'thane' → logprob: -11.849434852600098
    9. '    ' → logprob: -12.224434852600098
    10. '```' → logprob: -12.474434852600098

Token 300: ' any' (ID: 1062)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -1.111038088798523
    2. ' all' → logprob: -1.361038088798523
    3. 'any' → logprob: -1.486038088798523
    4. ' any' → logprob: -1.736038088798523
    5. 'elements' → logprob: -4.9860382080078125
    6. ' elements' → logprob: -5.7360382080078125
    7. ' the' → logprob: -7.7360382080078125
    8. 'previous' → logprob: -7.7360382080078125
    9. ' ' → logprob: -8.361038208007812
    10. 'the' → logprob: -8.486038208007812

Token 301: ' element' (ID: 3577)
  Prédit: ' element'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' element' → logprob: -0.012741188518702984
    2. 'element' → logprob: -4.7627410888671875
    3. ' previous' → logprob: -5.6377410888671875
    4. ' value' → logprob: -8.762741088867188
    5. 'previous' → logprob: -9.012741088867188
    6. ' elements' → logprob: -9.012741088867188
    7. ' ' → logprob: -9.887741088867188
    8. ' previously' → logprob: -11.012741088867188
    9. ' preceding' → logprob: -11.012741088867188
    10. ' in' → logprob: -11.637741088867188

Token 302: ' to' (ID: 316)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.11196862161159515
    2. 'in' → logprob: -3.111968517303467
    3. '_' → logprob: -3.361968517303467
    4. '_in' → logprob: -4.236968517303467
    5. ' ' → logprob: -4.986968517303467
    6. ')' → logprob: -6.736968517303467
    7. '[' → logprob: -6.861968517303467
    8. ' _' → logprob: -7.736968517303467
    9. 'import' → logprob: -7.986968517303467
    10. '   ' → logprob: -7.986968517303467

Token 303: ' the' (ID: 290)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.1146300658583641
    2. ' the' → logprob: -2.2396299839019775
    3. 'left' → logprob: -6.614630222320557
    4. ' its' → logprob: -8.614629745483398
    5. '_the' → logprob: -9.989629745483398
    6. ' left' → logprob: -9.989629745483398
    7. 'all' → logprob: -10.114629745483398
    8. '_left' → logprob: -10.614629745483398
    9. '<|end|>' → logprob: -10.614629745483398
    10. '```' → logprob: -10.739629745483398

Token 304: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.018280576914548874
    2. ' left' → logprob: -4.018280506134033
    3. 'right' → logprob: -9.893280982971191
    4. '	left' → logprob: -10.893280982971191
    5. '[left' → logprob: -11.018280982971191
    6. '_left' → logprob: -11.393280982971191
    7. '```' → logprob: -11.393280982971191
    8. 'previous' → logprob: -12.518280982971191
    9. '.left' → logprob: -12.768280982971191
    10. '
' → logprob: -13.143280982971191

Token 305: ' columns' (ID: 15697)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.5886591672897339
    2. '[' → logprob: -1.7136591672897339
    3. ':' → logprob: -1.9636591672897339
    4. ')' → logprob: -2.2136592864990234
    5. ',' → logprob: -2.2136592864990234
    6. 'def' → logprob: -2.3386592864990234
    7. '```' → logprob: -3.3386592864990234
    8. '.' → logprob: -3.8386592864990234
    9. '_' → logprob: -3.9636592864990234
    10. '#' → logprob: -4.838659286499023

Token 306: '.
' (ID: 558)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9431807398796082
    2. '[' → logprob: -1.693180799484253
    3. ',' → logprob: -2.443180799484253
    4. '   ' → logprob: -2.443180799484253
    5. ')' → logprob: -2.568180799484253
    6. 'def' → logprob: -2.693180799484253
    7. '```' → logprob: -4.068180561065674
    8. '.' → logprob: -4.443180561065674
    9. '<|end|>' → logprob: -4.568180561065674
    10. '#' → logprob: -5.068180561065674

Token 307: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8004563450813293
    2. 'def' → logprob: -1.1754562854766846
    3. ':' → logprob: -3.1754562854766846
    4. ')' → logprob: -3.3004562854766846
    5. '[' → logprob: -3.4254562854766846
    6. '_' → logprob: -3.5504562854766846
    7. ',' → logprob: -3.6754562854766846
    8. '\' → logprob: -4.550456523895264
    9. '
' → logprob: -4.675456523895264
    10. ' def' → logprob: -4.925456523895264

Token 308: ' #
' (ID: 21888)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09264498203992844
    2. 'def' → logprob: -3.0926449298858643
    3. 'dp' → logprob: -4.592645168304443
    4. '\' → logprob: -5.092645168304443
    5. '
' → logprob: -5.717645168304443
    6. ':' → logprob: -5.717645168304443
    7. ',' → logprob: -5.967645168304443
    8. ')' → logprob: -6.092645168304443
    9. '```' → logprob: -6.342645168304443
    10. '_' → logprob: -6.342645168304443

Token 309: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004097396973520517
    2. 'def' → logprob: -6.5040974617004395
    3. '    
' → logprob: -7.2540974617004395
    4. '
' → logprob: -7.5040974617004395
    5. 'dp' → logprob: -8.629096984863281
    6. '  
' → logprob: -8.754096984863281
    7. ' 
' → logprob: -8.879096984863281
    8. '```' → logprob: -9.004096984863281
    9. '\' → logprob: -9.129096984863281
    10. '   
' → logprob: -9.504096984863281

Token 310: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.35116225481033325
    2. 'dp' → logprob: -1.6011621952056885
    3. ' dp' → logprob: -2.9761621952056885
    4. 'def' → logprob: -4.101162433624268
    5. ' if' → logprob: -4.976162433624268
    6. '#' (adapté à ' #') → logprob: -5.351162433624268
    7. ' max' → logprob: -6.476162433624268
    8. 'if' → logprob: -6.726162433624268
    9. 'max' → logprob: -6.976162433624268
    10. 'n' → logprob: -7.226162433624268

Token 311: ' Together' (ID: 39207)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0884082019329071
    2. 'max' → logprob: -3.2134082317352295
    3. 'def' → logprob: -3.9634082317352295
    4. '#' → logprob: -5.08840799331665
    5. 'from' → logprob: -5.08840799331665
    6. '   ' → logprob: -5.08840799331665
    7. 'if' → logprob: -5.96340799331665
    8. 'prev' → logprob: -7.21340799331665
    9. 'total' → logprob: -7.58840799331665
    10. 'for' → logprob: -7.96340799331665

Token 312: ' this' (ID: 495)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0695573166012764
    2. '<|end|>' → logprob: -3.9445574283599854
    3. 'def' → logprob: -4.319557189941406
    4. '
' → logprob: -5.319557189941406
    5. '   ' → logprob: -5.319557189941406
    6. ',
' → logprob: -5.444557189941406
    7. '#' → logprob: -6.069557189941406
    8. ' the' → logprob: -6.069557189941406
    9. '```' → logprob: -6.319557189941406
    10. ' =' → logprob: -6.319557189941406

Token 313: ' means' (ID: 4748)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.0457439422607422
    2. ' implies' → logprob: -1.5457439422607422
    3. ' means' → logprob: -1.9207439422607422
    4. ' def' → logprob: -2.420743942260742
    5. '=' → logprob: -3.545743942260742
    6. 'def' → logprob: -3.670743942260742
    7. ' is' → logprob: -3.920743942260742
    8. ' continues' → logprob: -4.170743942260742
    9. 'means' → logprob: -4.170743942260742
    10. '#' → logprob: -4.420743942260742

Token 314: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.9332643747329712
    2. '   ' → logprob: -1.6832643747329712
    3. ' that' → logprob: -1.9332643747329712
    4. 'the' → logprob: -2.6832642555236816
    5. ' we' → logprob: -2.8082642555236816
    6. 'that' → logprob: -2.9332642555236816
    7. ' dp' → logprob: -3.1832642555236816
    8. '#' → logprob: -4.183264255523682
    9. 'dp' → logprob: -4.433264255523682
    10. 'we' → logprob: -4.558264255523682

Token 315: ' matrix' (ID: 12248)
  Prédit: ' next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' next' → logprob: -0.8550892472267151
    2. ' dp' → logprob: -1.9800891876220703
    3. ' matrix' → logprob: -2.7300891876220703
    4. ' entire' → logprob: -2.8550891876220703
    5. '#' → logprob: -2.9800891876220703
    6. 'dp' → logprob: -3.1050891876220703
    7. ' problem' → logprob: -3.1050891876220703
    8. 'next' → logprob: -3.6050891876220703
    9. ' code' → logprob: -3.7300891876220703
    10. ' rest' → logprob: -3.9800891876220703

Token 316: ' flattened' (ID: 140580)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -1.0744901895523071
    2. 'is' → logprob: -1.4494901895523071
    3. 'values' → logprob: -1.5744901895523071
    4. 'elements' → logprob: -2.4494900703430176
    5. ' elements' → logprob: -3.0744900703430176
    6. ' values' → logprob: -3.9494900703430176
    7. ' must' → logprob: -4.574490070343018
    8. ' forms' → logprob: -4.699490070343018
    9. 'must' → logprob: -4.824490070343018
    10. ' represents' → logprob: -5.074490070343018

Token 317: ' column' (ID: 6000)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.2028404474258423
    2. '[' → logprob: -1.5778404474258423
    3. '_' → logprob: -1.7028404474258423
    4. ' into' → logprob: -2.3278403282165527
    5. '[row' → logprob: -3.4528403282165527
    6. '   ' → logprob: -3.7028403282165527
    7. ' is' → logprob: -3.8278403282165527
    8. '[i' → logprob: -3.8278403282165527
    9. '[n' → logprob: -4.327840328216553
    10. ',' → logprob: -4.702840328216553

Token 318: '-wise' (ID: 85729)
  Prédit: '-wise'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-wise' → logprob: -0.33946600556373596
    2. 'wise' → logprob: -1.3394659757614136
    3. '#' → logprob: -4.464466094970703
    4. '-' → logprob: -5.964466094970703
    5. '-major' → logprob: -5.964466094970703
    6. '   ' → logprob: -6.214466094970703
    7. 'ar' → logprob: -6.214466094970703
    8. '_w' → logprob: -6.964466094970703
    9. '_' → logprob: -7.089466094970703
    10. 'by' → logprob: -7.089466094970703

Token 319: ' is' (ID: 382)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.2786113023757935
    2. ',' → logprob: -2.153611183166504
    3. ')' → logprob: -2.403611183166504
    4. '[n' → logprob: -2.528611183166504
    5. '[i' → logprob: -2.528611183166504
    6. '[row' → logprob: -2.778611183166504
    7. ' is' → logprob: -3.028611183166504
    8. '   ' → logprob: -3.278611183166504
    9. ':' → logprob: -3.403611183166504
    10. 'def' → logprob: -3.653611183166504

Token 320: ' strictly' (ID: 38971)
  Prédit: 'strict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strict' → logprob: -0.7832961678504944
    2. ' strictly' → logprob: -1.0332961082458496
    3. 'a' → logprob: -3.1582961082458496
    4. 'also' → logprob: -3.2832961082458496
    5. ' a' → logprob: -3.4082961082458496
    6. 'sorted' → logprob: -3.5332961082458496
    7. ' also' → logprob: -4.15829610824585
    8. ' sorted' → logprob: -4.53329610824585
    9. ' an' → logprob: -5.03329610824585
    10. 'an' → logprob: -5.28329610824585

Token 321: ' increasing' (ID: 11293)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.22558225691318512
    2. ' increasing' → logprob: -1.600582242012024
    3. 'increase' → logprob: -10.350582122802734
    4. ' column' → logprob: -11.100582122802734
    5. 'ascending' → logprob: -11.100582122802734
    6. 'creasing' → logprob: -11.600582122802734
    7. 'increment' → logprob: -11.600582122802734
    8. 'column' → logprob: -11.600582122802734
    9. 'sorted' → logprob: -11.850582122802734
    10. 'Increasing' → logprob: -11.850582122802734

Token 322: '
' (ID: 198)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.4375154972076416
    2. 'def' → logprob: -1.4375154972076416
    3. '   ' → logprob: -2.1875154972076416
    4. ')' → logprob: -2.4375154972076416
    5. ':' → logprob: -2.6875154972076416
    6. ',' → logprob: -2.6875154972076416
    7. '_' → logprob: -3.5625154972076416
    8. '[N' → logprob: -4.0625152587890625
    9. '[n' → logprob: -4.3125152587890625
    10. '<|end|>' → logprob: -4.3125152587890625

Token 323: '   ' (ID: 271)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0054327249526978
    2. '   ' → logprob: -1.8804327249526978
    3. '[' → logprob: -2.005432605743408
    4. '.' → logprob: -2.505432605743408
    5. 'def' → logprob: -3.005432605743408
    6. '[
' → logprob: -3.380432605743408
    7. '[n' → logprob: -3.755432605743408
    8. ',
' → logprob: -3.755432605743408
    9. '\' → logprob: -3.880432605743408
    10. ':' → logprob: -3.880432605743408

Token 324: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6603851318359375
    2. ',' → logprob: -1.7853851318359375
    3. '[' → logprob: -2.4103851318359375
    4. '\' → logprob: -2.9103851318359375
    5. ',
' → logprob: -3.4103851318359375
    6. '.' → logprob: -3.6603851318359375
    7. 'def' → logprob: -3.9103851318359375
    8. '\n' → logprob: -4.0353851318359375
    9. ')' → logprob: -4.4103851318359375
    10. '#' (adapté à ' #') → logprob: -4.7853851318359375

Token 325: ' as' (ID: 472)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.8048974871635437
    2. 'def' → logprob: -1.6798975467681885
    3. '   ' → logprob: -2.5548975467681885
    4. '#' → logprob: -3.0548975467681885
    5. '\' → logprob: -3.0548975467681885
    6. 'from' → logprob: -3.6798975467681885
    7. ' dp' → logprob: -3.6798975467681885
    8. '\n' → logprob: -3.9298975467681885
    9. ',' → logprob: -4.054897308349609
    10. 'import' → logprob: -4.429897308349609

Token 326: ' well' (ID: 1775)
  Prédit: ' well'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' well' → logprob: -0.8151943683624268
    2. ' the' → logprob: -2.3151943683624268
    3. ' column' → logprob: -2.3151943683624268
    4. 'well' → logprob: -2.5651943683624268
    5. ' a' → logprob: -2.8151943683624268
    6. ' follows' → logprob: -2.9401943683624268
    7. ' columns' → logprob: -3.8151943683624268
    8. ' numbers' → logprob: -4.065194129943848
    9. '[' → logprob: -4.190194129943848
    10. ' an' → logprob: -4.565194129943848

Token 327: ' as' (ID: 472)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.0184646844863892
    2. '[' → logprob: -1.6434646844863892
    3. ',' → logprob: -2.1434645652770996
    4. 'def' → logprob: -2.6434645652770996
    5. '.' → logprob: -2.8934645652770996
    6. ')' → logprob: -3.2684645652770996
    7. '   ' → logprob: -3.6434645652770996
    8. '
' → logprob: -4.0184645652771
    9. '\n' → logprob: -4.0184645652771
    10. '<|end|>' → logprob: -4.0184645652771

Token 328: ' the' (ID: 290)
  Prédit: ' row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' row' → logprob: -0.39897066354751587
    2. 'row' → logprob: -1.148970603942871
    3. ' flattened' → logprob: -4.773970603942871
    4. ' the' → logprob: -6.523970603942871
    5. 'flatten' → logprob: -7.898970603942871
    6. 'the' → logprob: -7.898970603942871
    7. '#' → logprob: -8.773970603942871
    8. '```' → logprob: -8.898970603942871
    9. ' ' → logprob: -9.023970603942871
    10. ' ' → logprob: -9.148970603942871

Token 329: ' rows' (ID: 13585)
  Prédit: ' matrix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' matrix' → logprob: -1.1707682609558105
    2. ' row' → logprob: -1.5457682609558105
    3. ' rows' → logprob: -1.7957682609558105
    4. 'row' → logprob: -2.1707682609558105
    5. 'matrix' → logprob: -2.5457682609558105
    6. ' flattened' → logprob: -2.6707682609558105
    7. 'rows' → logprob: -3.4207682609558105
    8. 'flatten' → logprob: -5.2957682609558105
    9. '#' → logprob: -5.9207682609558105
    10. ' code' → logprob: -6.0457682609558105

Token 330: '.
' (ID: 558)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.4305405616760254
    2. '<|end|>' → logprob: -1.8055405616760254
    3. '   ' → logprob: -2.0555405616760254
    4. ',' → logprob: -2.4305405616760254
    5. '.' → logprob: -2.5555405616760254
    6. '[' → logprob: -2.5555405616760254
    7. '#' → logprob: -2.5555405616760254
    8. ')' → logprob: -3.1805405616760254
    9. '[row' → logprob: -3.9305405616760254
    10. '[
' → logprob: -4.055540561676025

Token 331: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02553573250770569
    2. '
' → logprob: -4.775535583496094
    3. 'def' → logprob: -4.775535583496094
    4. '    
' → logprob: -6.400535583496094
    5. '```' → logprob: -6.525535583496094
    6. '\' → logprob: -6.775535583496094
    7. ',' → logprob: -6.775535583496094
    8. '\n' → logprob: -7.775535583496094
    9. ')' → logprob: -7.775535583496094
    10. '[' → logprob: -8.400535583496094

Token 332: ' #
' (ID: 21888)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0399252325296402
    2. 'def' → logprob: -4.5399250984191895
    3. 'dp' → logprob: -5.1649250984191895
    4. '
' → logprob: -5.2899250984191895
    5. '\' → logprob: -5.7899250984191895
    6. ',' → logprob: -5.9149250984191895
    7. ' 
' → logprob: -6.0399250984191895
    8. '    
' → logprob: -6.7899250984191895
    9. '#' → logprob: -7.0399250984191895
    10. '_' → logprob: -7.1649250984191895

Token 333: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.020953362807631493
    2. 'dp' → logprob: -4.520953178405762
    3. ' dp' → logprob: -5.020953178405762
    4. 'def' → logprob: -6.645953178405762
    5. '
' → logprob: -7.395953178405762
    6. '    
' → logprob: -7.770953178405762
    7. '    ' → logprob: -9.145953178405762
    8. '```' → logprob: -9.520953178405762
    9. 'import' → logprob: -9.645953178405762
    10. '#' → logprob: -9.770953178405762

Token 334: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.42289432883262634
    2. 'dp' → logprob: -1.2978943586349487
    3. ' dp' → logprob: -3.047894239425659
    4. ' max' → logprob: -5.422894477844238
    5. 'def' → logprob: -5.547894477844238
    6. '#' (adapté à ' #') → logprob: -5.797894477844238
    7. 'from' → logprob: -5.922894477844238
    8. 'max' → logprob: -6.047894477844238
    9. ' from' → logprob: -6.922894477844238
    10. ' #' → logprob: -7.047894477844238

Token 335: ' The' (ID: 623)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.3071277439594269
    2. 'def' → logprob: -1.6821277141571045
    3. 'from' → logprob: -3.5571277141571045
    4. '#' → logprob: -3.5571277141571045
    5. '   ' → logprob: -4.557127952575684
    6. 'length' → logprob: -6.182127952575684
    7. 'total' → logprob: -6.557127952575684
    8. ' dp' → logprob: -6.682127952575684
    9. 'n' → logprob: -6.932127952575684
    10. 'max' → logprob: -7.057127952575684

Token 336: ' conditions' (ID: 6409)
  Prédit: ' next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' next' → logprob: -0.10125067830085754
    2. ' code' → logprob: -3.226250648498535
    3. ' ' → logprob: -4.601250648498535
    4. ' dp' → logprob: -4.601250648498535
    5. ' problem' → logprob: -5.351250648498535
    6. '_' → logprob: -5.601250648498535
    7. 'next' → logprob: -5.726250648498535
    8. ' result' → logprob: -5.851250648498535
    9. ' answer' → logprob: -6.101250648498535
    10. ' rest' → logprob: -6.351250648498535

Token 337: ' imply' (ID: 68590)
  Prédit: ' are'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' are' → logprob: -1.401528239250183
    2. '#' → logprob: -1.901528239250183
    3. ' =' → logprob: -1.901528239250183
    4. '   ' → logprob: -2.0265283584594727
    5. ' continue' → logprob: -2.1515283584594727
    6. ' #' → logprob: -2.7765283584594727
    7. 'continue' → logprob: -3.7765283584594727
    8. '=' → logprob: -3.7765283584594727
    9. 'are' → logprob: -4.276528358459473
    10. '...' → logprob: -4.401528358459473

Token 338: ' the' (ID: 290)
  Prédit: ' that'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' that' → logprob: -0.5878928899765015
    2. '   ' → logprob: -0.9628928899765015
    3. '    ' → logprob: -3.337893009185791
    4. ' =' → logprob: -5.087893009185791
    5. 'def' → logprob: -5.462893009185791
    6. 'that' → logprob: -5.587893009185791
    7. ' we' → logprob: -6.337893009185791
    8. ' ' → logprob: -6.462893009185791
    9. ',' → logprob: -6.587893009185791
    10. ':' → logprob: -6.712893009185791

Token 339: ' matrix' (ID: 12248)
  Prédit: ' next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' next' → logprob: -0.5707905888557434
    2. ' dp' → logprob: -2.6957905292510986
    3. 'next' → logprob: -2.8207905292510986
    4. 'dp' → logprob: -3.0707905292510986
    5. ' problem' → logprob: -3.3207905292510986
    6. ' number' → logprob: -3.3207905292510986
    7. '#' → logprob: -3.4457905292510986
    8. ' total' → logprob: -4.070790767669678
    9. ' rest' → logprob: -4.070790767669678
    10. ' matrix' → logprob: -4.195790767669678

Token 340: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.38719233870506287
    2. 'is' → logprob: -2.1371922492980957
    3. '#' → logprob: -2.7621922492980957
    4. ' elements' → logprob: -4.137192249298096
    5. ' =' → logprob: -4.512192249298096
    6. ',' → logprob: -4.637192249298096
    7. 'elements' → logprob: -4.637192249298096
    8. ' must' → logprob: -4.762192249298096
    9. 'values' → logprob: -4.887192249298096
    10. '_values' → logprob: -5.137192249298096

Token 341: ' basically' (ID: 21924)
  Prédit: 'strict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'strict' → logprob: -1.1487312316894531
    2. 'filled' → logprob: -1.6487312316894531
    3. ' filled' → logprob: -1.8987312316894531
    4. ' a' → logprob: -2.273731231689453
    5. 'a' → logprob: -2.898731231689453
    6. ' strictly' → logprob: -3.273731231689453
    7. 'sorted' → logprob: -3.648731231689453
    8. ' always' → logprob: -4.273731231689453
    9. ' essentially' → logprob: -4.273731231689453
    10. '#' → logprob: -4.398731231689453

Token 342: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.6017358303070068
    2. 'a' → logprob: -1.4767358303070068
    3. ' filled' → logprob: -2.476735830307007
    4. 'filled' → logprob: -2.601735830307007
    5. ' an' → logprob: -3.601735830307007
    6. 'an' → logprob: -4.976736068725586
    7. 'strict' → logprob: -5.101736068725586
    8. 'sorted' → logprob: -5.226736068725586
    9. ' strictly' → logprob: -5.851736068725586
    10. ' sorted' → logprob: -6.101736068725586

Token 343: ' strictly' (ID: 38971)
  Prédit: 'strict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strict' → logprob: -0.23326712846755981
    2. 'single' → logprob: -3.233267068862915
    3. ' strictly' → logprob: -3.608267068862915
    4. ' single' → logprob: -4.108267307281494
    5. 'flatten' → logprob: -4.233267307281494
    6. 'N' → logprob: -4.483267307281494
    7. 'sequence' → logprob: -4.608267307281494
    8. 'standard' → logprob: -4.608267307281494
    9. 'Young' → logprob: -4.733267307281494
    10. 'matrix' → logprob: -4.858267307281494

Token 344: ' increasing' (ID: 11293)
  Prédit: ' increasing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' increasing' → logprob: -0.23369859158992767
    2. 'in' → logprob: -1.6086986064910889
    3. ' strictly' → logprob: -4.85869836807251
    4. 'strict' → logprob: -8.233698844909668
    5. ' sorted' → logprob: -9.608698844909668
    6. 'Increasing' → logprob: -10.358698844909668
    7. 'sorted' → logprob: -10.733698844909668
    8. '   ' → logprob: -10.983698844909668
    9. ' strict' → logprob: -11.233698844909668
    10. ' Increasing' → logprob: -11.483698844909668

Token 345: ' sequence' (ID: 16281)
  Prédit: ' sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sequence' → logprob: -0.5759878754615784
    2. 'sequence' → logprob: -0.8259878754615784
    3. '_sequence' → logprob: -11.075987815856934
    4. ' matrix' → logprob: -11.450987815856934
    5. 'matrix' → logprob: -11.825987815856934
    6. '```' → logprob: -12.700987815856934
    7. 'strict' → logprob: -13.325987815856934
    8. '
' → logprob: -13.450987815856934
    9. '_' → logprob: -13.575987815856934
    10. 'array' → logprob: -13.825987815856934

Token 346: ' (' (ID: 350)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.37873005867004395
    2. '_' → logprob: -1.878730058670044
    3. ',' → logprob: -3.003730058670044
    4. ' ' → logprob: -3.878730058670044
    5. '[
' → logprob: -4.003729820251465
    6. ' of' → logprob: -4.253729820251465
    7. '   ' → logprob: -4.503729820251465
    8. '<|end|>' → logprob: -4.628729820251465
    9. '.' → logprob: -5.253729820251465
    10. 'from' → logprob: -5.378729820251465

Token 347: 'length' (ID: 7914)
  Prédit: ' of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.4904918968677521
    2. '[' → logprob: -1.6154918670654297
    3. ')' → logprob: -2.8654918670654297
    4. ' ' → logprob: -3.1154918670654297
    5. ' composed' → logprob: -3.7404918670654297
    6. 'of' → logprob: -4.36549186706543
    7. ',' → logprob: -4.49049186706543
    8. '_' → logprob: -4.74049186706543
    9. 'from' → logprob: -4.99049186706543
    10. '.' → logprob: -5.74049186706543

Token 348: ' N' (ID: 478)
  Prédit: ' of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.9241739511489868
    2. ')' → logprob: -1.7991739511489868
    3. ' ' → logprob: -2.0491738319396973
    4. '_' → logprob: -2.7991738319396973
    5. 'of' → logprob: -3.1741738319396973
    6. '[N' → logprob: -3.2991738319396973
    7. ' N' → logprob: -3.4241738319396973
    8. '(N' → logprob: -3.6741738319396973
    9. '[' → logprob: -3.7991738319396973
    10. '   ' → logprob: -3.9241738319396973

Token 349: '*N' (ID: 107360)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.3004772663116455
    2. '*N' → logprob: -1.5504772663116455
    3. ' *' → logprob: -3.1754772663116455
    4. '**' → logprob: -6.175477027893066
    5. '*
' → logprob: -6.175477027893066
    6. ')' → logprob: -7.425477027893066
    7. '*)' → logprob: -8.050477027893066
    8. '*n' → logprob: -8.925477027893066
    9. ' *
' → logprob: -9.175477027893066
    10. ' ' → logprob: -10.300477027893066

Token 350: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05715394392609596
    2. ',' → logprob: -3.8071539402008057
    3. '[' → logprob: -4.307154178619385
    4. ' of' → logprob: -4.932154178619385
    5. ' )' → logprob: -5.057154178619385
    6. '+' → logprob: -6.557154178619385
    7. ' with' → logprob: -7.432154178619385
    8. ' continuing' → logprob: -7.432154178619385
    9. '```' → logprob: -8.057153701782227
    10. '),' → logprob: -8.307153701782227

Token 351: ' arranged' (ID: 36276)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7458488941192627
    2. ',' → logprob: -1.8708488941192627
    3. '_' → logprob: -2.2458488941192627
    4. '```' → logprob: -3.1208488941192627
    5. '[N' → logprob: -3.1208488941192627
    6. ')' → logprob: -3.2458488941192627
    7. '   ' → logprob: -3.6208488941192627
    8. '[
' → logprob: -3.6208488941192627
    9. '.' → logprob: -4.620848655700684
    10. 'def' → logprob: -4.745848655700684

Token 352: ' row' (ID: 5225)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.9118903279304504
    2. 'in' → logprob: -1.4118902683258057
    3. ' as' → logprob: -2.0368902683258057
    4. '_' → logprob: -2.5368902683258057
    5. '[' → logprob: -2.9118902683258057
    6. 'as' → logprob: -3.5368902683258057
    7. '```' → logprob: -4.161890506744385
    8. '   ' → logprob: -4.661890506744385
    9. ' of' → logprob: -5.036890506744385
    10. ',' → logprob: -6.036890506744385

Token 353: '-wise' (ID: 85729)
  Prédit: '-wise'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-wise' → logprob: -0.17117036879062653
    2. '-' → logprob: -2.421170473098755
    3. '_' → logprob: -3.046170473098755
    4. 'wise' → logprob: -5.171170234680176
    5. '+' → logprob: -5.421170234680176
    6. '_w' → logprob: -6.546170234680176
    7. ')' → logprob: -6.671170234680176
    8. '*' → logprob: -6.796170234680176
    9. '[-' → logprob: -6.921170234680176
    10. '-major' → logprob: -7.046170234680176

Token 354: '.
' (ID: 558)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7020782828330994
    2. '[N' → logprob: -1.7020783424377441
    3. '_' → logprob: -1.8270783424377441
    4. '```' → logprob: -3.327078342437744
    5. '[n' → logprob: -3.577078342437744
    6. '[
' → logprob: -3.827078342437744
    7. ',' → logprob: -4.827078342437744
    8. ')' → logprob: -4.827078342437744
    9. 'def' → logprob: -4.952078342437744
    10. '\' → logprob: -4.952078342437744

Token 355: '   ' (ID: 271)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.5085365772247314
    2. '_' → logprob: -2.0085365772247314
    3. ')' → logprob: -2.2585365772247314
    4. ',' → logprob: -2.5085365772247314
    5. '```' → logprob: -2.7585365772247314
    6. '[
' → logprob: -3.0085365772247314
    7. 'def' → logprob: -3.0085365772247314
    8. '\' → logprob: -3.1335365772247314
    9. '   ' → logprob: -3.2585365772247314
    10. '(
' → logprob: -3.5085365772247314

Token 356: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4053329825401306
    2. '\' → logprob: -2.2803330421447754
    3. '\n' → logprob: -3.4053330421447754
    4. 'def' → logprob: -3.4053330421447754
    5. '(
' → logprob: -3.9053330421447754
    6. ',' → logprob: -3.9053330421447754
    7. '[' → logprob: -4.030333042144775
    8. '```' → logprob: -4.155333042144775
    9. ',
' → logprob: -4.405333042144775
    10. '`' → logprob: -4.405333042144775

Token 357: ' After' (ID: 6311)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2702375650405884
    2. 'def' → logprob: -1.5202375650405884
    3. 'dp' → logprob: -1.7702375650405884
    4. '\' → logprob: -2.020237445831299
    5. '\n' → logprob: -2.770237445831299
    6. ')' → logprob: -4.270237445831299
    7. '```' → logprob: -4.395237445831299
    8. '
' → logprob: -4.395237445831299
    9. '(
' → logprob: -5.020237445831299
    10. ',' → logprob: -5.020237445831299

Token 358: ' assigning' (ID: 123177)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -1.0163490772247314
    2. 'the' → logprob: -1.0163490772247314
    3. ' the' → logprob: -2.3913490772247314
    4. ' all' → logprob: -2.3913490772247314
    5. 'that' → logprob: -2.8913490772247314
    6. 'def' → logprob: -4.016348838806152
    7. ' that' → logprob: -4.516348838806152
    8. 'this' → logprob: -7.016348838806152
    9. 'row' → logprob: -7.141348838806152
    10. ' N' → logprob: -7.141348838806152

Token 359: ',' (ID: 11)
  Prédit: 'values'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'values' → logprob: -0.8141336441040039
    2. ' the' → logprob: -1.689133644104004
    3. ' values' → logprob: -1.689133644104004
    4. ' numbers' → logprob: -2.814133644104004
    5. 'the' → logprob: -3.314133644104004
    6. 'numbers' → logprob: -3.564133644104004
    7. ' all' → logprob: -3.814133644104004
    8. 'all' → logprob: -4.439133644104004
    9. 'tokens' → logprob: -5.064133644104004
    10. ' tokens' → logprob: -5.439133644104004

Token 360: ' we' (ID: 581)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.383283793926239
    2. '   ' → logprob: -2.133283853530884
    3. ' we' → logprob: -2.383283853530884
    4. 'the' → logprob: -3.258283853530884
    5. ' for' → logprob: -5.133283615112305
    6. ' next' → logprob: -5.383283615112305
    7. ' return' → logprob: -5.508283615112305
    8. '#' → logprob: -5.508283615112305
    9. 'we' → logprob: -5.508283615112305
    10. ' 
' → logprob: -5.633283615112305

Token 361: ' check' (ID: 2371)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.0636115074157715
    2. 'need' → logprob: -1.8136115074157715
    3. 'continue' → logprob: -2.4386115074157715
    4. '   ' → logprob: -2.5636115074157715
    5. 'have' → logprob: -2.5636115074157715
    6. ' need' → logprob: -2.8136115074157715
    7. 'return' → logprob: -3.3136115074157715
    8. ' can' → logprob: -3.6886115074157715
    9. 'can' → logprob: -4.0636115074157715
    10. ' have' → logprob: -4.1886115074157715

Token 362: ' sum' (ID: 4215)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.1824699640274048
    2. 'if' → logprob: -2.4324698448181152
    3. 'the' → logprob: -2.5574698448181152
    4. '```' → logprob: -2.5574698448181152
    5. ' the' → logprob: -2.6824698448181152
    6. 'def' → logprob: -2.8074698448181152
    7. ' that' → logprob: -3.1824698448181152
    8. '   ' → logprob: -3.4324698448181152
    9. '<|end|>' → logprob: -3.4324698448181152
    10. ',' → logprob: -3.6824698448181152

Token 363: ' =' (ID: 314)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09688401222229004
    2. 'def' → logprob: -3.84688401222229
    3. '_' → logprob: -4.346883773803711
    4. ':' → logprob: -4.596883773803711
    5. ')' → logprob: -4.846883773803711
    6. ',' → logprob: -5.471883773803711
    7. '```' → logprob: -5.471883773803711
    8. '
' → logprob: -5.596883773803711
    9. '[' → logprob: -5.846883773803711
    10. '\' → logprob: -5.846883773803711

Token 364: ' S' (ID: 336)
  Prédit: ' S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' S' → logprob: -0.26747751235961914
    2. 'S' → logprob: -1.5174775123596191
    3. ' ' → logprob: -4.392477512359619
    4. ' ' → logprob: -7.267477512359619
    5. '```' → logprob: -7.892477512359619
    6. '  ' → logprob: -7.892477512359619
    7. '=' → logprob: -8.142477035522461
    8. ' =' → logprob: -8.892477035522461
    9. 'sum' → logprob: -8.892477035522461
    10. ''' → logprob: -9.017477035522461

Token 365: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.1566649675369263
    2. '   ' → logprob: -1.5316649675369263
    3. 'def' → logprob: -2.1566648483276367
    4. '```' → logprob: -2.9066648483276367
    5. '(N' → logprob: -3.2816648483276367
    6. '[' → logprob: -3.2816648483276367
    7. ',' → logprob: -3.5316648483276367
    8. '\n' → logprob: -3.9066648483276367
    9. '\' → logprob: -3.9066648483276367
    10. '
' → logprob: -4.031664848327637

Token 366: ' count' (ID: 3605)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7359300255775452
    2. ' ' → logprob: -1.8609299659729004
    3. '    ' → logprob: -1.9859299659729004
    4. ' 
' → logprob: -2.6109299659729004
    5. 'def' → logprob: -2.8609299659729004
    6. ')' → logprob: -4.6109299659729
    7. ' token' → logprob: -4.7359299659729
    8. '    
' → logprob: -4.8609299659729
    9. ' \' → logprob: -5.2359299659729
    10. ' ' → logprob: -5.3609299659729

Token 367: ' how' (ID: 1495)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.1232361793518066
    2. 'def' → logprob: -1.4982361793518066
    3. '_' → logprob: -2.1232361793518066
    4. '   ' → logprob: -2.2482361793518066
    5. ')' → logprob: -2.9982361793518066
    6. '(N' → logprob: -3.1232361793518066
    7. '(' → logprob: -3.3732361793518066
    8. ',' → logprob: -3.8732361793518066
    9. '[N' → logprob: -4.123236179351807
    10. ':' → logprob: -4.373236179351807

Token 368: ' many' (ID: 1991)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3973197340965271
    2. '    ' → logprob: -2.522319793701172
    3. ' many' → logprob: -2.897319793701172
    4. '_' → logprob: -3.147319793701172
    5. ' next' → logprob: -3.272319793701172
    6. '[' → logprob: -3.522319793701172
    7. ')' → logprob: -4.522319793701172
    8. ' +=' → logprob: -4.647319793701172
    9. '+' → logprob: -4.772319793701172
    10. '#' → logprob: -4.772319793701172

Token 369: ' sequences' (ID: 45665)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 370: ' satisfy' (ID: 35441)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7113473415374756
    2. '   ' → logprob: -1.8363473415374756
    3. 'def' → logprob: -2.0863473415374756
    4. '_' → logprob: -3.3363473415374756
    5. ':' → logprob: -3.4613473415374756
    6. '<|end|>' → logprob: -3.8363473415374756
    7. ')' → logprob: -3.9613473415374756
    8. '[N' → logprob: -3.9613473415374756
    9. '[n' → logprob: -4.211347579956055
    10. '(' → logprob: -4.211347579956055

Token 371: ' sum' (ID: 4215)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0893476009368896
    2. '_' → logprob: -1.4643476009368896
    3. ':' → logprob: -2.2143476009368896
    4. '[' → logprob: -2.3393476009368896
    5. 'def' → logprob: -2.5893476009368896
    6. ',' → logprob: -3.7143476009368896
    7. '(' → logprob: -3.8393476009368896
    8. '```' → logprob: -3.8393476009368896
    9. ')' → logprob: -4.214347839355469
    10. '(N' → logprob: -4.464347839355469

Token 372: '=S' (ID: 165586)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.44339707493782043
    2. 'def' → logprob: -1.943397045135498
    3. ':' → logprob: -2.818397045135498
    4. '[' → logprob: -3.443397045135498
    5. ',' → logprob: -4.193397045135498
    6. '(N' → logprob: -4.443397045135498
    7. '_' → logprob: -4.443397045135498
    8. ')' → logprob: -4.443397045135498
    9. '[N' → logprob: -4.693397045135498
    10. '```' → logprob: -4.818397045135498

Token 373: '.
' (ID: 558)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.07549250125885
    2. 'def' → logprob: -1.07549250125885
    3. '   ' → logprob: -2.3254923820495605
    4. '[' → logprob: -3.0754923820495605
    5. ',' → logprob: -3.3254923820495605
    6. '```' → logprob: -3.7004923820495605
    7. '\' → logprob: -4.3254923820495605
    8. ')' → logprob: -4.3254923820495605
    9. '(N' → logprob: -4.5754923820495605
    10. '_' → logprob: -4.5754923820495605

Token 374: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6454020142555237
    2. 'def' → logprob: -1.895401954650879
    3. '   ' → logprob: -2.895401954650879
    4. '[' → logprob: -2.895401954650879
    5. ',' → logprob: -3.145401954650879
    6. '_' → logprob: -3.145401954650879
    7. '(' → logprob: -3.770401954650879
    8. '
' → logprob: -4.020401954650879
    9. '```' → logprob: -4.020401954650879
    10. '\' → logprob: -4.395401954650879

Token 375: ' #
' (ID: 21888)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14065293967723846
    2. 'dp' → logprob: -2.265652894973755
    3. 'def' → logprob: -4.515653133392334
    4. '
' → logprob: -4.890653133392334
    5. ' dp' → logprob: -6.015653133392334
    6. '\' → logprob: -6.515653133392334
    7. '    
' → logprob: -7.390653133392334
    8. ',' → logprob: -7.765653133392334
    9. '```' → logprob: -7.890653133392334
    10. ' ' → logprob: -8.015652656555176

Token 376: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04538333788514137
    2. 'dp' → logprob: -3.5453834533691406
    3. ' dp' → logprob: -4.670383453369141
    4. '
' → logprob: -6.045383453369141
    5. 'def' → logprob: -6.420383453369141
    6. '    
' → logprob: -7.295383453369141
    7. '```' → logprob: -7.545383453369141
    8. ' 
' → logprob: -8.92038345336914
    9. '    ' → logprob: -9.42038345336914
    10. 'DP' → logprob: -9.54538345336914

Token 377: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.41551297903060913
    2. 'dp' → logprob: -1.165513038635254
    3. ' dp' → logprob: -3.790513038635254
    4. '
' → logprob: -5.665513038635254
    5. '    
' → logprob: -7.540513038635254
    6. 'def' → logprob: -7.540513038635254
    7. '```' → logprob: -8.790513038635254
    8. '#' (adapté à ' #') → logprob: -8.790513038635254
    9. 'n' → logprob: -9.415513038635254
    10. 'DP' → logprob: -9.540513038635254

Token 378: ' So' (ID: 2632)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.09377474337816238
    2. 'def' → logprob: -2.9687747955322266
    3. '   ' → logprob: -3.7187747955322266
    4. 'n' → logprob: -5.593774795532227
    5. 'from' → logprob: -5.593774795532227
    6. 'res' → logprob: -6.843774795532227
    7. 'length' → logprob: -7.343774795532227
    8. 'N' → logprob: -7.343774795532227
    9. 'total' → logprob: -7.718774795532227
    10. 'for' → logprob: -7.718774795532227

Token 379: ' problem' (ID: 4792)
  Prédit: ' dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.7669339179992676
    2. 'dp' → logprob: -1.0169339179992676
    3. '   ' → logprob: -2.7669339179992676
    4. ' length' → logprob: -3.1419339179992676
    5. 'length' → logprob: -3.8919339179992676
    6. 'def' → logprob: -4.641933917999268
    7. 'from' → logprob: -4.766933917999268
    8. ' from' → logprob: -5.141933917999268
    9. ' next' → logprob: -5.516933917999268
    10. ' n' → logprob: -6.016933917999268

Token 380: ' reduces' (ID: 38566)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7120636701583862
    2. '   ' → logprob: -1.8370636701583862
    3. 'def' → logprob: -2.462063789367676
    4. ' =' → logprob: -2.587063789367676
    5. '[' → logprob: -3.337063789367676
    6. '=' → logprob: -3.462063789367676
    7. '<|end|>' → logprob: -3.462063789367676
    8. ':' → logprob: -3.712063789367676
    9. ' ' → logprob: -4.587063789367676
    10. ')' → logprob: -4.712063789367676

Token 381: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.5279615521430969
    2. 'to' → logprob: -0.9029615521430969
    3. '=' → logprob: -5.902961730957031
    4. ':' → logprob: -7.527961730957031
    5. ' =' → logprob: -7.652961730957031
    6. '   ' → logprob: -7.902961730957031
    7. '_to' → logprob: -8.027961730957031
    8. '```' → logprob: -9.277961730957031
    9. ',' → logprob: -9.777961730957031
    10. '<|end|>' → logprob: -10.152961730957031

Token 382: ':
' (ID: 734)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.7046803832054138
    2. ' counting' → logprob: -0.9546803832054138
    3. 'def' → logprob: -2.5796804428100586
    4. 'dp' → logprob: -3.4546804428100586
    5. ' count' → logprob: -5.829680442810059
    6. ' dp' → logprob: -5.954680442810059
    7. 'f' → logprob: -5.954680442810059
    8. 'finding' → logprob: -6.704680442810059
    9. '   ' → logprob: -7.454680442810059
    10. '```' → logprob: -7.704680442810059

Token 383: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9052359461784363
    2. ' dp' → logprob: -1.155236005783081
    3. 'def' → logprob: -2.030236005783081
    4. 'dp' → logprob: -3.030236005783081
    5. ' next' → logprob: -3.280236005783081
    6. ' def' → logprob: -4.280235767364502
    7. ' count' → logprob: -4.530235767364502
    8. ' n' → logprob: -5.155235767364502
    9. 'count' → logprob: -5.280235767364502
    10. '    ' → logprob: -5.780235767364502

Token 384: ' #' (ID: 1069)
  Prédit: ' dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.2656365633010864
    2. '   ' → logprob: -2.390636444091797
    3. 'dp' → logprob: -2.515636444091797
    4. 'def' → logprob: -3.515636444091797
    5. ' def' → logprob: -5.390636444091797
    6. ' n' → logprob: -5.515636444091797
    7. ' next' → logprob: -5.515636444091797
    8. ' f' → logprob: -5.890636444091797
    9. ' #' → logprob: -6.140636444091797
    10. ' N' → logprob: -6.140636444091797

Token 385: ' Count' (ID: 6789)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.862309992313385
    2. 'def' → logprob: -1.4873099327087402
    3. ' dp' → logprob: -1.8623099327087402
    4. 'from' → logprob: -2.2373099327087402
    5. ' from' → logprob: -3.6123099327087402
    6. 'n' → logprob: -4.48730993270874
    7. ' def' → logprob: -4.98730993270874
    8. 'N' → logprob: -4.98730993270874
    9. ' n' → logprob: -4.98730993270874
    10. ' N' → logprob: -5.11230993270874

Token 386: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.10017269849777222
    2. '_' → logprob: -3.100172758102417
    3. 'the' → logprob: -3.725172758102417
    4. ' ' → logprob: -4.725172519683838
    5. ' next' → logprob: -5.725172519683838
    6. ' sequences' → logprob: -6.100172519683838
    7. ' _' → logprob: -6.350172519683838
    8. ' =' → logprob: -6.475172519683838
    9. '_sequences' → logprob: -6.475172519683838
    10. ' of' → logprob: -6.600172519683838

Token 387: ' number' (ID: 2086)
  Prédit: ' number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' number' → logprob: -0.05173088610172272
    2. 'number' → logprob: -3.1767308712005615
    3. ' next' → logprob: -5.051731109619141
    4. 'n' → logprob: -6.551731109619141
    5. ' ' → logprob: -7.426731109619141
    6. 'next' → logprob: -9.05173110961914
    7. ' n' → logprob: -9.55173110961914
    8. '  ' → logprob: -11.17673110961914
    9. 'num' → logprob: -11.92673110961914
    10. 'strict' → logprob: -11.92673110961914

Token 388: ' of' (ID: 328)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.01728001795709133
    2. '_token' → logprob: -5.142280101776123
    3. ' _' → logprob: -5.767280101776123
    4. '[' → logprob: -6.142280101776123
    5. ' ' → logprob: -6.642280101776123
    6. ')' → logprob: -7.267280101776123
    7. ''' → logprob: -7.392280101776123
    8. '#' → logprob: -7.517280101776123
    9. ' of' → logprob: -7.767280101776123
    10. ' token' → logprob: -8.142279624938965

Token 389: ' strictly' (ID: 38971)
  Prédit: ' strictly'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' strictly' → logprob: -0.47543302178382874
    2. 'strict' → logprob: -0.9754329919815063
    3. ' ways' → logprob: -7.600432872772217
    4. ' strict' → logprob: -7.850432872772217
    5. ' sequences' → logprob: -8.850433349609375
    6. 'ways' → logprob: -9.350433349609375
    7. 'se' → logprob: -9.850433349609375
    8. ' N' → logprob: -10.100433349609375
    9. 'length' → logprob: -10.225433349609375
    10. 'N' → logprob: -10.475433349609375

Token 390: ' increasing' (ID: 11293)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.052162427455186844
    2. ' _' → logprob: -3.5521624088287354
    3. ' increasing' → logprob: -4.1771626472473145
    4. '_in' → logprob: -5.1771626472473145
    5. '_increment' → logprob: -7.5521626472473145
    6. 'Increasing' → logprob: -8.052162170410156
    7. ' Increasing' → logprob: -9.177162170410156
    8. '\' → logprob: -10.677162170410156
    9. '+' → logprob: -11.427162170410156
    10. '_inc' → logprob: -11.427162170410156

Token 391: ' sequences' (ID: 45665)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5505998730659485
    2. ' sequences' → logprob: -1.5505998134613037
    3. '_sequences' → logprob: -2.0505998134613037
    4. 'sequence' → logprob: -3.4255998134613037
    5. ' sequence' → logprob: -3.6755998134613037
    6. '_sequence' → logprob: -4.175600051879883
    7. ' _' → logprob: -5.050600051879883
    8. 'se' → logprob: -6.550600051879883
    9. ' ' → logprob: -7.675600051879883
    10. '[' → logprob: -7.800600051879883

Token 392: ' of' (ID: 328)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7808900475502014
    2. '[' → logprob: -0.9058900475502014
    3. ' of' → logprob: -3.0308899879455566
    4. '(' → logprob: -3.7808899879455566
    5. 'of' → logprob: -4.155889987945557
    6. '```' → logprob: -4.280889987945557
    7. 'from' → logprob: -4.655889987945557
    8. '[
' → logprob: -5.530889987945557
    9. ',' → logprob: -6.030889987945557
    10. '
' → logprob: -6.280889987945557

Token 393: ' length' (ID: 5517)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.04627227783203125
    2. ' length' → logprob: -3.7962722778320312
    3. 'N' → logprob: -3.9212722778320312
    4. ' N' → logprob: -6.046272277832031
    5. 'inte' → logprob: -8.546272277832031
    6. 'numbers' → logprob: -9.296272277832031
    7. 'elements' → logprob: -9.296272277832031
    8. ' integers' → logprob: -10.046272277832031
    9. ' ' → logprob: -10.921272277832031
    10. 'tokens' → logprob: -11.171272277832031

Token 394: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.2523813545703888
    2. ' N' → logprob: -2.1273813247680664
    3. '(N' → logprob: -2.8773813247680664
    4. ' (' → logprob: -3.5023813247680664
    5. '(' → logprob: -4.502381324768066
    6. ' ' → logprob: -6.627381324768066
    7. ' \(' → logprob: -6.877381324768066
    8. '`' → logprob: -6.877381324768066
    9. '\(' → logprob: -7.252381324768066
    10. '1' → logprob: -7.627381324768066

Token 395: '*N' (ID: 107360)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.16062398254871368
    2. '_' → logprob: -2.9106240272521973
    3. '[' → logprob: -3.1606240272521973
    4. '*N' → logprob: -4.785624027252197
    5. '*
' → logprob: -4.910624027252197
    6. '\' → logprob: -4.910624027252197
    7. '**' → logprob: -5.035624027252197
    8. ',' → logprob: -5.160624027252197
    9. '[N' → logprob: -6.160624027252197
    10. ' *' → logprob: -6.160624027252197

Token 396: ' choosing' (ID: 20296)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.7874999046325684
    2. '[' → logprob: -1.4124999046325684
    3. '_' → logprob: -1.6624999046325684
    4. ',' → logprob: -3.7874999046325684
    5. '(' → logprob: -4.162499904632568
    6. '`' → logprob: -4.412499904632568
    7. 'with' → logprob: -4.662499904632568
    8. 'from' → logprob: -4.787499904632568
    9. 'def' → logprob: -5.037499904632568
    10. '[
' → logprob: -5.537499904632568

Token 397: ' numbers' (ID: 8663)
  Prédit: ' from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' from' → logprob: -0.3759673237800598
    2. 'from' → logprob: -1.875967264175415
    3. ' elements' → logprob: -2.250967264175415
    4. ' numbers' → logprob: -3.500967264175415
    5. ' the' → logprob: -5.125967502593994
    6. ' ' → logprob: -5.250967502593994
    7. ' integers' → logprob: -5.875967502593994
    8. 'elements' → logprob: -6.000967502593994
    9. ' one' → logprob: -6.250967502593994
    10. '```' → logprob: -6.250967502593994

Token 398: ' from' (ID: 591)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.2381175309419632
    2. ' from' → logprob: -2.2381174564361572
    3. '[' → logprob: -3.1131174564361572
    4. '_' → logprob: -3.7381174564361572
    5. '```' → logprob: -3.8631174564361572
    6. '[next' → logprob: -5.988117694854736
    7. '[from' → logprob: -6.363117694854736
    8. '+' → logprob: -6.488117694854736
    9. '[i' → logprob: -6.988117694854736
    10. '_{' → logprob: -7.238117694854736

Token 399: ' [' (ID: 723)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.9606786966323853
    2. 'range' → logprob: -1.3356786966323853
    3. '1' → logprob: -1.4606786966323853
    4. ' ' → logprob: -2.9606785774230957
    5. '[' → logprob: -3.2106785774230957
    6. ' [' → logprob: -4.460678577423096
    7. ' M' → logprob: -4.710678577423096
    8. 'M' → logprob: -5.960678577423096
    9. ' {' → logprob: -6.335678577423096
    10. '{' → logprob: -6.585678577423096

Token 400: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03806685656309128
    2. ' ' → logprob: -3.288066864013672
    3. ' M' → logprob: -11.913066864013672
    4. 'M' → logprob: -12.038066864013672
    5. ',' → logprob: -12.163066864013672
    6. '   ' → logprob: -13.288066864013672
    7. '```' → logprob: -13.413066864013672
    8. '`' → logprob: -13.663066864013672
    9. 'range' → logprob: -14.038066864013672
    10. ' ]' → logprob: -14.788066864013672

Token 401: '..' (ID: 485)
  Prédit: '..'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '..' → logprob: -0.02055543102324009
    2. ' ..' → logprob: -3.8955554962158203
    3. '...' → logprob: -12.39555549621582
    4. '..
' → logprob: -12.77055549621582
    5. ',' → logprob: -13.27055549621582
    6. ' ' → logprob: -13.39555549621582
    7. '
' → logprob: -14.14555549621582
    8. ' ...' → logprob: -14.39555549621582
    9. ' ..
' → logprob: -14.52055549621582
    10. '.' → logprob: -15.27055549621582

Token 402: 'M' (ID: 44)
  Prédit: 'M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.4288133978843689
    2. ' M' → logprob: -1.0538134574890137
    3. ' ' → logprob: -9.303812980651855
    4. ',' → logprob: -11.803812980651855
    5. ' ' → logprob: -12.428812980651855
    6. '```' → logprob: -13.553812980651855
    7. '1' → logprob: -13.678812980651855
    8. '   ' → logprob: -13.678812980651855
    9. '`' → logprob: -14.053812980651855
    10. '
' → logprob: -14.053812980651855

Token 403: '],' (ID: 2155)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.10569824278354645
    2. '+' → logprob: -2.605698347091675
    3. '],' → logprob: -4.355698108673096
    4. ',' → logprob: -5.480698108673096
    5. ']+' → logprob: -5.605698108673096
    6. ' +' → logprob: -6.980698108673096
    7. ')' → logprob: -7.105698108673096
    8. '])' → logprob: -7.230698108673096
    9. '```' → logprob: -7.230698108673096
    10. '[' → logprob: -7.480698108673096

Token 404: ' sum' (ID: 4215)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' 
' → logprob: -1.223343014717102
    2. ''' → logprob: -1.473343014717102
    3. ' with' → logprob: -2.2233428955078125
    4. ' \' → logprob: -2.7233428955078125
    5. '<|end|>' → logprob: -2.8483428955078125
    6. '
' → logprob: -3.5983428955078125
    7. ' ' → logprob: -3.5983428955078125
    8. '"' → logprob: -3.5983428955078125
    9. '  
' → logprob: -3.7233428955078125
    10. '#' → logprob: -4.0983428955078125

Token 405: ' S' (ID: 336)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.98984694480896
    2. '=' → logprob: -1.23984694480896
    3. '_' → logprob: -1.86484694480896
    4. '+' → logprob: -3.11484694480896
    5. ' +' → logprob: -3.23984694480896
    6. ' +=' → logprob: -3.36484694480896
    7. '   ' → logprob: -4.114847183227539
    8. '```' → logprob: -4.114847183227539
    9. ')' → logprob: -4.614847183227539
    10. ',' → logprob: -5.364847183227539

Token 406: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5798053741455078
    2. 'def' → logprob: -1.4548053741455078
    3. 'dp' → logprob: -3.079805374145508
    4. ':' → logprob: -3.329805374145508
    5. '
' → logprob: -3.704805374145508
    6. '```' → logprob: -4.454805374145508
    7. ':
' → logprob: -4.579805374145508
    8. '\' → logprob: -4.954805374145508
    9. ',' → logprob: -5.079805374145508
    10. ')' → logprob: -5.204805374145508

Token 407: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8231853246688843
    2. '   ' → logprob: -1.9481853246688843
    3. 'def' → logprob: -2.198185443878174
    4. ':
' → logprob: -2.573185443878174
    5. '\' → logprob: -2.823185443878174
    6. '\n' → logprob: -3.573185443878174
    7. '
' → logprob: -3.698185443878174
    8. '```' → logprob: -3.698185443878174
    9. '(
' → logprob: -4.573185443878174
    10. '[' → logprob: -5.198185443878174

Token 408: ' #
' (ID: 21888)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3738919198513031
    2. 'def' → logprob: -2.373891830444336
    3. '\' → logprob: -2.998891830444336
    4. 'dp' → logprob: -3.123891830444336
    5. ':' → logprob: -3.498891830444336
    6. '
' → logprob: -3.748891830444336
    7. '\n' → logprob: -4.498891830444336
    8. '```' → logprob: -4.748891830444336
    9. ':
' → logprob: -4.998891830444336
    10. ',' → logprob: -5.373891830444336

Token 409: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2172974944114685
    2. 'dp' → logprob: -2.0922975540161133
    3. '
' → logprob: -3.9672975540161133
    4. '```' → logprob: -4.092297554016113
    5. ' dp' → logprob: -4.467297554016113
    6. 'def' → logprob: -4.717297554016113
    7. '\' → logprob: -5.217297554016113
    8. '\n' → logprob: -5.967297554016113
    9. '    
' → logprob: -6.217297554016113
    10. ' 
' → logprob: -6.967297554016113

Token 410: ' #
' (ID: 21888)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.30701160430908203
    2. '   ' → logprob: -1.557011604309082
    3. 'def' → logprob: -4.182011604309082
    4. 'length' → logprob: -4.432011604309082
    5. 'for' → logprob: -5.307011604309082
    6. ' dp' → logprob: -5.432011604309082
    7. 'if' → logprob: -5.432011604309082
    8. '#' → logprob: -5.557011604309082
    9. 'n' → logprob: -6.432011604309082
    10. 'max' → logprob: -7.057011604309082

Token 411: '   ' (ID: 271)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.7138765454292297
    2. '   ' → logprob: -0.8388765454292297
    3. 'def' → logprob: -2.963876485824585
    4. ' dp' → logprob: -4.338876724243164
    5. '```' → logprob: -5.588876724243164
    6. '
' → logprob: -5.963876724243164
    7. '_dp' → logprob: -7.338876724243164
    8. '\' → logprob: -7.338876724243164
    9. 'next' → logprob: -7.838876724243164
    10. 'DP' → logprob: -7.838876724243164

Token 412: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.08045491576194763
    2. 'from' → logprob: -3.3304548263549805
    3. '   ' → logprob: -3.5804548263549805
    4. 'length' → logprob: -5.0804548263549805
    5. 'def' → logprob: -6.2054548263549805
    6. '#' (adapté à ' #') → logprob: -6.2054548263549805
    7. 'L' → logprob: -6.5804548263549805
    8. 'max' → logprob: -7.2054548263549805
    9. 'total' → logprob: -8.08045482635498
    10. 'if' → logprob: -8.70545482635498

Token 413: ' Approach' (ID: 86383)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.016702700406312943
    2. '#' → logprob: -5.641702651977539
    3. 'from' → logprob: -5.641702651977539
    4. 'max' → logprob: -5.641702651977539
    5. 'length' → logprob: -5.641702651977539
    6. 'L' → logprob: -7.141702651977539
    7. 'def' → logprob: -7.391702651977539
    8. 'total' → logprob: -7.391702651977539
    9. 'if' → logprob: -8.766702651977539
    10. 'K' → logprob: -10.266702651977539

Token 414: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5288093090057373
    2. ' =' → logprob: -1.4038093090057373
    3. 'dp' → logprob: -2.7788093090057373
    4. '   ' → logprob: -3.0288093090057373
    5. '=' → logprob: -3.4038093090057373
    6. '```' → logprob: -4.403809547424316
    7. ':
' → logprob: -6.028809547424316
    8. ' dp' → logprob: -6.278809547424316
    9. ' :' → logprob: -6.903809547424316
    10. 'n' → logprob: -7.278809547424316

Token 415: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05852799862623215
    2. '```' → logprob: -3.808527946472168
    3. 'dp' → logprob: -3.933527946472168
    4. ' dp' → logprob: -4.433527946472168
    5. ' for' → logprob: -6.433527946472168
    6. 'for' → logprob: -8.183527946472168
    7. '``' → logprob: -8.433527946472168
    8. 'def' → logprob: -8.558527946472168
    9. 'from' → logprob: -8.933527946472168
    10. ' from' → logprob: -9.183527946472168

Token 416: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.37252432107925415
    2. ' dp' → logprob: -2.2475242614746094
    3. '   ' → logprob: -2.4975242614746094
    4. 'from' → logprob: -3.7475242614746094
    5. ' for' → logprob: -3.8725242614746094
    6. '#' (adapté à ' #') → logprob: -3.9975242614746094
    7. ' from' → logprob: -3.9975242614746094
    8. 'for' → logprob: -4.622524261474609
    9. ' max' → logprob: -4.622524261474609
    10. ' res' → logprob: -5.622524261474609

Token 417: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.26799413561820984
    2. '#' → logprob: -2.1429941654205322
    3. 'from' → logprob: -3.0179941654205322
    4. 'max' → logprob: -4.017993927001953
    5. ' dp' → logprob: -4.017993927001953
    6. 'for' → logprob: -5.142993927001953
    7. 'prev' → logprob: -5.392993927001953
    8. '   ' → logprob: -5.517993927001953
    9. ' from' → logprob: -5.517993927001953
    10. ' max' → logprob: -6.017993927001953

Token 418: '[pos' (ID: 48272)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6567032933235168
    2. '=' → logprob: -1.031703233718872
    3. '_' → logprob: -2.531703233718872
    4. '[' → logprob: -3.156703233718872
    5. ' ' → logprob: -7.156703472137451
    6. '   ' → logprob: -8.031702995300293
    7. ')' → logprob: -8.406702995300293
    8. ']' → logprob: -9.031702995300293
    9. '[i' → logprob: -9.031702995300293
    10. '[
' → logprob: -9.281702995300293

Token 419: '][' (ID: 2696)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8887019157409668
    2. ' =' → logprob: -1.1387019157409668
    3. '[' → logprob: -2.513701915740967
    4. ')' → logprob: -3.013701915740967
    5. '   ' → logprob: -3.138701915740967
    6. ']' → logprob: -3.263701915740967
    7. '][' → logprob: -3.638701915740967
    8. '[pos' → logprob: -4.638701915740967
    9. '[
' → logprob: -5.638701915740967
    10. '[i' → logprob: -5.763701915740967

Token 420: 'prev' (ID: 15969)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.08660030364990234
    2. 'length' → logprob: -2.7116003036499023
    3. 's' → logprob: -5.211600303649902
    4. 'prev' → logprob: -5.336600303649902
    5. 'curr' → logprob: -6.211600303649902
    6. 'current' → logprob: -6.586600303649902
    7. 'count' → logprob: -7.711600303649902
    8. 'value' → logprob: -8.086600303649902
    9. 'val' → logprob: -8.086600303649902
    10. 'k' → logprob: -8.461600303649902

Token 421: '][' (ID: 2696)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.33068734407424927
    2. '_val' → logprob: -2.2056872844696045
    3. '][' → logprob: -2.5806872844696045
    4. '_value' → logprob: -3.0806872844696045
    5. '+' → logprob: -3.7056872844696045
    6. '_sum' → logprob: -4.330687522888184
    7. ']_' → logprob: -5.580687522888184
    8. '_num' → logprob: -6.455687522888184
    9. '_' → logprob: -6.455687522888184
    10. '][_' → logprob: -6.830687522888184

Token 422: 'sum' (ID: 12298)
  Prédit: 'sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.002681486774235964
    2. 's' → logprob: -6.877681255340576
    3. 'curr' → logprob: -6.877681255340576
    4. 'current' → logprob: -8.377681732177734
    5. 'cur' → logprob: -9.252681732177734
    6. ']' → logprob: -9.252681732177734
    7. ' sum' → logprob: -9.627681732177734
    8. 'total' → logprob: -10.002681732177734
    9. 'summ' → logprob: -11.002681732177734
    10. 'length' → logprob: -11.127681732177734

Token 423: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.009463044814765453
    2. '+' → logprob: -5.259462833404541
    3. ']=' → logprob: -5.759462833404541
    4. '=' → logprob: -8.1344633102417
    5. '][' → logprob: -8.2594633102417
    6. ' ]' → logprob: -9.0094633102417
    7. '   ' → logprob: -9.0094633102417
    8. '[' → logprob: -9.5094633102417
    9. ']+=' → logprob: -9.8844633102417
    10. ']+' → logprob: -10.2594633102417

Token 424: ' :' (ID: 712)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.4636910557746887
    2. '=' → logprob: -1.338690996170044
    3. ' =' → logprob: -2.338690996170044
    4. ']' → logprob: -5.713691234588623
    5. '_' → logprob: -6.338691234588623
    6. ',' → logprob: -6.838691234588623
    7. '   ' → logprob: -6.963691234588623
    8. '\[' → logprob: -6.963691234588623
    9. ')' → logprob: -7.463691234588623
    10. '.' → logprob: -7.588691234588623

Token 425: ' number' (ID: 2086)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.36262187361717224
    2. '=' → logprob: -2.362621784210205
    3. ' =' → logprob: -3.237621784210205
    4. ' [' → logprob: -3.362621784210205
    5. '0' → logprob: -3.487621784210205
    6. '[]' → logprob: -4.112621784210205
    7. ' ' → logprob: -4.237621784210205
    8. 'import' → logprob: -4.362621784210205
    9. '[int' → logprob: -4.362621784210205
    10. '{' → logprob: -4.862621784210205

Token 426: ' of' (ID: 328)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6559278964996338
    2. ']' → logprob: -1.2809278964996338
    3. '[' → logprob: -1.9059278964996338
    4. ' of' → logprob: -4.155927658081055
    5. 'of' → logprob: -4.405927658081055
    6. ')' → logprob: -4.530927658081055
    7. ' =' → logprob: -5.530927658081055
    8. '<|end|>' → logprob: -5.905927658081055
    9. '[
' → logprob: -6.530927658081055
    10. '_' → logprob: -6.905927658081055

Token 427: ' strictly' (ID: 38971)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.48681148886680603
    2. '<|end|>' → logprob: -1.1118115186691284
    3. '[' → logprob: -3.736811399459839
    4. '<|end|>' → logprob: -4.486811637878418
    5. ')' → logprob: -5.236811637878418
    6. ' ' → logprob: -5.861811637878418
    7. ']' → logprob: -6.236811637878418
    8. '  ' → logprob: -6.236811637878418
    9. 's' → logprob: -6.861811637878418
    10. '_sequences' → logprob: -6.986811637878418

Token 428: ' increasing' (ID: 11293)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.022730544209480286
    2. '[' → logprob: -4.397730350494385
    3. ']' → logprob: -5.522730350494385
    4. '>' → logprob: -6.147730350494385
    5. '_' → logprob: -7.022730350494385
    6. ')' → logprob: -7.897730350494385
    7. '=[]' → logprob: -8.147730827331543
    8. ']=' → logprob: -8.272730827331543
    9. '+=' → logprob: -8.397730827331543
    10. '>=' → logprob: -8.397730827331543

Token 429: ' sequences' (ID: 45665)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.47412487864494324
    2. '[' → logprob: -1.5991249084472656
    3. '_sequences' → logprob: -2.2241249084472656
    4. ' sequences' → logprob: -3.4741249084472656
    5. '_sequence' → logprob: -4.349124908447266
    6. ']' → logprob: -4.349124908447266
    7. ')' → logprob: -6.224124908447266
    8. '_choices' → logprob: -6.474124908447266
    9. 'sequence' → logprob: -6.724124908447266
    10. '   ' → logprob: -6.974124908447266

Token 430: ' of' (ID: 328)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.018743528053164482
    2. '[pos' → logprob: -4.643743515014648
    3. '\[' → logprob: -5.393743515014648
    4. '[
' → logprob: -6.768743515014648
    5. '   ' → logprob: -7.393743515014648
    6. '=' → logprob: -7.393743515014648
    7. ']' → logprob: -8.268743515014648
    8. '[int' → logprob: -8.393743515014648
    9. '_' → logprob: -8.518743515014648
    10. '[position' → logprob: -8.643743515014648

Token 431: ' length' (ID: 5517)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.003646518336609006
    2. 'pos' → logprob: -5.878646373748779
    3. ' length' → logprob: -7.253646373748779
    4. '(length' → logprob: -10.003646850585938
    5. 'len' → logprob: -10.628646850585938
    6. 'positions' → logprob: -11.128646850585938
    7. 'position' → logprob: -11.253646850585938
    8. 'leng' → logprob: -11.753646850585938
    9. '[length' → logprob: -12.128646850585938
    10. '```' → logprob: -12.378646850585938

Token 432: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.8166728615760803
    2. '[pos' → logprob: -1.0666728019714355
    3. ' pos' → logprob: -2.3166728019714355
    4. '(pos' → logprob: -3.4416728019714355
    5. '=' → logprob: -4.0666728019714355
    6. ' [' → logprob: -4.3166728019714355
    7. ' ' → logprob: -4.3166728019714355
    8. ' (' → logprob: -5.4416728019714355
    9. ' =' → logprob: -5.4416728019714355
    10. '[' → logprob: -5.5666728019714355

Token 433: ',' (ID: 11)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.9112100601196289
    2. '+' → logprob: -1.036210060119629
    3. '][' → logprob: -2.536210060119629
    4. '=' → logprob: -3.161210060119629
    5. ']' → logprob: -3.161210060119629
    6. '[
' → logprob: -3.661210060119629
    7. '   ' → logprob: -4.661210060119629
    8. '_' → logprob: -4.911210060119629
    9. '```' → logprob: -5.161210060119629
    10. '\[' → logprob: -5.286210060119629

Token 434: ' last' (ID: 2174)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7202537059783936
    2. 'prev' → logprob: -1.9702537059783936
    3. '<|end|>' → logprob: -2.4702537059783936
    4. ' prev' → logprob: -2.7202537059783936
    5. '    ' → logprob: -2.8452537059783936
    6. '[' → logprob: -3.5952537059783936
    7. '=' → logprob: -3.8452537059783936
    8. ' next' → logprob: -4.095253944396973
    9. '...' → logprob: -4.095253944396973
    10. ')' → logprob: -4.595253944396973

Token 435: ' number' (ID: 2086)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3743841350078583
    2. '_token' → logprob: -1.4993841648101807
    3. '_val' → logprob: -2.7493841648101807
    4. '_num' → logprob: -4.249383926391602
    5. '_value' → logprob: -5.374383926391602
    6. ' _' → logprob: -6.749383926391602
    7. '_element' → logprob: -7.249383926391602
    8. '_number' → logprob: -7.624383926391602
    9. '_ch' → logprob: -7.749383926391602
    10. '_choice' → logprob: -7.999383926391602

Token 436: ' prev' (ID: 10258)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6708053946495056
    2. ' +' → logprob: -2.0458054542541504
    3. '_' → logprob: -2.2958054542541504
    4. '=' → logprob: -2.7958054542541504
    5. ',' → logprob: -3.1708054542541504
    6. ']' → logprob: -3.2958054542541504
    7. ' =' → logprob: -3.7958054542541504
    8. ')' → logprob: -3.9208054542541504
    9. '][' → logprob: -4.17080545425415
    10. ' chosen' → logprob: -4.42080545425415

Token 437: ',' (ID: 11)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.9765719175338745
    2. ']' → logprob: -1.2265719175338745
    3. '][' → logprob: -1.4765719175338745
    4. '   ' → logprob: -3.476572036743164
    5. '[
' → logprob: -4.601572036743164
    6. '[next' → logprob: -4.601572036743164
    7. '<|end|>' → logprob: -4.601572036743164
    8. '[pos' → logprob: -4.851572036743164
    9. '[]' → logprob: -4.976572036743164
    10. '[token' → logprob: -5.726572036743164

Token 438: ' and' (ID: 326)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.44507718086242676
    2. ' ' → logprob: -2.4450771808624268
    3. '=' → logprob: -3.5700771808624268
    4. ')' → logprob: -3.5700771808624268
    5. '   ' → logprob: -3.6950771808624268
    6. ' next' → logprob: -3.9450771808624268
    7. '[]' → logprob: -3.9450771808624268
    8. '```' → logprob: -3.9450771808624268
    9. ' =' → logprob: -4.195076942443848
    10. ' ]' → logprob: -4.445076942443848

Token 439: ' sum' (ID: 4215)
  Prédit: ' sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.28190383315086365
    2. 'sum' → logprob: -1.406903862953186
    3. ' next' → logprob: -8.406904220581055
    4. ' current' → logprob: -8.531904220581055
    5. 'prev' → logprob: -9.781904220581055
    6. ' ' → logprob: -10.031904220581055
    7. ' prev' → logprob: -10.281904220581055
    8. 'next' → logprob: -10.406904220581055
    9. ' total' → logprob: -10.656904220581055
    10. 'current' → logprob: -10.781904220581055

Token 440: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.8445326089859009
    2. '=' → logprob: -1.2195326089859009
    3. ')' → logprob: -2.8445324897766113
    4. ']' → logprob: -2.9695324897766113
    5. '[pos' → logprob: -3.4695324897766113
    6. ' =' → logprob: -3.7195324897766113
    7. '[
' → logprob: -3.8445324897766113
    8. '   ' → logprob: -3.9695324897766113
    9. '_' → logprob: -4.094532489776611
    10. '```' → logprob: -4.844532489776611

Token 441: ' sum' (ID: 4215)
  Prédit: ' sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.31408223509788513
    2. 'sum' → logprob: -1.3140822649002075
    3. ' s' → logprob: -8.564082145690918
    4. ' ' → logprob: -9.064082145690918
    5. 's' → logprob: -9.189082145690918
    6. '(sum' → logprob: -9.314082145690918
    7. ' pos' → logprob: -9.564082145690918
    8. 'pos' → logprob: -9.814082145690918
    9. ' S' → logprob: -10.689082145690918
    10. ' prev' → logprob: -10.814082145690918

Token 442: '
' (ID: 198)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.09238121658563614
    2. ']' → logprob: -3.842381238937378
    3. '_' → logprob: -3.967381238937378
    4. '[
' → logprob: -4.217381000518799
    5. '   ' → logprob: -4.592381000518799
    6. '=' → logprob: -4.842381000518799
    7. '[pos' → logprob: -5.717381000518799
    8. ')' → logprob: -5.967381000518799
    9. '\[' → logprob: -6.092381000518799
    10. '][' → logprob: -6.592381000518799

Token 443: '   ' (ID: 271)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.2094821035861969
    2. '   ' → logprob: -2.209482192993164
    3. ':' → logprob: -4.084482192993164
    4. ']' → logprob: -4.209482192993164
    5. 'def' → logprob: -4.209482192993164
    6. '=' → logprob: -4.834482192993164
    7. '[
' → logprob: -5.209482192993164
    8. '```' → logprob: -5.709482192993164
    9. ' =' → logprob: -6.084482192993164
    10. '_' → logprob: -6.209482192993164

Token 444: ' #
' (ID: 21888)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.34392499923706055
    2. '   ' → logprob: -2.8439249992370605
    3. 'def' → logprob: -2.9689249992370605
    4. ':' → logprob: -3.0939249992370605
    5. '=' → logprob: -3.2189249992370605
    6. ']' → logprob: -3.7189249992370605
    7. ',' → logprob: -4.2189249992370605
    8. '_' → logprob: -4.7189249992370605
    9. ' =' → logprob: -4.8439249992370605
    10. '.' → logprob: -5.0939249992370605

Token 445: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.665284276008606
    2. 'def' → logprob: -1.290284276008606
    3. ' ' → logprob: -3.0402841567993164
    4. '[' → logprob: -3.2902841567993164
    5. ',' → logprob: -4.290284156799316
    6. '    ' → logprob: -4.540284156799316
    7. '"' → logprob: -4.540284156799316
    8. '=' → logprob: -4.790284156799316
    9. ' =' → logprob: -4.790284156799316
    10. '\t' → logprob: -5.040284156799316

Token 446: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2990510165691376
    2. 'def' → logprob: -1.79905104637146
    3. 'dp' → logprob: -3.42405104637146
    4. 'for' → logprob: -3.92405104637146
    5. ' for' → logprob: -4.299050807952881
    6. ' ' → logprob: -5.299050807952881
    7. '#' (adapté à ' #') → logprob: -5.799050807952881
    8. ')' → logprob: -5.924050807952881
    9. ' dp' → logprob: -6.424050807952881
    10. '    ' → logprob: -6.549050807952881

Token 447: ' But' (ID: 3072)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.9043537974357605
    2. '   ' → logprob: -1.0293538570404053
    3. 'for' → logprob: -2.1543538570404053
    4. ':' → logprob: -3.4043538570404053
    5. 'dp' → logprob: -3.4043538570404053
    6. ' for' → logprob: -4.029353618621826
    7. 'return' → logprob: -4.404353618621826
    8. ' ' → logprob: -5.529353618621826
    9. '#' → logprob: -5.529353618621826
    10. '    ' → logprob: -5.779353618621826

Token 448: ' M' (ID: 391)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.7009576559066772
    2. '#' → logprob: -2.075957775115967
    3. ' ' → logprob: -2.450957775115967
    4. '[' → logprob: -2.700957775115967
    5. ' ' → logprob: -3.450957775115967
    6. '_' → logprob: -3.575957775115967
    7. '...' → logprob: -3.950957775115967
    8. ' space' → logprob: -4.450957775115967
    9. '<|end|>' → logprob: -4.575957775115967
    10. 'import' → logprob: -4.700957775115967

Token 449: ' and' (ID: 326)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.3677334487438202
    2. '=' → logprob: -2.7427334785461426
    3. ' >' → logprob: -2.7427334785461426
    4. '[' → logprob: -3.2427334785461426
    5. '>' → logprob: -3.3677334785461426
    6. ')' → logprob: -3.6177334785461426
    7. ',' → logprob: -4.367733478546143
    8. ' =' → logprob: -4.742733478546143
    9. '#' → logprob: -4.867733478546143
    10. ']' → logprob: -4.992733478546143

Token 450: ' S' (ID: 336)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.1687750518321991
    2. ' N' → logprob: -1.9187750816345215
    3. 'pos' → logprob: -5.5437750816345215
    4. 'S' → logprob: -6.2937750816345215
    5. ' pos' → logprob: -6.5437750816345215
    6. ' S' → logprob: -7.1687750816345215
    7. ' sum' → logprob: -9.168774604797363
    8. '
' → logprob: -9.293774604797363
    9. 'sum' → logprob: -9.543774604797363
    10. '#' → logprob: -9.918774604797363

Token 451: ' can' (ID: 665)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 452: ' be' (ID: 413)
  Prédit: ' be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.08246897906064987
    2. ' not' → logprob: -2.8324689865112305
    3. 'be' → logprob: -4.8324689865112305
    4. ' quite' → logprob: -5.5824689865112305
    5. ' large' → logprob: -6.2074689865112305
    6. 'not' → logprob: -6.4574689865112305
    7. ' very' → logprob: -6.5824689865112305
    8. ' too' → logprob: -7.0824689865112305
    9. '#' → logprob: -7.5824689865112305
    10. '>' → logprob: -7.7074689865112305

Token 453: ' large' (ID: 4410)
  Prédit: 'large'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'large' → logprob: -0.3610495626926422
    2. 'very' → logprob: -2.1110496520996094
    3. 'too' → logprob: -2.1110496520996094
    4. ' large' → logprob: -3.1110496520996094
    5. ' very' → logprob: -4.611049652099609
    6. ' too' → logprob: -5.111049652099609
    7. 'hu' → logprob: -8.23604965209961
    8. ' huge' → logprob: -11.11104965209961
    9. ' quite' → logprob: -11.98604965209961
    10. 'big' → logprob: -11.98604965209961

Token 454: ' →' (ID: 15155)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.18020376563072205
    2. '[' → logprob: -2.930203676223755
    3. '<|end|>' → logprob: -3.055203676223755
    4. ',' → logprob: -4.430203914642334
    5. '```' → logprob: -4.680203914642334
    6. ')' → logprob: -4.680203914642334
    7. '<|end|>' → logprob: -5.180203914642334
    8. '   ' → logprob: -5.305203914642334
    9. '
' → logprob: -5.805203914642334
    10. '#' → logprob: -5.805203914642334

Token 455: ' dp' (ID: 21546)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.07939731329679489
    2. '...' → logprob: -3.454397201538086
    3. '<|end|>' → logprob: -4.204397201538086
    4. ' #' → logprob: -4.829397201538086
    5. ' pass' → logprob: -5.829397201538086
    6. '[' → logprob: -5.954397201538086
    7. 'import' → logprob: -6.079397201538086
    8. 'from' → logprob: -6.079397201538086
    9. ' continue' → logprob: -6.204397201538086
    10. ' ' → logprob: -6.579397201538086

Token 456: ' with' (ID: 483)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.02996210567653179
    2. '<|end|>' → logprob: -5.154962062835693
    3. '_' → logprob: -5.404962062835693
    4. '#' → logprob: -5.529962062835693
    5. '<|end|>' → logprob: -5.654962062835693
    6. ' =' → logprob: -5.779962062835693
    7. ']' → logprob: -6.529962062835693
    8. ')' → logprob: -6.654962062835693
    9. '.' → logprob: -6.904962062835693
    10. '=' → logprob: -6.904962062835693

Token 457: ' prev' (ID: 10258)
  Prédit: 'three'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'three' → logprob: -0.7587500214576721
    2. ' three' → logprob: -1.1337499618530273
    3. '3' → logprob: -1.7587499618530273
    4. 'dimensions' → logprob: -5.133749961853027
    5. 'too' → logprob: -5.383749961853027
    6. ' such' → logprob: -5.508749961853027
    7. ' dimensions' → logprob: -5.508749961853027
    8. 'prev' → logprob: -5.633749961853027
    9. 'out' → logprob: -6.383749961853027
    10. 'O' → logprob: -6.758749961853027

Token 458: ' in' (ID: 306)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.4590951204299927
    2. '<|end|>' → logprob: -1.8340951204299927
    3. '[
' → logprob: -3.084095001220703
    4. '[pos' → logprob: -3.209095001220703
    5. '<|end|>' → logprob: -4.084095001220703
    6. ',' → logprob: -4.209095001220703
    7. '.' → logprob: -4.459095001220703
    8. ')' → logprob: -4.584095001220703
    9. '=' → logprob: -4.584095001220703
    10. ']' → logprob: -4.709095001220703

Token 459: ' [' (ID: 723)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.26205605268478394
    2. 'range' → logprob: -1.5120561122894287
    3. '[' → logprob: -5.13705587387085
    4. '[M' → logprob: -6.13705587387085
    5. ' [' → logprob: -7.38705587387085
    6. 'M' → logprob: -7.51205587387085
    7. ' M' → logprob: -8.262056350708008
    8. '(range' → logprob: -9.137056350708008
    9. '```' → logprob: -9.387056350708008
    10. '[N' → logprob: -9.387056350708008

Token 460: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.08252046257257462
    2. 'M' → logprob: -2.5825204849243164
    3. '0' → logprob: -6.082520484924316
    4. 'range' → logprob: -7.332520484924316
    5. ']' → logprob: -7.832520484924316
    6. '(M' → logprob: -9.957520484924316
    7. ' M' → logprob: -10.332520484924316
    8. ' ' → logprob: -10.832520484924316
    9. '```' → logprob: -10.957520484924316
    10. '(' → logprob: -10.957520484924316

Token 461: '..' (ID: 485)
  Prédit: '..'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '..' → logprob: -6.76628842484206e-05
    2. '...' → logprob: -10.250067710876465
    3. '-' → logprob: -11.125067710876465
    4. ' ..' → logprob: -11.750067710876465
    5. ',' → logprob: -12.500067710876465
    6. '+' → logprob: -13.375067710876465
    7. ']' → logprob: -13.875067710876465
    8. '-M' → logprob: -14.625067710876465
    9. ':M' → logprob: -14.750067710876465
    10. '..)' → logprob: -14.750067710876465

Token 462: 'M' (ID: 44)
  Prédit: 'M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.0040978738106787205
    2. ' M' → logprob: -5.504097938537598
    3. '...' → logprob: -12.379097938537598
    4. ' ' → logprob: -12.379097938537598
    5. ']' → logprob: -12.754097938537598
    6. ',' → logprob: -13.129097938537598
    7. ' ' → logprob: -13.754097938537598
    8. ' ]' → logprob: -14.004097938537598
    9. '
' → logprob: -14.629097938537598
    10. '..' → logprob: -14.629097938537598

Token 463: '],' (ID: 2155)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.10407273471355438
    2. '+' → logprob: -2.3540728092193604
    3. ' +' → logprob: -6.604072570800781
    4. '],' → logprob: -6.729072570800781
    5. '][' → logprob: -8.354072570800781
    6. ')' → logprob: -8.479072570800781
    7. ',' → logprob: -8.729072570800781
    8. ']+' → logprob: -8.854072570800781
    9. '[' → logprob: -9.229072570800781
    10. ' ]' → logprob: -9.604072570800781

Token 464: ' sum' (ID: 4215)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7114470601081848
    2. '...' → logprob: -2.21144700050354
    3. '#' → logprob: -2.46144700050354
    4. '```' → logprob: -2.71144700050354
    5. ')' → logprob: -2.83644700050354
    6. '<|end|>' → logprob: -3.08644700050354
    7. ' ' → logprob: -3.83644700050354
    8. '   ' → logprob: -4.711447238922119
    9. '    ' → logprob: -4.836447238922119
    10. '[
' → logprob: -4.836447238922119

Token 465: ' in' (ID: 306)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.222152590751648
    2. '[' → logprob: -1.472152590751648
    3. '=' → logprob: -1.847152590751648
    4. ']' → logprob: -2.3471527099609375
    5. ')' → logprob: -2.4721527099609375
    6. '<|end|>' → logprob: -2.7221527099609375
    7. ',' → logprob: -4.0971527099609375
    8. '<|end|>' → logprob: -4.2221527099609375
    9. '   ' → logprob: -4.8471527099609375
    10. '[
' → logprob: -5.0971527099609375

Token 466: ' [' (ID: 723)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.6064363718032837
    2. '[' → logprob: -1.2314363718032837
    3. 'range' → logprob: -1.9814363718032837
    4. ' [' → logprob: -3.731436252593994
    5. '[S' → logprob: -7.856436252593994
    6. '[M' → logprob: -8.106436729431152
    7. 'S' → logprob: -9.731436729431152
    8. '(range' → logprob: -9.981436729431152
    9. '[N' → logprob: -9.981436729431152
    10. ' S' → logprob: -10.606436729431152

Token 467: '1' (ID: 16)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.08829841762781143
    2. '0' → logprob: -2.8382983207702637
    3. '[' → logprob: -4.588298320770264
    4. 'range' → logprob: -4.963298320770264
    5. '1' → logprob: -5.588298320770264
    6. ' S' → logprob: -6.338298320770264
    7. ' range' → logprob: -6.838298320770264
    8. '100' → logprob: -7.463298320770264
    9. ']' → logprob: -7.713298320770264
    10. ' ' → logprob: -8.338298797607422

Token 468: '..' (ID: 485)
  Prédit: '..'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '..' → logprob: -5.200166469876422e-06
    2. '...' → logprob: -13.125004768371582
    3. ' ..' → logprob: -13.125004768371582
    4. '+' → logprob: -15.125004768371582
    5. '..<' → logprob: -15.250004768371582
    6. '..
' → logprob: -15.750004768371582
    7. '..)' → logprob: -16.1250057220459
    8. '..!' → logprob: -16.7500057220459
    9. '..\' → logprob: -16.7500057220459
    10. '..

' → logprob: -16.8750057220459

Token 469: 'S' (ID: 50)
  Prédit: 'S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.00010902655776590109
    2. ' S' → logprob: -10.00010871887207
    3. '10' → logprob: -10.50010871887207
    4. 'M' → logprob: -11.12510871887207
    5. '100' → logprob: -11.25010871887207
    6. 'MOD' → logprob: -13.37510871887207
    7. ' ' → logprob: -13.50010871887207
    8. '(' → logprob: -13.87510871887207
    9. '(S' → logprob: -13.87510871887207
    10. '...' → logprob: -14.25010871887207

Token 470: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6355360746383667
    2. '+' → logprob: -0.7605360746383667
    3. ' +' → logprob: -6.385536193847656
    4. ']+' → logprob: -8.260536193847656
    5. ']:' → logprob: -8.260536193847656
    6. '],' → logprob: -8.760536193847656
    7. '+]' → logprob: -9.135536193847656
    8. '   ' → logprob: -9.635536193847656
    9. '-' → logprob: -9.885536193847656
    10. ',' → logprob: -10.010536193847656

Token 471: ' is' (ID: 382)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.1697748899459839
    2. ')' → logprob: -3.1697750091552734
    3. ']' → logprob: -3.4197750091552734
    4. '<|end|>' → logprob: -3.9197750091552734
    5. '   ' → logprob: -4.294775009155273
    6. '=' → logprob: -5.044775009155273
    7. ',' → logprob: -5.044775009155273
    8. ':' → logprob: -5.169775009155273
    9. '#' → logprob: -5.419775009155273
    10. '<|end|>' → logprob: -5.669775009155273

Token 472: ' huge' (ID: 9560)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -1.482479214668274
    2. ' not' → logprob: -1.607479214668274
    3. 'not' → logprob: -1.607479214668274
    4. 'too' → logprob: -1.857479214668274
    5. ' infe' → logprob: -2.3574790954589844
    6. ' too' → logprob: -2.4824790954589844
    7. 'im' → logprob: -3.6074790954589844
    8. ' impossible' → logprob: -5.232479095458984
    9. ' in' → logprob: -5.607479095458984
    10. '```' → logprob: -7.857479095458984

Token 473: '.
' (ID: 558)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.22515739500522614
    2. '[' → logprob: -3.2251574993133545
    3. '```' → logprob: -3.3501574993133545
    4. ',' → logprob: -3.7251574993133545
    5. '<|end|>' → logprob: -4.100157260894775
    6. '#' → logprob: -4.225157260894775
    7. ')' → logprob: -4.350157260894775
    8. '
' → logprob: -4.600157260894775
    9. ':
' → logprob: -4.850157260894775
    10. '   ' → logprob: -4.975157260894775

Token 474: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19135797023773193
    2. '_' → logprob: -3.5663580894470215
    3. ' ' → logprob: -3.5663580894470215
    4. '#' → logprob: -3.8163580894470215
    5. ')' → logprob: -3.8163580894470215
    6. '    ' → logprob: -3.9413580894470215
    7. 'def' → logprob: -4.1913580894470215
    8. '[' → logprob: -5.1913580894470215
    9. '\' → logprob: -5.3163580894470215
    10. '```' → logprob: -5.4413580894470215

Token 475: ' #
' (ID: 21888)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20497241616249084
    2. ' ' → logprob: -3.204972505569458
    3. ')' → logprob: -3.704972505569458
    4. '\' → logprob: -3.954972505569458
    5. '    ' → logprob: -4.204972267150879
    6. ':' → logprob: -4.329972267150879
    7. '#' → logprob: -4.454972267150879
    8. ',' → logprob: -4.704972267150879
    9. '[' → logprob: -4.829972267150879
    10. 'def' → logprob: -4.954972267150879

Token 476: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08240301162004471
    2. '#' → logprob: -2.7074029445648193
    3. 'dp' → logprob: -5.707403182983398
    4. '    ' → logprob: -6.207403182983398
    5. '```' → logprob: -6.832403182983398
    6. '
' → logprob: -7.207403182983398
    7. 'def' → logprob: -7.207403182983398
    8. 'import' → logprob: -7.332403182983398
    9. ' #' → logprob: -7.457403182983398
    10. '\' → logprob: -7.832403182983398

Token 477: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.29349279403686523
    2. '#' (adapté à ' #') → logprob: -1.4184927940368652
    3. '    ' → logprob: -6.168492794036865
    4. 'dp' → logprob: -6.418492794036865
    5. '
' → logprob: -6.668492794036865
    6. '...' → logprob: -6.793492794036865
    7. '```' → logprob: -6.793492794036865
    8. ' #' → logprob: -6.918492794036865
    9. 'import' → logprob: -7.043492794036865
    10. ' ' → logprob: -7.168492794036865

Token 478: ' Use' (ID: 7649)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.3277425765991211
    2. 'dp' → logprob: -1.702742576599121
    3. '   ' → logprob: -2.827742576599121
    4. 'from' → logprob: -4.202742576599121
    5. 'def' → logprob: -4.952742576599121
    6. 'import' → logprob: -5.077742576599121
    7. '```' → logprob: -5.077742576599121
    8. 'if' → logprob: -6.702742576599121
    9. 'return' → logprob: -7.077742576599121
    10. '
' → logprob: -7.327742576599121

Token 479: ' combin' (ID: 25307)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.6709232330322266
    2. 'prefix' → logprob: -1.2959232330322266
    3. 'bit' → logprob: -2.6709232330322266
    4. 'mat' → logprob: -2.9209232330322266
    5. 'a' → logprob: -3.7959232330322266
    6. 'binary' → logprob: -4.045923233032227
    7. 'dp' → logprob: -4.670923233032227
    8. 'math' → logprob: -4.920923233032227
    9. 'meet' → logprob: -5.420923233032227
    10. 'the' → logprob: -5.670923233032227

Token 480: 'ational' (ID: 1953)
  Prédit: 'atorial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'atorial' → logprob: -0.300853967666626
    2. 'ator' → logprob: -1.425853967666626
    3. '```' → logprob: -4.800853729248047
    4. 'atori' → logprob: -5.550853729248047
    5. 'at' → logprob: -6.175853729248047
    6. '[' → logprob: -7.050853729248047
    7. 'atory' → logprob: -7.300853729248047
    8. '#' → logprob: -7.300853729248047
    9. 'a' → logprob: -7.425853729248047
    10. 'from' → logprob: -7.925853729248047

Token 481: ' approach' (ID: 7139)
  Prédit: 'ations'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ations' → logprob: -1.5225176811218262
    2. '_' → logprob: -1.7725176811218262
    3. 'ation' → logprob: -1.8975176811218262
    4. '<|end|>' → logprob: -2.647517681121826
    5. 's' → logprob: -3.022517681121826
    6. '_choices' → logprob: -3.522517681121826
    7. '(n' → logprob: -3.522517681121826
    8. '\' → logprob: -3.897517681121826
    9. '(' → logprob: -4.022517681121826
    10. ''' → logprob: -4.022517681121826

Token 482: ':
' (ID: 734)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.7740476727485657
    2. ':' → logprob: -1.274047613143921
    3. '**' → logprob: -2.399047613143921
    4. 'def' → logprob: -3.149047613143921
    5. '(n' → logprob: -4.2740478515625
    6. 'from' → logprob: -4.3990478515625
    7. '
' → logprob: -4.3990478515625
    8. 'import' → logprob: -4.5240478515625
    9. '(
' → logprob: -4.6490478515625
    10. ':
' → logprob: -4.7740478515625

Token 483: '   ' (ID: 271)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.502682089805603
    2. '```' → logprob: -2.3776822090148926
    3. 'def' → logprob: -2.7526822090148926
    4. ' from' → logprob: -3.0026822090148926
    5. '   ' → logprob: -3.2526822090148926
    6. 'import' → logprob: -3.7526822090148926
    7. 'dp' → logprob: -3.7526822090148926
    8. '#' → logprob: -4.752682209014893
    9. '`' → logprob: -4.752682209014893
    10. '\' → logprob: -4.752682209014893

Token 484: ' #' (ID: 1069)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.9491580128669739
    2. 'from' → logprob: -1.574157953262329
    3. '```' → logprob: -2.449157953262329
    4. ')' → logprob: -2.574157953262329
    5. 'import' → logprob: -3.449157953262329
    6. 'dp' → logprob: -3.699157953262329
    7. ' from' → logprob: -3.824157953262329
    8. '   ' → logprob: -3.949157953262329
    9. '\' → logprob: -4.199158191680908
    10. ' for' → logprob: -4.199158191680908

Token 485: ' Count' (ID: 6789)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -1.0510042905807495
    2. 'def' → logprob: -1.1760042905807495
    3. 'dp' → logprob: -2.801004409790039
    4. '(' → logprob: -3.301004409790039
    5. 'import' → logprob: -3.426004409790039
    6. '```' → logprob: -3.426004409790039
    7. ' from' → logprob: -4.051004409790039
    8. '(
' → logprob: -4.176004409790039
    9. '   ' → logprob: -4.301004409790039
    10. '`' → logprob: -4.301004409790039

Token 486: ' the' (ID: 290)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.431624174118042
    2. '_' → logprob: -1.931624174118042
    3. '(' → logprob: -2.431624174118042
    4. ' the' → logprob: -2.556624174118042
    5. 'the' → logprob: -2.681624174118042
    6. ' =' → logprob: -2.806624174118042
    7. ' of' → logprob: -3.181624174118042
    8. '_the' → logprob: -3.431624174118042
    9. '_choices' → logprob: -3.431624174118042
    10. ' (' → logprob: -3.556624174118042

Token 487: ' number' (ID: 2086)
  Prédit: 'number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'number' → logprob: -0.18620909750461578
    2. ' number' → logprob: -1.9362090826034546
    3. 'ways' → logprob: -4.561209201812744
    4. 'next' → logprob: -4.811209201812744
    5. ' ways' → logprob: -5.686209201812744
    6. ' next' → logprob: -5.936209201812744
    7. '#' → logprob: -8.311208724975586
    8. 'total' → logprob: -8.686208724975586
    9. 'numbers' → logprob: -8.686208724975586
    10. 'num' → logprob: -9.936208724975586

Token 488: ' of' (ID: 328)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7137817740440369
    2. ' of' → logprob: -1.8387818336486816
    3. 'of' → logprob: -1.9637818336486816
    4. '_of' → logprob: -2.0887818336486816
    5. '#' → logprob: -3.9637818336486816
    6. 'from' → logprob: -4.713781833648682
    7. ' ' → logprob: -4.963781833648682
    8. 's' → logprob: -5.338781833648682
    9. 'def' → logprob: -5.588781833648682
    10. ')' → logprob: -5.713781833648682

Token 489: ' strictly' (ID: 38971)
  Prédit: 'ways'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ways' → logprob: -0.49773818254470825
    2. ' ways' → logprob: -1.3727381229400635
    3. 'strict' → logprob: -2.2477381229400635
    4. ' strictly' → logprob: -3.4977381229400635
    5. 'se' → logprob: -6.372738361358643
    6. 'com' → logprob: -7.372738361358643
    7. ' sequences' → logprob: -8.997737884521484
    8. 'inte' → logprob: -9.372737884521484
    9. ' combinations' → logprob: -10.122737884521484
    10. ' increasing' → logprob: -10.372737884521484

Token 490: ' increasing' (ID: 11293)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.2570122480392456
    2. ' increasing' → logprob: -1.6320122480392456
    3. '_in' → logprob: -3.507012367248535
    4. ' _' → logprob: -8.007012367248535
    5. '_' → logprob: -8.132012367248535
    6. '_de' → logprob: -9.757012367248535
    7. '   ' → logprob: -9.882012367248535
    8. ' ' → logprob: -10.132012367248535
    9. '_increment' → logprob: -10.132012367248535
    10. ' decreasing' → logprob: -10.257012367248535

Token 491: ' sequences' (ID: 45665)
  Prédit: ' sequences'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sequences' → logprob: -0.08039408922195435
    2. 'se' → logprob: -2.8303940296173096
    3. '_sequences' → logprob: -4.455394268035889
    4. ' subsets' → logprob: -5.955394268035889
    5. ' subse' → logprob: -6.455394268035889
    6. ' combinations' → logprob: -7.205394268035889
    7. 'sub' → logprob: -7.580394268035889
    8. '_' → logprob: -7.830394268035889
    9. '_sub' → logprob: -8.33039379119873
    10. '_se' → logprob: -8.70539379119873

Token 492: ' of' (ID: 328)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6113078594207764
    2. 'from' → logprob: -2.3613078594207764
    3. ' of' → logprob: -2.4863078594207764
    4. '_' → logprob: -2.7363078594207764
    5. 'of' → logprob: -3.1113078594207764
    6. '(' → logprob: -3.2363078594207764
    7. '```' → logprob: -3.3613078594207764
    8. '=' → logprob: -4.1113080978393555
    9. '[
' → logprob: -4.1113080978393555
    10. '<|end|>' → logprob: -4.7363080978393555

Token 493: ' length' (ID: 5517)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.1621232032775879
    2. ' length' → logprob: -1.912123203277588
    3. 'numbers' → logprob: -7.537123203277588
    4. ' k' → logprob: -7.662123203277588
    5. 'elements' → logprob: -8.41212272644043
    6. ' numbers' → logprob: -8.66212272644043
    7. 'k' → logprob: -8.78712272644043
    8. ' elements' → logprob: -9.66212272644043
    9. ' M' → logprob: -10.03712272644043
    10. '```' → logprob: -10.16212272644043

Token 494: ' length' (ID: 5517)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.7741314172744751
    2. ' N' → logprob: -1.899131417274475
    3. 'pos' → logprob: -2.2741312980651855
    4. ' pos' → logprob: -2.8991312980651855
    5. '1' → logprob: -3.0241312980651855
    6. '(N' → logprob: -3.0241312980651855
    7. 'k' → logprob: -3.5241312980651855
    8. ' ' → logprob: -3.8991312980651855
    9. '(pos' → logprob: -3.8991312980651855
    10. ' (' → logprob: -4.0241312980651855

Token 495: ' from' (ID: 591)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.105383962392807
    2. '```' → logprob: -3.23038387298584
    3. '_
' → logprob: -4.85538387298584
    4. '[N' → logprob: -5.10538387298584
    5. '`' → logprob: -5.73038387298584
    6. '+' → logprob: -5.73038387298584
    7. '(N' → logprob: -5.73038387298584
    8. ' _' → logprob: -5.85538387298584
    9. '[' → logprob: -5.98038387298584
    10. 'from' → logprob: -6.10538387298584

Token 496: ' numbers' (ID: 8663)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.23861084878444672
    2. ' ' → logprob: -2.9886107444763184
    3. '[' → logprob: -3.2386107444763184
    4. 'range' → logprob: -3.2386107444763184
    5. 'pos' → logprob: -3.8636107444763184
    6. 'N' → logprob: -4.363610744476318
    7. ' [' → logprob: -5.113610744476318
    8. ' N' → logprob: -5.113610744476318
    9. '[pos' → logprob: -5.238610744476318
    10. ' range' → logprob: -5.488610744476318

Token 497: ' ' (ID: 220)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.9556978344917297
    2. '```' → logprob: -1.205697774887085
    3. '_' → logprob: -2.455697774887085
    4. ' =' → logprob: -3.580697774887085
    5. '=' → logprob: -3.705697774887085
    6. '[i' → logprob: -4.080698013305664
    7. 'in' → logprob: -4.080698013305664
    8. 'of' → logprob: -4.080698013305664
    9. '`' → logprob: -4.330698013305664
    10. '[' → logprob: -4.455698013305664

Token 498: '1' (ID: 16)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.4422776401042938
    2. 'in' → logprob: -1.5672776699066162
    3. ' in' → logprob: -2.817277669906616
    4. ' from' → logprob: -3.692277669906616
    5. '```' → logprob: -3.692277669906616
    6. '=' → logprob: -5.067277431488037
    7. '[' → logprob: -5.317277431488037
    8. 'range' → logprob: -5.442277431488037
    9. ' =' → logprob: -5.567277431488037
    10. ' ' → logprob: -5.817277431488037

Token 499: '..' (ID: 485)
  Prédit: '..'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '..' → logprob: -0.7453327775001526
    2. ' to' → logprob: -1.7453327178955078
    3. ' +' → logprob: -2.495332717895508
    4. '+' → logprob: -2.745332717895508
    5. ' ' → logprob: -3.245332717895508
    6. '```' → logprob: -3.245332717895508
    7. ',' → logprob: -3.370332717895508
    8. 'to' → logprob: -3.745332717895508
    9. ' ..' → logprob: -4.120332717895508
    10. '...' → logprob: -4.870332717895508

Token 500: 'M' (ID: 44)
  Prédit: ' M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' M' → logprob: -0.5259100794792175
    2. 'M' → logprob: -0.9009100794792175
    3. ' ' → logprob: -5.900909900665283
    4. ' ' → logprob: -11.275910377502441
    5. '  ' → logprob: -12.650910377502441
    6. ')' → logprob: -12.650910377502441
    7. ',' → logprob: -12.650910377502441
    8. '```' → logprob: -13.275910377502441
    9. '   ' → logprob: -13.400910377502441
    10. ' (' → logprob: -13.400910377502441

Token 501: ' with' (ID: 483)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -1.1490780115127563
    2. '#' → logprob: -2.024077892303467
    3. ')' → logprob: -2.274077892303467
    4. 'def' → logprob: -2.774077892303467
    5. '**' → logprob: -3.024077892303467
    6. ':' → logprob: -3.149077892303467
    7. '<|end|>' → logprob: -3.149077892303467
    8. ',' → logprob: -3.274077892303467
    9. '.' → logprob: -3.524077892303467
    10. ']' → logprob: -3.649077892303467

Token 502: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.28146231174468994
    2. ' sum' → logprob: -2.1564621925354004
    3. 'replacement' → logprob: -2.4064621925354004
    4. ' replacement' → logprob: -4.9064621925354
    5. 'out' → logprob: -4.9064621925354
    6. 're' → logprob: -5.5314621925354
    7. 'exact' → logprob: -5.6564621925354
    8. 'fixed' → logprob: -5.7814621925354
    9. 'the' → logprob: -6.0314621925354
    10. 'values' → logprob: -6.7814621925354

Token 503: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8283114433288574
    2. '+' → logprob: -1.4533114433288574
    3. ' +' → logprob: -2.0783114433288574
    4. '_' → logprob: -2.3283114433288574
    5. '=' → logprob: -2.8283114433288574
    6. '_{' → logprob: -4.703311443328857
    7. '```' → logprob: -4.828311443328857
    8. ' _' → logprob: -5.203311443328857
    9. ' +=' → logprob: -5.453311443328857
    10. ' of' → logprob: -5.578311443328857

Token 504: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.026672380045056343
    2. ' S' → logprob: -3.65167236328125
    3. 'exact' → logprob: -8.15167236328125
    4. 'sum' → logprob: -10.40167236328125
    5. ' exactly' → logprob: -11.40167236328125
    6. '```' → logprob: -11.77667236328125
    7. 's' → logprob: -11.90167236328125
    8. ' sum' → logprob: -12.65167236328125
    9. ' exact' → logprob: -12.77667236328125
    10. 'prev' → logprob: -13.02667236328125

Token 505: '.
' (ID: 558)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9118959307670593
    2. 'def' → logprob: -1.536895990371704
    3. '[' → logprob: -2.161895990371704
    4. ',' → logprob: -3.036895990371704
    5. '_' → logprob: -3.036895990371704
    6. '```' → logprob: -3.036895990371704
    7. '#' → logprob: -3.286895990371704
    8. '<|end|>' → logprob: -3.911895990371704
    9. 'from' → logprob: -5.036895751953125
    10. 'import' → logprob: -5.036895751953125

Token 506: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.457497239112854
    2. '_' → logprob: -1.707497239112854
    3. ':' → logprob: -2.4574971199035645
    4. '```' → logprob: -3.9574971199035645
    5. ',' → logprob: -4.4574971199035645
    6. '   ' → logprob: -4.5824971199035645
    7. '#' → logprob: -4.8324971199035645
    8. '
' → logprob: -5.0824971199035645
    9. '[' → logprob: -5.0824971199035645
    10. '\' → logprob: -5.0824971199035645

Token 507: ' #
' (ID: 21888)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2565065324306488
    2. 'def' → logprob: -2.1315064430236816
    3. ':
' → logprob: -3.6315064430236816
    4. '   ' → logprob: -4.131506443023682
    5. '
' → logprob: -4.506506443023682
    6. '```' → logprob: -4.756506443023682
    7. '\' → logprob: -4.881506443023682
    8. '#' → logprob: -5.256506443023682
    9. ')' → logprob: -5.381506443023682
    10. ',' → logprob: -5.506506443023682

Token 508: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24710634350776672
    2. 'def' → logprob: -1.9971063137054443
    3. 'from' → logprob: -3.8721063137054443
    4. '#' → logprob: -4.247106552124023
    5. '```' → logprob: -4.372106552124023
    6. '
' → logprob: -4.622106552124023
    7. 'import' → logprob: -5.247106552124023
    8. ':' → logprob: -5.372106552124023
    9. '\' → logprob: -5.497106552124023
    10. ')' → logprob: -6.497106552124023

Token 509: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8913323283195496
    2. 'def' → logprob: -1.2663323879241943
    3. '#' (adapté à ' #') → logprob: -1.8913323879241943
    4. 'from' → logprob: -2.2663323879241943
    5. 'import' → logprob: -4.266332149505615
    6. '
' → logprob: -4.266332149505615
    7. '```' → logprob: -5.141332149505615
    8. ' from' → logprob: -5.141332149505615
    9. 'dp' → logprob: -5.766332149505615
    10. ' #' → logprob: -6.891332149505615

Token 510: ' This' (ID: 1328)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7352129817008972
    2. 'def' → logprob: -1.110213041305542
    3. 'from' → logprob: -2.360213041305542
    4. 'dp' → logprob: -2.860213041305542
    5. 'import' → logprob: -3.860213041305542
    6. '\' → logprob: -5.610212802886963
    7. '   ' → logprob: -5.735212802886963
    8. '```' → logprob: -5.860212802886963
    9. '
' → logprob: -5.985212802886963
    10. 'factor' → logprob: -7.110212802886963

Token 511: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.39433419704437256
    2. '#' → logprob: -1.3943341970443726
    3. ' =' → logprob: -4.144334316253662
    4. 'is' → logprob: -4.644334316253662
    5. ' can' → logprob: -4.769334316253662
    6. 'def' → logprob: -5.019334316253662
    7. ' #' → logprob: -5.644334316253662
    8. 'import' → logprob: -5.644334316253662
    9. '[' → logprob: -5.769334316253662
    10. ':' → logprob: -5.769334316253662

Token 512: ' equivalent' (ID: 23458)
  Prédit: 'equ'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'equ' → logprob: -0.22980289161205292
    2. 'a' → logprob: -1.9798028469085693
    3. ' equivalent' → logprob: -3.3548028469085693
    4. ' a' → logprob: -4.604803085327148
    5. 'the' → logprob: -5.229803085327148
    6. 'count' → logprob: -5.354803085327148
    7. '#' → logprob: -5.854803085327148
    8. 'equal' → logprob: -6.229803085327148
    9. 'an' → logprob: -6.354803085327148
    10. ' counting' → logprob: -6.729803085327148

Token 513: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.47452062368392944
    2. ' to' → logprob: -0.9745206236839294
    3. '_to' → logprob: -8.099520683288574
    4. '=' → logprob: -9.724520683288574
    5. '<|end|>' → logprob: -10.849520683288574
    6. '.' → logprob: -11.224520683288574
    7. ',' → logprob: -11.224520683288574
    8. 'To' → logprob: -11.599520683288574
    9. '	to' → logprob: -12.724520683288574
    10. ':' → logprob: -12.974520683288574

Token 514: ' counting' (ID: 43276)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.21527138352394104
    2. ' counting' → logprob: -1.8402713537216187
    3. ' choosing' → logprob: -4.840271472930908
    4. 'cho' → logprob: -4.965271472930908
    5. ' count' → logprob: -4.965271472930908
    6. 'finding' → logprob: -4.965271472930908
    7. 'the' → logprob: -6.590271472930908
    8. 'com' → logprob: -6.840271472930908
    9. ' finding' → logprob: -7.340271472930908
    10. 'select' → logprob: -7.340271472930908

Token 515: ' compositions' (ID: 81710)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.2922392785549164
    2. 'the' → logprob: -1.7922393083572388
    3. 'com' → logprob: -3.417239189147949
    4. ' combinations' → logprob: -3.542239189147949
    5. ' subsets' → logprob: -4.042239189147949
    6. ' sequences' → logprob: -5.917239189147949
    7. ' ways' → logprob: -6.292239189147949
    8. ' C' → logprob: -7.042239189147949
    9. 'ways' → logprob: -8.16723918914795
    10. 'a' → logprob: -8.54223918914795

Token 516: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.7177952527999878
    2. '<|end|>' → logprob: -2.0927953720092773
    3. '[' → logprob: -2.8427953720092773
    4. '_' → logprob: -3.0927953720092773
    5. 'of' → logprob: -3.3427953720092773
    6. '<|end|>' → logprob: -3.4677953720092773
    7. ')' → logprob: -3.7177953720092773
    8. ',' → logprob: -3.8427953720092773
    9. ':' → logprob: -3.9677953720092773
    10. '.' → logprob: -4.092795372009277

Token 517: ' sum' (ID: 4215)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.2436145544052124
    2. ' S' → logprob: -1.7436145544052124
    3. 'k' → logprob: -4.743614673614502
    4. 'N' → logprob: -4.743614673614502
    5. 'the' → logprob: -5.243614673614502
    6. ' k' → logprob: -5.868614673614502
    7. 'length' → logprob: -5.993614673614502
    8. ' the' → logprob: -6.493614673614502
    9. ' N' → logprob: -6.743614673614502
    10. 'K' → logprob: -6.868614673614502

Token 518: ' into' (ID: 1511)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.42668983340263367
    2. ' _' → logprob: -1.926689863204956
    3. ' into' → logprob: -3.551689863204956
    4. ' -' → logprob: -3.551689863204956
    5. ' of' → logprob: -4.301689624786377
    6. ' =' → logprob: -4.301689624786377
    7. '=' → logprob: -4.301689624786377
    8. '<|end|>' → logprob: -4.301689624786377
    9. '```' → logprob: -4.801689624786377
    10. ',' → logprob: -4.801689624786377

Token 519: ' length' (ID: 5517)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.29392123222351074
    2. 'N' → logprob: -2.1689212322235107
    3. 'pos' → logprob: -2.5439212322235107
    4. 'distinct' → logprob: -3.9189212322235107
    5. ' length' → logprob: -4.54392147064209
    6. '(pos' → logprob: -5.16892147064209
    7. ' N' → logprob: -5.16892147064209
    8. 'strict' → logprob: -5.29392147064209
    9. '(length' → logprob: -5.41892147064209
    10. 'k' → logprob: -5.79392147064209

Token 520: ' distinct' (ID: 16913)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3709793090820312
    2. '[N' → logprob: -1.8709793090820312
    3. '(N' → logprob: -2.1209793090820312
    4. '=' → logprob: -2.4959793090820312
    5. '```' → logprob: -2.9959793090820312
    6. '-N' → logprob: -3.1209793090820312
    7. '=N' → logprob: -3.4959793090820312
    8. '+' → logprob: -3.6209793090820312
    9. ' =' → logprob: -3.6209793090820312
    10. '-length' → logprob: -3.7459793090820312

Token 521: ' strictly' (ID: 38971)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.0777124166488647
    2. ' integers' → logprob: -1.3277124166488647
    3. ' elements' → logprob: -2.0777125358581543
    4. '_numbers' → logprob: -2.4527125358581543
    5. ' numbers' → logprob: -2.8277125358581543
    6. '_elements' → logprob: -3.3277125358581543
    7. ' _' → logprob: -3.4527125358581543
    8. 'inte' → logprob: -4.202712535858154
    9. '```' → logprob: -4.452712535858154
    10. 'elements' → logprob: -5.202712535858154

Token 522: ' increasing' (ID: 11293)
  Prédit: ' increasing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' increasing' → logprob: -0.0051966398023068905
    2. 'in' → logprob: -5.505196571350098
    3. '>' → logprob: -8.255196571350098
    4. ' less' → logprob: -8.880196571350098
    5. ' greater' → logprob: -9.005196571350098
    6. '_in' → logprob: -9.005196571350098
    7. '+' → logprob: -9.130196571350098
    8. ' decreasing' → logprob: -9.255196571350098
    9. '_' → logprob: -9.755196571350098
    10. ' _' → logprob: -10.130196571350098

Token 523: ' numbers' (ID: 8663)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.30177685618400574
    2. '_tokens' → logprob: -2.426776885986328
    3. ' _' → logprob: -3.051776885986328
    4. ' tokens' → logprob: -3.676776885986328
    5. 'tokens' → logprob: -3.801776885986328
    6. ' elements' → logprob: -4.051776885986328
    7. '_numbers' → logprob: -4.051776885986328
    8. '_elements' → logprob: -4.301776885986328
    9. ' numbers' → logprob: -5.051776885986328
    10. ' sequences' → logprob: -5.301776885986328

Token 524: ' from' (ID: 591)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.9652667045593262
    2. ',' → logprob: -2.090266704559326
    3. '_' → logprob: -2.090266704559326
    4. '<|end|>' → logprob: -2.215266704559326
    5. ':' → logprob: -3.340266704559326
    6. ']' → logprob: -3.340266704559326
    7. ')' → logprob: -3.465266704559326
    8. '```' → logprob: -3.590266704559326
    9. '[' → logprob: -3.840266704559326
    10. '#' → logprob: -4.090266704559326

Token 525: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.9112691283226013
    2. '1' → logprob: -1.411269187927246
    3. ' [' → logprob: -2.161269187927246
    4. ' range' → logprob: -2.286269187927246
    5. ' the' → logprob: -3.036269187927246
    6. 'range' → logprob: -3.161269187927246
    7. ' ' → logprob: -4.161269187927246
    8. 'the' → logprob: -4.286269187927246
    9. ' {' → logprob: -5.036269187927246
    10. '{' → logprob: -5.161269187927246

Token 526: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.006640410050749779
    2. ' ' → logprob: -5.131640434265137
    3. 'M' → logprob: -7.506640434265137
    4. ' M' → logprob: -8.881640434265137
    5. ']' → logprob: -12.256640434265137
    6. ',' → logprob: -12.756640434265137
    7. '   ' → logprob: -13.006640434265137
    8. '{' → logprob: -13.256640434265137
    9. '
' → logprob: -13.506640434265137
    10. '```' → logprob: -13.506640434265137

Token 527: '..' (ID: 485)
  Prédit: '..'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '..' → logprob: -0.0013277375837787986
    2. ' ..' → logprob: -6.6263275146484375
    3. '..
' → logprob: -14.001327514648438
    4. '...' → logprob: -14.876327514648438
    5. ',' → logprob: -15.376327514648438
    6. ' +' → logprob: -16.501327514648438
    7. ' ' → logprob: -16.626327514648438
    8. ',..' → logprob: -16.626327514648438
    9. '..)' → logprob: -17.251327514648438
    10. '..\' → logprob: -17.501327514648438

Token 528: 'M' (ID: 44)
  Prédit: 'M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.1797870397567749
    2. ' M' → logprob: -1.804787039756775
    3. ' ' → logprob: -10.679786682128906
    4. ',' → logprob: -11.929786682128906
    5. '
' → logprob: -12.804786682128906
    6. ' ' → logprob: -13.054786682128906
    7. ']' → logprob: -13.304786682128906
    8. '1' → logprob: -13.429786682128906
    9. '```' → logprob: -13.679786682128906
    10. ',M' → logprob: -13.929786682128906

Token 529: '].
' (ID: 49887)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.019292082637548447
    2. ']_' → logprob: -4.519291877746582
    3. '].' → logprob: -5.644291877746582
    4. '],' → logprob: -6.144291877746582
    5. '_]' → logprob: -7.644291877746582
    6. ']:' → logprob: -8.144291877746582
    7. '_' → logprob: -8.394291877746582
    8. ',' → logprob: -8.644291877746582
    9. ']+' → logprob: -8.769291877746582
    10. ']!' → logprob: -9.019291877746582

Token 530: '   ' (ID: 271)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7244760990142822
    2. 'def' → logprob: -1.5994760990142822
    3. '\' → logprob: -2.4744760990142822
    4. '   ' → logprob: -3.0994760990142822
    5. ':' → logprob: -3.5994760990142822
    6. ')' → logprob: -3.7244760990142822
    7. '```' → logprob: -3.7244760990142822
    8. ',' → logprob: -4.224475860595703
    9. '(' → logprob: -4.349475860595703
    10. 'import' → logprob: -4.474475860595703

Token 531: ' #
' (ID: 21888)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1829513311386108
    2. 'def' → logprob: -1.5579513311386108
    3. '_' → logprob: -2.4329514503479004
    4. ':' → logprob: -2.8079514503479004
    5. ')' → logprob: -2.9329514503479004
    6. '#' → logprob: -2.9329514503479004
    7. '\' → logprob: -3.3079514503479004
    8. ',' → logprob: -3.3079514503479004
    9. '```' → logprob: -3.4329514503479004
    10. '
' → logprob: -3.9329514503479004

Token 532: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07773987203836441
    2. 'def' → logprob: -3.452739953994751
    3. '_' → logprob: -4.577739715576172
    4. '\' → logprob: -4.952739715576172
    5. '```' → logprob: -5.577739715576172
    6. ')' → logprob: -5.952739715576172
    7. ',' → logprob: -6.077739715576172
    8. ':' → logprob: -6.077739715576172
    9. ' ' → logprob: -6.202739715576172
    10. '#' → logprob: -6.327739715576172

Token 533: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5481567978858948
    2. 'def' → logprob: -1.17315673828125
    3. '#' (adapté à ' #') → logprob: -3.04815673828125
    4. 'from' → logprob: -3.42315673828125
    5. 'import' → logprob: -4.79815673828125
    6. ')' → logprob: -5.54815673828125
    7. '
' → logprob: -5.79815673828125
    8. 'dp' → logprob: -5.79815673828125
    9. '_' → logprob: -6.42315673828125
    10. ' from' → logprob: -6.79815673828125

Token 534: ' We' (ID: 1416)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3871016800403595
    2. 'from' → logprob: -1.637101650238037
    3. '#' → logprob: -2.887101650238037
    4. 'import' → logprob: -3.637101650238037
    5. '
' → logprob: -4.262101650238037
    6. '   ' → logprob: -4.387101650238037
    7. '```' → logprob: -5.137101650238037
    8. '\' → logprob: -5.387101650238037
    9. 'dp' → logprob: -5.637101650238037
    10. '\n' → logprob: -7.137101650238037

Token 535: ' can' (ID: 665)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.4175911843776703
    2. 'def' → logprob: -2.292591094970703
    3. '#' → logprob: -2.417591094970703
    4. ' can' → logprob: -3.292591094970703
    5. ' =' → logprob: -3.417591094970703
    6. ' need' → logprob: -4.667591094970703
    7. 'can' → logprob: -4.667591094970703
    8. ' will' → logprob: -4.667591094970703
    9. '
' → logprob: -4.792591094970703
    10. 'from' → logprob: -4.792591094970703

Token 536: ' use' (ID: 1199)
  Prédit: 'use'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'use' → logprob: -0.021471085026860237
    2. ' use' → logprob: -4.39647102355957
    3. 'pre' → logprob: -6.02147102355957
    4. 'count' → logprob: -6.02147102355957
    5. 'consider' → logprob: -7.02147102355957
    6. 'define' → logprob: -7.14647102355957
    7. 'apply' → logprob: -7.64647102355957
    8. 'think' → logprob: -8.27147102355957
    9. 'util' → logprob: -8.52147102355957
    10. '```' → logprob: -8.89647102355957

Token 537: ' DP' (ID: 51992)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'com' → logprob: -1.2109415531158447
    2. ' a' → logprob: -1.7109415531158447
    3. 'a' → logprob: -1.8359415531158447
    4. ' generating' → logprob: -2.4609415531158447
    5. ' combin' → logprob: -3.2109415531158447
    6. ' combinations' → logprob: -3.2109415531158447
    7. ' math' → logprob: -3.3359415531158447
    8. 'dp' → logprob: -3.5859415531158447
    9. '```' → logprob: -3.8359415531158447
    10. 'comb' → logprob: -4.460941314697266

Token 538: ' with' (ID: 483)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.0958330631256104
    2. '_' → logprob: -1.9708330631256104
    3. 'import' → logprob: -2.2208330631256104
    4. '```' → logprob: -2.2208330631256104
    5. '[' → logprob: -2.4708330631256104
    6. '   ' → logprob: -2.8458330631256104
    7. ',' → logprob: -3.4708330631256104
    8. '
' → logprob: -3.8458330631256104
    9. '#' → logprob: -3.9708330631256104
    10. 'dp' → logprob: -4.595832824707031

Token 539: ' optimization' (ID: 34658)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -1.5460667610168457
    2. 'prefix' → logprob: -1.9210667610168457
    3. 'bit' → logprob: -1.9210667610168457
    4. 'def' → logprob: -2.1710667610168457
    5. 'com' → logprob: -2.9210667610168457
    6. '```' → logprob: -3.0460667610168457
    7. 'subset' → logprob: -3.0460667610168457
    8. 'states' → logprob: -3.2960667610168457
    9. 'import' → logprob: -3.6710667610168457
    10. 'N' → logprob: -3.6710667610168457

Token 540: ' for' (ID: 395)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5544961094856262
    2. '_' → logprob: -1.6794960498809814
    3. ')' → logprob: -2.8044960498809814
    4. '   ' → logprob: -3.0544960498809814
    5. '[' → logprob: -3.8044960498809814
    6. ',' → logprob: -4.1794962882995605
    7. '#' → logprob: -4.1794962882995605
    8. ':' → logprob: -4.3044962882995605
    9. ']' → logprob: -4.4294962882995605
    10. '```' → logprob: -4.5544962882995605

Token 541: ' strict' (ID: 12035)
  Prédit: 'subset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'subset' → logprob: -0.9003058075904846
    2. 'com' → logprob: -1.7753057479858398
    3. 'prefix' → logprob: -2.02530574798584
    4. 'comb' → logprob: -2.90030574798584
    5. 'k' → logprob: -3.40030574798584
    6. 'length' → logprob: -3.40030574798584
    7. '```' → logprob: -3.77530574798584
    8. 'n' → logprob: -3.90030574798584
    9. 'the' → logprob: -3.90030574798584
    10. 'small' → logprob: -4.27530574798584

Token 542: ' increasing' (ID: 11293)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.010387713089585304
    2. 'ly' → logprob: -5.635387897491455
    3. '_increment' → logprob: -6.260387897491455
    4. '_in' → logprob: -7.385387897491455
    5. '_i' → logprob: -7.510387897491455
    6. 'y' → logprob: -7.635387897491455
    7. ' increasing' → logprob: -8.010387420654297
    8. '_count' → logprob: -8.385387420654297
    9. '_
' → logprob: -8.510387420654297
    10. ' _' → logprob: -8.510387420654297

Token 543: ' sequences' (ID: 45665)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3636096119880676
    2. '   ' → logprob: -2.488609552383423
    3. ']' → logprob: -2.863609552383423
    4. 'def' → logprob: -3.113609552383423
    5. '_
' → logprob: -3.613609552383423
    6. '[' → logprob: -3.863609552383423
    7. ',' → logprob: -4.238609790802002
    8. ')' → logprob: -4.363609790802002
    9. '```' → logprob: -4.738609790802002
    10. '[
' → logprob: -5.363609790802002

Token 544: ' sum' (ID: 4215)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.25805750489234924
    2. ':' → logprob: -2.7580575942993164
    3. '```' → logprob: -3.1330575942993164
    4. '   ' → logprob: -3.7580575942993164
    5. 'dp' → logprob: -3.8830575942993164
    6. '
' → logprob: -4.133057594299316
    7. ',' → logprob: -4.633057594299316
    8. '_' → logprob: -5.008057594299316
    9. '[' → logprob: -5.258057594299316
    10. 'import' → logprob: -5.383057594299316

Token 545: ' counts' (ID: 28991)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5431539416313171
    2. 'def' → logprob: -1.418154001235962
    3. ':' → logprob: -3.043154001235962
    4. '[' → logprob: -3.418154001235962
    5. '_' → logprob: -4.043153762817383
    6. '```' → logprob: -4.293153762817383
    7. 'dp' → logprob: -4.793153762817383
    8. ')' → logprob: -4.918153762817383
    9. ']' → logprob: -5.168153762817383
    10. ',' → logprob: -5.293153762817383

Token 546: ':
' (ID: 734)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.762767493724823
    2. '[' → logprob: -1.7627675533294678
    3. ':' → logprob: -2.1377675533294678
    4. '_' → logprob: -2.8877675533294678
    5. '(' → logprob: -3.5127675533294678
    6. '```' → logprob: -3.5127675533294678
    7. ',' → logprob: -4.012767314910889
    8. '   ' → logprob: -4.012767314910889
    9. 'import' → logprob: -4.262767314910889
    10. ')' → logprob: -4.262767314910889

Token 547: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5542299747467041
    2. 'import' → logprob: -2.179229974746704
    3. '(' → logprob: -2.929229974746704
    4. '
' → logprob: -3.179229974746704
    5. '   ' → logprob: -3.179229974746704
    6. '_' → logprob: -3.429229974746704
    7. '[' → logprob: -3.554229974746704
    8. '```' → logprob: -3.804229974746704
    9. '#' → logprob: -4.304229736328125
    10. 'from' → logprob: -4.554229736328125

Token 548: ' #
' (ID: 21888)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.8200642466545105
    2. '_' → logprob: -0.9450642466545105
    3. 'import' → logprob: -3.3200643062591553
    4. '(' → logprob: -3.8200643062591553
    5. ')' → logprob: -3.8200643062591553
    6. '   ' → logprob: -3.8200643062591553
    7. '#' → logprob: -4.820064067840576
    8. ',' → logprob: -4.820064067840576
    9. 'from' → logprob: -5.070064067840576
    10. '[' → logprob: -5.320064067840576

Token 549: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007237194571644068
    2. 'def' → logprob: -6.132236957550049
    3. '```' → logprob: -6.632236957550049
    4. 'dp' → logprob: -6.757236957550049
    5. '    
' → logprob: -7.382236957550049
    6. ' dp' → logprob: -7.757236957550049
    7. 'from' → logprob: -7.882236957550049
    8. 'import' → logprob: -8.382237434387207
    9. '
' → logprob: -8.757237434387207
    10. '    ' → logprob: -8.757237434387207

Token 550: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18076735734939575
    2. 'dp' → logprob: -2.180767297744751
    3. 'def' → logprob: -3.930767297744751
    4. '#' (adapté à ' #') → logprob: -4.80576753616333
    5. ' dp' → logprob: -4.93076753616333
    6. 'from' → logprob: -5.05576753616333
    7. 'n' → logprob: -6.30576753616333
    8. 'import' → logprob: -6.80576753616333
    9. ')' → logprob: -6.80576753616333
    10. '_' → logprob: -7.30576753616333

Token 551: ' Define' (ID: 38966)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8648689985275269
    2. 'from' → logprob: -1.4898689985275269
    3. 'dp' → logprob: -1.4898689985275269
    4. 'def' → logprob: -2.4898691177368164
    5. 'import' → logprob: -4.239869117736816
    6. ' from' → logprob: -4.739869117736816
    7. '#' → logprob: -4.864869117736816
    8. ' dp' → logprob: -5.864869117736816
    9. '```' → logprob: -5.989869117736816
    10. ' ' → logprob: -6.864869117736816

Token 552: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.005799147300422192
    2. ' dp' → logprob: -6.005799293518066
    3. 'f' → logprob: -6.380799293518066
    4. 'from' → logprob: -7.505799293518066
    5. 'def' → logprob: -7.630799293518066
    6. '```' → logprob: -8.130799293518066
    7. ' f' → logprob: -9.380799293518066
    8. 'prefix' → logprob: -9.630799293518066
    9. '`' → logprob: -11.005799293518066
    10. 'cnt' → logprob: -11.255799293518066

Token 553: '[length' (ID: 130091)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.506503164768219
    2. '=' → logprob: -1.1315031051635742
    3. '```' → logprob: -3.756503105163574
    4. '[' → logprob: -3.881503105163574
    5. '[pos' → logprob: -4.131503105163574
    6. 'dp' → logprob: -6.506503105163574
    7. '_' → logprob: -6.756503105163574
    8. '[length' → logprob: -6.881503105163574
    9. '=[' → logprob: -7.131503105163574
    10. '[i' → logprob: -7.131503105163574

Token 554: '][' (ID: 2696)
  Prédit: '[length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[length' → logprob: -0.6844053268432617
    2. '][' → logprob: -0.8094053268432617
    3. ']' → logprob: -3.1844053268432617
    4. '[len' → logprob: -5.059405326843262
    5. '[' → logprob: -7.184405326843262
    6. '```' → logprob: -7.434405326843262
    7. '][_' → logprob: -8.184405326843262
    8. '[
' → logprob: -8.809405326843262
    9. '][]' → logprob: -8.934405326843262
    10. '[l' → logprob: -9.184405326843262

Token 555: 'sum' (ID: 12298)
  Prédit: 'sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.006026200018823147
    2. ' sum' → logprob: -5.631026268005371
    3. '][' → logprob: -7.006026268005371
    4. 's' → logprob: -7.631026268005371
    5. 'total' → logprob: -8.006026268005371
    6. 'prev' → logprob: -8.631026268005371
    7. 'current' → logprob: -8.631026268005371
    8. 'value' → logprob: -9.256026268005371
    9. ']' → logprob: -9.881026268005371
    10. '   ' → logprob: -10.256026268005371

Token 556: ']:' (ID: 12433)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.38932523131370544
    2. '][' → logprob: -1.1393252611160278
    3. '][]' → logprob: -6.764325141906738
    4. '[length' → logprob: -7.764325141906738
    5. ']=' → logprob: -7.889325141906738
    6. '[' → logprob: -9.139325141906738
    7. '```' → logprob: -9.764325141906738
    8. '\[' → logprob: -9.889325141906738
    9. ']
' → logprob: -10.264325141906738
    10. 's' → logprob: -10.514325141906738

Token 557: ' number' (ID: 2086)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.07768505811691284
    2. ' [' → logprob: -3.2026851177215576
    3. '=' → logprob: -4.5776848793029785
    4. '0' → logprob: -4.8276848793029785
    5. '[[' → logprob: -5.3276848793029785
    6. ' =' → logprob: -5.8276848793029785
    7. '[
' → logprob: -6.2026848793029785
    8. '{' → logprob: -6.2026848793029785
    9. 'default' → logprob: -7.0776848793029785
    10. '[int' → logprob: -7.2026848793029785

Token 558: ' of' (ID: 328)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6690187454223633
    2. '=' → logprob: -0.9190187454223633
    3. '[
' → logprob: -2.5440187454223633
    4. ']' → logprob: -4.919018745422363
    5. '][' → logprob: -7.294018745422363
    6. ' =' → logprob: -7.794018745422363
    7. '=
' → logprob: -8.419018745422363
    8. '[]' → logprob: -8.419018745422363
    9. '_' → logprob: -9.169018745422363
    10. ')' → logprob: -9.294018745422363

Token 559: ' strictly' (ID: 38971)
  Prédit: '[length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[length' → logprob: -0.006048128008842468
    2. '[' → logprob: -6.256048202514648
    3. 'length' → logprob: -6.381048202514648
    4. '[
' → logprob: -6.881048202514648
    5. ' [' → logprob: -7.131048202514648
    6. '(length' → logprob: -8.631048202514648
    7. '[count' → logprob: -8.881048202514648
    8. '[number' → logprob: -9.631048202514648
    9. ' =' → logprob: -10.256048202514648
    10. '=' → logprob: -10.381048202514648

Token 560: ' increasing' (ID: 11293)
  Prédit: '_in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_in' → logprob: -0.04541479051113129
    2. '[' → logprob: -4.545414924621582
    3. '```' → logprob: -5.170414924621582
    4. '_' → logprob: -5.295414924621582
    5. 'in' → logprob: -5.420414924621582
    6. '_length' → logprob: -5.545414924621582
    7. '_increment' → logprob: -5.670414924621582
    8. '``' → logprob: -6.170414924621582
    9. '[length' → logprob: -6.670414924621582
    10. '[
' → logprob: -6.920414924621582

Token 561: ' sequences' (ID: 45665)
  Prédit: '[length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[length' → logprob: -0.006396192125976086
    2. '[' → logprob: -5.256396293640137
    3. '[
' → logprob: -8.006396293640137
    4. '[len' → logprob: -8.381396293640137
    5. '_sequences' → logprob: -8.881396293640137
    6. '```' → logprob: -9.256396293640137
    7. '\[' → logprob: -9.756396293640137
    8. '_sequence' → logprob: -10.006396293640137
    9. '[int' → logprob: -10.506396293640137
    10. '][' → logprob: -10.756396293640137

Token 562: ' of' (ID: 328)
  Prédit: '[length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[length' → logprob: -0.1607145220041275
    2. '[' → logprob: -2.285714626312256
    3. '```' → logprob: -3.660714626312256
    4. '\[' → logprob: -4.410714626312256
    5. '[len' → logprob: -5.410714626312256
    6. '[
' → logprob: -6.660714626312256
    7. '[l' → logprob: -7.535714626312256
    8. '[int' → logprob: -7.660714626312256
    9. '\' → logprob: -8.035714149475098
    10. '_' → logprob: -8.535714149475098

Token 563: ' length' (ID: 5517)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.006856743711978197
    2. ' length' → logprob: -5.006856918334961
    3. '(length' → logprob: -10.006856918334961
    4. '[length' → logprob: -10.381856918334961
    5. 'numbers' → logprob: -10.506856918334961
    6. '```' → logprob: -11.506856918334961
    7. 'leng' → logprob: -12.131856918334961
    8. 'len' → logprob: -12.381856918334961
    9. 'values' → logprob: -12.381856918334961
    10. ' numbers' → logprob: -13.006856918334961

Token 564: ' "' (ID: 392)
  Prédit: '[length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[length' → logprob: -0.029910504817962646
    2. '[' → logprob: -3.6549105644226074
    3. '[l' → logprob: -6.529910564422607
    4. '```' → logprob: -7.279910564422607
    5. '[len' → logprob: -7.529910564422607
    6. '\[' → logprob: -7.904910564422607
    7. '[
' → logprob: -9.02991008758545
    8. '[int' → logprob: -9.27991008758545
    9. '`' → logprob: -10.02991008758545
    10. 'length' → logprob: -10.02991008758545

Token 565: 'length' (ID: 7914)
  Prédit: 'length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.09057534486055374
    2. '][' → logprob: -3.2155754566192627
    3. ']' → logprob: -4.340575218200684
    4. 'i' → logprob: -4.590575218200684
    5. 'l' → logprob: -4.965575218200684
    6. ' length' → logprob: -5.340575218200684
    7. '[length' → logprob: -5.715575218200684
    8. '```' → logprob: -6.090575218200684
    9. 'pos' → logprob: -6.840575218200684
    10. ' ][' → logprob: -6.965575218200684

Token 566: '"' (ID: 1)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '][' → logprob: -0.02241818793118
    2. '+' → logprob: -4.397418022155762
    3. ']' → logprob: -5.022418022155762
    4. '```' → logprob: -6.897418022155762
    5. '[' → logprob: -7.772418022155762
    6. ']
' → logprob: -8.022418022155762
    7. '   ' → logprob: -8.022418022155762
    8. '=' → logprob: -8.147418022155762
    9. ' +' → logprob: -8.772418022155762
    10. '"][' → logprob: -8.897418022155762

Token 567: ' and' (ID: 326)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.1627819836139679
    2. '[' → logprob: -2.1627819538116455
    3. '][' → logprob: -4.912782192230225
    4. '\[' → logprob: -5.037782192230225
    5. '``' → logprob: -5.162782192230225
    6. '[
' → logprob: -5.912782192230225
    7. '_' → logprob: -6.162782192230225
    8. ']' → logprob: -6.287782192230225
    9. '`' → logprob: -6.662782192230225
    10. '[length' → logprob: -6.787782192230225

Token 568: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.18462245166301727
    2. ' sum' → logprob: -1.9346224069595337
    3. 'prev' → logprob: -4.059622287750244
    4. '```' → logprob: -6.309622287750244
    5. 'total' → logprob: -6.684622287750244
    6. ' prev' → logprob: -6.684622287750244
    7. ' total' → logprob: -7.934622287750244
    8. ' last' → logprob: -8.684622764587402
    9. 'last' → logprob: -8.684622764587402
    10. '``' → logprob: -8.684622764587402

Token 569: ' =' (ID: 314)
  Prédit: '[length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[length' → logprob: -0.14707046747207642
    2. '```' → logprob: -2.8970704078674316
    3. '[' → logprob: -3.1470704078674316
    4. '[len' → logprob: -4.272070407867432
    5. '\[' → logprob: -4.897070407867432
    6. ']' → logprob: -5.272070407867432
    7. '][' → logprob: -6.272070407867432
    8. '_' → logprob: -6.272070407867432
    9. '=' → logprob: -6.397070407867432
    10. 's' → logprob: -7.022070407867432

Token 570: ' "' (ID: 392)
  Prédit: ' sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.28119057416915894
    2. 'sum' → logprob: -1.4061906337738037
    3. '(sum' → logprob: -10.906190872192383
    4. '=sum' → logprob: -12.031190872192383
    5. '```' → logprob: -12.531190872192383
    6. '	sum' → logprob: -12.656190872192383
    7. ' ' → logprob: -13.281190872192383
    8. ' ' → logprob: -13.406190872192383
    9. ' s' → logprob: -13.531190872192383
    10. 's' → logprob: -13.656190872192383

Token 571: 'sum' (ID: 12298)
  Prédit: ' sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.6931565999984741
    2. 'sum' → logprob: -0.6931565999984741
    3. ' s' → logprob: -13.318156242370605
    4. 's' → logprob: -13.443156242370605
    5. '(sum' → logprob: -13.568156242370605
    6. ' ' → logprob: -13.693156242370605
    7. '```' → logprob: -14.193156242370605
    8. '	sum' → logprob: -14.318156242370605
    9. '=sum' → logprob: -14.318156242370605
    10. '   ' → logprob: -14.693156242370605

Token 572: '"' (ID: 1)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.11180447041988373
    2. '```' → logprob: -3.361804485321045
    3. '[length' → logprob: -3.986804485321045
    4. '][' → logprob: -4.111804485321045
    5. '[' → logprob: -4.486804485321045
    6. '_' → logprob: -4.861804485321045
    7. '[len' → logprob: -5.736804485321045
    8. '[
' → logprob: -6.111804485321045
    9. '\[' → logprob: -6.611804485321045
    10. 'def' → logprob: -6.736804485321045

Token 573: ' drawn' (ID: 25279)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.29616615176200867
    2. '```' → logprob: -2.046166181564331
    3. '=' → logprob: -2.671166181564331
    4. '\[' → logprob: -4.671165943145752
    5. '[
' → logprob: -4.796165943145752
    6. ']' → logprob: -5.171165943145752
    7. 'def' → logprob: -5.296165943145752
    8. ',' → logprob: -5.296165943145752
    9. '`' → logprob: -5.421165943145752
    10. ':' → logprob: -5.546165943145752

Token 574: ' from' (ID: 591)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.25457072257995605
    2. '[' → logprob: -2.004570722579956
    3. '```' → logprob: -2.629570722579956
    4. '[
' → logprob: -4.629570960998535
    5. '[from' → logprob: -6.129570960998535
    6. '\[' → logprob: -6.879570960998535
    7. ' from' → logprob: -7.004570960998535
    8. '=' → logprob: -7.004570960998535
    9. '``' → logprob: -7.129570960998535
    10. '_' → logprob: -7.754570960998535

Token 575: ' ' (ID: 220)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.48297151923179626
    2. ' range' → logprob: -1.3579715490341187
    3. '[' → logprob: -2.982971429824829
    4. '1' → logprob: -4.232971668243408
    5. 'M' → logprob: -4.732971668243408
    6. '[M' → logprob: -4.857971668243408
    7. '{' → logprob: -4.982971668243408
    8. 'length' → logprob: -4.982971668243408
    9. '[length' → logprob: -4.982971668243408
    10. ' M' → logprob: -5.232971668243408

Token 576: '1' (ID: 16)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.1580352783203125
    2. 'M' → logprob: -3.1580352783203125
    3. '1' → logprob: -3.5330352783203125
    4. '{' → logprob: -3.7830352783203125
    5. ' range' → logprob: -4.0330352783203125
    6. '[' → logprob: -4.5330352783203125
    7. '[M' → logprob: -5.4080352783203125
    8. '```' → logprob: -5.5330352783203125
    9. 'numbers' → logprob: -5.6580352783203125
    10. 'the' → logprob: -5.7830352783203125

Token 577: '..' (ID: 485)
  Prédit: '..'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '..' → logprob: -0.004828461445868015
    2. '+' → logprob: -6.629828453063965
    3. ' ..' → logprob: -7.004828453063965
    4. '```' → logprob: -7.379828453063965
    5. '.' → logprob: -7.504828453063965
    6. '..
' → logprob: -7.879828453063965
    7. '...' → logprob: -7.879828453063965
    8. ' +' → logprob: -8.629828453063965
    9. '   ' → logprob: -9.879828453063965
    10. 'to' → logprob: -10.254828453063965

Token 578: 'M' (ID: 44)
  Prédit: 'M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.014256121590733528
    2. ' M' → logprob: -4.264256000518799
    3. 'range' → logprob: -10.639256477355957
    4. ' range' → logprob: -11.514256477355957
    5. '[M' → logprob: -11.514256477355957
    6. ' ' → logprob: -11.639256477355957
    7. '1' → logprob: -11.764256477355957
    8. '   ' → logprob: -11.764256477355957
    9. '[' → logprob: -11.889256477355957
    10. '```' → logprob: -12.764256477355957

Token 579: '.
' (ID: 558)
  Prédit: '[length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[length' → logprob: -1.2542487382888794
    2. '```' → logprob: -1.3792487382888794
    3. '[' → logprob: -2.00424861907959
    4. 'def' → logprob: -2.25424861907959
    5. ' =' → logprob: -2.87924861907959
    6. '=' → logprob: -3.25424861907959
    7. '_' → logprob: -3.37924861907959
    8. ']' → logprob: -3.37924861907959
    9. '[len' → logprob: -4.75424861907959
    10. ')' → logprob: -5.12924861907959

Token 580: '   ' (ID: 271)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.050624869763851166
    2. '```' → logprob: -3.5506248474121094
    3. '\[' → logprob: -5.050624847412109
    4. 'def' → logprob: -5.550624847412109
    5. '[
' → logprob: -5.550624847412109
    6. '=' → logprob: -6.300624847412109
    7. '[length' → logprob: -6.800624847412109
    8. ',' → logprob: -7.175624847412109
    9. '\' → logprob: -7.425624847412109
    10. '_' → logprob: -8.17562484741211

Token 581: ' #' (ID: 1069)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.11075475066900253
    2. '```' → logprob: -3.3607547283172607
    3. ':' → logprob: -3.8607547283172607
    4. 'def' → logprob: -4.11075496673584
    5. '=' → logprob: -4.86075496673584
    6. '_' → logprob: -5.36075496673584
    7. ',' → logprob: -5.61075496673584
    8. ' =' → logprob: -5.98575496673584
    9. '[
' → logprob: -6.11075496673584
    10. '\[' → logprob: -6.11075496673584

Token 582: ' Use' (ID: 7649)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7741939425468445
    2. '=' → logprob: -1.1491940021514893
    3. ' =' → logprob: -2.6491940021514893
    4. '```' → logprob: -3.3991940021514893
    5. ':' → logprob: -3.6491940021514893
    6. '   ' → logprob: -3.8991940021514893
    7. 'def' → logprob: -4.02419376373291
    8. ',' → logprob: -4.77419376373291
    9. '[
' → logprob: -5.02419376373291
    10. ']' → logprob: -5.02419376373291

Token 583: ' combin' (ID: 25307)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6470390558242798
    2. 'for' → logprob: -1.1470390558242798
    3. ' two' → logprob: -2.7720389366149902
    4. 'dp' → logprob: -4.02203893661499
    5. '   ' → logprob: -4.27203893661499
    6. ' nested' → logprob: -4.39703893661499
    7. 'two' → logprob: -4.64703893661499
    8. ' prefix' → logprob: -4.89703893661499
    9. ' a' → logprob: -5.02203893661499
    10. 'prev' → logprob: -5.52203893661499

Token 584: 'atorial' (ID: 68745)
  Prédit: 'ation'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ation' → logprob: -0.3778761923313141
    2. 'atorial' → logprob: -1.3778761625289917
    3. 'ational' → logprob: -3.1278762817382812
    4. '```' → logprob: -5.627876281738281
    5. '[' → logprob: -6.002876281738281
    6. 'def' → logprob: -6.002876281738281
    7. 'ator' → logprob: -6.627876281738281
    8. '[
' → logprob: -6.752876281738281
    9. 'dp' → logprob: -6.877876281738281
    10. '
' → logprob: -6.877876281738281

Token 585: ' DP' (ID: 51992)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.9290036559104919
    2. 'dp' → logprob: -1.4290037155151367
    3. '_dp' → logprob: -1.5540037155151367
    4. '[' → logprob: -3.0540037155151367
    5. '```' → logprob: -3.3040037155151367
    6. 'def' → logprob: -4.304003715515137
    7. ']' → logprob: -4.554003715515137
    8. '(dp' → logprob: -4.804003715515137
    9. '[
' → logprob: -5.304003715515137
    10. '`' → logprob: -5.429003715515137

Token 586: ':
' (ID: 734)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.0339211225509644
    2. '[
' → logprob: -2.033921241760254
    3. '[' → logprob: -2.158921241760254
    4. ']' → logprob: -2.533921241760254
    5. '```' → logprob: -2.533921241760254
    6. '   ' → logprob: -2.908921241760254
    7. ':' → logprob: -3.283921241760254
    8. '=' → logprob: -4.158921241760254
    9. '`' → logprob: -4.283921241760254
    10. ' =' → logprob: -4.408921241760254

Token 587: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.550070881843567
    2. '\' → logprob: -1.675070881843567
    3. '[' → logprob: -1.800070881843567
    4. '\n' → logprob: -2.3000707626342773
    5. '\t' → logprob: -2.4250707626342773
    6. '```' → logprob: -2.8000707626342773
    7. '\[' → logprob: -3.5500707626342773
    8. 'def' → logprob: -3.5500707626342773
    9. ' ' → logprob: -3.8000707626342773
    10. '    ' → logprob: -4.300070762634277

Token 588: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11918062716722488
    2. '\' → logprob: -3.869180679321289
    3. 'def' → logprob: -4.244180679321289
    4. '[' → logprob: -4.369180679321289
    5. ' =' → logprob: -4.994180679321289
    6. '    ' → logprob: -4.994180679321289
    7. ' ' → logprob: -5.119180679321289
    8. '```' → logprob: -5.119180679321289
    9. '\n' → logprob: -5.244180679321289
    10. '\t' → logprob: -5.369180679321289

Token 589: ' dp' (ID: 21546)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.1362451314926147
    2. 'dp' → logprob: -1.7612451314926147
    3. '\' → logprob: -2.2612452507019043
    4. '   ' → logprob: -2.8862452507019043
    5. '```' → logprob: -2.8862452507019043
    6. '\n' → logprob: -3.2612452507019043
    7. '\t' → logprob: -3.6362452507019043
    8. ' \' → logprob: -3.6362452507019043
    9. ' dp' → logprob: -3.6362452507019043
    10. 'def' → logprob: -3.6362452507019043

Token 590: '[' (ID: 58)
  Prédit: '[length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[length' → logprob: -0.008075838908553123
    2. '[' → logprob: -5.008075714111328
    3. '[len' → logprob: -8.008075714111328
    4. '=' → logprob: -8.258075714111328
    5. '[
' → logprob: -8.258075714111328
    6. 'dp' → logprob: -8.633075714111328
    7. '\[' → logprob: -9.383075714111328
    8. '```' → logprob: -9.508075714111328
    9. '_' → logprob: -10.508075714111328
    10. '(length' → logprob: -10.883075714111328

Token 591: '0' (ID: 15)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.03018547035753727
    2. '[length' → logprob: -4.155185699462891
    3. '0' → logprob: -5.155185699462891
    4. '][' → logprob: -5.780185699462891
    5. ']' → logprob: -6.280185699462891
    6. 'l' → logprob: -6.405185699462891
    7. '[' → logprob: -7.280185699462891
    8. '1' → logprob: -7.530185699462891
    9. '(length' → logprob: -9.28018569946289
    10. '[l' → logprob: -9.78018569946289

Token 592: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.2907434105873108
    2. ']' → logprob: -1.540743350982666
    3. '[' → logprob: -3.790743350982666
    4. '```' → logprob: -4.665743350982666
    5. '[length' → logprob: -5.790743350982666
    6. '\[' → logprob: -7.415743350982666
    7. '[len' → logprob: -7.665743350982666
    8. '][]' → logprob: -8.040743827819824
    9. '   ' → logprob: -8.415743827819824
    10. '``' → logprob: -8.540743827819824

Token 593: '0' (ID: 15)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.3694354295730591
    2. '0' → logprob: -1.244435429573059
    3. '][' → logprob: -3.9944353103637695
    4. ']=' → logprob: -7.3694353103637695
    5. '{' → logprob: -7.6194353103637695
    6. ' ]' → logprob: -7.6194353103637695
    7. '[' → logprob: -8.11943531036377
    8. '=' → logprob: -9.86943531036377
    9. ' ' → logprob: -9.86943531036377
    10. '```' → logprob: -9.86943531036377

Token 594: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.04722548648715019
    2. '][' → logprob: -3.1722254753112793
    3. ']=' → logprob: -6.172225475311279
    4. ']+=' → logprob: -6.422225475311279
    5. '][]' → logprob: -8.797225952148438
    6. '[' → logprob: -9.047225952148438
    7. ']+' → logprob: -10.047225952148438
    8. '```' → logprob: -10.297225952148438
    9. '+' → logprob: -10.422225952148438
    10. ']==' → logprob: -10.547225952148438

Token 595: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.9269298911094666
    2. '[' → logprob: -1.3019299507141113
    3. '```' → logprob: -1.5519299507141113
    4. ' =' → logprob: -3.0519299507141113
    5. '[i' → logprob: -3.4269299507141113
    6. '][' → logprob: -4.551929950714111
    7. '\[' → logprob: -5.051929950714111
    8. ']' → logprob: -5.426929950714111
    9. '=[' → logprob: -6.301929950714111
    10. '[int' → logprob: -6.301929950714111

Token 596: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.375000953674316
    3. '{' → logprob: -15.750000953674316
    4. '=' → logprob: -19.5
    5. '
' → logprob: -19.75
    6. '`' → logprob: -19.875
    7. '```' → logprob: -20.125
    8. ' =' → logprob: -20.375
    9. '   ' → logprob: -20.75
    10. '[' → logprob: -20.875

Token 597: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -18.125
    3. '```' → logprob: -19.75
    4. '{' → logprob: -20.125
    5. '`' → logprob: -21.375
    6. '
' → logprob: -22.125
    7. '   ' → logprob: -23.25
    8. '

' → logprob: -23.375
    9. '=' → logprob: -24.0
    10. '0' → logprob: -24.375

Token 598: '
' (ID: 198)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.6985955834388733
    2. '```' → logprob: -1.4485955238342285
    3. '[' → logprob: -2.3235955238342285
    4. '\n' → logprob: -2.4485955238342285
    5. '[
' → logprob: -3.4485955238342285
    6. '`' → logprob: -4.6985955238342285
    7. ',' → logprob: -5.1985955238342285
    8. '
' → logprob: -5.1985955238342285
    9. '``' → logprob: -5.4485955238342285
    10. 'def' → logprob: -5.4485955238342285

Token 599: '   ' (ID: 271)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.6645487546920776
    2. '   ' → logprob: -0.9145487546920776
    3. '```' → logprob: -3.289548873901367
    4. '
' → logprob: -3.789548873901367
    5. '\n' → logprob: -5.289548873901367
    6. '\' → logprob: -5.289548873901367
    7. ',' → logprob: -5.664548873901367
    8. 'for' → logprob: -6.289548873901367
    9. ' dp' → logprob: -6.539548873901367
    10. ',
' → logprob: -6.789548873901367

Token 600: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.32200294733047485
    2. 'dp' → logprob: -1.82200288772583
    3. '```' → logprob: -3.32200288772583
    4. 'for' → logprob: -3.69700288772583
    5. ' for' → logprob: -3.82200288772583
    6. 'def' → logprob: -4.32200288772583
    7. ' =' → logprob: -5.32200288772583
    8. '=' → logprob: -5.82200288772583
    9. ' dp' → logprob: -6.57200288772583
    10. '
' → logprob: -6.69700288772583

Token 601: ' For' (ID: 2214)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.9601441025733948
    2. ' for' → logprob: -1.21014404296875
    3. 'dp' → logprob: -1.46014404296875
    4. '   ' → logprob: -2.58514404296875
    5. ' dp' → logprob: -4.71014404296875
    6. 'def' → logprob: -6.71014404296875
    7. '```' → logprob: -7.33514404296875
    8. '
' → logprob: -8.46014404296875
    9. ' ' → logprob: -9.46014404296875
    10. '	for' → logprob: -9.96014404296875

Token 602: ' x' (ID: 1215)
  Prédit: ' length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' length' → logprob: -0.4776822328567505
    2. ' num' → logprob: -2.102682113647461
    3. ' i' → logprob: -2.727682113647461
    4. ' x' → logprob: -2.977682113647461
    5. 'length' → logprob: -3.227682113647461
    6. ' l' → logprob: -3.477682113647461
    7. ' val' → logprob: -3.477682113647461
    8. 'i' → logprob: -4.477682113647461
    9. ' number' → logprob: -4.727682113647461
    10. 'num' → logprob: -5.102682113647461

Token 603: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0740680918097496
    2. 'in' → logprob: -2.699068069458008
    3. ' =' → logprob: -6.074068069458008
    4. '=' → logprob: -6.824068069458008
    5. ']' → logprob: -8.449068069458008
    6. ',' → logprob: -8.574068069458008
    7. ')' → logprob: -9.199068069458008
    8. '[' → logprob: -9.574068069458008
    9. ' ' → logprob: -10.574068069458008
    10. '_' → logprob: -10.824068069458008

Token 604: ' [' (ID: 723)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.020569220185279846
    2. 'range' → logprob: -3.895569324493408
    3. '1' → logprob: -11.27056884765625
    4. '   ' → logprob: -11.52056884765625
    5. ' ' → logprob: -12.52056884765625
    6. ' ' → logprob: -14.77056884765625
    7. '  ' → logprob: -15.64556884765625
    8. '(range' → logprob: -15.77056884765625
    9. '	range' → logprob: -16.14556884765625
    10. '    ' → logprob: -16.77056884765625

Token 605: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00025311444187536836
    2. ' ' → logprob: -8.375252723693848
    3. '   ' → logprob: -10.750252723693848
    4. 'range' → logprob: -14.625252723693848
    5. '  ' → logprob: -15.750252723693848
    6. '    ' → logprob: -16.250253677368164
    7. '```' → logprob: -16.750253677368164
    8. ',' → logprob: -16.875253677368164
    9. ' ' → logprob: -17.000253677368164
    10. ' range' → logprob: -17.250253677368164

Token 606: '..' (ID: 485)
  Prédit: '..'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '..' → logprob: -0.0008254681597463787
    2. ' ..' → logprob: -8.000825881958008
    3. '...' → logprob: -8.125825881958008
    4. ':' → logprob: -9.375825881958008
    5. ',' → logprob: -9.750825881958008
    6. '
' → logprob: -10.875825881958008
    7. ']:' → logprob: -11.625825881958008
    8. ' ' → logprob: -12.125825881958008
    9. '][' → logprob: -13.250825881958008
    10. ']:
' → logprob: -13.500825881958008

Token 607: 'M' (ID: 44)
  Prédit: 'M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.032252226024866104
    2. 'N' → logprob: -4.157252311706543
    3. ' M' → logprob: -4.157252311706543
    4. ' N' → logprob: -8.782252311706543
    5. '1' → logprob: -9.282252311706543
    6. ' ' → logprob: -9.657252311706543
    7. ',' → logprob: -10.032252311706543
    8. '   ' → logprob: -10.157252311706543
    9. ']' → logprob: -10.907252311706543
    10. 'range' → logprob: -12.032252311706543

Token 608: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.07042840123176575
    2. ']:' → logprob: -2.6954283714294434
    3. ']' → logprob: -9.320428848266602
    4. '   ' → logprob: -9.445428848266602
    5. ':
' → logprob: -9.570428848266602
    6. ']:
' → logprob: -9.695428848266602
    7. ':' → logprob: -9.945428848266602
    8. '+' → logprob: -10.070428848266602
    9. ']:

' → logprob: -10.070428848266602
    10. '):
' → logprob: -10.445428848266602

Token 609: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5363419055938721
    2. '   ' → logprob: -0.9113419055938721
    3. 'for' → logprob: -4.661341667175293
    4. '```' → logprob: -5.911341667175293
    5. '    ' → logprob: -8.286341667175293
    6. '``' → logprob: -8.786341667175293
    7. ',' → logprob: -9.036341667175293
    8. '    
' → logprob: -9.286341667175293
    9. ' ```' → logprob: -9.536341667175293
    10. '
' → logprob: -9.786341667175293

Token 610: ' #' (ID: 1069)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.36186981201171875
    2. '   ' → logprob: -1.2368698120117188
    3. 'for' → logprob: -4.486869812011719
    4. '    ' → logprob: -6.861869812011719
    5. '```' → logprob: -7.611869812011719
    6. '	for' → logprob: -8.611869812011719
    7. '       ' → logprob: -9.611869812011719
    8. ' ' → logprob: -9.736869812011719
    9. '   ' → logprob: -9.736869812011719
    10. ' ' → logprob: -9.861869812011719

Token 611: '  ' (ID: 256)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.017820235341787338
    2. 'for' → logprob: -4.142820358276367
    3. '   ' → logprob: -6.392820358276367
    4. '	for' → logprob: -9.642820358276367
    5. '```' → logprob: -10.767820358276367
    6. ' ' → logprob: -11.392820358276367
    7. '    ' → logprob: -11.767820358276367
    8. ' ' → logprob: -13.517820358276367
    9. '``' → logprob: -14.517820358276367
    10. ' ' → logprob: -14.517820358276367

Token 612: ' For' (ID: 2214)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.25200098752975464
    2. ' for' → logprob: -1.5020010471343994
    3. '   ' → logprob: -9.62700080871582
    4. ' ' → logprob: -12.87700080871582
    5. '```' → logprob: -13.00200080871582
    6. '``' → logprob: -15.25200080871582
    7. 'from' → logprob: -15.87700080871582
    8. '	for' → logprob: -15.87700080871582
    9. 'length' → logprob: -16.25200080871582
    10. '    ' → logprob: -16.62700080871582

Token 613: ' length' (ID: 5517)
  Prédit: ' length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' length' → logprob: -0.0819978266954422
    2. 'length' → logprob: -2.581997871398926
    3. ' l' → logprob: -5.956997871398926
    4. 'l' → logprob: -7.706997871398926
    5. '   ' → logprob: -10.581997871398926
    6. ' ' → logprob: -11.956997871398926
    7. '```' → logprob: -12.081997871398926
    8. ' lenght' → logprob: -12.706997871398926
    9. ' L' → logprob: -12.956997871398926
    10. '`' → logprob: -13.206997871398926

Token 614: ' from' (ID: 591)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.08401110023260117
    2. 'in' → logprob: -2.7090110778808594
    3. ' =' → logprob: -4.959011077880859
    4. '   ' → logprob: -6.084011077880859
    5. '=' → logprob: -6.709011077880859
    6. ',' → logprob: -6.959011077880859
    7. ' +' → logprob: -7.334011077880859
    8. '[' → logprob: -7.584011077880859
    9. '+' → logprob: -7.834011077880859
    10. '	in' → logprob: -8.58401107788086

Token 615: ' N' (ID: 478)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03198787197470665
    2. 'length' → logprob: -4.03198766708374
    3. 'x' → logprob: -5.40698766708374
    4. 'N' → logprob: -5.40698766708374
    5. ' ' → logprob: -5.78198766708374
    6. ' length' → logprob: -7.15698766708374
    7. ' x' → logprob: -8.156988143920898
    8. '0' → logprob: -8.531988143920898
    9. 'dp' → logprob: -9.281988143920898
    10. ' N' → logprob: -9.281988143920898

Token 616: '*N' (ID: 107360)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.12342454493045807
    2. ' +' → logprob: -2.248424530029297
    3. '   ' → logprob: -5.623424530029297
    4. '```' → logprob: -5.748424530029297
    5. '-' → logprob: -6.498424530029297
    6. ',' → logprob: -7.748424530029297
    7. 'for' → logprob: -7.873424530029297
    8. ' ' → logprob: -8.498424530029297
    9. '=' → logprob: -8.623424530029297
    10. '[' → logprob: -8.873424530029297

Token 617: ' down' (ID: 1917)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.30660635232925415
    2. ' +' → logprob: -2.1816062927246094
    3. 'to' → logprob: -3.0566062927246094
    4. ' in' → logprob: -3.8066062927246094
    5. ',' → logprob: -3.9316062927246094
    6. 'down' → logprob: -4.556606292724609
    7. ' down' → logprob: -4.556606292724609
    8. ' to' → logprob: -4.806606292724609
    9. '-' → logprob: -4.806606292724609
    10. '```' → logprob: -5.056606292724609

Token 618: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.03126579523086548
    2. ' to' → logprob: -4.156265735626221
    3. '   ' → logprob: -4.781265735626221
    4. '       ' → logprob: -6.156265735626221
    5. 'in' → logprob: -6.281265735626221
    6. 'wards' → logprob: -7.656265735626221
    7. ' in' → logprob: -7.781265735626221
    8. '_to' → logprob: -7.781265735626221
    9. '```' → logprob: -7.906265735626221
    10. '           ' → logprob: -8.281266212463379

Token 619: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.14978492259979248
    2. 'length' → logprob: -2.149785041809082
    3. 'x' → logprob: -4.399785041809082
    4. ' ' → logprob: -5.774785041809082
    5. ' length' → logprob: -5.774785041809082
    6. 'N' → logprob: -5.774785041809082
    7. ' x' → logprob: -7.774785041809082
    8. '```' → logprob: -8.399785041809082
    9. '   ' → logprob: -8.649785041809082
    10. ' N' → logprob: -9.649785041809082

Token 620: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0009454108658246696
    2. 'N' → logprob: -7.500945568084717
    3. 'x' → logprob: -8.500945091247559
    4. 'length' → logprob: -8.750945091247559
    5. ' ' → logprob: -10.750945091247559
    6. '```' → logprob: -12.625945091247559
    7. '   ' → logprob: -13.000945091247559
    8. 'M' → logprob: -14.000945091247559
    9. '0' → logprob: -14.250945091247559
    10. 'dp' → logprob: -14.625945091247559

Token 621: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.018027130514383316
    2. ':
' → logprob: -4.393027305603027
    3. '   ' → logprob: -5.768027305603027
    4. ',' → logprob: -6.768027305603027
    5. '       ' → logprob: -7.143027305603027
    6. '<|end|>' → logprob: -8.893027305603027
    7. '    ' → logprob: -9.768027305603027
    8. '     ' → logprob: -10.393027305603027
    9. '<|end|>' → logprob: -10.393027305603027
    10. ' :' → logprob: -10.393027305603027

Token 622: '   ' (ID: 271)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.024139700457453728
    2. '   ' → logprob: -4.524139881134033
    3. '```' → logprob: -4.774139881134033
    4. ' for' → logprob: -6.899139881134033
    5. '           ' → logprob: -7.149139881134033
    6. '     ' → logprob: -7.149139881134033
    7. ' ' → logprob: -7.524139881134033
    8. '    ' → logprob: -7.524139881134033
    9. '               ' → logprob: -8.524139404296875
    10. ',' → logprob: -8.774139404296875

Token 623: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05020083487033844
    2. ' for' → logprob: -4.050200939178467
    3. '   ' → logprob: -4.300200939178467
    4. '    ' → logprob: -5.175200939178467
    5. '```' → logprob: -5.675200939178467
    6. 'for' → logprob: -6.175200939178467
    7. '     ' → logprob: -6.550200939178467
    8. ':' → logprob: -6.550200939178467
    9. ' ' → logprob: -6.675200939178467
    10. '           ' → logprob: -6.675200939178467

Token 624: '    ' (ID: 257)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6217285990715027
    2. 'for' → logprob: -1.7467286586761475
    3. ' for' → logprob: -1.8717286586761475
    4. '   ' → logprob: -2.2467286586761475
    5. '           ' → logprob: -4.621728420257568
    6. '```' → logprob: -4.871728420257568
    7. '               ' → logprob: -5.746728420257568
    8. 'dp' → logprob: -6.121728420257568
    9. '    ' → logprob: -6.371728420257568
    10. '                   ' → logprob: -6.746728420257568

Token 625: ' For' (ID: 2214)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3094705641269684
    2. 'dp' → logprob: -2.3094706535339355
    3. 'for' → logprob: -2.3094706535339355
    4. ' dp' → logprob: -2.8094706535339355
    5. '   ' → logprob: -5.4344706535339355
    6. '    ' → logprob: -7.0594706535339355
    7. ' range' → logprob: -7.6844706535339355
    8. '```' → logprob: -7.9344706535339355
    9. ' ' → logprob: -8.184470176696777
    10. '       ' → logprob: -8.309470176696777

Token 626: ' sum' (ID: 4215)
  Prédit: ' sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.2565709352493286
    2. 'sum' → logprob: -1.5065709352493286
    3. ' s' → logprob: -5.631570816040039
    4. 's' → logprob: -7.006570816040039
    5. ' S' → logprob: -9.756570816040039
    6. 'S' → logprob: -10.506570816040039
    7. ' range' → logprob: -10.756570816040039
    8. '```' → logprob: -11.881570816040039
    9. '   ' → logprob: -12.131570816040039
    10. ' ' → logprob: -12.256570816040039

Token 627: ' from' (ID: 591)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1384011059999466
    2. 'in' → logprob: -2.3884010314941406
    3. 'from' → logprob: -3.5134010314941406
    4. ' from' → logprob: -5.388401031494141
    5. '=' → logprob: -6.763401031494141
    6. ' =' → logprob: -6.888401031494141
    7. '    ' → logprob: -8.76340103149414
    8. '   ' → logprob: -8.76340103149414
    9. ' +=' → logprob: -9.13840103149414
    10. ' ' → logprob: -9.51340103149414

Token 628: ' x' (ID: 1215)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.12212144583463669
    2. '0' → logprob: -3.1221213340759277
    3. ' S' → logprob: -3.1221213340759277
    4. 'x' → logprob: -4.122121334075928
    5. ' x' → logprob: -5.372121334075928
    6. 'length' → logprob: -6.372121334075928
    7. ' ' → logprob: -6.997121334075928
    8. 'sum' → logprob: -7.247121334075928
    9. 'M' → logprob: -7.372121334075928
    10. '1' → logprob: -7.622121334075928

Token 629: ' to' (ID: 316)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.5344805717468262
    2. ' x' → logprob: -1.6594805717468262
    3. ' =' → logprob: -2.284480571746826
    4. '    ' → logprob: -2.534480571746826
    5. ',' → logprob: -2.659480571746826
    6. '   ' → logprob: -2.784480571746826
    7. ' ' → logprob: -3.034480571746826
    8. ' -' → logprob: -3.284480571746826
    9. '        ' → logprob: -3.534480571746826
    10. 'x' → logprob: -3.534480571746826

Token 630: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.00863336119800806
    2. ' S' → logprob: -5.258633136749268
    3. 'x' → logprob: -6.133633136749268
    4. 'N' → logprob: -7.133633136749268
    5. ' x' → logprob: -9.008633613586426
    6. '```' → logprob: -9.633633613586426
    7. '0' → logprob: -9.758633613586426
    8. 'M' → logprob: -10.258633613586426
    9. 's' → logprob: -10.633633613586426
    10. 'MOD' → logprob: -10.758633613586426

Token 631: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.0328121185302734
    2. '                       ' → logprob: -1.9078121185302734
    3. '               ' → logprob: -1.9078121185302734
    4. '       ' → logprob: -2.1578121185302734
    5. ':
' → logprob: -2.5328121185302734
    6. '                               ' → logprob: -3.0328121185302734
    7. '           ' → logprob: -3.4078121185302734
    8. ',' → logprob: -3.9078121185302734
    9. '                   ' → logprob: -4.407812118530273
    10. '                           ' → logprob: -5.032812118530273

Token 632: '   ' (ID: 271)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.2013949155807495
    2. '               ' → logprob: -1.5763949155807495
    3. '           ' → logprob: -1.8263949155807495
    4. '```' → logprob: -1.8263949155807495
    5. '     ' → logprob: -2.826395034790039
    6. '                       ' → logprob: -2.951395034790039
    7. '                               ' → logprob: -3.701395034790039
    8. '             ' → logprob: -4.951395034790039
    9. '         ' → logprob: -4.951395034790039
    10. '                   ' → logprob: -5.076395034790039

Token 633: ' #' (ID: 1069)
  Prédit: '     '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '     ' → logprob: -1.3855986595153809
    2. '           ' → logprob: -1.6355986595153809
    3. '       ' → logprob: -1.8855986595153809
    4. '               ' → logprob: -2.510598659515381
    5. '```' → logprob: -2.760598659515381
    6. '         ' → logprob: -3.010598659515381
    7. '             ' → logprob: -3.010598659515381
    8. 'dp' → logprob: -3.010598659515381
    9. '                               ' → logprob: -3.635598659515381
    10. '                       ' → logprob: -3.760598659515381

Token 634: '      ' (ID: 1699)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.1646106243133545
    2. '           ' → logprob: -1.6646106243133545
    3. 'dp' → logprob: -2.0396106243133545
    4. '                       ' → logprob: -2.2896106243133545
    5. '```' → logprob: -2.6646106243133545
    6. '       ' → logprob: -2.6646106243133545
    7. '                   ' → logprob: -3.1646106243133545
    8. '                               ' → logprob: -3.4146106243133545
    9. ' dp' → logprob: -3.7896106243133545
    10. '                           ' → logprob: -5.039610862731934

Token 635: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.014322510920464993
    2. ' dp' → logprob: -4.264322280883789
    3. '                   ' → logprob: -10.014322280883789
    4. '               ' → logprob: -10.139322280883789
    5. '                       ' → logprob: -10.889322280883789
    6. '```' → logprob: -11.139322280883789
    7. '                           ' → logprob: -11.514322280883789
    8. '                               ' → logprob: -11.639322280883789
    9. '           ' → logprob: -11.764322280883789
    10. 'if' → logprob: -11.889322280883789

Token 636: '[length' (ID: 130091)
  Prédit: '[length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[length' → logprob: -1.6166903151315637e-05
    2. '[len' → logprob: -11.750016212463379
    3. '[' → logprob: -12.375016212463379
    4. '[l' → logprob: -13.625016212463379
    5. '```' → logprob: -14.250016212463379
    6. '   ' → logprob: -14.250016212463379
    7. 'dp' → logprob: -14.625016212463379
    8. 'length' → logprob: -15.625016212463379
    9. '           ' → logprob: -15.875016212463379
    10. '\[' → logprob: -16.000015258789062

Token 637: '][' (ID: 2696)
  Prédit: '[length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[length' → logprob: -1.1279553291387856e-05
    2. '][' → logprob: -12.000011444091797
    3. '[' → logprob: -12.625011444091797
    4. '[len' → logprob: -14.250011444091797
    5. ',length' → logprob: -14.750011444091797
    6. '(length' → logprob: -15.000011444091797
    7. '```' → logprob: -15.750011444091797
    8. ')[' → logprob: -17.000011444091797
    9. 'length' → logprob: -17.000011444091797
    10. '[l' → logprob: -17.250011444091797

Token 638: 'sum' (ID: 12298)
  Prédit: 'sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -2.9160102712921798e-05
    2. '(sum' → logprob: -10.750029563903809
    3. ' sum' → logprob: -11.875029563903809
    4. '
' → logprob: -14.750029563903809
    5. 's' → logprob: -16.250028610229492
    6. '```' → logprob: -16.375028610229492
    7. '[' → logprob: -17.125028610229492
    8. '   ' → logprob: -17.125028610229492
    9. '	sum' → logprob: -18.500028610229492
    10. ']' → logprob: -18.750028610229492

Token 639: ']' (ID: 60)
  Prédit: ']+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']+=' → logprob: -0.27616947889328003
    2. ']' → logprob: -1.5261695384979248
    3. '+=' → logprob: -3.776169538497925
    4. ' +=' → logprob: -7.276169300079346
    5. '   ' → logprob: -9.401169776916504
    6. ']=' → logprob: -9.776169776916504
    7. '```' → logprob: -9.901169776916504
    8. '[' → logprob: -9.901169776916504
    9. '+' → logprob: -10.026169776916504
    10. '=' → logprob: -10.901169776916504

Token 640: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.3469576835632324
    2. '```' → logprob: -1.3469576835632324
    3. '=' → logprob: -4.221957683563232
    4. ' +=' → logprob: -5.096957683563232
    5. ']+=' → logprob: -5.596957683563232
    6. '-=' → logprob: -5.846957683563232
    7. '                           ' → logprob: -6.846957683563232
    8. '[' → logprob: -6.846957683563232
    9. '                               ' → logprob: -7.096957683563232
    10. '                       ' → logprob: -7.346957683563232

Token 641: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.029754191637039185
    2. ' dp' → logprob: -3.529754161834717
    3. '   ' → logprob: -13.029754638671875
    4. '	dp' → logprob: -14.279754638671875
    5. '```' → logprob: -14.654754638671875
    6. '           ' → logprob: -16.279754638671875
    7. '               ' → logprob: -16.404754638671875
    8. '(dp' → logprob: -16.404754638671875
    9. '`' → logprob: -16.904754638671875
    10. ' ' → logprob: -16.904754638671875

Token 642: '[length' (ID: 130091)
  Prédit: '[length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[length' → logprob: -1.1472419600977446e-06
    2. 'length' → logprob: -14.000000953674316
    3. '(length' → logprob: -15.750000953674316
    4. '```' → logprob: -16.250001907348633
    5. '[len' → logprob: -17.375001907348633
    6. ' [' → logprob: -18.000001907348633
    7. '   ' → logprob: -18.500001907348633
    8. '[l' → logprob: -18.875001907348633
    9. ',length' → logprob: -19.250001907348633
    10. '[size' → logprob: -19.500001907348633

Token 643: '-' (ID: 12)
  Prédit: '[length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[length' → logprob: -0.00022320532298181206
    2. '[' → logprob: -9.000223159790039
    3. '[l' → logprob: -9.875223159790039
    4. '[len' → logprob: -11.125223159790039
    5. '-' → logprob: -11.500223159790039
    6. '[line' → logprob: -11.500223159790039
    7. '[level' → logprob: -12.250223159790039
    8. 'length' → logprob: -12.625223159790039
    9. '[size' → logprob: -13.250223159790039
    10. '(length' → logprob: -14.125223159790039

Token 644: '1' (ID: 16)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.09990876913070679
    2. '[' → logprob: -3.2249088287353516
    3. '][' → logprob: -3.3499088287353516
    4. '[s' → logprob: -4.849908828735352
    5. '(sum' → logprob: -5.099908828735352
    6. '1' → logprob: -6.849908828735352
    7. ' sum' → logprob: -6.849908828735352
    8. '   ' → logprob: -7.474908828735352
    9. ' ][' → logprob: -7.474908828735352
    10. ']' → logprob: -7.599908828735352

Token 645: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.01126862782984972
    2. '[s' → logprob: -4.636268615722656
    3. '][' → logprob: -6.636268615722656
    4. ' [' → logprob: -10.761268615722656
    5. '[size' → logprob: -10.886268615722656
    6. '[max' → logprob: -11.136268615722656
    7. ')[' → logprob: -11.136268615722656
    8. '   ' → logprob: -11.261268615722656
    9. '```' → logprob: -11.386268615722656
    10. '[next' → logprob: -11.761268615722656

Token 646: 'sum' (ID: 12298)
  Prédit: 'sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.0012432056246325374
    2. '(sum' → logprob: -6.7512431144714355
    3. ' sum' → logprob: -9.876243591308594
    4. '[' → logprob: -11.626243591308594
    5. '   ' → logprob: -11.751243591308594
    6. '	sum' → logprob: -13.626243591308594
    7. '```' → logprob: -14.001243591308594
    8. ' ' → logprob: -14.251243591308594
    9. '][' → logprob: -15.001243591308594
    10. '           ' → logprob: -15.376243591308594

Token 647: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.2538590133190155
    2. '[' → logprob: -1.753859043121338
    3. ' -' → logprob: -3.503859043121338
    4. '-x' → logprob: -4.753859043121338
    5. '[x' → logprob: -5.128859043121338
    6. '[-' → logprob: -6.003859043121338
    7. '-s' → logprob: -7.128859043121338
    8. '```' → logprob: -7.503859043121338
    9. '[s' → logprob: -7.628859043121338
    10. '   ' → logprob: -8.62885856628418

Token 648: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0007099286303855479
    2. ' x' → logprob: -7.2507100105285645
    3. '```' → logprob: -19.125709533691406
    4. '	x' → logprob: -19.250709533691406
    5. '{x' → logprob: -19.625709533691406
    6. '   ' → logprob: -20.000709533691406
    7. '           ' → logprob: -22.125709533691406
    8. '    ' → logprob: -22.375709533691406
    9. ')x' → logprob: -22.500709533691406
    10. '               ' → logprob: -22.625709533691406

Token 649: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0009426692849956453
    2. '               ' → logprob: -8.00094223022461
    3. '           ' → logprob: -8.75094223022461
    4. '                   ' → logprob: -9.00094223022461
    5. '   ' → logprob: -9.37594223022461
    6. '       ' → logprob: -9.62594223022461
    7. '                       ' → logprob: -10.50094223022461
    8. ' ]' → logprob: -10.75094223022461
    9. ']
' → logprob: -11.00094223022461
    10. '                           ' → logprob: -11.00094223022461

Token 650: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8834497332572937
    2. '```' → logprob: -0.8834497332572937
    3. '
' → logprob: -3.0084497928619385
    4. '[
' → logprob: -3.6334497928619385
    5. ':' → logprob: -4.008449554443359
    6. 'for' → logprob: -4.258449554443359
    7. '\n' → logprob: -4.508449554443359
    8. '[' → logprob: -4.633449554443359
    9. '``' → logprob: -4.633449554443359
    10. '\' → logprob: -5.633449554443359

Token 651: ' #
' (ID: 21888)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.44532784819602966
    2. '```' → logprob: -1.320327877998352
    3. '\n' → logprob: -3.8203277587890625
    4. '
' → logprob: -3.8203277587890625
    5. '       ' → logprob: -4.6953277587890625
    6. '[
' → logprob: -5.5703277587890625
    7. '\' → logprob: -5.8203277587890625
    8. ' =' → logprob: -5.9453277587890625
    9. '\t' → logprob: -6.0703277587890625
    10. ' ' → logprob: -6.0703277587890625

Token 652: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.030183499678969383
    2. '           ' → logprob: -4.0301833152771
    3. '```' → logprob: -5.1551833152771
    4. '       ' → logprob: -6.0301833152771
    5. ' for' → logprob: -6.2801833152771
    6. '               ' → logprob: -7.6551833152771
    7. 'for' → logprob: -7.7801833152771
    8. ' ' → logprob: -7.9051833152771
    9. '                   ' → logprob: -8.155183792114258
    10. '
' → logprob: -9.780183792114258

Token 653: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04349669814109802
    2. '```' → logprob: -3.543496608734131
    3. '\' → logprob: -5.168496608734131
    4. ' for' → logprob: -5.793496608734131
    5. 'for' → logprob: -6.793496608734131
    6. '\n' → logprob: -7.168496608734131
    7. '
' → logprob: -7.543496608734131
    8. '       ' → logprob: -7.543496608734131
    9. 'dp' → logprob: -7.668496608734131
    10. ' ' → logprob: -8.168497085571289

Token 654: ' Result' (ID: 9112)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21287941932678223
    2. 'for' → logprob: -1.9628794193267822
    3. 'dp' → logprob: -3.5878794193267822
    4. ' for' → logprob: -3.9628794193267822
    5. ' ' → logprob: -6.212879180908203
    6. '```' → logprob: -6.837879180908203
    7. '       ' → logprob: -6.962879180908203
    8. '           ' → logprob: -8.462879180908203
    9. ' dp' → logprob: -9.837879180908203
    10. 'def' → logprob: -9.837879180908203

Token 655: ' dp' (ID: 21546)
  Prédit: '[length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[length' → logprob: -0.11330960690975189
    2. '=' → logprob: -3.113309621810913
    3. ' =' → logprob: -3.738309621810913
    4. '```' → logprob: -3.988309621810913
    5. '[' → logprob: -4.613309383392334
    6. '   ' → logprob: -6.113309383392334
    7. '[
' → logprob: -6.238309383392334
    8. '
' → logprob: -6.613309383392334
    9. '[len' → logprob: -6.988309383392334
    10. ':' → logprob: -7.363309383392334

Token 656: '[N' (ID: 49776)
  Prédit: '[length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[length' → logprob: -0.11714836210012436
    2. '[N' → logprob: -2.2421483993530273
    3. '[' → logprob: -6.117148399353027
    4. 'length' → logprob: -7.617148399353027
    5. '[len' → logprob: -7.992148399353027
    6. ' =' → logprob: -8.367148399353027
    7. '```' → logprob: -8.367148399353027
    8. '][' → logprob: -9.367148399353027
    9. ']' → logprob: -9.492148399353027
    10. '[size' → logprob: -9.617148399353027

Token 657: '*N' (ID: 107360)
  Prédit: '[N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[N' → logprob: -0.3702821731567383
    2. '][' → logprob: -1.3702821731567383
    3. '*N' → logprob: -4.245282173156738
    4. '[' → logprob: -4.620282173156738
    5. '```' → logprob: -4.620282173156738
    6. ']' → logprob: -4.745282173156738
    7. '[length' → logprob: -5.870282173156738
    8. 'length' → logprob: -6.495282173156738
    9. 'N' → logprob: -6.620282173156738
    10. '[*' → logprob: -6.620282173156738

Token 658: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0021094554103910923
    2. '[N' → logprob: -6.752109527587891
    3. ']' → logprob: -7.252109527587891
    4. '[' → logprob: -9.37710952758789
    5. '```' → logprob: -9.37710952758789
    6. ']][' → logprob: -11.75210952758789
    7. '"][' → logprob: -12.00210952758789
    8. '][_' → logprob: -12.12710952758789
    9. ''][' → logprob: -12.25210952758789
    10. '\[' → logprob: -12.25210952758789

Token 659: 'S' (ID: 50)
  Prédit: 'S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -6.2729995988775045e-06
    2. ' S' → logprob: -12.000006675720215
    3. '   ' → logprob: -17.1250057220459
    4. '```' → logprob: -17.2500057220459
    5. ' ' → logprob: -17.8750057220459
    6. ']' → logprob: -18.0000057220459
    7. '[S' → logprob: -18.1250057220459
    8. '  ' → logprob: -18.7500057220459
    9. '(S' → logprob: -20.2500057220459
    10. '`' → logprob: -20.3750057220459

Token 660: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0009070566738955677
    2. '[' → logprob: -8.375906944274902
    3. '][' → logprob: -8.625906944274902
    4. ']+=' → logprob: -8.625906944274902
    5. ']+' → logprob: -9.625906944274902
    6. '[N' → logprob: -10.375906944274902
    7. ']==' → logprob: -10.375906944274902
    8. '```' → logprob: -10.500906944274902
    9. '[len' → logprob: -10.625906944274902
    10. '][]' → logprob: -10.625906944274902

Token 661: ' modulo' (ID: 112372)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.699287474155426
    2. ' =' → logprob: -1.8242874145507812
    3. ':' → logprob: -2.5742874145507812
    4. '=' → logprob: -2.5742874145507812
    5. ']' → logprob: -3.3242874145507812
    6. 'def' → logprob: -3.4492874145507812
    7. '```' → logprob: -3.5742874145507812
    8. 'import' → logprob: -4.074287414550781
    9. ':
' → logprob: -4.074287414550781
    10. 'dp' → logprob: -4.324287414550781

Token 662: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.022100139409303665
    2. ' MOD' → logprob: -3.8971002101898193
    3. '100' → logprob: -6.77209997177124
    4. '`' → logprob: -8.772100448608398
    5. '```' → logprob: -9.272100448608398
    6. ' (' → logprob: -10.147100448608398
    7. '(' → logprob: -10.647100448608398
    8. '10' → logprob: -10.647100448608398
    9. '_MOD' → logprob: -10.647100448608398
    10. '(M' → logprob: -11.022100448608398

Token 663: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.105720043182373
    2. '
' → logprob: -1.730720043182373
    3. ' =' → logprob: -1.855720043182373
    4. '=' → logprob: -2.480720043182373
    5. ':' → logprob: -2.730720043182373
    6. '```' → logprob: -2.855720043182373
    7. ':
' → logprob: -3.355720043182373
    8. 'def' → logprob: -3.980720043182373
    9. ']' → logprob: -4.230720043182373
    10. 'for' → logprob: -4.480720043182373

Token 664: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06022804602980614
    2. ':' → logprob: -3.810228109359741
    3. 'def' → logprob: -4.810227870941162
    4. '
' → logprob: -5.060227870941162
    5. '```' → logprob: -5.060227870941162
    6. ' =' → logprob: -5.310227870941162
    7. ':
' → logprob: -5.810227870941162
    8. '    
' → logprob: -6.685227870941162
    9. '=' → logprob: -6.685227870941162
    10. 'dp' → logprob: -7.310227870941162

Token 665: ' #
' (ID: 21888)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15876652300357819
    2. '
' → logprob: -2.783766508102417
    3. 'for' → logprob: -3.408766508102417
    4. '```' → logprob: -4.033766746520996
    5. 'def' → logprob: -4.783766746520996
    6. ' for' → logprob: -5.158766746520996
    7. ':' → logprob: -5.158766746520996
    8. '    
' → logprob: -5.533766746520996
    9. 'dp' → logprob: -5.533766746520996
    10. ' ' → logprob: -7.033766746520996

Token 666: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0730544924736023
    2. '```' → logprob: -3.198054552078247
    3. 'def' → logprob: -3.573054552078247
    4. ' def' → logprob: -7.698054313659668
    5. '
' → logprob: -8.448054313659668
    6. '    
' → logprob: -8.573054313659668
    7. '``' → logprob: -8.698054313659668
    8. 'dp' → logprob: -8.948054313659668
    9. '\' → logprob: -9.198054313659668
    10. ' for' → logprob: -10.198054313659668

Token 667: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.049619849771261215
    2. 'dp' → logprob: -3.4246199131011963
    3. '```' → logprob: -4.299619674682617
    4. '
' → logprob: -7.299619674682617
    5. 'def' → logprob: -7.549619674682617
    6. '\' → logprob: -8.424619674682617
    7. 'for' → logprob: -8.674619674682617
    8. ' dp' → logprob: -8.799619674682617
    9. '    
' → logprob: -9.174619674682617
    10. ' for' → logprob: -9.424619674682617

Token 668: ' We' (ID: 1416)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.6406480669975281
    2. '   ' → logprob: -0.7656480669975281
    3. 'def' → logprob: -5.390647888183594
    4. '```' → logprob: -5.765647888183594
    5. '
' → logprob: -9.390647888183594
    6. '    
' → logprob: -10.015647888183594
    7. 'for' → logprob: -10.140647888183594
    8. ' dp' → logprob: -10.140647888183594
    9. '``' → logprob: -10.765647888183594
    10. '\' → logprob: -10.890647888183594

Token 669: ' implement' (ID: 6365)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.06331658363342285
    2. '[length' → logprob: -3.438316583633423
    3. '=' → logprob: -4.188316345214844
    4. ']' → logprob: -5.188316345214844
    5. '[
' → logprob: -5.563316345214844
    6. '```' → logprob: -6.313316345214844
    7. ' =' → logprob: -7.813316345214844
    8. '\[' → logprob: -8.313316345214844
    9. 'def' → logprob: -8.438316345214844
    10. '[len' → logprob: -8.563316345214844

Token 670: ' the' (ID: 290)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.7622601985931396
    2. ':' → logprob: -1.0122601985931396
    3. '[' → logprob: -2.5122601985931396
    4. 'def' → logprob: -3.3872601985931396
    5. ']' → logprob: -4.762260437011719
    6. ':
' → logprob: -4.887260437011719
    7. '[
' → logprob: -4.887260437011719
    8. 'dp' → logprob: -4.887260437011719
    9. '``' → logprob: -5.012260437011719
    10. '=' → logprob: -5.262260437011719

Token 671: ' DP' (ID: 51992)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.6700013279914856
    2. 'def' → logprob: -0.7950013279914856
    3. '```' → logprob: -3.795001268386841
    4. 'code' → logprob: -5.79500150680542
    5. '
' → logprob: -6.04500150680542
    6. 'd' → logprob: -6.79500150680542
    7. ' code' → logprob: -7.17000150680542
    8. '`' → logprob: -7.17000150680542
    9. 'following' → logprob: -7.17000150680542
    10. '``' → logprob: -7.29500150680542

Token 672: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.40686604380607605
    2. ':
' → logprob: -1.7818660736083984
    3. ':' → logprob: -2.6568660736083984
    4. 'dp' → logprob: -2.9068660736083984
    5. '
' → logprob: -4.656866073608398
    6. ' =' → logprob: -4.781866073608398
    7. '```' → logprob: -4.781866073608398
    8. 'def' → logprob: -5.156866073608398
    9. '=' → logprob: -6.156866073608398
    10. '    
' → logprob: -6.656866073608398

Token 673: ' each' (ID: 2454)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.5292651653289795
    2. 'x' → logprob: -2.0292651653289795
    3. ' length' → logprob: -2.4042651653289795
    4. 'i' → logprob: -3.0292651653289795
    5. 'l' → logprob: -3.4042651653289795
    6. 'N' → logprob: -3.7792651653289795
    7. '(length' → logprob: -4.404265403747559
    8. ' calculating' → logprob: -4.529265403747559
    9. '_' → logprob: -4.654265403747559
    10. 'count' → logprob: -4.904265403747559

Token 674: ' input' (ID: 3422)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.019369713962078094
    2. '[length' → logprob: -4.644369602203369
    3. '```' → logprob: -5.644369602203369
    4. ' length' → logprob: -6.269369602203369
    5. 'x' → logprob: -6.769369602203369
    6. '   ' → logprob: -7.394369602203369
    7. 'l' → logprob: -7.394369602203369
    8. '`' → logprob: -8.144370079040527
    9. '[
' → logprob: -8.269370079040527
    10. '(length' → logprob: -9.019370079040527

Token 675: '.

' (ID: 364)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1089287996292114
    2. ':
' → logprob: -1.3589287996292114
    3. 'def' → logprob: -1.6089287996292114
    4. ':' → logprob: -1.9839287996292114
    5. '
' → logprob: -3.858928680419922
    6. ']:' → logprob: -4.733928680419922
    7. '```' → logprob: -4.983928680419922
    8. '[' → logprob: -4.983928680419922
    9. '][' → logprob: -5.358928680419922
    10. 'dp' → logprob: -5.608928680419922

Token 676: 'def' (ID: 1314)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.8138914704322815
    2. '\' → logprob: -1.5638914108276367
    3. '   ' → logprob: -2.1888914108276367
    4. 'def' → logprob: -2.1888914108276367
    5. '\n' → logprob: -2.6888914108276367
    6. '
' → logprob: -4.563891410827637
    7. ':' → logprob: -4.563891410827637
    8. '``' → logprob: -5.188891410827637
    9. '[' → logprob: -5.313891410827637
    10. '(' → logprob: -5.938891410827637

Token 677: ' main' (ID: 2758)
  Prédit: ' solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' solve' → logprob: -0.004622253589332104
    2. 'solve' → logprob: -5.379622459411621
    3. ' solution' → logprob: -14.379622459411621
    4. ' ' → logprob: -14.879622459411621
    5. ' ' → logprob: -15.129622459411621
    6. 's' → logprob: -15.129622459411621
    7. ' s' → logprob: -15.254622459411621
    8. ' solver' → logprob: -16.754621505737305
    9. '_' → logprob: -17.129621505737305
    10. '_s' → logprob: -17.254621505737305

Token 678: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.03806892782449722
    2. '():
' → logprob: -3.288069009780884
    3. '()' → logprob: -10.788068771362305
    4. '():
' → logprob: -12.913068771362305
    5. '():

' → logprob: -13.413068771362305
    6. 'def' → logprob: -13.788068771362305
    7. ' ():' → logprob: -14.163068771362305
    8. '(' → logprob: -14.913068771362305
    9. ':' → logprob: -15.663068771362305
    10. '()>' → logprob: -15.913068771362305

Token 679: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013530058786273003
    2. 'import' → logprob: -4.763530254364014
    3. '```' → logprob: -5.888530254364014
    4. ' import' → logprob: -6.388530254364014
    5. ' for' → logprob: -8.388529777526855
    6. 'def' → logprob: -9.513529777526855
    7. '<|end|>' → logprob: -10.388529777526855
    8. '    
' → logprob: -10.638529777526855
    9. 'for' → logprob: -11.013529777526855
    10. ' input' → logprob: -11.638529777526855

Token 680: ' import' (ID: 1588)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7886318564414978
    2. 'import' (adapté à ' import') → logprob: -1.0386319160461426
    3. ' import' → logprob: -1.6636319160461426
    4. '```' → logprob: -7.288631916046143
    5. ' input' → logprob: -7.288631916046143
    6. ' for' → logprob: -8.538631439208984
    7. ' n' → logprob: -8.663631439208984
    8. 'input' → logprob: -9.288631439208984
    9. 'n' → logprob: -9.288631439208984
    10. 'def' → logprob: -9.788631439208984

Token 681: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -5.5577775128767826e-06
    2. ' sys' → logprob: -12.500005722045898
    3. 'math' → logprob: -13.875005722045898
    4. 'bis' → logprob: -15.000005722045898
    5. 'collections' → logprob: -15.500005722045898
    6. 'os' → logprob: -16.2500057220459
    7. 'thread' → logprob: -16.2500057220459
    8. '```' → logprob: -16.5000057220459
    9. '=sys' → logprob: -16.6250057220459
    10. 'it' → logprob: -17.1250057220459

Token 682: '
' (ID: 198)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.13769695162773132
    2. '   ' → logprob: -2.1376969814300537
    3. ' input' → logprob: -5.012696743011475
    4. '
' → logprob: -5.887696743011475
    5. '	input' → logprob: -7.887696743011475
    6. 'data' → logprob: -8.512697219848633
    7. '    
' → logprob: -8.637697219848633
    8. 'import' → logprob: -8.762697219848633
    9. ' readline' → logprob: -9.137697219848633
    10. '.readline' → logprob: -9.887697219848633

Token 683: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0279934573918581
    2. '
' → logprob: -4.527993679046631
    3. 'input' → logprob: -4.527993679046631
    4. 'def' → logprob: -5.527993679046631
    5. '    
' → logprob: -6.402993679046631
    6. '```' → logprob: -9.152993202209473
    7. 'import' → logprob: -9.277993202209473
    8. 'for' → logprob: -9.652993202209473
    9. 'sys' → logprob: -10.027993202209473
    10. ' input' → logprob: -11.027993202209473

Token 684: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' (adapté à ' input') → logprob: -0.21068157255649567
    2. '   ' → logprob: -1.7106815576553345
    3. ' input' → logprob: -4.710681438446045
    4. 'data' → logprob: -8.835681915283203
    5. ' readline' → logprob: -9.710681915283203
    6. '	input' → logprob: -11.710681915283203
    7. 'read' → logprob: -12.460681915283203
    8. 'import' → logprob: -12.585681915283203
    9. ' data' → logprob: -13.835681915283203
    10. 'for' → logprob: -14.335681915283203

Token 685: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8835973739624023
    2. '().' → logprob: -1.2585973739624023
    3. '()' → logprob: -2.0085973739624023
    4. '.' → logprob: -2.3835973739624023
    5. '.readline' → logprob: -3.2585973739624023
    6. ' =' → logprob: -3.5085973739624023
    7. '_line' → logprob: -6.008597373962402
    8. '=sys' → logprob: -6.133597373962402
    9. '_data' → logprob: -6.383597373962402
    10. '   ' → logprob: -8.008597373962402

Token 686: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.5760596990585327
    2. ' sys' → logprob: -0.8260596990585327
    3. '=sys' → logprob: -9.076059341430664
    4. '	sys' → logprob: -12.451059341430664
    5. '   ' → logprob: -13.951059341430664
    6. '(sys' → logprob: -14.201059341430664
    7. 'input' → logprob: -14.951059341430664
    8. 'stdin' → logprob: -17.326059341430664
    9. '```' → logprob: -17.326059341430664
    10. 'lambda' → logprob: -17.826059341430664

Token 687: '.stdin' (ID: 93480)
  Prédit: '.readline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.20314522087574005
    2. '.' → logprob: -1.7031452655792236
    3. '.read' → logprob: -6.8281450271606445
    4. '().' → logprob: -8.703145027160645
    5. ' .' → logprob: -8.828145027160645
    6. '.stdin' → logprob: -8.828145027160645
    7. '.write' → logprob: -10.203145027160645
    8. '.readlines' → logprob: -10.828145027160645
    9. '.<' → logprob: -11.078145027160645
    10. 'read' → logprob: -11.203145027160645

Token 688: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.0009857696713879704
    2. 'read' → logprob: -7.000985622406006
    3. '.read' → logprob: -10.125986099243164
    4. '.' → logprob: -11.375986099243164
    5. '_read' → logprob: -11.375986099243164
    6. 'buffer' → logprob: -12.375986099243164
    7. '.readlines' → logprob: -12.625986099243164
    8. ' readline' → logprob: -14.125986099243164
    9. '_buffer' → logprob: -14.750986099243164
    10. 'reader' → logprob: -14.750986099243164

Token 689: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12595848739147186
    2. 'def' → logprob: -2.6259584426879883
    3. '
' → logprob: -3.5009584426879883
    4. '    
' → logprob: -4.250958442687988
    5. '<|end|>' → logprob: -7.125958442687988
    6. '```' → logprob: -7.875958442687988
    7. 'import' → logprob: -9.750958442687988
    8. '  
' → logprob: -10.000958442687988
    9. '	
' → logprob: -10.000958442687988
    10. '<|end|>' → logprob: -10.250958442687988

Token 690: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011221232824027538
    2. 'T' → logprob: -4.761221408843994
    3. 't' → logprob: -6.511221408843994
    4. 'N' → logprob: -7.511221408843994
    5. 'Q' → logprob: -8.636220932006836
    6. 'n' → logprob: -8.636220932006836
    7. ' T' → logprob: -9.261220932006836
    8. 'for' → logprob: -10.136220932006836
    9. 'def' → logprob: -10.261220932006836
    10. '```' → logprob: -10.511220932006836

Token 691: ' while' (ID: 2049)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.06045260280370712
    2. 'N' → logprob: -3.310452699661255
    3. 't' → logprob: -4.060452461242676
    4. '   ' → logprob: -5.935452461242676
    5. 'Q' → logprob: -6.185452461242676
    6. 'n' → logprob: -8.685452461242676
    7. ' T' → logprob: -10.685452461242676
    8. '```' → logprob: -11.935452461242676
    9. 'def' → logprob: -12.060452461242676
    10. 'for' → logprob: -12.310452461242676

Token 692: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.5435135364532471
    2. 'True' → logprob: -0.9185135364532471
    3. ' line' → logprob: -4.293513298034668
    4. 'line' → logprob: -5.668513298034668
    5. '(True' → logprob: -6.293513298034668
    6. '   ' → logprob: -6.793513298034668
    7. '(line' → logprob: -10.293513298034668
    8. '1' → logprob: -10.543513298034668
    9. ' (' → logprob: -11.418513298034668
    10. '(' → logprob: -11.918513298034668

Token 693: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0312237739562988
    2. '():
' → logprob: -1.1562237739562988
    3. '():' → logprob: -2.031223773956299
    4. ':' → logprob: -2.531223773956299
    5. '   ' → logprob: -3.031223773956299
    6. ':
' → logprob: -3.031223773956299
    7. ',' → logprob: -4.656223773956299
    8. '()' → logprob: -5.781223773956299
    9. '=' → logprob: -5.906223773956299
    10. ' =' → logprob: -6.406223773956299

Token 694: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7587563991546631
    2. '       ' → logprob: -1.258756399154663
    3. ' line' → logprob: -1.508756399154663
    4. 'line' → logprob: -3.633756399154663
    5. '	line' → logprob: -9.633756637573242
    6. '#line' → logprob: -10.508756637573242
    7. '```' → logprob: -11.133756637573242
    8. '(line' → logprob: -11.258756637573242
    9. '_line' → logprob: -12.008756637573242
    10. '    ' → logprob: -12.633756637573242

Token 695: ' N' (ID: 478)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.040420740842819214
    2. '   ' → logprob: -3.2904207706451416
    3. ' line' → logprob: -6.1654205322265625
    4. '       ' → logprob: -8.540420532226562
    5. '	line' → logprob: -10.040420532226562
    6. 'l' → logprob: -11.165420532226562
    7. 's' → logprob: -12.290420532226562
    8. 'N' (adapté à ' N') → logprob: -12.290420532226562
    9. '(line' → logprob: -12.665420532226562
    10. 'n' → logprob: -12.790420532226562

Token 696: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7004222273826599
    2. ' =' → logprob: -1.3254222869873047
    3. '=' → logprob: -1.4504222869873047
    4. ' ,' → logprob: -6.325422286987305
    5. '   ' → logprob: -7.325422286987305
    6. '       ' → logprob: -7.700422286987305
    7. '=line' → logprob: -9.325422286987305
    8. ',line' → logprob: -9.575422286987305
    9. ')' → logprob: -9.700422286987305
    10. '    ' → logprob: -10.200422286987305

Token 697: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.014170088805258274
    2. ' M' → logprob: -4.264170169830322
    3. ',' → logprob: -13.514169692993164
    4. ' ' → logprob: -13.639169692993164
    5. '   ' → logprob: -13.889169692993164
    6. '=' → logprob: -14.014169692993164
    7. ' =' → logprob: -14.264169692993164
    8. 'S' → logprob: -14.639169692993164
    9. '  ' → logprob: -14.889169692993164
    10. '    ' → logprob: -14.889169692993164

Token 698: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05794499069452286
    2. '=' → logprob: -2.9329450130462646
    3. ' =' → logprob: -5.8079447746276855
    4. ' ,' → logprob: -10.182945251464844
    5. '<|end|>' → logprob: -12.557945251464844
    6. ',line' → logprob: -13.057945251464844
    7. '=line' → logprob: -13.307945251464844
    8. '   ' → logprob: -13.432945251464844
    9. '       ' → logprob: -13.557945251464844
    10. ')' → logprob: -14.057945251464844

Token 699: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.00020377879263833165
    2. ' S' → logprob: -8.500204086303711
    3. ' ' → logprob: -15.875204086303711
    4. 's' → logprob: -17.00020408630371
    5. '  ' → logprob: -17.25020408630371
    6. ',' → logprob: -17.62520408630371
    7. '=' → logprob: -17.62520408630371
    8. ',S' → logprob: -17.62520408630371
    9. ' =' → logprob: -17.75020408630371
    10. '   ' → logprob: -18.25020408630371

Token 700: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.313273549079895
    2. ' =' → logprob: -1.313273549079895
    3. '   ' → logprob: -11.938273429870605
    4. '=input' → logprob: -12.938273429870605
    5. '=line' → logprob: -13.438273429870605
    6. '    ' → logprob: -14.313273429870605
    7. ')' → logprob: -15.313273429870605
    8. '       ' → logprob: -15.938273429870605
    9. ',' → logprob: -16.438274383544922
    10. '=sys' → logprob: -16.813274383544922

Token 701: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.31345653533935547
    2. ' map' → logprob: -1.3134565353393555
    3. 'input' → logprob: -9.063456535339355
    4. '   ' → logprob: -10.813456535339355
    5. ' input' → logprob: -10.813456535339355
    6. 'tuple' → logprob: -11.563456535339355
    7. 'sys' → logprob: -11.813456535339355
    8. 'list' → logprob: -11.813456535339355
    9. ' sys' → logprob: -12.063456535339355
    10. ' tuple' → logprob: -12.938456535339355

Token 702: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0020880463998764753
    2. '(input' → logprob: -6.7520880699157715
    3. '(lambda' → logprob: -7.7520880699157715
    4. '(str' → logprob: -8.127087593078613
    5. 'int' → logprob: -9.502087593078613
    6. '(' → logprob: -9.627087593078613
    7. 'input' → logprob: -11.252087593078613
    8. '=int' → logprob: -11.752087593078613
    9. '(sys' → logprob: -11.752087593078613
    10. '[int' → logprob: -11.752087593078613

Token 703: ',' (ID: 11)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.2173614799976349
    2. '(sys' → logprob: -2.3423614501953125
    3. '(' → logprob: -2.9673614501953125
    4. '())' → logprob: -4.2173614501953125
    5. '(int' → logprob: -4.3423614501953125
    6. '(input' → logprob: -4.9673614501953125
    7. '   ' → logprob: -5.3423614501953125
    8. '().' → logprob: -6.0923614501953125
    9. '()
' → logprob: -6.3423614501953125
    10. '(),' → logprob: -6.3423614501953125

Token 704: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0009115827269852161
    2. ' input' → logprob: -7.000911712646484
    3. '(input' → logprob: -18.375911712646484
    4. 'sys' → logprob: -18.750911712646484
    5. '=input' → logprob: -18.875911712646484
    6. 'str' → logprob: -19.625911712646484
    7. '           ' → logprob: -20.000911712646484
    8. '   ' → logprob: -20.000911712646484
    9. ')' → logprob: -20.125911712646484
    10. ',input' → logprob: -20.250911712646484

Token 705: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.664371848164592e-05
    2. '()' → logprob: -11.125016212463379
    3. '.readline' → logprob: -13.875016212463379
    4. '())' → logprob: -14.875016212463379
    5. '()
' → logprob: -15.750016212463379
    6. '   ' → logprob: -16.625017166137695
    7. '().__' → logprob: -16.625017166137695
    8. '()[' → logprob: -16.750017166137695
    9. ' ().' → logprob: -17.250017166137695
    10. '(' → logprob: -17.500017166137695

Token 706: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.024231750518083572
    2. 'strip' → logprob: -3.7742316722869873
    3. 'rstrip' → logprob: -7.024231910705566
    4. 'read' → logprob: -9.274231910705566
    5. '(split' → logprob: -14.399231910705566
    6. ' split' → logprob: -14.774231910705566
    7. '().' → logprob: -15.024231910705566
    8. 'decode' → logprob: -15.649231910705566
    9. ')' → logprob: -16.27423095703125
    10. 'rs' → logprob: -16.64923095703125

Token 707: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.3377431035041809
    2. '())
' → logprob: -1.5877430438995361
    3. ')' → logprob: -2.587743043899536
    4. '()' → logprob: -5.462743282318115
    5. ')
' → logprob: -5.962743282318115
    6. '()
' → logprob: -9.837742805480957
    7. '   ' → logprob: -9.962742805480957
    8. '(' → logprob: -10.212742805480957
    9. '())
' → logprob: -10.462742805480957
    10. '(),' → logprob: -11.462742805480957

Token 708: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00014525714504998177
    2. '<|end|>' → logprob: -9.125144958496094
    3. '   ' → logprob: -11.000144958496094
    4. ' if' → logprob: -12.125144958496094
    5. '           ' → logprob: -12.500144958496094
    6. '<|end|>' → logprob: -12.625144958496094
    7. '```' → logprob: -12.875144958496094
    8. 'if' → logprob: -14.125144958496094
    9. '	' → logprob: -14.250144958496094
    10. ',' → logprob: -14.250144958496094

Token 709: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006112866685725749
    2. 'if' (adapté à ' if') → logprob: -7.625611305236816
    3. ' if' → logprob: -9.250611305236816
    4. '<|end|>' → logprob: -10.750611305236816
    5. '	' → logprob: -13.125611305236816
    6. '   ' → logprob: -13.875611305236816
    7. '<|end|>' → logprob: -14.250611305236816
    8. '	if' → logprob: -14.375611305236816
    9. '        
' → logprob: -14.500611305236816
    10. '	   ' → logprob: -15.000611305236816

Token 710: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.03130068629980087
    2. ' N' → logprob: -3.5313007831573486
    3. ' not' → logprob: -6.5313005447387695
    4. 'not' → logprob: -9.53130054473877
    5. '   ' → logprob: -10.90630054473877
    6. ' ' → logprob: -14.53130054473877
    7. '0' → logprob: -16.156301498413086
    8. '	N' → logprob: -16.156301498413086
    9. '    ' → logprob: -16.281301498413086
    10. '(N' → logprob: -16.531301498413086

Token 711: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.5759708881378174
    2. '==' → logprob: -0.8259708881378174
    3. '=' → logprob: -11.450970649719238
    4. '       ' → logprob: -12.200970649719238
    5. '```' → logprob: -12.450970649719238
    6. '()==' → logprob: -12.575970649719238
    7. '   ' → logprob: -12.825970649719238
    8. ')==' → logprob: -13.450970649719238
    9. '===' → logprob: -14.075970649719238
    10. '==
' → logprob: -14.200970649719238

Token 712: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.318681188422488e-05
    2. ' ' → logprob: -11.25001335144043
    3. '   ' → logprob: -15.75001335144043
    4. '       ' → logprob: -21.12501335144043
    5. '=' → logprob: -21.25001335144043
    6. '  ' → logprob: -21.50001335144043
    7. '    ' → logprob: -23.00001335144043
    8. '
' → logprob: -23.37501335144043
    9. '```' → logprob: -23.75001335144043
    10. '۰' → logprob: -24.25001335144043

Token 713: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.014684110297821e-06
    2. ' ' → logprob: -11.625008583068848
    3. '   ' → logprob: -17.875009536743164
    4. '=' → logprob: -18.875009536743164
    5. 'and' → logprob: -19.000009536743164
    6. '```' → logprob: -19.500009536743164
    7. '  ' → logprob: -19.625009536743164
    8. '۰' → logprob: -19.625009536743164
    9. '
' → logprob: -19.750009536743164
    10. '０' → logprob: -20.125009536743164

Token 714: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.051552463322877884
    2. 'and' → logprob: -3.0515525341033936
    3. ' or' → logprob: -6.1765522956848145
    4. ':' → logprob: -8.176552772521973
    5. '           ' → logprob: -8.176552772521973
    6. '       ' → logprob: -8.301552772521973
    7. '<|end|>' → logprob: -10.926552772521973
    8. ':
' → logprob: -11.051552772521973
    9. '   ' → logprob: -11.676552772521973
    10. 'or' → logprob: -11.926552772521973

Token 715: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.014165983535349369
    2. ' M' → logprob: -4.264165878295898
    3. '   ' → logprob: -13.014165878295898
    4. '  ' → logprob: -16.5141658782959
    5. ' ' → logprob: -16.6391658782959
    6. '    ' → logprob: -17.0141658782959
    7. '       ' → logprob: -18.0141658782959
    8. ' ' → logprob: -18.1391658782959
    9. '	M' → logprob: -18.6391658782959
    10. '     ' → logprob: -19.7641658782959

Token 716: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.3869273066520691
    2. ' ==' → logprob: -1.1369273662567139
    3. ',' → logprob: -10.761927604675293
    4. ' ' → logprob: -11.136927604675293
    5. '=' → logprob: -11.261927604675293
    6. '===' → logprob: -13.511927604675293
    7. ')==' → logprob: -13.511927604675293
    8. ' and' → logprob: -13.886927604675293
    9. '```' → logprob: -14.011927604675293
    10. ' ' → logprob: -14.261927604675293

Token 717: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.4855663721391466e-05
    2. ' ' → logprob: -11.125015258789062
    3. 'and' → logprob: -17.000015258789062
    4. ' and' → logprob: -19.250015258789062
    5. '   ' → logprob: -20.125015258789062
    6. '  ' → logprob: -20.750015258789062
    7. '<|end|>' → logprob: -20.750015258789062
    8. '```' → logprob: -20.875015258789062
    9. '۰' → logprob: -21.375015258789062
    10. ' ' → logprob: -22.250015258789062

Token 718: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0325924449716695e-05
    2. ' ' → logprob: -11.50001049041748
    3. '   ' → logprob: -17.250009536743164
    4. 'and' → logprob: -17.375009536743164
    5. '<|end|>' → logprob: -17.875009536743164
    6. '  ' → logprob: -19.125009536743164
    7. '```' → logprob: -19.250009536743164
    8. '<|end|>' → logprob: -19.250009536743164
    9. ' and' → logprob: -19.500009536743164
    10. 'import' → logprob: -19.500009536743164

Token 719: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.06199491396546364
    2. 'and' → logprob: -2.811995029449463
    3. '0' → logprob: -11.061994552612305
    4. '       ' → logprob: -12.061994552612305
    5. '           ' → logprob: -12.561994552612305
    6. '	and' → logprob: -14.311994552612305
    7. ',' → logprob: -14.936994552612305
    8. ' ' → logprob: -15.061994552612305
    9. ' и' → logprob: -15.561994552612305
    10. '   ' → logprob: -16.186994552612305

Token 720: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -1.5048530030981055e-06
    2. ' S' → logprob: -13.500001907348633
    3. '       ' → logprob: -18.375001907348633
    4. '0' → logprob: -19.875001907348633
    5. '   ' → logprob: -19.875001907348633
    6. '  ' → logprob: -21.750001907348633
    7. '     ' → logprob: -21.875001907348633
    8. '           ' → logprob: -21.875001907348633
    9. ' ' → logprob: -22.000001907348633
    10. '	S' → logprob: -22.875001907348633

Token 721: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.47410181164741516
    2. '==' → logprob: -0.9741017818450928
    3. ')==' → logprob: -11.349102020263672
    4. '=' → logprob: -12.099102020263672
    5. ']==' → logprob: -13.349102020263672
    6. '==
' → logprob: -13.724102020263672
    7. '()==' → logprob: -13.849102020263672
    8. ' =' → logprob: -14.599102020263672
    9. ' ' → logprob: -14.599102020263672
    10. '===' → logprob: -14.724102020263672

Token 722: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0325924449716695e-05
    2. ' ' → logprob: -11.50001049041748
    3. '   ' → logprob: -16.500009536743164
    4. '  ' → logprob: -20.250009536743164
    5. '     ' → logprob: -22.000009536743164
    6. '       ' → logprob: -22.125009536743164
    7. '    ' → logprob: -22.500009536743164
    8. '۰' → logprob: -22.500009536743164
    9. '০' → logprob: -24.250009536743164
    10. '           ' → logprob: -24.500009536743164

Token 723: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.875
    3. '   ' → logprob: -18.375
    4. '۰' → logprob: -18.75
    5. '<|end|>' → logprob: -20.125
    6. '০' → logprob: -20.375
    7. '<|end|>' → logprob: -20.625
    8. ')' → logprob: -20.875
    9. '०' → logprob: -21.125
    10. '  ' → logprob: -21.75

Token 724: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7444077134132385
    2. '           ' → logprob: -1.1194076538085938
    3. ':
' → logprob: -1.6194076538085938
    4. '       ' → logprob: -7.869407653808594
    5. ',' → logprob: -10.369407653808594
    6. '):
' → logprob: -10.994407653808594
    7. ':return' → logprob: -10.994407653808594
    8. '		' → logprob: -11.494407653808594
    9. '<|end|>' → logprob: -12.494407653808594
    10. '	       ' → logprob: -12.494407653808594

Token 725: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1270439177751541
    2. '       ' → logprob: -2.1270439624786377
    3. ':' → logprob: -10.502043724060059
    4. ',' → logprob: -11.252043724060059
    5. '   ' → logprob: -11.252043724060059
    6. '	       ' → logprob: -11.377043724060059
    7. '		' → logprob: -11.502043724060059
    8. '<|end|>' → logprob: -11.877043724060059
    9. '               ' → logprob: -12.127043724060059
    10. ':
' → logprob: -12.502043724060059

Token 726: ' break' (ID: 2338)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5791616439819336
    2. 'break' (adapté à ' break') → logprob: -0.8291616439819336
    3. '       ' → logprob: -6.579161643981934
    4. ' break' → logprob: -6.954161643981934
    5. 'return' → logprob: -7.329161643981934
    6. '               ' → logprob: -9.079161643981934
    7. '	break' → logprob: -9.829161643981934
    8. '		' → logprob: -10.204161643981934
    9. '	       ' → logprob: -12.079161643981934
    10. '   ' → logprob: -12.579161643981934

Token 727: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.015233521349728107
    2. '
' → logprob: -4.890233516693115
    3. '        
' → logprob: -4.890233516693115
    4. '<|end|>' → logprob: -10.140233993530273
    5. '```' → logprob: -11.265233993530273
    6. '            
' → logprob: -11.765233993530273
    7. '    
' → logprob: -12.640233993530273
    8. '   ' → logprob: -13.015233993530273
    9. 'def' → logprob: -13.390233993530273
    10. '<|end|>' → logprob: -13.515233993530273

Token 728: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0002819544170051813
    2. '```' → logprob: -8.625282287597656
    3. '
' → logprob: -9.875282287597656
    4. '   ' → logprob: -10.625282287597656
    5. '        
' → logprob: -10.625282287597656
    6. '           ' → logprob: -14.375282287597656
    7. '``' → logprob: -14.500282287597656
    8. '`' → logprob: -15.250282287597656
    9. '    
' → logprob: -15.500282287597656
    10. 'dp' → logprob: -15.875282287597656

Token 729: ' length' (ID: 5517)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.04435095191001892
    2. '       ' → logprob: -3.1693508625030518
    3. 'length' (adapté à ' length') → logprob: -6.669351100921631
    4. '   ' → logprob: -10.544350624084473
    5. ' dp' → logprob: -10.794350624084473
    6. 'from' → logprob: -12.044350624084473
    7. 'result' → logprob: -12.169350624084473
    8. 'l' → logprob: -12.669350624084473
    9. 'DP' → logprob: -12.669350624084473
    10. 'print' → logprob: -12.919350624084473

Token 730: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5275090336799622
    2. '=' → logprob: -0.9025090336799622
    3. '   ' → logprob: -6.1525092124938965
    4. ')' → logprob: -7.5275092124938965
    5. '[length' → logprob: -7.6525092124938965
    6. '[N' → logprob: -8.777508735656738
    7. '```' → logprob: -8.777508735656738
    8. ']' → logprob: -8.902508735656738
    9. '[' → logprob: -9.152508735656738
    10. '       ' → logprob: -9.152508735656738

Token 731: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.005414469167590141
    2. ' N' → logprob: -5.2554144859313965
    3. '   ' → logprob: -8.630414009094238
    4. '       ' → logprob: -13.755414009094238
    5. '	N' → logprob: -14.630414009094238
    6. '    ' → logprob: -15.130414009094238
    7. ' ' → logprob: -16.130414962768555
    8. '  ' → logprob: -17.130414962768555
    9. 'n' → logprob: -17.880414962768555
    10. '```' → logprob: -18.005414962768555

Token 732: ' *' (ID: 425)
  Prédit: '*N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*N' → logprob: -0.27580535411834717
    2. '*' → logprob: -1.5258053541183472
    3. ' *' → logprob: -3.7758054733276367
    4. '**' → logprob: -7.525805473327637
    5. '*num' → logprob: -10.150805473327637
    6. '*K' → logprob: -10.525805473327637
    7. '*n' → logprob: -11.150805473327637
    8. '*M' → logprob: -11.150805473327637
    9. '*S' → logprob: -11.275805473327637
    10. '*A' → logprob: -12.150805473327637

Token 733: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -4.60414821645827e-06
    2. ' N' → logprob: -12.750004768371582
    3. '2' → logprob: -14.375004768371582
    4. '<|end|>' → logprob: -14.625004768371582
    5. 'length' → logprob: -15.125004768371582
    6. '   ' → logprob: -16.125003814697266
    7. '<|end|>' → logprob: -16.500003814697266
    8. '	N' → logprob: -17.000003814697266
    9. ' ' → logprob: -18.000003814697266
    10. '
' → logprob: -18.375003814697266

Token 734: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004631976597011089
    2. '
' → logprob: -5.504631996154785
    3. 'dp' → logprob: -7.754631996154785
    4. '        
' → logprob: -10.004631996154785
    5. '```' → logprob: -10.504631996154785
    6. '   ' → logprob: -10.879631996154785
    7. '
' → logprob: -11.754631996154785
    8. ',' → logprob: -11.754631996154785
    9. ' dp' → logprob: -11.879631996154785
    10. 'def' → logprob: -12.879631996154785

Token 735: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00018339496455155313
    2. '
' → logprob: -8.62518310546875
    3. 'dp' → logprob: -13.37518310546875
    4. '        
' → logprob: -13.50018310546875
    5. '   ' → logprob: -14.87518310546875
    6. '```' → logprob: -15.25018310546875
    7. '
' → logprob: -16.00018310546875
    8. '           ' → logprob: -17.00018310546875
    9. '	' → logprob: -18.12518310546875
    10. 'import' → logprob: -18.25018310546875

Token 736: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.25197163224220276
    2. '       ' → logprob: -1.5019716024398804
    3. ' dp' → logprob: -11.626971244812012
    4. 'if' → logprob: -11.626971244812012
    5. '```' → logprob: -11.626971244812012
    6. '   ' → logprob: -12.001971244812012
    7. 'import' → logprob: -12.126971244812012
    8. '	dp' → logprob: -13.501971244812012
    9. '
' → logprob: -14.001971244812012
    10. '           ' → logprob: -14.251971244812012

Token 737: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4741003215312958
    2. ' =' → logprob: -0.9741003513336182
    3. '[' → logprob: -11.474100112915039
    4. '=[' → logprob: -11.599100112915039
    5. '[length' → logprob: -13.474100112915039
    6. '=[[' → logprob: -13.849100112915039
    7. '   ' → logprob: -14.349100112915039
    8. ' ' → logprob: -15.599100112915039
    9. 'length' → logprob: -16.09910011291504
    10. '```' → logprob: -16.22410011291504

Token 738: ' [' (ID: 723)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.029838306829333305
    2. '[' → logprob: -3.5298383235931396
    3. ' [[' → logprob: -9.529838562011719
    4. ' [' → logprob: -11.154838562011719
    5. '[{' → logprob: -15.154838562011719
    6. '[(' → logprob: -16.40483856201172
    7. '[int' → logprob: -16.77983856201172
    8. '   ' → logprob: -16.90483856201172
    9. '[m' → logprob: -16.90483856201172
    10. '[n' → logprob: -17.02983856201172

Token 739: '0' (ID: 15)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.7252845029579476e-05
    2. ' [' → logprob: -10.750027656555176
    3. '0' → logprob: -12.625027656555176
    4. '{' → logprob: -13.375027656555176
    5. '[int' → logprob: -14.000027656555176
    6. '[M' → logprob: -16.37502670288086
    7. '   ' → logprob: -18.50002670288086
    8. '[[' → logprob: -18.87502670288086
    9. '[m' → logprob: -19.25002670288086
    10. '[N' → logprob: -19.50002670288086

Token 740: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.09178966283798218
    2. 'for' → logprob: -3.341789722442627
    3. '][' → logprob: -3.591789722442627
    4. ']*(' → logprob: -4.716789722442627
    5. ']*' → logprob: -5.091789722442627
    6. '[' → logprob: -5.716789722442627
    7. ' for' → logprob: -5.966789722442627
    8. '][]' → logprob: -6.091789722442627
    9. '[length' → logprob: -7.966789722442627
    10. '   ' → logprob: -8.591789245605469

Token 741: ' *' (ID: 425)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4179393947124481
    2. '(length' → logprob: -2.1679394245147705
    3. '[length' → logprob: -2.7929394245147705
    4. ']' → logprob: -3.2929394245147705
    5. '[' → logprob: -3.6679394245147705
    6. ' for' → logprob: -3.6679394245147705
    7. '][' → logprob: -3.7929394245147705
    8. '*(' → logprob: -4.667939186096191
    9. ',' → logprob: -4.792939186096191
    10. ']*' → logprob: -4.917939186096191

Token 742: ' (' (ID: 350)
  Prédit: '(S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(S' → logprob: -0.00015562419139314443
    2. '(' → logprob: -9.250155448913574
    3. 'S' → logprob: -10.625155448913574
    4. '((' → logprob: -10.750155448913574
    5. ' (' → logprob: -12.000155448913574
    6. '(s' → logprob: -12.500155448913574
    7. '(max' → logprob: -13.375155448913574
    8. '(MAX' → logprob: -15.125155448913574
    9. '[S' → logprob: -15.250155448913574
    10. '   ' → logprob: -15.500155448913574

Token 743: 'S' (ID: 50)
  Prédit: 'S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.0031817557755857706
    2. '(S' → logprob: -5.7531819343566895
    3. ' S' → logprob: -13.378181457519531
    4. '   ' → logprob: -13.753181457519531
    5. '[S' → logprob: -14.878181457519531
    6. ' (' → logprob: -15.378181457519531
    7. '(' → logprob: -15.378181457519531
    8. ' ' → logprob: -16.25318145751953
    9. '	S' → logprob: -16.37818145751953
    10. '100' → logprob: -16.87818145751953

Token 744: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.008616935461759567
    2. ' +' → logprob: -4.758616924285889
    3. '+
' → logprob: -13.258617401123047
    4. '```' → logprob: -16.008617401123047
    5. '1' → logprob: -16.133617401123047
    6. ' +
' → logprob: -16.383617401123047
    7. ')+' → logprob: -16.758617401123047
    8. '
' → logprob: -17.133617401123047
    9. '[' → logprob: -17.258617401123047
    10. '   ' → logprob: -17.258617401123047

Token 745: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.625
    3. '   ' → logprob: -17.375
    4. '
' → logprob: -19.375
    5. '{' → logprob: -19.625
    6. '```' → logprob: -19.75
    7. '0' → logprob: -20.0
    8. '(' → logprob: -20.5
    9. '       ' → logprob: -20.5
    10. '2' → logprob: -20.75

Token 746: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.625000953674316
    3. '   ' → logprob: -16.875
    4. '2' → logprob: -18.25
    5. '
' → logprob: -18.875
    6. '0' → logprob: -19.125
    7. '１' → logprob: -19.625
    8. '  ' → logprob: -19.75
    9. '{' → logprob: -19.9375
    10. '```' → logprob: -19.9375

Token 747: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003705300623551011
    2. ')
' → logprob: -5.7537055015563965
    3. '       ' → logprob: -7.7537055015563965
    4. '   ' → logprob: -9.753705024719238
    5. ']' → logprob: -11.128705024719238
    6. '<|end|>' → logprob: -11.503705024719238
    7. '
' → logprob: -12.503705024719238
    8. ' )' → logprob: -13.128705024719238
    9. '),' → logprob: -13.503705024719238
    10. ')]' → logprob: -13.878705024719238

Token 748: '       ' (ID: 309)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.008863210678100586
    2. '       ' → logprob: -4.75886344909668
    3. '	dp' → logprob: -9.00886344909668
    4. '```' → logprob: -9.38386344909668
    5. ' dp' → logprob: -10.75886344909668
    6. '   ' → logprob: -11.50886344909668
    7. '(dp' → logprob: -12.63386344909668
    8. 'for' → logprob: -12.75886344909668
    9. '`' → logprob: -13.63386344909668
    10. '_dp' → logprob: -14.00886344909668

Token 749: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -1.1160349458805285e-05
    2. '       ' → logprob: -11.500011444091797
    3. ' dp' → logprob: -15.125011444091797
    4. '```' → logprob: -15.375011444091797
    5. 'prev' → logprob: -15.875011444091797
    6. '   ' → logprob: -16.000011444091797
    7. '	dp' → logprob: -16.250011444091797
    8. 'for' → logprob: -16.875011444091797
    9. 'next' → logprob: -17.125011444091797
    10. '[' → logprob: -18.250011444091797

Token 750: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00016301481809932739
    2. '=' → logprob: -9.125163078308105
    3. ' =' → logprob: -11.000163078308105
    4. '0' → logprob: -11.375163078308105
    5. '=[' → logprob: -12.000163078308105
    6. ' [' → logprob: -12.625163078308105
    7. '<|end|>' → logprob: -12.750163078308105
    8. '```' → logprob: -13.250163078308105
    9. 'dp' → logprob: -13.375163078308105
    10. 'def' → logprob: -13.375163078308105

Token 751: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0006289214943535626
    2. '[' → logprob: -7.37562894821167
    3. ' ' → logprob: -13.875628471374512
    4. '=' → logprob: -15.375628471374512
    5. '(' → logprob: -15.500628471374512
    6. '{' → logprob: -16.125629425048828
    7. '000' → logprob: -16.500629425048828
    8. ']' → logprob: -16.625629425048828
    9. '][' → logprob: -16.750629425048828
    10. 'def' → logprob: -16.875629425048828

Token 752: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00553587730973959
    2. ']+=' → logprob: -5.630536079406738
    3. ']=' → logprob: -7.130536079406738
    4. '[' → logprob: -7.505536079406738
    5. ')' → logprob: -8.005536079406738
    6. '=' → logprob: -8.880536079406738
    7. '<|end|>' → logprob: -10.380536079406738
    8. '+=' → logprob: -11.255536079406738
    9. '+' → logprob: -11.505536079406738
    10. '```' → logprob: -11.630536079406738

Token 753: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.002195933135226369
    2. ' =' → logprob: -6.127195835113525
    3. '[' → logprob: -12.002196311950684
    4. '+=' → logprob: -13.002196311950684
    5. ']=' → logprob: -14.502196311950684
    6. '=
' → logprob: -14.752196311950684
    7. '```' → logprob: -14.877196311950684
    8. '=True' → logprob: -15.252196311950684
    9. ']' → logprob: -15.627196311950684
    10. ' +=' → logprob: -15.877196311950684

Token 754: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -19.0
    3. '   ' → logprob: -21.5
    4. '```' → logprob: -21.625
    5. '۱' → logprob: -22.25
    6. '0' → logprob: -22.5
    7. '[' → logprob: -22.75
    8. '１' → logprob: -23.625
    9. '`' → logprob: -23.875
    10. '{' → logprob: -23.875

Token 755: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. '۱' → logprob: -21.125
    3. ' ' → logprob: -21.25
    4. '{' → logprob: -21.75
    5. '0' → logprob: -22.0
    6. '[' → logprob: -22.25
    7. '   ' → logprob: -22.375
    8. '```' → logprob: -22.375
    9. '(' → logprob: -22.5
    10. '१' → logprob: -22.75

Token 756: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.024863487109541893
    2. '   ' → logprob: -4.5248637199401855
    3. '<|end|>' → logprob: -4.8998637199401855
    4. ' for' → logprob: -5.6498637199401855
    5. '
' → logprob: -7.1498637199401855
    6. '	' → logprob: -7.2748637199401855
    7. 'for' → logprob: -7.3998637199401855
    8. '```' → logprob: -8.399863243103027
    9. '	for' → logprob: -9.024863243103027
    10. '        
' → logprob: -9.899863243103027

Token 757: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -7.5649528298527e-05
    2. '   ' → logprob: -9.750075340270996
    3. '```' → logprob: -11.500075340270996
    4. ' for' → logprob: -12.750075340270996
    5. 'for' → logprob: -13.125075340270996
    6. '	' → logprob: -13.125075340270996
    7. '           ' → logprob: -16.000076293945312
    8. ' ' → logprob: -16.625076293945312
    9. '	for' → logprob: -16.750076293945312
    10. '
' → logprob: -17.125076293945312

Token 758: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.7451806664466858
    2. '       ' → logprob: -0.8701806664466858
    3. ' for' → logprob: -2.245180606842041
    4. '   ' → logprob: -7.995180606842041
    5. '	for' → logprob: -8.6201810836792
    6. '	' → logprob: -10.9951810836792
    7. '```' → logprob: -11.7451810836792
    8. ' ' → logprob: -12.3701810836792
    9. 'from' → logprob: -12.6201810836792
    10. 'For' → logprob: -12.8701810836792

Token 759: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0181526318192482
    2. ' x' → logprob: -4.018152713775635
    3. ' ' → logprob: -13.643152236938477
    4. '   ' → logprob: -14.268152236938477
    5. 'num' → logprob: -14.768152236938477
    6. '	x' → logprob: -15.643152236938477
    7. 'i' → logprob: -16.518152236938477
    8. '_x' → logprob: -16.768152236938477
    9. '```' → logprob: -17.393152236938477
    10. '  ' → logprob: -17.518152236938477

Token 760: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.048600658774375916
    2. 'in' → logprob: -3.048600673675537
    3. '	in' → logprob: -12.298600196838379
    4. '   ' → logprob: -12.548600196838379
    5. ' ' → logprob: -13.298600196838379
    6. '1' → logprob: -13.548600196838379
    7. '    ' → logprob: -14.048600196838379
    8. '       ' → logprob: -15.048600196838379
    9. ' =' → logprob: -15.798600196838379
    10. '=' → logprob: -15.923600196838379

Token 761: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0015024791937321424
    2. ' range' → logprob: -6.501502513885498
    3. '1' → logprob: -16.501502990722656
    4. '   ' → logprob: -17.626502990722656
    5. ' ' → logprob: -18.251502990722656
    6. '  ' → logprob: -19.626502990722656
    7. '	range' → logprob: -19.751502990722656
    8. '(range' → logprob: -20.001502990722656
    9. '    ' → logprob: -21.751502990722656
    10. '```' → logprob: -21.876502990722656

Token 762: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0789010226726532
    2. '1' → logprob: -2.5789010524749756
    3. '   ' → logprob: -11.703901290893555
    4. ' (' → logprob: -13.828901290893555
    5. ' ' → logprob: -14.078901290893555
    6. '       ' → logprob: -14.328901290893555
    7. ',' → logprob: -15.328901290893555
    8. '(
' → logprob: -15.953901290893555
    9. '	' → logprob: -16.828901290893555
    10. '```' → logprob: -16.953901290893555

Token 763: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -18.625
    3. '(' → logprob: -19.125
    4. 'M' → logprob: -19.875
    5. '   ' → logprob: -20.125
    6. '```' → logprob: -20.875
    7. '[' → logprob: -21.75
    8. 'from' → logprob: -22.625
    9. 'N' → logprob: -22.875
    10. '(M' → logprob: -23.5

Token 764: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.364928700961173e-05
    2. ' ,' → logprob: -9.375093460083008
    3. ',M' → logprob: -12.500093460083008
    4. ',S' → logprob: -12.750093460083008
    5. ',(' → logprob: -13.500093460083008
    6. '   ' → logprob: -15.375093460083008
    7. 'to' → logprob: -15.750093460083008
    8. 'M' → logprob: -16.250093460083008
    9. '       ' → logprob: -16.375093460083008
    10. ',
' → logprob: -16.375093460083008

Token 765: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -3.054500666621607e-06
    2. ' M' → logprob: -12.87500286102295
    3. '   ' → logprob: -14.87500286102295
    4. '       ' → logprob: -17.250003814697266
    5. 'S' → logprob: -18.125003814697266
    6. '           ' → logprob: -19.000003814697266
    7. '(M' → logprob: -19.125003814697266
    8. '	M' → logprob: -19.625003814697266
    9. '    ' → logprob: -19.750003814697266
    10. 'MOD' → logprob: -19.750003814697266

Token 766: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.008622966706752777
    2. ' +' → logprob: -4.758623123168945
    3. '):
' → logprob: -12.758623123168945
    4. '+
' → logprob: -13.258623123168945
    5. '):' → logprob: -13.633623123168945
    6. '   ' → logprob: -13.758623123168945
    7. ',' → logprob: -14.133623123168945
    8. '
' → logprob: -15.258623123168945
    9. ')+' → logprob: -15.383623123168945
    10. '+:' → logprob: -16.508623123168945

Token 767: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.165027217415627e-05
    2. ' ' → logprob: -10.750021934509277
    3. ')' → logprob: -16.25002098083496
    4. '```' → logprob: -18.37502098083496
    5. '   ' → logprob: -18.50002098083496
    6. '):
' → logprob: -19.37502098083496
    7. ',' → logprob: -20.25002098083496
    8. ' ' → logprob: -20.50002098083496
    9. ' )' → logprob: -20.62502098083496
    10. '+' → logprob: -21.25002098083496

Token 768: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.375
    3. '```' → logprob: -18.75
    4. ')' → logprob: -18.875
    5. '   ' → logprob: -19.375
    6. '
' → logprob: -19.625
    7. '):
' → logprob: -20.25
    8. '-' → logprob: -21.375
    9. '(' → logprob: -21.75
    10. '+' → logprob: -22.375

Token 769: '):
' (ID: 1883)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04716363549232483
    2. '):' → logprob: -3.422163724899292
    3. ':
' → logprob: -4.922163486480713
    4. '):
' → logprob: -5.297163486480713
    5. '       ' → logprob: -7.297163486480713
    6. ',' → logprob: -7.797163486480713
    7. '<|end|>' → logprob: -11.047163963317871
    8. ')' → logprob: -11.422163963317871
    9. ']:' → logprob: -12.922163963317871
    10. '=' → logprob: -12.922163963317871

Token 770: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.28143495321273804
    2. '           ' → logprob: -1.5314350128173828
    3. '	       ' → logprob: -3.656435012817383
    4. '<|end|>' → logprob: -6.531435012817383
    5. ' for' → logprob: -8.031435012817383
    6. '	   ' → logprob: -8.156435012817383
    7. '```' → logprob: -8.156435012817383
    8. '		' → logprob: -8.406435012817383
    9. '		   ' → logprob: -8.656435012817383
    10. '	' → logprob: -8.906435012817383

Token 771: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3151796758174896
    2. ' for' → logprob: -1.690179705619812
    3. 'for' → logprob: -2.5651795864105225
    4. ' new' → logprob: -5.565179824829102
    5. 'new' → logprob: -6.440179824829102
    6. 'next' → logprob: -6.690179824829102
    7. '           ' → logprob: -6.940179824829102
    8. ' next' → logprob: -7.190179824829102
    9. '   ' → logprob: -8.065179824829102
    10. ' nxt' → logprob: -9.940179824829102

Token 772: ' Update' (ID: 9152)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0046802726574242115
    2. ' for' → logprob: -5.754680156707764
    3. 'new' → logprob: -7.504680156707764
    4. 'next' → logprob: -7.754680156707764
    5. '       ' → logprob: -8.129680633544922
    6. '           ' → logprob: -9.004680633544922
    7. '   ' → logprob: -10.504680633544922
    8. 'nd' → logprob: -10.629680633544922
    9. 'length' → logprob: -10.629680633544922
    10. '               ' → logprob: -11.879680633544922

Token 773: ' dp' (ID: 21546)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1866125464439392
    2. ' for' → logprob: -1.936612606048584
    3. '       ' → logprob: -3.811612606048584
    4. '           ' → logprob: -6.436612606048584
    5. 'length' → logprob: -6.561612606048584
    6. 'dp' → logprob: -8.311612129211426
    7. ' length' → logprob: -8.686612129211426
    8. '```' → logprob: -9.186612129211426
    9. 'new' → logprob: -9.561612129211426
    10. '               ' → logprob: -9.686612129211426

Token 774: ' from' (ID: 591)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00325994985178113
    2. ' for' → logprob: -6.378260135650635
    3. '	' → logprob: -7.503260135650635
    4. '           ' → logprob: -8.378259658813477
    5. '	       ' → logprob: -8.753259658813477
    6. '	for' → logprob: -8.878259658813477
    7. 'for' → logprob: -8.878259658813477
    8. '	   ' → logprob: -9.003259658813477
    9. ',' → logprob: -10.378259658813477
    10. '   ' → logprob: -10.628259658813477

Token 775: ' end' (ID: 1268)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.0001483564410591498
    2. 'sum' → logprob: -9.50014877319336
    3. 's' → logprob: -10.00014877319336
    4. '           ' → logprob: -12.12514877319336
    5. 'length' → logprob: -12.12514877319336
    6. 'min' → logprob: -12.25014877319336
    7. ' S' → logprob: -12.37514877319336
    8. 'range' → logprob: -13.00014877319336
    9. '       ' → logprob: -13.87514877319336
    10. '               ' → logprob: -13.87514877319336

Token 776: ' to' (ID: 316)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.39062461256980896
    2. '       ' → logprob: -1.1406246423721313
    3. ' for' → logprob: -7.015624523162842
    4. ' =' → logprob: -7.390624523162842
    5. 'for' → logprob: -7.765624523162842
    6. '          ' → logprob: -8.015625
    7. '=' → logprob: -8.140625
    8. '               ' → logprob: -8.140625
    9. '        ' → logprob: -8.515625
    10. '            ' → logprob: -8.765625

Token 777: ' start' (ID: 1604)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.006521864328533411
    2. 'x' → logprob: -5.256521701812744
    3. 'length' → logprob: -7.131521701812744
    4. '0' → logprob: -8.631522178649902
    5. '1' → logprob: -9.006522178649902
    6. ' S' → logprob: -9.881522178649902
    7. '           ' → logprob: -10.256522178649902
    8. '   ' → logprob: -10.881522178649902
    9. 's' → logprob: -11.256522178649902
    10. '-' → logprob: -11.756522178649902

Token 778: ' to' (ID: 316)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03758705034852028
    2. '           ' → logprob: -3.5375871658325195
    3. '<|end|>' → logprob: -5.6625871658325195
    4. ' for' → logprob: -6.4125871658325195
    5. '	       ' → logprob: -6.9125871658325195
    6. '```' → logprob: -7.7875871658325195
    7. '   ' → logprob: -8.16258716583252
    8. 'for' → logprob: -8.53758716583252
    9. '<|end|>' → logprob: -8.66258716583252
    10. '	   ' → logprob: -8.66258716583252

Token 779: ' avoid' (ID: 8397)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.015197111293673515
    2. ' for' → logprob: -4.765197277069092
    3. 'for' → logprob: -5.890197277069092
    4. '           ' → logprob: -6.140197277069092
    5. '            ' → logprob: -7.265197277069092
    6. ' prevent' → logprob: -8.390196800231934
    7. ' avoid' → logprob: -8.640196800231934
    8. '	           ' → logprob: -9.015196800231934
    9. '              ' → logprob: -9.765196800231934
    10. '                ' → logprob: -9.765196800231934

Token 780: ' reuse' (ID: 51683)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.32022765278816223
    2. ' for' → logprob: -1.4452276229858398
    3. 'x' → logprob: -4.32022762298584
    4. 'S' → logprob: -4.44522762298584
    5. ' S' → logprob: -5.07022762298584
    6. ' x' → logprob: -5.57022762298584
    7. '```' → logprob: -6.69522762298584
    8. '       ' → logprob: -7.57022762298584
    9. '           ' → logprob: -8.07022762298584
    10. 's' → logprob: -8.32022762298584

Token 781: ' in' (ID: 306)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04136825352907181
    2. '       ' → logprob: -3.291368246078491
    3. ' for' → logprob: -5.91636848449707
    4. '	       ' → logprob: -8.29136848449707
    5. '   ' → logprob: -9.29136848449707
    6. ',' → logprob: -9.54136848449707
    7. '               ' → logprob: -10.04136848449707
    8. '		' → logprob: -10.29136848449707
    9. '<|end|>' → logprob: -10.79136848449707
    10. 'for' → logprob: -10.79136848449707

Token 782: ' same' (ID: 2684)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.011113370768725872
    2. ' range' → logprob: -4.636113166809082
    3. 're' → logprob: -7.511113166809082
    4. 'for' → logprob: -7.886113166809082
    5. 'sum' → logprob: -8.886113166809082
    6. '   ' → logprob: -9.136113166809082
    7. 'reverse' → logprob: -9.636113166809082
    8. 'x' → logprob: -10.386113166809082
    9. '       ' → logprob: -11.011113166809082
    10. ' reversed' → logprob: -11.261113166809082

Token 783: ' iteration' (ID: 43155)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'length' → logprob: -1.0315134525299072
    2. 'range' → logprob: -1.1565134525299072
    3. 'x' → logprob: -1.4065134525299072
    4. 'for' → logprob: -3.5315134525299072
    5. 'iteration' → logprob: -4.031513214111328
    6. 'dp' → logprob: -4.781513214111328
    7. '   ' → logprob: -5.031513214111328
    8. 'sum' → logprob: -5.406513214111328
    9. 'loop' → logprob: -5.531513214111328
    10. 'pass' → logprob: -5.906513214111328

Token 784: ' and' (ID: 326)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005777104292064905
    2. '       ' → logprob: -5.255776882171631
    3. '
' → logprob: -8.755777359008789
    4. ' for' → logprob: -8.880777359008789
    5. '	       ' → logprob: -9.130777359008789
    6. '		' → logprob: -10.505777359008789
    7. 'for' → logprob: -10.505777359008789
    8. '   ' → logprob: -10.630777359008789
    9. '<|end|>' → logprob: -10.630777359008789
    10. '```' → logprob: -11.755777359008789

Token 785: ' ensure' (ID: 6757)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.07581764459609985
    2. ' for' → logprob: -3.075817584991455
    3. '           ' → logprob: -4.450817584991455
    4. '               ' → logprob: -4.450817584991455
    5. 'length' → logprob: -7.075817584991455
    6. ' preserve' → logprob: -7.575817584991455
    7. '   ' → logprob: -8.200818061828613
    8. '       ' → logprob: -8.200818061828613
    9. 'avoid' → logprob: -8.575818061828613
    10. 'prevent' → logprob: -8.700818061828613

Token 786: ' strict' (ID: 12035)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3942193388938904
    2. ' for' → logprob: -2.019219398498535
    3. 'length' → logprob: -2.394219398498535
    4. 'sum' → logprob: -3.644219398498535
    5. ' length' → logprob: -3.769219398498535
    6. '           ' → logprob: -4.019219398498535
    7. 'dp' → logprob: -4.644219398498535
    8. 'x' → logprob: -4.894219398498535
    9. '               ' → logprob: -5.644219398498535
    10. ' sum' → logprob: -5.769219398498535

Token 787: '
' (ID: 198)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.8809314370155334
    2. '           ' → logprob: -1.2559313774108887
    3. 'for' → logprob: -1.6309313774108887
    4. '               ' → logprob: -3.1309313774108887
    5. ' increasing' → logprob: -3.2559313774108887
    6. '   ' → logprob: -5.380931377410889
    7. '_in' → logprob: -5.505931377410889
    8. 'ly' → logprob: -5.755931377410889
    9. 'increments' → logprob: -6.005931377410889
    10. 'increment' → logprob: -6.130931377410889

Token 788: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.31878912448883057
    2. '           ' → logprob: -1.4437891244888306
    3. ' for' → logprob: -3.693789005279541
    4. '            ' → logprob: -5.818789005279541
    5. 'for' → logprob: -6.193789005279541
    6. '               ' → logprob: -6.443789005279541
    7. '        ' → logprob: -6.693789005279541
    8. '    ' → logprob: -6.693789005279541
    9. '   ' → logprob: -6.943789005279541
    10. '      ' → logprob: -8.0687894821167

Token 789: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6311826109886169
    2. '           ' → logprob: -1.2561826705932617
    3. '       ' → logprob: -2.3811826705932617
    4. 'for' (adapté à ' for') → logprob: -2.5061826705932617
    5. '	       ' → logprob: -5.131182670593262
    6. '	   ' → logprob: -6.256182670593262
    7. '   ' → logprob: -6.881182670593262
    8. '	for' → logprob: -8.631182670593262
    9. '		   ' → logprob: -10.006182670593262
    10. '               ' → logprob: -10.381182670593262

Token 790: ' l' (ID: 305)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.1047093868255615
    2. 'S' → logprob: -1.2297093868255615
    3. 'length' → logprob: -1.7297093868255615
    4. 'sum' → logprob: -1.7297093868255615
    5. ' s' → logprob: -4.979709625244141
    6. ' length' → logprob: -5.229709625244141
    7. 'l' → logprob: -5.479709625244141
    8. ' S' → logprob: -6.104709625244141
    9. ' sum' → logprob: -6.479709625244141
    10. '           ' → logprob: -8.10470962524414

Token 791: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0017758574103936553
    2. 'in' → logprob: -6.626775741577148
    3. ' =' → logprob: -9.251775741577148
    4. ' ' → logprob: -9.751775741577148
    5. 's' → logprob: -10.001775741577148
    6. '=' → logprob: -10.376775741577148
    7. ',' → logprob: -10.501775741577148
    8. '           ' → logprob: -10.626775741577148
    9. '        ' → logprob: -10.751775741577148
    10. 'ength' → logprob: -11.126775741577148

Token 792: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.050729576498270035
    2. 'length' → logprob: -3.550729513168335
    3. 'S' → logprob: -4.050729751586914
    4. 're' → logprob: -6.300729751586914
    5. ' range' → logprob: -6.925729751586914
    6. 'x' → logprob: -8.675729751586914
    7. 's' → logprob: -9.550729751586914
    8. 'reverse' → logprob: -9.800729751586914
    9. '(range' → logprob: -10.425729751586914
    10. '   ' → logprob: -10.550729751586914

Token 793: '(length' (ID: 47037)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.005345344077795744
    2. 'min' → logprob: -5.255345344543457
    3. 'len' → logprob: -9.505345344543457
    4. 'N' → logprob: -10.755345344543457
    5. 'S' → logprob: -11.755345344543457
    6. ' length' → logprob: -12.630345344543457
    7. 'leng' → logprob: -13.755345344543457
    8. '(length' → logprob: -13.880345344543457
    9. '   ' → logprob: -15.005345344543457
    10. 'l' → logprob: -15.005345344543457

Token 794: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009076489950530231
    2. ' ,' → logprob: -7.2509074211120605
    3. '-' → logprob: -9.375907897949219
    4. '   ' → logprob: -9.500907897949219
    5. '1' → logprob: -11.875907897949219
    6. '  ' → logprob: -12.375907897949219
    7. ',-' → logprob: -12.375907897949219
    8. '    ' → logprob: -12.625907897949219
    9. ' -' → logprob: -12.625907897949219
    10. '       ' → logprob: -12.625907897949219

Token 795: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0007337473216466606
    2. '1' → logprob: -8.000733375549316
    3. ' ' → logprob: -8.250733375549316
    4. '   ' → logprob: -10.250733375549316
    5. 'x' → logprob: -10.625733375549316
    6. 'l' → logprob: -11.125733375549316
    7. '    ' → logprob: -11.625733375549316
    8. '  ' → logprob: -11.875733375549316
    9. '           ' → logprob: -11.875733375549316
    10. '     ' → logprob: -12.000733375549316

Token 796: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00010676169040380046
    2. '1' → logprob: -9.375106811523438
    3. ' ' → logprob: -11.250106811523438
    4. '-' → logprob: -11.875106811523438
    5. '
' → logprob: -14.875106811523438
    6. '   ' → logprob: -14.937606811523438
    7. 'down' → logprob: -15.437606811523438
    8. '```' → logprob: -15.437606811523438
    9. ' -' → logprob: -15.500106811523438
    10. 'x' → logprob: -15.625106811523438

Token 797: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7930481433868408
    2. '-' → logprob: -1.1680481433868408
    3. ' -' → logprob: -1.7930481433868408
    4. ',-' → logprob: -3.418048143386841
    5. '           ' → logprob: -3.668048143386841
    6. '       ' → logprob: -5.293047904968262
    7. ':' → logprob: -6.668047904968262
    8. '):
' → logprob: -6.918047904968262
    9. '   ' → logprob: -6.918047904968262
    10. ' ,' → logprob: -7.043047904968262

Token 798: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.006004637107253075
    2. ' -' → logprob: -5.131004810333252
    3. '           ' → logprob: -10.381004333496094
    4. '   ' → logprob: -11.506004333496094
    5. '1' → logprob: -11.631004333496094
    6. ' ' → logprob: -12.381004333496094
    7. '               ' → logprob: -12.506004333496094
    8. '  ' → logprob: -12.631004333496094
    9. '       ' → logprob: -12.631004333496094
    10. '          ' → logprob: -12.631004333496094

Token 799: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5374320149421692
    2. '-' → logprob: -0.9124320149421692
    3. ' -' → logprob: -4.5374321937561035
    4. '):
' → logprob: -6.7874321937561035
    5. '   ' → logprob: -6.9124321937561035
    6. '           ' → logprob: -8.037431716918945
    7. '       ' → logprob: -8.662431716918945
    8. ' ' → logprob: -8.787431716918945
    9. '    ' → logprob: -8.787431716918945
    10. '):' → logprob: -9.037431716918945

Token 800: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.006924234330654144
    2. '):' → logprob: -5.131924152374268
    3. '           ' → logprob: -7.631924152374268
    4. '       ' → logprob: -8.256924629211426
    5. '               ' → logprob: -9.381924629211426
    6. '):
' → logprob: -9.381924629211426
    7. ' ):
' → logprob: -10.756924629211426
    8. '-' → logprob: -10.881924629211426
    9. ',' → logprob: -11.006924629211426
    10. '   ' → logprob: -11.381924629211426

Token 801: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.03378528356552124
    2. '<|end|>' → logprob: -3.908785343170166
    3. '           ' → logprob: -5.533785343170166
    4. '       ' → logprob: -6.033785343170166
    5. '	       ' → logprob: -6.158785343170166
    6. ' for' → logprob: -6.408785343170166
    7. ',' → logprob: -6.908785343170166
    8. '		       ' → logprob: -7.658785343170166
    9. '	           ' → logprob: -7.783785343170166
    10. '<|end|>' → logprob: -7.908785343170166

Token 802: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1499788612127304
    2. ' for' → logprob: -2.5249788761138916
    3. '                   ' → logprob: -3.1499788761138916
    4. 'for' → logprob: -4.7749786376953125
    5. '               ' → logprob: -5.1499786376953125
    6. '   ' → logprob: -8.149978637695312
    7. '                ' → logprob: -8.649978637695312
    8. '	       ' → logprob: -8.649978637695312
    9. '<|end|>' → logprob: -8.649978637695312
    10. '            ' → logprob: -9.024978637695312

Token 803: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3450305461883545
    2. ' for' → logprob: -1.3450305461883545
    3. '           ' → logprob: -4.220030784606934
    4. '               ' → logprob: -5.845030784606934
    5. 'dp' → logprob: -5.845030784606934
    6. 'new' → logprob: -6.095030784606934
    7. '   ' → logprob: -6.095030784606934
    8. '                   ' → logprob: -6.595030784606934
    9. 'psum' → logprob: -6.970030784606934
    10. 'prefix' → logprob: -6.970030784606934

Token 804: ' sum' (ID: 4215)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.4747907817363739
    2. 'sum' → logprob: -0.9747908115386963
    3. ' s' → logprob: -7.599790573120117
    4. ' sum' → logprob: -8.849790573120117
    5. 'sm' → logprob: -10.349790573120117
    6. 'total' → logprob: -11.849790573120117
    7. 'summ' → logprob: -11.849790573120117
    8. '_sum' → logprob: -11.974790573120117
    9. 'curr' → logprob: -12.099790573120117
    10. 't' → logprob: -12.974790573120117

Token 805: ' from' (ID: 591)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -1.0080676078796387
    2. 'for' → logprob: -1.0080676078796387
    3. ' for' → logprob: -2.7580676078796387
    4. '               ' → logprob: -3.2580676078796387
    5. 'from' → logprob: -3.2580676078796387
    6. 'in' → logprob: -3.3830676078796387
    7. 'range' → logprob: -3.6330676078796387
    8. ' =' → logprob: -4.383067607879639
    9. '=' → logprob: -4.383067607879639
    10. 's' → logprob: -4.633067607879639

Token 806: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -2.939851037808694e-05
    2. 'x' → logprob: -11.125029563903809
    3. 'range' → logprob: -12.125029563903809
    4. ' S' → logprob: -12.750029563903809
    5. '                   ' → logprob: -13.000029563903809
    6. '               ' → logprob: -13.375029563903809
    7. '           ' → logprob: -14.125029563903809
    8. 'l' → logprob: -14.625029563903809
    9. 's' → logprob: -14.750029563903809
    10. '0' → logprob: -15.750029563903809

Token 807: ' down' (ID: 1917)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5317705869674683
    2. ',' → logprob: -0.9067705869674683
    3. ' in' → logprob: -6.406770706176758
    4. '                ' → logprob: -6.781770706176758
    5. 'in' → logprob: -6.906770706176758
    6. 'down' → logprob: -7.031770706176758
    7. ' ,' → logprob: -7.531770706176758
    8. 'for' → logprob: -7.531770706176758
    9. 'to' → logprob: -7.781770706176758
    10. '              ' → logprob: -7.906770706176758

Token 808: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.2310185581445694
    2. '               ' → logprob: -1.7310185432434082
    3. 'down' → logprob: -4.106018543243408
    4. 'l' → logprob: -5.981018543243408
    5. ' to' → logprob: -6.106018543243408
    6. 'in' → logprob: -6.356018543243408
    7. ',' → logprob: -6.356018543243408
    8. '0' → logprob: -6.481018543243408
    9. 'for' → logprob: -7.481018543243408
    10. '       ' → logprob: -7.606018543243408

Token 809: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.17070293426513672
    2. 'l' → logprob: -2.1707029342651367
    3. 'S' → logprob: -3.1707029342651367
    4. '(x' → logprob: -8.420702934265137
    5. 's' → logprob: -8.795702934265137
    6. '           ' → logprob: -8.920702934265137
    7. ' x' → logprob: -9.545702934265137
    8. '               ' → logprob: -10.045702934265137
    9. '                   ' → logprob: -10.045702934265137
    10. 'sum' → logprob: -10.545702934265137

Token 810: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00045069176121614873
    2. '<|end|>' → logprob: -8.62545108795166
    3. ' for' → logprob: -9.75045108795166
    4. '           ' → logprob: -9.87545108795166
    5. '<|end|>' → logprob: -9.87545108795166
    6. '                   ' → logprob: -10.25045108795166
    7. ',' → logprob: -10.50045108795166
    8. 'for' → logprob: -11.75045108795166
    9. '			' → logprob: -11.87545108795166
    10. '	           ' → logprob: -12.25045108795166

Token 811: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.005236837547272444
    2. ' for' → logprob: -6.380236625671387
    3. '           ' → logprob: -6.755236625671387
    4. '<|end|>' → logprob: -7.005236625671387
    5. 'for' → logprob: -7.380236625671387
    6. '                   ' → logprob: -7.630236625671387
    7. '       ' → logprob: -9.005236625671387
    8. '<|end|>' → logprob: -9.630236625671387
    9. '                ' → logprob: -10.630236625671387
    10. '		       ' → logprob: -10.880236625671387

Token 812: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.24942798912525177
    2. ' for' → logprob: -2.1244280338287354
    3. 'for' → logprob: -2.3744280338287354
    4. '       ' → logprob: -5.124427795410156
    5. '           ' → logprob: -6.749427795410156
    6. '                   ' → logprob: -8.124427795410156
    7. '                ' → logprob: -8.499427795410156
    8. '<|end|>' → logprob: -8.749427795410156
    9. '#' (adapté à ' #') → logprob: -9.374427795410156
    10. '                
' → logprob: -9.999427795410156

Token 813: ' But' (ID: 3072)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.21457426249980927
    2. 'for' → logprob: -1.9645742177963257
    3. ' for' → logprob: -2.9645743370056152
    4. '           ' → logprob: -7.089574337005615
    5. '       ' → logprob: -8.214573860168457
    6. '                   ' → logprob: -9.214573860168457
    7. '<|end|>' → logprob: -10.964573860168457
    8. '                ' → logprob: -11.214573860168457
    9. '			' → logprob: -11.714573860168457
    10. '#' → logprob: -11.714573860168457

Token 814: ' to' (ID: 316)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.49708491563796997
    2. 'for' → logprob: -1.1220848560333252
    3. '               ' → logprob: -3.372084856033325
    4. 'sum' → logprob: -4.247085094451904
    5. '                   ' → logprob: -5.372085094451904
    6. 's' → logprob: -5.497085094451904
    7. ' s' → logprob: -6.247085094451904
    8. 'range' → logprob: -6.497085094451904
    9. ' sum' → logprob: -6.872085094451904
    10. '                ' → logprob: -6.997085094451904

Token 815: ' save' (ID: 5093)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -1.0145385265350342
    2. ' for' → logprob: -1.5145385265350342
    3. ' sum' → logprob: -2.139538526535034
    4. ' s' → logprob: -2.264538526535034
    5. 'sum' → logprob: -3.389538526535034
    6. ' in' → logprob: -3.639538526535034
    7. ' S' → logprob: -3.639538526535034
    8. 'for' → logprob: -3.889538526535034
    9. ' x' → logprob: -3.889538526535034
    10. 'S' → logprob: -3.889538526535034

Token 816: ' memory' (ID: 8197)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.723260223865509
    2. 'sum' → logprob: -1.2232601642608643
    3. 'range' → logprob: -2.2232601642608643
    4. 'memory' → logprob: -3.8482601642608643
    5. ' memory' → logprob: -4.223260402679443
    6. ' for' → logprob: -4.223260402679443
    7. ' range' → logprob: -4.348260402679443
    8. 's' → logprob: -4.598260402679443
    9. ' sum' → logprob: -4.848260402679443
    10. 'space' → logprob: -5.348260402679443

Token 817: ' we' (ID: 581)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.057586669921875
    2. 'for' → logprob: -1.557586669921875
    3. '       ' → logprob: -1.807586669921875
    4. '               ' → logprob: -2.182586669921875
    5. ',' → logprob: -2.932586669921875
    6. '           ' → logprob: -3.182586669921875
    7. '<|end|>' → logprob: -3.682586669921875
    8. ':' → logprob: -3.932586669921875
    9. '<|end|>' → logprob: -5.557586669921875
    10. '                   ' → logprob: -5.682586669921875

Token 818: ' flatten' (ID: 61445)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.2939623594284058
    2. 'for' → logprob: -1.2939623594284058
    3. '       ' → logprob: -1.5439623594284058
    4. ' for' → logprob: -2.4189624786376953
    5. '<|end|>' → logprob: -4.293962478637695
    6. '                   ' → logprob: -4.418962478637695
    7. '           ' → logprob: -4.418962478637695
    8. 'continue' → logprob: -4.543962478637695
    9. ' need' → logprob: -4.793962478637695
    10. '#' → logprob: -4.793962478637695

Token 819: ' l' (ID: 305)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.257483720779419
    2. '       ' → logprob: -1.507483720779419
    3. ' for' → logprob: -1.757483720779419
    4. 'for' → logprob: -2.007483720779419
    5. '<|end|>' → logprob: -2.257483720779419
    6. '[' → logprob: -3.632483720779419
    7. '           ' → logprob: -3.882483720779419
    8. '<|end|>' → logprob: -5.25748348236084
    9. '...' → logprob: -5.88248348236084
    10. '			' → logprob: -6.25748348236084

Token 820: ' dimension' (ID: 21959)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.5858092308044434
    2. '<|end|>' → logprob: -1.5858092308044434
    3. '][' → logprob: -2.3358092308044434
    4. 'for' → logprob: -2.5858092308044434
    5. ']' → logprob: -2.8358092308044434
    6. '[' → logprob: -3.0858092308044434
    7. ',' → logprob: -3.2108092308044434
    8. '           ' → logprob: -3.3358092308044434
    9. 'dp' → logprob: -3.3358092308044434
    10. '<|end|>' → logprob: -3.3358092308044434

Token 821: ' later' (ID: 4849)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.016985652968287468
    2. '           ' → logprob: -5.0169854164123535
    3. '<|end|>' → logprob: -5.1419854164123535
    4. '<|end|>' → logprob: -6.2669854164123535
    5. ',' → logprob: -6.8919854164123535
    6. '       ' → logprob: -7.5169854164123535
    7. ' for' → logprob: -8.141985893249512
    8. '...' → logprob: -8.891985893249512
    9. '                   ' → logprob: -8.891985893249512
    10. 'for' → logprob: -9.391985893249512

Token 822: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.17215414345264435
    2. '<|end|>' → logprob: -2.422154188156128
    3. '           ' → logprob: -2.797154188156128
    4. '<|end|>' → logprob: -5.172153949737549
    5. '       ' → logprob: -7.422153949737549
    6. ',' → logprob: -7.797153949737549
    7. ' for' → logprob: -7.922153949737549
    8. '                   ' → logprob: -8.547154426574707
    9. ' ' → logprob: -8.672154426574707
    10. '...' → logprob: -8.797154426574707

Token 823: '               ' (ID: 506)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7840331792831421
    2. '               ' → logprob: -0.9090331792831421
    3. '<|end|>' → logprob: -2.5340332984924316
    4. '           ' → logprob: -3.7840332984924316
    5. ' for' → logprob: -3.9090332984924316
    6. 'for' → logprob: -4.659033298492432
    7. '<|end|>' → logprob: -6.409033298492432
    8. '                   ' → logprob: -6.659033298492432
    9. '...' → logprob: -6.784033298492432
    10. '[' → logprob: -7.034033298492432

Token 824: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5026983022689819
    2. ' for' → logprob: -1.002698302268982
    3. '           ' → logprob: -4.7526984214782715
    4. 'pass' → logprob: -5.1276984214782715
    5. '               ' → logprob: -5.3776984214782715
    6. '<|end|>' → logprob: -6.0026984214782715
    7. ' pass' → logprob: -6.5026984214782715
    8. '...' → logprob: -6.5026984214782715
    9. '                ' → logprob: -7.1276984214782715
    10. '       ' → logprob: -7.3776984214782715

Token 825: ' Instead' (ID: 21050)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.0318158864974976
    2. 'for' → logprob: -1.1568158864974976
    3. ' for' → logprob: -1.6568158864974976
    4. '       ' → logprob: -2.656816005706787
    5. '           ' → logprob: -2.906816005706787
    6. '<|end|>' → logprob: -5.406816005706787
    7. 'pass' → logprob: -6.406816005706787
    8. '                ' → logprob: -6.531816005706787
    9. '                   ' → logprob: -7.406816005706787
    10. ' pass' → logprob: -7.656816005706787

Token 826: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.23278753459453583
    2. '               ' → logprob: -1.7327874898910522
    3. '       ' → logprob: -4.732787609100342
    4. ':' → logprob: -5.357787609100342
    5. ',' → logprob: -5.857787609100342
    6. '<|end|>' → logprob: -5.982787609100342
    7. ' in' → logprob: -6.232787609100342
    8. '                   ' → logprob: -6.232787609100342
    9. 'for' → logprob: -6.357787609100342
    10. ' for' → logprob: -6.482787609100342

Token 827: ' use' (ID: 1199)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5050742626190186
    2. '       ' → logprob: -1.7550742626190186
    3. 'for' → logprob: -2.0050742626190186
    4. '           ' → logprob: -3.1300742626190186
    5. '               ' → logprob: -3.2550742626190186
    6. '        ' → logprob: -7.130074501037598
    7. ' pass' → logprob: -7.130074501037598
    8. ' dp' → logprob: -7.130074501037598
    9. 'dp' → logprob: -7.255074501037598
    10. 'pass' → logprob: -7.380074501037598

Token 828: ' a' (ID: 261)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.08059350401163101
    2. 'for' → logprob: -3.2055935859680176
    3. 'S' → logprob: -3.5805935859680176
    4. 'sum' → logprob: -5.080593585968018
    5. ' range' → logprob: -6.830593585968018
    6. 'dp' → logprob: -7.580593585968018
    7. 's' → logprob: -7.830593585968018
    8. 'x' → logprob: -8.45559310913086
    9. '
' → logprob: -8.95559310913086
    10. ' for' → logprob: -8.95559310913086

Token 829: ' ' (ID: 220)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.16160884499549866
    2. 'tmp' → logprob: -3.161608934402466
    3. 'temp' → logprob: -3.161608934402466
    4. 'dp' → logprob: -4.161608695983887
    5. 'new' → logprob: -4.536608695983887
    6. ' for' → logprob: -4.786608695983887
    7. 'prev' → logprob: -5.036608695983887
    8. 'sum' → logprob: -5.036608695983887
    9. 'range' → logprob: -5.536608695983887
    10. 'S' → logprob: -5.786608695983887

Token 830: '2' (ID: 17)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2522575259208679
    2. 'temp' → logprob: -3.0022575855255127
    3. 'tmp' → logprob: -3.0022575855255127
    4. 'dp' → logprob: -3.2522575855255127
    5. '#' → logprob: -3.7522575855255127
    6. 'new' → logprob: -4.127257347106934
    7. 'temporary' → logprob: -5.127257347106934
    8. 'sum' → logprob: -5.502257347106934
    9. 'two' → logprob: -5.627257347106934
    10. 'nested' → logprob: -5.877257347106934

Token 831: 'D' (ID: 35)
  Prédit: 'D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.8375201225280762
    2. 'd' → logprob: -1.3375201225280762
    3. 'dim' → logprob: -2.087520122528076
    4. '-dimensional' → logprob: -2.337520122528076
    5. 'for' → logprob: -3.587520122528076
    6. 'dp' → logprob: -4.337520122528076
    7. 'def' → logprob: -4.337520122528076
    8. '               ' → logprob: -5.337520122528076
    9. '[]' → logprob: -5.337520122528076
    10. ' dimensional' → logprob: -5.462520122528076

Token 832: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.6921653151512146
    2. 'for' → logprob: -0.8171653151512146
    3. ']' → logprob: -3.6921653747558594
    4. ' for' → logprob: -4.317165374755859
    5. '<|end|>' → logprob: -5.317165374755859
    6. '[' → logprob: -5.942165374755859
    7. '][' → logprob: -6.192165374755859
    8. 'range' → logprob: -6.692165374755859
    9. ' dp' → logprob: -6.817165374755859
    10. 'array' → logprob: -6.942165374755859

Token 833: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9869211912155151
    2. '[' → logprob: -1.3619211912155151
    3. 'for' → logprob: -2.7369213104248047
    4. ',' → logprob: -3.1119213104248047
    5. 'import' → logprob: -3.2369213104248047
    6. ' for' → logprob: -3.3619213104248047
    7. '<|end|>' → logprob: -3.7369213104248047
    8. '           ' → logprob: -3.9869213104248047
    9. '[length' → logprob: -4.111921310424805
    10. '```' → logprob: -4.111921310424805

Token 834: ' length' (ID: 5517)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.46432891488075256
    2. 'l' → logprob: -1.2143288850784302
    3. 'sum' → logprob: -3.8393290042877197
    4. '(length' → logprob: -4.714328765869141
    5. '(l' → logprob: -4.964328765869141
    6. 'dp' → logprob: -4.964328765869141
    7. 'for' → logprob: -4.964328765869141
    8. ' length' → logprob: -5.089328765869141
    9. '```' → logprob: -5.339328765869141
    10. ' l' → logprob: -5.464328765869141

Token 835: ' and' (ID: 326)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.24735604226589203
    2. 'dp' → logprob: -2.6223559379577637
    3. '           ' → logprob: -3.7473559379577637
    4. '[' → logprob: -3.9973559379577637
    5. 'for' → logprob: -4.122355937957764
    6. '               ' → logprob: -4.497355937957764
    7. 'from' → logprob: -4.622355937957764
    8. ' =' → logprob: -4.872355937957764
    9. '   ' → logprob: -4.997355937957764
    10. ' for' → logprob: -5.247355937957764

Token 836: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.06274710595607758
    2. ' sum' → logprob: -2.812747001647949
    3. 's' → logprob: -7.937747001647949
    4. 'S' → logprob: -8.06274700164795
    5. ' S' → logprob: -10.43774700164795
    6. 'for' → logprob: -11.18774700164795
    7. 'range' → logprob: -11.31274700164795
    8. '
' → logprob: -11.56274700164795
    9. '   ' → logprob: -11.81274700164795
    10. '           ' → logprob: -12.31274700164795

Token 837: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004320572130382061
    2. '               ' → logprob: -6.5043206214904785
    3. '<|end|>' → logprob: -6.6293206214904785
    4. '           ' → logprob: -7.6293206214904785
    5. '```' → logprob: -8.75432014465332
    6. '<|end|>' → logprob: -9.12932014465332
    7. 'from' → logprob: -9.12932014465332
    8. '[' → logprob: -9.25432014465332
    9. '   ' → logprob: -9.25432014465332
    10. 'dp' → logprob: -9.62932014465332

Token 838: ' clarity' (ID: 45632)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.5729455351829529
    2. ' l' → logprob: -1.4479455947875977
    3. 'length' → logprob: -2.3229455947875977
    4. ' length' → logprob: -3.8229455947875977
    5. '_' → logprob: -3.9479455947875977
    6. 'x' → logprob: -4.197945594787598
    7. ' x' → logprob: -5.072945594787598
    8. ' _' → logprob: -5.197945594787598
    9. '```' → logprob: -5.322945594787598
    10. 'sum' → logprob: -5.947945594787598

Token 839: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.048095665872097015
    2. '           ' → logprob: -3.673095703125
    3. '               ' → logprob: -4.048095703125
    4. '<|end|>' → logprob: -6.298095703125
    5. 'for' → logprob: -7.673095703125
    6. '   ' → logprob: -7.923095703125
    7. '<|end|>' → logprob: -7.923095703125
    8. ' for' → logprob: -8.298095703125
    9. ',' → logprob: -8.798095703125
    10. '                   ' → logprob: -9.048095703125

Token 840: '               ' (ID: 506)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08640360832214355
    2. '               ' → logprob: -2.9614036083221436
    3. '<|end|>' → logprob: -4.586403846740723
    4. '           ' → logprob: -4.961403846740723
    5. '   ' → logprob: -6.086403846740723
    6. '```' → logprob: -6.211403846740723
    7. '        
' → logprob: -6.586403846740723
    8. '        ' → logprob: -6.836403846740723
    9. '                
' → logprob: -6.961403846740723
    10. 'def' → logprob: -7.336403846740723

Token 841: ' pass' (ID: 1853)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.580498993396759
    2. '           ' → logprob: -0.955498993396759
    3. '       ' → logprob: -3.7054989337921143
    4. '<|end|>' → logprob: -4.705499172210693
    5. 'for' → logprob: -5.330499172210693
    6. 'pass' (adapté à ' pass') → logprob: -5.330499172210693
    7. '...' → logprob: -5.580499172210693
    8. '   ' → logprob: -5.830499172210693
    9. '<|end|>' → logprob: -7.080499172210693
    10. ' for' → logprob: -7.455499172210693

Token 842: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13352467119693756
    2. 'for' → logprob: -3.0085246562957764
    3. '               ' → logprob: -3.5085246562957764
    4. '#' → logprob: -4.3835248947143555
    5. ' for' → logprob: -4.5085248947143555
    6. 'from' → logprob: -4.8835248947143555
    7. 'dp' → logprob: -5.2585248947143555
    8. '                   ' → logprob: -6.2585248947143555
    9. '```' → logprob: -6.2585248947143555
    10. '           ' → logprob: -6.6335248947143555

Token 843: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04044237360358238
    2. 'for' → logprob: -4.16544246673584
    3. ' for' → logprob: -4.41544246673584
    4. 'dp' → logprob: -5.66544246673584
    5. '               ' → logprob: -6.16544246673584
    6. 'from' → logprob: -6.79044246673584
    7. '           ' → logprob: -6.91544246673584
    8. '#' → logprob: -7.16544246673584
    9. ' if' → logprob: -7.16544246673584
    10. '```' → logprob: -7.16544246673584

Token 844: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04544360563158989
    2. ' for' → logprob: -4.170443534851074
    3. '           ' → logprob: -4.545443534851074
    4. 'for' → logprob: -4.920443534851074
    5. '               ' → logprob: -5.420443534851074
    6. '[' → logprob: -6.420443534851074
    7. '```' → logprob: -6.920443534851074
    8. '        ' → logprob: -7.295443534851074
    9. ' if' → logprob: -7.795443534851074
    10. 'dp' → logprob: -8.170443534851074

Token 845: ' Because' (ID: 13602)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03199952840805054
    2. 'for' → logprob: -4.031999588012695
    3. '           ' → logprob: -4.531999588012695
    4. ' for' → logprob: -6.406999588012695
    5. '#' → logprob: -7.781999588012695
    6. '<|end|>' → logprob: -8.656999588012695
    7. 'from' → logprob: -8.906999588012695
    8. '   ' → logprob: -9.531999588012695
    9. '               ' → logprob: -9.656999588012695
    10. 'dp' → logprob: -9.781999588012695

Token 846: ' we' (ID: 581)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13696125149726868
    2. 'dp' → logprob: -2.8869612216949463
    3. ' for' → logprob: -3.5119612216949463
    4. ' dp' → logprob: -4.011961460113525
    5. 'for' → logprob: -4.761961460113525
    6. 'from' → logprob: -5.511961460113525
    7. '           ' → logprob: -5.761961460113525
    8. '               ' → logprob: -6.136961460113525
    9. '#' → logprob: -6.636961460113525
    10. ' from' → logprob: -6.636961460113525

Token 847: ' need' (ID: 1309)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17875094711780548
    2. 'for' → logprob: -2.803750991821289
    3. '[' → logprob: -3.553750991821289
    4. ' for' → logprob: -3.928750991821289
    5. ' =' → logprob: -4.553750991821289
    6. '           ' → logprob: -5.303750991821289
    7. '=' → logprob: -5.303750991821289
    8. '#' → logprob: -5.303750991821289
    9. '   ' → logprob: -5.803750991821289
    10. 'continue' → logprob: -5.928750991821289

Token 848: ' length' (ID: 5517)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18233467638492584
    2. 'dp' → logprob: -2.5573346614837646
    3. 'for' → logprob: -3.0573346614837646
    4. ' for' → logprob: -4.307334899902344
    5. 'to' → logprob: -5.307334899902344
    6. '           ' → logprob: -5.307334899902344
    7. ' dp' → logprob: -5.432334899902344
    8. '```' → logprob: -5.557334899902344
    9. ' to' → logprob: -5.682334899902344
    10. '               ' → logprob: -6.682334899902344

Token 849: ' dimension' (ID: 21959)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.340705543756485
    2. ',' → logprob: -2.590705633163452
    3. '[' → logprob: -3.215705633163452
    4. '<|end|>' → logprob: -3.215705633163452
    5. ' =' → logprob: -3.340705633163452
    6. 'for' → logprob: -3.965705633163452
    7. 'dp' → logprob: -4.215705394744873
    8. '           ' → logprob: -4.715705394744873
    9. '=' → logprob: -4.965705394744873
    10. '        ' → logprob: -5.465705394744873

Token 850: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0026132361963391304
    2. ',' → logprob: -7.502613067626953
    3. '           ' → logprob: -8.127613067626953
    4. 'dp' → logprob: -8.252613067626953
    5. ' for' → logprob: -8.252613067626953
    6. '        
' → logprob: -8.627613067626953
    7. '
' → logprob: -8.627613067626953
    8. '[' → logprob: -8.877613067626953
    9. 'for' → logprob: -9.127613067626953
    10. '               ' → logprob: -9.127613067626953

Token 851: ' we' (ID: 581)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006655688397586346
    2. 'dp' → logprob: -5.756655693054199
    3. ' dp' → logprob: -6.131655693054199
    4. 'import' → logprob: -7.631655693054199
    5. 'we' → logprob: -8.6316556930542
    6. 'from' → logprob: -8.6316556930542
    7. '#' → logprob: -8.8816556930542
    8. ' we' → logprob: -10.0066556930542
    9. '           ' → logprob: -10.1316556930542
    10. ' from' → logprob: -10.2566556930542

Token 852: ' do' (ID: 621)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8000292778015137
    2. '=' → logprob: -1.8000292778015137
    3. ' =' → logprob: -1.9250292778015137
    4. 'import' → logprob: -2.0500292778015137
    5. '[' → logprob: -3.1750292778015137
    6. '#' → logprob: -4.800029277801514
    7. '=[' → logprob: -5.300029277801514
    8. 'length' → logprob: -5.300029277801514
    9. '```' → logprob: -5.300029277801514
    10. 'dp' → logprob: -5.675029277801514

Token 853: ' ' (ID: 220)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.32624924182891846
    2. '       ' → logprob: -1.7012492418289185
    3. '```' → logprob: -2.701249122619629
    4. ' dp' → logprob: -4.826249122619629
    5. 'for' → logprob: -4.951249122619629
    6. '``' → logprob: -5.576249122619629
    7. 'from' → logprob: -6.326249122619629
    8. ' for' → logprob: -6.326249122619629
    9. ':' → logprob: -6.576249122619629
    10. 'length' → logprob: -6.826249122619629

Token 854: '2' (ID: 17)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.015143233351409435
    2. '       ' → logprob: -5.015143394470215
    3. 'from' → logprob: -5.515143394470215
    4. 'length' → logprob: -6.265143394470215
    5. 'for' → logprob: -7.140143394470215
    6. '```' → logprob: -7.640143394470215
    7. 'import' → logprob: -7.890143394470215
    8. 'prev' → logprob: -8.390143394470215
    9. '#' → logprob: -8.640143394470215
    10. ':' → logprob: -9.265143394470215

Token 855: 'D' (ID: 35)
  Prédit: 'D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.3253217041492462
    2. 'd' → logprob: -1.5753216743469238
    3. 'dp' → logprob: -3.075321674346924
    4. '][' → logprob: -4.450321674346924
    5. ']' → logprob: -5.575321674346924
    6. 'dim' → logprob: -6.325321674346924
    7. '[' → logprob: -6.825321674346924
    8. '-dimensional' → logprob: -6.950321674346924
    9. '   ' → logprob: -7.075321674346924
    10. '_dp' → logprob: -7.450321674346924

Token 856: ' DP' (ID: 51992)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.20424754917621613
    2. '       ' → logprob: -1.9542475938796997
    3. '_dp' → logprob: -3.82924747467041
    4. '
' → logprob: -4.70424747467041
    5. ':' → logprob: -6.45424747467041
    6. ' =' → logprob: -6.45424747467041
    7. '```' → logprob: -6.45424747467041
    8. 'import' → logprob: -6.70424747467041
    9. '           ' → logprob: -6.95424747467041
    10. 'for' → logprob: -7.20424747467041

Token 857: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04446898028254509
    2. 'dp' → logprob: -3.169468879699707
    3. ' dp' → logprob: -7.794468879699707
    4. 'from' → logprob: -8.544468879699707
    5. '```' → logprob: -8.669468879699707
    6. '               ' → logprob: -8.919468879699707
    7. '   ' → logprob: -9.419468879699707
    8. 'for' → logprob: -9.419468879699707
    9. 'import' → logprob: -9.544468879699707
    10. '           ' → logprob: -9.669468879699707

Token 858: 'def' (ID: 1314)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0089421346783638
    2. '```' → logprob: -5.133942127227783
    3. 'dp' → logprob: -6.133942127227783
    4. 'length' → logprob: -8.883942604064941
    5. ' dp' → logprob: -8.883942604064941
    6. 'from' → logprob: -8.883942604064941
    7. '   ' → logprob: -9.258942604064941
    8. '           ' → logprob: -9.758942604064941
    9. 'import' → logprob: -9.883942604064941
    10. '               ' → logprob: -10.383942604064941

Token 859: ' solve' (ID: 17722)
  Prédit: 'solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solve' → logprob: -0.3009262979030609
    2. 'main' → logprob: -1.9259263277053833
    3. ' solve' → logprob: -2.4259262084960938
    4. ' main' → logprob: -3.6759262084960938
    5. '__' → logprob: -8.300926208496094
    6. '_main' → logprob: -10.425926208496094
    7. '_s' → logprob: -10.425926208496094
    8. 's' → logprob: -10.675926208496094
    9. 'olve' → logprob: -11.050926208496094
    10. '(s' → logprob: -11.550926208496094

Token 860: '(N' (ID: 10564)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.9565560221672058
    2. '[length' → logprob: -1.4565560817718506
    3. '```' → logprob: -2.2065560817718506
    4. '(length' → logprob: -2.3315560817718506
    5. '[' → logprob: -3.0815560817718506
    6. ':' → logprob: -3.0815560817718506
    7. '   ' → logprob: -3.7065560817718506
    8. '[N' → logprob: -3.9565560817718506
    9. ':
' → logprob: -5.0815558433532715
    10. ' =' → logprob: -5.2065558433532715

Token 861: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007838358171284199
    2. '+' → logprob: -5.257838249206543
    3. '   ' → logprob: -6.882838249206543
    4. '[' → logprob: -7.882838249206543
    5. ' ,' → logprob: -7.882838249206543
    6. ' +' → logprob: -8.632838249206543
    7. '```' → logprob: -8.632838249206543
    8. 'def' → logprob: -8.882838249206543
    9. ',N' → logprob: -9.257838249206543
    10. '[N' → logprob: -10.257838249206543

Token 862: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -1.0683535037969705e-05
    2. ' M' → logprob: -11.62501049041748
    3. '   ' → logprob: -14.62501049041748
    4. 'def' → logprob: -14.75001049041748
    5. 'length' → logprob: -14.75001049041748
    6. 'int' → logprob: -14.87501049041748
    7. '```' → logprob: -16.375011444091797
    8. ')' → logprob: -16.875011444091797
    9. '  ' → logprob: -17.250011444091797
    10. ' ' → logprob: -17.375011444091797

Token 863: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00020520923135336488
    2. 'def' → logprob: -9.375205039978027
    3. ' ,' → logprob: -9.750205039978027
    4. '   ' → logprob: -10.125205039978027
    5. ',M' → logprob: -12.250205039978027
    6. '):
' → logprob: -12.375205039978027
    7. ',N' → logprob: -12.875205039978027
    8. '```' → logprob: -13.125205039978027
    9. ',int' → logprob: -13.750205039978027
    10. '):' → logprob: -13.750205039978027

Token 864: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.003957647830247879
    2. 'length' → logprob: -6.378957748413086
    3. 'l' → logprob: -6.628957748413086
    4. ' S' → logprob: -8.003957748413086
    5. 'K' → logprob: -8.628957748413086
    6. 'L' → logprob: -8.878957748413086
    7. '   ' → logprob: -9.128957748413086
    8. 'M' → logprob: -9.378957748413086
    9. 'def' → logprob: -10.378957748413086
    10. '       ' → logprob: -11.503957748413086

Token 865: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8524889349937439
    2. '):
' → logprob: -1.1024889945983887
    3. '):' → logprob: -2.1024889945983887
    4. '(N' → logprob: -2.6024889945983887
    5. '   ' → logprob: -4.102488994598389
    6. 'def' → logprob: -4.227488994598389
    7. '[N' → logprob: -5.102488994598389
    8. '):
' → logprob: -6.227488994598389
    9. '(n' → logprob: -6.352488994598389
    10. '[' → logprob: -6.852488994598389

Token 866: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00562454666942358
    2. 'dp' → logprob: -5.255624771118164
    3. '```' → logprob: -8.255624771118164
    4. 'def' → logprob: -10.255624771118164
    5. '	dp' → logprob: -10.255624771118164
    6. ' dp' → logprob: -10.380624771118164
    7. 'import' → logprob: -11.130624771118164
    8. 'from' → logprob: -12.255624771118164
    9. 'length' → logprob: -12.380624771118164
    10. '   ' → logprob: -13.505624771118164

Token 867: ' length' (ID: 5517)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.035311851650476456
    2. 'dp' → logprob: -3.4103119373321533
    3. '```' → logprob: -7.035311698913574
    4. 'from' → logprob: -7.910311698913574
    5. 'def' → logprob: -8.660311698913574
    6. 'import' → logprob: -9.160311698913574
    7. 'length' (adapté à ' length') → logprob: -9.660311698913574
    8. ' dp' → logprob: -10.160311698913574
    9. '	dp' → logprob: -10.910311698913574
    10. '``' → logprob: -11.535311698913574

Token 868: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.44340980052948
    2. '   ' → logprob: -1.81840980052948
    3. '=' → logprob: -2.3184099197387695
    4. '+' → logprob: -2.8184099197387695
    5. '][' → logprob: -4.8184099197387695
    6. ',' → logprob: -4.8184099197387695
    7. ' +' → logprob: -5.0684099197387695
    8. 'def' → logprob: -5.0684099197387695
    9. ')' → logprob: -5.4434099197387695
    10. 'import' → logprob: -6.6934099197387695

Token 869: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0010342379100620747
    2. ' N' → logprob: -6.876034259796143
    3. '   ' → logprob: -13.626033782958984
    4. '	N' → logprob: -16.001033782958984
    5. '0' → logprob: -16.626033782958984
    6. ' ' → logprob: -17.376033782958984
    7. '(N' → logprob: -18.001033782958984
    8. '[N' → logprob: -18.001033782958984
    9. 'n' → logprob: -18.251033782958984
    10. '[' → logprob: -18.376033782958984

Token 870: ' *' (ID: 425)
  Prédit: '*N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*N' → logprob: -0.4874042272567749
    2. ' *' → logprob: -0.9874042272567749
    3. '*' → logprob: -4.3624043464660645
    4. '   ' → logprob: -8.612403869628906
    5. '*S' → logprob: -8.987403869628906
    6. '*num' → logprob: -9.987403869628906
    7. '**' → logprob: -10.237403869628906
    8. '*K' → logprob: -10.737403869628906
    9. '*n' → logprob: -10.862403869628906
    10. ' ' → logprob: -10.987403869628906

Token 871: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.20631900429725647
    2. 'length' → logprob: -1.706318974494934
    3. '2' → logprob: -5.3313188552856445
    4. ' length' → logprob: -10.331318855285645
    5. '(length' → logprob: -11.956318855285645
    6. '*N' → logprob: -12.456318855285645
    7. ' N' → logprob: -12.831318855285645
    8. ' ' → logprob: -13.206318855285645
    9. '   ' → logprob: -13.581318855285645
    10. '(N' → logprob: -13.956318855285645

Token 872: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07720691710710526
    2. 'dp' → logprob: -2.82720685005188
    3. ' dp' → logprob: -4.952207088470459
    4. '```' → logprob: -4.952207088470459
    5. '
' → logprob: -8.4522066116333
    6. 'from' → logprob: -8.5772066116333
    7. 'def' → logprob: -8.9522066116333
    8. '_dp' → logprob: -9.0772066116333
    9. '``' → logprob: -9.5772066116333
    10. '	dp' → logprob: -9.7022066116333

Token 873: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1274082511663437
    2. 'dp' → logprob: -2.127408266067505
    3. 'from' → logprob: -8.377408027648926
    4. '```' → logprob: -8.877408027648926
    5. 'def' → logprob: -9.752408027648926
    6. 'import' → logprob: -10.377408027648926
    7. ' dp' → logprob: -11.252408027648926
    8. '	dp' → logprob: -12.252408027648926
    9. '``' → logprob: -13.252408027648926
    10. '_dp' → logprob: -15.002408027648926

Token 874: ' MOD' (ID: 32868)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.006794593762606382
    2. '   ' → logprob: -5.006794452667236
    3. ' dp' → logprob: -10.256794929504395
    4. 'from' → logprob: -10.756794929504395
    5. '```' → logprob: -11.506794929504395
    6. '	dp' → logprob: -12.006794929504395
    7. 'import' → logprob: -12.131794929504395
    8. '       ' → logprob: -14.881794929504395
    9. '``' → logprob: -15.256794929504395
    10. ' ' → logprob: -15.631794929504395

Token 875: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.24706706404685974
    2. '=' → logprob: -1.8720670938491821
    3. '   ' → logprob: -2.7470669746398926
    4. '```' → logprob: -7.747066974639893
    5. 'def' → logprob: -8.12206745147705
    6. ')' → logprob: -9.62206745147705
    7. ',' → logprob: -9.74706745147705
    8. 'import' → logprob: -10.49706745147705
    9. '=
' → logprob: -10.74706745147705
    10. 'dp' → logprob: -10.74706745147705

Token 876: ' ' (ID: 220)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.0012736850185319781
    2. '10' → logprob: -6.7512736320495605
    3. ' ' → logprob: -9.251274108886719
    4. '   ' → logprob: -11.876274108886719
    5. 'int' → logprob: -15.126274108886719
    6. '  ' → logprob: -16.75127410888672
    7. '```' → logprob: -16.87627410888672
    8. '1' → logprob: -17.25127410888672
    9. '    ' → logprob: -17.37627410888672
    10. '`' → logprob: -17.75127410888672

Token 877: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -3.547789674485102e-05
    2. '10' → logprob: -10.250035285949707
    3. 'int' → logprob: -17.875036239624023
    4. ' ' → logprob: -19.500036239624023
    5. '```' → logprob: -21.125036239624023
    6. '1' → logprob: -21.250036239624023
    7. '`' → logprob: -21.375036239624023
    8. '   ' → logprob: -21.500036239624023
    9. '(' → logprob: -21.750036239624023
    10. '１００' → logprob: -22.125036239624023

Token 878: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.047797273844480515
    2. '   ' → logprob: -3.922797203063965
    3. '```' → logprob: -4.547797203063965
    4. '
' → logprob: -5.422797203063965
    5. '005' → logprob: -5.797797203063965
    6. '       ' → logprob: -6.172797203063965
    7. '    ' → logprob: -6.672797203063965
    8. ' ' → logprob: -6.922797203063965
    9. 'def' → logprob: -7.422797203063965
    10. '001' → logprob: -7.547797203063965

Token 879: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.41688838601112366
    2. '```' → logprob: -1.7918883562088013
    3. '
' → logprob: -2.416888475418091
    4. 'def' → logprob: -3.041888475418091
    5. 'dp' → logprob: -3.666888475418091
    6. 'import' → logprob: -5.666888236999512
    7. 'from' → logprob: -6.166888236999512
    8. '``' → logprob: -6.166888236999512
    9. '_dp' → logprob: -6.541888236999512
    10. ':' → logprob: -7.791888236999512

Token 880: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002887610113248229
    2. 'dp' → logprob: -6.002887725830078
    3. '```' → logprob: -8.002887725830078
    4. ' dp' → logprob: -10.377887725830078
    5. 'from' → logprob: -10.377887725830078
    6. 'import' → logprob: -11.752887725830078
    7. 'def' → logprob: -12.877887725830078
    8. '
' → logprob: -13.252887725830078
    9. '``' → logprob: -13.627887725830078
    10. '    
' → logprob: -14.502887725830078

Token 881: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.10042145848274231
    2. '   ' → logprob: -2.35042142868042
    3. 'from' → logprob: -8.600421905517578
    4. 'import' → logprob: -10.975421905517578
    5. '```' → logprob: -12.225421905517578
    6. ' dp' → logprob: -12.600421905517578
    7. 'def' → logprob: -12.600421905517578
    8. '#' (adapté à ' #') → logprob: -14.225421905517578
    9. '	dp' → logprob: -14.475421905517578
    10. '
' → logprob: -15.100421905517578

Token 882: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.004321048967540264
    2. '   ' → logprob: -5.504321098327637
    3. 'from' → logprob: -8.754321098327637
    4. 'import' → logprob: -9.754321098327637
    5. ' dp' → logprob: -11.129321098327637
    6. 'def' → logprob: -12.004321098327637
    7. '```' → logprob: -13.004321098327637
    8. '#' → logprob: -13.629321098327637
    9. '``' → logprob: -14.629321098327637
    10. '	dp' → logprob: -14.629321098327637

Token 883: '[length' (ID: 130091)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3887817859649658
    2. '=' → logprob: -1.1387817859649658
    3. '   ' → logprob: -6.888781547546387
    4. '=[' → logprob: -7.888781547546387
    5. 'length' → logprob: -8.638781547546387
    6. '[length' → logprob: -8.888781547546387
    7. 'def' → logprob: -9.388781547546387
    8. '=[[' → logprob: -10.138781547546387
    9. 'dp' → logprob: -10.888781547546387
    10. 'from' → logprob: -11.388781547546387

Token 884: '+' (ID: 10)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.7878506183624268
    2. ' =' → logprob: -1.1628506183624268
    3. '=' → logprob: -1.7878506183624268
    4. '   ' → logprob: -3.5378506183624268
    5. ']' → logprob: -4.287850379943848
    6. '+' → logprob: -5.287850379943848
    7. ',' → logprob: -5.412850379943848
    8. '=[' → logprob: -5.787850379943848
    9. 'def' → logprob: -5.912850379943848
    10. 'dp' → logprob: -6.162850379943848

Token 885: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001970031065866351
    2. '][' → logprob: -6.251969814300537
    3. '+' → logprob: -10.751970291137695
    4. '   ' → logprob: -11.876970291137695
    5. '=' → logprob: -12.751970291137695
    6. ' ' → logprob: -13.001970291137695
    7. '
' → logprob: -13.251970291137695
    8. '```' → logprob: -13.376970291137695
    9. ' =' → logprob: -13.751970291137695
    10. ' +' → logprob: -13.751970291137695

Token 886: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0005135946557857096
    2. '   ' → logprob: -8.250514030456543
    3. ']' → logprob: -9.000514030456543
    4. 'def' → logprob: -9.750514030456543
    5. '[' → logprob: -11.250514030456543
    6. '
' → logprob: -11.375514030456543
    7. ' ][' → logprob: -11.500514030456543
    8. ' =' → logprob: -12.250514030456543
    9. ',' → logprob: -12.625514030456543
    10. '=[' → logprob: -12.750514030456543

Token 887: 'S' (ID: 50)
  Prédit: 'S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -1.8670179997570813e-05
    2. '(S' → logprob: -11.125019073486328
    3. ' S' → logprob: -13.000019073486328
    4. 'sum' → logprob: -14.750019073486328
    5. '][' → logprob: -14.750019073486328
    6. '[S' → logprob: -15.125019073486328
    7. '   ' → logprob: -15.625019073486328
    8. ']' → logprob: -15.875019073486328
    9. 's' → logprob: -16.875019073486328
    10. '_S' → logprob: -17.250019073486328

Token 888: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0022104429081082344
    2. ' +' → logprob: -6.12721061706543
    3. '][' → logprob: -10.62721061706543
    4. '＋' → logprob: -15.12721061706543
    5. '+
' → logprob: -15.25221061706543
    6. '
' → logprob: -15.37721061706543
    7. '[' → logprob: -16.00221061706543
    8. '   ' → logprob: -16.50221061706543
    9. '1' → logprob: -17.12721061706543
    10. '```' → logprob: -17.37721061706543

Token 889: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0280383548888494e-06
    2. '   ' → logprob: -15.375000953674316
    3. '```' → logprob: -15.500000953674316
    4. '
' → logprob: -15.750000953674316
    5. ']' → logprob: -15.875000953674316
    6. '+' → logprob: -16.000001907348633
    7. ' ' → logprob: -16.125001907348633
    8. '][' → logprob: -17.625001907348633
    9. '=' → logprob: -17.750001907348633
    10. ' =' → logprob: -18.500001907348633

Token 890: '],' (ID: 2155)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.14224053919315338
    2. '][' → logprob: -2.142240524291992
    3. '   ' → logprob: -4.892240524291992
    4. ' =' → logprob: -5.267240524291992
    5. '=' → logprob: -6.392240524291992
    6. ']=' → logprob: -7.267240524291992
    7. '=[' → logprob: -9.392240524291992
    8. ']
' → logprob: -11.142240524291992
    9. 'dp' → logprob: -11.517240524291992
    10. '```' → logprob: -11.892240524291992

Token 891: ' dp' (ID: 21546)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7936083078384399
    2. '[[' → logprob: -1.41860830783844
    3. ' [' → logprob: -1.79360830783844
    4. 'dp' → logprob: -3.2936081886291504
    5. ' [[' → logprob: -3.5436081886291504
    6. ' =' → logprob: -3.6686081886291504
    7. '   ' → logprob: -3.9186081886291504
    8. '[
' → logprob: -5.16860818862915
    9. '=' → logprob: -5.54360818862915
    10. '[l' → logprob: -5.54360818862915

Token 892: '[i' (ID: 1768)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5765894651412964
    2. ' =' → logprob: -0.8265894651412964
    3. '=[' → logprob: -7.826589584350586
    4. '   ' → logprob: -9.201589584350586
    5. '=[[' → logprob: -9.451589584350586
    6. '[length' → logprob: -11.076589584350586
    7. '=[]' → logprob: -11.951589584350586
    8. '[' → logprob: -12.076589584350586
    9. 'import' → logprob: -12.076589584350586
    10. 'def' → logprob: -12.201589584350586

Token 893: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.09776622802019119
    2. ']' → logprob: -2.847766160964966
    3. '=' → logprob: -4.222766399383545
    4. ' =' → logprob: -4.847766399383545
    5. '   ' → logprob: -5.597766399383545
    6. '+' → logprob: -5.597766399383545
    7. '[' → logprob: -6.347766399383545
    8. '=[' → logprob: -7.097766399383545
    9. ']=' → logprob: -7.097766399383545
    10. '[length' → logprob: -7.347766399383545

Token 894: 'j' (ID: 73)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.6632710099220276
    2. 's' → logprob: -1.5382709503173828
    3. 'j' → logprob: -1.7882709503173828
    4. '0' → logprob: -2.788270950317383
    5. ']' → logprob: -3.788270950317383
    6. '=' → logprob: -6.038270950317383
    7. ' sum' → logprob: -6.538270950317383
    8. ']=' → logprob: -6.538270950317383
    9. 'S' → logprob: -6.663270950317383
    10. '<|end|>' → logprob: -6.788270950317383

Token 895: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.027209771797060966
    2. ']=' → logprob: -4.652209758758545
    3. '][' → logprob: -5.027209758758545
    4. '=' → logprob: -5.027209758758545
    5. '   ' → logprob: -6.152209758758545
    6. ' =' → logprob: -6.902209758758545
    7. '[i' → logprob: -8.277210235595703
    8. 'x' → logprob: -9.027210235595703
    9. '+' → logprob: -9.527210235595703
    10. 'i' → logprob: -9.527210235595703

Token 896: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10078830271959305
    2. ' =' → logprob: -2.3507883548736572
    3. '=[' → logprob: -8.225788116455078
    4. '   ' → logprob: -8.725788116455078
    5. 'def' → logprob: -9.725788116455078
    6. '=[[' → logprob: -10.225788116455078
    7. '```' → logprob: -10.725788116455078
    8. '=
' → logprob: -11.350788116455078
    9. 'import' → logprob: -11.975788116455078
    10. ']' → logprob: -12.225788116455078

Token 897: ' number' (ID: 2086)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00819491222500801
    2. '[[' → logprob: -5.258194923400879
    3. '0' → logprob: -6.008194923400879
    4. ' [' → logprob: -7.633194923400879
    5. '[int' → logprob: -12.133194923400879
    6. '[
' → logprob: -12.508194923400879
    7. ' [[' → logprob: -13.133194923400879
    8. '[i' → logprob: -14.508194923400879
    9. ' ' → logprob: -15.008194923400879
    10. '{' → logprob: -15.008194923400879

Token 898: ' of' (ID: 328)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5178995132446289
    2. '=' → logprob: -2.017899513244629
    3. '[' → logprob: -2.267899513244629
    4. '[
' → logprob: -2.517899513244629
    5. ']' → logprob: -3.767899513244629
    6. '][' → logprob: -4.767899513244629
    7. '   ' → logprob: -4.892899513244629
    8. 's' → logprob: -5.017899513244629
    9. ' of' → logprob: -5.267899513244629
    10. 'of' → logprob: -5.267899513244629

Token 899: ' strictly' (ID: 38971)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.02936427854001522
    2. ' [' → logprob: -4.404364109039307
    3. 'ways' → logprob: -4.529364109039307
    4. '0' → logprob: -6.529364109039307
    5. '[i' → logprob: -6.654364109039307
    6. 'strict' → logprob: -7.154364109039307
    7. ' ways' → logprob: -7.279364109039307
    8. 'se' → logprob: -7.404364109039307
    9. ' sequences' → logprob: -8.279364585876465
    10. 'dp' → logprob: -8.779364585876465

Token 900: ' increasing' (ID: 11293)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.00030709904967807233
    2. ' increasing' → logprob: -9.500307083129883
    3. 'increment' → logprob: -9.750307083129883
    4. '```' → logprob: -9.875307083129883
    5. 'de' → logprob: -10.500307083129883
    6. '   ' → logprob: -10.625307083129883
    7. '``' → logprob: -11.125307083129883
    8. '[' → logprob: -11.375307083129883
    9. '[i' → logprob: -11.750307083129883
    10. 'increase' → logprob: -12.625307083129883

Token 901: ' sequences' (ID: 45665)
  Prédit: '_sequences'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sequences' → logprob: -0.2010234147310257
    2. ' sequences' → logprob: -2.3260233402252197
    3. 'se' → logprob: -2.8260233402252197
    4. '_se' → logprob: -4.826023578643799
    5. '[' → logprob: -5.451023578643799
    6. '][' → logprob: -6.076023578643799
    7. '_' → logprob: -6.326023578643799
    8. 'sequence' → logprob: -6.576023578643799
    9. '[
' → logprob: -6.576023578643799
    10. ']' → logprob: -6.701023578643799

Token 902: ' of' (ID: 328)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9103395342826843
    2. '=' → logprob: -1.535339593887329
    3. '[' → logprob: -2.410339593887329
    4. '```' → logprob: -2.660339593887329
    5. '   ' → logprob: -2.785339593887329
    6. '=[' → logprob: -3.160339593887329
    7. '[i' → logprob: -3.785339593887329
    8. '[
' → logprob: -4.03533935546875
    9. 'with' → logprob: -4.41033935546875
    10. 'import' → logprob: -4.41033935546875

Token 903: ' length' (ID: 5517)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.08081288635730743
    2. '(length' → logprob: -3.455812931060791
    3. '(i' → logprob: -3.705812931060791
    4. 'i' → logprob: -4.330812931060791
    5. '0' → logprob: -5.455812931060791
    6. '(' → logprob: -6.330812931060791
    7. ' length' → logprob: -7.580812931060791
    8. '(l' → logprob: -7.580812931060791
    9. '[i' → logprob: -7.955812931060791
    10. 'size' → logprob: -8.705812454223633

Token 904: ' i' (ID: 575)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '][' → logprob: -0.9791598916053772
    2. '=' → logprob: -1.7291598320007324
    3. '[i' → logprob: -1.8541598320007324
    4. '(length' → logprob: -1.9791598320007324
    5. 'i' → logprob: -2.9791598320007324
    6. '(i' → logprob: -3.7291598320007324
    7. '[length' → logprob: -3.9791598320007324
    8. 'length' → logprob: -4.354159832000732
    9. ' =' → logprob: -4.479159832000732
    10. 'for' → logprob: -5.354159832000732

Token 905: ' sum' (ID: 4215)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '][' → logprob: -0.47908976674079895
    2. '   ' → logprob: -1.7290897369384766
    3. ' =' → logprob: -2.8540897369384766
    4. '=' → logprob: -2.8540897369384766
    5. '+' → logprob: -3.9790897369384766
    6. '=[' → logprob: -3.9790897369384766
    7. 'dp' → logprob: -4.354089736938477
    8. 'def' → logprob: -5.229089736938477
    9. 'import' → logprob: -5.229089736938477
    10. '[' → logprob: -5.354089736938477

Token 906: ' j' (ID: 441)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.0630078315734863
    2. ' =' → logprob: -1.1880078315734863
    3. '```' → logprob: -2.0630078315734863
    4. '][' → logprob: -2.4380078315734863
    5. '[i' → logprob: -3.5630078315734863
    6. '+' → logprob: -3.8130078315734863
    7. '[' → logprob: -4.063007831573486
    8. ']' → logprob: -4.188007831573486
    9. '   ' → logprob: -4.563007831573486
    10. '_' → logprob: -4.938007831573486

Token 907: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8225622177124023
    2. ' =' → logprob: -0.9475622177124023
    3. '=' → logprob: -1.8225622177124023
    4. 'dp' → logprob: -5.447562217712402
    5. 'def' → logprob: -5.697562217712402
    6. 'import' → logprob: -6.072562217712402
    7. '```' → logprob: -7.572562217712402
    8. '
' → logprob: -8.322562217712402
    9. '=[' → logprob: -8.697562217712402
    10. ']' → logprob: -9.447562217712402

Token 908: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18145962059497833
    2. 'dp' → logprob: -2.306459665298462
    3. ' =' → logprob: -3.056459665298462
    4. 'import' → logprob: -5.306459426879883
    5. 'def' → logprob: -5.431459426879883
    6. '```' → logprob: -5.431459426879883
    7. '=' → logprob: -5.681459426879883
    8. ' dp' → logprob: -6.556459426879883
    9. ',' → logprob: -8.806459426879883
    10. '[' → logprob: -9.056459426879883

Token 909: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.2986213266849518
    2. '   ' → logprob: -1.4236212968826294
    3. ' dp' → logprob: -4.54862117767334
    4. 'import' → logprob: -5.79862117767334
    5. '```' → logprob: -5.79862117767334
    6. 'from' → logprob: -8.17362117767334
    7. 'def' → logprob: -8.42362117767334
    8. '``' → logprob: -10.04862117767334
    9. '
' → logprob: -10.29862117767334
    10. ' =' → logprob: -11.04862117767334

Token 910: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02978532575070858
    2. '=' → logprob: -3.529785394668579
    3. '   ' → logprob: -11.27978515625
    4. '=[' → logprob: -11.40478515625
    5. '[' → logprob: -12.27978515625
    6. '=[[' → logprob: -13.52978515625
    7. ' =[' → logprob: -14.02978515625
    8. '=
' → logprob: -14.27978515625
    9. '=[
' → logprob: -14.40478515625
    10. '=[]
' → logprob: -14.52978515625

Token 911: ' [' (ID: 723)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.0041174618527293205
    2. '[' → logprob: -5.504117488861084
    3. ' [[' → logprob: -10.254117012023926
    4. '[
' → logprob: -13.129117012023926
    5. ' [' → logprob: -13.629117012023926
    6. '[list' → logprob: -15.254117012023926
    7. '[array' → logprob: -16.129117965698242
    8. '[int' → logprob: -16.629117965698242
    9. '[len' → logprob: -17.254117965698242
    10. '[(' → logprob: -17.629117965698242

Token 912: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00015050210640765727
    2. ' [' → logprob: -9.375150680541992
    3. '[S' → logprob: -10.625150680541992
    4. '0' → logprob: -11.250150680541992
    5. '[[' → logprob: -11.375150680541992
    6. '[N' → logprob: -12.375150680541992
    7. '[length' → logprob: -12.375150680541992
    8. '[int' → logprob: -13.250150680541992
    9. '   ' → logprob: -13.500150680541992
    10. '[list' → logprob: -14.125150680541992

Token 913: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.1008713702030946e-06
    2. '[' → logprob: -14.000001907348633
    3. '(' → logprob: -14.125001907348633
    4. ' ' → logprob: -14.875001907348633
    5. '   ' → logprob: -17.000001907348633
    6. ']' → logprob: -17.625001907348633
    7. '
' → logprob: -18.375001907348633
    8. '       ' → logprob: -18.875001907348633
    9. '000' → logprob: -19.125001907348633
    10. ' (' → logprob: -19.250001907348633

Token 914: ']*(' (ID: 92627)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.40915510058403015
    2. 'for' → logprob: -1.2841551303863525
    3. '][' → logprob: -3.5341551303863525
    4. ' for' → logprob: -3.6591551303863525
    5. ']*(' → logprob: -6.659154891967773
    6. '[' → logprob: -6.784154891967773
    7. '   ' → logprob: -7.659154891967773
    8. ']*' → logprob: -7.784154891967773
    9. '0' → logprob: -8.659154891967773
    10. '=' → logprob: -9.534154891967773

Token 915: 'S' (ID: 50)
  Prédit: 'S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -1.2471589798224159e-05
    2. '(S' → logprob: -11.375012397766113
    3. '   ' → logprob: -14.250012397766113
    4. ' S' → logprob: -15.875012397766113
    5. '       ' → logprob: -16.50001335144043
    6. '(' → logprob: -17.12501335144043
    7. '[S' → logprob: -17.12501335144043
    8. '           ' → logprob: -17.25001335144043
    9. '	S' → logprob: -18.00001335144043
    10. ')' → logprob: -18.50001335144043

Token 916: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -5.836499985889532e-05
    2. ' +' → logprob: -9.7500581741333
    3. ')+' → logprob: -18.750059127807617
    4. '```' → logprob: -19.000059127807617
    5. ']+' → logprob: -19.125059127807617
    6. '[' → logprob: -19.125059127807617
    7. '＋' → logprob: -20.000059127807617
    8. '+
' → logprob: -20.250059127807617
    9. '+++' → logprob: -20.375059127807617
    10. '   ' → logprob: -20.875059127807617

Token 917: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. '   ' → logprob: -15.000000953674316
    3. '+' → logprob: -16.75
    4. '```' → logprob: -16.875
    5. ' ' → logprob: -17.125
    6. '2' → logprob: -17.25
    7. '       ' → logprob: -17.5
    8. '
' → logprob: -17.75
    9. '=' → logprob: -17.75
    10. ')' → logprob: -18.625

Token 918: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.1689596148207784e-05
    2. ')]' → logprob: -10.125051498413086
    3. ')
' → logprob: -12.375051498413086
    4. ']' → logprob: -12.875051498413086
    5. '   ' → logprob: -13.875051498413086
    6. '       ' → logprob: -14.000051498413086
    7. 'for' → logprob: -14.000051498413086
    8. ' )' → logprob: -14.250051498413086
    9. '),' → logprob: -14.625051498413086
    10. ')...' → logprob: -15.125051498413086

Token 919: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.10042998194694519
    2. ' for' → logprob: -2.3504300117492676
    3. ']' → logprob: -9.10042953491211
    4. ')' → logprob: -9.47542953491211
    5. '   ' → logprob: -10.60042953491211
    6. '       ' → logprob: -12.47542953491211
    7. ' ' → logprob: -13.72542953491211
    8. '           ' → logprob: -13.97542953491211
    9. '	for' → logprob: -14.47542953491211
    10. '[' → logprob: -14.97542953491211

Token 920: ' _' (ID: 1175)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6538393497467041
    2. '_' → logprob: -1.028839349746704
    3. ' i' → logprob: -2.903839349746704
    4. ' range' → logprob: -3.403839349746704
    5. 'range' → logprob: -4.528839111328125
    6. ' _' → logprob: -4.653839111328125
    7. ' in' → logprob: -5.278839111328125
    8. 'in' → logprob: -5.653839111328125
    9. '   ' → logprob: -5.653839111328125
    10. '_i' → logprob: -6.903839111328125

Token 921: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.029805226251482964
    2. ' range' → logprob: -3.5298051834106445
    3. 'length' → logprob: -10.279805183410645
    4. 'in' → logprob: -11.904805183410645
    5. ' in' → logprob: -12.154805183410645
    6. '(range' → logprob: -12.904805183410645
    7. '	range' → logprob: -13.154805183410645
    8. '   ' → logprob: -13.404805183410645
    9. '(' → logprob: -14.779805183410645
    10. '0' → logprob: -14.904805183410645

Token 922: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0011772511061280966
    2. ' range' → logprob: -6.7511773109436035
    3. '(range' → logprob: -11.876176834106445
    4. 'length' → logprob: -16.251176834106445
    5. '   ' → logprob: -17.376176834106445
    6. '(' → logprob: -18.001176834106445
    7. '	range' → logprob: -18.251176834106445
    8. '_range' → logprob: -19.501176834106445
    9. ' ' → logprob: -19.751176834106445
    10. '```' → logprob: -19.751176834106445

Token 923: '(length' (ID: 47037)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.01697193831205368
    2. '(length' → logprob: -4.141972064971924
    3. '0' → logprob: -7.141972064971924
    4. ' length' → logprob: -9.141971588134766
    5. '   ' → logprob: -11.266971588134766
    6. 'range' → logprob: -11.766971588134766
    7. '(' → logprob: -11.766971588134766
    8. '[length' → logprob: -12.016971588134766
    9. '	length' → logprob: -12.891971588134766
    10. ',length' → logprob: -14.266971588134766

Token 924: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -8.864272967912257e-05
    2. ' +' → logprob: -9.375088691711426
    3. '[' → logprob: -13.000088691711426
    4. ')+' → logprob: -14.875088691711426
    5. ')][' → logprob: -15.125088691711426
    6. ')' → logprob: -16.00008773803711
    7. '+[' → logprob: -16.00008773803711
    8. '```' → logprob: -16.25008773803711
    9. ')]' → logprob: -16.37508773803711
    10. '()+' → logprob: -16.37508773803711

Token 925: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00026455431361682713
    2. '0' → logprob: -8.250264167785645
    3. '2' → logprob: -13.125264167785645
    4. '```' → logprob: -14.500264167785645
    5. '+' → logprob: -15.250264167785645
    6. '   ' → logprob: -15.750264167785645
    7. '{' → logprob: -16.25026512145996
    8. '=' → logprob: -16.50026512145996
    9. ' ' → logprob: -16.62526512145996
    10. '
' → logprob: -16.87526512145996

Token 926: ')]
' (ID: 11587)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1606989949941635
    2. ')]' → logprob: -1.9106990098953247
    3. ']' → logprob: -8.410698890686035
    4. ')]
' → logprob: -8.910698890686035
    5. '   ' → logprob: -9.785698890686035
    6. '       ' → logprob: -10.035698890686035
    7. ')
' → logprob: -11.660698890686035
    8. ' )' → logprob: -12.285698890686035
    9. '           ' → logprob: -13.160698890686035
    10. ')]

' → logprob: -14.660698890686035

Token 927: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5981546640396118
    2. 'dp' → logprob: -0.8481546640396118
    3. 'for' → logprob: -4.723154544830322
    4. '       ' → logprob: -4.973154544830322
    5. '```' → logprob: -5.723154544830322
    6. ' for' → logprob: -6.348154544830322
    7. ' dp' → logprob: -7.473154544830322
    8. '	dp' → logprob: -7.848154544830322
    9. '           ' → logprob: -9.34815502166748
    10. 'def' → logprob: -10.97315502166748

Token 928: ' dp' (ID: 21546)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6470643281936646
    2. 'dp' (adapté à ' dp') → logprob: -0.8970643281936646
    3. 'for' → logprob: -2.897064208984375
    4. '```' → logprob: -4.522064208984375
    5. '       ' → logprob: -6.272064208984375
    6. ' for' → logprob: -7.522064208984375
    7. '           ' → logprob: -9.022064208984375
    8. ' dp' → logprob: -10.772064208984375
    9. '               ' → logprob: -11.522064208984375
    10. '``' → logprob: -11.897064208984375

Token 929: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.7372048862162046e-05
    2. '```' → logprob: -11.250027656555176
    3. '=' → logprob: -11.875027656555176
    4. 'def' → logprob: -12.875027656555176
    5. '][' → logprob: -13.750027656555176
    6. ' =' → logprob: -14.250027656555176
    7. '   ' → logprob: -14.625027656555176
    8. 'dp' → logprob: -14.625027656555176
    9. '[length' → logprob: -14.875027656555176
    10. '
' → logprob: -15.125027656555176

Token 930: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.372294698550832e-06
    2. '[' → logprob: -11.625009536743164
    3. ' ' → logprob: -15.500009536743164
    4. '][' → logprob: -16.875009536743164
    5. '
' → logprob: -17.000009536743164
    6. '1' → logprob: -17.625009536743164
    7. '=' → logprob: -18.625009536743164
    8. '   ' → logprob: -18.750009536743164
    9. ']' → logprob: -19.000009536743164
    10. 'def' → logprob: -19.000009536743164

Token 931: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.003220729762688279
    2. '[' → logprob: -5.753220558166504
    3. ']' → logprob: -10.128220558166504
    4. '"][' → logprob: -14.378220558166504
    5. ''][' → logprob: -14.503220558166504
    6. '[][' → logprob: -14.503220558166504
    7. ' ][' → logprob: -15.128220558166504
    8. '0' → logprob: -15.253220558166504
    9. '   ' → logprob: -15.628220558166504
    10. ']][' → logprob: -15.753220558166504

Token 932: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.935296834039036e-06
    2. '[' → logprob: -12.87500286102295
    3. ' ' → logprob: -15.50000286102295
    4. '{' → logprob: -16.875003814697266
    5. '(' → logprob: -17.250003814697266
    6. '][' → logprob: -17.875003814697266
    7. '```' → logprob: -18.125003814697266
    8. '000' → logprob: -18.375003814697266
    9. '1' → logprob: -18.625003814697266
    10. 'S' → logprob: -18.625003814697266

Token 933: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.002667330903932452
    2. ']+=' → logprob: -6.627667427062988
    3. ']=' → logprob: -6.877667427062988
    4. '=' → logprob: -8.127667427062988
    5. ' ]' → logprob: -12.127667427062988
    6. '   ' → logprob: -13.127667427062988
    7. ']==' → logprob: -13.252667427062988
    8. '[' → logprob: -13.502667427062988
    9. ')' → logprob: -14.127667427062988
    10. '+=' → logprob: -14.627667427062988

Token 934: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -6.64708495605737e-05
    2. ' =' → logprob: -9.625066757202148
    3. '+=' → logprob: -15.000066757202148
    4. '=True' → logprob: -18.00006675720215
    5. '=
' → logprob: -18.00006675720215
    6. ']=' → logprob: -18.37506675720215
    7. '.=' → logprob: -18.50006675720215
    8. '```' → logprob: -19.50006675720215
    9. ')=' → logprob: -20.12506675720215
    10. '[' → logprob: -20.25006675720215

Token 935: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. '```' → logprob: -21.0
    3. '   ' → logprob: -21.625
    4. ' ' → logprob: -21.875
    5. '۱' → logprob: -24.125
    6. '       ' → logprob: -24.125
    7. '１' → logprob: -24.875
    8. '
' → logprob: -25.25
    9. '           ' → logprob: -25.375
    10. '`' → logprob: -25.875

Token 936: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. '۱' → logprob: -23.0
    3. '１' → logprob: -23.625
    4. ' ' → logprob: -24.25
    5. '```' → logprob: -24.375
    6. '১' → logprob: -25.375
    7. '   ' → logprob: -25.625
    8. '१' → logprob: -25.75
    9. '' → logprob: -26.0
    10. '(' → logprob: -26.0

Token 937: '
' (ID: 198)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.320263534784317
    2. '   ' → logprob: -1.4452635049819946
    3. 'for' → logprob: -3.320263624191284
    4. '       ' → logprob: -6.945263385772705
    5. '	for' → logprob: -7.445263385772705
    6. '```' → logprob: -8.070263862609863
    7. '<|end|>' → logprob: -8.570263862609863
    8. ',' → logprob: -10.070263862609863
    9. ' ' → logprob: -10.070263862609863
    10. '
' → logprob: -11.070263862609863

Token 938: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2148643136024475
    2. ' for' → logprob: -1.9648642539978027
    3. 'for' → logprob: -2.9648642539978027
    4. '       ' → logprob: -6.964864253997803
    5. '```' → logprob: -7.339864253997803
    6. '	for' → logprob: -11.839864730834961
    7. '           ' → logprob: -12.214864730834961
    8. '``' → logprob: -15.714864730834961
    9. 'For' → logprob: -15.839864730834961
    10. ',' → logprob: -15.964864730834961

Token 939: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.6676474809646606
    2. '   ' → logprob: -1.6676474809646606
    3. ' for' → logprob: -1.9176474809646606
    4. '       ' → logprob: -1.9176474809646606
    5. '```' → logprob: -5.417647361755371
    6. '           ' → logprob: -10.042647361755371
    7. '	for' → logprob: -12.042647361755371
    8. '``' → logprob: -12.792647361755371
    9. 'For' → logprob: -14.667647361755371
    10. '               ' → logprob: -14.917647361755371

Token 940: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.005241344682872295
    2. ' x' → logprob: -5.255241394042969
    3. '   ' → logprob: -12.505241394042969
    4. 'length' → logprob: -12.880241394042969
    5. 'l' → logprob: -14.630241394042969
    6. 'num' → logprob: -15.005241394042969
    7. 'i' → logprob: -15.130241394042969
    8. ' length' → logprob: -16.00524139404297
    9. '```' → logprob: -16.13024139404297
    10. '	x' → logprob: -17.50524139404297

Token 941: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.18014730513095856
    2. 'in' → logprob: -1.8051472902297974
    3. '1' → logprob: -7.930147171020508
    4. ',' → logprob: -11.180147171020508
    5. '   ' → logprob: -11.430147171020508
    6. '```' → logprob: -12.055147171020508
    7. 'In' → logprob: -12.930147171020508
    8. ' ' → logprob: -13.305147171020508
    9. '_in' → logprob: -13.305147171020508
    10. '[' → logprob: -13.430147171020508

Token 942: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.022173600271344185
    2. '1' → logprob: -4.0221734046936035
    3. ' range' → logprob: -5.5221734046936035
    4. '   ' → logprob: -11.647173881530762
    5. 'in' → logprob: -12.147173881530762
    6. ' ' → logprob: -13.147173881530762
    7. '(' → logprob: -13.772173881530762
    8. ' in' → logprob: -13.772173881530762
    9. '(range' → logprob: -15.397173881530762
    10. '       ' → logprob: -17.022172927856445

Token 943: '(' (ID: 7)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.629921436891891e-05
    2. '(' → logprob: -11.25002670288086
    3. '   ' → logprob: -11.25002670288086
    4. ' ' → logprob: -15.25002670288086
    5. '0' → logprob: -18.12502670288086
    6. '```' → logprob: -18.25002670288086
    7. ',' → logprob: -19.25002670288086
    8. '=' → logprob: -19.87502670288086
    9. '       ' → logprob: -20.00002670288086
    10. '
' → logprob: -21.12502670288086

Token 944: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. '   ' → logprob: -16.75
    3. ' ' → logprob: -18.5
    4. 'length' → logprob: -18.5
    5. '
' → logprob: -20.875
    6. '(' → logprob: -21.5
    7. 'M' → logprob: -22.0
    8. '       ' → logprob: -22.0
    9. 'x' → logprob: -22.5
    10. '           ' → logprob: -23.25

Token 945: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0553891621530056
    2. ',length' → logprob: -2.930389165878296
    3. ',len' → logprob: -8.680389404296875
    4. '(length' → logprob: -8.805389404296875
    5. ' ,' → logprob: -9.555389404296875
    6. ',x' → logprob: -9.680389404296875
    7. 'length' → logprob: -10.805389404296875
    8. ',l' → logprob: -11.930389404296875
    9. '   ' → logprob: -12.180389404296875
    10. '```' → logprob: -12.305389404296875

Token 946: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -3.2020991056924686e-05
    2. 'length' → logprob: -10.875032424926758
    3. 'S' → logprob: -11.500032424926758
    4. ' M' → logprob: -13.625032424926758
    5. '   ' → logprob: -14.375032424926758
    6. 'x' → logprob: -14.375032424926758
    7. '(M' → logprob: -15.875032424926758
    8. '1' → logprob: -16.375032424926758
    9. 'len' → logprob: -16.625032424926758
    10. '```' → logprob: -18.000032424926758

Token 947: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0026516327634453773
    2. ' +' → logprob: -6.002651691436768
    3. '):
' → logprob: -9.37765121459961
    4. '):' → logprob: -10.50265121459961
    5. '```' → logprob: -10.50265121459961
    6. '[' → logprob: -11.00265121459961
    7. '+
' → logprob: -12.62765121459961
    8. '1' → logprob: -12.75265121459961
    9. ')+' → logprob: -12.87765121459961
    10. '+x' → logprob: -13.25265121459961

Token 948: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3856492842023727e-06
    2. ' ' → logprob: -13.750000953674316
    3. 'x' → logprob: -16.250001907348633
    4. ')' → logprob: -16.500001907348633
    5. '+' → logprob: -17.500001907348633
    6. '```' → logprob: -17.625001907348633
    7. '   ' → logprob: -18.000001907348633
    8. '2' → logprob: -18.125001907348633
    9. '=' → logprob: -18.625001907348633
    10. '
' → logprob: -18.625001907348633

Token 949: '):
' (ID: 1883)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9857484698295593
    2. '       ' → logprob: -1.360748529434204
    3. '):
' → logprob: -1.735748529434204
    4. '):' → logprob: -2.485748529434204
    5. ':
' → logprob: -2.735748529434204
    6. '   ' → logprob: -3.110748529434204
    7. ',' → logprob: -7.985748291015625
    8. '<|end|>' → logprob: -8.110748291015625
    9. '```' → logprob: -8.860748291015625
    10. ')' → logprob: -8.860748291015625

Token 950: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008493538945913315
    2. ' for' → logprob: -5.383493423461914
    3. '```' → logprob: -5.758493423461914
    4. '   ' → logprob: -7.508493423461914
    5. 'for' → logprob: -8.883493423461914
    6. '<|end|>' → logprob: -12.383493423461914
    7. '	   ' → logprob: -12.508493423461914
    8. ' ' → logprob: -12.883493423461914
    9. '     ' → logprob: -12.883493423461914
    10. '	for' → logprob: -13.008493423461914

Token 951: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.5099681615829468
    2. ' for' → logprob: -1.0099681615829468
    3. '   ' → logprob: -3.5099682807922363
    4. '       ' → logprob: -5.259968280792236
    5. '	for' → logprob: -9.384967803955078
    6. '```' → logprob: -9.509967803955078
    7. '    ' → logprob: -13.509967803955078
    8. '``' → logprob: -14.384967803955078
    9. '           ' → logprob: -14.509967803955078
    10. ' ' → logprob: -14.884967803955078

Token 952: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.4031282067298889
    2. 'l' → logprob: -1.1531281471252441
    3. 'length' → logprob: -4.153128147125244
    4. ' i' → logprob: -8.028128623962402
    5. ' l' → logprob: -10.153128623962402
    6. ' length' → logprob: -10.278128623962402
    7. 'leng' → logprob: -12.153128623962402
    8. '```' → logprob: -13.278128623962402
    9. 'range' → logprob: -13.653128623962402
    10. '   ' → logprob: -14.278128623962402

Token 953: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.5760892629623413
    2. 'in' → logprob: -0.8260892629623413
    3. 'for' → logprob: -10.201088905334473
    4. '[length' → logprob: -10.326088905334473
    5. 'length' → logprob: -10.701088905334473
    6. 'range' → logprob: -10.951088905334473
    7. 'from' → logprob: -11.576088905334473
    8. '(length' → logprob: -11.701088905334473
    9. ' range' → logprob: -11.701088905334473
    10. ',length' → logprob: -12.826088905334473

Token 954: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0031872207764536142
    2. 'length' → logprob: -5.75318717956543
    3. ' range' → logprob: -11.62818717956543
    4. 'in' → logprob: -15.12818717956543
    5. 're' → logprob: -15.37818717956543
    6. '(range' → logprob: -17.12818717956543
    7. 'len' → logprob: -17.37818717956543
    8. 'reverse' → logprob: -17.87818717956543
    9. '(length' → logprob: -18.12818717956543
    10. ' length' → logprob: -18.87818717956543

Token 955: '(length' (ID: 47037)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -4.763666947837919e-05
    2. ' length' → logprob: -10.12504768371582
    3. '(length' → logprob: -12.12504768371582
    4. '[length' → logprob: -13.87504768371582
    5. ',length' → logprob: -14.12504768371582
    6. '	length' → logprob: -15.00004768371582
    7. '   ' → logprob: -17.00004768371582
    8. 'i' → logprob: -17.62504768371582
    9. 'len' → logprob: -18.25004768371582
    10. ':length' → logprob: -18.37504768371582

Token 956: '-' (ID: 12)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007592791225761175
    2. '-' → logprob: -5.132592678070068
    3. '+' → logprob: -7.882592678070068
    4. ' ,' → logprob: -7.882592678070068
    5. ' -' → logprob: -8.382593154907227
    6. '1' → logprob: -8.382593154907227
    7. '       ' → logprob: -8.757593154907227
    8. ',-' → logprob: -9.382593154907227
    9. '[' → logprob: -9.632593154907227
    10. '   ' → logprob: -11.257593154907227

Token 957: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00325126969255507
    2. '0' → logprob: -5.753251075744629
    3. ',' → logprob: -9.878251075744629
    4. '           ' → logprob: -12.128251075744629
    5. '       ' → logprob: -12.378251075744629
    6. ' ' → logprob: -12.753251075744629
    7. '   ' → logprob: -13.378251075744629
    8. '
' → logprob: -13.378251075744629
    9. '-' → logprob: -13.503251075744629
    10. '```' → logprob: -13.503251075744629

Token 958: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006966251414269209
    2. ' ,' → logprob: -5.5069661140441895
    3. '+' → logprob: -6.6319661140441895
    4. '       ' → logprob: -6.8819661140441895
    5. '0' → logprob: -8.756966590881348
    6. ',-' → logprob: -8.881966590881348
    7. ' +' → logprob: -10.131966590881348
    8. '+,' → logprob: -10.506966590881348
    9. '        ' → logprob: -10.631966590881348
    10. '<|end|>' → logprob: -10.756966590881348

Token 959: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00014942926645744592
    2. ' -' → logprob: -9.125149726867676
    3. '0' → logprob: -10.125149726867676
    4. '   ' → logprob: -15.750149726867676
    5. '
' → logprob: -16.50014877319336
    6. '```' → logprob: -16.75014877319336
    7. ' ' → logprob: -16.87514877319336
    8. '...' → logprob: -17.37514877319336
    9. '       ' → logprob: -17.50014877319336
    10. '    ' → logprob: -18.12514877319336

Token 960: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.5776860184123507e-06
    2. '```' → logprob: -13.37500286102295
    3. '0' → logprob: -14.00000286102295
    4. '``' → logprob: -16.625001907348633
    5. '   ' → logprob: -17.500001907348633
    6. '=' → logprob: -18.000001907348633
    7. '           ' → logprob: -18.875001907348633
    8. '       ' → logprob: -19.000001907348633
    9. '-' → logprob: -19.000001907348633
    10. '`' → logprob: -19.500001907348633

Token 961: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.010326245799660683
    2. '+' → logprob: -4.760326385498047
    3. ',-' → logprob: -7.385326385498047
    4. ' ,' → logprob: -7.885326385498047
    5. ' +' → logprob: -8.385326385498047
    6. '       ' → logprob: -8.635326385498047
    7. '):
' → logprob: -9.010326385498047
    8. '```' → logprob: -9.760326385498047
    9. '-' → logprob: -10.635326385498047
    10. '+,' → logprob: -11.010326385498047

Token 962: ' -' (ID: 533)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.010900788940489292
    2. '-' → logprob: -4.635900974273682
    3. '```' → logprob: -8.385900497436523
    4. ')' → logprob: -8.885900497436523
    5. '       ' → logprob: -8.885900497436523
    6. ' -' → logprob: -9.010900497436523
    7. '):
' → logprob: -9.260900497436523
    8. '
' → logprob: -9.510900497436523
    9. '=' → logprob: -9.760900497436523
    10. ' ' → logprob: -9.885900497436523

Token 963: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002964935847558081
    2. '0' → logprob: -8.125296592712402
    3. '```' → logprob: -15.375296592712402
    4. '=' → logprob: -16.875295639038086
    5. '   ' → logprob: -16.875295639038086
    6. ' ' → logprob: -17.625295639038086
    7. '``' → logprob: -17.875295639038086
    8. '           ' → logprob: -18.125295639038086
    9. '       ' → logprob: -18.375295639038086
    10. '
' → logprob: -18.375295639038086

Token 964: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.033479366451501846
    2. '):' → logprob: -4.9084792137146
    3. '       ' → logprob: -5.0334792137146
    4. ',' → logprob: -5.1584792137146
    5. ':' → logprob: -5.1584792137146
    6. ':
' → logprob: -5.9084792137146
    7. '           ' → logprob: -6.5334792137146
    8. '```' → logprob: -6.5334792137146
    9. '   ' → logprob: -7.7834792137146
    10. '<|end|>' → logprob: -7.9084792137146

Token 965: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0076858894899487495
    2. '           ' → logprob: -5.132685661315918
    3. '<|end|>' → logprob: -7.132685661315918
    4. '```' → logprob: -7.882685661315918
    5. ' for' → logprob: -8.507685661315918
    6. '	       ' → logprob: -9.632685661315918
    7. ':' → logprob: -9.632685661315918
    8. 'for' → logprob: -10.257685661315918
    9. '<|end|>' → logprob: -10.257685661315918
    10. '[' → logprob: -10.257685661315918

Token 966: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5200433135032654
    2. 'for' (adapté à ' for') → logprob: -1.1450433731079102
    3. '   ' → logprob: -2.89504337310791
    4. '       ' → logprob: -3.77004337310791
    5. '           ' → logprob: -5.27004337310791
    6. '               ' → logprob: -6.64504337310791
    7. ' ' → logprob: -6.89504337310791
    8. '	for' → logprob: -7.64504337310791
    9. '```' → logprob: -7.64504337310791
    10. '<|end|>' → logprob: -9.14504337310791

Token 967: ' j' (ID: 441)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6379424333572388
    2. 'S' → logprob: -0.7629424333572388
    3. 'range' → logprob: -5.762942314147949
    4. 'j' → logprob: -6.387942314147949
    5. ' s' → logprob: -8.01294231414795
    6. ' range' → logprob: -9.63794231414795
    7. ' S' → logprob: -9.88794231414795
    8. '0' → logprob: -11.13794231414795
    9. 'sum' → logprob: -11.38794231414795
    10. '_s' → logprob: -11.51294231414795

Token 968: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.05496150255203247
    2. 'in' → logprob: -2.9299614429473877
    3. '               ' → logprob: -11.804961204528809
    4. '=' → logprob: -11.929961204528809
    5. '            ' → logprob: -12.054961204528809
    6. ',' → logprob: -12.054961204528809
    7. '[' → logprob: -12.179961204528809
    8. '           ' → logprob: -12.179961204528809
    9. '<|end|>' → logprob: -12.304961204528809
    10. ' =' → logprob: -12.429961204528809

Token 969: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.03370114043354988
    2. 'S' → logprob: -4.033700942993164
    3. '(S' → logprob: -4.408700942993164
    4. ' range' → logprob: -6.283700942993164
    5. 'x' → logprob: -7.408700942993164
    6. '(x' → logprob: -8.158700942993164
    7. '(range' → logprob: -8.408700942993164
    8. '0' → logprob: -8.533700942993164
    9. '(i' → logprob: -11.283700942993164
    10. '(' → logprob: -11.408700942993164

Token 970: '(S' (ID: 6181)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.757600724697113
    2. '(S' → logprob: -1.1326007843017578
    3. '(x' → logprob: -1.8826007843017578
    4. 'x' → logprob: -3.132600784301758
    5. '(j' → logprob: -5.382600784301758
    6. 'j' → logprob: -5.382600784301758
    7. '(i' → logprob: -6.257600784301758
    8. '0' → logprob: -7.007600784301758
    9. '(' → logprob: -7.132600784301758
    10. 'i' → logprob: -8.757600784301758

Token 971: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.1600184440612793
    2. '+' → logprob: -2.5350184440612793
    3. '-x' → logprob: -3.5350184440612793
    4. ' -' → logprob: -3.9100184440612793
    5. '-j' → logprob: -4.785018444061279
    6. 'x' → logprob: -5.785018444061279
    7. '=' → logprob: -6.160018444061279
    8. '<|end|>' → logprob: -6.910018444061279
    9. ',' → logprob: -7.285018444061279
    10. 'j' → logprob: -7.660018444061279

Token 972: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.004749557469040155
    2. '1' → logprob: -5.754749774932861
    3. 'j' → logprob: -7.129749774932861
    4. '0' → logprob: -7.629749774932861
    5. 'i' → logprob: -9.379749298095703
    6. '(x' → logprob: -9.629749298095703
    7. '           ' → logprob: -10.129749298095703
    8. ' x' → logprob: -10.129749298095703
    9. 'for' → logprob: -11.754749298095703
    10. '
' → logprob: -11.754749298095703

Token 973: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.015260874293744564
    2. ' +' → logprob: -4.890260696411133
    3. ',' → logprob: -5.015260696411133
    4. '-' → logprob: -7.515260696411133
    5. ' -' → logprob: -9.265260696411133
    6. '           ' → logprob: -9.640260696411133
    7. '[' → logprob: -10.140260696411133
    8. '               ' → logprob: -10.390260696411133
    9. ']+' → logprob: -10.390260696411133
    10. '       ' → logprob: -10.890260696411133

Token 974: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.0
    3. '   ' → logprob: -19.25
    4. '           ' → logprob: -19.375
    5. '
' → logprob: -19.625
    6. '0' → logprob: -19.875
    7. '```' → logprob: -20.0
    8. '                   ' → logprob: -20.625
    9. '                           ' → logprob: -21.125
    10. '                                   ' → logprob: -21.25

Token 975: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.039408497512340546
    2. '               ' → logprob: -4.4144086837768555
    3. '):' → logprob: -4.9144086837768555
    4. ':' → logprob: -4.9144086837768555
    5. '           ' → logprob: -5.2894086837768555
    6. ':
' → logprob: -6.2894086837768555
    7. '                   ' → logprob: -6.9144086837768555
    8. '                       ' → logprob: -7.4144086837768555
    9. ']:
' → logprob: -7.4144086837768555
    10. '       ' → logprob: -7.7894086837768555

Token 976: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.010422522202134132
    2. 'dp' → logprob: -5.260422706604004
    3. ' dp' → logprob: -6.385422706604004
    4. '                   ' → logprob: -6.635422706604004
    5. '                       ' → logprob: -7.260422706604004
    6. '                               ' → logprob: -7.510422706604004
    7. '                           ' → logprob: -7.885422706604004
    8. '```' → logprob: -9.135422706604004
    9. '           ' → logprob: -9.510422706604004
    10. '	dp' → logprob: -9.635422706604004

Token 977: ' if' (ID: 538)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.5382906794548035
    2. '                   ' → logprob: -1.0382907390594482
    3. ' dp' → logprob: -2.7882907390594482
    4. '                       ' → logprob: -7.663290500640869
    5. '	dp' → logprob: -9.913290977478027
    6. 'if' (adapté à ' if') → logprob: -10.038290977478027
    7. '                           ' → logprob: -10.663290977478027
    8. '(dp' → logprob: -10.663290977478027
    9. '```' → logprob: -11.288290977478027
    10. '               ' → logprob: -11.413290977478027

Token 978: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -4.143808109802194e-05
    2. ' dp' → logprob: -10.250041007995605
    3. '                   ' → logprob: -12.625041007995605
    4. '               ' → logprob: -13.000041007995605
    5. '(dp' → logprob: -16.000041961669922
    6. '           ' → logprob: -16.000041961669922
    7. '   ' → logprob: -16.875041961669922
    8. '	dp' → logprob: -17.375041961669922
    9. '                       ' → logprob: -17.625041961669922
    10. '                 ' → logprob: -18.625041961669922

Token 979: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.4855663721391466e-05
    2. '```' → logprob: -12.625015258789062
    3. '[I' → logprob: -13.250015258789062
    4. '[token' → logprob: -13.375015258789062
    5. '[' → logprob: -13.375015258789062
    6. '][' → logprob: -13.500015258789062
    7. '                   ' → logprob: -13.500015258789062
    8. '               ' → logprob: -14.375015258789062
    9. ' [' → logprob: -14.750015258789062
    10. '[next' → logprob: -15.000015258789062

Token 980: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.4314271807670593
    2. '[i' → logprob: -1.056427240371704
    3. '[' → logprob: -6.306427001953125
    4. '[I' → logprob: -8.306427001953125
    5. '[token' → logprob: -9.431427001953125
    6. ']][' → logprob: -9.556427001953125
    7. ''][' → logprob: -9.556427001953125
    8. '"][' → logprob: -9.681427001953125
    9. '               ' → logprob: -10.056427001953125
    10. '                   ' → logprob: -10.181427001953125

Token 981: 'j' (ID: 73)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.036770738661289215
    2. 'j' → logprob: -3.786770820617676
    3. 'x' → logprob: -4.661770820617676
    4. '[i' → logprob: -6.286770820617676
    5. '][' → logprob: -6.411770820617676
    6. '               ' → logprob: -9.536770820617676
    7. ']' → logprob: -9.536770820617676
    8. ' i' → logprob: -10.161770820617676
    9. '0' → logprob: -10.411770820617676
    10. '
' → logprob: -10.536770820617676

Token 982: ']:
' (ID: 22152)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.41286948323249817
    2. ']>' → logprob: -2.037869453430176
    3. ']' → logprob: -2.412869453430176
    4. ']!=' → logprob: -3.037869453430176
    5. ']:
' → logprob: -3.787869453430176
    6. ']+=' → logprob: -4.537869453430176
    7. '[' → logprob: -4.662869453430176
    8. ']==' → logprob: -4.787869453430176
    9. '+' → logprob: -4.787869453430176
    10. '```' → logprob: -6.412869453430176

Token 983: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.006402950268238783
    2. 'dp' → logprob: -6.006402969360352
    3. ' dp' → logprob: -6.506402969360352
    4. '                           ' → logprob: -7.506402969360352
    5. ' =' → logprob: -7.756402969360352
    6. '                       ' → logprob: -7.756402969360352
    7. '```' → logprob: -8.256402969360352
    8. '(dp' → logprob: -9.006402969360352
    9. '                    ' → logprob: -9.131402969360352
    10. '                               ' → logprob: -9.631402969360352

Token 984: ' dp' (ID: 21546)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.12769672274589539
    2. 'dp' (adapté à ' dp') → logprob: -2.3776967525482178
    3. ' dp' → logprob: -3.6276967525482178
    4. '                           ' → logprob: -8.502696990966797
    5. '                   ' → logprob: -8.627696990966797
    6. '	dp' → logprob: -9.627696990966797
    7. '```' → logprob: -10.002696990966797
    8. '                               ' → logprob: -11.377696990966797
    9. '(dp' → logprob: -11.627696990966797
    10. '   ' → logprob: -12.252696990966797

Token 985: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.4617256056226324e-05
    2. '[I' → logprob: -12.375014305114746
    3. '[' → logprob: -12.500014305114746
    4. '```' → logprob: -13.250014305114746
    5. ' [' → logprob: -13.500014305114746
    6. '][' → logprob: -13.875014305114746
    7. '[next' → logprob: -14.500014305114746
    8. 'i' → logprob: -14.750014305114746
    9. '[j' → logprob: -15.625014305114746
    10. '[x' → logprob: -15.625014305114746

Token 986: '+' (ID: 10)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.03550918400287628
    2. '+' → logprob: -4.03550910949707
    3. '][' → logprob: -4.16050910949707
    4. '[' → logprob: -7.03550910949707
    5. '+i' → logprob: -7.78550910949707
    6. 'i' → logprob: -8.41050910949707
    7. '[I' → logprob: -10.41050910949707
    8. '[next' → logprob: -11.78550910949707
    9. '                   ' → logprob: -12.03550910949707
    10. '[j' → logprob: -12.03550910949707

Token 987: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0023649439681321383
    2. 'i' → logprob: -6.6273651123046875
    3. 'j' → logprob: -6.8773651123046875
    4. '   ' → logprob: -12.877365112304688
    5. '][' → logprob: -13.002365112304688
    6. '
' → logprob: -13.752365112304688
    7. '```' → logprob: -14.377365112304688
    8. 'x' → logprob: -14.377365112304688
    9. ' ' → logprob: -15.877365112304688
    10. '[j' → logprob: -16.627365112304688

Token 988: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -5.180879816180095e-05
    2. '                   ' → logprob: -11.000051498413086
    3. '[j' → logprob: -11.125051498413086
    4. '[' → logprob: -12.000051498413086
    5. ']' → logprob: -12.750051498413086
    6. ' ][' → logprob: -12.750051498413086
    7. '```' → logprob: -13.250051498413086
    8. '                       ' → logprob: -13.625051498413086
    9. '[i' → logprob: -13.750051498413086
    10. '                           ' → logprob: -13.875051498413086

Token 989: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -8.180258191714529e-06
    2. 'x' → logprob: -12.000008583068848
    3. ' j' → logprob: -14.625008583068848
    4. 'i' → logprob: -14.750008583068848
    5. '[j' → logprob: -15.125008583068848
    6. '```' → logprob: -15.125008583068848
    7. '(j' → logprob: -15.500008583068848
    8. '   ' → logprob: -16.00000762939453
    9. 'dp' → logprob: -16.12500762939453
    10. '][' → logprob: -17.25000762939453

Token 990: '+x' (ID: 91888)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0308095533400774
    2. '+x' → logprob: -3.5308096408843994
    3. ' +' → logprob: -6.90580940246582
    4. '+k' → logprob: -10.78080940246582
    5. '+
' → logprob: -11.03080940246582
    6. ']+' → logprob: -12.28080940246582
    7. '+t' → logprob: -12.53080940246582
    8. '+i' → logprob: -12.78080940246582
    9. ']' → logprob: -13.15580940246582
    10. '+j' → logprob: -13.65580940246582

Token 991: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6931677460670471
    2. ']+=' → logprob: -0.6931677460670471
    3. '+=' → logprob: -11.068167686462402
    4. '```' → logprob: -12.943167686462402
    5. ']=' → logprob: -14.193167686462402
    6. '                   ' → logprob: -14.443167686462402
    7. ']+' → logprob: -15.068167686462402
    8. '+' → logprob: -15.568167686462402
    9. '[' → logprob: -15.943167686462402
    10. ']++;
' → logprob: -16.31816864013672

Token 992: ' =' (ID: 314)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.149281308054924
    2. ']+=' → logprob: -2.0242812633514404
    3. '=' → logprob: -5.6492815017700195
    4. '```' → logprob: -6.5242815017700195
    5. ']' → logprob: -7.1492815017700195
    6. ' +=' → logprob: -8.27428150177002
    7. '[' → logprob: -8.77428150177002
    8. '                   ' → logprob: -9.14928150177002
    9. '                       ' → logprob: -9.27428150177002
    10. ']=' → logprob: -9.39928150177002

Token 993: ' (' (ID: 350)
  Prédit: '(dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.00016468366084154695
    2. ' (' → logprob: -9.125164985656738
    3. '(' → logprob: -10.875164985656738
    4. '(dx' → logprob: -11.375164985656738
    5. '(df' → logprob: -11.625164985656738
    6. '(dd' → logprob: -11.875164985656738
    7. '(ds' → logprob: -13.000164985656738
    8. '(dt' → logprob: -13.750164985656738
    9. '(pid' → logprob: -14.375164985656738
    10. '(db' → logprob: -14.500164985656738

Token 994: 'dp' (ID: 19037)
  Prédit: 'dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0007101670489646494
    2. '(dp' → logprob: -7.2507100105285645
    3. ' dp' → logprob: -15.625710487365723
    4. '                   ' → logprob: -18.000709533691406
    5. '	dp' → logprob: -19.250709533691406
    6. '_dp' → logprob: -19.625709533691406
    7. '                       ' → logprob: -20.250709533691406
    8. '.dp' → logprob: -21.250709533691406
    9. '(' → logprob: -21.375709533691406
    10. '(d' → logprob: -21.500709533691406

Token 995: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.3199920178740285e-05
    2. 'i' → logprob: -10.875022888183594
    3. '[' → logprob: -13.625022888183594
    4. '                   ' → logprob: -13.875022888183594
    5. '```' → logprob: -14.750022888183594
    6. '{i' → logprob: -15.375022888183594
    7. '][' → logprob: -15.875022888183594
    8. '                           ' → logprob: -16.250022888183594
    9. '[user' → logprob: -16.375022888183594
    10. '[next' → logprob: -16.375022888183594

Token 996: '+' (ID: 10)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.016450734809041023
    2. 'i' → logprob: -4.266450881958008
    3. '+' → logprob: -6.516450881958008
    4. '][' → logprob: -7.266450881958008
    5. '{i' → logprob: -10.266450881958008
    6. '[' → logprob: -10.391450881958008
    7. '+i' → logprob: -11.266450881958008
    8. '[I' → logprob: -11.266450881958008
    9. '(i' → logprob: -12.391450881958008
    10. '_i' → logprob: -13.391450881958008

Token 997: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.4121114822482923e-06
    2. '+' → logprob: -12.875003814697266
    3. '
' → logprob: -15.625003814697266
    4. 'i' → logprob: -15.875003814697266
    5. '```' → logprob: -16.000003814697266
    6. ' ' → logprob: -16.625003814697266
    7. '   ' → logprob: -16.812503814697266
    8. '[i' → logprob: -17.062503814697266
    9. '][' → logprob: -17.875003814697266
    10. '[' → logprob: -17.937503814697266

Token 998: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.3134987950325012
    2. '[i' → logprob: -1.3134987354278564
    3. '[' → logprob: -9.188498497009277
    4. ')[' → logprob: -10.063498497009277
    5. '[I' → logprob: -10.188498497009277
    6. '                   ' → logprob: -11.188498497009277
    7. '[][' → logprob: -12.313498497009277
    8. '```' → logprob: -12.438498497009277
    9. '                           ' → logprob: -12.563498497009277
    10. '[j' → logprob: -12.688498497009277

Token 999: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.981667537620524e-06
    2. '[j' → logprob: -14.375001907348633
    3. ' j' → logprob: -14.500001907348633
    4. '```' → logprob: -14.500001907348633
    5. '   ' → logprob: -16.000001907348633
    6. '_j' → logprob: -17.000001907348633
    7. '                   ' → logprob: -17.125001907348633
    8. '	j' → logprob: -17.250001907348633
    9. '][' → logprob: -17.625001907348633
    10. '           ' → logprob: -17.875001907348633

Token 1000: '+x' (ID: 91888)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0012578530004248023
    2. ']' → logprob: -7.50125789642334
    3. '[j' → logprob: -7.50125789642334
    4. '+' → logprob: -9.50125789642334
    5. ']+' → logprob: -10.62625789642334
    6. '```' → logprob: -11.00125789642334
    7. '[x' → logprob: -12.12625789642334
    8. ']][' → logprob: -12.12625789642334
    9. '[i' → logprob: -12.37625789642334
    10. '[' → logprob: -12.75125789642334

Token 1001: ']' (ID: 60)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.10779187083244324
    2. ']' → logprob: -2.6077919006347656
    3. ' +' → logprob: -3.6077919006347656
    4. ']+' → logprob: -6.607791900634766
    5. '                   ' → logprob: -11.732791900634766
    6. '+
' → logprob: -12.232791900634766
    7. '[' → logprob: -12.482791900634766
    8. '```' → logprob: -12.482791900634766
    9. '+]' → logprob: -13.107791900634766
    10. '+[' → logprob: -13.982791900634766

Token 1002: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0052386182360351086
    2. ' +' → logprob: -5.2552385330200195
    3. '+
' → logprob: -12.63023853302002
    4. '+d' → logprob: -14.25523853302002
    5. '+[' → logprob: -15.00523853302002
    6. '                   ' → logprob: -16.130239486694336
    7. '```' → logprob: -16.380239486694336
    8. '+p' → logprob: -16.755239486694336
    9. '+(' → logprob: -17.130239486694336
    10. '+D' → logprob: -17.255239486694336

Token 1003: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -3.054500666621607e-06
    2. ' dp' → logprob: -12.75000286102295
    3. '                   ' → logprob: -16.500003814697266
    4. '                       ' → logprob: -21.250003814697266
    5. '	dp' → logprob: -21.625003814697266
    6. 'dt' → logprob: -21.875003814697266
    7. '               ' → logprob: -22.250003814697266
    8. '(dp' → logprob: -22.375003814697266
    9. '_dp' → logprob: -22.500003814697266
    10. '                           ' → logprob: -22.750003814697266

Token 1004: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00018863992590922862
    2. 'i' → logprob: -8.625188827514648
    3. '[
' → logprob: -12.000188827514648
    4. '[' → logprob: -13.000188827514648
    5. '[I' → logprob: -15.000188827514648
    6. '```' → logprob: -16.75018882751465
    7. '{i' → logprob: -16.87518882751465
    8. '	i' → logprob: -16.87518882751465
    9. ' i' → logprob: -17.50018882751465
    10. '
' → logprob: -17.75018882751465

Token 1005: '][' (ID: 2696)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.006025018636137247
    2. 'i' → logprob: -5.8810248374938965
    3. '][' → logprob: -6.0060248374938965
    4. '[' → logprob: -7.5060248374938965
    5. '[I' → logprob: -9.506025314331055
    6. '[
' → logprob: -9.756025314331055
    7. '```' → logprob: -11.006025314331055
    8. '[user' → logprob: -11.381025314331055
    9. '[][' → logprob: -11.756025314331055
    10. '[token' → logprob: -11.756025314331055

Token 1006: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -8.061054359131958e-06
    2. ' j' → logprob: -12.250007629394531
    3. '	j' → logprob: -13.125007629394531
    4. '[j' → logprob: -14.625007629394531
    5. '                   ' → logprob: -14.875007629394531
    6. '   ' → logprob: -16.00000762939453
    7. '               ' → logprob: -16.75000762939453
    8. '```' → logprob: -16.75000762939453
    9. '][' → logprob: -17.12500762939453
    10. '$j' → logprob: -17.37500762939453

Token 1007: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.16071411967277527
    2. '[i' → logprob: -1.9107141494750977
    3. '                   ' → logprob: -8.160714149475098
    4. '               ' → logprob: -9.035714149475098
    5. '])
' → logprob: -11.035714149475098
    6. ']' → logprob: -11.410714149475098
    7. '           ' → logprob: -11.410714149475098
    8. '   ' → logprob: -11.785714149475098
    9. '[x' → logprob: -11.785714149475098
    10. '[' → logprob: -11.910714149475098

Token 1008: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.01809433475136757
    2. ' %' → logprob: -4.893094539642334
    3. ')%' → logprob: -5.018094539642334
    4. ')' → logprob: -5.768094539642334
    5. '```' → logprob: -7.768094539642334
    6. '
' → logprob: -9.393094062805176
    7. ']%' → logprob: -9.643094062805176
    8. '%x' → logprob: -10.643094062805176
    9. '<|end|>' → logprob: -10.643094062805176
    10. '%n' → logprob: -11.143094062805176

Token 1009: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -1.9361264946837764e-07
    2. ' MOD' → logprob: -16.0
    3. '100' → logprob: -18.25
    4. '_MOD' → logprob: -21.0
    5. '```' → logprob: -22.0
    6. '.MOD' → logprob: -23.125
    7. '   ' → logprob: -24.0
    8. 'MO' → logprob: -24.125
    9. 'MD' → logprob: -24.375
    10. '`' → logprob: -25.375

Token 1010: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1011: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1012: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17632465064525604
    2. '```' → logprob: -2.1763246059417725
    3. '                   ' → logprob: -4.176324844360352
    4. '<|end|>' → logprob: -4.426324844360352
    5. 'return' (adapté à ' return') → logprob: -5.301324844360352
    6. '       ' → logprob: -5.426324844360352
    7. '           ' → logprob: -6.051324844360352
    8. '               ' → logprob: -6.301324844360352
    9. ' return' → logprob: -6.426324844360352
    10. '                       ' → logprob: -6.926324844360352

Token 1013: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0010344763286411762
    2. ' dp' → logprob: -6.876034259796143
    3. '(dp' → logprob: -13.7510347366333
    4. ' ' → logprob: -15.3760347366333
    5. '   ' → logprob: -15.7510347366333
    6. '	dp' → logprob: -16.001033782958984
    7. '  ' → logprob: -17.126033782958984
    8. '```' → logprob: -17.501033782958984
    9. 'int' → logprob: -18.376033782958984
    10. '0' → logprob: -18.876033782958984

Token 1014: '[length' (ID: 130091)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.18403349816799164
    2. '```' → logprob: -2.6840333938598633
    3. '[
' → logprob: -3.1840333938598633
    4. '[length' → logprob: -3.5590333938598633
    5. '<|end|>' → logprob: -4.934033393859863
    6. '
' → logprob: -5.059033393859863
    7. 'def' → logprob: -5.434033393859863
    8. '[len' → logprob: -5.434033393859863
    9. '[line' → logprob: -6.684033393859863
    10. '[i' → logprob: -6.684033393859863

Token 1015: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.008795973844826221
    2. '[length' → logprob: -4.758795738220215
    3. '[' → logprob: -9.383795738220215
    4. ']' → logprob: -9.758795738220215
    5. '[len' → logprob: -11.008795738220215
    6. 'length' → logprob: -12.258795738220215
    7. '```' → logprob: -12.633795738220215
    8. '   ' → logprob: -13.383795738220215
    9. '[][' → logprob: -13.383795738220215
    10. '][-' → logprob: -13.633795738220215

Token 1016: 'S' (ID: 50)
  Prédit: 'S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: 0.0
    2. ' S' → logprob: -18.5
    3. '(S' → logprob: -19.75
    4. '
' → logprob: -20.875
    5. '   ' → logprob: -21.125
    6. '```' → logprob: -21.75
    7. '_S' → logprob: -23.0
    8. '	S' → logprob: -23.375
    9. '[S' → logprob: -23.625
    10. '`' → logprob: -23.875

Token 1017: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00012248923303559422
    2. '])' → logprob: -9.3751220703125
    3. ')' → logprob: -10.8751220703125
    4. ')]' → logprob: -11.5001220703125
    5. '`]' → logprob: -12.8751220703125
    6. ']}' → logprob: -13.7501220703125
    7. ']
' → logprob: -13.8751220703125
    8. '   ' → logprob: -13.8751220703125
    9. '}' → logprob: -14.1251220703125
    10. ' ]' → logprob: -14.6251220703125

Token 1018: ' %' (ID: 1851)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.13934078812599182
    2. ')' → logprob: -2.639340877532959
    3. '<|end|>' → logprob: -3.764340877532959
    4. 'def' → logprob: -3.764340877532959
    5. '#' → logprob: -5.389340877532959
    6. '   ' → logprob: -6.139340877532959
    7. '
' → logprob: -6.764340877532959
    8. '       ' → logprob: -6.889340877532959
    9. '``' → logprob: -7.264340877532959
    10. ':' → logprob: -7.639340877532959

Token 1019: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -5.512236498361744e-07
    2. ' MOD' → logprob: -14.500000953674316
    3. '_MOD' → logprob: -18.625
    4. '100' → logprob: -20.875
    5. '.MOD' → logprob: -21.625
    6. '(M' → logprob: -22.375
    7. 'MO' → logprob: -22.875
    8. 'MODE' → logprob: -23.5
    9. '```' → logprob: -23.625
    10. '(' → logprob: -23.875

Token 1020: '

' (ID: 279)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.42519474029541016
    2. ')' → logprob: -1.4251947402954102
    3. '<|end|>' → logprob: -2.67519474029541
    4. '#' → logprob: -3.67519474029541
    5. 'def' → logprob: -5.42519474029541
    6. '
' → logprob: -6.05019474029541
    7. '   ' → logprob: -6.67519474029541
    8. '       ' → logprob: -7.55019474029541
    9. '[' → logprob: -8.05019474029541
    10. '``' → logprob: -8.17519474029541

Token 1021: 'if' (ID: 366)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.922554075717926
    2. '<|end|>' → logprob: -0.922554075717926
    3. '#' → logprob: -2.4225540161132812
    4. ')' → logprob: -2.9225540161132812
    5. '.' → logprob: -4.422554016113281
    6. '\n' → logprob: -4.547554016113281
    7. 'def' → logprob: -4.672554016113281
    8. '\' → logprob: -4.672554016113281
    9. '
' → logprob: -5.297554016113281
    10. ':' → logprob: -5.547554016113281

Token 1022: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.16022615134716034
    2. ' __' → logprob: -1.9102261066436768
    3. 'name' → logprob: -13.535225868225098
    4. 'main' → logprob: -15.285225868225098
    5. '```' → logprob: -15.660225868225098
    6. ' ' → logprob: -16.285226821899414
    7. '___' → logprob: -16.535226821899414
    8. '_name' → logprob: -17.285226821899414
    9. '
' → logprob: -17.660226821899414
    10. '.__' → logprob: -18.285226821899414

Token 1023: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.00578658189624548
    2. '```' → logprob: -5.880786418914795
    3. '==' → logprob: -6.630786418914795
    4. ' ==' → logprob: -6.880786418914795
    5. '__":
' → logprob: -8.755786895751953
    6. ' __' → logprob: -9.505786895751953
    7. 'if' → logprob: -9.630786895751953
    8. '__':
' → logprob: -9.630786895751953
    9. '___' → logprob: -10.005786895751953
    10. '__.__' → logprob: -10.880786895751953

Token 1024: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0010604370618239045
    2. '```' → logprob: -7.251060485839844
    3. '==' → logprob: -9.001060485839844
    4. '__.__' → logprob: -9.376060485839844
    5. '__":
' → logprob: -9.876060485839844
    6. '__':
' → logprob: -10.876060485839844
    7. '__.' → logprob: -11.001060485839844
    8. '=="' → logprob: -11.376060485839844
    9. ' ==' → logprob: -12.126060485839844
    10. '__
' → logprob: -12.126060485839844

Token 1025: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.21320348978042603
    2. '__' → logprob: -2.3382034301757812
    3. ' ==' → logprob: -2.9632034301757812
    4. '=="' → logprob: -3.3382034301757812
    5. '=='' → logprob: -5.338203430175781
    6. '```' → logprob: -5.838203430175781
    7. '==
' → logprob: -7.838203430175781
    8. '()==' → logprob: -10.338203430175781
    9. '[' → logprob: -10.463203430175781
    10. '=' → logprob: -10.588203430175781

Token 1026: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.12693282961845398
    2. ''' → logprob: -2.1269328594207764
    3. '__' → logprob: -12.376933097839355
    4. ' "__' → logprob: -14.626933097839355
    5. ' '__' → logprob: -16.62693214416504
    6. '`' → logprob: -17.75193214416504
    7. '```' → logprob: -18.25193214416504
    8. '"name' → logprob: -18.50193214416504
    9. '   ' → logprob: -19.00193214416504
    10. '("__' → logprob: -19.25193214416504

Token 1027: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -4.751746746478602e-05
    2. '__' → logprob: -10.00004768371582
    3. 'name' → logprob: -13.75004768371582
    4. '"' → logprob: -14.12504768371582
    5. ''' → logprob: -16.50004768371582
    6. ' main' → logprob: -17.12504768371582
    7. '_main' → logprob: -17.37504768371582
    8. 'built' → logprob: -17.75004768371582
    9. '	main' → logprob: -19.12504768371582
    10. '(main' → logprob: -19.12504768371582

Token 1028: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.02810947597026825
    2. '__' → logprob: -3.903109550476074
    3. '__':
' → logprob: -5.028109550476074
    4. '():
' → logprob: -7.153109550476074
    5. '==' → logprob: -9.653109550476074
    6. '```' → logprob: -10.028109550476074
    7. '">
' → logprob: -10.778109550476074
    8. '_' → logprob: -11.278109550476074
    9. '__()
' → logprob: -11.903109550476074
    10. '__["' → logprob: -12.153109550476074

Token 1029: '   ' (ID: 271)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.8993808627128601
    2. 'True' → logprob: -1.5243809223175049
    3. 'def' → logprob: -1.6493809223175049
    4. 'main' → logprob: -2.274380922317505
    5. '__' → logprob: -2.649380922317505
    6. 'import' → logprob: -5.649380683898926
    7. '``' → logprob: -6.524380683898926
    8. '__":
' → logprob: -6.649380683898926
    9. '
' → logprob: -6.899380683898926
    10. '__':
' → logprob: -8.274380683898926

Token 1030: ' import' (ID: 1588)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.012112479656934738
    2. 'import' (adapté à ' import') → logprob: -5.012112617492676
    3. '```' → logprob: -5.262112617492676
    4. 'main' → logprob: -8.762112617492676
    5. 'while' → logprob: -10.762112617492676
    6. '   ' → logprob: -11.012112617492676
    7. '``' → logprob: -13.262112617492676
    8. ' def' → logprob: -13.512112617492676
    9. 'for' → logprob: -14.637112617492676
    10. '
' → logprob: -15.637112617492676

Token 1031: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: 0.0
    2. ' sys' → logprob: -18.0
    3. '=sys' → logprob: -25.875
    4. '_sys' → logprob: -26.0
    5. '(sys' → logprob: -26.125
    6. '	sys' → logprob: -26.125
    7. 'thread' → logprob: -26.375
    8. '__' → logprob: -26.625
    9. 'stdin' → logprob: -26.625
    10. '```' → logprob: -26.75

Token 1032: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20813293755054474
    2. '```' → logprob: -2.3331329822540283
    3. 'def' → logprob: -2.8331329822540283
    4. 'input' → logprob: -4.333132743835449
    5. 'for' → logprob: -4.458132743835449
    6. '
' → logprob: -5.458132743835449
    7. '    
' → logprob: -7.458132743835449
    8. '.readline' → logprob: -7.833132743835449
    9. '``' → logprob: -8.08313274383545
    10. 'data' → logprob: -8.33313274383545

Token 1033: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9946717619895935
    2. 'input' → logprob: -0.9946717619895935
    3. '```' → logprob: -1.7446718215942383
    4. 'for' → logprob: -3.1196718215942383
    5. 'def' → logprob: -3.2446718215942383
    6. '
' → logprob: -6.869671821594238
    7. '``' → logprob: -7.369671821594238
    8. 'data' → logprob: -8.119671821594238
    9. ' input' → logprob: -8.494671821594238
    10. '    
' → logprob: -9.244671821594238

Token 1034: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' (adapté à ' input') → logprob: -0.16189956665039062
    2. 'for' → logprob: -1.9118995666503906
    3. 'def' → logprob: -6.411899566650391
    4. 'data' → logprob: -10.41189956665039
    5. '   ' → logprob: -14.03689956665039
    6. ' input' → logprob: -14.28689956665039
    7. 'read' → logprob: -15.41189956665039
    8. '```' → logprob: -15.53689956665039
    9. ' for' → logprob: -16.41189956665039
    10. '
' → logprob: -16.66189956665039

Token 1035: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07284525781869888
    2. ' =' → logprob: -2.947845220565796
    3. '()' → logprob: -4.322845458984375
    4. '=sys' → logprob: -5.572845458984375
    5. '   ' → logprob: -7.697845458984375
    6. '=input' → logprob: -9.197845458984375
    7. '.readline' → logprob: -9.947845458984375
    8. '```' → logprob: -10.322845458984375
    9. '=lambda' → logprob: -11.197845458984375
    10. '=line' → logprob: -11.697845458984375

Token 1036: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.00015860427811276168
    2. ' sys' → logprob: -8.750158309936523
    3. '=sys' → logprob: -16.500158309936523
    4. 'input' → logprob: -17.875158309936523
    5. 'lambda' → logprob: -18.625158309936523
    6. '	sys' → logprob: -19.000158309936523
    7. '(sys' → logprob: -19.625158309936523
    8. 'stdin' → logprob: -20.750158309936523
    9. '   ' → logprob: -21.000158309936523
    10. '```' → logprob: -22.250158309936523

Token 1037: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.0005645881756208837
    2. 'stdin' → logprob: -8.375564575195312
    3. '.stdout' → logprob: -8.750564575195312
    4. '.readline' → logprob: -8.750564575195312
    5. '=sys' → logprob: -11.875564575195312
    6. 'import' → logprob: -12.375564575195312
    7. 'sys' → logprob: -13.625564575195312
    8. '```' → logprob: -13.750564575195312
    9. '   ' → logprob: -13.875564575195312
    10. '(stdin' → logprob: -14.625564575195312

Token 1038: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.09242533892393112
    2. 'read' → logprob: -2.5924253463745117
    3. '```' → logprob: -4.842425346374512
    4. 'stdin' → logprob: -5.592425346374512
    5. ' readline' → logprob: -6.842425346374512
    6. '(stdin' → logprob: -8.842425346374512
    7. 'buffer' → logprob: -9.217425346374512
    8. '=sys' → logprob: -9.467425346374512
    9. 'import' → logprob: -9.717425346374512
    10. '_read' → logprob: -10.092425346374512

Token 1039: '
' (ID: 198)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.02686864696443081
    2. '```' → logprob: -4.02686882019043
    3. 'for' → logprob: -5.27686882019043
    4. '   ' → logprob: -6.27686882019043
    5. '
' → logprob: -7.02686882019043
    6. ' while' → logprob: -7.90186882019043
    7. '``' → logprob: -8.52686882019043
    8. 'def' → logprob: -8.52686882019043
    9. '    
' → logprob: -10.65186882019043
    10. '	while' → logprob: -12.52686882019043

Token 1040: '   ' (ID: 271)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.1648913025856018
    2. 'for' → logprob: -1.914891242980957
    3. '```' → logprob: -5.539891242980957
    4. '
' → logprob: -8.289891242980957
    5. '   ' → logprob: -8.414891242980957
    6. 'def' → logprob: -8.789891242980957
    7. '``' → logprob: -9.789891242980957
    8. ' while' → logprob: -10.414891242980957
    9. '    
' → logprob: -11.789891242980957
    10. ' for' → logprob: -12.164891242980957

Token 1041: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.0006122402846813202
    2. 'for' → logprob: -7.500612258911133
    3. '```' → logprob: -10.000612258911133
    4. 'def' → logprob: -11.250612258911133
    5. '``' → logprob: -14.625612258911133
    6. ' while' → logprob: -15.500612258911133
    7. '
' → logprob: -15.625612258911133
    8. '   ' → logprob: -17.125612258911133
    9. 'While' → logprob: -19.875612258911133
    10. '	while' → logprob: -20.250612258911133

Token 1042: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.005275619216263294
    2. ' True' → logprob: -5.255275726318359
    3. '   ' → logprob: -10.63027572631836
    4. '(True' → logprob: -11.00527572631836
    5. '1' → logprob: -13.88027572631836
    6. ' ' → logprob: -17.63027572631836
    7. '
' → logprob: -17.63027572631836
    8. 'true' → logprob: -17.75527572631836
    9. '=True' → logprob: -18.00527572631836
    10. '       ' → logprob: -18.13027572631836

Token 1043: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.305450975894928
    2. '```' → logprob: -2.680450916290283
    3. '():
' → logprob: -3.055450916290283
    4. '(N' → logprob: -3.305450916290283
    5. ':
' → logprob: -3.430450916290283
    6. ':' → logprob: -3.555450916290283
    7. '(n' → logprob: -3.805450916290283
    8. '   ' → logprob: -4.430450916290283
    9. '():' → logprob: -5.180450916290283
    10. '(' → logprob: -5.680450916290283

Token 1044: '       ' (ID: 309)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.907162606716156
    2. 'line' → logprob: -1.2821626663208008
    3. '   ' → logprob: -1.4071626663208008
    4. '       ' → logprob: -2.782162666320801
    5. ' line' → logprob: -5.032162666320801
    6. 'n' → logprob: -5.532162666320801
    7. '```' → logprob: -6.782162666320801
    8. '	line' → logprob: -8.9071626663208
    9. ' N' → logprob: -9.2821626663208
    10. 's' → logprob: -9.5321626663208

Token 1045: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' (adapté à ' N') → logprob: -0.0015135504072532058
    2. 'line' → logprob: -6.501513481140137
    3. '   ' → logprob: -12.251513481140137
    4. 'n' → logprob: -13.001513481140137
    5. 'NM' → logprob: -13.251513481140137
    6. '```' → logprob: -13.376513481140137
    7. ' line' → logprob: -14.751513481140137
    8. ' N' → logprob: -16.501514434814453
    9. '	N' → logprob: -16.751514434814453
    10. 'nm' → logprob: -17.001514434814453

Token 1046: ',M' (ID: 54127)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000217006730963476
    2. ',M' → logprob: -8.50021743774414
    3. ' ,' → logprob: -11.62521743774414
    4. ',N' → logprob: -13.25021743774414
    5. '_,' → logprob: -13.62521743774414
    6. '=' → logprob: -14.75021743774414
    7. ',Q' → logprob: -15.25021743774414
    8. 's' → logprob: -15.87521743774414
    9. ',line' → logprob: -15.87521743774414
    10. ',S' → logprob: -16.25021743774414

Token 1047: ',S' (ID: 42097)
  Prédit: ',S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',S' → logprob: -0.576113224029541
    2. ',' → logprob: -0.826113224029541
    3. ',K' → logprob: -9.576112747192383
    4. ',Q' → logprob: -9.951112747192383
    5. ',E' → logprob: -11.451112747192383
    6. 'S' → logprob: -11.826112747192383
    7. ',W' → logprob: -11.951112747192383
    8. ' ,' → logprob: -12.076112747192383
    9. ',s' → logprob: -12.451112747192383
    10. ',L' → logprob: -12.451112747192383

Token 1048: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.011050650849938393
    2. ' =' → logprob: -4.511050701141357
    3. '=line' → logprob: -13.0110502243042
    4. '=input' → logprob: -15.3860502243042
    5. '   ' → logprob: -15.7610502243042
    6. '=sys' → logprob: -16.386051177978516
    7. '=int' → logprob: -16.511051177978516
    8. '＝' → logprob: -17.511051177978516
    9. '       ' → logprob: -17.886051177978516
    10. '    ' → logprob: -18.136051177978516

Token 1049: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -1.306760805164231e-05
    2. ' map' → logprob: -11.25001335144043
    3. 'tuple' → logprob: -21.00001335144043
    4. '	map' → logprob: -21.37501335144043
    5. '   ' → logprob: -22.12501335144043
    6. 'list' → logprob: -22.25001335144043
    7. '(map' → logprob: -22.37501335144043
    8. '.map' → logprob: -23.00001335144043
    9. '    ' → logprob: -24.00001335144043
    10. '       ' → logprob: -24.37501335144043

Token 1050: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.021520905196666718
    2. 'int' → logprob: -3.8965208530426025
    3. ',int' → logprob: -7.396521091461182
    4. '=int' → logprob: -8.771520614624023
    5. '[int' → logprob: -8.771520614624023
    6. '<int' → logprob: -10.146520614624023
    7. '```' → logprob: -12.396520614624023
    8. ',' → logprob: -12.771520614624023
    9. ':int' → logprob: -13.146520614624023
    10. ']int' → logprob: -13.646520614624023

Token 1051: ',input' (ID: 123014)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.009273014031350613
    2. '=input' → logprob: -5.384273052215576
    3. '(),' → logprob: -6.759273052215576
    4. ',input' → logprob: -6.884273052215576
    5. ',' → logprob: -7.134273052215576
    6. '       ' → logprob: -7.884273052215576
    7. '=' → logprob: -8.259272575378418
    8. '(input' → logprob: -8.384272575378418
    9. 'input' → logprob: -8.509272575378418
    10. '.readline' → logprob: -8.759272575378418

Token 1052: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -2.696889623621246e-06
    2. '.readline' → logprob: -13.25000286102295
    3. '.split' → logprob: -14.62500286102295
    4. '()' → logprob: -15.12500286102295
    5. '       ' → logprob: -16.125001907348633
    6. '   ' → logprob: -17.000001907348633
    7. '.' → logprob: -17.625001907348633
    8. '().__' → logprob: -18.125001907348633
    9. '()
' → logprob: -18.500001907348633
    10. ' ().' → logprob: -18.875001907348633

Token 1053: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -2.236549335066229e-05
    2. 'strip' → logprob: -10.750021934509277
    3. 'rstrip' → logprob: -14.500021934509277
    4. 'read' → logprob: -15.750021934509277
    5. '().' → logprob: -16.500022888183594
    6. ' split' → logprob: -17.000022888183594
    7. '.split' → logprob: -17.250022888183594
    8. 'spl' → logprob: -17.375022888183594
    9. '(split' → logprob: -17.500022888183594
    10. '_split' → logprob: -17.500022888183594

Token 1054: '())
' (ID: 4574)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.5447859764099121
    2. ')' → logprob: -1.669785976409912
    3. '       ' → logprob: -1.794785976409912
    4. '())
' → logprob: -2.794785976409912
    5. '())' → logprob: -5.544785976409912
    6. '()' → logprob: -8.79478645324707
    7. '()
' → logprob: -8.91978645324707
    8. '<|end|>' → logprob: -10.04478645324707
    9. ')>
' → logprob: -10.41978645324707
    10. '<|end|>' → logprob: -10.54478645324707

Token 1055: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0001907855912577361
    2. '   ' → logprob: -9.000190734863281
    3. '<|end|>' → logprob: -9.875190734863281
    4. '```' → logprob: -12.125190734863281
    5. 'if' → logprob: -12.500190734863281
    6. ' if' → logprob: -12.500190734863281
    7. ' ' → logprob: -14.375190734863281
    8. '<|end|>' → logprob: -14.375190734863281
    9. '	' → logprob: -14.875190734863281
    10. ',' → logprob: -14.875190734863281

Token 1056: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0491856224834919
    2. '       ' → logprob: -3.0491855144500732
    3. ' if' → logprob: -7.424185752868652
    4. '	if' → logprob: -14.299185752868652
    5. '   ' → logprob: -14.924185752868652
    6. '```' → logprob: -15.049185752868652
    7. 'If' → logprob: -16.174184799194336
    8. ';if' → logprob: -17.674184799194336
    9. '[' → logprob: -18.049184799194336
    10. '@if' → logprob: -18.674184799194336

Token 1057: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -1.8624639324116288e-06
    2. ' N' → logprob: -13.250001907348633
    3. '   ' → logprob: -17.250001907348633
    4. '       ' → logprob: -19.125001907348633
    5. '(N' → logprob: -22.000001907348633
    6. '	N' → logprob: -22.250001907348633
    7. '    ' → logprob: -23.500001907348633
    8. '     ' → logprob: -24.125001907348633
    9. '0' → logprob: -24.250001907348633
    10. '  ' → logprob: -24.250001907348633

Token 1058: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.0430280826985836
    2. ' ==' → logprob: -3.1680281162261963
    3. '()==' → logprob: -11.668027877807617
    4. '===' → logprob: -11.668027877807617
    5. '=' → logprob: -12.293027877807617
    6. '```' → logprob: -12.793027877807617
    7. ')==' → logprob: -13.168027877807617
    8. '0' → logprob: -14.668027877807617
    9. '==
' → logprob: -14.793027877807617
    10. '       ' → logprob: -15.168027877807617

Token 1059: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.625
    3. '
' → logprob: -21.75
    4. '(' → logprob: -22.125
    5. '۰' → logprob: -22.375
    6. '```' → logprob: -22.875
    7. '<|end|>' → logprob: -24.125
    8. '000' → logprob: -24.25
    9. '   ' → logprob: -24.5
    10. '０' → logprob: -24.625

Token 1060: ' and' (ID: 326)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.04867173358798027
    2. ' and' → logprob: -3.0486717224121094
    3. '0' → logprob: -9.54867172241211
    4. ',' → logprob: -12.04867172241211
    5. '&&' → logprob: -12.29867172241211
    6. '==' → logprob: -14.42367172241211
    7. '           ' → logprob: -14.67367172241211
    8. '&' → logprob: -14.79867172241211
    9. '       ' → logprob: -14.79867172241211
    10. '```' → logprob: -15.17367172241211

Token 1061: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -4.842555426876061e-06
    2. ' M' → logprob: -12.250004768371582
    3. '       ' → logprob: -17.8750057220459
    4. '   ' → logprob: -18.1250057220459
    5. '    ' → logprob: -21.0000057220459
    6. '           ' → logprob: -21.3750057220459
    7. '  ' → logprob: -22.1250057220459
    8. '	M' → logprob: -22.3750057220459
    9. '        ' → logprob: -22.6250057220459
    10. '     ' → logprob: -22.7500057220459

Token 1062: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -6.2729995988775045e-06
    2. ' ==' → logprob: -12.000006675720215
    3. '===' → logprob: -17.1250057220459
    4. '==
' → logprob: -18.0000057220459
    5. '=' → logprob: -18.5000057220459
    6. '()==' → logprob: -19.6250057220459
    7. '0' → logprob: -19.7500057220459
    8. ')==' → logprob: -20.1250057220459
    9. '```' → logprob: -20.6250057220459
    10. ']==' → logprob: -20.7500057220459

Token 1063: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -16.875
    3. '```' → logprob: -22.0
    4. '۰' → logprob: -22.625
    5. '   ' → logprob: -22.75
    6. '=' → logprob: -22.875
    7. '00' → logprob: -24.25
    8. 'and' → logprob: -24.25
    9. '০' → logprob: -24.25
    10. 'import' → logprob: -24.375

Token 1064: ' and' (ID: 326)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.06212799996137619
    2. ' and' → logprob: -2.8121280670166016
    3. '0' → logprob: -8.812128067016602
    4. '==' → logprob: -11.687128067016602
    5. '       ' → logprob: -13.937128067016602
    6. '&&' → logprob: -14.312128067016602
    7. '           ' → logprob: -14.437128067016602
    8. '```' → logprob: -14.937128067016602
    9. ' ' → logprob: -15.812128067016602
    10. '=' → logprob: -16.3121280670166

Token 1065: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.06209428980946541
    2. '0' → logprob: -2.812094211578369
    3. '       ' → logprob: -9.187094688415527
    4. ' S' → logprob: -11.437094688415527
    5. '   ' → logprob: -11.562094688415527
    6. ' ' → logprob: -13.062094688415527
    7. '           ' → logprob: -13.812094688415527
    8. '     ' → logprob: -15.812094688415527
    9. '      ' → logprob: -15.937094688415527
    10. 's' → logprob: -16.06209373474121

Token 1066: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.00026217024424113333
    2. ' ==' → logprob: -8.250262260437012
    3. '===' → logprob: -15.500262260437012
    4. '=' → logprob: -15.625262260437012
    5. ')==' → logprob: -15.875262260437012
    6. '==
' → logprob: -15.875262260437012
    7. '()==' → logprob: -16.125261306762695
    8. '==(' → logprob: -16.750261306762695
    9. ']==' → logprob: -16.875261306762695
    10. '0' → logprob: -17.500261306762695

Token 1067: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.5
    3. '   ' → logprob: -19.875
    4. '۰' → logprob: -20.75
    5. '```' → logprob: -21.375
    6. '=' → logprob: -21.5
    7. '       ' → logprob: -22.5
    8. '০' → logprob: -22.75
    9. 'import' → logprob: -22.75
    10. '00' → logprob: -22.875

Token 1068: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3635687530040741
    2. '       ' → logprob: -1.7385687828063965
    3. ':' → logprob: -2.1135687828063965
    4. ':
' → logprob: -4.8635687828063965
    5. '   ' → logprob: -7.8635687828063965
    6. '          ' → logprob: -10.613568305969238
    7. '	       ' → logprob: -10.863568305969238
    8. 'break' → logprob: -11.363568305969238
    9. '               ' → logprob: -11.488568305969238
    10. '	break' → logprob: -11.863568305969238

Token 1069: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.023503202944993973
    2. '           ' → logprob: -3.773503303527832
    3. '   ' → logprob: -8.523503303527832
    4. 'break' → logprob: -10.398503303527832
    5. ' break' → logprob: -11.648503303527832
    6. '	break' → logprob: -12.648503303527832
    7. ':' → logprob: -13.023503303527832
    8. '               ' → logprob: -13.023503303527832
    9. '<|end|>' → logprob: -13.148503303527832
    10. ':
' → logprob: -13.148503303527832

Token 1070: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.003400975139811635
    2. '           ' → logprob: -6.253400802612305
    3. ' break' → logprob: -7.253400802612305
    4. '       ' → logprob: -7.253400802612305
    5. '   ' → logprob: -10.503400802612305
    6. '	break' → logprob: -10.503400802612305
    7. '_break' → logprob: -15.003400802612305
    8. '               ' → logprob: -15.503400802612305
    9. '```' → logprob: -15.878400802612305
    10. 'Break' → logprob: -16.753400802612305

Token 1071: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008684894070029259
    2. '   ' → logprob: -5.133685111999512
    3. '```' → logprob: -6.258685111999512
    4. 'print' → logprob: -7.133685111999512
    5. '<|end|>' → logprob: -11.383685111999512
    6. '``' → logprob: -11.508685111999512
    7. ' print' → logprob: -11.633685111999512
    8. '>' → logprob: -12.883685111999512
    9. '        
' → logprob: -13.633685111999512
    10. '
' → logprob: -13.633685111999512

Token 1072: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006620754022151232
    2. '   ' → logprob: -5.75662088394165
    3. 'print' → logprob: -5.75662088394165
    4. '```' → logprob: -8.256620407104492
    5. 'result' → logprob: -12.006620407104492
    6. ' print' → logprob: -12.256620407104492
    7. '``' → logprob: -13.256620407104492
    8. 'output' → logprob: -14.631620407104492
    9. '           ' → logprob: -14.631620407104492
    10. '
' → logprob: -14.881620407104492

Token 1073: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -2.176947600673884e-05
    2. '       ' → logprob: -11.375021934509277
    3. '```' → logprob: -12.000021934509277
    4. '   ' → logprob: -13.250021934509277
    5. ' print' → logprob: -13.750021934509277
    6. 'result' → logprob: -14.250021934509277
    7. 'res' → logprob: -14.875021934509277
    8. '``' → logprob: -16.12502098083496
    9. '	print' → logprob: -16.50002098083496
    10. '#print' → logprob: -16.62502098083496

Token 1074: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.00020544764993246645
    2. 'solve' → logprob: -8.500205039978027
    3. '(' → logprob: -13.375205039978027
    4. '(solution' → logprob: -15.750205039978027
    5. '(sol' → logprob: -16.125205993652344
    6. ' solve' → logprob: -16.250205993652344
    7. '((' → logprob: -17.250205993652344
    8. '(f' → logprob: -17.375205993652344
    9. '(resolve' → logprob: -18.250205993652344
    10. '(save' → logprob: -18.500205993652344

Token 1075: 'olve' (ID: 11460)
  Prédit: 'olve'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'olve' → logprob: -1.8624639324116288e-06
    2. 'solve' → logprob: -13.250001907348633
    3. 'ol' → logprob: -19.125001907348633
    4. 'OLVE' → logprob: -19.375001907348633
    5. 'olver' → logprob: -19.500001907348633
    6. 'ove' → logprob: -19.500001907348633
    7. 'olv' → logprob: -20.875001907348633
    8. '.solve' → logprob: -22.250001907348633
    9. '```' → logprob: -22.250001907348633
    10. 'o' → logprob: -22.625001907348633

Token 1076: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -2.963691804325208e-05
    2. 'N' → logprob: -10.500029563903809
    3. '(' → logprob: -14.125029563903809
    4. ')' → logprob: -14.250029563903809
    5. ')(' → logprob: -15.500029563903809
    6. ' (' → logprob: -15.500029563903809
    7. '   ' → logprob: -15.875029563903809
    8. '(
' → logprob: -16.750030517578125
    9. ',N' → logprob: -17.625030517578125
    10. '```' → logprob: -18.125030517578125

Token 1077: ',M' (ID: 54127)
  Prédit: ',M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',M' → logprob: -0.38699766993522644
    2. ',' → logprob: -1.1369976997375488
    3. ',S' → logprob: -9.63699722290039
    4. '(M' → logprob: -10.76199722290039
    5. ' ,' → logprob: -11.01199722290039
    6. 'M' → logprob: -11.76199722290039
    7. ',N' → logprob: -12.01199722290039
    8. '       ' → logprob: -12.63699722290039
    9. ',K' → logprob: -13.38699722290039
    10. '   ' → logprob: -14.01199722290039

Token 1078: ',S' (ID: 42097)
  Prédit: ',S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',S' → logprob: -0.043084487318992615
    2. 'S' → logprob: -3.2930843830108643
    3. ',' → logprob: -5.293084621429443
    4. '(S' → logprob: -13.043084144592285
    5. ' ,' → logprob: -13.793084144592285
    6. ',s' → logprob: -14.918084144592285
    7. '   ' → logprob: -15.168084144592285
    8. '```' → logprob: -16.2930850982666
    9. ',M' → logprob: -16.5430850982666
    10. ' S' → logprob: -16.7930850982666

Token 1079: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.004145830404013395
    2. ')' → logprob: -5.504145622253418
    3. '(N' → logprob: -10.379145622253418
    4. '   ' → logprob: -11.254145622253418
    5. ',' → logprob: -11.754145622253418
    6. ')))' → logprob: -12.004145622253418
    7. '))
' → logprob: -13.004145622253418
    8. '(S' → logprob: -13.629145622253418
    9. '       ' → logprob: -13.879145622253418
    10. '()))' → logprob: -13.879145622253418


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1077
Tokens correctement prédits (1ère position, stricte): 285
Tokens correctement prédits (1ère position, avec adaptation): 299
Tokens correctement prédits (top 10): 702
Précision stricte (1ère position): 26.46%
Précision adaptée (1ère position): 27.76%
Précision (top 10): 65.18%
================================================================================
