================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:57:36
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
while True:
    n = int(input())
    if n == 0:
        break
    total_hits = 0
    rounds = n // 4
    for _ in range(rounds):
        total_hits += int(input())
    print(total_hits)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'while' (ID: 7032)
  → Token d'amorce (pas de prédiction)

Token 1: ' True' (ID: 6432)
  → Token d'amorce (pas de prédiction)

Token 2: ':
' (ID: 734)
  → Token d'amorce (pas de prédiction)

Token 3: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25863146781921387
    2. ' ' → logprob: -2.383631467819214
    3. '    ' → logprob: -3.508631467819214
    4. '```' → logprob: -3.633631467819214
    5. '\' → logprob: -3.758631467819214
    6. '    
' → logprob: -4.508631706237793
    7. '\n' → logprob: -4.633631706237793
    8. '<|end|>' → logprob: -5.258631706237793
    9. '`' → logprob: -5.758631706237793
    10. ''' → logprob: -5.758631706237793

Token 4: ' n' (ID: 297)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4148074984550476
    2. '    ' → logprob: -1.9148075580596924
    3. ' ' → logprob: -2.0398075580596924
    4. '```' → logprob: -3.5398075580596924
    5. '       ' → logprob: -4.914807319641113
    6. '  ' → logprob: -5.289807319641113
    7. '    
' → logprob: -5.789807319641113
    8. 'i' → logprob: -6.414807319641113
    9. '`' → logprob: -6.414807319641113
    10. '        
' → logprob: -6.789807319641113

Token 5: ' =' (ID: 314)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9284094572067261
    2. 'u' → logprob: -1.553409457206726
    3. '=' → logprob: -2.1784095764160156
    4. '+' → logprob: -2.3034095764160156
    5. 'o' → logprob: -2.8034095764160156
    6. '   ' → logprob: -3.5534095764160156
    7. '_' → logprob: -4.178409576416016
    8. '.' → logprob: -4.428409576416016
    9. '%' → logprob: -4.553409576416016
    10. ' =' → logprob: -4.928409576416016

Token 6: ' int' (ID: 677)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.5945674777030945
    2. ' int' → logprob: -0.9695674777030945
    3. 'input' → logprob: -2.8445675373077393
    4. 'int' → logprob: -4.59456729888916
    5. ' ' → logprob: -8.21956729888916
    6. ' n' → logprob: -8.59456729888916
    7. ' s' → logprob: -10.59456729888916
    8. ' eval' → logprob: -10.84456729888916
    9. 'n' → logprob: -11.09456729888916
    10. '1' → logprob: -11.09456729888916

Token 7: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0789412334561348
    2. '(input' → logprob: -2.5789413452148438
    3. '(n' → logprob: -10.703941345214844
    4. '()' → logprob: -11.953941345214844
    5. '(
' → logprob: -12.203941345214844
    6. '('' → logprob: -12.328941345214844
    7. '(user' → logprob: -13.203941345214844
    8. 'input' → logprob: -13.453941345214844
    9. '(range' → logprob: -13.703941345214844
    10. ' (' → logprob: -13.953941345214844

Token 8: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7426626086235046
    2. ')' → logprob: -0.9926626086235046
    3. '()' → logprob: -2.3676626682281494
    4. '())' → logprob: -2.9926626682281494
    5. '))' → logprob: -5.49266242980957
    6. '('' → logprob: -6.86766242980957
    7. ' ' → logprob: -6.86766242980957
    8. '()))' → logprob: -6.99266242980957
    9. '```' → logprob: -7.24266242980957
    10. '(""))' → logprob: -8.36766242980957

Token 9: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.267456293106079
    2. '   ' → logprob: -1.267456293106079
    3. ' if' → logprob: -1.892456293106079
    4. '<|end|>' → logprob: -2.017456293106079
    5. '  ' → logprob: -2.517456293106079
    6. '    ' → logprob: -3.767456293106079
    7. ')' → logprob: -3.892456293106079
    8. ':' → logprob: -4.6424560546875
    9. 'if' → logprob: -5.3924560546875
    10. '  
' → logprob: -6.2674560546875

Token 10: ' if' (ID: 538)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.0238049030303955
    2. '   ' → logprob: -1.2738049030303955
    3. ')' → logprob: -2.2738049030303955
    4. '<|end|>' → logprob: -2.2738049030303955
    5. ' if' → logprob: -2.5238049030303955
    6. '    ' → logprob: -3.5238049030303955
    7. '  ' → logprob: -4.523804664611816
    8. ' )' → logprob: -4.523804664611816
    9. 'if' (adapté à ' if') → logprob: -5.148804664611816
    10. '    
' → logprob: -6.148804664611816

Token 11: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.007633958477526903
    2. ' ' → logprob: -5.007634162902832
    3. ' not' → logprob: -7.632634162902832
    4. 'n' → logprob: -7.757634162902832
    5. ' ' → logprob: -12.632634162902832
    6. '  ' → logprob: -14.132634162902832
    7. 'not' → logprob: -14.132634162902832
    8. ' (' → logprob: -15.132634162902832
    9. '<|end|>' → logprob: -15.257634162902832
    10. '	n' → logprob: -15.507634162902832

Token 12: ' ==' (ID: 951)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.2679864764213562
    2. ' ==' → logprob: -2.142986536026001
    3. ' <' → logprob: -3.017986536026001
    4. ' <=' → logprob: -3.392986536026001
    5. '>' → logprob: -4.017986297607422
    6. ' ' → logprob: -5.142986297607422
    7. '==' → logprob: -5.267986297607422
    8. ' >=' → logprob: -5.767986297607422
    9. '<' → logprob: -7.142986297607422
    10. ')' → logprob: -7.392986297607422

Token 13: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1797505021095276
    2. '0' → logprob: -1.8047504425048828
    3. '1' → logprob: -13.929750442504883
    4. ' ' → logprob: -13.929750442504883
    5. '  ' → logprob: -14.179750442504883
    6. ')' → logprob: -15.179750442504883
    7. '100' → logprob: -15.242250442504883
    8. ' -' → logprob: -15.304750442504883
    9. '20' → logprob: -15.429750442504883
    10. '<|end|>' → logprob: -15.617250442504883

Token 14: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002514188876375556
    2. ' ' → logprob: -6.002514362335205
    3. '-' → logprob: -10.377513885498047
    4. ' -' → logprob: -12.877513885498047
    5. '1' → logprob: -13.252513885498047
    6. '   ' → logprob: -14.127513885498047
    7. '42' → logprob: -14.752513885498047
    8. '  ' → logprob: -14.877513885498047
    9. '```' → logprob: -14.877513885498047
    10. '4' → logprob: -15.252513885498047

Token 15: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00010902655776590109
    2. ':
' → logprob: -9.87510871887207
    3. ' :' → logprob: -10.50010871887207
    4. '   ' → logprob: -11.25010871887207
    5. '):' → logprob: -12.12510871887207
    6. '       ' → logprob: -12.62510871887207
    7. ':\' → logprob: -13.25010871887207
    8. ':return' → logprob: -13.25010871887207
    9. '    ' → logprob: -13.62510871887207
    10. '():' → logprob: -14.00010871887207

Token 16: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0024994369596242905
    2. '   ' → logprob: -6.752499580383301
    3. ' break' → logprob: -6.877499580383301
    4. '\n' → logprob: -9.1274995803833
    5. '    ' → logprob: -9.8774995803833
    6. '	break' → logprob: -10.5024995803833
    7. ':' → logprob: -10.7524995803833
    8. '\' → logprob: -11.3774995803833
    9. '      ' → logprob: -11.3774995803833
    10. ' ' → logprob: -11.6274995803833

Token 17: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.010929679498076439
    2. '       ' → logprob: -4.885929584503174
    3. 'break' (adapté à ' break') → logprob: -5.885929584503174
    4. '	break' → logprob: -8.510930061340332
    5. '   ' → logprob: -8.885930061340332
    6. '\n' → logprob: -9.385930061340332
    7. '_break' → logprob: -10.010930061340332
    8. ' \' → logprob: -11.135930061340332
    9. '    ' → logprob: -11.510930061340332
    10. '```' → logprob: -11.760930061340332

Token 18: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9354909658432007
    2. '\n' → logprob: -0.9354909658432007
    3. '\' → logprob: -2.5604910850524902
    4. '```' → logprob: -2.6854910850524902
    5. '    
' → logprob: -3.0604910850524902
    6. '
' → logprob: -5.06049108505249
    7. 'n' → logprob: -5.56049108505249
    8. '\r' → logprob: -6.06049108505249
    9. '  
' → logprob: -6.31049108505249
    10. ':' → logprob: -6.68549108505249

Token 19: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5285186171531677
    2. '<|end|>' → logprob: -1.2785186767578125
    3. '\n' → logprob: -3.2785186767578125
    4. '
' → logprob: -3.9035186767578125
    5. '```' → logprob: -4.0285186767578125
    6. '    
' → logprob: -4.0285186767578125
    7. ':' → logprob: -4.4035186767578125
    8. '#' → logprob: -4.7785186767578125
    9. 'n' → logprob: -5.5285186767578125
    10. '<|end|>' → logprob: -5.6535186767578125

Token 20: ' total' (ID: 3609)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05695340037345886
    2. ' ' → logprob: -4.306953430175781
    3. '\n' → logprob: -4.806953430175781
    4. '    ' → logprob: -4.931953430175781
    5. 'n' → logprob: -5.181953430175781
    6. '    
' → logprob: -5.306953430175781
    7. '\' → logprob: -5.681953430175781
    8. '```' → logprob: -5.806953430175781
    9. 'print' → logprob: -6.556953430175781
    10. '<|end|>' → logprob: -6.556953430175781

Token 21: '_hits' (ID: 166473)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.04468833655118942
    2. '+' → logprob: -3.9196882247924805
    3. ' ' → logprob: -4.6696882247924805
    4. ' +' → logprob: -5.0446882247924805
    5. '_' → logprob: -5.7946882247924805
    6. '+=' → logprob: -5.9196882247924805
    7. ' =' → logprob: -6.9196882247924805
    8. '=' → logprob: -7.9196882247924805
    9. '    ' → logprob: -8.04468822479248
    10. ')' → logprob: -9.16968822479248

Token 22: ' =' (ID: 314)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.008292687125504017
    2. ' =' → logprob: -4.8832926750183105
    3. '+=' → logprob: -7.6332926750183105
    4. '=' → logprob: -9.133293151855469
    5. ' ' → logprob: -10.008293151855469
    6. '+' → logprob: -11.883293151855469
    7. ' +' → logprob: -12.008293151855469
    8. '    ' → logprob: -12.008293151855469
    9. '[' → logprob: -12.008293151855469
    10. '_' → logprob: -12.258293151855469

Token 23: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.281454473733902
    2. '0' → logprob: -1.4064544439315796
    3. ' n' → logprob: -8.406454086303711
    4. ' sum' → logprob: -10.406454086303711
    5. 'n' → logprob: -10.531454086303711
    6. 'sum' → logprob: -11.906454086303711
    7. ' ' → logprob: -12.718954086303711
    8. ' total' → logprob: -12.718954086303711
    9. ' int' → logprob: -13.781454086303711
    10. '1' → logprob: -13.968954086303711

Token 24: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.09434734284877777
    2. ' ' → logprob: -2.4693472385406494
    3. ' n' → logprob: -5.7193474769592285
    4. 'n' → logprob: -6.7193474769592285
    5. ' sum' → logprob: -7.4693474769592285
    6. 'sum' → logprob: -8.59434700012207
    7. '1' → logprob: -9.96934700012207
    8. '   ' → logprob: -10.96934700012207
    9. ' total' → logprob: -11.40684700012207
    10. '    ' → logprob: -11.71934700012207

Token 25: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.28198620676994324
    2. '<|end|>' → logprob: -1.7819862365722656
    3. ' ' → logprob: -3.5319862365722656
    4. '    ' → logprob: -4.531986236572266
    5. '
' → logprob: -4.531986236572266
    6. '    
' → logprob: -4.656986236572266
    7. '```' → logprob: -5.156986236572266
    8. '\' → logprob: -6.031986236572266
    9. '<|end|>' → logprob: -6.281986236572266
    10. '\n' → logprob: -6.781986236572266

Token 26: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04368169978260994
    2. '<|end|>' → logprob: -3.7936816215515137
    3. ' ' → logprob: -4.168681621551514
    4. '    ' → logprob: -6.293681621551514
    5. '    
' → logprob: -7.418681621551514
    6. ')' → logprob: -7.668681621551514
    7. '  ' → logprob: -7.918681621551514
    8. ' 
' → logprob: -8.418682098388672
    9. '<|end|>' → logprob: -8.418682098388672
    10. '\' → logprob: -8.543682098388672

Token 27: ' rounds' (ID: 37740)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7796628475189209
    2. 'for' → logprob: -1.029662847518921
    3. '   ' → logprob: -2.029662847518921
    4. ' ' → logprob: -3.779662847518921
    5. '    ' → logprob: -5.2796630859375
    6. 'total' → logprob: -5.5296630859375
    7. 's' → logprob: -5.9046630859375
    8. ' total' → logprob: -6.0296630859375
    9. 't' → logprob: -6.1546630859375
    10. 'n' → logprob: -6.2796630859375

Token 28: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.09173604846000671
    2. '_' → logprob: -2.841736078262329
    3. '=' → logprob: -4.09173583984375
    4. ' ' → logprob: -5.09173583984375
    5. ' +=' → logprob: -5.34173583984375
    6. ' _' → logprob: -7.84173583984375
    7. '_space' → logprob: -7.84173583984375
    8. '_count' → logprob: -7.96673583984375
    9. '[' → logprob: -8.84173583984375
    10. '   ' → logprob: -9.84173583984375

Token 29: ' n' (ID: 297)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.050475601106882095
    2. '0' → logprob: -3.175475597381592
    3. ' n' → logprob: -5.425475597381592
    4. ' int' → logprob: -6.675475597381592
    5. '1' → logprob: -7.425475597381592
    6. ' []' → logprob: -7.925475597381592
    7. 'n' → logprob: -8.30047607421875
    8. '10' → logprob: -8.55047607421875
    9. 'int' → logprob: -8.80047607421875
    10. ''' → logprob: -10.05047607421875

Token 30: ' //' (ID: 602)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 31: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.7141869068145752
    2. '6' → logprob: -1.5891869068145752
    3. ' ' → logprob: -2.214186906814575
    4. '3' → logprob: -2.714186906814575
    5. '10' → logprob: -3.339186906814575
    6. '5' → logprob: -3.714186906814575
    7. '4' → logprob: -3.964186906814575
    8. '9' → logprob: -4.339186668395996
    9. '36' → logprob: -4.964186668395996
    10. '20' → logprob: -5.089186668395996

Token 32: '4' (ID: 19)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.43713515996932983
    2. '10' → logprob: -2.1871352195739746
    3. '6' → logprob: -2.4371352195739746
    4. '3' → logprob: -2.8121352195739746
    5. '5' → logprob: -3.1871352195739746
    6. '4' → logprob: -4.062135219573975
    7. '20' → logprob: -5.437135219573975
    8. '27' → logprob: -5.562135219573975
    9. '7' → logprob: -5.687135219573975
    10. '100' → logprob: -5.687135219573975

Token 33: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09237230569124222
    2. '    
' → logprob: -3.467372417449951
    3. '<|end|>' → logprob: -4.342372417449951
    4. '    ' → logprob: -4.842372417449951
    5. '\n' → logprob: -4.967372417449951
    6. ' ' → logprob: -5.342372417449951
    7. '\' → logprob: -5.592372417449951
    8. ' 
' → logprob: -5.592372417449951
    9. 'n' → logprob: -5.717372417449951
    10. '
' → logprob: -5.842372417449951

Token 34: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6579227447509766
    2. '<|end|>' → logprob: -1.5329227447509766
    3. '
' → logprob: -2.1579227447509766
    4. ' 
' → logprob: -2.5329227447509766
    5. '    
' → logprob: -3.2829227447509766
    6. '  
' → logprob: -4.907922744750977
    7. '\n' → logprob: -5.157922744750977
    8. '    ' → logprob: -5.782922744750977
    9. ' for' → logprob: -5.907922744750977
    10. ' ' → logprob: -5.907922744750977

Token 35: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13476578891277313
    2. 'for' (adapté à ' for') → logprob: -2.759765863418579
    3. ' for' → logprob: -3.759765863418579
    4. ' 
' → logprob: -4.509765625
    5. '    
' → logprob: -4.509765625
    6. '
' → logprob: -5.509765625
    7. '\n' → logprob: -5.509765625
    8. '<|end|>' → logprob: -5.634765625
    9. 'total' → logprob: -6.509765625
    10. 'n' → logprob: -6.884765625

Token 36: ' _' (ID: 1175)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.7395733594894409
    2. ' _' → logprob: -0.9895733594894409
    3. ' ' → logprob: -1.989573359489441
    4. '_' → logprob: -4.3645734786987305
    5. ' r' → logprob: -7.6145734786987305
    6. ' round' → logprob: -8.23957347869873
    7. ' player' → logprob: -8.61457347869873
    8. 'i' → logprob: -9.36457347869873
    9. ' range' → logprob: -9.86457347869873
    10. ' ‌' → logprob: -9.98957347869873

Token 37: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.008519778028130531
    2. 'in' → logprob: -5.008519649505615
    3. ' ' → logprob: -6.383519649505615
    4. ' i' → logprob: -9.633520126342773
    5. '_' → logprob: -11.258520126342773
    6. '  ' → logprob: -11.633520126342773
    7. ' _' → logprob: -12.383520126342773
    8. '    ' → logprob: -12.758520126342773
    9. 'n' → logprob: -13.008520126342773
    10. '```' → logprob: -13.008520126342773

Token 38: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.0699683353304863
    2. 'range' → logprob: -2.6949682235717773
    3. ' ran' → logprob: -11.694968223571777
    4. ' ' → logprob: -11.944968223571777
    5. '	range' → logprob: -12.069968223571777
    6. ' rang' → logprob: -13.194968223571777
    7. '(range' → logprob: -13.319968223571777
    8. 'rang' → logprob: -13.444968223571777
    9. ' xrange' → logprob: -13.569968223571777
    10. 'ran' → logprob: -13.944968223571777

Token 39: '(round' (ID: 75171)
  Prédit: ' rounds'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rounds' → logprob: -0.0042032902128994465
    2. ' (' → logprob: -6.3792033195495605
    3. '(' → logprob: -6.7542033195495605
    4. '(round' → logprob: -6.8792033195495605
    5. ' round' → logprob: -8.379202842712402
    6. ' ' → logprob: -10.504202842712402
    7. ' ranges' → logprob: -10.629202842712402
    8. 'round' → logprob: -11.879202842712402
    9. ' n' → logprob: -12.254202842712402
    10. ' range' → logprob: -13.129202842712402

Token 40: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0001766040368238464
    2. ' s' → logprob: -8.750176429748535
    3. ')s' → logprob: -11.750176429748535
    4. ')' → logprob: -12.750176429748535
    5. '_s' → logprob: -13.125176429748535
    6. '<s' → logprob: -14.125176429748535
    7. '	s' → logprob: -14.250176429748535
    8. '>s' → logprob: -14.812676429748535
    9. ' rounds' → logprob: -15.062676429748535
    10. '   ' → logprob: -15.125176429748535

Token 41: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.002512047067284584
    2. ':' → logprob: -6.627511978149414
    3. ')' → logprob: -7.127511978149414
    4. '   ' → logprob: -9.002511978149414
    5. ' ):' → logprob: -9.252511978149414
    6. '+' → logprob: -9.502511978149414
    7. '):
' → logprob: -9.877511978149414
    8. ',' → logprob: -11.377511978149414
    9. '+:' → logprob: -12.502511978149414
    10. '():' → logprob: -12.627511978149414

Token 42: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.021428262814879417
    2. '<|end|>' → logprob: -4.521428108215332
    3. '   ' → logprob: -5.146428108215332
    4. ' ' → logprob: -6.896428108215332
    5. '    ' → logprob: -7.021428108215332
    6. '    
' → logprob: -7.521428108215332
    7. '        
' → logprob: -7.896428108215332
    8. ' total' → logprob: -8.271428108215332
    9. '<|end|>' → logprob: -8.521428108215332
    10. ' 
' → logprob: -8.521428108215332

Token 43: ' total' (ID: 3609)
  Prédit: ' hits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' hits' → logprob: -0.8195471167564392
    2. 'hits' → logprob: -1.319547176361084
    3. '   ' → logprob: -1.944547176361084
    4. ' total' → logprob: -3.694547176361084
    5. 'total' (adapté à ' total') → logprob: -4.069547176361084
    6. ' line' → logprob: -4.444547176361084
    7. ' input' → logprob: -4.819547176361084
    8. 'score' → logprob: -4.819547176361084
    9. ' score' → logprob: -4.944547176361084
    10. 'data' → logprob: -4.944547176361084

Token 44: '_hits' (ID: 166473)
  Prédit: '_hits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_hits' → logprob: -0.030168699100613594
    2. ' +=' → logprob: -3.6551687717437744
    3. ' _' → logprob: -6.280168533325195
    4. '_' → logprob: -6.530168533325195
    5. '+=' → logprob: -8.655168533325195
    6. '   ' → logprob: -9.280168533325195
    7. '_hit' → logprob: -9.530168533325195
    8. ' ' → logprob: -9.530168533325195
    9. '    ' → logprob: -10.530168533325195
    10. ' =' → logprob: -11.030168533325195

Token 45: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.0002705145161598921
    2. '+=' → logprob: -8.25027084350586
    3. ' =' → logprob: -12.00027084350586
    4. ' -=' → logprob: -13.75027084350586
    5. ' +' → logprob: -14.25027084350586
    6. ' ' → logprob: -14.62527084350586
    7. '+' → logprob: -15.37527084350586
    8. '    ' → logprob: -15.62527084350586
    9. '=' → logprob: -16.00027084350586
    10. ' *=' → logprob: -16.37527084350586

Token 46: ' int' (ID: 677)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.7135120630264282
    2. ' ' → logprob: -1.2135120630264282
    3. '1' → logprob: -2.9635119438171387
    4. '10' → logprob: -3.3385119438171387
    5. 'int' → logprob: -3.4635119438171387
    6. '5' → logprob: -3.8385119438171387
    7. ' int' → logprob: -3.9635119438171387
    8. '3' → logprob: -4.213511943817139
    9. '2' → logprob: -5.338511943817139
    10. '9' → logprob: -5.338511943817139

Token 47: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.00523612555116415
    2. '(' → logprob: -5.2552361488342285
    3. 'input' → logprob: -13.38023567199707
    4. '('' → logprob: -14.75523567199707
    5. ' input' → logprob: -16.25523567199707
    6. '()' → logprob: -16.50523567199707
    7. '(
' → logprob: -16.75523567199707
    8. '("' → logprob: -17.13023567199707
    9. ' (' → logprob: -17.50523567199707
    10. '(in' → logprob: -18.13023567199707

Token 48: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.06203412264585495
    2. '()' → logprob: -2.8120341300964355
    3. '())
' → logprob: -10.562033653259277
    4. '()
' → logprob: -11.062033653259277
    5. '()))' → logprob: -11.937033653259277
    6. '().' → logprob: -12.562033653259277
    7. ' ())' → logprob: -12.562033653259277
    8. '();)' → logprob: -12.687033653259277
    9. ')' → logprob: -13.312033653259277
    10. '()>' → logprob: -13.437033653259277

Token 49: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 50: ' print' (ID: 2123)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 51: '(total' (ID: 39744)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.20250745117664337
    2. '(total' → logprob: -1.702507495880127
    3. '('' → logprob: -6.952507495880127
    4. '()' → logprob: -9.327507019042969
    5. '("("' → logprob: -11.077507019042969
    6. '("' → logprob: -11.327507019042969
    7. 'total' → logprob: -11.952507019042969
    8. ' (' → logprob: -12.702507019042969
    9. '(round' → logprob: -13.077507019042969
    10. '(f' → logprob: -13.077507019042969

Token 52: '_hits' (ID: 166473)
  Prédit: '_hits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_hits' → logprob: -8.220573363360018e-05
    2. '_' → logprob: -9.500082015991211
    3. ')_' → logprob: -13.250082015991211
    4. ' _' → logprob: -13.250082015991211
    5. '_hit' → logprob: -13.250082015991211
    6. '_h' → logprob: -14.125082015991211
    7. '_ticks' → logprob: -15.125082015991211
    8. ')' → logprob: -15.375082015991211
    9. 'hits' → logprob: -16.25008201599121
    10. '_t' → logprob: -16.62508201599121

Token 53: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0325924449716695e-05
    2. ' )' → logprob: -11.75001049041748
    3. '))' → logprob: -14.25001049041748
    4. ')
' → logprob: -14.62501049041748
    5. '()' → logprob: -15.12501049041748
    6. '*' → logprob: -15.75001049041748
    7. '`)' → logprob: -15.75001049041748
    8. '+' → logprob: -15.87501049041748
    9. '())' → logprob: -15.87501049041748
    10. '')' → logprob: -16.375009536743164


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 51
Tokens correctement prédits (1ère position, stricte): 21
Tokens correctement prédits (1ère position, avec adaptation): 21
Tokens correctement prédits (top 10): 43
Précision stricte (1ère position): 41.18%
Précision adaptée (1ère position): 41.18%
Précision (top 10): 84.31%
================================================================================
