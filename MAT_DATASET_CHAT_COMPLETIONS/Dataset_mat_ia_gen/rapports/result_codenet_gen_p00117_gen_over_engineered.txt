================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:18:20
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from typing import Dict, List, Tuple, Protocol, runtime_checkable, Optional
import heapq


@runtime_checkable
class GraphInterface(Protocol):
    def add_edge(self, from_node: int, to_node: int, cost: int) -> None:
        ...

    def shortest_path(self, start: int, goal: int) -> Optional[int]:
        ...


class DirectedGraph:
    def __init__(self, num_nodes: int) -> None:
        self.num_nodes = num_nodes
        self.adj_list: Dict[int, List[Tuple[int, int]]] = {i: [] for i in range(1, num_nodes + 1)}

    def add_edge(self, from_node: int, to_node: int, cost: int) -> None:
        self.adj_list[from_node].append((to_node, cost))

    def shortest_path(self, start: int, goal: int) -> Optional[int]:
        dist = {node: float("inf") for node in self.adj_list}
        dist[start] = 0
        heap = [(0, start)]
        while heap:
            current_dist, u = heapq.heappop(heap)
            if current_dist > dist[u]:
                continue
            if u == goal:
                return current_dist
            for v, cost in self.adj_list[u]:
                new_cost = current_dist + cost
                if new_cost < dist[v]:
                    dist[v] = new_cost
                    heapq.heappush(heap, (new_cost, v))
        return None


class BidirectionalGraph(GraphInterface):
    def __init__(self, num_nodes: int) -> None:
        self.forward_graph = DirectedGraph(num_nodes)
        self.reverse_graph = DirectedGraph(num_nodes)

    def add_bidirectional_edge(self, node_a: int, node_b: int, cost_ab: int, cost_ba: int) -> None:
        self.forward_graph.add_edge(node_a, node_b, cost_ab)
        self.forward_graph.add_edge(node_b, node_a, cost_ba)
        self.reverse_graph.add_edge(node_b, node_a, cost_ba)
        self.reverse_graph.add_edge(node_a, node_b, cost_ab)

    def add_edge(self, from_node: int, to_node: int, cost: int) -> None:
        # Unused in this context for one-way edge, but needed to comply with interface
        self.forward_graph.add_edge(from_node, to_node, cost)

    def shortest_path_forward(self, start: int, goal: int) -> Optional[int]:
        return self.forward_graph.shortest_path(start, goal)

    def shortest_path_backward(self, start: int, goal: int) -> Optional[int]:
        return self.forward_graph.shortest_path(start, goal)

    def shortest_path(self, start: int, goal: int) -> Optional[int]:
        # Default shortest_path method finds from start to goal on forward graph
        return self.forward_graph.shortest_path(start, goal)


class CarpenterRewardCalculator:
    def __init__(self, n: int, m: int, edges: List[Tuple[int, int, int, int]],
                 s: int, g: int, V: int, P: int) -> None:
        self.n = n
        self.m = m
        self.s = s
        self.g = g
        self.V = V
        self.P = P
        self.graph = BidirectionalGraph(n)
        for a, b, c, d in edges:
            self.graph.add_bidirectional_edge(a, b, c, d)

    def calculate_max_reward(self) -> int:
        cost_to_g = self.graph.shortest_path_forward(self.s, self.g)
        cost_to_s = self.graph.shortest_path_forward(self.g, self.s)
        if cost_to_g is None or cost_to_s is None:
            # No valid round trip path
            return - (self.P)
        total_travel_cost = cost_to_g + cost_to_s
        reward = self.V - self.P - total_travel_cost
        return reward


class InputParser:
    @staticmethod
    def parse_input() -> CarpenterRewardCalculator:
        import sys
        input_lines = sys.stdin.read().strip().splitlines()
        n = int(input_lines[0].strip())
        m = int(input_lines[1].strip())
        edges = []
        for i in range(m):
            line = input_lines[2 + i]
            # split by comma and convert to integer
            parts = list(map(int, line.split(',')))
            edges.append((parts[0], parts[1], parts[2], parts[3]))
        last_line = input_lines[2 + m]
        s, g, V, P = map(int, last_line.split(','))
        return CarpenterRewardCalculator(n, m, edges, s, g, V, P)


def main() -> None:
    calculator = InputParser.parse_input()
    result = calculator.calculate_max_reward()
    print(result)


if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' typing' (ID: 34152)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' Dict' (ID: 55179)
  Prédit: ' List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' List' → logprob: -0.014027046039700508
    2. ' Any' → logprob: -5.014027118682861
    3. 'List' → logprob: -5.389027118682861
    4. ' Optional' → logprob: -6.514027118682861
    5. ' Union' → logprob: -7.514027118682861
    6. 'Any' → logprob: -7.764027118682861
    7. ' Generator' → logprob: -8.889026641845703
    8. 'Optional' → logprob: -10.389026641845703
    9. ' Iterable' → logprob: -10.639026641845703
    10. ' ' → logprob: -10.764026641845703

Token 4: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.45774924755096436
    2. '[' → logprob: -1.2077492475509644
    3. 'a' → logprob: -4.082749366760254
    4. 'import' → logprob: -4.457749366760254
    5. '```' → logprob: -4.457749366760254
    6. '<|end|>' → logprob: -4.832749366760254
    7. ' ' → logprob: -4.957749366760254
    8. '(' → logprob: -5.457749366760254
    9. '\[' → logprob: -6.582749366760254
    10. '\' → logprob: -6.832749366760254

Token 5: ' List' (ID: 2655)
  Prédit: ' List'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' List' → logprob: -0.130488321185112
    2. 'List' → logprob: -2.130488395690918
    3. ' Any' → logprob: -6.380488395690918
    4. 'Any' → logprob: -6.630488395690918
    5. ' Optional' → logprob: -8.380488395690918
    6. 'Optional' → logprob: -9.005488395690918
    7. ' Union' → logprob: -9.130488395690918
    8. 'Set' → logprob: -11.130488395690918
    9. 'Union' → logprob: -11.255488395690918
    10. 'Mapping' → logprob: -11.505488395690918

Token 6: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.35068193078041077
    2. 'def' → logprob: -2.225682020187378
    3. '[' → logprob: -2.975682020187378
    4. 'a' → logprob: -3.600682020187378
    5. '```' → logprob: -3.600682020187378
    6. 'class' → logprob: -4.475681781768799
    7. ':' → logprob: -4.475681781768799
    8. '`' → logprob: -4.600681781768799
    9. '(' → logprob: -4.600681781768799
    10. 'import' → logprob: -4.850681781768799

Token 7: ' Tuple' (ID: 50841)
  Prédit: 'Tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tuple' → logprob: -0.8744440078735352
    2. 'Any' → logprob: -1.8744440078735352
    3. ' Tuple' → logprob: -1.9994440078735352
    4. 'Optional' → logprob: -2.124444007873535
    5. ' Optional' → logprob: -2.999444007873535
    6. 'Set' → logprob: -2.999444007873535
    7. ' Any' → logprob: -3.499444007873535
    8. ' Union' → logprob: -3.874444007873535
    9. 'Union' → logprob: -4.374444007873535
    10. ' Set' → logprob: -5.249444007873535

Token 8: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5766772031784058
    2. '[' → logprob: -1.4516772031784058
    3. 'a' → logprob: -3.0766773223876953
    4. '.' → logprob: -3.2016773223876953
    5. ':' → logprob: -3.4516773223876953
    6. '(' → logprob: -4.076677322387695
    7. 'T' → logprob: -4.576677322387695
    8. 'def' → logprob: -4.576677322387695
    9. 'C' → logprob: -4.826677322387695
    10. 'D' → logprob: -4.826677322387695

Token 9: ' Protocol' (ID: 41914)
  Prédit: ' Union'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Union' → logprob: -0.9002596139907837
    2. 'Set' → logprob: -1.5252596139907837
    3. ' Set' → logprob: -1.5252596139907837
    4. ' Optional' → logprob: -2.525259494781494
    5. 'Union' → logprob: -3.775259494781494
    6. ' Any' → logprob: -3.900259494781494
    7. 'Any' → logprob: -4.400259494781494
    8. 'Optional' → logprob: -4.400259494781494
    9. ' Callable' → logprob: -5.400259494781494
    10. 'Iterable' → logprob: -6.275259494781494

Token 10: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1048465967178345
    2. '```' → logprob: -1.3548465967178345
    3. 'class' → logprob: -1.7298465967178345
    4. ':' → logprob: -1.7298465967178345
    5. '

' → logprob: -4.354846477508545
    6. '.' → logprob: -4.604846477508545
    7. '[' → logprob: -4.854846477508545
    8. '\n' → logprob: -5.604846477508545
    9. '
' → logprob: -5.729846477508545
    10. '``' → logprob: -6.229846477508545

Token 11: ' runtime' (ID: 32103)
  Prédit: 'runtime'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'runtime' → logprob: -0.9091668725013733
    2. ' runtime' → logprob: -1.1591668128967285
    3. 'Any' → logprob: -2.4091668128967285
    4. ' Callable' → logprob: -3.0341668128967285
    5. 'Callable' → logprob: -3.1591668128967285
    6. 'Iterable' → logprob: -3.9091668128967285
    7. ' Any' → logprob: -4.0341668128967285
    8. 'Typed' → logprob: -4.6591668128967285
    9. ' Typed' → logprob: -4.7841668128967285
    10. 'Optional' → logprob: -4.9091668128967285

Token 12: '_check' (ID: 15847)
  Prédit: '_check'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_check' → logprob: -0.1983964443206787
    2. 'e' → logprob: -2.9483964443206787
    3. 'check' → logprob: -2.9483964443206787
    4. 'import' → logprob: -3.9483964443206787
    5. 'type' → logprob: -4.323396682739258
    6. '```' → logprob: -4.573396682739258
    7. '_type' → logprob: -5.323396682739258
    8. '_error' → logprob: -5.573396682739258
    9. '`' → logprob: -5.698396682739258
    10. '_' → logprob: -5.948396682739258

Token 13: 'able' (ID: 562)
  Prédit: 'able'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'able' → logprob: -0.22635436058044434
    2. 'ing' → logprob: -1.6013543605804443
    3. 'al' → logprob: -7.726354598999023
    4. 'ed' → logprob: -8.851354598999023
    5. '```' → logprob: -8.976354598999023
    6. 's' → logprob: -9.851354598999023
    7. 'ng' → logprob: -10.726354598999023
    8. 'abl' → logprob: -11.101354598999023
    9. '_enable' → logprob: -11.226354598999023
    10. 'a' → logprob: -11.226354598999023

Token 14: ',' (ID: 11)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.5042262077331543
    2. '
' → logprob: -2.0042262077331543
    3. ',' → logprob: -2.2542262077331543
    4. '```' → logprob: -2.2542262077331543
    5. '\n' → logprob: -4.004226207733154
    6. 'class' → logprob: -5.129226207733154
    7. '<|end|>' → logprob: -5.379226207733154
    8. ':' → logprob: -5.504226207733154
    9. 'import' → logprob: -5.629226207733154
    10. '\' → logprob: -5.754226207733154

Token 15: ' Optional' (ID: 19351)
  Prédit: ' Any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Any' → logprob: -1.2965315580368042
    2. ' Callable' → logprob: -1.5465315580368042
    3. ' Optional' → logprob: -1.7965315580368042
    4. 'Any' → logprob: -2.5465316772460938
    5. ' Typed' → logprob: -2.5465316772460938
    6. ' Type' → logprob: -3.6715316772460938
    7. ' Iterator' → logprob: -3.7965316772460938
    8. 'Callable' → logprob: -3.9215316772460938
    9. ' Iterable' → logprob: -4.046531677246094
    10. ' Generic' → logprob: -4.046531677246094

Token 16: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7301830649375916
    2. '```' → logprob: -1.3551831245422363
    3. '<|end|>' → logprob: -2.4801831245422363
    4. '

' → logprob: -2.6051831245422363
    5. 'class' → logprob: -3.7301831245422363
    6. ',' → logprob: -3.7301831245422363
    7. '\n' → logprob: -4.105183124542236
    8. 'import' → logprob: -4.730183124542236
    9. '[' → logprob: -5.730183124542236
    10. '<|end|>' → logprob: -5.855183124542236

Token 17: 'import' (ID: 561)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -1.1109521389007568
    2. 'class' → logprob: -1.4859521389007568
    3. ',' → logprob: -1.7359521389007568
    4. '
' → logprob: -2.610952138900757
    5. 'import' → logprob: -2.860952138900757
    6. '<|end|>' → logprob: -3.735952138900757
    7. '.' → logprob: -4.110952377319336
    8. '[' → logprob: -4.360952377319336
    9. ':' → logprob: -4.485952377319336
    10. '`' → logprob: -4.485952377319336

Token 18: ' heap' (ID: 37237)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.1864682137966156
    2. ' typing' → logprob: -2.0614681243896484
    3. ' sys' → logprob: -3.8114681243896484
    4. ' json' → logprob: -4.186468124389648
    5. ' requests' → logprob: -5.811468124389648
    6. ' re' → logprob: -7.186468124389648
    7. ' pandas' → logprob: -8.311468124389648
    8. ' ' → logprob: -8.561468124389648
    9. ' math' → logprob: -8.561468124389648
    10. ' numpy' → logprob: -8.561468124389648

Token 19: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -1.8074162653647363e-05
    2. 'queue' → logprob: -12.000018119812012
    3. 's' → logprob: -12.250018119812012
    4. '.' → logprob: -12.500018119812012
    5. 't' → logprob: -14.000018119812012
    6. 'u' → logprob: -14.750018119812012
    7. '[' → logprob: -15.000018119812012
    8. ')' → logprob: -15.375018119812012
    9. ' queue' → logprob: -15.375018119812012
    10. 'n' → logprob: -15.375018119812012

Token 20: '


' (ID: 2499)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.12813633680343628
    2. '

' → logprob: -2.753136396408081
    3. 'class' → logprob: -3.503136396408081
    4. '```' → logprob: -4.253136157989502
    5. '\n' → logprob: -5.253136157989502
    6. '
' → logprob: -6.378136157989502
    7. '<|end|>' → logprob: -6.503136157989502
    8. ' class' → logprob: -7.253136157989502
    9. '' → logprob: -7.628136157989502
    10. '<|end|>' → logprob: -7.753136157989502

Token 21: '@' (ID: 31)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.030201435089111328
    2. '@' → logprob: -3.5302014350891113
    3. '```' → logprob: -8.405200958251953
    4. 'def' → logprob: -9.030200958251953
    5. '@class' → logprob: -10.405200958251953
    6. ' class' → logprob: -10.530200958251953
    7. '@dat' → logprob: -11.155200958251953
    8. '@
' → logprob: -11.655200958251953
    9. 'from' → logprob: -12.030200958251953
    10. 'clas' → logprob: -12.530200958251953

Token 22: 'runtime' (ID: 48702)
  Prédit: 'runtime'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'runtime' → logprob: -5.676981345459353e-06
    2. 'dat' → logprob: -12.125005722045898
    3. ' runtime' → logprob: -15.625005722045898
    4. '(runtime' → logprob: -16.8750057220459
    5. 'Runtime' → logprob: -18.7500057220459
    6. 'run' → logprob: -18.8750057220459
    7. '.runtime' → logprob: -19.1250057220459
    8. 'staticmethod' → logprob: -19.8750057220459
    9. '_runtime' → logprob: -20.0000057220459
    10. 'typing' → logprob: -21.1250057220459

Token 23: '_check' (ID: 15847)
  Prédit: '_check'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_check' → logprob: -0.0004635584482457489
    2. '_' → logprob: -8.625463485717773
    3. '_safe' → logprob: -9.750463485717773
    4. '_checked' → logprob: -9.750463485717773
    5. '_callable' → logprob: -10.500463485717773
    6. '_call' → logprob: -11.000463485717773
    7. '_checker' → logprob: -11.375463485717773
    8. '_code' → logprob: -11.500463485717773
    9. '```' → logprob: -11.500463485717773
    10. '_search' → logprob: -12.000463485717773

Token 24: 'able' (ID: 562)
  Prédit: 'able'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'able' → logprob: 0.0
    2. 'al' → logprob: -18.25
    3. 'alable' → logprob: -19.125
    4. '@' → logprob: -19.5
    5. 'ing' → logprob: -20.375
    6. 'abled' → logprob: -20.75
    7. 'ability' → logprob: -21.375
    8. 'ABLE' → logprob: -21.5
    9. 'abl' → logprob: -21.5
    10. 'nable' → logprob: -21.5

Token 25: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.24582605063915253
    2. '(
' → logprob: -3.120826005935669
    3. ' class' → logprob: -3.495826005935669
    4. '<|end|>' → logprob: -3.495826005935669
    5. ' (' → logprob: -3.620826005935669
    6. 'protocol' → logprob: -3.870826005935669
    7. '(protocol' → logprob: -4.370826244354248
    8. '
' → logprob: -4.370826244354248
    9. ' ' → logprob: -4.745826244354248
    10. 'class' → logprob: -4.995826244354248

Token 26: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.23541410267353058
    2. ' class' → logprob: -1.7354141473770142
    3. 'protocol' → logprob: -3.7354140281677246
    4. '
' → logprob: -6.360414028167725
    5. '<class' → logprob: -6.360414028167725
    6. ' Protocol' → logprob: -6.360414028167725
    7. '(protocol' → logprob: -7.110414028167725
    8. ' protocol' → logprob: -7.235414028167725
    9. '(' → logprob: -7.360414028167725
    10. 'def' → logprob: -7.735414028167725

Token 27: ' Graph' (ID: 15559)
  Prédit: ' Protocol'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Protocol' → logprob: -0.04831502586603165
    2. ' Iterable' → logprob: -3.6733150482177734
    3. ' Priority' → logprob: -4.048315048217773
    4. ' Comparable' → logprob: -5.923315048217773
    5. ' Queue' → logprob: -8.048315048217773
    6. ' Sequence' → logprob: -8.173315048217773
    7. ' Comparator' → logprob: -8.173315048217773
    8. ' Iterator' → logprob: -8.548315048217773
    9. ' Runnable' → logprob: -9.173315048217773
    10. ' Predicate' → logprob: -9.673315048217773

Token 28: 'Interface' (ID: 7078)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00032044618274085224
    2. ':' → logprob: -8.125320434570312
    3. 'Protocol' → logprob: -11.375320434570312
    4. '(protocol' → logprob: -12.500320434570312
    5. '[' → logprob: -13.250320434570312
    6. '(
' → logprob: -13.375320434570312
    7. ' Protocol' → logprob: -13.625320434570312
    8. '.' → logprob: -14.250320434570312
    9. '```' → logprob: -14.500320434570312
    10. '.Protocol' → logprob: -14.625320434570312

Token 29: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00027349460287950933
    2. ':' → logprob: -8.250273704528809
    3. '(protocol' → logprob: -11.500273704528809
    4. '(Optional' → logprob: -15.000273704528809
    5. ' Protocol' → logprob: -15.250273704528809
    6. '():' → logprob: -15.375273704528809
    7. '(
' → logprob: -15.625273704528809
    8. 'Protocol' → logprob: -16.125272750854492
    9. '.Protocol' → logprob: -16.250272750854492
    10. ' (' → logprob: -16.750272750854492

Token 30: 'Protocol' (ID: 19824)
  Prédit: 'Protocol'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Protocol' → logprob: -0.004789426457136869
    2. ' Protocol' → logprob: -5.379789352416992
    3. ')' → logprob: -8.754789352416992
    4. '   ' → logprob: -12.504789352416992
    5. 'protocol' → logprob: -13.504789352416992
    6. 'Graph' → logprob: -13.629789352416992
    7. 'Optional' → logprob: -13.754789352416992
    8. '```' → logprob: -14.379789352416992
    9. '
' → logprob: -14.629789352416992
    10. '`' → logprob: -15.129789352416992

Token 31: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0026094289496541023
    2. '[' → logprob: -6.6276092529296875
    3. '):
' → logprob: -6.7526092529296875
    4. ')' → logprob: -10.377609252929688
    5. ' ):' → logprob: -10.377609252929688
    6. ':' → logprob: -11.377609252929688
    7. '[int' → logprob: -11.627609252929688
    8. '):
' → logprob: -12.002609252929688
    9. ']:' → logprob: -12.252609252929688
    10. '[str' → logprob: -12.502609252929688

Token 32: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015274958685040474
    2. '    
' → logprob: -4.390275001525879
    3. '
' → logprob: -7.265275001525879
    4. ':' → logprob: -7.390275001525879
    5. 'def' → logprob: -8.265275001525879
    6. ':
' → logprob: -8.390275001525879
    7. '<|end|>' → logprob: -8.390275001525879
    8. '<|end|>' → logprob: -8.515275001525879
    9. 'n' → logprob: -9.390275001525879
    10. '```' → logprob: -9.515275001525879

Token 33: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.5522772669792175
    2. 'def' (adapté à ' def') → logprob: -0.9272772669792175
    3. '   ' → logprob: -3.5522773265838623
    4. '    ' → logprob: -11.052277565002441
    5. ' ' → logprob: -11.552277565002441
    6. ' nodes' → logprob: -11.802277565002441
    7. '  ' → logprob: -12.052277565002441
    8. '	def' → logprob: -12.177277565002441
    9. ')' → logprob: -12.427277565002441
    10. 'Node' → logprob: -13.302277565002441

Token 34: ' add' (ID: 1147)
  Prédit: ' get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' get' → logprob: -0.29950353503227234
    2. ' add' → logprob: -2.0495035648345947
    3. ' def' → logprob: -2.7995035648345947
    4. ' neighbors' → logprob: -3.6745035648345947
    5. '_neighbors' → logprob: -4.174503326416016
    6. ' ' → logprob: -4.924503326416016
    7. '_add' → logprob: -5.799503326416016
    8. '_get' → logprob: -5.799503326416016
    9. ' find' → logprob: -6.299503326416016
    10. 'neighbors' → logprob: -6.549503326416016

Token 35: '_edge' (ID: 43226)
  Prédit: '_edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edge' → logprob: -0.5835856199264526
    2. '_node' → logprob: -0.8335856199264526
    3. '_vertex' → logprob: -5.458585739135742
    4. '_' → logprob: -5.708585739135742
    5. ' _' → logprob: -11.708585739135742
    6. '_path' → logprob: -12.208585739135742
    7. '_token' → logprob: -12.208585739135742
    8. '_edges' → logprob: -12.333585739135742
    9. '_connection' → logprob: -12.833585739135742
    10. '   ' → logprob: -13.083585739135742

Token 36: '(self' (ID: 2402)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.24426595866680145
    2. '(self' → logprob: -1.6192659139633179
    3. ' (' → logprob: -4.119266033172607
    4. '(
' → logprob: -6.619266033172607
    5. '<|end|>' → logprob: -7.494266033172607
    6. '<|end|>' → logprob: -8.74426555633545
    7. 'self' → logprob: -9.61926555633545
    8. '(

' → logprob: -9.99426555633545
    9. ' (
' → logprob: -9.99426555633545
    10. ' ' → logprob: -9.99426555633545

Token 37: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0011903452686965466
    2. 'self' → logprob: -6.876190185546875
    3. ' ,' → logprob: -8.876190185546875
    4. ',self' → logprob: -11.626190185546875
    5. ')' → logprob: -12.876190185546875
    6. 's' → logprob: -13.001190185546875
    7. ' self' → logprob: -14.126190185546875
    8. ',
' → logprob: -14.251190185546875
    9. ':' → logprob: -14.876190185546875
    10. '_,' → logprob: -15.001190185546875

Token 38: ' from' (ID: 591)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.5144273042678833
    2. 'self' → logprob: -1.1394273042678833
    3. ' u' → logprob: -3.1394271850585938
    4. ' source' → logprob: -4.264427185058594
    5. 'source' → logprob: -5.264427185058594
    6. 'from' → logprob: -5.264427185058594
    7. ' from' → logprob: -5.264427185058594
    8. 'u' → logprob: -5.514427185058594
    9. ' node' → logprob: -6.264427185058594
    10. ')' → logprob: -6.389427185058594

Token 39: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.03217443451285362
    2. '_' → logprob: -4.032174587249756
    3. '_vertex' → logprob: -4.282174587249756
    4. '_:' → logprob: -9.782174110412598
    5. '_)' → logprob: -10.657174110412598
    6. '_token' → logprob: -11.407174110412598
    7. '_,' → logprob: -11.782174110412598
    8. '_nodes' → logprob: -12.532174110412598
    9. '_user' → logprob: -13.532174110412598
    10. '_NODE' → logprob: -14.032174110412598

Token 40: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.007167612202465534
    2. ',' → logprob: -5.132167816162109
    3. ' :' → logprob: -6.882167816162109
    4. ')' → logprob: -9.13216781616211
    5. ' ,' → logprob: -10.13216781616211
    6. '):' → logprob: -10.63216781616211
    7. ':str' → logprob: -10.75716781616211
    8. '<|end|>' → logprob: -13.00716781616211
    9. ':int' → logprob: -13.13216781616211
    10. '_:' → logprob: -13.50716781616211

Token 41: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.23590326309204102
    2. 'int' → logprob: -1.860903263092041
    3. ' str' → logprob: -2.985903263092041
    4. 'str' → logprob: -5.610903263092041
    5. ' ' → logprob: -8.235902786254883
    6. ')' → logprob: -9.860902786254883
    7. 'Any' → logprob: -10.360902786254883
    8. ' Any' → logprob: -11.110902786254883
    9. 'Hash' → logprob: -11.235902786254883
    10. ':int' → logprob: -11.360902786254883

Token 42: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003831252979580313
    2. ' ,' → logprob: -8.125383377075195
    3. ')' → logprob: -9.375383377075195
    4. ',)' → logprob: -14.750383377075195
    5. ',node' → logprob: -14.750383377075195
    6. '‌,' → logprob: -15.375383377075195
    7. '<|end|>' → logprob: -15.375383377075195
    8. '   ' → logprob: -15.500383377075195
    9. ',
' → logprob: -15.500383377075195
    10. ',int' → logprob: -15.875383377075195

Token 43: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.06994343549013138
    2. 'to' → logprob: -2.694943428039551
    3. ' ' → logprob: -12.56994342803955
    4. ')' → logprob: -14.56994342803955
    5. ' from' → logprob: -14.56994342803955
    6. '	to' → logprob: -14.81994342803955
    7. ',to' → logprob: -14.81994342803955
    8. ' destination' → logprob: -15.06994342803955
    9. ' t' → logprob: -15.06994342803955
    10. '[to' → logprob: -15.19494342803955

Token 44: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.00024477019906044006
    2. '_token' → logprob: -9.500245094299316
    3. '_nodes' → logprob: -9.875245094299316
    4. '_' → logprob: -10.500245094299316
    5. '_user' → logprob: -10.750245094299316
    6. ' _' → logprob: -11.250245094299316
    7. '_n' → logprob: -11.375245094299316
    8. ')_' → logprob: -11.875245094299316
    9. '<|end|>' → logprob: -12.125245094299316
    10. ')' → logprob: -12.250245094299316

Token 45: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0004324573092162609
    2. ')' → logprob: -8.375432014465332
    3. ',' → logprob: -9.375432014465332
    4. ':int' → logprob: -10.000432014465332
    5. '):' → logprob: -10.250432014465332
    6. ' :' → logprob: -10.375432014465332
    7. '<|end|>' → logprob: -13.625432014465332
    8. '<|end|>' → logprob: -13.875432014465332
    9. 's' → logprob: -14.375432014465332
    10. ' ):' → logprob: -15.500432014465332

Token 46: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.12693651020526886
    2. 'int' → logprob: -2.126936435699463
    3. ':int' → logprob: -12.126936912536621
    4. '=int' → logprob: -13.751936912536621
    5. ' Optional' → logprob: -15.126936912536621
    6. ' ' → logprob: -15.126936912536621
    7. ' ' → logprob: -15.251936912536621
    8. '<int' → logprob: -15.251936912536621
    9. '[int' → logprob: -15.751936912536621
    10. '(int' → logprob: -15.876936912536621

Token 47: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01787012442946434
    2. ',' → logprob: -4.39286994934082
    3. ':' → logprob: -5.76786994934082
    4. '):' → logprob: -6.14286994934082
    5. ' )' → logprob: -10.76786994934082
    6. ')->' → logprob: -11.01786994934082
    7. '   ' → logprob: -11.01786994934082
    8. ' ,' → logprob: -12.26786994934082
    9. ' ' → logprob: -12.39286994934082
    10. '->' → logprob: -13.14286994934082

Token 48: ' cost' (ID: 3097)
  Prédit: ' weight'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' weight' → logprob: -0.00957971066236496
    2. 'weight' → logprob: -4.759579658508301
    3. ' w' → logprob: -7.509579658508301
    4. ' cost' → logprob: -8.2595796585083
    5. ' ' → logprob: -10.1345796585083
    6. ' weights' → logprob: -10.3845796585083
    7. 'w' → logprob: -10.7595796585083
    8. ' distance' → logprob: -10.8845796585083
    9. ' )' → logprob: -11.2595796585083
    10. ')' → logprob: -11.3845796585083

Token 49: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.000665375788230449
    2. '):' → logprob: -7.875665187835693
    3. ')' → logprob: -8.250665664672852
    4. ' :' → logprob: -11.875665664672852
    5. ' ):' → logprob: -12.000665664672852
    6. ':int' → logprob: -12.250665664672852
    7. ' ' → logprob: -12.875665664672852
    8. ' )' → logprob: -13.625665664672852
    9. '=' → logprob: -14.375665664672852
    10. '1' → logprob: -15.375665664672852

Token 50: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.01361166313290596
    2. 'int' → logprob: -4.513611793518066
    3. ' float' → logprob: -6.013611793518066
    4. ' Optional' → logprob: -9.638611793518066
    5. 'float' → logprob: -10.888611793518066
    6. ' ' → logprob: -11.138611793518066
    7. ')' → logprob: -11.513611793518066
    8. ':int' → logprob: -13.013611793518066
    9. ' )' → logprob: -13.138611793518066
    10. 'Optional' → logprob: -13.638611793518066

Token 51: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.2007883671903983e-05
    2. '):' → logprob: -11.125021934509277
    3. ' )' → logprob: -12.250021934509277
    4. '   ' → logprob: -13.125021934509277
    5. ')->' → logprob: -14.875021934509277
    6. ':' → logprob: -16.875022888183594
    7. '`)' → logprob: -17.750022888183594
    8. ' ' → logprob: -17.875022888183594
    9. ',)' → logprob: -19.000022888183594
    10. '  ' → logprob: -19.250022888183594

Token 52: ' ->' (ID: 2747)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0007904515950940549
    2. '->' → logprob: -7.750790596008301
    3. ' ->' → logprob: -8.3757905960083
    4. ')->' → logprob: -9.5007905960083
    5. ':' → logprob: -10.6257905960083
    6. ' )' → logprob: -10.8757905960083
    7. '   ' → logprob: -12.0007905960083
    8. '):' → logprob: -13.0007905960083
    9. '")' → logprob: -13.8757905960083
    10. '`)' → logprob: -14.0007905960083

Token 53: ' None' (ID: 4662)
  Prédit: ' None'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' None' → logprob: -0.0015171191189438105
    2. 'None' → logprob: -6.501517295837402
    3. ' int' → logprob: -11.376517295837402
    4. ' ' → logprob: -12.876517295837402
    5. ' Optional' → logprob: -15.001517295837402
    6. ' ' → logprob: -15.751517295837402
    7. ' bool' → logprob: -15.876517295837402
    8. 'int' → logprob: -16.626516342163086
    9. ' none' → logprob: -16.876516342163086
    10. '  ' → logprob: -17.626516342163086

Token 54: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0033803072292357683
    2. '   ' → logprob: -6.128380298614502
    3. '<|end|>' → logprob: -7.003380298614502
    4. '       ' → logprob: -9.12838077545166
    5. '):' → logprob: -9.87838077545166
    6. ':
' → logprob: -10.50338077545166
    7. ':return' → logprob: -10.50338077545166
    8. ' :' → logprob: -11.00338077545166
    9. ')' → logprob: -11.25338077545166
    10. '<|end|>' → logprob: -12.12838077545166

Token 55: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8494434952735901
    2. '<|end|>' → logprob: -1.0994434356689453
    3. '\n' → logprob: -1.8494434356689453
    4. '       ' → logprob: -3.5994434356689453
    5. ':' → logprob: -3.9744434356689453
    6. '
' → logprob: -4.474443435668945
    7. ' ' → logprob: -5.349443435668945
    8. '\r' → logprob: -5.724443435668945
    9. '    ' → logprob: -5.724443435668945
    10. '\' → logprob: -5.849443435668945

Token 56: ' ...

' (ID: 5231)
  Prédit: '...'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '...' → logprob: -0.05171673372387886
    2. ' pass' → logprob: -4.0517168045043945
    3. '       ' → logprob: -4.1767168045043945
    4. 'pass' → logprob: -4.6767168045043945
    5. ' ...' → logprob: -4.8017168045043945
    6. '   ' → logprob: -9.176716804504395
    7. '...
' → logprob: -11.301716804504395
    8. '	pass' → logprob: -12.301716804504395
    9. '.' → logprob: -12.676716804504395
    10. '```' → logprob: -13.051716804504395

Token 57: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21686150133609772
    2. '    
' → logprob: -2.4668614864349365
    3. '<|end|>' → logprob: -2.9668614864349365
    4. '
' → logprob: -3.2168614864349365
    5. ' 
' → logprob: -5.716861724853516
    6. ' ' → logprob: -5.841861724853516
    7. '\n' → logprob: -6.091861724853516
    8. '    ' → logprob: -6.216861724853516
    9. '  
' → logprob: -6.216861724853516
    10. '  ' → logprob: -6.966861724853516

Token 58: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.30218106508255005
    2. '   ' → logprob: -1.5521810054779053
    3. ' def' → logprob: -3.3021810054779053
    4. '
' → logprob: -4.677181243896484
    5. '    
' → logprob: -6.302181243896484
    6. ' ' → logprob: -7.927181243896484
    7. '```' → logprob: -8.052181243896484
    8. '    ' → logprob: -9.302181243896484
    9. '  ' → logprob: -9.552181243896484
    10. ' 
' → logprob: -9.802181243896484

Token 59: ' shortest' (ID: 70564)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -1.1190388202667236
    2. ' get' → logprob: -1.4940388202667236
    3. 'd' → logprob: -2.2440388202667236
    4. ' shortest' → logprob: -2.8690388202667236
    5. 'neighbors' → logprob: -2.8690388202667236
    6. ' d' → logprob: -2.9940388202667236
    7. 'def' → logprob: -3.1190388202667236
    8. 'short' → logprob: -3.1190388202667236
    9. ' neighbors' → logprob: -3.1190388202667236
    10. ' find' → logprob: -4.2440385818481445

Token 60: '_path' (ID: 5558)
  Prédit: '_path'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_path' → logprob: -0.0003434488025959581
    2. '_paths' → logprob: -8.500343322753906
    3. '_' → logprob: -9.000343322753906
    4. '_distance' → logprob: -11.125343322753906
    5. '_dist' → logprob: -14.375343322753906
    6. '_p' → logprob: -15.000343322753906
    7. '_route' → logprob: -15.625343322753906
    8. '_pat' → logprob: -16.250343322753906
    9. '_Path' → logprob: -16.250343322753906
    10. 'path' → logprob: -16.375343322753906

Token 61: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.03366771340370178
    2. '(' → logprob: -3.408667802810669
    3. 'self' → logprob: -11.90866756439209
    4. '(
' → logprob: -12.28366756439209
    5. '_' → logprob: -13.15866756439209
    6. '_(' → logprob: -13.65866756439209
    7. '_between' → logprob: -13.78366756439209
    8. '   ' → logprob: -13.90866756439209
    9. '```' → logprob: -13.90866756439209
    10. 's' → logprob: -13.90866756439209

Token 62: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002777822664938867
    2. 'self' → logprob: -8.625277519226074
    3. ' ,' → logprob: -9.500277519226074
    4. ')' → logprob: -11.375277519226074
    5. 's' → logprob: -12.250277519226074
    6. 'from' → logprob: -12.500277519226074
    7. '   ' → logprob: -14.125277519226074
    8. ',
' → logprob: -14.750277519226074
    9. ',self' → logprob: -14.875277519226074
    10. '```' → logprob: -15.125277519226074

Token 63: ' start' (ID: 1604)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.5249598026275635
    2. 'from' → logprob: -1.5249598026275635
    3. 'start' → logprob: -2.0249598026275635
    4. ' start' → logprob: -3.5249598026275635
    5. ' self' → logprob: -3.7749598026275635
    6. ' from' → logprob: -5.649959564208984
    7. '   ' → logprob: -6.649959564208984
    8. 'source' → logprob: -6.899959564208984
    9. ')' → logprob: -8.024959564208984
    10. ' source' → logprob: -9.149959564208984

Token 64: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1220921203494072
    2. '_node' → logprob: -2.2470920085906982
    3. ',' → logprob: -4.997092247009277
    4. '_:' → logprob: -6.622092247009277
    5. '_' → logprob: -8.122092247009277
    6. ')' → logprob: -8.372092247009277
    7. '_nodes' → logprob: -8.622092247009277
    8. '):' → logprob: -9.622092247009277
    9. '_path' → logprob: -9.747092247009277
    10. ' ,' → logprob: -9.872092247009277

Token 65: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.6326920986175537
    2. ' int' → logprob: -0.7576920986175537
    3. ':int' → logprob: -10.132692337036133
    4. '[int' → logprob: -10.632692337036133
    5. ' ' → logprob: -12.257692337036133
    6. '<int' → logprob: -12.507692337036133
    7. '=int' → logprob: -12.507692337036133
    8. '	int' → logprob: -12.632692337036133
    9. ')' → logprob: -12.757692337036133
    10. ']int' → logprob: -12.882692337036133

Token 66: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00011892046313732862
    2. ' ,' → logprob: -9.37511920928955
    3. ')' → logprob: -10.50011920928955
    4. ':' → logprob: -12.12511920928955
    5. ',int' → logprob: -14.75011920928955
    6. 'to' → logprob: -15.75011920928955
    7. ',
' → logprob: -16.375118255615234
    8. ',node' → logprob: -16.625118255615234
    9. ',to' → logprob: -16.875118255615234
    10. '   ' → logprob: -16.875118255615234

Token 67: ' goal' (ID: 8583)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.22551783919334412
    2. ' end' → logprob: -1.6005178689956665
    3. 'goal' → logprob: -9.725518226623535
    4. ')' → logprob: -10.725518226623535
    5. ' goal' → logprob: -11.725518226623535
    6. ' ' → logprob: -12.475518226623535
    7. '[end' → logprob: -12.850518226623535
    8. 'to' → logprob: -13.225518226623535
    9. '   ' → logprob: -13.725518226623535
    10. '	end' → logprob: -13.725518226623535

Token 68: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -2.6776029699249193e-05
    2. ':int' → logprob: -11.25002670288086
    3. ')' → logprob: -11.37502670288086
    4. '):' → logprob: -13.25002670288086
    5. 'int' → logprob: -15.75002670288086
    6. ' :' → logprob: -16.25002670288086
    7. ',' → logprob: -16.75002670288086
    8. '```' → logprob: -16.75002670288086
    9. '<int' → logprob: -17.00002670288086
    10. '_node' → logprob: -17.12502670288086

Token 69: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.5233020186424255
    2. 'int' → logprob: -0.8983020186424255
    3. 'Optional' → logprob: -9.52330207824707
    4. ')' → logprob: -10.27330207824707
    5. ' Optional' → logprob: -10.39830207824707
    6. ' ' → logprob: -11.14830207824707
    7. ':int' → logprob: -11.77330207824707
    8. '[int' → logprob: -11.77330207824707
    9. '<int' → logprob: -13.27330207824707
    10. '  ' → logprob: -13.39830207824707

Token 70: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.759734732331708e-05
    2. ' )' → logprob: -11.250017166137695
    3. ',' → logprob: -12.750017166137695
    4. '   ' → logprob: -14.375017166137695
    5. '`)' → logprob: -14.625017166137695
    6. ':' → logprob: -14.875017166137695
    7. '```' → logprob: -16.250017166137695
    8. ',)' → logprob: -16.375017166137695
    9. '")' → logprob: -17.375017166137695
    10. ' ' → logprob: -17.500017166137695

Token 71: ' ->' (ID: 2747)
  Prédit: '->'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '->' → logprob: -0.7300248742103577
    2. ')' → logprob: -1.355024814605713
    3. ' ->' → logprob: -1.355024814605713
    4. ')->' → logprob: -6.230024814605713
    5. ':' → logprob: -9.355025291442871
    6. ' ' → logprob: -9.730025291442871
    7. ' )' → logprob: -10.105025291442871
    8. '   ' → logprob: -10.605025291442871
    9. ',' → logprob: -11.730025291442871
    10. '```' → logprob: -11.855025291442871

Token 72: ' Optional' (ID: 19351)
  Prédit: ' Optional'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Optional' → logprob: -0.5307918190956116
    2. 'Optional' → logprob: -1.0307917594909668
    3. 'List' → logprob: -3.530791759490967
    4. ' List' → logprob: -3.655791759490967
    5. '	Optional' → logprob: -11.655792236328125
    6. ' ' → logprob: -13.280792236328125
    7. '   ' → logprob: -13.530792236328125
    8. '	List' → logprob: -14.530792236328125
    9. '  ' → logprob: -14.905792236328125
    10. 'Opt' → logprob: -15.280792236328125

Token 73: '[int' (ID: 40124)
  Prédit: '[List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[List' → logprob: -0.018159663304686546
    2. '[' → logprob: -4.018159866333008
    3. '[int' → logprob: -12.518159866333008
    4. '[
' → logprob: -12.893159866333008
    5. 'List' → logprob: -13.143159866333008
    6. '[str' → logprob: -14.268159866333008
    7. '[list' → logprob: -14.393159866333008
    8. '<List' → logprob: -16.643159866333008
    9. '[[' → logprob: -16.768159866333008
    10. ' [' → logprob: -17.018159866333008

Token 74: ']:
' (ID: 22152)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.004554015584290028
    2. ')' → logprob: -5.75455379486084
    3. ':' → logprob: -6.62955379486084
    4. '):
' → logprob: -10.50455379486084
    5. ' ):' → logprob: -11.12955379486084
    6. '   ' → logprob: -12.00455379486084
    7. ' ' → logprob: -13.12955379486084
    8. '):
' → logprob: -13.87955379486084
    9. '```' → logprob: -14.25455379486084
    10. ''):' → logprob: -14.75455379486084

Token 75: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6312861442565918
    2. '       ' → logprob: -1.2562861442565918
    3. '   ' → logprob: -2.006286144256592
    4. '<|end|>' → logprob: -3.256286144256592
    5. ' :' → logprob: -6.131286144256592
    6. '):' → logprob: -6.256286144256592
    7. ':
' → logprob: -6.506286144256592
    8. '
' → logprob: -6.631286144256592
    9. '```' → logprob: -7.881286144256592
    10. '<|end|>' → logprob: -7.881286144256592

Token 76: ' ...


' (ID: 199673)
  Prédit: '...'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '...' → logprob: -0.021625321358442307
    2. '       ' → logprob: -3.896625280380249
    3. ' ...' → logprob: -6.896625518798828
    4. '   ' → logprob: -10.271625518798828
    5. '...
' → logprob: -10.896625518798828
    6. '<|end|>' → logprob: -11.396625518798828
    7. '...\' → logprob: -13.021625518798828
    8. '…' → logprob: -13.396625518798828
    9. '...

' → logprob: -14.521625518798828
    10. '```' → logprob: -14.521625518798828

Token 77: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.00013035668234806508
    2. '
' → logprob: -9.000130653381348
    3. ' class' → logprob: -12.500130653381348
    4. '```' → logprob: -13.000130653381348
    5. 'c' → logprob: -15.000130653381348
    6. '

' → logprob: -15.875130653381348
    7. '<class' → logprob: -15.875130653381348
    8. ' 
' → logprob: -16.50012969970703
    9. 'clas' → logprob: -16.62512969970703
    10. '"class' → logprob: -16.75012969970703

Token 78: ' Directed' (ID: 126065)
  Prédit: ' Graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Graph' → logprob: -0.6111663579940796
    2. ' ' → logprob: -0.8611663579940796
    3. 'Graph' → logprob: -4.361166477203369
    4. ' Ad' → logprob: -5.486166477203369
    5. ' D' → logprob: -5.611166477203369
    6. ' Directed' → logprob: -5.736166477203369
    7. ' Weighted' → logprob: -5.736166477203369
    8. ' Simple' → logprob: -6.236166477203369
    9. ' My' → logprob: -6.486166477203369
    10. 'Adj' → logprob: -7.611166477203369

Token 79: 'Graph' (ID: 9922)
  Prédit: 'Graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Graph' → logprob: -0.0003497666330076754
    2. 'A' → logprob: -8.125349998474121
    3. 'Weighted' → logprob: -9.875349998474121
    4. 'graph' → logprob: -13.875349998474121
    5. ' graph' → logprob: -14.625349998474121
    6. 'Graphs' → logprob: -15.125349998474121
    7. ' Graph' → logprob: -15.250349998474121
    8. 'Ac' → logprob: -17.000349044799805
    9. ' ac' → logprob: -17.000349044799805
    10. '_graph' → logprob: -17.250349044799805

Token 80: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -3.166338137816638e-05
    2. ':
' → logprob: -10.875031471252441
    3. ' :' → logprob: -12.125031471252441
    4. '):' → logprob: -12.375031471252441
    5. '():' → logprob: -14.000031471252441
    6. '(' → logprob: -14.375031471252441
    7. ':**' → logprob: -14.375031471252441
    8. '```' → logprob: -15.250031471252441
    9. '<|end|>' → logprob: -15.750031471252441
    10. ':

' → logprob: -16.000032424926758

Token 81: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004798565059900284
    2. '    
' → logprob: -5.754798412322998
    3. '    ' → logprob: -8.129798889160156
    4. '
' → logprob: -8.254798889160156
    5. 'def' → logprob: -8.629798889160156
    6. ' def' → logprob: -8.629798889160156
    7. ':' → logprob: -8.629798889160156
    8. '```' → logprob: -8.754798889160156
    9. '<|end|>' → logprob: -8.879798889160156
    10. ' 
' → logprob: -9.879798889160156

Token 82: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.31327077746391296
    2. ' def' → logprob: -1.3132708072662354
    3. '   ' → logprob: -11.688270568847656
    4. ' ' → logprob: -15.438270568847656
    5. 'de' → logprob: -15.438270568847656
    6. '_def' → logprob: -16.438270568847656
    7. '  ' → logprob: -17.063270568847656
    8. '	def' → logprob: -17.188270568847656
    9. '__' → logprob: -17.438270568847656
    10. '    ' → logprob: -17.813270568847656

Token 83: ' __' (ID: 2516)
  Prédit: 'it'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.5347408652305603
    2. ' __' → logprob: -1.909740924835205
    3. 'nit' → logprob: -2.409740924835205
    4. 't' → logprob: -2.534740924835205
    5. '__' → logprob: -3.409740924835205
    6. ' def' → logprob: -4.034740924835205
    7. 'def' → logprob: -4.159740924835205
    8. 'init' → logprob: -4.409740924835205
    9. '_' → logprob: -5.159740924835205
    10. ' _' → logprob: -5.534740924835205

Token 84: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -1.9361264946837764e-07
    2. ' init' → logprob: -16.75
    3. 'inite' → logprob: -17.0
    4. 'ini' → logprob: -18.0
    5. '_init' → logprob: -18.75
    6. '	init' → logprob: -19.0
    7. '```' → logprob: -19.125
    8. 'in' → logprob: -19.375
    9. 'nit' → logprob: -19.875
    10. 'innit' → logprob: -20.0

Token 85: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.006856266409158707
    2. '(' → logprob: -5.506856441497803
    3. '(self' → logprob: -6.131856441497803
    4. '__(
' → logprob: -7.881856441497803
    5. '__' → logprob: -9.131855964660645
    6. '_(' → logprob: -9.756855964660645
    7. 'self' → logprob: -11.631855964660645
    8. '__((' → logprob: -11.631855964660645
    9. ')(' → logprob: -11.881855964660645
    10. '<>(' → logprob: -12.006855964660645

Token 86: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -8.756989700486884e-05
    2. ' self' → logprob: -10.00008773803711
    3. ')' → logprob: -10.12508773803711
    4. '
' → logprob: -14.37508773803711
    5. '   ' → logprob: -14.37508773803711
    6. ' ' → logprob: -14.62508773803711
    7. '(self' → logprob: -16.37508773803711
    8. '	self' → logprob: -16.50008773803711
    9. '):
' → logprob: -16.62508773803711
    10. '0' → logprob: -17.00008773803711

Token 87: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06478781998157501
    2. '):' → logprob: -2.8147878646850586
    3. ')' → logprob: -6.314787864685059
    4. 'self' → logprob: -7.064787864685059
    5. ' ,' → logprob: -9.814787864685059
    6. '):
' → logprob: -9.939787864685059
    7. ' ):' → logprob: -11.314787864685059
    8. ' self' → logprob: -11.939787864685059
    9. ' ' → logprob: -12.314787864685059
    10. '(self' → logprob: -12.564787864685059

Token 88: ' num' (ID: 2269)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.22061632573604584
    2. ')' → logprob: -2.595616340637207
    3. '   ' → logprob: -3.095616340637207
    4. 'num' → logprob: -3.470616340637207
    5. ' self' → logprob: -3.970616340637207
    6. '):
' → logprob: -4.345616340637207
    7. 'n' → logprob: -4.470616340637207
    8. ' num' → logprob: -6.720616340637207
    9. ' ' → logprob: -7.220616340637207
    10. '):' → logprob: -7.470616340637207

Token 89: '_nodes' (ID: 34593)
  Prédit: '_nodes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_nodes' → logprob: -0.013639887794852257
    2. '_' → logprob: -4.7636399269104
    3. '_vertices' → logprob: -5.5136399269104
    4. '_edges' → logprob: -7.0136399269104
    5. '_n' → logprob: -10.263639450073242
    6. ' _' → logprob: -12.013639450073242
    7. '_users' → logprob: -12.138639450073242
    8. '_neighbors' → logprob: -12.138639450073242
    9. '_
' → logprob: -12.513639450073242
    10. '_tokens' → logprob: -12.638639450073242

Token 90: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002080432139337063
    2. '):' → logprob: -6.25208044052124
    3. ':int' → logprob: -9.627079963684082
    4. ')' → logprob: -9.877079963684082
    5. ' ):' → logprob: -10.877079963684082
    6. ' :' → logprob: -11.252079963684082
    7. ' )' → logprob: -13.877079963684082
    8. '}:' → logprob: -14.627079963684082
    9. '):
' → logprob: -14.627079963684082
    10. ',' → logprob: -15.127079963684082

Token 91: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.31327494978904724
    2. ' int' → logprob: -1.3132749795913696
    3. '   ' → logprob: -11.688275337219238
    4. ':int' → logprob: -13.438275337219238
    5. 'self' → logprob: -14.188275337219238
    6. ')' → logprob: -14.563275337219238
    7. ' ' → logprob: -14.563275337219238
    8. '	int' → logprob: -14.813275337219238
    9. ',int' → logprob: -15.063275337219238
    10. '=int' → logprob: -15.313275337219238

Token 92: ')' (ID: 8)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.030587313696742058
    2. ')' → logprob: -3.5305871963500977
    3. '):
' → logprob: -7.280587196350098
    4. ':' → logprob: -9.405587196350098
    5. ' ):' → logprob: -9.905587196350098
    6. ',' → logprob: -12.155587196350098
    7. '):
' → logprob: -12.405587196350098
    8. '   ' → logprob: -12.780587196350098
    9. ' )' → logprob: -13.030587196350098
    10. '}:' → logprob: -14.655587196350098

Token 93: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0008247529622167349
    2. '):' → logprob: -7.125824928283691
    3. ')' → logprob: -12.000824928283691
    4. ':
' → logprob: -12.625824928283691
    5. ' :' → logprob: -13.125824928283691
    6. '():' → logprob: -13.250824928283691
    7. ':def' → logprob: -13.500824928283691
    8. ',' → logprob: -13.875824928283691
    9. ':void' → logprob: -14.000824928283691
    10. '}:' → logprob: -14.125824928283691

Token 94: ' None' (ID: 4662)
  Prédit: ' None'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' None' → logprob: -0.011048408225178719
    2. 'None' → logprob: -4.511048316955566
    3. ' ' → logprob: -14.261048316955566
    4. '   ' → logprob: -17.636049270629883
    5. '  ' → logprob: -19.386049270629883
    6. '_None' → logprob: -19.636049270629883
    7. ' ' → logprob: -20.011049270629883
    8. ')' → logprob: -20.386049270629883
    9. ' none' → logprob: -21.011049270629883
    10. '(None' → logprob: -21.636049270629883

Token 95: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0020656839478760958
    2. ':
' → logprob: -6.252065658569336
    3. '):' → logprob: -9.002065658569336
    4. '):
' → logprob: -12.377065658569336
    5. '       ' → logprob: -12.502065658569336
    6. '   ' → logprob: -13.127065658569336
    7. ')' → logprob: -13.627065658569336
    8. ',' → logprob: -14.252065658569336
    9. ':def' → logprob: -14.377065658569336
    10. '<|end|>' → logprob: -15.127065658569336

Token 96: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007012377609498799
    2. 'self' → logprob: -7.375701427459717
    3. '   ' → logprob: -10.125700950622559
    4. ' self' → logprob: -10.375700950622559
    5. '      ' → logprob: -14.375700950622559
    6. '    ' → logprob: -14.500700950622559
    7. '```' → logprob: -14.625700950622559
    8. '     ' → logprob: -15.125700950622559
    9. '	   ' → logprob: -15.250700950622559
    10. ' ' → logprob: -15.750700950622559

Token 97: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.13477057218551636
    2. ' self' → logprob: -2.384770631790161
    3. '       ' → logprob: -3.384770631790161
    4. '   ' → logprob: -9.384770393371582
    5. '	self' → logprob: -12.759770393371582
    6. ' ' → logprob: -14.134770393371582
    7. 'super' → logprob: -15.509770393371582
    8. '      ' → logprob: -16.7597713470459
    9. '(self' → logprob: -16.7597713470459
    10. '	' → logprob: -17.0097713470459

Token 98: '.num' (ID: 19403)
  Prédit: '._'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.6584980487823486
    2. '.' → logprob: -0.7834980487823486
    3. '.nodes' → logprob: -4.2834978103637695
    4. '.edges' → logprob: -5.2834978103637695
    5. '.num' → logprob: -5.5334978103637695
    6. ' .' → logprob: -6.4084978103637695
    7. '.graph' → logprob: -7.6584978103637695
    8. '.data' → logprob: -8.90849781036377
    9. '.n' → logprob: -9.03349781036377
    10. '.vertices' → logprob: -9.28349781036377

Token 99: '_nodes' (ID: 34593)
  Prédit: '_nodes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_nodes' → logprob: -2.951771421066951e-05
    2. '_' → logprob: -11.125029563903809
    3. ' _' → logprob: -11.625029563903809
    4. 's' → logprob: -13.625029563903809
    5. '_edges' → logprob: -14.000029563903809
    6. '_n' → logprob: -14.250029563903809
    7. '_tokens' → logprob: -14.250029563903809
    8. '```' → logprob: -14.625029563903809
    9. 'nodes' → logprob: -15.125029563903809
    10. '_users' → logprob: -15.250029563903809

Token 100: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22556942701339722
    2. '=' → logprob: -1.600569486618042
    3. ':' → logprob: -9.225569725036621
    4. ' ' → logprob: -10.225569725036621
    5. '=int' → logprob: -11.600569725036621
    6. ')' → logprob: -12.600569725036621
    7. '  ' → logprob: -12.975569725036621
    8. ':int' → logprob: -13.225569725036621
    9. '   ' → logprob: -13.475569725036621
    10. '<|end|>' → logprob: -13.725569725036621

Token 101: ' num' (ID: 2269)
  Prédit: ' num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' num' → logprob: -0.20141343772411346
    2. 'num' → logprob: -1.7014133930206299
    3. '	num' → logprob: -16.451414108276367
    4. '(num' → logprob: -17.201414108276367
    5. '=num' → logprob: -18.076414108276367
    6. '   ' → logprob: -18.201414108276367
    7. ' ' → logprob: -18.326414108276367
    8. '[num' → logprob: -18.701414108276367
    9. '0' → logprob: -19.201414108276367
    10. '$num' → logprob: -19.326414108276367

Token 102: '_nodes' (ID: 34593)
  Prédit: '_nodes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_nodes' → logprob: -0.00011760921915993094
    2. 'odes' → logprob: -9.125117301940918
    3. '_' → logprob: -11.750117301940918
    4. ' _' → logprob: -15.750117301940918
    5. 's' → logprob: -15.875117301940918
    6. 'o' → logprob: -16.250118255615234
    7. 'ode' → logprob: -16.250118255615234
    8. '_node' → logprob: -17.000118255615234
    9. '```' → logprob: -17.125118255615234
    10. 'nodes' → logprob: -17.375118255615234

Token 103: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005364707321859896
    2. 'self' → logprob: -7.6255364418029785
    3. ' self' → logprob: -10.125536918640137
    4. '   ' → logprob: -12.500536918640137
    5. '
' → logprob: -12.875536918640137
    6. ',' → logprob: -13.500536918640137
    7. '<|end|>' → logprob: -15.875536918640137
    8. ' ' → logprob: -16.00053596496582
    9. '	self' → logprob: -16.25053596496582
    10. '      ' → logprob: -16.62553596496582

Token 104: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00027468299958854914
    2. 'self' → logprob: -8.375274658203125
    3. ' self' → logprob: -10.500274658203125
    4. '   ' → logprob: -11.625274658203125
    5. ',' → logprob: -12.375274658203125
    6. '
' → logprob: -13.125274658203125
    7. '<|end|>' → logprob: -15.000274658203125
    8. ' ' → logprob: -15.500274658203125
    9. '      ' → logprob: -15.750274658203125
    10. '```' → logprob: -15.875274658203125

Token 105: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.1394950896501541
    2. ' self' → logprob: -2.2644951343536377
    3. '       ' → logprob: -3.6394951343536377
    4. '   ' → logprob: -10.139494895935059
    5. ' ' → logprob: -11.889494895935059
    6. '	self' → logprob: -12.139494895935059
    7. '      ' → logprob: -14.639494895935059
    8. '[self' → logprob: -14.764494895935059
    9. '  ' → logprob: -14.889494895935059
    10. '(self' → logprob: -15.264494895935059

Token 106: '.ad' (ID: 19775)
  Prédit: '.edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.edges' → logprob: -0.6760570406913757
    2. '._' → logprob: -0.9260570406913757
    3. ' .' → logprob: -3.5510571002960205
    4. '.ad' → logprob: -3.9260571002960205
    5. '_edges' → logprob: -4.051056861877441
    6. '.graph' → logprob: -4.176056861877441
    7. '.' → logprob: -5.051056861877441
    8. 'edges' → logprob: -6.426056861877441
    9. '_adj' → logprob: -6.676056861877441
    10. '_ad' → logprob: -6.801056861877441

Token 107: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0067287529818713665
    2. 'jac' → logprob: -5.006728649139404
    3. 'js' → logprob: -12.881729125976562
    4. '
' → logprob: -13.006729125976562
    5. 'ja' → logprob: -13.006729125976562
    6. '```' → logprob: -13.131729125976562
    7. 'jc' → logprob: -13.881729125976562
    8. 'acency' → logprob: -14.506729125976562
    9. '[j' → logprob: -14.756729125976562
    10. '

' → logprob: -15.006729125976562

Token 108: '_list' (ID: 4162)
  Prédit: 'acency'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acency' → logprob: -0.17829112708568573
    2. '_list' → logprob: -1.9282910823822021
    3. '=' → logprob: -4.428291320800781
    4. ' =' → logprob: -5.678291320800781
    5. 'list' → logprob: -6.178291320800781
    6. 'List' → logprob: -8.803291320800781
    7. '_lists' → logprob: -8.928291320800781
    8. 'acent' → logprob: -9.553291320800781
    9. '_' → logprob: -10.678291320800781
    10. ':' → logprob: -10.678291320800781

Token 109: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16051524877548218
    2. ':' → logprob: -2.035515308380127
    3. '=' → logprob: -4.035515308380127
    4. ' :' → logprob: -12.660514831542969
    5. ' ' → logprob: -14.535514831542969
    6. '=[]' → logprob: -14.660514831542969
    7. 's' → logprob: -15.160514831542969
    8. '[' → logprob: -15.410514831542969
    9. ')' → logprob: -15.785514831542969
    10. '```' → logprob: -15.785514831542969

Token 110: ' Dict' (ID: 55179)
  Prédit: 'Dict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Dict' → logprob: -0.08067883551120758
    2. 'List' → logprob: -2.580678939819336
    3. ' Dict' → logprob: -6.580678939819336
    4. ' List' → logprob: -7.830678939819336
    5. 'Default' → logprob: -13.705678939819336
    6. 'dict' → logprob: -13.830678939819336
    7. '[List' → logprob: -14.330678939819336
    8. '   ' → logprob: -15.580678939819336
    9. '	List' → logprob: -15.955678939819336
    10. ' dict' → logprob: -16.205678939819336

Token 111: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -1.5332478142227046e-05
    2. '<int' → logprob: -11.625015258789062
    3. '[' → logprob: -12.500015258789062
    4. '[in' → logprob: -14.000015258789062
    5. 'int' → logprob: -14.375015258789062
    6. '[Int' → logprob: -14.750015258789062
    7. '[
' → logprob: -15.000015258789062
    8. '[i' → logprob: -16.125015258789062
    9. ']int' → logprob: -16.125015258789062
    10. '(int' → logprob: -16.750015258789062

Token 112: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.65101717156358e-05
    2. ',List' → logprob: -9.250096321105957
    3. ' ,' → logprob: -15.250096321105957
    4. '[List' → logprob: -16.250097274780273
    5. 'List' → logprob: -18.250097274780273
    6. ',
' → logprob: -19.125097274780273
    7. ' ' → logprob: -19.375097274780273
    8. '   ' → logprob: -19.875097274780273
    9. ',list' → logprob: -20.125097274780273
    10. '```' → logprob: -21.125097274780273

Token 113: ' List' (ID: 2655)
  Prédit: ' List'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' List' → logprob: -0.055042851716279984
    2. 'List' → logprob: -2.9300427436828613
    3. '	List' → logprob: -9.05504322052002
    4. ' ' → logprob: -10.30504322052002
    5. '[List' → logprob: -12.55504322052002
    6. '   ' → logprob: -12.93004322052002
    7. ' list' → logprob: -14.18004322052002
    8. 'list' → logprob: -14.30504322052002
    9. '  ' → logprob: -14.55504322052002
    10. '<List' → logprob: -14.80504322052002

Token 114: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.5048530030981055e-06
    2. '[
' → logprob: -14.625001907348633
    3. ']' → logprob: -15.000001907348633
    4. '   ' → logprob: -15.500001907348633
    5. '[List' → logprob: -15.625001907348633
    6. '[int' → logprob: -16.000001907348633
    7. '<Tuple' → logprob: -16.750001907348633
    8. 'Tuple' → logprob: -17.000001907348633
    9. '[(' → logprob: -17.750001907348633
    10. '       ' → logprob: -18.125001907348633

Token 115: 'Tuple' (ID: 40048)
  Prédit: 'Tuple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tuple' → logprob: -3.6550729419104755e-05
    2. ' Tuple' → logprob: -10.250036239624023
    3. 'Tu' → logprob: -14.375036239624023
    4. '   ' → logprob: -15.000036239624023
    5. '[' → logprob: -16.125036239624023
    6. '.Tuple' → logprob: -17.750036239624023
    7. '<Tuple' → logprob: -18.375036239624023
    8. ' ' → logprob: -18.750036239624023
    9. '  ' → logprob: -19.125036239624023
    10. ']' → logprob: -19.125036239624023

Token 116: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -3.128163257315464e-07
    2. 'int' → logprob: -15.25
    3. '(int' → logprob: -17.75
    4. ',int' → logprob: -20.125
    5. ' int' → logprob: -20.5
    6. '[' → logprob: -20.75
    7. '[Int' → logprob: -20.875
    8. '<int' → logprob: -20.875
    9. ']int' → logprob: -20.875
    10. '[
' → logprob: -21.25

Token 117: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008659947663545609
    2. ',int' → logprob: -4.758659839630127
    3. '[int' → logprob: -10.633660316467285
    4. ' ,' → logprob: -11.258660316467285
    5. 'int' → logprob: -11.883660316467285
    6. '
' → logprob: -15.508660316467285
    7. '```' → logprob: -15.508660316467285
    8. ',float' → logprob: -15.633660316467285
    9. 'import' → logprob: -15.758660316467285
    10. ',
' → logprob: -15.758660316467285

Token 118: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.048615749925374985
    2. ' int' → logprob: -3.0486156940460205
    3. '[int' → logprob: -11.173615455627441
    4. ']int' → logprob: -11.923615455627441
    5. '	int' → logprob: -12.798615455627441
    6. '<int' → logprob: -13.548615455627441
    7. ' ' → logprob: -14.048615455627441
    8. ',int' → logprob: -14.048615455627441
    9. '(int' → logprob: -14.173615455627441
    10. '   ' → logprob: -14.798615455627441

Token 119: ']]]' (ID: 198030)
  Prédit: ']]]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']]]' → logprob: -9.043078898685053e-05
    2. ']]' → logprob: -9.750090599060059
    3. ']' → logprob: -10.375090599060059
    4. ' ]' → logprob: -14.750090599060059
    5. ']])' → logprob: -15.750090599060059
    6. '])]' → logprob: -15.750090599060059
    7. '>' → logprob: -16.375089645385742
    8. '```' → logprob: -16.750089645385742
    9. '[' → logprob: -17.000089645385742
    10. '   ' → logprob: -17.000089645385742

Token 120: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759406089782715
    2. '=' → logprob: -0.8259406089782715
    3. ' ' → logprob: -13.82594108581543
    4. '=[]' → logprob: -15.82594108581543
    5. ')' → logprob: -18.82594108581543
    6. '={}' → logprob: -18.82594108581543
    7. ']' → logprob: -18.95094108581543
    8. '＝' → logprob: -18.95094108581543
    9. '   ' → logprob: -19.45094108581543
    10. '  ' → logprob: -20.20094108581543

Token 121: ' {' (ID: 354)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.3954020142555237
    2. '{}' → logprob: -1.395401954650879
    3. ' {' → logprob: -2.645401954650879
    4. ' {}' → logprob: -4.895401954650879
    5. ' defaultdict' → logprob: -8.395401954650879
    6. 'default' → logprob: -9.145401954650879
    7. 'dict' → logprob: -9.770401954650879
    8. ' dict' → logprob: -12.895401954650879
    9. 'collections' → logprob: -13.145401954650879
    10. ' ' → logprob: -13.145401954650879

Token 122: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.014682854525744915
    2. 'node' → logprob: -4.264682769775391
    3. ' i' → logprob: -8.26468276977539
    4. ' node' → logprob: -8.26468276977539
    5. '   ' → logprob: -12.88968276977539
    6. 'n' → logprob: -14.26468276977539
    7. 'k' → logprob: -15.01468276977539
    8. '       ' → logprob: -16.01468276977539
    9. '}' → logprob: -16.01468276977539
    10. '	node' → logprob: -16.26468276977539

Token 123: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -4.723352049040841e-06
    2. ' :' → logprob: -13.000004768371582
    3. ':i' → logprob: -13.000004768371582
    4. ':list' → logprob: -17.250003814697266
    5. 'for' → logprob: -17.500003814697266
    6. ':index' → logprob: -17.750003814697266
    7. ' for' → logprob: -17.750003814697266
    8. ':{}' → logprob: -17.875003814697266
    9. ':int' → logprob: -19.250003814697266
    10. ':
' → logprob: -19.250003814697266

Token 124: ' []' (ID: 6126)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.47409164905548096
    2. ' []' → logprob: -0.974091649055481
    3. '[]}' → logprob: -11.224091529846191
    4. ' ' → logprob: -15.099091529846191
    5. '[]
' → logprob: -15.099091529846191
    6. '[])' → logprob: -15.599091529846191
    7. '[]>' → logprob: -15.724091529846191
    8. ' []
' → logprob: -15.849091529846191
    9. ' [])' → logprob: -16.099092483520508
    10. '[]

' → logprob: -16.599092483520508

Token 125: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.002822231501340866
    2. 'for' → logprob: -5.877822399139404
    3. ' ' → logprob: -11.002821922302246
    4. '	for' → logprob: -14.377821922302246
    5. '}' → logprob: -16.877822875976562
    6. '   ' → logprob: -17.752822875976562
    7. '  ' → logprob: -17.752822875976562
    8. '
' → logprob: -18.252822875976562
    9. '    ' → logprob: -18.252822875976562
    10. ',' → logprob: -18.752822875976562

Token 126: ' i' (ID: 575)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.008462452329695225
    2. 'range' → logprob: -5.258462429046631
    3. ' i' → logprob: -5.758462429046631
    4. 'i' → logprob: -9.633462905883789
    5. '(range' → logprob: -13.883462905883789
    6. '	range' → logprob: -14.883462905883789
    7. ' ' → logprob: -15.383462905883789
    8. ' in' → logprob: -15.633462905883789
    9. '_range' → logprob: -16.13346290588379
    10. 'Range' → logprob: -16.25846290588379

Token 127: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04133198782801628
    2. ' range' → logprob: -3.5413320064544678
    3. 'range' → logprob: -4.666331768035889
    4. 'in' → logprob: -6.166331768035889
    5. ' ' → logprob: -12.666332244873047
    6. '(range' → logprob: -13.291332244873047
    7. ' i' → logprob: -13.916332244873047
    8. 'Range' → logprob: -14.291332244873047
    9. '_range' → logprob: -14.291332244873047
    10. '<|end|>' → logprob: -14.791332244873047

Token 128: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.01815006136894226
    2. 'range' → logprob: -4.0181498527526855
    3. '	range' → logprob: -16.643150329589844
    4. '(range' → logprob: -17.018150329589844
    5. ' ' → logprob: -18.768150329589844
    6. 'Range' → logprob: -19.018150329589844
    7. '
' → logprob: -19.143150329589844
    8. '```' → logprob: -19.768150329589844
    9. '_range' → logprob: -20.018150329589844
    10. '   ' → logprob: -20.393150329589844

Token 129: '(' (ID: 7)
  Prédit: '(num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(num' → logprob: -0.007370930630713701
    2. '(self' → logprob: -5.132370948791504
    3. '(' → logprob: -6.632370948791504
    4. ' (' → logprob: -9.632370948791504
    5. 'num' → logprob: -10.382370948791504
    6. ' num' → logprob: -11.132370948791504
    7. '(
' → logprob: -12.757370948791504
    8. '<|end|>' → logprob: -12.882370948791504
    9. ' self' → logprob: -13.257370948791504
    10. 'self' → logprob: -13.757370948791504

Token 130: '1' (ID: 16)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.20728799700737
    2. ' num' → logprob: -1.7072880268096924
    3. 'self' → logprob: -5.457287788391113
    4. ' self' → logprob: -6.457287788391113
    5. '   ' → logprob: -11.957287788391113
    6. '	num' → logprob: -11.957287788391113
    7. '(num' → logprob: -12.207287788391113
    8. ' ' → logprob: -12.957287788391113
    9. ',num' → logprob: -14.207287788391113
    10. '=num' → logprob: -14.957287788391113

Token 131: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0025946807581931353
    2. ' ,' → logprob: -6.002594470977783
    3. ',num' → logprob: -9.502594947814941
    4. ',self' → logprob: -10.752594947814941
    5. ' ' → logprob: -11.502594947814941
    6. '1' → logprob: -11.752594947814941
    7. ',
' → logprob: -13.752594947814941
    8. 'self' → logprob: -14.002594947814941
    9. '

' → logprob: -14.377594947814941
    10. '(self' → logprob: -14.502594947814941

Token 132: ' num' (ID: 2269)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.008947220630943775
    2. ' num' → logprob: -4.883947372436523
    3. 'self' → logprob: -6.633947372436523
    4. ' self' → logprob: -10.758947372436523
    5. ' ' → logprob: -13.508947372436523
    6. '
' → logprob: -13.758947372436523
    7. '	num' → logprob: -14.883947372436523
    8. '   ' → logprob: -15.133947372436523
    9. '=num' → logprob: -15.508947372436523
    10. '```' → logprob: -15.633947372436523

Token 133: '_nodes' (ID: 34593)
  Prédit: '_nodes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_nodes' → logprob: -1.7954958821064793e-05
    2. 'odes' → logprob: -11.875018119812012
    3. '_' → logprob: -12.250018119812012
    4. '+' → logprob: -13.750018119812012
    5. '   ' → logprob: -14.125018119812012
    6. ' _' → logprob: -14.125018119812012
    7. 's' → logprob: -14.250018119812012
    8. '_node' → logprob: -14.500018119812012
    9. '```' → logprob: -14.875018119812012
    10. 'nodes' → logprob: -15.125018119812012

Token 134: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.25192946195602417
    2. ' +' → logprob: -1.501929521560669
    3. ' ' → logprob: -15.75192928314209
    4. '()+' → logprob: -16.251930236816406
    5. '＋' → logprob: -17.876930236816406
    6. ')' → logprob: -17.876930236816406
    7. '+n' → logprob: -18.126930236816406
    8. '```' → logprob: -18.376930236816406
    9. '+i' → logprob: -19.001930236816406
    10. ')+' → logprob: -19.001930236816406

Token 135: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.20141440629959106
    2. ' ' → logprob: -1.7014143466949463
    3. '   ' → logprob: -14.826414108276367
    4. '```' → logprob: -14.826414108276367
    5. ' ' → logprob: -15.826414108276367
    6. '  ' → logprob: -15.951414108276367
    7. '
' → logprob: -16.326414108276367
    8. '

' → logprob: -17.201414108276367
    9. ')' → logprob: -17.763914108276367
    10. '_' → logprob: -18.076414108276367

Token 136: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00012356207298580557
    2. ' ' → logprob: -9.000123977661133
    3. '```' → logprob: -16.625123977661133
    4. '   ' → logprob: -17.000123977661133
    5. '  ' → logprob: -18.750123977661133
    6. '
' → logprob: -18.750123977661133
    7. ')' → logprob: -19.000123977661133
    8. '

' → logprob: -19.437623977661133
    9. '１' → logprob: -20.000123977661133
    10. '۱' → logprob: -20.062623977661133

Token 137: ')}

' (ID: 184554)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '}' → logprob: -0.48708420991897583
    2. ')}' → logprob: -0.9870842099189758
    3. ')' → logprob: -4.61208438873291
    4. '})' → logprob: -5.86208438873291
    5. ' }' → logprob: -8.98708438873291
    6. ' )' → logprob: -12.48708438873291
    7. ' })' → logprob: -12.73708438873291
    8. '}
' → logprob: -12.86208438873291
    9. '}}' → logprob: -12.86208438873291
    10. ');}' → logprob: -13.23708438873291

Token 138: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0745585560798645
    2. '<|end|>' → logprob: -3.1995584964752197
    3. '   ' → logprob: -3.8245584964752197
    4. 'def' → logprob: -5.574558734893799
    5. '    
' → logprob: -6.074558734893799
    6. ' 
' → logprob: -6.949558734893799
    7. '  
' → logprob: -7.199558734893799
    8. '

' → logprob: -7.449558734893799
    9. '<|end|>' → logprob: -8.19955825805664
    10. ' def' → logprob: -8.94955825805664

Token 139: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -9.746380237629637e-05
    2. ' def' → logprob: -9.250097274780273
    3. '   ' → logprob: -13.625097274780273
    4. '
' → logprob: -17.875097274780273
    5. 'de' → logprob: -18.125097274780273
    6. ' ' → logprob: -20.625097274780273
    7. '	def' → logprob: -21.000097274780273
    8. '    
' → logprob: -21.250097274780273
    9. 'd' → logprob: -22.125097274780273
    10. 'Def' → logprob: -22.750097274780273

Token 140: ' add' (ID: 1147)
  Prédit: ' add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' add' → logprob: -0.00026658078422769904
    2. '_add' → logprob: -8.750267028808594
    3. 'add' → logprob: -9.625267028808594
    4. ' ' → logprob: -10.375267028808594
    5. ' def' → logprob: -11.625267028808594
    6. ' _' → logprob: -13.750267028808594
    7. ' ' → logprob: -14.750267028808594
    8. '	add' → logprob: -15.625267028808594
    9. '_' → logprob: -15.875267028808594
    10. ')add' → logprob: -16.500267028808594

Token 141: '_edge' (ID: 43226)
  Prédit: '_edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edge' → logprob: -0.00040528984391130507
    2. '_' → logprob: -7.875405311584473
    3. '_edges' → logprob: -11.000405311584473
    4. '_node' → logprob: -12.625405311584473
    5. '_e' → logprob: -13.500405311584473
    6. ' _' → logprob: -13.500405311584473
    7. '_ed' → logprob: -14.125405311584473
    8. '_line' → logprob: -15.125405311584473
    9. '```' → logprob: -15.625405311584473
    10. '_
' → logprob: -16.000404357910156

Token 142: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0007115975022315979
    2. '(' → logprob: -7.250711441040039
    3. ' (' → logprob: -13.750711441040039
    4. 'self' → logprob: -15.125711441040039
    5. '(
' → logprob: -15.375711441040039
    6. '(s' → logprob: -17.50071144104004
    7. '(sel' → logprob: -18.00071144104004
    8. '(Self' → logprob: -18.37571144104004
    9. '   ' → logprob: -18.75071144104004
    10. ' ' → logprob: -18.75071144104004

Token 143: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003404687449801713
    2. 'self' → logprob: -8.125340461730957
    3. '(self' → logprob: -10.625340461730957
    4. ' ,' → logprob: -11.500340461730957
    5. ',self' → logprob: -12.375340461730957
    6. ')' → logprob: -12.875340461730957
    7. '   ' → logprob: -14.000340461730957
    8. 'from' → logprob: -14.625340461730957
    9. ' self' → logprob: -14.750340461730957
    10. '       ' → logprob: -14.750340461730957

Token 144: ' from' (ID: 591)
  Prédit: ' from'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' from' → logprob: -0.1436793953180313
    2. 'from' → logprob: -2.01867938041687
    3. ' self' → logprob: -7.143679618835449
    4. ' to' → logprob: -9.26867961883545
    5. 'self' → logprob: -9.51867961883545
    6. ' ' → logprob: -10.89367961883545
    7. '<|end|>' → logprob: -11.76867961883545
    8. '	from' → logprob: -11.89367961883545
    9. '    ' → logprob: -12.51867961883545
    10. ' u' → logprob: -12.64367961883545

Token 145: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.00026896485360339284
    2. '_' → logprob: -8.250268936157227
    3. '_nodes' → logprob: -13.000268936157227
    4. '_edge' → logprob: -13.000268936157227
    5. '_n' → logprob: -13.875268936157227
    6. ')_' → logprob: -14.750268936157227
    7. ' _' → logprob: -14.875268936157227
    8. '_Node' → logprob: -15.125268936157227
    9. '```' → logprob: -15.375268936157227
    10. '_NODE' → logprob: -15.625268936157227

Token 146: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0015074820257723331
    2. ' ,' → logprob: -6.50150728225708
    3. ':' → logprob: -12.626507759094238
    4. 'self' → logprob: -14.001507759094238
    5. ',self' → logprob: -14.376507759094238
    6. '   ' → logprob: -15.376507759094238
    7. ',int' → logprob: -16.751506805419922
    8. ' self' → logprob: -17.126506805419922
    9. '‌,' → logprob: -17.376506805419922
    10. '```' → logprob: -17.376506805419922

Token 147: ' int' (ID: 677)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.7164565920829773
    2. ' int' → logprob: -0.9664565920829773
    3. 'int' → logprob: -2.216456651687622
    4. 'to' → logprob: -4.216456413269043
    5. ' from' → logprob: -5.716456413269043
    6. 'from' → logprob: -6.341456413269043
    7. ',' → logprob: -6.466456413269043
    8. '   ' → logprob: -8.466456413269043
    9. ':int' → logprob: -8.716456413269043
    10. ',int' → logprob: -8.966456413269043

Token 148: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.240481914370321e-05
    2. ' ,' → logprob: -9.875052452087402
    3. ',to' → logprob: -14.375052452087402
    4. ',int' → logprob: -16.250051498413086
    5. '‌,' → logprob: -16.500051498413086
    6. ',
' → logprob: -17.125051498413086
    7. '   ' → logprob: -17.250051498413086
    8. 'to' → logprob: -17.500051498413086
    9. '<|end|>' → logprob: -18.250051498413086
    10. ' to' → logprob: -18.750051498413086

Token 149: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.008615515194833279
    2. 'to' → logprob: -4.758615493774414
    3. ',' → logprob: -15.133615493774414
    4. ',to' → logprob: -15.383615493774414
    5. ' ' → logprob: -16.008615493774414
    6. '	to' → logprob: -16.133615493774414
    7. '    ' → logprob: -16.383615493774414
    8. '   ' → logprob: -16.883615493774414
    9. 'To' → logprob: -16.883615493774414
    10. '_to' → logprob: -17.508615493774414

Token 150: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -1.7954958821064793e-05
    2. '_' → logprob: -11.375018119812012
    3. ' _' → logprob: -12.250018119812012
    4. ')_' → logprob: -14.250018119812012
    5. '_Node' → logprob: -15.125018119812012
    6. '_nodes' → logprob: -15.125018119812012
    7. '_NODE' → logprob: -16.000017166137695
    8. '_n' → logprob: -16.000017166137695
    9. '```' → logprob: -16.875017166137695
    10. '_user' → logprob: -17.250017166137695

Token 151: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03831229358911514
    2. ':' → logprob: -3.2883121967315674
    3. ' ,' → logprob: -8.538311958312988
    4. ':int' → logprob: -10.163311958312988
    5. '   ' → logprob: -11.413311958312988
    6. ',int' → logprob: -11.538311958312988
    7. ' :' → logprob: -12.413311958312988
    8. '):' → logprob: -12.913311958312988
    9. ')' → logprob: -13.038311958312988
    10. '```' → logprob: -13.538311958312988

Token 152: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.47412198781967163
    2. 'int' → logprob: -0.9741219878196716
    3. ':int' → logprob: -10.599122047424316
    4. ' ' → logprob: -12.224122047424316
    5. ',int' → logprob: -12.349122047424316
    6. ' to' → logprob: -12.474122047424316
    7. 'to' → logprob: -13.224122047424316
    8. ',' → logprob: -14.099122047424316
    9. '```' → logprob: -14.099122047424316
    10. '=int' → logprob: -14.349122047424316

Token 153: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.967624019831419e-05
    2. ' ,' → logprob: -9.750060081481934
    3. ',int' → logprob: -14.250060081481934
    4. ',
' → logprob: -16.000059127807617
    5. ')' → logprob: -16.125059127807617
    6. ':' → logprob: -16.250059127807617
    7. '   ' → logprob: -16.375059127807617
    8. ' ' → logprob: -16.750059127807617
    9. '‌,' → logprob: -16.875059127807617
    10. '```' → logprob: -16.875059127807617

Token 154: ' cost' (ID: 3097)
  Prédit: ' cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cost' → logprob: -0.005296127405017614
    2. 'cost' → logprob: -5.255296230316162
    3. ' ' → logprob: -9.755295753479004
    4. ' )' → logprob: -13.505295753479004
    5. '_cost' → logprob: -14.005295753479004
    6. ' ' → logprob: -14.380295753479004
    7. ' 
' → logprob: -14.755295753479004
    8. ')' → logprob: -15.255295753479004
    9. '-cost' → logprob: -15.630295753479004
    10. '(cost' → logprob: -15.755295753479004

Token 155: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04947929084300995
    2. '):' → logprob: -3.1744792461395264
    3. ')' → logprob: -5.0494794845581055
    4. '   ' → logprob: -10.549479484558105
    5. '):
' → logprob: -11.924479484558105
    6. ':int' → logprob: -12.174479484558105
    7. ' ):' → logprob: -12.424479484558105
    8. ' )' → logprob: -13.674479484558105
    9. ' ' → logprob: -14.049479484558105
    10. '=' → logprob: -14.424479484558105

Token 156: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.518582820892334
    2. 'int' → logprob: -1.643582820892334
    3. ' )' → logprob: -2.518582820892334
    4. '1' → logprob: -3.018582820892334
    5. ' ' → logprob: -3.018582820892334
    6. ')' → logprob: -3.518582820892334
    7. ':int' → logprob: -6.643582820892334
    8. ' ):' → logprob: -6.643582820892334
    9. ':' → logprob: -8.768583297729492
    10. '   ' → logprob: -8.893583297729492

Token 157: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.38698849081993103
    2. '):' → logprob: -1.1369885206222534
    3. '):
' → logprob: -9.261988639831543
    4. ':' → logprob: -12.261988639831543
    5. ')->' → logprob: -12.261988639831543
    6. '   ' → logprob: -12.511988639831543
    7. ' )' → logprob: -12.511988639831543
    8. '):
' → logprob: -12.636988639831543
    9. ' ):' → logprob: -13.136988639831543
    10. '):

' → logprob: -16.011987686157227

Token 158: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0010943770175799727
    2. ':
' → logprob: -7.126094341278076
    3. '):' → logprob: -8.251094818115234
    4. ')' → logprob: -11.001094818115234
    5. '):
' → logprob: -12.126094818115234
    6. ' :' → logprob: -12.376094818115234
    7. ':def' → logprob: -13.876094818115234
    8. '   ' → logprob: -14.751094818115234
    9. '():' → logprob: -15.251094818115234
    10. ':
' → logprob: -15.626094818115234

Token 159: ' None' (ID: 4662)
  Prédit: ' None'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' None' → logprob: -0.006723771803081036
    2. 'None' → logprob: -5.006723880767822
    3. ' ' → logprob: -11.756723403930664
    4. ' No' → logprob: -15.881723403930664
    5. '_None' → logprob: -16.256723403930664
    6. ' N' → logprob: -16.756723403930664
    7. ' )' → logprob: -17.006723403930664
    8. '   ' → logprob: -17.381723403930664
    9. '(None' → logprob: -17.381723403930664
    10. ')' → logprob: -17.381723403930664

Token 160: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0025192999746650457
    2. ':
' → logprob: -6.002519130706787
    3. '):' → logprob: -10.627519607543945
    4. '       ' → logprob: -11.877519607543945
    5. '):
' → logprob: -11.877519607543945
    6. '   ' → logprob: -13.377519607543945
    7. ':
' → logprob: -13.502519607543945
    8. ':self' → logprob: -14.377519607543945
    9. ':def' → logprob: -14.377519607543945
    10. ' :' → logprob: -14.502519607543945

Token 161: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00024406595912296325
    2. '
' → logprob: -9.000244140625
    3. 'self' → logprob: -10.125244140625
    4. ' self' → logprob: -10.375244140625
    5. '   ' → logprob: -11.375244140625
    6. ':' → logprob: -11.375244140625
    7. '        
' → logprob: -11.625244140625
    8. '```' → logprob: -12.375244140625
    9. '    
' → logprob: -12.625244140625
    10. '      ' → logprob: -13.250244140625

Token 162: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.5279808640480042
    2. 'self' (adapté à ' self') → logprob: -1.2779808044433594
    3. '       ' → logprob: -2.0279808044433594
    4. '	self' → logprob: -13.90298080444336
    5. ' ' → logprob: -14.02798080444336
    6. '   ' → logprob: -14.02798080444336
    7. '        
' → logprob: -14.40298080444336
    8. '
' → logprob: -14.77798080444336
    9. '        ' → logprob: -15.02798080444336
    10. ' ' → logprob: -15.27798080444336

Token 163: '.ad' (ID: 19775)
  Prédit: '.ad'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.ad' → logprob: -0.5763188004493713
    2. '.' → logprob: -0.8263188004493713
    3. ' .' → logprob: -8.076318740844727
    4. '.self' → logprob: -11.326318740844727
    5. '.add' → logprob: -12.326318740844727
    6. '   ' → logprob: -12.326318740844727
    7. '.edges' → logprob: -12.826318740844727
    8. '.Ad' → logprob: -12.951318740844727
    9. ').' → logprob: -13.076318740844727
    10. '.user' → logprob: -13.201318740844727

Token 164: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.01436998788267374
    2. 'd' → logprob: -4.889369964599609
    3. '_list' → logprob: -5.014369964599609
    4. '_' → logprob: -9.51436996459961
    5. '_j' → logprob: -11.51436996459961
    6. 'f' → logprob: -12.63936996459961
    7. 'g' → logprob: -13.01436996459961
    8. '```' → logprob: -13.26436996459961
    9. '_
' → logprob: -13.38936996459961
    10. '_node' → logprob: -13.88936996459961

Token 165: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -5.512236498361744e-07
    2. '_' → logprob: -14.625000953674316
    3. 'list' → logprob: -18.625
    4. 's' → logprob: -19.375
    5. '_lst' → logprob: -19.625
    6. '[_' → logprob: -19.625
    7. '_lists' → logprob: -19.625
    8. '_line' → logprob: -19.75
    9. '_LIST' → logprob: -19.875
    10. ' _' → logprob: -19.875

Token 166: '[from' (ID: 157148)
  Prédit: '[from'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[from' → logprob: -1.5048530030981055e-06
    2. '[to' → logprob: -13.625001907348633
    3. '[' → logprob: -15.250001907348633
    4. '.setdefault' → logprob: -19.750001907348633
    5. 'from' → logprob: -20.375001907348633
    6. '[df' → logprob: -20.375001907348633
    7. '[source' → logprob: -20.500001907348633
    8. ' [' → logprob: -20.750001907348633
    9. '[self' → logprob: -20.750001907348633
    10. '[first' → logprob: -20.875001907348633

Token 167: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -1.2664456789934775e-06
    2. '_' → logprob: -14.125000953674316
    3. '```' → logprob: -16.625001907348633
    4. '_user' → logprob: -17.000001907348633
    5. ')_' → logprob: -17.125001907348633
    6. ' _' → logprob: -17.125001907348633
    7. '_n' → logprob: -17.750001907348633
    8. '_NODE' → logprob: -17.750001907348633
    9. '_code' → logprob: -17.750001907348633
    10. 'node' → logprob: -17.875001907348633

Token 168: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -8.65707261255011e-06
    2. ']' → logprob: -12.250008583068848
    3. '.append' → logprob: -13.125008583068848
    4. '.' → logprob: -14.250008583068848
    5. ' ].' → logprob: -14.500008583068848
    6. ').' → logprob: -15.125008583068848
    7. '}.' → logprob: -15.500008583068848
    8. '   ' → logprob: -16.125009536743164
    9. '       ' → logprob: -18.125009536743164
    10. ''].' → logprob: -18.375009536743164

Token 169: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -4.320199877838604e-07
    2. ' append' → logprob: -15.5
    3. '.append' → logprob: -15.75
    4. 'push' → logprob: -18.375
    5. 'app' → logprob: -19.375
    6. '_append' → logprob: -19.5
    7. 'appen' → logprob: -19.75
    8. '```' → logprob: -20.875
    9. 'Append' → logprob: -21.0
    10. '	append' → logprob: -21.125

Token 170: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.0077011496759951115
    2. '(' → logprob: -5.2577009201049805
    3. '(to' → logprob: -6.0077009201049805
    4. ' (' → logprob: -13.13270092010498
    5. '(To' → logprob: -13.13270092010498
    6. '(
' → logprob: -15.13270092010498
    7. '(t' → logprob: -16.382701873779297
    8. ' ((' → logprob: -17.132701873779297
    9. '(tuple' → logprob: -17.382701873779297
    10. '(('' → logprob: -17.632701873779297

Token 171: 'to' (ID: 935)
  Prédit: 'to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -1.9361264946837764e-07
    2. ' to' → logprob: -16.125
    3. '   ' → logprob: -20.5
    4. '```' → logprob: -22.25
    5. 't' → logprob: -22.75
    6. ' ' → logprob: -23.0
    7. 'toq' → logprob: -23.0
    8. '(to' → logprob: -23.0
    9. ')' → logprob: -23.25
    10. '  ' → logprob: -23.625

Token 172: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -6.034592388459714e-06
    2. 'node' → logprob: -12.125005722045898
    3. '_' → logprob: -15.500005722045898
    4. '_NODE' → logprob: -16.2500057220459
    5. 'Node' → logprob: -16.7500057220459
    6. '_nodes' → logprob: -17.0000057220459
    7. '_user' → logprob: -17.7500057220459
    8. ' node' → logprob: -18.2500057220459
    9. 'to' → logprob: -18.5000057220459
    10. ' _' → logprob: -18.5000057220459

Token 173: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.45848218582978e-06
    2. ' ,' → logprob: -13.00000286102295
    3. ',
' → logprob: -16.750001907348633
    4. '‌,' → logprob: -16.750001907348633
    5. ')' → logprob: -18.250001907348633
    6. '<|end|>' → logprob: -18.375001907348633
    7. '),' → logprob: -18.750001907348633
    8. ',c' → logprob: -18.750001907348633
    9. ',

' → logprob: -19.000001907348633
    10. ',int' → logprob: -19.375001907348633

Token 174: ' cost' (ID: 3097)
  Prédit: ' cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cost' → logprob: -0.038042064756155014
    2. 'cost' → logprob: -3.2880420684814453
    3. '(cost' → logprob: -14.913042068481445
    4. '_cost' → logprob: -16.663042068481445
    5. ' kost' → logprob: -16.788042068481445
    6. ' ' → logprob: -16.788042068481445
    7. '```' → logprob: -17.913042068481445
    8. 'Cost' → logprob: -18.038042068481445
    9. ' 
' → logprob: -18.288042068481445
    10. '    ' → logprob: -18.788042068481445

Token 175: '))

' (ID: 9746)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -4.203409844194539e-05
    2. ')
' → logprob: -10.125041961669922
    3. '))' → logprob: -13.375041961669922
    4. ' )' → logprob: -16.500041961669922
    5. ')

' → logprob: -16.625041961669922
    6. ')}' → logprob: -16.875041961669922
    7. '),' → logprob: -17.125041961669922
    8. '<|end|>' → logprob: -17.250041961669922
    9. ')return' → logprob: -17.375041961669922
    10. ')
' → logprob: -17.625041961669922

Token 176: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.04885667935013771
    2. '   ' → logprob: -3.423856735229492
    3. 'def' → logprob: -4.298856735229492
    4. '    
' → logprob: -7.173856735229492
    5. ' def' → logprob: -8.048856735229492
    6. '```' → logprob: -8.798856735229492
    7. '

' → logprob: -8.923856735229492
    8. '  
' → logprob: -10.173856735229492
    9. ' 
' → logprob: -10.173856735229492
    10. '<|end|>' → logprob: -10.923856735229492

Token 177: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.00010545044642640278
    2. ' def' → logprob: -9.250105857849121
    3. '   ' → logprob: -11.750105857849121
    4. '
' → logprob: -13.500105857849121
    5. '    
' → logprob: -18.375104904174805
    6. 'de' → logprob: -18.500104904174805
    7. '```' → logprob: -18.500104904174805
    8. '

' → logprob: -19.500104904174805
    9. '	def' → logprob: -19.625104904174805
    10. ' ' → logprob: -20.125104904174805

Token 178: ' shortest' (ID: 70564)
  Prédit: ' shortest'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' shortest' → logprob: -0.01031386200338602
    2. ' def' → logprob: -5.385313987731934
    3. 'short' → logprob: -5.385313987731934
    4. '_short' → logprob: -7.635313987731934
    5. 'def' → logprob: -8.510313987731934
    6. ' short' → logprob: -8.510313987731934
    7. 'Shortest' → logprob: -8.885313987731934
    8. ' ' → logprob: -9.885313987731934
    9. 's' → logprob: -12.260313987731934
    10. ' _' → logprob: -12.385313987731934

Token 179: '_path' (ID: 5558)
  Prédit: '_path'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_path' → logprob: -0.000511091377120465
    2. '_' → logprob: -7.625511169433594
    3. '_p' → logprob: -10.875511169433594
    4. ' _' → logprob: -13.375511169433594
    5. '_pat' → logprob: -14.500511169433594
    6. '_paths' → logprob: -15.125511169433594
    7. '_step' → logprob: -15.500511169433594
    8. '_point' → logprob: -15.500511169433594
    9. '_to' → logprob: -15.875511169433594
    10. '_Path' → logprob: -16.000511169433594

Token 180: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -9.674858301877975e-05
    2. '(' → logprob: -9.250096321105957
    3. '(
' → logprob: -14.500096321105957
    4. ' (' → logprob: -17.625097274780273
    5. 'self' → logprob: -17.750097274780273
    6. '(s' → logprob: -18.125097274780273
    7. '   ' → logprob: -19.500097274780273
    8. '(

' → logprob: -20.625097274780273
    9. '(sel' → logprob: -20.750097274780273
    10. ' ' → logprob: -21.625097274780273

Token 181: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006637069745920599
    2. 'self' → logprob: -7.500663757324219
    3. ' ,' → logprob: -9.875663757324219
    4. '(self' → logprob: -10.500663757324219
    5. '       ' → logprob: -11.000663757324219
    6. '   ' → logprob: -11.750663757324219
    7. ',self' → logprob: -13.125663757324219
    8. ' self' → logprob: -13.500663757324219
    9. ',
' → logprob: -13.500663757324219
    10. '
' → logprob: -13.625663757324219

Token 182: ' start' (ID: 1604)
  Prédit: ' start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' start' → logprob: -0.046163227409124374
    2. 'start' → logprob: -3.296163320541382
    3. ' self' → logprob: -5.046163082122803
    4. 'self' → logprob: -6.421163082122803
    5. ' ' → logprob: -10.671163558959961
    6. '   ' → logprob: -12.796163558959961
    7. '       ' → logprob: -14.671163558959961
    8. '  ' → logprob: -14.796163558959961
    9. '    ' → logprob: -14.796163558959961
    10. '	start' → logprob: -14.796163558959961

Token 183: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005773392622359097
    2. ':' → logprob: -7.500577449798584
    3. ' ,' → logprob: -11.125576972961426
    4. '   ' → logprob: -12.500576972961426
    5. ':int' → logprob: -12.500576972961426
    6. ',int' → logprob: -13.375576972961426
    7. 'self' → logprob: -14.500576972961426
    8. '       ' → logprob: -17.375577926635742
    9. ',self' → logprob: -17.375577926635742
    10. ',
' → logprob: -17.500577926635742

Token 184: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.12971904873847961
    2. 'int' → logprob: -2.2547190189361572
    3. ',' → logprob: -4.879719257354736
    4. ' self' → logprob: -5.879719257354736
    5. ' ' → logprob: -6.004719257354736
    6. ' ,' → logprob: -7.004719257354736
    7. 'self' → logprob: -7.379719257354736
    8. ',int' → logprob: -7.379719257354736
    9. ' goal' → logprob: -7.629719257354736
    10. ' end' → logprob: -8.004718780517578

Token 185: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.796184723294573e-06
    2. ' ,' → logprob: -12.125005722045898
    3. '   ' → logprob: -15.875005722045898
    4. ',int' → logprob: -16.0000057220459
    5. ',
' → logprob: -18.2500057220459
    6. ')' → logprob: -18.6250057220459
    7. ',end' → logprob: -20.5000057220459
    8. ' ' → logprob: -21.0000057220459
    9. '```' → logprob: -21.2500057220459
    10. '
' → logprob: -21.3750057220459

Token 186: ' goal' (ID: 8583)
  Prédit: ' goal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' goal' → logprob: -0.01815614476799965
    2. 'goal' → logprob: -4.018156051635742
    3. ' ' → logprob: -12.268156051635742
    4. ' end' → logprob: -14.518156051635742
    5. 'Goal' → logprob: -15.268156051635742
    6. '(goal' → logprob: -15.268156051635742
    7. '  ' → logprob: -16.018156051635742
    8. '_goal' → logprob: -16.268156051635742
    9. '   ' → logprob: -16.268156051635742
    10. 'end' → logprob: -16.518156051635742

Token 187: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0019588442519307137
    2. ')' → logprob: -6.751958847045898
    3. '):' → logprob: -7.251958847045898
    4. ':int' → logprob: -9.501958847045898
    5. ' :' → logprob: -13.251958847045898
    6. '   ' → logprob: -14.126958847045898
    7. '):
' → logprob: -14.251958847045898
    8. '```' → logprob: -14.376958847045898
    9. ' ' → logprob: -14.626958847045898
    10. ' ):' → logprob: -16.0019588470459

Token 188: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0486019104719162
    2. ' int' → logprob: -3.0486018657684326
    3. ')' → logprob: -12.173602104187012
    4. ':int' → logprob: -12.798602104187012
    5. 'Optional' → logprob: -13.048602104187012
    6. '[int' → logprob: -13.673602104187012
    7. ' ' → logprob: -14.173602104187012
    8. ' Optional' → logprob: -14.298602104187012
    9. '(int' → logprob: -14.548602104187012
    10. ' )' → logprob: -14.798602104187012

Token 189: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.4378848391061183e-05
    2. ' )' → logprob: -11.250014305114746
    3. '   ' → logprob: -14.125014305114746
    4. '`)' → logprob: -15.000014305114746
    5. '):' → logprob: -16.250015258789062
    6. ' ' → logprob: -16.625015258789062
    7. ':' → logprob: -17.750015258789062
    8. ')->' → logprob: -18.125015258789062
    9. '```' → logprob: -18.125015258789062
    10. ')
' → logprob: -18.375015258789062

Token 190: ' ->' (ID: 2747)
  Prédit: ' ->'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ->' → logprob: -0.29351574182510376
    2. ')' → logprob: -1.418515682220459
    3. '->' → logprob: -4.543515682220459
    4. ')->' → logprob: -6.918515682220459
    5. ' )' → logprob: -8.043516159057617
    6. ':' → logprob: -8.293516159057617
    7. ' ' → logprob: -9.918516159057617
    8. ' )->' → logprob: -10.793516159057617
    9. '   ' → logprob: -11.043516159057617
    10. '>' → logprob: -13.668516159057617

Token 191: ' Optional' (ID: 19351)
  Prédit: ' Optional'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Optional' → logprob: -0.255807489156723
    2. 'Optional' → logprob: -1.5058075189590454
    3. ' None' → logprob: -6.005807399749756
    4. 'int' → logprob: -7.380807399749756
    5. 'None' → logprob: -7.380807399749756
    6. ' int' → logprob: -8.755807876586914
    7. '(Optional' → logprob: -13.880807876586914
    8. '	Optional' → logprob: -14.505807876586914
    9. '_optional' → logprob: -14.505807876586914
    10. '```' → logprob: -15.505807876586914

Token 192: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -8.08944896562025e-05
    2. '[in' → logprob: -9.750081062316895
    3. '[' → logprob: -11.125081062316895
    4. '[Int' → logprob: -12.000081062316895
    5. '[i' → logprob: -13.500081062316895
    6. 'int' → logprob: -15.375081062316895
    7. '[
' → logprob: -16.375080108642578
    8. '```' → logprob: -17.750080108642578
    9. '[List' → logprob: -18.000080108642578
    10. '[I' → logprob: -18.125080108642578

Token 193: ']:
' (ID: 22152)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.03849916160106659
    2. '):
' → logprob: -3.288499116897583
    3. ':' → logprob: -8.413498878479004
    4. ')' → logprob: -8.913498878479004
    5. '):
' → logprob: -9.788498878479004
    6. '   ' → logprob: -10.163498878479004
    7. ':
' → logprob: -13.538498878479004
    8. ' ):' → logprob: -13.663498878479004
    9. '       ' → logprob: -13.788498878479004
    10. '):

' → logprob: -14.038498878479004

Token 194: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005529711954295635
    2. 'dist' → logprob: -5.255529880523682
    3. ' distances' → logprob: -9.505529403686523
    4. ' dist' → logprob: -9.630529403686523
    5. 'distance' → logprob: -10.130529403686523
    6. '   ' → logprob: -10.380529403686523
    7. '      ' → logprob: -11.380529403686523
    8. '        
' → logprob: -11.755529403686523
    9. 'import' → logprob: -12.005529403686523
    10. '    ' → logprob: -12.130529403686523

Token 195: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' (adapté à ' dist') → logprob: -0.06550521403551102
    2. '       ' → logprob: -2.815505266189575
    3. ' dist' → logprob: -6.065505027770996
    4. ' distances' → logprob: -6.815505027770996
    5. 'distance' → logprob: -9.940505027770996
    6. 'import' → logprob: -11.190505027770996
    7. 'if' → logprob: -11.565505027770996
    8. ' if' → logprob: -11.690505027770996
    9. '   ' → logprob: -11.940505027770996
    10. '
' → logprob: -12.065505027770996

Token 196: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02063496597111225
    2. '=' → logprob: -4.02063512802124
    3. 'ances' → logprob: -6.27063512802124
    4. 'ance' → logprob: -8.270634651184082
    5. ' ' → logprob: -9.145634651184082
    6. '   ' → logprob: -9.645634651184082
    7. ',' → logprob: -9.770634651184082
    8. 's' → logprob: -10.020634651184082
    9. ':' → logprob: -10.895634651184082
    10. '[' → logprob: -11.145634651184082

Token 197: ' {' (ID: 354)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.12693282961845398
    2. ' {' → logprob: -2.1269328594207764
    3. ' [' → logprob: -13.376933097839355
    4. '{id' → logprob: -13.626933097839355
    5. '[' → logprob: -14.626933097839355
    6. '   ' → logprob: -14.626933097839355
    7. '{i' → logprob: -14.876933097839355
    8. ' ' → logprob: -15.251933097839355
    9. '{name' → logprob: -15.626933097839355
    10. '{x' → logprob: -16.37693214416504

Token 198: 'node' (ID: 7005)
  Prédit: 'node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.2527365982532501
    2. 'i' → logprob: -1.5027365684509277
    3. ' node' → logprob: -7.252736568450928
    4. ' i' → logprob: -9.877737045288086
    5. '   ' → logprob: -10.877737045288086
    6. '}' → logprob: -11.877737045288086
    7. '(node' → logprob: -12.252737045288086
    8. '	node' → logprob: -12.502737045288086
    9. 'n' → logprob: -12.627737045288086
    10. '[node' → logprob: -13.002737045288086

Token 199: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -2.5107177862082608e-05
    2. ' :' → logprob: -10.625024795532227
    3. ':i' → logprob: -15.625024795532227
    4. '```' → logprob: -16.000024795532227
    5. '   ' → logprob: -16.250024795532227
    6. ' ' → logprob: -17.125024795532227
    7. ':index' → logprob: -17.125024795532227
    8. ':int' → logprob: -17.250024795532227
    9. '=' → logprob: -17.375024795532227
    10. '1' → logprob: -17.500024795532227

Token 200: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.0001097417771234177
    2. ' float' → logprob: -9.125109672546387
    3. '   ' → logprob: -14.125109672546387
    4. '	float' → logprob: -16.875110626220703
    5. ' ' → logprob: -17.625110626220703
    6. '(float' → logprob: -17.625110626220703
    7. 'flo' → logprob: -17.625110626220703
    8. '=float' → logprob: -18.375110626220703
    9. '       ' → logprob: -18.500110626220703
    10. '    ' → logprob: -18.750110626220703

Token 201: '("' (ID: 568)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -5.512236498361744e-07
    2. '("' → logprob: -15.375000953674316
    3. '(' → logprob: -15.500000953674316
    4. '   ' → logprob: -18.25
    5. ''' → logprob: -18.5
    6. ' ('' → logprob: -18.875
    7. ''in' → logprob: -19.25
    8. '('+' → logprob: -19.5
    9. '('-' → logprob: -20.375
    10. ''s' → logprob: -20.375

Token 202: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -7.107425062713446e-06
    2. ' inf' → logprob: -12.375006675720215
    3. 'in' → logprob: -13.125006675720215
    4. ''in' → logprob: -15.125006675720215
    5. '"' → logprob: -15.250006675720215
    6. '   ' → logprob: -15.875006675720215
    7. ''' → logprob: -16.62500762939453
    8. '_inf' → logprob: -17.37500762939453
    9. 'info' → logprob: -17.50000762939453
    10. '")' → logprob: -18.37500762939453

Token 203: '")' (ID: 1405)
  Prédit: '")'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.004660334438085556
    2. ')' → logprob: -5.379660129547119
    3. ' ")' → logprob: -10.504660606384277
    4. ')")' → logprob: -12.254660606384277
    5. '"' → logprob: -12.754660606384277
    6. '}")' → logprob: -13.379660606384277
    7. ' )' → logprob: -14.004660606384277
    8. '")}' → logprob: -14.254660606384277
    9. '}' → logprob: -14.629660606384277
    10. '')' → logprob: -14.879660606384277

Token 204: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.0021157623268663883
    2. 'for' → logprob: -6.252115726470947
    3. ' ' → logprob: -8.627116203308105
    4. ',' → logprob: -12.252116203308105
    5. '	for' → logprob: -13.752116203308105
    6. '}' → logprob: -14.752116203308105
    7. '
' → logprob: -14.877116203308105
    8. '   ' → logprob: -15.002116203308105
    9. '<|end|>' → logprob: -15.127116203308105
    10. ')' → logprob: -15.502116203308105

Token 205: ' node' (ID: 4596)
  Prédit: ' node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' node' → logprob: -0.07555649429559708
    2. ' range' → logprob: -2.700556516647339
    3. 'range' → logprob: -5.82555627822876
    4. 'node' → logprob: -5.95055627822876
    5. ' self' → logprob: -10.450556755065918
    6. '	node' → logprob: -11.825556755065918
    7. ' ' → logprob: -12.575556755065918
    8. '_node' → logprob: -13.575556755065918
    9. ' in' → logprob: -13.700556755065918
    10. '	range' → logprob: -13.950556755065918

Token 206: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0061340294778347015
    2. 'in' → logprob: -5.131134033203125
    3. 'range' → logprob: -8.631134033203125
    4. ' range' → logprob: -11.256134033203125
    5. ' ' → logprob: -11.381134033203125
    6. 'self' → logprob: -14.756134033203125
    7. '<|end|>' → logprob: -15.131134033203125
    8. '_range' → logprob: -15.381134033203125
    9. '  ' → logprob: -15.506134033203125
    10. ',' → logprob: -15.631134033203125

Token 207: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.580113410949707
    2. 'range' → logprob: -0.830113410949707
    3. ' range' → logprob: -5.830113410949707
    4. ' self' → logprob: -6.705113410949707
    5. '(self' → logprob: -13.705113410949707
    6. '[self' → logprob: -14.705113410949707
    7. '   ' → logprob: -14.830113410949707
    8. '(range' → logprob: -15.330113410949707
    9. ' ' → logprob: -16.08011245727539
    10. '	self' → logprob: -16.33011245727539

Token 208: '.ad' (ID: 19775)
  Prédit: '.ad'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.ad' → logprob: -0.0003454753023106605
    2. '.range' → logprob: -9.125345230102539
    3. '.' → logprob: -9.500345230102539
    4. 'adj' → logprob: -9.625345230102539
    5. ' .' → logprob: -10.375345230102539
    6. '.num' → logprob: -10.750345230102539
    7. 'range' → logprob: -11.125345230102539
    8. 'self' → logprob: -11.625345230102539
    9. ' ' → logprob: -12.875345230102539
    10. '   ' → logprob: -13.000345230102539

Token 209: 'j' (ID: 73)
  Prédit: '_list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_list' → logprob: -4.191489642835222e-05
    2. '_' → logprob: -11.000041961669922
    3. '       ' → logprob: -11.750041961669922
    4. 'list' → logprob: -12.125041961669922
    5. '   ' → logprob: -12.875041961669922
    6. 'self' → logprob: -13.000041961669922
    7. '_node' → logprob: -13.000041961669922
    8. '           ' → logprob: -13.375041961669922
    9. 'List' → logprob: -14.250041961669922
    10. 'dist' → logprob: -15.125041961669922

Token 210: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -5.860340752406046e-05
    2. '_' → logprob: -10.0000581741333
    3. 'list' → logprob: -11.8750581741333
    4. 'List' → logprob: -12.7500581741333
    5. '[' → logprob: -14.7500581741333
    6. '_LIST' → logprob: -15.1250581741333
    7. '{' → logprob: -15.2500581741333
    8. '_node' → logprob: -15.3750581741333
    9. '_nodes' → logprob: -15.5000581741333
    10. '_lst' → logprob: -15.5000581741333

Token 211: '}
' (ID: 739)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.00016706773021724075
    2. '}
' → logprob: -9.250166893005371
    3. ' }' → logprob: -9.625166893005371
    4. '   ' → logprob: -12.500166893005371
    5. '}

' → logprob: -15.250166893005371
    6. '}
' → logprob: -15.375166893005371
    7. '       ' → logprob: -15.500166893005371
    8. '.keys' → logprob: -15.875166893005371
    9. ')}' → logprob: -16.375167846679688
    10. ' }
' → logprob: -17.000167846679688

Token 212: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.44420167803764343
    2. '
' → logprob: -1.0692017078399658
    3. 'dist' → logprob: -5.319201469421387
    4. '        
' → logprob: -5.444201469421387
    5. '' → logprob: -6.694201469421387
    6. '
' → logprob: -6.944201469421387
    7. '<|end|>' → logprob: -6.944201469421387
    8. ' 
' → logprob: -6.944201469421387
    9. '        ' → logprob: -7.944201469421387
    10. '   ' → logprob: -8.194201469421387

Token 213: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' (adapté à ' dist') → logprob: -0.048597365617752075
    2. ' dist' → logprob: -3.0485973358154297
    3. '       ' → logprob: -12.17359733581543
    4. '	dist' → logprob: -12.79859733581543
    5. '   ' → logprob: -13.54859733581543
    6. '
' → logprob: -15.29859733581543
    7. '_dist' → logprob: -15.79859733581543
    8. 'heap' → logprob: -16.29859733581543
    9. ' ' → logprob: -16.79859733581543
    10. 'Dist' → logprob: -16.92359733581543

Token 214: '[start' (ID: 62179)
  Prédit: '[start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[start' → logprob: -0.001930301426909864
    2. '[' → logprob: -6.251930236816406
    3. '```' → logprob: -15.126930236816406
    4. '[end' → logprob: -15.376930236816406
    5. '[source' → logprob: -15.376930236816406
    6. '[current' → logprob: -16.001930236816406
    7. '=start' → logprob: -16.001930236816406
    8. ' [' → logprob: -16.376930236816406
    9. '[state' → logprob: -16.501930236816406
    10. '[src' → logprob: -16.501930236816406

Token 215: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -7.898723561083898e-05
    2. ' ]' → logprob: -9.500079154968262
    3. ']=' → logprob: -12.500079154968262
    4. ')' → logprob: -15.625079154968262
    5. '}' → logprob: -17.000078201293945
    6. '=' → logprob: -17.625078201293945
    7. ']
' → logprob: -17.750078201293945
    8. '"]' → logprob: -17.875078201293945
    9. '[' → logprob: -18.125078201293945
    10. '']' → logprob: -18.250078201293945

Token 216: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.061967913061380386
    2. '=' → logprob: -2.8119678497314453
    3. '[' → logprob: -16.436967849731445
    4. ']' → logprob: -16.811967849731445
    5. ')' → logprob: -16.811967849731445
    6. ' ' → logprob: -16.936967849731445
    7. ',' → logprob: -17.811967849731445
    8. ' =
' → logprob: -18.436967849731445
    9. '   ' → logprob: -18.686967849731445
    10. ']=' → logprob: -18.936967849731445

Token 217: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001584850688232109
    2. ' ' → logprob: -8.750158309936523
    3. '   ' → logprob: -17.875158309936523
    4. '  ' → logprob: -21.000158309936523
    5. ' ' → logprob: -21.750158309936523
    6. '    ' → logprob: -22.125158309936523
    7. '     ' → logprob: -22.375158309936523
    8. '۰' → logprob: -22.500158309936523
    9. '00' → logprob: -23.000158309936523
    10. '       ' → logprob: -23.375158309936523

Token 218: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.4855663721391466e-05
    2. ' ' → logprob: -11.125015258789062
    3. '   ' → logprob: -18.125015258789062
    4. '۰' → logprob: -20.125015258789062
    5. '  ' → logprob: -20.250015258789062
    6. '00' → logprob: -21.125015258789062
    7. '
' → logprob: -21.562515258789062
    8. '０' → logprob: -21.812515258789062
    9. '     ' → logprob: -21.875015258789062
    10. ' ' → logprob: -22.375015258789062

Token 219: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.07153403759002686
    2. '       ' → logprob: -2.6965341567993164
    3. '
' → logprob: -7.821534156799316
    4. '<|end|>' → logprob: -8.071534156799316
    5. '        
' → logprob: -8.196534156799316
    6. '' → logprob: -8.571534156799316
    7. '   ' → logprob: -9.196534156799316
    8. ',' → logprob: -9.446534156799316
    9. '    
' → logprob: -9.946534156799316
    10. '  
' → logprob: -10.196534156799316

Token 220: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.051469240337610245
    2. '
' → logprob: -3.051469326019287
    3. '   ' → logprob: -6.676469326019287
    4. '        
' → logprob: -7.051469326019287
    5. '
' → logprob: -8.801468849182129
    6. ' 
' → logprob: -8.801468849182129
    7. '    
' → logprob: -9.051468849182129
    8. 'heap' → logprob: -9.176468849182129
    9. '  
' → logprob: -10.176468849182129
    10. '' → logprob: -10.551468849182129

Token 221: ' heap' (ID: 37237)
  Prédit: 'pq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pq' → logprob: -0.5260465145111084
    2. 'heap' (adapté à ' heap') → logprob: -1.0260465145111084
    3. 'queue' → logprob: -3.0260465145111084
    4. ' heap' → logprob: -6.7760467529296875
    5. 'priority' → logprob: -7.2760467529296875
    6. '       ' → logprob: -9.151046752929688
    7. ' pq' → logprob: -9.651046752929688
    8. ' queue' → logprob: -10.026046752929688
    9. 'hq' → logprob: -10.151046752929688
    10. '   ' → logprob: -10.901046752929688

Token 222: ' =' (ID: 314)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.14419923722743988
    2. '=[]' → logprob: -2.7691991329193115
    3. ' =' → logprob: -2.7691991329193115
    4. '=' → logprob: -5.019199371337891
    5. '=[]
' → logprob: -6.519199371337891
    6. '.push' → logprob: -9.26919937133789
    7. '_' → logprob: -9.39419937133789
    8. '=[' → logprob: -9.51919937133789
    9. '=[
' → logprob: -9.64419937133789
    10. ',' → logprob: -9.89419937133789

Token 223: ' [(' (ID: 43900)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.06196768581867218
    2. ' [(' → logprob: -2.811967611312866
    3. '[]' → logprob: -17.686967849731445
    4. '[((' → logprob: -18.311967849731445
    5. '([(' → logprob: -18.561967849731445
    6. ' ' → logprob: -18.811967849731445
    7. '[' → logprob: -20.061967849731445
    8. '[]
' → logprob: -20.436967849731445
    9. ' [' → logprob: -20.561967849731445
    10. '   ' → logprob: -21.186967849731445

Token 224: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.511406809295295e-06
    2. ' ' → logprob: -12.125006675720215
    3. 'dist' → logprob: -14.000006675720215
    4. 'start' → logprob: -16.5000057220459
    5. '   ' → logprob: -17.0000057220459
    6. ' dist' → logprob: -18.6250057220459
    7. '
' → logprob: -19.1250057220459
    8. ')' → logprob: -19.6250057220459
    9. '       ' → logprob: -19.7500057220459
    10. '  ' → logprob: -19.9375057220459

Token 225: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.2352385965641588e-05
    2. ',start' → logprob: -12.000012397766113
    3. ' ,' → logprob: -12.375012397766113
    4. ')' → logprob: -14.000012397766113
    5. ',
' → logprob: -14.375012397766113
    6. ',)' → logprob: -15.875012397766113
    7. '<|end|>' → logprob: -16.625011444091797
    8. ')]' → logprob: -16.875011444091797
    9. '```' → logprob: -17.500011444091797
    10. ',

' → logprob: -17.875011444091797

Token 226: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.10020774602890015
    2. ' start' → logprob: -2.350207805633545
    3. ' ' → logprob: -14.850207328796387
    4. '[start' → logprob: -14.975207328796387
    5. '(start' → logprob: -16.225208282470703
    6. '=start' → logprob: -16.975208282470703
    7. '	start' → logprob: -17.100208282470703
    8. '   ' → logprob: -17.350208282470703
    9. ':start' → logprob: -17.975208282470703
    10. '.start' → logprob: -17.975208282470703

Token 227: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.000952075351960957
    2. ')' → logprob: -7.000952243804932
    3. ')]
' → logprob: -10.250951766967773
    4. ']' → logprob: -13.125951766967773
    5. ' )' → logprob: -13.375951766967773
    6. '))' → logprob: -15.000951766967773
    7. ')
' → logprob: -15.375951766967773
    8. '),' → logprob: -15.500951766967773
    9. '       ' → logprob: -15.625951766967773
    10. ')])' → logprob: -15.625951766967773

Token 228: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5948615670204163
    2. ' while' → logprob: -1.8448615074157715
    3. 'while' → logprob: -2.0948615074157715
    4. '   ' → logprob: -2.9698615074157715
    5. ' 
' → logprob: -3.4698615074157715
    6. '
' → logprob: -3.4698615074157715
    7. '	while' → logprob: -3.9698615074157715
    8. '    
' → logprob: -4.7198615074157715
    9. ')' → logprob: -4.9698615074157715
    10. ' ' → logprob: -5.5948615074157715

Token 229: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.032822947949171066
    2. ' while' → logprob: -4.032823085784912
    3. '       ' → logprob: -4.282823085784912
    4. '
' → logprob: -7.282823085784912
    5. '   ' → logprob: -9.907822608947754
    6. '	while' → logprob: -11.282822608947754
    7. '        
' → logprob: -11.782822608947754
    8. '    
' → logprob: -13.407822608947754
    9. 'While' → logprob: -13.532822608947754
    10. ' 
' → logprob: -13.907822608947754

Token 230: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.25193315744400024
    2. ' heap' → logprob: -1.5019330978393555
    3. '(heap' → logprob: -12.501933097839355
    4. '.heap' → logprob: -15.626933097839355
    5. 'he' → logprob: -16.501934051513672
    6. 'len' → logprob: -16.626934051513672
    7. ' ' → logprob: -17.126934051513672
    8. 'h' → logprob: -17.626934051513672
    9. '_heap' → logprob: -17.626934051513672
    10. 'Heap' → logprob: -18.001934051513672

Token 231: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0011171156074851751
    2. ':
' → logprob: -6.87611722946167
    3. '):' → logprob: -9.751116752624512
    4. ' and' → logprob: -11.751116752624512
    5. 'and' → logprob: -12.376116752624512
    6. '>:' → logprob: -12.376116752624512
    7. '):
' → logprob: -13.001116752624512
    8. ',' → logprob: -13.501116752624512
    9. ']:' → logprob: -13.876116752624512
    10. ' :' → logprob: -14.251116752624512

Token 232: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5960004329681396
    2. ',' → logprob: -0.8460004329681396
    3. ' ,' → logprob: -4.721000671386719
    4. '       ' → logprob: -4.721000671386719
    5. ',
' → logprob: -7.721000671386719
    6. '
' → logprob: -8.596000671386719
    7. ')' → logprob: -8.846000671386719
    8. ',c' → logprob: -9.221000671386719
    9. ',d' → logprob: -9.221000671386719
    10. '        ' → logprob: -9.471000671386719

Token 233: ' current' (ID: 2208)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.11319389194250107
    2. 'current' (adapté à ' current') → logprob: -2.738193988800049
    3. ' cost' → logprob: -3.738193988800049
    4. 'curr' → logprob: -4.863193988800049
    5. ' current' → logprob: -5.238193988800049
    6. 'cur' → logprob: -5.613193988800049
    7. 'dist' → logprob: -7.613193988800049
    8. '           ' → logprob: -7.738193988800049
    9. ' curr' → logprob: -8.11319351196289
    10. '(cost' → logprob: -8.73819351196289

Token 234: '_dist' (ID: 37968)
  Prédit: '_dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -0.5044243931770325
    2. '_cost' → logprob: -1.0044243335723877
    3. '_distance' → logprob: -3.6294243335723877
    4. '_' → logprob: -5.754424571990967
    5. '_d' → logprob: -9.129424095153809
    6. 'dist' → logprob: -10.379424095153809
    7. '_,' → logprob: -11.004424095153809
    8. 'cost' → logprob: -12.129424095153809
    9. '[' → logprob: -12.379424095153809
    10. '
' → logprob: -12.629424095153809

Token 235: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.7120533811976202e-05
    2. ' ,' → logprob: -11.000017166137695
    3. ',
' → logprob: -15.000017166137695
    4. ',current' → logprob: -17.375017166137695
    5. ',

' → logprob: -17.875017166137695
    6. '_,' → logprob: -18.250017166137695
    7. ',node' → logprob: -18.375017166137695
    8. '‌,' → logprob: -18.625017166137695
    9. ',\
' → logprob: -18.750017166137695
    10. ',user' → logprob: -19.250017166137695

Token 236: ' u' (ID: 337)
  Prédit: ' current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.68840491771698
    2. 'current' → logprob: -0.93840491771698
    3. 'node' → logprob: -2.9384050369262695
    4. ' node' → logprob: -3.0634050369262695
    5. ' u' → logprob: -5.4384050369262695
    6. 'u' → logprob: -6.0634050369262695
    7. 'curr' → logprob: -12.06340503692627
    8. '```' → logprob: -12.56340503692627
    9. '   ' → logprob: -12.81340503692627
    10. ' ' → logprob: -12.93840503692627

Token 237: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.038047339767217636
    2. '=' → logprob: -3.2880473136901855
    3. ')' → logprob: -12.413047790527344
    4. ' ' → logprob: -13.663047790527344
    5. 'u' → logprob: -15.663047790527344
    6. ')=' → logprob: -16.038047790527344
    7. '   ' → logprob: -16.288047790527344
    8. ']' → logprob: -16.663047790527344
    9. ',' → logprob: -17.038047790527344
    10. '<|end|>' → logprob: -17.038047790527344

Token 238: ' heap' (ID: 37237)
  Prédit: ' heap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' heap' → logprob: -0.5769365429878235
    2. 'heap' → logprob: -0.8269365429878235
    3. 'he' → logprob: -7.451936721801758
    4. ' he' → logprob: -7.826936721801758
    5. '(heap' → logprob: -11.451936721801758
    6. '   ' → logprob: -13.076936721801758
    7. '.heap' → logprob: -13.451936721801758
    8. ' ' → logprob: -13.576936721801758
    9. '    ' → logprob: -13.951936721801758
    10. '_heap' → logprob: -15.326936721801758

Token 239: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.029140494763851166
    2. ' =' → logprob: -4.154140472412109
    3. '[' → logprob: -4.654140472412109
    4. '=' → logprob: -6.154140472412109
    5. '.pop' → logprob: -7.154140472412109
    6. '       ' → logprob: -8.65414047241211
    7. ',' → logprob: -8.90414047241211
    8. 'pop' → logprob: -9.40414047241211
    9. '           ' → logprob: -10.02914047241211
    10. '   ' → logprob: -10.15414047241211

Token 240: '.he' (ID: 67786)
  Prédit: '.he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.he' → logprob: -4.1318875446449965e-05
    2. '.' → logprob: -10.750041007995605
    3. 'q' → logprob: -11.750041007995605
    4. '.pop' → logprob: -12.125041007995605
    5. '.heap' → logprob: -12.375041007995605
    6. 'he' → logprob: -14.125041007995605
    7. ' he' → logprob: -14.375041007995605
    8. '.q' → logprob: -14.500041007995605
    9. ' .' → logprob: -15.500041007995605
    10. '.h' → logprob: -16.375041961669922

Token 241: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -4.9186317482963204e-05
    2. 'pp' → logprob: -10.000049591064453
    3. 'ap' → logprob: -12.625049591064453
    4. 'pop' → logprob: -15.375049591064453
    5. '[' → logprob: -17.000049591064453
    6. 'p' → logprob: -17.375049591064453
    7. 'appen' → logprob: -18.250049591064453
    8. 'appe' → logprob: -18.500049591064453
    9. '```' → logprob: -18.500049591064453
    10. '
' → logprob: -18.625049591064453

Token 242: 'op' (ID: 467)
  Prédit: 'op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.019227411597967148
    2. 'ush' → logprob: -4.144227504730225
    3. 'app' → logprob: -6.644227504730225
    4. 'p' → logprob: -7.019227504730225
    5. 'pp' → logprob: -7.269227504730225
    6. 'ap' → logprob: -8.519227027893066
    7. 'pop' → logprob: -10.519227027893066
    8. '[' → logprob: -10.894227027893066
    9. 'q' → logprob: -11.519227027893066
    10. 'e' → logprob: -11.519227027893066

Token 243: '(heap' (ID: 173794)
  Prédit: '(heap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(heap' → logprob: -2.5776860184123507e-06
    2. '(' → logprob: -13.75000286102295
    3. 'heap' → logprob: -13.75000286102295
    4. '(h' → logprob: -15.75000286102295
    5. '(
' → logprob: -15.87500286102295
    6. ' (' → logprob: -16.375001907348633
    7. '(queue' → logprob: -17.500001907348633
    8. '(hit' → logprob: -18.125001907348633
    9. ' heap' → logprob: -18.500001907348633
    10. '```' → logprob: -18.625001907348633

Token 244: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.38703903555870056
    2. ')
' → logprob: -1.137039065361023
    3. '           ' → logprob: -8.762039184570312
    4. ')
' → logprob: -12.137039184570312
    5. '       ' → logprob: -12.637039184570312
    6. ')

' → logprob: -13.637039184570312
    7. '   ' → logprob: -14.637039184570312
    8. ' )
' → logprob: -14.887039184570312
    9. ' )' → logprob: -14.887039184570312
    10. '
' → logprob: -16.137039184570312

Token 245: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0026025299448519945
    2. '            
' → logprob: -7.127602577209473
    3. '
' → logprob: -7.377602577209473
    4. '       ' → logprob: -7.877602577209473
    5. '<|end|>' → logprob: -8.002602577209473
    6. ')' → logprob: -9.502602577209473
    7. '            ' → logprob: -9.502602577209473
    8. '               ' → logprob: -10.002602577209473
    9. ' 
' → logprob: -10.127602577209473
    10. '          ' → logprob: -10.252602577209473

Token 246: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.13988737761974335
    2. ' if' → logprob: -2.6398873329162598
    3. '            
' → logprob: -3.6398873329162598
    4. '
' → logprob: -4.38988733291626
    5. 'if' (adapté à ' if') → logprob: -4.51488733291626
    6. ' 
' → logprob: -5.01488733291626
    7. '       ' → logprob: -7.38988733291626
    8. '    
' → logprob: -7.51488733291626
    9. '            ' → logprob: -7.76488733291626
    10. '        
' → logprob: -7.76488733291626

Token 247: ' current' (ID: 2208)
  Prédit: ' u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' u' → logprob: -0.2650938928127289
    2. ' current' → logprob: -1.7650939226150513
    3. 'u' → logprob: -3.1400938034057617
    4. 'current' → logprob: -4.015093803405762
    5. ' dist' → logprob: -8.640093803405762
    6. 'dist' → logprob: -9.890093803405762
    7. '	u' → logprob: -10.015093803405762
    8. '   ' → logprob: -10.265093803405762
    9. '	current' → logprob: -10.640093803405762
    10. ' ' → logprob: -11.015093803405762

Token 248: '_dist' (ID: 37968)
  Prédit: '_dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -0.0004265044699423015
    2. '_' → logprob: -8.250426292419434
    3. 'dist' → logprob: -9.000426292419434
    4. ' ==' → logprob: -11.250426292419434
    5. '==' → logprob: -11.375426292419434
    6. 'u' → logprob: -11.750426292419434
    7. '_d' → logprob: -13.000426292419434
    8. '_distance' → logprob: -13.500426292419434
    9. '_u' → logprob: -13.875426292419434
    10. '	dist' → logprob: -14.375426292419434

Token 249: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.07889088988304138
    2. '>' → logprob: -2.578890800476074
    3. ' ' → logprob: -14.828890800476074
    4. ' >
' → logprob: -15.453890800476074
    5. ' >
' → logprob: -15.703890800476074
    6. ' ' → logprob: -16.32889175415039
    7. '">' → logprob: -16.32889175415039
    8. ' >

' → logprob: -16.57889175415039
    9. ' ">' → logprob: -17.45389175415039
    10. ' >=' → logprob: -17.70389175415039

Token 250: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.02975349873304367
    2. ' dist' → logprob: -3.5297534465789795
    3. '	dist' → logprob: -12.904753684997559
    4. '_dist' → logprob: -15.529753684997559
    5. ' ' → logprob: -16.404752731323242
    6. 'Dist' → logprob: -16.654752731323242
    7. '(dist' → logprob: -16.779752731323242
    8. '.dist' → logprob: -17.154752731323242
    9. '
' → logprob: -17.404752731323242
    10. '```' → logprob: -17.779752731323242

Token 251: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -7.896309739408025e-07
    2. '[' → logprob: -14.875000953674316
    3. 'u' → logprob: -14.875000953674316
    4. '<u' → logprob: -18.5
    5. '```' → logprob: -18.625
    6. '	u' → logprob: -18.75
    7. ' u' → logprob: -18.875
    8. '(u' → logprob: -19.25
    9. '[
' → logprob: -19.75
    10. ' [' → logprob: -19.875

Token 252: ']:
' (ID: 22152)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.02806960418820381
    2. ':' → logprob: -3.778069496154785
    3. '):
' → logprob: -5.528069496154785
    4. ')' → logprob: -7.403069496154785
    5. ']:' → logprob: -8.778069496154785
    6. ':
' → logprob: -10.278069496154785
    7. '}:' → logprob: -10.528069496154785
    8. ' ):' → logprob: -12.528069496154785
    9. '<|end|>' → logprob: -13.403069496154785
    10. '>:' → logprob: -13.528069496154785

Token 253: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.022201817482709885
    2. 'continue' → logprob: -4.522202014923096
    3. ' continue' → logprob: -5.022202014923096
    4. '           ' → logprob: -5.522202014923096
    5. '\n' → logprob: -8.022201538085938
    6. ':' → logprob: -9.897201538085938
    7. ':
' → logprob: -10.022201538085938
    8. '                   ' → logprob: -11.022201538085938
    9. '   ' → logprob: -11.147201538085938
    10. '       ' → logprob: -11.772201538085938

Token 254: ' continue' (ID: 4901)
  Prédit: ' continue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.21958282589912415
    2. 'continue' (adapté à ' continue') → logprob: -1.7195827960968018
    3. '               ' → logprob: -4.219583034515381
    4. '           ' → logprob: -5.719583034515381
    5. '_continue' → logprob: -11.594582557678223
    6. '	continue' → logprob: -12.969582557678223
    7. '   ' → logprob: -12.969582557678223
    8. 'contin' → logprob: -13.344582557678223
    9. '                   ' → logprob: -13.844582557678223
    10. ' continu' → logprob: -13.844582557678223

Token 255: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.013332811184227467
    2. '
' → logprob: -4.388332843780518
    3. '            
' → logprob: -8.01333236694336
    4. '<|end|>' → logprob: -8.88833236694336
    5. '       ' → logprob: -9.01333236694336
    6. 'n' → logprob: -10.01333236694336
    7. '    
' → logprob: -10.51333236694336
    8. '   ' → logprob: -10.88833236694336
    9. '          ' → logprob: -11.13833236694336
    10. '               ' → logprob: -11.38833236694336

Token 256: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00188211549539119
    2. '       ' → logprob: -7.251882076263428
    3. '            
' → logprob: -7.751882076263428
    4. '<|end|>' → logprob: -8.751882553100586
    5. '
' → logprob: -9.001882553100586
    6. 'n' → logprob: -9.126882553100586
    7. 'u' → logprob: -9.501882553100586
    8. '            ' → logprob: -10.001882553100586
    9. '          ' → logprob: -10.251882553100586
    10. '   ' → logprob: -10.501882553100586

Token 257: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.6692994832992554
    2. '           ' → logprob: -0.9192994832992554
    3. ' if' → logprob: -2.419299602508545
    4. '   ' → logprob: -9.419299125671387
    5. '       ' → logprob: -9.794299125671387
    6. 'for' → logprob: -12.669299125671387
    7. '            
' → logprob: -12.794299125671387
    8. '          ' → logprob: -12.919299125671387
    9. ' ' → logprob: -13.544299125671387
    10. '
' → logprob: -14.169299125671387

Token 258: ' u' (ID: 337)
  Prédit: ' u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' u' → logprob: -0.12692831456661224
    2. 'u' → logprob: -2.1269283294677734
    3. '	u' → logprob: -15.626928329467773
    4. '
' → logprob: -17.001928329467773
    5. ' ' → logprob: -18.376928329467773
    6. '(u' → logprob: -19.251928329467773
    7. '[u' → logprob: -19.626928329467773
    8. '   ' → logprob: -19.876928329467773
    9. '    ' → logprob: -20.126928329467773
    10. ' ' → logprob: -20.251928329467773

Token 259: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.00462284917011857
    2. '==' → logprob: -5.379622936248779
    3. ' =' → logprob: -13.379622459411621
    4. '=' → logprob: -14.379622459411621
    5. ')==' → logprob: -16.254623413085938
    6. ' ' → logprob: -16.379623413085938
    7. '<|end|>' → logprob: -16.379623413085938
    8. '==
' → logprob: -16.504623413085938
    9. ')' → logprob: -16.629623413085938
    10. ' ==
' → logprob: -17.379623413085938

Token 260: ' goal' (ID: 8583)
  Prédit: ' goal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' goal' → logprob: -0.0040785204619169235
    2. 'goal' → logprob: -5.504078388214111
    3. '(goal' → logprob: -15.62907886505127
    4. '_goal' → logprob: -17.379077911376953
    5. '.goal' → logprob: -18.129077911376953
    6. 'Goal' → logprob: -19.004077911376953
    7. ' ' → logprob: -19.504077911376953
    8. ' ' → logprob: -20.254077911376953
    9. '
' → logprob: -20.754077911376953
    10. ' 
' → logprob: -22.254077911376953

Token 261: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.011177737265825272
    2. ':
' → logprob: -4.5111775398254395
    3. ':return' → logprob: -9.011178016662598
    4. ' :' → logprob: -13.136178016662598
    5. '           ' → logprob: -13.261178016662598
    6. '               ' → logprob: -13.886178016662598
    7. ':
' → logprob: -14.261178016662598
    8. '):' → logprob: -14.636178016662598
    9. '       ' → logprob: -14.886178016662598
    10. ')' → logprob: -15.136178016662598

Token 262: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0017933472990989685
    2. 'return' → logprob: -6.876793384552002
    3. ' return' → logprob: -7.251793384552002
    4. '           ' → logprob: -10.126792907714844
    5. '
' → logprob: -11.751792907714844
    6. '                   ' → logprob: -13.001792907714844
    7. '   ' → logprob: -14.876792907714844
    8. '              ' → logprob: -15.001792907714844
    9. '                ' → logprob: -15.501792907714844
    10. ':return' → logprob: -15.501792907714844

Token 263: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.17258326709270477
    2. ' return' → logprob: -1.9225832223892212
    3. '               ' → logprob: -4.422583103179932
    4. '
' → logprob: -8.29758358001709
    5. '           ' → logprob: -11.04758358001709
    6. '                   ' → logprob: -12.17258358001709
    7. '   ' → logprob: -12.54758358001709
    8. '	return' → logprob: -12.67258358001709
    9. ' 
' → logprob: -14.54758358001709
    10. ':return' → logprob: -14.79758358001709

Token 264: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.4747735857963562
    2. ' current' → logprob: -0.9747735857963562
    3. 'dist' → logprob: -7.849773406982422
    4. ' dist' → logprob: -8.099773406982422
    5. 'curr' → logprob: -13.974773406982422
    6. '	current' → logprob: -14.224773406982422
    7. '0' → logprob: -14.724773406982422
    8. '
' → logprob: -15.724773406982422
    9. ' curr' → logprob: -16.099773406982422
    10. 'cur' → logprob: -16.224773406982422

Token 265: '_dist' (ID: 37968)
  Prédit: '_dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -1.5048530030981055e-06
    2. 'dist' → logprob: -13.875001907348633
    3. '_' → logprob: -15.000001907348633
    4. '_cost' → logprob: -17.000001907348633
    5. ' _' → logprob: -17.375001907348633
    6. '_d' → logprob: -17.750001907348633
    7. '_distance' → logprob: -18.250001907348633
    8. '	dist' → logprob: -18.250001907348633
    9. ' dist' → logprob: -18.625001907348633
    10. '_val' → logprob: -18.875001907348633

Token 266: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0009759013773873448
    2. '       ' → logprob: -7.875976085662842
    3. '            
' → logprob: -8.250975608825684
    4. ' for' → logprob: -9.125975608825684
    5. 'for' → logprob: -9.250975608825684
    6. '
' → logprob: -9.375975608825684
    7. '        
' → logprob: -10.875975608825684
    8. '    
' → logprob: -12.250975608825684
    9. '<|end|>' → logprob: -12.250975608825684
    10. '   ' → logprob: -12.375975608825684

Token 267: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0018265502294525504
    2. '       ' → logprob: -6.626826763153076
    3. 'for' → logprob: -7.876826763153076
    4. ' for' → logprob: -10.126826286315918
    5. '            
' → logprob: -10.126826286315918
    6. '
' → logprob: -10.501826286315918
    7. '        
' → logprob: -12.126826286315918
    8. '   ' → logprob: -12.376826286315918
    9. '               ' → logprob: -13.501826286315918
    10. '          ' → logprob: -14.001826286315918

Token 268: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.027239810675382614
    2. '           ' → logprob: -3.7772397994995117
    3. ' for' → logprob: -5.527239799499512
    4. '       ' → logprob: -11.777239799499512
    5. '            
' → logprob: -13.777239799499512
    6. '   ' → logprob: -15.027239799499512
    7. '
' → logprob: -16.027240753173828
    8. '	for' → logprob: -16.402240753173828
    9. '          ' → logprob: -17.027240753173828
    10. '               ' → logprob: -17.402240753173828

Token 269: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.06242629513144493
    2. '(v' → logprob: -3.0624263286590576
    3. ' v' → logprob: -4.3124260902404785
    4. ' (' → logprob: -8.812426567077637
    5. 'to' → logprob: -9.312426567077637
    6. 'neighbor' → logprob: -9.312426567077637
    7. '(to' → logprob: -11.687426567077637
    8. '(' → logprob: -13.062426567077637
    9. ' neighbor' → logprob: -13.812426567077637
    10. ' to' → logprob: -14.562426567077637

Token 270: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.906711546937004e-05
    2. ',c' → logprob: -10.125048637390137
    3. ' ,' → logprob: -11.875048637390137
    4. 'cost' → logprob: -14.250048637390137
    5. ',v' → logprob: -14.375048637390137
    6. '(cost' → logprob: -15.500048637390137
    7. '‌,' → logprob: -16.125049591064453
    8. '_cost' → logprob: -16.625049591064453
    9. ',
' → logprob: -16.750049591064453
    10. ' cost' → logprob: -16.875049591064453

Token 271: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.6345033049583435
    2. ' cost' → logprob: -0.8845033049583435
    3. 'w' → logprob: -3.3845033645629883
    4. ' w' → logprob: -4.384503364562988
    5. 'weight' → logprob: -4.634503364562988
    6. ' weight' → logprob: -7.134503364562988
    7. 'c' → logprob: -11.884503364562988
    8. 'edge' → logprob: -14.134503364562988
    9. ' c' → logprob: -14.259503364562988
    10. '   ' → logprob: -14.259503364562988

Token 272: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.016061468049883842
    2. 'in' → logprob: -4.141061305999756
    3. ' ' → logprob: -11.391061782836914
    4. '_in' → logprob: -12.391061782836914
    5. ',' → logprob: -12.516061782836914
    6. '<|end|>' → logprob: -12.641061782836914
    7. 's' → logprob: -13.391061782836914
    8. '	in' → logprob: -13.766061782836914
    9. ')' → logprob: -14.391061782836914
    10. 'In' → logprob: -15.266061782836914

Token 273: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.06197004392743111
    2. ' self' → logprob: -2.8119699954986572
    3. '	self' → logprob: -14.186969757080078
    4. '(self' → logprob: -14.311969757080078
    5. '   ' → logprob: -14.811969757080078
    6. '[self' → logprob: -15.186969757080078
    7. ' ' → logprob: -16.186969757080078
    8. '       ' → logprob: -16.936969757080078
    9. '
' → logprob: -16.936969757080078
    10. '=self' → logprob: -17.186969757080078

Token 274: '.ad' (ID: 19775)
  Prédit: '.ad'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.ad' → logprob: -2.2961512513575144e-05
    2. 'adj' → logprob: -10.750022888183594
    3. '.' → logprob: -14.000022888183594
    4. ' .' → logprob: -14.750022888183594
    5. '_adj' → logprob: -16.250022888183594
    6. ' adj' → logprob: -16.500022888183594
    7. '-ad' → logprob: -17.625022888183594
    8. '   ' → logprob: -18.125022888183594
    9. 'Adj' → logprob: -18.125022888183594
    10. '_ad' → logprob: -18.875022888183594

Token 275: 'j' (ID: 73)
  Prédit: '_list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.0005532711511477828
    2. 'j' → logprob: -7.500553131103516
    3. 'list' → logprob: -16.125553131103516
    4. 'jac' → logprob: -16.500553131103516
    5. 'aj' → logprob: -17.000553131103516
    6. 'l' → logprob: -17.625553131103516
    7. 'List' → logprob: -17.875553131103516
    8. '_LIST' → logprob: -17.875553131103516
    9. '_j' → logprob: -18.625553131103516
    10. 'self' → logprob: -18.750553131103516

Token 276: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -9.088346359931165e-07
    2. 'List' → logprob: -15.000000953674316
    3. 'list' → logprob: -15.000000953674316
    4. '       ' → logprob: -16.75
    5. '   ' → logprob: -17.125
    6. '[' → logprob: -17.5
    7. '[u' → logprob: -17.5
    8. '_LIST' → logprob: -17.625
    9. '-list' → logprob: -18.25
    10. '_' → logprob: -18.5

Token 277: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -1.2664456789934775e-06
    2. 'u' → logprob: -13.875000953674316
    3. '[from' → logprob: -16.000001907348633
    4. '[' → logprob: -16.250001907348633
    5. '[v' → logprob: -17.250001907348633
    6. '   ' → logprob: -17.500001907348633
    7. 'from' → logprob: -17.750001907348633
    8. '(u' → logprob: -17.875001907348633
    9. ' [' → logprob: -19.000001907348633
    10. '	u' → logprob: -19.000001907348633

Token 278: ']:
' (ID: 22152)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.8814246654510498
    2. ':' → logprob: -1.0064246654510498
    3. ':
' → logprob: -2.00642466545105
    4. ']:
' → logprob: -3.00642466545105
    5. '):' → logprob: -3.75642466545105
    6. '       ' → logprob: -5.131424903869629
    7. ']:' → logprob: -5.381424903869629
    8. '           ' → logprob: -6.631424903869629
    9. '():
' → logprob: -8.131424903869629
    10. '):
' → logprob: -8.256424903869629

Token 279: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.003341805888339877
    2. '           ' → logprob: -5.7533416748046875
    3. ':' → logprob: -9.878341674804688
    4. ',' → logprob: -10.378341674804688
    5. '                
' → logprob: -11.003341674804688
    6. ' if' → logprob: -11.378341674804688
    7. '<|end|>' → logprob: -11.628341674804688
    8. '                   ' → logprob: -12.003341674804688
    9. ':
' → logprob: -12.253341674804688
    10. '            
' → logprob: -12.378341674804688

Token 280: ' new' (ID: 620)
  Prédit: ' new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.5479508638381958
    2. '               ' → logprob: -0.9229508638381958
    3. '           ' → logprob: -4.922950744628906
    4. ' if' → logprob: -5.297950744628906
    5. '                   ' → logprob: -5.797950744628906
    6. '   ' → logprob: -6.172950744628906
    7. ' 
' → logprob: -6.172950744628906
    8. 'new' (adapté à ' new') → logprob: -6.297950744628906
    9. ' alt' → logprob: -7.422950744628906
    10. '                
' → logprob: -7.547950744628906

Token 281: '_cost' (ID: 36820)
  Prédit: '_dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -0.0005628037615679204
    2. '_cost' → logprob: -7.75056266784668
    3. '_distance' → logprob: -9.25056266784668
    4. 'dist' → logprob: -10.37556266784668
    5. '_' → logprob: -13.00056266784668
    6. '_d' → logprob: -13.37556266784668
    7. '	dist' → logprob: -15.12556266784668
    8. ' dist' → logprob: -15.37556266784668
    9. 'Dist' → logprob: -15.37556266784668
    10. 'd' → logprob: -16.50056266784668

Token 282: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02324594371020794
    2. '=' → logprob: -3.7732460498809814
    3. ' ' → logprob: -14.773245811462402
    4. '=current' → logprob: -17.77324676513672
    5. ' =
' → logprob: -17.89824676513672
    6. ' :=' → logprob: -18.14824676513672
    7. '   ' → logprob: -18.14824676513672
    8. '	' → logprob: -18.27324676513672
    9. '    ' → logprob: -18.52324676513672
    10. ',' → logprob: -19.02324676513672

Token 283: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.3868820369243622
    2. ' current' → logprob: -1.1368820667266846
    3. 'dist' → logprob: -12.261881828308105
    4. ' dist' → logprob: -12.636881828308105
    5. '	current' → logprob: -13.511881828308105
    6. 'urrent' → logprob: -14.636881828308105
    7. ' ' → logprob: -15.136881828308105
    8. '=current' → logprob: -15.261881828308105
    9. '(current' → logprob: -15.386881828308105
    10. '$current' → logprob: -15.886881828308105

Token 284: '_dist' (ID: 37968)
  Prédit: '_dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -6.170270353322849e-05
    2. '_cost' → logprob: -9.750061988830566
    3. '_' → logprob: -13.625061988830566
    4. 'dist' → logprob: -13.875061988830566
    5. '_d' → logprob: -14.750061988830566
    6. '	dist' → logprob: -15.625061988830566
    7. '+' → logprob: -16.37506103515625
    8. 't' → logprob: -16.75006103515625
    9. ' _' → logprob: -16.75006103515625
    10. '_cont' → logprob: -17.12506103515625

Token 285: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.0059290360659360886
    2. '+' → logprob: -5.130928993225098
    3. ' ' → logprob: -15.630928993225098
    4. ' ' → logprob: -16.380929946899414
    5. '+c' → logprob: -16.880929946899414
    6. '+self' → logprob: -17.630929946899414
    7. ' +
' → logprob: -17.880929946899414
    8. ' plus' → logprob: -18.005929946899414
    9. ' +
' → logprob: -19.380929946899414
    10. '   ' → logprob: -19.505929946899414

Token 286: ' cost' (ID: 3097)
  Prédit: ' cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cost' → logprob: -0.20141352713108063
    2. 'cost' → logprob: -1.7014135122299194
    3. '(cost' → logprob: -15.82641315460205
    4. '_cost' → logprob: -18.576414108276367
    5. ' kost' → logprob: -19.451414108276367
    6. 'Cost' → logprob: -19.701414108276367
    7. ' ' → logprob: -19.701414108276367
    8. '.cost' → logprob: -20.326414108276367
    9. '```' → logprob: -20.951414108276367
    10. ' ' → logprob: -21.451414108276367

Token 287: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00045677117304876447
    2. '           ' → logprob: -8.375456809997559
    3. '<|end|>' → logprob: -9.000456809997559
    4. '                
' → logprob: -10.500456809997559
    5. '                ' → logprob: -11.000456809997559
    6. '                   ' → logprob: -11.125456809997559
    7. '
' → logprob: -11.125456809997559
    8. '              ' → logprob: -12.000456809997559
    9. '       ' → logprob: -12.875456809997559
    10. ' if' → logprob: -12.875456809997559

Token 288: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -3.5358694731257856e-05
    2. '           ' → logprob: -10.875035285949707
    3. '<|end|>' → logprob: -12.500035285949707
    4. '              ' → logprob: -12.625035285949707
    5. '                
' → logprob: -12.750035285949707
    6. '                ' → logprob: -13.000035285949707
    7. '                   ' → logprob: -13.250035285949707
    8. ' if' → logprob: -14.500035285949707
    9. ')' → logprob: -15.000035285949707
    10. '			' → logprob: -15.000035285949707

Token 289: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.05661056190729141
    2. ' if' → logprob: -3.181610584259033
    3. 'if' (adapté à ' if') → logprob: -5.306610584259033
    4. '                ' → logprob: -5.556610584259033
    5. ' ' → logprob: -6.056610584259033
    6. ' 
' → logprob: -6.681610584259033
    7. '
' → logprob: -7.806610584259033
    8. '                
' → logprob: -8.056610107421875
    9. '                   ' → logprob: -9.056610107421875
    10. '                 ' → logprob: -10.431610107421875

Token 290: ' new' (ID: 620)
  Prédit: ' new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.019674139097332954
    2. 'new' → logprob: -4.019674301147461
    3. ' dist' → logprob: -6.519674301147461
    4. 'dist' → logprob: -10.269674301147461
    5. '	new' → logprob: -11.644674301147461
    6. '```' → logprob: -13.769674301147461
    7. ' ' → logprob: -14.019674301147461
    8. ' ' → logprob: -14.144674301147461
    9. '(new' → logprob: -14.769674301147461
    10. '新' → logprob: -14.894674301147461

Token 291: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -3.4121114822482923e-06
    2. 'cost' → logprob: -13.000003814697266
    3. '_dist' → logprob: -14.750003814697266
    4. '_COST' → logprob: -15.250003814697266
    5. '_' → logprob: -16.000003814697266
    6. ' cost' → logprob: -16.625003814697266
    7. 'Cost' → logprob: -16.625003814697266
    8. '-cost' → logprob: -16.875003814697266
    9. '_code' → logprob: -18.125003814697266
    10. '_cos' → logprob: -18.125003814697266

Token 292: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.005237548612058163
    2. '<' → logprob: -5.255237579345703
    3. ' ' → logprob: -13.130237579345703
    4. '<|end|>' → logprob: -14.505237579345703
    5. ' ' → logprob: -15.505237579345703
    6. '<v' → logprob: -15.630237579345703
    7. '[' → logprob: -15.755237579345703
    8. '<int' → logprob: -15.755237579345703
    9. '<len' → logprob: -16.505237579345703
    10. '<th' → logprob: -16.505237579345703

Token 293: ' dist' (ID: 3601)
  Prédit: ' dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dist' → logprob: -0.6931489109992981
    2. 'dist' → logprob: -0.6931489109992981
    3. '	dist' → logprob: -13.568148612976074
    4. '(dist' → logprob: -15.318148612976074
    5. '_dist' → logprob: -16.69314956665039
    6. '
' → logprob: -17.44314956665039
    7. '.dist' → logprob: -17.81814956665039
    8. ' ' → logprob: -17.94314956665039
    9. 'Dist' → logprob: -18.19314956665039
    10. 'd' → logprob: -19.06814956665039

Token 294: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -3.128163257315464e-07
    2. '[' → logprob: -15.375
    3. 'v' → logprob: -16.375
    4. ' [' → logprob: -18.25
    5. '.get' → logprob: -19.125
    6. '[
' → logprob: -19.25
    7. '[u' → logprob: -19.5
    8. ' v' → logprob: -20.25
    9. '[V' → logprob: -20.625
    10. '(v' → logprob: -20.625

Token 295: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.35200995206832886
    2. ':' → logprob: -1.7270100116729736
    3. ']:
' → logprob: -2.2270100116729736
    4. ':
' → logprob: -4.8520097732543945
    5. '[v' → logprob: -6.7270097732543945
    6. ']' → logprob: -7.3520097732543945
    7. '}:' → logprob: -7.8520097732543945
    8. '):
' → logprob: -8.102009773254395
    9. '):' → logprob: -8.102009773254395
    10. '           ' → logprob: -9.727009773254395

Token 296: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.003309842897579074
    2. ':
' → logprob: -5.878309726715088
    3. ':' → logprob: -8.253310203552246
    4. '               ' → logprob: -9.253310203552246
    5. '                       ' → logprob: -9.378310203552246
    6. '):
' → logprob: -10.128310203552246
    7. ' :
' → logprob: -12.128310203552246
    8. '                           ' → logprob: -12.503310203552246
    9. '                    
' → logprob: -12.878310203552246
    10. '                  ' → logprob: -13.253310203552246

Token 297: ' dist' (ID: 3601)
  Prédit: ' dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dist' → logprob: -0.011096046306192875
    2. 'dist' (adapté à ' dist') → logprob: -4.511096000671387
    3. '                       ' → logprob: -10.136096000671387
    4. '                   ' → logprob: -12.261096000671387
    5. '                           ' → logprob: -13.636096000671387
    6. '	dist' → logprob: -13.761096000671387
    7. '                    ' → logprob: -14.636096000671387
    8. '_dist' → logprob: -14.761096000671387
    9. '                        ' → logprob: -15.511096000671387
    10. 'Dist' → logprob: -16.386096954345703

Token 298: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -1.9361264946837764e-07
    2. 'v' → logprob: -16.25
    3. '[' → logprob: -17.5
    4. '(v' → logprob: -20.375
    5. '[u' → logprob: -20.375
    6. '	v' → logprob: -20.625
    7. '```' → logprob: -21.125
    8. '<v' → logprob: -21.25
    9. '                   ' → logprob: -21.25
    10. ' v' → logprob: -21.375

Token 299: ']' (ID: 60)
  Prédit: '[v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.5800105929374695
    2. ']' → logprob: -0.8300105929374695
    3. ']=' → logprob: -5.580010414123535
    4. 'v' → logprob: -9.205010414123535
    5. '=' → logprob: -9.580010414123535
    6. '=v' → logprob: -10.455010414123535
    7. ' =' → logprob: -10.830010414123535
    8. ' ]' → logprob: -10.830010414123535
    9. '<v' → logprob: -11.830010414123535
    10. '                   ' → logprob: -11.955010414123535

Token 300: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.387504518032074
    2. ' =' → logprob: -1.1375045776367188
    3. '=v' → logprob: -7.512504577636719
    4. '[v' → logprob: -9.512504577636719
    5. '[' → logprob: -12.887504577636719
    6. ']=' → logprob: -13.262504577636719
    7. '<|end|>' → logprob: -13.387504577636719
    8. ']' → logprob: -13.512504577636719
    9. ')' → logprob: -14.262504577636719
    10. 'v' → logprob: -14.262504577636719

Token 301: ' new' (ID: 620)
  Prédit: ' new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.6931473612785339
    2. 'new' → logprob: -0.6931473612785339
    3. '	new' → logprob: -16.568147659301758
    4. '_new' → logprob: -17.193147659301758
    5. 'New' → logprob: -17.818147659301758
    6. '新' → logprob: -18.068147659301758
    7. '```' → logprob: -18.818147659301758
    8. '                   ' → logprob: -18.943147659301758
    9. '[new' → logprob: -19.193147659301758
    10. '(new' → logprob: -19.443147659301758

Token 302: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -9.088346359931165e-07
    2. 'cost' → logprob: -14.125000953674316
    3. ' cost' → logprob: -18.0
    4. '_COST' → logprob: -18.0
    5. '-cost' → logprob: -18.5
    6. 'new' → logprob: -18.5
    7. '_code' → logprob: -18.625
    8. 'Cost' → logprob: -18.875
    9. '.cost' → logprob: -19.25
    10. '_dist' → logprob: -19.5

Token 303: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.00016074994346126914
    2. '               ' → logprob: -9.375161170959473
    3. '           ' → logprob: -10.125161170959473
    4. 'heap' → logprob: -11.500161170959473
    5. '
' → logprob: -12.000161170959473
    6. '				' → logprob: -12.125161170959473
    7. ',' → logprob: -13.000161170959473
    8. '<|end|>' → logprob: -13.250161170959473
    9. ' heap' → logprob: -13.375161170959473
    10. '       ' → logprob: -13.625161170959473

Token 304: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -6.670925358776003e-05
    2. 'heap' → logprob: -9.875066757202148
    3. ' heap' → logprob: -12.000066757202148
    4. '               ' → logprob: -12.250066757202148
    5. '           ' → logprob: -12.625066757202148
    6. '				' → logprob: -14.625066757202148
    7. '                       ' → logprob: -15.875066757202148
    8. '                  ' → logprob: -16.25006675720215
    9. '                    ' → logprob: -16.62506675720215
    10. '                    
' → logprob: -16.75006675720215

Token 305: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' (adapté à ' heap') → logprob: -0.004078639671206474
    2. ' heap' → logprob: -5.5040788650512695
    3. '                   ' → logprob: -16.504077911376953
    4. 'he' → logprob: -17.504077911376953
    5. '(heap' → logprob: -19.504077911376953
    6. '.heap' → logprob: -20.004077911376953
    7. '               ' → logprob: -20.254077911376953
    8. '                       ' → logprob: -20.254077911376953
    9. '           ' → logprob: -20.254077911376953
    10. '_heap' → logprob: -21.379077911376953

Token 306: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -1.5048530030981055e-06
    2. '.he' → logprob: -13.625001907348633
    3. 'p' → logprob: -15.625001907348633
    4. '.' → logprob: -17.000001907348633
    5. '.q' → logprob: -17.375001907348633
    6. '.push' → logprob: -17.625001907348633
    7. '.heap' → logprob: -18.000001907348633
    8. ' .' → logprob: -18.375001907348633
    9. '.append' → logprob: -18.750001907348633
    10. 'he' → logprob: -19.000001907348633

Token 307: '.he' (ID: 67786)
  Prédit: '.he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.he' → logprob: -1.0564331205387134e-05
    2. '.heap' → logprob: -11.62501049041748
    3. '.push' → logprob: -14.00001049041748
    4. '.' → logprob: -14.50001049041748
    5. 'he' → logprob: -16.000011444091797
    6. ' .' → logprob: -17.250011444091797
    7. ').' → logprob: -18.125011444091797
    8. ' he' → logprob: -18.125011444091797
    9. '.h' → logprob: -18.500011444091797
    10. 'q' → logprob: -18.875011444091797

Token 308: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -2.165027217415627e-05
    2. 'ap' → logprob: -10.750021934509277
    3. 'a' → logprob: -17.00002098083496
    4. 'pp' → logprob: -17.62502098083496
    5. 'appen' → logprob: -19.00002098083496
    6. 'push' → logprob: -19.12502098083496
    7. 'appe' → logprob: -20.37502098083496
    8. 'e' → logprob: -20.37502098083496
    9. '```' → logprob: -20.50002098083496
    10. 'he' → logprob: -21.25002098083496

Token 309: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -3.047134305234067e-05
    2. 'push' → logprob: -10.875030517578125
    3. 'app' → logprob: -12.500030517578125
    4. 'ap' → logprob: -13.000030517578125
    5. 'sh' → logprob: -13.375030517578125
    6. 'p' → logprob: -13.625030517578125
    7. 'u' → logprob: -14.000030517578125
    8. '   ' → logprob: -14.625030517578125
    9. 'op' → logprob: -15.250030517578125
    10. '```' → logprob: -15.375030517578125

Token 310: '(heap' (ID: 173794)
  Prédit: '(heap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(heap' → logprob: -5.512236498361744e-07
    2. '(' → logprob: -15.000000953674316
    3. ' (' → logprob: -16.0
    4. 'heap' → logprob: -18.125
    5. '(
' → logprob: -19.0
    6. ' heap' → logprob: -19.5
    7. '(h' → logprob: -19.5
    8. '(queue' → logprob: -19.75
    9. '.heap' → logprob: -20.375
    10. '```' → logprob: -20.625

Token 311: ',' (ID: 11)
  Prédit: '(heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(heap' → logprob: -6.511406809295295e-06
    2. ' (' → logprob: -12.875006675720215
    3. 'heap' → logprob: -13.125006675720215
    4. ',' → logprob: -14.000006675720215
    5. ' heap' → logprob: -14.375006675720215
    6. '(' → logprob: -15.500006675720215
    7. ')' → logprob: -15.750006675720215
    8. '```' → logprob: -16.6250057220459
    9. '.heap' → logprob: -17.5000057220459
    10. '(queue' → logprob: -18.0000057220459

Token 312: ' (' (ID: 350)
  Prédit: '(new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(new' → logprob: -0.12733551859855652
    2. ' (' → logprob: -2.127335548400879
    3. '(' → logprob: -7.877335548400879
    4. '(current' → logprob: -11.127335548400879
    5. '(v' → logprob: -12.127335548400879
    6. '   ' → logprob: -13.002335548400879
    7. '(next' → logprob: -13.127335548400879
    8. '(New' → logprob: -13.502335548400879
    9. ' ' → logprob: -14.127335548400879
    10. '(cost' → logprob: -14.252335548400879

Token 313: 'new' (ID: 1389)
  Prédit: 'new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -6.635164754698053e-05
    2. ' new' → logprob: -9.625066757202148
    3. '                   ' → logprob: -15.875066757202148
    4. '(new' → logprob: -17.00006675720215
    5. ')new' → logprob: -17.62506675720215
    6. '_new' → logprob: -18.25006675720215
    7. '               ' → logprob: -18.50006675720215
    8. '	new' → logprob: -18.62506675720215
    9. '   ' → logprob: -19.00006675720215
    10. '                       ' → logprob: -19.12506675720215

Token 314: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -3.128163257315464e-07
    2. 'cost' → logprob: -15.25
    3. '_COST' → logprob: -18.25
    4. '_' → logprob: -18.625
    5. '_dist' → logprob: -18.75
    6. ' cost' → logprob: -18.875
    7. '_cos' → logprob: -19.625
    8. '_c' → logprob: -19.625
    9. '_
' → logprob: -20.25
    10. '-cost' → logprob: -20.375

Token 315: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.286852345103398e-05
    2. ',v' → logprob: -10.125042915344238
    3. ' ,' → logprob: -12.875042915344238
    4. 'v' → logprob: -15.625042915344238
    5. ',
' → logprob: -17.125041961669922
    6. ',u' → logprob: -17.500041961669922
    7. '<|end|>' → logprob: -18.250041961669922
    8. ' v' → logprob: -18.375041961669922
    9. '```' → logprob: -18.625041961669922
    10. ')' → logprob: -18.625041961669922

Token 316: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.00861456897109747
    2. ' v' → logprob: -4.758614540100098
    3. '	v' → logprob: -16.633615493774414
    4. ')v' → logprob: -17.008615493774414
    5. '(v' → logprob: -19.008615493774414
    6. '   ' → logprob: -19.258615493774414
    7. '```' → logprob: -19.258615493774414
    8. '                   ' → logprob: -19.383615493774414
    9. '[v' → logprob: -19.383615493774414
    10. ')' → logprob: -19.758615493774414

Token 317: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0003851517685689032
    2. '))
' → logprob: -7.875385284423828
    3. ')' → logprob: -12.375385284423828
    4. ' ))' → logprob: -15.375385284423828
    5. '               ' → logprob: -15.750385284423828
    6. '                   ' → logprob: -15.750385284423828
    7. '))

' → logprob: -16.625385284423828
    8. ')))' → logprob: -16.750385284423828
    9. '       ' → logprob: -16.875385284423828
    10. '           ' → logprob: -16.875385284423828

Token 318: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002907465910539031
    2. 'return' → logprob: -6.3779072761535645
    3. '<|end|>' → logprob: -7.1279072761535645
    4. ' return' → logprob: -8.377907752990723
    5. '
' → logprob: -10.002907752990723
    6. ')' → logprob: -10.002907752990723
    7. '   ' → logprob: -10.377907752990723
    8. '```' → logprob: -10.752907752990723
    9. ')return' → logprob: -12.127907752990723
    10. '               ' → logprob: -12.252907752990723

Token 319: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.005603091791272163
    2. '       ' → logprob: -5.255603313446045
    3. ' return' → logprob: -8.005602836608887
    4. '
' → logprob: -10.380602836608887
    5. '   ' → logprob: -12.880602836608887
    6. 'None' → logprob: -13.380602836608887
    7. '```' → logprob: -15.380602836608887
    8. '	return' → logprob: -16.255603790283203
    9. '{return' → logprob: -16.755603790283203
    10. '        
' → logprob: -16.880603790283203

Token 320: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -5.836499985889532e-05
    2. ' None' → logprob: -9.7500581741333
    3. 'none' → logprob: -18.875059127807617
    4. '_None' → logprob: -21.000059127807617
    5. '(None' → logprob: -21.500059127807617
    6. '
' → logprob: -22.500059127807617
    7. 'float' → logprob: -22.625059127807617
    8. '=None' → logprob: -22.625059127807617
    9. '_none' → logprob: -22.625059127807617
    10. '   ' → logprob: -22.875059127807617

Token 321: '


' (ID: 2499)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 322: 'class' (ID: 1444)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.22563011944293976
    2. 'class' → logprob: -1.8506301641464233
    3. '@' → logprob: -4.100630283355713
    4. 'graph' → logprob: -4.225630283355713
    5. '#' → logprob: -5.100630283355713
    6. 'g' → logprob: -6.225630283355713
    7. 'from' → logprob: -6.225630283355713
    8. '@g' → logprob: -6.350630283355713
    9. '```' → logprob: -6.975630283355713
    10. '<|end|>' → logprob: -8.225629806518555

Token 323: ' Bid' (ID: 18256)
  Prédit: 'Und'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Und' → logprob: -0.17724406719207764
    2. ' Und' → logprob: -2.177244186401367
    3. 'Weighted' → logprob: -3.677244186401367
    4. 'Bid' → logprob: -4.552244186401367
    5. ' Weighted' → logprob: -5.552244186401367
    6. ' Bid' → logprob: -5.927244186401367
    7. 'Directed' → logprob: -6.052244186401367
    8. 'Complete' → logprob: -6.677244186401367
    9. ' Directed' → logprob: -7.302244186401367
    10. 'Un' → logprob: -7.677244186401367

Token 324: 'irectional' (ID: 86044)
  Prédit: 'irectional'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'irectional' → logprob: -0.005036287009716034
    2. 'irected' → logprob: -5.880036354064941
    3. 'rection' → logprob: -6.130036354064941
    4. 'ection' → logprob: -10.630036354064941
    5. 'ijkstra' → logprob: -12.005036354064941
    6. 'irect' → logprob: -12.380036354064941
    7. 'irection' → logprob: -12.380036354064941
    8. 'ective' → logprob: -12.380036354064941
    9. 'e' → logprob: -12.630036354064941
    10. '```' → logprob: -13.255036354064941

Token 325: 'Graph' (ID: 9922)
  Prédit: 'Graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Graph' → logprob: -0.06822102516889572
    2. 'D' → logprob: -2.943221092224121
    3. 'Directed' → logprob: -4.443221092224121
    4. 'Weighted' → logprob: -7.568221092224121
    5. 'Search' → logprob: -7.693221092224121
    6. 'Shortest' → logprob: -8.318221092224121
    7. 'A' → logprob: -8.568221092224121
    8. 'B' → logprob: -10.568221092224121
    9. 'Bread' → logprob: -10.943221092224121
    10. '_D' → logprob: -11.693221092224121

Token 326: '(Graph' (ID: 128183)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.105593241751194
    2. '(' → logprob: -2.480593204498291
    3. ':
' → logprob: -4.105593204498291
    4. '(
' → logprob: -11.48059368133545
    5. 'Directed' → logprob: -11.85559368133545
    6. '   ' → logprob: -12.48059368133545
    7. ' :' → logprob: -12.73059368133545
    8. ':

' → logprob: -13.23059368133545
    9. '[' → logprob: -13.35559368133545
    10. '```' → logprob: -13.60559368133545

Token 327: 'Interface' (ID: 7078)
  Prédit: 'Interface'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Interface' → logprob: -4.60414821645827e-06
    2. 'interface' → logprob: -13.125004768371582
    3. ')' → logprob: -14.250004768371582
    4. ' Interface' → logprob: -14.875004768371582
    5. 'Protocol' → logprob: -15.125004768371582
    6. 'Interfaces' → logprob: -15.625004768371582
    7. '```' → logprob: -15.750004768371582
    8. '_Interface' → logprob: -15.875004768371582
    9. '_interface' → logprob: -16.000003814697266
    10. '[' → logprob: -16.125003814697266

Token 328: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.011455908417701721
    2. '):
' → logprob: -4.51145601272583
    3. ')' → logprob: -7.88645601272583
    4. ':' → logprob: -10.886455535888672
    5. '):

' → logprob: -12.386455535888672
    6. '):
' → logprob: -12.511455535888672
    7. ',' → logprob: -13.011455535888672
    8. '   ' → logprob: -13.386455535888672
    9. ' ):' → logprob: -14.136455535888672
    10. '(' → logprob: -15.511455535888672

Token 329: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04370841383934021
    2. ':
' → logprob: -3.168708324432373
    3. '   ' → logprob: -7.418708324432373
    4. '(' → logprob: -9.918708801269531
    5. '):' → logprob: -11.168708801269531
    6. ':def' → logprob: -11.668708801269531
    7. '):
' → logprob: -11.793708801269531
    8. 'def' → logprob: -12.418708801269531
    9. 'Directed' → logprob: -12.793708801269531
    10. ' Directed' → logprob: -12.793708801269531

Token 330: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.6941218972206116
    2. 'def' (adapté à ' def') → logprob: -0.9441218972206116
    3. '   ' → logprob: -2.194121837615967
    4. ' ' → logprob: -12.319122314453125
    5. 'class' → logprob: -13.444122314453125
    6. '  ' → logprob: -13.694122314453125
    7. '	def' → logprob: -13.819122314453125
    8. '    ' → logprob: -14.694122314453125
    9. ' __' → logprob: -14.694122314453125
    10. '__' → logprob: -15.694122314453125

Token 331: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -5.080963092041202e-06
    2. '__' → logprob: -12.375004768371582
    3. ' _' → logprob: -14.375004768371582
    4. ' def' → logprob: -15.750004768371582
    5. ' ' → logprob: -16.7500057220459
    6. ' ' → logprob: -18.6250057220459
    7. ' ___' → logprob: -18.6250057220459
    8. '_' → logprob: -19.1250057220459
    9. 'def' → logprob: -19.6250057220459
    10. '_init' → logprob: -19.7500057220459

Token 332: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -1.1517960956552997e-05
    2. 'nit' → logprob: -11.500011444091797
    3. '_init' → logprob: -15.000011444091797
    4. 'inite' → logprob: -15.250011444091797
    5. ' init' → logprob: -15.625011444091797
    6. '   ' → logprob: -16.000011444091797
    7. '	init' → logprob: -16.375011444091797
    8. 'in' → logprob: -16.500011444091797
    9. 'ini' → logprob: -16.625011444091797
    10. 'class' → logprob: -17.250011444091797

Token 333: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -4.7159857786027715e-05
    2. '__' → logprob: -10.375046730041504
    3. '(self' → logprob: -11.375046730041504
    4. '_(' → logprob: -12.625046730041504
    5. '__(
' → logprob: -13.750046730041504
    6. '(' → logprob: -17.50004768371582
    7. 'self' → logprob: -17.75004768371582
    8. '__((' → logprob: -18.00004768371582
    9. '__('' → logprob: -18.37504768371582
    10. '___' → logprob: -18.75004768371582

Token 334: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -6.76628842484206e-05
    2. ' self' → logprob: -9.750067710876465
    3. '
' → logprob: -12.125067710876465
    4. '   ' → logprob: -13.875067710876465
    5. 'num' → logprob: -13.875067710876465
    6. '(self' → logprob: -14.125067710876465
    7. ',' → logprob: -15.250067710876465
    8. ')' → logprob: -15.250067710876465
    9. ' ' → logprob: -15.750067710876465
    10. '       ' → logprob: -15.875067710876465

Token 335: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10515885055065155
    2. 'self' → logprob: -2.355158805847168
    3. '(self' → logprob: -5.480158805847168
    4. ' ,' → logprob: -8.480158805847168
    5. '   ' → logprob: -8.730158805847168
    6. ' self' → logprob: -8.855158805847168
    7. ' (' → logprob: -9.355158805847168
    8. '__(' → logprob: -9.730158805847168
    9. ',self' → logprob: -10.230158805847168
    10. '       ' → logprob: -10.480158805847168

Token 336: ' num' (ID: 2269)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.3950614631175995
    2. 'num' → logprob: -1.1450614929199219
    3. ' self' → logprob: -5.520061492919922
    4. ' num' → logprob: -5.645061492919922
    5. '   ' → logprob: -7.520061492919922
    6. ' ' → logprob: -10.270061492919922
    7. '       ' → logprob: -11.270061492919922
    8. ')' → logprob: -11.895061492919922
    9. '  ' → logprob: -13.020061492919922
    10. 'n' → logprob: -13.145061492919922

Token 337: '_nodes' (ID: 34593)
  Prédit: '_nodes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_nodes' → logprob: -1.3856492842023727e-06
    2. '   ' → logprob: -14.875000953674316
    3. '_n' → logprob: -15.250000953674316
    4. 'nodes' → logprob: -15.625000953674316
    5. 's' → logprob: -16.250001907348633
    6. ' _' → logprob: -16.500001907348633
    7. '_tokens' → logprob: -16.500001907348633
    8. '_edges' → logprob: -16.500001907348633
    9. '_' → logprob: -16.750001907348633
    10. '```' → logprob: -16.875001907348633

Token 338: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.1875571544806007e-05
    2. ':int' → logprob: -11.750011444091797
    3. ')' → logprob: -13.250011444091797
    4. '):' → logprob: -13.375011444091797
    5. ' :' → logprob: -14.625011444091797
    6. '=' → logprob: -16.500011444091797
    7. '):
' → logprob: -17.625011444091797
    8. 'int' → logprob: -18.375011444091797
    9. '```' → logprob: -18.625011444091797
    10. ',' → logprob: -19.375011444091797

Token 339: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.008773396722972393
    2. ' int' → logprob: -4.758773326873779
    3. 'self' → logprob: -8.758773803710938
    4. ' self' → logprob: -13.508773803710938
    5. ':int' → logprob: -16.258773803710938
    6. '   ' → logprob: -16.508773803710938
    7. ')' → logprob: -16.758773803710938
    8. '       ' → logprob: -16.758773803710938
    9. '=int' → logprob: -17.508773803710938
    10. '```' → logprob: -17.883773803710938

Token 340: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002445317804813385
    2. '):' → logprob: -8.500244140625
    3. '):
' → logprob: -10.125244140625
    4. ' )' → logprob: -14.500244140625
    5. '   ' → logprob: -15.625244140625
    6. ':' → logprob: -16.250244140625
    7. '):
' → logprob: -16.375244140625
    8. ',' → logprob: -18.375244140625
    9. ' ' → logprob: -18.750244140625
    10. '):

' → logprob: -19.250244140625

Token 341: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03436688706278801
    2. ':
' → logprob: -3.4093668460845947
    3. '       ' → logprob: -7.534367084503174
    4. '   ' → logprob: -9.534366607666016
    5. '):
' → logprob: -9.909366607666016
    6. ',' → logprob: -11.034366607666016
    7. ')' → logprob: -11.409366607666016
    8. '):' → logprob: -12.034366607666016
    9. ' :' → logprob: -12.159366607666016
    10. '<|end|>' → logprob: -12.409366607666016

Token 342: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.5759432315826416
    2. ' None' → logprob: -0.8259432315826416
    3. 'int' → logprob: -12.700942993164062
    4. ' int' → logprob: -15.200942993164062
    5. 'No' → logprob: -15.700942993164062
    6. '_None' → logprob: -16.075942993164062
    7. '=None' → logprob: -16.325942993164062
    8. '(None' → logprob: -16.450942993164062
    9. '   ' → logprob: -16.950942993164062
    10. ' ' → logprob: -17.325942993164062

Token 343: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6814645528793335
    2. ':
' → logprob: -0.8064645528793335
    3. '       ' → logprob: -3.056464672088623
    4. '):
' → logprob: -7.931464672088623
    5. '   ' → logprob: -8.556464195251465
    6. ',' → logprob: -11.306464195251465
    7. '():
' → logprob: -11.556464195251465
    8. ':
' → logprob: -11.556464195251465
    9. '<|end|>' → logprob: -11.806464195251465
    10. 'self' → logprob: -11.931464195251465

Token 344: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -6.988221684878226e-06
    2. 'self' → logprob: -12.000006675720215
    3. '   ' → logprob: -14.500006675720215
    4. ' self' → logprob: -15.500006675720215
    5. '      ' → logprob: -17.12500762939453
    6. '```' → logprob: -17.87500762939453
    7. '	' → logprob: -18.25000762939453
    8. '           ' → logprob: -18.25000762939453
    9. ' ' → logprob: -18.87500762939453
    10. '        
' → logprob: -18.87500762939453

Token 345: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.04509635642170906
    2. '       ' → logprob: -3.2950963973999023
    3. 'super' → logprob: -5.170096397399902
    4. ' self' → logprob: -6.670096397399902
    5. '
' → logprob: -10.295096397399902
    6. '   ' → logprob: -10.670096397399902
    7. ' super' → logprob: -10.920096397399902
    8. ' ' → logprob: -13.920096397399902
    9. '	self' → logprob: -14.045096397399902
    10. '(self' → logprob: -15.545096397399902

Token 346: '.forward' (ID: 53266)
  Prédit: '.num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.num' → logprob: -0.0020499820820987225
    2. 'num' → logprob: -6.502049922943115
    3. '.' → logprob: -7.627049922943115
    4. ' .' → logprob: -10.127050399780273
    5. ' num' → logprob: -12.127050399780273
    6. '.n' → logprob: -12.502050399780273
    7. '   ' → logprob: -13.002050399780273
    8. '_num' → logprob: -13.252050399780273
    9. '	num' → logprob: -13.627050399780273
    10. '=num' → logprob: -13.877050399780273

Token 347: '_graph' (ID: 33441)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22209285199642181
    2. '=' → logprob: -2.097092866897583
    3. '_graph' → logprob: -2.597092866897583
    4. '_adj' → logprob: -6.472092628479004
    5. '_ad' → logprob: -8.972092628479004
    6. 'Graph' → logprob: -9.347092628479004
    7. '_edges' → logprob: -10.722092628479004
    8. '   ' → logprob: -10.847092628479004
    9. 'graph' → logprob: -10.972092628479004
    10. 'adj' → logprob: -11.097092628479004

Token 348: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12692904472351074
    2. ' =' → logprob: -2.1269290447235107
    3. ':' → logprob: -13.87692928314209
    4. ' ' → logprob: -18.876928329467773
    5. '＝' → logprob: -18.876928329467773
    6. ')' → logprob: -19.126928329467773
    7. '=
' → logprob: -19.376928329467773
    8. '=}' → logprob: -19.501928329467773
    9. '```' → logprob: -20.001928329467773
    10. '=create' → logprob: -20.001928329467773

Token 349: ' Directed' (ID: 126065)
  Prédit: 'Directed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Directed' → logprob: -0.01815076172351837
    2. ' Directed' → logprob: -4.018150806427002
    3. 'Direct' → logprob: -14.143150329589844
    4. '   ' → logprob: -17.268150329589844
    5. ' directed' → logprob: -17.518150329589844
    6. 'Directional' → logprob: -17.893150329589844
    7. '
' → logprob: -18.268150329589844
    8. 'Dir' → logprob: -19.518150329589844
    9. 'self' → logprob: -19.643150329589844
    10. ' ' → logprob: -19.768150329589844

Token 350: 'Graph' (ID: 9922)
  Prédit: 'Graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Graph' → logprob: -1.9361264946837764e-07
    2. 'graph' → logprob: -15.75
    3. ' Graph' → logprob: -17.625
    4. '_graph' → logprob: -17.625
    5. '(Graph' → logprob: -17.875
    6. 'raph' → logprob: -19.0
    7. ' graph' → logprob: -19.0
    8. 'Graphs' → logprob: -19.125
    9. '_GRAPH' → logprob: -21.375
    10. '
' → logprob: -21.625

Token 351: '(num' (ID: 15828)
  Prédit: '(num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(num' → logprob: -3.173704271830502e-06
    2. ' (' → logprob: -13.37500286102295
    3. '(' → logprob: -13.62500286102295
    4. 'num' → logprob: -15.37500286102295
    5. '(n' → logprob: -16.375003814697266
    6. ' num' → logprob: -16.875003814697266
    7. ',num' → logprob: -18.500003814697266
    8. '(number' → logprob: -18.625003814697266
    9. '[num' → logprob: -18.625003814697266
    10. '=num' → logprob: -19.500003814697266

Token 352: '_nodes' (ID: 34593)
  Prédit: '_nodes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_nodes' → logprob: -1.0280383548888494e-06
    2. 'nodes' → logprob: -14.000000953674316
    3. '_tokens' → logprob: -17.500001907348633
    4. '```' → logprob: -18.000001907348633
    5. 'Nodes' → logprob: -18.375001907348633
    6. '=' → logprob: -18.625001907348633
    7. '_edges' → logprob: -19.625001907348633
    8. '.nodes' → logprob: -19.750001907348633
    9. '
' → logprob: -19.875001907348633
    10. ' nodes' → logprob: -19.875001907348633

Token 353: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.02325817570090294
    2. ')' → logprob: -3.7732582092285156
    3. '       ' → logprob: -11.523258209228516
    4. ')
' → logprob: -13.398258209228516
    5. '   ' → logprob: -14.148258209228516
    6. ' )
' → logprob: -14.523258209228516
    7. ')

' → logprob: -16.648258209228516
    8. ' ' → logprob: -18.023258209228516
    9. ' )' → logprob: -18.773258209228516
    10. '
' → logprob: -19.648258209228516

Token 354: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014275862835347652
    2. 'self' → logprob: -4.264276027679443
    3. ' self' → logprob: -9.514275550842285
    4. '
' → logprob: -10.764275550842285
    5. '   ' → logprob: -11.389275550842285
    6. ' ' → logprob: -13.264275550842285
    7. '	self' → logprob: -13.389275550842285
    8. '        
' → logprob: -13.639275550842285
    9. '	' → logprob: -14.264275550842285
    10. '```' → logprob: -15.014275550842285

Token 355: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.001537715899758041
    2. '       ' → logprob: -6.501537799835205
    3. ' self' → logprob: -10.251537322998047
    4. '   ' → logprob: -17.001537322998047
    5. '
' → logprob: -17.626537322998047
    6. '	self' → logprob: -17.626537322998047
    7. '        
' → logprob: -20.126537322998047
    8. '           ' → logprob: -20.126537322998047
    9. '      ' → logprob: -20.501537322998047
    10. ' ' → logprob: -20.626537322998047

Token 356: '.reverse' (ID: 65426)
  Prédit: '.backward'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.backward' → logprob: -0.20229071378707886
    2. '.reverse' → logprob: -1.7022907733917236
    3. '.' → logprob: -7.4522905349731445
    4. '.back' → logprob: -8.202290534973145
    5. '.re' → logprob: -11.952290534973145
    6. 'reverse' → logprob: -11.952290534973145
    7. ' .' → logprob: -12.077290534973145
    8. '.forward' → logprob: -13.952290534973145
    9. '.inverse' → logprob: -13.952290534973145
    10. ' backward' → logprob: -14.202290534973145

Token 357: '_graph' (ID: 33441)
  Prédit: '_graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_graph' → logprob: -3.292907877039397e-06
    2. '_' → logprob: -13.37500286102295
    3. ' _' → logprob: -14.37500286102295
    4. '_forward' → logprob: -15.12500286102295
    5. '"_' → logprob: -15.50000286102295
    6. '_g' → logprob: -15.87500286102295
    7. 'graph' → logprob: -16.750003814697266
    8. '_f' → logprob: -17.000003814697266
    9. '```' → logprob: -17.000003814697266
    10. '_gr' → logprob: -17.125003814697266

Token 358: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759403705596924
    2. '=' → logprob: -0.8259403705596924
    3. ' ' → logprob: -14.825940132141113
    4. 's' → logprob: -15.575940132141113
    5. '   ' → logprob: -16.45094108581543
    6. ')' → logprob: -16.95094108581543
    7. ':' → logprob: -17.07594108581543
    8. '=self' → logprob: -17.07594108581543
    9. 'self' → logprob: -17.20094108581543
    10. '=
' → logprob: -17.32594108581543

Token 359: ' Directed' (ID: 126065)
  Prédit: 'Directed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Directed' → logprob: -0.28118112683296204
    2. ' Directed' → logprob: -1.4061810970306396
    3. '   ' → logprob: -11.531181335449219
    4. 'Direct' → logprob: -12.031181335449219
    5. '  ' → logprob: -12.281181335449219
    6. ' ' → logprob: -12.281181335449219
    7. ' directed' → logprob: -12.906181335449219
    8. '       ' → logprob: -13.406181335449219
    9. 'Director' → logprob: -14.781181335449219
    10. '	' → logprob: -15.031181335449219

Token 360: 'Graph' (ID: 9922)
  Prédit: 'Directed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Directed' → logprob: -0.47434118390083313
    2. 'Graph' → logprob: -0.9743411540985107
    3. ' Directed' → logprob: -8.34934139251709
    4. 'graph' → logprob: -11.72434139251709
    5. 'irected' → logprob: -11.84934139251709
    6. ' Graph' → logprob: -12.34934139251709
    7. 'Direct' → logprob: -12.72434139251709
    8. 'raph' → logprob: -13.59934139251709
    9. '_graph' → logprob: -13.84934139251709
    10. 'Graphs' → logprob: -14.97434139251709

Token 361: '(num' (ID: 15828)
  Prédit: '(num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(num' → logprob: -1.2664456789934775e-06
    2. 'num' → logprob: -13.875000953674316
    3. ' (' → logprob: -15.625000953674316
    4. '(' → logprob: -16.750001907348633
    5. ' num' → logprob: -17.625001907348633
    6. '=num' → logprob: -19.000001907348633
    7. '       ' → logprob: -19.125001907348633
    8. ',num' → logprob: -19.250001907348633
    9. '[num' → logprob: -19.875001907348633
    10. '<num' → logprob: -20.500001907348633

Token 362: '_nodes' (ID: 34593)
  Prédit: '_nodes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_nodes' → logprob: -7.672236824873835e-05
    2. 'nodes' → logprob: -9.500076293945312
    3. 'odes' → logprob: -14.750076293945312
    4. 'Nodes' → logprob: -15.250076293945312
    5. '
' → logprob: -15.500076293945312
    6. 's' → logprob: -15.625076293945312
    7. '```' → logprob: -15.750076293945312
    8. ' nodes' → logprob: -15.875076293945312
    9. 'num' → logprob: -16.500076293945312
    10. 'import' → logprob: -16.625076293945312

Token 363: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.869017852295656e-06
    2. ')
' → logprob: -12.375006675720215
    3. ' )' → logprob: -13.000006675720215
    4. '       ' → logprob: -15.875006675720215
    5. '   ' → logprob: -16.12500762939453
    6. '<|end|>' → logprob: -17.00000762939453
    7. ')

' → logprob: -17.50000762939453
    8. '),' → logprob: -17.87500762939453
    9. '))' → logprob: -18.37500762939453
    10. ' ' → logprob: -18.75000762939453

Token 364: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.06984750181436539
    2. '   ' → logprob: -3.569847583770752
    3. '<|end|>' → logprob: -3.569847583770752
    4. 'def' → logprob: -5.319847583770752
    5. '    
' → logprob: -6.069847583770752
    6. ' 
' → logprob: -6.444847583770752
    7. ' def' → logprob: -7.069847583770752
    8. '

' → logprob: -7.694847583770752
    9. '<|end|>' → logprob: -8.194847106933594
    10. '  
' → logprob: -8.319847106933594

Token 365: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0009605350787751377
    2. ' def' → logprob: -7.000960350036621
    3. '   ' → logprob: -10.125960350036621
    4. '
' → logprob: -11.625960350036621
    5. '	def' → logprob: -16.000961303710938
    6. '    
' → logprob: -17.250961303710938
    7. ' ' → logprob: -18.125961303710938
    8. '

' → logprob: -19.375961303710938
    9. '```' → logprob: -19.500961303710938
    10. 'de' → logprob: -20.125961303710938

Token 366: ' add' (ID: 1147)
  Prédit: 'add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' → logprob: -0.5759838223457336
    2. ' add' → logprob: -0.8259838223457336
    3. 'def' → logprob: -10.200984001159668
    4. ' def' → logprob: -12.325984001159668
    5. ' ' → logprob: -14.075984001159668
    6. '_add' → logprob: -14.325984001159668
    7. '.add' → logprob: -14.575984001159668
    8. ')add' → logprob: -15.200984001159668
    9. '	add' → logprob: -15.325984001159668
    10. '   ' → logprob: -15.450984001159668

Token 367: '_bid' (ID: 149277)
  Prédit: '_edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_edge' → logprob: -7.226628895296017e-06
    2. '_' → logprob: -12.000007629394531
    3. '_edges' → logprob: -14.375007629394531
    4. ' _' → logprob: -15.625007629394531
    5. '_ed' → logprob: -16.50000762939453
    6. '_e' → logprob: -17.50000762939453
    7. '_line' → logprob: -17.62500762939453
    8. '_node' → logprob: -17.62500762939453
    9. '__' → logprob: -18.25000762939453
    10. '"_' → logprob: -18.25000762939453

Token 368: 'irectional' (ID: 86044)
  Prédit: '_edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edge' → logprob: -0.4756312072277069
    2. 'irectional' → logprob: -0.9756312370300293
    3. '_' → logprob: -7.725631237030029
    4. 'irection' → logprob: -7.850631237030029
    5. '_edges' → logprob: -8.350630760192871
    6. 'ge' → logprob: -9.225630760192871
    7. '   ' → logprob: -9.225630760192871
    8. 'dge' → logprob: -9.600630760192871
    9. 'irected' → logprob: -9.975630760192871
    10. 'ir' → logprob: -10.100630760192871

Token 369: '_edge' (ID: 43226)
  Prédit: '_edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edge' → logprob: -0.001419995678588748
    2. '_' → logprob: -6.751420021057129
    3. '_edges' → logprob: -9.376420021057129
    4. '(self' → logprob: -9.876420021057129
    5. '_node' → logprob: -10.751420021057129
    6. '_line' → logprob: -11.001420021057129
    7. ')_' → logprob: -11.251420021057129
    8. '```' → logprob: -11.376420021057129
    9. 'self' → logprob: -12.126420021057129
    10. '"_' → logprob: -12.251420021057129

Token 370: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -1.7432603272027336e-06
    2. '(' → logprob: -13.500001907348633
    3. 'self' → logprob: -15.250001907348633
    4. ' (' → logprob: -17.250001907348633
    5. '(
' → logprob: -17.875001907348633
    6. '(s' → logprob: -19.000001907348633
    7. '   ' → logprob: -19.125001907348633
    8. ' self' → logprob: -19.625001907348633
    9. '(sel' → logprob: -20.875001907348633
    10. '=self' → logprob: -21.250001907348633

Token 371: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00029244067263789475
    2. '(self' → logprob: -8.375292778015137
    3. ' ,' → logprob: -10.250292778015137
    4. 'self' → logprob: -11.250292778015137
    5. ')' → logprob: -12.125292778015137
    6. ')(' → logprob: -12.750292778015137
    7. '       ' → logprob: -13.000292778015137
    8. '   ' → logprob: -13.250292778015137
    9. ',
' → logprob: -15.250292778015137
    10. ' (' → logprob: -15.250292778015137

Token 372: ' node' (ID: 4596)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.3553076684474945
    2. ' self' → logprob: -1.230307698249817
    3. 'from' → logprob: -5.105307579040527
    4. ' from' → logprob: -7.230307579040527
    5. '   ' → logprob: -10.355307579040527
    6. '(self' → logprob: -11.980307579040527
    7. ' ' → logprob: -12.605307579040527
    8. ')' → logprob: -13.105307579040527
    9. '	self' → logprob: -13.105307579040527
    10. '       ' → logprob: -13.230307579040527

Token 373: '_a' (ID: 10852)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.11261057108640671
    2. ':' → logprob: -2.6126105785369873
    3. ',' → logprob: -3.7376105785369873
    4. '_a' → logprob: -5.612610340118408
    5. 'self' → logprob: -6.237610340118408
    6. '_from' → logprob: -6.862610340118408
    7. '   ' → logprob: -7.362610340118408
    8. 'A' → logprob: -7.612610340118408
    9. 'a' → logprob: -7.987610340118408
    10. ')' → logprob: -8.362610816955566

Token 374: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0011843960965052247
    2. ' ,' → logprob: -6.751184463500977
    3. ':' → logprob: -11.376184463500977
    4. ',node' → logprob: -13.376184463500977
    5. '   ' → logprob: -14.501184463500977
    6. 'self' → logprob: -15.126184463500977
    7. ',self' → logprob: -16.376184463500977
    8. ',
' → logprob: -16.626184463500977
    9. '‌,' → logprob: -17.001184463500977
    10. ' ' → logprob: -17.001184463500977

Token 375: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.31327712535858154
    2. ' int' → logprob: -1.3132771253585815
    3. ':int' → logprob: -11.563277244567871
    4. ',int' → logprob: -13.063277244567871
    5. ')' → logprob: -14.063277244567871
    6. '[int' → logprob: -14.313277244567871
    7. ' ' → logprob: -14.438277244567871
    8. ',' → logprob: -14.563277244567871
    9. '<int' → logprob: -14.563277244567871
    10. '(int' → logprob: -14.688277244567871

Token 376: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.7848862373502925e-05
    2. ' ,' → logprob: -10.500027656555176
    3. ',node' → logprob: -15.875027656555176
    4. '   ' → logprob: -17.125028610229492
    5. ':' → logprob: -17.375028610229492
    6. ',
' → logprob: -17.750028610229492
    7. '‌,' → logprob: -18.250028610229492
    8. ')' → logprob: -18.500028610229492
    9. ',int' → logprob: -19.125028610229492
    10. '_,' → logprob: -19.875028610229492

Token 377: ' node' (ID: 4596)
  Prédit: ' node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' node' → logprob: -0.07890168577432632
    2. 'node' → logprob: -2.578901767730713
    3. '   ' → logprob: -12.578901290893555
    4. '    ' → logprob: -12.578901290893555
    5. '	node' → logprob: -13.578901290893555
    6. ',node' → logprob: -13.953901290893555
    7. '(node' → logprob: -14.328901290893555
    8. ')' → logprob: -14.453901290893555
    9. ' ' → logprob: -14.828901290893555
    10. 'int' → logprob: -15.078901290893555

Token 378: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.043066903948783875
    2. '_a' → logprob: -3.16806697845459
    3. '   ' → logprob: -10.29306697845459
    4. 'a' → logprob: -10.91806697845459
    5. 'b' → logprob: -11.91806697845459
    6. ',' → logprob: -12.79306697845459
    7. ':' → logprob: -13.41806697845459
    8. ')' → logprob: -13.66806697845459
    9. 'B' → logprob: -14.16806697845459
    10. ' _' → logprob: -14.41806697845459

Token 379: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.043207798153162
    2. ':' → logprob: -3.168207883834839
    3. ' ,' → logprob: -9.418208122253418
    4. '):' → logprob: -9.918208122253418
    5. ':int' → logprob: -10.293208122253418
    6. ')' → logprob: -10.793208122253418
    7. '   ' → logprob: -11.918208122253418
    8. ',int' → logprob: -12.293208122253418
    9. 'int' → logprob: -12.543208122253418
    10. ' :' → logprob: -13.043208122253418

Token 380: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.2519392669200897
    2. ' int' → logprob: -1.501939296722412
    3. ')' → logprob: -12.751938819885254
    4. ':int' → logprob: -12.876938819885254
    5. '[int' → logprob: -13.501938819885254
    6. ' ' → logprob: -14.001938819885254
    7. '	int' → logprob: -14.751938819885254
    8. ',int' → logprob: -14.751938819885254
    9. '<int' → logprob: -14.751938819885254
    10. '   ' → logprob: -14.876938819885254

Token 381: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00024311232846230268
    2. ' ,' → logprob: -8.500243186950684
    3. ':' → logprob: -10.250243186950684
    4. ')' → logprob: -12.875243186950684
    5. ',int' → logprob: -14.375243186950684
    6. '   ' → logprob: -14.750243186950684
    7. '):' → logprob: -15.375243186950684
    8. ' ' → logprob: -16.250242233276367
    9. ',
' → logprob: -16.375242233276367
    10. 'int' → logprob: -16.375242233276367

Token 382: ' cost' (ID: 3097)
  Prédit: ' cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cost' → logprob: -0.016041642054915428
    2. 'cost' → logprob: -4.1410417556762695
    3. ' weight' → logprob: -13.14104175567627
    4. '    ' → logprob: -13.64104175567627
    5. 'weight' → logprob: -14.01604175567627
    6. ')' → logprob: -14.14104175567627
    7. ' ' → logprob: -14.39104175567627
    8. '   ' → logprob: -14.51604175567627
    9. 'int' → logprob: -14.76604175567627
    10. ' int' → logprob: -15.14104175567627

Token 383: '_ab' (ID: 53632)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.028021972626447678
    2. ')' → logprob: -3.903022050857544
    3. '):' → logprob: -4.903021812438965
    4. '   ' → logprob: -11.153021812438965
    5. '):
' → logprob: -12.278021812438965
    6. ' )' → logprob: -12.903021812438965
    7. ' ' → logprob: -13.153021812438965
    8. '=' → logprob: -13.403021812438965
    9. ':int' → logprob: -13.528021812438965
    10. ' ):' → logprob: -14.028021812438965

Token 384: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0754479467868805
    2. ')' → logprob: -3.2004480361938477
    3. '):' → logprob: -3.4504480361938477
    4. '):
' → logprob: -8.950448036193848
    5. '   ' → logprob: -10.450448036193848
    6. ',' → logprob: -11.325448036193848
    7. '=' → logprob: -11.700448036193848
    8. ':int' → logprob: -12.450448036193848
    9. ' )' → logprob: -12.575448036193848
    10. ' ' → logprob: -12.950448036193848

Token 385: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.061999399214982986
    2. ' int' → logprob: -2.8119993209838867
    3. ')' → logprob: -10.686999320983887
    4. ':int' → logprob: -11.936999320983887
    5. '[int' → logprob: -14.311999320983887
    6. '=int' → logprob: -14.936999320983887
    7. ' ' → logprob: -15.436999320983887
    8. '	int' → logprob: -15.561999320983887
    9. '):
' → logprob: -15.686999320983887
    10. ']int' → logprob: -15.686999320983887

Token 386: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0015154577558860183
    2. '):' → logprob: -6.6265153884887695
    3. ',' → logprob: -9.25151538848877
    4. '):
' → logprob: -9.37651538848877
    5. ' )' → logprob: -12.25151538848877
    6. '   ' → logprob: -13.12651538848877
    7. ':' → logprob: -13.87651538848877
    8. '):
' → logprob: -14.50151538848877
    9. ')->' → logprob: -15.50151538848877
    10. '),' → logprob: -15.75151538848877

Token 387: ' cost' (ID: 3097)
  Prédit: ' cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cost' → logprob: -0.16023823618888855
    2. 'cost' → logprob: -1.910238265991211
    3. '   ' → logprob: -11.785238265991211
    4. ' ' → logprob: -14.035238265991211
    5. ' costo' → logprob: -14.035238265991211
    6. '
' → logprob: -14.285238265991211
    7. '_cost' → logprob: -14.285238265991211
    8. ' kost' → logprob: -14.535238265991211
    9. '    ' → logprob: -14.535238265991211
    10. ' custo' → logprob: -14.910238265991211

Token 388: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.0075227501802146435
    2. '_ab' → logprob: -5.0075225830078125
    3. '_bc' → logprob: -7.2575225830078125
    4. '=' → logprob: -9.757522583007812
    5. ' ba' → logprob: -11.007522583007812
    6. '```' → logprob: -12.507522583007812
    7. '=_' → logprob: -12.882522583007812
    8. '_bs' → logprob: -13.007522583007812
    9. '_bb' → logprob: -13.007522583007812
    10. '_cb' → logprob: -13.007522583007812

Token 389: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0013979760697111487
    2. '_a' → logprob: -6.876398086547852
    3. '_' → logprob: -9.376398086547852
    4. '_to' → logprob: -9.376398086547852
    5. '```' → logprob: -10.126398086547852
    6. 'c' → logprob: -10.376398086547852
    7. ')' → logprob: -10.501398086547852
    8. '_ab' → logprob: -10.751398086547852
    9. '=' → logprob: -11.001398086547852
    10. '_b' → logprob: -11.001398086547852

Token 390: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002570544835180044
    2. ')' → logprob: -6.002570629119873
    3. '):' → logprob: -9.377570152282715
    4. ':int' → logprob: -11.752570152282715
    5. ' )' → logprob: -13.752570152282715
    6. '=' → logprob: -14.252570152282715
    7. ' :' → logprob: -15.252570152282715
    8. '   ' → logprob: -16.25257110595703
    9. 'int' → logprob: -16.37757110595703
    10. '):
' → logprob: -16.50257110595703

Token 391: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.016043519601225853
    2. ' int' → logprob: -4.141043663024902
    3. ')' → logprob: -11.891043663024902
    4. ' ' → logprob: -14.766043663024902
    5. 'Optional' → logprob: -14.766043663024902
    6. '[int' → logprob: -14.766043663024902
    7. ':int' → logprob: -15.016043663024902
    8. '   ' → logprob: -15.016043663024902
    9. ' )' → logprob: -15.766043663024902
    10. '=int' → logprob: -16.391042709350586

Token 392: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001495484757469967
    2. '):' → logprob: -9.000149726867676
    3. '):
' → logprob: -10.750149726867676
    4. '   ' → logprob: -12.500149726867676
    5. ' )' → logprob: -14.500149726867676
    6. ':' → logprob: -15.875149726867676
    7. '):
' → logprob: -16.12514877319336
    8. ')->' → logprob: -16.37514877319336
    9. '`)' → logprob: -17.25014877319336
    10. '       ' → logprob: -17.37514877319336

Token 393: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.010378633625805378
    2. ':
' → logprob: -4.635378837585449
    3. '):' → logprob: -7.885378837585449
    4. '):
' → logprob: -8.76037883758545
    5. ')' → logprob: -10.13537883758545
    6. '       ' → logprob: -10.26037883758545
    7. '   ' → logprob: -11.51037883758545
    8. '():
' → logprob: -13.51037883758545
    9. '():' → logprob: -13.88537883758545
    10. ':def' → logprob: -14.63537883758545

Token 394: ' None' (ID: 4662)
  Prédit: ' None'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' None' → logprob: -0.3132617771625519
    2. 'None' → logprob: -1.3132617473602295
    3. '   ' → logprob: -17.438261032104492
    4. '_None' → logprob: -18.438261032104492
    5. '(None' → logprob: -18.563261032104492
    6. ' ' → logprob: -18.563261032104492
    7. 'No' → logprob: -19.313261032104492
    8. 'int' → logprob: -20.063261032104492
    9. ' No' → logprob: -20.563261032104492
    10. '=None' → logprob: -21.563261032104492

Token 395: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.008948751725256443
    2. ':
' → logprob: -4.883948802947998
    3. '):' → logprob: -7.133948802947998
    4. '       ' → logprob: -7.883948802947998
    5. '):
' → logprob: -8.75894832611084
    6. '():' → logprob: -12.50894832611084
    7. '   ' → logprob: -13.13394832611084
    8. ')' → logprob: -13.25894832611084
    9. '():
' → logprob: -14.13394832611084
    10. '<|end|>' → logprob: -14.75894832611084

Token 396: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -3.4881879400927573e-05
    2. 'self' → logprob: -10.750035285949707
    3. ' self' → logprob: -11.750035285949707
    4. '```' → logprob: -12.500035285949707
    5. '   ' → logprob: -14.500035285949707
    6. '        
' → logprob: -15.000035285949707
    7. '
' → logprob: -15.125035285949707
    8. '<|end|>' → logprob: -15.875035285949707
    9. ' ' → logprob: -16.50003433227539
    10. ',' → logprob: -16.75003433227539

Token 397: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6935247778892517
    2. 'self' (adapté à ' self') → logprob: -0.6935247778892517
    3. ' self' → logprob: -7.9435248374938965
    4. '
' → logprob: -10.818524360656738
    5. '```' → logprob: -13.568524360656738
    6. '   ' → logprob: -14.943524360656738
    7. '(self' → logprob: -15.193524360656738
    8. '	self' → logprob: -15.443524360656738
    9. '#' → logprob: -15.943524360656738
    10. '[self' → logprob: -16.193525314331055

Token 398: '.forward' (ID: 53266)
  Prédit: '.forward'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.forward' → logprob: -0.00026860725483857095
    2. '.' → logprob: -8.250268936157227
    3. '.for' → logprob: -12.750268936157227
    4. 'forward' → logprob: -13.250268936157227
    5. ' .' → logprob: -13.625268936157227
    6. '.reverse' → logprob: -15.125268936157227
    7. '.add' → logprob: -15.250268936157227
    8. '.self' → logprob: -15.375268936157227
    9. '.backward' → logprob: -16.375268936157227
    10. 'Forward' → logprob: -16.625268936157227

Token 399: '_graph' (ID: 33441)
  Prédit: '_graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_graph' → logprob: -0.00020985817536711693
    2. '._' → logprob: -8.50020980834961
    3. '.' → logprob: -12.75020980834961
    4. '.graph' → logprob: -13.50020980834961
    5. 'Graph' → logprob: -15.00020980834961
    6. 'graph' → logprob: -15.00020980834961
    7. ' .' → logprob: -15.00020980834961
    8. '.add' → logprob: -15.12520980834961
    9. '.Graph' → logprob: -15.50020980834961
    10. '_GRAPH' → logprob: -15.75020980834961

Token 400: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -1.1756367712223437e-05
    2. '.' → logprob: -11.375011444091797
    3. 'add' → logprob: -16.500011444091797
    4. ' .' → logprob: -16.750011444091797
    5. ').' → logprob: -17.500011444091797
    6. '.append' → logprob: -18.125011444091797
    7. '}.' → logprob: -19.250011444091797
    8. '.ad' → logprob: -19.250011444091797
    9. '`.' → logprob: -19.500011444091797
    10. '.Add' → logprob: -19.875011444091797

Token 401: '_edge' (ID: 43226)
  Prédit: '_edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edge' → logprob: -5.512236498361744e-07
    2. '_' → logprob: -15.250000953674316
    3. '_bid' → logprob: -15.250000953674316
    4. 'edge' → logprob: -18.625
    5. '_ed' → logprob: -19.0
    6. '_edges' → logprob: -19.25
    7. '_EDGE' → logprob: -20.0
    8. '_node' → logprob: -20.0
    9. '_e' → logprob: -20.375
    10. '__' → logprob: -20.625

Token 402: '(node' (ID: 13356)
  Prédit: '(node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(node' → logprob: -3.7697225252486533e-06
    2. '(' → logprob: -12.500003814697266
    3. '(
' → logprob: -17.625003814697266
    4. 'node' → logprob: -18.750003814697266
    5. '(Node' → logprob: -18.875003814697266
    6. ' (' → logprob: -20.000003814697266
    7. '=node' → logprob: -20.875003814697266
    8. '(n' → logprob: -21.000003814697266
    9. ',node' → logprob: -21.250003814697266
    10. ' node' → logprob: -21.250003814697266

Token 403: '_a' (ID: 10852)
  Prédit: '_a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -0.000111768240458332
    2. '_' → logprob: -10.25011157989502
    3. 'a' → logprob: -10.37511157989502
    4. ')_' → logprob: -10.50011157989502
    5. '_b' → logprob: -12.25011157989502
    6. '}_' → logprob: -12.62511157989502
    7. ')' → logprob: -13.62511157989502
    8. '```' → logprob: -13.62511157989502
    9. '_ab' → logprob: -13.75011157989502
    10. 'A' → logprob: -14.00011157989502

Token 404: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.4418171455617994e-05
    2. ' ,' → logprob: -10.375044822692871
    3. ',node' → logprob: -11.250044822692871
    4. ')' → logprob: -15.750044822692871
    5. ',
' → logprob: -17.500043869018555
    6. ',n' → logprob: -18.500043869018555
    7. '<|end|>' → logprob: -18.500043869018555
    8. '‌,' → logprob: -18.875043869018555
    9. ',user' → logprob: -19.375043869018555
    10. ',b' → logprob: -19.500043869018555

Token 405: ' node' (ID: 4596)
  Prédit: ' node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' node' → logprob: -0.018151231110095978
    2. 'node' → logprob: -4.01815128326416
    3. ')' → logprob: -14.64315128326416
    4. ' ' → logprob: -15.01815128326416
    5. '(node' → logprob: -15.14315128326416
    6. '=node' → logprob: -16.393150329589844
    7. '	node' → logprob: -16.643150329589844
    8. ',node' → logprob: -17.143150329589844
    9. 'Node' → logprob: -17.643150329589844
    10. '[node' → logprob: -18.143150329589844

Token 406: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.002756972098723054
    2. 'b' → logprob: -6.3777570724487305
    3. '_a' → logprob: -7.0027570724487305
    4. ',' → logprob: -9.62775707244873
    5. 'B' → logprob: -10.75275707244873
    6. 'a' → logprob: -10.75275707244873
    7. ')' → logprob: -11.12775707244873
    8. ')_' → logprob: -12.00275707244873
    9. '```' → logprob: -12.50275707244873
    10. '   ' → logprob: -13.37775707244873

Token 407: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.4391956685576588e-05
    2. ' ,' → logprob: -10.625024795532227
    3. ',
' → logprob: -17.000024795532227
    4. ',c' → logprob: -17.125024795532227
    5. ')' → logprob: -17.875024795532227
    6. '       ' → logprob: -19.125024795532227
    7. '),' → logprob: -19.750024795532227
    8. 'cost' → logprob: -19.750024795532227
    9. ' cost' → logprob: -20.000024795532227
    10. '   ' → logprob: -20.125024795532227

Token 408: ' cost' (ID: 3097)
  Prédit: ' cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cost' → logprob: -0.2519293427467346
    2. 'cost' → logprob: -1.5019292831420898
    3. '(cost' → logprob: -15.50192928314209
    4. 'Cost' → logprob: -18.001930236816406
    5. '_cost' → logprob: -18.001930236816406
    6. ' kost' → logprob: -18.126930236816406
    7. ')' → logprob: -18.376930236816406
    8. 'c' → logprob: -19.001930236816406
    9. ' custo' → logprob: -19.626930236816406
    10. ' costo' → logprob: -19.876930236816406

Token 409: '_ab' (ID: 53632)
  Prédit: '_ab'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ab' → logprob: -4.320199877838604e-07
    2. 'ab' → logprob: -15.375
    3. '_)' → logprob: -16.875
    4. ')' → logprob: -16.875
    5. '_AB' → logprob: -17.25
    6. '_cost' → logprob: -17.25
    7. '_' → logprob: -17.375
    8. '=' → logprob: -17.5
    9. 'AB' → logprob: -20.625
    10. 'Ab' → logprob: -20.75

Token 410: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.4751476049423218
    2. ')' → logprob: -0.9751476049423218
    3. '       ' → logprob: -6.850147724151611
    4. ')
' → logprob: -11.725147247314453
    5. '   ' → logprob: -13.475147247314453
    6. ' )
' → logprob: -14.850147247314453
    7. ')

' → logprob: -14.975147247314453
    8. ' ' → logprob: -16.100147247314453
    9. ' )' → logprob: -16.100147247314453
    10. '),' → logprob: -16.100147247314453

Token 411: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0015442610019817948
    2. 'self' → logprob: -6.50154447555542
    3. ' self' → logprob: -10.876543998718262
    4. '
' → logprob: -11.001543998718262
    5. '```' → logprob: -12.251543998718262
    6. '        
' → logprob: -13.876543998718262
    7. '   ' → logprob: -15.876543998718262
    8. ' 
' → logprob: -15.876543998718262
    9. ' ' → logprob: -16.501544952392578
    10. '	' → logprob: -16.751544952392578

Token 412: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0002084277366520837
    2. ' self' → logprob: -8.500208854675293
    3. '       ' → logprob: -12.250208854675293
    4. '
' → logprob: -15.750208854675293
    5. '	self' → logprob: -20.125207901000977
    6. '```' → logprob: -21.000207901000977
    7. '        
' → logprob: -21.250207901000977
    8. '[self' → logprob: -21.500207901000977
    9. '   ' → logprob: -22.375207901000977
    10. '(self' → logprob: -22.625207901000977

Token 413: '.forward' (ID: 53266)
  Prédit: '.reverse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.reverse' → logprob: -9.543733904138207e-05
    2. '.' → logprob: -9.75009536743164
    3. '.forward' → logprob: -10.62509536743164
    4. 'reverse' → logprob: -11.37509536743164
    5. ' .' → logprob: -13.87509536743164
    6. '.re' → logprob: -15.75009536743164
    7. '.backward' → logprob: -15.87509536743164
    8. 'Reverse' → logprob: -17.12509536743164
    9. ' reverse' → logprob: -17.25009536743164
    10. '.reply' → logprob: -17.62509536743164

Token 414: '_graph' (ID: 33441)
  Prédit: '_graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_graph' → logprob: -0.014574539847671986
    2. '._' → logprob: -4.2645745277404785
    3. '.reverse' → logprob: -8.014575004577637
    4. '.' → logprob: -10.014575004577637
    5. 'reverse' → logprob: -11.514575004577637
    6. ' .' → logprob: -11.889575004577637
    7. '.graph' → logprob: -12.139575004577637
    8. '_.' → logprob: -12.264575004577637
    9. 'Graph' → logprob: -13.889575004577637
    10. '_' → logprob: -13.889575004577637

Token 415: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.013336578384041786
    2. '.reverse' → logprob: -4.388336658477783
    3. '.' → logprob: -7.138336658477783
    4. '.ad' → logprob: -11.888336181640625
    5. '_reverse' → logprob: -12.388336181640625
    6. ' .' → logprob: -12.513336181640625
    7. 'reverse' → logprob: -12.513336181640625
    8. 'add' → logprob: -12.888336181640625
    9. '   ' → logprob: -13.013336181640625
    10. '.forward' → logprob: -13.138336181640625

Token 416: '_edge' (ID: 43226)
  Prédit: '_edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edge' → logprob: -0.0005089493934065104
    2. 'edge' → logprob: -8.000509262084961
    3. '_bid' → logprob: -8.750509262084961
    4. '_' → logprob: -13.000509262084961
    5. '_node' → logprob: -13.000509262084961
    6. 'Edge' → logprob: -13.375509262084961
    7. '_edges' → logprob: -13.375509262084961
    8. '_EDGE' → logprob: -13.875509262084961
    9. ' edge' → logprob: -14.000509262084961
    10. 'bid' → logprob: -14.125509262084961

Token 417: '(node' (ID: 13356)
  Prédit: '(node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(node' → logprob: -0.0040807779878377914
    2. '(' → logprob: -5.504080772399902
    3. '(
' → logprob: -13.379080772399902
    4. ' (' → logprob: -14.379080772399902
    5. '(n' → logprob: -16.25408172607422
    6. 'node' → logprob: -17.12908172607422
    7. '(Node' → logprob: -17.62908172607422
    8. ' node' → logprob: -17.87908172607422
    9. '[node' → logprob: -18.62908172607422
    10. ',node' → logprob: -19.25408172607422

Token 418: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -5.633853652398102e-05
    2. '_a' → logprob: -10.250056266784668
    3. 'b' → logprob: -11.000056266784668
    4. '_' → logprob: -13.125056266784668
    5. 'a' → logprob: -14.625056266784668
    6. ')_' → logprob: -15.125056266784668
    7. '_
' → logprob: -15.500056266784668
    8. '
' → logprob: -15.625056266784668
    9. '```' → logprob: -15.625056266784668
    10. ' _' → logprob: -15.750056266784668

Token 419: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.3544423381972592e-05
    2. ' ,' → logprob: -11.75001335144043
    3. ',node' → logprob: -12.25001335144043
    4. ')' → logprob: -14.37501335144043
    5. '),' → logprob: -16.50001335144043
    6. '_,' → logprob: -17.50001335144043
    7. '‌,' → logprob: -18.25001335144043
    8. '<|end|>' → logprob: -18.25001335144043
    9. ',
' → logprob: -18.37501335144043
    10. '   ' → logprob: -19.12501335144043

Token 420: ' node' (ID: 4596)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.4299556016921997
    2. ' node' → logprob: -1.0549556016921997
    3. 'cost' → logprob: -7.17995548248291
    4. '0' → logprob: -8.80495548248291
    5. ' cost' → logprob: -9.05495548248291
    6. '1' → logprob: -9.05495548248291
    7. ' ' → logprob: -11.17995548248291
    8. 'a' → logprob: -11.17995548248291
    9. '   ' → logprob: -11.30495548248291
    10. ')' → logprob: -11.55495548248291

Token 421: '_a' (ID: 10852)
  Prédit: '_a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -0.0013796406565234065
    2. '_b' → logprob: -6.751379489898682
    3. 'a' → logprob: -8.50137996673584
    4. ',' → logprob: -13.75137996673584
    5. '   ' → logprob: -13.87637996673584
    6. 'A' → logprob: -14.37637996673584
    7. ' a' → logprob: -14.87637996673584
    8. ',a' → logprob: -15.00137996673584
    9. 'а' → logprob: -15.12637996673584
    10. ')' → logprob: -15.12637996673584

Token 422: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.85366350505501e-05
    2. ' ,' → logprob: -9.25009822845459
    3. ',c' → logprob: -13.62509822845459
    4. ')' → logprob: -14.37509822845459
    5. ' cost' → logprob: -15.50009822845459
    6. 'cost' → logprob: -16.375099182128906
    7. '),' → logprob: -16.750099182128906
    8. ',
' → logprob: -17.000099182128906
    9. '(cost' → logprob: -17.375099182128906
    10. '   ' → logprob: -18.250099182128906

Token 423: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.12692831456661224
    2. ' cost' → logprob: -2.1269283294677734
    3. '(cost' → logprob: -15.876928329467773
    4. '0' → logprob: -17.626928329467773
    5. 'Cost' → logprob: -17.876928329467773
    6. '_cost' → logprob: -18.001928329467773
    7. '1' → logprob: -18.751928329467773
    8. '.cost' → logprob: -19.376928329467773
    9. '   ' → logprob: -19.626928329467773
    10. 'code' → logprob: -19.626928329467773

Token 424: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.028992170467972755
    2. ',' → logprob: -3.653992176055908
    3. '=' → logprob: -7.153992176055908
    4. ' ' → logprob: -7.403992176055908
    5. ' cost' → logprob: -7.653992176055908
    6. ' ,' → logprob: -7.778992176055908
    7. ')' → logprob: -8.90399169921875
    8. 'cost' → logprob: -9.65399169921875
    9. '_cost' → logprob: -10.40399169921875
    10. ' )' → logprob: -10.52899169921875

Token 425: 'a' (ID: 64)
  Prédit: '_b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.1016840785741806
    2. 'ba' → logprob: -2.476684093475342
    3. 'a' → logprob: -4.601684093475342
    4. '_ab' → logprob: -6.601684093475342
    5. ' ba' → logprob: -7.726684093475342
    6. 'ab' → logprob: -8.101683616638184
    7. 'b' → logprob: -8.601683616638184
    8. ',' → logprob: -9.226683616638184
    9. '_a' → logprob: -9.601683616638184
    10. ')' → logprob: -9.976683616638184

Token 426: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00018780550453811884
    2. ')
' → logprob: -8.625187873840332
    3. '<|end|>' → logprob: -12.000187873840332
    4. '       ' → logprob: -13.375187873840332
    5. ')

' → logprob: -15.500187873840332
    6. ' )' → logprob: -15.750187873840332
    7. '   ' → logprob: -16.125186920166016
    8. '),' → logprob: -17.500186920166016
    9. '
' → logprob: -17.875186920166016
    10. ' ' → logprob: -17.875186920166016

Token 427: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02762719802558422
    2. '   ' → logprob: -4.152626991271973
    3. '
' → logprob: -4.777626991271973
    4. '<|end|>' → logprob: -5.902626991271973
    5. 'self' → logprob: -9.152626991271973
    6. '```' → logprob: -9.152626991271973
    7. ' ' → logprob: -9.652626991271973
    8. '        
' → logprob: -10.652626991271973
    9. '	' → logprob: -11.277626991271973
    10. ')' → logprob: -11.652626991271973

Token 428: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.014287851750850677
    2. '       ' → logprob: -4.264287948608398
    3. ' self' → logprob: -9.014287948608398
    4. '   ' → logprob: -13.014287948608398
    5. '	self' → logprob: -15.889287948608398
    6. '
' → logprob: -16.1392879486084
    7. '[self' → logprob: -16.5142879486084
    8. '```' → logprob: -16.7642879486084
    9. ' ' → logprob: -16.8892879486084
    10. '           ' → logprob: -17.5142879486084

Token 429: '.reverse' (ID: 65426)
  Prédit: '.reverse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.reverse' → logprob: -0.00026288547087460756
    2. 'reverse' → logprob: -8.250263214111328
    3. '.' → logprob: -13.625263214111328
    4. '.re' → logprob: -15.375263214111328
    5. ' reverse' → logprob: -17.125263214111328
    6. 'Reverse' → logprob: -17.125263214111328
    7. '_reverse' → logprob: -17.250263214111328
    8. '.backward' → logprob: -17.375263214111328
    9. '.reserve' → logprob: -17.875263214111328
    10. ' .' → logprob: -18.000263214111328

Token 430: '_graph' (ID: 33441)
  Prédit: '_graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_graph' → logprob: -8.006006828509271e-05
    2. '._' → logprob: -9.500080108642578
    3. '.' → logprob: -13.625080108642578
    4. '_' → logprob: -13.625080108642578
    5. '.Graph' → logprob: -14.375080108642578
    6. 'Graph' → logprob: -14.750080108642578
    7. '_GRAPH' → logprob: -15.000080108642578
    8. '_g' → logprob: -15.250080108642578
    9. '.graph' → logprob: -15.250080108642578
    10. '_gr' → logprob: -16.375080108642578

Token 431: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.00014084660506341606
    2. '.forward' → logprob: -9.000141143798828
    3. '.' → logprob: -11.500141143798828
    4. 'add' → logprob: -13.250141143798828
    5. '.reverse' → logprob: -13.375141143798828
    6. '.ad' → logprob: -13.375141143798828
    7. ' .' → logprob: -13.375141143798828
    8. '.for' → logprob: -15.750141143798828
    9. '_forward' → logprob: -16.375141143798828
    10. '.from' → logprob: -16.500141143798828

Token 432: '_edge' (ID: 43226)
  Prédit: '_edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edge' → logprob: -0.05066147446632385
    2. '_graph' → logprob: -3.425661563873291
    3. '_bid' → logprob: -4.425661563873291
    4. '_node' → logprob: -5.675661563873291
    5. 'edge' → logprob: -8.050661087036133
    6. 'irectional' → logprob: -8.050661087036133
    7. '_direction' → logprob: -8.675661087036133
    8. 'graph' → logprob: -9.050661087036133
    9. 'bid' → logprob: -9.050661087036133
    10. '_edges' → logprob: -9.175661087036133

Token 433: '(node' (ID: 13356)
  Prédit: '(node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(node' → logprob: -0.002485765377059579
    2. 'node' → logprob: -6.002485752105713
    3. ' node' → logprob: -12.127486228942871
    4. '(' → logprob: -13.377486228942871
    5. '=node' → logprob: -13.627486228942871
    6. '<|end|>' → logprob: -14.377486228942871
    7. '[node' → logprob: -14.502486228942871
    8. 'to' → logprob: -15.002486228942871
    9. '/node' → logprob: -16.377485275268555
    10. ',node' → logprob: -16.377485275268555

Token 434: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.22547589242458344
    2. '_a' → logprob: -1.6004759073257446
    3. '_node' → logprob: -10.350476264953613
    4. 'a' → logprob: -10.975476264953613
    5. '_n' → logprob: -12.100476264953613
    6. 'b' → logprob: -12.225476264953613
    7. 'node' → logprob: -13.225476264953613
    8. 'A' → logprob: -14.475476264953613
    9. '_nodes' → logprob: -16.037975311279297
    10. 'B' → logprob: -16.162975311279297

Token 435: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.4021237802808173e-05
    2. ')' → logprob: -12.000014305114746
    3. ' ,' → logprob: -12.000014305114746
    4. ',node' → logprob: -13.875014305114746
    5. '),' → logprob: -15.000014305114746
    6. '<|end|>' → logprob: -15.125014305114746
    7. ',
' → logprob: -17.00001335144043
    8. ',user' → logprob: -17.87501335144043
    9. '[' → logprob: -18.00001335144043
    10. '```' → logprob: -18.50001335144043

Token 436: ' node' (ID: 4596)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.0019291093340143561
    2. ' node' → logprob: -6.25192928314209
    3. 'a' → logprob: -16.376928329467773
    4. 'user' → logprob: -16.501928329467773
    5. '[node' → logprob: -16.626928329467773
    6. '(node' → logprob: -16.876928329467773
    7. ' ' → logprob: -17.001928329467773
    8. ',node' → logprob: -17.376928329467773
    9. '_node' → logprob: -17.501928329467773
    10. '	node' → logprob: -17.876928329467773

Token 437: '_a' (ID: 10852)
  Prédit: '_a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -0.00019495772721711546
    2. 'a' → logprob: -8.750194549560547
    3. ',' → logprob: -10.375194549560547
    4. ',a' → logprob: -12.375194549560547
    5. 'A' → logprob: -15.125194549560547
    6. '   ' → logprob: -15.750194549560547
    7. '_b' → logprob: -16.000194549560547
    8. ',node' → logprob: -16.250194549560547
    9. ')' → logprob: -16.500194549560547
    10. '_,' → logprob: -16.750194549560547

Token 438: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001222508290084079
    2. ',c' → logprob: -9.6251220703125
    3. ' ,' → logprob: -9.8751220703125
    4. ' cost' → logprob: -12.7501220703125
    5. 'cost' → logprob: -13.5001220703125
    6. '(cost' → logprob: -16.2501220703125
    7. ')' → logprob: -16.6251220703125
    8. '),' → logprob: -16.8751220703125
    9. '<|end|>' → logprob: -17.1251220703125
    10. '       ' → logprob: -17.5001220703125

Token 439: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.1269291490316391
    2. ' cost' → logprob: -2.1269290447235107
    3. '       ' → logprob: -14.62692928314209
    4. '(cost' → logprob: -15.50192928314209
    5. 'Cost' → logprob: -15.87692928314209
    6. '_cost' → logprob: -16.626928329467773
    7. 'c' → logprob: -16.626928329467773
    8. '   ' → logprob: -16.751928329467773
    9. '.cost' → logprob: -17.751928329467773
    10. '    ' → logprob: -17.876928329467773

Token 440: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.01401329692453146
    2. 'cost' → logprob: -4.514013290405273
    3. 'ba' → logprob: -5.889013290405273
    4. ' cost' → logprob: -9.264013290405273
    5. 'ab' → logprob: -9.889013290405273
    6. '_ab' → logprob: -10.264013290405273
    7. 'b' → logprob: -12.514013290405273
    8. 'bac' → logprob: -13.514013290405273
    9. '   ' → logprob: -13.639013290405273
    10. 'Ba' → logprob: -13.889013290405273

Token 441: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0027417545206844807
    2. 'ba' → logprob: -6.377741813659668
    3. 'ab' → logprob: -7.502741813659668
    4. '_b' → logprob: -8.377741813659668
    5. 'cost' → logprob: -9.127741813659668
    6. ')' → logprob: -9.502741813659668
    7. 'а' → logprob: -11.377741813659668
    8. '_a' → logprob: -11.377741813659668
    9. 'ta' → logprob: -11.502741813659668
    10. 'at' → logprob: -12.127741813659668

Token 442: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.014365635812282562
    2. ')
' → logprob: -4.2643656730651855
    3. '       ' → logprob: -8.639365196228027
    4. '<|end|>' → logprob: -10.764365196228027
    5. ' )' → logprob: -13.139365196228027
    6. '   ' → logprob: -14.389365196228027
    7. ')

' → logprob: -14.514365196228027
    8. '),' → logprob: -15.889365196228027
    9. ' )
' → logprob: -16.014366149902344
    10. ')
' → logprob: -16.014366149902344

Token 443: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.000680265249684453
    2. '<|end|>' → logprob: -7.500680446624756
    3. 'self' → logprob: -9.250679969787598
    4. '```' → logprob: -10.875679969787598
    5. '   ' → logprob: -12.125679969787598
    6. '	' → logprob: -13.750679969787598
    7. '
' → logprob: -13.875679969787598
    8. '<|end|>' → logprob: -14.000679969787598
    9. ' self' → logprob: -14.250679969787598
    10. ')' → logprob: -14.500679969787598

Token 444: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.020047763362526894
    2. '       ' → logprob: -4.020047664642334
    3. ' self' → logprob: -6.270047664642334
    4. '	self' → logprob: -13.395048141479492
    5. '[self' → logprob: -14.395048141479492
    6. '   ' → logprob: -14.395048141479492
    7. '(self' → logprob: -14.770048141479492
    8. '<|end|>' → logprob: -15.145048141479492
    9. ' ' → logprob: -15.770048141479492
    10. '```' → logprob: -16.020048141479492

Token 445: '.reverse' (ID: 65426)
  Prédit: '.reverse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.reverse' → logprob: -0.000492268183734268
    2. 'reverse' → logprob: -7.625492095947266
    3. '.' → logprob: -13.625492095947266
    4. ' .' → logprob: -13.750492095947266
    5. '.forward' → logprob: -14.250492095947266
    6. '_reverse' → logprob: -15.125492095947266
    7. '.re' → logprob: -15.125492095947266
    8. ' reverse' → logprob: -15.125492095947266
    9. 'Reverse' → logprob: -15.500492095947266
    10. '.inverse' → logprob: -16.500492095947266

Token 446: '_graph' (ID: 33441)
  Prédit: '_graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_graph' → logprob: -2.081584716506768e-05
    2. '._' → logprob: -11.000020980834961
    3. '_' → logprob: -13.250020980834961
    4. 'graph' → logprob: -14.000020980834961
    5. '.graph' → logprob: -15.250020980834961
    6. '.' → logprob: -15.500020980834961
    7. '_GRAPH' → logprob: -15.750020980834961
    8. 'Graph' → logprob: -15.875020980834961
    9. '```' → logprob: -16.25002098083496
    10. '.Graph' → logprob: -16.37502098083496

Token 447: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -1.759734732331708e-05
    2. '.' → logprob: -11.000017166137695
    3. 'add' → logprob: -14.750017166137695
    4. ' .' → logprob: -15.625017166137695
    5. '.ad' → logprob: -16.750017166137695
    6. ').' → logprob: -17.250017166137695
    7. '.Add' → logprob: -18.375017166137695
    8. ')add' → logprob: -18.375017166137695
    9. '```' → logprob: -18.750017166137695
    10. '<|end|>' → logprob: -18.875017166137695

Token 448: '_edge' (ID: 43226)
  Prédit: '_edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edge' → logprob: -7.696077227592468e-05
    2. 'edge' → logprob: -9.625077247619629
    3. '_node' → logprob: -11.625077247619629
    4. '(edge' → logprob: -14.250077247619629
    5. 'Edge' → logprob: -14.625077247619629
    6. '_EDGE' → logprob: -15.875077247619629
    7. '_error' → logprob: -16.250076293945312
    8. 'node' → logprob: -16.375076293945312
    9. '.edge' → logprob: -16.375076293945312
    10. 'ed' → logprob: -16.750076293945312

Token 449: '(node' (ID: 13356)
  Prédit: '(node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(node' → logprob: -6.749814019713085e-06
    2. '(' → logprob: -12.375006675720215
    3. ' (' → logprob: -13.625006675720215
    4. '(n' → logprob: -14.125006675720215
    5. '(
' → logprob: -15.125006675720215
    6. '(self' → logprob: -16.25000762939453
    7. '(Node' → logprob: -17.25000762939453
    8. 'node' → logprob: -17.25000762939453
    9. '[node' → logprob: -18.00000762939453
    10. ',node' → logprob: -18.12500762939453

Token 450: '_a' (ID: 10852)
  Prédit: '_a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -0.00010926496179308742
    2. 'a' → logprob: -9.375109672546387
    3. '_node' → logprob: -11.625109672546387
    4. '_n' → logprob: -12.250109672546387
    5. '_ab' → logprob: -13.250109672546387
    6. ')_' → logprob: -13.250109672546387
    7. 'A' → logprob: -13.500109672546387
    8. '_b' → logprob: -13.500109672546387
    9. '```' → logprob: -13.875109672546387
    10. ')' → logprob: -14.500109672546387

Token 451: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.968312951968983e-06
    2. ',node' → logprob: -11.625009536743164
    3. ' ,' → logprob: -14.375009536743164
    4. ')' → logprob: -15.250009536743164
    5. '<|end|>' → logprob: -17.250009536743164
    6. '(node' → logprob: -17.250009536743164
    7. ',
' → logprob: -17.375009536743164
    8. '[node' → logprob: -17.375009536743164
    9. ',b' → logprob: -18.000009536743164
    10. '```' → logprob: -18.125009536743164

Token 452: ' node' (ID: 4596)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.001170225441455841
    2. ' node' → logprob: -6.7511701583862305
    3. 'user' → logprob: -18.001171112060547
    4. '(node' → logprob: -18.251171112060547
    5. '   ' → logprob: -19.001171112060547
    6. '[node' → logprob: -19.126171112060547
    7. '	node' → logprob: -19.251171112060547
    8. ' ' → logprob: -19.376171112060547
    9. ',node' → logprob: -19.376171112060547
    10. '/node' → logprob: -20.001171112060547

Token 453: '_b' (ID: 1535)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.15243053436279297
    2. ',' → logprob: -2.152430534362793
    3. '_b' → logprob: -3.777430534362793
    4. ',b' → logprob: -6.402430534362793
    5. '_,' → logprob: -7.902430534362793
    6. ' ,' → logprob: -9.027430534362793
    7. '```' → logprob: -10.152430534362793
    8. ' ' → logprob: -10.652430534362793
    9. ' b' → logprob: -10.902430534362793
    10. '_' → logprob: -11.027430534362793

Token 454: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0087516784551553e-05
    2. ' ,' → logprob: -11.62501049041748
    3. ',c' → logprob: -14.25001049041748
    4. ')' → logprob: -15.37501049041748
    5. '),' → logprob: -16.500009536743164
    6. '<|end|>' → logprob: -17.000009536743164
    7. ',
' → logprob: -18.000009536743164
    8. '`,' → logprob: -18.125009536743164
    9. '       ' → logprob: -18.375009536743164
    10. 'cost' → logprob: -18.500009536743164

Token 455: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.20141343772411346
    2. ' cost' → logprob: -1.7014133930206299
    3. '(cost' → logprob: -17.326414108276367
    4. 'Cost' → logprob: -17.951414108276367
    5. 'code' → logprob: -18.576414108276367
    6. '       ' → logprob: -18.701414108276367
    7. '_cost' → logprob: -18.701414108276367
    8. '   ' → logprob: -18.826414108276367
    9. '```' → logprob: -19.076414108276367
    10. 'c' → logprob: -19.326414108276367

Token 456: '_ab' (ID: 53632)
  Prédit: '_ab'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ab' → logprob: -7.896309739408025e-07
    2. 'ab' → logprob: -14.125000953674316
    3. 'cost' → logprob: -17.0
    4. '_AB' → logprob: -17.625
    5. '_cost' → logprob: -18.375
    6. '   ' → logprob: -19.75
    7. ')' → logprob: -19.875
    8. 'Ab' → logprob: -19.875
    9. '_' → logprob: -20.0
    10. ' ' → logprob: -20.25

Token 457: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -9.233804303221405e-05
    2. '<|end|>' → logprob: -9.750092506408691
    3. ')
' → logprob: -10.500092506408691
    4. ' )' → logprob: -12.750092506408691
    5. '       ' → logprob: -13.500092506408691
    6. '   ' → logprob: -13.625092506408691
    7. '```' → logprob: -15.375092506408691
    8. ' ' → logprob: -15.625092506408691
    9. ')return' → logprob: -15.875092506408691
    10. '<|end|>' → logprob: -16.750091552734375

Token 458: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.30619746446609497
    2. '<|end|>' → logprob: -1.4311974048614502
    3. '
' → logprob: -3.93119740486145
    4. 'def' → logprob: -5.931197643280029
    5. '    
' → logprob: -7.431197643280029
    6. ' ' → logprob: -7.556197643280029
    7. '<|end|>' → logprob: -8.056197166442871
    8. ' def' → logprob: -8.056197166442871
    9. '```' → logprob: -8.306197166442871
    10. '  ' → logprob: -9.306197166442871

Token 459: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6129439473152161
    2. 'def' (adapté à ' def') → logprob: -1.4879438877105713
    3. '
' → logprob: -1.6129438877105713
    4. ' def' → logprob: -3.6129438877105713
    5. '    
' → logprob: -5.61294412612915
    6. '<|end|>' → logprob: -6.86294412612915
    7. ' 
' → logprob: -7.48794412612915
    8. ' ' → logprob: -8.112943649291992
    9. '```' → logprob: -8.487943649291992
    10. '  ' → logprob: -9.737943649291992

Token 460: ' add' (ID: 1147)
  Prédit: ' shortest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' shortest' → logprob: -0.273540198802948
    2. 'short' → logprob: -1.7735402584075928
    3. ' def' → logprob: -3.5235402584075928
    4. 'def' → logprob: -3.7735402584075928
    5. ' add' → logprob: -4.773540019989014
    6. ' short' → logprob: -4.898540019989014
    7. 'add' → logprob: -6.773540019989014
    8. 'Shortest' → logprob: -10.523540496826172
    9. '_short' → logprob: -11.023540496826172
    10. ' shorten' → logprob: -11.773540496826172

Token 461: '_edge' (ID: 43226)
  Prédit: '_edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edge' → logprob: -8.180258191714529e-06
    2. '_bid' → logprob: -12.000008583068848
    3. '_' → logprob: -13.375008583068848
    4. '_edges' → logprob: -15.375008583068848
    5. 'edge' → logprob: -16.12500762939453
    6. '_node' → logprob: -17.25000762939453
    7. '_
' → logprob: -17.87500762939453
    8. '_b' → logprob: -18.00000762939453
    9. ' _' → logprob: -18.00000762939453
    10. '__' → logprob: -18.25000762939453

Token 462: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0019362468738108873
    2. '(' → logprob: -6.251936435699463
    3. 'self' → logprob: -12.251935958862305
    4. '(
' → logprob: -12.876935958862305
    5. '(s' → logprob: -16.751935958862305
    6. ' (' → logprob: -16.751935958862305
    7. ',' → logprob: -17.376935958862305
    8. '   ' → logprob: -17.501935958862305
    9. ' ' → logprob: -18.126935958862305
    10. ',self' → logprob: -18.126935958862305

Token 463: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -4.453737710718997e-05
    2. ',' → logprob: -10.375044822692871
    3. '(' → logprob: -11.625044822692871
    4. ',self' → logprob: -13.125044822692871
    5. 'self' → logprob: -13.250044822692871
    6. '(
' → logprob: -15.250044822692871
    7. ' (' → logprob: -16.375043869018555
    8. '=self' → logprob: -16.500043869018555
    9. ')' → logprob: -17.000043869018555
    10. ' self' → logprob: -17.000043869018555

Token 464: ' from' (ID: 591)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.960828423500061
    2. 'self' → logprob: -1.335828423500061
    3. 'from' → logprob: -1.585828423500061
    4. ' node' → logprob: -2.7108283042907715
    5. ' from' → logprob: -2.8358283042907715
    6. 'node' → logprob: -3.7108283042907715
    7. '   ' → logprob: -10.21082878112793
    8. ')' → logprob: -11.33582878112793
    9. ',' → logprob: -11.33582878112793
    10. ' ' → logprob: -11.96082878112793

Token 465: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.0003995680599473417
    2. '_' → logprob: -7.875399589538574
    3. '_edge' → logprob: -12.000399589538574
    4. ')_' → logprob: -12.500399589538574
    5. '_self' → logprob: -12.750399589538574
    6. '_nodes' → logprob: -13.750399589538574
    7. '_graph' → logprob: -14.375399589538574
    8. '_from' → logprob: -14.375399589538574
    9. 'self' → logprob: -14.500399589538574
    10. '_Node' → logprob: -14.500399589538574

Token 466: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06305516511201859
    2. ':' → logprob: -2.8130552768707275
    3. 'self' → logprob: -6.938055038452148
    4. ' ,' → logprob: -9.938055038452148
    5. ' self' → logprob: -10.938055038452148
    6. ',self' → logprob: -11.313055038452148
    7. ':int' → logprob: -11.563055038452148
    8. '(self' → logprob: -11.688055038452148
    9. '   ' → logprob: -11.688055038452148
    10. ':self' → logprob: -12.688055038452148

Token 467: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.6492182612419128
    2. 'self' → logprob: -1.2742183208465576
    3. ' self' → logprob: -2.0242183208465576
    4. ' int' → logprob: -3.0242183208465576
    5. 'from' → logprob: -4.7742180824279785
    6. ',' → logprob: -5.0242180824279785
    7. ',int' → logprob: -7.0242180824279785
    8. '   ' → logprob: -7.6492180824279785
    9. ':int' → logprob: -8.024218559265137
    10. ' from' → logprob: -8.399218559265137

Token 468: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.3425219549390022e-05
    2. ' ,' → logprob: -11.37501335144043
    3. ':' → logprob: -13.50001335144043
    4. ',int' → logprob: -15.50001335144043
    5. ':int' → logprob: -16.75001335144043
    6. ',
' → logprob: -17.25001335144043
    7. 'from' → logprob: -17.37501335144043
    8. ',to' → logprob: -17.62501335144043
    9. 'to' → logprob: -18.75001335144043
    10. '   ' → logprob: -18.87501335144043

Token 469: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.25478169322013855
    2. ' to' → logprob: -1.504781723022461
    3. 'from' → logprob: -5.879781723022461
    4. ' from' → logprob: -10.004781723022461
    5. ',' → logprob: -12.754781723022461
    6. ',to' → logprob: -13.254781723022461
    7. 'int' → logprob: -13.379781723022461
    8. 'To' → logprob: -13.879781723022461
    9. '   ' → logprob: -15.004781723022461
    10. '[to' → logprob: -15.754781723022461

Token 470: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -3.4121114822482923e-06
    2. '_' → logprob: -13.750003814697266
    3. ')_' → logprob: -14.250003814697266
    4. ' _' → logprob: -14.250003814697266
    5. '_NODE' → logprob: -15.250003814697266
    6. '_Node' → logprob: -15.375003814697266
    7. '_nodes' → logprob: -16.000003814697266
    8. '```' → logprob: -16.125003814697266
    9. '_n' → logprob: -16.375003814697266
    10. '_code' → logprob: -16.750003814697266

Token 471: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003884511534124613
    2. ':' → logprob: -5.628884315490723
    3. ' ,' → logprob: -8.253884315490723
    4. ':int' → logprob: -11.003884315490723
    5. ',int' → logprob: -13.003884315490723
    6. '   ' → logprob: -13.628884315490723
    7. ')' → logprob: -13.878884315490723
    8. ' :' → logprob: -14.378884315490723
    9. '<|end|>' → logprob: -14.378884315490723
    10. 'int' → logprob: -14.753884315490723

Token 472: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0031784253660589457
    2. ' int' → logprob: -5.753178596496582
    3. ':int' → logprob: -14.503178596496582
    4. '[int' → logprob: -16.253177642822266
    5. ',int' → logprob: -16.878177642822266
    6. '   ' → logprob: -16.878177642822266
    7. '=int' → logprob: -17.003177642822266
    8. '	int' → logprob: -17.503177642822266
    9. '<int' → logprob: -18.003177642822266
    10. '1' → logprob: -18.378177642822266

Token 473: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002715714741498232
    2. ':' → logprob: -6.002715587615967
    3. ' ,' → logprob: -8.377716064453125
    4. '   ' → logprob: -12.252716064453125
    5. ')' → logprob: -12.627716064453125
    6. ' ' → logprob: -14.877716064453125
    7. ':int' → logprob: -15.002716064453125
    8. ' :' → logprob: -15.127716064453125
    9. '):' → logprob: -15.252716064453125
    10. '       ' → logprob: -15.377716064453125

Token 474: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.5340190529823303
    2. ' cost' → logprob: -0.9090190529823303
    3. 'int' → logprob: -4.6590189933776855
    4. ' int' → logprob: -7.0340189933776855
    5. ')' → logprob: -8.034019470214844
    6. '0' → logprob: -10.409019470214844
    7. '   ' → logprob: -10.659019470214844
    8. ' )' → logprob: -10.784019470214844
    9. ' ' → logprob: -10.909019470214844
    10. '1' → logprob: -11.284019470214844

Token 475: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0008411920862272382
    2. ')' → logprob: -7.12584114074707
    3. ':int' → logprob: -10.87584114074707
    4. '):' → logprob: -11.12584114074707
    5. '   ' → logprob: -13.50084114074707
    6. ' :' → logprob: -14.75084114074707
    7. ':)' → logprob: -15.37584114074707
    8. ' )' → logprob: -15.37584114074707
    9. ' ' → logprob: -15.75084114074707
    10. '=' → logprob: -15.87584114074707

Token 476: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.16026638448238373
    2. ' int' → logprob: -1.910266399383545
    3. ')' → logprob: -10.660265922546387
    4. ':int' → logprob: -11.160265922546387
    5. '1' → logprob: -12.785265922546387
    6. ' ' → logprob: -14.785265922546387
    7. '[int' → logprob: -14.910265922546387
    8. ' )' → logprob: -14.910265922546387
    9. '=int' → logprob: -15.035265922546387
    10. '   ' → logprob: -16.160266876220703

Token 477: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03816622868180275
    2. '):' → logprob: -3.2881662845611572
    3. '):
' → logprob: -9.038166046142578
    4. ')->' → logprob: -12.663166046142578
    5. ':' → logprob: -13.163166046142578
    6. '   ' → logprob: -14.663166046142578
    7. '):
' → logprob: -15.788166046142578
    8. ' )' → logprob: -16.288166046142578
    9. '):

' → logprob: -16.788166046142578
    10. '       ' → logprob: -17.288166046142578

Token 478: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00020544764993246645
    2. ':
' → logprob: -8.625205039978027
    3. '):' → logprob: -11.250205039978027
    4. ' :' → logprob: -12.625205039978027
    5. ')' → logprob: -13.250205039978027
    6. ':def' → logprob: -13.250205039978027
    7. '       ' → logprob: -13.500205039978027
    8. '->' → logprob: -13.500205039978027
    9. '   ' → logprob: -13.750205039978027
    10. '):
' → logprob: -14.625205039978027

Token 479: ' None' (ID: 4662)
  Prédit: ' None'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' None' → logprob: -0.0059363823384046555
    2. 'None' → logprob: -5.130936145782471
    3. '_None' → logprob: -12.630936622619629
    4. '(None' → logprob: -13.505936622619629
    5. ' 
' → logprob: -13.755936622619629
    6. '=None' → logprob: -14.380936622619629
    7. ' ' → logprob: -15.130936622619629
    8. ' self' → logprob: -15.380936622619629
    9. ' ' → logprob: -15.630936622619629
    10. ',None' → logprob: -16.130935668945312

Token 480: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01425364799797535
    2. ':
' → logprob: -4.264253616333008
    3. '       ' → logprob: -9.639253616333008
    4. '   ' → logprob: -11.764253616333008
    5. '):' → logprob: -12.014253616333008
    6. '):
' → logprob: -12.389253616333008
    7. ':

' → logprob: -13.514253616333008
    8. ')' → logprob: -13.764253616333008
    9. ',' → logprob: -14.014253616333008
    10. '<|end|>' → logprob: -14.014253616333008

Token 481: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0018380836118012667
    2. 'self' → logprob: -6.501838207244873
    3. ' self' → logprob: -8.126837730407715
    4. '```' → logprob: -10.626837730407715
    5. '   ' → logprob: -11.126837730407715
    6. '	self' → logprob: -14.876837730407715
    7. '#' → logprob: -15.876837730407715
    8. '
' → logprob: -16.00183868408203
    9. '[' → logprob: -16.25183868408203
    10. '[self' → logprob: -16.25183868408203

Token 482: ' #' (ID: 1069)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0007692479994148016
    2. '       ' → logprob: -7.250769138336182
    3. ' self' → logprob: -9.75076961517334
    4. '```' → logprob: -14.50076961517334
    5. '#' (adapté à ' #') → logprob: -15.12576961517334
    6. '   ' → logprob: -15.75076961517334
    7. '...' → logprob: -17.000768661499023
    8. '	self' → logprob: -17.125768661499023
    9. '[self' → logprob: -17.375768661499023
    10. 'raise' → logprob: -17.750768661499023

Token 483: ' Un' (ID: 1367)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -3.774276774493046e-05
    2. '       ' → logprob: -10.375038146972656
    3. '#' → logprob: -12.750038146972656
    4. ' self' → logprob: -13.125038146972656
    5. 'raise' → logprob: -13.500038146972656
    6. '"""' → logprob: -16.500038146972656
    7. '   ' → logprob: -16.750038146972656
    8. 'This' → logprob: -17.500038146972656
    9. '	self' → logprob: -17.625038146972656
    10. 'pass' → logprob: -18.375038146972656

Token 484: 'used' (ID: 4943)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.492816686630249
    2. 'der' → logprob: -1.617816686630249
    3. 'def' → logprob: -2.242816686630249
    4. '   ' → logprob: -3.242816686630249
    5. 'dert' → logprob: -3.867816686630249
    6. 'id' → logprob: -5.492816925048828
    7. 'd' → logprob: -5.992816925048828
    8. 'comment' → logprob: -6.117816925048828
    9. 'direction' → logprob: -6.242816925048828
    10. 'raise' → logprob: -6.492816925048828

Token 485: ' in' (ID: 306)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 486: ' this' (ID: 495)
  Prédit: 'this'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'this' → logprob: -0.07342341542243958
    2. ' this' → logprob: -2.698423385620117
    3. 'Bid' → logprob: -6.073423385620117
    4. 'bid' → logprob: -7.448423385620117
    5. '#' → logprob: -8.448423385620117
    6. 'self' → logprob: -9.448423385620117
    7. ' bid' → logprob: -9.698423385620117
    8. 'the' → logprob: -9.698423385620117
    9. ' favor' → logprob: -10.073423385620117
    10. 'This' → logprob: -10.573423385620117

Token 487: ' context' (ID: 3814)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.05024685338139534
    2. ' class' → logprob: -3.3002469539642334
    3. ' implementation' → logprob: -4.800246715545654
    4. 'context' → logprob: -6.550246715545654
    5. 'implementation' → logprob: -6.550246715545654
    6. 'case' → logprob: -8.050247192382812
    7. ' context' → logprob: -8.550247192382812
    8. 'graph' → logprob: -8.800247192382812
    9. 'bid' → logprob: -9.175247192382812
    10. 'code' → logprob: -9.675247192382812

Token 488: ' for' (ID: 395)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3932799994945526
    2. '   ' → logprob: -1.518280029296875
    3. '<|end|>' → logprob: -2.768280029296875
    4. ' pass' → logprob: -3.768280029296875
    5. '       ' → logprob: -4.893280029296875
    6. 'pass' → logprob: -5.018280029296875
    7. '\n' → logprob: -6.268280029296875
    8. '    
' → logprob: -6.393280029296875
    9. ' 
' → logprob: -7.518280029296875
    10. ' ' → logprob: -7.893280029296875

Token 489: ' one' (ID: 1001)
  Prédit: 'bid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bid' → logprob: -0.4580771327018738
    2. 'Bid' → logprob: -1.0830771923065186
    3. ' bid' → logprob: -4.3330769538879395
    4. ' compatibility' → logprob: -5.3330769538879395
    5. ' Bid' → logprob: -5.4580769538879395
    6. 'compat' → logprob: -5.8330769538879395
    7. 'b' → logprob: -5.9580769538879395
    8. 'back' → logprob: -7.9580769538879395
    9. 'pass' → logprob: -9.083077430725098
    10. 'B' → logprob: -9.208077430725098

Token 490: '-way' (ID: 44845)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.9180489778518677
    2. '   ' → logprob: -1.4180489778518677
    3. '_' → logprob: -2.168048858642578
    4. '-direction' → logprob: -3.418048858642578
    5. ')' → logprob: -3.543048858642578
    6. ' ' → logprob: -3.543048858642578
    7. 's' → logprob: -4.043048858642578
    8. '    ' → logprob: -4.043048858642578
    9. 'direction' → logprob: -4.043048858642578
    10. '  ' → logprob: -4.168048858642578

Token 491: ' edge' (ID: 11165)
  Prédit: ' edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' edges' → logprob: -0.24037307500839233
    2. 'edges' → logprob: -1.990373134613037
    3. ' graph' → logprob: -3.615373134613037
    4. ' pass' → logprob: -4.115373134613037
    5. ' edge' → logprob: -4.740373134613037
    6. 'graph' → logprob: -4.990373134613037
    7. '<|end|>' → logprob: -5.365373134613037
    8. 'pass' → logprob: -5.615373134613037
    9. 'def' → logprob: -5.865373134613037
    10. 'edge' → logprob: -6.240373134613037

Token 492: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3631042540073395
    2. '<|end|>' → logprob: -1.363104224205017
    3. '   ' → logprob: -3.3631043434143066
    4. ' pass' → logprob: -4.613104343414307
    5. 'pass' → logprob: -6.863104343414307
    6. '<|end|>' → logprob: -7.113104343414307
    7. '
' → logprob: -7.363104343414307
    8. ')' → logprob: -7.863104343414307
    9. 's' → logprob: -7.863104343414307
    10. ',' → logprob: -8.238103866577148

Token 493: ' but' (ID: 889)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pass' → logprob: -0.3238637447357178
    2. ' pass' → logprob: -1.3238637447357178
    3. '       ' → logprob: -4.573863983154297
    4. '   ' → logprob: -8.948863983154297
    5. '#' → logprob: -10.323863983154297
    6. 'raise' → logprob: -10.448863983154297
    7. 'self' → logprob: -10.698863983154297
    8. '...' → logprob: -11.823863983154297
    9. '	pass' → logprob: -12.823863983154297
    10. ' raise' → logprob: -13.198863983154297

Token 494: ' needed' (ID: 6118)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pass' → logprob: -0.5665878653526306
    2. ' pass' → logprob: -1.0665879249572754
    3. 'self' → logprob: -3.4415879249572754
    4. '       ' → logprob: -3.5665879249572754
    5. ' self' → logprob: -3.6915879249572754
    6. ' raise' → logprob: -6.691587924957275
    7. 'raise' → logprob: -7.191587924957275
    8. ' return' → logprob: -7.816587924957275
    9. '   ' → logprob: -8.191587448120117
    10. 'return' → logprob: -8.691587448120117

Token 495: ' to' (ID: 316)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.021793182939291
    2. '   ' → logprob: -4.771793365478516
    3. 'for' → logprob: -4.771793365478516
    4. ' to' → logprob: -5.521793365478516
    5. ' as' → logprob: -8.396793365478516
    6. ' by' → logprob: -8.896793365478516
    7. '    ' → logprob: -9.021793365478516
    8. 'to' → logprob: -9.646793365478516
    9. 'def' → logprob: -10.771793365478516
    10. '<|end|>' → logprob: -10.771793365478516

Token 496: ' comply' (ID: 40206)
  Prédit: 'ful'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ful' → logprob: -0.23034775257110596
    2. 's' → logprob: -2.2303476333618164
    3. ' fulfill' → logprob: -3.4803476333618164
    4. ' comply' → logprob: -4.230347633361816
    5. 'maint' → logprob: -4.355347633361816
    6. 'comp' → logprob: -4.605347633361816
    7. 'match' → logprob: -4.855347633361816
    8. 'adh' → logprob: -4.980347633361816
    9. ' satisfy' → logprob: -5.105347633361816
    10. 'complete' → logprob: -5.855347633361816

Token 497: ' with' (ID: 483)
  Prédit: ' with'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' with' → logprob: -0.012649614363908768
    2. 'with' → logprob: -4.3876495361328125
    3. '<|end|>' → logprob: -9.012649536132812
    4. '   ' → logprob: -12.262649536132812
    5. ' the' → logprob: -12.512649536132812
    6. '	with' → logprob: -13.012649536132812
    7. ')' → logprob: -13.137649536132812
    8. '       ' → logprob: -13.637649536132812
    9. '    ' → logprob: -14.137649536132812
    10. ' Graph' → logprob: -14.262649536132812

Token 498: ' interface' (ID: 6225)
  Prédit: 'Graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Graph' → logprob: -0.14477938413619995
    2. ' Graph' → logprob: -2.0197794437408447
    3. ' the' → logprob: -7.519779205322266
    4. 'the' → logprob: -7.519779205322266
    5. 'interface' → logprob: -7.519779205322266
    6. ' interface' → logprob: -8.019779205322266
    7. 'Protocol' → logprob: -9.644779205322266
    8. ' protocol' → logprob: -10.394779205322266
    9. 'protocol' → logprob: -10.394779205322266
    10. ' Protocol' → logprob: -12.644779205322266

Token 499: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3028982877731323
    2. '   ' → logprob: -1.4278982877731323
    3. ' pass' → logprob: -4.802898406982422
    4. '
' → logprob: -5.302898406982422
    5. '<|end|>' → logprob: -5.302898406982422
    6. 'pass' → logprob: -6.677898406982422
    7. '    
' → logprob: -7.802898406982422
    8. '        
' → logprob: -7.927898406982422
    9. ')' → logprob: -8.052898406982422
    10. '```' → logprob: -8.677898406982422

Token 500: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6339481472969055
    2. 'pass' → logprob: -1.3839480876922607
    3. ' pass' → logprob: -1.6339480876922607
    4. '   ' → logprob: -3.7589480876922607
    5. '	pass' → logprob: -7.88394832611084
    6. '<|end|>' → logprob: -10.63394832611084
    7. 'return' → logprob: -11.00894832611084
    8. '  ' → logprob: -11.75894832611084
    9. '    ' → logprob: -11.88394832611084
    10. '        
' → logprob: -12.50894832611084

Token 501: ' self' (ID: 1051)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pass' → logprob: -0.00017004783148877323
    2. ' pass' → logprob: -8.87516975402832
    3. 'self' (adapté à ' self') → logprob: -11.37516975402832
    4. '   ' → logprob: -11.62516975402832
    5. 'pas' → logprob: -12.37516975402832
    6. 'return' → logprob: -12.37516975402832
    7. '       ' → logprob: -14.12516975402832
    8. '	pass' → logprob: -14.75016975402832
    9. '```' → logprob: -16.62516975402832
    10. 'raise' → logprob: -16.87516975402832

Token 502: '.forward' (ID: 53266)
  Prédit: '.forward'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.forward' → logprob: -7.159660890465602e-05
    2. '.' → logprob: -9.75007152557373
    3. '.for' → logprob: -11.62507152557373
    4. 'forward' → logprob: -13.75007152557373
    5. '.add' → logprob: -14.00007152557373
    6. '.from' → logprob: -14.12507152557373
    7. '.backward' → logprob: -15.37507152557373
    8. '.raise' → logprob: -15.50007152557373
    9. '.pass' → logprob: -16.125072479248047
    10. '.front' → logprob: -16.250072479248047

Token 503: '_graph' (ID: 33441)
  Prédit: '_graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_graph' → logprob: -1.981667537620524e-06
    2. '_' → logprob: -13.750001907348633
    3. '._' → logprob: -14.625001907348633
    4. '_g' → logprob: -15.875001907348633
    5. '"_' → logprob: -17.125001907348633
    6. '_code' → logprob: -17.875001907348633
    7. ' _' → logprob: -18.000001907348633
    8. '\' → logprob: -18.000001907348633
    9. '.' → logprob: -18.250001907348633
    10. '```' → logprob: -18.375001907348633

Token 504: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -1.8193366486229934e-05
    2. '.' → logprob: -11.000018119812012
    3. '.ad' → logprob: -13.625018119812012
    4. ' .' → logprob: -16.625019073486328
    5. '.append' → logprob: -17.000019073486328
    6. ').' → logprob: -17.250019073486328
    7. '.Add' → logprob: -17.625019073486328
    8. '}.' → logprob: -18.250019073486328
    9. 'add' → logprob: -18.500019073486328
    10. '
' → logprob: -18.625019073486328

Token 505: '_edge' (ID: 43226)
  Prédit: '_edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edge' → logprob: -7.941850526549388e-06
    2. 'edge' → logprob: -11.875007629394531
    3. '_' → logprob: -15.375007629394531
    4. '_node' → logprob: -16.37500762939453
    5. '_edges' → logprob: -16.62500762939453
    6. '_ed' → logprob: -16.62500762939453
    7. 'e' → logprob: -16.75000762939453
    8. 'Edge' → logprob: -16.87500762939453
    9. '_EDGE' → logprob: -16.87500762939453
    10. 'dge' → logprob: -17.00000762939453

Token 506: '(from' (ID: 32142)
  Prédit: '(from'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(from' → logprob: -1.8624639324116288e-06
    2. '(' → logprob: -13.500001907348633
    3. '(to' → logprob: -16.125001907348633
    4. ' (' → logprob: -16.500001907348633
    5. 'from' → logprob: -16.625001907348633
    6. '(for' → logprob: -17.875001907348633
    7. '[from' → logprob: -19.000001907348633
    8. ' from' → logprob: -19.500001907348633
    9. '(
' → logprob: -20.125001907348633
    10. '(with' → logprob: -20.375001907348633

Token 507: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -1.7432603272027336e-06
    2. 'node' → logprob: -14.875001907348633
    3. '_' → logprob: -15.000001907348633
    4. ')_' → logprob: -15.250001907348633
    5. '```' → logprob: -15.375001907348633
    6. '_n' → logprob: -16.000001907348633
    7. '_NODE' → logprob: -16.250001907348633
    8. 'Node' → logprob: -16.750001907348633
    9. ' _' → logprob: -17.000001907348633
    10. ')' → logprob: -17.125001907348633

Token 508: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1756367712223437e-05
    2. ' ,' → logprob: -11.875011444091797
    3. ',to' → logprob: -12.375011444091797
    4. 'from' → logprob: -15.625011444091797
    5. ',
' → logprob: -16.125011444091797
    6. ')' → logprob: -16.500011444091797
    7. 'to' → logprob: -16.500011444091797
    8. '<|end|>' → logprob: -17.875011444091797
    9. '   ' → logprob: -18.375011444091797
    10. '‌,' → logprob: -18.750011444091797

Token 509: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.0031777136027812958
    2. ' to' → logprob: -5.753177642822266
    3. ' ' → logprob: -17.503177642822266
    4. '   ' → logprob: -17.753177642822266
    5. 'toc' → logprob: -18.378177642822266
    6. '```' → logprob: -18.628177642822266
    7. '[to' → logprob: -18.753177642822266
    8. '	to' → logprob: -18.753177642822266
    9. 't' → logprob: -19.128177642822266
    10. '  ' → logprob: -19.128177642822266

Token 510: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.3224802613258362
    2. 'node' → logprob: -1.3224802017211914
    3. 'to' → logprob: -4.697480201721191
    4. 'Node' → logprob: -9.947480201721191
    5. ' node' → logprob: -13.072480201721191
    6. '_NODE' → logprob: -13.447480201721191
    7. ' to' → logprob: -13.697480201721191
    8. 'from' → logprob: -13.947480201721191
    9. 'NODE' → logprob: -13.947480201721191
    10. '   ' → logprob: -14.072480201721191

Token 511: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.182190554682165e-05
    2. ' ,' → logprob: -9.750061988830566
    3. ',c' → logprob: -12.750061988830566
    4. ',
' → logprob: -15.250061988830566
    5. ' cost' → logprob: -15.750061988830566
    6. ')' → logprob: -16.50006103515625
    7. 'cost' → logprob: -16.75006103515625
    8. '```' → logprob: -19.00006103515625
    9. '),' → logprob: -19.12506103515625
    10. '
' → logprob: -19.12506103515625

Token 512: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.004078401252627373
    2. ' cost' → logprob: -5.504078388214111
    3. '(cost' → logprob: -19.379077911376953
    4. 'code' → logprob: -20.004077911376953
    5. '_cost' → logprob: -21.254077911376953
    6. 'c' → logprob: -21.629077911376953
    7. 'Cost' → logprob: -22.004077911376953
    8. '   ' → logprob: -22.504077911376953
    9. '
' → logprob: -22.504077911376953
    10. ' kost' → logprob: -22.879077911376953

Token 513: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00012487331696320325
    2. ')
' → logprob: -9.00012493133545
    3. '<|end|>' → logprob: -14.37512493133545
    4. ' )' → logprob: -14.75012493133545
    5. ')return' → logprob: -15.50012493133545
    6. '       ' → logprob: -16.375123977661133
    7. '   ' → logprob: -16.500123977661133
    8. '),' → logprob: -17.250123977661133
    9. ')

' → logprob: -17.250123977661133
    10. ' ' → logprob: -17.875123977661133

Token 514: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 515: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.46056899428367615
    2. '<|end|>' → logprob: -1.0855690240859985
    3. 'def' (adapté à ' def') → logprob: -3.585568904876709
    4. ' def' → logprob: -6.585568904876709
    5. '<|end|>' → logprob: -6.960568904876709
    6. '```' → logprob: -7.335568904876709
    7. '
' → logprob: -8.210569381713867
    8. '    
' → logprob: -9.210569381713867
    9. ' ' → logprob: -9.335569381713867
    10. ')' → logprob: -9.585569381713867

Token 516: ' shortest' (ID: 70564)
  Prédit: ' shortest'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' shortest' → logprob: -0.4195311367511749
    2. 'short' → logprob: -1.7945311069488525
    3. 'def' → logprob: -2.4195311069488525
    4. ' def' → logprob: -2.5445311069488525
    5. ' short' → logprob: -4.794531345367432
    6. '_short' → logprob: -7.794531345367432
    7. 'Shortest' → logprob: -9.294530868530273
    8. '
' → logprob: -9.794530868530273
    9. '.short' → logprob: -10.044530868530273
    10. ' ' → logprob: -10.982030868530273

Token 517: '_path' (ID: 5558)
  Prédit: '_path'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_path' → logprob: -2.1008713702030946e-06
    2. '_' → logprob: -13.500001907348633
    3. '_p' → logprob: -14.500001907348633
    4. ' _' → logprob: -17.000001907348633
    5. '_point' → logprob: -17.000001907348633
    6. 'def' → logprob: -17.750001907348633
    7. '_paths' → logprob: -18.000001907348633
    8. '_pat' → logprob: -18.250001907348633
    9. '_line' → logprob: -18.375001907348633
    10. '_part' → logprob: -18.625001907348633

Token 518: '_forward' (ID: 75888)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -9.088346359931165e-07
    2. '(' → logprob: -14.125000953674316
    3. 'self' → logprob: -16.25
    4. '(
' → logprob: -17.25
    5. ' (' → logprob: -18.125
    6. '   ' → logprob: -18.625
    7. '       ' → logprob: -19.75
    8. '(s' → logprob: -20.25
    9. 'def' → logprob: -20.5
    10. '=self' → logprob: -20.625

Token 519: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -6.153795766294934e-06
    2. '(' → logprob: -12.125005722045898
    3. ' (' → logprob: -14.750005722045898
    4. 'self' → logprob: -15.875005722045898
    5. '(
' → logprob: -16.3750057220459
    6. '(s' → logprob: -17.1250057220459
    7. ' self' → logprob: -17.8750057220459
    8. '=self' → logprob: -18.2500057220459
    9. ')(' → logprob: -18.2500057220459
    10. '(sel' → logprob: -18.3750057220459

Token 520: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.47548970580101013
    2. '(self' → logprob: -0.9754897356033325
    3. 'self' → logprob: -7.600489616394043
    4. ')' → logprob: -7.725489616394043
    5. ' ,' → logprob: -8.600489616394043
    6. ',self' → logprob: -9.225489616394043
    7. ')(' → logprob: -9.350489616394043
    8. ' self' → logprob: -10.225489616394043
    9. '(' → logprob: -10.350489616394043
    10. ' (' → logprob: -10.975489616394043

Token 521: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.4998299777507782
    2. ' start' → logprob: -0.9998300075531006
    3. 'self' → logprob: -3.8748300075531006
    4. ' self' → logprob: -5.3748297691345215
    5. 'from' → logprob: -10.87483024597168
    6. ')' → logprob: -11.87483024597168
    7. '   ' → logprob: -12.99983024597168
    8. ' ' → logprob: -12.99983024597168
    9. '(start' → logprob: -14.24983024597168
    10. '	start' → logprob: -14.62483024597168

Token 522: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5766168832778931
    2. ':' → logprob: -0.8266168832778931
    3. ' ,' → logprob: -7.5766167640686035
    4. ':int' → logprob: -9.451617240905762
    5. ' :' → logprob: -10.326617240905762
    6. '   ' → logprob: -10.701617240905762
    7. 'self' → logprob: -10.826617240905762
    8. ')' → logprob: -12.451617240905762
    9. '):' → logprob: -12.826617240905762
    10. ':,' → logprob: -14.201617240905762

Token 523: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.00118856446351856
    2. ' int' → logprob: -6.7511887550354
    3. 'self' → logprob: -11.001188278198242
    4. '[int' → logprob: -14.876188278198242
    5. ':int' → logprob: -14.876188278198242
    6. ')' → logprob: -15.126188278198242
    7. '(int' → logprob: -15.876188278198242
    8. '   ' → logprob: -16.001188278198242
    9. '=int' → logprob: -16.251188278198242
    10. 'Optional' → logprob: -16.376188278198242

Token 524: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002624086628202349
    2. ' ,' → logprob: -8.250262260437012
    3. ')' → logprob: -14.000262260437012
    4. '   ' → logprob: -16.000263214111328
    5. ',int' → logprob: -16.000263214111328
    6. ',
' → logprob: -17.875263214111328
    7. ' ' → logprob: -19.250263214111328
    8. '_,' → logprob: -19.500263214111328
    9. 'to' → logprob: -19.625263214111328
    10. '‌,' → logprob: -19.750263214111328

Token 525: ' goal' (ID: 8583)
  Prédit: 'goal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'goal' → logprob: -0.3869245648384094
    2. ' goal' → logprob: -1.1369245052337646
    3. 'end' → logprob: -10.636924743652344
    4. ' end' → logprob: -10.636924743652344
    5. ' ' → logprob: -12.886924743652344
    6. '  ' → logprob: -14.136924743652344
    7. '   ' → logprob: -14.136924743652344
    8. '(goal' → logprob: -14.261924743652344
    9. 'stop' → logprob: -15.761924743652344
    10. '.goal' → logprob: -16.011924743652344

Token 526: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0004043361986987293
    2. ')' → logprob: -8.000404357910156
    3. '   ' → logprob: -10.000404357910156
    4. ':int' → logprob: -11.125404357910156
    5. ',' → logprob: -12.750404357910156
    6. ' :' → logprob: -13.125404357910156
    7. '):' → logprob: -13.500404357910156
    8. '```' → logprob: -14.125404357910156
    9. '       ' → logprob: -14.375404357910156
    10. 'self' → logprob: -14.500404357910156

Token 527: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.008625093847513199
    2. ' int' → logprob: -4.758625030517578
    3. 'Optional' → logprob: -12.633625030517578
    4. '[int' → logprob: -13.008625030517578
    5. ')' → logprob: -13.383625030517578
    6. ' ' → logprob: -14.258625030517578
    7. '   ' → logprob: -14.633625030517578
    8. ':int' → logprob: -14.758625030517578
    9. '(int' → logprob: -14.883625030517578
    10. '```' → logprob: -14.883625030517578

Token 528: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.935296834039036e-06
    2. ' )' → logprob: -13.00000286102295
    3. ':' → logprob: -15.12500286102295
    4. '):' → logprob: -15.50000286102295
    5. '   ' → logprob: -16.125003814697266
    6. '`)' → logprob: -18.000003814697266
    7. ' ' → logprob: -18.375003814697266
    8. '):
' → logprob: -19.250003814697266
    9. ')->' → logprob: -19.500003814697266
    10. ')
' → logprob: -19.500003814697266

Token 529: ' ->' (ID: 2747)
  Prédit: ' ->'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ->' → logprob: -0.4122394025325775
    2. ')' → logprob: -1.6622394323349
    3. '->' → logprob: -1.9122394323349
    4. ')->' → logprob: -8.537239074707031
    5. '   ' → logprob: -9.162239074707031
    6. ':' → logprob: -10.537239074707031
    7. ' ' → logprob: -10.787239074707031
    8. ' )' → logprob: -11.037239074707031
    9. '       ' → logprob: -13.162239074707031
    10. '>' → logprob: -13.162239074707031

Token 530: ' Optional' (ID: 19351)
  Prédit: 'Optional'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Optional' → logprob: -0.00011427151912357658
    2. ' Optional' → logprob: -9.125114440917969
    3. 'int' → logprob: -12.750114440917969
    4. 'self' → logprob: -13.625114440917969
    5. '   ' → logprob: -14.000114440917969
    6. '       ' → logprob: -15.875114440917969
    7. '	Optional' → logprob: -16.12511444091797
    8. '(Optional' → logprob: -16.25011444091797
    9. 'optional' → logprob: -17.50011444091797
    10. 'Opt' → logprob: -17.87511444091797

Token 531: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -1.5048530030981055e-06
    2. 'int' → logprob: -13.500001907348633
    3. '[' → logprob: -17.750001907348633
    4. '[in' → logprob: -17.875001907348633
    5. '[i' → logprob: -19.625001907348633
    6. '<int' → logprob: -19.750001907348633
    7. ' [' → logprob: -20.375001907348633
    8. '   ' → logprob: -20.625001907348633
    9. ':int' → logprob: -20.625001907348633
    10. '[Int' → logprob: -21.125001907348633

Token 532: ']:
' (ID: 22152)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1313759684562683
    2. ':' → logprob: -2.631376028060913
    3. '):
' → logprob: -3.006376028060913
    4. ':
' → logprob: -7.256375789642334
    5. '   ' → logprob: -7.756375789642334
    6. ')' → logprob: -8.131376266479492
    7. '       ' → logprob: -9.381376266479492
    8. '):
' → logprob: -9.506376266479492
    9. ']:' → logprob: -10.631376266479492
    10. ' ):' → logprob: -10.881376266479492

Token 533: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006573928403668106
    2. ' return' → logprob: -7.875657558441162
    3. 'return' → logprob: -8.375657081604004
    4. '   ' → logprob: -10.750657081604004
    5. '      ' → logprob: -11.750657081604004
    6. '	' → logprob: -12.250657081604004
    7. '    ' → logprob: -12.250657081604004
    8. ')' → logprob: -13.250657081604004
    9. '     ' → logprob: -13.875657081604004
    10. '        ' → logprob: -14.375657081604004

Token 534: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2520051598548889
    2. 'return' (adapté à ' return') → logprob: -1.5020051002502441
    3. ' return' → logprob: -9.502005577087402
    4. '```' → logprob: -14.377005577087402
    5. '	return' → logprob: -14.752005577087402
    6. '   ' → logprob: -15.002005577087402
    7. '{return' → logprob: -16.877004623413086
    8. '
' → logprob: -17.877004623413086
    9. '      ' → logprob: -18.252004623413086
    10. '     ' → logprob: -18.502004623413086

Token 535: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00012356207298580557
    2. ' self' → logprob: -9.000123977661133
    3. '       ' → logprob: -16.625123977661133
    4. '
' → logprob: -19.375123977661133
    5. '   ' → logprob: -19.500123977661133
    6. '(self' → logprob: -19.750123977661133
    7. '	self' → logprob: -20.625123977661133
    8. '[self' → logprob: -21.625123977661133
    9. '           ' → logprob: -22.375123977661133
    10. '=self' → logprob: -22.750123977661133

Token 536: '.forward' (ID: 53266)
  Prédit: '.forward'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.forward' → logprob: -1.6240566083070007e-06
    2. ' .' → logprob: -14.000001907348633
    3. '.for' → logprob: -14.750001907348633
    4. '.' → logprob: -15.375001907348633
    5. 'forward' → logprob: -17.125001907348633
    6. '.self' → logprob: -17.375001907348633
    7. '.front' → logprob: -17.625001907348633
    8. '.backward' → logprob: -18.375001907348633
    9. '.reverse' → logprob: -18.625001907348633
    10. '.fast' → logprob: -18.625001907348633

Token 537: '_graph' (ID: 33441)
  Prédit: '_graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_graph' → logprob: -9.088346359931165e-07
    2. '._' → logprob: -14.125000953674316
    3. '_' → logprob: -17.25
    4. '\' → logprob: -18.0
    5. '"_' → logprob: -18.0
    6. 'graph' → logprob: -18.5
    7. '```' → logprob: -18.5
    8. '
' → logprob: -19.0
    9. '_g' → logprob: -19.0
    10. ' _' → logprob: -19.375

Token 538: '.short' (ID: 56360)
  Prédit: '.short'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.short' → logprob: -1.6166903151315637e-05
    2. '.' → logprob: -11.625016212463379
    3. ' .' → logprob: -12.125016212463379
    4. '.shortcuts' → logprob: -14.250016212463379
    5. 'short' → logprob: -14.500016212463379
    6. '.long' → logprob: -15.375016212463379
    7. '.Short' → logprob: -16.125015258789062
    8. '.s' → logprob: -16.625015258789062
    9. '.closest' → logprob: -16.750015258789062
    10. '.small' → logprob: -17.250015258789062

Token 539: 'est' (ID: 376)
  Prédit: 'est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'est' → logprob: -0.011048762127757072
    2. '_path' → logprob: -4.511048793792725
    3. 'path' → logprob: -14.511048316955566
    4. '_est' → logprob: -16.261049270629883
    5. 'es' → logprob: -16.511049270629883
    6. '```' → logprob: -16.636049270629883
    7. 'e' → logprob: -17.136049270629883
    8. 't' → logprob: -17.511049270629883
    9. 'ests' → logprob: -17.636049270629883
    10. 'st' → logprob: -17.886049270629883

Token 540: '_path' (ID: 5558)
  Prédit: '_path'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_path' → logprob: -9.088346359931165e-07
    2. 'path' → logprob: -14.250000953674316
    3. '_' → logprob: -15.625000953674316
    4. '```' → logprob: -17.5
    5. '_p' → logprob: -18.0
    6. ' _' → logprob: -18.5
    7. '._' → logprob: -19.25
    8. '_paths' → logprob: -19.375
    9. 'Path' → logprob: -19.625
    10. '_pat' → logprob: -19.75

Token 541: '(start' (ID: 20008)
  Prédit: '(start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(start' → logprob: -6.988221684878226e-06
    2. '(' → logprob: -12.000006675720215
    3. ' (' → logprob: -14.875006675720215
    4. '(end' → logprob: -15.125006675720215
    5. '(
' → logprob: -15.750006675720215
    6. 'start' → logprob: -16.75000762939453
    7. '(stop' → logprob: -18.25000762939453
    8. '(st' → logprob: -18.50000762939453
    9. ',start' → logprob: -19.25000762939453
    10. '[start' → logprob: -19.75000762939453

Token 542: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.36574100604048e-06
    2. ' ,' → logprob: -12.375004768371582
    3. ',
' → logprob: -17.375003814697266
    4. '
' → logprob: -20.875003814697266
    5. ')' → logprob: -20.875003814697266
    6. ',g' → logprob: -21.125003814697266
    7. '```' → logprob: -21.500003814697266
    8. '(goal' → logprob: -21.500003814697266
    9. ',end' → logprob: -21.875003814697266
    10. 'goal' → logprob: -22.125003814697266

Token 543: ' goal' (ID: 8583)
  Prédit: 'goal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'goal' → logprob: -0.2519298195838928
    2. ' goal' → logprob: -1.501929759979248
    3. '(goal' → logprob: -14.751930236816406
    4. ' ' → logprob: -15.876930236816406
    5. 'go' → logprob: -17.001930236816406
    6. '.goal' → logprob: -17.251930236816406
    7. '
' → logprob: -17.626930236816406
    8. ' ' → logprob: -17.876930236816406
    9. 'Goal' → logprob: -17.876930236816406
    10. '   ' → logprob: -18.251930236816406

Token 544: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.306760805164231e-05
    2. '<|end|>' → logprob: -11.62501335144043
    3. ')
' → logprob: -12.87501335144043
    4. ' )' → logprob: -13.75001335144043
    5. ')

' → logprob: -16.50001335144043
    6. '   ' → logprob: -16.62501335144043
    7. ')return' → logprob: -16.62501335144043
    8. '       ' → logprob: -17.12501335144043
    9. '<|end|>' → logprob: -17.12501335144043
    10. '),' → logprob: -17.62501335144043

Token 545: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 546: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.03824333846569061
    2. '   ' → logprob: -3.288243293762207
    3. ' def' → logprob: -8.538243293762207
    4. '
' → logprob: -12.788243293762207
    5. '	def' → logprob: -13.038243293762207
    6. '  ' → logprob: -14.913243293762207
    7. '    
' → logprob: -14.913243293762207
    8. ' ' → logprob: -15.038243293762207
    9. '```' → logprob: -16.538244247436523
    10. '       ' → logprob: -18.413244247436523

Token 547: ' shortest' (ID: 70564)
  Prédit: ' shortest'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' shortest' → logprob: -0.12821990251541138
    2. 'short' → logprob: -2.1282198429107666
    3. 'def' → logprob: -7.128220081329346
    4. ' short' → logprob: -8.878219604492188
    5. '_short' → logprob: -9.253219604492188
    6. 'reverse' → logprob: -9.878219604492188
    7. 'Shortest' → logprob: -9.878219604492188
    8. '
' → logprob: -10.128219604492188
    9. ' reverse' → logprob: -10.503219604492188
    10. ' def' → logprob: -10.503219604492188

Token 548: '_path' (ID: 5558)
  Prédit: '_path'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_path' → logprob: -0.0002096197713399306
    2. '_' → logprob: -8.50020980834961
    3. '_p' → logprob: -13.25020980834961
    4. ' _' → logprob: -14.50020980834961
    5. '_paths' → logprob: -14.87520980834961
    6. '_forward' → logprob: -15.12520980834961
    7. '_direction' → logprob: -15.37520980834961
    8. '_
' → logprob: -15.50020980834961
    9. '```' → logprob: -15.75020980834961
    10. '_method' → logprob: -15.87520980834961

Token 549: '_backward' (ID: 185673)
  Prédit: '_reverse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_reverse' → logprob: -0.6214981079101562
    2. '_backward' → logprob: -0.9964981079101562
    3. '(self' → logprob: -2.4964981079101562
    4. '_forward' → logprob: -5.246498107910156
    5. '_bid' → logprob: -5.621498107910156
    6. '_back' → logprob: -7.621498107910156
    7. '_' → logprob: -7.621498107910156
    8. 'self' → logprob: -8.121498107910156
    9. '(' → logprob: -8.371498107910156
    10. 'reverse' → logprob: -8.371498107910156

Token 550: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -9.849109119386412e-06
    2. '(' → logprob: -11.875009536743164
    3. ' (' → logprob: -12.875009536743164
    4. 'self' → logprob: -16.125009536743164
    5. '(
' → logprob: -16.750009536743164
    6. '   ' → logprob: -17.375009536743164
    7. '(start' → logprob: -17.625009536743164
    8. '(s' → logprob: -18.000009536743164
    9. ' ' → logprob: -18.250009536743164
    10. ' self' → logprob: -18.625009536743164

Token 551: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2259778380393982
    2. '(self' → logprob: -1.600977897644043
    3. ')(' → logprob: -8.600977897644043
    4. ' (' → logprob: -8.600977897644043
    5. ')' → logprob: -9.475977897644043
    6. ' ,' → logprob: -10.350977897644043
    7. 'self' → logprob: -10.350977897644043
    8. ',self' → logprob: -10.600977897644043
    9. '   ' → logprob: -11.850977897644043
    10. '```' → logprob: -11.975977897644043

Token 552: ' start' (ID: 1604)
  Prédit: ' start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' start' → logprob: -0.4765751361846924
    2. 'start' → logprob: -0.9765751361846924
    3. 'self' → logprob: -6.851574897766113
    4. ' goal' → logprob: -7.101574897766113
    5. ' self' → logprob: -8.101574897766113
    6. 'goal' → logprob: -8.101574897766113
    7. 'end' → logprob: -12.851574897766113
    8. ' end' → logprob: -13.476574897766113
    9. '   ' → logprob: -13.976574897766113
    10. ' ' → logprob: -14.101574897766113

Token 553: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004201155621558428
    2. ':' → logprob: -5.5042009353637695
    3. ' ,' → logprob: -9.50420093536377
    4. '   ' → logprob: -10.87920093536377
    5. ')' → logprob: -11.75420093536377
    6. '<|end|>' → logprob: -12.37920093536377
    7. ',self' → logprob: -12.37920093536377
    8. 'self' → logprob: -12.87920093536377
    9. '):' → logprob: -13.50420093536377
    10. ':int' → logprob: -13.87920093536377

Token 554: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.4740803837776184
    2. 'int' → logprob: -0.9740803837776184
    3. ':int' → logprob: -13.724080085754395
    4. '[int' → logprob: -14.224080085754395
    5. ' ' → logprob: -14.974080085754395
    6. '<int' → logprob: -15.099080085754395
    7. '   ' → logprob: -15.349080085754395
    8. 'self' → logprob: -15.724080085754395
    9. '(int' → logprob: -15.974080085754395
    10. '=int' → logprob: -16.09908103942871

Token 555: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00012535012501757592
    2. ':' → logprob: -9.50012493133545
    3. ' ,' → logprob: -10.62512493133545
    4. ':int' → logprob: -11.37512493133545
    5. ',int' → logprob: -11.50012493133545
    6. 'int' → logprob: -13.25012493133545
    7. '   ' → logprob: -13.37512493133545
    8. ',
' → logprob: -15.12512493133545
    9. ')' → logprob: -15.25012493133545
    10. 'def' → logprob: -15.62512493133545

Token 556: ' goal' (ID: 8583)
  Prédit: ' goal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' goal' → logprob: -0.2519362270832062
    2. 'goal' → logprob: -1.5019361972808838
    3. 'def' → logprob: -12.251935958862305
    4. ' def' → logprob: -14.876935958862305
    5. 'Goal' → logprob: -14.876935958862305
    6. '   ' → logprob: -15.126935958862305
    7. ' ' → logprob: -15.376935958862305
    8. 'self' → logprob: -15.376935958862305
    9. '(goal' → logprob: -15.376935958862305
    10. '       ' → logprob: -15.876935958862305

Token 557: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0015228374395519495
    2. ')' → logprob: -6.501523017883301
    3. '   ' → logprob: -11.6265230178833
    4. ':int' → logprob: -12.5015230178833
    5. ' :' → logprob: -12.6265230178833
    6. '):' → logprob: -13.7515230178833
    7. ' )' → logprob: -13.7515230178833
    8. '  ' → logprob: -14.8765230178833
    9. 'def' → logprob: -15.0015230178833
    10. 'int' → logprob: -15.2515230178833

Token 558: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.3896912634372711
    2. ' int' → logprob: -1.1396912336349487
    3. ')' → logprob: -5.889691352844238
    4. 'self' → logprob: -10.889691352844238
    5. ':int' → logprob: -12.014691352844238
    6. ' self' → logprob: -12.264691352844238
    7. ' def' → logprob: -12.389691352844238
    8. '(int' → logprob: -12.639691352844238
    9. '[int' → logprob: -12.764691352844238
    10. '1' → logprob: -13.389691352844238

Token 559: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2664456789934775e-06
    2. '   ' → logprob: -14.125000953674316
    3. ' )' → logprob: -14.750000953674316
    4. ')
' → logprob: -17.500001907348633
    5. '):' → logprob: -17.875001907348633
    6. 'def' → logprob: -18.000001907348633
    7. ')`' → logprob: -18.250001907348633
    8. ' ' → logprob: -18.375001907348633
    9. ')->' → logprob: -18.375001907348633
    10. '):
' → logprob: -18.500001907348633

Token 560: ' ->' (ID: 2747)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.046826060861349106
    2. '->' → logprob: -3.421826124191284
    3. ' ->' → logprob: -4.421825885772705
    4. ')->' → logprob: -6.921825885772705
    5. '   ' → logprob: -10.171826362609863
    6. '>' → logprob: -10.671826362609863
    7. ':' → logprob: -10.796826362609863
    8. ' )' → logprob: -12.171826362609863
    9. '()' → logprob: -13.421826362609863
    10. ' ' → logprob: -13.671826362609863

Token 561: ' Optional' (ID: 19351)
  Prédit: 'Optional'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Optional' → logprob: -0.0005580356228165329
    2. ' Optional' → logprob: -7.500557899475098
    3. 'self' → logprob: -12.250557899475098
    4. '   ' → logprob: -15.125557899475098
    5. '	Optional' → logprob: -17.125558853149414
    6. 'optional' → logprob: -17.375558853149414
    7. '_optional' → logprob: -17.625558853149414
    8. '       ' → logprob: -17.875558853149414
    9. 'Option' → logprob: -18.000558853149414
    10. '(Optional' → logprob: -18.125558853149414

Token 562: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -7.896309739408025e-07
    2. 'int' → logprob: -15.125000953674316
    3. '[
' → logprob: -15.500000953674316
    4. '[' → logprob: -16.25
    5. '<int' → logprob: -16.375
    6. '(int' → logprob: -17.625
    7. '[Int' → logprob: -17.875
    8. '[in' → logprob: -19.25
    9. ':int' → logprob: -19.375
    10. ']int' → logprob: -19.75

Token 563: ']:
' (ID: 22152)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2521826922893524
    2. ')' → logprob: -1.5021827220916748
    3. '):
' → logprob: -8.502182960510254
    4. ':' → logprob: -10.002182960510254
    5. 'def' → logprob: -13.002182960510254
    6. '   ' → logprob: -14.002182960510254
    7. ' ):' → logprob: -14.752182960510254
    8. '):
' → logprob: -14.877182960510254
    9. '):

' → logprob: -15.627182960510254
    10. '():' → logprob: -15.752182960510254

Token 564: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0032292907126247883
    2. 'return' → logprob: -5.753229141235352
    3. ' return' → logprob: -9.878229141235352
    4. '   ' → logprob: -15.628229141235352
    5. '	return' → logprob: -16.50322914123535
    6. '```' → logprob: -18.00322914123535
    7. '{return' → logprob: -18.12822914123535
    8. '      ' → logprob: -18.37822914123535
    9. '     ' → logprob: -19.12822914123535
    10. '	' → logprob: -19.25322914123535

Token 565: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.00019305046589579433
    2. '       ' → logprob: -9.250192642211914
    3. ' return' → logprob: -9.250192642211914
    4. '   ' → logprob: -14.000192642211914
    5. '
' → logprob: -18.375192642211914
    6. '	return' → logprob: -19.000192642211914
    7. '```' → logprob: -19.000192642211914
    8. ' ' → logprob: -19.500192642211914
    9. '  ' → logprob: -21.250192642211914
    10. 'def' → logprob: -21.375192642211914

Token 566: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00671584764495492
    2. ' self' → logprob: -5.006715774536133
    3. '	self' → logprob: -16.131715774536133
    4. '(self' → logprob: -16.381715774536133
    5. '   ' → logprob: -16.506715774536133
    6. '       ' → logprob: -17.006715774536133
    7. ' ' → logprob: -17.006715774536133
    8. 's' → logprob: -17.131715774536133
    9. '
' → logprob: -17.256715774536133
    10. '[self' → logprob: -17.381715774536133

Token 567: '.forward' (ID: 53266)
  Prédit: '.reverse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.reverse' → logprob: -1.5094070477061905e-05
    2. 'reverse' → logprob: -11.375015258789062
    3. '.forward' → logprob: -12.875015258789062
    4. '.backward' → logprob: -14.625015258789062
    5. '.' → logprob: -14.875015258789062
    6. ' .' → logprob: -16.000015258789062
    7. '.inverse' → logprob: -17.875015258789062
    8. '.return' → logprob: -18.875015258789062
    9. 'Reverse' → logprob: -19.000015258789062
    10. ' reverse' → logprob: -19.000015258789062

Token 568: '_graph' (ID: 33441)
  Prédit: '_graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_graph' → logprob: -3.7697225252486533e-06
    2. 'graph' → logprob: -13.125003814697266
    3. 'Graph' → logprob: -14.250003814697266
    4. '._' → logprob: -14.625003814697266
    5. '_GRAPH' → logprob: -15.625003814697266
    6. 'self' → logprob: -16.250003814697266
    7. '.graph' → logprob: -16.500003814697266
    8. '_' → logprob: -16.750003814697266
    9. '.Graph' → logprob: -17.250003814697266
    10. 'return' → logprob: -17.500003814697266

Token 569: '.short' (ID: 56360)
  Prédit: '.reverse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.reverse' → logprob: -0.6351322531700134
    2. '.short' → logprob: -0.7601322531700134
    3. 'short' → logprob: -6.135132312774658
    4. 'reverse' → logprob: -8.7601318359375
    5. '_short' → logprob: -9.2601318359375
    6. '.' → logprob: -10.5101318359375
    7. ' .' → logprob: -10.6351318359375
    8. '_reverse' → logprob: -11.2601318359375
    9. '.backward' → logprob: -11.6351318359375
    10. '.forward' → logprob: -11.7601318359375

Token 570: 'est' (ID: 376)
  Prédit: 'est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'est' → logprob: -0.47531962394714355
    2. '_path' → logprob: -0.9753196239471436
    3. 'path' → logprob: -6.725319862365723
    4. 't' → logprob: -11.600319862365723
    5. 'cut' → logprob: -11.725319862365723
    6. 'st' → logprob: -12.225319862365723
    7. '```' → logprob: -12.975319862365723
    8. '.path' → logprob: -13.100319862365723
    9. '._' → logprob: -13.225319862365723
    10. 'short' → logprob: -13.600319862365723

Token 571: '_path' (ID: 5558)
  Prédit: '_path'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_path' → logprob: -4.870950215263292e-05
    2. '._' → logprob: -10.625048637390137
    3. 'path' → logprob: -11.125048637390137
    4. 'short' → logprob: -12.000048637390137
    5. '_short' → logprob: -14.000048637390137
    6. '.short' → logprob: -14.000048637390137
    7. ' shortest' → logprob: -14.375048637390137
    8. '.path' → logprob: -14.875048637390137
    9. 'Path' → logprob: -15.375048637390137
    10. '_graph' → logprob: -15.625048637390137

Token 572: '(start' (ID: 20008)
  Prédit: '(goal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(goal' → logprob: -8.041768160182983e-05
    2. 'goal' → logprob: -10.000080108642578
    3. '(start' → logprob: -10.500080108642578
    4. '(go' → logprob: -11.875080108642578
    5. '(' → logprob: -16.125080108642578
    6. 'start' → logprob: -16.125080108642578
    7. 'Goal' → logprob: -16.500080108642578
    8. '(self' → logprob: -16.750080108642578
    9. '(reverse' → logprob: -17.375080108642578
    10. '_goal' → logprob: -17.875080108642578

Token 573: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007518553175032139
    2. '=' → logprob: -7.875751972198486
    3. '(goal' → logprob: -8.250751495361328
    4. 'goal' → logprob: -10.250751495361328
    5. ')' → logprob: -10.625751495361328
    6. 'to' → logprob: -11.625751495361328
    7. ' ,' → logprob: -11.625751495361328
    8. '=start' → logprob: -12.000751495361328
    9. ',start' → logprob: -12.125751495361328
    10. ' if' → logprob: -12.250751495361328

Token 574: ' goal' (ID: 8583)
  Prédit: 'goal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'goal' → logprob: -0.008615515194833279
    2. ' goal' → logprob: -4.758615493774414
    3. '(goal' → logprob: -14.133615493774414
    4. ' ' → logprob: -16.633615493774414
    5. 'go' → logprob: -16.883615493774414
    6. 'to' → logprob: -17.133615493774414
    7. '.goal' → logprob: -18.258615493774414
    8. '  ' → logprob: -18.508615493774414
    9. 'start' → logprob: -18.508615493774414
    10. '   ' → logprob: -18.883615493774414

Token 575: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.227250610711053e-05
    2. ')
' → logprob: -10.250041961669922
    3. '<|end|>' → logprob: -13.000041961669922
    4. '       ' → logprob: -13.375041961669922
    5. ' )' → logprob: -13.500041961669922
    6. '   ' → logprob: -14.750041961669922
    7. ')return' → logprob: -15.375041961669922
    8. '+' → logprob: -15.625041961669922
    9. '))' → logprob: -16.125041961669922
    10. ')

' → logprob: -16.250041961669922

Token 576: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 577: ' def' (ID: 1056)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 578: ' shortest' (ID: 70564)
  Prédit: 'short'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'short' → logprob: -0.7414703965187073
    2. ' shortest' → logprob: -0.9914703965187073
    3. 'def' → logprob: -2.4914703369140625
    4. 'reverse' → logprob: -3.1164703369140625
    5. ' reverse' → logprob: -4.4914703369140625
    6. 'forward' → logprob: -5.1164703369140625
    7. ' def' → logprob: -5.6164703369140625
    8. ' short' → logprob: -6.1164703369140625
    9. '_short' → logprob: -7.6164703369140625
    10. ' forward' → logprob: -7.6164703369140625

Token 579: '_path' (ID: 5558)
  Prédit: '_path'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_path' → logprob: -0.0002661039761733264
    2. '_' → logprob: -8.250266075134277
    3. '_p' → logprob: -13.000266075134277
    4. '_paths' → logprob: -14.125266075134277
    5. ')_' → logprob: -15.000266075134277
    6. '_
' → logprob: -15.625266075134277
    7. '```' → logprob: -16.125267028808594
    8. ' _' → logprob: -16.375267028808594
    9. '_place' → logprob: -16.375267028808594
    10. '_Path' → logprob: -16.625267028808594

Token 580: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.13697028160095215
    2. '_forward' → logprob: -2.136970281600952
    3. '(' → logprob: -5.511970520019531
    4. '_backward' → logprob: -6.136970520019531
    5. '_' → logprob: -6.886970520019531
    6. '_(' → logprob: -6.886970520019531
    7. '_bid' → logprob: -7.011970520019531
    8. 'self' → logprob: -7.636970520019531
    9. '_self' → logprob: -8.261970520019531
    10. '_b' → logprob: -10.386970520019531

Token 581: ',' (ID: 11)
  Prédit: '_forward'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_forward' → logprob: -0.1494181603193283
    2. ',' → logprob: -2.2744181156158447
    3. '_' → logprob: -4.274418354034424
    4. ')_' → logprob: -4.524418354034424
    5. 'self' → logprob: -5.399418354034424
    6. '_backward' → logprob: -5.649418354034424
    7. ')' → logprob: -6.524418354034424
    8. '_,' → logprob: -6.899418354034424
    9. '_self' → logprob: -8.399417877197266
    10. 'forward' → logprob: -9.524417877197266

Token 582: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.20227375626564026
    2. ' start' → logprob: -1.7022737264633179
    3. 'self' → logprob: -7.077273845672607
    4. ' self' → logprob: -11.07727336883545
    5. '   ' → logprob: -15.32727336883545
    6. 'star' → logprob: -16.952274322509766
    7. ' ' → logprob: -16.952274322509766
    8. 'from' → logprob: -16.952274322509766
    9. '	start' → logprob: -17.077274322509766
    10. ')' → logprob: -17.327274322509766

Token 583: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07891799509525299
    2. ':' → logprob: -2.578917980194092
    3. ' ,' → logprob: -11.20391845703125
    4. ':int' → logprob: -11.57891845703125
    5. '   ' → logprob: -12.82891845703125
    6. 'self' → logprob: -14.45391845703125
    7. ':,' → logprob: -14.45391845703125
    8. ' :' → logprob: -15.07891845703125
    9. '=' → logprob: -15.07891845703125
    10. ',int' → logprob: -15.95391845703125

Token 584: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.1269788295030594
    2. ' int' → logprob: -2.126978874206543
    3. ':int' → logprob: -10.001978874206543
    4. ',' → logprob: -13.001978874206543
    5. ':' → logprob: -13.751978874206543
    6. 'end' → logprob: -14.251978874206543
    7. ' end' → logprob: -14.376978874206543
    8. '[int' → logprob: -14.876978874206543
    9. ',int' → logprob: -15.626978874206543
    10. '<int' → logprob: -16.126977920532227

Token 585: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1005559042096138
    2. ':' → logprob: -2.350555896759033
    3. ':int' → logprob: -8.100556373596191
    4. ' ,' → logprob: -10.225556373596191
    5. ',int' → logprob: -12.350556373596191
    6. 'int' → logprob: -13.350556373596191
    7. '   ' → logprob: -13.725556373596191
    8. ',
' → logprob: -14.100556373596191
    9. ' :' → logprob: -14.100556373596191
    10. ')' → logprob: -15.225556373596191

Token 586: ' goal' (ID: 8583)
  Prédit: 'goal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'goal' → logprob: -0.10020678490400314
    2. ' goal' → logprob: -2.3502068519592285
    3. 'Goal' → logprob: -15.85020637512207
    4. '(goal' → logprob: -17.97520637512207
    5. ' ' → logprob: -18.35020637512207
    6. '.goal' → logprob: -18.85020637512207
    7. 'end' → logprob: -18.97520637512207
    8. 'go' → logprob: -19.60020637512207
    9. '   ' → logprob: -19.60020637512207
    10. '_goal' → logprob: -19.72520637512207

Token 587: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -2.069664333248511e-05
    2. ':int' → logprob: -11.250020980834961
    3. ')' → logprob: -12.000020980834961
    4. '):' → logprob: -13.875020980834961
    5. ' :' → logprob: -15.375020980834961
    6. '   ' → logprob: -15.625020980834961
    7. 'int' → logprob: -16.87502098083496
    8. ':
' → logprob: -17.50002098083496
    9. '```' → logprob: -17.62502098083496
    10. '):
' → logprob: -18.50002098083496

Token 588: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.039723388850688934
    2. ' int' → logprob: -3.2897233963012695
    3. ')' → logprob: -6.4147233963012695
    4. ':int' → logprob: -10.78972339630127
    5. 'self' → logprob: -11.91472339630127
    6. ' )' → logprob: -12.53972339630127
    7. '   ' → logprob: -12.66472339630127
    8. ' ' → logprob: -13.16472339630127
    9. '1' → logprob: -13.41472339630127
    10. '[int' → logprob: -13.78972339630127

Token 589: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.704273118884885e-07
    2. ' )' → logprob: -15.500000953674316
    3. '):' → logprob: -15.875000953674316
    4. '   ' → logprob: -15.875000953674316
    5. ')
' → logprob: -17.0
    6. ':' → logprob: -17.25
    7. '`)' → logprob: -17.25
    8. ')->' → logprob: -18.0
    9. '):
' → logprob: -18.125
    10. ' ' → logprob: -19.25

Token 590: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7222386598587036
    2. ')' → logprob: -1.3472386598587036
    3. ' ->' → logprob: -1.4722386598587036
    4. '->' → logprob: -3.722238540649414
    5. ')->' → logprob: -7.472238540649414
    6. '   ' → logprob: -9.472238540649414
    7. '>' → logprob: -9.722238540649414
    8. '):' → logprob: -10.597238540649414
    9. ':
' → logprob: -10.972238540649414
    10. ' )' → logprob: -11.597238540649414

Token 591: ' Optional' (ID: 19351)
  Prédit: 'Optional'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Optional' → logprob: -0.2553779184818268
    2. ' Optional' → logprob: -1.5053778886795044
    3. 'self' → logprob: -5.880377769470215
    4. ' self' → logprob: -7.380377769470215
    5. 'int' → logprob: -11.755377769470215
    6. '(Optional' → logprob: -12.130377769470215
    7. 'optional' → logprob: -12.505377769470215
    8. ' return' → logprob: -13.130377769470215
    9. ' optional' → logprob: -13.505377769470215
    10. 'return' → logprob: -13.755377769470215

Token 592: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -1.6240566083070007e-06
    2. '[' → logprob: -13.875001907348633
    3. '[Int' → logprob: -15.125001907348633
    4. '[in' → logprob: -16.000001907348633
    5. 'int' → logprob: -16.375001907348633
    6. ':int' → logprob: -16.500001907348633
    7. ':' → logprob: -18.250001907348633
    8. '[
' → logprob: -18.875001907348633
    9. '[str' → logprob: -19.375001907348633
    10. '<int' → logprob: -19.375001907348633

Token 593: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.07599111646413803
    2. ':' → logprob: -2.825991153717041
    3. ']:
' → logprob: -4.825991153717041
    4. '):' → logprob: -5.325991153717041
    5. '>:' → logprob: -7.575991153717041
    6. ':
' → logprob: -8.700990676879883
    7. '):
' → logprob: -9.200990676879883
    8. '}:' → logprob: -9.325990676879883
    9. ']:
' → logprob: -9.700990676879883
    10. ']' → logprob: -9.825990676879883

Token 594: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00014931005716789514
    2. ' return' → logprob: -9.875149726867676
    3. '   ' → logprob: -10.000149726867676
    4. 'return' → logprob: -11.375149726867676
    5. '      ' → logprob: -11.375149726867676
    6. '    ' → logprob: -12.375149726867676
    7. '        
' → logprob: -12.375149726867676
    8. '```' → logprob: -12.500149726867676
    9. ',' → logprob: -13.000149726867676
    10. '        ' → logprob: -13.125149726867676

Token 595: ' #' (ID: 1069)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.05617395415902138
    2. '#' (adapté à ' #') → logprob: -3.9311740398406982
    3. 'forward' → logprob: -4.681173801422119
    4. 'left' → logprob: -5.056173801422119
    5. 'return' → logprob: -5.306173801422119
    6. 'import' → logprob: -5.431173801422119
    7. 'front' → logprob: -5.431173801422119
    8. '       ' → logprob: -6.181173801422119
    9. 'if' → logprob: -6.681173801422119
    10. 'visited' → logprob: -7.431173801422119

Token 596: ' Default' (ID: 13498)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.21508575975894928
    2. 'return' → logprob: -1.965085744857788
    3. '#' → logprob: -4.465085983276367
    4. 'if' → logprob: -4.715085983276367
    5. 'forward' → logprob: -4.840085983276367
    6. 'front' → logprob: -4.965085983276367
    7. 'import' → logprob: -5.340085983276367
    8. 'visited' → logprob: -5.340085983276367
    9. 'def' → logprob: -5.715085983276367
    10. 'left' → logprob: -5.965085983276367

Token 597: ' shortest' (ID: 70564)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.7247668504714966
    2. 'return' → logprob: -0.7247668504714966
    3. '       ' → logprob: -3.474766731262207
    4. '        
' → logprob: -10.224766731262207
    5. '   ' → logprob: -10.474766731262207
    6. ':return' → logprob: -10.974766731262207
    7. '
' → logprob: -11.099766731262207
    8. '```' → logprob: -11.224766731262207
    9. '_return' → logprob: -11.474766731262207
    10. ':' → logprob: -11.599766731262207

Token 598: '_path' (ID: 5558)
  Prédit: '_path'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_path' → logprob: -9.088346359931165e-07
    2. '_' → logprob: -14.625000953674316
    3. '_p' → logprob: -15.000000953674316
    4. '_direction' → logprob: -17.75
    5. ')_' → logprob: -18.125
    6. 'path' → logprob: -18.125
    7. '_route' → logprob: -18.375
    8. '_method' → logprob: -18.375
    9. '_forward' → logprob: -18.5
    10. '_distance' → logprob: -19.125

Token 599: ' method' (ID: 2595)
  Prédit: '_forward'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_forward' → logprob: -0.6735185980796814
    2. '(self' → logprob: -0.7985185980796814
    3. '(' → logprob: -3.548518657684326
    4. '       ' → logprob: -5.548518657684326
    5. '(
' → logprob: -5.548518657684326
    6. '_' → logprob: -6.548518657684326
    7. '   ' → logprob: -6.673518657684326
    8. 'self' → logprob: -9.048518180847168
    9. ' =' → logprob: -9.298518180847168
    10. '=' → logprob: -9.548518180847168

Token 600: ' finds' (ID: 22016)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.016577836126089096
    2. ':' → logprob: -4.26657772064209
    3. '   ' → logprob: -7.14157772064209
    4. ',' → logprob: -7.51657772064209
    5. ' return' → logprob: -8.39157772064209
    6. ' =' → logprob: -8.64157772064209
    7. ' is' → logprob: -9.26657772064209
    8. '=' → logprob: -9.51657772064209
    9. ':
' → logprob: -9.51657772064209
    10. 'return' → logprob: -9.76657772064209

Token 601: ' from' (ID: 591)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.022384261712431908
    2. 'return' → logprob: -4.772384166717529
    3. 'the' → logprob: -4.772384166717529
    4. ' the' → logprob: -6.147384166717529
    5. ' self' → logprob: -6.397384166717529
    6. 'forward' → logprob: -7.397384166717529
    7. ' return' → logprob: -8.522384643554688
    8. '       ' → logprob: -8.897384643554688
    9. 'short' → logprob: -9.397384643554688
    10. 'min' → logprob: -9.397384643554688

Token 602: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.07515230029821396
    2. 'self' → logprob: -3.5751523971557617
    3. ' start' → logprob: -3.9501523971557617
    4. 'forward' → logprob: -4.075152397155762
    5. 'both' → logprob: -5.450152397155762
    6. ' forward' → logprob: -6.700152397155762
    7. ' both' → logprob: -6.950152397155762
    8. 'the' → logprob: -7.825152397155762
    9. ' the' → logprob: -7.950152397155762
    10. ' self' → logprob: -8.200152397155762

Token 603: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.09902963787317276
    2. 'to' → logprob: -2.474029541015625
    3. '_to' → logprob: -4.974029541015625
    4. '       ' → logprob: -6.599029541015625
    5. ',' → logprob: -7.099029541015625
    6. '```' → logprob: -8.724029541015625
    7. '_forward' → logprob: -8.974029541015625
    8. ' forward' → logprob: -9.099029541015625
    9. 'forward' → logprob: -9.099029541015625
    10. ')' → logprob: -9.599029541015625

Token 604: ' goal' (ID: 8583)
  Prédit: ' goal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' goal' → logprob: -0.2519303858280182
    2. 'goal' → logprob: -1.5019303560256958
    3. '(goal' → logprob: -14.626930236816406
    4. ' end' → logprob: -15.126930236816406
    5. 'go' → logprob: -15.501930236816406
    6. 'end' → logprob: -15.626930236816406
    7. '_goal' → logprob: -16.751930236816406
    8. '.goal' → logprob: -17.126930236816406
    9. ' ' → logprob: -17.876930236816406
    10. 'Goal' → logprob: -18.001930236816406

Token 605: ' on' (ID: 402)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008330521173775196
    2. ' return' → logprob: -5.883330345153809
    3. 'return' → logprob: -6.508330345153809
    4. ',' → logprob: -6.508330345153809
    5. ':' → logprob: -6.883330345153809
    6. '        
' → logprob: -8.383330345153809
    7. '.' → logprob: -8.383330345153809
    8. ' in' → logprob: -8.758330345153809
    9. ':
' → logprob: -9.008330345153809
    10. '
' → logprob: -9.008330345153809

Token 606: ' forward' (ID: 6687)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.03152698650956154
    2. ' self' → logprob: -3.531527042388916
    3. 'forward' → logprob: -7.031527042388916
    4. ' forward' → logprob: -7.406527042388916
    5. '       ' → logprob: -8.906526565551758
    6. ' the' → logprob: -9.156526565551758
    7. 'the' → logprob: -10.406526565551758
    8. '.forward' → logprob: -13.031526565551758
    9. '```' → logprob: -13.281526565551758
    10. '(self' → logprob: -13.406526565551758

Token 607: ' graph' (ID: 7465)
  Prédit: '_graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_graph' → logprob: -0.0003365350130479783
    2. 'graph' → logprob: -8.500336647033691
    3. '_forward' → logprob: -9.375336647033691
    4. '.' → logprob: -11.125336647033691
    5. '   ' → logprob: -12.000336647033691
    6. 'self' → logprob: -12.000336647033691
    7. '_' → logprob: -12.375336647033691
    8. 'Graph' → logprob: -12.875336647033691
    9. '```' → logprob: -12.875336647033691
    10. ')' → logprob: -13.125336647033691

Token 608: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011181153357028961
    2. 'return' → logprob: -5.136181354522705
    3. '
' → logprob: -6.136181354522705
    4. ' return' → logprob: -6.636181354522705
    5. '(' → logprob: -7.386181354522705
    6. '(self' → logprob: -8.136180877685547
    7. ':' → logprob: -8.261180877685547
    8. '(
' → logprob: -9.261180877685547
    9. '        
' → logprob: -9.386180877685547
    10. '   ' → logprob: -9.386180877685547

Token 609: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0047918036580085754
    2. 'return' → logprob: -5.754791736602783
    3. ' return' → logprob: -6.754791736602783
    4. '
' → logprob: -7.879791736602783
    5. '        
' → logprob: -10.629792213439941
    6. ':' → logprob: -11.379792213439941
    7. '   ' → logprob: -12.004792213439941
    8. ':
' → logprob: -12.379792213439941
    9. ',' → logprob: -12.504792213439941
    10. '	' → logprob: -12.879792213439941

Token 610: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.06209036335349083
    2. '       ' → logprob: -3.0620903968811035
    3. ' return' → logprob: -4.3120903968811035
    4. '
' → logprob: -12.062089920043945
    5. '```' → logprob: -14.687089920043945
    6. '	return' → logprob: -15.687089920043945
    7. '   ' → logprob: -15.937089920043945
    8. '{return' → logprob: -16.312089920043945
    9. '        
' → logprob: -17.937089920043945
    10. 'self' → logprob: -18.312089920043945

Token 611: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.47407761216163635
    2. 'self' → logprob: -0.974077582359314
    3. '       ' → logprob: -14.599077224731445
    4. '(self' → logprob: -16.224077224731445
    5. '	self' → logprob: -16.599077224731445
    6. ' ' → logprob: -17.349077224731445
    7. '=self' → logprob: -18.349077224731445
    8. '[self' → logprob: -18.474077224731445
    9. '   ' → logprob: -19.599077224731445
    10. '```' → logprob: -19.724077224731445

Token 612: '.forward' (ID: 53266)
  Prédit: '.forward'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.forward' → logprob: -5.157039049663581e-05
    2. '.' → logprob: -10.500051498413086
    3. '.for' → logprob: -11.250051498413086
    4. ' .' → logprob: -12.250051498413086
    5. '._' → logprob: -13.125051498413086
    6. 'forward' → logprob: -14.125051498413086
    7. '.front' → logprob: -14.125051498413086
    8. '.fast' → logprob: -14.875051498413086
    9. '.short' → logprob: -15.125051498413086
    10. ').' → logprob: -15.375051498413086

Token 613: '_graph' (ID: 33441)
  Prédit: '_graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_graph' → logprob: -0.000948737608268857
    2. '._' → logprob: -7.000948905944824
    3. '.' → logprob: -10.375948905944824
    4. '.graph' → logprob: -12.875948905944824
    5. ' .' → logprob: -13.750948905944824
    6. '_GRAPH' → logprob: -14.625948905944824
    7. 'Graph' → logprob: -14.875948905944824
    8. '```' → logprob: -15.000948905944824
    9. 'graph' → logprob: -15.250948905944824
    10. '.Graph' → logprob: -15.375948905944824

Token 614: '.short' (ID: 56360)
  Prédit: '.short'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.short' → logprob: -2.856408536899835e-05
    2. '.' → logprob: -11.000028610229492
    3. ' .' → logprob: -11.875028610229492
    4. '.shortcuts' → logprob: -12.625028610229492
    5. 'short' → logprob: -14.500028610229492
    6. '.s' → logprob: -15.000028610229492
    7. '.Short' → logprob: -15.500028610229492
    8. '.long' → logprob: -15.625028610229492
    9. '.small' → logprob: -16.500028610229492
    10. '.sh' → logprob: -16.875028610229492

Token 615: 'est' (ID: 376)
  Prédit: 'est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'est' → logprob: -0.006140068639069796
    2. '_path' → logprob: -5.256140232086182
    3. 't' → logprob: -7.131140232086182
    4. 'test' → logprob: -9.506139755249023
    5. 'path' → logprob: -10.506139755249023
    6. 'st' → logprob: -12.881139755249023
    7. 'ort' → logprob: -14.131139755249023
    8. '```' → logprob: -15.631139755249023
    9. 'e' → logprob: -16.006139755249023
    10. 'ест' → logprob: -16.381139755249023

Token 616: '_path' (ID: 5558)
  Prédit: '_path'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_path' → logprob: -1.1756367712223437e-05
    2. 'path' → logprob: -11.500011444091797
    3. '_' → logprob: -13.625011444091797
    4. '_p' → logprob: -15.750011444091797
    5. '._' → logprob: -15.875011444091797
    6. '_graph' → logprob: -16.875011444091797
    7. '_point' → logprob: -17.750011444091797
    8. '```' → logprob: -18.250011444091797
    9. 'Path' → logprob: -18.375011444091797
    10. 'p' → logprob: -18.500011444091797

Token 617: '(start' (ID: 20008)
  Prédit: '(start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(start' → logprob: -9.877503907773644e-05
    2. '(' → logprob: -9.250099182128906
    3. 'start' → logprob: -13.250099182128906
    4. '(
' → logprob: -15.000099182128906
    5. ' (' → logprob: -15.000099182128906
    6. '(end' → logprob: -15.750099182128906
    7. '(stop' → logprob: -17.125099182128906
    8. '(st' → logprob: -17.750099182128906
    9. '[start' → logprob: -18.000099182128906
    10. '(Start' → logprob: -18.000099182128906

Token 618: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.723352049040841e-06
    2. ' ,' → logprob: -12.375004768371582
    3. ',start' → logprob: -15.000004768371582
    4. ',
' → logprob: -16.250003814697266
    5. ')' → logprob: -17.500003814697266
    6. 'start' → logprob: -17.625003814697266
    7. '(goal' → logprob: -18.750003814697266
    8. '   ' → logprob: -19.875003814697266
    9. '```' → logprob: -19.875003814697266
    10. ',end' → logprob: -19.875003814697266

Token 619: ' goal' (ID: 8583)
  Prédit: 'goal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'goal' → logprob: -0.029750604182481766
    2. ' goal' → logprob: -3.5297505855560303
    3. '(goal' → logprob: -16.65475082397461
    4. ' ' → logprob: -17.02975082397461
    5. 'go' → logprob: -18.15475082397461
    6. '.goal' → logprob: -18.90475082397461
    7. 'Goal' → logprob: -19.40475082397461
    8. '
' → logprob: -19.90475082397461
    9. '_goal' → logprob: -19.90475082397461
    10. '   ' → logprob: -20.02975082397461

Token 620: ')


' (ID: 7861)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.650518920039758e-06
    2. ')
' → logprob: -12.625003814697266
    3. ' )' → logprob: -15.625003814697266
    4. '   ' → logprob: -16.375003814697266
    5. '       ' → logprob: -17.250003814697266
    6. '))' → logprob: -17.875003814697266
    7. '<|end|>' → logprob: -18.000003814697266
    8. ')return' → logprob: -18.375003814697266
    9. '```' → logprob: -18.625003814697266
    10. '),' → logprob: -18.625003814697266

Token 621: 'class' (ID: 1444)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 622: ' Carpenter' (ID: 132788)
  Prédit: 'Bid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Bid' → logprob: -0.8836503624916077
    2. 'Und' → logprob: -1.758650302886963
    3. 'Un' → logprob: -2.383650302886963
    4. 'Graph' → logprob: -2.758650302886963
    5. ' Bid' → logprob: -3.633650302886963
    6. 'Reverse' → logprob: -3.633650302886963
    7. 'Two' → logprob: -3.758650302886963
    8. 'Directed' → logprob: -3.758650302886963
    9. 'Shortest' → logprob: -4.258650302886963
    10. 'Solution' → logprob: -4.383650302886963

Token 623: 'Reward' (ID: 43608)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.23697569966316223
    2. ':
' → logprob: -1.8619756698608398
    3. 'Helper' → logprob: -4.36197566986084
    4. 'Planner' → logprob: -4.48697566986084
    5. 'Builder' → logprob: -4.61197566986084
    6. 'Solver' → logprob: -5.48697566986084
    7. 'Assistant' → logprob: -5.73697566986084
    8. 'Problem' → logprob: -6.23697566986084
    9. 'Worker' → logprob: -6.48697566986084
    10. 'Optimizer' → logprob: -6.61197566986084

Token 624: 'Calculator' (ID: 50159)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.12814326584339142
    2. ':
' → logprob: -2.128143310546875
    3. '(' → logprob: -7.128143310546875
    4. 'Calculator' → logprob: -8.878143310546875
    5. 'Graph' → logprob: -9.503143310546875
    6. '(Graph' → logprob: -9.753143310546875
    7. 'Reward' → logprob: -11.378143310546875
    8. '(B' → logprob: -11.503143310546875
    9. ':

' → logprob: -11.628143310546875
    10. 'Estimator' → logprob: -11.753143310546875

Token 625: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.003210627008229494
    2. ':
' → logprob: -5.753210544586182
    3. '(' → logprob: -10.87821102142334
    4. ' :' → logprob: -12.00321102142334
    5. '):' → logprob: -13.25321102142334
    6. '():' → logprob: -13.37821102142334
    7. ':

' → logprob: -13.62821102142334
    8. '(object' → logprob: -14.12821102142334
    9. ':def' → logprob: -14.50321102142334
    10. ':
' → logprob: -15.12821102142334

Token 626: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0013685694430023432
    2. ' def' → logprob: -6.876368522644043
    3. 'def' → logprob: -8.376368522644043
    4. '    
' → logprob: -10.126368522644043
    5. ':' → logprob: -10.501368522644043
    6. '```' → logprob: -11.751368522644043
    7. '    ' → logprob: -11.876368522644043
    8. 'class' → logprob: -11.876368522644043
    9. ' class' → logprob: -12.501368522644043
    10. ' 
' → logprob: -13.001368522644043

Token 627: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.10025659948587418
    2. ' def' → logprob: -2.3502566814422607
    3. 'class' → logprob: -10.47525691986084
    4. '   ' → logprob: -10.85025691986084
    5. '__' → logprob: -13.85025691986084
    6. '```' → logprob: -13.97525691986084
    7. 'de' → logprob: -16.350255966186523
    8. ' ' → logprob: -16.600255966186523
    9. '	def' → logprob: -16.725255966186523
    10. 'import' → logprob: -16.975255966186523

Token 628: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.2536487877368927
    2. ' def' → logprob: -1.7536487579345703
    3. '__' → logprob: -3.1286487579345703
    4. 'def' → logprob: -5.00364875793457
    5. '```' → logprob: -8.75364875793457
    6. 'init' → logprob: -9.87864875793457
    7. 'class' → logprob: -10.12864875793457
    8. '_init' → logprob: -10.25364875793457
    9. 'python' → logprob: -10.62864875793457
    10. ' ' → logprob: -10.87864875793457

Token 629: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -3.128163257315464e-07
    2. 'def' → logprob: -15.125
    3. ' init' → logprob: -17.75
    4. '```' → logprob: -17.75
    5. '_init' → logprob: -18.875
    6. '   ' → logprob: -19.75
    7. '(init' → logprob: -19.75
    8. '.init' → logprob: -20.0
    9. '	init' → logprob: -20.0
    10. '
' → logprob: -20.375

Token 630: '__(' (ID: 8241)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.5764805674552917
    2. '__(' → logprob: -0.8264805674552917
    3. '(' → logprob: -8.451480865478516
    4. ' (' → logprob: -8.826480865478516
    5. '__(
' → logprob: -8.951480865478516
    6. '__' → logprob: -10.201480865478516
    7. '_(' → logprob: -13.201480865478516
    8. 'self' → logprob: -13.451480865478516
    9. '   ' → logprob: -13.451480865478516
    10. '(
' → logprob: -13.701480865478516

Token 631: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.005418496206402779
    2. ' self' → logprob: -5.255418300628662
    3. '
' → logprob: -8.75541877746582
    4. ',' → logprob: -11.13041877746582
    5. 'num' → logprob: -12.00541877746582
    6. ')' → logprob: -13.25541877746582
    7. '(self' → logprob: -13.88041877746582
    8. ' ' → logprob: -14.00541877746582
    9. '   ' → logprob: -14.63041877746582
    10. 'graph' → logprob: -15.00541877746582

Token 632: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01329481415450573
    2. 'self' → logprob: -4.388294696807861
    3. ' ,' → logprob: -7.763294696807861
    4. '(self' → logprob: -9.01329517364502
    5. ' self' → logprob: -9.01329517364502
    6. ' (' → logprob: -9.88829517364502
    7. ',num' → logprob: -10.76329517364502
    8. ',self' → logprob: -11.13829517364502
    9. 'num' → logprob: -11.63829517364502
    10. ')' → logprob: -12.01329517364502

Token 633: ' n' (ID: 297)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.4185373783111572
    2. 'num' → logprob: -1.7935373783111572
    3. ' graph' → logprob: -2.4185373783111572
    4. 'bid' → logprob: -3.2935373783111572
    5. ' num' → logprob: -3.5435373783111572
    6. ' bid' → logprob: -4.793537139892578
    7. 'reward' → logprob: -5.668537139892578
    8. ' reward' → logprob: -6.793537139892578
    9. 'max' → logprob: -7.168537139892578
    10. 'cost' → logprob: -7.293537139892578

Token 634: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0007362506585195661
    2. 'um' → logprob: -7.625736236572266
    3. 'odes' → logprob: -8.875736236572266
    4. '_nodes' → logprob: -9.750736236572266
    5. ' :' → logprob: -11.500736236572266
    6. ')' → logprob: -11.500736236572266
    7. ',' → logprob: -11.750736236572266
    8. '=' → logprob: -11.875736236572266
    9. ':int' → logprob: -12.000736236572266
    10. '):' → logprob: -13.125736236572266

Token 635: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0001278534036828205
    2. ' int' → logprob: -9.000127792358398
    3. ')' → logprob: -13.125127792358398
    4. '[int' → logprob: -13.625127792358398
    5. ':int' → logprob: -14.750127792358398
    6. '=int' → logprob: -15.625127792358398
    7. '```' → logprob: -16.0001277923584
    8. ']int' → logprob: -16.3751277923584
    9. '(int' → logprob: -16.5001277923584
    10. '
' → logprob: -16.6251277923584

Token 636: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.21657460927963257
    2. ')' → logprob: -1.7165746688842773
    3. '):' → logprob: -4.216574668884277
    4. '):
' → logprob: -8.341574668884277
    5. ':' → logprob: -10.466574668884277
    6. '   ' → logprob: -11.091574668884277
    7. ' )' → logprob: -12.216574668884277
    8. ' ,' → logprob: -12.216574668884277
    9. ',
' → logprob: -13.591574668884277
    10. '):
' → logprob: -14.091574668884277

Token 637: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.939821183681488
    2. 'edges' → logprob: -0.939821183681488
    3. 'bid' → logprob: -3.064821243286133
    4. 'k' → logprob: -3.064821243286133
    5. 'graph' → logprob: -3.564821243286133
    6. 'a' → logprob: -4.189821243286133
    7. ' edges' → logprob: -4.314821243286133
    8. ' m' → logprob: -4.689821243286133
    9. 'forward' → logprob: -5.189821243286133
    10. 'M' → logprob: -5.189821243286133

Token 638: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6958789825439453
    2. ':' → logprob: -0.6958789825439453
    3. '):' → logprob: -6.445878982543945
    4. ')' → logprob: -6.945878982543945
    5. '):
' → logprob: -9.820878982543945
    6. ':int' → logprob: -10.195878982543945
    7. ' ,' → logprob: -10.445878982543945
    8. ',
' → logprob: -11.195878982543945
    9. '```' → logprob: -11.320878982543945
    10. '   ' → logprob: -11.820878982543945

Token 639: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.2525371313095093
    2. ' int' → logprob: -1.5025371313095093
    3. ')' → logprob: -8.62753677368164
    4. ',' → logprob: -9.62753677368164
    5. 'List' → logprob: -9.62753677368164
    6. 'n' → logprob: -9.75253677368164
    7. ':int' → logprob: -9.87753677368164
    8. '   ' → logprob: -10.12753677368164
    9. ' List' → logprob: -10.62753677368164
    10. '):
' → logprob: -11.00253677368164

Token 640: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03650089353322983
    2. ')' → logprob: -3.411500930786133
    3. '):' → logprob: -6.036500930786133
    4. '):
' → logprob: -7.911500930786133
    5. '   ' → logprob: -9.911500930786133
    6. ':' → logprob: -10.286500930786133
    7. ',
' → logprob: -12.661500930786133
    8. ' ,' → logprob: -13.036500930786133
    9. '):
' → logprob: -13.536500930786133
    10. '       ' → logprob: -14.411500930786133

Token 641: ' edges' (ID: 22569)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.11755893379449844
    2. 'k' → logprob: -2.9925589561462402
    3. 'q' → logprob: -4.24255895614624
    4. 'a' → logprob: -4.99255895614624
    5. 'bid' → logprob: -4.99255895614624
    6. ' edges' → logprob: -5.36755895614624
    7. 'queries' → logprob: -5.86755895614624
    8. 'roads' → logprob: -5.86755895614624
    9. 'l' → logprob: -6.36755895614624
    10. 'edge' → logprob: -6.49255895614624

Token 642: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004858122672885656
    2. '):' → logprob: -5.379858016967773
    3. '):
' → logprob: -8.754858016967773
    4. ')' → logprob: -9.754858016967773
    5. ',' → logprob: -11.004858016967773
    6. '=' → logprob: -13.629858016967773
    7. ' :' → logprob: -13.754858016967773
    8. '```' → logprob: -14.379858016967773
    9. ' ):' → logprob: -14.629858016967773
    10. ':list' → logprob: -14.754858016967773

Token 643: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.00018208740220870823
    2. ' List' → logprob: -8.625182151794434
    3. '[List' → logprob: -13.500182151794434
    4. 'list' → logprob: -14.625182151794434
    5. ')' → logprob: -15.125182151794434
    6. '	List' → logprob: -15.750182151794434
    7. '   ' → logprob: -16.375181198120117
    8. '
' → logprob: -16.750181198120117
    9. '```' → logprob: -16.750181198120117
    10. '[]' → logprob: -17.750181198120117

Token 644: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.735893965815194e-05
    2. '[
' → logprob: -11.250017166137695
    3. '   ' → logprob: -13.500017166137695
    4. '[List' → logprob: -13.500017166137695
    5. 'Tuple' → logprob: -14.250017166137695
    6. '[int' → logprob: -15.125017166137695
    7. '```' → logprob: -16.000017166137695
    8. ',' → logprob: -16.125017166137695
    9. '<Tuple' → logprob: -16.125017166137695
    10. ' ' → logprob: -17.250017166137695

Token 645: 'Tuple' (ID: 40048)
  Prédit: 'Tuple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tuple' → logprob: -4.127333340875339e-06
    2. '[' → logprob: -13.000003814697266
    3. ' Tuple' → logprob: -13.500003814697266
    4. 'List' → logprob: -15.750003814697266
    5. 'Tu' → logprob: -16.000003814697266
    6. 'int' → logprob: -16.375003814697266
    7. '   ' → logprob: -17.375003814697266
    8. '<Tuple' → logprob: -17.375003814697266
    9. 'tuple' → logprob: -17.750003814697266
    10. '```' → logprob: -18.000003814697266

Token 646: '[int' (ID: 40124)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.023277975618839264
    2. '[int' → logprob: -3.773277997970581
    3. ' int' → logprob: -11.02327823638916
    4. '   ' → logprob: -12.27327823638916
    5. '(int' → logprob: -12.89827823638916
    6. ']int' → logprob: -13.27327823638916
    7. ',int' → logprob: -13.64827823638916
    8. '<int' → logprob: -13.89827823638916
    9. '```' → logprob: -13.89827823638916
    10. '
' → logprob: -14.14827823638916

Token 647: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0139180738478899
    2. ',int' → logprob: -4.513917922973633
    3. '[int' → logprob: -5.888917922973633
    4. 'int' → logprob: -9.638917922973633
    5. ' ,' → logprob: -10.513917922973633
    6. '   ' → logprob: -13.263917922973633
    7. ',
' → logprob: -14.138917922973633
    8. ' int' → logprob: -15.138917922973633
    9. ']int' → logprob: -15.263917922973633
    10. '(int' → logprob: -15.513917922973633

Token 648: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0005245577194727957
    2. ' int' → logprob: -7.750524520874023
    3. '...' → logprob: -10.250524520874023
    4. 'List' → logprob: -11.250524520874023
    5. 'Tuple' → logprob: -11.500524520874023
    6. '   ' → logprob: -11.750524520874023
    7. 'cost' → logprob: -12.375524520874023
    8. '[int' → logprob: -12.500524520874023
    9. ']int' → logprob: -13.063024520874023
    10. '
' → logprob: -13.063024520874023

Token 649: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001980570232262835
    2. ',int' → logprob: -8.625198364257812
    3. 'int' → logprob: -11.625198364257812
    4. ' ,' → logprob: -12.375198364257812
    5. ',
' → logprob: -13.125198364257812
    6. '[int' → logprob: -13.500198364257812
    7. ']],' → logprob: -14.125198364257812
    8. ']])' → logprob: -15.250198364257812
    9. '```' → logprob: -15.375198364257812
    10. '
' → logprob: -15.750198364257812

Token 650: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -4.739826181321405e-05
    2. ' int' → logprob: -10.75004768371582
    3. '...' → logprob: -11.25004768371582
    4. '[int' → logprob: -13.00004768371582
    5. 'List' → logprob: -13.25004768371582
    6. '
' → logprob: -13.62504768371582
    7. ']int' → logprob: -13.62504768371582
    8. '   ' → logprob: -13.75004768371582
    9. '```' → logprob: -13.75004768371582
    10. 'Optional' → logprob: -14.25004768371582

Token 651: ',' (ID: 11)
  Prédit: ']])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']])' → logprob: -0.2238970696926117
    2. ']]' → logprob: -1.848897099494934
    3. ',' → logprob: -3.2238969802856445
    4. ']],' → logprob: -5.8488969802856445
    5. ']' → logprob: -8.348896980285645
    6. ']],
' → logprob: -9.598896980285645
    7. ']]:
' → logprob: -10.223896980285645
    8. ',int' → logprob: -10.473896980285645
    9. ']]]' → logprob: -10.723896980285645
    10. ']])
' → logprob: -10.848896980285645

Token 652: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -5.013994814362377e-05
    2. ' int' → logprob: -10.75005054473877
    3. '...' → logprob: -11.37505054473877
    4. ']int' → logprob: -12.62505054473877
    5. '[int' → logprob: -12.75005054473877
    6. 'List' → logprob: -13.12505054473877
    7. ']])' → logprob: -13.37505054473877
    8. 'Optional' → logprob: -13.37505054473877
    9. '
' → logprob: -13.62505054473877
    10. '<int' → logprob: -14.12505054473877

Token 653: ']],
' (ID: 40071)
  Prédit: ']])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']])' → logprob: -0.1824929118156433
    2. ']]' → logprob: -1.807492971420288
    3. ']):' → logprob: -7.182492733001709
    4. ']],' → logprob: -7.432492733001709
    5. '])' → logprob: -7.557492733001709
    6. ']' → logprob: -7.807492733001709
    7. ',' → logprob: -8.307493209838867
    8. ')' → logprob: -9.432493209838867
    9. ')])' → logprob: -10.057493209838867
    10. ')]' → logprob: -10.432493209838867

Token 654: '                ' (ID: 408)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -1.0818709135055542
    2. ')' → logprob: -2.8318710327148438
    3. '   ' → logprob: -3.4568710327148438
    4. 'start' → logprob: -3.5818710327148438
    5. ' k' → logprob: -3.5818710327148438
    6. 's' → logprob: -3.7068710327148438
    7. 'd' → logprob: -3.7068710327148438
    8. 'budget' → logprob: -3.7068710327148438
    9. ' start' → logprob: -3.7693710327148438
    10. ' budget' → logprob: -3.8943710327148438

Token 655: ' s' (ID: 265)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -1.2436583042144775
    2. 'q' → logprob: -1.3686583042144775
    3. 'start' → logprob: -2.3686583042144775
    4. 'queries' → logprob: -2.9936583042144775
    5. 's' (adapté à ' s') → logprob: -3.1186583042144775
    6. 'x' → logprob: -3.8686583042144775
    7. 'query' → logprob: -4.118658065795898
    8. 'p' → logprob: -4.243658065795898
    9. 'reward' → logprob: -4.493658065795898
    10. 'a' → logprob: -4.618658065795898

Token 656: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0018370107281953096
    2. 't' → logprob: -6.626836776733398
    3. ',' → logprob: -8.751836776733398
    4. '1' → logprob: -9.126836776733398
    5. '=' → logprob: -10.251836776733398
    6. ':int' → logprob: -10.501836776733398
    7. '_:' → logprob: -10.751836776733398
    8. 'e' → logprob: -11.001836776733398
    9. 'ource' → logprob: -11.126836776733398
    10. 'elf' → logprob: -11.376836776733398

Token 657: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.011363515630364418
    2. ' int' → logprob: -4.761363506317139
    3. 'List' → logprob: -6.386363506317139
    4. '[int' → logprob: -8.136363983154297
    5. ':int' → logprob: -8.636363983154297
    6. '   ' → logprob: -8.761363983154297
    7. '1' → logprob: -9.948863983154297
    8. 'Optional' → logprob: -10.073863983154297
    9. ':' → logprob: -10.198863983154297
    10. ' List' → logprob: -10.886363983154297

Token 658: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01627388596534729
    2. ')' → logprob: -4.5162739753723145
    3. '):
' → logprob: -5.8912739753723145
    4. '):' → logprob: -6.7662739753723145
    5. ',
' → logprob: -6.8912739753723145
    6. '   ' → logprob: -9.016273498535156
    7. ' ,' → logprob: -9.266273498535156
    8. ':' → logprob: -10.891273498535156
    9. '):
' → logprob: -11.391273498535156
    10. '       ' → logprob: -12.141273498535156

Token 659: ' g' (ID: 329)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.7380476593971252
    2. 'd' → logprob: -1.1130475997924805
    3. 'g' → logprob: -2.4880475997924805
    4. 'f' → logprob: -3.2380475997924805
    5. 'e' → logprob: -3.4880475997924805
    6. 'c' → logprob: -4.4880475997924805
    7. 'a' → logprob: -4.6130475997924805
    8. 'l' → logprob: -5.6130475997924805
    9. 'x' → logprob: -5.7380475997924805
    10. 'k' → logprob: -5.8630475997924805

Token 660: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00032116140937432647
    2. ',' → logprob: -8.375321388244629
    3. ':int' → logprob: -9.625321388244629
    4. ')' → logprob: -11.625321388244629
    5. ' :' → logprob: -12.000321388244629
    6. '):' → logprob: -12.625321388244629
    7. 't' → logprob: -13.625321388244629
    8. 'u' → logprob: -13.750321388244629
    9. '):
' → logprob: -14.125321388244629
    10. '1' → logprob: -15.000321388244629

Token 661: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.011394507251679897
    2. ' int' → logprob: -5.386394500732422
    3. ':int' → logprob: -6.011394500732422
    4. 's' → logprob: -6.636394500732422
    5. 't' → logprob: -7.136394500732422
    6. '=int' → logprob: -7.386394500732422
    7. '[int' → logprob: -7.636394500732422
    8. 'List' → logprob: -8.636394500732422
    9. ')' → logprob: -8.761394500732422
    10. '<|end|>' → logprob: -8.761394500732422

Token 662: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7563757300376892
    2. ',' → logprob: -0.8813757300376892
    3. '):
' → logprob: -2.256375789642334
    4. '):' → logprob: -4.506375789642334
    5. '):
' → logprob: -8.756375312805176
    6. '   ' → logprob: -8.881375312805176
    7. ',
' → logprob: -9.006375312805176
    8. '                ' → logprob: -9.131375312805176
    9. ' )' → logprob: -10.506375312805176
    10. '       ' → logprob: -10.756375312805176

Token 663: ' V' (ID: 631)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -1.7585865259170532
    2. 'l' → logprob: -1.7585865259170532
    3. 't' → logprob: -2.0085864067077637
    4. 'x' → logprob: -2.1335864067077637
    5. 'q' → logprob: -2.5085864067077637
    6. 'c' → logprob: -2.7585864067077637
    7. 'd' → logprob: -2.7585864067077637
    8. 'r' → logprob: -3.2585864067077637
    9. 'p' → logprob: -3.5085864067077637
    10. 'f' → logprob: -3.6335864067077637

Token 664: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0023587599862366915
    2. 'alue' → logprob: -7.252358913421631
    3. ':int' → logprob: -7.752358913421631
    4. ')' → logprob: -8.377358436584473
    5. 'iew' → logprob: -9.127358436584473
    6. 'max' → logprob: -9.127358436584473
    7. 'illage' → logprob: -9.252358436584473
    8. 'ALUE' → logprob: -9.377358436584473
    9. 'al' → logprob: -9.502358436584473
    10. '1' → logprob: -9.752358436584473

Token 665: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.002508716657757759
    2. ')' → logprob: -7.252508640289307
    3. 'List' → logprob: -7.502508640289307
    4. ' int' → logprob: -8.002509117126465
    5. '[int' → logprob: -8.127509117126465
    6. '=int' → logprob: -8.252509117126465
    7. ':int' → logprob: -8.502509117126465
    8. ':' → logprob: -9.627509117126465
    9. '   ' → logprob: -11.127509117126465
    10. '=' → logprob: -11.502509117126465

Token 666: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.017027849331498146
    2. ',' → logprob: -4.517027854919434
    3. '):' → logprob: -5.517027854919434
    4. '):
' → logprob: -6.267027854919434
    5. '):
' → logprob: -10.767027854919434
    6. ' )' → logprob: -11.767027854919434
    7. '   ' → logprob: -12.267027854919434
    8. ':' → logprob: -12.392027854919434
    9. ',
' → logprob: -13.142027854919434
    10. '):

' → logprob: -13.392027854919434

Token 667: ' P' (ID: 398)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'D' → logprob: -1.3728280067443848
    2. 'T' → logprob: -2.3728280067443848
    3. 'K' → logprob: -2.4978280067443848
    4. 'L' → logprob: -2.7478280067443848
    5. 'C' → logprob: -2.7478280067443848
    6. 'k' → logprob: -3.2478280067443848
    7. 'd' → logprob: -3.2478280067443848
    8. 'X' → logprob: -3.3728280067443848
    9. 'x' → logprob: -3.3728280067443848
    10. 'E' → logprob: -3.6228280067443848

Token 668: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0010214977664873004
    2. ')' → logprob: -7.626021385192871
    3. '):' → logprob: -8.126021385192871
    4. '):
' → logprob: -9.126021385192871
    5. ':int' → logprob: -9.126021385192871
    6. ',' → logprob: -12.001021385192871
    7. ' :' → logprob: -12.251021385192871
    8. '=' → logprob: -13.126021385192871
    9. 'int' → logprob: -13.251021385192871
    10. ':
' → logprob: -13.376021385192871

Token 669: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0004485461104195565
    2. ' int' → logprob: -7.750448703765869
    3. '[int' → logprob: -11.875448226928711
    4. ':int' → logprob: -12.000448226928711
    5. ')' → logprob: -13.125448226928711
    6. 'List' → logprob: -14.375448226928711
    7. '   ' → logprob: -14.750448226928711
    8. ':' → logprob: -14.875448226928711
    9. '=int' → logprob: -15.375448226928711
    10. '```' → logprob: -15.375448226928711

Token 670: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.22071050107479095
    2. '):
' → logprob: -1.9707105159759521
    3. '):' → logprob: -2.845710515975952
    4. '):
' → logprob: -7.720710277557373
    5. ',' → logprob: -9.095710754394531
    6. '   ' → logprob: -10.845710754394531
    7. ':' → logprob: -11.095710754394531
    8. ' )' → logprob: -12.970710754394531
    9. '
' → logprob: -13.220710754394531
    10. '):

' → logprob: -13.220710754394531

Token 671: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07922177761793137
    2. ':
' → logprob: -2.579221725463867
    3. '   ' → logprob: -8.954221725463867
    4. '):
' → logprob: -9.079221725463867
    5. '       ' → logprob: -10.454221725463867
    6. ')' → logprob: -11.079221725463867
    7. '):' → logprob: -11.204221725463867
    8. ':def' → logprob: -11.204221725463867
    9. ',' → logprob: -12.579221725463867
    10. '():
' → logprob: -12.829221725463867

Token 672: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.029750604182481766
    2. ' None' → logprob: -3.5297505855560303
    3. '   ' → logprob: -16.27975082397461
    4. '_None' → logprob: -17.40475082397461
    5. '=None' → logprob: -18.52975082397461
    6. '(None' → logprob: -18.52975082397461
    7. ',None' → logprob: -18.90475082397461
    8. 'No' → logprob: -20.40475082397461
    9. ' ' → logprob: -21.15475082397461
    10. '.None' → logprob: -22.02975082397461

Token 673: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2833804190158844
    2. ':
' → logprob: -1.533380389213562
    3. '       ' → logprob: -3.5333805084228516
    4. '   ' → logprob: -6.533380508422852
    5. '):
' → logprob: -8.658380508422852
    6. '<|end|>' → logprob: -10.283380508422852
    7. ',' → logprob: -10.533380508422852
    8. '):' → logprob: -10.533380508422852
    9. ')' → logprob: -11.783380508422852
    10. '():
' → logprob: -12.283380508422852

Token 674: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0001577698567416519
    2. '   ' → logprob: -9.375157356262207
    3. 'self' → logprob: -9.750157356262207
    4. ' self' → logprob: -12.000157356262207
    5. '<|end|>' → logprob: -12.875157356262207
    6. '	' → logprob: -13.750157356262207
    7. '      ' → logprob: -14.000157356262207
    8. '        
' → logprob: -14.125157356262207
    9. '
' → logprob: -14.625157356262207
    10. '     ' → logprob: -14.625157356262207

Token 675: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0003361774142831564
    2. '       ' → logprob: -8.000336647033691
    3. ' self' → logprob: -14.500336647033691
    4. '   ' → logprob: -16.125335693359375
    5. 'super' → logprob: -16.250335693359375
    6. '        
' → logprob: -17.125335693359375
    7. '
' → logprob: -18.125335693359375
    8. '#' → logprob: -19.125335693359375
    9. '```' → logprob: -19.250335693359375
    10. '"""
' → logprob: -19.250335693359375

Token 676: '.n' (ID: 1835)
  Prédit: '.n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.n' → logprob: -0.0018831811612471938
    2. '.num' → logprob: -6.376883029937744
    3. 'n' → logprob: -8.751883506774902
    4. '.' → logprob: -11.126883506774902
    5. 'num' → logprob: -11.876883506774902
    6. '.graph' → logprob: -15.376883506774902
    7. ' .' → logprob: -15.626883506774902
    8. '.
' → logprob: -16.001882553100586
    9. '```' → logprob: -16.251882553100586
    10. ' n' → logprob: -16.751882553100586

Token 677: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6337643265724182
    2. '=' → logprob: -0.7587643265724182
    3. ',' → logprob: -6.883764266967773
    4. '       ' → logprob: -9.883764266967773
    5. ' ' → logprob: -10.758764266967773
    6. '   ' → logprob: -10.883764266967773
    7. '=self' → logprob: -11.008764266967773
    8. '        ' → logprob: -11.258764266967773
    9. '<|end|>' → logprob: -12.508764266967773
    10. ' ,' → logprob: -13.008764266967773

Token 678: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00017970333283301443
    2. ' n' → logprob: -8.625179290771484
    3. '	n' → logprob: -17.250179290771484
    4. '_n' → logprob: -19.875179290771484
    5. '
' → logprob: -20.500179290771484
    6. ')n' → logprob: -20.750179290771484
    7. '=n' → logprob: -21.750179290771484
    8. '   ' → logprob: -22.125179290771484
    9. '­n' → logprob: -22.250179290771484
    10. 'int' → logprob: -22.375179290771484

Token 679: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0004833425919059664
    2. 'self' → logprob: -8.250483512878418
    3. '
' → logprob: -8.750483512878418
    4. ',' → logprob: -10.000483512878418
    5. '<|end|>' → logprob: -11.750483512878418
    6. '   ' → logprob: -13.000483512878418
    7. '        
' → logprob: -13.500483512878418
    8. 'm' → logprob: -13.625483512878418
    9. '      ' → logprob: -13.750483512878418
    10. ' self' → logprob: -14.000483512878418

Token 680: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06204488128423691
    2. 'self' → logprob: -2.812044858932495
    3. ' self' → logprob: -9.562045097351074
    4. '   ' → logprob: -12.062045097351074
    5. '	self' → logprob: -14.937045097351074
    6. '        
' → logprob: -15.312045097351074
    7. '      ' → logprob: -15.437045097351074
    8. ' ' → logprob: -16.312044143676758
    9. '     ' → logprob: -16.437044143676758
    10. '        ' → logprob: -16.937044143676758

Token 681: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -1.0445127372804563e-05
    2. 'm' → logprob: -11.75001049041748
    3. ' self' → logprob: -13.25001049041748
    4. '       ' → logprob: -14.25001049041748
    5. '
' → logprob: -18.375009536743164
    6. 's' → logprob: -19.625009536743164
    7. '   ' → logprob: -19.750009536743164
    8. '	self' → logprob: -20.125009536743164
    9. '```' → logprob: -20.750009536743164
    10. '        
' → logprob: -20.875009536743164

Token 682: '.m' (ID: 1021)
  Prédit: '.m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.m' → logprob: -8.97155623533763e-05
    2. '.' → logprob: -10.375089645385742
    3. 'm' → logprob: -10.625089645385742
    4. '.s' → logprob: -11.625089645385742
    5. '.edges' → logprob: -11.625089645385742
    6. ' .' → logprob: -11.875089645385742
    7. '.graph' → logprob: -13.500089645385742
    8. '.g' → logprob: -13.750089645385742
    9. '.b' → logprob: -13.750089645385742
    10. '.p' → logprob: -13.875089645385742

Token 683: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.320199579000473
    2. ' =' → logprob: -1.3201996088027954
    3. '<|end|>' → logprob: -5.320199489593506
    4. '
' → logprob: -7.070199489593506
    5. ',' → logprob: -7.695199489593506
    6. '       ' → logprob: -7.820199489593506
    7. '<|end|>' → logprob: -9.695199966430664
    8. ' ' → logprob: -9.945199966430664
    9. '        ' → logprob: -10.070199966430664
    10. '=
' → logprob: -10.070199966430664

Token 684: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -4.0126840758603066e-05
    2. ' m' → logprob: -10.125040054321289
    3. '	m' → logprob: -17.75004005432129
    4. '
' → logprob: -18.87504005432129
    5. 'len' → logprob: -19.37504005432129
    6. '   ' → logprob: -19.50004005432129
    7. 'м' → logprob: -19.75004005432129
    8. '```' → logprob: -20.37504005432129
    9. 'n' → logprob: -20.75004005432129
    10. '
' → logprob: -21.25004005432129

Token 685: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.043226633220911026
    2. 'self' → logprob: -3.543226718902588
    3. '
' → logprob: -4.418226718902588
    4. '<|end|>' → logprob: -7.293226718902588
    5. '        
' → logprob: -8.29322624206543
    6. ' self' → logprob: -8.29322624206543
    7. '```' → logprob: -10.54322624206543
    8. ',' → logprob: -10.66822624206543
    9. '\
' → logprob: -11.04322624206543
    10. ',
' → logprob: -11.29322624206543

Token 686: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04862244799733162
    2. 'self' → logprob: -3.0486223697662354
    3. ' self' → logprob: -10.673622131347656
    4. '
' → logprob: -11.673622131347656
    5. '   ' → logprob: -12.923622131347656
    6. '        
' → logprob: -14.673622131347656
    7. '```' → logprob: -16.173622131347656
    8. '<|end|>' → logprob: -16.423622131347656
    9. '	self' → logprob: -16.548622131347656
    10. '      ' → logprob: -16.923622131347656

Token 687: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -3.380904672667384e-05
    2. '       ' → logprob: -10.625033378601074
    3. 'edges' → logprob: -12.000033378601074
    4. '
' → logprob: -12.875033378601074
    5. ' self' → logprob: -14.375033378601074
    6. '        
' → logprob: -17.25003433227539
    7. '(self' → logprob: -18.00003433227539
    8. 's' → logprob: -18.50003433227539
    9. '```' → logprob: -18.50003433227539
    10. '   ' → logprob: -19.12503433227539

Token 688: '.s' (ID: 640)
  Prédit: '.graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.graph' → logprob: -0.5220805406570435
    2. 'graph' → logprob: -1.0220805406570435
    3. '.bid' → logprob: -4.022080421447754
    4. '.edges' → logprob: -4.147080421447754
    5. 'edges' → logprob: -4.897080421447754
    6. 'bid' → logprob: -6.147080421447754
    7. '.b' → logprob: -6.647080421447754
    8. ' graph' → logprob: -7.022080421447754
    9. '.edge' → logprob: -8.272080421447754
    10. 'self' → logprob: -8.772080421447754

Token 689: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2520146071910858
    2. ' =' → logprob: -1.5020146369934082
    3. '=self' → logprob: -10.12701416015625
    4. ',' → logprob: -10.87701416015625
    5. '=
' → logprob: -11.25201416015625
    6. 'self' → logprob: -12.25201416015625
    7. ' =
' → logprob: -13.25201416015625
    8. ' ' → logprob: -13.75201416015625
    9. '=int' → logprob: -13.75201416015625
    10. '=s' → logprob: -14.00201416015625

Token 690: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.04858850687742233
    2. ' s' → logprob: -3.048588514328003
    3. '_s' → logprob: -14.423588752746582
    4. '<|end|>' → logprob: -14.923588752746582
    5. '
' → logprob: -16.423587799072266
    6. '	s' → logprob: -16.923587799072266
    7. 'g' → logprob: -16.923587799072266
    8. '{s' → logprob: -17.048587799072266
    9. ' ' → logprob: -17.798587799072266
    10. '(s' → logprob: -17.798587799072266

Token 691: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2859402000904083
    2. '       ' → logprob: -1.910940170288086
    3. '<|end|>' → logprob: -3.035940170288086
    4. 'self' → logprob: -3.410940170288086
    5. ',' → logprob: -5.285940170288086
    6. '        
' → logprob: -5.535940170288086
    7. ' 
' → logprob: -5.660940170288086
    8. '=' → logprob: -5.910940170288086
    9. '  
' → logprob: -6.785940170288086
    10. ' self' → logprob: -7.285940170288086

Token 692: '       ' (ID: 309)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.10255623608827591
    2. '       ' → logprob: -2.3525562286376953
    3. ' self' → logprob: -6.477556228637695
    4. '
' → logprob: -7.227556228637695
    5. '        
' → logprob: -10.102556228637695
    6. ',' → logprob: -11.602556228637695
    7. '=self' → logprob: -11.977556228637695
    8. 'g' → logprob: -12.102556228637695
    9. ' =' → logprob: -12.477556228637695
    10. '   ' → logprob: -12.602556228637695

Token 693: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0002646735229063779
    2. 'g' → logprob: -8.250265121459961
    3. '       ' → logprob: -13.250265121459961
    4. ' self' → logprob: -13.500265121459961
    5. '   ' → logprob: -16.75026512145996
    6. '```' → logprob: -17.00026512145996
    7. '(self' → logprob: -17.12526512145996
    8. '	self' → logprob: -17.37526512145996
    9. '
' → logprob: -17.50026512145996
    10. '=self' → logprob: -18.00026512145996

Token 694: '.g' (ID: 1940)
  Prédit: '.g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.g' → logprob: -0.0008793042507022619
    2. 'g' → logprob: -7.250879287719727
    3. '=g' → logprob: -9.500879287719727
    4. '=' → logprob: -10.750879287719727
    5. 'u' → logprob: -11.625879287719727
    6. ' =' → logprob: -11.875879287719727
    7. '.p' → logprob: -11.875879287719727
    8. '._' → logprob: -12.250879287719727
    9. '_g' → logprob: -12.250879287719727
    10. '.u' → logprob: -12.250879287719727

Token 695: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47408443689346313
    2. ' =' → logprob: -0.9740844368934631
    3. '   ' → logprob: -12.849084854125977
    4. ' ' → logprob: -13.599084854125977
    5. ':' → logprob: -13.724084854125977
    6. '=
' → logprob: -14.474084854125977
    7. ',' → logprob: -14.474084854125977
    8. '<|end|>' → logprob: -14.849084854125977
    9. ' =
' → logprob: -14.974084854125977
    10. '```' → logprob: -15.349084854125977

Token 696: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.029751179739832878
    2. ' g' → logprob: -3.5297510623931885
    3. '	g' → logprob: -15.02975082397461
    4. '
' → logprob: -16.40475082397461
    5. ' ' → logprob: -16.77975082397461
    6. '_g' → logprob: -16.90475082397461
    7. '<|end|>' → logprob: -17.27975082397461
    8. '```' → logprob: -17.65475082397461
    9. 'goal' → logprob: -17.90475082397461
    10. '#g' → logprob: -18.02975082397461

Token 697: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005151804536581039
    2. 'self' → logprob: -5.505151748657227
    3. '
' → logprob: -6.880151748657227
    4. ' self' → logprob: -10.255151748657227
    5. '        
' → logprob: -12.755151748657227
    6. '      ' → logprob: -13.755151748657227
    7. ',' → logprob: -13.755151748657227
    8. '```' → logprob: -14.005151748657227
    9. '   ' → logprob: -14.130151748657227
    10. '\
' → logprob: -14.255151748657227

Token 698: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1003633514046669
    2. 'self' → logprob: -2.350363254547119
    3. ' self' → logprob: -9.475363731384277
    4. '
' → logprob: -9.475363731384277
    5. '   ' → logprob: -13.350363731384277
    6. '        
' → logprob: -13.975363731384277
    7. '      ' → logprob: -15.100363731384277
    8. '```' → logprob: -15.350363731384277
    9. '	self' → logprob: -15.850363731384277
    10. '     ' → logprob: -17.10036277770996

Token 699: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -2.451116051815916e-05
    2. '       ' → logprob: -10.625024795532227
    3. ' self' → logprob: -15.750024795532227
    4. '
' → logprob: -16.750024795532227
    5. '```' → logprob: -18.875024795532227
    6. '        
' → logprob: -19.500024795532227
    7. '	self' → logprob: -19.750024795532227
    8. '   ' → logprob: -20.500024795532227
    9. 'class' → logprob: -20.500024795532227
    10. '(self' → logprob: -20.500024795532227

Token 700: '.V' (ID: 5970)
  Prédit: '.V'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.V' → logprob: -0.0005258689634501934
    2. '.v' → logprob: -8.37552547454834
    3. 'V' → logprob: -8.87552547454834
    4. '.P' → logprob: -9.50052547454834
    5. '.graph' → logprob: -9.87552547454834
    6. '.' → logprob: -11.12552547454834
    7. '.B' → logprob: -13.12552547454834
    8. '.initial' → logprob: -13.50052547454834
    9. '.reward' → logprob: -13.62552547454834
    10. ' .' → logprob: -13.75052547454834

Token 701: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3484552800655365
    2. '=' → logprob: -1.2234553098678589
    3. ' ' → logprob: -12.598455429077148
    4. ',' → logprob: -12.723455429077148
    5. ':' → logprob: -14.223455429077148
    6. '<|end|>' → logprob: -14.473455429077148
    7. '   ' → logprob: -14.598455429077148
    8. '=int' → logprob: -14.598455429077148
    9. ' =
' → logprob: -14.973455429077148
    10. '=self' → logprob: -15.348455429077148

Token 702: ' V' (ID: 631)
  Prédit: 'V'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'V' → logprob: -0.0160395298153162
    2. ' V' → logprob: -4.1410393714904785
    3. 'P' → logprob: -12.766039848327637
    4. '
' → logprob: -13.516039848327637
    5. ' ' → logprob: -14.391039848327637
    6. '   ' → logprob: -15.891039848327637
    7. 'v' → logprob: -16.26603889465332
    8. '	V' → logprob: -16.76603889465332
    9. ' P' → logprob: -17.14103889465332
    10. '  ' → logprob: -17.26603889465332

Token 703: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0012093995464965701
    2. 'self' → logprob: -6.751209259033203
    3. ' self' → logprob: -10.751209259033203
    4. ',' → logprob: -11.376209259033203
    5. '
' → logprob: -13.251209259033203
    6. '   ' → logprob: -13.626209259033203
    7. '      ' → logprob: -13.751209259033203
    8. '<|end|>' → logprob: -14.501209259033203
    9. ' ' → logprob: -15.376209259033203
    10. ' =' → logprob: -15.501209259033203

Token 704: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.034631188958883286
    2. 'self' → logprob: -3.4096312522888184
    3. ' self' → logprob: -7.034631252288818
    4. '
' → logprob: -9.53463077545166
    5. '        
' → logprob: -12.03463077545166
    6. ',' → logprob: -12.15963077545166
    7. '   ' → logprob: -12.28463077545166
    8. '      ' → logprob: -12.53463077545166
    9. '        ' → logprob: -13.03463077545166
    10. ' ' → logprob: -13.65963077545166

Token 705: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -5.872261317563243e-05
    2. ' self' → logprob: -10.250059127807617
    3. 'P' → logprob: -10.750059127807617
    4. '       ' → logprob: -13.250059127807617
    5. '
' → logprob: -17.625059127807617
    6. '   ' → logprob: -18.250059127807617
    7. ' P' → logprob: -20.125059127807617
    8. '	self' → logprob: -20.375059127807617
    9. '(self' → logprob: -20.500059127807617
    10. '           ' → logprob: -21.500059127807617

Token 706: '.P' (ID: 2007)
  Prédit: '.P'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.P' → logprob: -0.4259802997112274
    2. '=' → logprob: -1.6759803295135498
    3. ' =' → logprob: -1.9259803295135498
    4. '.' → logprob: -4.550980091094971
    5. 'P' → logprob: -6.425980091094971
    6. '=P' → logprob: -6.550980091094971
    7. ' .' → logprob: -8.675980567932129
    8. '.p' → logprob: -9.300980567932129
    9. '.=' → logprob: -10.425980567932129
    10. '.V' → logprob: -11.425980567932129

Token 707: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20141392946243286
    2. ' =' → logprob: -1.701413869857788
    3. ' ' → logprob: -14.451414108276367
    4. '=P' → logprob: -16.576414108276367
    5. '   ' → logprob: -17.201414108276367
    6. ',' → logprob: -17.826414108276367
    7. ')' → logprob: -17.826414108276367
    8. '=int' → logprob: -17.826414108276367
    9. '=None' → logprob: -17.951414108276367
    10. ':' → logprob: -18.076414108276367

Token 708: ' P' (ID: 398)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.026301225647330284
    2. ' P' → logprob: -3.651301145553589
    3. ' ' → logprob: -14.401301383972168
    4. '   ' → logprob: -15.776301383972168
    5. ' ' → logprob: -15.901301383972168
    6. 'V' → logprob: -16.52630043029785
    7. '	P' → logprob: -16.90130043029785
    8. '
' → logprob: -16.90130043029785
    9. 'p' → logprob: -17.27630043029785
    10. '_P' → logprob: -17.65130043029785

Token 709: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00016718693950679153
    2. 'self' → logprob: -8.875166893005371
    3. '<|end|>' → logprob: -11.750166893005371
    4. ',' → logprob: -11.875166893005371
    5. '   ' → logprob: -12.000166893005371
    6. '        
' → logprob: -12.875166893005371
    7. '
' → logprob: -13.125166893005371
    8. ' self' → logprob: -14.500166893005371
    9. ',
' → logprob: -15.500166893005371
    10. 'def' → logprob: -15.625166893005371

Token 710: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006028342177160084
    2. '
' → logprob: -8.375602722167969
    3. 'self' → logprob: -8.375602722167969
    4. '<|end|>' → logprob: -9.250602722167969
    5. ',' → logprob: -11.125602722167969
    6. '        
' → logprob: -11.250602722167969
    7. '   ' → logprob: -12.000602722167969
    8. ' self' → logprob: -12.250602722167969
    9. 'def' → logprob: -14.125602722167969
    10. '	' → logprob: -14.375602722167969

Token 711: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.001514384988695383
    2. '       ' → logprob: -6.501514434814453
    3. '
' → logprob: -11.751514434814453
    4. ' self' → logprob: -12.626514434814453
    5. '   ' → logprob: -14.376514434814453
    6. '        
' → logprob: -15.501514434814453
    7. '```' → logprob: -18.001514434814453
    8. 'for' → logprob: -18.251514434814453
    9. '	self' → logprob: -18.251514434814453
    10. '#' → logprob: -18.751514434814453

Token 712: '.graph' (ID: 18104)
  Prédit: '.graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.graph' → logprob: -0.021535951644182205
    2. '.bid' → logprob: -3.896535873413086
    3. '.b' → logprob: -7.021535873413086
    4. '.edges' → logprob: -10.021535873413086
    5. '.reward' → logprob: -11.271535873413086
    6. 'graph' → logprob: -11.271535873413086
    7. '.edge' → logprob: -11.896535873413086
    8. '.bi' → logprob: -11.896535873413086
    9. '.g' → logprob: -12.271535873413086
    10. '.' → logprob: -12.646535873413086

Token 713: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1602267622947693
    2. '=' → logprob: -1.910226821899414
    3. ':' → logprob: -12.910226821899414
    4. ' =
' → logprob: -17.160226821899414
    5. '＝' → logprob: -17.535226821899414
    6. '=B' → logprob: -17.535226821899414
    7. 's' → logprob: -17.910226821899414
    8. '=
' → logprob: -18.035226821899414
    9. ' ' → logprob: -18.035226821899414
    10. '.' → logprob: -18.035226821899414

Token 714: ' Bid' (ID: 18256)
  Prédit: 'Bid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Bid' → logprob: -0.0009114635176956654
    2. ' Bid' → logprob: -7.000911235809326
    3. 'B' → logprob: -17.000911712646484
    4. 'Bi' → logprob: -17.875911712646484
    5. 'bid' → logprob: -19.125911712646484
    6. '_bid' → logprob: -19.625911712646484
    7. 'Directed' → logprob: -21.125911712646484
    8. ' bid' → logprob: -21.125911712646484
    9. '   ' → logprob: -21.375911712646484
    10. 'Bond' → logprob: -21.500911712646484

Token 715: 'irectional' (ID: 86044)
  Prédit: 'irectional'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'irectional' → logprob: -3.128163257315464e-07
    2. 'irected' → logprob: -15.25
    3. 'irection' → logprob: -17.625
    4. 'rection' → logprob: -19.125
    5. 'Directional' → logprob: -19.25
    6. 'itional' → logprob: -19.25
    7. 'imensional' → logprob: -19.5
    8. 'ilateral' → logprob: -20.125
    9. 'ir' → logprob: -20.875
    10. 'irect' → logprob: -20.875

Token 716: 'Graph' (ID: 9922)
  Prédit: 'Graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Graph' → logprob: -5.512236498361744e-07
    2. 'raph' → logprob: -14.875000953674316
    3. 'graph' → logprob: -15.625000953674316
    4. '_graph' → logprob: -18.625
    5. 'Edge' → logprob: -19.125
    6. 'Graphs' → logprob: -20.375
    7. '(Graph' → logprob: -20.75
    8. '
' → logprob: -20.75
    9. 'Bid' → logprob: -21.5
    10. '```' → logprob: -22.0

Token 717: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -5.407366916188039e-05
    2. '(self' → logprob: -9.875054359436035
    3. 'n' → logprob: -13.000054359436035
    4. '(' → logprob: -15.500054359436035
    5. 'self' → logprob: -18.37505340576172
    6. '(
' → logprob: -18.62505340576172
    7. '(num' → logprob: -18.75005340576172
    8. '```' → logprob: -18.87505340576172
    9. '[n' → logprob: -19.00005340576172
    10. ' (' → logprob: -20.37505340576172

Token 718: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.252042680978775
    2. ')' → logprob: -1.5020426511764526
    3. ')

' → logprob: -9.252042770385742
    4. ')
' → logprob: -11.002042770385742
    5. '   ' → logprob: -14.502042770385742
    6. '       ' → logprob: -15.252042770385742
    7. ')`
' → logprob: -16.377042770385742
    8. ' )
' → logprob: -16.502042770385742
    9. ')


' → logprob: -17.627042770385742
    10. '())
' → logprob: -18.002042770385742

Token 719: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.026572320610284805
    2. 'for' → logprob: -3.9015722274780273
    3. ' for' → logprob: -5.151572227478027
    4. '```' → logprob: -9.026572227478027
    5. '   ' → logprob: -9.276572227478027
    6. '<|end|>' → logprob: -12.276572227478027
    7. '	for' → logprob: -13.776572227478027
    8. '``' → logprob: -14.526572227478027
    9. ' ' → logprob: -14.651572227478027
    10. '           ' → logprob: -15.026572227478027

Token 720: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0395813062787056
    2. '       ' → logprob: -3.289581298828125
    3. ' for' → logprob: -6.539581298828125
    4. '   ' → logprob: -9.289581298828125
    5. '```' → logprob: -14.289581298828125
    6. '	for' → logprob: -15.289581298828125
    7. '
' → logprob: -15.789581298828125
    8. 'def' → logprob: -16.164581298828125
    9. ' ' → logprob: -16.414581298828125
    10. '     ' → logprob: -18.164581298828125

Token 721: ' a' (ID: 261)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.5551741123199463
    2. 'a' → logprob: -1.1801741123199463
    3. 'u' → logprob: -2.3051741123199463
    4. '(u' → logprob: -4.930173873901367
    5. '(from' → logprob: -5.555173873901367
    6. 'f' → logprob: -6.305173873901367
    7. '(a' → logprob: -6.305173873901367
    8. 'edge' → logprob: -7.180173873901367
    9. 'node' → logprob: -7.305173873901367
    10. ' from' → logprob: -7.555173873901367

Token 722: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.745069499127567e-05
    2. ' ,' → logprob: -9.87508773803711
    3. ',a' → logprob: -11.12508773803711
    4. '_,' → logprob: -11.37508773803711
    5. ',b' → logprob: -12.00008773803711
    6. 'a' → logprob: -13.75008773803711
    7. ',_' → logprob: -15.25008773803711
    8. ',
' → logprob: -15.62508773803711
    9. ',node' → logprob: -15.62508773803711
    10. ',i' → logprob: -15.75008773803711

Token 723: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0009115827269852161
    2. ' b' → logprob: -7.000911712646484
    3. '   ' → logprob: -17.000911712646484
    4. ',b' → logprob: -18.750911712646484
    5. '    ' → logprob: -19.000911712646484
    6. '	b' → logprob: -19.125911712646484
    7. ' ' → logprob: -19.250911712646484
    8. '  ' → logprob: -20.125911712646484
    9. '    
' → logprob: -20.125911712646484
    10. '<|end|>' → logprob: -20.125911712646484

Token 724: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.264322317088954e-05
    2. ' ,' → logprob: -10.125052452087402
    3. ',c' → logprob: -12.000052452087402
    4. ',a' → logprob: -12.375052452087402
    5. '_,' → logprob: -14.375052452087402
    6. ',b' → logprob: -14.500052452087402
    7. ',p' → logprob: -15.375052452087402
    8. ' in' → logprob: -15.500052452087402
    9. ',d' → logprob: -15.625052452087402
    10. ',
' → logprob: -16.12505340576172

Token 725: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.2522798478603363
    2. 'cost' → logprob: -1.6272798776626587
    3. 'cab' → logprob: -4.627279758453369
    4. 'ab' → logprob: -4.627279758453369
    5. 'ca' → logprob: -6.002279758453369
    6. ' c' → logprob: -6.502279758453369
    7. 'cd' → logprob: -7.377279758453369
    8. ' cost' → logprob: -7.752279758453369
    9. 'p' → logprob: -8.252280235290527
    10. 'lab' → logprob: -8.627280235290527

Token 726: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0014911731705069542
    2. ',c' → logprob: -6.751491069793701
    3. ',d' → logprob: -8.37649154663086
    4. ' ,' → logprob: -9.87649154663086
    5. '_,' → logprob: -11.25149154663086
    6. ',b' → logprob: -11.62649154663086
    7. ',p' → logprob: -12.37649154663086
    8. 'c' → logprob: -12.87649154663086
    9. 'd' → logprob: -13.37649154663086
    10. ',a' → logprob: -13.50149154663086

Token 727: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -8.697387966094539e-05
    2. ' d' → logprob: -10.375086784362793
    3. '
' → logprob: -10.625086784362793
    4. 'dc' → logprob: -11.750086784362793
    5. '```' → logprob: -12.500086784362793
    6. 'e' → logprob: -12.750086784362793
    7. 'dcc' → logprob: -12.750086784362793
    8. 'c' → logprob: -13.125086784362793
    9. '    
' → logprob: -13.250086784362793
    10. '

' → logprob: -13.750086784362793

Token 728: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.10030090808868408
    2. 'in' → logprob: -2.3503007888793945
    3. ',' → logprob: -9.350300788879395
    4. 's' → logprob: -13.225300788879395
    5. ' ' → logprob: -13.850300788879395
    6. ' ,' → logprob: -13.850300788879395
    7. 'import' → logprob: -14.350300788879395
    8. 'a' → logprob: -14.725300788879395
    9. '   ' → logprob: -14.850300788879395
    10. '```' → logprob: -15.350300788879395

Token 729: ' edges' (ID: 22569)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.02324652671813965
    2. ' edges' → logprob: -3.7732465267181396
    3. '(edges' → logprob: -15.148246765136719
    4. '   ' → logprob: -15.273246765136719
    5. '.edges' → logprob: -15.523246765136719
    6. 'edge' → logprob: -15.648246765136719
    7. '
' → logprob: -16.52324676513672
    8. '_edges' → logprob: -16.77324676513672
    9. 'Edges' → logprob: -17.02324676513672
    10. '```' → logprob: -17.52324676513672

Token 730: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2015671283006668
    2. ':
' → logprob: -1.7015671730041504
    3. ',' → logprob: -9.326566696166992
    4. '       ' → logprob: -10.701566696166992
    5. '):
' → logprob: -11.076566696166992
    6. '   ' → logprob: -11.951566696166992
    7. 'self' → logprob: -12.451566696166992
    8. ':
' → logprob: -12.576566696166992
    9. '):' → logprob: -13.201566696166992
    10. '<|end|>' → logprob: -13.201566696166992

Token 731: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4777604043483734
    2. '       ' → logprob: -0.9777604341506958
    3. '   ' → logprob: -6.727760314941406
    4. 'self' → logprob: -6.852760314941406
    5. ' self' → logprob: -7.227760314941406
    6. '<|end|>' → logprob: -8.102760314941406
    7. '
' → logprob: -9.352760314941406
    8. '        ' → logprob: -9.977760314941406
    9. '```' → logprob: -10.102760314941406
    10. '            
' → logprob: -10.227760314941406

Token 732: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.5124959945678711
    2. ' self' → logprob: -1.262495994567871
    3. '           ' → logprob: -2.137495994567871
    4. '               ' → logprob: -10.012495994567871
    5. '       ' → logprob: -10.762495994567871
    6. '   ' → logprob: -11.012495994567871
    7. '```' → logprob: -12.137495994567871
    8. '	self' → logprob: -12.262495994567871
    9. '
' → logprob: -12.637495994567871
    10. ' ' → logprob: -12.762495994567871

Token 733: '.graph' (ID: 18104)
  Prédit: '.graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.graph' → logprob: -0.00012415809032972902
    2. 'graph' → logprob: -9.125123977661133
    3. '.' → logprob: -11.375123977661133
    4. '	graph' → logprob: -13.375123977661133
    5. ' .' → logprob: -13.500123977661133
    6. 'raph' → logprob: -15.625123977661133
    7. ' graph' → logprob: -16.000123977661133
    8. '.g' → logprob: -16.125123977661133
    9. '   ' → logprob: -16.625123977661133
    10. '```' → logprob: -16.750123977661133

Token 734: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -3.619311974034645e-05
    2. '.' → logprob: -10.250036239624023
    3. ' .' → logprob: -14.625036239624023
    4. '   ' → logprob: -15.750036239624023
    5. '.append' → logprob: -16.125036239624023
    6. 'add' → logprob: -17.875036239624023
    7. '       ' → logprob: -18.000036239624023
    8. '.Add' → logprob: -18.125036239624023
    9. '           ' → logprob: -18.750036239624023
    10. ').' → logprob: -19.000036239624023

Token 735: '_bid' (ID: 149277)
  Prédit: '_bid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_bid' → logprob: -2.248469718324486e-05
    2. 'bid' → logprob: -10.750022888183594
    3. '_b' → logprob: -14.125022888183594
    4. '_' → logprob: -15.375022888183594
    5. '```' → logprob: -17.250022888183594
    6. '_bit' → logprob: -17.750022888183594
    7. '__' → logprob: -19.000022888183594
    8. ' bid' → logprob: -19.000022888183594
    9. 'b' → logprob: -19.250022888183594
    10. '_band' → logprob: -19.375022888183594

Token 736: 'irectional' (ID: 86044)
  Prédit: 'irectional'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'irectional' → logprob: -5.512236498361744e-07
    2. 'irected' → logprob: -15.125000953674316
    3. 'rection' → logprob: -16.0
    4. 'irection' → logprob: -16.75
    5. 'ir' → logprob: -17.375
    6. 'irect' → logprob: -17.5
    7. 'irical' → logprob: -17.5
    8. '_direction' → logprob: -18.375
    9. 'itional' → logprob: -18.875
    10. 'r' → logprob: -19.125

Token 737: '_edge' (ID: 43226)
  Prédit: '_edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edge' → logprob: -0.0001415618316968903
    2. 'edge' → logprob: -8.875141143798828
    3. '_edges' → logprob: -14.375141143798828
    4. '_' → logprob: -15.500141143798828
    5. '```' → logprob: -15.625141143798828
    6. 'Edge' → logprob: -16.375141143798828
    7. ' edge' → logprob: -16.500141143798828
    8. '   ' → logprob: -16.625141143798828
    9. '_EDGE' → logprob: -16.750141143798828
    10. 'def' → logprob: -16.875141143798828

Token 738: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -7.896309739408025e-07
    2. '(' → logprob: -14.625000953674316
    3. '(
' → logprob: -15.375000953674316
    4. 'a' → logprob: -18.125
    5. ' (' → logprob: -20.875
    6. '(A' → logprob: -21.5
    7. '((' → logprob: -22.375
    8. '(
' → logprob: -22.75
    9. '(

' → logprob: -23.0
    10. '(ai' → logprob: -23.75

Token 739: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006734743365086615
    2. ',b' → logprob: -8.000673294067383
    3. ' ,' → logprob: -8.000673294067383
    4. 'b' → logprob: -13.250673294067383
    5. ',
' → logprob: -15.375673294067383
    6. '   ' → logprob: -15.500673294067383
    7. '           ' → logprob: -16.125673294067383
    8. ')' → logprob: -16.500673294067383
    9. '```' → logprob: -16.500673294067383
    10. '‌,' → logprob: -16.750673294067383

Token 740: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.01416350994259119
    2. ' b' → logprob: -4.264163494110107
    3. ')b' → logprob: -17.764163970947266
    4. ',b' → logprob: -18.264163970947266
    5. ' ' → logprob: -18.264163970947266
    6. '           ' → logprob: -18.389163970947266
    7. '<|end|>' → logprob: -18.514163970947266
    8. '	b' → logprob: -18.764163970947266
    9. '   ' → logprob: -18.889163970947266
    10. '       ' → logprob: -19.014163970947266

Token 741: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0012479700380936265
    2. ',c' → logprob: -6.751247882843018
    3. ' ,' → logprob: -9.626248359680176
    4. 'c' → logprob: -11.751248359680176
    5. ',
' → logprob: -12.626248359680176
    6. '
' → logprob: -15.751248359680176
    7. '           ' → logprob: -15.876248359680176
    8. '```' → logprob: -16.12624740600586
    9. '‌,' → logprob: -16.87624740600586
    10. '   ' → logprob: -17.00124740600586

Token 742: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0013279760023579001
    2. ' c' → logprob: -6.626327991485596
    3. '
' → logprob: -14.126327514648438
    4. '           ' → logprob: -14.751327514648438
    5. '	c' → logprob: -15.251327514648438
    6. '   ' → logprob: -15.376327514648438
    7. ')c' → logprob: -15.876327514648438
    8. '
' → logprob: -16.626327514648438
    9. '    ' → logprob: -17.126327514648438
    10. '```' → logprob: -17.251327514648438

Token 743: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0015671150758862495
    2. ',d' → logprob: -6.6265668869018555
    3. ' ,' → logprob: -8.376566886901855
    4. 'd' → logprob: -12.001566886901855
    5. '   ' → logprob: -13.126566886901855
    6. ',
' → logprob: -13.251566886901855
    7. '```' → logprob: -15.126566886901855
    8. '           ' → logprob: -15.376566886901855
    9. ' d' → logprob: -15.501566886901855
    10. ')' → logprob: -15.876566886901855

Token 744: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0010331686353310943
    2. ' d' → logprob: -6.876033306121826
    3. '
' → logprob: -16.376033782958984
    4. ' ' → logprob: -16.876033782958984
    5. '   ' → logprob: -17.251033782958984
    6. '_d' → logprob: -18.001033782958984
    7. ')' → logprob: -18.126033782958984
    8. ')d' → logprob: -18.251033782958984
    9. '	d' → logprob: -18.751033782958984
    10. '  ' → logprob: -19.251033782958984

Token 745: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.991464786347933e-05
    2. ')
' → logprob: -9.750060081481934
    3. '       ' → logprob: -13.875060081481934
    4. '<|end|>' → logprob: -15.250060081481934
    5. ' )' → logprob: -15.625060081481934
    6. ')

' → logprob: -16.250059127807617
    7. '   ' → logprob: -17.500059127807617
    8. '),' → logprob: -17.875059127807617
    9. ')}' → logprob: -18.125059127807617
    10. ')return' → logprob: -18.250059127807617

Token 746: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.32635143399238586
    2. '   ' → logprob: -1.3263514041900635
    3. 'def' → logprob: -4.451351642608643
    4. '<|end|>' → logprob: -7.326351642608643
    5. ' def' → logprob: -8.076351165771484
    6. '

' → logprob: -8.701351165771484
    7. '    
' → logprob: -8.701351165771484
    8. '```' → logprob: -11.451351165771484
    9. '        
' → logprob: -11.826351165771484
    10. ' 
' → logprob: -11.826351165771484

Token 747: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -1.5332478142227046e-05
    2. '
' → logprob: -11.875015258789062
    3. ' def' → logprob: -11.875015258789062
    4. 'self' → logprob: -14.250015258789062
    5. '   ' → logprob: -14.625015258789062
    6. 'from' → logprob: -15.875015258789062
    7. '    
' → logprob: -16.750015258789062
    8. '        
' → logprob: -17.375015258789062
    9. '```' → logprob: -17.625015258789062
    10. '<|end|>' → logprob: -19.125015258789062

Token 748: ' calculate' (ID: 17950)
  Prédit: ' calculate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' calculate' → logprob: -0.5050751566886902
    2. 'calculate' → logprob: -1.130075216293335
    3. 'max' → logprob: -3.880075216293335
    4. ' compute' → logprob: -4.005074977874756
    5. ' max' → logprob: -4.130074977874756
    6. 'compute' → logprob: -5.255074977874756
    7. ' maximum' → logprob: -5.505074977874756
    8. ' maximize' → logprob: -5.505074977874756
    9. 'maximize' → logprob: -6.005074977874756
    10. 'maximum' → logprob: -6.380074977874756

Token 749: '_max' (ID: 13731)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.03782525658607483
    2. '_max' → logprob: -3.912825345993042
    3. '_rewards' → logprob: -4.537825107574463
    4. '_reward' → logprob: -5.287825107574463
    5. '(' → logprob: -7.287825107574463
    6. '()' → logprob: -8.662825584411621
    7. '_total' → logprob: -8.787825584411621
    8. 'max' → logprob: -9.162825584411621
    9. '_best' → logprob: -9.787825584411621
    10. '_final' → logprob: -10.662825584411621

Token 750: '_reward' (ID: 88836)
  Prédit: '_reward'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_reward' → logprob: -0.011122104711830616
    2. 'reward' → logprob: -5.136122226715088
    3. '_profit' → logprob: -5.636122226715088
    4. '_rewards' → logprob: -6.761122226715088
    5. '(self' → logprob: -8.88612174987793
    6. '_' → logprob: -9.38612174987793
    7. 'imum' → logprob: -9.88612174987793
    8. 'profit' → logprob: -10.38612174987793
    9. '_score' → logprob: -10.76112174987793
    10. '_possible' → logprob: -10.76112174987793

Token 751: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -7.707997428951785e-05
    2. '(' → logprob: -9.500077247619629
    3. 'self' → logprob: -14.000077247619629
    4. ' (' → logprob: -14.125077247619629
    5. '   ' → logprob: -14.625077247619629
    6. '(
' → logprob: -16.000076293945312
    7. '       ' → logprob: -17.250076293945312
    8. '
' → logprob: -17.500076293945312
    9. ' ' → logprob: -17.625076293945312
    10. 'def' → logprob: -17.750076293945312

Token 752: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.017752433195710182
    2. 'self' → logprob: -4.142752647399902
    3. '(self' → logprob: -6.642752647399902
    4. '   ' → logprob: -8.517752647399902
    5. ',' → logprob: -9.142752647399902
    6. ')->' → logprob: -10.642752647399902
    7. '       ' → logprob: -10.892752647399902
    8. '):
' → logprob: -11.142752647399902
    9. ' )' → logprob: -11.142752647399902
    10. ' ' → logprob: -11.892752647399902

Token 753: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00024132427643053234
    2. '   ' → logprob: -9.25024127960205
    3. '       ' → logprob: -10.00024127960205
    4. '->' → logprob: -10.25024127960205
    5. '(' → logprob: -10.37524127960205
    6. 'self' → logprob: -10.75024127960205
    7. ' ->' → logprob: -11.62524127960205
    8. 'def' → logprob: -13.50024127960205
    9. ' (' → logprob: -15.00024127960205
    10. '[self' → logprob: -15.25024127960205

Token 754: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.016216423362493515
    2. ' int' → logprob: -4.266216278076172
    3. 'Optional' → logprob: -6.266216278076172
    4. ' Optional' → logprob: -9.516216278076172
    5. '   ' → logprob: -10.391216278076172
    6. 'None' → logprob: -10.641216278076172
    7. '[int' → logprob: -12.016216278076172
    8. 'float' → logprob: -12.141216278076172
    9. 'List' → logprob: -12.516216278076172
    10. '(int' → logprob: -13.391216278076172

Token 755: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8068121075630188
    2. ':' → logprob: -1.681812047958374
    3. ':
' → logprob: -1.806812047958374
    4. '   ' → logprob: -1.806812047958374
    5. '(self' → logprob: -3.306812047958374
    6. '():
' → logprob: -7.056812286376953
    7. '):
' → logprob: -7.306812286376953
    8. '(
' → logprob: -7.931812286376953
    9. 'self' → logprob: -8.431812286376953
    10. '        
' → logprob: -9.181812286376953

Token 756: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00015574338613077998
    2. 'max' → logprob: -9.625155448913574
    3. '
' → logprob: -10.375155448913574
    4. '```' → logprob: -10.750155448913574
    5. 'result' → logprob: -11.375155448913574
    6. '   ' → logprob: -11.625155448913574
    7. 'dist' → logprob: -11.750155448913574
    8. 'reward' → logprob: -12.500155448913574
    9. ' max' → logprob: -13.500155448913574
    10. '        
' → logprob: -13.875155448913574

Token 757: ' cost' (ID: 3097)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.15851669013500214
    2. 'dist' → logprob: -2.2835166454315186
    3. 'forward' → logprob: -4.283516883850098
    4. 'best' → logprob: -4.783516883850098
    5. 'min' → logprob: -4.783516883850098
    6. '       ' → logprob: -5.533516883850098
    7. 'distance' → logprob: -5.658516883850098
    8. 'reward' → logprob: -6.158516883850098
    9. 'dp' → logprob: -6.908516883850098
    10. 'result' → logprob: -7.533516883850098

Token 758: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -0.8109524846076965
    2. '_s' → logprob: -1.6859524250030518
    3. '_from' → logprob: -1.9359524250030518
    4. 's' → logprob: -1.9359524250030518
    5. '_forward' → logprob: -2.9359524250030518
    6. '_start' → logprob: -4.560952663421631
    7. ' =' → logprob: -4.685952663421631
    8. '=' → logprob: -5.935952663421631
    9. '_g' → logprob: -6.310952663421631
    10. 'from' → logprob: -6.310952663421631

Token 759: '_g' (ID: 5439)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.9409734606742859
    2. 'goal' → logprob: -1.3159735202789307
    3. '_goal' → logprob: -1.5659735202789307
    4. '_g' → logprob: -2.3159735202789307
    5. 'go' → logprob: -3.8159735202789307
    6. '_go' → logprob: -5.315973281860352
    7. ' =' → logprob: -6.190973281860352
    8. '=' → logprob: -6.690973281860352
    9. '_s' → logprob: -6.815973281860352
    10. 's' → logprob: -7.065973281860352

Token 760: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.016053957864642143
    2. '=' → logprob: -4.141054153442383
    3. ':' → logprob: -11.016054153442383
    4. '   ' → logprob: -13.391054153442383
    5. 's' → logprob: -15.016054153442383
    6. '_forward' → logprob: -15.391054153442383
    7. '  ' → logprob: -15.766054153442383
    8. ' ' → logprob: -16.016054153442383
    9. '```' → logprob: -16.016054153442383
    10. '       ' → logprob: -16.391054153442383

Token 761: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0015137888258323073
    2. ' self' → logprob: -6.501513957977295
    3. '       ' → logprob: -11.501513481140137
    4. '[self' → logprob: -13.751513481140137
    5. '(self' → logprob: -15.751513481140137
    6. '	self' → logprob: -16.626514434814453
    7. '=self' → logprob: -17.751514434814453
    8. '   ' → logprob: -18.251514434814453
    9. '[' → logprob: -18.501514434814453
    10. '{' → logprob: -18.751514434814453

Token 762: '.graph' (ID: 18104)
  Prédit: '.graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.graph' → logprob: -0.0014424959663301706
    2. '.forward' → logprob: -6.6264424324035645
    3. 'graph' → logprob: -10.001442909240723
    4. ' .' → logprob: -10.751442909240723
    5. '.s' → logprob: -11.126442909240723
    6. '.short' → logprob: -11.376442909240723
    7. '.' → logprob: -11.501442909240723
    8. '	graph' → logprob: -12.501442909240723
    9. '   ' → logprob: -13.126442909240723
    10. '.g' → logprob: -13.626442909240723

Token 763: '.short' (ID: 56360)
  Prédit: '.short'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.short' → logprob: -0.0020417715422809124
    2. '.forward' → logprob: -6.252041816711426
    3. ' .' → logprob: -9.252041816711426
    4. '.shortcuts' → logprob: -11.877041816711426
    5. 'short' → logprob: -12.252041816711426
    6. '.' → logprob: -13.377041816711426
    7. '.closest' → logprob: -13.752041816711426
    8. '.Short' → logprob: -14.127041816711426
    9. '.long' → logprob: -14.877041816711426
    10. '.backward' → logprob: -15.002041816711426

Token 764: 'est' (ID: 376)
  Prédit: 'est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'est' → logprob: -2.7729658540920354e-05
    2. '_path' → logprob: -10.750027656555176
    3. 'path' → logprob: -12.000027656555176
    4. 'rest' → logprob: -17.750028610229492
    5. '```' → logprob: -17.750028610229492
    6. 'test' → logprob: -17.875028610229492
    7. 'er' → logprob: -19.500028610229492
    8. 'Path' → logprob: -20.000028610229492
    9. '``' → logprob: -20.125028610229492
    10. 'iest' → logprob: -20.125028610229492

Token 765: '_path' (ID: 5558)
  Prédit: '_path'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_path' → logprob: -3.4121114822482923e-06
    2. 'path' → logprob: -12.625003814697266
    3. '```' → logprob: -17.250003814697266
    4. '
' → logprob: -19.000003814697266
    5. '   ' → logprob: -19.125003814697266
    6. 'Path' → logprob: -19.375003814697266
    7. '           ' → logprob: -19.625003814697266
    8. '-path' → logprob: -19.625003814697266
    9. '__' → logprob: -19.625003814697266
    10. '       ' → logprob: -19.875003814697266

Token 766: '_forward' (ID: 75888)
  Prédit: '_forward'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_forward' → logprob: -0.006046470254659653
    2. '(self' → logprob: -5.131046295166016
    3. '(s' → logprob: -9.631046295166016
    4. 'forward' → logprob: -10.381046295166016
    5. '_backward' → logprob: -11.256046295166016
    6. '(' → logprob: -13.006046295166016
    7. 'self' → logprob: -13.006046295166016
    8. 's' → logprob: -13.631046295166016
    9. 'Forward' → logprob: -14.256046295166016
    10. '   ' → logprob: -15.381046295166016

Token 767: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -1.5048530030981055e-06
    2. '(' → logprob: -13.625001907348633
    3. 'self' → logprob: -15.625001907348633
    4. '(
' → logprob: -17.625001907348633
    5. '[self' → logprob: -18.500001907348633
    6. '       ' → logprob: -18.625001907348633
    7. '((' → logprob: -19.375001907348633
    8. '(start' → logprob: -19.750001907348633
    9. ' (' → logprob: -19.875001907348633
    10. 's' → logprob: -20.000001907348633

Token 768: '.s' (ID: 640)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.4559918940067291
    2. '.s' → logprob: -1.0809918642044067
    3. 'self' → logprob: -3.9559919834136963
    4. ',' → logprob: -5.580991744995117
    5. 'g' → logprob: -5.830991744995117
    6. '(self' → logprob: -8.455991744995117
    7. ')' → logprob: -8.455991744995117
    8. ')(' → logprob: -8.830991744995117
    9. '.g' → logprob: -9.205991744995117
    10. ',s' → logprob: -9.580991744995117

Token 769: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000145137935760431
    2. ' ,' → logprob: -9.625144958496094
    3. ',self' → logprob: -9.625144958496094
    4. ',
' → logprob: -12.125144958496094
    5. ',g' → logprob: -12.625144958496094
    6. 'self' → logprob: -13.125144958496094
    7. 'g' → logprob: -13.625144958496094
    8. ')' → logprob: -15.125144958496094
    9. '   ' → logprob: -15.125144958496094
    10. ' ' → logprob: -16.375144958496094

Token 770: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0003418991982471198
    2. ' self' → logprob: -8.00034236907959
    3. '       ' → logprob: -13.00034236907959
    4. '(self' → logprob: -13.12534236907959
    5. '[self' → logprob: -14.50034236907959
    6. '<|end|>' → logprob: -14.75034236907959
    7. '=self' → logprob: -15.12534236907959
    8. 'g' → logprob: -15.25034236907959
    9. '   ' → logprob: -15.50034236907959
    10. '	self' → logprob: -16.000341415405273

Token 771: '.g' (ID: 1940)
  Prédit: '.g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.g' → logprob: -0.00524098752066493
    2. 'g' → logprob: -5.2552409172058105
    3. '.' → logprob: -12.130241394042969
    4. ' .' → logprob: -14.380241394042969
    5. ')' → logprob: -15.130241394042969
    6. '#g' → logprob: -15.505241394042969
    7. ').' → logprob: -15.755241394042969
    8. ' g' → logprob: -15.880241394042969
    9. '_g' → logprob: -16.50524139404297
    10. '```' → logprob: -16.63024139404297

Token 772: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.16038517653942108
    2. ')' → logprob: -1.9103851318359375
    3. ')
' → logprob: -9.285385131835938
    4. ' )
' → logprob: -10.035385131835938
    5. '       ' → logprob: -11.035385131835938
    6. ' )' → logprob: -12.410385131835938
    7. ')

' → logprob: -12.660385131835938
    8. '   ' → logprob: -14.910385131835938
    9. '```' → logprob: -15.410385131835938
    10. ')`
' → logprob: -16.160385131835938

Token 773: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3278726041316986
    2. ' if' → logprob: -1.327872633934021
    3. '
' → logprob: -4.8278727531433105
    4. 'if' → logprob: -5.0778727531433105
    5. '        
' → logprob: -9.202872276306152
    6. ')' → logprob: -9.952872276306152
    7. ',' → logprob: -10.452872276306152
    8. '<|end|>' → logprob: -10.827872276306152
    9. '```' → logprob: -10.952872276306152
    10. 'If' → logprob: -11.702872276306152

Token 774: ' cost' (ID: 3097)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5764066576957703
    2. 'cost' (adapté à ' cost') → logprob: -0.8264066576957703
    3. '       ' → logprob: -8.201406478881836
    4. ' if' → logprob: -9.451406478881836
    5. ' cost' → logprob: -10.451406478881836
    6. '```' → logprob: -10.826406478881836
    7. 'result' → logprob: -12.201406478881836
    8. 'max' → logprob: -12.201406478881836
    9. 'reverse' → logprob: -12.326406478881836
    10. 'reward' → logprob: -12.451406478881836

Token 775: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -0.005691284313797951
    2. 'to' → logprob: -6.005691051483154
    3. '_from' → logprob: -6.380691051483154
    4. '=' → logprob: -8.255691528320312
    5. '_back' → logprob: -8.255691528320312
    6. '_' → logprob: -8.255691528320312
    7. ' =' → logprob: -8.505691528320312
    8. 'from' → logprob: -8.630691528320312
    9. 'if' → logprob: -8.755691528320312
    10. '       ' → logprob: -9.380691528320312

Token 776: '_s' (ID: 1278)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.13704045116901398
    2. '_g' → logprob: -2.262040376663208
    3. 's' → logprob: -3.887040376663208
    4. '_s' → logprob: -6.012040615081787
    5. 'self' → logprob: -7.262040615081787
    6. '
' → logprob: -10.387040138244629
    7. ' g' → logprob: -10.637040138244629
    8. 'start' → logprob: -10.762040138244629
    9. '_' → logprob: -10.887040138244629
    10. '```' → logprob: -11.012040138244629

Token 777: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10020732134580612
    2. '=' → logprob: -2.3502073287963867
    3. ' if' → logprob: -14.850207328796387
    4. 'if' → logprob: -16.22520637512207
    5. ' ' → logprob: -16.72520637512207
    6. ')' → logprob: -16.97520637512207
    7. '=None' → logprob: -17.22520637512207
    8. '=self' → logprob: -17.60020637512207
    9. '=
' → logprob: -17.60020637512207
    10. ' =
' → logprob: -17.85020637512207

Token 778: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.03371855244040489
    2. ' self' → logprob: -3.4087185859680176
    3. '       ' → logprob: -9.65871810913086
    4. '(self' → logprob: -12.90871810913086
    5. '[self' → logprob: -13.15871810913086
    6. '0' → logprob: -13.53371810913086
    7. '=self' → logprob: -14.03371810913086
    8. '	self' → logprob: -14.90871810913086
    9. '   ' → logprob: -15.03371810913086
    10. 'None' → logprob: -15.53371810913086

Token 779: '.graph' (ID: 18104)
  Prédit: '.graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.graph' → logprob: -0.0007306627230718732
    2. 'graph' → logprob: -7.250730514526367
    3. 'self' → logprob: -12.250730514526367
    4. '.' → logprob: -12.500730514526367
    5. '	graph' → logprob: -12.500730514526367
    6. 'raph' → logprob: -13.000730514526367
    7. ' .' → logprob: -13.125730514526367
    8. '.g' → logprob: -13.875730514526367
    9. '
' → logprob: -14.375730514526367
    10. '.user' → logprob: -14.750730514526367

Token 780: '.short' (ID: 56360)
  Prédit: '.short'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.short' → logprob: -0.0005265804938971996
    2. '.backward' → logprob: -8.250526428222656
    3. ' .' → logprob: -9.375526428222656
    4. '.' → logprob: -9.750526428222656
    5. '.reverse' → logprob: -9.875526428222656
    6. '.forward' → logprob: -10.125526428222656
    7. 'short' → logprob: -10.625526428222656
    8. '.shortcuts' → logprob: -12.250526428222656
    9. '.long' → logprob: -15.375526428222656
    10. '.back' → logprob: -15.750526428222656

Token 781: 'est' (ID: 376)
  Prédit: '_path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_path' → logprob: -0.02202608436346054
    2. 'path' → logprob: -4.022026062011719
    3. 'est' → logprob: -5.647026062011719
    4. 'ort' → logprob: -9.022026062011719
    5. 'ath' → logprob: -9.522026062011719
    6. 't' → logprob: -9.522026062011719
    7. 'short' → logprob: -9.897026062011719
    8. 'Path' → logprob: -12.772026062011719
    9. 'self' → logprob: -12.897026062011719
    10. 'def' → logprob: -13.147026062011719

Token 782: '_path' (ID: 5558)
  Prédit: '_path'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_path' → logprob: -5.240481914370321e-05
    2. 'path' → logprob: -10.000052452087402
    3. 'graph' → logprob: -12.250052452087402
    4. '_graph' → logprob: -13.375052452087402
    5. '```' → logprob: -15.750052452087402
    6. 'forward' → logprob: -16.625051498413086
    7. 'self' → logprob: -16.750051498413086
    8. 'reverse' → logprob: -17.250051498413086
    9. 'reward' → logprob: -17.375051498413086
    10. 'def' → logprob: -17.375051498413086

Token 783: '_forward' (ID: 75888)
  Prédit: '_backward'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_backward' → logprob: -0.00594610208645463
    2. '_forward' → logprob: -5.130946159362793
    3. '_back' → logprob: -11.880946159362793
    4. '.backward' → logprob: -12.630946159362793
    5. '_reverse' → logprob: -12.630946159362793
    6. 'Backward' → logprob: -13.380946159362793
    7. 'back' → logprob: -14.130946159362793
    8. ' backward' → logprob: -14.630946159362793
    9. '_bid' → logprob: -15.130946159362793
    10. '_' → logprob: -15.380946159362793

Token 784: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -9.85366350505501e-05
    2. 'self' → logprob: -9.62509822845459
    3. '_backward' → logprob: -10.62509822845459
    4. 'back' → logprob: -13.25009822845459
    5. '[self' → logprob: -13.50009822845459
    6. '(' → logprob: -13.62509822845459
    7. 'reverse' → logprob: -13.87509822845459
    8. '_back' → logprob: -14.25009822845459
    9. '.backward' → logprob: -14.37509822845459
    10. 'Backward' → logprob: -14.87509822845459

Token 785: '.g' (ID: 1940)
  Prédit: '.g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.g' → logprob: -1.1160349458805285e-05
    2. '.s' → logprob: -12.500011444091797
    3. 'g' → logprob: -12.625011444091797
    4. '.n' → logprob: -13.375011444091797
    5. '.' → logprob: -13.625011444091797
    6. 'self' → logprob: -14.500011444091797
    7. 'n' → logprob: -15.125011444091797
    8. 's' → logprob: -15.875011444091797
    9. ' .' → logprob: -16.500011444091797
    10. '
' → logprob: -16.750011444091797

Token 786: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.869639476761222e-05
    2. ',self' → logprob: -11.125039100646973
    3. ' ,' → logprob: -11.500039100646973
    4. 'self' → logprob: -11.625039100646973
    5. ',
' → logprob: -13.000039100646973
    6. '(self' → logprob: -13.250039100646973
    7. ')' → logprob: -15.250039100646973
    8. '(' → logprob: -15.875039100646973
    9. ' self' → logprob: -16.750038146972656
    10. '),' → logprob: -16.750038146972656

Token 787: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0001761272142175585
    2. ' self' → logprob: -9.125176429748535
    3. 's' → logprob: -9.625176429748535
    4. '0' → logprob: -14.750176429748535
    5. '   ' → logprob: -15.500176429748535
    6. '       ' → logprob: -15.875176429748535
    7. ' ' → logprob: -16.75017547607422
    8. '
' → logprob: -17.00017547607422
    9. '(self' → logprob: -17.50017547607422
    10. 'elf' → logprob: -17.50017547607422

Token 788: '.s' (ID: 640)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -9.376848902320489e-05
    2. '.s' → logprob: -9.375093460083008
    3. ' s' → logprob: -12.000093460083008
    4. '_s' → logprob: -14.000093460083008
    5. ')' → logprob: -14.500093460083008
    6. '.' → logprob: -15.125093460083008
    7. '   ' → logprob: -15.625093460083008
    8. ' ' → logprob: -15.875093460083008
    9. '
' → logprob: -15.875093460083008
    10. '[' → logprob: -16.000093460083008

Token 789: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003020606702193618
    2. '       ' → logprob: -6.253020763397217
    3. ')
' → logprob: -6.878020763397217
    4. '<|end|>' → logprob: -10.253020286560059
    5. ' )' → logprob: -11.128020286560059
    6. '
' → logprob: -13.628020286560059
    7. '()' → logprob: -13.753020286560059
    8. '())' → logprob: -13.753020286560059
    9. ',' → logprob: -14.003020286560059
    10. ')

' → logprob: -14.003020286560059

Token 790: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.029364395886659622
    2. '
' → logprob: -4.279364585876465
    3. ' if' → logprob: -4.529364585876465
    4. 'if' → logprob: -5.904364585876465
    5. '        
' → logprob: -7.529364585876465
    6. '```' → logprob: -8.404364585876465
    7. '<|end|>' → logprob: -8.404364585876465
    8. '	' → logprob: -8.529364585876465
    9. ',' → logprob: -8.654364585876465
    10. ')' → logprob: -10.404364585876465

Token 791: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.03940505534410477
    2. 'max' → logprob: -3.289405107498169
    3. '       ' → logprob: -7.41440486907959
    4. 'result' → logprob: -8.41440486907959
    5. 'reward' → logprob: -8.66440486907959
    6. 'best' → logprob: -9.03940486907959
    7. 'res' → logprob: -9.78940486907959
    8. 'cost' → logprob: -9.91440486907959
    9. '```' → logprob: -9.91440486907959
    10. ' if' → logprob: -10.53940486907959

Token 792: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.008616226725280285
    2. ' cost' → logprob: -4.7586164474487305
    3. '       ' → logprob: -14.00861644744873
    4. '     ' → logprob: -14.63361644744873
    5. '   ' → logprob: -15.63361644744873
    6. '    ' → logprob: -16.758615493774414
    7. '(cost' → logprob: -16.883615493774414
    8. '        ' → logprob: -17.883615493774414
    9. '
' → logprob: -18.008615493774414
    10. '      ' → logprob: -18.008615493774414

Token 793: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -5.080963092041202e-06
    2. 'to' → logprob: -13.125004768371582
    3. '_cost' → logprob: -13.125004768371582
    4. 'cost' → logprob: -14.875004768371582
    5. '_' → logprob: -15.250004768371582
    6. 's' → logprob: -15.375004768371582
    7. '_t' → logprob: -16.5000057220459
    8. 'To' → logprob: -17.8750057220459
    9. '=None' → logprob: -18.0000057220459
    10. '```' → logprob: -18.1250057220459

Token 794: '_g' (ID: 5439)
  Prédit: '_g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_g' → logprob: -0.20254763960838318
    2. 'g' → logprob: -1.7025476694107056
    3. 's' → logprob: -7.577547550201416
    4. '_s' → logprob: -7.952547550201416
    5. 'None' → logprob: -8.452548027038574
    6. '_to' → logprob: -10.952548027038574
    7. 'to' → logprob: -11.327548027038574
    8. '_' → logprob: -11.577548027038574
    9. '```' → logprob: -12.577548027038574
    10. '
' → logprob: -13.077548027038574

Token 795: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.02975083328783512
    2. 'is' → logprob: -3.5297508239746094
    3. '==' → logprob: -15.15475082397461
    4. ' ==' → logprob: -17.77975082397461
    5. '   ' → logprob: -18.15475082397461
    6. '	is' → logprob: -18.27975082397461
    7. '[' → logprob: -18.52975082397461
    8. ')' → logprob: -18.65475082397461
    9. ' ' → logprob: -18.77975082397461
    10. '_is' → logprob: -19.02975082397461

Token 796: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.0031853171531111
    2. ' None' → logprob: -5.753185272216797
    3. '   ' → logprob: -12.003185272216797
    4. '=None' → logprob: -14.878185272216797
    5. 'N' → logprob: -15.378185272216797
    6. 'none' → logprob: -15.378185272216797
    7. '       ' → logprob: -15.753185272216797
    8. '_None' → logprob: -15.878185272216797
    9. 'not' → logprob: -16.378185272216797
    10. '0' → logprob: -16.628185272216797

Token 797: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.005534812342375517
    2. ':' → logprob: -5.505534648895264
    3. '           ' → logprob: -7.505534648895264
    4. 'or' → logprob: -7.755534648895264
    5. '       ' → logprob: -8.005535125732422
    6. ':
' → logprob: -9.005535125732422
    7. '   ' → logprob: -11.630535125732422
    8. ':return' → logprob: -12.505535125732422
    9. '        ' → logprob: -13.380535125732422
    10. '          ' → logprob: -13.505535125732422

Token 798: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.029752571135759354
    2. ' cost' → logprob: -3.529752492904663
    3. '       ' → logprob: -13.904752731323242
    4. '   ' → logprob: -14.404752731323242
    5. '           ' → logprob: -16.029752731323242
    6. '      ' → logprob: -16.154752731323242
    7. '  ' → logprob: -16.279752731323242
    8. '_cost' → logprob: -16.404752731323242
    9. '    ' → logprob: -16.654752731323242
    10. '(cost' → logprob: -16.779752731323242

Token 799: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -4.8351892473874614e-05
    2. 'to' → logprob: -10.250048637390137
    3. 'cost' → logprob: -12.000048637390137
    4. 'To' → logprob: -12.500048637390137
    5. '_cost' → logprob: -13.375048637390137
    6. ' to' → logprob: -14.250048637390137
    7. 's' → logprob: -15.125048637390137
    8. '```' → logprob: -15.500048637390137
    9. '   ' → logprob: -16.37504768371582
    10. '
' → logprob: -16.87504768371582

Token 800: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.1273995339870453
    2. 's' → logprob: -2.127399444580078
    3. '_to' → logprob: -7.877399444580078
    4. 'to' → logprob: -10.502399444580078
    5. 'g' → logprob: -11.002399444580078
    6. '```' → logprob: -11.627399444580078
    7. 'To' → logprob: -12.002399444580078
    8. '_' → logprob: -12.127399444580078
    9. '   ' → logprob: -12.127399444580078
    10. '_g' → logprob: -12.252399444580078

Token 801: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.006725199054926634
    2. 'is' → logprob: -5.006725311279297
    3. 'None' → logprob: -12.256725311279297
    4. ' None' → logprob: -12.381725311279297
    5. '=None' → logprob: -15.256725311279297
    6. ':' → logprob: -15.631725311279297
    7. '   ' → logprob: -15.631725311279297
    8. '	is' → logprob: -16.006725311279297
    9. ')' → logprob: -16.756725311279297
    10. '==' → logprob: -17.006725311279297

Token 802: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -5.848420551046729e-05
    2. ' None' → logprob: -9.7500581741333
    3. '   ' → logprob: -16.250059127807617
    4. '=None' → logprob: -17.250059127807617
    5. '_None' → logprob: -18.125059127807617
    6. 'none' → logprob: -18.250059127807617
    7. 'float' → logprob: -18.875059127807617
    8. '(None' → logprob: -19.125059127807617
    9. 'inf' → logprob: -19.875059127807617
    10. ' ' → logprob: -20.000059127807617

Token 803: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2119928002357483
    2. ':
' → logprob: -1.7119927406311035
    3. '           ' → logprob: -4.9619927406311035
    4. '       ' → logprob: -5.8369927406311035
    5. ' or' → logprob: -7.9619927406311035
    6. ':return' → logprob: -8.461993217468262
    7. '   ' → logprob: -11.461993217468262
    8. '):
' → logprob: -11.711993217468262
    9. ',' → logprob: -11.961993217468262
    10. '<|end|>' → logprob: -12.461993217468262

Token 804: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00015550498210359365
    2. '       ' → logprob: -9.500155448913574
    3. 'return' → logprob: -9.750155448913574
    4. '   ' → logprob: -11.125155448913574
    5. '```' → logprob: -12.125155448913574
    6. ' return' → logprob: -13.250155448913574
    7. '          ' → logprob: -16.00015640258789
    8. '0' → logprob: -16.75015640258789
    9. '{return' → logprob: -17.37515640258789
    10. 'raise' → logprob: -17.50015640258789

Token 805: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0010205440921708941
    2. '           ' → logprob: -7.251020431518555
    3. ' return' → logprob: -8.251020431518555
    4. '0' → logprob: -10.251020431518555
    5. '       ' → logprob: -11.501020431518555
    6. '```' → logprob: -13.376020431518555
    7. '   ' → logprob: -13.751020431518555
    8. 'raise' → logprob: -14.251020431518555
    9. '	return' → logprob: -14.751020431518555
    10. '{return' → logprob: -15.751020431518555

Token 806: ' No' (ID: 3004)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.00029947367147542536
    2. '           ' → logprob: -8.500299453735352
    3. '       ' → logprob: -9.875299453735352
    4. ' return' → logprob: -10.750299453735352
    5. '0' → logprob: -11.000299453735352
    6. '```' → logprob: -12.375299453735352
    7. 'Return' → logprob: -14.375299453735352
    8. '   ' → logprob: -14.750299453735352
    9. '
' → logprob: -15.000299453735352
    10. 'raise' → logprob: -15.000299453735352

Token 807: ' valid' (ID: 4529)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.5149140357971191
    2. ' return' → logprob: -1.2649140357971191
    3. ' valid' → logprob: -2.764914035797119
    4. 'valid' → logprob: -4.014914035797119
    5. ' path' → logprob: -4.514914035797119
    6. 'path' → logprob: -5.014914035797119
    7. 'possible' → logprob: -5.139914035797119
    8. '       ' → logprob: -5.139914035797119
    9. 'max' → logprob: -5.764914035797119
    10. ' possible' → logprob: -5.889914035797119

Token 808: ' round' (ID: 7353)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.0844678208231926
    2. 'return' → logprob: -2.584467887878418
    3. ' path' → logprob: -5.584467887878418
    4. 'reward' → logprob: -6.834467887878418
    5. 'route' → logprob: -7.709467887878418
    6. ' return' → logprob: -9.209467887878418
    7. 'max' → logprob: -9.834467887878418
    8. 'solution' → logprob: -10.084467887878418
    9. '```' → logprob: -11.084467887878418
    10. '_path' → logprob: -11.084467887878418

Token 809: ' trip' (ID: 8831)
  Prédit: 'trip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'trip' → logprob: -0.007862843573093414
    2. '_trip' → logprob: -5.2578630447387695
    3. '-trip' → logprob: -6.5078630447387695
    4. ' trip' → logprob: -7.2578630447387695
    5. '       ' → logprob: -8.25786304473877
    6. '   ' → logprob: -9.38286304473877
    7. '
' → logprob: -10.00786304473877
    8. '           ' → logprob: -11.00786304473877
    9. '               ' → logprob: -11.38286304473877
    10. '-' → logprob: -12.50786304473877

Token 810: ' path' (ID: 3104)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6542124152183533
    2. '           ' → logprob: -0.7792124152183533
    3. 'return' → logprob: -4.279212474822998
    4. '
' → logprob: -5.404212474822998
    5. ' return' → logprob: -5.904212474822998
    6. '   ' → logprob: -9.40421199798584
    7. ',' → logprob: -9.77921199798584
    8. '        
' → logprob: -10.90421199798584
    9. '<|end|>' → logprob: -10.90421199798584
    10. '               ' → logprob: -11.02921199798584

Token 811: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01846245862543583
    2. '           ' → logprob: -4.643462657928467
    3. '
' → logprob: -4.893462657928467
    4. ',' → logprob: -7.268462657928467
    5. '        
' → logprob: -8.768462181091309
    6. 'return' → logprob: -8.893462181091309
    7. ':' → logprob: -9.643462181091309
    8. '   ' → logprob: -10.893462181091309
    9. ' return' → logprob: -11.143462181091309
    10. '0' → logprob: -11.393462181091309

Token 812: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01432639081031084
    2. '       ' → logprob: -4.264326572418213
    3. '   ' → logprob: -10.014326095581055
    4. '               ' → logprob: -10.264326095581055
    5. ',' → logprob: -10.639326095581055
    6. '          ' → logprob: -10.639326095581055
    7. '<|end|>' → logprob: -11.764326095581055
    8. '0' → logprob: -11.764326095581055
    9. 'return' → logprob: -12.264326095581055
    10. '```' → logprob: -13.014326095581055

Token 813: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0008454833878204226
    2. ' return' → logprob: -7.250845432281494
    3. '           ' → logprob: -9.375845909118652
    4. '       ' → logprob: -10.000845909118652
    5. '0' → logprob: -12.625845909118652
    6. '
' → logprob: -13.500845909118652
    7. '	return' → logprob: -14.750845909118652
    8. '   ' → logprob: -15.625845909118652
    9. '```' → logprob: -15.875845909118652
    10. '{return' → logprob: -16.500844955444336

Token 814: ' -' (ID: 533)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.001304522156715393
    2. '-' → logprob: -7.126304626464844
    3. ' ' → logprob: -7.626304626464844
    4. ' -' → logprob: -11.376304626464844
    5. '   ' → logprob: -14.626304626464844
    6. '       ' → logprob: -15.501304626464844
    7. '  ' → logprob: -16.376304626464844
    8. '
' → logprob: -16.626304626464844
    9. ' ' → logprob: -17.501304626464844
    10. 'float' → logprob: -17.501304626464844

Token 815: ' (' (ID: 350)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. 'float' → logprob: -15.0
    3. '```' → logprob: -17.125
    4. '10' → logprob: -17.75
    5. '999' → logprob: -18.25
    6. ' ' → logprob: -18.5
    7. '2' → logprob: -18.875
    8. '-' → logprob: -19.375
    9. 'inf' → logprob: -19.5
    10. '(' → logprob: -19.75

Token 816: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.7931845784187317
    2. '10' → logprob: -1.168184518814087
    3. '1' → logprob: -1.793184518814087
    4. 'float' → logprob: -2.668184518814087
    5. '999' → logprob: -7.918184757232666
    6. '0' → logprob: -8.293184280395508
    7. '100' → logprob: -9.293184280395508
    8. '2' → logprob: -9.793184280395508
    9. ' self' → logprob: -10.793184280395508
    10. ' ' → logprob: -10.793184280395508

Token 817: '.P' (ID: 2007)
  Prédit: '.P'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.P' → logprob: -0.4814125597476959
    2. '.V' → logprob: -0.9814125299453735
    3. '.n' → logprob: -6.231412410736084
    4. '.s' → logprob: -6.231412410736084
    5. '10' → logprob: -6.356412410736084
    6. 'P' → logprob: -7.356412410736084
    7. 'V' → logprob: -8.106412887573242
    8. '1' → logprob: -8.481412887573242
    9. '.m' → logprob: -8.606412887573242
    10. '.' → logprob: -9.606412887573242

Token 818: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6976943016052246
    2. '+' → logprob: -0.8226943016052246
    3. ' +' → logprob: -2.9476943016052246
    4. ')
' → logprob: -4.947694301605225
    5. '*' → logprob: -6.197694301605225
    6. '1' → logprob: -7.447694301605225
    7. '       ' → logprob: -8.197694778442383
    8. ' *' → logprob: -8.947694778442383
    9. '-' → logprob: -9.072694778442383
    10. ' )' → logprob: -9.322694778442383

Token 819: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.09144789725542068
    2. '       ' → logprob: -2.4664478302001953
    3. '        
' → logprob: -6.716447830200195
    4. '<|end|>' → logprob: -7.966447830200195
    5. '
' → logprob: -8.341447830200195
    6. '		
' → logprob: -8.591447830200195
    7. '	' → logprob: -8.716447830200195
    8. '  
' → logprob: -9.341447830200195
    9. '

' → logprob: -9.966447830200195
    10. '   ' → logprob: -9.966447830200195

Token 820: ' total' (ID: 3609)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.0009134899592027068
    2. '       ' → logprob: -7.750913619995117
    3. 'reward' → logprob: -8.625913619995117
    4. 'result' → logprob: -9.250913619995117
    5. 'res' → logprob: -9.750913619995117
    6. ' max' → logprob: -9.875913619995117
    7. 'answer' → logprob: -10.375913619995117
    8. 'best' → logprob: -10.750913619995117
    9. 'ans' → logprob: -11.375913619995117
    10. '
' → logprob: -11.625913619995117

Token 821: '_tr' (ID: 7410)
  Prédit: '_cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_cost' → logprob: -0.20868563652038574
    2. '_reward' → logprob: -1.8336856365203857
    3. 'cost' → logprob: -4.458685874938965
    4. ' =' → logprob: -5.333685874938965
    5. '_trip' → logprob: -5.833685874938965
    6. 'reward' → logprob: -5.958685874938965
    7. '=' → logprob: -6.333685874938965
    8. '_distance' → logprob: -6.833685874938965
    9. '_time' → logprob: -7.083685874938965
    10. '_path' → logprob: -7.208685874938965

Token 822: 'avel' (ID: 8345)
  Prédit: 'ip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ip' → logprob: -0.006953111384063959
    2. 'avel' → logprob: -5.006953239440918
    3. 'ips' → logprob: -9.756953239440918
    4. '   ' → logprob: -10.131953239440918
    5. 'ans' → logprob: -10.256953239440918
    6. '       ' → logprob: -10.631953239440918
    7. 'vel' → logprob: -11.631953239440918
    8. '```' → logprob: -11.756953239440918
    9. 'av' → logprob: -12.131953239440918
    10. 'el' → logprob: -12.256953239440918

Token 823: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -0.16239534318447113
    2. '=' → logprob: -2.6623952388763428
    3. ' =' → logprob: -2.9123952388763428
    4. '_time' → logprob: -4.162395477294922
    5. 'cost' → logprob: -4.787395477294922
    6. '_' → logprob: -6.912395477294922
    7. ' ' → logprob: -8.287395477294922
    8. '   ' → logprob: -8.787395477294922
    9. '-' → logprob: -8.912395477294922
    10. 'time' → logprob: -9.787395477294922

Token 824: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07889111340045929
    2. '=' → logprob: -2.5788910388946533
    3. ':' → logprob: -13.703890800476074
    4. ',' → logprob: -16.70389175415039
    5. '=int' → logprob: -16.70389175415039
    6. '   ' → logprob: -16.95389175415039
    7. ' ' → logprob: -16.95389175415039
    8. 's' → logprob: -17.07889175415039
    9. ' ' → logprob: -18.45389175415039
    10. ')' → logprob: -18.45389175415039

Token 825: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.03191317617893219
    2. ' cost' → logprob: -3.5319132804870605
    3. '(cost' → logprob: -6.2819132804870605
    4. ' (' → logprob: -8.781912803649902
    5. 'self' → logprob: -9.406912803649902
    6. '(V' → logprob: -11.281912803649902
    7. 'V' → logprob: -11.531912803649902
    8. '(' → logprob: -11.781912803649902
    9. 'max' → logprob: -12.156912803649902
    10. ' self' → logprob: -12.656912803649902

Token 826: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -6.623244553338736e-05
    2. ' =' → logprob: -10.250065803527832
    3. '=' → logprob: -11.125065803527832
    4. 'to' → logprob: -11.750065803527832
    5. 's' → logprob: -13.000065803527832
    6. '_cost' → logprob: -13.125065803527832
    7. 'To' → logprob: -13.125065803527832
    8. 'cost' → logprob: -14.750065803527832
    9. '_for' → logprob: -16.00006675720215
    10. '_' → logprob: -16.12506675720215

Token 827: '_g' (ID: 5439)
  Prédit: '_g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_g' → logprob: -0.5764217972755432
    2. 'g' → logprob: -0.8264217972755432
    3. 's' → logprob: -7.701421737670898
    4. '_s' → logprob: -11.826421737670898
    5. 'self' → logprob: -12.326421737670898
    6. 'to' → logprob: -12.326421737670898
    7. 'cost' → logprob: -12.701421737670898
    8. '```' → logprob: -13.451421737670898
    9. '	g' → logprob: -13.576421737670898
    10. '_to' → logprob: -13.826421737670898

Token 828: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6326175928115845
    2. ' +' → logprob: -0.7576175928115845
    3. '
' → logprob: -12.632617950439453
    4. '```' → logprob: -12.757617950439453
    5. '+
' → logprob: -12.882617950439453
    6. '   ' → logprob: -13.132617950439453
    7. '<|end|>' → logprob: -13.382617950439453
    8. '+self' → logprob: -13.632617950439453
    9. ' ' → logprob: -14.257617950439453
    10. ' plus' → logprob: -14.507617950439453

Token 829: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.01107341144233942
    2. ' cost' → logprob: -4.511073589324951
    3. '(cost' → logprob: -10.761073112487793
    4. '(' → logprob: -14.386073112487793
    5. ' (' → logprob: -14.386073112487793
    6. '
' → logprob: -14.386073112487793
    7. '   ' → logprob: -14.511073112487793
    8. '_cost' → logprob: -15.136073112487793
    9. ' ' → logprob: -15.261073112487793
    10. 'self' → logprob: -15.823573112487793

Token 830: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -2.2127087504486553e-05
    2. '_cost' → logprob: -11.125021934509277
    3. 'to' → logprob: -12.250021934509277
    4. '_s' → logprob: -13.625021934509277
    5. 'cost' → logprob: -14.625021934509277
    6. 'To' → logprob: -15.875021934509277
    7. '```' → logprob: -16.000022888183594
    8. '_t' → logprob: -16.250022888183594
    9. 's' → logprob: -16.375022888183594
    10. '_' → logprob: -16.750022888183594

Token 831: '_s' (ID: 1278)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0011286636581644416
    2. '_s' → logprob: -6.876128673553467
    3. 'cost' → logprob: -9.501128196716309
    4. 'g' → logprob: -11.001128196716309
    5. '_cost' → logprob: -14.251128196716309
    6. '   ' → logprob: -14.376128196716309
    7. '```' → logprob: -15.001128196716309
    8. ' s' → logprob: -15.126128196716309
    9. '
' → logprob: -15.376128196716309
    10. '_' → logprob: -15.501128196716309

Token 832: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.10114897787570953
    2. '       ' → logprob: -2.851149082183838
    3. 'max' → logprob: -3.476149082183838
    4. '```' → logprob: -5.601149082183838
    5. ' max' → logprob: -6.351149082183838
    6. '
' → logprob: -7.226149082183838
    7. '        
' → logprob: -7.726149082183838
    8. 'result' → logprob: -7.976149082183838
    9. ',' → logprob: -8.72614860534668
    10. '_max' → logprob: -9.85114860534668

Token 833: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5204766988754272
    2. 'max' → logprob: -1.0204766988754272
    3. 'result' → logprob: -3.895476818084717
    4. ' max' → logprob: -4.020476818084717
    5. '```' → logprob: -5.270476818084717
    6. '
' → logprob: -7.395476818084717
    7. 'reward' → logprob: -7.770476818084717
    8. ' result' → logprob: -8.020476341247559
    9. 'best' → logprob: -9.145476341247559
    10. '   ' → logprob: -9.395476341247559

Token 834: ' reward' (ID: 16563)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -8.423219696851447e-05
    2. 'best' → logprob: -10.375083923339844
    3. ' max' → logprob: -11.250083923339844
    4. '       ' → logprob: -11.750083923339844
    5. 'remaining' → logprob: -11.750083923339844
    6. '   ' → logprob: -12.000083923339844
    7. 'return' → logprob: -12.250083923339844
    8. 'maximum' → logprob: -12.375083923339844
    9. 'answer' → logprob: -13.000083923339844
    10. 'result' → logprob: -13.125083923339844

Token 835: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2978583574295044
    2. '=' → logprob: -1.6728583574295044
    3. 's' → logprob: -2.672858238220215
    4. '_max' → logprob: -7.797858238220215
    5. 'max' → logprob: -9.172858238220215
    6. '   ' → logprob: -9.797858238220215
    7. '_points' → logprob: -10.172858238220215
    8. '_list' → logprob: -10.172858238220215
    9. '_' → logprob: -10.297858238220215
    10. '_per' → logprob: -10.547858238220215

Token 836: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.22876450419425964
    2. 'max' → logprob: -1.603764533996582
    3. ' self' → logprob: -6.353764533996582
    4. ' max' → logprob: -7.228764533996582
    5. '(self' → logprob: -7.603764533996582
    6. '(max' → logprob: -8.478764533996582
    7. '       ' → logprob: -9.728764533996582
    8. '[self' → logprob: -10.228764533996582
    9. 'min' → logprob: -10.978764533996582
    10. '[max' → logprob: -11.603764533996582

Token 837: '.V' (ID: 5970)
  Prédit: '.V'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.V' → logprob: -0.004153429996222258
    2. '.P' → logprob: -5.504153251647949
    3. 'V' → logprob: -9.62915325164795
    4. '.' → logprob: -11.87915325164795
    5. 'P' → logprob: -13.25415325164795
    6. '.v' → logprob: -15.25415325164795
    7. '	V' → logprob: -16.129154205322266
    8. '
' → logprob: -17.254154205322266
    9. ' .' → logprob: -17.254154205322266
    10. '.M' → logprob: -17.504154205322266

Token 838: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.8544169664382935
    2. '*' → logprob: -1.1044169664382935
    3. '-' → logprob: -1.7294169664382935
    4. ' *' → logprob: -2.729416847229004
    5. '+' → logprob: -8.854416847229004
    6. ' ' → logprob: -9.354416847229004
    7. '*(' → logprob: -9.854416847229004
    8. ' +' → logprob: -9.979416847229004
    9. '   ' → logprob: -10.729416847229004
    10. '
' → logprob: -10.729416847229004

Token 839: ' self' (ID: 1051)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.04792136698961258
    2. ' total' → logprob: -3.4229214191436768
    3. 'self' → logprob: -4.547921180725098
    4. '(total' → logprob: -6.047921180725098
    5. ' self' → logprob: -7.672921180725098
    6. ' (' → logprob: -7.797921180725098
    7. '(self' → logprob: -8.547921180725098
    8. '(' → logprob: -10.172921180725098
    9. 'P' → logprob: -10.422921180725098
    10. '   ' → logprob: -10.422921180725098

Token 840: '.P' (ID: 2007)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.16469071805477142
    2. 'P' → logprob: -2.6646907329559326
    3. '*' → logprob: -3.2896907329559326
    4. ' total' → logprob: -3.4146907329559326
    5. ' *' → logprob: -4.9146904945373535
    6. '.P' → logprob: -6.5396904945373535
    7. ' P' → logprob: -7.1646904945373535
    8. '
' → logprob: -7.9146904945373535
    9. '[' → logprob: -8.164690971374512
    10. ' ' → logprob: -8.414690971374512

Token 841: ' -' (ID: 533)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.3194326162338257
    2. ' *' → logprob: -1.3194326162338257
    3. ' -' → logprob: -5.444432735443115
    4. '-' → logprob: -6.819432735443115
    5. '
' → logprob: -8.319432258605957
    6. '*(' → logprob: -8.444432258605957
    7. '       ' → logprob: -8.819432258605957
    8. '   ' → logprob: -10.194432258605957
    9. '```' → logprob: -10.569432258605957
    10. '*t' → logprob: -11.819432258605957

Token 842: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.00091217877343297
    2. ' total' → logprob: -7.375912189483643
    3. '(total' → logprob: -8.250911712646484
    4. 'self' → logprob: -11.000911712646484
    5. '(' → logprob: -12.750911712646484
    6. ' (' → logprob: -12.875911712646484
    7. '   ' → logprob: -14.625911712646484
    8. 'to' → logprob: -15.125911712646484
    9. 'tot' → logprob: -15.125911712646484
    10. 't' → logprob: -15.375911712646484

Token 843: '_tr' (ID: 7410)
  Prédit: '_tr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_tr' → logprob: -0.006752905435860157
    2. 'travel' → logprob: -5.006752967834473
    3. 'tr' → logprob: -10.756752967834473
    4. 'trav' → logprob: -12.006752967834473
    5. '
' → logprob: -12.631752967834473
    6. 'cost' → logprob: -13.256752967834473
    7. ' travel' → logprob: -13.631752967834473
    8. '   ' → logprob: -14.006752967834473
    9. 'Travel' → logprob: -14.756752967834473
    10. 'total' → logprob: -15.381752967834473

Token 844: 'avel' (ID: 8345)
  Prédit: 'avel'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'avel' → logprob: -1.1517960956552997e-05
    2. 'ave' → logprob: -12.250011444091797
    3. 'a' → logprob: -12.750011444091797
    4. 'av' → logprob: -13.125011444091797
    5. '_' → logprob: -14.500011444091797
    6. 'AVEL' → logprob: -14.875011444091797
    7. '```' → logprob: -15.875011444091797
    8. 'vel' → logprob: -15.875011444091797
    9. '   ' → logprob: -16.125011444091797
    10. '_a' → logprob: -16.375011444091797

Token 845: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -0.0011752246646210551
    2. 'cost' → logprob: -6.751175403594971
    3. ' cost' → logprob: -13.001174926757812
    4. ' _' → logprob: -14.376174926757812
    5. '
' → logprob: -14.626174926757812
    6. 'Cost' → logprob: -15.251174926757812
    7. '_' → logprob: -15.251174926757812
    8. '_COST' → logprob: -15.251174926757812
    9. '\' → logprob: -16.001174926757812
    10. '_time' → logprob: -16.376174926757812

Token 846: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0004565327544696629
    2. ' if' → logprob: -8.500456809997559
    3. '<|end|>' → logprob: -9.250456809997559
    4. '       ' → logprob: -9.875456809997559
    5. '
' → logprob: -10.500456809997559
    6. ' return' → logprob: -10.625456809997559
    7. 'return' → logprob: -10.875456809997559
    8. ' 
' → logprob: -11.125456809997559
    9. '        
' → logprob: -12.625456809997559
    10. '*' → logprob: -12.750456809997559

Token 847: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.000939450750593096
    2. 'return' → logprob: -7.12593936920166
    3. ' return' → logprob: -9.62593936920166
    4. ' if' → logprob: -10.75093936920166
    5. 'if' → logprob: -11.12593936920166
    6. '
' → logprob: -11.25093936920166
    7. '   ' → logprob: -11.62593936920166
    8. '	' → logprob: -12.25093936920166
    9. '<|end|>' → logprob: -13.50093936920166
    10. '           ' → logprob: -13.87593936920166

Token 848: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.012548266910016537
    2. '       ' → logprob: -4.512548446655273
    3. ' return' → logprob: -6.762548446655273
    4. 'if' → logprob: -8.012548446655273
    5. ' if' → logprob: -12.012548446655273
    6. '	return' → logprob: -12.637548446655273
    7. '
' → logprob: -13.512548446655273
    8. '   ' → logprob: -15.012548446655273
    9. 'eturn' → logprob: -15.637548446655273
    10. '```' → logprob: -15.887548446655273

Token 849: ' reward' (ID: 16563)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.2474144995212555
    2. 'reward' → logprob: -1.622414469718933
    3. ' max' → logprob: -3.8724145889282227
    4. ' reward' → logprob: -6.997414588928223
    5. 'int' → logprob: -11.747414588928223
    6. '   ' → logprob: -11.872414588928223
    7. '(max' → logprob: -12.122414588928223
    8. '	max' → logprob: -12.872414588928223
    9. '
' → logprob: -13.247414588928223
    10. 'maximum' → logprob: -13.372414588928223

Token 850: '


' (ID: 2499)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 851: 'class' (ID: 1444)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 852: ' Input' (ID: 10090)
  Prédit: 'Car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Car' → logprob: -0.6904133558273315
    2. 'Solution' → logprob: -1.5654133558273315
    3. 'Test' → logprob: -2.315413475036621
    4. 'Reward' → logprob: -3.690413475036621
    5. ' Car' → logprob: -4.190413475036621
    6. ' unittest' → logprob: -4.440413475036621
    7. 'Main' → logprob: -4.565413475036621
    8. 'Unit' → logprob: -4.815413475036621
    9. 'Worker' → logprob: -4.940413475036621
    10. 'int' → logprob: -4.940413475036621

Token 853: 'Parser' (ID: 9231)
  Prédit: 'Parser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Parser' → logprob: -0.657823383808136
    2. 'Handler' → logprob: -1.1578233242034912
    3. 'Reader' → logprob: -2.532823324203491
    4. ':' → logprob: -3.407823324203491
    5. 'Processor' → logprob: -3.532823324203491
    6. 'Data' → logprob: -4.90782356262207
    7. 'Output' → logprob: -5.53282356262207
    8. 'Manager' → logprob: -5.78282356262207
    9. 'Provider' → logprob: -6.28282356262207
    10. 'Adapter' → logprob: -6.40782356262207

Token 854: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004118769429624081
    2. ':
' → logprob: -5.504118919372559
    3. '<|end|>' → logprob: -11.504118919372559
    4. '):' → logprob: -12.129118919372559
    5. '(object' → logprob: -12.254118919372559
    6. '():' → logprob: -12.504118919372559
    7. ':def' → logprob: -12.629118919372559
    8. '(' → logprob: -13.004118919372559
    9. ':

' → logprob: -13.504118919372559
    10. '():
' → logprob: -13.629118919372559

Token 855: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.029828468337655067
    2. ' def' → logprob: -3.9048285484313965
    3. 'def' → logprob: -4.7798285484313965
    4. 'class' → logprob: -7.4048285484313965
    5. '	def' → logprob: -9.529828071594238
    6. ' class' → logprob: -10.154828071594238
    7. 'import' → logprob: -10.279828071594238
    8. ':' → logprob: -10.904828071594238
    9. '```' → logprob: -11.029828071594238
    10. ' ' → logprob: -11.654828071594238

Token 856: ' @' (ID: 759)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.012302669696509838
    2. ' def' → logprob: -4.512302875518799
    3. '@' (adapté à ' @') → logprob: -7.262302875518799
    4. '   ' → logprob: -7.512302875518799
    5. ' @' → logprob: -12.26230239868164
    6. '```' → logprob: -14.63730239868164
    7. 'class' → logprob: -14.76230239868164
    8. 'from' → logprob: -15.01230239868164
    9. '	def' → logprob: -15.26230239868164
    10. 'staticmethod' → logprob: -16.38730239868164

Token 857: 'staticmethod' (ID: 53164)
  Prédit: 'staticmethod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'staticmethod' → logprob: -9.13388703338569e-06
    2. 'static' → logprob: -12.000009536743164
    3. 'classmethod' → logprob: -12.750009536743164
    4. ' static' → logprob: -17.875009536743164
    5. 'stat' → logprob: -19.625009536743164
    6. 'sta' → logprob: -20.000009536743164
    7. 'dat' → logprob: -20.500009536743164
    8. 'st' → logprob: -21.250009536743164
    9. 'Static' → logprob: -22.375009536743164
    10. '_static' → logprob: -24.750009536743164

Token 858: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0006883674650453031
    2. ' def' → logprob: -7.500688552856445
    3. '   ' → logprob: -9.000688552856445
    4. '
' → logprob: -11.750688552856445
    5. '(def' → logprob: -13.625688552856445
    6. '	def' → logprob: -13.875688552856445
    7. ':def' → logprob: -13.875688552856445
    8. ' ' → logprob: -15.250688552856445
    9. '  ' → logprob: -15.375688552856445
    10. '_def' → logprob: -15.500688552856445

Token 859: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.003383391536772251
    2. ' def' → logprob: -5.753383159637451
    3. '   ' → logprob: -8.50338363647461
    4. '	def' → logprob: -13.25338363647461
    5. '
' → logprob: -13.75338363647461
    6. ' ' → logprob: -18.00338363647461
    7. ':def' → logprob: -18.00338363647461
    8. '```' → logprob: -18.25338363647461
    9. '  ' → logprob: -18.50338363647461
    10. '    
' → logprob: -19.12838363647461

Token 860: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -3.5597102396423e-05
    2. ' def' → logprob: -10.250035285949707
    3. '
' → logprob: -16.250036239624023
    4. 'classmethod' → logprob: -17.875036239624023
    5. 'staticmethod' → logprob: -18.875036239624023
    6. 'from' → logprob: -19.125036239624023
    7. '	def' → logprob: -19.500036239624023
    8. '   ' → logprob: -19.750036239624023
    9. '```' → logprob: -19.750036239624023
    10. 'import' → logprob: -20.250036239624023

Token 861: ' parse' (ID: 8420)
  Prédit: 'parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parse' → logprob: -0.03844340890645981
    2. 'read' → logprob: -3.2884433269500732
    3. ' parse' → logprob: -7.913443565368652
    4. 'staticmethod' → logprob: -11.538443565368652
    5. 'def' → logprob: -11.663443565368652
    6. 'get' → logprob: -12.163443565368652
    7. ' read' → logprob: -12.413443565368652
    8. 'from' → logprob: -12.538443565368652
    9. 'decode' → logprob: -13.038443565368652
    10. 'input' → logprob: -14.413443565368652

Token 862: '_input' (ID: 12507)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.11420030891895294
    2. '():
' → logprob: -2.9892003536224365
    3. '()' → logprob: -3.2392003536224365
    4. '(input' → logprob: -4.489200115203857
    5. '(lines' → logprob: -5.239200115203857
    6. 'input' → logprob: -7.489200115203857
    7. '_input' → logprob: -8.114200592041016
    8. '(' → logprob: -8.989200592041016
    9. '_lines' → logprob: -9.489200592041016
    10. '(line' → logprob: -9.614200592041016

Token 863: '()' (ID: 416)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.20258143544197083
    2. '()' → logprob: -2.2025814056396484
    3. '():
' → logprob: -2.7025814056396484
    4. '(' → logprob: -6.202581405639648
    5. '(lines' → logprob: -6.452581405639648
    6. '(line' → logprob: -6.702581405639648
    7. '(input' → logprob: -7.327581405639648
    8. '(self' → logprob: -9.952581405639648
    9. '(data' → logprob: -10.077581405639648
    10. '(cls' → logprob: -10.202581405639648

Token 864: ' ->' (ID: 2747)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.7679821252822876
    2. '(input' → logprob: -1.0179821252822876
    3. '():' → logprob: -2.517982006072998
    4. '(line' → logprob: -3.267982006072998
    5. '(lines' → logprob: -4.142982006072998
    6. '(' → logprob: -4.517982006072998
    7. '()->' → logprob: -4.892982006072998
    8. '():
' → logprob: -5.017982006072998
    9. '(data' → logprob: -5.767982006072998
    10. '(source' → logprob: -5.767982006072998

Token 865: ' Carpenter' (ID: 132788)
  Prédit: 'Tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Tuple' → logprob: -0.06916848570108414
    2. 'List' → logprob: -3.3191685676574707
    3. ' Tuple' → logprob: -3.8191685676574707
    4. '"' → logprob: -5.444168567657471
    5. ''' → logprob: -6.194168567657471
    6. ' List' → logprob: -7.694168567657471
    7. 'None' → logprob: -7.944168567657471
    8. 'tuple' → logprob: -8.069168090820312
    9. 'Dict' → logprob: -8.319168090820312
    10. 'int' → logprob: -8.319168090820312

Token 866: 'Reward' (ID: 43608)
  Prédit: 'Reward'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Reward' → logprob: -1.700132997939363e-05
    2. '_reward' → logprob: -12.000017166137695
    3. ' Reward' → logprob: -12.125017166137695
    4. 'Rewards' → logprob: -13.875017166137695
    5. '
' → logprob: -14.000017166137695
    6. 'Input' → logprob: -14.875017166137695
    7. 'reward' → logprob: -14.875017166137695
    8. 'Request' → logprob: -15.000017166137695
    9. '```' → logprob: -15.250017166137695
    10. '{' → logprob: -15.500017166137695

Token 867: 'Calculator' (ID: 50159)
  Prédit: 'Calculator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Calculator' → logprob: -1.5213274309644476e-05
    2. 'culator' → logprob: -12.375015258789062
    3. 'calculator' → logprob: -12.500015258789062
    4. 'Parser' → logprob: -12.750015258789062
    5. 'int' → logprob: -14.500015258789062
    6. '   ' → logprob: -14.625015258789062
    7. '<int' → logprob: -15.000015258789062
    8. 'Calculation' → logprob: -15.250015258789062
    9. ' Calculator' → logprob: -15.250015258789062
    10. '<|end|>' → logprob: -15.375015258789062

Token 868: ':
' (ID: 734)
  Prédit: '():
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():
' → logprob: -0.5280930399894714
    2. '():' → logprob: -0.9030930399894714
    3. '()' → logprob: -5.653092861175537
    4. ':' → logprob: -6.778092861175537
    5. ':
' → logprob: -8.528093338012695
    6. '():
' → logprob: -9.528093338012695
    7. '()->' → logprob: -10.903093338012695
    8. '   ' → logprob: -12.028093338012695
    9. '()[' → logprob: -13.153093338012695
    10. '()>' → logprob: -13.278093338012695

Token 869: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006089476868510246
    2. 'import' → logprob: -6.256089687347412
    3. ' lines' → logprob: -7.006089687347412
    4. 'line' → logprob: -7.381089687347412
    5. '```' → logprob: -7.381089687347412
    6. 'lines' → logprob: -7.506089687347412
    7. '
' → logprob: -8.006089210510254
    8. '        
' → logprob: -8.381089210510254
    9. ' line' → logprob: -8.756089210510254
    10. '   ' → logprob: -8.881089210510254

Token 870: ' import' (ID: 1588)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.013237756676971912
    2. 'import' (adapté à ' import') → logprob: -4.513237953186035
    3. ' n' → logprob: -6.263237953186035
    4. 'num' → logprob: -8.763237953186035
    5. '   ' → logprob: -9.263237953186035
    6. ' import' → logprob: -11.013237953186035
    7. '```' → logprob: -11.638237953186035
    8. 'N' → logprob: -13.638237953186035
    9. 'raw' → logprob: -13.763237953186035
    10. '_n' → logprob: -14.013237953186035

Token 871: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -4.56102097814437e-05
    2. ' sys' → logprob: -10.000045776367188
    3. '=sys' → logprob: -16.375045776367188
    4. 'io' → logprob: -19.000045776367188
    5. '	sys' → logprob: -19.000045776367188
    6. '(sys' → logprob: -19.750045776367188
    7. 'built' → logprob: -20.250045776367188
    8. 'stdin' → logprob: -20.750045776367188
    9. '_sys' → logprob: -21.250045776367188
    10. '```' → logprob: -21.500045776367188

Token 872: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01234953198581934
    2. 'input' → logprob: -5.012349605560303
    3. '
' → logprob: -6.012349605560303
    4. '        
' → logprob: -7.012349605560303
    5. 'data' → logprob: -7.137349605560303
    6. 'n' → logprob: -7.762349605560303
    7. 'line' → logprob: -8.387349128723145
    8. ' lines' → logprob: -8.387349128723145
    9. 'lines' → logprob: -8.387349128723145
    10. ' input' → logprob: -8.637349128723145

Token 873: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0031962506473064423
    2. 'input' → logprob: -6.1281962394714355
    3. 'line' → logprob: -8.003196716308594
    4. '        
' → logprob: -8.503196716308594
    5. '
' → logprob: -8.628196716308594
    6. 'data' → logprob: -8.878196716308594
    7. 'lines' → logprob: -9.753196716308594
    8. ' lines' → logprob: -10.128196716308594
    9. '   ' → logprob: -11.253196716308594
    10. ' line' → logprob: -11.753196716308594

Token 874: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' (adapté à ' input') → logprob: -0.2916424572467804
    2. 'data' → logprob: -1.541642427444458
    3. 'lines' → logprob: -3.416642427444458
    4. ' input' → logprob: -6.041642665863037
    5. ' lines' → logprob: -6.166642665863037
    6. '   ' → logprob: -7.416642665863037
    7. 'line' → logprob: -7.916642665863037
    8. 'n' → logprob: -8.166642189025879
    9. '       ' → logprob: -8.791642189025879
    10. ' data' → logprob: -8.916642189025879

Token 875: '_lines' (ID: 42980)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.191941499710083
    2. '_data' → logprob: -2.316941499710083
    3. '_line' → logprob: -3.066941499710083
    4. '_lines' → logprob: -4.566941261291504
    5. '_' → logprob: -4.816941261291504
    6. '=' → logprob: -5.316941261291504
    7. ' =' → logprob: -6.066941261291504
    8. 'data' → logprob: -6.566941261291504
    9. '().' → logprob: -6.941941261291504
    10. '_str' → logprob: -7.941941261291504

Token 876: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25217220187187195
    2. '=' → logprob: -1.5021722316741943
    3. '()' → logprob: -8.877172470092773
    4. '   ' → logprob: -9.627172470092773
    5. '       ' → logprob: -10.877172470092773
    6. '=sys' → logprob: -11.752172470092773
    7. '           ' → logprob: -13.252172470092773
    8. '=[]' → logprob: -13.502172470092773
    9. '=input' → logprob: -13.502172470092773
    10. '        ' → logprob: -14.002172470092773

Token 877: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.008614926598966122
    2. ' sys' → logprob: -4.758615016937256
    3. '[' → logprob: -15.008614540100098
    4. '	sys' → logprob: -17.258615493774414
    5. '=sys' → logprob: -17.383615493774414
    6. ' [' → logprob: -17.508615493774414
    7. '(sys' → logprob: -17.758615493774414
    8. 'list' → logprob: -18.758615493774414
    9. 'import' → logprob: -19.508615493774414
    10. '   ' → logprob: -20.008615493774414

Token 878: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.0022357820998877287
    2. 'stdin' → logprob: -6.1272358894348145
    3. '.stdout' → logprob: -10.502235412597656
    4. '.' → logprob: -10.877235412597656
    5. '(stdin' → logprob: -13.502235412597656
    6. '
' → logprob: -14.002235412597656
    7. ' stdin' → logprob: -14.502235412597656
    8. '.readline' → logprob: -15.127235412597656
    9. '.std' → logprob: -15.377235412597656
    10. 'import' → logprob: -15.627235412597656

Token 879: '.read' (ID: 7211)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.016093846410512924
    2. '.readlines' → logprob: -4.266093730926514
    3. '.readline' → logprob: -6.516093730926514
    4. 'buffer' → logprob: -8.391094207763672
    5. '.read' → logprob: -8.516094207763672
    6. 'stdin' → logprob: -11.391094207763672
    7. '_read' → logprob: -12.641094207763672
    8. 'reader' → logprob: -12.891094207763672
    9. ' readline' → logprob: -14.141094207763672
    10. 'readonly' → logprob: -14.266094207763672

Token 880: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00043102685594931245
    2. '()' → logprob: -7.750431060791016
    3. '()
' → logprob: -16.000431060791016
    4. ' ().' → logprob: -16.375431060791016
    5. '_lines' → logprob: -17.000431060791016
    6. '()).' → logprob: -17.375431060791016
    7. '(' → logprob: -17.500431060791016
    8. 'lines' → logprob: -17.500431060791016
    9. '()`' → logprob: -17.625431060791016
    10. 'split' → logprob: -17.625431060791016

Token 881: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.1270294189453125
    2. 'split' → logprob: -2.1270294189453125
    3. 'decode' → logprob: -9.377029418945312
    4. 'read' → logprob: -11.127029418945312
    5. 'rstrip' → logprob: -13.252029418945312
    6. 'lines' → logprob: -16.627029418945312
    7. '(split' → logprob: -17.002029418945312
    8. '```' → logprob: -17.627029418945312
    9. 'replace' → logprob: -18.002029418945312
    10. '(strip' → logprob: -18.002029418945312

Token 882: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0001589618914294988
    2. '()' → logprob: -8.75015926361084
    3. 'split' → logprob: -15.12515926361084
    4. '()
' → logprob: -16.250158309936523
    5. '.split' → logprob: -16.625158309936523
    6. ' ().' → logprob: -17.250158309936523
    7. '()\' → logprob: -18.125158309936523
    8. '(' → logprob: -18.375158309936523
    9. 'spl' → logprob: -19.000158309936523
    10. '()

' → logprob: -19.375158309936523

Token 883: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -4.320199877838604e-07
    2. ' split' → logprob: -14.875
    3. '(split' → logprob: -17.0
    4. 'spl' → logprob: -19.5
    5. 'decode' → logprob: -20.5
    6. '```' → logprob: -20.5
    7. 'lines' → logprob: -21.5
    8. '.split' → logprob: -21.875
    9. 'replace' → logprob: -22.5
    10. 'strip' → logprob: -22.5

Token 884: 'lines' (ID: 10105)
  Prédit: 'lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.6590107679367065
    2. '('\' → logprob: -0.9090107679367065
    3. '()' → logprob: -2.659010887145996
    4. '("\' → logprob: -4.659010887145996
    5. '()\' → logprob: -9.034010887145996
    6. '()
' → logprob: -9.284010887145996
    7. '(' → logprob: -12.284010887145996
    8. ''\' → logprob: -13.534010887145996
    9. '()[' → logprob: -14.159010887145996
    10. '()

' → logprob: -14.409010887145996

Token 885: '()
' (ID: 1234)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001890672487206757
    2. '
' → logprob: -7.751890659332275
    3. '()' → logprob: -7.876890659332275
    4. '        
' → logprob: -7.876890659332275
    5. '<|end|>' → logprob: -8.001891136169434
    6. '[' → logprob: -9.001891136169434
    7. '[
' → logprob: -9.626891136169434
    8. ',' → logprob: -10.126891136169434
    9. '<|end|>' → logprob: -10.626891136169434
    10. '[]' → logprob: -10.751891136169434

Token 886: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002165009966120124
    2. 'n' → logprob: -6.252164840698242
    3. 'num' → logprob: -9.127164840698242
    4. '```' → logprob: -10.002164840698242
    5. ' n' → logprob: -10.377164840698242
    6. 'line' → logprob: -11.002164840698242
    7. 'i' → logprob: -11.002164840698242
    8. 'idx' → logprob: -12.127164840698242
    9. '   ' → logprob: -13.002164840698242
    10. '        
' → logprob: -13.252164840698242

Token 887: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.0012427325127646327
    2. '       ' → logprob: -7.501242637634277
    3. ' n' → logprob: -7.626242637634277
    4. 'num' → logprob: -8.876242637634277
    5. '```' → logprob: -10.126242637634277
    6. 'N' → logprob: -12.001242637634277
    7. 'nm' → logprob: -12.626242637634277
    8. '	n' → logprob: -12.751242637634277
    9. '(n' → logprob: -13.251242637634277
    10. '
' → logprob: -13.376242637634277

Token 888: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003513125702738762
    2. '=' → logprob: -8.500350952148438
    3. ' ,' → logprob: -9.625350952148438
    4. ',n' → logprob: -10.000350952148438
    5. ' =' → logprob: -11.125350952148438
    6. ',num' → logprob: -13.125350952148438
    7. '<|end|>' → logprob: -13.125350952148438
    8. ',m' → logprob: -13.250350952148438
    9. '_,' → logprob: -13.375350952148438
    10. ',int' → logprob: -13.625350952148438

Token 889: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -9.662937372922897e-05
    2. ' int' → logprob: -9.250096321105957
    3. '       ' → logprob: -15.125096321105957
    4. '[int' → logprob: -15.250096321105957
    5. 'ints' → logprob: -18.375097274780273
    6. 'len' → logprob: -18.750097274780273
    7. '=int' → logprob: -18.750097274780273
    8. '<int' → logprob: -19.000097274780273
    9. '(int' → logprob: -19.125097274780273
    10. ' ' → logprob: -19.250097274780273

Token 890: '(input' (ID: 10054)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.25193148851394653
    2. '(input' → logprob: -1.5019314289093018
    3. ' input' → logprob: -13.251931190490723
    4. '(' → logprob: -14.376931190490723
    5. '<input' → logprob: -17.12693214416504
    6. '=input' → logprob: -17.25193214416504
    7. '	input' → logprob: -19.37693214416504
    8. '(
' → logprob: -19.37693214416504
    9. ',input' → logprob: -19.62693214416504
    10. 'Input' → logprob: -19.62693214416504

Token 891: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -9.729906196298543e-06
    2. 'lines' → logprob: -11.875009536743164
    3. '[' → logprob: -13.625009536743164
    4. '```' → logprob: -15.000009536743164
    5. '(' → logprob: -15.125009536743164
    6. '()' → logprob: -15.500009536743164
    7. '(lines' → logprob: -15.625009536743164
    8. '()[' → logprob: -16.500009536743164
    9. '_layers' → logprob: -16.500009536743164
    10. ')' → logprob: -16.500009536743164

Token 892: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.5776860184123507e-06
    2. '0' → logprob: -13.12500286102295
    3. '   ' → logprob: -15.12500286102295
    4. ' [' → logprob: -16.500001907348633
    5. '```' → logprob: -17.750001907348633
    6. '1' → logprob: -17.875001907348633
    7. '\[' → logprob: -18.125001907348633
    8. '       ' → logprob: -18.375001907348633
    9. '(' → logprob: -18.375001907348633
    10. '()[' → logprob: -18.375001907348633

Token 893: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.319370302458992e-06
    2. '[' → logprob: -12.250005722045898
    3. ' ' → logprob: -14.750005722045898
    4. '1' → logprob: -17.1250057220459
    5. '   ' → logprob: -17.1250057220459
    6. '```' → logprob: -18.2500057220459
    7. '
' → logprob: -18.5000057220459
    8. '`' → logprob: -19.9375057220459
    9. '۰' → logprob: -20.0625057220459
    10. '00' → logprob: -20.4375057220459

Token 894: '].' (ID: 1651)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.17543789744377136
    2. '.split' → logprob: -2.0504379272460938
    3. '])' → logprob: -4.175437927246094
    4. '[' → logprob: -5.300437927246094
    5. '.strip' → logprob: -5.425437927246094
    6. ')
' → logprob: -5.550437927246094
    7. '().' → logprob: -7.175437927246094
    8. '       ' → logprob: -7.175437927246094
    9. '   ' → logprob: -7.300437927246094
    10. ' )' → logprob: -7.550437927246094

Token 895: 'strip' (ID: 23905)
  Prédit: 'split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.10020774602890015
    2. 'strip' → logprob: -2.350207805633545
    3. ' split' → logprob: -14.475207328796387
    4. 'rstrip' → logprob: -14.600207328796387
    5. '(split' → logprob: -16.475208282470703
    6. ' strip' → logprob: -17.350208282470703
    7. 'spl' → logprob: -18.350208282470703
    8. 'plit' → logprob: -18.475208282470703
    9. '.split' → logprob: -19.975208282470703
    10. '_split' → logprob: -20.225208282470703

Token 896: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.13894425332546234
    2. '())' → logprob: -2.138944149017334
    3. ')
' → logprob: -4.888944149017334
    4. '())
' → logprob: -5.513944149017334
    5. '()' → logprob: -8.263944625854492
    6. ' )' → logprob: -9.888944625854492
    7. '().' → logprob: -10.513944625854492
    8. '[' → logprob: -10.888944625854492
    9. '()
' → logprob: -11.138944625854492
    10. '(' → logprob: -12.638944625854492

Token 897: '       ' (ID: 309)
  Prédit: ' m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.6435246467590332
    2. 'm' → logprob: -0.7685246467590332
    3. '       ' → logprob: -4.768524646759033
    4. ',m' → logprob: -6.893524646759033
    5. '	m' → logprob: -7.518524646759033
    6. ',' → logprob: -7.768524646759033
    7. '   ' → logprob: -8.518524169921875
    8. '```' → logprob: -10.643524169921875
    9. ' ,' → logprob: -10.893524169921875
    10. '1' → logprob: -11.018524169921875

Token 898: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' (adapté à ' m') → logprob: -0.00014013137842994183
    2. '       ' → logprob: -9.625140190124512
    3. ' m' → logprob: -9.625140190124512
    4. '	m' → logprob: -12.750140190124512
    5. '```' → logprob: -13.875140190124512
    6. '   ' → logprob: -14.125140190124512
    7. ',m' → logprob: -14.250140190124512
    8. '        
' → logprob: -14.375140190124512
    9. 'idx' → logprob: -14.625140190124512
    10. '[m' → logprob: -15.000140190124512

Token 899: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.039320364594459534
    2. '=' → logprob: -3.289320468902588
    3. ',' → logprob: -6.789320468902588
    4. ' ' → logprob: -9.03931999206543
    5. ' ,' → logprob: -10.66431999206543
    6. ' =
' → logprob: -12.03931999206543
    7. '=int' → logprob: -13.16431999206543
    8. ')' → logprob: -14.91431999206543
    9. '<|end|>' → logprob: -15.03931999206543
    10. ' =
' → logprob: -15.16431999206543

Token 900: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.00033558503491804004
    2. ' int' → logprob: -8.000335693359375
    3. '[int' → logprob: -16.250335693359375
    4. '=int' → logprob: -17.875335693359375
    5. '(int' → logprob: -18.750335693359375
    6. '<int' → logprob: -19.375335693359375
    7. ' ' → logprob: -19.875335693359375
    8. '	int' → logprob: -21.250335693359375
    9. '   ' → logprob: -21.375335693359375
    10. ':int' → logprob: -22.000335693359375

Token 901: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.009297938086092472
    2. 'input' → logprob: -4.884297847747803
    3. 'int' → logprob: -6.634297847747803
    4. ' (' → logprob: -8.134298324584961
    5. '(int' → logprob: -9.884298324584961
    6. ' input' → logprob: -11.134298324584961
    7. ')' → logprob: -12.259298324584961
    8. '(' → logprob: -12.634298324584961
    9. '(lines' → logprob: -13.134298324584961
    10. 'lines' → logprob: -13.134298324584961

Token 902: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -0.914333164691925
    2. '[' → logprob: -1.0393331050872803
    3. '1' → logprob: -1.7893331050872803
    4. '(' → logprob: -2.7893331050872803
    5. '```' → logprob: -4.664333343505859
    6. '()[' → logprob: -5.789333343505859
    7. '=' → logprob: -6.164333343505859
    8. 'lines' → logprob: -7.289333343505859
    9. ')' → logprob: -7.664333343505859
    10. ')[' → logprob: -8.78933334350586

Token 903: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.14930398762226105
    2. '1' → logprob: -2.024303913116455
    3. '][' → logprob: -6.274303913116455
    4. '].' → logprob: -6.899303913116455
    5. ').' → logprob: -6.899303913116455
    6. '(' → logprob: -7.399303913116455
    7. '=' → logprob: -7.524303913116455
    8. ')[' → logprob: -8.274304389953613
    9. '
' → logprob: -8.399304389953613
    10. ')' → logprob: -8.524304389953613

Token 904: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.961759259458631e-06
    2. ' ' → logprob: -12.500004768371582
    3. '0' → logprob: -15.375004768371582
    4. '   ' → logprob: -15.625004768371582
    5. '2' → logprob: -15.750004768371582
    6. '```' → logprob: -16.0000057220459
    7. '  ' → logprob: -16.1875057220459
    8. '
' → logprob: -16.2500057220459
    9. '     ' → logprob: -16.6250057220459
    10. '    ' → logprob: -16.9375057220459

Token 905: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.005598003044724464
    2. '])' → logprob: -5.380598068237305
    3. ']' → logprob: -7.005598068237305
    4. '])
' → logprob: -11.130598068237305
    5. ' ].' → logprob: -11.380598068237305
    6. '][' → logprob: -11.505598068237305
    7. ']
' → logprob: -11.880598068237305
    8. '()].' → logprob: -12.005598068237305
    9. ').' → logprob: -12.505598068237305
    10. '[' → logprob: -13.005598068237305

Token 906: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -4.320199877838604e-07
    2. ' strip' → logprob: -15.75
    3. 'split' → logprob: -16.25
    4. '.strip' → logprob: -16.25
    5. '(strip' → logprob: -19.125
    6. 'rstrip' → logprob: -19.75
    7. '```' → logprob: -20.875
    8. 'str' → logprob: -21.625
    9. '_strip' → logprob: -21.75
    10. 'trim' → logprob: -21.875

Token 907: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.06502377241849899
    2. ')' → logprob: -3.44002366065979
    3. '())
' → logprob: -4.190023899078369
    4. '()' → logprob: -4.190023899078369
    5. '()
' → logprob: -7.815023899078369
    6. ')
' → logprob: -8.690023422241211
    7. ' ())' → logprob: -12.315023422241211
    8. '()[' → logprob: -12.440023422241211
    9. ' )' → logprob: -12.440023422241211
    10. '(),' → logprob: -12.690023422241211

Token 908: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012009546160697937
    2. 'edges' → logprob: -4.762009620666504
    3. 'i' → logprob: -6.762009620666504
    4. 'lines' → logprob: -7.012009620666504
    5. ' edges' → logprob: -8.012009620666504
    6. '	' → logprob: -8.387009620666504
    7. 'n' → logprob: -8.762009620666504
    8. 'index' → logprob: -9.262009620666504
    9. '```' → logprob: -9.262009620666504
    10. 'idx' → logprob: -9.512009620666504

Token 909: ' edges' (ID: 22569)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' (adapté à ' edges') → logprob: -0.00025526012177579105
    2. 'edge' → logprob: -9.500255584716797
    3. 'index' → logprob: -9.750255584716797
    4. 'idx' → logprob: -10.000255584716797
    5. 's' → logprob: -10.375255584716797
    6. 'lines' → logprob: -10.875255584716797
    7. ' edges' → logprob: -11.750255584716797
    8. 'i' → logprob: -11.875255584716797
    9. 'current' → logprob: -12.125255584716797
    10. '       ' → logprob: -13.500255584716797

Token 910: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.007625557482242584
    2. '=' → logprob: -4.882625579833984
    3. '=[]' → logprob: -11.257625579833984
    4. ':' → logprob: -12.757625579833984
    5. '_lines' → logprob: -13.257625579833984
    6. '=[]
' → logprob: -13.757625579833984
    7. '   ' → logprob: -15.507625579833984
    8. ' =
' → logprob: -15.882625579833984
    9. ',' → logprob: -16.382625579833984
    10. ' =[' → logprob: -16.882625579833984

Token 911: ' []
' (ID: 8911)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5981974601745605
    2. '[]' → logprob: -1.5981974601745605
    3. '[
' → logprob: -2.0981974601745605
    4. '[]
' → logprob: -2.0981974601745605
    5. '[line' → logprob: -7.0981974601745605
    6. '[int' → logprob: -7.3481974601745605
    7. '[list' → logprob: -8.473197937011719
    8. '[array' → logprob: -8.723197937011719
    9. '[input' → logprob: -8.848197937011719
    10. '[(' → logprob: -9.473197937011719

Token 912: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4219695031642914
    2. 'for' → logprob: -1.4219695329666138
    3. ' for' → logprob: -2.296969413757324
    4. '	for' → logprob: -6.171969413757324
    5. '   ' → logprob: -8.796969413757324
    6. '	' → logprob: -9.046969413757324
    7. '	   ' → logprob: -10.921969413757324
    8. '<|end|>' → logprob: -11.171969413757324
    9. ' i' → logprob: -11.546969413757324
    10. '[' → logprob: -11.796969413757324

Token 913: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.014230852946639061
    2. ' for' → logprob: -4.264230728149414
    3. '       ' → logprob: -9.764230728149414
    4. '	for' → logprob: -11.889230728149414
    5. '   ' → logprob: -13.639230728149414
    6. '```' → logprob: -13.764230728149414
    7. 'i' → logprob: -15.139230728149414
    8. 'line' → logprob: -15.514230728149414
    9. 'idx' → logprob: -15.764230728149414
    10. ' i' → logprob: -16.639230728149414

Token 914: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.011085312813520432
    2. 'line' → logprob: -4.511085510253906
    3. ' i' → logprob: -10.261085510253906
    4. ' line' → logprob: -13.011085510253906
    5. '_line' → logprob: -15.261085510253906
    6. '_i' → logprob: -16.386085510253906
    7. 'idx' → logprob: -17.386085510253906
    8. 'index' → logprob: -19.011085510253906
    9. '   ' → logprob: -19.636085510253906
    10. '	i' → logprob: -20.511085510253906

Token 915: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.012514711357653141
    2. 'in' → logprob: -4.387514591217041
    3. 'range' → logprob: -13.1375150680542
    4. ' ' → logprob: -14.2625150680542
    5. '   ' → logprob: -14.6375150680542
    6. '	in' → logprob: -14.7625150680542
    7. ',' → logprob: -15.3875150680542
    8. 'In' → logprob: -15.5125150680542
    9. 's' → logprob: -15.7625150680542
    10. 'i' → logprob: -15.8875150680542

Token 916: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -9.627176768844947e-05
    2. ' range' → logprob: -9.250096321105957
    3. '   ' → logprob: -15.625096321105957
    4. '
' → logprob: -18.00009536743164
    5. '	range' → logprob: -18.12509536743164
    6. ' ' → logprob: -18.75009536743164
    7. '(range' → logprob: -18.87509536743164
    8. '  ' → logprob: -19.12509536743164
    9. 'in' → logprob: -19.25009536743164
    10. '```' → logprob: -19.37509536743164

Token 917: '(m' (ID: 2145)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -6.869017852295656e-06
    2. '(' → logprob: -12.375006675720215
    3. 'range' → logprob: -13.125006675720215
    4. ' ' → logprob: -14.500006675720215
    5. '   ' → logprob: -17.12500762939453
    6. 'for' → logprob: -18.25000762939453
    7. ' range' → logprob: -18.75000762939453
    8. '
' → logprob: -18.87500762939453
    9. '0' → logprob: -19.00000762939453
    10. 'from' → logprob: -19.37500762939453

Token 918: '):
' (ID: 1883)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2636401355266571
    2. ' +' → logprob: -1.6386401653289795
    3. ':' → logprob: -4.6386399269104
    4. '(' → logprob: -4.8886399269104
    5. ',' → logprob: -5.1386399269104
    6. '2' → logprob: -5.2636399269104
    7. '3' → logprob: -5.8886399269104
    8. '):' → logprob: -6.5136399269104
    9. '):
' → logprob: -6.7636399269104
    10. '1' → logprob: -6.8886399269104

Token 919: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04065575450658798
    2. '       ' → logprob: -4.415655612945557
    3. '   ' → logprob: -4.665655612945557
    4. ' lines' → logprob: -4.665655612945557
    5. ' line' → logprob: -5.040655612945557
    6. '	       ' → logprob: -6.665655612945557
    7. '            
' → logprob: -8.665656089782715
    8. ',' → logprob: -8.790656089782715
    9. '```' → logprob: -9.040656089782715
    10. '	   ' → logprob: -9.540656089782715

Token 920: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.13050171732902527
    2. ' a' → logprob: -2.3805017471313477
    3. ' parts' → logprob: -4.630501747131348
    4. 'line' (adapté à ' line') → logprob: -4.630501747131348
    5. 'a' → logprob: -5.755501747131348
    6. '       ' → logprob: -6.255501747131348
    7. '   ' → logprob: -6.755501747131348
    8. ' tokens' → logprob: -6.755501747131348
    9. ' idx' → logprob: -7.505501747131348
    10. ' lines' → logprob: -8.005501747131348

Token 921: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0029555968940258026
    2. '=' → logprob: -6.002955436706543
    3. '_tokens' → logprob: -7.877955436706543
    4. 'tokens' → logprob: -10.252955436706543
    5. 's' → logprob: -10.502955436706543
    6. '=line' → logprob: -10.877955436706543
    7. '   ' → logprob: -11.627955436706543
    8. '_idx' → logprob: -13.502955436706543
    9. ' =
' → logprob: -13.627955436706543
    10. ' ' → logprob: -14.002955436706543

Token 922: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.10020678490400314
    2. ' input' → logprob: -2.3502068519592285
    3. '	input' → logprob: -16.72520637512207
    4. '   ' → logprob: -17.10020637512207
    5. '=input' → logprob: -17.47520637512207
    6. '1' → logprob: -17.97520637512207
    7. '(input' → logprob: -18.60020637512207
    8. ',input' → logprob: -19.72520637512207
    9. '_input' → logprob: -19.85020637512207
    10. '[input' → logprob: -20.97520637512207

Token 923: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -2.339278580620885e-06
    2. 'lines' → logprob: -13.375001907348633
    3. '```' → logprob: -16.125001907348633
    4. '[' → logprob: -16.375001907348633
    5. 'Lines' → logprob: -16.625001907348633
    6. '(lines' → logprob: -16.625001907348633
    7. '_LINES' → logprob: -16.625001907348633
    8. 's' → logprob: -16.625001907348633
    9. '[i' → logprob: -16.750001907348633
    10. '_tokens' → logprob: -17.125001907348633

Token 924: '[' (ID: 58)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.06698039174079895
    2. 'i' → logprob: -2.9419803619384766
    3. '[i' → logprob: -4.816980361938477
    4. '[' → logprob: -5.566980361938477
    5. ' ' → logprob: -10.691980361938477
    6. '3' → logprob: -11.066980361938477
    7. ' i' → logprob: -11.191980361938477
    8. '   ' → logprob: -11.316980361938477
    9. '           ' → logprob: -11.316980361938477
    10. '               ' → logprob: -11.566980361938477

Token 925: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.061980124562978745
    2. 'i' → logprob: -2.8119800090789795
    3. ' i' → logprob: -12.436980247497559
    4. ' ' → logprob: -12.936980247497559
    5. '(i' → logprob: -13.311980247497559
    6. '[i' → logprob: -13.436980247497559
    7. '3' → logprob: -13.936980247497559
    8. '   ' → logprob: -14.186980247497559
    9. '{i' → logprob: -15.811980247497559
    10. 'idx' → logprob: -15.936980247497559

Token 926: ' +' (ID: 659)
  Prédit: '+i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+i' → logprob: -0.5236575603485107
    2. ' +' → logprob: -0.8986575603485107
    3. '].' → logprob: -8.14865779876709
    4. '+' → logprob: -8.77365779876709
    5. 'i' → logprob: -10.02365779876709
    6. '(i' → logprob: -11.27365779876709
    7. '[i' → logprob: -11.52365779876709
    8. '
' → logprob: -11.89865779876709
    9. '][' → logprob: -12.14865779876709
    10. ']' → logprob: -12.27365779876709

Token 927: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -5.836499985889532e-05
    2. ' i' → logprob: -9.7500581741333
    3. '	i' → logprob: -17.000059127807617
    4. '
' → logprob: -18.750059127807617
    5. ')i' → logprob: -19.625059127807617
    6. '<|end|>' → logprob: -20.000059127807617
    7. '(i' → logprob: -20.250059127807617
    8. '[i' → logprob: -20.875059127807617
    9. '{i' → logprob: -20.875059127807617
    10. '*i' → logprob: -21.125059127807617

Token 928: ']
' (ID: 1592)
  Prédit: '].'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.001767170149832964
    2. ']' → logprob: -7.126767158508301
    3. '.strip' → logprob: -7.876767158508301
    4. ']
' → logprob: -8.3767671585083
    5. '.split' → logprob: -8.3767671585083
    6. '.' → logprob: -9.8767671585083
    7. '().' → logprob: -10.0017671585083
    8. ').' → logprob: -11.0017671585083
    9. ' ].' → logprob: -13.0017671585083
    10. 'split' → logprob: -13.1267671585083

Token 929: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.19035732746124268
    2. '       ' → logprob: -2.315357208251953
    3. 'tokens' → logprob: -2.815357208251953
    4. ' =' → logprob: -4.565357208251953
    5. '=' → logprob: -7.190357208251953
    6. ' tokens' → logprob: -7.315357208251953
    7. '_tokens' → logprob: -7.690357208251953
    8. '.split' → logprob: -8.065357208251953
    9. 'parts' → logprob: -8.065357208251953
    10. ',' → logprob: -8.190357208251953

Token 930: ' #' (ID: 1069)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.00043126524542458355
    2. ' a' → logprob: -8.500431060791016
    3. 'parts' → logprob: -8.625431060791016
    4. ' parts' → logprob: -10.750431060791016
    5. '           ' → logprob: -10.875431060791016
    6. 'from' → logprob: -12.750431060791016
    7. 'tokens' → logprob: -13.500431060791016
    8. '_a' → logprob: -14.000431060791016
    9. '            
' → logprob: -14.250431060791016
    10. 'values' → logprob: -14.500431060791016

Token 931: ' split' (ID: 12648)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0008491750340908766
    2. 'parts' → logprob: -7.37584924697876
    3. ' a' → logprob: -8.750848770141602
    4. '           ' → logprob: -10.250848770141602
    5. ' parts' → logprob: -11.250848770141602
    6. 'tokens' → logprob: -12.000848770141602
    7. 'values' → logprob: -12.625848770141602
    8. '_a' → logprob: -13.375848770141602
    9. 'vals' → logprob: -13.875848770141602
    10. 'params' → logprob: -14.125848770141602

Token 932: ' by' (ID: 656)
  Prédit: ' parts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' parts' → logprob: -1.0615366697311401
    2. 'a' → logprob: -1.9365366697311401
    3. ' a' → logprob: -2.0615367889404297
    4. ' =' → logprob: -2.0615367889404297
    5. 'parts' → logprob: -2.1865367889404297
    6. 'tokens' → logprob: -2.8115367889404297
    7. '           ' → logprob: -3.3115367889404297
    8. ' tokens' → logprob: -4.56153678894043
    9. '=a' → logprob: -4.56153678894043
    10. '=' → logprob: -4.81153678894043

Token 933: ' comma' (ID: 64235)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -1.2892444133758545
    2. '()' → logprob: -1.5392444133758545
    3. 'line' → logprob: -1.6642444133758545
    4. 'space' → logprob: -1.6642444133758545
    5. 'spaces' → logprob: -2.7892444133758545
    6. '"' → logprob: -3.2892444133758545
    7. 'split' → logprob: -4.914244651794434
    8. ' spaces' → logprob: -5.164244651794434
    9. 'max' → logprob: -6.039244651794434
    10. ' line' → logprob: -6.164244651794434

Token 934: ' and' (ID: 326)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7784707546234131
    2. ' =' → logprob: -1.403470754623413
    3. ',' → logprob: -1.528470754623413
    4. 'tokens' → logprob: -3.153470754623413
    5. '_tokens' → logprob: -4.778470993041992
    6. '.split' → logprob: -4.903470993041992
    7. 's' → logprob: -4.903470993041992
    8. '=line' → logprob: -5.778470993041992
    9. '.' → logprob: -6.528470993041992
    10. 'parts' → logprob: -6.903470993041992

Token 935: ' convert' (ID: 8452)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.6890907883644104
    2. 'split' → logprob: -1.0640907287597656
    3. ' strip' → logprob: -2.1890907287597656
    4. ' split' → logprob: -3.3140907287597656
    5. 'map' → logprob: -6.939090728759766
    6. 'tokens' → logprob: -7.189090728759766
    7. ' map' → logprob: -7.564090728759766
    8. ' parts' → logprob: -8.189090728759766
    9. 'rstrip' → logprob: -8.189090728759766
    10. ' tokens' → logprob: -8.189090728759766

Token 936: ' to' (ID: 316)
  Prédit: ' parts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' parts' → logprob: -1.1504112482070923
    2. 'parts' → logprob: -1.2754112482070923
    3. 'tokens' → logprob: -1.4004112482070923
    4. '           ' → logprob: -2.5254111289978027
    5. ' tokens' → logprob: -3.7754111289978027
    6. 'values' → logprob: -4.775411128997803
    7. ' line' → logprob: -4.900411128997803
    8. ' =' → logprob: -5.025411128997803
    9. 'line' → logprob: -5.150411128997803
    10. ' edges' → logprob: -5.275411128997803

Token 937: ' integer' (ID: 16336)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.03725368529558182
    2. 'ints' → logprob: -3.6622536182403564
    3. ' int' → logprob: -4.7872538566589355
    4. 'list' → logprob: -6.6622538566589355
    5. ' ints' → logprob: -7.9122538566589355
    6. ' integers' → logprob: -8.037253379821777
    7. ' list' → logprob: -8.412253379821777
    8. 'inte' → logprob: -8.662253379821777
    9. 'map' → logprob: -9.412253379821777
    10. '[int' → logprob: -10.412253379821777

Token 938: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05613473802804947
    2. 'tokens' → logprob: -4.0561347007751465
    3. ' parts' → logprob: -4.8061347007751465
    4. 'edges' → logprob: -4.9311347007751465
    5. 'parts' → logprob: -5.0561347007751465
    6. ' edges' → logprob: -5.1811347007751465
    7. 'values' → logprob: -5.4311347007751465
    8. ',' → logprob: -6.0561347007751465
    9. 'vals' → logprob: -7.4311347007751465
    10. ' tokens' → logprob: -7.5561347007751465

Token 939: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2584295868873596
    2. 'tokens' → logprob: -2.258429527282715
    3. ' parts' → logprob: -3.008429527282715
    4. 'parts' → logprob: -3.633429527282715
    5. ' edges' → logprob: -4.133429527282715
    6. 'values' → logprob: -4.508429527282715
    7. 'edges' → logprob: -4.883429527282715
    8. ' tokens' → logprob: -5.383429527282715
    9. ' =' → logprob: -6.008429527282715
    10. ',' → logprob: -6.508429527282715

Token 940: ' parts' (ID: 7881)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.03720752149820328
    2. 'parts' (adapté à ' parts') → logprob: -3.78720760345459
    3. ' parts' → logprob: -4.91220760345459
    4. ' a' → logprob: -5.41220760345459
    5. '           ' → logprob: -6.91220760345459
    6. 'values' → logprob: -7.28720760345459
    7. 'tokens' → logprob: -9.28720760345459
    8. 'nums' → logprob: -9.41220760345459
    9. ' values' → logprob: -9.91220760345459
    10. 'vals' → logprob: -10.28720760345459

Token 941: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1128939688205719
    2. '=' → logprob: -2.237894058227539
    3. '=line' → logprob: -9.612894058227539
    4. 'tokens' → logprob: -13.487894058227539
    5. '_tokens' → logprob: -14.612894058227539
    6. ' =
' → logprob: -14.862894058227539
    7. ',' → logprob: -14.862894058227539
    8. '=
' → logprob: -15.112894058227539
    9. '＝' → logprob: -15.237894058227539
    10. '=int' → logprob: -15.612894058227539

Token 942: ' list' (ID: 1562)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.3540705442428589
    2. '[line' → logprob: -1.7290705442428589
    3. 'list' → logprob: -2.2290706634521484
    4. ' line' → logprob: -4.604070663452148
    5. ' list' → logprob: -6.104070663452148
    6. '[' → logprob: -7.854070663452148
    7. '[list' → logprob: -8.354070663452148
    8. ' [' → logprob: -8.479070663452148
    9. '(line' → logprob: -12.104070663452148
    10. '=line' → logprob: -12.729070663452148

Token 943: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.006751612760126591
    2. 'map' → logprob: -5.006751537322998
    3. '(' → logprob: -10.506752014160156
    4. '(int' → logprob: -12.756752014160156
    5. '(line' → logprob: -13.506752014160156
    6. ' map' → logprob: -13.631752014160156
    7. '(
' → logprob: -13.631752014160156
    8. ',map' → logprob: -14.506752014160156
    9. '	map' → logprob: -14.756752014160156
    10. '_map' → logprob: -14.881752014160156

Token 944: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0033749574795365334
    2. 'int' → logprob: -6.253375053405762
    3. '(lambda' → logprob: -6.628375053405762
    4. '(str' → logprob: -9.503375053405762
    5. ',int' → logprob: -10.753375053405762
    6. '(' → logprob: -11.503375053405762
    7. 'lambda' → logprob: -11.628375053405762
    8. 'str' → logprob: -12.253375053405762
    9. '[int' → logprob: -13.253375053405762
    10. ' int' → logprob: -14.128375053405762

Token 945: ',' (ID: 11)
  Prédit: '(line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.023604268208146095
    2. 'line' → logprob: -3.773604154586792
    3. ' line' → logprob: -8.773604393005371
    4. ',line' → logprob: -9.148604393005371
    5. '(' → logprob: -9.523604393005371
    6. '[line' → logprob: -12.023604393005371
    7. '=line' → logprob: -12.023604393005371
    8. ',' → logprob: -12.148604393005371
    9. ')' → logprob: -12.523604393005371
    10. '#line' → logprob: -13.273604393005371

Token 946: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.0004473540757317096
    2. ' line' → logprob: -7.7504472732543945
    3. '(line' → logprob: -11.375447273254395
    4. '[line' → logprob: -12.250447273254395
    5. ',line' → logprob: -16.00044822692871
    6. '#line' → logprob: -16.00044822692871
    7. '=line' → logprob: -16.25044822692871
    8. '	line' → logprob: -17.00044822692871
    9. ')' → logprob: -17.37544822692871
    10. '
' → logprob: -18.25044822692871

Token 947: '.split' (ID: 10347)
  Prédit: '.split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.split' → logprob: -0.8728609085083008
    2. '(line' → logprob: -0.9978609085083008
    3. '().' → logprob: -2.247860908508301
    4. '(' → logprob: -3.247860908508301
    5. '.strip' → logprob: -3.497860908508301
    6. '(lambda' → logprob: -4.372860908508301
    7. '(','' → logprob: -4.997860908508301
    8. '(split' → logprob: -5.372860908508301
    9. '.' → logprob: -6.247860908508301
    10. ' .' → logprob: -6.247860908508301

Token 948: '(','' (ID: 170650)
  Prédit: '(',''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(','' → logprob: -0.00960792601108551
    2. '(","' → logprob: -5.134607791900635
    3. '(',' → logprob: -6.134607791900635
    4. '(' → logprob: -7.384607791900635
    5. '(",' → logprob: -7.634607791900635
    6. '())' → logprob: -8.134608268737793
    7. '()))' → logprob: -10.134608268737793
    8. '(',',' → logprob: -10.259608268737793
    9. '('' → logprob: -10.884608268737793
    10. '(),' → logprob: -12.384608268737793

Token 949: ')))
' (ID: 12562)
  Prédit: ')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.001300830626860261
    2. '())))' → logprob: -7.251300811767578
    3. ')))
' → logprob: -8.126300811767578
    4. '')))' → logprob: -8.876300811767578
    5. ')' → logprob: -9.251300811767578
    6. '))' → logprob: -10.876300811767578
    7. '()' → logprob: -11.501300811767578
    8. '")))' → logprob: -11.876300811767578
    9. ')));' → logprob: -11.876300811767578
    10. ' ' → logprob: -12.501300811767578

Token 950: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7133394479751587
    2. '       ' → logprob: -0.8383394479751587
    3. 'edges' → logprob: -2.963339328765869
    4. ' edges' → logprob: -4.213339328765869
    5. '<|end|>' → logprob: -5.213339328765869
    6. ',' → logprob: -5.963339328765869
    7. '(edges' → logprob: -6.838339328765869
    8. '   ' → logprob: -7.588339328765869
    9. ' ,' → logprob: -8.713339805603027
    10. '_edges' → logprob: -8.838339805603027

Token 951: ' edges' (ID: 22569)
  Prédit: ' edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' edges' → logprob: -0.9224494695663452
    2. 'edges' (adapté à ' edges') → logprob: -0.9224494695663452
    3. 'a' → logprob: -1.7974494695663452
    4. ' a' → logprob: -3.6724495887756348
    5. '           ' → logprob: -4.547449588775635
    6. '       ' → logprob: -5.797449588775635
    7. '(edges' → logprob: -10.422449111938477
    8. '	a' → logprob: -10.547449111938477
    9. '_edges' → logprob: -10.797449111938477
    10. '   ' → logprob: -11.422449111938477

Token 952: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00021712594025302678
    2. '.' → logprob: -8.50021743774414
    3. '.extend' → logprob: -12.37521743774414
    4. ' .' → logprob: -12.75021743774414
    5. '           ' → logprob: -13.00021743774414
    6. 'append' → logprob: -13.37521743774414
    7. '.app' → logprob: -13.50021743774414
    8. '.ap' → logprob: -15.00021743774414
    9. ' =' → logprob: -15.25021743774414
    10. ').' → logprob: -15.25021743774414

Token 953: '((' (ID: 2054)
  Prédit: '(parts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(parts' → logprob: -0.3161003887653351
    2. '(tuple' → logprob: -1.3161003589630127
    3. '(' → logprob: -6.691100597381592
    4. 'tuple' → logprob: -7.191100597381592
    5. '((' → logprob: -7.316100597381592
    6. ' (' → logprob: -9.441100120544434
    7. '(
' → logprob: -10.191100120544434
    8. 'parts' → logprob: -10.941100120544434
    9. '(part' → logprob: -11.066100120544434
    10. '(*' → logprob: -11.316100120544434

Token 954: 'parts' (ID: 34761)
  Prédit: 'parts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parts' → logprob: -0.0004046938265673816
    2. ' parts' → logprob: -8.250404357910156
    3. '(parts' → logprob: -9.500404357910156
    4. '*' → logprob: -9.625404357910156
    5. '
' → logprob: -13.125404357910156
    6. '   ' → logprob: -15.000404357910156
    7. ')' → logprob: -16.000404357910156
    8. ' *' → logprob: -16.750404357910156
    9. '_parts' → logprob: -17.000404357910156
    10. 'part' → logprob: -17.875404357910156

Token 955: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.000205566844670102
    2. '0' → logprob: -8.500205993652344
    3. ')' → logprob: -13.750205993652344
    4. '[
' → logprob: -14.125205993652344
    5. ' ' → logprob: -17.125205993652344
    6. ' [' → logprob: -17.250205993652344
    7. '...' → logprob: -17.625205993652344
    8. '(' → logprob: -17.625205993652344
    9. '   ' → logprob: -18.000205993652344
    10. '
' → logprob: -18.125205993652344

Token 956: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.723973582556937e-05
    2. '[' → logprob: -11.250017166137695
    3. ' ' → logprob: -12.750017166137695
    4. '
' → logprob: -13.875017166137695
    5. '   ' → logprob: -15.687517166137695
    6. '1' → logprob: -16.562517166137695
    7. '       ' → logprob: -17.875017166137695
    8. '...' → logprob: -17.875017166137695
    9. '           ' → logprob: -18.062517166137695
    10. ',' → logprob: -18.125017166137695

Token 957: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -7.755678961984813e-05
    2. ' ,' → logprob: -9.625077247619629
    3. ',
' → logprob: -11.500077247619629
    4. '<|end|>' → logprob: -14.125077247619629
    5. '(parts' → logprob: -15.375077247619629
    6. '‌,' → logprob: -16.500078201293945
    7. 'parts' → logprob: -16.750078201293945
    8. '[' → logprob: -16.750078201293945
    9. '),' → logprob: -17.375078201293945
    10. '<|end|>' → logprob: -17.500078201293945

Token 958: ' parts' (ID: 7881)
  Prédit: 'parts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parts' → logprob: -0.5759828686714172
    2. ' parts' → logprob: -0.8259828686714172
    3. '(parts' → logprob: -10.075983047485352
    4. '.parts' → logprob: -14.200983047485352
    5. '<|end|>' → logprob: -15.075983047485352
    6. '_parts' → logprob: -15.700983047485352
    7. ' partes' → logprob: -16.32598304748535
    8. '
' → logprob: -16.95098304748535
    9. ' 
' → logprob: -17.07598304748535
    10. 'Parts' → logprob: -17.20098304748535

Token 959: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.14267989993095398
    2. '1' → logprob: -2.0176799297332764
    3. '-' → logprob: -13.642680168151855
    4. '```' → logprob: -13.892680168151855
    5. '[
' → logprob: -14.392680168151855
    6. '
' → logprob: -14.517680168151855
    7. '...' → logprob: -15.017680168151855
    8. ',' → logprob: -15.267680168151855
    9. '_' → logprob: -15.517680168151855
    10. ' ' → logprob: -15.642680168151855

Token 960: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3856492842023727e-06
    2. ' ' → logprob: -13.750000953674316
    3. '
' → logprob: -16.000001907348633
    4. '[' → logprob: -17.500001907348633
    5. '2' → logprob: -17.625001907348633
    6. '   ' → logprob: -17.750001907348633
    7. '```' → logprob: -17.937501907348633
    8. '۱' → logprob: -18.375001907348633
    9. '１' → logprob: -18.437501907348633
    10. '१' → logprob: -18.812501907348633

Token 961: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00011713240382960066
    2. ' ,' → logprob: -9.500117301940918
    3. '),' → logprob: -10.750117301940918
    4. ',
' → logprob: -11.125117301940918
    5. 'parts' → logprob: -13.500117301940918
    6. '(parts' → logprob: -13.625117301940918
    7. '<|end|>' → logprob: -13.750117301940918
    8. '],' → logprob: -14.125117301940918
    9. ')' → logprob: -15.000117301940918
    10. ' parts' → logprob: -15.125117301940918

Token 962: ' parts' (ID: 7881)
  Prédit: ' parts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' parts' → logprob: -0.16023366153240204
    2. 'parts' → logprob: -1.9102336168289185
    3. '(parts' → logprob: -11.660233497619629
    4. '_parts' → logprob: -15.535233497619629
    5. ' partes' → logprob: -15.660233497619629
    6. '.parts' → logprob: -15.660233497619629
    7. '
' → logprob: -15.785233497619629
    8. 'Parts' → logprob: -16.410234451293945
    9. ' 
' → logprob: -16.910234451293945
    10. ' ' → logprob: -17.160234451293945

Token 963: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0002966127940453589
    2. '2' → logprob: -8.125296592712402
    3. ',' → logprob: -14.500296592712402
    4. '```' → logprob: -16.12529754638672
    5. '[
' → logprob: -16.87529754638672
    6. '
' → logprob: -17.25029754638672
    7. '3' → logprob: -19.12529754638672
    8. ')' → logprob: -19.50029754638672
    9. '   ' → logprob: -19.50029754638672
    10. '][' → logprob: -19.62529754638672

Token 964: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.25
    3. '
' → logprob: -17.625
    4. '   ' → logprob: -17.875
    5. 'parts' → logprob: -18.125
    6. '-' → logprob: -18.375
    7. '  ' → logprob: -19.25
    8. '3' → logprob: -19.25
    9. '２' → logprob: -19.875
    10. '[' → logprob: -19.875

Token 965: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00022427814838010818
    2. ' ,' → logprob: -8.500224113464355
    3. ',
' → logprob: -10.875224113464355
    4. '),' → logprob: -14.750224113464355
    5. 'parts' → logprob: -14.875224113464355
    6. '(parts' → logprob: -15.000224113464355
    7. ' parts' → logprob: -15.375224113464355
    8. '<|end|>' → logprob: -15.625224113464355
    9. '‌,' → logprob: -16.500225067138672
    10. ',p' → logprob: -16.625225067138672

Token 966: ' parts' (ID: 7881)
  Prédit: 'parts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parts' → logprob: -0.04859168455004692
    2. ' parts' → logprob: -3.0485916137695312
    3. '(parts' → logprob: -12.423591613769531
    4. '.parts' → logprob: -16.29859161376953
    5. '_parts' → logprob: -16.79859161376953
    6. '   ' → logprob: -16.92359161376953
    7. '
' → logprob: -17.04859161376953
    8. 'Parts' → logprob: -17.17359161376953
    9. 'part' → logprob: -17.42359161376953
    10. ' partes' → logprob: -18.29859161376953

Token 967: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.061968810856342316
    2. '3' → logprob: -2.8119688034057617
    3. '[
' → logprob: -14.436968803405762
    4. '
' → logprob: -16.061969757080078
    5. '```' → logprob: -16.186969757080078
    6. '][' → logprob: -16.311969757080078
    7. ']' → logprob: -16.561969757080078
    8. '   ' → logprob: -16.561969757080078
    9. ' [' → logprob: -17.561969757080078
    10. ' ' → logprob: -17.811969757080078

Token 968: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.0
    3. '   ' → logprob: -18.0
    4. '[' → logprob: -19.5
    5. '  ' → logprob: -21.0
    6. '4' → logprob: -21.25
    7. '۳' → logprob: -21.375
    8. '３' → logprob: -21.625
    9. '```' → logprob: -21.625
    10. '2' → logprob: -22.25

Token 969: ']))
' (ID: 24801)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0003896815178450197
    2. ')' → logprob: -8.00039005279541
    3. '))
' → logprob: -9.87539005279541
    4. ')))' → logprob: -13.50039005279541
    5. ' ))' → logprob: -14.00039005279541
    6. '),' → logprob: -15.25039005279541
    7. ')
' → logprob: -16.250389099121094
    8. ''))' → logprob: -16.750389099121094
    9. '))

' → logprob: -16.875389099121094
    10. '   ' → logprob: -16.875389099121094

Token 970: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12862218916416168
    2. 's' → logprob: -2.25362229347229
    3. '```' → logprob: -5.003622055053711
    4. '
' → logprob: -5.378622055053711
    5. 'n' → logprob: -5.878622055053711
    6. ' s' → logprob: -7.628622055053711
    7. '        
' → logprob: -8.253622055053711
    8. '   ' → logprob: -8.753622055053711
    9. '	s' → logprob: -9.503622055053711
    10. '``' → logprob: -9.628622055053711

Token 971: ' last' (ID: 2174)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.18038572371006012
    2. ' s' → logprob: -1.930385708808899
    3. '       ' → logprob: -3.9303858280181885
    4. '
' → logprob: -8.68038558959961
    5. '```' → logprob: -10.18038558959961
    6. 'line' → logprob: -10.80538558959961
    7. ' line' → logprob: -10.93038558959961
    8. '   ' → logprob: -11.43038558959961
    9. '	s' → logprob: -11.80538558959961
    10. 'n' → logprob: -11.80538558959961

Token 972: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.07955773174762726
    2. '_three' → logprob: -2.9545576572418213
    3. '_' → logprob: -4.7045578956604
    4. '_lines' → logprob: -4.9545578956604
    5. '_parts' → logprob: -5.4545578956604
    6. 'line' → logprob: -6.8295578956604
    7. '3' → logprob: -7.0795578956604
    8. ' =' → logprob: -8.079557418823242
    9. '_two' → logprob: -8.204557418823242
    10. '_four' → logprob: -8.329557418823242

Token 973: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.009760336950421333
    2. '=' → logprob: -4.63476037979126
    3. '_parts' → logprob: -13.259759902954102
    4. ' =
' → logprob: -13.634759902954102
    5. ' ' → logprob: -14.509759902954102
    6. 'parts' → logprob: -15.259759902954102
    7. 'tokens' → logprob: -15.759759902954102
    8. '=
' → logprob: -15.884759902954102
    9. '=line' → logprob: -15.884759902954102
    10. '_tokens' → logprob: -16.1347599029541

Token 974: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.10569353401660919
    2. ' input' → logprob: -2.8556935787200928
    3. 'list' → logprob: -3.2306935787200928
    4. ' list' → logprob: -5.730693340301514
    5. '   ' → logprob: -12.355693817138672
    6. 'line' → logprob: -12.980693817138672
    7. 'parts' → logprob: -14.980693817138672
    8. '
' → logprob: -15.230693817138672
    9. '    ' → logprob: -15.230693817138672
    10. ' ' → logprob: -15.230693817138672

Token 975: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -0.39391282200813293
    2. ' =' → logprob: -1.5189127922058105
    3. '=' → logprob: -2.6439127922058105
    4. '_parts' → logprob: -4.1439127922058105
    5. '()' → logprob: -5.0189127922058105
    6. '_' → logprob: -6.0189127922058105
    7. '().' → logprob: -6.2689127922058105
    8. 'lines' → logprob: -6.5189127922058105
    9. '_line' → logprob: -6.7689127922058105
    10. '(' → logprob: -7.0189127922058105

Token 976: '[' (ID: 58)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.07274750620126724
    2. '[' → logprob: -2.9477474689483643
    3. ' =' → logprob: -4.822747707366943
    4. '[len' → logprob: -4.947747707366943
    5. '=' → logprob: -6.322747707366943
    6. '       ' → logprob: -8.572747230529785
    7. '
' → logprob: -9.572747230529785
    8. '[n' → logprob: -9.822747230529785
    9. '(-' → logprob: -9.947747230529785
    10. 'len' → logprob: -9.947747230529785

Token 977: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.03834589943289757
    2. '-' → logprob: -3.2883458137512207
    3. 'len' → logprob: -9.163346290588379
    4. '(' → logprob: -9.663346290588379
    5. ' -' → logprob: -10.163346290588379
    6. ' ' → logprob: -10.413346290588379
    7. '   ' → logprob: -11.288346290588379
    8. '[' → logprob: -11.288346290588379
    9. 'm' → logprob: -11.788346290588379
    10. '
' → logprob: -11.913346290588379

Token 978: ' +' (ID: 659)
  Prédit: '+m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+m' → logprob: -0.48035556077957153
    2. ' +' → logprob: -1.1053555011749268
    3. '+' → logprob: -3.2303555011749268
    4. '].' → logprob: -4.855355739593506
    5. '+n' → logprob: -6.730355739593506
    6. '
' → logprob: -7.605355739593506
    7. ']' → logprob: -8.105355262756348
    8. '+
' → logprob: -8.605355262756348
    9. ':].' → logprob: -8.855355262756348
    10. ' +
' → logprob: -9.605355262756348

Token 979: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -2.248469718324486e-05
    2. ' m' → logprob: -11.000022888183594
    3. '
' → logprob: -12.500022888183594
    4. '   ' → logprob: -13.875022888183594
    5. '(m' → logprob: -14.875022888183594
    6. '	m' → logprob: -15.500022888183594
    7. '       ' → logprob: -16.625022888183594
    8. ' ' → logprob: -17.000022888183594
    9. '  ' → logprob: -17.000022888183594
    10. 'len' → logprob: -17.125022888183594

Token 980: ']
' (ID: 1592)
  Prédit: '].'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.7533810138702393
    2. '.split' → logprob: -1.2533810138702393
    3. '
' → logprob: -2.2533810138702393
    4. ']
' → logprob: -3.1283810138702393
    5. '       ' → logprob: -3.2533810138702393
    6. '.strip' → logprob: -3.3783810138702393
    7. 'split' → logprob: -4.75338077545166
    8. ']' → logprob: -5.25338077545166
    9. ').' → logprob: -5.75338077545166
    10. '.' → logprob: -6.75338077545166

Token 981: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.28580591082572937
    2. 's' → logprob: -2.1608059406280518
    3. 'parts' → logprob: -2.2858059406280518
    4. ' parts' → logprob: -4.035805702209473
    5. ' s' → logprob: -4.410805702209473
    6. 'tokens' → logprob: -7.160805702209473
    7. '
' → logprob: -8.285805702209473
    8. '        
' → logprob: -8.910805702209473
    9. 'params' → logprob: -8.910805702209473
    10. '_parts' → logprob: -9.160805702209473

Token 982: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' (adapté à ' s') → logprob: -0.16640819609165192
    2. 'parts' → logprob: -1.9164081811904907
    3. 'params' → logprob: -5.291408061981201
    4. ' parts' → logprob: -7.166408061981201
    5. ' s' → logprob: -8.79140853881836
    6. 'S' → logprob: -9.16640853881836
    7. '       ' → logprob: -10.16640853881836
    8. 'values' → logprob: -11.66640853881836
    9. '_parts' → logprob: -11.66640853881836
    10. '
' → logprob: -11.79140853881836

Token 983: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0934039056301117
    2. '=' → logprob: -2.7184038162231445
    3. ' =' → logprob: -3.9684038162231445
    4. ' ,' → logprob: -5.5934038162231445
    5. '_parts' → logprob: -7.8434038162231445
    6. 'parts' → logprob: -9.218403816223145
    7. ' parts' → logprob: -9.843403816223145
    8. '<|end|>' → logprob: -12.843403816223145
    9. '_,' → logprob: -13.093403816223145
    10. '_tokens' → logprob: -13.218403816223145

Token 984: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.0028524247463792562
    2. ' g' → logprob: -5.877852439880371
    3. ',' → logprob: -10.627852439880371
    4. ',g' → logprob: -11.377852439880371
    5. '
' → logprob: -12.502852439880371
    6. ' ' → logprob: -13.377852439880371
    7. '*g' → logprob: -13.502852439880371
    8. '*' → logprob: -13.877852439880371
    9. 'rest' → logprob: -13.877852439880371
    10. '_,' → logprob: -14.627852439880371

Token 985: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00024477019906044006
    2. '=' → logprob: -8.500245094299316
    3. ' ,' → logprob: -11.000245094299316
    4. ',P' → logprob: -11.125245094299316
    5. ' =' → logprob: -11.750245094299316
    6. ',p' → logprob: -13.500245094299316
    7. ',s' → logprob: -15.875245094299316
    8. ',g' → logprob: -16.125244140625
    9. 'P' → logprob: -16.500244140625
    10. '_,' → logprob: -16.500244140625

Token 986: ' V' (ID: 631)
  Prédit: 'V'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'V' → logprob: -0.0006203425000421703
    2. 'v' → logprob: -7.500620365142822
    3. ' V' → logprob: -9.625619888305664
    4. '
' → logprob: -14.875619888305664
    5. 'rest' → logprob: -15.625619888305664
    6. ' ' → logprob: -16.125619888305664
    7. '

' → logprob: -16.125619888305664
    8. ' v' → logprob: -16.250619888305664
    9. '*' → logprob: -16.875619888305664
    10. ',V' → logprob: -16.875619888305664

Token 987: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00011355629976605996
    2. ',P' → logprob: -9.250113487243652
    3. ' ,' → logprob: -11.000113487243652
    4. 'P' → logprob: -15.250113487243652
    5. '=' → logprob: -15.500113487243652
    6. ',
' → logprob: -16.50011444091797
    7. ' P' → logprob: -17.25011444091797
    8. ',p' → logprob: -17.37511444091797
    9. ' =' → logprob: -17.62511444091797
    10. '_,' → logprob: -18.50011444091797

Token 988: ' P' (ID: 398)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.0009183663059957325
    2. ' P' → logprob: -7.000918388366699
    3. 'p' → logprob: -12.1259183883667
    4. ',' → logprob: -14.6259183883667
    5. '
' → logprob: -14.7509183883667
    6. ' ' → logprob: -15.2509183883667
    7. ',P' → logprob: -16.000917434692383
    8. ' 
' → logprob: -16.625917434692383
    9. '

' → logprob: -17.000917434692383
    10. '_P' → logprob: -17.250917434692383

Token 989: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2519698739051819
    2. ' =' → logprob: -1.501969814300537
    3. ',' → logprob: -10.126970291137695
    4. ' ' → logprob: -14.501970291137695
    5. '=line' → logprob: -16.626970291137695
    6. '=
' → logprob: -16.751970291137695
    7. '＝' → logprob: -16.751970291137695
    8. ' ,' → logprob: -17.251970291137695
    9. ' =
' → logprob: -17.501970291137695
    10. ')=' → logprob: -17.501970291137695

Token 990: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.10025520622730255
    2. ' map' → logprob: -2.350255250930786
    3. 'list' → logprob: -10.225255012512207
    4. '	map' → logprob: -11.725255012512207
    5. ' list' → logprob: -12.850255012512207
    6. 'tuple' → logprob: -14.600255012512207
    7. 'm' → logprob: -14.850255012512207
    8. '(map' → logprob: -14.975255012512207
    9. '[' → logprob: -15.225255012512207
    10. '
' → logprob: -15.600255012512207

Token 991: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.018153922632336617
    2. 'int' → logprob: -4.018154144287109
    3. '(' → logprob: -12.76815414428711
    4. ' int' → logprob: -14.89315414428711
    5. ',int' → logprob: -15.64315414428711
    6. '(lambda' → logprob: -15.64315414428711
    7. '(
' → logprob: -15.76815414428711
    8. '=int' → logprob: -16.01815414428711
    9. '[int' → logprob: -16.26815414428711
    10. '```' → logprob: -16.89315414428711

Token 992: ',' (ID: 11)
  Prédit: '(last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(last' → logprob: -0.03384888917207718
    2. ',' → logprob: -3.783849000930786
    3. 'last' → logprob: -5.033848762512207
    4. ',last' → logprob: -5.533848762512207
    5. ')' → logprob: -10.033848762512207
    6. '(' → logprob: -10.533848762512207
    7. ' last' → logprob: -12.033848762512207
    8. '[last' → logprob: -12.533848762512207
    9. ')(' → logprob: -13.783848762512207
    10. ' ,' → logprob: -13.908848762512207

Token 993: ' last' (ID: 2174)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.0019286326132714748
    2. ' last' → logprob: -6.251928806304932
    3. '(last' → logprob: -17.126928329467773
    4. 'line' → logprob: -17.626928329467773
    5. '[last' → logprob: -18.376928329467773
    6. '
' → logprob: -20.376928329467773
    7. '	last' → logprob: -20.501928329467773
    8. '           ' → logprob: -20.876928329467773
    9. ' ' → logprob: -21.376928329467773
    10. '_last' → logprob: -21.626928329467773

Token 994: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.016475003212690353
    2. 'line' → logprob: -5.391475200653076
    3. 'split' → logprob: -6.016475200653076
    4. ')' → logprob: -6.516475200653076
    5. '(','' → logprob: -6.766475200653076
    6. '_lines' → logprob: -6.891475200653076
    7. 'token' → logprob: -7.016475200653076
    8. '(' → logprob: -7.766475200653076
    9. '(last' → logprob: -7.766475200653076
    10. 'last' → logprob: -8.016474723815918

Token 995: '.split' (ID: 10347)
  Prédit: '.split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.split' → logprob: -0.24436847865581512
    2. '.strip' → logprob: -1.8693684339523315
    3. '().' → logprob: -2.869368553161621
    4. '.' → logprob: -5.494368553161621
    5. ' .' → logprob: -7.244368553161621
    6. '(line' → logprob: -7.869368553161621
    7. 'split' → logprob: -8.619368553161621
    8. '(split' → logprob: -9.369368553161621
    9. '[line' → logprob: -9.494368553161621
    10. ')' → logprob: -9.619368553161621

Token 996: '(',' (ID: 30548)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.4547167420387268
    2. '()' → logprob: -1.454716682434082
    3. '(','' → logprob: -2.079716682434082
    4. '(',' → logprob: -5.329716682434082
    5. '('' → logprob: -7.204716682434082
    6. ')' → logprob: -7.454716682434082
    7. '(),' → logprob: -8.579716682434082
    8. '(' → logprob: -8.954716682434082
    9. '(","' → logprob: -9.204716682434082
    10. '(),'' → logprob: -9.329716682434082

Token 997: ''))
' (ID: 15277)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.20175009965896606
    2. ')' → logprob: -1.7017500400543213
    3. '))
' → logprob: -8.076749801635742
    4. ')
' → logprob: -11.076749801635742
    5. ''))' → logprob: -12.076749801635742
    6. ' ))' → logprob: -13.576749801635742
    7. ')))' → logprob: -13.701749801635742
    8. ' )' → logprob: -14.201749801635742
    9. '"))' → logprob: -14.576749801635742
    10. '')' → logprob: -14.701749801635742

Token 998: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00023393364972434938
    2. 'return' → logprob: -8.50023365020752
    3. ' return' → logprob: -11.37523365020752
    4. '<|end|>' → logprob: -11.75023365020752
    5. '
' → logprob: -12.12523365020752
    6. '   ' → logprob: -12.87523365020752
    7. '        
' → logprob: -13.37523365020752
    8. '```' → logprob: -14.75023365020752
    9. '	' → logprob: -15.25023365020752
    10. '	return' → logprob: -15.37523365020752

Token 999: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0033453749492764473
    2. '       ' → logprob: -5.753345489501953
    3. ' return' → logprob: -9.128345489501953
    4. '
' → logprob: -9.753345489501953
    5. '   ' → logprob: -14.628345489501953
    6. '	return' → logprob: -15.503345489501953
    7. '```' → logprob: -16.128345489501953
    8. 'calculator' → logprob: -16.128345489501953
    9. '        
' → logprob: -17.003345489501953
    10. '
' → logprob: -18.128345489501953

Token 1000: ' Carpenter' (ID: 132788)
  Prédit: 'Car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Car' → logprob: -0.00033546582562848926
    2. ' Carpenter' → logprob: -8.000335693359375
    3. '
' → logprob: -18.750335693359375
    4. '   ' → logprob: -18.875335693359375
    5. ' carpenter' → logprob: -19.000335693359375
    6. ' Car' → logprob: -19.250335693359375
    7. '_C' → logprob: -20.375335693359375
    8. '`' → logprob: -20.875335693359375
    9. 'car' → logprob: -20.875335693359375
    10. 'C' → logprob: -20.875335693359375

Token 1001: 'Reward' (ID: 43608)
  Prédit: 'Reward'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Reward' → logprob: -5.512236498361744e-07
    2. 'reward' → logprob: -15.375000953674316
    3. 'Rewards' → logprob: -15.500000953674316
    4. ' Reward' → logprob: -17.875
    5. '
' → logprob: -18.125
    6. '_reward' → logprob: -18.875
    7. 'Re' → logprob: -21.5
    8. 'Award' → logprob: -22.0
    9. 'Revenue' → logprob: -22.0
    10. 'Recharge' → logprob: -22.25

Token 1002: 'Calculator' (ID: 50159)
  Prédit: 'Calculator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Calculator' → logprob: -1.1517960956552997e-05
    2. 'calculator' → logprob: -11.500011444091797
    3. 'Reward' → logprob: -13.625011444091797
    4. 'Calcul' → logprob: -16.375011444091797
    5. ' Calculator' → logprob: -17.875011444091797
    6. 'Calc' → logprob: -17.875011444091797
    7. 'Cal' → logprob: -17.875011444091797
    8. 'cal' → logprob: -17.875011444091797
    9. '
' → logprob: -18.000011444091797
    10. 'Calculate' → logprob: -18.125011444091797

Token 1003: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.000785091076977551
    2. '(
' → logprob: -7.625784873962402
    3. '(' → logprob: -8.125784873962402
    4. ' (' → logprob: -14.000784873962402
    5. 'n' → logprob: -15.125784873962402
    6. '(

' → logprob: -17.12578582763672
    7. '((' → logprob: -17.25078582763672
    8. '(
' → logprob: -17.37578582763672
    9. '```' → logprob: -19.00078582763672
    10. '(num' → logprob: -19.12578582763672

Token 1004: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001482247607782483
    2. ',m' → logprob: -6.751482009887695
    3. ' ,' → logprob: -8.126482009887695
    4. ',
' → logprob: -11.251482009887695
    5. '       ' → logprob: -13.501482009887695
    6. ',n' → logprob: -13.751482009887695
    7. 'm' → logprob: -14.626482009887695
    8. '   ' → logprob: -15.751482009887695
    9. ')' → logprob: -16.001482009887695
    10. ' m' → logprob: -16.626482009887695

Token 1005: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.0009118211455643177
    2. ' m' → logprob: -7.000911712646484
    3. '
' → logprob: -15.375911712646484
    4. '   ' → logprob: -17.625911712646484
    5. '	m' → logprob: -18.250911712646484
    6. '```' → logprob: -19.125911712646484
    7. '
' → logprob: -19.500911712646484
    8. ')m' → logprob: -19.875911712646484
    9. ')' → logprob: -20.000911712646484
    10. ' ' → logprob: -20.125911712646484

Token 1006: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0010828252416104078
    2. ' ,' → logprob: -6.876082897186279
    3. 'edges' → logprob: -10.501082420349121
    4. ',m' → logprob: -11.251082420349121
    5. ' edges' → logprob: -12.501082420349121
    6. 'm' → logprob: -13.126082420349121
    7. ',
' → logprob: -13.626082420349121
    8. '(edges' → logprob: -14.501082420349121
    9. ')' → logprob: -14.876082420349121
    10. '```' → logprob: -15.126082420349121

Token 1007: ' edges' (ID: 22569)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.2597994804382324
    2. 'edges' → logprob: -1.5097994804382324
    3. ' edges' → logprob: -5.134799480438232
    4. ' s' → logprob: -6.634799480438232
    5. '[(' → logprob: -7.884799480438232
    6. '```' → logprob: -10.13479995727539
    7. ')' → logprob: -10.50979995727539
    8. '(edges' → logprob: -10.75979995727539
    9. '[s' → logprob: -10.88479995727539
    10. '
' → logprob: -10.88479995727539

Token 1008: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005947356694377959
    2. ' ,' → logprob: -8.125595092773438
    3. ',s' → logprob: -8.125595092773438
    4. 's' → logprob: -13.000595092773438
    5. ',
' → logprob: -15.625595092773438
    6. '   ' → logprob: -16.125595092773438
    7. '```' → logprob: -16.500595092773438
    8. ' s' → logprob: -16.500595092773438
    9. ',S' → logprob: -17.625595092773438
    10. '       ' → logprob: -17.750595092773438

Token 1009: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.06196768581867218
    2. ' s' → logprob: -2.811967611312866
    3. '
' → logprob: -17.686967849731445
    4. '       ' → logprob: -18.311967849731445
    5. '_s' → logprob: -19.186967849731445
    6. '   ' → logprob: -19.561967849731445
    7. '    ' → logprob: -19.686967849731445
    8. ' ' → logprob: -19.811967849731445
    9. '	s' → logprob: -19.811967849731445
    10. '{s' → logprob: -19.936967849731445

Token 1010: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0021347946021705866
    2. ',g' → logprob: -6.502134799957275
    3. ' ,' → logprob: -7.377134799957275
    4. ',
' → logprob: -12.252134323120117
    5. 'g' → logprob: -13.377134323120117
    6. '
' → logprob: -15.252134323120117
    7. ' g' → logprob: -16.502134323120117
    8. '```' → logprob: -16.502134323120117
    9. '=' → logprob: -16.877134323120117
    10. ')' → logprob: -17.752134323120117

Token 1011: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.011047935113310814
    2. ' g' → logprob: -4.511047840118408
    3. '
' → logprob: -16.51104736328125
    4. '   ' → logprob: -19.01104736328125
    5. '	g' → logprob: -19.01104736328125
    6. ' ' → logprob: -19.26104736328125
    7. '```' → logprob: -19.63604736328125
    8. '    ' → logprob: -19.88604736328125
    9. '
' → logprob: -19.88604736328125
    10. ' ' → logprob: -20.26104736328125

Token 1012: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6821966767311096
    2. 'V' → logprob: -1.1821966171264648
    3. ' V' → logprob: -1.6821966171264648
    4. ' ,' → logprob: -6.682196617126465
    5. ',V' → logprob: -7.307196617126465
    6. '
' → logprob: -15.057196617126465
    7. ' ' → logprob: -15.307196617126465
    8. ')' → logprob: -15.557196617126465
    9. '    ' → logprob: -16.05719757080078
    10. '   ' → logprob: -16.18219757080078

Token 1013: ' V' (ID: 631)
  Prédit: 'V'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'V' → logprob: -0.0380416102707386
    2. ' V' → logprob: -3.288041591644287
    3. '
' → logprob: -16.288042068481445
    4. ' ' → logprob: -19.163042068481445
    5. ')V' → logprob: -19.288042068481445
    6. '```' → logprob: -19.288042068481445
    7. '	V' → logprob: -19.913042068481445
    8. '    ' → logprob: -20.413042068481445
    9. ' ' → logprob: -21.038042068481445
    10. '   ' → logprob: -21.163042068481445

Token 1014: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002088996348902583
    2. ',P' → logprob: -6.252089023590088
    3. ' ,' → logprob: -8.75208854675293
    4. 'P' → logprob: -13.37708854675293
    5. ',
' → logprob: -14.62708854675293
    6. '   ' → logprob: -16.25208854675293
    7. ',p' → logprob: -16.37708854675293
    8. '```' → logprob: -16.50208854675293
    9. ' P' → logprob: -17.12708854675293
    10. '       ' → logprob: -17.87708854675293

Token 1015: ' P' (ID: 398)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.029751529917120934
    2. ' P' → logprob: -3.5297515392303467
    3. '
' → logprob: -14.779751777648926
    4. ' ' → logprob: -15.029751777648926
    5. '   ' → logprob: -15.654751777648926
    6. '```' → logprob: -16.77975082397461
    7. '       ' → logprob: -16.90475082397461
    8. '    ' → logprob: -17.27975082397461
    9. ' ' → logprob: -17.40475082397461
    10. '  ' → logprob: -17.65475082397461

Token 1016: ')


' (ID: 7861)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3137733042240143
    2. '<|end|>' → logprob: -1.313773274421692
    3. '
' → logprob: -7.938773155212402
    4. '<|end|>' → logprob: -9.563773155212402
    5. '```' → logprob: -10.438773155212402
    6. '}' → logprob: -11.188773155212402
    7. '())' → logprob: -11.938773155212402
    8. '   ' → logprob: -12.063773155212402
    9. ')
' → logprob: -12.313773155212402
    10. '()' → logprob: -12.563773155212402

Token 1017: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1018: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.04865617677569389
    2. 'main' → logprob: -3.0486562252044678
    3. 'def' → logprob: -9.673656463623047
    4. ' def' → logprob: -12.548656463623047
    5. ' run' → logprob: -13.673656463623047
    6. '_main' → logprob: -14.673656463623047
    7. '
' → logprob: -14.798656463623047
    8. 'run' → logprob: -15.923656463623047
    9. '	main' → logprob: -16.548656463623047
    10. '```' → logprob: -16.923656463623047

Token 1019: '()' (ID: 416)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -5.300083648762666e-05
    2. '():
' → logprob: -9.875053405761719
    3. '()' → logprob: -13.750053405761719
    4. ' ():' → logprob: -14.875053405761719
    5. '():
' → logprob: -17.12505340576172
    6. '()>' → logprob: -17.50005340576172
    7. '().' → logprob: -18.62505340576172
    8. '(' → logprob: -18.62505340576172
    9. '():

' → logprob: -18.75005340576172
    10. '()">' → logprob: -18.75005340576172

Token 1020: ' ->' (ID: 2747)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0009218233171850443
    2. '():
' → logprob: -7.000921726226807
    3. '()' → logprob: -11.625922203063965
    4. ' ():' → logprob: -13.625922203063965
    5. '():
' → logprob: -16.00092124938965
    6. '()->' → logprob: -16.37592124938965
    7. ':' → logprob: -17.12592124938965
    8. '()>' → logprob: -18.00092124938965
    9. '():

' → logprob: -18.25092124938965
    10. '(' → logprob: -18.37592124938965

Token 1021: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.0007681751740165055
    2. 'int' → logprob: -7.250768184661865
    3. ' None' → logprob: -9.750767707824707
    4. ' int' → logprob: -18.875768661499023
    5. '_None' → logprob: -19.375768661499023
    6. 'none' → logprob: -19.500768661499023
    7. '(None' → logprob: -20.625768661499023
    8. 'void' → logprob: -21.000768661499023
    9. '   ' → logprob: -21.500768661499023
    10. 'No' → logprob: -21.875768661499023

Token 1022: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3315261900424957
    2. '():' → logprob: -1.9565261602401733
    3. '():
' → logprob: -2.331526279449463
    4. ':
' → logprob: -3.206526279449463
    5. '   ' → logprob: -6.206526279449463
    6. 'def' → logprob: -7.956526279449463
    7. ':def' → logprob: -8.456525802612305
    8. '()' → logprob: -8.581525802612305
    9. '):
' → logprob: -9.456525802612305
    10. '):' → logprob: -9.581525802612305

Token 1023: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0003520277969073504
    2. ' parser' → logprob: -8.875351905822754
    3. 'parser' → logprob: -9.250351905822754
    4. 'input' → logprob: -9.875351905822754
    5. 'import' → logprob: -10.125351905822754
    6. ' input' → logprob: -12.000351905822754
    7. '   ' → logprob: -12.125351905822754
    8. '
' → logprob: -12.250351905822754
    9. ' import' → logprob: -12.875351905822754
    10. '```' → logprob: -13.500351905822754

Token 1024: ' calculator' (ID: 44484)
  Prédit: 'calculator'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'calculator' (adapté à ' calculator') → logprob: -0.037994321435689926
    2. 'calc' → logprob: -3.537994384765625
    3. '   ' → logprob: -5.162994384765625
    4. 'car' → logprob: -6.787994384765625
    5. 'crc' → logprob: -7.287994384765625
    6. 'parser' → logprob: -7.662994384765625
    7. 'cr' → logprob: -9.287994384765625
    8. 'import' → logprob: -9.662994384765625
    9. ' calculator' → logprob: -11.037994384765625
    10. 'cal' → logprob: -11.412994384765625

Token 1025: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04859134554862976
    2. '=' → logprob: -3.048591375350952
    3. ' ' → logprob: -13.798591613769531
    4. '   ' → logprob: -13.923591613769531
    5. '  ' → logprob: -14.548591613769531
    6. '.' → logprob: -14.548591613769531
    7. '=create' → logprob: -15.173591613769531
    8. '.calculate' → logprob: -15.798591613769531
    9. ':' → logprob: -16.29859161376953
    10. ' =
' → logprob: -16.42359161376953

Token 1026: ' Input' (ID: 10090)
  Prédit: 'Input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Input' → logprob: -0.0001234428636962548
    2. ' Input' → logprob: -9.000123023986816
    3. '	Input' → logprob: -20.000123977661133
    4. 'Car' → logprob: -21.500123977661133
    5. '_Input' → logprob: -22.625123977661133
    6. '<Input' → logprob: -23.250123977661133
    7. '_input' → logprob: -23.875123977661133
    8. '\Input' → logprob: -24.000123977661133
    9. 'input' → logprob: -24.125123977661133
    10. '   ' → logprob: -24.500123977661133

Token 1027: 'Parser' (ID: 9231)
  Prédit: 'Parser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Parser' → logprob: -3.128163257315464e-07
    2. 'parser' → logprob: -16.0
    3. 'Calculator' → logprob: -16.375
    4. '_parser' → logprob: -17.75
    5. '.Parser' → logprob: -19.25
    6. '(Parser' → logprob: -19.875
    7. 'Parse' → logprob: -20.0
    8. '-parser' → logprob: -20.25
    9. ' Parser' → logprob: -20.5
    10. 'Processor' → logprob: -21.25

Token 1028: '.parse' (ID: 7259)
  Prédit: '.parse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parse' → logprob: -0.002520134439691901
    2. 'parse' → logprob: -6.0025200843811035
    3. '.' → logprob: -10.127520561218262
    4. '().' → logprob: -13.752520561218262
    5. '```' → logprob: -13.752520561218262
    6. ' .' → logprob: -14.002520561218262
    7. '=parse' → logprob: -14.252520561218262
    8. '   ' → logprob: -14.502520561218262
    9. '
' → logprob: -15.252520561218262
    10. '(parse' → logprob: -16.752519607543945

Token 1029: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -9.729906196298543e-06
    2. 'Input' → logprob: -12.000009536743164
    3. '_Input' → logprob: -13.375009536743164
    4. '_' → logprob: -13.750009536743164
    5. '_output' → logprob: -14.375009536743164
    6. '_inputs' → logprob: -16.500009536743164
    7. '_
' → logprob: -17.250009536743164
    8. ' _' → logprob: -17.875009536743164
    9. '_cal' → logprob: -17.875009536743164
    10. '_INPUT' → logprob: -17.875009536743164

Token 1030: '()
' (ID: 1234)
  Prédit: '()
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.31813499331474304
    2. '()' → logprob: -1.5681350231170654
    3. '   ' → logprob: -2.8181350231170654
    4. '
' → logprob: -6.693134784698486
    5. '.calculate' → logprob: -7.193134784698486
    6. '().' → logprob: -7.568134784698486
    7. 'calculator' → logprob: -7.818134784698486
    8. '.' → logprob: -7.943134784698486
    9. 'result' → logprob: -8.443135261535645
    10. '()
' → logprob: -8.943135261535645

Token 1031: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3315730690956116
    2. 'result' → logprob: -1.3315730094909668
    3. 'reward' → logprob: -4.081573009490967
    4. ' result' → logprob: -7.581573009490967
    5. '
' → logprob: -7.831573009490967
    6. ' reward' → logprob: -8.456573486328125
    7. '```' → logprob: -9.331573486328125
    8. 'print' → logprob: -11.081573486328125
    9. 'output' → logprob: -11.456573486328125
    10. 'score' → logprob: -11.706573486328125

Token 1032: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' (adapté à ' result') → logprob: -0.3370791971683502
    2. 'reward' → logprob: -1.3370791673660278
    3. 'max' → logprob: -4.337079048156738
    4. 'print' → logprob: -4.587079048156738
    5. 'answer' → logprob: -8.337079048156738
    6. 'res' → logprob: -11.212079048156738
    7. '   ' → logprob: -11.712079048156738
    8. 'score' → logprob: -11.962079048156738
    9. '```' → logprob: -12.337079048156738
    10. 'output' → logprob: -12.962079048156738

Token 1033: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14289972186088562
    2. '=' → logprob: -2.017899751663208
    3. '   ' → logprob: -8.892899513244629
    4. '=result' → logprob: -10.517899513244629
    5. ':' → logprob: -10.892899513244629
    6. '.' → logprob: -11.267899513244629
    7. ' =
' → logprob: -12.142899513244629
    8. 'print' → logprob: -12.392899513244629
    9. ')' → logprob: -12.642899513244629
    10. '=
' → logprob: -12.892899513244629

Token 1034: ' calculator' (ID: 44484)
  Prédit: 'calculator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'calculator' → logprob: -2.7610454708337784e-05
    2. ' calculator' → logprob: -10.500027656555176
    3. '   ' → logprob: -17.37502670288086
    4. 'Calculator' → logprob: -19.12502670288086
    5. '
' → logprob: -19.37502670288086
    6. 'calc' → logprob: -19.50002670288086
    7. 'cal' → logprob: -20.00002670288086
    8. 'calendar' → logprob: -20.37502670288086
    9. 'calculate' → logprob: -21.00002670288086
    10. 'converter' → logprob: -22.37502670288086

Token 1035: '.calculate' (ID: 67851)
  Prédit: '.calculate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.calculate' → logprob: -0.005297673400491476
    2. 'calculate' → logprob: -5.255297660827637
    3. '.' → logprob: -10.005297660827637
    4. ' .' → logprob: -11.880297660827637
    5. '.compute' → logprob: -12.755297660827637
    6. '.cal' → logprob: -13.005297660827637
    7. '
' → logprob: -13.005297660827637
    8. ' =' → logprob: -14.005297660827637
    9. ' calculate' → logprob: -14.005297660827637
    10. '_cal' → logprob: -14.630297660827637

Token 1036: '_max' (ID: 13731)
  Prédit: '_max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -1.6240566083070007e-06
    2. 'max' → logprob: -13.750001907348633
    3. '_' → logprob: -14.625001907348633
    4. '_MAX' → logprob: -18.625001907348633
    5. '_reward' → logprob: -19.125001907348633
    6. 'Max' → logprob: -19.250001907348633
    7. '_min' → logprob: -19.375001907348633
    8. '_rewards' → logprob: -19.625001907348633
    9. '_
' → logprob: -20.250001907348633
    10. '_total' → logprob: -20.625001907348633

Token 1037: '_reward' (ID: 88836)
  Prédit: '_reward'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_reward' → logprob: -0.0007143391412682831
    2. 'reward' → logprob: -7.250714302062988
    3. '_rewards' → logprob: -12.750714302062988
    4. ' reward' → logprob: -14.125714302062988
    5. 'Reward' → logprob: -14.625714302062988
    6. '_result' → logprob: -15.125714302062988
    7. '_' → logprob: -17.375715255737305
    8. '
' → logprob: -17.875715255737305
    9. 'result' → logprob: -18.375715255737305
    10. '_
' → logprob: -18.625715255737305

Token 1038: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20412293076515198
    2. 'print' → logprob: -1.7041229009628296
    3. '
' → logprob: -5.954123020172119
    4. ' print' → logprob: -9.704122543334961
    5. '```' → logprob: -10.579122543334961
    6. '    
' → logprob: -11.204122543334961
    7. 'if' → logprob: -12.079122543334961
    8. '	print' → logprob: -13.329122543334961
    9. '(print' → logprob: -13.454122543334961
    10. '  
' → logprob: -14.204122543334961

Token 1039: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6931664347648621
    2. 'print' → logprob: -0.6931664347648621
    3. ' print' → logprob: -11.193166732788086
    4. '```' → logprob: -12.693166732788086
    5. '
' → logprob: -13.068166732788086
    6. '    
' → logprob: -16.068166732788086
    7. '	print' → logprob: -16.193166732788086
    8. 'if' → logprob: -17.568166732788086
    9. '`' → logprob: -18.068166732788086
    10. '#print' → logprob: -18.693166732788086

Token 1040: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -3.128163257315464e-07
    2. '   ' → logprob: -15.5
    3. ' print' → logprob: -17.25
    4. '```' → logprob: -19.0
    5. '
' → logprob: -20.25
    6. '    
' → logprob: -23.5
    7. 'if' → logprob: -23.5
    8. 'import' → logprob: -23.75
    9. '	print' → logprob: -24.25
    10. '#print' → logprob: -25.25

Token 1041: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.0007299474673345685
    2. '(' → logprob: -7.250730037689209
    3. '(f' → logprob: -11.12572956085205
    4. 'result' → logprob: -12.37572956085205
    5. '()' → logprob: -14.75072956085205
    6. '("' → logprob: -15.62572956085205
    7. '('' → logprob: -15.62572956085205
    8. '(
' → logprob: -15.87572956085205
    9. '((' → logprob: -16.500730514526367
    10. ' (' → logprob: -16.875730514526367

Token 1042: ')


' (ID: 7861)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2233183042553719e-05
    2. ')
' → logprob: -12.125012397766113
    3. '())' → logprob: -12.500012397766113
    4. '()' → logprob: -12.875012397766113
    5. ' )' → logprob: -15.250012397766113
    6. '   ' → logprob: -16.625011444091797
    7. '```' → logprob: -16.625011444091797
    8. '}' → logprob: -18.125011444091797
    9. ')`' → logprob: -18.250011444091797
    10. '')' → logprob: -18.250011444091797

Token 1043: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.00010616567305987701
    2. '
' → logprob: -9.375105857849121
    3. ' if' → logprob: -11.250105857849121
    4. '```' → logprob: -12.000105857849121
    5. '<|end|>' → logprob: -13.500105857849121
    6. '  
' → logprob: -15.750105857849121
    7. '\n' → logprob: -16.000106811523438
    8. 'main' → logprob: -16.375106811523438
    9. '    
' → logprob: -16.500106811523438
    10. '

' → logprob: -16.750106811523438

Token 1044: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.4741297960281372
    2. ' __' → logprob: -0.9741297960281372
    3. 'name' → logprob: -9.974129676818848
    4. '_name' → logprob: -13.224129676818848
    5. ' ' → logprob: -13.349129676818848
    6. '___' → logprob: -14.099129676818848
    7. '```' → logprob: -14.474129676818848
    8. 'True' → logprob: -14.849129676818848
    9. ' ' → logprob: -15.099129676818848
    10. 'Name' → logprob: -15.599129676818848

Token 1045: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.7226780652999878
    2. ' ==' → logprob: -0.8476780652999878
    3. '==' → logprob: -2.8476781845092773
    4. 'name' → logprob: -3.7226781845092773
    5. ' __' → logprob: -5.722678184509277
    6. '=="' → logprob: -7.722678184509277
    7. 'if' → logprob: -9.347678184509277
    8. '_name' → logprob: -10.472678184509277
    9. '=='' → logprob: -10.722678184509277
    10. '=' → logprob: -11.097678184509277

Token 1046: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0001911432045744732
    2. '==' → logprob: -8.625190734863281
    3. ' ==' → logprob: -12.375190734863281
    4. 'name' → logprob: -13.375190734863281
    5. '__.__' → logprob: -13.375190734863281
    6. '=="' → logprob: -13.500190734863281
    7. '__
' → logprob: -13.625190734863281
    8. '____' → logprob: -14.250190734863281
    9. '___' → logprob: -15.375190734863281
    10. '```' → logprob: -15.875190734863281

Token 1047: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.05868348479270935
    2. '__' → logprob: -3.058683395385742
    3. ' ==' → logprob: -5.183683395385742
    4. '=="' → logprob: -5.558683395385742
    5. '=='' → logprob: -7.558683395385742
    6. '==
' → logprob: -10.183683395385742
    7. '=' → logprob: -11.308683395385742
    8. '===' → logprob: -12.058683395385742
    9. '_' → logprob: -12.808683395385742
    10. '___' → logprob: -13.683683395385742

Token 1048: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.005240394733846188
    2. ''' → logprob: -5.255240440368652
    3. '__' → logprob: -12.255240440368652
    4. ' "__' → logprob: -13.255240440368652
    5. '   ' → logprob: -16.755239486694336
    6. ' '__' → logprob: -18.380239486694336
    7. '"name' → logprob: -18.755239486694336
    8. 'main' → logprob: -19.005239486694336
    9. '"_' → logprob: -19.005239486694336
    10. '"is' → logprob: -19.505239486694336

Token 1049: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -7.465036105713807e-06
    2. '"' → logprob: -12.250007629394531
    3. ''' → logprob: -13.375007629394531
    4. 'name' → logprob: -14.375007629394531
    5. '__' → logprob: -14.875007629394531
    6. ' main' → logprob: -16.12500762939453
    7. '_main' → logprob: -18.12500762939453
    8. '(main' → logprob: -18.87500762939453
    9. ''m' → logprob: -19.25000762939453
    10. '	main' → logprob: -19.37500762939453

Token 1050: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.16046194732189178
    2. '__' → logprob: -1.9104619026184082
    3. '__':
' → logprob: -8.410462379455566
    4. '__
' → logprob: -11.160462379455566
    5. '__["' → logprob: -15.035462379455566
    6. '__
' → logprob: -15.035462379455566
    7. '__:' → logprob: -16.03546142578125
    8. '__.' → logprob: -16.16046142578125
    9. '___' → logprob: -16.91046142578125
    10. '__.__' → logprob: -17.16046142578125

Token 1051: '   ' (ID: 271)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.16046611964702606
    2. 'main' → logprob: -1.9104660749435425
    3. '   ' → logprob: -9.035466194152832
    4. ' main' → logprob: -9.785466194152832
    5. '_main' → logprob: -10.410466194152832
    6. '__":
' → logprob: -11.285466194152832
    7. '____' → logprob: -11.910466194152832
    8. '___' → logprob: -12.160466194152832
    9. '__
' → logprob: -12.535466194152832
    10. '	main' → logprob: -13.035466194152832

Token 1052: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: 0.0
    2. ' main' → logprob: -18.25
    3. '	main' → logprob: -20.5
    4. 'import' → logprob: -22.125
    5. '   ' → logprob: -22.875
    6. '
' → logprob: -24.375
    7. '.main' → logprob: -25.25
    8. '(main' → logprob: -25.75
    9. '_main' → logprob: -25.75
    10. '```' → logprob: -28.25

Token 1053: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1051
Tokens correctement prédits (1ère position, stricte): 551
Tokens correctement prédits (1ère position, avec adaptation): 600
Tokens correctement prédits (top 10): 951
Précision stricte (1ère position): 52.43%
Précision adaptée (1ère position): 57.09%
Précision (top 10): 90.49%
================================================================================
