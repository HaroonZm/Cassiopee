================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:14:53
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
N, M = map(int, input().split())
A = [int(input()) for _ in range(N)]
B = [int(input()) for _ in range(M)]

votes = [0] * N

for b in B:
    for i in range(N):
        if A[i] <= b:
            votes[i] += 1
            break

max_votes = max(votes)
for i in range(N):
    if votes[i] == max_votes:
        print(i + 1)
        break
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'N' (ID: 45)
  → Token d'amorce (pas de prédiction)

Token 1: ',' (ID: 11)
  → Token d'amorce (pas de prédiction)

Token 2: ' M' (ID: 391)
  → Token d'amorce (pas de prédiction)

Token 3: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.17474547028541565
    2. ',' → logprob: -1.9247454404830933
    3. ' =' → logprob: -4.299745559692383
    4. '```' → logprob: -7.799745559692383
    5. ';' → logprob: -8.799745559692383
    6. ')' → logprob: -9.299745559692383
    7. '.' → logprob: -10.049745559692383
    8. '#' → logprob: -10.549745559692383
    9. '[' → logprob: -10.674745559692383
    10. ',
' → logprob: -11.049745559692383

Token 4: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.16926312446594238
    2. 'map' → logprob: -2.1692631244659424
    3. ' input' → logprob: -3.6692631244659424
    4. 'input' → logprob: -4.669262886047363
    5. ' ' → logprob: -5.669262886047363
    6. '10' → logprob: -6.294262886047363
    7. ' list' → logprob: -7.919262886047363
    8. '0' → logprob: -8.169262886047363
    9. ' int' → logprob: -8.169262886047363
    10. 'int' → logprob: -9.294262886047363

Token 5: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.05126053839921951
    2. '(lambda' → logprob: -3.926260471343994
    3. '```' → logprob: -4.176260471343994
    4. '(int' → logprob: -5.176260471343994
    5. '<|end|>' → logprob: -5.301260471343994
    6. '(str' → logprob: -7.051260471343994
    7. '(user' → logprob: -8.051260948181152
    8. ')' → logprob: -8.051260948181152
    9. '(input' → logprob: -8.301260948181152
    10. '<|end|>' → logprob: -8.426260948181152

Token 6: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.07830429822206497
    2. '(' → logprob: -3.3283042907714844
    3. ')' → logprob: -3.3283042907714844
    4. '(int' → logprob: -6.578304290771484
    5. 'input' → logprob: -7.203304290771484
    6. '(str' → logprob: -7.828304290771484
    7. '(user' → logprob: -8.578304290771484
    8. '```' → logprob: -8.703304290771484
    9. '`)' → logprob: -9.203304290771484
    10. '`' → logprob: -9.578304290771484

Token 7: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.2014951854944229
    2. ' input' → logprob: -1.7014951705932617
    3. '(input' → logprob: -9.451495170593262
    4. ')' → logprob: -13.076495170593262
    5. ',input' → logprob: -13.951495170593262
    6. '=input' → logprob: -16.201496124267578
    7. '<input' → logprob: -16.576496124267578
    8. '[input' → logprob: -16.701496124267578
    9. '```' → logprob: -17.701496124267578
    10. '	input' → logprob: -18.326496124267578

Token 8: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.44570398330688477
    2. '()' → logprob: -1.0707039833068848
    3. ')' → logprob: -4.820703983306885
    4. '(""))' → logprob: -6.195703983306885
    5. '('' → logprob: -6.320703983306885
    6. '`()' → logprob: -7.070703983306885
    7. '().' → logprob: -7.445703983306885
    8. '();)' → logprob: -7.570703983306885
    9. '());' → logprob: -7.695703983306885
    10. '()))' → logprob: -7.820703983306885

Token 9: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.009055789560079575
    2. 'strip' → logprob: -4.7590556144714355
    3. ')' → logprob: -8.009056091308594
    4. 'read' → logprob: -9.759056091308594
    5. 'rstrip' → logprob: -10.384056091308594
    6. ' split' → logprob: -11.259056091308594
    7. 'replace' → logprob: -13.509056091308594
    8. 'decode' → logprob: -13.884056091308594
    9. 'startswith' → logprob: -14.134056091308594
    10. '(split' → logprob: -14.259056091308594

Token 10: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008848796598613262
    2. '())' → logprob: -5.008848667144775
    3. '))' → logprob: -6.383848667144775
    4. '()' → logprob: -8.383849143981934
    5. '`)' → logprob: -8.883849143981934
    6. '(' → logprob: -10.008849143981934
    7. '()))' → logprob: -12.133849143981934
    8. '')' → logprob: -12.383849143981934
    9. ')`' → logprob: -12.508849143981934
    10. '>)' → logprob: -13.008849143981934

Token 11: 'A' (ID: 32)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.1175733357667923
    2. 'for' → logprob: -3.4925732612609863
    3. '`' → logprob: -4.367573261260986
    4. 'x' → logprob: -4.617573261260986
    5. '\n' → logprob: -4.617573261260986
    6. '#' → logprob: -4.617573261260986
    7. ',' → logprob: -4.992573261260986
    8. '```' → logprob: -5.367573261260986
    9. '.' → logprob: -5.742573261260986
    10. 'n' → logprob: -5.742573261260986

Token 12: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0012320152018219233
    2. '[]' → logprob: -7.876232147216797
    3. '[A' → logprob: -8.126232147216797
    4. '[i' → logprob: -9.001232147216797
    5. '\[' → logprob: -9.001232147216797
    6. '.' → logprob: -9.376232147216797
    7. '[:]' → logprob: -9.376232147216797
    8. '[a' → logprob: -10.751232147216797
    9. '_' → logprob: -11.001232147216797
    10. '[...]' → logprob: -11.001232147216797

Token 13: ' [' (ID: 723)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.6085888147354126
    2. 'list' → logprob: -0.8585888147354126
    3. '[]' → logprob: -4.108588695526123
    4. ' []' → logprob: -4.983588695526123
    5. ' [' → logprob: -5.108588695526123
    6. '[' → logprob: -5.983588695526123
    7. '[list' → logprob: -8.483589172363281
    8. 'input' → logprob: -10.733589172363281
    9. '[input' → logprob: -11.358589172363281
    10. 'map' → logprob: -11.733589172363281

Token 14: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0026974014472216368
    2. ' int' → logprob: -6.502697467803955
    3. '0' → logprob: -6.877697467803955
    4. 'map' → logprob: -9.252696990966797
    5. ']int' → logprob: -10.127696990966797
    6. ']' → logprob: -11.502696990966797
    7. '(int' → logprob: -11.627696990966797
    8. '*' → logprob: -13.002696990966797
    9. ')' → logprob: -13.502696990966797
    10. ',int' → logprob: -14.127696990966797

Token 15: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.345204621553421
    2. '(input' → logprob: -1.3452045917510986
    3. '(x' → logprob: -3.5952045917510986
    4. '()' → logprob: -5.970204830169678
    5. '(token' → logprob: -8.22020435333252
    6. '(a' → logprob: -8.34520435333252
    7. '(i' → logprob: -8.34520435333252
    8. '()]' → logprob: -8.59520435333252
    9. ')' → logprob: -8.97020435333252
    10. '(

' → logprob: -9.59520435333252

Token 16: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0002762326330412179
    2. '()]' → logprob: -8.500276565551758
    3. '()' → logprob: -9.875276565551758
    4. '()))' → logprob: -11.875276565551758
    5. ')' → logprob: -12.000276565551758
    6. ')]' → logprob: -12.875276565551758
    7. '()),' → logprob: -13.250276565551758
    8. '())
' → logprob: -14.000276565551758
    9. '().' → logprob: -14.125276565551758
    10. ' ())' → logprob: -14.125276565551758

Token 17: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0040724631398916245
    2. ')]' → logprob: -5.879072666168213
    3. '()' → logprob: -7.129072666168213
    4. '())' → logprob: -8.379072189331055
    5. ']' → logprob: -9.379072189331055
    6. ' )' → logprob: -10.004072189331055
    7. 'for' → logprob: -10.129072189331055
    8. '()]' → logprob: -11.004072189331055
    9. '(' → logprob: -11.379072189331055
    10. '),' → logprob: -11.504072189331055

Token 18: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.026549799367785454
    2. '_' → logprob: -3.901549816131592
    3. ' ' → logprob: -5.401549816131592
    4. ' _' → logprob: -7.651549816131592
    5. ' i' → logprob: -8.276549339294434
    6. '(range' → logprob: -8.276549339294434
    7. '(' → logprob: -8.651549339294434
    8. '_range' → logprob: -9.151549339294434
    9. 'range' → logprob: -9.276549339294434
    10. ' in' → logprob: -9.401549339294434

Token 19: ' in' (ID: 306)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.1749279499053955
    2. 'range' → logprob: -2.2999279499053955
    3. ' in' → logprob: -2.9249279499053955
    4. '(range' → logprob: -5.674927711486816
    5. 'in' → logprob: -6.549927711486816
    6. 'ange' → logprob: -6.924927711486816
    7. '_range' → logprob: -8.549927711486816
    8. '(' → logprob: -8.924927711486816
    9. '	range' → logprob: -8.924927711486816
    10. '_' → logprob: -9.299927711486816

Token 20: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.005234002135694027
    2. ' range' → logprob: -5.2552337646484375
    3. '(range' → logprob: -15.880233764648438
    4. '	range' → logprob: -16.880233764648438
    5. ' ' → logprob: -17.880233764648438
    6. '_range' → logprob: -18.630233764648438
    7. 'ange' → logprob: -18.630233764648438
    8. '.range' → logprob: -19.255233764648438
    9. '   ' → logprob: -19.380233764648438
    10. 'rang' → logprob: -19.505233764648438

Token 21: '(N' (ID: 10564)
  Prédit: '(M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(M' → logprob: -0.07904070615768433
    2. '(' → logprob: -2.829040765762329
    3. '(N' → logprob: -4.07904052734375
    4. '(
' → logprob: -13.57904052734375
    5. 'M' → logprob: -14.07904052734375
    6. '(

' → logprob: -14.32904052734375
    7. '(n' → logprob: -14.82904052734375
    8. ')' → logprob: -15.32904052734375
    9. '(len' → logprob: -15.32904052734375
    10. ' (' → logprob: -15.45404052734375

Token 22: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0014653427060693502
    2. ')' → logprob: -6.876465320587158
    3. ']' → logprob: -7.751465320587158
    4. '')]' → logprob: -14.501465797424316
    5. '])]' → logprob: -14.626465797424316
    6. ')])' → logprob: -15.001465797424316
    7. ' )' → logprob: -15.376465797424316
    8. ')],' → logprob: -15.626465797424316
    9. '))' → logprob: -15.626465797424316
    10. ')]
' → logprob: -15.876465797424316

Token 23: 'B' (ID: 33)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2531683146953583
    2. 'M' → logprob: -3.1281683444976807
    3. 's' → logprob: -3.1281683444976807
    4. 'a' → logprob: -3.7531683444976807
    5. 'result' → logprob: -3.8781683444976807
    6. 'A' → logprob: -4.128168106079102
    7. 'B' → logprob: -4.253168106079102
    8. 'count' → logprob: -5.128168106079102
    9. ' for' → logprob: -5.128168106079102
    10. '[' → logprob: -5.253168106079102

Token 24: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20826274156570435
    2. '=' → logprob: -1.9582626819610596
    3. '[' → logprob: -3.3332626819610596
    4. '.' → logprob: -4.583262920379639
    5. '_' → logprob: -7.833262920379639
    6. ' ' → logprob: -8.95826244354248
    7. ',' → logprob: -9.20826244354248
    8. ']' → logprob: -9.70826244354248
    9. 's' → logprob: -9.70826244354248
    10. '[]' → logprob: -9.70826244354248

Token 25: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5510835647583008
    2. ' [' → logprob: -0.9260835647583008
    3. '[int' → logprob: -3.926083564758301
    4. '[list' → logprob: -5.926083564758301
    5. '[input' → logprob: -6.926083564758301
    6. 'list' → logprob: -6.926083564758301
    7. ' list' → logprob: -7.176083564758301
    8. ' []' → logprob: -7.676083564758301
    9. '[]' → logprob: -7.926083564758301
    10. '[A' → logprob: -8.0510835647583

Token 26: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0002712297427933663
    2. ' int' → logprob: -8.25027084350586
    3. 'map' → logprob: -12.75027084350586
    4. '0' → logprob: -13.50027084350586
    5. 'M' → logprob: -13.50027084350586
    6. ']int' → logprob: -13.50027084350586
    7. '(int' → logprob: -14.00027084350586
    8. 'i' → logprob: -14.62527084350586
    9. '<int' → logprob: -14.87527084350586
    10. 'input' → logprob: -14.87527084350586

Token 27: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.00026634239475242794
    2. '(' → logprob: -8.250266075134277
    3. ' (' → logprob: -12.500266075134277
    4. '=input' → logprob: -15.000266075134277
    5. ',input' → logprob: -15.125266075134277
    6. 'input' → logprob: -15.250266075134277
    7. '(x' → logprob: -16.375267028808594
    8. ' input' → logprob: -16.750267028808594
    9. '(inp' → logprob: -16.750267028808594
    10. '(in' → logprob: -16.875267028808594

Token 28: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.000759957532864064
    2. '()' → logprob: -7.625760078430176
    3. '()]' → logprob: -8.375760078430176
    4. '().' → logprob: -10.875760078430176
    5. ')' → logprob: -11.625760078430176
    6. ' ())' → logprob: -12.250760078430176
    7. '()[' → logprob: -13.625760078430176
    8. '())
' → logprob: -13.750760078430176
    9. ')]' → logprob: -14.000760078430176
    10. '(),' → logprob: -14.000760078430176

Token 29: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1609194576740265
    2. '()' → logprob: -2.035919427871704
    3. '())' → logprob: -4.035919666290283
    4. 'for' → logprob: -8.035919189453125
    5. '(' → logprob: -10.410919189453125
    6. ')]' → logprob: -11.035919189453125
    7. '()]' → logprob: -11.285919189453125
    8. ' )' → logprob: -11.410919189453125
    9. ' ()' → logprob: -12.035919189453125
    10. '）' → logprob: -12.785919189453125

Token 30: ' _' (ID: 1175)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.266464501619339
    2. ' range' → logprob: -1.5164644718170166
    3. '(range' → logprob: -4.766464710235596
    4. '(M' → logprob: -6.016464710235596
    5. 'range' → logprob: -6.391464710235596
    6. ' (' → logprob: -6.391464710235596
    7. '_' → logprob: -9.391464233398438
    8. ' ' → logprob: -11.516464233398438
    9. ' ' → logprob: -11.891464233398438
    10. '(s' → logprob: -12.016464233398438

Token 31: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.72098708152771
    2. ' range' → logprob: -0.84598708152771
    3. '_' → logprob: -2.72098708152771
    4. 'range' → logprob: -4.345987319946289
    5. ' ' → logprob: -5.595987319946289
    6. ' _' → logprob: -6.720987319946289
    7. 'in' → logprob: -7.470987319946289
    8. '_range' → logprob: -8.970987319946289
    9. '(range' → logprob: -9.845987319946289
    10. ' ' → logprob: -9.970987319946289

Token 32: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.015359592624008656
    2. 'range' → logprob: -4.265359401702881
    3. ' M' → logprob: -7.390359401702881
    4. 'M' → logprob: -8.015359878540039
    5. '(range' → logprob: -9.015359878540039
    6. ' ' → logprob: -9.265359878540039
    7. '(M' → logprob: -11.015359878540039
    8. '(' → logprob: -12.265359878540039
    9. ' (' → logprob: -12.765359878540039
    10. '_range' → logprob: -13.390359878540039

Token 33: '(M' (ID: 6103)
  Prédit: '(M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(M' → logprob: -0.000636308453977108
    2. '(' → logprob: -7.375636100769043
    3. '(N' → logprob: -12.500636100769043
    4. ' (' → logprob: -12.500636100769043
    5. '(B' → logprob: -13.875636100769043
    6. 'M' → logprob: -14.500636100769043
    7. '(
' → logprob: -15.000636100769043
    8. ' M' → logprob: -15.875636100769043
    9. '(A' → logprob: -16.25063705444336
    10. '(m' → logprob: -16.87563705444336

Token 34: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0010448360117152333
    2. ']' → logprob: -7.501044750213623
    3. ')' → logprob: -7.626044750213623
    4. '])' → logprob: -13.251045227050781
    5. '])]' → logprob: -13.876045227050781
    6. ')])' → logprob: -14.501045227050781
    7. '')]' → logprob: -14.626045227050781
    8. ')]
' → logprob: -16.37604522705078
    9. '）' → logprob: -16.37604522705078
    10. ' )' → logprob: -16.37604522705078

Token 35: 'votes' (ID: 92482)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -1.0376886129379272
    2. 'C' → logprob: -1.6626886129379272
    3. 'a' → logprob: -1.9126886129379272
    4. 's' → logprob: -2.412688732147217
    5. 'A' → logprob: -2.537688732147217
    6. 'for' → logprob: -3.037688732147217
    7. '#' → logprob: -4.287688732147217
    8. 'r' → logprob: -4.287688732147217
    9. 'result' → logprob: -4.662688732147217
    10. 'd' → logprob: -4.662688732147217

Token 36: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.9482080936431885
    2. '.' → logprob: -1.3232080936431885
    3. '(' → logprob: -1.6982080936431885
    4. '[' → logprob: -2.3232080936431885
    5. '=' → logprob: -3.1982080936431885
    6. ' =' → logprob: -4.573207855224609
    7. '_count' → logprob: -5.323207855224609
    8. '_counts' → logprob: -5.448207855224609
    9. '[:]' → logprob: -7.323207855224609
    10. 's' → logprob: -7.323207855224609

Token 37: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.38866591453552246
    2. '[]' → logprob: -1.7636659145355225
    3. '{}' → logprob: -2.1386659145355225
    4. ' [' → logprob: -3.6386659145355225
    5. ' []' → logprob: -5.638666152954102
    6. '[A' → logprob: -6.763666152954102
    7. ' {}' → logprob: -6.888666152954102
    8. '{' → logprob: -8.263666152954102
    9. '0' → logprob: -8.513666152954102
    10. 'A' → logprob: -9.013666152954102

Token 38: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00011880126112373546
    2. 'False' → logprob: -10.62511920928955
    3. ' ' → logprob: -10.87511920928955
    4. ']' → logprob: -11.00011920928955
    5. 'A' → logprob: -11.00011920928955
    6. 'a' → logprob: -11.50011920928955
    7. 'int' → logprob: -12.50011920928955
    8. '[]' → logprob: -12.50011920928955
    9. '(' → logprob: -12.62511920928955
    10. 'i' → logprob: -13.00011920928955

Token 39: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.01029227115213871
    2. ' for' → logprob: -5.385292053222656
    3. ']*' → logprob: -5.760292053222656
    4. ')]' → logprob: -6.510292053222656
    5. 'for' → logprob: -7.760292053222656
    6. ' ]' → logprob: -8.260292053222656
    7. ')' → logprob: -8.260292053222656
    8. ',' → logprob: -10.135292053222656
    9. ']*(' → logprob: -10.760292053222656
    10. ' ' → logprob: -13.010292053222656

Token 40: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.08811724931001663
    2. ' *' → logprob: -4.2131171226501465
    3. ' for' → logprob: -4.2131171226501465
    4. ']' → logprob: -4.4631171226501465
    5. '+' → logprob: -4.9631171226501465
    6. '(' → logprob: -4.9631171226501465
    7. ' ' → logprob: -5.0881171226501465
    8. ')' → logprob: -5.0881171226501465
    9. '[' → logprob: -5.4631171226501465
    10. ' ]' → logprob: -5.7131171226501465

Token 41: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.7409438490867615
    2. '(N' → logprob: -1.1159439086914062
    3. '(M' → logprob: -2.3659439086914062
    4. 'M' → logprob: -2.9909439086914062
    5. '(' → logprob: -3.2409439086914062
    6. ' (' → logprob: -5.490943908691406
    7. '100' → logprob: -5.865943908691406
    8. ' N' → logprob: -6.990943908691406
    9. '101' → logprob: -6.990943908691406
    10. '10' → logprob: -7.240943908691406

Token 42: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7806986570358276
    2. 'for' → logprob: -0.7806986570358276
    3. ' for' → logprob: -2.780698776245117
    4. '\n' → logprob: -5.030698776245117
    5. '' → logprob: -5.405698776245117
    6. '<|end|>' → logprob: -5.405698776245117
    7. ' 
' → logprob: -5.780698776245117
    8. '
' → logprob: -6.405698776245117
    9. '  
' → logprob: -7.780698776245117
    10. '```' → logprob: -8.030698776245117

Token 43: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0003662020608317107
    2. ' for' → logprob: -8.0003662109375
    3. '.' → logprob: -11.8753662109375
    4. 'A' → logprob: -12.0003662109375
    5. '```' → logprob: -12.3753662109375
    6. 'i' → logprob: -12.5003662109375
    7. 'B' → logprob: -13.8753662109375
    8. '0' → logprob: -14.0003662109375
    9. 'f' → logprob: -14.2503662109375
    10. '
' → logprob: -14.3753662109375

Token 44: ' b' (ID: 287)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.05183763429522514
    2. ' _' → logprob: -3.051837682723999
    3. '_' → logprob: -6.55183744430542
    4. 'i' → logprob: -6.92683744430542
    5. ' ' → logprob: -7.17683744430542
    6. '_i' → logprob: -10.676837921142578
    7. ' ‌' → logprob: -10.676837921142578
    8. '  ' → logprob: -12.051837921142578
    9. ' ' → logprob: -12.301837921142578
    10. ' ▁' → logprob: -13.176837921142578

Token 45: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3618205785751343
    2. 'in' → logprob: -1.2368205785751343
    3. 'n' → logprob: -5.236820697784424
    4. ' ' → logprob: -5.486820697784424
    5. ' i' → logprob: -6.486820697784424
    6. 'i' → logprob: -6.611820697784424
    7. '  ' → logprob: -7.611820697784424
    8. '_' → logprob: -9.111820220947266
    9. 'o' → logprob: -9.736820220947266
    10. '	in' → logprob: -10.111820220947266

Token 46: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.06994687765836716
    2. ' B' → logprob: -2.694946765899658
    3. ' range' → logprob: -12.069947242736816
    4. 'range' → logprob: -12.569947242736816
    5. ' ' → logprob: -14.444947242736816
    6. '	B' → logprob: -15.069947242736816
    7. 'b' → logprob: -15.319947242736816
    8. '_B' → logprob: -15.694947242736816
    9. 'A' → logprob: -16.0699462890625
    10. '  ' → logprob: -17.4449462890625

Token 47: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00013131031300872564
    2. ' :' → logprob: -9.125131607055664
    3. ':
' → logprob: -11.250131607055664
    4. '>' → logprob: -12.625131607055664
    5. '=' → logprob: -13.500131607055664
    6. ':**' → logprob: -14.375131607055664
    7. ',' → logprob: -14.625131607055664
    8. ')' → logprob: -15.000131607055664
    9. '):' → logprob: -15.000131607055664
    10. ' ' → logprob: -15.000131607055664

Token 48: '   ' (ID: 271)
  Prédit: ' votes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' votes' → logprob: -0.6357131600379944
    2. ' ' → logprob: -2.0107131004333496
    3. ':' → logprob: -2.2607131004333496
    4. '   ' → logprob: -2.3857131004333496
    5. ' if' → logprob: -3.0107131004333496
    6. 'votes' → logprob: -3.2607131004333496
    7. ' for' → logprob: -3.8857131004333496
    8. 'if' → logprob: -4.51071310043335
    9. 'for' → logprob: -4.88571310043335
    10. '```' → logprob: -6.26071310043335

Token 49: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.3654414415359497
    2. 'votes' → logprob: -1.4904414415359497
    3. 'if' → logprob: -2.99044132232666
    4. 'idx' → logprob: -4.74044132232666
    5. 'i' → logprob: -5.24044132232666
    6. ' for' → logprob: -5.36544132232666
    7. 'index' → logprob: -5.99044132232666
    8. 'max' → logprob: -6.11544132232666
    9. 'import' → logprob: -6.61544132232666
    10. ' votes' → logprob: -6.99044132232666

Token 50: ' i' (ID: 575)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.025927146896719933
    2. ' i' → logprob: -4.1509270668029785
    3. 'range' → logprob: -5.1509270668029785
    4. ' a' → logprob: -6.2759270668029785
    5. ' ' → logprob: -6.4009270668029785
    6. ' A' → logprob: -8.775927543640137
    7. ' in' → logprob: -10.025927543640137
    8. ' _' → logprob: -10.275927543640137
    9. 'i' → logprob: -10.400927543640137
    10. ' j' → logprob: -10.525927543640137

Token 51: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0050379447638988495
    2. 'in' → logprob: -5.505037784576416
    3. ' ' → logprob: -7.005037784576416
    4. '	in' → logprob: -11.255038261413574
    5. ' range' → logprob: -11.755038261413574
    6. ',' → logprob: -11.880038261413574
    7. '  ' → logprob: -12.130038261413574
    8. 'range' → logprob: -12.255038261413574
    9. '<|end|>' → logprob: -12.755038261413574
    10. ' ,' → logprob: -12.880038261413574

Token 52: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.012515541166067123
    2. 'range' → logprob: -4.387515544891357
    3. ' xrange' → logprob: -13.3875150680542
    4. '	range' → logprob: -13.3875150680542
    5. '(range' → logprob: -13.5125150680542
    6. ' ' → logprob: -14.3875150680542
    7. '<|end|>' → logprob: -15.5125150680542
    8. ')' → logprob: -16.137516021728516
    9. ' ran' → logprob: -16.262516021728516
    10. '.range' → logprob: -16.387516021728516

Token 53: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.005333012901246548
    2. '(' → logprob: -5.255332946777344
    3. '(len' → logprob: -10.005332946777344
    4. 'N' → logprob: -10.880332946777344
    5. ' (' → logprob: -10.880332946777344
    6. '(n' → logprob: -11.880332946777344
    7. ' N' → logprob: -12.130332946777344
    8. ')' → logprob: -13.130332946777344
    9. '(
' → logprob: -14.380332946777344
    10. ' ' → logprob: -14.505332946777344

Token 54: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.017073428258299828
    2. '):
' → logprob: -4.517073631286621
    3. ')' → logprob: -5.267073631286621
    4. ' ):' → logprob: -7.392073631286621
    5. ':' → logprob: -8.767073631286621
    6. ' )' → logprob: -10.517073631286621
    7. '   ' → logprob: -10.892073631286621
    8. ' ' → logprob: -11.642073631286621
    9. ' ):
' → logprob: -11.892073631286621
    10. '):
' → logprob: -12.517073631286621

Token 55: '       ' (ID: 309)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5669817924499512
    2. '   ' → logprob: -1.4419817924499512
    3. ' if' → logprob: -2.691981792449951
    4. '    ' → logprob: -2.941981792449951
    5. ':' → logprob: -3.566981792449951
    6. '       ' → logprob: -3.816981792449951
    7. '<|end|>' → logprob: -4.941981792449951
    8. ' votes' → logprob: -5.316981792449951
    9. 'if' → logprob: -5.691981792449951
    10. '  ' → logprob: -6.191981792449951

Token 56: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.2180892527103424
    2. ' if' → logprob: -2.2180893421173096
    3. 'votes' → logprob: -2.5930893421173096
    4. ' votes' → logprob: -4.5930891036987305
    5. '   ' → logprob: -6.4680891036987305
    6. '       ' → logprob: -8.21808910369873
    7. '_votes' → logprob: -8.84308910369873
    8. ':' → logprob: -9.09308910369873
    9. 'v' → logprob: -10.71808910369873
    10. ' votos' → logprob: -11.21808910369873

Token 57: ' A' (ID: 355)
  Prédit: ' A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.049292080104351044
    2. 'A' → logprob: -3.6742920875549316
    3. ' b' → logprob: -3.9242920875549316
    4. 'b' → logprob: -6.424292087554932
    5. ' ' → logprob: -7.049292087554932
    6. '	A' → logprob: -8.674291610717773
    7. ' votes' → logprob: -9.299291610717773
    8. ' abs' → logprob: -9.486791610717773
    9. ' i' → logprob: -11.174291610717773
    10. ' a' → logprob: -11.299291610717773

Token 58: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.6667534708976746
    2. '==' → logprob: -1.0417535305023193
    3. ' ==' → logprob: -2.7917535305023193
    4. '[b' → logprob: -3.0417535305023193
    5. '[' → logprob: -4.41675329208374
    6. '<=' → logprob: -5.29175329208374
    7. ' <=' → logprob: -6.04175329208374
    8. '>=' → logprob: -6.41675329208374
    9. '>' → logprob: -6.91675329208374
    10. ' >=' → logprob: -7.66675329208374

Token 59: ']' (ID: 60)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.7513116598129272
    2. ' ==' → logprob: -0.8763116598129272
    3. '>' → logprob: -3.751311779022217
    4. '>=' → logprob: -3.751311779022217
    5. ' >=' → logprob: -3.876311779022217
    6. ' <=' → logprob: -4.001311779022217
    7. '<=' → logprob: -4.376311779022217
    8. '%' → logprob: -5.126311779022217
    9. ' >' → logprob: -5.376311779022217
    10. ' <' → logprob: -6.626311779022217

Token 60: ' <=' (ID: 5017)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.3389755189418793
    2. ' ==' → logprob: -1.4639755487442017
    3. '>' → logprob: -4.213975429534912
    4. '%' → logprob: -4.463975429534912
    5. '<=' → logprob: -4.588975429534912
    6. '>=' → logprob: -5.088975429534912
    7. '<' → logprob: -5.213975429534912
    8. ' <=' → logprob: -5.713975429534912
    9. ' >' → logprob: -6.588975429534912
    10. ' <' → logprob: -6.588975429534912

Token 61: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.1602318435907364
    2. ' b' → logprob: -1.9102318286895752
    3. ' ' → logprob: -12.410231590270996
    4. '	b' → logprob: -13.535231590270996
    5. '   ' → logprob: -14.160231590270996
    6. ')b' → logprob: -15.160231590270996
    7. ' ' → logprob: -15.222731590270996
    8. '```' → logprob: -15.535231590270996
    9. '*b' → logprob: -16.347732543945312
    10. '  ' → logprob: -16.472732543945312

Token 62: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.009729171171784401
    2. ':
' → logprob: -4.759729385375977
    3. ' and' → logprob: -7.009729385375977
    4. 'and' → logprob: -8.884729385375977
    5. ' :' → logprob: -11.009729385375977
    6. '==' → logprob: -11.259729385375977
    7. '           ' → logprob: -12.009729385375977
    8. '):' → logprob: -12.009729385375977
    9. '       ' → logprob: -12.134729385375977
    10. ':
' → logprob: -12.634729385375977

Token 63: '           ' (ID: 352)
  Prédit: 'votes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'votes' → logprob: -0.8714853525161743
    2. '       ' → logprob: -1.2464853525161743
    3. ':' → logprob: -1.6214853525161743
    4. ' votes' → logprob: -2.7464852333068848
    5. '           ' → logprob: -3.7464852333068848
    6. '_votes' → logprob: -5.621485233306885
    7. ':
' → logprob: -6.496485233306885
    8. ' and' → logprob: -6.496485233306885
    9. '   ' → logprob: -7.121485233306885
    10. ' :' → logprob: -8.621485710144043

Token 64: ' votes' (ID: 24183)
  Prédit: 'votes'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'votes' (adapté à ' votes') → logprob: -0.03816451132297516
    2. ' votes' → logprob: -3.2881646156311035
    3. '   ' → logprob: -10.288164138793945
    4. '_votes' → logprob: -10.413164138793945
    5. '1' → logprob: -10.663164138793945
    6. '       ' → logprob: -11.788164138793945
    7. '           ' → logprob: -12.163164138793945
    8. 'vote' → logprob: -12.288164138793945
    9. '
' → logprob: -12.538164138793945
    10. '```' → logprob: -13.288164138793945

Token 65: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.7323761582374573
    2. '+=' → logprob: -0.9823761582374573
    3. ' +=' → logprob: -1.9823760986328125
    4. '[' → logprob: -4.9823760986328125
    5. ']+=' → logprob: -8.732376098632812
    6. '+' → logprob: -10.607376098632812
    7. '=' → logprob: -11.232376098632812
    8. 'i' → logprob: -13.232376098632812
    9. '[index' → logprob: -13.232376098632812
    10. '[idx' → logprob: -13.232376098632812

Token 66: ']' (ID: 60)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.4379468262195587
    2. ' +=' → logprob: -1.0629467964172363
    3. ']+=' → logprob: -4.812946796417236
    4. ']' → logprob: -7.187946796417236
    5. '+' → logprob: -8.437947273254395
    6. '=' → logprob: -9.812947273254395
    7. ')' → logprob: -10.562947273254395
    8. '[' → logprob: -12.062947273254395
    9. ' ' → logprob: -12.062947273254395
    10. ' ' → logprob: -12.437947273254395

Token 67: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0009200352360494435
    2. ' +=' → logprob: -7.625919818878174
    3. '=' → logprob: -7.750919818878174
    4. ']+=' → logprob: -13.500920295715332
    5. '+' → logprob: -15.500920295715332
    6. ' =' → logprob: -17.625919342041016
    7. '+=(' → logprob: -18.000919342041016
    8. '-=' → logprob: -18.500919342041016
    9. '+='' → logprob: -19.125919342041016
    10. '+="' → logprob: -19.750919342041016

Token 68: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.8921695047756657e-05
    2. ' ' → logprob: -10.625028610229492
    3. '100' → logprob: -13.125028610229492
    4. '10' → logprob: -13.500028610229492
    5. 'b' → logprob: -14.625028610229492
    6. '   ' → logprob: -15.500028610229492
    7. 'A' → logprob: -15.750028610229492
    8. '2' → logprob: -16.375028610229492
    9. 'votes' → logprob: -16.375028610229492
    10. 'i' → logprob: -17.000028610229492

Token 69: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.9153885558771435e-06
    2. ' ' → logprob: -12.500005722045898
    3. '100' → logprob: -13.750005722045898
    4. 'b' → logprob: -14.750005722045898
    5. '10' → logprob: -15.250005722045898
    6. 'A' → logprob: -16.1250057220459
    7. 'i' → logprob: -16.3750057220459
    8. '１' → logprob: -16.6250057220459
    9. '2' → logprob: -17.0000057220459
    10. 'a' → logprob: -17.1250057220459

Token 70: '
' (ID: 198)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.12837330996990204
    2. '<|end|>' → logprob: -3.003373384475708
    3. '
' → logprob: -3.128373384475708
    4. 'print' → logprob: -5.253373146057129
    5. '```' → logprob: -5.628373146057129
    6. ' ' → logprob: -5.753373146057129
    7. ' 
' → logprob: -5.753373146057129
    8. ')' → logprob: -6.003373146057129
    9. ' else' → logprob: -6.128373146057129
    10. 'else' → logprob: -6.503373146057129

Token 71: '           ' (ID: 352)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.7540004849433899
    2. '\n' → logprob: -1.0040004253387451
    3. 'else' → logprob: -3.004000425338745
    4. ' else' → logprob: -3.254000425338745
    5. '<|end|>' → logprob: -3.504000425338745
    6. ')' → logprob: -4.629000663757324
    7. ' ' → logprob: -4.754000663757324
    8. '0' → logprob: -5.254000663757324
    9. '```' → logprob: -5.754000663757324
    10. '
' → logprob: -5.879000663757324

Token 72: ' break' (ID: 2338)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.14554253220558167
    2. 'break' (adapté à ' break') → logprob: -2.270542621612549
    3. '       ' → logprob: -4.145542621612549
    4. ' break' → logprob: -4.895542621612549
    5. '   ' → logprob: -5.145542621612549
    6. '```' → logprob: -6.270542621612549
    7. '	break' → logprob: -7.395542621612549
    8. '\t' → logprob: -8.64554214477539
    9. '		' → logprob: -9.02054214477539
    10. '               ' → logprob: -10.02054214477539

Token 73: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.46128761768341064
    2. '<|end|>' → logprob: -1.3362876176834106
    3. '\n' → logprob: -2.961287498474121
    4. '#' → logprob: -3.461287498474121
    5. '
' → logprob: -4.711287498474121
    6. ')' → logprob: -5.086287498474121
    7. '```' → logprob: -5.336287498474121
    8. '\' → logprob: -6.961287498474121
    9. 'for' → logprob: -7.461287498474121
    10. ' print' → logprob: -7.961287498474121

Token 74: 'max' (ID: 3228)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.07250882685184479
    2. '#' → logprob: -3.5725088119506836
    3. '<|end|>' → logprob: -3.9475088119506836
    4. ')' → logprob: -4.322508811950684
    5. 'for' → logprob: -5.447508811950684
    6. '```' → logprob: -6.197508811950684
    7. '[' → logprob: -7.447508811950684
    8. '
' → logprob: -7.697508811950684
    9. '#print' → logprob: -7.947508811950684
    10. '\n' → logprob: -7.947508811950684

Token 75: '_votes' (ID: 167389)
  Prédit: '_votes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_votes' → logprob: -0.5969445109367371
    2. '_vote' → logprob: -0.9719445109367371
    3. '_index' → logprob: -3.471944570541382
    4. '_v' → logprob: -3.971944570541382
    5. '_' → logprob: -4.221944332122803
    6. '(v' → logprob: -5.971944332122803
    7. '_count' → logprob: -6.221944332122803
    8. '_idx' → logprob: -6.971944332122803
    9. '_value' → logprob: -7.846944332122803
    10. '_val' → logprob: -8.346944808959961

Token 76: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06195266544818878
    2. '_' → logprob: -3.186952590942383
    3. '=' → logprob: -4.061952590942383
    4. ' ' → logprob: -7.186952590942383
    5. '_index' → logprob: -7.811952590942383
    6. '_idx' → logprob: -8.186952590942383
    7. ' _' → logprob: -10.061952590942383
    8. ',' → logprob: -11.186952590942383
    9. ')' → logprob: -11.436952590942383
    10. '_count' → logprob: -11.811952590942383

Token 77: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.575941264629364
    2. 'max' → logprob: -0.825941264629364
    3. 'votes' → logprob: -14.57594108581543
    4. ' votes' → logprob: -14.82594108581543
    5. '	max' → logprob: -14.82594108581543
    6. '(max' → logprob: -15.70094108581543
    7. '   ' → logprob: -15.95094108581543
    8. ' ' → logprob: -15.95094108581543
    9. '=max' → logprob: -16.57594108581543
    10. 'min' → logprob: -16.82594108581543

Token 78: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.0067167943343520164
    2. '(' → logprob: -5.006716728210449
    3. ' (' → logprob: -14.63171672821045
    4. '(max' → logprob: -15.50671672821045
    5. 'votes' → logprob: -16.006717681884766
    6. '(`' → logprob: -16.256717681884766
    7. '(
' → logprob: -16.256717681884766
    8. '_votes' → logprob: -16.256717681884766
    9. '(_' → logprob: -16.381717681884766
    10. '```' → logprob: -16.631717681884766

Token 79: 'otes' (ID: 8534)
  Prédit: 'otes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'otes' → logprob: -0.00015252856246661395
    2. 'votes' → logprob: -9.125152587890625
    3. 'tes' → logprob: -11.000152587890625
    4. '`' → logprob: -12.125152587890625
    5. '```' → logprob: -12.750152587890625
    6. '``' → logprob: -13.000152587890625
    7. '[' → logprob: -13.500152587890625
    8. '_votes' → logprob: -13.500152587890625
    9. 'ote' → logprob: -13.625152587890625
    10. 'ot' → logprob: -14.000152587890625

Token 80: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00020008347928524017
    2. ' )' → logprob: -8.750200271606445
    3. ')
' → logprob: -10.125200271606445
    4. ')

' → logprob: -14.500200271606445
    5. '))' → logprob: -15.500200271606445
    6. ')+' → logprob: -15.500200271606445
    7. ' )
' → logprob: -16.375200271606445
    8. ' ' → logprob: -16.625200271606445
    9. ',' → logprob: -16.875200271606445
    10. '),' → logprob: -16.875200271606445

Token 81: 'for' (ID: 1938)
  Prédit: 'votes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'votes' → logprob: -0.11758657544851303
    2. 'print' → logprob: -3.117586612701416
    3. '```' → logprob: -4.117586612701416
    4. ' votes' → logprob: -4.492586612701416
    5. ' 
' → logprob: -4.492586612701416
    6. '\n' → logprob: -5.242586612701416
    7. '
' → logprob: -5.367586612701416
    8. '  
' → logprob: -5.742586612701416
    9. 'max' → logprob: -6.367586612701416
    10. '`' → logprob: -6.492586612701416

Token 82: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.01020129956305027
    2. 'i' → logprob: -4.760201454162598
    3. ' v' → logprob: -6.885201454162598
    4. 'v' → logprob: -8.135201454162598
    5. ' vote' → logprob: -8.760201454162598
    6. 'vote' → logprob: -10.010201454162598
    7. ' ' → logprob: -11.385201454162598
    8. '	i' → logprob: -11.760201454162598
    9. ' _' → logprob: -11.885201454162598
    10. 'votes' → logprob: -12.010201454162598

Token 83: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.004847207572311163
    2. 'in' → logprob: -5.879847049713135
    3. ',' → logprob: -6.629847049713135
    4. ' ' → logprob: -7.254847049713135
    5. '  ' → logprob: -12.254847526550293
    6. ' ,' → logprob: -12.629847526550293
    7. ' range' → logprob: -13.379847526550293
    8. 'range' → logprob: -13.879847526550293
    9. ' i' → logprob: -14.254847526550293
    10. '	in' → logprob: -14.504847526550293

Token 84: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.5231478810310364
    2. 'range' → logprob: -0.8981478810310364
    3. '	range' → logprob: -11.523147583007812
    4. ' ' → logprob: -12.148147583007812
    5. '(range' → logprob: -12.398147583007812
    6. '   ' → logprob: -13.773147583007812
    7. '  ' → logprob: -14.273147583007812
    8. 'rang' → logprob: -14.273147583007812
    9. ' rang' → logprob: -14.523147583007812
    10. ' ran' → logprob: -14.773147583007812

Token 85: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.004644076805561781
    2. '(' → logprob: -5.50464391708374
    3. '(len' → logprob: -7.50464391708374
    4. '(n' → logprob: -12.004644393920898
    5. ' (' → logprob: -12.254644393920898
    6. '(
' → logprob: -13.129644393920898
    7. ' N' → logprob: -14.129644393920898
    8. 'N' → logprob: -14.629644393920898
    9. '(

' → logprob: -14.879644393920898
    10. ')' → logprob: -16.0046443939209

Token 86: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.012752373702824116
    2. '):
' → logprob: -4.387752532958984
    3. ':' → logprob: -9.262752532958984
    4. ' ):' → logprob: -9.637752532958984
    5. '):
' → logprob: -9.887752532958984
    6. '+' → logprob: -10.637752532958984
    7. ')' → logprob: -13.012752532958984
    8. '-' → logprob: -13.887752532958984
    9. ' ):
' → logprob: -13.887752532958984
    10. '):

' → logprob: -14.012752532958984

Token 87: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001671015052124858
    2. ' if' → logprob: -6.626670837402344
    3. 'if' → logprob: -8.126670837402344
    4. '<|end|>' → logprob: -10.626670837402344
    5. '   ' → logprob: -11.001670837402344
    6. '	if' → logprob: -12.751670837402344
    7. ' ' → logprob: -14.001670837402344
    8. 'print' → logprob: -14.251670837402344
    9. '```' → logprob: -14.376670837402344
    10. ' print' → logprob: -14.376670837402344

Token 88: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.09616919606924057
    2. 'if' (adapté à ' if') → logprob: -2.4711692333221436
    3. '   ' → logprob: -4.9711689949035645
    4. ' ' → logprob: -9.096169471740723
    5. ' print' → logprob: -9.721169471740723
    6. 'print' → logprob: -10.721169471740723
    7. '	if' → logprob: -10.846169471740723
    8. ' 
' → logprob: -11.221169471740723
    9. '```' → logprob: -11.221169471740723
    10. '    ' → logprob: -12.096169471740723

Token 89: ' votes' (ID: 24183)
  Prédit: ' votes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' votes' → logprob: -0.0019293478690087795
    2. 'votes' → logprob: -6.25192928314209
    3. ' votos' → logprob: -14.50192928314209
    4. ' vote' → logprob: -15.87692928314209
    5. '_votes' → logprob: -16.876930236816406
    6. 'v' → logprob: -17.751930236816406
    7. 'vote' → logprob: -17.876930236816406
    8. 'Votes' → logprob: -18.001930236816406
    9. ' ' → logprob: -18.626930236816406
    10. ' vot' → logprob: -19.001930236816406

Token 90: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.031255971640348434
    2. '==' → logprob: -3.6562559604644775
    3. ' ==' → logprob: -5.656256198883057
    4. '[' → logprob: -6.656256198883057
    5. '[:]' → logprob: -10.031255722045898
    6. ']==' → logprob: -10.406255722045898
    7. '[]' → logprob: -10.531255722045898
    8. '=' → logprob: -10.656255722045898
    9. ')==' → logprob: -11.531255722045898
    10. ' ' → logprob: -12.156255722045898

Token 91: ']' (ID: 60)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.31403788924217224
    2. '==' → logprob: -1.3140379190444946
    3. ')' → logprob: -7.689037799835205
    4. ')==' → logprob: -8.439038276672363
    5. '=' → logprob: -9.814038276672363
    6. ']==' → logprob: -10.689038276672363
    7. ' ' → logprob: -11.189038276672363
    8. ' =' → logprob: -11.814038276672363
    9. ' )' → logprob: -14.189038276672363
    10. ']' → logprob: -14.189038276672363

Token 92: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.4741269052028656
    2. '==' → logprob: -0.974126935005188
    3. '=' → logprob: -10.099126815795898
    4. ' =' → logprob: -11.974126815795898
    5. ')==' → logprob: -14.349126815795898
    6. ']==' → logprob: -14.474126815795898
    7. ' ' → logprob: -14.599126815795898
    8. '==
' → logprob: -14.849126815795898
    9. ' ' → logprob: -15.724126815795898
    10. ')' → logprob: -16.3491268157959

Token 93: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.31326186656951904
    2. ' max' → logprob: -1.313261866569519
    3. ' ' → logprob: -16.188261032104492
    4. '	max' → logprob: -17.813261032104492
    5. '   ' → logprob: -17.938261032104492
    6. '=max' → logprob: -18.063261032104492
    7. '(max' → logprob: -18.563261032104492
    8. '[max' → logprob: -19.188261032104492
    9. '_max' → logprob: -19.438261032104492
    10. 'm' → logprob: -20.188261032104492

Token 94: '_votes' (ID: 167389)
  Prédit: '_votes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_votes' → logprob: -9.088346359931165e-07
    2. '_' → logprob: -14.875000953674316
    3. '(_' → logprob: -16.75
    4. '(max' → logprob: -16.75
    5. '_max' → logprob: -16.875
    6. 'votes' → logprob: -17.25
    7. '_vote' → logprob: -17.5
    8. '```' → logprob: -17.875
    9. 'Votes' → logprob: -18.0
    10. '_v' → logprob: -18.125

Token 95: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.016054781153798103
    2. ':
' → logprob: -4.141054630279541
    3. '   ' → logprob: -11.5160551071167
    4. 'print' → logprob: -12.6410551071167
    5. ' print' → logprob: -13.0160551071167
    6. ' and' → logprob: -13.2660551071167
    7. ':
' → logprob: -13.2660551071167
    8. ' :' → logprob: -15.0160551071167
    9. ':

' → logprob: -15.2660551071167
    10. 'and' → logprob: -15.7660551071167

Token 96: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6520877480506897
    2. '   ' → logprob: -0.7770877480506897
    3. ' print' → logprob: -4.277087688446045
    4. ':' → logprob: -5.902087688446045
    5. '
' → logprob: -6.402087688446045
    6. 'print' → logprob: -7.527087688446045
    7. ':
' → logprob: -8.527088165283203
    8. '	print' → logprob: -9.277088165283203
    9. '    
' → logprob: -10.027088165283203
    10. '```' → logprob: -10.652088165283203

Token 97: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0401555560529232
    2. ' print' → logprob: -3.2901556491851807
    3. '   ' → logprob: -6.290155410766602
    4. '       ' → logprob: -8.665155410766602
    5. '
' → logprob: -9.790155410766602
    6. '```' → logprob: -10.665155410766602
    7. '
' → logprob: -13.290155410766602
    8. '	print' → logprob: -13.415155410766602
    9. '           ' → logprob: -13.665155410766602
    10. '``' → logprob: -15.040155410766602

Token 98: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.2231454849243164
    2. '(A' → logprob: -1.7231454849243164
    3. '(' → logprob: -3.8481454849243164
    4. '(f' → logprob: -10.223145484924316
    5. '('' → logprob: -10.473145484924316
    6. 'i' → logprob: -10.473145484924316
    7. '(a' → logprob: -10.598145484924316
    8. '("' → logprob: -10.723145484924316
    9. 'A' → logprob: -11.223145484924316
    10. '((' → logprob: -11.598145484924316

Token 99: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001502636878285557
    2. '+' → logprob: -9.000150680541992
    3. ' )' → logprob: -10.875150680541992
    4. ')
' → logprob: -13.375150680541992
    5. ' +' → logprob: -13.375150680541992
    6. '))' → logprob: -13.875150680541992
    7. ')`' → logprob: -14.000150680541992
    8. ')+' → logprob: -14.375150680541992
    9. '+)' → logprob: -14.750150680541992
    10. ',' → logprob: -14.875150680541992

Token 100: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0028053484857082367
    2. ' ' → logprob: -5.877805233001709
    3. '```' → logprob: -16.127805709838867
    4. '<|end|>' → logprob: -16.127805709838867
    5. ')' → logprob: -16.252805709838867
    6. '0' → logprob: -16.627805709838867
    7. '`' → logprob: -17.065305709838867
    8. '   ' → logprob: -17.252805709838867
    9. '2' → logprob: -17.627805709838867
    10. '１' → logprob: -18.127805709838867

Token 101: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.250000953674316
    3. '```' → logprob: -18.375
    4. '0' → logprob: -18.75
    5. '１' → logprob: -19.0
    6. '`' → logprob: -19.0
    7. '<|end|>' → logprob: -19.125
    8. ')' → logprob: -19.875
    9. '   ' → logprob: -20.5
    10. '``' → logprob: -20.5625

Token 102: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.339278580620885e-06
    2. ')
' → logprob: -13.625001907348633
    3. ' )' → logprob: -14.000001907348633
    4. '))' → logprob: -17.000001907348633
    5. ')#' → logprob: -17.000001907348633
    6. ')`' → logprob: -17.125001907348633
    7. '```' → logprob: -17.500001907348633
    8. ')}' → logprob: -17.500001907348633
    9. '`)' → logprob: -18.375001907348633
    10. '')' → logprob: -18.375001907348633

Token 103: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 104: ' break' (ID: 2338)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3618314862251282
    2. '<|end|>' → logprob: -2.4868314266204834
    3. 'break' (adapté à ' break') → logprob: -2.7368314266204834
    4. '   ' → logprob: -2.8618314266204834
    5. ' break' → logprob: -2.8618314266204834
    6. '```' → logprob: -4.6118316650390625
    7. ' ' → logprob: -4.8618316650390625
    8. '\n' → logprob: -4.9868316650390625
    9. '	break' → logprob: -5.2368316650390625
    10. '           ' → logprob: -5.7368316650390625


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 102
Tokens correctement prédits (1ère position, stricte): 40
Tokens correctement prédits (1ère position, avec adaptation): 44
Tokens correctement prédits (top 10): 85
Précision stricte (1ère position): 39.22%
Précision adaptée (1ère position): 43.14%
Précision (top 10): 83.33%
================================================================================
